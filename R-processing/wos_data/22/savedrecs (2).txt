FN Clarivate Analytics Web of Science
VR 1.0
PT J
AU Razzaq, A
   Le Gear, A
   Exton, C
   Buckley, J
AF Razzaq, Abdul
   Le Gear, Andrew
   Exton, Chris
   Buckley, Jim
TI An empirical assessment of baseline feature location techniques
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Systematic literature review; Feature location; Information retrieval;
   Concept location
ID CHANGE IMPACT ANALYSIS; SOFTWARE PRODUCT LINES; INFORMATION-RETRIEVAL;
   SOURCE-CODE; PROBABILISTIC RANKING; ANALYSIS ALGORITHMS; TRACEABILITY
   LINKS; EXECUTION; MODEL
AB Feature Location (FL) aims to locate observable functionalities in source code. Considering its key role in software maintenance, a vast array of automated and semi-automated Feature Location Techniques (FLTs) have been proposed. To compare FLTs, an open, standard set of non-subjective, reproducible "compare-to" FLT techniques (baseline techniques) should be used for evaluation. In order to relate the performance of FLTs compared against different baseline techniques, these compare-to techniques should be evaluated against each other. But evaluation across FLTs is confounded by empirical designs that incorporate different FL goals and evaluation criteria. This paper moves towards standardizing FLT comparability by assessing eight baseline techniques in an empirical design that addresses these confounding factors. These baseline techniques are assessed in twelve case studies to rank their performance. Results of the case studies suggest that different baseline techniques perform differently and that VSM-Lucene and LSI-Matlab performed better than other implementations. By presenting the relative performances of baseline techniques this paper facilitates empirical cross-comparison of existing and future FLTs. Finally, the results suggest that the performance of FLTs partially depends on system/benchmark characteristics, in addition to the FLTs themselves.
C1 [Razzaq, Abdul; Exton, Chris; Buckley, Jim] Univ Limerick, CSIS Dept, Lero, Limerick, Ireland.
   [Le Gear, Andrew] Horizon Globex Ireland DAC, Limerick, Ireland.
C3 University of Limerick
RP Razzaq, A (corresponding author), Univ Limerick, CSIS Dept, Lero, Limerick, Ireland.
EM abdul.razzaq@lero.ie
OI RAZZAQ, Dr ABDUL/0000-0003-4351-1487
CR Ali N, 2013, IEEE T SOFTWARE ENG, V39, P725, DOI 10.1109/TSE.2012.71
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Arong, 2014, PROCEEDINGS OF 2014 IEEE INTERNATIONAL CONFERENCE ON PROGRESS IN INFORMATICS AND COMPUTING (PIC), P51, DOI 10.1109/PIC.2014.6972294
   Assunçao WKG, 2017, EMPIR SOFTW ENG, V22, P2972, DOI 10.1007/s10664-017-9499-z
   Bassett B, 2013, CONF PROC INT SYMP C, P133, DOI 10.1109/ICPC.2013.6613841
   Beard M., 2011, 2011 18th Working Conference on Reverse Engineering, P124, DOI 10.1109/WCRE.2011.23
   Biggers LR, 2014, EMPIR SOFTW ENG, V19, P465, DOI 10.1007/s10664-012-9224-x
   Binkley D, 2015, J SYST SOFTWARE, V101, P30, DOI 10.1016/j.jss.2014.11.013
   Borg M, 2014, EMPIR SOFTW ENG, V19, P1565, DOI 10.1007/s10664-013-9255-y
   Cataldo M, 2009, IEEE T SOFTWARE ENG, V35, P864, DOI 10.1109/TSE.2009.42
   Chen KR, 2000, PROG COMPREHEN, P241, DOI 10.1109/WPC.2000.852498
   Chochlov M, 2017, INFORM SOFTWARE TECH, V88, P110, DOI 10.1016/j.infsof.2017.04.003
   Cleary B, 2009, EMPIR SOFTW ENG, V14, P93, DOI 10.1007/s10664-008-9095-3
   Collberg C, 2016, COMMUN ACM, V59, P62, DOI 10.1145/2812803
   Corley CS, 2015, PROC IEEE INT CONF S, P556, DOI 10.1109/ICSM.2015.7332513
   Cornelissen B, 2009, IEEE T SOFTWARE ENG, V35, P684, DOI 10.1109/TSE.2009.28
   Couto MV, 2011, EUR CON SFTWR MTNCE, P191, DOI 10.1109/CSMR.2011.25
   De Lucia A, 2011, CONF PROC INT SYMP C, P21, DOI 10.1109/ICPC.2011.34
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   Diaz D, 2013, CONF PROC INT SYMP C, P123, DOI 10.1109/ICPC.2013.6613840
   Dit B, 2015, EMPIR SOFTW ENG, V20, P1198, DOI 10.1007/s10664-014-9339-3
   Dit B, 2013, IEEE WORK CONF MIN S, P131, DOI 10.1109/MSR.2013.6624019
   Dit B, 2013, J SOFTW-EVOL PROC, V25, P53, DOI 10.1002/smr.567
   Dit B, 2013, EMPIR SOFTW ENG, V18, P277, DOI 10.1007/s10664-011-9194-4
   Dit B, 2011, CONF PROC INT SYMP C, P11, DOI 10.1109/ICPC.2011.47
   Eaddy M, 2008, IEEE T SOFTWARE ENG, V34, P497, DOI 10.1109/TSE.2008.36
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Eisenbarth T, 2003, IEEE T SOFTWARE ENG, V29, P210, DOI 10.1109/TSE.2003.1183929
   Gethers M., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P133, DOI 10.1109/ICSM.2011.6080780
   Heck P, 2014, J SOFTW-EVOL PROC, V26, P1280, DOI 10.1002/smr.1678
   Hill E, 2015, INT C PROGRAM COMPRE, P140, DOI 10.1109/ICPC.2015.23
   Juristo N, 2012, LECT NOTES COMPUT SC, V7007, P60
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Kästner C, 2014, IEEE T SOFTWARE ENG, V40, P67, DOI 10.1109/TSE.2013.45
   Kagdi H, 2013, EMPIR SOFTW ENG, V18, P933, DOI 10.1007/s10664-012-9233-9
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Kim D, 2013, IEEE T SOFTWARE ENG, V39, P1597, DOI 10.1109/TSE.2013.24
   Li BX, 2013, SOFTW TEST VERIF REL, V23, P613, DOI 10.1002/stvr.1475
   Liu Dapeng, 2007, ASE, P234
   Lukins SK, 2010, INFORM SOFTWARE TECH, V52, P972, DOI 10.1016/j.infsof.2010.04.002
   Lukins SK, 2008, WORK CONF REVERSE EN, P155, DOI 10.1109/WCRE.2008.33
   Mahmoud A, 2015, ACM T SOFTW ENG METH, V25, DOI 10.1145/2824251
   Mahmoud A, 2015, REQUIR ENG, V20, P281, DOI 10.1007/s00766-013-0199-y
   Marcus A, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P214, DOI 10.1109/WCRE.2004.10
   Marcus A, 2003, PROC INT CONF SOFTW, P125, DOI 10.1109/ICSE.2003.1201194
   Martinez J., 2018, SYST SOFTW PROD LIN
   Mills C, 2017, ACM T SOFTW ENG METH, V26, DOI 10.1145/3078841
   Moreno L, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P567, DOI 10.1145/2786805.2786859
   Panichella A, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P314, DOI 10.1109/SANER.2016.97
   Panichella A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P522, DOI 10.1109/ICSE.2013.6606598
   PORTER MF, 1980, PROGRAM-AUTOM LIBR, V14, P130, DOI 10.1108/eb046814
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI [10.1109/TSE.2007.1016, 10.1109/TSE.2007.1016.]
   Poshyvanyk D, 2006, INT C PROGRAM COMPRE, P137, DOI 10.1109/ICPC.2006.17
   Poshyvanyk D, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2377656.2377660
   Rao S., 2011, P 8 WORK C MIN SOFTW, P43
   Razzaq A, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3280988
   Revelle M, 2011, EMPIR SOFTW ENG, V16, P773, DOI 10.1007/s10664-011-9159-7
   Robillard MP, 2008, ACM T SOFTW ENG METH, V17, DOI 10.1145/13487689.13487691
   Romano J, 2006, ANN M FLOR ASS I RES, P1
   Rovegård P, 2008, IEEE T SOFTWARE ENG, V34, P516, DOI 10.1109/TSE.2008.32
   Rubin J., 2013, Domain Engineering, P29, DOI DOI 10.1007/978-3-642-36654-3
   Saha RK, 2013, IEEE INT CONF AUTOM, P345, DOI 10.1109/ASE.2013.6693093
   SALTON G, 1975, COMMUN ACM, V18, P613, DOI 10.1145/361219.361220
   Scanniello G, 2015, EMPIR SOFTW ENG, V20, P1666, DOI 10.1007/s10664-014-9327-7
   Shaowei Wang, 2011, 2011 18th Working Conference on Reverse Engineering, P92, DOI 10.1109/WCRE.2011.72
   Shin Y., 2012, FRAMEWORK EVALUATING
   Shull FJ, 2008, EMPIR SOFTW ENG, V13, P211, DOI 10.1007/s10664-008-9060-1
   Starke J, 2009, PROC IEEE INT CONF S, P157, DOI 10.1109/ICSM.2009.5306335
   Thomas SW, 2013, IEEE T SOFTWARE ENG, V39, P1427, DOI 10.1109/TSE.2013.27
   To'th G., 2010, Proceedings of International Conference on the Principles and Practice of Programming in Java, P109, DOI [10.1145/1852761.1852777, DOI 10.1145/1852761.1852777]
   Wang SW, 2014, PROC IEEE INT CONF S, P171, DOI 10.1109/ICSME.2014.39
   Wilde N, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P68, DOI 10.1109/CSMR.2001.914970
   Wohlin C., 2012, Experimentation in Software Engineering
   Ye X, 2016, IEEE T SOFTWARE ENG, V42, P379, DOI 10.1109/TSE.2015.2479232
   Zamani S, 2014, INFORM SOFTWARE TECH, V56, P991, DOI 10.1016/j.infsof.2014.03.007
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
NR 76
TC 10
Z9 10
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN
PY 2020
VL 25
IS 1
BP 266
EP 321
DI 10.1007/s10664-019-09734-5
PG 56
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KP0WS
UT WOS:000515965100007
PM 34720669
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Gadient, P
   Ghafari, M
   Frischknecht, P
   Nierstrasz, O
AF Gadient, Pascal
   Ghafari, Mohammad
   Frischknecht, Patrick
   Nierstrasz, Oscar
TI Security code smells in Android ICC
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Security code smells; Vulnerability; Static analysis; Android
AB Android Inter-Component Communication (ICC) is complex, largely unconstrained, and hard for developers to understand. As a consequence, ICC is a common source of security vulnerabilities in Android apps. To promote secure programming practices, we have reviewed related research, and identified avoidable ICC vulnerabilities in Android-run devices and the security code smells that indicate their presence. We explain the vulnerabilities and their corresponding smells, and we discuss how they can be eliminated or mitigated during development. We present a lightweight static analysis tool on top of Android Lint that analyzes the code under development and provides just-in-time feedback within the IDE about the presence of such smells in the code. Moreover, with the help of this tool we study the prevalence of security code smells in more than 700 open-source apps, and manually inspect around 15% of the apps to assess the extent to which identifying such smells uncovers ICC security vulnerabilities.
C1 [Gadient, Pascal; Ghafari, Mohammad; Frischknecht, Patrick; Nierstrasz, Oscar] Univ Bern, Software Composit Grp, Bern, Switzerland.
C3 University of Bern
RP Gadient, P (corresponding author), Univ Bern, Software Composit Grp, Bern, Switzerland.
EM gadient@inf.unibe.ch; ghafari@inf.unibe.ch;
   patrick.frischknecht@students.unibe.ch; oscar@inf.unibe.ch
OI Gadient, Pascal/0000-0001-6433-7356; Nierstrasz,
   Oscar/0000-0002-9975-9791; Ghafari, Mohammad/0000-0002-1986-9668
FU Swiss National Science Foundation [200020-162352]
FX We gratefully acknowledge the financial support of the Swiss National
   Science Foundation for the project "Agile Software Analysis" (SNSF
   project No. 200020-162352, Jan 1, 2016 - Dec. 30, 2018). We also thank
   Astrid Ytrehorn for her contribution to the empirical study.
CR Acar Y, 2016, 2016 IEEE CYBERSECURITY DEVELOPMENT (IEEE SECDEV 2016), P3, DOI [10.1109/SecDev.2016.20, 10.1109/SecDev.2016.013]
   Ahmad W, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P177, DOI [10.1109/MSR.2016.027, 10.1145/2901739.2901762]
   [Anonymous], USENIX SEC S
   [Anonymous], ACM C COMP COMM SEC
   [Anonymous], 2011, USENIX SEC S
   [Anonymous], P 26 IEEE INT C PROG
   [Anonymous], IEEE T SOFTW ENG
   Balebako R, 2014, IEEE SECUR PRIV, V12, P55, DOI 10.1109/MSP.2014.70
   Bosu AS, 2017, PROCEEDINGS OF THE 2017 ACM ASIA CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (ASIA CCS'17), P71, DOI 10.1145/3052973.3053004
   Chen NC, 2017, IEEE INT CONGR BIG, P1, DOI 10.1109/BigDataCongress.2017.10
   Chin E., 2011, P 9 INT C MOB SYST A, P239, DOI DOI 10.1145/1999995.2000018
   Garcia J, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P661, DOI 10.1145/3106237.3106286
   Ghafari M, 2017, IEEE INT WORK C SO, P121, DOI 10.1109/SCAM.2017.24
   Jonesa BH, 2015, INT J INFORM MANAGE, V35, P561, DOI 10.1016/j.ijinfomgt.2015.06.003
   Khadiranaikar B, 2017, 2017 8TH IEEE ANNUAL INFORMATION TECHNOLOGY, ELECTRONICS AND MOBILE COMMUNICATION CONFERENCE (IEMCON), P62, DOI 10.1109/IEMCON.2017.8117149
   Li L, 2017, INFORM SOFTWARE TECH, V88, P67, DOI 10.1016/j.infsof.2017.04.001
   Li L, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P280, DOI 10.1109/ICSE.2015.48
   Linares-Vásquez M, 2017, IEEE WORK CONF MIN S, P2, DOI 10.1109/MSR.2017.60
   Mitra Joydeep, 2017, P 13 INT C PRED MOD, P43, DOI DOI 10.1145/3127005.3127010
   Octeau Damien, 2013, P 22 USENIX C SEC SE, P543
   Reaves B, 2016, ACM COMPUT SURV, V49, DOI 10.1145/2996358
   Ren CG, 2015, PROCEEDINGS OF THE 24TH USENIX SECURITY SYMPOSIUM, P945
   Weir C, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P936, DOI 10.1145/2950290.2983981
   Witschey J, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P260, DOI 10.1145/2786805.2786816
   Wu L., 2013, PROC 20 SIGSAC C COM, P623, DOI DOI 10.1145/2508859.2516728
   Xie J, 2011, S VIS LANG HUM CEN C, P161, DOI 10.1109/VLHCC.2011.6070393
   Xu M, 2016, ACM COMPUT SURV, V49, DOI 10.1145/2963145
NR 27
TC 21
Z9 22
U1 0
U2 10
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2019
VL 24
IS 5
SI SI
BP 3046
EP 3076
DI 10.1007/s10664-018-9673-y
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IS1CL
UT WOS:000481889700008
OA Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Bjarnason, E
   Sharp, H
   Regnell, B
AF Bjarnason, Elizabeth
   Sharp, Helen
   Regnell, Bjorn
TI Improving requirements-test alignment by prescribing practices that
   mitigate communication gaps
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Empirical software engineering; Software process improvement;
   Communication; Requirements engineering; Testing; Software engineering
   theory
ID SOFTWARE-DEVELOPMENT; CHALLENGES; PROJECT
AB The communication of requirements within software development is vital for project success. Requirements engineering and testing are two processes that when aligned can enable the discovery of issues and misunderstandings earlier, rather than later, and avoid costly and time-consuming rework and delays. There are a number of practices that support requirements-test alignment. However, each organisation and project is different and there is no one-fits-all set of practices. The software process improvement method called Gap Finder is designed to increase requirements-test alignment. The method contains two parts: an assessment part and a prescriptive part. It detects potential communication gaps between people and between artefacts (the assessment part), and identifies practices for mitigating these gaps (the prescriptive part). This paper presents the design and formative evaluation of the prescriptive part; an evaluation of the assessment part was published previously. The Gap Finder method was constructed using a design science research approach and is built on the Theory of Distances for Software Engineering, which in turn is grounded in empirical evidence from five case companies. The formative evaluation was performed through a case study in which Gap Finder was applied to an on-going development project. A qualitative and mixed-method approach was taken in the evaluation, including ethnographically-informed observations. The results show that Gap Finder can detect relevant communication gaps and seven of the nine prescribed practices were deemed practically relevant for mitigating these gaps. The project team found the method to be useful and supported joint reflection and improvement of their requirements communication. Our findings demonstrate that an empirically-based theory can be used to improve software development practices and provide a foundation for further research on factors that affect requirements communication.
C1 [Bjarnason, Elizabeth; Regnell, Bjorn] Lund Univ, Dept Comp Sci, Lund, Sweden.
   [Sharp, Helen] Open Univ, Comp & Commun Dept, Milton Keynes, Bucks, England.
C3 Lund University; Open University - UK
RP Bjarnason, E (corresponding author), Lund Univ, Dept Comp Sci, Lund, Sweden.
EM Elizabeth.bjamason@cs.lth.se; helen.sharp@open.ac.uk;
   Bjorn.regnell@cs.lth.se
OI Bjarnason, Elizabeth/0000-0001-9070-0008; Regnell,
   Bjorn/0000-0002-9380-6120; Sharp, Helen/0000-0003-4376-1734
FU EASE; Ericsson Research
FX We would like to thank the development team members for enabling this
   study by sharing their time, thoughts and office space. This work was
   partly funded by EASE (http://ease.cs.lth.se) and by Ericsson Research.
CR Afzal W, 2016, J SYST SOFTWARE, V111, P1, DOI 10.1016/j.jss.2015.08.048
   [Anonymous], TR1519 U MAR
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], CHALLENGES ALIGNING
   [Anonymous], P 30 ANN IEEE NASA S
   [Anonymous], P ESI ISCN 95 MEAS T
   [Anonymous], TAXONOMY REQUIREMENT
   [Anonymous], SEI SERIES SOFTWARE
   [Anonymous], 2004, 15504 ISOIEC
   [Anonymous], 1989, SEI SERIES SOFTWARE
   [Anonymous], RES MAT GAP FINDER E
   [Anonymous], REQUIR ENG
   Barmi Z. A., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P476, DOI 10.1109/ICSTW.2011.58
   BASILI VR, 1988, IEEE T SOFTWARE ENG, V14, P758, DOI 10.1109/32.6156
   BENNER P, 1982, AM J NURS, V82, P402, DOI 10.2307/3462928
   Bjarnason E, 2016, INFORM SOFTWARE TECH, V70, P204, DOI 10.1016/j.infsof.2015.05.004
   Bjarnason E, 2014, EMPIR SOFTW ENG, V19, P1809, DOI 10.1007/s10664-013-9263-y
   Bjarnason E, 2014, IEEE SOFTWARE, V31, P37, DOI 10.1109/MS.2014.26
   Bjarnason E, 2011, INT REQUIR ENG CONF, P37, DOI 10.1109/RE.2011.6051639
   Boehm BW., 1981, Software Engineering Economics
   Burstein F., 1999, P 10 AUSTR C INF SYS
   Collier B, 1996, IEEE SOFTWARE, V13, P65, DOI 10.1109/52.526833
   Curtis B., 2002, PEOPLE CAPABILITY MA, DOI DOI 10.1002/0471028959.SOF235
   Damian D, 2005, EMPIR SOFTW ENG, V10, P255, DOI 10.1007/s10664-005-1288-4
   Damian D, 2006, IEEE T SOFTWARE ENG, V32, P433, DOI 10.1109/TSE.2006.61
   Derby Esther., 2006, AGILE RETROSPECTIVES
   Drury M, 2011, ACADEMIC GENERAL PRACTICE IN THE UK MEDICAL SCHOOLS, 1948-2000: A SHORT HISTORY, P31
   Dybå T, 2005, IEEE T SOFTWARE ENG, V31, P410, DOI 10.1109/TSE.2005.53
   Dyba T., 2000, Empirical Software Engineering, V5, P357, DOI 10.1023/A:1009800404137
   George M.L., 2002, Lean Six Sigma: Combining Six Sigma quality with Lean speed
   Gotel O. C. Z., 1994, Proceedings of the First International Conference on Requirements Engineering (Cat. No.94TH0613-0), P94, DOI 10.1109/ICRE.1994.292398
   Harter DE, 2012, IEEE T SOFTWARE ENG, V38, P810, DOI 10.1109/TSE.2011.63
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Humphrey WattsS., 1997, Managing technical people: Innovation, teamwork, and the software process
   Kandt RK, 2009, IEEE SOFTWARE, V26, P58, DOI 10.1109/MS.2009.66
   Kukkanen J, 2009, ASIA PAC SOFWR ENG, P482, DOI 10.1109/APSEC.2009.62
   Lavallée M, 2012, PROC INT CONF SOFTW, P113, DOI 10.1109/ICSE.2012.6227201
   Martin RC, 2008, IEEE SOFTWARE, V25, P54, DOI 10.1109/MS.2008.24
   Moe NB, 2009, LECT NOTES BUS INF P, V31, P114
   Post H, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P295, DOI 10.1109/RE.2009.43
   Ramesh B, 2010, INFORM SYST J, V20, P449, DOI 10.1111/j.1365-2575.2007.00259.x
   Ringstad MA, 2011, COMM COM INF SC, V172, P167
   Robinson H, 2007, INFORM SOFTWARE TECH, V49, P540, DOI 10.1016/j.infsof.2007.02.007
   Robson C., 2002, Real world research
   Svensson RB, 2009, LECT NOTES COMPUT SC, V5512, P218, DOI 10.1007/978-3-642-02050-6_19
   Uusitalo EJ, 2008, INT REQUIR ENG CONF, P265, DOI 10.1109/RE.2008.30
   Young A, 2011, RESILIENCE IN DEAF CHILDREN: ADAPTATION THROUGH EMERGING ADULTHOOD, P3, DOI 10.1007/978-1-4419-7796-0_1
NR 47
TC 9
Z9 9
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2019
VL 24
IS 4
BP 2364
EP 2409
DI 10.1007/s10664-019-09698-6
PG 46
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IL9CL
UT WOS:000477582700019
OA hybrid, Green Accepted
DA 2024-07-18
ER

PT J
AU Medeiros, F
   Lima, G
   Amaral, G
   Apel, S
   Kästner, C
   Ribeiro, M
   Gheyi, R
AF Medeiros, Flavio
   Lima, Gabriel
   Amaral, Guilherme
   Apel, Sven
   Kastner, Christian
   Ribeiro, Marcio
   Gheyi, Rohit
TI An investigation of misunderstanding code patterns in C open-source
   software projects
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Misunderstanding patterns; Repository mining; Survey
AB Maintenance consumes 40% to 80% of software development costs. So, it is essential to write source code that is easy to understand to reduce the costs with maintenance. Improving code understanding is important because developers often mistake the meaning of code, and misjudge the program behavior, which can lead to errors. There are patterns in source code, such as operator precedence, and comma operator, that have been shown to influence code understanding negatively. Despite initial results, these patterns have not been evaluated in a real-world setting, though. Thus, it is not clear whether developers agree that the patterns studied by researchers can cause substantial misunderstandings in real-world practice. To better understand the relevance of misunderstanding patterns, we applied a mixed research method approach, by performing repository mining and a survey with developers, to evaluate misunderstanding patterns in 50 C open-source projects, including Apache, OpenSSL, and Python. Overall, we found more than 109K occurrences of the 12 patterns in practice. Our study shows that according to developers only some patterns considered previously by researchers may cause misunderstandings. Our results complement previous studies by taking the perception of developers into account.
C1 [Medeiros, Flavio; Lima, Gabriel] Fed Inst Alagoas IFAL, Maceio, Alagoas, Brazil.
   [Amaral, Guilherme; Ribeiro, Marcio] Fed Univ Alagoas UFAL, Maceio, Alagoas, Brazil.
   [Apel, Sven] Univ Passau, Passau, Germany.
   [Kastner, Christian] Carnegie Mellon Univ, Pittsburgh, PA 15213 USA.
   [Gheyi, Rohit] Fed Univ Campina Grande UFCG, Campina Grande, Paraiba, Brazil.
C3 Instituto Federal de Alagoas (IFAL); Universidade Federal de Alagoas;
   University of Passau; Carnegie Mellon University; Universidade Federal
   de Campina Grande
RP Medeiros, F (corresponding author), Fed Inst Alagoas IFAL, Maceio, Alagoas, Brazil.
EM flavio.medeiros@ifal.edu.br; gabriellima.silva96@gmail.com;
   guiganey@gmail.com; apel@uni-passau.de; kaestner@cs.cmu.edu;
   marcio@ic.ufal.br; rohit@dsc.ufcg.edu.br
OI Apel, Sven/0000-0003-3687-2233
FU German Research Foundation [AP 206/6]; CNPq [308380/2016-9,
   477943/2013-6, 460883/2014-3, 465614/2014-0, 306610/2013-2,
   307190/2015-3, 409335/2016-9]; FAPEAL [PPG 14/2016]; CAPES [175956,
   117875]
FX We would like to thank Dan Gopstein for the useful feedback regarding
   our study. Apel's work has been supported by the German Research
   Foundation (AP 206/6). This work was funded by CNPq (308380/2016-9,
   477943/2013-6, 460883/2014-3, 465614/2014-0, 306610/2013-2,
   307190/2015-3, and also CNPq 409335/2016-9), FAPEAL (PPG 14/2016), and
   CAPES grants (175956 and 117875).
CR [Anonymous], 2013, P INT C GEN PROGR CO
   [Anonymous], PROC INT CONF SOFTW
   [Anonymous], P 14 INT C GEN PROGR
   [Anonymous], 2008, GUIDE ADV EMPIRICAL
   BAXTER ID, 1992, COMMUN ACM, V35, P73, DOI 10.1145/129852.129859
   Baxter ID, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P281, DOI 10.1109/WCRE.2001.957833
   Beller M., 2014, 11 WORK C MIN SOFTW, P202, DOI DOI 10.1145/2597073.2597082
   Bland M, 2014, COMMUN ACM, V57, P58, DOI [10.1145/2622628.2622630, 10.1145/2622630]
   Burke D., 1995, All circuits are busy now: the 1990 ATT Long distance network collapse
   Buse R.P., 2008, Proceedings of the 2008 International Symposium on Software Testing and Analysis, P121
   CANNON L, 2000, RECOMMENDED C STYLE
   Collberg C., 1997, TAXONOMY OBFUSCATING
   Cresswell J.W., 2011, Designing and conducting mixed method research, Vsecond
   Darnell PA, 1996, C SOFTWARE ENG APPRO
   DIJKSTRA EW, 1968, COMMUN ACM, V11, P147, DOI 10.1145/362929.362947
   Dowson M., 1997, Software Engineering Notes, V22, DOI 10.1145/251880.251992
   Elgot C. C., 1976, IEEE Transactions on Software Engineering, VSe-2, P41, DOI 10.1109/TSE.1976.233800
   Ernst MD, 2002, IEEE T SOFTWARE ENG, V28, P1146, DOI 10.1109/TSE.2002.1158288
   Feigenspan J, 2013, EMPIR SOFTW ENG, V18, P699, DOI 10.1007/s10664-012-9208-x
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Garrido A, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P323, DOI 10.1109/ASE.2003.1240330
   Glass RL, 2001, IEEE SOFTWARE, V18, P112, DOI 10.1109/MS.2001.922739
   Gopstein D, 2018, P WORK C MIN SOFTW R
   Gopstein D, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P129, DOI 10.1145/3106237.3106264
   Gousios G, 2013, IEEE WORK CONF MIN S, P233, DOI 10.1109/MSR.2013.6624034
   HERZBERG A, 1987, ACM T COMPUT SYST, V5, P371, DOI 10.1145/29868.29872
   ISO, 2006, Environmental Management-Life Cycle Assessment-Principles and Framework, P1, DOI DOI 10.1136/BMJ.332.7550.1107
   Jha MM, 2016, INT CONF GLOBAL SOFT, P84, DOI 10.1109/ICGSE.2016.24
   Kästner C, 2011, OOPSLA 11: PROCEEDINGS OF THE 2011 ACM INTERNATIONAL CONFERENCE ON OBJECT ORIENTED PROGRAMMING SYSTEMS LANGUAGES AND APPLICATIONS, P805
   Kernighan B. W., 1999, The Practice of Programming, V1st
   Liebig Jorg, 2011, AOSD 11
   Lohmann D., 2006, Operating Systems Review, V40, P191, DOI 10.1145/1218063.1217954
   Malaquias R, 2017, INT C PROGRAM COMPRE, P297, DOI 10.1109/ICPC.2017.41
   Marshall L., 2000, P 12 ANN WORKSHOP PS, P171
   Medeiros F, 2018, INVESTIGATING MISUND, DOI [10.5281/zenodo.1461534, DOI 10.5281/ZENODO.1461534]
   Medeiros F, 2018, DISCIPLINE MATTERS R, V44
   Medeiros Flavio, 2015, 29 EUR C OBJ OR PROG, P495
   Nagappan M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P404, DOI 10.1145/2786805.2786834
   Padioleau Y, 2009, LECT NOTES COMPUT SC, V5501, P109, DOI 10.1007/978-3-642-00722-4_9
   Pahal A, 2017, INT J COMPUT TRENDS, V46, P1, DOI DOI 10.14445/22312803/IJCTT-V46P101
   Rigby PC, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P541
   Schulze S, 2013, INT WORKS SOFTW CLON, P62, DOI 10.1109/IWSC.2013.6613045
   Scott M., 2000, PROGRAMMING LANGUAGE
   SPENCER H, 1992, PROCEEDINGS OF THE SUMMER 1992 USENIX CONFERENCE, P185
   Stamelos I, 2002, INFORM SYST J, V12, P43, DOI 10.1046/j.1365-2575.2002.00117.x
   WULF W, 1973, SIGPLAN NOTICES, V8, P28, DOI DOI 10.1145/953353.953355
NR 47
TC 16
Z9 18
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2019
VL 24
IS 4
BP 1693
EP 1726
DI 10.1007/s10664-018-9666-x
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IL9CL
UT WOS:000477582700001
DA 2024-07-18
ER

PT J
AU Rahman, MM
   Roy, CK
   Lo, D
AF Rahman, Mohammad M.
   Roy, Chanchal K.
   Lo, David
TI Automatic query reformulation for code search using crowdsourced
   knowledge
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Code search; Query reformulation; Keyword-API association; Crowdsourced
   knowledge; Stack Overflow
AB Traditional code search engines (e.g., Krugle) often do not perform well with natural language queries. They mostly apply keyword matching between query and source code. Hence, they need carefully designed queries containing references to relevant APIs for the code search. Unfortunately, preparing an effective search query is not only challenging but also time-consuming for the developers according to existing studies. In this article, we propose a novel query reformulation technique-RACK-that suggests a list of relevant API classes for a natural language query intended for code search. Our technique offers such suggestions by exploiting keyword-API associations from the questions and answers of Stack Overflow (i.e., crowdsourced knowledge). We first motivate our idea using an exploratory study with 19 standard Java API packages and 344K Java related posts from Stack Overflow. Experiments using 175 code search queries randomly chosen from three Java tutorial sites show that our technique recommends correct API classes within the Top-10 results for 83% of the queries, with 46% mean average precision and 54% recall, which are 66%, 79% and 87% higher respectively than that of the state-of-the-art. Reformulations using our suggested API classes improve 64% of the natural language queries and their overall accuracy improves by 19%. Comparisons with three state-of-the-art techniques demonstrate that RACK outperforms them in the query reformulation by a statistically significant margin. Investigation using three web/code search engines shows that our technique can significantly improve their results in the context of code search.
C1 [Rahman, Mohammad M.] Univ Saskatchewan, Saskatoon, SK, Canada.
   [Roy, Chanchal K.] Univ Saskatchewan, Software Engn Comp Sci, Saskatoon, SK, Canada.
   [Lo, David] Singapore Management Univ, Sch Informat Syst, Singapore, Singapore.
C3 University of Saskatchewan; University of Saskatchewan; Singapore
   Management University
RP Rahman, MM (corresponding author), Univ Saskatchewan, Saskatoon, SK, Canada.
EM masud.rahman@usask.ca; chanchal.roy@usask.ca; davidlo@smu.edu.sg
RI Rahman, Masud/N-7453-2019; Lo, David/A-2493-2012
OI Rahman, Masud/0000-0003-3821-5990; Lo, David/0000-0002-4367-7201
FU Natural Sciences and Engineering Research Council of Canada (NSERC);
   Singapore Ministry of Education (MOE) Academic Research Fund (AcRF) Tier
   1 grant
FX This research was supported in part by the Natural Sciences and
   Engineering Research Council of Canada (NSERC) and the Singapore
   Ministry of Education (MOE) Academic Research Fund (AcRF) Tier 1 grant.
CR [Anonymous], 2016, T ASSOC COMPUT LING, DOI DOI 10.1162/TACL_A_00051
   [Anonymous], 1968, Mathematical structures of language
   [Anonymous], 2007, P 22 IEEE ACM INT C
   Arong, 2014, PROCEEDINGS OF 2014 IEEE INTERNATIONAL CONFERENCE ON PROGRESS IN INFORMATICS AND COMPUTING (PIC), P51, DOI 10.1109/PIC.2014.6972294
   ASMATULU R, 2018, P ASM INT MECH ENG
   Bacchelli A., 2010, Proceedings of the 32nd International Conference on Software Engineering, P375
   Bajracharya SK, 2012, EMPIR SOFTW ENG, V17, P424, DOI 10.1007/s10664-010-9144-6
   Brandt J, 2009, CHI2009: PROCEEDINGS OF THE 27TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P1589
   Brin S, 1998, COMPUT NETWORKS ISDN, V30, P107, DOI 10.1016/S0169-7552(98)00110-X
   Campbell BA, 2017, PROC IEEE INT CONF S, P628, DOI 10.1109/ICSME.2017.56
   Capobianco G, 2013, J SOFTW-EVOL PROC, V25, P743, DOI 10.1002/smr.1564
   Carmel D., 2006, Proceedings of the Twenty-Ninth Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, P390, DOI 10.1145/1148170.1148238
   Carmel D., 2010, Estimating the query difficulty for information retrieval
   CHAN WK, 2012, P ACM SIGSOFT 20 INT, P1
   Chaparro O, 2017, P ICSME
   d'Amorim M, 2006, IEEE INT CONF AUTOM, P59
   Dagenais B, 2012, PROC INT CONF SOFTW, P47, DOI 10.1109/ICSE.2012.6227207
   FURNAS GW, 1987, COMMUN ACM, V30, P964, DOI 10.1145/32206.32212
   Gay G, 2009, PROC IEEE INT CONF S, P351, DOI 10.1109/ICSM.2009.5306315
   Gosling J., 2012, Java Language Specification, V7
   Gvero T, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P689, DOI 10.1109/ICSE.2015.224
   Haiduc S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P842, DOI 10.1109/ICSE.2013.6606630
   Haiduc S, 2011, CONF PROC INT SYMP C, P234, DOI 10.1109/ICPC.2011.48
   Hellendoorn VJ, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P763, DOI 10.1145/3106237.3106290
   Hill E, 2009, PROC INT CONF SOFTW, P232, DOI 10.1109/ICSE.2009.5070524
   Howard MJ, 2013, IEEE WORK CONF MIN S, P377, DOI 10.1109/MSR.2013.6624052
   Järvelin K, 2002, ACM T INFORM SYST, V20, P422, DOI 10.1145/582415.582418
   Jinqiu Yang, 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P161, DOI 10.1109/MSR.2012.6224276
   Keivanloo I, 2011, INTERNET SCALE JAVA
   Keivanloo I, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P664, DOI 10.1145/2568225.2568292
   Kevic K., 2014, P MSR, P320
   Kevic K, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P468, DOI 10.1145/2591062.2591117
   Kimmig M., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P376, DOI 10.1109/ASE.2011.6100076
   Li ZX, 2016, 8TH ASIA-PACIFIC SYMPOSIUM ON INTERNETWARE (INTERNETWARE 2016), P36, DOI 10.1145/2993717.2993723
   Lin JF, 2017, IEEE INT CONF AUTOM, P973, DOI 10.1109/ASE.2017.8115714
   Linares-Vasquez M, 2014, P 22 INT C PROGR C, P83
   Lopes C, 2010, UCI source code data sets
   Mamykina L, 2011, 29TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P2857
   McMillan C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P111, DOI 10.1145/1985793.1985809
   Mihalcea, 2004, P EMNLP, P401, DOI DOI 10.3115/1219044.1219064
   Moreno L, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P567, DOI 10.1145/2786805.2786859
   Moreno L, 2014, PROC IEEE INT CONF S, P151, DOI 10.1109/ICSME.2014.37
   Nakasai K, 2016, 9TH IEEE/ACM INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE 2016), P125, DOI [10.1145/2897586.2897614, 10.1109/CHASE.2016.033]
   Nie LM, 2016, IEEE T SERV COMPUT, V9, P771, DOI 10.1109/TSC.2016.2560165
   Ponzanelli Luca, 2014, P 11 WORKING C MININ, P102, DOI DOI 10.1145/2597073.2597077
   Rahman MM, 2018, P MSR, P10
   Rahman MM, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P79, DOI 10.1109/SANER.2017.7884611
   Rahman MM, 2016, IEEE INT CONF AUTOM, P220, DOI 10.1145/2970276.2970362
   Rahman MM, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P349, DOI 10.1109/SANER.2016.80
   Rahman MM, 2014, IEEE INT WORK C SO, P285, DOI 10.1109/SCAM.2014.15
   Rahman MM, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P194, DOI 10.1109/CSMR-WCRE.2014.6747170
   Rigby PC, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P832, DOI 10.1109/ICSE.2013.6606629
   Rocchio J., 1971, SMART RETRIEVAL SYST, P313
   Romano J, 2006, ANN M FLOR ASS I RES, P1
   Roy CK, 2008, INT C PROGRAM COMPRE, P172, DOI 10.1109/ICPC.2008.41
   Sadowski C, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P191, DOI 10.1145/2786805.2786855
   Sirres R, 2018, AUGMENTING STRUCTURI
   Sisman B, 2013, IEEE WORK CONF MIN S, P309, DOI 10.1109/MSR.2013.6624044
   Svajlenko J, 2018, PROC IEEE ACM INT C, P352, DOI 10.1145/3183440.3195005
   Svajlenko J, 2014, PROC IEEE INT CONF S, P476, DOI 10.1109/ICSME.2014.77
   Thongtanunam P, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P141, DOI 10.1109/SANER.2015.7081824
   Thung F, 2013, IEEE INT CONF AUTOM, P290, DOI 10.1109/ASE.2013.6693088
   Thung F, 2013, WORK CONF REVERSE EN, P182, DOI 10.1109/WCRE.2013.6671293
   Tian Y, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P44, DOI 10.1109/CSMR-WCRE.2014.6747213
   Toutanova K, 2000, PROCEEDINGS OF THE 2000 JOINT SIGDAT CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING AND VERY LARGE CORPORA, P63, DOI 10.3115/1117794.1117802
   Vassallo Carmine, 2014, Proceedings of the 22nd International Conference on Program Comprehension, P106
   Wang S., 2014, ACM/IEEE International Conference on Automated Software Engineering, ASE '14, Vasteras, Sweden - September 15 - 19, 2014, P677
   Wang YZ, 2013, PROCEEDINGS OF 2013 INTERNATIONAL CONFERENCE ON PUBLIC ADMINISTRATION (9TH), VOL I, P25
   Warr FW, 2007, PROC INT CONF SOFTW, P780
   Wong E, 2013, IEEE INT CONF AUTOM, P562, DOI 10.1109/ASE.2013.6693113
   Xia X, 2017, EMPIR SOFTW ENG, V22, P3149, DOI 10.1007/s10664-017-9514-4
   Zhang F, 2017, TSE
NR 72
TC 31
Z9 32
U1 0
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2019
VL 24
IS 4
BP 1869
EP 1924
DI 10.1007/s10664-018-9671-0
PG 56
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IL9CL
UT WOS:000477582700006
OA Green Published
DA 2024-07-18
ER

PT J
AU Binkley, D
   Lawrie, D
   Morrell, C
AF Binkley, Dave
   Lawrie, Dawn
   Morrell, Christopher
TI The need for software specific natural language techniques
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Feature location; Information retrieval; Query quality; Information
   need; Test collection challenge
ID TRACEABILITY
AB For over two decades, software engineering (SE) researchers have been importing tools and techniques from information retrieval (IR). Initial results have been quite positive. For example, when applied to problems such as feature location or re-establishing traceability links, IR techniques work well on their own, and often even better in combination with more traditional source code analysis techniques such as static and dynamic analysis. However, recently there has been growing awareness among SE researchers that IR tools and techniques are designed to work under different assumptions than those that hold for a software system. Thus it may be beneficial to consider IR-inspired tools and techniques that are specifically designed to work with software. One aim of this work is to provide quantitative empirical evidence in support of this observation. To do so a new technique is introduced that captures the level of difficulty found in an information need, the true, often latent, information that a searcher desires to know. The new technique is used to compare two domains: Natural Language (NL) and SE. Analysis of the data leads to three significant findings. First, the variation in the distribution of difficulty of the SE information needs differs from that of the NL information needs; second, collection age plays a role in the differences between the NL collections; and finally, the retrieval model used has little impact on the results.
C1 [Binkley, Dave; Lawrie, Dawn] Loyola Univ Maryland, Comp Sci, Baltimore, MD 21210 USA.
   [Morrell, Christopher] Loyola Univ Maryland, Dept Math & Stat, Baltimore, MD USA.
C3 Loyola University Maryland; Loyola University Maryland
RP Binkley, D (corresponding author), Loyola Univ Maryland, Comp Sci, Baltimore, MD 21210 USA.
EM binkley@cs.loyola.edu
RI Morrell, Christopher/AAN-3267-2021
OI Binkley, Dave/0000-0003-0059-4024
FU NSF [1626262]; Direct For Computer & Info Scie & Enginr [1626262]
   Funding Source: National Science Foundation; Office of Advanced
   Cyberinfrastructure (OAC) [1626262] Funding Source: National Science
   Foundation
FX This work was supported in part by NSF grant 1626262. We are very
   thankful to the original SCAM reviewers and especially to the EMSE
   reviewers whose comments were insightful and led to considerable
   improvements to the paper.
CR Abebe SL, 2009, WORK CONF REVERSE EN, P95, DOI 10.1109/WCRE.2009.26
   Alduailij M, 2015, PROCEEDINGS OF THE 2015 INTERNATIONAL CONFERENCE ON COLLABORATION TECHNOLOGIES AND SYSTEMS, P305, DOI 10.1109/CTS.2015.7210439
   [Anonymous], 1999, MODERN INFORM RETRIE
   Arnaoudova V, 2014, IEEE T SOFTWARE ENG, V40, P502, DOI 10.1109/TSE.2014.2312942
   Bavota G, 2011, J SYST SOFTWARE, V84, P397, DOI 10.1016/j.jss.2010.11.918
   Binkley D, 2016, IEEE INT WORK C SO, P187, DOI 10.1109/SCAM.2016.27
   Binkley D, 2015, J SYST SOFTWARE, V101, P30, DOI 10.1016/j.jss.2014.11.013
   Callan J. P., 1992, DEXA 92. Database and Expert Systems Applications. Proceedings of the International Conference, P78
   Chengxiang Zhai, 2001, SIGIR Forum, P334
   CLEVERDON C, 1967, ASLIB PROC, V19, P173, DOI 10.1108/eb050097
   De Lucia A, 2006, PROC IEEE INT CONF S, P299
   De Lucia A, 2011, IEEE T SOFTWARE ENG, V37, P205, DOI 10.1109/TSE.2010.89
   Dit B, 2011, J SOFTW MAINT EVOL-R, V23, P107
   Ellen M, 2008, TECHNICAL REPORT
   Enslen E., 2009, P 2009 MIN SOFTW REP
   Gay G, 2009, PROC IEEE INT CONF S, P351, DOI 10.1109/ICSM.2009.5306315
   Guerrouj L., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P301, DOI 10.1109/WCRE.2010.45
   Krovetz R, 1993, SPECIAL INTEREST GRO
   Lavrenko V, 2001, SIGIR C RES DEV INF
   Lin J, 2005, ASSESSING TERM INDEP
   Manning Christopher D., 2008, INTRO INFORM RETRIEV
   McCallum A.K., 2002, MALLET MACHINE LEARN
   Pradel M., 2011, P 2011 INT S SOFTW T, P232
   Rao S., 2011, P 8 WORK C MIN SOFTW, P43
   Robertson S. E., 1995, Text REtrieval Conference (TREC-3) (NIST SP 500-225), P109
   Saha RK, 2016, THESIS
   Savage T., 2010, P 32 ACM IEEE INT C
   Sisman B, 2013, IEEE WORK CONF MIN S, P309, DOI 10.1109/MSR.2013.6624044
   Tian K, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P163, DOI 10.1109/MSR.2009.5069496
   Voorhees E. M., 1999, TREC, V99, P1
   Wang SW, 2014, PROC IEEE INT CONF S, P171, DOI 10.1109/ICSME.2014.39
   Wei X, 2006, C RES DEV INF TETR S
   Zhai CX, 2004, ACM T INFORM SYST, V22, P179, DOI 10.1145/984321.984322
NR 33
TC 12
Z9 12
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2018
VL 23
IS 4
BP 2398
EP 2425
DI 10.1007/s10664-017-9566-5
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GK0MK
UT WOS:000435804100018
DA 2024-07-18
ER

PT J
AU da Costa, DA
   McIntosh, S
   Kulesza, U
   Hassan, AE
   Abebe, SL
AF da Costa, Daniel Alencar
   McIntosh, Shane
   Kulesza, Uira
   Hassan, Ahmed E.
   Abebe, Surafel Lemma
TI An empirical study of the integration time of fixed issues
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Integration time; Integration delay; Software maintenance; Mining
   software repositories
ID MULTIPLE COMPARISONS
AB Predicting the required time to fix an issue (i.e., a new feature, bug fix, or enhancement) has long been the goal of many software engineering researchers. However, after an issue has been fixed, it must be integrated into an official release to become visible to users. In theory, issues should be quickly integrated into releases after they are fixed. However, in practice, the integration of a fixed issue might be prevented in one or more releases before reaching users. For example, a fixed issue might be prevented from integration in order to assess the impact that this fixed issue may have on the system as a whole. While one can often speculate, it is not always clear why some fixed issues are integrated immediately, while others are prevented from integration. In this paper, we empirically study the integration of 20,995 fixed issues from the ArgoUML, Eclipse, and Firefox projects. Our results indicate that: (i) despite being fixed well before the release date, the integration of 34% to 60% of fixed issues in projects with traditional release cycle (the Eclipse and ArgoUML projects), and 98% of fixed issues in a project with a rapid release cycle (the Firefox project) was prevented in one or more releases; (ii) using information that we derive from fixed issues, our models are able to accurately predict the release in which a fixed issue will be integrated, achieving Areas Under the Curve (AUC) values of 0.62 to 0.93; and (iii) heuristics that estimate the effort that the team invests to fix issues is one of the most influential factors in our models. Furthermore, we fit models to study fixed issues that suffer from a long integration time. Such models, (iv) obtain AUC values of 0.82 to 0.96 and (v) derive much of their explanatory power from metrics that are related to the release cycle. Finally, we train regression models to study integration time in terms of number of days. Our models achieve R (2) values of 0.39 to 0.65, and indicate that the time at which an issue is fixed and the resolver of the issue have a large impact on the number of days that a fixed issue requires for integration. Our results indicate that, in addition to the backlog of issues that need to be fixed, the backlog of issues that need to be released introduces a software development overhead, which may lead to a longer integration time. Therefore, in addition to studying the triaging and fixing stages of the issue lifecycle, the integration stage should also be the target of future research and tooling efforts in order to reduce the time-to-delivery of fixed issues.
C1 [da Costa, Daniel Alencar; Kulesza, Uira] Univ Fed Rio Grande do Norte, Dept Informat & Appl Math DIMAp, Natal, RN, Brazil.
   [McIntosh, Shane] McGill Univ, Dept Elect & Comp Engn, Montreal, PQ, Canada.
   [Hassan, Ahmed E.] Queens Univ, Software Anal & Intelligence Lab SAIL, Kingston, ON, Canada.
   [Abebe, Surafel Lemma] Addis Ababa Univ, Addis Ababa Inst Technol, Addis Ababa, Ethiopia.
C3 Universidade Federal do Rio Grande do Norte; McGill University; Queens
   University - Canada; Addis Ababa University
RP da Costa, DA (corresponding author), Univ Fed Rio Grande do Norte, Dept Informat & Appl Math DIMAp, Natal, RN, Brazil.
EM danielcosta@ppgsc.ufrn.br; shane.mcintosh@mcgill.ca; uira@dimap.ufrn.br;
   ahmed@cs.queensu.ca; surafel.lemma@aait.edu.et
RI KHALIFA, AHMED khalifa/HKF-2246-2023; Ali, Ahmed/HOF-4672-2023; Hassan,
   Ahmed/AAB-7241-2019
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; Abebe, Surafel
   Lemma/0000-0002-2137-8673; Kulesza, Uira/0000-0002-5467-6458
CR Anbalagan P, 2009, PROC IEEE INT CONF S, P523, DOI 10.1109/ICSM.2009.5306337
   [Anonymous], 2009, Cambridge University Press, DOI DOI 10.1017/CBO9780511815867
   [Anonymous], 2005, ENCY STAT BEHAV SCI
   [Anonymous], 2007, P 22 IEEE ACM INT C, DOI DOI 10.1145/1321631.1321639
   [Anonymous], 30 INT C AUT SOFTW E
   Anvik John, 2005, P 2005 OOPSLA WORKSH, P35
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Bersani FS, 2016, J AFFECT DISORDERS, V190, P537, DOI 10.1016/j.jad.2015.10.037
   Bhattacharya Pamela., 2011, PROCEEDING 8 WORKING, P207, DOI DOI 10.1145/1985441.1985472
   Breiman L, 2001, MACH LEARN, V45, P5, DOI 10.1023/A:1010933404324
   Brooks F.P., 1975, The Mythical Man-month, V1995
   Choetkiertikul M, 2017, EMPIR SOFTW ENG, V22, P1223, DOI 10.1007/s10664-016-9496-7
   Choi HY, 2012, ECON REC, V88, P2, DOI 10.1111/j.1475-4932.2012.00809.x
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   da Costa DA, 2014, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSME.2014.50
   DUNN OJ, 1964, TECHNOMETRICS, V6, P241, DOI 10.2307/1266041
   DUNN OJ, 1961, J AM STAT ASSOC, V56, P52, DOI 10.2307/2282330
   EFRON B, 1986, J AM STAT ASSOC, V81, P461, DOI 10.2307/2289236
   Feng Zhang, 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P225, DOI 10.1109/WCRE.2012.32
   Giger E., 2010, P 2 INT WORKSH REC S, P52
   Guo PJ, 2010, Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering, P495
   HANLEY JA, 1982, RADIOLOGY, V143, P29, DOI 10.1148/radiology.143.1.7063747
   Harrell FE, 2015, SPRINGER SER STAT, P1, DOI 10.1007/978-3-319-19425-7_1
   Herraiz I., 2008, Proceedings of the 2008 International Working Conference on Mining Software Repositories. MSR'08, P145
   Jeong G, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P111, DOI 10.1145/1595696.1595715
   Jiang YJ, 2013, IEEE WORK CONF MIN S, P101, DOI 10.1109/MSR.2013.6624016
   Kim S, 2006, Proceedings of the 2006 international workshop on Mining software repositories, P173
   KRUSKAL WH, 1952, J AM STAT ASSOC, V47, P583, DOI 10.1080/01621459.1952.10483441
   Leys C, 2013, J EXP SOC PSYCHOL, V49, P764, DOI 10.1016/j.jesp.2013.03.013
   Mäntylä MV, 2013, PROC IEEE INT CONF S, P20, DOI 10.1109/ICSM.2013.13
   Marks L., 2011, P 7 INT C PRED MOD S, DOI [10.1145/2020390.202040, DOI 10.1145/2020390.202040]
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Panjer LucasD., 2007, Proceedings of the 4th International Workshop on Mining Software Repositories, MSR '07, P29
   Rahman MT, 2015, IEEE SOFTWARE, V32, P80
   Romano J., 2006, ANN M FLORIDA ASS IN
   Saha RK, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P144, DOI 10.1109/CSMR-WCRE.2014.6747164
   Sarle W., 1990, VARCLUS PROCEDURE SA
   Schroter Adrian, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P118, DOI 10.1109/MSR.2010.5463280
   Singer J., 1999, Fifth IEEE Workshop on Empirical Studies of Software Maintenance (WESS99). Theme: How to Wade Through the Mire of Evidence?, P71
   Steel R. G. D., 1996, PRINCIPLES PROCEDURE
   Tian Y, 2015, MEDIAT INFLAMM, V2015, DOI 10.1155/2015/819232
   Weiss C, 2007, P 4 INT WORKSH MIN S, P1, DOI [10.1109/MSR.2007.13, DOI 10.1109/MSR.2007.13]
   Zhang HY, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1042, DOI 10.1109/ICSE.2013.6606654
NR 44
TC 6
Z9 6
U1 0
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2018
VL 23
IS 1
BP 334
EP 383
DI 10.1007/s10664-017-9520-6
PG 50
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FU9TG
UT WOS:000424199400009
DA 2024-07-18
ER

PT J
AU Heikkilä, VT
   Paasivaara, M
   Lasssenius, C
   Damian, D
   Engblom, C
AF Heikkila, Ville T.
   Paasivaara, Maria
   Lasssenius, Casper
   Damian, Daniela
   Engblom, Christian
TI Managing the requirements flow from strategy to release in large-scale
   agile development: a case study at Ericsson
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Scaling agile software development; Requirements management; Scrum;
   Large projects; Telecommunications software
ID QUALITATIVE CONTENT-ANALYSIS; EMBEDDED SOFTWARE; SUCCESS FACTORS;
   PRODUCT; SCRUM; ORGANIZATION; CHALLENGES; MANAGEMENT; TEAMS
AB In a large organization, informal communication and simple backlogs are not sufficient for the management of requirements and development work. Many large organizations are struggling to successfully adopt agile methods, but there is still little scientific knowledge on requirements management in large-scale agile development organizations. We present an in-depth study of an Ericsson telecommunications node development organization which employs a large scale agile method to develop telecommunications system software. We describe how the requirements flow from strategy to release, and related benefits and problems. Data was collected by 43 interviews, which were analyzed qualitatively. The requirements management was done in three different processes, each of which had a different process model, purpose and planning horizon. The release project management process was plan-driven, feature development process was continuous and implementation management process was agile. The perceived benefits included reduced development lead time, increased flexibility, increased planning efficiency, increased developer motivation and improved communication effectiveness. The recognized problems included difficulties in balancing planning effort, overcommitment, insufficient understanding of the development team autonomy, defining the product owner role, balancing team specialization, organizing system-level work and growing technical debt. The study indicates that agile development methods can be successfully employed in organizations where the higher level planning processes are not agile. Combining agile methods with a flexible feature development process can bring many benefits, but large-scale software development seems to require specialist roles and significant coordination effort.
C1 [Heikkila, Ville T.; Paasivaara, Maria; Lasssenius, Casper] Aalto Univ, POB 15400, FI-00076 Aalto, Finland.
   [Damian, Daniela] Univ Victoria, STN CSC, POB 1700, Victoria, BC V8W 2Y2, Canada.
   [Engblom, Christian] Oy LM Ericsson AB, Kyrkslatt, Finland.
C3 Aalto University; University of Victoria; Ericsson
RP Heikkilä, VT (corresponding author), Aalto Univ, POB 15400, FI-00076 Aalto, Finland.
EM ville.t.heikkila@aalto.fi; maria.paasivaara@aalto.fi;
   casper.lassenius@aalto.fi; damian.daniela@gmail.com;
   christian.engblom@ericsson.com
FU TEKES (the Finnish Funding Agency for Innovation) as a part of the Cloud
   Software Finland program of DIGILE; TEKES (the Finnish Funding Agency
   for Innovation) as a part of the Need for Speed program of DIMECC
FX We would like to thank Oy LM Ericsson Ab for making this study possible,
   all the anonymous interviewees for providing valuable contributions to
   this research and Kaisa Kettunen for reviewing the manuscript. This
   research was financially supported by TEKES (the Finnish Funding Agency
   for Innovation) as a part of the Cloud Software Finland program of
   DIGILE and the Need for Speed program of DIMECC.
CR [Anonymous], 2004, XP Ser
   [Anonymous], 1975, MYTHICAL MAN MONTH E
   [Anonymous], 2010, Practices for Scaling Lean & Agile Development: Large, Multisite, and Offshore Product Development with Large-Scale Scrum
   Augustine Sanjiv., 2008, Managing Agile Projects
   Bass JM, 2015, EMPIR SOFTW ENG, V20, P1525, DOI 10.1007/s10664-014-9322-z
   Batic D, 2015, J INEQUAL SPEC FUNCT, V6, P1
   Beecham S, 2008, INFORM SOFTWARE TECH, V50, P860, DOI 10.1016/j.infsof.2007.09.004
   Campbell D.T., 2001, Experimental and quasiexperimental designs for generalized causal inference
   Cao L, 2004, P HAW INT C SYST SCI, V37, P1335
   Chow T, 2008, J SYST SOFTWARE, V81, P961, DOI 10.1016/j.jss.2007.08.020
   DAFT RL, 1984, RES ORGAN BEHAV, V6, P191
   Damian D, 2006, IEEE T SOFTWARE ENG, V32, P433, DOI 10.1109/TSE.2006.61
   Dennis A. R., 1999, P 32 ANN HAW INT C S
   Dikert K, 2016, J SYST SOFTWARE, V119, P87, DOI 10.1016/j.jss.2016.06.013
   Eckstein J, 2014, LECT NOTES BUS INF P, V199, P21
   Elo S, 2008, J ADV NURS, V62, P107, DOI 10.1111/j.1365-2648.2007.04569.x
   Fogelstrom ND, 2010, J SOFTW MAINT EVOL-R, V22, P53, DOI [10.1002/spip.420, 10.1002/smr.453]
   Heikkila Ville T., 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P85, DOI 10.1109/ESEM.2013.27
   Heikkilä VT, 2015, PROCEEDINGS 41ST EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS SEAA 2015, P199, DOI 10.1109/SEAA.2015.70
   Heikkilä VT, 2015, INFORM SOFTWARE TECH, V57, P116, DOI 10.1016/j.infsof.2014.09.005
   Heikkilä VT, 2013, LECT NOTES BUS INF P, V149, P195
   Heikkila VT, 2015, THESIS
   Hsieh HF, 2005, QUAL HEALTH RES, V15, P1277, DOI 10.1177/1049732305276687
   Inayat I, 2015, COMPUT HUM BEHAV, V51, P915, DOI 10.1016/j.chb.2014.10.046
   Jantunen S, 2011, 5 INT WORKSH SOFTW P, P36, DOI [10.1109/IWSPM.2011.6046202, DOI 10.1109/IWSPM.2011.6046202]
   Korhonen K, 2013, SOFTWARE QUAL J, V21, P599, DOI 10.1007/s11219-012-9189-4
   Laanti M, 2011, INFORM SOFTWARE TECH, V53, P276, DOI 10.1016/j.infsof.2010.11.010
   Larman C, 2009, SCALING LEAN ANDAMP
   Lee EA, 2002, ADV COMPUT, V56, P55, DOI 10.1016/S0065-2458(02)80004-3
   Leffingwell D., 2011, Agile software requirements: Lean requirements practices for teams, programs, and the enterprise
   Lehman M. M., 1980, Journal of Systems and Software, V1, P213, DOI 10.1016/0164-1212(79)90022-0
   Lehtola L, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P439, DOI 10.1109/RE.2005.36
   MacCormack A, 2012, RES POLICY, V41, P1309, DOI 10.1016/j.respol.2012.04.011
   Maglyas A., 2012, 2012 IEEE 20th International Requirements Engineering Conference (RE 2012), P261, DOI 10.1109/RE.2012.6345812
   Maiden N, 2012, IEEE SOFTWARE, V29, P26, DOI 10.1109/MS.2012.6
   Moe NB, 2014, P 8 ACM IEEE INT S E
   Moe NB, 2010, INFORM SOFTWARE TECH, V52, P480, DOI 10.1016/j.infsof.2009.11.004
   Noordeloos R., 2012, 2012 7th IEEE International Conference on Global Software Engineering (ICGSE 2012), P31, DOI 10.1109/ICGSE.2012.11
   Paasivaara M., 2012, 2012 7th IEEE International Conference on Global Software Engineering (ICGSE 2012), P174, DOI 10.1109/ICGSE.2012.41
   Paasivaara M, 2014, LECT NOTES BUS INF P, V199, P73
   Paasivaara M, 2014, INFORM SOFTWARE TECH, V56, P1556, DOI 10.1016/j.infsof.2014.06.008
   Paasivaara M, 2013, 2013 IEEE 8TH INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING (ICGSE 2013), P134, DOI 10.1109/ICGSE.2013.25
   Paasivaara M, 2012, INT SYMP EMP SOFTWAR, P235, DOI 10.1145/2372251.2372294
   Patton M. Q., 2002, QUALITATIVE RES EVAL, V3rd
   Pink D., 2011, [No title captured]
   Rautiainen K., 2002, ENG MANAG J, V14, P27, DOI DOI 10.1080/10429247.2002.11415159
   Schwaber K., 2007, The enterprise and Scrum
   Schwaber K., 2002, AGILE SOFTWARE DEV S
   Svahnberg M, 2010, INFORM SOFTWARE TECH, V52, P237, DOI 10.1016/j.infsof.2009.11.006
   Taramaa J, 1996, J SOFTW MAINT-RES PR, V8, P49, DOI 10.1002/(SICI)1096-908X(199601)8:1<49::AID-SMR120>3.0.CO;2-Z
   Vahaniitty J, 2012, THESIS
   Verner JM, 2014, J SYST SOFTWARE, V92, P115, DOI 10.1016/j.jss.2014.01.008
   Wiklund K, 2013, LECT NOTES COMPUT SC, V7983, P35, DOI 10.1007/978-3-642-39259-7_6
   Yin R.K., 2014, Applications of case study research, V2nd
NR 54
TC 40
Z9 43
U1 5
U2 85
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2017
VL 22
IS 6
BP 2892
EP 2936
DI 10.1007/s10664-016-9491-z
PG 45
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA FI3MB
UT WOS:000411865400005
OA hybrid
DA 2024-07-18
ER

PT J
AU Vendome, C
   Bavota, G
   Di Penta, M
   Linares-Vásquez, M
   German, D
   Poshyvanyk, D
AF Vendome, Christopher
   Bavota, Gabriele
   Di Penta, Massimiliano
   Linares-Vasquez, Mario
   German, Daniel
   Poshyvanyk, Denys
TI License usage and changes: a large-scale study on gitHub
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software licenses; Mining software repositories; Empirical studies
ID AUTOREGRESSIVE TIME-SERIES
AB Open source software licenses determine, from a legal point of view, under which conditions software can be integrated and redistributed. The reason why developers of a project adopt (or change) a license may depend on various factors, e.g., the need for ensuring compatibility with certain third-party components, the perspective towards redistribution or commercialization of the software, or the need for protecting against somebody else's commercial usage of the software. This paper reports a large empirical study aimed at quantitatively and qualitatively investigating when and why developers adopt or change software licenses. Specifically, we first identify license changes in 1,731,828 commits, representing the entire history of 16,221 Java projects hosted on GitHub. Then, to understand the rationale of license changes, we perform a qualitative analysis on 1,160 projects written in seven different programming languages, namely C, C++, C#, Java, Javascript, Python, and Ruby-following an open coding approach inspired by grounded theory-on commit messages and issue tracker discussions concerning licensing topics, and whenever possible, try to build traceability links between discussions and changes. On one hand, our results highlight how, in different contexts, license adoption or changes can be triggered by various reasons. On the other hand, the results also highlight a lack of traceability of when and why licensing changes are made. This can be a major concern, because a change in the license of a system can negatively impact those that reuse it. In conclusion, results of the study trigger the need for better tool support in guiding developers in choosing/changing licenses and in keeping track of the rationale of license changes.
C1 [Vendome, Christopher; Linares-Vasquez, Mario; Poshyvanyk, Denys] Coll William & Mary, Williamsburg, VA 23185 USA.
   [Bavota, Gabriele] Free Univ Bozen Bolzano, Bozen Bolzano, Italy.
   [Di Penta, Massimiliano] Univ Sannio, Benevento, Italy.
   [German, Daniel] Univ Victoria, Victoria, BC, Canada.
C3 William & Mary; Free University of Bozen-Bolzano; University of Sannio;
   University of Victoria
RP Vendome, C (corresponding author), Coll William & Mary, Williamsburg, VA 23185 USA.
EM cgvendome@email.wm.edu
RI Di Penta, Massimiliano/AAF-9656-2021
OI Linares-Vasquez, Mario/0000-0003-0161-2888; Poshyvanyk,
   Denys/0000-0002-5626-7586; BAVOTA, Gabriele/0000-0002-2216-3148
FU NSF CAREER [CCF-1253837]; Markos project; European Commission
   [FP7-317743]
FX This work is supported in part by NSF CAREER CCF-1253837 grant.
   Massimiliano Di Penta is partially supported by the Markos project,
   funded by the European Commission under Contract Number FP7-317743. Any
   opinions, findings, and conclusions expressed herein are the authors'
   and do not necessarily reflect those of the sponsors.
CR [Anonymous], 2010, P 32 ACMIEEE INT C S
   [Anonymous], 2009, INFORM SYSTEMS RES
   [Anonymous], 37 IEEE ACM INT C SO
   Bavota G, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P399, DOI 10.1109/CSMR-WCRE.2014.6747204
   Bavota G, 2013, PROC IEEE INT CONF S, P280, DOI 10.1109/ICSM.2013.39
   Brock Amanda., 2010, Intl. Free and Open Source Software Law Review, V2, P139
   Cass Stephen., 2015, The 2015 Top Ten Programming Languages
   CORBIN J, 1990, Z SOZIOL, V19, P418, DOI 10.1007/BF00988593
   Cubranic D, 2005, IEEE T SOFTWARE ENG, V31, P446, DOI 10.1109/TSE.2005.71
   Di Penta Massimiliano, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P151, DOI 10.1109/MSR.2010.5463282
   Di Penta M, 2009, WORK CONF REVERSE EN, P11, DOI 10.1109/WCRE.2009.41
   Di Penta Massimiliano, 2010, P 32 ACMIEEE INT C S, P145, DOI [10.1145/1806799.1806824, DOI 10.1145/1806799.1806824]
   DICKEY DA, 1981, ECONOMETRICA, V49, P1057, DOI 10.2307/1912517
   DICKEY DA, 1979, J AM STAT ASSOC, V74, P427, DOI 10.2307/2286348
   Dyer R, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P422, DOI 10.1109/ICSE.2013.6606588
   Cortés-Coy LF, 2014, IEEE INT WORK C SO, P275, DOI 10.1109/SCAM.2014.14
   Free Software Foundation, 2015, CAT FREE NONFR SOFTW
   German Daniel M., 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P84, DOI 10.1109/ICPC.2010.48
   German DM, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P81, DOI 10.1109/MSR.2009.5069483
   German DM, 2009, PROC INT CONF SOFTW, P188, DOI 10.1109/ICSE.2009.5070520
   German Daniel M., 2010, P 25 IEEE ACM INT C, P437, DOI [10.1145/1858996.1859088, DOI 10.1145/1858996.1859088]
   GNU, 2015, GNU GEN PUBL LIC
   Gobeille R, 2008, P 2008 INT WORK C MI, P47, DOI DOI 10.1145/1370750.1370763
   Holmes R, 2005, PROC INT CONF SOFTW, P117
   Howison J, IJITWE 06, V1, P17
   Manabe Y, 2010, P JOINT ERCIM WORKSH, P83
   McMillan C, 2011, P 33 INT C SOFTW ENG, V11
   Mcmillan C, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2522920.2522930
   McMillan C, 2012, IEEE T SOFTWARE ENG, V38, P1069, DOI 10.1109/TSE.2011.84
   McMillan C, 2012, PROC INT CONF SOFTW, P848, DOI 10.1109/ICSE.2012.6227134
   Moreno L, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P484, DOI 10.1145/2635868.2635870
   Nagappan M, 2013, 2013 9 JOINT M EUR S, P466, DOI [DOI 10.1145/2491411.2491415, 10.1145/2491411.2491415]
   Oracle MySQL, FOSS LIC EXC
   PF, OPENBSD PACK FILT
   Ponzanelli L, 2013, EUR CON SFTWR MTNCE, P57, DOI 10.1109/CSMR.2013.16
   Ponzanelli Luca, 2014, P 11 WORKING C MININ, P102, DOI DOI 10.1145/2597073.2597077
   Sojer M, 2010, J ASSOC INF SYST, V11, P868
   Tuunanen T, 2009, AUTOMAT SOFTW ENG, V16, P455, DOI 10.1007/s10515-009-0054-z
   Vendome C, 2015, 23 IEEE INT C PROGR
   Vendome C, 2015, PROC IEEE INT CONF S, P31, DOI 10.1109/ICSM.2015.7332449
   Wu Y, 2015, ETHOD DETECT LICENSE
NR 41
TC 21
Z9 26
U1 0
U2 11
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2017
VL 22
IS 3
BP 1537
EP 1577
DI 10.1007/s10664-016-9438-4
PG 41
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EW4GE
UT WOS:000402459200020
DA 2024-07-18
ER

PT J
AU Kavaler, D
   Filkov, V
AF Kavaler, David
   Filkov, Vladimir
TI Stochastic actor-oriented modeling for studying homophily and social
   influence in OSS projects
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Actor oriented models; Apache; Open source; Social influence; Social
   selection; Homophily; Siena
ID PANEL-DATA; NETWORKS; DYNAMICS; SELECTION
AB Open Source Software projects are communities in which people "learn the ropes" from each other. The social and technical activities of developers evolve together, and as they link to each other they get organized in a network of changing socio-technical connections. Traces of those activities, or behaviors, are typically visible to all, in project repositories and through communication between them. Thus, in principle it may be possible to study those traces to tell which of the observable socio-technical behaviors of developers in these projects are responsible for the forming of persistent links between them. It may also be possible to tell the extent to which links participate in the spread of potential behavioral influences. Since OSS projects change in both social and technical activity over time, static approaches, that either ignore time or simplify it to a few slices, are frequently inadequate to study these networks. On the other hand, ad-hoc dynamic approaches are often only loosely supported by theory and can yield misleading findings. Here we adapt the stochastic actor-oriented models from social network analysis. These models enable the study of the interplay between behavior, influence and network architecture, for dynamic networks, in a statistically sound way. We apply the stochastic actor-oriented models in case studies of two Apache Software Foundation projects, and study code ownership and developer productivity as behaviors. For those, we find evidence of significant social selection effects (homophily) in both projects, but in different directions. However, we find no evidence for the spread (social influence) of either code ownership or developer productivity behaviors through the networks.
C1 [Kavaler, David; Filkov, Vladimir] Univ Calif Davis, Dept Comp Sci, Davis, CA 95616 USA.
C3 University of California System; University of California Davis
RP Kavaler, D (corresponding author), Univ Calif Davis, Dept Comp Sci, Davis, CA 95616 USA.
EM dmkavaler@ucdavis.edu; filkov@cs.ucdavis.edu
FU Air Force Office of Scientific Research [FA955-11-1-0246]; faculty grant
   from UC Davis; UC Davis
FX The authors want to thank Mohammad Gharehyazie for sharing his ASF
   project data. We thank Saheel Godhane for fruitful discussion during the
   early stages of the project. We thank anonymous reviewers for their
   helpful suggestions on prior versions of manuscript. The authors
   gratefully acknowledge support from the Air Force Office of Scientific
   Research, award FA955-11-1-0246, and a faculty grant from UC Davis. The
   authors are thankful for generous support from UC Davis.
CR [Anonymous], 2005, 1 MONDAY, DOI DOI 10.5210/FM.V10I2.1207
   [Anonymous], J R STAT SOC A
   [Anonymous], BMJ
   [Anonymous], J AM SOC INF SCI
   [Anonymous], WHY SELECTION PATTER
   [Anonymous], INFECT DIS HUMANS DY
   [Anonymous], 1994, SOCIAL NETWORK ANAL
   [Anonymous], AMCIS 2002 P
   Barabási AL, 1999, SCIENCE, V286, P509, DOI 10.1126/science.286.5439.509
   Barthélemy M, 2005, J THEOR BIOL, V235, P275, DOI 10.1016/j.jtbi.2005.01.011
   BASILI VR, 1995, SLOAN MANAGE REV, V37, P55
   BATAGELJ V, 1995, J CLASSIF, V12, P73, DOI 10.1007/BF01202268
   Berardo R, 2014, INT J COMMONS, V8, P236, DOI 10.18352/ijc.463
   Bettenburg Nicolas, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P124, DOI 10.1109/ICPC.2010.46
   Bird Christian, 2009, 2009 20th International Symposium on Software Reliability Engineering (ISSRE 2009), P109, DOI 10.1109/ISSRE.2009.17
   Bird C., 2011, P 19 ACM SIGSOFT S 1, P4, DOI DOI 10.1145/2025113.2025119
   Bird Christian, 2006, P MSR, P137, DOI DOI 10.1145/1137983.1138016
   Bird Christian, 2008, Proceedings of the 2008 ACM SIGSOFT Symposium on the Foundations of Software Engineering, P24
   Boccaletti S, 2006, PHYS REP, V424, P175, DOI 10.1016/j.physrep.2005.10.009
   Boh WF, 2007, MANAGE SCI, V53, P1315, DOI 10.1287/mnsc.1060.0687
   CARDY JL, 1985, J PHYS A-MATH GEN, V18, pL267, DOI 10.1088/0305-4470/18/6/001
   Cataldo M., 2006, P 2006 20 06 ANN C C, P353, DOI DOI 10.1145/1180875.1180929
   Cheadle JE, 2013, SOC SCI RES, V42, P1297, DOI 10.1016/j.ssresearch.2013.05.001
   Cherry S, 2008, INT J HUM-COMPUT ST, V66, P495, DOI 10.1016/j.ijhcs.2008.01.002
   Cohen-Cole E, 2008, J HEALTH ECON, V27, P1382, DOI 10.1016/j.jhealeco.2008.04.005
   CURTIS B, 1988, COMMUN ACM, V31, P1268, DOI 10.1145/50087.50089
   DAVIS JA, 1970, AM SOCIOL REV, V35, P843, DOI 10.2307/2093295
   De Souza C., 2005, P 2005 ACM INT C SUP, P197, DOI 10.1145/1099203.1099239
   Ducheneaut N., 2005, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V14, P323, DOI 10.1007/s10606-005-9000-1
   Gharehyazie M, 2013, PROC IEEE INT CONF S, P340, DOI 10.1109/ICSM.2013.45
   Gharehyazie Mohammad., 2014, Empirical Software Engineering, P1
   Goeminne M, 2013, SCI COMPUT PROGRAM, V78, P971, DOI 10.1016/j.scico.2011.11.004
   Halliday TJ, 2009, ECON HUM BIOL, V7, P181, DOI 10.1016/j.ehb.2009.05.002
   Hintze JL, 1998, AM STAT, V52, P181, DOI 10.2307/2685478
   Holland PaulW., 1971, Transitivity in structural models of small groups
   Holme P, 2003, EUROPHYS LETT, V64, P427, DOI 10.1209/epl/i2003-00505-4
   Jaccard P., 1912, New Phytologist, V11, P37, DOI [10.1111/j.1469-8137.1912.tb05611.x, DOI 10.1111/J.1469-8137.1912.TB05611.X]
   Jackson MO, 2007, AM ECON REV, V97, P890, DOI 10.1257/aer.97.3.890
   Johnson B, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P672, DOI 10.1109/ICSE.2013.6606613
   Koskinen J, 2012, SOC NETWORKS, V34, P309, DOI 10.1016/j.socnet.2010.03.001
   Kouters E, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P592, DOI 10.1109/ICSM.2012.6405329
   Lazega E, 2011, NEW DIR MOD ECON, P46
   Lopez-Fernandez L., 2004, "International Workshop on Mining Software Repositories (MSR 2004)" W17S Workshop - 26th International Conference on Software Engineering, P101, DOI 10.1049/ic:20040485
   Lospinoso J., 2010, Testing and modeling time heterogeneity in longitudinal studies of social networks: A tutorial in RSiena
   Lospinoso Josh, 2012, THESIS
   Lospinoso JA, 2011, ADV DATA ANAL CLASSI, V5, P147, DOI 10.1007/s11634-010-0076-1
   MANSKI CF, 1993, REV ECON STUD, V60, P531, DOI 10.2307/2298123
   Meneely A., 2008, P 16 ACM SIGSOFT INT, P13, DOI DOI 10.1145/1453101.1453106
   Meneely A, 2009, CCS'09: PROCEEDINGS OF THE 16TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P453
   Mockus Audris, 2007, International Workshop on Emerging Trends in FLOSS Research and Development, P7, DOI [10.1109/FLOSS.2007.10, DOI 10.1109/FLOSS.2007.10]
   Nagappan N, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P521, DOI 10.1145/1368088.1368160
   Newman MEJ, 2002, PHYS REV E, V66, DOI 10.1103/PhysRevE.66.016128
   Pastor-Satorras R, 2001, PHYS REV LETT, V86, P3200, DOI 10.1103/PhysRevLett.86.3200
   Pinzger Martin, 2008, P 16 ACM SIGSOFT INT, P2, DOI DOI 10.1145/1453101.1453105
   Qiaona Hong, 2011, 2011 IEEE 27th International Conference on Software Maintenance, P323, DOI 10.1109/ICSM.2011.6080799
   Rahman F, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P491, DOI 10.1145/1985793.1985860
   Ripley R.M., 2014, MANUAL SIENA VERSION
   Rogers E.M., 2010, An Integrated Approach to Communication Theory and Research
   Ruths J, 2014, SCIENCE, V343, P1373, DOI 10.1126/science.1242063
   Scacchi W., 2006, Software Process Improvement and Practice, V11, P95, DOI 10.1002/spip.255
   Schweinberger M, 2007, COMPUT STAT DATA AN, V51, P4465, DOI 10.1016/j.csda.2006.07.014
   Schweinberger M, 2012, BRIT J MATH STAT PSY, V65, P263, DOI 10.1111/j.2044-8317.2011.02022.x
   Shalizi CR, 2011, SOCIOL METHOD RES, V40, P211, DOI 10.1177/0049124111404820
   Shi HJ, 2008, PHYSICA A, V387, P2133, DOI 10.1016/j.physa.2007.11.048
   Singh PV, 2010, ACM T SOFTW ENG METH, V20, DOI 10.1145/1824760.1824763
   Snijders T., 2007, Modeling the coevolution of networks and behavior
   Snijders T.A., 2014, Siena algorithms
   Snijders T.A.B., 2005, MODELS METHODS SOCIA, V1, P215, DOI DOI 10.1017/CBO9780511811395.011
   Snijders TAB, 2001, SOCIOL METHODOL, V31, P361, DOI 10.1111/0081-1750.00099
   Snijders TAB, 1996, J MATH SOCIOL, V21, P149, DOI 10.1080/0022250X.1996.9990178
   Snijders TAB, 2013, SOC NETWORKS, V35, P265, DOI 10.1016/j.socnet.2012.05.005
   Snijders TAB, 2010, ANN APPL STAT, V4, P567, DOI 10.1214/09-AOAS313
   Snijders TAB, 2010, SOC NETWORKS, V32, P44, DOI 10.1016/j.socnet.2009.02.004
   Snijders TomA. B., 1997, Simulating Social Phenomena, P493
   Steglich C, 2010, SOCIOL METHODOL, V40, P329, DOI 10.1111/j.1467-9531.2010.01225.x
   Storey MA., 2010, P FSE SDP WORKSH FUT, P359, DOI DOI 10.1145/1882362.1882435
   Vasilescu B, 2014, EMPIR SOFTW ENG, V19, P955, DOI 10.1007/s10664-013-9244-1
   Veenstra R, 2013, J RES ADOLESCENCE, V23, P399, DOI 10.1111/jora.12070
   Vespignani A, 2012, NAT PHYS, V8, P32, DOI 10.1038/nphys2160
   WASSERMAN S, 1988, PSYCHOMETRIKA, V53, P261, DOI 10.1007/BF02294137
   Wasserman S. S., 1980, Sociological methodology, V11, P392, DOI DOI 10.2307/270870
   Weyuker EJ, 2008, EMPIR SOFTW ENG, V13, P539, DOI 10.1007/s10664-008-9082-8
   Xuan Q, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P222, DOI 10.1145/2568225.2568238
   Xuan Q, 2016, PLOS ONE, V11, DOI 10.1371/journal.pone.0154324
   ZEGGELINK E, 1994, SOC NETWORKS, V16, P295, DOI 10.1016/0378-8733(94)90014-0
   Zhang HF, 2009, NONLINEAR ANAL-THEOR, V70, P3273, DOI 10.1016/j.na.2008.04.031
NR 86
TC 5
Z9 7
U1 0
U2 16
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2017
VL 22
IS 1
BP 407
EP 435
DI 10.1007/s10664-016-9431-y
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA EI3GS
UT WOS:000392378400011
DA 2024-07-18
ER

PT J
AU Mkaouer, MW
   Kessentini, M
   Bechikh, S
   Cinnéide, MO
   Deb, K
AF Mkaouer, Mohamed Wiem
   Kessentini, Marouane
   Bechikh, Slim
   Cinneide, Mel O.
   Deb, Kalyanmoy
TI On the use of many quality attributes for software refactoring: a
   many-objective search-based software engineering approach
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Search-based software engineering; Refactoring; Software quality;
   Many-objective optimization
ID MULTIOBJECTIVE EVOLUTIONARY ALGORITHM; DOMINANCE
AB Search-based software engineering (SBSE) solutions are still not scalable enough to handle high-dimensional objectives space. The majority of existing work treats software engineering problems from a single or bi-objective point of view, where the main goal is to maximize or minimize one or two objectives. However, most software engineering problems are naturally complex in which many conflicting objectives need to be optimized. Software refactoring is one of these problems involving finding a compromise between several quality attributes to improve the quality of the system while preserving the behavior. To this end, we propose a novel representation of the refactoring problem as a many-objective one where every quality attribute to improve is considered as an independent objective to be optimized. In our approach based on the recent NSGA-III algorithm, the refactoring solutions are evaluated using a set of 8 distinct objectives. We evaluated this approach on one industrial project and seven open source systems. We compared our findings to: several other many-objective techniques (IBEA, MOEA/D, GrEA, and DBEA-Eps), an existing multi-objective approach a mono-objective technique and an existing refactoring technique not based on heuristic search. Statistical analysis of our experiments over 31 runs shows the efficiency of our approach.
C1 [Mkaouer, Mohamed Wiem; Kessentini, Marouane; Bechikh, Slim] Univ Michigan, Dearborn, MI 48128 USA.
   [Cinneide, Mel O.] Univ Coll Dublin, Dublin, Ireland.
   [Deb, Kalyanmoy] Michigan State Univ, E Lansing, MI USA.
C3 University of Michigan System; University of Michigan; University
   College Dublin; Michigan State University
RP Mkaouer, MW (corresponding author), Univ Michigan, Dearborn, MI 48128 USA.
EM mmkaouer@umich.edu; marouane@umich.edu; sbechikh@umich.edu;
   mel.ocinneide@ucd.ie; kdeb@egr.msu.edu
RI Ó Cinnéide, Mel/GQP-1737-2022; Bechikh, Slim/AAF-6435-2020; Mkaouer,
   Mohamed Wiem/N-7476-2017
OI Bechikh, Slim/0000-0003-1378-7415; Mkaouer, Mohamed
   Wiem/0000-0001-6010-7561
FU Institute for Advanced Vehicle Systems-Michigan grant; UM-Ford Alliance
   Program; Science Foundation Ireland [10/CE/I1855]
FX This work was supported, in part, by the Institute for Advanced Vehicle
   Systems-Michigan grant, the UM-Ford Alliance Program and the Science
   Foundation Ireland grant 10/CE/I1855 to Lero - the Irish Software
   Engineering Research Centre.
CR Alshayeb M, 2009, INFORM SOFTWARE TECH, V51, P1319, DOI 10.1016/j.infsof.2009.04.002
   [Anonymous], P GEN EV COMP C GECC
   [Anonymous], 1994, Object-oriented software metrics: a practical guide
   [Anonymous], 2009, IEEE T SOFTWARE ENG
   [Anonymous], 2006, INT J COMPUT INTELL, DOI DOI 10.5019/J.IJCIR.2006.67
   [Anonymous], MULTIOBJECTIVE OTPIM
   [Anonymous], COMP 21 ACM SIGPLAN
   Arcuri A, 2013, EMPIR SOFTW ENG, V18, P594, DOI 10.1007/s10664-013-9249-9
   Asafuddoula M, 2013, LECT NOTES COMPUT SC, V7811, P413, DOI 10.1007/978-3-642-37140-0_32
   Bader J, 2011, EVOL COMPUT, V19, P45, DOI 10.1162/EVCO_a_00009
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   Barros MD, 2012, PROCEEDINGS OF THE FOURTEENTH INTERNATIONAL CONFERENCE ON GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1205, DOI 10.1145/2330163.2330330
   Basili V. R., 1992, Technical Report
   Bechikh S, 2010, EVOLUTIONARY COMPUTA, P1
   Bechikh S, 2011, SOFT COMPUT, V15, P1807, DOI 10.1007/s00500-011-0694-3
   Ben Said L, 2010, IEEE T EVOLUT COMPUT, V14, P801, DOI 10.1109/TEVC.2010.2041060
   Bowman M, 2010, IEEE T SOFTWARE ENG, V36, P817, DOI 10.1109/TSE.2010.70
   Brito eAbreu., 1995, Proceedings of ECOOP Workshop on Quantitative Methods for Object-Oriented Systems Development, V95, P267
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Cinnéide MO, 2012, INT SYMP EMP SOFTWAR, P49, DOI 10.1145/2372251.2372260
   Colanzi Thelma Elita, 2012, Search Based Software Engineering. Proceedings of the 4th International Symposium (SSBSE 2012), P259, DOI 10.1007/978-3-642-33119-0_19
   Corazza A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P233, DOI 10.1109/ICSM.2012.6405277
   Counsell S, 2006, TAIC PART - TESTING: ACADEMIC & INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P181, DOI 10.1109/TAIC-PART.2006.33
   Dean J, 1995, LECT NOTES COMPUT SC, V952, P77, DOI 10.1007/3-540-49538-x_5
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Deb K., 2006, P IEEE C EV COMP, P3353
   Deb K., 2012, EVOLUTIONARY COMPUTA, P1
   Deb K, 2014, IEEE T EVOLUT COMPUT, V18, P577, DOI 10.1109/TEVC.2013.2281535
   di Perro F, 2007, IEEE T EVOLUT COMPUT, V11, P17, DOI 10.1109/TEVC.2006.876362
   Dig D, 2011, IEEE SOFTWARE, V28, P17, DOI 10.1109/MS.2011.1
   Du Bois B, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P144, DOI 10.1109/WCRE.2004.33
   Du Bois B., 2003, InInternational Workshop on Evolution of Large-scale Industrial Software Applications, P37
   Foster SR, 2012, PROC INT CONF SOFTW, P222, DOI 10.1109/ICSE.2012.6227191
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Garza-Fabre M, 2011, IEEE C EVOL COMPUTAT, P2115
   Ge X, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1095, DOI 10.1145/2568225.2568280
   Ge Xi, 2011, P ACM INT C COMP OBJ, V11, P19, DOI [10.1145/2048147.2048157, DOI 10.1145/2048147.2048157]
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Harman M., 2013, Proceedings of the 15th Annual Conference Companion on Genetic and Evolutionary Computation, P1759, DOI [DOI 10.1145/2464576.2480770, 10.1145/2464576.2480770]
   Harman M, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1106
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Jaimes AL, 2009, LECT NOTES COMPUT SC, V5467, P423, DOI 10.1007/978-3-642-01020-0_34
   Jain H, 2014, IEEE T EVOLUT COMPUT, V18, P602, DOI 10.1109/TEVC.2013.2281534
   Kalboussi Sabrine, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P245, DOI 10.1007/978-3-642-39742-4_19
   Kataoka Y, 2001, PROC IEEE INT CONF S, P736, DOI 10.1109/ICSM.2001.972794
   Kessentini M, 2011, CONF PROC INT SYMP C, P81, DOI 10.1109/ICPC.2011.22
   Kim M., 2010, PROC 18 ACM SIGSOFT, P371, DOI [10.1145/1882291.1882353, DOI 10.1145/1882291.1882353]
   Kremmel T, 2011, APPL SOFT COMPUT, V11, P1416, DOI 10.1016/j.asoc.2010.04.013
   Kukkonen S, 2007, IEEE C EVOL COMPUTAT, P3983
   Mäntylä M, 2003, PROC IEEE INT CONF S, P381, DOI 10.1109/ICSM.2003.1235447
   Marinescu R, 2004, PROC IEEE INT CONF S, P350, DOI 10.1109/ICSM.2004.1357820
   Marinescu R, 2010, EUR CON SFTWR MTNCE, P274, DOI 10.1109/CSMR.2010.44
   Martin Robert C., 2000, Object Mentor, V34, P597
   Meananeatra P, 2012, IEEE INT CONF AUTOM, P406, DOI 10.1145/2351676.2351760
   Mkaouer W, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2729974
   O'Keeffe M, 2008, J SYST SOFTWARE, V81, P502, DOI 10.1016/j.jss.2007.06.003
   Olaechea R, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P92, DOI 10.1145/2648511.2648521
   Ouni A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P347, DOI 10.1109/ICSM.2012.6405292
   Ouni A, 2013, AUTOMAT SOFTW ENG, V20, P47, DOI 10.1007/s10515-011-0098-8
   Palomba F, 2013, IEEE INT CONF AUTOM, P268, DOI 10.1109/ASE.2013.6693086
   Piveta EK, 2006, J UNIVERS COMPUT SCI, V12, P811
   Praditwong K, 2011, IEEE T SOFTWARE ENG, V37, P264, DOI 10.1109/TSE.2010.26
   Rachmawati L, 2009, IEEE T EVOLUT COMPUT, V13, P810, DOI 10.1109/TEVC.2009.2017515
   Ramírez A, 2014, GECCO'14: PROCEEDINGS OF THE 2014 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1287, DOI 10.1145/2576768.2598310
   Rodríguez D, 2011, GECCO-2011: PROCEEDINGS OF THE 13TH ANNUAL GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1883
   Sarro F, 2012, P 27 ANN ACM S APPL, P1221, DOI DOI 10.1145/2245276.2231968
   Sayyad AS, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P492, DOI 10.1109/ICSE.2013.6606595
   Sayyad AS, 2013, IEEE INT CONF AUTOM, P465, DOI 10.1109/ASE.2013.6693104
   Seng O, 2006, GECCO 2006: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1909
   Shatnawi R., 2011, Internat. J. Software Eng. Applicat., P127
   Singh HK, 2011, IEEE T EVOLUT COMPUT, V15, P539, DOI 10.1109/TEVC.2010.2093579
   Tahvildari L, 2003, J SYST SOFTWARE, V66, P225, DOI 10.1016/S0164-1212(02)00082-1
   Thiele L, 2009, EVOL COMPUT, V17, P411, DOI 10.1162/evco.2009.17.3.411
   Tsantalis N, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P329
   van Emden E, 2002, NINTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P97, DOI 10.1109/WCRE.2002.1173068
   Wada H, 2008, IEEE CONGRESS ON SERVICES 2008, PT I, PROCEEDINGS, P368, DOI 10.1109/SERVICES-1.2008.77
   Wang R, 2013, IEEE T EVOLUT COMPUT, V17, P474, DOI 10.1109/TEVC.2012.2204264
   Xin Yao, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P4, DOI 10.1007/978-3-642-39742-4_2
   Yang SX, 2013, IEEE T EVOLUT COMPUT, V17, P721, DOI 10.1109/TEVC.2012.2227145
   Zhang QF, 2007, IEEE T EVOLUT COMPUT, V11, P712, DOI 10.1109/TEVC.2007.892759
   Zhuang L, 2007, I C WIREL COMM NETW, P735, DOI 10.1109/WICOM.2007.190
   Zitzler E, 2004, LECT NOTES COMPUT SC, V3242, P832
NR 83
TC 53
Z9 68
U1 0
U2 13
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2016
VL 21
IS 6
BP 2503
EP 2545
DI 10.1007/s10664-015-9414-4
PG 43
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ED7XQ
UT WOS:000389085500009
DA 2024-07-18
ER

PT J
AU Tan, L
   Liu, C
   Li, ZM
   Wang, XH
   Zhou, YY
   Zhai, CX
AF Tan, Lin
   Liu, Chen
   Li, Zhenmin
   Wang, Xuanhui
   Zhou, Yuanyuan
   Zhai, Chengxiang
TI Bug characteristics in open source software
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software bug characteristics; Empirical study; Software reliability;
   Open source; Bug detection
ID SUPPORT; ERRORS; FAULTS
AB To design effective tools for detecting and recovering from software failures requires a deep understanding of software bug characteristics. We study software bug characteristics by sampling 2,060 real world bugs in three large, representative open-source projects-the Linux kernel, Mozilla, and Apache. We manually study these bugs in three dimensions-root causes, impacts, and components. We further study the correlation between categories in different dimensions, and the trend of different types of bugs. The findings include: (1) semantic bugs are the dominant root cause. As software evolves, semantic bugs increase, while memory-related bugs decrease, calling for more research effort to address semantic bugs; (2) the Linux kernel operating system (OS) has more concurrency bugs than its non-OS counterparts, suggesting more effort into detecting concurrency bugs in operating system code; and (3) reported security bugs are increasing, and the majority of them are caused by semantic bugs, suggesting more support to help developers diagnose and fix security bugs, especially semantic security bugs. In addition, to reduce the manual effort in building bug benchmarks for evaluating bug detection and diagnosis tools, we use machine learning techniques to classify 109,014 bugs automatically.
C1 [Tan, Lin; Liu, Chen] Univ Waterloo, Waterloo, ON N2L 3G1, Canada.
   [Li, Zhenmin] VMware Inc, Palo Alto, CA 94304 USA.
   [Wang, Xuanhui] Facebook Inc, Menlo Pk, CA 94025 USA.
   [Zhou, Yuanyuan] Univ Calif San Diego, La Jolla, CA 92093 USA.
   [Zhou, Yuanyuan] Pattern Insight Inc, La Jolla, CA 92093 USA.
   [Zhai, Chengxiang] Univ Illinois, Urbana, IL 61801 USA.
C3 University of Waterloo; VMware, Inc.; Facebook Inc; University of
   California System; University of California San Diego; University of
   Illinois System; University of Illinois Urbana-Champaign
RP Tan, L (corresponding author), Univ Waterloo, 200 Univ Ave West, Waterloo, ON N2L 3G1, Canada.
EM lintan@uwaterloo.ca; c92liu@uwaterloo.ca; zhenmin.li@gmail.com;
   xuanhui@gmail.com; yyzhou@cs.ucsd.edu; czhai@cs.illinois.edu
OI Tan, Lin/0000-0002-6690-8332
FU National Science and Engineering Research Council of Canada; United
   States National Science Foundation; United States Department of Energy;
   Google gift grant; Intel gift grant; Division of Computing and
   Communication Foundations; Direct For Computer & Info Scie & Enginr
   [1017804] Funding Source: National Science Foundation
FX We thank Luyang Wang and Yaoqiang Li for classifying some bug reports.
   We thank Shan Lu for the early discussion and feedback. The work is
   partially supported by the National Science and Engineering Research
   Council of Canada, the United States National Science Foundation, the
   United States Department of Energy, a Google gift grant, and an Intel
   gift grant.
CR Adve, 2010, P 32 ACM IEEE INT C, V1, P485, DOI DOI 10.1145/1806799.1806870
   [Anonymous], 2004, Software Engineering and Knowledge Engineering
   [Anonymous], 2013, SUPPORT VECTOR MACHI
   [Anonymous], 2011, Proceedings of the 19th ACM SIGSOFT symposium and the 13th European conference on Foundations of software engineering (FSE'11), DOI [10.1145/2025113.2025121, DOI 10.1145/2025113.2025121]
   [Anonymous], 1990, Software testing techniques {
   [Anonymous], 2007, P 22 IEEE ACM INT C, DOI DOI 10.1145/1321631.1321639
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Aranda J, 2009, PROC INT CONF SOFTW, P298, DOI 10.1109/ICSE.2009.5070530
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   BASILI VR, 1984, COMMUN ACM, V27, P42, DOI 10.1145/69605.2085
   Bird C, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P121, DOI 10.1145/1595696.1595716
   Bougie Gargi, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P106, DOI 10.1109/MSR.2010.5463291
   Canfora G., 2011, Proceedings of the 8th Working Conference on Mining Software Repositories (MSR'11), P143, DOI DOI 10.1145/1985441.1985463
   Chang CC, 2011, ACM T INTEL SYST TEC, V2, DOI 10.1145/1961189.1961199
   Cheung S.-C., 2011, P 19 ACM SIGSOFT S 1, P15
   CHILLAREGE R, 1991, 13TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P246, DOI 10.1109/ICSE.1991.130649
   Chou Andy, 2001, SOSP, P73, DOI 10.1145/502034.502042
   COMPTON BT, 1990, J SYST SOFTWARE, V12, P199, DOI 10.1016/0164-1212(90)90040-S
   Coverity, 2013, AUT ERR PREV SOURC C
   Cowan C., 2003, IEEE Security & Privacy, V1, P38, DOI 10.1109/MSECP.2003.1176994
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   Dallmeier V., 2007, P 22 IEEE ACM INT C, P433
   Edwards A, 2010, AUTOMAT SOFTW ENG, V17, P347, DOI 10.1007/s10515-010-0068-6
   Endres A., 1975, SIGPLAN Notices, V10, P327, DOI 10.1145/390016.808455
   Engler D., 2001, Operating Systems Review, V35, P57, DOI 10.1145/502059.502041
   Ernst MD, 2001, IEEE T SOFTWARE ENG, V27, P99, DOI 10.1109/32.908957
   Fenton NE, 2000, IEEE T SOFTWARE ENG, V26, P797, DOI 10.1109/32.879815
   Gegick Michael, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P11, DOI 10.1109/MSR.2010.5463340
   German DM, 2006, EMPIR SOFTW ENG, V11, P369, DOI 10.1007/s10664-006-9004-6
   GLASS RL, 1981, IEEE T SOFTWARE ENG, V7, P162, DOI 10.1109/TSE.1981.230831
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Gu WN, 2003, 2003 INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P459
   Guo L, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P417
   Guo PJ, 2010, Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering, P495
   Hafiz M, 2010, THESIS
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Han J., 2001, Data Mining: Concepts and Techniques, V3rd edn
   Hastings Reed., 1992, WINTER USENIX C, P125
   Herraiz I., 2008, Proceedings of the 2008 International Working Conference on Mining Software Repositories. MSR'08, P145
   Joachims T., 2002, LEARNING CLASSIFY TE
   Kaaniche M., 1994, Dependable Computing - EDCC-1. First European Dependable Computing Conference Proceedings, P473
   Kim S, 2006, IEEE INT CONF AUTOM, P81
   Kpodjedo S, 2011, EMPIR SOFTW ENG, V16, P141, DOI 10.1007/s10664-010-9151-7
   Lamkanfi A, 2011, EUR CON SFTWR MTNCE, P249, DOI 10.1109/CSMR.2011.31
   Li Zhenmin, 2006, P 1 WORKSHOP ARCHITE
   Li ZM, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDE '04), P289
   Lu S., 2005, WORKSH EV SOFTW DEF, V5
   Lu S., 2008, EXPT STUDY DISTRIBUT
   Lu S, 2008, ACM SIGPLAN NOTICES, V43, P329, DOI 10.1145/1353536.1346323
   Massacci F, 2011, LECT NOTES COMPUT SC, V6542, P195, DOI 10.1007/978-3-642-19125-1_15
   Matter D, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P131, DOI 10.1109/MSR.2009.5069491
   Memon AM, 2002, COMPUTER, V35, P87, DOI 10.1109/MC.2002.1023795
   Michail A, 2005, PROC INT CONF SOFTW, P107
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Moller K.-H., 1993, Proceedings First International Software Metrics Symposium (Cat. No.93TH0518-1), P82, DOI 10.1109/METRIC.1993.263798
   Neuhaus Stephan, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P111, DOI 10.1109/ISSRE.2010.53
   Ostrand T. J., 2002, Software Engineering Notes, V27, P55, DOI 10.1145/566171.566181
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   OSTRAND TJ, 1984, J SYST SOFTWARE, V4, P289, DOI 10.1016/0164-1212(84)90028-1
   Ozment Andy, 2006, P 15 C USENIX SEC S, V15
   Pamela B, 2011, P 8 WORK C MIN SOFTW
   Pamela B, 2010, P 2010 IEEE INT C SO
   Panjer LucasD., 2007, Proceedings of the 4th International Workshop on Mining Software Repositories, MSR '07, P29
   Park S, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P177
   Park S, 2009, ACM SIGPLAN NOTICES, V44, P25, DOI 10.1145/1508284.1508249
   Payne C, 2002, INFORM SYST J, V12, P61, DOI 10.1046/j.1365-2575.2002.00118.x
   Philipp S, 2008, P 2008 INT C COMP IN
   Pighin M, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P206, DOI 10.1109/ISESE.2003.1237979
   Podgurski A, 2003, PROC INT CONF SOFTW, P465, DOI 10.1109/ICSE.2003.1201224
   Quinlan R., 1993, C4 5 PROGRAMS MACHIN
   Runeson P, 2007, PROC INT CONF SOFTW, P499
   Shihab E., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P249, DOI 10.1109/WCRE.2010.36
   Shin Y, 2012, EMPIR SOFTW ENG, V17, P390, DOI 10.1007/s10664-011-9165-9
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Sullivan M., 1991, Digest of Papers. Fault-Tolerant Computing: Twenty-First International Symposium (Cat. No.91CH2985-0), P2, DOI 10.1109/FTCS.1991.146625
   SULLIVAN M, 1992, FTCS-22 : THE TWENTY-SECOND INTERNATIONAL SYMPOSIUM ON FAULT-TOLERANT COMPUTING, P475
   Sun Chengnian, 2010, P 32 ACMIEEE INT C S, V1, P45, DOI [DOI 10.1145/1806799, 10.1145/1806799.1806811]
   Swift M. M., 2003, Operating Systems Review, V37, P207, DOI 10.1145/1165389.945466
   Syed A, 2010, P 2010 ACM IEEE INT
   Tan L, 2011, P 33 INT C SOFTW ENG
   Tan L, 2007, P 21 ACM S OP SYST P
   Tang Yan, 2008, P 2008 USENIX ANN TE, P307
   Tian Y, 2008, P INT C SOFTW ENG
   Walpole J, 2000, IEEE DISCEX
   Wang XY, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P461, DOI 10.1145/1368088.1368151
   Weyuker EJ, 2010, EMPIR SOFTW ENG, V15, P277, DOI 10.1007/s10664-009-9111-2
   woo Park J, 2011, P 25 C ART INT
   Ying ATT, 2004, IEEE T SOFTWARE ENG, V30, P574, DOI 10.1109/TSE.2004.52
   Zaman S., 2011, Proceedings of the 8th working conference on mining software repositories, P93, DOI [10.1145/1985441.1985457, DOI 10.1145/1985441.1985457]
NR 89
TC 152
Z9 168
U1 3
U2 34
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2014
VL 19
IS 6
BP 1665
EP 1705
DI 10.1007/s10664-013-9258-8
PG 41
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AR9QU
UT WOS:000343910700004
DA 2024-07-18
ER

PT J
AU Mohagheghi, P
   Gilani, W
   Stefanescu, A
   Fernandez, MA
AF Mohagheghi, Parastoo
   Gilani, Wasif
   Stefanescu, Alin
   Fernandez, Miguel A.
TI An empirical study of the state of the practice and acceptance of
   model-driven engineering in four industrial cases
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Model-driven engineering; Empirical study; Technology acceptance model;
   Qualitative study; Survey
ID EXPERIENCES
AB Model-Driven Engineering (MDE) has been promoted for many years as a means for handling the complexity of software development by raising the abstraction level and automating labor-intensive and error-prone tasks. However, there is little empirical evidence of the acceptance of MDE in industry which is the subject of this paper. The goal of this empirical study was to investigate the state of the practice of applying MDE and factors considered as important for its adoption. The subjects were developers of four large companies participating in a research project. The collected data came from multiple sources and covered the results of tool evaluations, interviews, and a survey. Among the factors, we found perceived usefulness, ease of use and the maturity of the tools to be important determinants for the adoption of MDE. We also discuss challenges with adopting MDE and present suggestions on how to succeed with the adoption process.
C1 [Mohagheghi, Parastoo] SINTEF, Oslo, Norway.
   [Mohagheghi, Parastoo] Norwegian Univ Sci & Technol, Oslo, Norway.
   [Gilani, Wasif] SAP Res Ctr, Belfast, Antrim, North Ireland.
   [Stefanescu, Alin] Univ Pitesti, Dept Comp Sci, Pitesti, Romania.
   [Fernandez, Miguel A.] Ericsson, Valladolid, Spain.
C3 SINTEF; Norwegian University of Science & Technology (NTNU); National
   University of Science & Technology POLITEHNICA Bucharest; University of
   Pitesti; Ericsson
RP Mohagheghi, P (corresponding author), SINTEF, Oslo, Norway.
EM parastoo.mohagheghi@sintef.no; wasif.gilani@sap.com;
   alin.stefanescu@upit.ro; miguel.a.fernandez@ericsson.com
RI Stefanescu, Alin/GVT-2423-2022; Stefanescu, Alin/B-8580-2012
OI Stefanescu, Alin/0000-0002-8418-2643; 
FU MODELPLEX project [34081, IST-FP6-2006]; European Commission [257793];
   REMICS project; CNCS-UEFISCDI grant [7/05.08.20]
FX This work has been partially supported by the MODELPLEX project
   (IST-FP6-2006 Contract No. 34081, co-funded by the European Commission
   as part of the 6th Framework Program), REMICS project (funded by the
   European Commission, contract number 257793, within the 7th Framework
   Program) and by CNCS-UEFISCDI grant no. 7/05.08.20.
CR [Anonymous], 2002, RES DESIGN QUALITATI
   [Anonymous], 2008, REPORTS REVISED SELE, DOI DOI 10.1007/978-3-642-01648-6_6
   DAVIS FD, 1989, MANAGE SCI, V35, P982, DOI 10.1287/mnsc.35.8.982
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   Dybå T, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P220, DOI 10.1109/METRIC.2004.1357905
   Evans A, 2009, LECT NOTES COMPUT SC, V5562, P301, DOI 10.1007/978-3-642-02674-4_22
   France R, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P37, DOI 10.1109/FOSE.2007.14
   Kirstan S, 2010, P ECMFA 2010 WORKSH, P18
   MODELWARE, 2006, DEL D5 3 1 IND ROI A
   Moe N. B., 2006, Software Process Improvement and Practice, V11, P21, DOI 10.1002/spip.250
   Mohagheghi P, 2010, 5 C2M EEMDD WORKSH E, P6
   Mohagheghi P, 2008, LECT NOTES COMPUT SC, V5095, P432, DOI 10.1007/978-3-540-69100-6_31
   Riemenschneider CK, 2002, IEEE T SOFTWARE ENG, V28, P1135, DOI 10.1109/TSE.2002.1158287
   Staron M, 2006, LECT NOTES COMPUT SC, V4199, P57
   Walderhaug S, 2008, P COD CTR MOD CTR SO
   Yin RK, 2002, Applied Social Research Methods Series, V34
NR 16
TC 83
Z9 90
U1 0
U2 23
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2013
VL 18
IS 1
BP 89
EP 116
DI 10.1007/s10664-012-9196-x
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 064IW
UT WOS:000313069300004
DA 2024-07-18
ER

PT J
AU Li, ZD
   Madhavji, NH
   Murtaza, SS
   Gittens, M
   Miranskyy, AV
   Godwin, D
   Cialini, E
AF Li, Zude
   Madhavji, Nazim H.
   Murtaza, Syed Shariyar
   Gittens, Mechelle
   Miranskyy, Andriy V.
   Godwin, David
   Cialini, Enzo
TI Characteristics of multiple-component defects and architectural
   hotspots: a large system case study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software architecture; Architectural hotspot; Multiple-component
   defects; Large legacy system; Case study; Architectural quality;
   Software maintenance
ID SOFTWARE ARCHITECTURE; QUANTITATIVE-ANALYSIS; DESIGN; FAULTS
AB The architecture of a large software system is widely considered important for such reasons as: providing a common goal to the stakeholders in realising the envisaged system; helping to organise the various development teams; and capturing foundational design decisions early in the development. Studies have shown that defects originating in system architectures can consume twice as much correction effort as that for other defects. Clearly, then, scientific studies on architectural defects are important for their improved treatment and prevention. Previous research has focused on the extent of architectural defects in software systems. For this paper, we were motivated to ask the following two complementary questions in a case study: (i) How do multiple-component defects (MCDs)-which are of architectural importance-differ from other types of defects in terms of (a) complexity and (b) persistence across development phases and releases? and (ii) How do highly MCD-concentrated components (the so called, architectural hotspots) differ from other types of components in terms of their (a) interrelationships and (b) persistence across development phases and releases? Results indicate that MCDs are complex to fix and are persistent across phases and releases. In comparison to a non-MCD, a MCD requires over 20 times more changes to fix it and is 6 to 8 times more likely to cross a phase or a release. These findings have implications for defect detection and correction. Results also show that 20% of the subject system's components contain over 80% of the MCDs and that these components are 2-3 times more likely to persist across multiple system releases than other components in the system. Such MCD-concentrated components constitute architectural "hotspots" which management can focus upon for preventive maintenance and architectural quality improvement. The findings described are from an empirical study of a large legacy software system of size over 20 million lines of code and age over 17 years.
C1 [Li, Zude] Cent S Univ, Sch Informat Sci & Engn, Changsha, Hunan, Peoples R China.
   [Li, Zude; Madhavji, Nazim H.; Murtaza, Syed Shariyar; Gittens, Mechelle] Univ Western Ontario, Dept Comp Sci, London, ON, Canada.
   [Miranskyy, Andriy V.; Godwin, David; Cialini, Enzo] IBM Canada Ltd, Toronto, ON, Canada.
C3 Central South University; Western University (University of Western
   Ontario); International Business Machines (IBM)
RP Li, ZD (corresponding author), Univ Western Ontario, Dept Comp Sci, London, ON, Canada.
EM zli263@csd.uwo.ca; madhavji@csd.uwo.ca; smurtaza@csd.uwo.ca;
   mechelle@csd.uwo.ca; andriy@ca.ibm.com; godwin@ca.ibm.com;
   ecialini@ca.ibm.com
OI Madhavji, Nazim/0009-0006-5207-3203
FU Natural Science and Engineering Research Council (NSERC) of Canada;
   Centre for Advanced Studies, IBM Canada
FX This paper is an enhanced version of paper (Li et al. 2009). This
   research is, in part, supported by research grants from Natural Science
   and Engineering Research Council (NSERC) of Canada and the Centre for
   Advanced Studies, IBM Canada.
CR Abdelmoez W, 2004, PROC IEEE INT CONF S, P517, DOI 10.1109/ICSM.2004.1357860
   ADAMS EN, 1984, IBM J RES DEV, V28, P2, DOI 10.1147/rd.281.0002
   Andersson C, 2007, IEEE T SOFTWARE ENG, V33, P273, DOI 10.1109/TSE.2007.1005
   Andrews A, 2001, SOFTWARE QUAL J, V9, P195, DOI 10.1023/A:1013353520454
   [Anonymous], MANUAL POLITICAL EC
   [Anonymous], 2002, P 2002 ACM SIGSOFT I
   [Anonymous], 2002, RES DESIGN QUALITATI
   [Anonymous], 2005, BEST PRACTICES SOFTW, DOI DOI 10.1007/3-540-26734-4_9
   BACHMANN F, 2003, CMUSEI2003TR021
   BASILI V, 2005, P INT SOFTW PROC WOR, P1
   BASILI VR, 1984, COMMUN ACM, V27, P42, DOI 10.1145/69605.2085
   Bass L., 2013, SOFTWARE ARCHITECTUR
   BASS L, 2008, ICSE WORKSH LEIPZ GE
   Bertolino A., 1996, 2 INT SOFTW ARCH WOR, P62
   Boehm B, 2001, COMPUTER, V34, P135, DOI 10.1109/2.962984
   Booch B, 2008, IEEE SOFTWARE, V25, P93
   Booch G, 2007, IEEE SOFTWARE, V24, P24, DOI 10.1109/MS.2007.122
   CHIKOFSKY EJ, 1990, IEEE SOFTWARE, V7, P13, DOI 10.1109/52.43044
   CHILLAREGE R, 1992, IEEE T SOFTWARE ENG, V18, P943, DOI 10.1109/32.177364
   CLEMENTS P, 1996, CMUSEI96TR003
   Clements P., 2002, DOCUMENTING SOFTWARE
   COMPTON BT, 1990, J SYST SOFTWARE, V12, P199, DOI 10.1016/0164-1212(90)90040-S
   Dobrica L, 2002, IEEE T SOFTWARE ENG, V28, P638, DOI 10.1109/TSE.2002.1019479
   EBERT C, 1997, ACM SIGSOFT SOFTWARE, V22, P278
   El-Ramly M., 2006, 28th International Conference on Software Engineering Proceedings, P699, DOI 10.1145/1134285.1134395
   Endres A., 1975, An analysis of errors and their causes in system programs, V10, P327, DOI DOI 10.1145/390016.808455
   Fahmy H, 2000, PROC IEEE INT CONF S, P88, DOI 10.1109/ICSM.2000.883020
   Fanta R, 1999, J SOFTW MAINT-RES PR, V11, P223, DOI 10.1002/(SICI)1096-908X(199907/08)11:4<223::AID-SMR194>3.0.CO;2-D
   Fenton NE, 2000, IEEE T SOFTWARE ENG, V26, P797, DOI 10.1109/32.879815
   Fowler M, 2003, IEEE SOFTWARE, V20, P11, DOI 10.1109/MS.2003.1231144
   Gittens M, 2005, P INT COMP SOFTW APP, P179
   GRUNBACHER P, 2001, SOFTWARE SYSTEMS MOD, P202
   INVERARDI P, 1995, IEEE T SOFTWARE ENG, V21, P373, DOI 10.1109/32.385973
   Jansen A, 2006, 5TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P109
   Kazman Rick., 2002, Architecture reconstruction guidelines, third editions, technical report, cmu/sei-2002-tr-034
   KULKARNI S, 2008, THESIS U W ONTARIO
   Leszak M., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P428, DOI 10.1109/ICSE.2000.870433
   Li ZD, 2009, PROC IEEE INT CONF S, P265, DOI 10.1109/ICSM.2009.5306307
   Muccini H, 2006, J SYST SOFTWARE, V79, P1379, DOI 10.1016/j.jss.2006.02.059
   Nagappan N., 2006, P 28 INT C SOFTW ENG, P452, DOI DOI 10.1145/1134285.1134349
   NAKAJO T, 1991, IEEE T SOFTWARE ENG, V17, P830, DOI 10.1109/32.83917
   Nedstam J, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P27
   Ohlsson MC, 1998, PROC IEEE INT CONF S, P6, DOI 10.1109/ICSM.1998.738484
   Ohlsson N, 1996, IEEE T SOFTWARE ENG, V22, P886, DOI 10.1109/32.553637
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   Perry D. E., 1987, Proceedings of the Twentieth Hawaii International Conference on System Sciences 1987, P113
   Schroter A., 2006, P 5 INT S EMP SOFTW
   Shin ME, 2006, SCI COMPUT PROGRAM, V61, P16, DOI 10.1016/j.scico.2005.11.002
   Stringfellow C, 2006, INFORM SOFTWARE TECH, V48, P484, DOI 10.1016/j.infsof.2005.05.007
   VALENTI S, 2002, SUCCESSFUL SOFTWARE
   VONMAYRHAUSER A, 2000, J SOFTWARE MAINTENAN, V12, P287
   Weiss D. M., 1979, Journal of Systems and Software, V1, P57, DOI 10.1016/0164-1212(79)90005-0
   WEISS DM, 1985, IEEE T SOFTWARE ENG, V11, P157, DOI 10.1109/TSE.1985.232190
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Ying ATT, 2004, IEEE T SOFTWARE ENG, V30, P574, DOI 10.1109/TSE.2004.52
   YU TJ, 1988, IEEE T SOFTWARE ENG, V14, P1261, DOI 10.1109/32.6170
   Yu WD, 1998, BELL LABS TECH J, V3, P3, DOI 10.1002/bltj.2101
   Zimmermann T, 2004, PROC INT CONF SOFTW, P563, DOI 10.1109/ICSE.2004.1317478
NR 58
TC 13
Z9 13
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2011
VL 16
IS 5
SI SI
BP 667
EP 702
DI 10.1007/s10664-011-9155-y
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 808LJ
UT WOS:000293978900005
DA 2024-07-18
ER

PT J
AU Kitchenham, BA
   Brereton, P
   Turner, M
   Niazi, MK
   Linkman, S
   Pretorius, R
   Budgen, D
AF Kitchenham, Barbara A.
   Brereton, Pearl
   Turner, Mark
   Niazi, Mahmood K.
   Linkman, Stephen
   Pretorius, Rialette
   Budgen, David
TI Refining the systematic literature review process-two
   participant-observer case studies
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Systematic literature review; Mapping studies; Broad search; Targeted
   search; Manual search; Automated search; Case Study; Quality evaluation
   process
ID SOFTWARE-DEVELOPMENT; COMPUTER-SCIENCE; INDICATORS
AB Systematic literature reviews (SLRs) are a major tool for supporting evidence-based software engineering. Adapting the procedures involved in such a review to meet the needs of software engineering and its literature remains an ongoing process. As part of this process of refinement, we undertook two case studies which aimed 1) to compare the use of targeted manual searches with broad automated searches and 2) to compare different methods of reaching a consensus on quality. For Case 1, we compared a tertiary study of systematic literature reviews published between January 1, 2004 and June 30, 2007 which used a manual search of selected journals and conferences and a replication of that study based on a broad automated search. We found that broad automated searches find more studies than manual restricted searches, but they may be of poor quality. Researchers undertaking SLRs may be justified in using targeted manual searches if they intend to omit low quality papers, or they are assessing research trends in research methodologies. For Case 2, we analyzed the process used to evaluate the quality of SLRs. We conclude that if quality evaluation of primary studies is a critical component of a specific SLR, assessments should be based on three independent evaluators incorporating at least two rounds of discussion.
C1 [Kitchenham, Barbara A.; Brereton, Pearl; Turner, Mark; Niazi, Mahmood K.; Linkman, Stephen] Keele Univ, Sch Comp & Math, Stoke On Trent ST5 5BG, Staffs, England.
   [Pretorius, Rialette; Budgen, David] Univ Durham, Sch Engn & Comp Sci, Durham DH1 3LE, England.
C3 Keele University; Durham University
RP Kitchenham, BA (corresponding author), Keele Univ, Sch Comp & Math, Stoke On Trent ST5 5BG, Staffs, England.
EM b.a.kitchenham@cs.keele.ac.uk
RI Kitchenham, Barbara/AAL-4311-2020; Niazi, Mahmood/C-8873-2015
OI Kitchenham, Barbara/0000-0002-6134-8460; Niazi,
   Mahmood/0000-0001-7318-7644; Budgen, David/0000-0001-7143-0241
FU UK Engineering and Physical Sciences Research Council [EPIC/E046983/1];
   EPSRC [EP/E046983/1, EP/E049184/1] Funding Source: UKRI
FX This study was funded by the UK Engineering and Physical Sciences
   Research Council project EPIC/E046983/1. We thank the anonymous
   reviewers for their helpful comments.
CR [Anonymous], 2005, SYSTEMATIC REV SOCIA
   [Anonymous], 2000, READ PAPER BASICS EV
   Bailey John, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P482
   BARCELOS RF, 2006, IB AM WORKSH REQ ENG
   Beecham S, 2008, INFORM SOFTWARE TECH, V50, P860, DOI 10.1016/j.infsof.2007.09.004
   BORNMANN L, 2010, RELIABILITY GE UNPUB
   BRERETON OP, 2007, EPIC200704
   Brereton P., 2008, P EASE 2008 BCS EWIC
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   *CTR REV DISS, 2007, WHAT CRIT INCL REV D
   Davis A, 2007, LECT NOTES COMPUT SC, V4542, P129
   Davis A, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P179
   DEBOER RC, 2008, SHARK, P71
   Dyba T, 2005, IEEE SOFTWARE, V22, P58, DOI 10.1109/MS.2005.6
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Feller J, 2006, INT FED INFO PROC, V208, P261
   Fink A., 2005, CONDUCTING RES LIT R
   Freitas A, 2007, J HIGH ENERGY PHYS, DOI 10.1088/1126-6708/2007/07/025
   Glass RL, 2002, INFORM SOFTWARE TECH, V44, P491, DOI 10.1016/S0950-5849(02)00049-6
   Gómez O, 2008, COMM COM INF SC, V10, P165
   GRIMSTAD S, 2005, 11 IEEE INT SOFTW ME, P3
   Hannay JE, 2008, IEEE T SOFTWARE ENG, V34, P242, DOI 10.1109/TSE.2008.13
   Hanssen GK, 2007, LECT NOTES COMPUT SC, V4764, P7
   Harjumaa L, 2008, LECT NOTES COMPUT SC, V5089, P230, DOI 10.1007/978-3-540-69566-0_20
   Höfer A, 2007, LECT NOTES COMPUT SC, V4336, P10
   HOSBOND JH, 2005, P IFIP 8 2 ANN C
   HOST M, 2005, ICSE 05 P 27 INT C S
   Jefferies C, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P258
   Jorgensen M, 2005, IEEE T SOFTWARE ENG, V31, P942, DOI 10.1109/TSE.2005.128
   Jorgensen M, 2004, J SYST SOFTWARE, V70, P37, DOI 10.1016/S0164-1212(02)00156-5
   JORGENSEN M, 2005, 11 IEEE INT SOFTW ME, P24
   Jorgensen M, 2007, INT J FORECASTING, V23, P449, DOI 10.1016/j.ijforecast.2007.05.008
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Juristo N, 2006, IEEE SOFTWARE, V23, P72, DOI 10.1109/MS.2006.166
   Kagdi H, 2007, J SOFTW MAINT EVOL-R, V19, P77, DOI 10.1002/smr.344
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Khan K.S., 2003, SYSTEMATIC REV SUPPO
   KITCHENHAM B, 2010, SYSTEMATIC IN PRESS
   Kitchenham B, 2004, Procedures for Undertaking Systematic Reviews
   KITCHENHAM B, 2009, P EASE 2009 BCS EWIC
   Kitchenham B. A., 2008, EBSE2008006 EPIC
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   KITCHENHAM BA, 2010, EASE 2010
   KITCHENHAM BA, 2007, EBSEEPIC200701
   KITCHENHAM BA, 2008, EPIC2009007
   Kitchenham B, 2009, INT SYMP EMP SOFTWAR, P337, DOI 10.1109/esem.2009.5314238
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kitchenham BA, 2007, IEEE T SOFTWARE ENG, V33, P316, DOI 10.1109/TSE.2007.1101
   Liebchen G. A., 2008, P 4 INT WORKSH PRED, P39, DOI [10.1145/1370788.1370799, DOI 10.1145/1370788.1370799]
   MACDONELL S, 2007, P EMP SOFTW ENG MEAS
   MAIR M, 2005, PROMISE 05 WORKSH
   Martin BR, 1996, SCIENTOMETRICS, V36, P343, DOI 10.1007/BF02129599
   MARTIN BR, 1983, RES POLICY, V12, P61, DOI 10.1016/0048-7333(83)90005-7
   Mohagheghi P, 2008, LECT NOTES COMPUT SC, V5095, P432, DOI 10.1007/978-3-540-69100-6_31
   Mohagheghi P, 2007, EMPIR SOFTW ENG, V12, P471, DOI 10.1007/s10664-007-9040-x
   NETO AD, 2008, IEEE SOFTWARE, V25, P242
   Pino FJ, 2008, SOFTWARE QUAL J, V16, P237, DOI 10.1007/s11219-007-9038-z
   Bellini CGP, 2008, INT J SOFTW ENG KNOW, V18, P37, DOI 10.1142/S021819400800357X
   Ramesh V, 2004, J SYST SOFTWARE, V70, P165, DOI [10.1016/S0164-1212(03)00015-3, 10.1016/S0164-1212(03)00014-1]
   Renger M, 2008, LECT NOTES BUS INF P, V10, P61
   SEGAL J, 2005, REBSE 05
   Shaw M, 2006, CMUISRI06101 CARN ME
   SHEPPERD M, 2007, FOSE 07
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Staples M, 2008, INFORM SOFTWARE TECH, V50, P605, DOI 10.1016/j.infsof.2007.07.003
   TICHY WF, 1995, J SYST SOFTWARE, V28, P9, DOI 10.1016/0164-1212(94)00111-Y
   Torchiano M, 2004, IEEE SOFTWARE, V21, P88, DOI 10.1109/MS.2004.1270770
   TURNER M, 2008, P EASE 2008 BCS EWIC
   WELLER AC, 2001, ASSIST MONOGRAPH SER
   Wicks MN, 2007, J SYST SOFTWARE, V80, P1569, DOI 10.1016/j.jss.2007.03.089
   YALAHO A, 2006, 10 INT ENT DISTR OBJ
   Yin R.K., 2011, Qualitative research from start to finish
   Zhang H, 2008, LECT NOTES COMPUT SC, V5007, P345, DOI 10.1007/978-3-540-79588-9_30
NR 73
TC 65
Z9 67
U1 1
U2 14
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2010
VL 15
IS 6
BP 618
EP 653
DI 10.1007/s10664-010-9134-8
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 653OB
UT WOS:000282100100003
DA 2024-07-18
ER

PT J
AU El-Attar, M
   Miller, J
AF El-Attar, Mohamed
   Miller, James
TI A subject-based empirical evaluation of SSUCD's performance in reducing
   inconsistencies in use case models
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Subject-based experiment; Non-parametric analysis; Use cases; SSUCD;
   Inconsistencies; Quality attributes
AB The problem of inconsistencies in Use Case models has plagued practitioners over the years and has been a topic of interest for many researchers. In Use Case driven approaches, the damaging effects of inconsistencies escalate as inconsistencies have a detrimental influence on every aspect of the development process. The repercussions of inconsistencies have been well documented, but little progress has been made towards reducing and remedying their effects. This paper presents a controlled experiment, which evaluates the reduction of inconsistencies resulting from deploying a new structure called (Simple Structured Use Case Descriptions) SSUCD, which is used to assist with the development of Use Case descriptions. This experiment also investigates the impact of improving consistency amongst Use Case models on other key Use Case modeling quality attributes. The results of this experiment demonstrate that using SSUCD leads to an improvement in consistency between use case models and their associated descriptions.
C1 [El-Attar, Mohamed; Miller, James] Univ Alberta, Dept Elect & Comp Engn, STEAM Lab, Edmonton, AB T6G 2V4, Canada.
C3 University of Alberta
RP Miller, J (corresponding author), Univ Alberta, Dept Elect & Comp Engn, STEAM Lab, 9107-116 St, Edmonton, AB T6G 2V4, Canada.
EM jm@ece.ualberta.ca
RI El-Attar, Mohamed/C-4329-2015
OI El-Attar, Mohamed/0000-0002-6709-8212
CR Anda B., 2002, SEKE 02, P127
   ANDA B, 2001, P 15 EUR C OBJ OR PR, P402
   Arisholm E, 2006, IEEE T SOFTWARE ENG, V32, P365, DOI 10.1109/TSE.2006.59
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Cliff N, 1996, MULTIVAR BEHAV RES, V31, P331, DOI 10.1207/s15327906mbr3103_4
   Harwood RJ, 1997, J OBJECT-ORIENT PROG, V9, P54
   HESS MR, 2005, ANNU M AM EDUC RES, P36
   Jaaksi A, 1998, J OBJECT-ORIENT PROG, V10, P58
   Kromrey J.D., 2005, American Statistical Association 2005 Joint Statistical Meetings, P7
   Kromrey J.D., 1998, Multiple Linear Regression Viewpoints, V25, P70
   Mattingly L, 1998, J OBJECT-ORIENT PROG, V11, P77
   Ren S., 2004, P 6 INT C ENTERPRISE, P173
   SHAPIRO SS, 1972, TECHNOMETRICS, V14, P355, DOI 10.2307/1267427
   [No title captured]
   [No title captured]
NR 15
TC 13
Z9 14
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2009
VL 14
IS 5
BP 477
EP 512
DI 10.1007/s10664-008-9101-9
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 477UG
UT WOS:000268543800001
DA 2024-07-18
ER

PT J
AU Jung, HW
   Goldenson, DR
AF Jung, Ho-Won
   Goldenson, Dennis R.
TI The internal consistency and precedence of key process areas in the
   capability maturity model for software
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Cronbach's alpha; convergent and discriminant validities;
   dimensionality; factor analysis; internal consistency; partial least
   squares; SW-CMM
ID RELIABILITY
AB Evaluating the reliability of maturity level (ML) ratings is crucial for providing confidence in the results of software process assessments. This study investigates the dimensions underlying the maturity construct in the Capability Maturity Model (CMM) for Software (SW-CMM) and estimates the internal consistency of each dimension. The results suggest that SW-CMM maturity is a three-dimensional construct, with "Project Implementation" representing the ML 2 key process areas (KPAs), "Organization Implementation" representing the ML 3 KPAs, and "Quantitative Process Implementation" representing the KPAs at MLs 4 and 5. The internal consistency for each of the three dimensions as estimated by Cronbach's alpha exceeds the recommended value of 0.9. Based on those results, this study builds and tests a theoretical model which posits that the achievement of lower ML KPAs sustains the implementation of higher ML KPAs. Results of path analysis using partial least squares (PLS) support the theoretical model and provide detailed understanding of the process improvement path. The analysis is based on 676 CMM-Based Appraisal for Internal Process Improvement (CBA IPI) assessments.
C1 [Jung, Ho-Won] Korea Univ, Sch Business, Dept Business, Seoul 136701, South Korea.
   [Goldenson, Dennis R.] Carnegie Mellon Univ, Inst Software Engn, Pittsburgh, PA 15213 USA.
C3 Korea University; Software Engineering Institute; Carnegie Mellon
   University
RP Jung, HW (corresponding author), Korea Univ, Sch Business, Dept Business, Anam Dong 5Ka, Seoul 136701, South Korea.
EM hwjung@korea.ac.kr; dg@sei.cmu.edu
CR ANDERSON JC, 1991, J APPL PSYCHOL, V76, P732, DOI 10.1037/0021-9010.76.5.732
   [Anonymous], 1994, The Capability Maturity Model: Guidelines for Improving the Software Process
   [Anonymous], 1980, MEASURING ASSESSING
   BOLLINGER TB, 1991, IEEE SOFTWARE, V8, P25, DOI 10.1109/52.300034
   BRODMAN J, 1996, CROSSTALK, V9, P23
   CAMPBELL DT, 1959, PSYCHOL BULL, V56, P81, DOI 10.1037/h0046016
   Carmines E.G., 1979, PAPER SERIES QUANTIT, V07-017
   CHIN W. W., STAT STRATEGIES SMAL, P307
   Chin WW, 2003, INFORM SYST RES, V14, P189, DOI 10.1287/isre.14.2.189.16018
   Chin WW, 1998, MIS QUART, V22, pVII
   CLARK B, 1997, THESIS U SO CALIFORN
   COFFMAN A, 1997, CROSSTALK, V10, P25
   Cohen J., 1988, STAT POWER ANAL BEHA
   Comrey A.L., 1973, 1 COURSE FACTOR ANAL
   Cronbach LJ, 1951, PSYCHOMETRIKA, V16, P297
   CURTIS B, 1996, P 1996 SEPG C ATL CI
   DUNAWAY D, 2001, CMUSEI2001TR021
   El Emam K, 2000, ADV COMPUT, V53, P319
   El Emam K, 1998, FIFTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 1998, PROCEEDINGS, P38, DOI 10.1109/METRIC.1998.731225
   El Emam K, 1998, FIFTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 1998, PROCEEDINGS, P72, DOI 10.1109/METRIC.1998.731228
   ELEMAM K, 1995, SOFTWARE PROCESS IMP, V1, P3
   ELEMAM K, 1995, P 2 IEEE INT SOFTW E, P84
   Fayad ME, 1997, COMMUN ACM, V40, P125, DOI 10.1145/265684.265701
   FORNELL C, 1981, J MARKETING RES, V18, P39, DOI 10.2307/3151312
   Fusaro P., 1998, Empirical Software Engineering, V3, P179, DOI 10.1023/A:1008036316053
   Gefen D, 2005, COMMUN ASSOC INF SYS, V16, P91, DOI 10.17705/1CAIS.01605
   GOLDENSON D, 2000, SOFTW ENG S SEPT
   Gray EM, 1998, SOFTWARE QUAL J, V7, P21, DOI 10.1023/A:1008840808887
   HATTIE J, 1985, APPL PSYCH MEAS, V9, P139, DOI 10.1177/014662168500900204
   Herbsleb J, 1997, COMMUN ACM, V40, P30, DOI 10.1145/255656.255692
   HUMPHREY WS, 1991, IEEE SOFTWARE, V8, P42, DOI 10.1109/52.300033
   Igbaria M, 1997, MIS QUART, V21, P279, DOI 10.2307/249498
   *ISO, 1996, 15504 ISOIEC PDTR 1
   Joreskog K. G., 1993, LISREL 8: Structural equation modeling with the SIMPLIS command language
   JUNG HW, 2003, SOFTW PROCESS IMPROV, V8, P169
   JUNG HW, 2001, SOFTWARE PROCESS IMP, V6, P205
   Kotrlik J. W., 2003, Information Technology, Learning, and Performance Journal, V21, P1
   Krishnan MS, 1999, IEEE T SOFTWARE ENG, V25, P800, DOI 10.1109/32.824401
   Kuder GF, 1937, PSYCHOMETRIKA, V2, P151, DOI 10.1007/BF02288391
   Kwok W.C. C., 1998, Journal of Accounting Literature, V17, P137
   LIKERT R, 1934, EFFECTS RELIABILITY
   LISSITZ RW, 1975, J APPL PSYCHOL, V60, P10, DOI 10.1037/h0076268
   Marcoulides GA, 2006, MIS QUART, V30, pIII
   McIver J.P., 1981, SAGE U PAPER SERIES
   Nunnally JC, 1978, PSYCHOMETRIC THEORY, V2nd
   SAIEDIAN H, 1995, COMPUTER, V28, P16, DOI 10.1109/2.362633
   SEI, 2006, CMUSEI2006TR008
   Sharma S., 1996, Applied Multivariate Techniques
   Spector P.E., 1992, SAGE U PAPER SERIES
   Trochim W.M., 2001, Research Methods Knowledge Base, V2
   WERTS CE, 1974, EDUC PSYCHOL MEAS, V34, P25, DOI 10.1177/001316447403400104
   Wold H., 1980, MATH STAT, V6, P333, DOI DOI 10.4064/-6-1-333-346
   Zeller R., 1980, MEASUREMENT SOCIAL S
NR 53
TC 6
Z9 7
U1 1
U2 22
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2008
VL 13
IS 2
BP 125
EP 146
DI 10.1007/s10664-007-9049-1
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 284YB
UT WOS:000254743000002
DA 2024-07-18
ER

PT J
AU Shull, FJ
   Carver, JC
   Vegas, S
   Juristo, N
AF Shull, Forrest J.
   Carver, Jeffrey C.
   Vegas, Sira
   Juristo, Natalia
TI The role of replications in empirical software engineering
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE experimental replications; experimental infrastructure; lab package
ID KNOWLEDGE
AB Replications play a key role in Empirical Software Engineering by allowing the community to build knowledge about which results or observations hold under which conditions. Therefore, not only can a replication that produces similar results as the original experiment be viewed as successful, but a replication that produce results different from those of the original experiment can also be viewed as successful. In this paper we identify two types of replications: exact replications, in which the procedures of an experiment are followed as closely as possible; and conceptual replications, in which the same research question is evaluated by using a different experimental procedure. The focus of this paper is on exact replications. We further explore them to identify two sub-categories: dependent replications, where researchers attempt to keep all the conditions of the experiment the same or very similar and independent replications, where researchers deliberately vary one or more major aspects of the conditions of the experiment. We then discuss the role played by each type of replication in terms of its goals, benefits, and limitations. Finally, we highlight the importance of producing adequate documentation for an experiment (original or replication) to allow for replication. A properly documented replication provides the details necessary to gain a sufficient understanding of the study being replicated without requiring the replicator to slavishly follow the given procedures.
C1 [Carver, Jeffrey C.] Mississippi State Univ, Dept Comp Sci & Engn, Mississippi State, MS 39762 USA.
   [Shull, Forrest J.] Fraunhofer Ctr Expt Software Engn, College Pk, MD USA.
   [Vegas, Sira; Juristo, Natalia] Univ Politecn Madrid, Madrid, Spain.
   [Vegas, Sira; Juristo, Natalia] UPM, Comp Sch, Madrid, Spain.
C3 Mississippi State University; Universidad Politecnica de Madrid;
   Universidad Politecnica de Madrid
RP Carver, JC (corresponding author), Mississippi State Univ, Dept Comp Sci & Engn, Mississippi State, MS 39762 USA.
EM fshull@fc-md.umd.edu; carver@cse.msstate.edu; svegas@fi.upm.es;
   natalia@fi.upm.es
RI Shull, Forrest/GZK-6750-2022; Vegas, Sira/R-6742-2018; Carver,
   Jeffrey/AAM-8202-2020; Carver, Jeffrey/AFP-1987-2022
OI Carver, Jeffrey/0000-0002-7824-9151; Carver, Jeffrey/0000-0002-7824-9151
CR [Anonymous], P INT S EMP SOFTW EN
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Brooks A, 2007, GUIDE ADV EMPIRICAL, P365
   COZBY, 2007, METHODS BEHAV RES
   Lindvall M, 2005, INNOV SYST SOFTW ENG, V1, P3, DOI 10.1007/s11334-005-0007-z
   Miller RG, 2000, NEUROLOGY, V54, P53, DOI 10.1212/WNL.54.1.53
   Shull F, 2004, EMPIR SOFTW ENG, V9, P111, DOI 10.1023/B:EMSE.0000013516.80487.33
NR 7
TC 184
Z9 197
U1 0
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2008
VL 13
IS 2
BP 211
EP 218
DI 10.1007/s10664-008-9060-1
PG 8
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 284YB
UT WOS:000254743000005
DA 2024-07-18
ER

PT J
AU Li, P
   Huynh, T
   Reformat, M
   Miller, J
AF Li, Ping
   Huynh, Toan
   Reformat, Marek
   Miller, James
TI A practical approach to testing GUI systems
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE GUI testing; two-tierd testing; testing; GUI; GUI component; complete
   interaction sequence; event sequence
AB GUI systems are becoming increasingly popular thanks to their ease of use when compared against traditional systems. However, GUI systems are often challenging to test due to their complexity and special features. Traditional testing methodologies are not designed to deal with the complexity of GUI systems; using these methodologies can result in increased time and expense. In our proposed strategy, a GUI system will be divided into two abstract tiers-the component tier and the system tier. On the component tier, a flow graph will be created for each GUI component. Each flow graph represents a set of relationships between the pre-conditions, event sequences and post-conditions for the corresponding component. On the system tier, the components are integrated to build up a viewpoint of the entire system. Tests on the system tier will interrogate the interactions between the components. This method for GUI testing is simple and practical; we will show the effectiveness of this approach by performing two empirical experiments and describing the results found.
C1 Univ Alberta, Dept Elect & Comp Engn, Elect & Comp Engn Res Facil, Edmonton, AB T6G 2V4, Canada.
C3 University of Alberta
RP Li, P (corresponding author), Univ Alberta, Dept Elect & Comp Engn, Elect & Comp Engn Res Facil, Edmonton, AB T6G 2V4, Canada.
EM ping@ece.ualberta.ca; huynh@ece.ualberta.ca; reform@ece.ualberta.ca;
   jm@ece.ualberta.ca
OI Reformat, Marek Z./0000-0003-4783-0717
CR Alexander RT, 2002, 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P341, DOI 10.1109/ISSRE.2002.1173285
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   [Anonymous], RATIONAL ROBOT
   Beizer Boris, 1995, Black-box testing: techniques for functional testing of software and systems
   Belli F, 2001, 12TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P34, DOI 10.1109/ISSRE.2001.989456
   Briand LC, 2004, PROC INT CONF SOFTW, P86, DOI 10.1109/ICSE.2004.1317431
   Delamaro ME, 2001, IEEE T SOFTWARE ENG, V27, P228, DOI 10.1109/32.910859
   ELFARAND IK, 2002, ENCY SOFTWARE ENG
   Frankl PG, 1997, J SYST SOFTWARE, V38, P235, DOI 10.1016/S0164-1212(96)00154-9
   Gerrard Paul., 1997, EuroSTAR'97, P24
   Ma YS, 2002, 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P352, DOI 10.1109/ISSRE.2002.1173287
   MEMON A, 2000, 5 INT C ART INT PLAN, P226
   Memon A. M., 2001, Software Engineering Notes, V26, P256, DOI 10.1145/503271.503244
   Memon AM, 2002, COMPUTER, V35, P87, DOI 10.1109/MC.2002.1023795
   MEMON AM, 2000, P ACM SIGSOFT 8 INT, P30
   MUSA J.D., 1998, SOFTWARE RELIABILITY
   Myers B. A., 1993, P ACM INTERCHI 93 C, P239
   Myers Glenford J., 2011, The Art of Software Testing
   Offutt J., 1995, 12 INT C TEST COMP S, P99
   White L, 2001, 12TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P54, DOI 10.1109/ISSRE.2001.989458
   White L, 2000, 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P110, DOI 10.1109/ISSRE.2000.885865
   White LJ, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P350, DOI 10.1109/ICSM.1996.565038
   GUI CHECKLIST
NR 23
TC 13
Z9 17
U1 2
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2007
VL 12
IS 4
BP 331
EP 357
DI 10.1007/s10664-006-9031-3
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 190JV
UT WOS:000248056000002
DA 2024-07-18
ER

PT J
AU Dag, JNO
   Thelin, T
   Regnell, B
AF Dag, JNO
   Thelin, T
   Regnell, B
TI An experiment on linguistic tool support for consolidation of
   requirements from multiple sources in market-driven product development
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE requirements management; software product development; linguistic
   engineering; natural language requirements
AB This paper presents an experiment with a linguistic support tool for consolidation of requirements sets. The experiment is designed based on the requirements management process at a large market-driven software development company that develops generic solutions to satisfy many different customers. New requirements and requests for information are continuously issued, which must be analyzed and responded to. The new requirements should first be consolidated with the old to avoid reanalysis of previously elicited requirements and to complement existing requirements with new information. In the presented experiment, a new open-source tool is evaluated in a laboratory setting. The tool uses linguistic engineering techniques to calculate similarities between requirements and presents a ranked list of suggested similar requirements, between which links may be assigned. It is hypothesized that the proposed technique for finding and linking similar requirements makes the consolidation more efficient. The results show that subjects that are given the support provided by the tool are significantly more efficient and more correct in consolidating two requirements sets, than are subjects that do not get the support. The results suggest that the proposed techniques may give valuable support and save time in an industrial requirements consolidation process.
C1 Obigo AB, SE-22370 Lund, Sweden.
   Lund Univ, Lund, Sweden.
C3 Lund University
RP Obigo AB, Scheelevagen 17, SE-22370 Lund, Sweden.
EM johan.nattochdag@obigo.com
OI Regnell, Bjorn/0000-0002-9380-6120
CR [Anonymous], P IEEE 1 INT S REQ E
   BRINKKEMPER S, 2004, P 10 ANN INT WORKSH, P267
   Clements P., 2002, Software product lines
   Dag JNO, 2005, IEEE SOFTWARE, V22, P32, DOI 10.1109/MS.2005.1
   Dag JNO, 2004, 12TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P283
   DAG JNO, 2005, ENG MANAGING SOFTWAR
   Hofmann HF, 2001, IEEE SOFTWARE, V18, P58, DOI 10.1109/MS.2001.936219
   Juristo N., 2013, BASICS SOFTWARE ENG
   KARLSSON L, 2002, P 8 INT WORKSH REQ E, P37
   Kotler P., 2002, MARKETING PLACES
   KRUEGER CW, 2003, P 5 INT WORKSH PROD
   LAUESEN S, 2002, SOFTWARE REQUIREMENT
   Mich L, 2004, REQUIR ENG, V9, P40, DOI 10.1007/s00766-003-0179-8
   Montgomery DC., 2001, Design and Analysis of Experiments
   NOVORITA RJ, 1996, P 6 ANN INT S SYST E
   Potts C., 1995, Proceedings of the Second IEEE International Symposium on Requirements Engineering (Cat. No.95TH8040), P128, DOI 10.1109/ISRE.1995.512553
   REGNELL B, 1998, J REQUIREMENTS ENG, V3, P121
   Sawyer P, 1999, VTT SYMP, V195, P222
   Sommerville I, 2001, Software Engineering
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Yeh A. C., 1992, Proceedings of the Second Symposium on Assessment of Quality Software Development Tools (Cat. No.92TH0415-0), P211, DOI 10.1109/AQSDT.1992.205856
   [No title captured]
NR 22
TC 22
Z9 24
U1 0
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2006
VL 11
IS 2
BP 303
EP 329
DI 10.1007/s10664-006-6405-5
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 020RV
UT WOS:000235928900005
DA 2024-07-18
ER

PT J
AU Lindvall, M
   Tvedt, RT
   Costa, P
AF Lindvall, M
   Tvedt, RT
   Costa, P
TI An empirically-based process for software architecture evaluation
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE architectural evaluation; metrics; empirical study
AB Software systems undergo constant change causing the architecture of the system to degenerate over time. Reversing system degeneration takes extra effort and delays the release of the next version. Improved architecture is intangible and does not translate into visible user features that can be marketed. Due to a lack of representative metrics, technical staff has problems arguing that stopping degeneration is indeed necessary and that the effort will result in an improved architecture that will pay off. We believe that architectural metrics would give technical staff better tools to demonstrate that the architecture has improved. This paper defines and uses a set of architectural metrics and outlines a process for analyzing architecture to support such an argument.
   The paper reports on a case study from a project where we restructured the architecture of an existing client-server system written in Java while adding new functionality. The modules of the existing version of the system were "library-oriented" and had a disorganized communication structure. The new architecture is based on components and utilizes the mediator design pattern. The goal of the study is to evaluate the new architecture from a maintainability perspective. The paper describes our evaluation process, the metrics used, and provides some preliminary results. The architectural evaluation shows that the components of the system are only loosely coupled to each other and that an architectural improvement has occurred from a maintenance perspective. The process used to evaluate the architecture is general and can be reused in other contexts.
C1 Fraunhofer Ctr Expt Software Engn, College Pk, MD USA.
   Washington Coll, Chestertown, MD USA.
C3 Washington College
RP Fraunhofer Ctr Expt Software Engn, College Pk, MD USA.
EM mlindvall@fc-md.umd.edu; roseanne.tesoriero@washcoll.edu;
   pcosta@fc-md.umd.edu
CR ABOWD G, 1996, CMUSEI96TR025
   ANONOIL G, 1998, P 5 INT S SOFTW METR, P23
   Avritzer A, 1998, FIFTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 1998, PROCEEDINGS, P4, DOI 10.1109/METRIC.1998.731220
   Basili1 Victor R, 1994, Encyclopedia of Software Eng., V1, P469, DOI DOI 10.1002/0471028959.SOF110
   Bengtsson P, 1999, PROCEEDINGS OF THE THIRD EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P139, DOI 10.1109/CSMR.1999.756691
   CHIDAMBER SR, 1994, T SOFTWARE ENG, P476
   DEBRUIN H, 2001, LNCS, V2186, P128
   Eick SG, 2001, IEEE T SOFTWARE ENG, V27, P1, DOI 10.1109/32.895984
   Fiutem R, 1998, PROC IEEE INT CONF S, P94, DOI 10.1109/ICSM.1998.738497
   Gamma Erich., 1994, DESIGN PATTERNS
   HANEY FM, 1972, AFIPS JOINT COMP C, P173
   KAZMAN R, 1996, IEEE SOFTWARE    NOV, P47
   Lassing N, 2002, J SYST SOFTWARE, V61, P47, DOI 10.1016/S0164-1212(01)00113-3
   LEHMAN MM, 1985, PROCESS SOFTWARE CHA
   LINDVALL M, 1997, LINKOPING STUDIES SC
   MEYER S, 1993, 1 WORKSH PRINC PRACT
   MURPHY K, 1995, AM J NURS, V95, P18, DOI 10.1097/00000446-199508000-00017
   Schwanke R. W., 1991, P 13 INT C SOFTW ENG, P83
   SEAMAN C, 1999, 24 NASA SEL SOFTW EN
   SEFIKA M, 1996, 18 INT C SOFTW ENG I
   SHERESHEVSKY M, 2001, INT COMP SOFTW APPL
   SOLOWAY E, 1987, 2 INT C HUM COMP INT, P317
   Yacoub SM, 2002, IEEE T SOFTWARE ENG, V28, P529, DOI 10.1109/TSE.2002.1010058
   YAU SS, 1980, IEEE T SOFTWARE ENG, V6
NR 24
TC 28
Z9 30
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2003
VL 8
IS 1
BP 83
EP 108
DI 10.1023/A:1021772917036
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 803OU
UT WOS:000220241200004
DA 2024-07-18
ER

PT J
AU Bogner, J
   Kotstein, S
   Pfaff, T
AF Bogner, Justus
   Kotstein, Sebastian
   Pfaff, Timo
TI Do RESTful API design rules have an impact on the understandability of
   Web APIs?
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Web API design; Understandability; controlled experiment
AB ContextWeb APIs are one of the most used ways to expose application functionality on the Web, and their understandability is important for efficiently using the provided resources. While many API design rules exist, empirical evidence for the effectiveness of most rules is lacking.ObjectiveWe therefore wanted to study 1) the impact of RESTful API design rules on understandability, 2) if rule violations are also perceived as more difficult to understand, and 3) if demographic attributes like REST-related experience have an influence on this.MethodWe conducted a controlled Web-based experiment with 105 participants, from both industry and academia and with different levels of experience. Based on a hybrid between a crossover and a between-subjects design, we studied 12 design rules using API snippets in two complementary versions: one that adhered to a rule and one that was a violation of this rule. Participants answered comprehension questions and rated the perceived difficulty.ResultsFor 11 of the 12 rules, we found that violation performed significantly worse than rule for the comprehension tasks. Regarding the subjective ratings, we found significant differences for 9 of the 12 rules, meaning that most violations were subjectively rated as more difficult to understand. Demographics played no role in the comprehension performance for violation.ConclusionsOur results provide first empirical evidence for the importance of following design rules to improve the understandability of Web APIs, which is important for researchers, practitioners, and educators.
C1 [Bogner, Justus] Univ Stuttgart, Inst Software Engn, Stuttgart, Germany.
   [Kotstein, Sebastian] Reutlingen Univ, Herman Hollerith Zentrum, Reutlingen, Germany.
   [Pfaff, Timo] Univ Stuttgart, Inst Software Engn, Stuttgart, Germany.
C3 University of Stuttgart; University of Stuttgart
RP Bogner, J (corresponding author), Univ Stuttgart, Inst Software Engn, Stuttgart, Germany.
EM j.bogner@vu.nl; sebastian.kotstein@reutlingen-university.de
RI Bogner, Justus/AAC-9594-2019
OI Bogner, Justus/0000-0001-5788-0991
CR [Anonymous], 2012, WEB INFORM SYSTEMS E
   [Anonymous], 2014, Web Services Foundations, DOI [10.1007/978-1-4614-7518-7, DOI 10.1007/978-1-4614-7518-7_2]
   Baltes S, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10072-8
   Bogner J, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE COMPANION (ICSA-C 2019), P187, DOI 10.1109/ICSA-C.2019.00041
   Cohen J., 1988, Statistical power analyses for behavioral sciences, V2nd, DOI [10.4324/9780203771587, DOI 10.4324/9780203771587]
   Fielding R. T, 2002, ACM Transactions on Internet Technology (TOIT), V2, P115, DOI [DOI 10.1145/514183.514185, 10.1145/514183.514185]
   Fowler Martin., 2010, Richardson Maturity Model - steps toward the glory of REST
   Haupt F, 2018, COMPUT SCI-RES DEV, V33, P291, DOI 10.1007/s00450-017-0384-1
   Haupt F, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2017), P55, DOI 10.1109/ICSA.2017.40
   Jacobson D., 2011, APIs: A Strategy Guide
   Jedlitschka A., 2008, Guide to advanced empirical software engineering, P201, DOI DOI 10.1007/978-1-84800-044-5_8
   Kendall MG, 1938, BIOMETRIKA, V30, P81, DOI 10.2307/2332226
   Kotstein S., 2021, Service-Oriented Computing, P154
   Masse M., 2011, REST API Design Rulebook: Designing Consistent RESTfulWeb Service Interface
   Neuhauser M., 2011, International Encyclopedia of Statistical Science, DOI DOI 10.1007/978-3-642-04898-2615
   Neumann A, 2021, IEEE T SERV COMPUT, V14, P957, DOI 10.1109/TSC.2018.2847344
   Palma F, 2022, P IEEE I C SERV COMP, P20, DOI 10.1109/SCC55611.2022.00017
   Palma F, 2021, LECT NOTES COMPUT SC, V13121, P171, DOI 10.1007/978-3-030-91431-8_11
   Palma F, 2022, J SYST SOFTWARE, V191, DOI 10.1016/j.jss.2022.111369
   Palma F, 2017, INT J COOP INF SYST, V26, DOI 10.1142/S0218843017420011
   Palma F, 2014, LECT NOTES COMPUT SC, V8831, P230, DOI 10.1007/978-3-662-45391-9_16
   Pautasso C., 2008, PROCEEDING 17 INT C, P805, DOI DOI 10.1145/1367497.1367606
   Petrillo F, 2016, LECT NOTES COMPUT SC, V9936, P157, DOI 10.1007/978-3-319-46295-0_10
   Richardson L., 2008, RESTFUL WEB SERVICES
   Rodríguez C, 2016, LECT NOTES COMPUT SC, V9671, P21, DOI 10.1007/978-3-319-38791-8_2
   Sawilowsky SS, 2009, J MOD APPL STAT METH, V8, P597, DOI 10.22237/jmasm/1257035100
   Scalabrino S, 2021, IEEE T SOFTWARE ENG, V47, P595, DOI 10.1109/TSE.2019.2901468
   Schermann G, 2016, LECT NOTES COMPUT SC, V9586, P36, DOI 10.1007/978-3-662-50539-7_4
   SHAFFER JP, 1995, ANNU REV PSYCHOL, V46, P561, DOI 10.1146/annurev.ps.46.020195.003021
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   Vegas S, 2016, IEEE T SOFTWARE ENG, V42, P120, DOI 10.1109/TSE.2015.2467378
   Webber J., 2010, REST in Practice
   Wohlin C, 2012, Experimentation in Software Engineering, P89, DOI [10.1007/978-3-642-29044-2_8, DOI 10.1007/978-3-642-29044-2_8]
   Wyrich M, 2023, Arxiv, DOI [arXiv:2206.11102, 10.48550/ARXIV.2206.11102, DOI 10.48550/ARXIV.2206.11102]
NR 34
TC 0
Z9 0
U1 0
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2023
VL 28
IS 6
AR 132
DI 10.1007/s10664-023-10367-y
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA T1XI8
UT WOS:001075979200002
OA hybrid
DA 2024-07-18
ER

PT J
AU Sun, YM
   German, D
   Zacchiroli, S
AF Sun, Yiming
   German, Daniel
   Zacchiroli, Stefano
TI Using the uniqueness of global identifiers to determine the provenance
   of Python software source code
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software provenance; Source code tracking; Identifiers; Open source
   software; Python
ID CLONE DETECTION; TOOLS
AB We consider the problem of identifying the provenance of free/open source software (FOSS) and specifically the need of identifying where reused source code has been copied from. We propose a lightweight approach to solve the problem based on software identifiers-such as the names of variables, classes, and functions chosen by programmers. The proposed approach is able to efficiently narrow down to a small set of candidate origin products, to be further analyzed with more expensive techniques to make a final provenance determination. By analyzing the PyPI (Python Packaging Index) open source ecosystem we find that globally defined identifiers are very distinct. Across PyPI's 244 K packages we found 11.2 M different global identifiers (classes and method/function names-with only 0.6% of identifiers shared among the two types of entities); 76% of identifiers were used only in one package, and 93% in at most 3. Randomly selecting 3 non-frequent global identifiers from an input product is enough to narrow down its origins to a maximum of 3 products within 89% of the cases. We validate the proposed approach by mapping Debian source packages implemented in Python to the corresponding PyPI packages; this approach uses at most five trials, where each trial uses three randomly chosen global identifiers from a randomly chosen python file of the subject software package, then ranks results using a popularity index and requires to inspect only the top result. In our experiments, this method is effective at finding the true origin of a project with a recall of 0.9 and precision of 0.77.
C1 [Sun, Yiming; German, Daniel] Univ Victoria, Victoria, BC, Canada.
   [Zacchiroli, Stefano] Inst Polytech Paris, LTCI, Telecom Paris, Paris, France.
C3 University of Victoria; IMT - Institut Mines-Telecom; Institut
   Polytechnique de Paris; Telecom Paris
RP German, D (corresponding author), Univ Victoria, Victoria, BC, Canada.
EM yimings@uvic.ca; dmg@uvic.ca; stefano.zacchiroli@telecom-paris.fr
CR Arnaoudova V, 2014, IEEE T SOFTWARE ENG, V40, P502, DOI 10.1109/TSE.2014.2312942
   Binkley D, 2013, EMPIR SOFTW ENG, V18, P219, DOI 10.1007/s10664-012-9201-4
   Bose RPJC, 2019, ASIA PAC SOFWR ENG, P1, DOI 10.1109/APSEC48747.2019.00010
   BUTLER G, 1995, SECOND WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P22, DOI 10.1109/WCRE.1995.514690
   Butt AS, 2020, LECT NOTES COMPUT SC, V12343, P431, DOI 10.1007/978-3-030-62008-0_30
   Caneill M, 2017, EMPIR SOFTW ENG, V22, P1405, DOI 10.1007/s10664-016-9461-5
   Caprile B, 2000, PROC IEEE INT CONF S, P97, DOI 10.1109/ICSM.2000.883022
   Cordy JR, 2011, CONF PROC INT SYMP C, P219, DOI 10.1109/ICPC.2011.26
   Cosmo RD, 2017, P 14 INT C DIG PRES
   Dang YB, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P975
   Davies J, 2013, EMPIR SOFTW ENG, V18, P1195, DOI 10.1007/s10664-012-9199-7
   Davies Julius., 2011, MSR, P183, DOI DOI 10.1145/1985441.1985468
   Deissenboeck F, 2006, SOFTWARE QUAL J, V14, P261, DOI 10.1007/s11219-006-9219-1
   Di Penta Massimiliano, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P151, DOI 10.1109/MSR.2010.5463282
   Gabel M, 2010, 18 ACM SIGSOFT INT S, P147
   Gautam P, 2016, COMM COM INF SC, V628, P655, DOI 10.1007/978-981-10-3433-6_79
   Gharehyazie M, 2017, IEEE WORK CONF MIN S, P291, DOI 10.1109/MSR.2017.15
   Godfrey MW, 2015, SCI COMPUT PROGRAM, V97, P86, DOI 10.1016/j.scico.2013.11.021
   Godfrey MW, 2005, IEEE T SOFTWARE ENG, V31, P166, DOI 10.1109/TSE.2005.28
   Gupta A, 2018, LECT NOTE DATA ENG, V4, P27, DOI 10.1007/978-981-10-4600-1_3
   Harutyunyan N, 2020, COMPUTER, V53, P77, DOI 10.1109/MC.2020.2983530
   Hofmeister J, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P217, DOI 10.1109/SANER.2017.7884623
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kapdan M, 2014, LECT NOTES COMPUT SC, V8583, P492, DOI 10.1007/978-3-319-09156-3_35
   Lawrie D, 2007, INNOV SYST SOFTW ENG, V3, P303, DOI 10.1007/s11334-007-0031-2
   Li ZM, 2006, IEEE T SOFTWARE ENG, V32, P176, DOI 10.1109/TSE.2006.28
   Manning Christopher D., 2008, INTRO INFORM RETRIEV
   McMillan C, 2012, IEEE T SOFTWARE ENG, V38, P1069, DOI 10.1109/TSE.2011.84
   Miles S, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000792
   Missier P., 2013, 5 USENIX WORKSH THEO
   Missier Paolo, 2013, P 16 INT C EXTENDING, P773, DOI [10.1145/2452376.2452478, DOI 10.1145/2452376.2452478]
   Moreau L, 2011, FUTURE GENER COMP SY, V27, P743, DOI 10.1016/j.future.2010.07.005
   Nguyen S, 2020, PROC INT CONF SOFTW, P1372, DOI 10.1145/3377811.3380926
   Ombredanne P, 2020, COMPUTER, V53, P105, DOI 10.1109/MC.2020.3011082
   Ossher J., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P283, DOI 10.1109/ICSM.2011.6080795
   Perez Daniel, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P518, DOI 10.1109/MSR.2019.00078
   Phipps S, 2020, COMPUTER, V53, P115, DOI 10.1109/MC.2020.3024403
   Pietri Antoine, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P138, DOI 10.1109/MSR.2019.00030
   Rosen L., 2005, OPEN SOURCE LICENSIN
   Rousseau G, 2020, EMPIR SOFTW ENG, V25, P2930, DOI 10.1007/s10664-020-09828-5
   Roy J. R., 2007, QUEENS SCH COMPUTING, V541, P64
   Saini M, 2020, J SOFTW-EVOL PROC, V32, DOI 10.1002/smr.2265
   Sajnani H, 2016, PROC INT CONF SOFTW, P1157, DOI 10.1145/2884781.2884877
   Securosis L.L.C., 2021, OPEN SOURCE DEV APPL
   SHENEAMER A, 2016, INT J COMPUTER APPL, V137, P1, DOI DOI 10.5120/IJCA2016908896
   Sneed HM, 1996, PROCEEDINGS OF THE THIRD WORKING CONFERENCE ON REVERSE ENGINEERING, P169, DOI 10.1109/WCRE.1996.558901
   Stewart K., 2010, International Free and Open Source Software Law Review, V2, P191
   Sun Y, 2023, DATASET USING UNIQUE, DOI [10.5281/zenedo.7637703, DOI 10.5281/ZENEDO.7637703]
   Synopsys, 2020, 2020 OP SOURC SEC RI
   The PythonPackaging Authority, 2022, PACK PYTH PROJ
   Warintarawej P, 2015, INTELL DATA ANAL, V19, P761, DOI 10.3233/IDA-150744
   Wendel H, 2010, LECT NOTES COMPUT SC, V6378, P59, DOI 10.1007/978-3-642-17819-1_7
   Yuan Y, 2012, IEEE INT CONF AUTOM, P286, DOI 10.1145/2351676.2351725
   Zimmermann T, 2020, P IEEE ACM 42 INT C, P711, DOI 10.1145/3387940.3392209
NR 54
TC 0
Z9 0
U1 3
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2023
VL 28
IS 5
AR 107
DI 10.1007/s10664-023-10317-8
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA M8TE1
UT WOS:001032876900001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Fu, Y
   Yan, M
   Xu, Z
   Xia, X
   Zhang, XH
   Yang, D
AF Fu, Ying
   Yan, Meng
   Xu, Zhou
   Xia, Xin
   Zhang, Xiaohong
   Yang, Dan
TI An empirical study of the impact of log parsers on the performance of
   log-based anomaly detection
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Log parser; Anomaly detection; Empirical study
AB Log-based anomaly detection plays an essential role in the fast-emerging Artificial Intelligence for IT Operations (AIOps) of software systems. Many log-based anomaly detection methods have been proposed. Due to the variety and unstructured characteristics of logs, log parsing is the first necessary step for parsing logs into structured ones in log-based anomaly detection methods. Prior studies have found that the effectiveness of log parsing will impact the performance of log-based anomaly detection. However, few studies comprehensively investigate whether better log parsing implies better anomaly detection. In this paper, we conduct a comprehensively empirical study to investigate the impact of six state-of-the-art log parsers belonging to four categories (including heuristic-based, frequency-based, clustering-based, and subsequence-based) on six state-of-the-art log-based anomaly detection methods (including machine-learning-based and deep-learning-based methods). Experimental results on three public datasets show that (1) High parsing accuracy does not definitely imply high anomaly detection performance. Both parsing accuracy and the number of parsed event templates should be considered when choosing log parsers for anomaly detection. (2) The log parsers have an impact on the efficiency of anomaly detection methods. With the increase in the number of parsed event templates, the efficiency of anomaly detection decreases. In detail, the heuristic-based parsers have less impact on the efficiency of anomaly detection methods, followed by frequency-based parsers. (3) All the anomaly detection methods perform more effectively and efficiently with the heuristic-based log parsers. Thus, the heuristic-based log parsers are recommended for a new practitioner on anomaly detection. We believe that our work, with the evaluation results and the corresponding findings, can help researchers and practitioners better understand the impact of log parsers on anomaly detection and provide guidelines for choosing a suitable log parser for their anomaly detection method.
C1 [Fu, Ying; Yan, Meng; Xu, Zhou; Zhang, Xiaohong; Yang, Dan] Chongqing Univ, Key Lab Dependable Serv Comp Cyber Phys Soc, Minist Educ, Chongqing, Peoples R China.
   [Fu, Ying; Yan, Meng; Xu, Zhou; Zhang, Xiaohong; Yang, Dan] Chongqing Univ, Sch Big Data & Software Engn, Chongqing, Peoples R China.
   [Xia, Xin] Huawei, Software Engn Applicat Technol Lab, Hangzhou, Peoples R China.
C3 Chongqing University; Chongqing University; Huawei Technologies
RP Yan, M; Yang, D (corresponding author), Chongqing Univ, Key Lab Dependable Serv Comp Cyber Phys Soc, Minist Educ, Chongqing, Peoples R China.; Yan, M; Yang, D (corresponding author), Chongqing Univ, Sch Big Data & Software Engn, Chongqing, Peoples R China.
EM mengy@cqu.edu.cn; dyang@cqu.edu.cn
RI Zhang, Xiaohong/A-3060-2015; YANG, Dan/HHD-2733-2022
OI Yan, Meng/0000-0002-9538-9121
FU National Key Research and Development Project [2018YFB2101200];
   Fundamental Research Funds for the Central Universities
   [2022CDJKYJH001]; Natural Science Foundation of Chongqing
   [cstc2021jcyj-msxmX0538]; National Natural Science Foundation of China
   [62002034]; Postdoctoral Foundation of Chongqing [2020LY13]
FX This work was supported in part by the National Key Research and
   Development Project (No. 2018YFB2101200), the Fundamental Research Funds
   for the Central Universities (No. 2022CDJKYJH001), the Natural Science
   Foundation of Chongqing (No. cstc2021jcyj-msxmX0538), the National
   Natural Science Foundation of China (No. 62002034) and the Postdoctoral
   Foundation of Chongqing (No. 2020LY13).
CR Abdi H, 2007, ENCY MEASUREMENT STA, P103, DOI DOI 10.4135/9781412952644
   Babenko A, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P237
   Berrocal E, 2014, IEEE INT C CL COMP, P1, DOI 10.1109/CLUSTER.2014.6968757
   Bodík P, 2010, EUROSYS'10: PROCEEDINGS OF THE EUROSYS 2010 CONFERENCE, P111
   Breier Jakub, 2015, Information Science and Applications, P449, DOI 10.1007/978-3-662-46578-3_53
   Chen AR, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P126, DOI 10.1109/ICSE-Companion.2019.00055
   Chen M, 2004, INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING, PROCEEDINGS, P36, DOI 10.1109/ICAC.2004.1301345
   Chen YJ, 2019, WEB CONFERENCE 2019: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2019), P2659, DOI 10.1145/3308558.3313501
   Dai HT, 2022, IEEE T SOFTWARE ENG, V48, P879, DOI 10.1109/TSE.2020.3007554
   Damásio CV, 2002, APPL INTELL, V17, P187, DOI 10.1023/A:1016112931442
   Dang YN, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P4, DOI 10.1109/ICSE-Companion.2019.00023
   Du M, 2019, IEEE T KNOWL DATA EN, V31, P2213, DOI 10.1109/TKDE.2018.2875442
   Du M, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1285, DOI 10.1145/3133956.3134015
   El-Sayed N, 2017, INT CON DISTR COMP S, P1333, DOI 10.1109/ICDCS.2017.317
   Fu QA, 2009, IEEE DATA MINING, P149, DOI 10.1109/ICDM.2009.60
   Hamooni H, 2016, CIKM'16: PROCEEDINGS OF THE 2016 ACM CONFERENCE ON INFORMATION AND KNOWLEDGE MANAGEMENT, P1573, DOI 10.1145/2983323.2983358
   HANSEN SE, 1993, PROCEEDINGS OF THE SEVENTH SYSTEMS ADMINISTRATION CONFERENCE (LISA VII), P145
   He PJ, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2017), P33, DOI 10.1109/ICWS.2017.13
   He SL, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P60, DOI 10.1145/3236024.3236083
   He SL, 2016, PROC INT SYMP SOFTW, P207, DOI 10.1109/ISSRE.2016.21
   Huang P, 2018, PROCEEDINGS OF THE 13TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P1
   Jia T, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2017), P25, DOI 10.1109/ICWS.2017.12
   Jiang W., 2009, Proccedings of the 7th conference on File and storage technologies, P43
   Jiang ZM, 2008, INT CONF QUAL SOFTW, P181, DOI 10.1109/QSIC.2008.50
   Liang YL, 2007, IEEE DATA MINING, P583, DOI 10.1109/ICDM.2007.46
   Lin QW, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P480, DOI 10.1145/3236024.3236060
   Lin QW, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P102, DOI 10.1145/2889160.2889232
   Liu FC, 2019, PROCEEDINGS OF THE 2019 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'19), P1777, DOI 10.1145/3319535.3363224
   loggly, 2021, BLOG
   Logstash, 2021, LOGZ
   Lou J G, 2010, USENIX ANN TECHNICAL, P1
   Lu J, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P3, DOI 10.1145/3236024.3236071
   Lu SY, 2018, 2018 16TH IEEE INT CONF ON DEPENDABLE, AUTONOM AND SECURE COMP, 16TH IEEE INT CONF ON PERVAS INTELLIGENCE AND COMP, 4TH IEEE INT CONF ON BIG DATA INTELLIGENCE AND COMP, 3RD IEEE CYBER SCI AND TECHNOL CONGRESS (DASC/PICOM/DATACOM/CYBERSCITECH), P151, DOI 10.1109/DASC/PiCom/DataCom/CyberSciTec.2018.00037
   Makanju A, 2012, IEEE T KNOWL DATA EN, V24, P1921, DOI 10.1109/TKDE.2011.138
   Meng WB, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P4739
   Messaoudi S, 2018, INT C PROGRAM COMPRE, P167, DOI 10.1145/3196321.3196340
   Mizutani Masayoshi, 2013, 2013 IEEE International Conference on Services Computing (SCC), P595, DOI 10.1109/SCC.2013.73
   Nagappan Meiyappan, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P114, DOI 10.1109/MSR.2010.5463281
   Nagappan Meiyappan, 2009, 2009 20th International Symposium on Software Reliability Engineering (ISSRE 2009), P41, DOI 10.1109/ISSRE.2009.23
   Nandi A, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P215, DOI 10.1145/2939672.2939712
   Oliner A, 2007, I C DEPEND SYS NETWO, P575, DOI 10.1109/DSN.2007.103
   Pinjia He, 2016, 2016 46th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN). Proceedings, P654, DOI 10.1109/DSN.2016.66
   Shang WY, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P402, DOI 10.1109/ICSE.2013.6606586
   Shima K, 2016, Arxiv, DOI arXiv:1611.03213
   Splunk, 2021, ABOUTSPLUNKREGULAREX
   Tang Liang, 2011, P 20 ACM INT C INFOR, P785, DOI 10.1145/2063576.2063690
   Vaarandi R, 2003, PROCEEDINGS OF THE 3RD IEEE WORKSHOP ON IP OPERATIONS & MANAGEMENT (IPOM2003), P119
   Vaarandi R., 2006, Hakin9 Magazine, V6, P28
   Vaarandi R, 2015, INT CONF NETW SER, P1, DOI 10.1109/CNSM.2015.7367331
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Xia B, 2021, INFORM SYST FRONT, V23, P285, DOI 10.1007/s10796-020-10026-3
   Xu W, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P117
   Yin K, 2020, PROC IEEE INT CONF S, P667, DOI 10.1109/ICSME46990.2020.00069
   Yuan D, 2010, ACM SIGPLAN NOTICES, V45, P143, DOI 10.1145/1735971.1736038
   Zar JH, 2005, ENCY BIOSTAT, V7, DOI DOI 10.1002/0470011815.B2A15150
   Zhang X, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P807, DOI 10.1145/3338906.3338931
   Zhou X, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P683, DOI 10.1145/3338906.3338961
   Zhu JM, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P121, DOI 10.1109/ICSE-SEIP.2019.00021
NR 58
TC 6
Z9 6
U1 4
U2 46
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2023
VL 28
IS 1
AR 6
DI 10.1007/s10664-022-10214-6
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 6A0EO
UT WOS:000880336500003
DA 2024-07-18
ER

PT J
AU Mondal, S
   Uddin, G
   Roy, C
AF Mondal, Saikat
   Uddin, Gias
   Roy, Chanchal
TI Automatic prediction of rejected edits in Stack Overflow
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Stack overflow; Rejected edits; Classification model; User study; Tool
   support
ID SOFTWARE; AGREEMENT
AB The content quality of shared knowledge in Stack Overflow (SO) is crucial in supporting software developers with their programming problems. Thus, SO allows its users to suggest edits to improve the quality of a post (i.e., question and answer). However, existing research shows that many suggested edits in SO are rejected due to undesired contents/formats or violating edit guidelines. Such a scenario frustrates or demotivates users who would like to conduct good-quality edits. Therefore, our research focuses on assisting SO users by offering them suggestions on how to improve their editing of posts. First, we manually investigate 764 (382 questions + 382 answers) rejected edits by rollbacks and produce a catalog of 19 rejection reasons. Second, we extract 15 texts and user-based features to capture those rejection reasons. Third, we develop four machine learning models using those features. Our best-performing model can predict rejected edits with 69.1% precision, 71.2% recall, 70.1% F1-score, and 69.8% overall accuracy. Fourth, we introduce an online tool named EditEx that works with the SO edit system. EditEx can assist users while editing posts by suggesting the potential causes of rejections. We recruit 20 participants to assess the effectiveness of EditEx. Half of the participants (i.e., treatment group) use EditEx and another half (i.e., control group) use the SO standard edit system to edit posts. According to our experiment, EditEx can support SO standard edit system to prevent 49% of rejected edits, including the commonly rejected ones. However, it can prevent 12% rejections even in free-form regular edits. The treatment group finds the potential rejection reasons identified by EditExinfluential. Furthermore, the median workload suggesting edits using EditEx is half compared to the SO edit system.
C1 [Mondal, Saikat; Roy, Chanchal] Univ Saskatchewan, Dept Comp Sci, Software Res Lab, Saskatoon, SK, Canada.
   [Uddin, Gias] Univ Calgary, Dept Elect & Software Engn, Data Intens Software Analyt DISA Lab, Calgary, AB, Canada.
C3 University of Saskatchewan; University of Calgary
RP Mondal, S (corresponding author), Univ Saskatchewan, Dept Comp Sci, Software Res Lab, Saskatoon, SK, Canada.
EM saikat.mondal@usask.ca; gias.uddin@ucalgary.ca; chanchal.roy@usask.ca
RI Mondal, Saikat/HNC-4415-2023
OI Mondal, Saikat/0000-0003-1767-6392
FU Natural Sciences and Engineering Research Council of Canada (NSERC);
   NSERC Collaborative Research and Training Experience (CREATE) grant;
   Canada First Research Excellence Fund (CFREF)
FX This research is supported in part by the Natural Sciences and
   Engineering Research Council of Canada (NSERC) Discovery grants, and by
   an NSERC Collaborative Research and Training Experience (CREATE) grant,
   and by two Canada First Research Excellence Fund (CFREF) grants
   coordinated by the Global Institute for Food Security (GIFS) and the
   Global Institute for Water Security (GIWS).
CR Abdellatif A, 2020, IEEE WORK CONF MIN S, P174, DOI 10.1145/3379597.3387472
   Agichtein E, 2008, P 2008 INT C WEB SEA, P183
   Ahmed S, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3239524
   Alkadhi R, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P357, DOI 10.1109/SANER.2018.8330223
   Alkadhi R, 2017, IEEE WORK CONF MIN S, P436, DOI 10.1109/MSR.2017.43
   Anderson Ashton, 2012, P 18 ACM SIGKDD INT, DOI DOI 10.1145/2339530.2339665
   [Anonymous], 2014, Proceedings of the 6th international workshop on social software engineering, DOI 10.1145/2661685.2661689
   Asaduzzaman M, 2013, IEEE WORK CONF MIN S, P97, DOI 10.1109/MSR.2013.6624015
   Bagherzadeh M, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P432, DOI 10.1145/3338906.3338939
   Bagozzi RP, 2006, MANAGE SCI, V52, P1099, DOI 10.1287/mnsc.1060.0545
   Baltes S, 2018, IEEE WORK CONF MIN S, P319, DOI 10.1145/3196398.3196430
   Barua A, 2014, EMPIR SOFTW ENG, V19, P619, DOI 10.1007/s10664-012-9231-y
   Beyer S, 2018, INT C PROGRAM COMPRE, P211, DOI 10.1145/3196321.3196333
   Bi T, 2021, arXiv
   Boslaugh S., 2012, Statistics in a nutshell: A desktop quick reference
   Calefato F, 2019, EMPIR SOFTW ENG, V24, P854, DOI 10.1007/s10664-018-9642-5
   Calefato F, 2017, INT CONF AFFECT, P79, DOI 10.1109/ACIIW.2017.8272591
   Calefato F, 2018, INFORM SOFTWARE TECH, V94, P186, DOI 10.1016/j.infsof.2017.10.009
   Cao A, 2009, BEHAV RES METHODS, V41, P113, DOI 10.3758/BRM.41.1.113
   Chakraborty P, 2021, INFORM SOFTWARE TECH, V137, DOI 10.1016/j.infsof.2021.106603
   Chatterjee Preetha, 2019, IEEE WORK CONF MIN S, P490, DOI [DOI 10.1109/MSR.2019.00075, 10.1109/MSR.2019.00075]
   Chen TQ, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P785, DOI 10.1145/2939672.2939785
   Chunyang Chen, 2018, Proceedings of the ACM on Human-Computer Interaction, V2, DOI 10.1145/3274302
   Chunyang Chen, 2017, Proceedings of the ACM on Human-Computer Interaction, V1, DOI 10.1145/3134667
   COHEN J, 1968, PSYCHOL BULL, V70, P213, DOI 10.1037/h0026256
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Dabbish L, 2012, P ACM 2012 C COMP SU, P1277, DOI [10.1145/2145204.2145396, DOI 10.1145/2145204.2145396]
   Davis JJ., 2006, PROC INT C MACHINE L, DOI DOI 10.1145/1143844.1143874
   Duijn M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P410, DOI 10.1109/MSR.2015.51
   Exchange S, 2019, STACKEXCHAGE API
   Exchange S., 2020, DOES REP WORK
   Exchange S., 2009, SHOULD HI THANKS TAG
   Exchange S., 2009, WHAT IS ROLLB
   Garcia D, 2013, 2013 IEEE THIRD INTERNATIONAL CONFERENCE ON CLOUD AND GREEN COMPUTING (CGC 2013), P410, DOI 10.1109/CGC.2013.71
   Goldberger J., 2004, Advances in Neural Information Processing Systems, V17
   Gottipati S., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P323, DOI 10.1109/ASE.2011.6100069
   Groves R.M., 2004, Survey Methodology
   Guzman E., 2014, Association for Computing Machinery, P352
   Guzman E, 2013, P 2013 9 JOINT M FDN, P671, DOI 10.1145/2491411.2494578
   Harper FM, 2008, CHI 2008: 26TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS VOLS 1 AND 2, CONFERENCE PROCEEDINGS, P865
   HART S G, 1988, P139
   Hart SG, 1986, NASA TASK LOAD INDEX
   He HB, 2009, IEEE T KNOWL DATA EN, V21, P1263, DOI 10.1109/TKDE.2008.239
   Hudson N, 2015, PROCEEDINGS 2015 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING (VL/HCC), P189, DOI 10.1109/VLHCC.2015.7357216
   Islam MR, 2016, 2016 IEEE/ACIS 14TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGEMENT AND APPLICATIONS (SERA), P185, DOI 10.1109/SERA.2016.7516145
   Jongeling R, 2017, EMPIR SOFTW ENG, V22, P2543, DOI 10.1007/s10664-016-9493-x
   Joshi A., 2015, BRIT J APPL SCI TECH, V7, P396, DOI [10.9734/BJAST/2015/14975, DOI 10.9734/BJAST/2015/14975]
   Khan JY, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P318, DOI 10.1109/SANER50967.2021.00037
   Kittur A, 2008, CSCW: 2008 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, CONFERENCE PROCEEDINGS, P37
   Lakhani KR, 2003, RES POLICY, V32, P923, DOI 10.1016/S0048-7333(02)00095-1
   Li G, 2015, PROCEEDINGS OF THE 2015 ACM INTERNATIONAL CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING (CSCW'15), P1080, DOI 10.1145/2675133.2675155
   Li L, 2015, WWW'15 COMPANION: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB, P1453, DOI 10.1145/2740908.2742129
   Li YJ, 2007, IEEE T PATTERN ANAL, V29, P1091, DOI 10.1109/TPAMI.2007.1070
   Lin B, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3490388
   Lowry PB., 2005, J BUS COMMUN, V41, P66, DOI [10.1177/0021943603259363, DOI 10.1177/0021943603259363]
   Lundberg SM, 2017, ADV NEUR IN, V30
   Lundberg SM, 2020, NAT MACH INTELL, V2, P56, DOI 10.1038/s42256-019-0138-9
   Macbeth G, 2011, UNIV PSYCHOL, V10, P545, DOI 10.11144/Javeriana.upsy10-2.cdcp
   McKight P. E., 2010, The Corsini Encyclopedia of Psychology, DOI 10.1002/9780470479216.corpsy0524
   Memarian B, 2011, P 47 ANN INT C ASS S
   Molnar Molnar C. C., Lulu. com
   Mondal Saikat, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P479, DOI 10.1109/MSR.2019.00074
   Mondal S, 2021, EDITEX PREDICTION RE
   Mondal S, 2021, IEEE WORK CONF MIN S, P380, DOI 10.1109/MSR52588.2021.00050
   Mondal S, 2020, PROC IEEE INT CONF S, P856, DOI 10.1109/ICSME46990.2020.00111
   Munteanu C, 2008, CHI 2008: 26TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS VOLS 1 AND 2, CONFERENCE PROCEEDINGS, P373
   Murgia A, 2014, P 11 WORK C MIN SOFT, P262
   Novielli N, 2015, 7TH INTERNATIONAL WORKSHOP ON SOCIAL SOFTWARE ENGINEERING (SSE 2015), P33, DOI 10.1145/2804381.2804387
   Noyes JM, 2007, ERGONOMICS, V50, P514, DOI 10.1080/00140130701235232
   O'Rourke ST., 2005, IEEE T LEARN TECHNOL, V41, P99
   Ortu M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P303, DOI 10.1109/MSR.2015.35
   Overflow S., 2022, WHAT IS REP I EARN L
   Overflow S., 2015, MAK GOOD ED
   Polikar R., 2006, IEEE Circuits and Systems Magazine, V6, P21, DOI 10.1109/MCAS.2006.1688199
   Ponzanelli L, 2014, PROC IEEE INT CONF S, P541, DOI 10.1109/ICSME.2014.90
   Ponzanelli L, 2014, INT CONF QUAL SOFTW, P343, DOI 10.1109/QSIC.2014.27
   Prasetyo PK, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P596, DOI 10.1109/ICSM.2012.6405330
   Rahman MM, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P426, DOI 10.1109/MSR.2015.55
   Rainer A, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P326, DOI 10.1109/ISESE.2003.1237993
   SAHA RK, 2013, P 2013 9 JOINT M FDN, P663, DOI DOI 10.1145/2491411.2494585
   Seaman CB, 1998, IEEE T SOFTWARE ENG, V24, P559, DOI 10.1109/32.708569
   Sharek D., 2011, P HUM FACT ERG SOC A, P1375, DOI [10.1177/1071181311551286, DOI 10.1177/1071181311551286]
   Shihab E, 2009, PROC IEEE INT CONF S, P147, DOI 10.1109/ICSM.2009.5306333
   Shull F, 2008, GUIDE ADV EMPIRICAL
   Singer J, 2002, IEEE T SOFTWARE ENG, V28, P1171, DOI 10.1109/TSE.2002.1158289
   Storey Margaret-Anne, 2012, Crowd Documentation: Exploring the Coverage and the Dynamics of API Discussions on Stack Overflow, V11
   Stratton SJ, 2021, PREHOSP DISASTER MED, V36, P373, DOI 10.1017/S1049023X21000649
   Tian Y, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P44, DOI 10.1109/CSMR-WCRE.2014.6747213
   Uddin G, 2020, INF SOFTW TECHNOL 1, V16
   Uddin G., 2017, Technical Report
   Uddin G, 2019, IEEE T SOFTW ENG, V40
   Uddin G, 2017, P 32 IEEEACM INT C A, P6
   Uddin G, 2019, IEEE Transactions on Software Engineering, V35
   Uddin G, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3439769
   Uddin G, 2017, IEEE INT CONF AUTOM, P159, DOI 10.1109/ASE.2017.8115629
   Uddin G, 2015, IEEE SOFTWARE, V32, P68, DOI 10.1109/MS.2014.80
   Vagias W. M., 2006, Likert-type scale response anchors. Clemson international institute for tourism research development, department of parks
   Wang JJ, 2006, INT CONF SIGN PROCES, P1815
   Wang SW, 2020, IEEE T SOFTWARE ENG, V46, P1024, DOI 10.1109/TSE.2018.2874470
   Wang XF, 2014, IEEE SOFTWARE, V31, P72, DOI 10.1109/MS.2013.98
   Wikipedia, 2020, LEVENSHTEIN DISTANCE
   Yao Y, 2013, Arxiv, DOI arXiv:1311.6876
   Yao Y, 2015, INFORM SCIENCES, V302, P70, DOI 10.1016/j.ins.2014.12.038
   Yuan Tian, 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P247, DOI 10.1109/MSR.2012.6224287
   Zhang TY, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P886, DOI 10.1145/3180155.3180260
NR 105
TC 2
Z9 2
U1 1
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN
PY 2023
VL 28
IS 1
AR 9
DI 10.1007/s10664-022-10242-2
PG 43
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 6L0TX
UT WOS:000887903400001
PM 36465999
OA Green Published, Bronze, Green Submitted
DA 2024-07-18
ER

PT J
AU Bradley, NC
   Fritz, T
   Holmes, R
AF Bradley, Nick C.
   Fritz, Thomas
   Holmes, Reid
TI Sources of software development task friction
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Developer tasks; Developer goals; Developer tools; Development friction;
   Integrated Development Environments; Human aspects of SE
ID INFORMATION
AB Given a task description, a developer's job is to alter the software system in a way that accomplishes the task, usually by fixing a bug or adding a new feature. Completing these tasks typically requires developers to use multiple tools, spanning multiple applications, within their environment. In this paper, we investigate how existing desktop environments align with and facilitate developers' needs as they tackle their tasks. We examine how developers use their tools to perform their tasks and the ways in which these tools inhibit development velocity. Through a controlled user study with 17 subjects and a field study with 10 industrial engineers, we found that developers frequently formulate specific objectives, or goals, on-demand as they encounter new information when progressing through their tasks. These goals are often not achievable directly in the environment, forcing developers to translate their task into goals and their goals into the low-level actions provided by the environment. When carrying out these low-level actions, developers routinely perform extra work such as locating and integrating resources and adapting their needs to align with the capabilities of the environment. This extra work acts as a form of friction, limiting how quickly and directly developers can complete their tasks. Much of this extra work exists due to mismatches between current tools and environments and how developers actually work in practice. This work identifies seven types of development friction and provides design recommendations that future tools and environments could use to more effectively help developers complete their tasks.
C1 [Bradley, Nick C.] Univ British Columbia, Software Practices Lab, Vancouver, BC, Canada.
   [Holmes, Reid] Univ British Columbia, Comp Sci, Vancouver, BC, Canada.
   [Fritz, Thomas] Univ Zurich, Dept Informat, Zurich, Switzerland.
C3 University of British Columbia; University of British Columbia;
   University of Zurich
RP Bradley, NC (corresponding author), Univ British Columbia, Software Practices Lab, Vancouver, BC, Canada.
EM ncbrad@cs.ubc.ca; fritz@ifi.uzh.ch; rtholmes@cs.ubc.ca
OI Bradley, Nick/0000-0001-9974-0794
FU Natural Sciences and Engineering Research Council of Canada
   [PGSD3-519053-2018]
FX This work is supported, in part, by the Natural Sciences and Engineering
   Research Council of Canada grant no. PGSD3-519053-2018.
CR Adeli M., 2020, 2020 IEEE S VIS LANG, P1
   Alaboudi A, 2019, S VIS LANG HUM CEN C, P5, DOI [10.1109/VLHCC.2019.8818832, 10.1109/vlhcc.2019.8818832]
   Amann S, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P124, DOI 10.1109/SANER.2016.39
   [Anonymous], 2006, The Internet and Higher Education, DOI [10.1016/j.iheduc.2005.11.00, DOI 10.1016/J.IHEDUC.2005.11.00, DOI 10.1016/J.IHEDUC.2005.11.001]
   [Anonymous], 2013, P SIGCHI C HUMAN FAC
   Bannon L., 1983, P SIGCHI C HUMAN FAC, P54, DOI 10.1145/800045.801580
   Bao LF, 2018, EMPIR SOFTW ENG, V23, P1313, DOI 10.1007/s10664-017-9547-8
   Bardram JE, 2019, COMMUN ACM, V62, P72, DOI 10.1145/3325901
   Begel A., 2010, Software Engineering, 2010 ACM/IEEE 32nd International Conference on, V1, P125
   Beller M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P179, DOI 10.1145/2786805.2786843
   Bernstein M, 2008, UIST 2008: PROCEEDINGS OF THE 21ST ANNUAL ACM SYMPOSIUM ON USER INTERFACE SOFTWARE AND TECHNOLOGY, P231, DOI 10.1145/1449715.1449753
   Bragdon A, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P2503
   Byström K, 2005, J AM SOC INF SCI TEC, V56, P1050, DOI 10.1002/asi.20197
   Chapuis O, 2007, CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1 AND 2, P201
   Chattopadhyay S, 2019, PROC INT CONF SOFTW, P373, DOI 10.1109/ICSE.2019.00051
   Cubranic D, 2003, PROC INT CONF SOFTW, P408, DOI 10.1109/ICSE.2003.1201219
   DeLine R., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P207, DOI 10.1145/1810295.1810331
   Dragunov A., 2005, P 10 INT C INTELLIGE, P75, DOI DOI 10.1145/1040830.1040855
   Fritz T., 2010, P INT C SOFTW ENG IC, V1, P175
   Gonzalez V.M., 2004, Proceedings of the SIGCHI Conference on Human Factors in Computing Systems, P113, DOI [DOI 10.1145/985692.985707, 10.1145/985692.985707]
   Green T. R. G., 1989, People and Computers V. Proceedings of the Fifth Conference of the British Computer Society Human-Computer Interaction Specialist Group, P443
   Henley AZ, 2014, 32ND ANNUAL ACM CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2014), P2511, DOI 10.1145/2556288.2557073
   Jeuris S., 2014, P 27 ANN ACM S USER, P679, DOI DOI 10.1145/2642918.2647391
   Kaptelinin V., 2003, P SIGCHI C HUMAN FAC, P353, DOI DOI 10.1145/642611.642673
   Kersten M, 2005, P 2005 INT C ASP OR, P159, DOI DOI 10.1145/1052898.1052912
   Ko AJ, 2007, PROC INT CONF SOFTW, P344
   Ko AJ, 2006, IEEE T SOFTWARE ENG, V32, P971, DOI 10.1109/TSE.2006.116
   LaToza T. D., 2006, 28th International Conference on Software Engineering Proceedings, P492, DOI 10.1145/1134285.1134355
   Lawrance J, 2007, VL/HCC 2007: IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P15, DOI 10.1109/VLHCC.2007.25
   Lawrance J, 2013, IEEE T SOFTWARE ENG, V39, P197, DOI 10.1109/TSE.2010.111
   Lewis C., 1997, HDB HUMAN COMPUTER I, P717, DOI DOI 10.1016/B978-044481862-1.50096-0
   Maalej W, 2009, IEEE INT CONF AUTOM, P344, DOI 10.1109/ASE.2009.36
   Minelli R, 2015, INT C PROGRAM COMPRE, P25, DOI 10.1109/ICPC.2015.12
   Minelli R, 2015, INT C PROGRAM COMPRE, P182, DOI 10.1109/ICPC.2015.28
   Murphy GC, 2006, IEEE SOFTWARE, V23, P76, DOI 10.1109/MS.2006.105
   Oliver Nuria, 2008, 13th International Conference on Intelligent User Interfaces. IUI 2008, DOI 10.1145/1378773.1378836
   Oliver N., 2006, 2006 International Conference on Intelligent User Interfaces, P194, DOI 10.1145/1111449.1111492
   Pilzer Jan, 2020, P C HUMAN FACTORS CO, P1
   Piorkowski D, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P97, DOI 10.1145/2950290.2950302
   Piorkowski D, 2015, PROC IEEE INT CONF S, P11, DOI 10.1109/ICSM.2015.7332447
   Pirolli P., 1995, P SIGCHI C HUM FACT, P51, DOI DOI 10.1145/223904.223911
   Ragavan SS, 2021, IEEE T SOFTWARE ENG, V47, P1644, DOI 10.1109/TSE.2019.2931296
   Rattenbury T, 2007, CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1 AND 2, P687
   Robertson G., 2004, P WORKING C ADV VISU, P85, DOI 10.1145/989863.989874
   Robillard MP, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1189748.1189751
   Robillard MP, 2004, IEEE T SOFTWARE ENG, V30, P889, DOI 10.1109/TSE.2004.101
   Röthlisberger D, 2009, WORK CONF REVERSE EN, P237, DOI 10.1109/WCRE.2009.18
   Sillito J, 2008, IEEE T SOFTWARE ENG, V34, P434, DOI 10.1109/TSE.2008.26
   Singer Janice, 1997, Proceedings of the 1997 Conference of the Centre for Advanced Studies on Collaborative Research. CASCON '97, P21
   Smith G. K., 2003, Practical considerations for managing osteoarthritic patients, P1
   SOLOWAY E, 1986, COMMUN ACM, V29, P850, DOI 10.1145/6592.6594
   Strauss A., 1994, HDB QUALITATIVE RES, P273, DOI DOI 10.1007/BF00988593
   Tashman C., 2006, P ACM S USER INTERFA, P77, DOI DOI 10.1145/1166253.1166266
   Vallacher RR., 2012, HDB THEORIES SOCIAL, V1, P327, DOI DOI 10.4135/9781446249215.N17
   Venolia G, 2005, BRIDGES SILOS MICROS
   Wang YX, 2010, COGN SYST RES, V11, P81, DOI 10.1016/j.cogsys.2008.08.003
   Zhao SD, 2012, PROCEEDINGS OF THE INTERNATIONAL WORKING CONFERENCE ON ADVANCED VISUAL INTERFACES, P365, DOI 10.1145/2254556.2254626
NR 57
TC 1
Z9 1
U1 1
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2022
VL 27
IS 7
AR 175
DI 10.1007/s10664-022-10187-6
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4V4SY
UT WOS:000859469500003
DA 2024-07-18
ER

PT J
AU Ågren, P
   Knoph, E
   Svensson, RB
AF Agren, Pernilla
   Knoph, Eli
   Svensson, Richard Berntsson
TI Agile software development one year into the COVID-19 pandemic
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE COVID-19; Pandemic; Remote work; Working from home; Agile software
   development; Bayesian analysis; Explanatory sequential mixed methods
ID MODELS; ENGINEERS
AB As a result of the COVID-19 pandemic, many agile practitioners had to transition into a remote work environment. Despite remote work not being a new concept for agile software practitioners, the forced or recommended nature of remote work is new. This study investigates how the involuntary shift to remote work and how social restrictions imposed by the COVID-19 pandemic have affected agile software development (ASD), and how agile practitioners have been affected in terms of ways of working. An explanatory sequential mixed methods study was performed. Data were collected one year into the COVID-19 pandemic through a questionnaire with 96 respondents and in-depth semi-structured interviews with seven practitioners from seven different companies. Data were analyzed through Bayesian analysis and thematic analysis. The results show, in general, that the aspects of ASD that have been the most affected is communication and social interactions, while technical work aspects have not experienced the same changes. Moreover, feeling forced to work remotely has a significant impact on different aspects of ASD, e.g., productivity and communication, and industry practitioners' employment of agile development and ways of working have primarily been affected by the lack of social interaction and the shift to digital communication. The results also suggest that there may be a group maturing debt when teams do go back into office, as digital communication and the lack of psychological safety stand in the way for practitioners' ability to have sensitive discussions and progress as a team in a remote setting.
C1 [Agren, Pernilla; Knoph, Eli] Chalmers Univ Technol, Gothenburg, Sweden.
   [Svensson, Richard Berntsson] Chalmers, Dept Comp Sci & Engn, Interact Design & Software Engn Div, Software Engn, Gothenburg, Sweden.
   [Svensson, Richard Berntsson] Univ Gothenburg, Gothenburg, Sweden.
C3 Chalmers University of Technology; Chalmers University of Technology;
   University of Gothenburg
RP Svensson, RB (corresponding author), Chalmers, Dept Comp Sci & Engn, Interact Design & Software Engn Div, Software Engn, Gothenburg, Sweden.; Svensson, RB (corresponding author), Univ Gothenburg, Gothenburg, Sweden.
EM agrenp@student.chalmers.se; knoph@student.chalmers.se; richard@cse.gu.se
FU University of Gothenburg
FX Open access funding provided by University of Gothenburg.
CR Amir B, 2018, PROC IEEE ACM INT C, P344, DOI 10.1145/3183440.3195001
   [Anonymous], 2020, SUBW MAP AG PRACT
   [Anonymous], 2008, GUIDE ADV EMPIRICAL
   Asif MS, 2020, J CLEAN PROD, V276, DOI 10.1016/j.jclepro.2020.124191
   Baltes S, 2020, ARXIV 200207764
   Baskerville R, 1999, NEW INFORM TECHNOLOG, V20
   Betancourt M, 2016, ARXIV 160400695
   Bezerra Carla I. M., 2020, SBES '20: Proceedings of the 34th Brazilian Symposium on Software Engineering, P606, DOI 10.1145/3422392.3422417
   Bird C, 2009, PROC INT CONF SOFTW, P518, DOI 10.1109/ICSE.2009.5070550
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   Bürkner PC, 2019, ADV METH PRACT PSYCH, V2, P77, DOI 10.1177/2515245918823199
   Cadete S., 2020, INT J SOFTWARE ENG A, V11, P15
   Cresswell J.W., 2015, A Concise Introduction to Mixed Methods Research
   Creswell J.W., 2014, Fourth Edition. Research design: Qualitative, quantitative
   Dhama K, 2020, CLIN MICROBIOL REV, V33, DOI 10.1128/CMR.00028-20
   Duffy C, 2020, BIG TECH FIRMS RAMP
   Ford D., 2021, ACM T SOFTW ENG METH, V31, P1
   Fowler M., 2001, Software Development, V9, P28
   Furia CA, 2021, IEEE T SOFTWARE ENG, V47, P1786, DOI 10.1109/TSE.2019.2935974
   Ioannidis JPA, 2005, PLOS MED, V2, P696, DOI 10.1371/journal.pmed.0020124
   Juristo N., 2013, BASICS SOFTWARE ENG
   Kude T., 2020, AGILE SOFTWARE DEV T, P1
   Liddell TM, 2018, J EXP SOC PSYCHOL, V79, P328, DOI 10.1016/j.jesp.2018.08.009
   Machado LS, 2021, IEEE SOFTWARE, V38, P38, DOI 10.1109/MS.2020.3040135
   Mancl D, 2020, LECT NOTES BUS INF P, V396, P309, DOI 10.1007/978-3-030-58858-8_32
   Marek Krzysztof, 2021, Lean and Agile Software Development. 5th International Conference, LASD 2021. Proceedings. Lecture Notes in Business Information Processing (LNBIP 408), P24, DOI 10.1007/978-3-030-67084-9_2
   McConnell S., 2020, WFH AGE CORONAVIRUS
   McElreath R, 2016, TEXT STAT SCI, pXI
   Miller C, 2021, PROC INT CONF SOFTW, P624, DOI 10.1109/ICSE43902.2021.00064
   Morey RD, 2016, PSYCHON B REV, V23, P103, DOI 10.3758/s13423-015-0947-8
   Neumann Michael, 2021, Lean and Agile Software Development. 5th International Conference, LASD 2021. Proceedings. Lecture Notes in Business Information Processing (LNBIP 408), P40, DOI 10.1007/978-3-030-67084-9_3
   NicCanna C., 2021, ARXIV 210317181
   Nolan A, 2021, COMM COM INF SC, V1442, P14, DOI 10.1007/978-3-030-85521-5_2
   Nuzzo R, 2014, NATURE, V506, P150, DOI 10.1038/506150a
   O'Grady NP, 2002, CLIN INFECT DIS, V35, P1281, DOI 10.1086/502007
   Oz T., 2020, EXPLORING IMPACT MAN, DOI [10.1111/bjop.12468, DOI 10.1111/BJOP.12468]
   Ralph P, 2020, EMPIR SOFTW ENG, V25, P4927, DOI 10.1007/s10664-020-09875-y
   Rizvi B, 2015, J SOFTW-EVOL PROC, V27, P723, DOI 10.1002/smr.1718
   Robson C., 2002, REAL WORLD RES RESOU
   Rodeghero P, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2021), P41, DOI 10.1109/ICSE-SEIP52600.2021.00013
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Russo D, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2021), P364, DOI 10.1109/ICSE-SEIP52600.2021.00048
   Russo D, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09945-9
   Schmidtner Markus, 2021, IEEE Engineering Management Review, V49, P18, DOI 10.1109/EMR.2021.3069940
   Shull F, 2008, GUIDE ADV EMPIRICAL
   Silveira P, 2021, IEEE T SOFTWARE ENG
   Singer Janice, 2008, Guide to Advanced Empirical Software Engineering, P9
   TUCKMAN BW, 1965, PSYCHOL BULL, V63, P384, DOI 10.1037/h0022100
   TUTZ G, 1990, BRIT J MATH STAT PSY, V43, P39, DOI 10.1111/j.2044-8317.1990.tb00925.x
   Vallon R, 2018, INFORM SOFTWARE TECH, V96, P161, DOI 10.1016/j.infsof.2017.12.004
   van Bennekum A., 2001, Principles behind the Agile Manifesto
   WALKER SH, 1967, BIOMETRIKA, V54, P167, DOI 10.1093/biomet/54.1-2.167
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Woolston C., 2015, Nature, V519, P9, DOI [DOI 10.1038/519009F, 10.1038/519009f]
   World Health Organization, 2020, GETT YOUR WORKPL REA
   Yang X., 2020, ARXIV 200513167
NR 56
TC 6
Z9 7
U1 8
U2 29
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2022
VL 27
IS 6
AR 121
DI 10.1007/s10664-022-10176-9
PG 50
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 2H9PO
UT WOS:000814619000002
PM 35757145
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Li, Z
   Wu, YC
   Ma, L
   Xie, XF
   Chen, YF
   Fan, CJ
AF Li, Zhuo
   Wu, Yuechen
   Ma, Lei
   Xie, Xiaofei
   Chen, Yingfeng
   Fan, Changjie
TI GBGallery : A benchmark and framework for game testing
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Game testing; Bug database; Automated testing; Deep reinforcement
   learning
AB Software bug database and benchmark are the wheels of advancing automated software testing. In practice, real bugs often occur sparsely relative to the amount of software code, the extraction and curation of which are quite labor-intensive but can be essential to facilitate the innovation of testing techniques. Over the past decade, several milestones have been made to construct bug databases, pushing the progress of automated software testing research. However, up to the present, it still lacks a real bug database and benchmark for game software, making current game testing research mostly stagnant. The missing of bug database and framework greatly limits the development of automated game testing techniques. To bridge this gap, we first perform large-scale real bug collection and manual analysis from 5 large commercial games, with a total of more than 250,000 lines of code. Based on this, we propose GBGallery, a game bug database and an extensible framework, to enable automated game testing research. In its initial version, GBGallery contains 76 real bugs from 5 games and incorporates 5 state-of-the-art testing techniques for comparative study as a baseline for further research. With GBGallery, we perform large-scale empirical studies and find that the current automated game testing is still at an early stage, where new testing techniques for game software should be extensively investigated. We make GBGallery publicly available, hoping to facilitate the game testing research.
C1 [Li, Zhuo; Ma, Lei] Kyushu Univ, Fukuoka, Japan.
   [Wu, Yuechen; Chen, Yingfeng; Fan, Changjie] NetEase Fuxi AI Lab, Hangzhou, Peoples R China.
   [Ma, Lei] Univ Alberta, Edmonton, AB, Canada.
   [Ma, Lei] Alberta Machine Intelligence Inst, Edmonton, AB, Canada.
   [Xie, Xiaofei] Singapore Management Univ, Singapore, Singapore.
C3 Kyushu University; University of Alberta; Singapore Management
   University
RP Xie, XF (corresponding author), Singapore Management Univ, Singapore, Singapore.
EM li.zhuo.786@s.kyushu-u.ac.jp; wuyuechen@corp.netease.com;
   ma.lei@acm.org; xfxie@smu.edu.sg; chenyingfeng1@corp.netease.com;
   fanchangjie@corp.netease.com
OI , Xiaofei/0000-0002-1288-6502
FU Canada First Research Excellence Fund as part of the University of
   Alberta's Future Energy Systems research initiative; Canada CIFAR AI
   Chairs Program; Amii RAP program; Natural Sciences and Engineering
   Research Council of Canada (NSERC) [RGPIN-2021-02549, RGPAS-2021-00034,
   DGECR-2021-00019]; Ministry of Education, Singapore under its Academic
   Research Fund Tier 1 [21-SIS-SMU-033]; JSPS KAKENHI Grant [JP20H04168,
   JP21H04877]; JST-Mirai Program Grant [JPMJMI20B8]; JST SPRING Grant
FX This work was supported in part by funding from the Canada First
   Research Excellence Fund as part of the University of Alberta's Future
   Energy Systems research initiative, Canada CIFAR AI Chairs Program, Amii
   RAP program, the Natural Sciences and Engineering Research Council of
   Canada (NSERC No.RGPIN-2021-02549, No.RGPAS-2021-00034,
   No.DGECR-2021-00019), the Ministry of Education, Singapore under its
   Academic Research Fund Tier 1 (21-SIS-SMU-033), as well as JSPS KAKENHI
   Grant No.JP20H04168, No.JP21H04877, JST-Mirai Program Grant
   No.JPMJMI20B8, and JST SPRING Grant.
CR Aleem S, 2016, J COMPUT SCI TECH-CH, V31, P925, DOI 10.1007/s11390-016-1673-z
   Amann S, 2019, IEEE T SOFTWARE ENG, V45, P1170, DOI 10.1109/TSE.2018.2827384
   Amann S, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P464, DOI [10.1145/2901739.2903506, 10.1109/MSR.2016.055]
   [Anonymous], 2021, GBGALLERY
   Banerjee I, 2013, INFORM SOFTWARE TECH, V55, P1679, DOI 10.1016/j.infsof.2013.03.004
   Borrelli A, 2020, IEEE WORK CONF MIN S, P198, DOI 10.1145/3379597.3387454
   Brockman Greg, 2016, arXiv
   Burda Y, 2018, Arxiv, DOI arXiv:1810.12894
   Cadar C., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, (USA), P209
   Dallmeier V., 2007, P 22 IEEE ACM INT C, P433
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Fraser Gordon, 2011, PROC 19 ACM SIGSOFT, P416, DOI 10.1145/2025113.2025179
   Hester T, 2018, AAAI CONF ARTIF INTE, P3223
   Hill A., 2018, GitHub
   HUTCHINS M, 1994, PROC INT CONF SOFTW, P191, DOI 10.1109/ICSE.1994.296778
   Iftikhar S, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P426, DOI 10.1109/MODELS.2015.7338274
   Inozemtseva L, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P435, DOI 10.1145/2568225.2568271
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Khalid H, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P610, DOI 10.1145/2635868.2635909
   Konda VR, 2003, SIAM J CONTROL OPTIM, V42, P1143, DOI 10.1137/S0363012901385691
   Lin D, 2017, EMPIR SOFTW ENG, V22, P2095, DOI 10.1007/s10664-016-9480-2
   Liu K, 2019, IEEE INT CONF SOFTW, P102, DOI 10.1109/ICST.2019.00020
   Lovreto G, 2018, BRAZIL SYMP GAME DIG, P48, DOI 10.1109/SBGAMES.2018.00015
   Madeiral F, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P468, DOI [10.1109/saner.2019.8667991, 10.1109/SANER.2019.8667991]
   Mnih V, 2013, Arxiv, DOI [arXiv:1312.5602, 10.48550/arxiv.1312.5602]
   Mnih V, 2015, NATURE, V518, P529, DOI 10.1038/nature14236
   NewZoo, 2020, GLOBAL GAMES MARKET
   Nordin M., 2018, IS IT FUN SOFTWARE T
   Pacheco C., 2007, OOPSLA 2007 COMPANIO, P815
   Papadakis M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P537, DOI 10.1145/3180155.3180183
   Pearson S, 2017, PROC INT CONF SOFTW, P609, DOI 10.1109/ICSE.2017.62
   Saha RK, 2018, IEEE WORK CONF MIN S, P10, DOI 10.1145/3196398.3196473
   Shamshiri S, 2015, IEEE INT CONF AUTOM, P201, DOI 10.1109/ASE.2015.86
   The Talos Principle, 2015, VID GAM BUG BLOG
   Wu YC, 2020, PROC IEEE INT CONF S, P692, DOI 10.1109/ICSME46990.2020.00074
   Zheng Y, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P784, DOI 10.1109/ASE.2019.00077
NR 36
TC 2
Z9 2
U1 3
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2022
VL 27
IS 6
AR 140
DI 10.1007/s10664-022-10158-x
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 3G3FI
UT WOS:000831239900001
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Brandt, C
   Zaidman, A
AF Brandt, Carolin
   Zaidman, Andy
TI Developer-centric test amplification The interplay between automatic
   generation human exploration
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software testing; Test amplification; Test exploration; Test generation;
   Developer-centric design
AB Automatically generating test cases for software has been an active research topic for many years. While current tools can generate powerful regression or crash-reproducing test cases, these are often kept separately from the maintained test suite. In this paper, we leverage the developer's familiarity with test cases amplified from existing, manually written developer tests. Starting from issues reported by developers in previous studies, we investigate what aspects are important to design a developer-centric test amplification approach, that provides test cases that are taken over by developers into their test suite. We conduct 16 semi-structured interviews with software developers supported by our prototypical designs of a developer-centric test amplification approach and a corresponding test exploration tool. We extend the test amplification tool DSpot, generating test cases that are easier to understand. Our IntelliJ plugin TestCube empowers developers to explore amplified test cases from their familiar environment. From our interviews, we gather 52 observations that we summarize into 23 result categories and give two key recommendations on how future tool designers can make their tools better suited for developer-centric test amplification.
C1 [Brandt, Carolin; Zaidman, Andy] Delft Univ Technol, Delft, Netherlands.
C3 Delft University of Technology
RP Brandt, C (corresponding author), Delft Univ Technol, Delft, Netherlands.
EM c.e.brandt@tudelft.nl; a.e.zaidman@tudelft.nl
RI Brandt, Carolin/AEL-1754-2022; Zaidman, Andy/O-6542-2014
OI Brandt, Carolin/0000-0001-7623-1970; Zaidman, Andy/0000-0003-2413-3935
FU Dutch science foundation NWO through the Vici "TestShift" grant
   [VI.C.182.032]
FX This research was funded by the Dutch science foundation NWO through the
   Vici "TestShift" grant (No. VI.C.182.032).
CR Almasi MM, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P263, DOI 10.1109/ICSE-SEIP.2017.27
   Alsharif A, 2019, PROC IEEE INT CONF S, P437, DOI 10.1109/ICSME.2019.00076
   Aniche M., 2021, IEEE T SOFTWARE ENG
   [Anonymous], 2012, How Google Tests Software
   Arcuri A, 2016, IEEE INT CONF SOFTW, P401, DOI 10.1109/ICST.2016.44
   Arcuri A, 2013, EMPIR SOFTW ENG, V18, P594, DOI 10.1007/s10664-013-9249-9
   Athanasiou D, 2014, IEEE T SOFTWARE ENG, V40, P1100, DOI 10.1109/TSE.2014.2342227
   Bangor A, 2008, INT J HUM-COMPUT INT, V24, P574, DOI 10.1080/10447310802205776
   Beck Kent L., 2003, Test Driven Development By Example
   Beller M, 2019, IEEE T SOFTWARE ENG, V45, P261, DOI 10.1109/TSE.2017.2776152
   Beller M, 2017, IEEE WORK CONF MIN S, P356, DOI 10.1109/MSR.2017.62
   Beller M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P179, DOI 10.1145/2786805.2786843
   Beller M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P559, DOI 10.1109/ICSE.2015.193
   Bevan N, 2001, INT J HUM-COMPUT ST, V55, P533, DOI 10.1006/ijhc.2001.0483
   Bihel S, 2018, ADAPTING AMPLIFIED U
   Brandt C, 2021, DEVELOPER CENTRIC TE, DOI DOI 10.5281/ZENODO.5254870
   CORBIN J, 1990, Z SOZIOL, V19, P418, DOI 10.1007/BF00988593
   Daka E, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P57, DOI 10.1145/3092703.3092727
   Daka E, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P107, DOI 10.1145/2786805.2786838
   Danglot B, 2020, EMPIR SOFTW ENG, V25, P2379, DOI 10.1007/s10664-019-09794-7
   Danglot B, 2019, J SYST SOFTWARE, V157, DOI 10.1016/j.jss.2019.110398
   Danglot B, 2019, EMPIR SOFTW ENG, V24, P2603, DOI 10.1007/s10664-019-09692-y
   Derakhshanfar P, 2020, IEEE INT CONF AUTOM, P1278, DOI 10.1145/3324884.3415299
   Derakhshanfar P, 2020, IEEE INT CONF AUTOM, P211, DOI 10.1145/3324884.3416643
   Fraser G, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2699688
   Fraser G, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P362, DOI 10.1109/ICST.2013.51
   Fraser Gordon, 2011, PROC 19 ACM SIGSOFT, P416, DOI 10.1145/2025113.2025179
   Grano G, 2020, PROC IEEE INT CONF S, P336, DOI 10.1109/ICSME46990.2020.00040
   Grano G, 2018, INT C PROGRAM COMPRE, P348, DOI 10.1145/3196321.3196363
   Haq FU, 2021, AUTOMATIC TEST SUITE
   Hoffman D, 2003, J SYST SOFTWARE, V66, P143, DOI 10.1016/S0164-1212(02)00055-9
   Infinitest, 2021, INF CONT TEST RUNH J
   Kochhar PS, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P61, DOI 10.1109/ICSE-SEIP.2019.00015
   Li BY, 2016, IEEE INT CONF SOFTW, P341, DOI 10.1109/ICST.2016.30
   Liu X, 2020, EXPLORING DEVELOPER
   Marculescu Bogdan, 2012, Search Based Software Engineering. Proceedings of the 4th International Symposium (SSBSE 2012), P273, DOI 10.1007/978-3-642-33119-0_21
   Marculescu B, 2018, J SYST SOFTWARE, V142, P156, DOI 10.1016/j.jss.2018.04.061
   Meszaros G., 2007, Xunit test patterns: refactoring test code
   Nassif M., 2021, IEEE T SOFTWARE ENG
   Nijkamp N, 2021, 2021 IEEE 21 INT WOR
   Oosterbroek W, 2021, 2021 IEEE 21 INT WOR
   Palomba F, 2016, P 25 INT S SOFTW TES, P130, DOI [10.1145/2931037.2931057, DOI 10.1145/2931037.2931057]
   Panichella S, 2016, PROC INT CONF SOFTW, P547, DOI 10.1145/2884781.2884847
   Prado MP, 2018, J SYST SOFTWARE, V141, P66, DOI 10.1016/j.jss.2018.03.052
   Robinson Brian, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P23, DOI 10.1109/ASE.2011.6100059
   Rojas J.M., 2015, Automated Unit Test Generation During Software Development: A Controlled Experiment and Think-aloud Observations, P338
   Roy D, 2020, IEEE INT CONF AUTOM, P287, DOI 10.1145/3324884.3416622
   Serra Domenico, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P121, DOI 10.1109/MSR.2019.00028
   Spadini D, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P677, DOI 10.1145/3180155.3180192
   STAMP, US CAS VAL REP V3
   STAMP, STAMP PROJ ECL IDE
   Tillmann N, 2008, LECT NOTES COMPUT SC, V4966, P134
   Zhang BW, 2016, IEEE INT CONF AUTOM, P625, DOI 10.1145/2970276.2970342
   Zhang Y., 2009, Unstructured interviews. Applications of social research methods to questions in information and library science, P222
NR 54
TC 7
Z9 7
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2022
VL 27
IS 4
AR 96
DI 10.1007/s10664-021-10094-2
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0X6QA
UT WOS:000789827200001
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Huang, Y
   Liang, XJ
   Chen, ZH
   Jia, N
   Luo, XP
   Chen, XP
   Zheng, ZB
   Zhou, XC
AF Huang, Yuan
   Liang, Xingjian
   Chen, Zhihao
   Jia, Nan
   Luo, Xiapu
   Chen, Xiangping
   Zheng, Zibin
   Zhou, Xiaocong
TI Reviewing rounds prediction for code patches
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Code review; Code patch; Reviewing rounds; Machine learning;
   Discriminative feature
ID IMPACT
AB Code review is one of the common activities to guarantee the reliability of software, while code review is time-consuming as it requires reviewers to inspect the source code of each patch. A patch may be reviewed more than once before it is eventually merged or abandoned, and then such a patch may tighten the development schedule of the developers and further affect the development progress of a project. Thus, a tool that predicts early on how long a patch will be reviewed can help developers take self-inspection beforehand for the patches that require long-time review. In this paper, we propose a novel method, PMCost, to predict the reviewing rounds of a patch. PMCost uses a number of features, including patch meta-features, code diff features, personal experience features and patch textual features, to better reflect code changes and review process. To examine the benefits of PMCost, we perform experiments on three large open source projects, namely Eclipse, OpenDaylight and OpenStack. The encouraging experimental results demonstrate the feasibility and effectiveness of our approach. Besides, we further study the why the proposed features contribute to the reviewing rounds prediction.
C1 [Huang, Yuan; Zheng, Zibin] Sun Yat Sen Univ, Sch Software Engn, Zhuhai 510006, Peoples R China.
   [Liang, Xingjian; Chen, Zhihao; Zhou, Xiaocong] Sun Yat Sen Univ, Sch Comp Sci & Engn, Guangzhou 510006, Peoples R China.
   [Jia, Nan] Hebei GEO Univ, Sch Informat Engn, Shijiazhuang 050031, Hebei, Peoples R China.
   [Luo, Xiapu] Hong Kong Polytech Univ, Dept Comp, Hong Kong, Peoples R China.
   [Chen, Xiangping] Sun Yat Sen Univ, Sch Commun & Design, Guangdong Key Lab Big Data Anal & Simulat Publ Op, Guangzhou 510006, Peoples R China.
C3 Sun Yat Sen University; Sun Yat Sen University; Hebei GEO University;
   Hong Kong Polytechnic University; Sun Yat Sen University
RP Chen, XP (corresponding author), Sun Yat Sen Univ, Sch Commun & Design, Guangdong Key Lab Big Data Anal & Simulat Publ Op, Guangzhou 510006, Peoples R China.
EM huangyuan5@mail.sysu.edu.cn; liangxj8@mail2.sysu.edu.cn;
   chenzhh95@mail2.sysu.edu.cn; jianan_0101@163.com;
   csxluo@comp.polyu.edu.hk; chenxp8@mail.sysu.edu.cn;
   zhzibin@mail.sysu.edu.cn; isszxc@mail.sysu.edu.cn
RI chen, zhihao/GXM-3816-2022; zhihao, chen/JBS-2286-2023; Zheng,
   Zibin/E-3024-2014
OI chen, xiang ping/0000-0001-8234-3186; Zheng, Zibin/0000-0002-7878-4330
FU Key-Area Research and Development Program of Guangdong Province
   [2020B010164002]; National Natural Science Foundation of China
   [61902441, 61902105, 62032025]; HK RGC Project [PolyU 152239/18E];
   Guangdong Basic and Applied Basic Research Foundation
   [2020A-1515010973]; Fundamental Research Funds for the Central
   Universities [20lgpy129]
FX The work is supported by the Key-Area Research and Development Program
   of Guangdong Province (No. 2020B010164002), the National Natural Science
   Foundation of China (Nos. 61902441, 61902105, 62032025), HK RGC Project
   (No. PolyU 152239/18E), Guangdong Basic and Applied Basic Research
   Foundation(No. 2020A-1515010973), the Fundamental Research Funds for the
   Central Universities (No. 20lgpy129). Xiangping Chen is the
   corresponding author.
CR [Anonymous], 2009, Research on software analysis for error-free computing center Tech-Memo (ROSAEC MEMO 2009-006)
   [Anonymous], 2013, P JOINT M EUR SOFTW
   [Anonymous], 2014, 11 WORKING C MINING, DOI [DOI 10.1145/2597073.2597076, DOI 10.1145/2597073]
   [Anonymous], 2011, ACM T INTEL SYST TEC, DOI DOI 10.1145/1961189.1961199
   Baum T, 2019, EMPIR SOFTW ENG, V24, P1762, DOI 10.1007/s10664-018-9676-8
   Baysal O, 2013, WORK CONF REVERSE EN, P122, DOI 10.1109/WCRE.2013.6671287
   Bollobas B, 1998, GRADUATE TEXTS MATH, V184
   Breiman L, 2001, MACH LEARN, V45, P5, DOI 10.1023/A:1010933404324
   Cerqueira V, 2020, MACH LEARN, V109, P1997, DOI 10.1007/s10994-020-05910-7
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   CORTES C, 1995, MACH LEARN, V20, P273, DOI 10.1007/BF00994018
   Eyolfson J., 2011, WORKING C MINING SOF, P153, DOI DOI 10.1145/1985441.1985464
   Fagan M., 2002, Software Pioneers, P575
   Fan YR, 2018, EMPIR SOFTW ENG, V23, P3346, DOI 10.1007/s10664-018-9602-0
   GILL GK, 1991, IEEE T SOFTWARE ENG, V17, P1284, DOI 10.1109/32.106988
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   Hansen DL, 2011, ANALYZING SOCIAL MEDIA NETWORKS WITH NODEXL: INSIGHTS FROM A CONNECTED WORLD, P11, DOI 10.1016/B978-0-12-382229-1.00002-3
   HINTON GE, 1989, ARTIF INTELL, V40, P185, DOI 10.1016/0004-3702(89)90049-0
   Huang Y., 2021, IEEE T SOFTW ENG, VPP, P1, DOI [10.1109/TSE.2021.3059481, DOI 10.1109/TSE.2021.3059481]
   Huang Y, 2020, IEEE T RELIAB, V69, P88, DOI 10.1109/TR.2019.2931725
   Huang Y, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P770, DOI 10.1145/3236024.3264841
   Huang Y, 2017, INT SYMP EMP SOFTWAR, P414, DOI 10.1109/ESEM.2017.56
   Jiang YJ, 2013, IEEE WORK CONF MIN S, P101, DOI 10.1109/MSR.2013.6624016
   Kagdi H, 2013, EMPIR SOFTW ENG, V18, P933, DOI 10.1007/s10664-012-9233-9
   Kagdi H, 2008, PROC IEEE INT CONF S, P157, DOI 10.1109/ICSM.2008.4658064
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Ke GL, 2017, ADV NEUR IN, V30
   Kikas R, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P291, DOI [10.1109/MSR.2016.038, 10.1145/2901739.2901751]
   Kononenko O, 2015, PROC IEEE INT CONF S, P111, DOI 10.1109/ICSM.2015.7332457
   LI B., 1984, CLASSIFICATION REGRE, V40, DOI [10.2307/2530946, DOI 10.2307/2530946]
   Liu Z., 2019, Automatic Generation of Pull Request Descriptions
   McIntosh S, 2016, EMPIR SOFTW ENG, V21, P2146, DOI 10.1007/s10664-015-9381-9
   Mi Q, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2915986
   Mikolov T., 2013, ADV NEURAL INFORM PR, V26, P3111, DOI DOI 10.5555/2999792.2999959
   PAL SK, 1992, IEEE T NEURAL NETWOR, V3, P683, DOI 10.1109/72.159058
   PREGIBON D, 1981, ANN STAT, V9, P705, DOI 10.1214/aos/1176345513
   QUINLAN JR, 1987, INT J MAN MACH STUD, V27, P221, DOI 10.1016/S0020-7373(87)80053-6
   Rigby PC, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2594458
   Rigby PC, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P541, DOI 10.1145/1985793.1985867
   Shihab E, 2013, EMPIR SOFTW ENG, V18, P1005, DOI 10.1007/s10664-012-9228-6
   Shivaji S, 2013, IEEE T SOFTWARE ENG, V39, P552, DOI 10.1109/TSE.2012.43
   Souza R, 2013, 2013 1ST INTERNATIONAL WORKSHOP ON DATA ANALYSIS PATTERNS IN SOFTWARE ENGINEERING (DAPSE), P26, DOI 10.1109/DAPSE.2013.6603806
   Spearman C., 2008, Spearman Rank Correlation Coefficient, P502, DOI [DOI 10.1007/978-0-387-32833-1_379, 10.1007/978-0-387-32833-1_379]
   Thongtanunam P, 2017, EMPIR SOFTW ENG, V22, P768, DOI 10.1007/s10664-016-9452-6
   van der Veen E, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P357, DOI 10.1109/MSR.2015.40
   Xia X, 2015, AUTOMAT SOFTW ENG, V22, P75, DOI 10.1007/s10515-014-0162-2
   Xia X, 2013, EUR CON SFTWR MTNCE, P331, DOI 10.1109/CSMR.2013.43
   Zanetti MS, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1032, DOI 10.1109/ICSE.2013.6606653
   Zou WQ, 2019, EMPIR SOFTW ENG, V24, P3871, DOI 10.1007/s10664-019-09720-x
NR 49
TC 2
Z9 2
U1 1
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN
PY 2022
VL 27
IS 1
AR 7
DI 10.1007/s10664-021-10035-z
PG 40
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WL2BB
UT WOS:000710216100002
OA hybrid
DA 2024-07-18
ER

PT J
AU Luo, LH
   Pauck, F
   Piskachev, G
   Benz, M
   Pashchenko, I
   Mory, M
   Bodden, E
   Hermann, B
   Massacci, F
AF Luo, Linghui
   Pauck, Felix
   Piskachev, Goran
   Benz, Manuel
   Pashchenko, Ivan
   Mory, Martin
   Bodden, Eric
   Hermann, Ben
   Massacci, Fabio
TI TaintBench: Automatic real-world malware benchmarking of Android taint
   analyses
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Taint analysis; Benchmark; Real-world benchmark; Android malware
AB Due to the lack of established real-world benchmark suites for static taint analyses of Android applications, evaluations of these analyses are often restricted and hard to compare. Even in evaluations that do use real-world apps, details about the ground truth in those apps are rarely documented, which makes it difficult to compare and reproduce the results. To push Android taint analysis research forward, this paper thus recommends criteria for constructing real-world benchmark suites for this specific domain, and presents TaintBench, the first real-world malware benchmark suite with documented taint flows. TaintBench benchmark apps include taint flows with complex structures, and addresses static challenges that are commonly agreed on by the community. Together with the TaintBench suite, we introduce the TaintBench framework, whose goal is to simplify real-world benchmarking of Android taint analyses. First, a usability test shows that the framework improves experts' performance and perceived usability when documenting and inspecting taint flows. Second, experiments using TaintBench reveal new insights for the taint analysis tools Amandroid and FlowDroid: (i) They are less effective on real-world malware apps than on synthetic benchmark apps. (ii) Predefined lists of sources and sinks heavily impact the tools' accuracy. (iii) Surprisingly, up-to-date versions of both tools are less accurate than their predecessors.
C1 [Luo, Linghui; Pauck, Felix; Benz, Manuel; Mory, Martin; Bodden, Eric] Paderborn Univ, Dept Comp Sci, Paderborn, Germany.
   [Piskachev, Goran; Bodden, Eric] Fraunhofer IEM, Paderborn, Germany.
   [Pashchenko, Ivan; Massacci, Fabio] Univ Trento, Dept Informat Sci & Engn, Trento, Italy.
   [Hermann, Ben] Tech Univ Dortmund, Dept Comp Sci, Dortmund, Germany.
   [Massacci, Fabio] Vrije Univ Amsterdam, Amsterdam, Netherlands.
C3 University of Paderborn; University of Trento; Dortmund University of
   Technology; Vrije Universiteit Amsterdam
RP Luo, LH (corresponding author), Paderborn Univ, Dept Comp Sci, Paderborn, Germany.
EM linghui.luo@upb.de; fpauck@mail.upb.de; ivan.pashchenko@unitn.it;
   fabio.massacci@ieee.org
RI Bodden, Eric/AAE-1365-2021; Luo, Linghui/AAK-3530-2021; Hermann,
   Ben/AAG-9524-2019; Massacci, Fabio/ABE-5231-2021
OI Bodden, Eric/0000-0003-3470-3647; Hermann, Ben/0000-0001-9848-2017; Luo,
   Linghui/0000-0003-2054-0373; Pauck, Felix/0000-0001-9237-2319
FU Projekt DEAL; research training group Human Centered Systems Security
   (NERD.NRW) - state of North Rhine-Westphalia in Germany; European Union
   [952647, 830929]
FX Open Access funding enabled and organized by Projekt DEAL. This research
   was supported by the research training group Human Centered Systems
   Security (NERD.NRW) sponsored by the state of North Rhine-Westphalia in
   Germany. It was also partly supported by the European Union H2020
   programme under grant agreement 952647 (AssureMOSS) and grant agreement
   830929 (CyberSec4Europe).
CR Aniche M., 2015, Tech. Rep.
   AQL, 2020, ANDR APP AN QUER LAN
   Arp D, 2014, 21ST ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2014), DOI 10.14722/ndss.2014.23247
   Arzt S, 2014, ACM SIGPLAN NOTICES, V49, P259, DOI [10.1145/2666356.2594299, 10.1145/2594291.2594299]
   Avdiienko V, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P426, DOI 10.1109/ICSE.2015.61
   Benz M, 2020, PROC INT CONF SOFTW, P1061, DOI 10.1145/3377811.3380438
   Blackburn SM, 2006, ACM SIGPLAN NOTICES, V41, P169, DOI 10.1145/1167515.1167488
   Bohluli Z, 2018, INT ISC CONF INFO SE
   Bosu AS, 2017, PROCEEDINGS OF THE 2017 ACM ASIA CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (ASIA CCS'17), P71, DOI 10.1145/3052973.3053004
   Brooke J., 1996, USABILITY EVALUATION, P189, DOI DOI 10.1201/9781498710411-35
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Do LNQ, 2016, P 5 SOAP PLDI
   Eichberg M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P474, DOI 10.1145/2786805.2786865
   Enck W, 2014, ACM T COMPUT SYST, V32, DOI 10.1145/2619091
   Fengguo Wei, 2017, Detection of Intrusions and Malware, and Vulnerability Assessment. 14th International Conference, DIMVA 2017. Proceedings: LNCS 10327, P252, DOI 10.1007/978-3-319-60876-1_12
   GitHub, 2020, GITHUB ACTIONS
   Gordon MI, 2015, 22ND ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2015), DOI 10.14722/ndss.2015.23089
   Grech N, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133926
   Huang JJ, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1036, DOI 10.1145/2568225.2568301
   Huang W., 2015, P 2015 INT S SOFTWAR, P106, DOI 10.1145/2771783.2771803
   JADX, 2020, DEX JAV DEC
   Jiang X, 2013, P 8 ACM SIGSAC S INF, P329
   Lam P., 2011, P CET US COMP INFR W, V15, P35
   Li L, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P280, DOI 10.1109/ICSE.2015.48
   Livshits VB, 2005, USENIX ASSOCIATION PROCEEDINGS OF THE 14TH USENIX SECURITY SYMPOSIUM, P271
   Luo L, P 33 ECOOP, V134
   Luo LH, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P102, DOI 10.1109/ASE.2019.00020
   Micro T., 2020, NEW TEKYA AD FRAUD F
   Microsoft, 2020, VSC VIS STUD COD
   Mitra Joydeep, 2017, P 13 INT C PRED MOD, P43, DOI DOI 10.1145/3127005.3127010
   Nguyen Tan Cam, 2016, International Conference on Information Science and Applications (ICISA) 2016. LNEE 376, P689, DOI 10.1007/978-981-10-0557-2_68
   OASIS, 2019, STAT AN RES INT FORM
   OWASP, 2021, OWASP BENCHM
   Pauck F, 2019, 2019 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING WORKSHOPS (ASEW 2019), P7, DOI 10.1109/ASEW.2019.00019
   Pauck F, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P374, DOI 10.1145/3338906.3338915
   Pauck F, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P331, DOI 10.1145/3236024.3236029
   Piskachev G, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P181, DOI 10.1145/3293882.3330556
   Prokopec A, 2019, PROCEEDINGS OF THE 40TH ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '19), P31, DOI 10.1145/3314221.3314637
   Qiu LN, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P176, DOI 10.1145/3213846.3213873
   Ranganath VP, 2020, EMPIR SOFTW ENG, V25, P178, DOI 10.1007/s10664-019-09749-y
   Rasthofer S., 2013, ANDROID LOGGING SERV
   Rasthofer S, 2014, 21ST ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2014), DOI 10.14722/ndss.2014.23039
   Reif M, 2017, P 6 SOAP PLDI
   Rountev A., 2004, Software Engineering Notes, V29, P1, DOI 10.1145/1013886.1007514
   Soni J., 2020, THIS DANGEROUS MALWA
   statcounter, 2019, OPERATING SYSTEM MAR
   Vallee-Rai R., 1999, Proceedings of the 1999 Conference of the Centre for Advanced Studies on Collaborative Research, CASCON'99, page, P13
   Wei FG, 2014, CCS'14: PROCEEDINGS OF THE 21ST ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1329, DOI 10.1145/2660267.2660357
   Wong MY, 2016, 23RD ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2016), DOI 10.14722/ndss.2016.23118
   Yang T, 2016, P SMARTCLOUD
   Youssef A, 2017, PROCEEDINGS OF THE 12TH INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY AND SECURITY (ARES 2017), DOI 10.1145/3098954.3105827
   Zhang J, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P236, DOI 10.1109/ICSE-Companion.2019.00092
   Zheng C., 2012, P 2 ACM WORKSHOP SEC, P93, DOI DOI 10.1145/2381934.2381950
NR 53
TC 10
Z9 10
U1 2
U2 13
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN
PY 2022
VL 27
IS 1
AR 16
DI 10.1007/s10664-021-10013-5
PG 41
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WO2JZ
UT WOS:000712287300003
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Kamienski, A
   Bezemer, CP
AF Kamienski, Arthur
   Bezemer, Cor-Paul
TI An empirical study of Q&A websites for game developers
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Q&A communities; Game development
ID STACK OVERFLOW; KNOWLEDGE; COMMUNITIES; QUESTIONS; BEHAVIOR; SOFTWARE;
   ENGINES; ANSWERS
AB The game development industry is growing, and training new developers in game development-specific abilities is essential to satisfying its need for skilled game developers. These developers require effective learning resources to acquire the information they need and improve their game development skills. Question and Answer (Q&A) websites stand out as some of the most used online learning resources in software development. Many studies have investigated how Q&A websites help software developers become more experienced. However, no studies have explored Q&A websites aimed at game development, and there is little information about how game developers use and interact with these websites. In this paper, we study four Q&A communities by analyzing game development data we collected from their websites and the 347 responses received on a survey we ran with game developers. We observe that the communities have declined over the past few years and identify factors that correlate to these changes. Using a Latent Dirichlet Allocation (LDA) model, we characterize the topics discussed in the communities. We also analyze how topics differ across communities and identify the most discussed topics. Furthermore, we find that survey respondents have a mostly negative view of the communities and tended to stop using the websites once they became more experienced. Finally, we provide recommendations on where game developers should post their questions, which can help mitigate the websites' declines and improve their effectiveness.
C1 [Kamienski, Arthur; Bezemer, Cor-Paul] Univ Alberta, Analyt Software Games & Repository Data ASGAARD L, Edmonton, AB, Canada.
C3 University of Alberta
RP Kamienski, A (corresponding author), Univ Alberta, Analyt Software Games & Repository Data ASGAARD L, Edmonton, AB, Canada.
EM kamiensk@ualberta.ca; bezemer@ualberta.ca
OI Bezemer, Cor-Paul/0000-0002-0474-5718; Veloso Kamienski,
   Arthur/0000-0003-3851-8262
CR Adamic LA, 2008, P 17 INT C WORLD WID, P665, DOI DOI 10.1145/1367497.1367587
   Ahmad A, 2018, DATA TECHNOL APPL, V52, P190, DOI 10.1108/DTA-07-2017-0054
   Ahmed S, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3239524
   Allamanis M, 2013, IEEE WORK CONF MIN S, P53, DOI 10.1109/MSR.2013.6624004
   An L, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P283, DOI 10.1109/SANER.2017.7884629
   Anderson Ashton, 2012, P 18 ACM SIGKDD INT, DOI DOI 10.1145/2339530.2339665
   [Anonymous], 2020, STACK OVERFLOWS 2020
   [Anonymous], 2020, Stack Overflow
   Asaduzzaman M, 2013, IEEE WORK CONF MIN S, P97, DOI 10.1109/MSR.2013.6624015
   Bajaj K, 2014, P 11 WORK C MIN SOFT, P112
   Bangash Abdul Ali, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P260, DOI 10.1109/MSR.2019.00052
   Barua A, 2014, EMPIR SOFTW ENG, V19, P619, DOI 10.1007/s10664-012-9231-y
   Beyer S, 2020, EMPIR SOFTW ENG, V25, P2258, DOI 10.1007/s10664-019-09758-x
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Blodgett BM, 2013, 14 ANN C ASS INT RES
   Blodgett BM, 2014, FDN DIGITAL GAMES
   Brookes J, 2020, BEHAV RES METHODS, V52, P455, DOI 10.3758/s13428-019-01242-0
   Budhiraja A, 2018, PROC IEEE ACM INT C, P165, DOI 10.1145/3183440.3195078
   Cavusoglu H., 2015, P ACM C COMPUTER SUP, V2015, P171, DOI DOI 10.1145/2685553.2698999
   Chen LT, 2019, DECIS SUPPORT SYST, V118, P21, DOI 10.1016/j.dss.2018.12.008
   Chen TH, 2016, EMPIR SOFTW ENG, V21, P1843, DOI 10.1007/s10664-015-9402-8
   Christopoulou E, 2017, INT J SERIOUS GAMES, V4, P21, DOI 10.17083/ijsg.v4i4.194
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Cowan B, 2014, IEEE INT CONF ADV LE, P662, DOI 10.1109/ICALT.2014.194
   COX DR, 1955, BIOMETRIKA, V42, P80, DOI 10.1093/biomet/42.1-2.80
   Cristie V, 2017, GAMING MEDIA SOC EFF, P87, DOI 10.1007/978-981-10-1962-3_5
   Cummaudo A, 2020, PROC INT CONF SOFTW, P1584, DOI 10.1145/3377811.3380404
   Deng SL, 2019, INFORM PROCESS MANAG, V56, DOI 10.1016/j.ipm.2019.102082
   Epp R, 2021, IEEE T GAMES, P1
   Fang CC, 2019, COMPUT HUM BEHAV, V92, P87, DOI 10.1016/j.chb.2018.10.036
   Fischer F, 2017, P IEEE S SECUR PRIV, P121, DOI 10.1109/SP.2017.31
   Fisher StephanieJ., 2013, LOADING, V7
   Ford D, 2018, PROCEEDINGS OF THE 2018 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2018), DOI 10.1145/3173574.3174182
   Foxman M, 2019, SOC MEDIA SOC, V5, DOI 10.1177/2056305119880177
   Fu HY, 2019, INFORM PROCESS MANAG, V56, P14, DOI 10.1016/j.ipm.2018.08.007
   Guan T, 2018, COMPUT HUM BEHAV, V81, P137, DOI 10.1016/j.chb.2017.12.023
   Han JX, 2020, EMPIR SOFTW ENG, V25, P2694, DOI 10.1007/s10664-020-09819-6
   Harper FM, 2008, CHI 2008: 26TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS VOLS 1 AND 2, CONFERENCE PROCEEDINGS, P865
   Harrap R, 2019, GeoComputation
   Harvey A, 2019, TELEV NEW MEDIA, V20, P756, DOI 10.1177/1527476419851080
   Hong ZY, 2020, J MED INTERNET RES, V22, DOI 10.2196/13071
   Hu HY, 2019, EMPIR SOFTW ENG, V24, P7, DOI 10.1007/s10664-018-9617-6
   Jelodar H, 2019, MULTIMED TOOLS APPL, V78, P15169, DOI 10.1007/s11042-018-6894-4
   Jin JH, 2015, INFORM MANAGE-AMSTER, V52, P840, DOI 10.1016/j.im.2015.07.005
   Kanode CM, 2009, PROCEEDINGS OF THE 2009 SIXTH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: NEW GENERATIONS, VOLS 1-3, P260, DOI 10.1109/ITNG.2009.74
   Koksal I, 2020, VIDEO GAMING IND ITS
   Lin B, 2019, PROC INT CONF SOFTW, P548, DOI 10.1109/ICSE.2019.00066
   Linares-Vasquez M, 2014, P 22 INT C PROGR C, P83
   Linares-Vásquez M, 2013, IEEE WORK CONF MIN S, P93, DOI 10.1109/MSR.2013.6624014
   Lukins SK, 2010, INFORM SOFTWARE TECH, V52, P972, DOI 10.1016/j.infsof.2010.04.002
   Mamykina L, 2011, 29TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P2857
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Messaoudi F, 2017, ACM T MULTIM COMPUT, V13, DOI 10.1145/3115934
   Morris MR, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P1739
   Movshovitz-Attias D, 2013, 2013 IEEE/ACM INTERNATIONAL CONFERENCE ON ADVANCES IN SOCIAL NETWORKS ANALYSIS AND MINING (ASONAM), P892
   Nadi S, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P229, DOI [10.1109/SANER48275.2020.9054828, 10.1109/saner48275.2020.9054828]
   Parnin C, 2012, 11 GEORG I TECHN
   Pascarella L, 2018, IEEE WORK CONF MIN S, P392, DOI [10.1145/3196398.3196423, 10.1145/3196398.3196418]
   PORTER MF, 1980, PROGRAM-AUTOM LIBR, V14, P130, DOI 10.1108/eb046814
   Procaci TB, 2017, IEEE INT CONF ADV LE, P291, DOI 10.1109/ICALT.2017.56
   Procaci TB, 2016, IEEE INT CONF ADV LE, P407, DOI 10.1109/ICALT.2016.68
   Ravi S, 2014, P INT AAAI C WEB SOC, V8
   Ray B, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P155, DOI 10.1145/2635868.2635922
   Romano J, 2006, ANN M FLOR ASS I RES, P1
   Rosen C, 2016, EMPIR SOFTW ENG, V21, P1192, DOI 10.1007/s10664-015-9379-3
   Sadowski C, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P191, DOI 10.1145/2786805.2786855
   Santos T, 2020, ICWSM, V14, P969
   Shen XX, 2020, IEEE ACCESS, V8, P62238, DOI 10.1109/ACCESS.2020.2984342
   Somasundaram K., 2012, Proceedings of the 5th India Software Engineering Conference, ISEC '12, P125, DOI DOI 10.1145/2134254.2134276
   Treude C, 2016, PROC INT CONF SOFTW, P392, DOI 10.1145/2884781.2884800
   Treude C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P804, DOI 10.1145/1985793.1985907
   Wang SW, 2018, EMPIR SOFTW ENG, V23, P1552, DOI 10.1007/s10664-017-9558-5
   Wang Shaowei, 2013, SAC '13 Proceedings of the 28th Annual ACM Symposium on Applied Computing, P1019
   Wang Y, 2020, J SMALL BUS MANAGE, P1, DOI DOI 10.1111/jsbm.12533
   Whitson JR, 2018, NEW MEDIA SOC, V20, P2315, DOI 10.1177/1461444817715020
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Wu YH, 2019, EMPIR SOFTW ENG, V24, P637, DOI 10.1007/s10664-018-9634-5
   Yang XL, 2016, J COMPUT SCI TECH-CH, V31, P910, DOI 10.1007/s11390-016-1672-0
   Zahedi Mansooreh, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P41, DOI 10.1145/3383219.3383224
   Zhang H, 2019, IEEE T SOFTW ENG
   Zhang X, 2017, MANAGE DECIS, V55, P1536, DOI 10.1108/MD-10-2016-0739
   Zhang YC, 2019, J ASSOC INF SYST, V20, P1129, DOI 10.17705/1jais.00563
   Zhou JY, 2020, EMPIR SOFTW ENG, V25, P139, DOI 10.1007/s10664-019-09744-3
NR 83
TC 8
Z9 8
U1 2
U2 22
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2021
VL 26
IS 6
AR 115
DI 10.1007/s10664-021-10014-4
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA UC8IY
UT WOS:000686766900001
PM 34426725
OA Bronze, Green Published
DA 2024-07-18
ER

PT J
AU Kuutila, M
   Mäntylä, M
   Claes, M
   Elovainio, M
   Adams, B
AF Kuutila, Miikka
   Mantyla, Mika
   Claes, Maelick
   Elovainio, Marko
   Adams, Bram
TI Individual differences limit predicting well-being and productivity
   using software repositories: a longitudinal industrial study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Field study; Mining software repositories; Well-being; Experience
   sampling; Stress; Human factors; Negative result
ID EXPERIENCE SAMPLING METHODOLOGY; GOODNESS-OF-FIT; WORK STRESS; JOB
   DEMANDS; PUBLICATION BIAS; VALIDITY; IMPACT; TIME; SATISFACTION;
   PRESSURE
AB Reports of poor work well-being and fluctuating productivity in software engineering have been reported in both academic and popular sources. Understanding and predicting these issues through repository analysis might help manage software developers' well-being. Our objective is to link data from software repositories, that is commit activity, communication, expressed sentiments, and job events, with measures of well-being obtained with a daily experience sampling questionnaire. To achieve our objective, we studied a single software project team for eight months in the software industry. Additionally, we performed semi-structured interviews to explain our results. The acquired quantitative data are analyzed with generalized linear mixed-effects models with autocorrelation structure. We find that individual variance accounts for most of the R-2 values in models predicting developers' experienced well-being and productivity. In other words, using software repository variables to predict developers' well-being or productivity is challenging due to individual differences. Prediction models developed for each developer individually work better, with fixed effects R-2 value of up to 0.24. The semi-structured interviews give insights into the well-being of software developers and the benefits of chat interaction. Our study suggests that individualized prediction models are needed for well-being and productivity prediction in software development.
C1 [Kuutila, Miikka; Mantyla, Mika; Claes, Maelick] Univ Oulu, ITEE, M3S, Oulu, Finland.
   [Elovainio, Marko] Univ Helsinki, Dept Psychol & Logoped, Helsinki, Finland.
   [Adams, Bram] Queens Univ, Sch Comp, Kingston, ON, Canada.
C3 University of Oulu; University of Helsinki; Queens University - Canada
RP Kuutila, M (corresponding author), Univ Oulu, ITEE, M3S, Oulu, Finland.
EM miikka.kuuttila@oulu.fi; mika.mantyla@oulu.fi; maelick.claes@oulu.fi;
   marko.elovainio@helsinki.fi; bram.adams@queensu.ca
RI Kuutila, Miikka/AAH-2783-2019; Mäntylä, Mika V/E-7644-2012
OI Kuutila, Miikka/0000-0002-3695-7280; Elovainio,
   Marko/0000-0002-1401-1910
FU University of Oulu including Oulu University Hospital
FX Open access funding provided by University of Oulu including Oulu
   University Hospital.
CR Adams WC, 2015, HDB PRACTICAL PROGRA
   Åkerstedt T, 2002, J PSYCHOSOM RES, V53, P741, DOI 10.1016/S0022-3999(02)00333-1
   ALLIGER GM, 1993, PERS PSYCHOL, V46, P525, DOI 10.1111/j.1744-6570.1993.tb00883.x
   ANDERSON JC, 1984, PSYCHOMETRIKA, V49, P155, DOI 10.1007/BF02294170
   [Anonymous], 1993, Time pressure and stress in human judgment and decision making
   [Anonymous], 1991, The emotions
   Aranda J, 2009, PROC INT CONF SOFTW, P298, DOI 10.1109/ICSE.2009.5070530
   Bakker A. B., 2007, J MANAGERIAL PSYCHOL, V22, P309, DOI [10.1108/02683940710733115, DOI 10.1108/02683940710733115]
   Bakker AB, 2005, J OCCUP HEALTH PSYCH, V10, P170, DOI 10.1037/1076-8998.10.2.170
   Barr DJ, 2013, J MEM LANG, V68, P255, DOI 10.1016/j.jml.2012.11.001
   Barton K., 2020, MUMIN MULTIMODEL INF
   BEM DJ, 1974, PSYCHOL REV, V81, P506, DOI 10.1037/h0037130
   Bergkvist L, 2009, INT J ADVERT, V28, P607, DOI 10.2501/S0265048709200783
   Bjarnason E, 2014, IEEE SOFTWARE, V31, P37, DOI 10.1109/MS.2014.26
   Boehm B.W., 1981, Software engineering economics, V197
   Bolker B, 2020, GLMM FAQ
   Bollen K., 2001, International Encyclopedia of the Social Behavioral Sciences, DOI DOI 10.1016/B0-08-043076-7/00709-9
   Bruckhaus T, 1996, IEEE SOFTWARE, V13, P29, DOI 10.1109/52.536456
   Brumby D P., 2019, Rethinking productivity in software engineering, P85, DOI [10.1007/978-1-4842-4221-6_9, DOI 10.1007/978-1-4842-4221-6_9]
   Cameron AF, 2005, COMPUT HUM BEHAV, V21, P85, DOI 10.1016/j.chb.2003.12.001
   CHROUSOS GP, 1992, JAMA-J AM MED ASSOC, V267, P1244, DOI 10.1001/jama.267.9.1244
   Claes M, 2018, P 12 ACM IEEE INT S, P50
   Claes M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P705, DOI 10.1145/3180155.3180193
   Crawley M.J., 2002, STAT COMPUTING INTRO
   D'Ambros Marco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P31, DOI 10.1109/MSR.2010.5463279
   de Kloet ER, 2005, NAT REV NEUROSCI, V6, P463, DOI 10.1038/nrn1683
   Demerouti E, 2001, J APPL PSYCHOL, V86, P499, DOI 10.1037//0021-9010.86.3.499
   Diaz M, 1997, IEEE SOFTWARE, V14, P75, DOI 10.1109/52.605934
   DICKERSIN K, 1990, JAMA-J AM MED ASSOC, V263, P1385, DOI 10.1001/jama.263.10.1385
   Diener E, 1999, PSYCHOL BULL, V125, P276, DOI 10.1037//0033-2909.125.2.276
   Dirnagl U, 2010, J CEREBR BLOOD F MET, V30, P1263, DOI 10.1038/jcbfm.2010.51
   Donald I., 2005, INT J STRESS MANAGE, V12, P409, DOI 10.1037/1072-5245.12.4.409
   Dueñas S, 2018, PROC IEEE ACM INT C, P1, DOI 10.1145/3183440.3183475
   Elo AL, 2003, SCAND J WORK ENV HEA, V29, P444, DOI 10.5271/sjweh.752
   Elovainio M, 2015, J OCCUP HEALTH PSYCH, V20, P289, DOI 10.1037/a0038684
   Eysenck SB, 2020, PERS INDIV DIFFER
   Fanelli D, 2012, SCIENTOMETRICS, V90, P891, DOI 10.1007/s11192-011-0494-7
   Fisher CD, 2012, J ORGAN BEHAV, V33, P865, DOI 10.1002/job.1803
   Fucci D., 2018, IEEE T SOFTW ENG, V16, P1
   Giger E, 2011, P 8 WORK C MIN SOFTW, P83, DOI [10.1145/1985441.1985456, DOI 10.1145/1985441.1985456]
   Girardi D, 2020, PROC INT CONF SOFTW, P666, DOI 10.1145/3377811.3380374
   GOLDBERG DP, 1970, BMJ-BRIT MED J, V2, P439, DOI 10.1136/bmj.2.5707.439
   Graziotin D, 2015, 7TH INTERNATIONAL WORKSHOP ON SOCIAL SOFTWARE ENGINEERING (SSE 2015), P25, DOI 10.1145/2804381.2804386
   HARRIS PE, 1989, WORK STRESS, V3, P335, DOI 10.1080/02678378908256952
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Hove SE, 2005, 2005 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS (METRICS), P201
   Hyndman R. J., 2007, Automatic time series for forecasting: the forecast package for R. 6/07
   Ilies R., 2004, EUR J WORK ORGAN PSY, V13, P367, DOI [DOI 10.1080/13594320444000137, https://doi.org/10.1080/13594320444000137]
   JENKINS CD, 1988, J CLIN EPIDEMIOL, V41, P313, DOI 10.1016/0895-4356(88)90138-2
   Jongeling R, 2017, EMPIR SOFTW ENG, V22, P2543, DOI 10.1007/s10664-016-9493-x
   Jongeling R, 2015, PROC IEEE INT CONF S, P531, DOI 10.1109/ICSM.2015.7332508
   Karasek R, 1998, J Occup Health Psychol, V3, P322, DOI 10.1037/1076-8998.3.4.322
   Karasek R., 1990, Healthy Work: Stress, Productivity, and the Reconstruction of Working Life
   Kimhy D, 2006, J PSYCHIATR RES, V40, P221, DOI 10.1016/j.jpsychires.2005.09.007
   Krippendorff K., 1980, Reliability
   Krippendorff Klaus, 2011, COMPUTING KRIPPENDOR, DOI DOI 10.1002/9781405186407.WBIECR029
   Kross E, 2013, PLOS ONE, V8, DOI 10.1371/journal.pone.0069841
   Kuutila M, 2020, CHAT ACTIVITY IS BET, P553, DOI DOI 10.1145/3387940.3392224
   Kuutila M, 2020, INFORM SOFTWARE TECH, V121, DOI 10.1016/j.infsof.2020.106257
   Kuutila M, 2018, 2018 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON EMOTION AWARENESS IN SOFTWARE ENGINEERING (SEMOTION), P39, DOI 10.1145/3194932.3194942
   Kuutila M, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3239245
   Lenberg P, 2015, J SYST SOFTWARE, V107, P15, DOI 10.1016/j.jss.2015.04.084
   Lin B, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P94, DOI 10.1145/3180155.3180195
   Linton SJ, 2004, BRIT J HEALTH PSYCH, V9, P127, DOI 10.1348/135910704773891005
   Liu B., 2009, HDB NATURAL LANGUAGE
   Mäntylä MV, 2017, IEEE WORK CONF MIN S, P198, DOI 10.1109/MSR.2017.47
   Mäntylä MV, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P83, DOI 10.1145/2568225.2568245
   Mark G, 2008, CHI 2008: 26TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS VOLS 1 AND 2, CONFERENCE PROCEEDINGS, P107
   Marsh H. W., 1996, ADV STRUCTURAL EQUAT, P315
   MCEWEN BS, 1995, CURR OPIN NEUROBIOL, V5, P205, DOI 10.1016/0959-4388(95)80028-X
   Miller H., 2016, 10 INT AAAI C WEB SO, V10, P259, DOI 10.1609/icwsm.v10i1.14757
   Miner AG, 2005, J OCCUP ORGAN PSYCH, V78, P171, DOI 10.1348/096317905X40105
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Murphy-Hill E, 2021, IEEE T SOFTWARE ENG, V47, P582, DOI 10.1109/TSE.2019.2900308
   Muthen L. K., 2017, Unusual TLI values
   Nagy MS, 2002, J OCCUP ORGAN PSYCH, V75, P77, DOI 10.1348/096317902167658
   Nakagawa S, 2013, METHODS ECOL EVOL, V4, P133, DOI 10.1111/j.2041-210x.2012.00261.x
   Nan N, 2009, IEEE T SOFTWARE ENG, V35, P624, DOI 10.1109/TSE.2009.18
   Novielli N, 2018, IEEE WORK CONF MIN S, P364, DOI 10.1145/3196398.3196403
   Pinheiro J., 2018, Linear and nonlinear mixed effects models
   Pitkanen H, 2012, VOIKKO FREE LINQUIST
   Rossiter JR, 2002, INT J RES MARK, V19, P305, DOI 10.1016/S0167-8116(02)00097-6
   Russell JA, 2003, PSYCHOL REV, V110, P145, DOI 10.1037/0033-295X.110.1.145
   Schermelleh-Engel K., 2003, METHODS PSYCHOL RES, V8, P23, DOI DOI 10.1002/0470010940
   Schmidt C., 2004, COMPANION QUALITATIV, P253
   SCHULER RS, 1980, ORGAN BEHAV HUM PERF, V25, P184, DOI 10.1016/0030-5073(80)90063-X
   Schulte P, 2010, SCAND J WORK ENV HEA, V36, P422, DOI 10.5271/sjweh.3076
   SCHWARZ N, 1983, J PERS SOC PSYCHOL, V45, P513, DOI 10.1037/0022-3514.45.3.513
   Scollon CN, 2009, SOC INDIC RES SER, V39, P157, DOI 10.1007/978-90-481-2354-4_8
   Semmer N, 1996, J OCCUP ORGAN PSYCH, V69, P293, DOI 10.1111/j.2044-8325.1996.tb00616.x
   Silla I, 2014, EUR J WORK ORGAN PSY, V23, P405, DOI 10.1080/1359432X.2012.752898
   Singh P., 2012, Psychol Stud, V58, P20, DOI [10.1007/s12646-012-0171-9, DOI 10.1007/S12646-012-0171-9]
   Snir R, 2008, APPL PSYCHOL-INT REV, V57, P109, DOI 10.1111/j.1464-0597.2006.00270.x
   SONNENTAG S, 1994, J OCCUP ORGAN PSYCH, V67, P327, DOI 10.1111/j.2044-8325.1994.tb00571.x
   Sun J, 2005, MEAS EVAL COUNS DEV, V37, P240, DOI 10.1080/07481756.2005.11909764
   Sykes ER, 2011, INT J INFORM MANAGE, V31, P385, DOI 10.1016/j.ijinfomgt.2010.10.010
   Taipale S, 2011, INT J SOCIOL SOC POL, V31, P486, DOI 10.1108/01443331111149905
   Tarafdar M, 2007, J MANAGE INFORM SYST, V24, P301, DOI 10.2753/MIS0742-1222240109
   Thompson B., 2004, EXPLORATORY CONFIRMA
   Tregubov A, 2017, ICSSP'17: PROCEEDINGS OF THE 2017 INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESS, P134, DOI 10.1145/3084100.3084116
   TUCKER LR, 1973, PSYCHOMETRIKA, V38, P1, DOI 10.1007/bf02291170
   Vrijkotte TGM, 2000, HYPERTENSION, V35, P880, DOI 10.1161/01.HYP.35.4.880
   Wagner S., 2018, ARXIV180106475, P1, DOI [10.48550/arXiv.1801.06475, DOI 10.48550/ARXIV.1801.06475]
   Wanous JP, 1997, J APPL PSYCHOL, V82, P247, DOI 10.1037/0021-9010.82.2.247
   WEST SG, 1991, J PERS, V59, P609, DOI 10.1111/j.1467-6494.1991.tb00261.x
   Xanthopoulou D., 2007, Journal of Managerial Psychology, V22, P766, DOI DOI 10.1108/02683940710837714
   Xanthopoulou D, 2009, J VOCAT BEHAV, V74, P235, DOI 10.1016/j.jvb.2008.11.003
NR 107
TC 6
Z9 6
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2021
VL 26
IS 5
AR 88
DI 10.1007/s10664-021-09977-1
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA SZ9DL
UT WOS:000666856200001
OA hybrid, Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Samhi, J
   Allix, K
   Bissyandé, TF
   Klein, J
AF Samhi, Jordan
   Allix, Kevin
   Bissyande, Tegawende F.
   Klein, Jacques
TI A first look at Android applications in Google Play related to COVID-19
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE COVID-19; Coronavirus; Android apps; Statistics
AB Due to the convenience of access-on-demand to information and business solutions, mobile apps have become an important asset in the digital world. In the context of the COVID-19 pandemic, app developers have joined the response effort in various ways by releasing apps that target different user bases (e.g., all citizens or journalists), offer different services (e.g., location tracking or diagnostic-aid), provide generic or specialized information, etc. While many apps have raised some concerns by spreading misinformation or even malware, the literature does not yet provide a clear landscape of the different apps that were developed. In this study, we focus on the Android ecosystem and investigate Covid-related Android apps. In a best-effort scenario, we attempt to systematically identify all relevant apps and study their characteristics with the objective to provide a first taxonomy of Covid-related apps, broadening the relevance beyond the implementation of contact tracing. Overall, our study yields a number of empirical insights that contribute to enlarge the knowledge on Covid-related apps: (1) Developer communities contributed rapidly to the COVID-19, with dedicated apps released as early as January 2020; (2) Covid-related apps deliver digital tools to users (e.g., health diaries), serve to broadcast information to users (e.g., spread statistics), and collect data from users (e.g., for tracing); (3) Covid-related apps are less complex than standard apps; (4) they generally do not seem to leak sensitive data; (5) in the majority of cases, Covid-related apps are released by entities with past experience on the market, mostly official government entities or public health organizations.
C1 [Samhi, Jordan; Allix, Kevin; Bissyande, Tegawende F.; Klein, Jacques] Univ Luxembourg, SnT, 6 Rue Richard Coudenhove Kalergi, L-1359 Luxembourg, Luxembourg.
C3 University of Luxembourg
RP Samhi, J (corresponding author), Univ Luxembourg, SnT, 6 Rue Richard Coudenhove Kalergi, L-1359 Luxembourg, Luxembourg.
EM jordan.samhi@uni.lu; kevin.allix@uni.lu; tegawende.bissyande@uni.lu;
   jacques.klein@uni.lu
RI Allix, Kevin/AAF-3197-2021
OI Allix, Kevin/0000-0003-3221-7266; SAMHI, Jordan/0000-0001-6052-6184;
   Klein, Jacques/0000-0003-4052-475X
CR Allix K, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P468, DOI [10.1145/2901739.2903508, 10.1109/MSR.2016.056]
   Anderson R, 2020, CONTACT TRACING REAL
   [Anonymous], 2020, Androguard"
   Arsene L, 2020, ANDROID APPS MALWARE
   Arzt S, 2014, ACM SIGPLAN NOTICES, V49, P259, DOI [10.1145/2666356.2594299, 10.1145/2594291.2594299]
   Baumgartner L, 2020, MIND GAP SECURITY PR
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Buguroo, 2020, ANDR MALW TAK ADV CO
   Carbunar B, 2015, PROCEEDINGS OF THE 2015 IEEE/ACM INTERNATIONAL CONFERENCE ON ADVANCES IN SOCIAL NETWORKS ANALYSIS AND MINING (ASONAM 2015), P242, DOI 10.1145/2808797.2808823
   Carman A, 2020, GOOGLE SUSPENDED POP
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Clarance A, 2020, Aarogya Setu: Why India's Covid-19 contact tracing app is controversial
   Clerkin KJ, 2020, CIRCULATION, V141, P1648, DOI 10.1161/CIRCULATIONAHA.120.046941
   CryptoAnalysis (, 2020, CRYPT
   Culnane C, 2020, SECURITY ANAL NHS CO
   Doffman Z, 2020, NEW ANDROID CORONAVI
   Dudel C, 2020, PLOS ONE, V15, DOI 10.1371/journal.pone.0238904
   Gao J, 2019, IEEE INT C ENG COMP, P200, DOI 10.1109/ICECCS.2019.00029
   Google, 2020, PROV SAF TRUST EXP E
   Google, 2020, GOOGL PLAY UPD INF R
   Gorla A, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1025, DOI 10.1145/2568225.2568276
   Guo Y, 2020, CORR ABS200514619, V2005, P14619
   He Q, 2022, IEEE T SOFTWARE ENG, V48, P150, DOI 10.1109/TSE.2020.2982154
   Heriko M, 2013, 2 WORKSH SOFTW QUAL, P17
   IDC, 2020, SMARTPH MARK SHAR 20
   Jiang H, 2014, P AS PAC S INT, P45, DOI 10.1145/2677832.2677842
   Jun Gao, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P388, DOI 10.1109/MSR.2019.00065
   Krüger S, 2017, IEEE INT CONF AUTOM, P931, DOI 10.1109/ASE.2017.8115707
   Li L, 2019, J SYST SOFTWARE, V154, P157, DOI 10.1016/j.jss.2019.04.065
   Li L, 2018, PROC INT SYMP SOFTW, P212, DOI 10.1109/ISSRE.2018.00031
   Li L, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P403, DOI 10.1109/SANER.2016.52
   Li L, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P280, DOI 10.1109/ICSE.2015.48
   MacQueen J., 1967, P 5 BERK S MATH STAT, P281
   Mahase E, 2020, BMJ-BRIT MED J, V368, DOI 10.1136/bmj.m641
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Page R, 2020, COVID 19 PRIVACY PRO
   Parliament E, 2020, PROTECTION CHILDREN
   Qu ZY, 2014, CCS'14: PROCEEDINGS OF THE 21ST ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1354, DOI 10.1145/2660267.2660287
   Ranganath VP, 2020, EMPIR SOFTW ENG, V25, P178, DOI 10.1007/s10664-019-09749-y
   Remuzzi A, 2020, LANCET, V395, P1225, DOI 10.1016/S0140-6736(20)30627-9
   Saleh T, 2020, COVIDLOCK MOBILE COR
   Schölkopf B, 2001, NEURAL COMPUT, V13, P1443, DOI 10.1162/089976601750264965
   Shar LK, 2020, 2020 IEEE/ACM 7TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS, MOBILESOFT, P50, DOI 10.1145/3387905.3388596
   Spinelli A, 2020, BRIT J SURG, V107, P785, DOI 10.1002/bjs.11627
   Stolton S, 2020, MAJOR SECURITY PRIVA
   Taylor VF, 2017, LECT NOTES COMPUT SC, V10322, P302, DOI 10.1007/978-3-319-70972-7_16
   Tian Y, 2015, PROC IEEE INT CONF S, P301, DOI 10.1109/ICSM.2015.7332476
   Viennot N., 2014, 2014 ACM INT C MEAS, P221, DOI DOI 10.1145/2637364.2592003
   WHO (WORLD HEALTH ORGANIZATION), 2020, WHO DirectorGeneral's opening remarks at the media briefing on COVID19 11 March 2020
   Wikipedia, 2020, Covid-19 apps
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Xu P, 2020, PROCEEDINGS OF THE 35TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING (SAC'20), P1688, DOI 10.1145/3341105.3373859
   Zhou YJ, 2012, P IEEE S SECUR PRIV, P95, DOI 10.1109/SP.2012.16
NR 53
TC 9
Z9 9
U1 0
U2 13
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2021
VL 26
IS 4
AR 57
DI 10.1007/s10664-021-09943-x
PG 49
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RS6YZ
UT WOS:000643923500005
PM 33903798
OA hybrid, Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Kim, M
   Lee, E
AF Kim, Misoo
   Lee, Eunseok
TI Are datasets for information retrieval-based bug localization techniques
   trustworthy?: Impact analysis of bug types on IRBL
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Bug type; Information retrieval-based bug localization; Performance
   evaluation; Ground-truth dataset; Search space
ID CLASSIFIER CONFIGURATION; CODE
AB Various evaluation datasets are used to evaluate the performance of information retrieval-based bug localization (IRBL) techniques. To accurately evaluate the IRBL and furthermore improve the performance, it is strongly required to analyze the validity of these datasets in advance. To this end, we surveyed 50 previous studies, collected 41,754 bug reports, and found out critical problems that affect the validity of results of performance evaluation. They are in both the ground truth and the search space. These problems arise from using different bug types without clearly distinguishing them. We divided the bugs into production- and test-related bugs. Based on this distinction, we investigate and analyze the impact of the bug type on IRBL performance evaluation. Approximately 18.6% of the bug reports were linked to non-buggy files as the ground truth. Up to 58.5% of the source files in the search space introduced noise into the localization of a specific bug type. From the experiments, we validated that the average precision changed in approximately 90% of the bug reports linked with an incorrect ground truth; we determined that specifying a suitable search space changed the average precision in at least half of the bug reports. Further, we showed that these problems can alter the relative ranks of the IRBL techniques. Our large-scale analysis demonstrated that a significant amount of noise occurs, which can compromise the evaluation results. An important finding of this study is that it is essential to consider the bug types to improve the accuracy of the performance evaluation.
C1 [Kim, Misoo] Sungkyunkwan Univ, Dept Elect & Comp Engn, Suwon, South Korea.
   [Lee, Eunseok] Sungkyunkwan Univ, Coll Comp, Suwon, South Korea.
C3 Sungkyunkwan University (SKKU); Sungkyunkwan University (SKKU)
RP Lee, E (corresponding author), Sungkyunkwan Univ, Coll Comp, Suwon, South Korea.
EM misoo12@skku.edu; leees@skku.edu
OI Kim, Misoo/0000-0002-8274-5457; Lee, Eunseok/0000-0002-6557-8087
FU Technology and Basic Science Research Program through the National
   Research Foundation of Korea - Ministry of Science, ICT, and Future
   Planning [2016R1D1A1B03934610, 2017M3C4A7068179, 2018R1D1A1B07050073,
   2019R1A2C2006411]
FX This research was supported by the Technology and Basic Science Research
   Program through the National Research Foundation of Korea, funded by the
   Ministry of Science, ICT, and Future Planning (2016R1D1A1B03934610,
   2017M3C4A7068179, 2018R1D1A1B07050073, 2019R1A2C2006411). Also, we are
   most grateful to Dit et al., Zhou et al., Rao et al., Sisman et al.,
   Moreno et al., Ye et al., and Lee et al. for access to their datasets on
   their web sites.
CR Ali N., 2012, 2012 12th IEEE Working Conference on Source Code Analysis and Manipulation (SCAM 2012), P174, DOI 10.1109/SCAM.2012.26
   Almhana R, 2016, IEEE INT CONF AUTOM, P286, DOI 10.1145/2970276.2970344
   Lam AN, 2017, INT C PROGRAM COMPRE, P218, DOI 10.1109/ICPC.2017.24
   Lam AN, 2015, IEEE INT CONF AUTOM, P476, DOI 10.1109/ASE.2015.73
   [Anonymous], 2003, SOFTWARE TESTING TEC
   [Anonymous], 2014, NONPARAMETRIC STAT S
   [Anonymous], 2019, ARXIV190202703
   [Anonymous], 2003, TEST DRIVEN DEV EXAM
   Arong, 2014, PROCEEDINGS OF 2014 IEEE INTERNATIONAL CONFERENCE ON PROGRESS IN INFORMATICS AND COMPUTING (PIC), P51, DOI 10.1109/PIC.2014.6972294
   Chaparro O, 2019, EMPIR SOFTW ENG, P1
   Chaparro O, 2017, PROC IEEE INT CONF S, P376, DOI 10.1109/ICSME.2017.100
   Charette RN, 2005, IEEE SPECTRUM, V42, P42, DOI 10.1109/MSPEC.2005.1502528
   Dallmeier V., 2007, P 22 IEEE ACM INT C, P433
   Davies S., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P125, DOI 10.1109/WCRE.2012.22
   Davies S, 2013, 2013 IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING WORKSHOPS (ISSREW), P126, DOI 10.1109/ISSREW.2013.6688891
   Dillman DA., 2014, INTERNET PHONE MAIL, V4th
   Dilshener T, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P286, DOI [10.1109/MSR.2016.037, 10.1145/2901739.2901775]
   Dit B, 2013, J SOFTW-EVOL PROC, V25, P53, DOI 10.1002/smr.567
   Ferrucci F, 2019, J SYST SOFTWARE
   Garnier Marcelo, 2017, Journal of Software Engineering Research and Development, V5, DOI 10.1186/s40411-017-0040-2
   Garousi V, 2018, WHAT WE KNOW SMELLS
   Garousi V, 2018, J SYST SOFTWARE, V138, P52, DOI 10.1016/j.jss.2017.12.013
   Grottke M., 2005, The Journal of Reliability Engineering Association of Japan, V27, P425
   Grottke M, 2007, COMPUTER, V40, P107, DOI 10.1109/MC.2007.55
   Grottke M, 2010, I C DEPEND SYS NETWO, P447, DOI 10.1109/DSN.2010.5544284
   Haiduc S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P842, DOI 10.1109/ICSE.2013.6606630
   Herzig K, 2013, IEEE WORK CONF MIN S, P121, DOI 10.1109/MSR.2013.6624018
   Herzig K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P392, DOI 10.1109/ICSE.2013.6606585
   Hill E., 2012, 2012 12th IEEE Working Conference on Source Code Analysis and Manipulation (SCAM 2012), P184, DOI 10.1109/SCAM.2012.29
   Nguyen HA, 2013, PROC INT SYMP SOFTW, P138, DOI 10.1109/ISSRE.2013.6698913
   Huo Xuan, 2019, IEEE Transactions on Software Engineering
   Khatiwada S, 2018, INFORM SOFTWARE TECH, V93, P45, DOI 10.1016/j.infsof.2017.08.012
   Kim D, 2013, T SOFTW ENG TSE, V99, P1
   Kim M., 2020, MANQ MANY OBJECTIVE
   Kim M, 2019, SAC '19: PROCEEDINGS OF THE 34TH ACM/SIGAPP SYMPOSIUM ON APPLIED COMPUTING, P1752, DOI 10.1145/3297280.3297451
   Kim M, 2018, PROC IEEE ACM INT C, P248, DOI 10.1145/3183440.3194954
   Kochhar Pavneet Singh, 2014, P 2 ACM IEEE INT C, P803, DOI DOI 10.1145/2642937.2642997
   Kochhar Pavneet Singh, 2016, 25 INT S SOFTWARE TE, P165, DOI 10.1145/2931037.2931051
   Labuschagne A, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P821, DOI 10.1145/3106237.3106288
   Larson RR, 2010, J AM SOC INF SCI TEC, V61, P852, DOI 10.1002/asi.21234
   Lawrie D, 2018, PROC IEEE INT CONF S, P524, DOI 10.1109/ICSME.2018.00048
   Le TDB, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P579, DOI 10.1145/2786805.2786880
   Lee J, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P61, DOI 10.1145/3213846.3213856
   Liang HL, 2019, IEEE ACCESS, V7, P116309, DOI 10.1109/ACCESS.2019.2936948
   Lu Shan, 2005, WORKSHOP EVALUATION, P1, DOI 10.1.1.134.8941
   Lukins SK, 2010, INFORM SOFTWARE TECH, V52, P972, DOI 10.1016/j.infsof.2010.04.002
   Maalej W, 2015, INT REQUIR ENG CONF, P116, DOI 10.1109/RE.2015.7320414
   Marsavina C, 2014, IEEE INT WORK C SO, P195, DOI 10.1109/SCAM.2014.28
   Meszaros G., 2007, Xunit test patterns: refactoring test code
   Moreno L, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P567, DOI 10.1145/2786805.2786859
   Moreno L, 2014, PROC IEEE INT CONF S, P151, DOI 10.1109/ICSME.2014.37
   Palomba F, 2019, SMELL FEAR RELATION
   Palomba F, 2018, PROC IEEE INT CONF S, P311, DOI 10.1109/ICSME.2018.00040
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI [10.1109/TSE.2007.1016, 10.1109/TSE.2007.1016.]
   Rahman MM, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P621, DOI 10.1145/3236024.3236065
   Rao S, 2013, WORK CONF REVERSE EN, P62, DOI 10.1109/WCRE.2013.6671281
   Rath M, 2019, SOFTWARE QUAL J, V27, P1315, DOI 10.1007/s11219-019-09445-6
   Saha RK, 2014, PROC IEEE INT CONF S, P161, DOI 10.1109/ICSME.2014.38
   Saha RK, 2013, IEEE INT CONF AUTOM, P345, DOI 10.1109/ASE.2013.6693093
   Shi ZD, 2018, APPL SOFT COMPUT, V62, P636, DOI 10.1016/j.asoc.2017.10.048
   Sisman B., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P50, DOI 10.1109/MSR.2012.6224299
   Sisman B, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1805
   Sisman B, 2013, IEEE WORK CONF MIN S, P309, DOI 10.1109/MSR.2013.6624044
   Sun XB, 2019, IEEE ACCESS, V7, P18811, DOI 10.1109/ACCESS.2019.2894976
   Tan L, 2014, EMPIR SOFTW ENG, V19, P1665, DOI 10.1007/s10664-013-9258-8
   Tantithamthavorn C, 2018, INFORM SOFTWARE TECH, V102, P160, DOI 10.1016/j.infsof.2018.06.001
   Tantithamthavorn C, 2013, 2013 IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING WORKSHOPS (ISSREW), P108, DOI 10.1109/ISSREW.2013.6688888
   Thomas SW, 2013, IEEE T SOFTWARE ENG, V39, P1427, DOI 10.1109/TSE.2013.27
   Vahabzadeh A, 2015, PROC IEEE INT CONF S, P101, DOI 10.1109/ICSM.2015.7332456
   VahabzadehSefiddarbon A, 2016, THESIS U BRITISH COL
   Wang N, 2020, IEEE IC COMP COM NET, DOI 10.1109/icccn49398.2020.9209722
   Wang SW, 2016, J SOFTW-EVOL PROC, V28, P921, DOI 10.1002/smr.1801
   Wang SW, 2014, PROC IEEE INT CONF S, P171, DOI 10.1109/ICSME.2014.39
   Wen M, 2016, IEEE INT CONF AUTOM, P262, DOI 10.1145/2970276.2970359
   Wong CP, 2014, PROC IEEE INT CONF S, P181, DOI 10.1109/ICSME.2014.40
   Xiao Y, 2019, INFORM SOFTWARE TECH, V105, P17, DOI 10.1016/j.infsof.2018.08.002
   Xiao Y, 2018, INFORM SOFTWARE TECH, V99, P58, DOI 10.1016/j.infsof.2018.03.003
   Xu F, 2020, ENHANCING SUPERVISED, P1
   Yang G, 2020, PROCEEDINGS OF THE 35TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING (SAC'20), P1634, DOI 10.1145/3341105.3374005
   Ye X, 2016, PROC INT CONF SOFTW, P404, DOI 10.1145/2884781.2884862
   Ye X, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P689, DOI 10.1145/2635868.2635874
   Ye X, 2016, IEEE T SOFTWARE ENG, V42, P379, DOI 10.1109/TSE.2015.2479232
   Youm KC, 2017, INFORM SOFTWARE TECH, V82, P177, DOI 10.1016/j.infsof.2016.11.002
   Youm KC, 2015, ASIA PAC SOFWR ENG, P190, DOI 10.1109/APSEC.2015.23
   Zhang W, 2019, INFORM SOFTWARE TECH
   Zhao F, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P298, DOI 10.1109/QRS.2015.49
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
   Zimmermann T, 2010, IEEE T SOFTWARE ENG, V36, P618, DOI 10.1109/TSE.2010.63
NR 88
TC 9
Z9 9
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR 19
PY 2021
VL 26
IS 3
AR 35
DI 10.1007/s10664-021-09946-8
PG 66
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RA0BI
UT WOS:000631083100002
DA 2024-07-18
ER

PT J
AU Piantadosi, V
   Fierro, F
   Scalabrino, S
   Serebrenik, A
   Oliveto, R
AF Piantadosi, Valentina
   Fierro, Fabiana
   Scalabrino, Simone
   Serebrenik, Alexander
   Oliveto, Rocco
TI How does code readability change during software evolution?
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Code readability; Software evolution; Mining software repositories
ID IN-DEPTH; UNDERSTANDABILITY; SMELLS
AB Code reading is one of the most frequent activities in software maintenance. Such an activity aims at acquiring information from the code and, thus, it is a prerequisite for program comprehension: developers need to read the source code they are going to modify before implementing changes. As the code changes, so does its readability; however, it is not clear yethowcode readability changes during software evolution. To understand how code readability changes when software evolves, we studied the history of 25 open source systems. We modeled code readability evolution by defining four states in which a file can be at a certain point of time (non-existing,other-name,readable, andunreadable). We used the data gathered to infer the probability of transitioning from one state to another one. In addition, we also manually checked a significant sample of transitions to compute the performance of the state-of-the-art readability prediction model we used to calculate the transition probabilities. With this manual analysis, we found that the tool correctly classifies all the transitions in the majority of the cases, even if there is a loss of accuracy compared to the single-version readability estimation. Our results show that most of the source code files are created readable. Moreover, we observed that only a minority of the commits change the readability state. Finally, we manually carried out qualitative analysis to understand what makes code unreadable and what developers do to prevent this. Using our results we propose some guidelines (i) to reduce the risk of code readability erosion and (ii) to promote best practices that make code readable.
C1 [Piantadosi, Valentina; Fierro, Fabiana; Scalabrino, Simone; Oliveto, Rocco] Univ Molise, Pesche, IS, Italy.
   [Serebrenik, Alexander] Eindhoven Univ Technol, Eindhoven, Netherlands.
C3 University of Molise; Eindhoven University of Technology
RP Oliveto, R (corresponding author), Univ Molise, Pesche, IS, Italy.
EM valentina.piantadosi@unimol.it; f.fierro1@studenti.unimol.it;
   simone.scalabrino@unimol.it; a.serebrenik@tue.nl;
   rocco.oliveto@unimol.it
OI Serebrenik, Alexander/0000-0002-1418-0095; Piantadosi,
   Valentina/0000-0003-0666-6121
CR [Anonymous], 2011, BOOTSTRAP METHODS GU
   [Anonymous], 1992, PRACTICAL SOFTWARE M
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], 2018, IEEE T SOFTW ENG
   Bavota G, 2015, J SYST SOFTWARE, V107, P1, DOI 10.1016/j.jss.2015.05.024
   Beck Kent, 2007, Implementation Patterns
   Bellomarini L, 2019, PROC INT CONF DATA, P26, DOI 10.1109/ICDE.2019.00011
   BENJAMINI Y, 1995, J R STAT SOC B, V57, P289, DOI 10.1111/j.2517-6161.1995.tb02031.x
   Bennett K. H., 2000, P C FUT SOFTW ENG, P73
   Bird C, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P1, DOI 10.1109/MSR.2009.5069475
   Boehm BW, 1978, TRW SERIES SOFTWARE, P1
   Buse R.P., 2008, Proceedings of the 2008 International Symposium on Software Testing and Analysis, P121
   Buse RPL, 2010, IEEE T SOFTWARE ENG, V36, P546, DOI 10.1109/TSE.2009.70
   Businge J, 2015, SOFTWARE QUAL J, V23, P107, DOI 10.1007/s11219-013-9221-3
   Capiluppi A, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P58, DOI 10.1109/CSMR.2004.1281406
   Chatzigeorgiou A, 2014, INNOV SYST SOFTW ENG, V10, P3, DOI 10.1007/s11334-013-0205-z
   Chen C, 2016, COMM COM INF SC, V675, P120, DOI 10.1007/978-981-10-3482-4_9
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Cunningham W., 1993, OOPS Messenger, V4, P29
   DiCiccio TJ, 1996, STAT SCI, V11, P189
   Dix JG, 2008, ELECTRON J QUAL THEO, P1
   Dorn J, 2012, MCS Thesis, V5, P11
   Duvall Paul M., 2007, Continuous integration: improving software quality and reducing risk
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Ebert F, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P49, DOI [10.1109/SANER.2019.8668024, 10.1109/saner.2019.8668024]
   Erlikh L., 2000, IT Professional, V2, P17, DOI 10.1109/6294.846201
   Fowler M., 2006, THOUGHT WORKS, V122, P14
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Halstead MH, 1977, OPERATING PROGRAMMIN, P7
   Hubert M, 2008, COMPUT STAT DATA AN, V52, P5186, DOI 10.1016/j.csda.2007.11.008
   Kalliamvakou E, 2016, EMPIR SOFTW ENG, V21, P2035, DOI 10.1007/s10664-015-9393-5
   Lee T, 2015, IEICE T INF SYST, VE98D, P1286, DOI 10.1587/transinf.2014EDP7327
   Letouzey Jean-Louis, 2010, Proceedings 2010 Second International Conference on Advances in System Testing and Validation Lifecycle (VALID), P43, DOI 10.1109/VALID.2010.31
   Likert R., 1932, Arch. Psychol., V22, P44, DOI DOI 10.4135/9781412961288.N454
   Maldonado ED, 2017, PROC IEEE INT CONF S, P238, DOI 10.1109/ICSME.2017.8
   Martin Robert C, 2009, Clean Code: a Handbook of Agile Software Craftsmanship
   Mc Call J. A., 1977, FACTORS SOFTWARE QUA, VI
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Munaiah N, 2017, EMPIR SOFTW ENG, V22, P1305, DOI 10.1007/s10664-016-9447-3
   Murphy-Bill E, 2008, IEEE SOFTWARE, V25, P38, DOI 10.1109/MS.2008.123
   Oram A., 2007, BEAUTIFUL CODE LEADI
   Pantiuchina J, 2018, PROC IEEE INT CONF S, P80, DOI 10.1109/ICSME.2018.00017
   Piantadosi V, 2020, REPLICATION PACKAGE
   Posnett D, 2011, P 8 WORKING C MINING, P73
   Potdar A, 2014, PROC IEEE INT CONF S, P91, DOI 10.1109/ICSME.2014.31
   Purushothaman R, 2005, IEEE T SOFTWARE ENG, V31, P511, DOI 10.1109/TSE.2005.74
   Rajlich V, 2004, IEEE SOFTWARE, V21, P62, DOI 10.1109/MS.2004.17
   Scalabrino S, 2016, 2016 IEEE 24 INT C P, P1
   Scalabrino S, 2019, IEEE T SOFTW ENG
   Scalabrino S, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1958
   Scalabrino S, 2017, IEEE INT CONF AUTOM, P417, DOI 10.1109/ASE.2017.8115654
   Sheskin DJ, 2007, HDB PARAMETRIC NONPA, V4
   Siegmund J, 2014, EMPIR SOFTW ENG, V19, P1299, DOI 10.1007/s10664-013-9286-4
   Silva D, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P858, DOI 10.1145/2950290.2950305
   Spinellis D, 2016, PROC INT CONF SOFTW, P748, DOI 10.1145/2884781.2884799
   Thongmak M, 2011, COMM COM INF SC, V167, P43
   Trockman A, 2018, IEEE WORK CONF MIN S, P314, DOI 10.1145/3196398.3196441
   Tufano M, 2017, IEEE T SOFTWARE ENG, V43, P1063, DOI 10.1109/TSE.2017.2653105
   Vasilescu B., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P313, DOI 10.1109/ICSM.2011.6080798
   Vasilescu Bogdan., 2011, Proceedings of the 2Nd International Workshop on Emerging Trends in Software Metrics, WETSoM '11, P23
   WEYUKER EJ, 1988, IEEE T SOFTWARE ENG, V14, P1357, DOI 10.1109/32.6178
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Zampetti F, 2018, IEEE WORK CONF MIN S, P526, DOI 10.1145/3196398.3196423
   Zampetti F, 2017, PROC IEEE INT CONF S, P216, DOI 10.1109/ICSME.2017.44
   Zhao YY, 2017, IEEE INT CONF AUTOM, P60, DOI 10.1109/ASE.2017.8115619
NR 65
TC 13
Z9 13
U1 2
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2020
VL 25
IS 6
BP 5374
EP 5412
DI 10.1007/s10664-020-09886-9
EA SEP 2020
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA OI4BB
UT WOS:000572596000001
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Abdellatif, A
   Badran, K
   Shihab, E
AF Abdellatif, Ahmad
   Badran, Khaled
   Shihab, Emad
TI MSRBot: Using bots to answer questions from software repositories
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software bots; Mining software repositories; Conversational development
   assistant
AB Software repositories contain a plethora of useful information that can be used to enhance software projects. Prior work has leveraged repository data to improve many aspects of the software development process, such as, help extract requirement decisions, identify potentially defective code and improve maintenance and evolution. However, in many cases, project stakeholders are not able to fully benefit from their software repositories due to the fact that they need special expertise to mine their repositories. Also, extracting and linking data from different types of repositories (e.g., source code control and bug repositories) requires dedicated effort and time, even if the stakeholder has the expertise to perform such a task. Therefore, in this paper, we use bots to automate and ease the process of extracting useful information from software repositories. Particularly, we lay out an approach of how bots, layered on top of software repositories, can be used to answer some of the most common software development/maintenance questions facing developers. We perform a preliminary study with 12 participants to validate the effectiveness of the bot. Our findings indicate that using bots achieves very promising results compared to not using the bot (baseline). Most of the participants (90.0%) find the bot to be either useful or very useful. Also, they completed 90.8% of the tasks correctly using the bot with a median time of 40 seconds per task. On the other hand, without the bot, the participants completed 25.2% of the tasks with a median time of 240 seconds per task. Our work has the potential to transform the MSR field by significantly lowering the barrier to entry, making the extraction of useful information from software repositories as easy as chatting with a bot.
C1 [Abdellatif, Ahmad; Badran, Khaled; Shihab, Emad] Concordia Univ, Data Driven Anal Software DAS Lab, Dept Comp Sci & Software Engn, Montreal, PQ H3G 1M8, Canada.
C3 Concordia University - Canada
RP Abdellatif, A (corresponding author), Concordia Univ, Data Driven Anal Software DAS Lab, Dept Comp Sci & Software Engn, Montreal, PQ H3G 1M8, Canada.
EM a_bdella@encs.concordia.ca; k_badran@encs.concordia.ca;
   eshihab@encs.concordia.ca
CR ABDELLATIF A, 2019, MSRBOT USING BOTS AN
   ABDELLATIF A, 2019, AHMAD ABDELLATIF MSR
   Acharya MP, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P785, DOI 10.1145/2889160.2889211
   Ahmed TM, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P1, DOI [10.1145/2901739.2901774, 10.1109/MSR.2016.011]
   Ali N, 2013, IEEE T SOFTWARE ENG, V39, P725, DOI 10.1109/TSE.2012.71
   *AM LEX, 2019, BUILD CONV BOTS
   [Anonymous], P 11 INT C INT US IN
   [Anonymous], 2011, P 49 ANN M ASS COMP
   [Anonymous], 2014, P ACL SYST DEM, DOI DOI 10.3115/V1/P14-5010
   Ask J.A., 2016, The state of chatbots
   Banerjee S, 2015, 2015 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON BIG DATA SOFTWARE ENGINEERING, P37, DOI 10.1109/BIGDSE.2015.16
   Bankier J G., 2014, Institutional Repository Software Comparison
   Begel A., 2010, Software Engineering, 2010 ACM/IEEE 32nd International Conference on, V1, P125
   BEGEL A, 2018, APPENDIX ANALYZE THI
   Begel A, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P12, DOI 10.1145/2568225.2568233
   BESCHASTNIKH I, 2017, ACCELERATING SOFTWAR
   Bradley NC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P993, DOI 10.1145/3180155.3180238
   Brown C, 2019, 2019 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON BOTS IN SOFTWARE ENGINEERING (BOTSE 2019), P54, DOI 10.1109/BotSE.2019.00021
   Cerezo J, 2019, 2019 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON BOTS IN SOFTWARE ENGINEERING (BOTSE 2019), P59, DOI 10.1109/BotSE.2019.00022
   Digkas G, 2017, LECT NOTES COMPUT SC, V10475, P51, DOI 10.1007/978-3-319-65831-5_4
   Fritz T., 2010, Proceedings of the 32nd International Conference on Software Engineering - Volume 1, ICSE '10, V1, P175
   *GITKRAKEN, 2019, GITKRAKEN GIT CLIENT
   *GOOD REB, 2019, IMP CONV BOTS CUST E
   *GOOGL, 2019, TRAIN DIAL
   Gottipati S., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P323, DOI 10.1109/ASE.2011.6100069
   Gupta P, 2014, 2014 6TH INTERNATIONAL CONFERENCE ON COMPUTATIONAL INTELLIGENCE AND COMMUNICATION NETWORKS, P122, DOI 10.1109/CICN.2014.38
   Hassan AE, 2008, 2008 FRONTIERS OF SOFTWARE MAINTENANCE, P48, DOI 10.1109/FOSM.2008.4659248
   Hattori L, 2013, INFORM SOFTWARE TECH, V55, P755, DOI 10.1016/j.infsof.2012.09.001
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   *IBM, 2019, WATS CONV
   *JIR, 2019, MAN JIR CLOUD ISS CO
   *JIR, 2019, JIR CLIENT ATL MARK
   Jurafsky D., 2009, SPEECH LANGUAGE PROC
   Kabinna S, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P154, DOI [10.1145/2901739.2901769, 10.1109/MSR.2016.025]
   Khomh F, 2015, EMPIR SOFTW ENG, V20, P336, DOI 10.1007/s10664-014-9308-x
   Kumar R, 2019, 2019 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON BOTS IN SOFTWARE ENGINEERING (BOTSE 2019), P48, DOI 10.1109/BotSE.2019.00020
   Lebeuf C, 2018, IEEE SOFTWARE, V35, P18, DOI 10.1109/MS.2017.4541027
   liwerski J, 2005, ACM SIGSOFT SOFTWARE, V30, P1, DOI [10.1145/1082983.1083147, DOI 10.1145/1083142.1083147, DOI 10.1145/1082983.1083147]
   Matthies C, 2019, 2019 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON BOTS IN SOFTWARE ENGINEERING (BOTSE 2019), P34, DOI 10.1109/BotSE.2019.00017
   *MICR, 2019, LUIS LANG UND INT SE
   Mikolov Tomas, 2013, Advances in Neural Information Processing Systems, P3111, DOI DOI 10.48550/ARXIV.1310.4546
   Mohit B., 2014, Natural language processing of semitic languages, P221
   Monperrus M, 2019, 2019 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON BOTS IN SOFTWARE ENGINEERING (BOTSE 2019), P12, DOI 10.1109/BotSE.2019.00010
   Monperrus Martin, 2019, Ubiquity, V2019, P1, DOI 10.1145/3349589
   Mordinyi R, 2017, 2017 IEEE 25TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW), P359, DOI 10.1109/REW.2017.69
   Murgia A., 2016, P CHI C EXT ABSTR HU, P1272, DOI [10.1145/2851581.2892311, DOI 10.1145/2851581.2892311]
   Paikari E, 2019, 2019 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON BOTS IN SOFTWARE ENGINEERING (BOTSE 2019), P29, DOI 10.1109/BotSE.2019.00016
   Ratinov L., 2009, Proceedings of the 13th conference on computational natural language learning, P147
   Robillard MP, 2017, PROC IEEE INT CONF S, P479, DOI 10.1109/ICSME.2017.17
   Salman I, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P666, DOI 10.1109/ICSE.2015.82
   Sang Erik F. Tjong Kim, 2003, P 7 C NATURAL LANGUA, P142, DOI DOI 10.3115/1119176.1119195
   SANKAR GR, 2008, P 2008 ANN RES C S A, P200
   Sawant AA, 2017, EMPIR SOFTW ENG, V22, P1348, DOI 10.1007/s10664-016-9444-6
   Sharma VS, 2017, 2017 IEEE/ACM 10TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE 2017), P78, DOI 10.1109/CHASE.2017.14
   SIDDIQUI T, 2017, ADV INTELLIGENT SYST, P717, DOI DOI 10.1007/978-981-10-6620-7_70/COVER
   Sillito J, 2008, IEEE T SOFTWARE ENG, V34, P434, DOI 10.1109/TSE.2008.26
   Storey MA, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P928, DOI 10.1145/2950290.2983989
   Tian Y, 2017, IEEE INT CONF AUTOM, P153, DOI 10.1109/ASE.2017.8115628
   Toxtli C, 2018, PROCEEDINGS OF THE 2018 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2018), DOI 10.1145/3173574.3173632
   Treude C, 2015, IEEE T SOFTWARE ENG, V41, P565, DOI 10.1109/TSE.2014.2387172
   Urli S, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P95, DOI 10.1145/3183519.3183540
   van Tonder R, 2019, 2019 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON BOTS IN SOFTWARE ENGINEERING (BOTSE 2019), P43, DOI 10.1109/BotSE.2019.00019
   VASCONCELOS M, 2017, BRAZ S HUM FACT COMP, P10
   Wessel Mairieli, 2018, Proceedings of the ACM on Human-Computer Interaction, V2, DOI 10.1145/3274451
   Wyrich M, 2019, 2019 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON BOTS IN SOFTWARE ENGINEERING (BOTSE 2019), P24, DOI 10.1109/BotSE.2019.00015
   Xu BW, 2017, IEEE INT CONF AUTOM, P706, DOI 10.1109/ASE.2017.8115681
   Zamanirad S, 2017, IEEE INT CONF AUTOM, P832, DOI 10.1109/ASE.2017.8115694
   Zamora J, 2017, PROCEEDINGS OF THE 5TH INTERNATIONAL CONFERENCE ON HUMAN AGENT INTERACTION (HAI'17), P253, DOI 10.1145/3125739.3125766
   2019, GENSIM
NR 69
TC 17
Z9 18
U1 2
U2 9
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAY
PY 2020
VL 25
IS 3
SI SI
BP 1834
EP 1863
DI 10.1007/s10664-019-09788-5
EA MAR 2020
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LR5OS
UT WOS:000518400000001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Abdalkareem, R
   Oda, V
   Mujahid, S
   Shihab, E
AF Abdalkareem, Rabe
   Oda, Vinicius
   Mujahid, Suhaib
   Shihab, Emad
TI On the impact of using trivial packages: an empirical case study on
   <i>npm</i> and <i>PyPI</i>
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Trivial packages; JavaScript; Node; js; Python; npm; PyPI; Code reuse;
   Empirical studies
ID CODE REUSE; SOFTWARE; PRODUCTIVITY; COEFFICIENT; DEVELOPERS
AB Code reuse has traditionally been encouraged since it enables one to avoid re-inventing the wheel. Due to the npm left-pad package incident where a trivial package led to the breakdown of some of the most popular web applications such as Facebook and Netflix, some questioned such reuse. Reuse of trivial packages is particularly prevalent in platforms such as npm. To date, there is no study that examines the reason why developers reuse trivial packages other than in npm. Therefore, in this paper, we study two large platforms npm and PyPI. We mine more than 500,000 npm packages and 38,000 JavaScript applications and more than 63,000 PyPI packages and 14,000 Python applications to study the prevalence of trivial packages. We found that trivial packages are common, making up between 16.0% to 10.5% of the studied platforms. We performed surveys with 125 developers who use trivial packages to understand the reasons and drawbacks of their use. Our surveys revealed that trivial packages are used because they are perceived to be well implemented and tested pieces of code. However, developers are concerned about maintaining and the risks of breakages due to the extra dependencies trivial packages introduce. To objectively verify the survey results, we validate the most cited reason and drawback. We find that contrary to developers' beliefs only around 28% of npm and 49% PyPI trivial packages have tests. However, trivial packages appear to be 'deployment tested' and to have similar test, usage and community interest as non-trivial packages. On the other hand, we found that 18.4% and 2.9% of the studied trivial packages have more than 20 dependencies in npm and PyPI, respectively.
C1 [Abdalkareem, Rabe; Oda, Vinicius; Mujahid, Suhaib; Shihab, Emad] Concordia Univ, Dept Comp Sci & Software Engn, Data Driven Anal Software DAS Lab, Montreal, PQ, Canada.
C3 Concordia University - Canada
RP Abdalkareem, R (corresponding author), Concordia Univ, Dept Comp Sci & Software Engn, Data Driven Anal Software DAS Lab, Montreal, PQ, Canada.
EM rab_abdu@encs.concordia.ca; v_oda@encs.concordia.ca;
   s_mujahi@encs.concordia.ca; eshihab@encs.concordia.ca
RI Abdalkareem, Rabe/AET-2496-2022; Abdalkareem, Rabe/IQV-8842-2023
OI Abdalkareem, Rabe/0000-0001-9914-5434; Mujahid,
   Suhaib/0000-0003-2738-1387
CR Abate P, 2009, INT SYMP EMP SOFTWAR, P89, DOI 10.1109/ESEM.2009.5316017
   Abdalkareem R, 2019, ON THE IMPACT OF USI, DOI [10.5281/zenodo.3095009, DOI 10.5281/ZEN0D0.3095009]
   Abdalkareem R, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P1062, DOI 10.1145/3106237.3121278
   Abdalkareem R, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P385, DOI 10.1145/3106237.3106267
   Abdalkareem R, 2017, INFORM SOFTWARE TECH, V88, P148, DOI 10.1016/j.infsof.2017.04.005
   Abdalkareem R, 2017, IEEE SOFTWARE, V34, P53, DOI 10.1109/MS.2017.31
   Baltes S, 2018, USAGE AND ATTRIBUTIO
   Basili VR, 1996, COMMUN ACM, V39, P104, DOI 10.1145/236156.236184
   Bavota G, 2013, PROC IEEE INT CONF S, P280, DOI 10.1109/ICSM.2013.39
   Bloemen R., 2014, P 11 WORK C MIN SOFT, P404, DOI DOI 10.1145/2597073.2597131
   Bogart C, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P109, DOI 10.1145/2950290.2950325
   Bogart C, 2015, 2015 30TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING WORKSHOP (ASEW), P86, DOI 10.1109/ASEW.2015.21
   Bower, 2012, BOWER A PACKAGE MANA
   Castelluccio M, 2019, EMPIR SOFTW ENG, V24, P3008, DOI 10.1007/s10664-018-9665-y
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Cruz A, 2017, NPMS
   de Souza CRB, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P241, DOI 10.1145/1368088.1368122
   Decan A, 2018, INTERNATIONAL CONFER
   Decan A, 2018, AN EMPIRICAL COMPARI
   Decan A, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P493, DOI 10.1109/SANER.2016.12
   Di Cosmo R, 2011, SCI COMPUT PROGRAM, V76, P1144, DOI 10.1016/j.scico.2010.11.001
   Dogguy Mehdi, 2011, STUDIA INFORM UNIVER, V9, P129
   Ebert C, 2016, IEEE SOFTWARE, V33, P27, DOI 10.1109/MS.2016.147
   FLEISS JL, 1973, EDUC PSYCHOL MEAS, V33, P613, DOI 10.1177/001316447303300309
   Flyvbjerg B, 2006, QUAL INQ, V12, P219, DOI 10.1177/1077800405284363
   Fuchs T, 2016, WHAT IF WE HAD A GRE
   German DM, 2013, EUR CON SFTWR MTNCE, P243, DOI 10.1109/CSMR.2013.33
   Gousios G., 2014, Proceedings of the 11th working conference on mining software repositories, Ved, P384, DOI [DOI 10.1145/2597073.2597126, 10.1145/2597073]
   Grissom R. J., 2005, EFFECT SIZES RES BRO
   Haefliger S, 2008, MANAGE SCI, V54, P180, DOI 10.1287/mnsc.1070.0748
   Haney D, 2016, NPM LEFTPAD HAVE WE
   Harris R, 2015, SMALL MODULES ITS NO
   Hemanth HM, 2015, ONELINE NODE MODULES
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   Hunter JE, 2001, J CONSUM RES, V28, P149, DOI 10.1086/321953
   Inoue K, 2012, PROC INT CONF SOFTW, P331, DOI 10.1109/ICSE.2012.6227181
   Kabbedijk J, 2011, LECT NOTES BUS INF P, V80, P44
   Kalliamvakou E., 2014, P 11 WORKING C MININ, P92, DOI DOI 10.1145/2597073.2597074
   Kula RG, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P288, DOI 10.1109/SANER.2018.8330217
   Libraries.io, LIB IO THE OPEN SOUR
   Libraries.io, 2017, PYPI
   LIM WC, 1994, IEEE SOFTWARE, V11, P23, DOI 10.1109/52.311048
   Macdonald F, 2016, A PROGRAMMER ALMOST
   Manikas K, 2016, J SYST SOFTWARE, V117, P84, DOI 10.1016/j.jss.2016.02.003
   McCamant S., 2003, Software Engineering Notes, V28, P287, DOI 10.1145/949952.940110
   Mirhosseini S, 2017, IEEE INT CONF AUTOM, P84, DOI 10.1109/ASE.2017.8115621
   Mockus Audris, 2007, International Workshop on Emerging Trends in FLOSS Research and Development, P7, DOI [10.1109/FLOSS.2007.10, DOI 10.1109/FLOSS.2007.10]
   Mohagheghi P, 2004, PROC INT CONF SOFTW, P282, DOI 10.1109/ICSE.2004.1317450
   npm, 2016, WHAT IS NPM NODE PAC
   npm Blog T, 2016, THE NPM BLOG CHANGES
   Orsila H, 2008, INT FED INFO PROC, V275, P159
   Patra J, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P741, DOI 10.1145/3180155.3180184
   Python, PYTHON TESTING TOOLS
   Rahman MT, 2019, EMPIR SOFTW ENG, V24, P826, DOI 10.1007/s10664-018-9639-0
   Ray B, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P155, DOI 10.1145/2635868.2635922
   Salman I, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P666, DOI 10.1109/ICSE.2015.82
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Singer Janice, 2008, Guide to Advanced Empirical Software Engineering, P9
   Sjoberg DIK, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P17, DOI 10.1109/ISESE.2002.1166921
   Sojer M, 2010, J ASSOC INF SYST, V11, P868
   Trockman A, 2018, PROCEEDINGS OF THE I
   Tsay J, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P356, DOI 10.1145/2568225.2568315
   Valiev M, 2018, JOINT EUROPEAN SOFTW
   Vasilescu B, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P805, DOI 10.1145/2786805.2786850
   Williams C, 2016, HOW ONE DEVELOPER JU
   Wittern E, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P351, DOI [10.1145/2901739.2901743, 10.1109/MSR.2016.043]
   Wu Y, 2018, HOW DO DEVELOPERS UT
   Zambonini D, 2011, A PRACTICAL GUIDE TO
   Zhu J, 2014, PROCEEDINGS OF THE 8, P30
NR 69
TC 22
Z9 24
U1 1
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2020
VL 25
IS 2
SI SI
BP 1168
EP 1204
DI 10.1007/s10664-019-09792-9
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA KT0VU
UT WOS:000518729800005
DA 2024-07-18
ER

PT J
AU Ahasanuzzaman, M
   Hassan, S
   Bezemer, CP
   Hassan, AE
AF Ahasanuzzaman, Md
   Hassan, Safwat
   Bezemer, Cor-Paul
   Hassan, Ahmed E.
TI A longitudinal study of popular ad libraries in the Google Play Store
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Android mobile apps; Ad library; Google Play store; Longitudinal study;
   Software engineering
ID ARCHITECTURE
AB In-app advertisements have become an integral part of the revenue model of mobile apps. To gain ad revenue, app developers integrate ad libraries into their apps. Such libraries are integrated to serve advertisements (ads) to users; developers then gain revenue based on the displayed ads and the users' interactions with such ads. As a result, ad libraries have become an essential part of the mobile app ecosystem. However, little is known about how such ad libraries have evolved over time. In this paper, we study the evolution of the 8 most popular ad libraries (e.g., Google AdMob and Facebook Audience Network) over a period of 33 months (from April 2016 until December 2018). In particular, we look at their evolution in terms of size, the main drivers for releasing a new version, and their architecture. To identify popular ad libraries, we collect 35,462 updates of 1,840 top free-to-download apps in the Google Play Store. Then, we identify 63 ad libraries that are integrated into the studied popular apps. We observe that an ad library represents 10% of the binary size of mobile apps, and that the proportion of the ad library size compared to the app size has grown by 10% over our study period. By taking a closer look at the 8 most popular ad libraries, we find that ad libraries are continuously evolving with a median release interval of 34 days. In addition, we observe that some libraries have grown exponentially in size (e.g, Facebook Audience Network), while other libraries have attempted to reduce their size as they evolved. The libraries that reduced their size have done so through: (1) creating a lighter version of the ad library, (2) removing parts of the ad library, and (3) redesigning their architecture into a more modular one. To identify the main drivers for releasing a new version, we manually analyze the release notes of the eight studied ad libraries. We observe that fixing issues that are related to displaying video ads is the main driver for releasing new versions. We also observe that ad library developers are constantly updating their libraries to support a wider range of Android platforms (i.e., to ensure that more devices can use the libraries without errors). Finally, we derive a reference architecture from the studied eight ad libraries, and we study how these libraries deviated from this architecture in the study period. Our study is important for ad library developers as it provides the first in-depth look into how the important mobile app market segment of ad libraries has evolved. Our findings and the reference architecture are valuable for ad library developers who wish to learn about how other developers built and evolved their successful ad libraries. For example, our reference architecture provides a new ad library developer with a foundation for understanding the interactions between the most important components of an ad library.
C1 [Ahasanuzzaman, Md; Hassan, Safwat; Hassan, Ahmed E.] Queens Univ, SAIL, Kingston, ON, Canada.
   [Bezemer, Cor-Paul] Univ Alberta, Dept Elect & Comp Engn, Edmonton, AB, Canada.
C3 Queens University - Canada; University of Alberta
RP Ahasanuzzaman, M (corresponding author), Queens Univ, SAIL, Kingston, ON, Canada.
EM md.ahasanuzzaman@queensu.ca
RI KHALIFA, AHMED khalifa/HKF-2246-2023; Hassan, Safwat/JWP-1498-2024
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; Bezemer,
   Cor-Paul/0000-0002-0474-5718; Ahasanuzzaman, Md/0000-0002-3709-2741
CR Addo ID, 2014, IEEE INT CONF MO, P108, DOI 10.1109/MobServ.2014.24
   Akdeniz, 2019, GOOGL PLAY CRAWL
   [Anonymous], 2019, GOOGLE MOBILE ADS LI
   [Anonymous], 2019, MEASURING AD VIEWABI
   [Anonymous], 2019, APPBRAIN INTELLIGENC
   [Anonymous], 1977, BIOMETRICS
   [Anonymous], 2013, PROGUARD
   [Anonymous], 2019, ANDROID VERSION HIST
   [Anonymous], 2017, ARXIV170207681
   [Anonymous], 2019, PSYCH
   [Anonymous], 2019, VIRTUAL AUGMENTED RE
   [Anonymous], 2019, SIMPLE GUIDE UNDERST
   [Anonymous], 2019, RXJAVA
   [Anonymous], 2019, UNDERSTAND TOOL
   [Anonymous], 2019, WHY PLAYABLE ADS ARE
   [Anonymous], 2019, DEX2JAR
   Apache Software Foundation, 2018, DOWNL AP COMM BCEL
   AppAnnie, 2017, IN APP ADV SPEND TRI
   AppBrain, 2016, VIDEO ADS
   Au Kathy Wain Yee, 2012, P 2012 ACM C COMP CO, P217
   Backes M, 2016, PROCEEDINGS OF THE 25TH USENIX SECURITY SYMPOSIUM, P1101
   Belanche D, 2017, J INTERACT MARK, V37, P75, DOI 10.1016/j.intmar.2016.06.004
   Book T, 2013, ARXIV13030857 COMP R
   Calciati P, 2018, IEEE WORK CONF MIN S, P142, DOI 10.1145/3196398.3196449
   Calciati P, 2017, IEEE WORK CONF MIN S, P37, DOI 10.1109/MSR.2017.64
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Davidson D., 2014, Proceedings of the 30th Annual Computer Security Applications Conference, ACSAC'14, P236
   DE LA IGLESIA MARN., 2009, Web 2.0, P1
   Derr E, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2187, DOI 10.1145/3133956.3134059
   Dong F, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P257, DOI 10.1145/3236024.3236045
   Duenas J. C., 1998, Development and Evolution of Software Architectures for Product Families. Second International ESPRIT ARES Workshop Proceedings, P148
   Facebook, 2017, INTR REW VID GAM DEV
   Felt AP, 2011, PROCEEDINGS OF THE 18TH ACM CONFERENCE ON COMPUTER & COMMUNICATIONS SECURITY (CCS 11), P627
   Gao C., 2018, P 1 INT WORKSH ADV M, P13
   Google, 2019, BEST PRACT UN ID
   Google, 2019, PLAYT 2018 HELP YOU
   Google, 2016, SDK LESS MED EAS WAY
   Google, 2019, VIEW JAV HEAP MEM AL
   Google, 2019, MAN YOUR APPS MEM
   Grace M. C., 2012, PROC 5 ACM C SECUR P, P101
   Grosskurth A, 2005, PROC IEEE INT CONF S, P661
   Gui JP, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P100, DOI 10.1109/ICSE.2015.32
   Guo CR, 2013, IEEE INT CONF AUTOM, P389, DOI 10.1109/ASE.2013.6693097
   Hao L, 2017, PROD OPER MANAG, V26, P189, DOI 10.1111/poms.12647
   Hassan AE, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P349, DOI 10.1109/ICSE.2002.1007981
   Hassan AE, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P150, DOI 10.1109/WCRE.2000.891462
   Hassan S, 2018, IEEE T SOFTWARE ENG, P1, DOI DOI 10.18502/KEG.V3I4.2158
   Hassan S, 2017, EMPIR SOFTW ENG, V22, P505, DOI 10.1007/s10664-016-9435-7
   Huq Khandkar S, 2009, OPEN CODING
   Kim D, 2016, SENSORS-BASEL, V16, DOI 10.3390/s16071063
   Li L, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P403, DOI 10.1109/SANER.2016.52
   Manic M., 2015, Bulletin of the Transilvania University of Brasov.Economic Sciences.Series V, V8, P53
   McDonnell T, 2013, PROC IEEE INT CONF S, P70, DOI 10.1109/ICSM.2013.18
   Medvidovic N., 2006, Automated Software Engineering, V13, P225, DOI 10.1007/s10515-006-7737-5
   Medvidovic N, 2000, IEEE T SOFTWARE ENG, V26, P70, DOI 10.1109/32.825767
   MoPub, 2019, CUST MOPUB SDK ONL F
   Preston-Werner Tom., 2013, Semantic Versioning 2.0.0
   Roy B, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2017), P41, DOI 10.1109/ICSA.2017.42
   Ruiz IJM, 2016, IEEE SOFTWARE, V33, P74, DOI 10.1109/MS.2014.81
   Ruiz IJM, 2014, IEEE SOFTWARE, V31, P86, DOI 10.1109/MS.2014.79
   Segment, 2019, EFF MOB APP SIZ DOWN
   Vungle, 2019, GEN MOR REV
   Wang HY, 2019, WEB CONFERENCE 2019: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2019), P1988, DOI 10.1145/3308558.3313611
NR 63
TC 10
Z9 11
U1 1
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN
PY 2020
VL 25
IS 1
BP 824
EP 858
DI 10.1007/s10664-019-09766-x
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KP0WS
UT WOS:000515965100021
DA 2024-07-18
ER

PT J
AU Hadar, I
   Zamansky, A
   Berry, DM
AF Hadar, Irit
   Zamansky, Anna
   Berry, Daniel M.
TI The inconsistency between theory and practice in managing inconsistency
   in requirements engineering
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Inconsistency; Requirements engineering; ViewPoint framework;
   Zave-Jackson validation formula; Empirical study; Qualitative study;
   Grounded theory; Grounded analysis
ID FRAMEWORK; RATIONALITY; VIEWPOINTS
AB The problem of inconsistency in requirements engineering has been in the spotlight of the RE community from the early 1990s. In the early years, inconsistency was perceived in the literature as a problem that needs to be eliminated on sight. More recently, it has become recognized that maintaining consistency at all times is not only infeasible, but also even counterproductive. Based on this recognition, paradigms and tools have been proposed in the RE literature for managing inconsistency. However, over the same period, inconsistency as perceived and managed in practice has not received much attention. Our research aims to better understand the phenomenon of inconsistency and the strategies to address it in RE practice. This paper describes an empirical study investigating practitioners' perceptions of inconsistency manifestations in RE, their attitudes towards these manifestations, and strategies they apply to address them. The findings of this research led to the two contributions: (a) an explanation of how the ideas of the RE field about managing RE inconsistency are reflected in practitioners' perceptions of the inconsistency that they encounter in their daily work, and (b) the identification of some barriers that appear to be hindering practitioners' adoption of the RE field's inconsistency management strategies, together with possible reasons underlying these barriers.
C1 [Hadar, Irit; Zamansky, Anna] Univ Haifa, Dept Informat Syst, IL-3498838 Haifa, Israel.
   [Berry, Daniel M.] Univ Waterloo, Cheriton Sch Comp Sci, Waterloo, ON N2L 3G1, Canada.
C3 University of Haifa; University of Waterloo
RP Hadar, I (corresponding author), Univ Haifa, Dept Informat Syst, IL-3498838 Haifa, Israel.
EM hadari@is.haifa.ac.il; annazam@is.haifa.ac.il; dberry@uwaterloo.ca
OI Hadar, Irit/0000-0002-4267-0235; Zamansky, Anna/0000-0001-8350-4068
CR [Anonymous], 2002, P 8 INT WORKSH REQ E
   Bagheri E, 2008, ASWEC 2008: 19TH AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P357, DOI 10.1109/ASWEC.2008.44
   Brower RS, 2008, PUBLIC ADM PUBLIC PO, V134, P823
   Cho A, 2016, SCI MAGAZINE
   Easterbrook S, 1996, SOFTWARE ENG J, V11, P31, DOI 10.1049/sej.1996.0004
   Easterbrook S, 2001, PROC INT CONF SOFTW, P411, DOI 10.1109/ICSE.2001.919114
   Ejersbo L.R., 2008, Handbook of design research methods in education: Innovations in science, technology, engineering, and mathematics learning and teaching, P149
   Ernst Neil A., 2012, Advanced Information Systems Engineering. Proceedings 24th International Conference, CAiSE 2012, P382, DOI 10.1007/978-3-642-31095-9_25
   Evans JST, 1997, CAH PSYCHOL COGN, V16, P3
   Farnsworth V, 2016, BRIT J EDUC STUD, V64, P139, DOI 10.1080/00071005.2015.1133799
   Finkelstein A., 2000, Database and expert systems applications. 11th International Conference, DEXA 2000. Proceedings (Lecture Notes in Computer Science Vol.1873), P1
   FINKELSTEIN ACW, 1994, IEEE T SOFTWARE ENG, V20, P569, DOI 10.1109/32.310667
   Gervasi V, 2005, ACM T SOFTW ENG METH, V14, P277, DOI 10.1145/1072997.1072999
   Gigerenzer G., 1990, ABC RES GROUP SIMPLE
   Gilbert D.T., 2002, HEURISTICS BIASES, P167, DOI DOI 10.1017/CBO9780511808098.011
   Hadar I, 2008, COMMUN ACM, V51, P41, DOI 10.1145/1342327.1342336
   Hadar I, 2015, LECT NOTES BUS INF P, V215, P107, DOI 10.1007/978-3-319-19243-7_11
   Hadar I, 2015, INT REQUIR ENG CONF, P226, DOI 10.1109/RE.2015.7320427
   Hadar I, 2013, SCI COMPUT PROGRAM, V78, P1407, DOI 10.1016/j.scico.2012.10.006
   Hayes IJ, 2003, LECT NOTES COMPUT SC, V2805, P154
   Jones CB, 2007, LNCS, V4700
   Jureta I. J., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P115, DOI 10.1109/RE.2010.24
   Kahneman D, 2002, PRIZE LECT DECEMBER
   Kamalrudin M, 2017, AUTOMAT SOFTW ENG, V24, P1, DOI 10.1007/s10515-016-0192-z
   Mercier H, 2011, BEHAV BRAIN SCI, V34, P57, DOI 10.1017/S0140525X10000968
   Mu KD, 2009, FUND INFORM, V91, P631, DOI 10.3233/FI-2009-0062
   Myers MD, 1997, MIS QUART, V21, P241, DOI 10.2307/249422
   Nuseibeh B, 2003, PROC INT CONF SOFTW, P676, DOI 10.1109/ICSE.2003.1201254
   Nuseibeh B., 1999, Proceedings. Tenth International Workshop on Database and Expert Systems Applications. DEXA 99, P364, DOI 10.1109/DEXA.1999.795194
   Nuseibeh B, 2001, J SYST SOFTWARE, V58, P171, DOI 10.1016/S0164-1212(01)00036-X
   NUSEIBEH B, 1994, IEEE T SOFTWARE ENG, V20, P760, DOI 10.1109/32.328995
   Nuseibeh B, 2000, COMPUTER, V33, P24, DOI 10.1109/2.839317
   Nuseibeh B., 2000, P C FUTURE SOFTWARE, P35, DOI [10.1145/336512.336523, DOI 10.1145/336512.336523]
   Rodrigues O, 2004, LECT NOTES ARTIF INT, V3171, P41
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Russo A, 2002, LECT NOTES COMPUT SC, V2401, P22, DOI 10.1007/3-540-45619-8_3
   Spanoudakis G., 2001, HDB SOFTWARE ENG KNO, V1, P329
   Stanovich K.E., 2005, The robot's rebellion: Finding meaning in the age of Darwin
   Stanovich KE, 2000, BEHAV BRAIN SCI, V23, P645, DOI 10.1017/S0140525X00003435
   Strauss A., 1994, HDB QUALITATIVE RES, P273, DOI DOI 10.1007/BF00988593
   Strauss A.L., 1990, BASICS QUALITATIVE R
   Strauss E, 1998, CLIN ORTHOP RELAT R, P2
   Todd P. M., 2012, Ecological Rationality:Intelligence in the World
   van der Aa H, 2017, INFORM SYST, V64, P447, DOI 10.1016/j.is.2016.07.010
   Walsham G, 2006, EUR J INFORM SYST, V15, P320, DOI 10.1057/palgrave.ejis.3000589
   Whitworth E, 2007, AGILE 2007, PROCEEDINGS, P26, DOI 10.1109/AGILE.2007.60
   Wieringa RJ, 2006, REQUIR ENG, V11, P295, DOI 10.1007/s00766-006-0037-6
   Wohlin Claes, 2012, EXPT SOFTWARE ENG, P9
   Zamansky A, 2016, ENASE: PROCEEDINGS OF THE 11TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL SOFTWARE APPROACHES TO SOFTWARE ENGINEERING, P377
   Zave P., 1997, ACM Transactions on Software Engineering and Methodology, V6, P1, DOI 10.1145/237432.237434
   Zowghi D, 2001, APSEC 2001: EIGHTH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P133, DOI 10.1109/APSEC.2001.991469
NR 51
TC 5
Z9 5
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2019
VL 24
IS 6
BP 3972
EP 4005
DI 10.1007/s10664-019-09718-5
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JT6XW
UT WOS:000501131100023
DA 2024-07-18
ER

PT J
AU Khanmohammadi, K
   Ebrahimi, N
   Hamou-Lhadj, A
   Khoury, R
AF Khanmohammadi, Kobra
   Ebrahimi, Neda
   Hamou-Lhadj, Abdelwahab
   Khoury, Raphael
TI Empirical study of android repackaged applications
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Mobile applications; Application repackaging; Mining android application
   repositories; Mobile security
ID REUSE
AB The growing popularity of Android applications has generated increased concerns over the danger of piracy and the spread of malware, and particularly of adware: malware that seeks to present unwanted advertisements to the user. A popular way to distribute malware in the mobile world is through repackaging of legitimate apps. This process consists of downloading, unpacking, manipulating, recompiling an application, and publishing it again in an app store. In this paper, we conduct an empirical study of over 15,000 apps to gain insights into the factors that drive the spread of repackaged apps. We also examine the motivations of developers who publish repackaged apps and those of users who download them, as well as the factors that determine which apps are chosen for repackaging, and the ways in which the apps are modified during the repackaging process. Having observed that adware is particularly prevalent in repackaged apps, we focus on this type of malware and examine how the app is modified when it is injected in an app's code. Our findings shed much needed light on this class of malware that can be useful to security experts, and allow us to make recommendations that could lead to the creation of more effective malware detection tools, Furthermore, on the basis of our results, we propose a novel app indexing scheme that minimizes the number of comparisons needed to detect repackaged apps.
C1 [Khanmohammadi, Kobra; Ebrahimi, Neda; Hamou-Lhadj, Abdelwahab] Concordia Univ, Dept Elect & Comp Engn, Montreal, PQ, Canada.
   [Khoury, Raphael] DRDCRDDC Valcartier, Def Res & Dev Canada, Quebec City, PQ, Canada.
   [Khoury, Raphael] Univ Quebec Chicoutimi, Chicoutimi, PQ, Canada.
C3 Concordia University - Canada; Defence Research & Development Canada;
   University of Quebec; University of Quebec Chicoutimi
RP Khanmohammadi, K (corresponding author), Concordia Univ, Dept Elect & Comp Engn, Montreal, PQ, Canada.
EM k_khanm@ece.concordia.ca; n_ebr@ece.concordia.ca;
   abdelw@ece.concordia.ca; raphael.khoury@ugac.ca
OI Hamou-Lhadj, Abdelwahab/0000-0002-3319-5006
CR Aafer Y, 2013, L N INST COMP SCI SO, V127, P86
   Alazab M., 2010, Proceedings Second Cybercrime and Trustworthy Computing Workshop (CTC 2010), P52, DOI 10.1109/CTC.2010.8
   Aldini A, 2015, CONCURR COMP-PRACT E, V27, P2818, DOI 10.1002/cpe.3447
   [Anonymous], 2012, INT C DET INTR MALW
   [Anonymous], 2019, ADMOB ADSENSE POLICI
   [Anonymous], 2018, ANDROID DEV DOCUMENT
   [Anonymous], 2018, FREE ONL VIR MALW UR
   Arp D, 2014, 21ST ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2014), DOI 10.14722/ndss.2014.23247
   Au Kathy Wain Yee, 2012, P 2012 ACM C COMP CO, P217
   Backes M, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P356, DOI 10.1145/2976749.2978333
   Bartkowiak A, 2012, FED CONF COMPUT SCI, P27
   Book T., 2013, ARXIV13030857
   Canfora Gerardo, 2013, 2013 International Conference on Availability, Reliability and Security (ARES), P607, DOI 10.1109/ARES.2013.80
   Chen J, 2015, J COMPUT SCI TECH-CH, V30, P942, DOI 10.1007/s11390-015-1573-7
   Chen K, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P175, DOI 10.1145/2568225.2568286
   Chen K, 2015, PROCEEDINGS OF THE 24TH USENIX SECURITY SYMPOSIUM, P659
   Chien E, 2005, P 15 VIR B C DUBL IR, V47
   Crussell Jonathan, 2012, Computer Security - ESORICS 2012. Proceedings 17th European Symposium on Research in Computer Security, P37, DOI 10.1007/978-3-642-33167-1_3
   Crussell J, 2014, MOBISYS'14: PROCEEDINGS OF THE 12TH ANNUAL INTERNATIONAL CONFERENCE ON MOBILE SYSTEMS, APPLICATIONS, AND SERVICES, P123, DOI 10.1145/2594368.2594391
   Crussell J, 2015, IEEE T MOBILE COMPUT, V14, DOI 10.1109/TMC.2014.2381212
   Desnos A., 2015, Androguard: Reverse engineering, malware and goodware analysis of android applications... and more (ninja!)
   Dong F, 2018, ARXIV170901213V4
   Dong S, 2018, ARXIV80101633V1
   Enck W, 2014, ACM T COMPUT SYST, V32, DOI 10.1145/2619091
   Erturk E., 2012, 2012 World Congress on Internet Security (WorldCIS-2012), P189
   Gao J, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P604, DOI [10.1109/SANER.2019.8668010, 10.1109/saner.2019.8668010]
   Gascon Hugo, 2013, P 2013 ACM WORKSH AR, P45
   Gonzalez H, 2014, 8 EUR WORKSH SYST SE, P7
   Google Inc, 2012, CLOUD DEV MESS DEPR
   Grace  M., 2012, P 10 INT C MOB SYST, P281, DOI DOI 10.1145/2307636.2307663
   Gupta SK, 2013, INDIAN J MED SPEC, V4, P1, DOI 10.7713/ijms.2013.0001
   Hu W., 2014, 23 INT C COMPUTER CO, P1, DOI DOI 10.1109/ICCCN.2014.6911805
   Huang A., 2008, NZCSRSC 2008
   Hurier M, 2017, IEEE WORK CONF MIN S, P425, DOI 10.1109/MSR.2017.57
   Islam Rafiqul, 2012, Information and Communication Security. 14th International Conference (ICICS 2012). Proceedings, P488, DOI 10.1007/978-3-642-34129-8_48
   Jiao SB, 2015, LECT NOTES COMPUT SC, V9065, P349, DOI 10.1007/978-3-319-17533-1_24
   Khanmohammadi K, 2015, 5 ANN ACM CCS WORKSH
   Khanmohammadi K, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P168, DOI 10.1109/QRS.2017.27
   Kornblum J, 2006, DIGIT INVESTIG, pS91, DOI 10.1016/j.diin.2006.06.015
   Kumar M., 2017, BEWARE NEW ANDROID M
   Lannan Luo, 2016, 2016 46th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN). Proceedings, P550, DOI 10.1109/DSN.2016.56
   Lee YK, 2014, I C INF COMM TECH CO, P667, DOI 10.1109/ICTC.2014.6983250
   Leka O, 2016, DATABASE ANDROID APP
   Li L, 2017, ANDROZOO COLLECTING, DOI [10.1145/2901739.2903508, DOI 10.1145/2901739.2903508]
   Li L, 2017, PROC IEEE ACM INT C, P359, DOI 10.1109/ICSE-C.2017.109
   Li Li, 2018, ARXIV181108520
   Li Y., 2015, 8 WORKSH CYB SEC EXP
   Lin YD, 2013, COMPUT SECUR, V39, P340, DOI 10.1016/j.cose.2013.08.010
   Linares-Vasquez M., 2014, PROC 11 WORK C MININ, P242
   Liu Bin, 2014, 11 USENIX S NETW SYS, P57
   Ma Z, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P653, DOI 10.1145/2889160.2889178
   Maly F, 2015, STUD COMPUT INTELL, V598, P191, DOI 10.1007/978-3-319-16211-9_20
   Mariconti E, 2017, 24 NETW DISTR SYST S
   Mojica IJ, 2014, IEEE SOFTWARE, V31, P78, DOI 10.1109/MS.2013.142
   Mulliner C., 2014, Proceedings of the 9th ACM symposium on Information, computer and communications security, P459
   OWASP, 2016, MOB TOP 10 2016 TOP
   Peng Z, 2014, IEEE C ELECTR PERFOR, P147, DOI 10.1109/EPEPS.2014.7103619
   Poeplau S, 2014, 21ST ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2014), DOI 10.14722/ndss.2014.23328
   Potharaju R, 2012, LECT NOTES COMPUT SC, V7159, P106, DOI 10.1007/978-3-642-28166-2_11
   Quanlong Guan, 2016, Engineering Secure Software and Systems. 8th International Symposium, ESSoS 2016. Proceedings: LNCS 9639, P89, DOI 10.1007/978-3-319-30806-7_6
   Rastogi V., 2016, ARE THESE ADS SAFE D
   Ren C., 2014, Proceedings of the 29th ACM/IEEE International Conference on Automated Software Engineering, P635
   Ruiz I. J. M., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P113
   Sahs J., 2012, 2012 European Intelligence and Security Informatics Conference (EISIC), P141, DOI 10.1109/EISIC.2012.34
   Sanz B, 2012, CONSUM COMM NETWORK, P149, DOI 10.1109/CCNC.2012.6181075
   Shahriar H, 2014, INT CONF INTERNET, P349, DOI 10.1109/ICITST.2014.7038835
   Sharif M. I., 2008, NETW DISTR SYST SEC
   Shen SH, 2018, INT SYM COMPUT INTEL, P29, DOI 10.1109/ISCID.2018.10108
   Singhal A., 2001, IEEE DATA ENG B, V24, P35
   Soh C, 2015, INT C PROGRAM COMPRE, P163, DOI 10.1109/ICPC.2015.25
   Su Mon Kywe, 2015, Information Security and Cryptology - ICISC 2014. 17th International Conference. Revised Selected Papers: LNCS 8949, P241, DOI 10.1007/978-3-319-15943-0_15
   Suarez-Tangil G, 2014, EXPERT SYST APPL, V41, P1104, DOI 10.1016/j.eswa.2013.07.106
   Sun Mingshen., 2015, Proceedings of the 8th ACM Conference on Security Privacy in Wireless and Mobile Networks, P9
   Sun X, 2014, IFIP ADV INF COMM TE, V428, P142
   Symantec, 2014, ANDR APP
   Takabi H., 2010, IEEE 34th Annual Computer Software and Applications Conference Workshops (COMPSACW 2010), P393, DOI 10.1109/COMPSACW.2010.74
   Tian K, 2016, 2016 IEEE SYMPOSIUM ON SECURITY AND PRIVACY WORKSHOPS (SPW 2016), P262, DOI 10.1109/SPW.2016.33
   Viennot N., 2014, 2014 ACM INT C MEAS, P221, DOI DOI 10.1145/2637364.2592003
   Wang Hongtao, 2015, SCI TECHNOLOGY EC MA, V2015, P71
   Winiewski R, 2012, APKTOOL TOOL REVERSE
   Winter C, 2013, DIGIT INVEST, V10, P361, DOI 10.1016/j.diin.2013.08.003
   Wu DJ, 2012, ASIA JT CONF INF SEC, P62, DOI 10.1109/AsiaJCIS.2012.18
   Wu XP, 2015, SECUR COMMUN NETW, V8, P2257, DOI 10.1002/sec.1170
   Xu K, 2016, IEEE T INF FOREN SEC, V11, P1252, DOI 10.1109/TIFS.2016.2523912
   Xue YX, 2017, IEEE T INF FOREN SEC, V12, P1529, DOI 10.1109/TIFS.2017.2661723
   Yang C, 2014, LECT NOTES COMPUT SC, V8712, P163, DOI 10.1007/978-3-319-11203-9_10
   Yue ST, 2017, INT C PROGRAM COMPRE, P132, DOI 10.1109/ICPC.2017.16
   Zeng Q, 2018, INT SYM CODE GENER, P50, DOI 10.1145/3168820
   Zhang F., 2014, P 2014 ACM C SEC PRI, P25, DOI DOI 10.1145/2627393.2627395
   Zhao Y, 2018, INT J NETW SECUR, V20, P1005, DOI [10.6633/IJNS.201811, DOI 10.6633/IJNS.201811]
   Zhauniarovich Y, 2014, LECT NOTES COMPUT SC, V8566, P130, DOI 10.1007/978-3-662-43936-4_9
   Zhou W, 2012, P 2 ACM C DAT APPL S, P317, DOI DOI 10.1145/2133601.2133640
   Zhou W., 2014, P 4 ACM C DATA APPL, P199
   Zhou W., 2013, Proceedings of the third ACM conference on Data and application security and privacy, P185
   Zhou Wu., 2013, Proceedings of the 8th ACM SIGSAC Symposium on Information, Computer and Communications Security, ASIA CCS '13, P1, DOI DOI 10.1145/2484313
   Zhou YJ, 2012, P IEEE S SECUR PRIV, P95, DOI 10.1109/SP.2012.16
   Zhou Yajin, 2012, NDSS, P50
NR 97
TC 13
Z9 13
U1 0
U2 12
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2019
VL 24
IS 6
BP 3587
EP 3629
DI 10.1007/s10664-019-09760-3
PG 43
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JT6XW
UT WOS:000501131100011
DA 2024-07-18
ER

PT J
AU Chaparro, O
   Florez, JM
   Marcus, A
AF Chaparro, Oscar
   Florez, Juan Manuel
   Marcus, Andrian
TI Using bug descriptions to reformulate queries during
   text-retrieval-based bug localization
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Bug descriptions; Query reformulation; Bug localization; Text retrieval
ID MODEL
AB Text Retrieval (TR)-based approaches for bug localization rely on formulating an initial query based on the full text of a bug report. When the query fails to retrieve the buggy code artifacts, developers can reformulate the query and retrieve more candidate code documents. Existing research on query reformulation focuses mostly on leveraging relevance feedback from the user or on expanding the original query with additional information. We hypothesize that the title of the bug reports, the observed behavior, expected behavior, steps to reproduce, and code snippets provided by the users in bug descriptions, contain the most relevant information for retrieving the buggy code artifacts, and that other parts of the descriptions contain more irrelevant terms, which hinder retrieval. This paper proposes and evaluates a set of query reformulation strategies based on the selection of existing information in bug descriptions, and the removal of irrelevant parts from the original query. The results show that selecting the bug report title and the observed behavior is the strategy that performs best across various TR-based bug localization approaches and code granularities, as it leads to retrieving the buggy code artifacts within the top-N results for 25.6% more queries (on average) than without query reformulation. This strategy is highly applicable and consistent across different thresholds N. Selecting the steps to reproduce or the expected behavior (when provided in the bug reports) along with the bug title and the observed behavior leads to higher performance (i.e., between 31.4% and 41.7% more queries) and comparable consistency, yet it is applicable in fewer cases. These reformulation strategies are easy to use and are independent of the underlying retrieval technique.
C1 [Chaparro, Oscar; Florez, Juan Manuel; Marcus, Andrian] Univ Texas Dallas, Dept Comp Sci, Richardson, TX 75083 USA.
C3 University of Texas System; University of Texas Dallas
RP Chaparro, O (corresponding author), Univ Texas Dallas, Dept Comp Sci, Richardson, TX 75083 USA.
EM ojchaparroa@utdallas.edu; jflorez@utdallas.edu; amarcus@utdallas.edu
RI Chaparro, Oscar/AAD-1305-2019
OI Chaparro, Oscar/0000-0003-2838-685X; Marcus, Andrian/0000-0001-5450-5598
FU US National Science Foundation [CCF-1848608, CCF-1526118]
FX This research was supported in part by the grants CCF-1848608 and
   CCF-1526118 from the US National Science Foundation.
CR Ali N., 2012, 2012 12th IEEE Working Conference on Source Code Analysis and Manipulation (SCAM 2012), P174, DOI 10.1109/SCAM.2012.26
   Anh Tuan Nguyen, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P263, DOI 10.1109/ASE.2011.6100062
   [Anonymous], 2004, Lucene in Action
   [Anonymous], 2014, 2014 ACM IEEE INT S
   Arong, 2014, PROCEEDINGS OF 2014 IEEE INTERNATIONAL CONFERENCE ON PROGRESS IN INFORMATICS AND COMPUTING (PIC), P51, DOI 10.1109/PIC.2014.6972294
   Bajracharya SK, 2012, EMPIR SOFTW ENG, V17, P424, DOI 10.1007/s10664-010-9144-6
   Bassett B, 2013, CONF PROC INT SYMP C, P133, DOI 10.1109/ICPC.2013.6613841
   Carpineto C, 2012, ACM COMPUT SURV, V44, DOI 10.1145/2071389.2071390
   Chaparro O, 2018, REPLICATION PACKAGE
   Chaparro O, 2017, PROC IEEE INT CONF S, P376, DOI 10.1109/ICSME.2017.100
   Chaparro O, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P396, DOI 10.1145/3106237.3106285
   Chaparro O, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P716, DOI 10.1145/2889160.2892647
   Chicken E., 2013, NONPARAMETRIC STAT M, V751
   Damevski K, 2016, EMPIR SOFTW ENG, V21, P724, DOI 10.1007/s10664-015-9373-9
   Dao T, 2017, INT C PROGRAM COMPRE, P241, DOI 10.1109/ICPC.2017.29
   Davies S., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P125, DOI 10.1109/WCRE.2012.22
   De Lucia A., 2012, SOFTWARE SYSTEMS TRA, P71, DOI [10.1007/978-1-4471- 2239-5_4, DOI 10.1007/978-1-4471-2239-5_4]
   Dietrich T, 2013, IEEE INT CONF AUTOM, P586, DOI 10.1109/ASE.2013.6693117
   Dilshener T, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P286, DOI [10.1109/MSR.2016.037, 10.1145/2901739.2901775]
   Dit B, 2013, J SOFTW-EVOL PROC, V25, P53, DOI 10.1002/smr.567
   Eddy B. P., 2018, J SOFTWARE EVOLUTION, V30, P1
   Gay G, 2009, PROC IEEE INT CONF S, P351, DOI 10.1109/ICSM.2009.5306315
   Ge X, 2017, J VISUAL LANG COMPUT, V39, P1, DOI 10.1016/j.jvlc.2016.07.002
   Gibiec M., 2010, Proceedings of the IEEE/ACM International Conference on Automated Software Engineering, ASE '10, P245
   Guo J, 2017, EMPIR SOFTW ENG, V22, P1103, DOI 10.1007/s10664-016-9479-8
   Haiduc S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P842, DOI 10.1109/ICSE.2013.6606630
   Hill E, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P34, DOI 10.1109/CSMR-WCRE.2014.6747190
   Hoang TV, 2018, SYSTEMS MAN CYBERN A
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Kevic K, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P468, DOI 10.1145/2591062.2591117
   Lemos OAL, 2015, IEEE INT WORK C SO, P41, DOI 10.1109/SCAM.2015.7335400
   Le TDB, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P579, DOI 10.1145/2786805.2786880
   Le TDB, 2014, PROC INT SYMP SOFTW, P335, DOI 10.1109/ISSRE.2014.39
   Lee JW, 2018, ADV GEOM, V18, P27, DOI 10.1515/advgeom-2017-0029
   Li ZX, 2016, 8TH ASIA-PACIFIC SYMPOSIUM ON INTERNETWARE (INTERNETWARE 2016), P36, DOI 10.1145/2993717.2993723
   Lu X. A., 1995, Text REtrieval Conference (TREC-3) (NIST SP 500-225), P231
   Lv F, 2015, IEEE INT CONF AUTOM, P260, DOI 10.1109/ASE.2015.42
   Manning CD, 2014, PROCEEDINGS OF 52ND ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: SYSTEM DEMONSTRATIONS, P55, DOI 10.3115/v1/p14-5010
   Marcus A, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P214, DOI 10.1109/WCRE.2004.10
   Marcus A., 2013, Software Engineering: International Summer Schools, ISSSE 2009-2011, Salerno, Italy. Revised Tutorial Lectures, V7171, P126
   Mills C, 2018, P 34 INT C SOFTW MAI, P410
   Mills C, 2017, ACM T SOFTW ENG METH, V26, DOI 10.1145/3078841
   Moreno L, 2014, PROC IEEE INT CONF S, P151, DOI 10.1109/ICSME.2014.37
   Nichols BD, 2010, PROCEEDINGS OF THE 48TH ANNUAL SOUTHEAST REGIONAL CONFERENCE (ACM SE 10), P306, DOI 10.1145/1900008.1900090
   Nie LM, 2016, IEEE T SERV COMPUT, V9, P771, DOI 10.1109/TSC.2016.2560165
   Ponzanelli L, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P474, DOI 10.1109/MSR.2015.67
   PORTER MF, 1980, PROGRAM-AUTOM LIBR, V14, P130, DOI 10.1108/eb046814
   Rahman MM, 2018, IEEE WORK CONF MIN S, P465, DOI 10.1145/3196398.3196425
   Rahman MM, 2018, P 26 JOINT M FDN SOF
   Rahman MM, 2017, IEEE INT CONF AUTOM, P428, DOI 10.1109/ASE.2017.8115655
   Rahman MM, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P79, DOI 10.1109/SANER.2017.7884611
   Rahman MM, 2016, IEEE INT CONF AUTOM, P220, DOI 10.1145/2970276.2970362
   Rao S., 2011, P 8 WORK C MIN SOFTW, P43
   Rath M, 2018, P WORK C MIN SOFTW R
   Roldan-Vega M, 2013, PROC IEEE INT CONF S, P512, DOI 10.1109/ICSM.2013.84
   Saha RK, 2013, IEEE INT CONF AUTOM, P345, DOI 10.1109/ASE.2013.6693093
   SALTON G, 1975, COMMUN ACM, V18, P613, DOI 10.1145/361219.361220
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Shepherd David, 2007, P 6 INT C ASP OR SOF, P212
   Shi ZD, 2018, APPL SOFT COMPUT, V62, P636, DOI 10.1016/j.asoc.2017.10.048
   Sim SE, 2011, ACM T SOFTW ENG METH, V21, DOI 10.1145/2063239.2063243
   Sisman B., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P50, DOI 10.1109/MSR.2012.6224299
   Sisman B, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1805
   Sisman B, 2013, IEEE WORK CONF MIN S, P309, DOI 10.1109/MSR.2013.6624044
   Starke J, 2009, PROC IEEE INT CONF S, P157, DOI 10.1109/ICSM.2009.5306335
   Takahashi A., 2018, Proceedings of the International Conference on Program Comprehension (ICPC'18), P4
   Tang YB, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON CONSUMER ELECTRONICS-TAIWAN (ICCE-TW), P101
   Wang SW, 2016, J SOFTW-EVOL PROC, V28, P921, DOI 10.1002/smr.1801
   Wang SW, 2014, PROC IEEE INT CONF S, P171, DOI 10.1109/ICSME.2014.39
   Wen M, 2016, IEEE INT CONF AUTOM, P262, DOI 10.1145/2970276.2970359
   Wong CP, 2014, PROC IEEE INT CONF S, P181, DOI 10.1109/ICSME.2014.40
   Xiao Y, 2018, INFORM SOFTWARE TECH
   Yang J, 2014, SENSOR MATER, V26, P677
   Ye X, 2016, PROC INT CONF SOFTW, P404, DOI 10.1145/2884781.2884862
   Ye X, 2016, IEEE T SOFTWARE ENG, V42, P379, DOI 10.1109/TSE.2015.2479232
   Youm KC, 2017, INFORM SOFTWARE TECH, V82, P177, DOI 10.1016/j.infsof.2016.11.002
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
   Zhou Y, 2017, INT J SOFTW ENG KNOW, V27, P925, DOI 10.1142/S0218194017500346
   Zimmermann T, 2010, IEEE T SOFTWARE ENG, V36, P618, DOI 10.1109/TSE.2010.63
NR 79
TC 30
Z9 36
U1 1
U2 10
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2019
VL 24
IS 5
SI SI
BP 2947
EP 3007
DI 10.1007/s10664-018-9672-z
PG 61
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IS1CL
UT WOS:000481889700005
DA 2024-07-18
ER

PT J
AU Chowdhury, S
   Borle, S
   Romansky, S
   Hindle, A
AF Chowdhury, Shaiful
   Borle, Stephanie
   Romansky, Stephen
   Hindle, Abram
TI <i>GreenScaler</i>: training software energy models with automatic test
   generation
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software energy consumption; Software energy efficiency; Energy
   optimization; Energy modeling; Test generation; Automatic software
   testing; Mining software repositories; Machine learning
ID CONSUMPTION
AB Software energy consumption is a performance related non-functional requirement that complicates building software on mobile devices today. Energy hogging applications (apps) are a liability to both the end-user and software developer. Measuring software energy consumption is non-trivial, requiring both equipment and expertise, yet researchers have found that software energy consumption can be modelled. Prior works have hinted that with more energy measurement data we can make more accurate energy models. This data, however, was expensive to extract because it required energy measurement of running test cases (rare) or time consuming manually written tests. In this paper, we show that automatic random test generation with resource-utilization heuristics can be used successfully to build accurate software energy consumption models. Code coverage, although well-known as a heuristic for generating and selecting tests in traditional software testing, performs poorly at selecting energy hungry tests. We propose an accurate software energy model, GreenScaler, that is built on random tests with CPU-utilization as the test selection heuristic. GreenScaler not only accurately estimates energy consumption for randomly generated tests, but also for meaningful developer written tests. Also, the produced models are very accurate in detecting energy regressions between versions of the same app. This is directly helpful for the app developers who want to know if a change in the source code, for example, is harmful for the total energy consumption. We also show that developers can use GreenScaler to select the most energy efficient API when multiple APIs are available for solving the same problem. Researchers can also use our test generation methodology to further study how to build more accurate software energy models.
C1 [Chowdhury, Shaiful; Borle, Stephanie; Romansky, Stephen; Hindle, Abram] Univ Alberta, Dept Comp Sci, Edmonton, AB, Canada.
C3 University of Alberta
RP Chowdhury, S (corresponding author), Univ Alberta, Dept Comp Sci, Edmonton, AB, Canada.
EM shaiful@ualberta.ca; sgil@ualberta.ca; romansky@ualberta.ca;
   abram.hindle@ualberta.ca
FU Alberta Innovates - Technology Futures (AITF); NSERC Discovery Grant;
   NSERC Undergraduate Student Research Award
FX Shaiful Chowdhury is grateful to the Alberta Innovates - Technology
   Futures (AITF) to support his PhD research. Abram Hindle is supported by
   an NSERC Discovery Grant. Stephanie Borle was supported by an NSERC
   Undergraduate Student Research Award.
CR Aggarwal K, 2014, CASCON 14
   Aggarwal K, 2015, PROC IEEE INT CONF S, P311, DOI 10.1109/ICSM.2015.7332477
   Ahmad RW, 2015, J NETW COMPUT APPL, V58, P42, DOI 10.1016/j.jnca.2015.09.002
   Alam F, 2014, DES AUT TEST EUROPE
   Allix K, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P468, DOI [10.1145/2901739.2903508, 10.1109/MSR.2016.056]
   Amalfitano D, 2012, IEEE INT CONF AUTOM, P258, DOI 10.1145/2351676.2351717
   Anand S, 2008, LECT NOTES COMPUT SC, V4963, P367, DOI 10.1007/978-3-540-78800-3_28
   Anand S, 2013, J SYST SOFTWARE, V86, P1978, DOI 10.1016/j.jss.2013.02.061
   Anandan S, 2012, MATER SCI FORUM, V712, P1, DOI 10.4028/www.scientific.net/MSF.712.1
   [Anonymous], 2014, INT S SOFTWARE TESTI, DOI DOI 10.1145/2610384.2610390
   [Anonymous], 2015, P 2015 INT S SOFTWAR, P83
   [Anonymous], 2013, THESIS
   [Anonymous], IEEE SOFTWARE
   [Anonymous], 2014, P 2014 JOINT INT WOR
   [Anonymous], 2001, The elements of statistical learning: data mining, inference and prediction
   [Anonymous], 2015, ZER DRIFT INA219
   Arzt S, 2014, ACM SIGPLAN NOTICES, V49, P259, DOI [10.1145/2666356.2594299, 10.1145/2594291.2594299]
   Azim T, 2013, ACM SIGPLAN NOTICES, V48, P641, DOI [10.1145/2509136.2509549, 10.1145/2544173.2509549]
   Banerjee A, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P588, DOI 10.1145/2635868.2635871
   BAUER DF, 1972, J AM STAT ASSOC, V67, P687, DOI 10.2307/2284469
   Binkley D, 2015, IEEE INT WORK C SO, P1, DOI 10.1109/SCAM.2015.7335396
   Boonstoppel P, 2008, LECT NOTES COMPUT SC, V4963, P351, DOI 10.1007/978-3-540-78800-3_27
   Carroll A., 2010, P USENIXATC 10
   Choi W, 2013, ACM SIGPLAN NOTICES, V48, P623, DOI [10.1145/2544173.2509552, 10.1145/2509136.2509552]
   Choudhary SR, 2015, IEEE INT CONF AUTOM, P429, DOI 10.1109/ASE.2015.89
   Chowdhury S., 2016, SANER 16
   Chowdhury S, 2017, GREENSCALER TOOLS AN
   Chowdhury S, 2015, IGSC 15
   Chowdhury SA, 2017, EMPIRICAL SOFTWARE E
   Chowdhury SA, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P508, DOI [10.1145/2901739.2903494, 10.1109/MSR.2016.066]
   Chowdhury SA, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P49, DOI [10.1145/2901739.2901763, 10.1109/MSR.2016.015]
   Cliff N., 2014, Ordinal Methods for Behavioral Data Analysis
   Di Nucci D, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P103, DOI 10.1109/SANER.2017.7884613
   Dong M, 2011, P MOB 11
   Dong MA, 2009, DES AUT CON, P652
   Flinn J, 1999, WMCSA 99
   Gautam N., 2013, PROC ACM WORKSHOP MO, P7
   Goodfellow I, 2016, REGULARIZATION DEEP
   Gopinath R, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P72, DOI 10.1145/2568225.2568278
   Gurumurthi S, 2002, EIGHTH INTERNATIONAL SYMPOSIUM ON HIGH-PERFORMANCE COMPUTER ARCHITECTURE, PROCEEDINGS, P141
   Hao S, 2014, MOBISYS'14: PROCEEDINGS OF THE 12TH ANNUAL INTERNATIONAL CONFERENCE ON MOBILE SYSTEMS, APPLICATIONS, AND SERVICES, P204, DOI 10.1145/2594368.2594390
   Hao S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P92, DOI 10.1109/ICSE.2013.6606555
   Hasan S, 2016, PROC INT CONF SOFTW, P225, DOI 10.1145/2884781.2884869
   Hern Alex a, 2015, SMARTPHONE NOW MOST
   Hindle A, 2012, PROC INT CONF SOFTW, P1301, DOI 10.1109/ICSE.2012.6227094
   Hindle Abram, 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, P12
   Hollander M., 2013, Nonparametric statistical methods
   Inozemtseva L, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P435, DOI 10.1145/2568225.2568271
   Jabbarvand R., 2016, P 25 INT S SOFTWARE, P425, DOI DOI 10.1145/2931037.2931067
   Jiaping Gui, 2016, 2016 IEEE/ACM 5th International Workshop on Green and Sustainable Software (GREENS), P1, DOI 10.1109/GREENS.2016.009
   Jones B, 2016, MICROSOFT HAS FOUND
   Karagiannopoulos M, 2015, FEATURE SELECTION RE
   Kochhar Pavneet Singh, 2016, 25 INT S SOFTWARE TE, P165, DOI 10.1145/2931037.2931051
   Li D., 2015, P DEMOBILE 15, P25, DOI [10.1145/2804345.2804351, DOI 10.1145/2804345.2804351]
   Li D, 2016, PROC INT CONF SOFTW, P249, DOI 10.1145/2884781.2884867
   Li D, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P527, DOI 10.11455/2568225.2568321
   Li D, 2014, PROC IEEE INT CONF S, P121, DOI 10.1109/ICSME.2014.34
   Lin YD, 2014, IEEE T SOFTWARE ENG, V40, P957, DOI 10.1109/TSE.2014.2331982
   Linares-Vasquez M., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, P2
   Linares-Vásquez M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P143, DOI 10.1145/2786805.2786847
   Linares-Vásquez M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P111, DOI 10.1109/MSR.2015.18
   Liu Y, 2016, FSE 2014
   Machiry A., 2013, P 2013 9 JOINT M FDN, P224
   Mahmood R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P599, DOI 10.1145/2635868.2635896
   Malik H, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P418, DOI 10.1109/MSR.2015.53
   Manotas I, 2016, PROC INT CONF SOFTW, P237, DOI 10.1145/2884781.2884810
   Manotas I, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P503, DOI 10.11455/2568225.2568297
   Mao K., 2016, P 25 INT S SOFTW TES, P94
   Miettinen AnttiP., 2010, HotCloud'10
   Mileva YM, 2010, MINING API POPULARIT, P173
   Miranskyy AV, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1915
   Mirzaei N, 2016, PROC INT CONF SOFTW, P559, DOI 10.1145/2884781.2884853
   Moran K, 2016, IEEE INT CONF SOFTW, P33, DOI 10.1109/ICST.2016.34
   Namin AS, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P57
   Othman M., 1998, Mobile Computing and Communications Review, V2, P44
   Pathak Abhijit D., 2012, Proceedings of the PCIM ASIA 2012. International Conference and Exhibition for Power Electronics, Intelligent Motion, Renewable Energy and Energy Management, P29
   Pathak A, 2011, EUROSYS 11: PROCEEDINGS OF THE EUROSYS 2011 CONFERENCE, P153
   Patil PS, 2015, IEEE INT ADV COMPUT, P883, DOI 10.1109/IADCC.2015.7154832
   Pereira Rui, 2016, 2016 IEEE/ACM 5th International Workshop on Green and Sustainable Software (GREENS), P15, DOI 10.1109/GREENS.2016.011
   Pinto G, 2016, MSR 2014, P22
   Pradel Michael, 2014, Proceedings of the 2014 International Symposium on Software Testing and Analysis, P13, DOI DOI 10.1145/2610384.2610393
   Rasmussen K., 2014, P 3 INT WORKSHOP GRE, P38
   Romansky S, 2017, 33 IEEE INT C SOFTW
   Saborido R, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P438, DOI 10.1109/SANER.2016.64
   Sahin C, 2014, P 8 ACM IEEE INT S E, P1
   Sahin C., 2014, P 30 IEEE INT C SOFT
   Seo C, 2008, LECT NOTES COMPUT SC, V5282, P97
   Shamshiri S, 2015, IEEE INT CONF AUTOM, P201, DOI 10.1109/ASE.2015.86
   Shepperd M., 2000, Empirical Software Engineering, V5, P175, DOI 10.1023/A:1026582314146
   Shye Alex, 2009, Proceedings of the 2009 42nd Annual IEEE/ACM International Symposium on Microarchitecture (MICRO 2009), P168, DOI 10.1145/1669112.1669135
   Song W, 2017, IEEE INT CONF AUTOM, P27, DOI 10.1109/ASE.2017.8115615
   Thode Henry C., 2002, STAT TEXTB MONOG, V164, DOI 10.1201/9780203910894
   Uddin G, 2017, IEEE INT CONF AUTOM, P159, DOI 10.1109/ASE.2017.8115629
   van der Merwe H, 2012, SIGSOFT SOFTW ENG NO, V37, P1, DOI DOI 10.1145/2382756.2382797
   Vapnik V.N., 2000, The Nature of Statistical Learning Theory, DOI DOI 10.1007/978-1-4757-3264-1_1
   Wang XiaoSophia., 2014, P 11 USENIX C NETWOR, P387
   wei Hsu C., 2010, PRACTICAL GUIDE SUPP
   Woollaston V., 2014, CUSTOMERS REALLY WAN
   Yang W, 2013, LECT NOTES COMPUT SC, V7793, P250, DOI 10.1007/978-3-642-37057-1_19
   Ye H, 2013, MOMM 13
   Zhang Chenlei, 2014, P 11 WORKING C MININ, P400, DOI DOI 10.1145/2597073.2597130
   Zhang L, 2010, PROCEEDINGS OF 2010 INTERNATIONAL CONFERENCE ON PUBLIC ADMINISTRATION (6TH), VOL II, P105, DOI 10.1145/1878961.1878982
   Zhang M., 2011, P 10 ACM WORKSH HOT, P1
NR 103
TC 31
Z9 33
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2019
VL 24
IS 4
BP 1649
EP 1692
DI 10.1007/s10664-018-9640-7
PG 44
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IY9EH
UT WOS:000486696200001
DA 2024-07-18
ER

PT J
AU Tamburri, DA
   Palomba, F
   Serebrenik, A
   Zaidman, A
AF Tamburri, Damian A.
   Palomba, Fabio
   Serebrenik, Alexander
   Zaidman, Andy
TI Discovering community patterns in open-source: a systematic approach and
   its evaluation
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Community patterns; Community types; Open source systems and community
   analysis; Empirical software engineering
ID INSTITUTIONAL ISOMORPHISM; SOFTWARE-DEVELOPMENT; COHESION; COORDINATION;
   GOVERNANCE; HEALTH
AB <disp-quote>There can be no vulnerability without risk; there can be no community without vulnerability; there can be no peace, and ultimately no life, without community. - [M. Scott Peck]</disp-quote>The open-source phenomenon has reached the point in which it is virtually impossible to find large applications that do not rely on it. Such grand adoption may turn into a risk if the community regulatory aspects behind open-source work (e.g., contribution guidelines or release schemas) are left implicit and their effect untracked. We advocate the explicit study and automated support of such aspects and propose Yoshi (Y ielding O pen-S ource H ealth I nformation), a tool able to map open-source communities onto community patterns, sets of known organisational and social structure types and characteristics with measurable core attributes. This mapping is beneficial since it allows, for example, (a) further investigation of community health measuring established characteristics from organisations research, (b) reuse of pattern-specific best-practices from the same literature, and (c) diagnosis of organisational anti-patterns specific to open-source, if any. We evaluate the tool in a quantitative empirical study involving 25 open-source communities from GitHub, finding that the tool offers a valuable basis to monitor key community traits behind open-source development and may form an effective combination with web-portals such as OpenHub or Bitergia. We made the proposed tool open source and publicly available.
C1 [Tamburri, Damian A.] Eindhoven Univ Technol, JADS, Shertogenbosch, Netherlands.
   [Palomba, Fabio] Univ Zurich, Zurich, Switzerland.
   [Serebrenik, Alexander] Eindhoven Univ Technol, Software Evolut, Eindhoven, Netherlands.
   [Zaidman, Andy] Delft Univ Technol, Delft, Netherlands.
C3 Eindhoven University of Technology; University of Zurich; Eindhoven
   University of Technology; Delft University of Technology
RP Tamburri, DA (corresponding author), Eindhoven Univ Technol, JADS, Shertogenbosch, Netherlands.
EM d.a.tamburri@tue.nl; palomba@ifi.uzh.ch; a.serebrenik@tue.nl;
   zaidman@tudelft.nl
RI Tamburri, Damian Andrew/AAJ-2507-2021
OI Tamburri, Damian Andrew/0000-0003-1230-8961; Palomba,
   Fabio/0000-0001-9337-5116; Serebrenik, Alexander/0000-0002-1418-0095
FU Swiss National Science Foundation through the SNF [PP00P2_170529]
FX The authors would like to thank the students Alexandra Leta and Martin
   Anev that helped with the realisation of Yoshi. Also, the authors would
   like to thank the many practitioners that aided us in achieving Yoshi's
   evaluation in practice. Palomba gratefully acknowledge the support of
   the Swiss National Science Foundation through the SNF Project No.
   PP00P2_170529. Last but not least, the authors would like to thank the
   anonymous reviewers for their invaluable comments and contributions to
   this explorative and frontier research.
CR Afsar B., 2015, International Journal of Information Systems and Change Management, V7, P263, DOI [10.1504/IJISCM.2015.075632, DOI 10.1504/IJISCM.2015.075632]
   Ala-Mutka K, 2009, REV LIFELONG LEARNIN
   [Anonymous], 2014, Proceedings of the 6th international workshop on social software engineering, DOI 10.1145/2661685.2661689
   [Anonymous], J MANAGEMENT INFORM
   [Anonymous], 2012, Proceedings of the ACM 2012 conference on Computer Supported Cooperative Work
   Antoine J.Y., 2014, P 14 C EUR CHAPT ASS, P550, DOI DOI 10.3115/V1/E14-1058
   Antunes P., 1995, Conference on Organizational Computing Systems, P1, DOI 10.1145/224019.224020
   Arnaoudova V, 2015, 2015 IEEE/ACM 37th IEEE International Conference on Software Engineering, Vol 2, P949, DOI 10.1109/ICSE.2015.301
   Avgeriou P, 2016, IEEE SOFTWARE, V33, P66, DOI 10.1109/MS.2016.13
   Balali S, 2018, COMPUT SUPP COOP W J, V27, P679, DOI 10.1007/s10606-018-9310-8
   Basili VR, 1994, GOAL QUESTION METRIC, VI, P213
   Bass Len, 2012, SEI S SOFTW
   Bird Christian, 2009, 2009 20th International Symposium on Software Reliability Engineering (ISSRE 2009), P109, DOI 10.1109/ISSRE.2009.17
   Borges H, 2016, PROC IEEE INT CONF S, P334, DOI 10.1109/ICSME.2016.31
   Capiluppi A, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P317, DOI 10.1109/CSMR.2003.1192440
   Capra E, 2008, IEEE T SOFTWARE ENG, V2, P112
   Chatha KA, 2003, THESIS
   Chekowski T, 2016, PLOS ONE, V11
   Cheng L.-T., 2003, P 2003 OOPSLA WORKSH, P45, DOI [10.1145/965660.965670, DOI 10.1145/965660.965670]
   Coelho J, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P186, DOI 10.1145/3106237.3106246
   Cohen J., 1988, STAT POWER ANAL BEHA
   Conover WJ, 1998, PRACTICAL NONPARAMET, P7030
   Cross R, 2005, HARVARD BUS REV, V83, P124
   Crowston K, 2006, COMPUTER, V39, P89, DOI 10.1109/MC.2006.152
   Crowston K, 2012, ACM COMPUT SURV, V44, DOI 10.1145/2089125.2089127
   di Nitto E, 2013, J SOFTWARE EVOLUTION, V1, P1
   Di Penta M, 2017, PROC IEEE ACM INT C, P499, DOI 10.1109/ICSE-C.2017.163
   DIMAGGIO PJ, 1983, AM SOCIOL REV, V48, P147, DOI 10.2307/2095101
   Druskat S, 2016, ARXIV160804529
   Egghe L, 2003, J AM SOC INF SCI TEC, V54, P193, DOI 10.1002/asi.10155
   Elkins T, 2003, LEADERSHIP QUART, V14, P587, DOI 10.1016/S1048-9843(03)00053-5
   Espejo R., 1993, Organisational Fitness
   Falessi D, 2017, INT SYMP EMP SOFTWAR, P151, DOI 10.1109/ESEM.2017.22
   Fenton NE., 1991, Software Metrics: A Rigorous Approach
   Ferenc Rudolf., 2014, Evolving Software Systems, P65, DOI DOI 10.1007/978-3-642-45398-4_3
   Ford D, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P846, DOI 10.1145/2950290.2950331
   FREDRICKSON JW, 1986, ACAD MANAGE REV, V11, P280, DOI 10.2307/258460
   Fuks H, 2005, INT J COOP INF SYST, V14, P299, DOI 10.1142/S0218843005001171
   Gallagher S., 2006, JANUS HEAD, V9, P1
   Gamalielsson J, 2014, J SYST SOFTWARE, V89, P128, DOI 10.1016/j.jss.2013.11.1077
   GARZARELLI G, 2003, CAPABILITY COORDINAT
   Giraldo LF, 2016, IEEE T CYBERNETICS, V46, P2207, DOI 10.1109/TCYB.2015.2470225
   Glance DG, 2004, 1 MONDAY, V9, P4
   Hata H, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING CHASE 2015, P15, DOI 10.1109/CHASE.2015.9
   Hintze JL, 1998, AM STAT, V52, P181, DOI 10.2307/2685478
   Hofstede G., 2010, CULTURES ORG SOFTWAR
   Homscheid D, 2016, P 8 INT ACM WEB SCI, P326
   Hung H, 2010, IEEE T MULTIMEDIA, V12, P563, DOI 10.1109/TMM.2010.2055233
   Jansen S, 2014, INFORM SOFTWARE TECH, V56, P1508, DOI 10.1016/j.infsof.2014.04.006
   Jeppesen HJ, 2011, ECON IND DEMOCRACY, V32, P69, DOI 10.1177/0143831X10372432
   Jiménez M, 2009, LECT NOTES BUS INF P, V16, P107
   Jongeling R, 2017, EMPIR SOFTW ENG, V22, P2543, DOI 10.1007/s10664-016-9493-x
   Kalliamvakou E, 2016, EMPIR SOFTW ENG, V21, P2035, DOI 10.1007/s10664-015-9393-5
   Keivanloo I., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P32, DOI 10.1109/MSR.2012.6224296
   Kilduff M., 2003, Social networks and organizations, DOI DOI 10.4135/9781849209915
   Kim H., 2007, J PUBLIC RELAT RES, V19, P167, DOI [DOI 10.1207/S1532754, https://doi.org/10.1080/10627260701290695, DOI 10.1080/10627260701290695]
   Kozdoba M, 2015, ADV NEUR IN, V28
   KRAUT RE, 1995, COMMUN ACM, V38, P69, DOI 10.1145/203330.203345
   Krippendorff K., 2018, CONTENT ANAL INTRO I
   Kujala S, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P75, DOI 10.1109/RE.2005.72
   Lai KH, 2006, COMPUT IND, V57, P93, DOI [10.1016/j.compipnd.2005.05.002, 10.1016/j.compind.2005.05.002]
   Lancichinetti A., 2008, NEW J PHYS
   Li WW, 2010, INT J GEOGR INF SCI, V24, P1127, DOI 10.1080/13658810903514172
   Li Y, 2012, INFORM MANAGE-AMSTER, V49, P257, DOI 10.1016/j.im.2012.05.005
   Magnoni S., 2017, COMMUN ACM
   Manning C.D., 1999, FDN STAT NATURAL LAN
   Medus A, 2005, PHYSICA A, V358, P593, DOI 10.1016/j.physa.2005.04.022
   Mendez C, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1004, DOI 10.1145/3180155.3180241
   Miles M, 2015, J STRATEG MARK, V23, P94, DOI 10.1080/0965254X.2014.914069
   Millen DR, 2002, COMMUN ACM, V45, P69, DOI 10.1145/505248.505276
   Mislove A, 2007, IMC'07: PROCEEDINGS OF THE 2007 ACM SIGCOMM INTERNET MEASUREMENT CONFERENCE, P29
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   MOLZBERGER P, 1987, LECT NOTES COMPUT SC, V253, P120
   Moody J, 2003, AM SOCIOL REV, V68, P103, DOI 10.2307/3088904
   Munaiah N, 2017, EMPIR SOFTW ENG, V22, P3219, DOI 10.1007/s10664-017-9512-6
   Nagappan N, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P521, DOI 10.1145/1368088.1368160
   Nevo D, 2005, DECIS SUPPORT SYST, V39, P549, DOI 10.1016/j.dss.2004.03.002
   Newman M, 2003, PHYS REV E, V69, P667
   Newman MEJ, 2006, P NATL ACAD SCI USA, V103, P8577, DOI 10.1073/pnas.0601602103
   Newman MEJ, 2004, PHYS REV E, V69, DOI 10.1103/PhysRevE.69.066133
   Nguyen T, 2008, 2008 3RD IEEE INTERNATIONAL CONFERENCE GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P45, DOI 10.1109/ICGSE.2008.39
   Nielsen SH, 1995, AUSTRALASIAN J INF S, V3, P1449
   Nooteboom B, 2006, RES POLICY, V36, P1016
   Onoue S, 2014, P 8 ACM IEEE INT S E, P34
   Onoue S, 2016, IEICE T INF SYST, VE99D, P1304, DOI 10.1587/transinf.2015EDP7363
   Oreja-Rodriguez JR, 2006, INT J KNOWL LEARN, V2, P41, DOI 10.1504/IJKL.2006.009678
   Otte E, 2002, J INF SCI, V28, P441, DOI 10.1177/016555150202800601
   Palomba F, 2018, ICSE
   Palomba F, 2019, IEEE T SOFTWARE ENG, V45, P194, DOI 10.1109/TSE.2017.2770122
   Palomba F, 2015, IEEE T SOFTWARE ENG, V41, P462, DOI 10.1109/TSE.2014.2372760
   Pinzger Martin, 2008, P 16 ACM SIGSOFT INT, P2, DOI DOI 10.1145/1453101.1453105
   Prandy K, 2000, SOCIAL INTERACTION A
   Prattico L, 2012, TECHNOL INNOV MANAG, P37
   Prikladnicki R, 2012, J SOFTW-EVOL PROC, V24, P119, DOI 10.1002/smr.475
   Raju K, 2007, J INTELLECTUAL PROPE, V12, P21
   Robles G, 2011, TOOLS DATASETS MININ, V1, P24
   Robles G, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P167, DOI 10.1109/MSR.2009.5069497
   Romano J, 2006, ANN M FLOR ASS I RES, P1
   Ruikar Kirti, 2009, Construction Innovation, V9, P434, DOI 10.1108/14714170910995967
   Ryynanen Harri, 2012, International Journal of Business Information Systems, V11, P324, DOI 10.1504/IJBIS.2012.049569
   Sadowski BM, 2008, INF ECON POLICY, V20, P323, DOI 10.1016/j.infoecopol.2008.05.001
   Sands R, 2018, BLOB POST OPENHUB OR
   Schweik CM, 2013, TECHNOL INNOV MANAG, P13
   Severance C, 2012, COMPUTER, V45, P8, DOI 10.1109/MC.2012.278
   Siakas KV, 2002, SOFTWARE QUAL J, V10, P169, DOI 10.1023/A:1020528024624
   Silva D, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P858, DOI 10.1145/2950290.2950305
   Steinmacher I, 2015, PROCEEDINGS OF THE 2015 ACM INTERNATIONAL CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING (CSCW'15), P1379, DOI 10.1145/2675133.2675215
   Stojanovic L, 2011, EUR CON SFTWR MTNCE, P359, DOI 10.1109/CSMR.2011.52
   Tamburri D. A., 2015, J INTERNET SERVICES, V6, P10, DOI 10.1186/s13174-015-0024-6
   Tamburri DA, 2017, DISCOVERING COMMUNIT
   Tamburri DA, 2012, P 7 IEEE INT C GLOB, V1, P114
   Tamburri DA, 2016, IEEE SOFTWARE, V33, P70, DOI 10.1109/MS.2016.144
   Tamburri DA, 2013, ACM COMPUT SURV, V46, DOI 10.1145/2522968.2522971
   Tamburri DA, 2013, IEEE SOFTWARE, V30, P29, DOI 10.1109/MS.2012.170
   Tamburri E, 2017, ADV MATER INTERFACES, V4, DOI 10.1002/admi.201700222
   Tikhonov M, 2016, ELIFE, V5, DOI 10.7554/eLife.15747
   Tourani P, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P24, DOI 10.1109/SANER.2017.7884606
   Traag VA, 2013, NATURE
   Tsirakidis P, 2009, INT CONF GLOBAL SOFT, P295, DOI 10.1109/ICGSE.2009.42
   Vasilescu B, 2015, CHI 2015: PROCEEDINGS OF THE 33RD ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P3789, DOI 10.1145/2702123.2702549
   Vasilescu B, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING CHASE 2015, P50, DOI 10.1109/CHASE.2015.14
   Wenger E., 1998, Communities of practice: learning, meaning, and identity, DOI [10.1017/CBO9780511803932, DOI 10.1017/CBO9780511803932]
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Xiao L, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P967, DOI 10.1145/2568225.2568241
   Zich J, 2008, INTERNET MATH, V5, P227, DOI 10.1080/15427951.2008.10129165
   Zimmermann J, 2008, OVERCOMING INHERENT
NR 126
TC 24
Z9 28
U1 0
U2 15
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2019
VL 24
IS 3
BP 1369
EP 1417
DI 10.1007/s10664-018-9659-9
PG 49
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA ID9YT
UT WOS:000472043800010
OA Green Published, hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Hannebauer, C
   Hesenius, M
   Gruhn, V
AF Hannebauer, Christoph
   Hesenius, Marc
   Gruhn, Volker
TI Does syntax highlighting help programming novices?
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Syntax highlighting; Source code typography; Code colouring; IDE
   interface; Program comprehension
ID ONLINE
AB Program comprehension is an important skill for programmers - extending and debugging existing source code is part of the daily routine. Syntax highlighting is one of the most common tools used to support developers in understanding algorithms. However, most research in this area originates from a time when programmers used a completely different tool chain. We examined the influence of syntax highlighting on novices' ability to comprehend source code. Additional analyses cover the influence of task type and programming experience on the code comprehension ability itself and its relation to syntax highlighting. We conducted a controlled experiment with 390 undergraduate students in an introductory Java programming course. We measured the correctness with which they solved small coding tasks. Each test subject received some tasks with syntax highlighting and some without. The data provided no evidence that syntax highlighting improves novices' ability to comprehend source code. There are very few similar experiments and it is unclear as of yet which factors impact the effectiveness of syntax highlighting. One major limitation may be the types of tasks chosen for this experiment. The results suggest that syntax highlighting squanders a feedback channel from the IDE to the programmer that can be used more effectively.
C1 [Hannebauer, Christoph; Hesenius, Marc; Gruhn, Volker] Univ Duisburg Essen, Paluno Ruhr Inst Software Technol, Essen, Germany.
C3 University of Duisburg Essen
RP Hannebauer, C (corresponding author), Univ Duisburg Essen, Paluno Ruhr Inst Software Technol, Essen, Germany.
EM christoph@hannebauer.name; marc.hesenius@uni-due.de;
   volker.gruhn@uni-due.de
OI Hesenius, Marc/0000-0002-6826-9212
CR Allen E., 2002, SIGCSE Bulletin, V34, P137, DOI 10.1145/563517.563395
   Baecker RM, 1989, HUMAN FACTORS TYPOGR, DOI DOI 10.16910/JEMR.9.1.1
   Beelders TR, 2016, J EYE MOVEMENT RES, V9
   Bergin S., 2005, SIGCSE Bulletin, V37, P411, DOI 10.1145/1047124.1047480
   Bird C., 2011, P 19 ACM SIGSOFT S 1, P4, DOI DOI 10.1145/2025113.2025119
   Chaffin W.W., 1993, Journal of statistical computation and simulation, V46, P79
   CROSBY ME, 1990, COMPUTER, V23, P24, DOI 10.1109/2.48797
   Dieste O, 2017, EMPIR SOFTW ENG, V22, P2457, DOI 10.1007/s10664-016-9471-3
   Dimitri G. M., 2015, P 26 ANN C PSYCH PRO, P59
   Dragicevic P, 2016, HUM-COMPUT INT-SPRIN, P291, DOI 10.1007/978-3-319-26633-6_13
   Erguler K, 2013, BARNARD BARNARDS UNC
   Feigenspan J, 2013, EMPIR SOFTW ENG, V18, P699, DOI 10.1007/s10664-012-9208-x
   Gellenbeck E. M., 1991, Empirical Studies of Programmers: Fourth Workshop, P82
   GOLDSTEIN EB, 1995, SENSATION PERCEPTION
   GRANT EE, 1967, IEEE TRANS HUM FACT, VHFE8, P33, DOI 10.1109/THFE.1967.233303
   Gray Kathryn E., 2003, OOPSLA '03, P170, DOI [10.1145/949344.949394, DOI 10.1145/949344.949394]
   Gruhn V, 2012, FRONT ARTIF INTEL AP, V246, P3, DOI 10.3233/978-1-61499-125-0-3
   Hakala T., 2006, 18 WORKSH PSYCH PROG, P38
   Hannebauer C, 2017, LAB PACKAGE SYNTAX H
   Holden E., 2003, Proceedings of the 4th conference on information technology curriculum, P41
   Jedlitschka A, 2008, REPORTING EXPT SOFTW, P201, DOI DOI 10.1007/978-1-84800-044-58
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kleinschmager S., 2011, Proceedings of the 3rd ACM SIGPLAN Workshop on Evaluation and Usability of Programming Languages and Tools, P15, DOI [10.1145/2089155, DOI 10.1145/2089155]
   KNUTH DE, 1984, COMPUT J, V27, P97, DOI 10.1093/comjnl/27.2.97
   LIENTZ BP, 1978, COMMUN ACM, V21, P466, DOI 10.1145/359511.359522
   LPLUS GmbH, 2014, LPLUS SYST ON CAMP
   Ludbrook J, 2008, INT J EPIDEMIOL, V37, P1430, DOI 10.1093/ije/dyn162
   Mehta R, 2009, SCIENCE, V323, P1226, DOI 10.1126/science.1169144
   Microsoft Developer Network, 2015, C COD CONV C PROGR G
   Oman P. W., 1990, Communications of the ACM, V33, P506, DOI 10.1145/78607.78611
   Oracle Technology Network, 1999, COD CONV JAV PROGR L
   Prechelt L., 1999, 28 1 GRANT SACKMAN L
   Rambally G. K., 1986, SIGCSE Bulletin, V18, P173, DOI 10.1145/953055.5702
   Reijers HA, 2011, DECIS SUPPORT SYST, V51, P339, DOI 10.1016/j.dss.2010.12.013
   SACKMAN H, 1968, COMMUN ACM, V11, P3, DOI 10.1145/362851.362858
   Sarkar Advait., 2015, P 26 ANN C PSYCHOL P, P49
   Scintilla Project, 2014, SCINT FREE SOURC COD
   Seo H, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P724, DOI 10.1145/2568225.2568255
   Siegmund J, 2014, EMPIR SOFTW ENG, V19, P1299, DOI 10.1007/s10664-013-9286-4
   Tapp R., 1994, Proceedings. IEEE Third Workshop on Program Comprehension (Cat. No.94TH06767), P154, DOI 10.1109/WPC.1994.341265
   Tiarks R., 2011, Softwaretechnik-Trends, V31, P36
   Van Laar D., 1989, People and Computers V. Proceedings of the Fifth Conference of the British Computer Society Human-Computer Interaction Specialist Group, P217
   Wallis WA, 1942, ECONOMETRICA, V10, P229, DOI 10.2307/1905466
NR 43
TC 11
Z9 12
U1 0
U2 10
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2018
VL 23
IS 5
BP 2795
EP 2828
DI 10.1007/s10664-017-9579-0
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GO5AW
UT WOS:000440031100009
DA 2024-07-18
ER

PT J
AU Calefato, F
   Lanubile, F
   Maiorano, F
   Novielli, N
AF Calefato, Fabio
   Lanubile, Filippo
   Maiorano, Federico
   Novielli, Nicole
TI Sentiment Polarity Detection for Software Development
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Sentiment Analysis; Communication Channels; Stack Overflow; Word
   Embedding; Social Software Engineering
ID REPRESENTATION
AB The role of sentiment analysis is increasingly emerging to study software developers' emotions by mining crowd-generated content within social software engineering tools. However, off-the-shelf sentiment analysis tools have been trained on non-technical domains and general-purpose social media, thus resulting in misclassifications of technical jargon and problem reports. Here, we present Senti4SD, a classifier specifically trained to support sentiment analysis in developers' communication channels. Senti4SD is trained and validated using a gold standard of Stack Overflow questions, answers, and comments manually annotated for sentiment polarity. It exploits a suite of both lexicon- and keyword-based features, as well as semantic features based on word embedding. With respect to a mainstream off-the-shelf tool, which we use as a baseline, Senti4SD reduces the misclassifications of neutral and positive posts as emotionally negative. To encourage replications, we release a lab package including the classifier, the word embedding space, and the gold standard with annotation guidelines.
C1 [Calefato, Fabio] Univ Bari A Moro, Dipartimento Jon, Via Duomo 259, I-74123 Taranto, Italy.
   [Lanubile, Filippo; Maiorano, Federico; Novielli, Nicole] Univ Bari A Moro, Dipartimento Informat, Via E Orabona 4, I-70125 Bari, Italy.
C3 Universita degli Studi di Bari Aldo Moro; Universita degli Studi di Bari
   Aldo Moro
RP Novielli, N (corresponding author), Univ Bari A Moro, Dipartimento Informat, Via E Orabona 4, I-70125 Bari, Italy.
EM fabio.calefato@uniba.it; filippo.lanubile@uniba.it;
   f.maiorano2@studenti.uniba.it; nicole.novielli@uniba.it
RI Alidadi, Mehdi/HJZ-0235-2023; Lanubile, Filippo/AAF-9132-2020; Calefato,
   Fabio/H-4177-2014; Novielli, Nicole/Y-9583-2019
OI Alidadi, Mehdi/0000-0001-5183-7829; Lanubile,
   Filippo/0000-0003-3373-7589; Calefato, Fabio/0000-0003-2654-1588;
   Novielli, Nicole/0000-0003-1160-2608
FU project 'EmoQuest - Investigating the Role of Emotions in Online
   Question & Answer Sites' - Italian Ministry of Education, University and
   Research (MIUR); MIUR
FX This work is partially supported by the project 'EmoQuest -
   Investigating the Role of Emotions in Online Question & Answer Sites',
   funded by the Italian Ministry of Education, University and Research
   (MIUR) under the program "Scientific Independence of young Researchers"
   (SIR). The computational work has been executed on the IT resources made
   available by two projects, ReCaS and PRISMA, funded by MIUR under the
   program "PON R&C 2007-2013". We thank Pierpaolo Basile for insightful
   discussions and helpful comments and the annotators involved in the gold
   standard building.
CR Anderson Ashton, 2012, P 18 ACM SIGKDD INT, DOI DOI 10.1145/2339530.2339665
   [Anonymous], 2014, Proceedings of the 6th international workshop on social software engineering, DOI 10.1145/2661685.2661689
   [Anonymous], 1965, Philosophical investigations
   [Anonymous], P 9 INT C LANG RES E
   Blaz CCA, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P235, DOI [10.1109/MSR.2016.032, 10.1145/2901739.2901781]
   Asaduzzaman M, 2013, IEEE WORK CONF MIN S, P97, DOI 10.1109/MSR.2013.6624015
   Baroni M, 2014, PROCEEDINGS OF THE 52ND ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P238
   Barua A, 2014, EMPIR SOFTW ENG, V19, P619, DOI 10.1007/s10664-012-9231-y
   Basile P., 2015, P 5 INT WORKSH SEM E, P595
   Bengio Y, 2001, ADV NEUR IN, V13, P932
   Bollegala D, 2013, IEEE T KNOWL DATA EN, V25, P1719, DOI 10.1109/TKDE.2012.103
   Calefato F, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P430, DOI 10.1109/MSR.2015.56
   Carofiglio V, 2009, AFFECTIVE INFORMATION PROCESSING, P23, DOI 10.1007/978-1-84800-306-4_3
   Chen K., 2013, EFFICIENT ESTIMATION, P2
   Cohen Jacob, 1968, PSYCHOL B
   Collobert R, 2008, P 25 ICML, P160, DOI 10.1145/1390156.1390177
   Danescu-Niculescu-Mizil C., 2013, Long Papers, V1, P250
   De Lucia A, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1276933.1276934
   Denning PJ, 2012, COMMUN ACM, V55, P33, DOI 10.1145/2380656.2380668
   Fan RE, 2008, J MACH LEARN RES, V9, P1871
   Ford D, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING CHASE 2015, P115, DOI 10.1109/CHASE.2015.19
   Gachechiladze D, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS TRACK (ICSE-NIER), P11, DOI 10.1109/ICSE-NIER.2017.18
   Graziotin D, 2017, P 39 INT C SOFTW ENG
   Guzman E., 2014, Association for Computing Machinery, P352
   Guzman E, 2013, P 2013 9 JOINT M FDN, P671, DOI 10.1145/2491411.2494578
   Guzman E, 2016, INT REQUIR ENG CONF, P96, DOI 10.1109/RE.2016.67
   He HB, 2009, IEEE T KNOWL DATA EN, V21, P1263, DOI 10.1109/TKDE.2008.239
   Helleputte T, 2015, LIBLINEA R LINEAR PR
   Hogenboom A, 2015, COMMUN ACM, V58, P69, DOI 10.1145/2699418
   Islam MR, 2017, IEEE WORK CONF MIN S, P203, DOI 10.1109/MSR.2017.9
   Joachims T., 2006, P 12 ACM SIGKDD INT, P217, DOI [10.1145/1150402.1150429, DOI 10.1145/1150402.1150429]
   Joachims Thorsten, 1998, EUROPEAN C MACHINE L, P137, DOI 10.1007/
   Jongeling R, 2015, PROC IEEE INT CONF S, P531, DOI 10.1109/ICSM.2015.7332508
   Kowalska M., 2017, HDB COGNITION EMOTIO, P1, DOI [https://doi.org/10.1007/978-3-319-28099-8495-1, DOI 10.1002/0470013494.CH3, 10.1002/0470013494.ch3]
   Kucuktunc O., 2012, Proceedings of the Fifth ACM International Conference on Web Search and Data Mining, P633, DOI [DOI 10.1145/2124295.2124371, 10.1145/2124295.2124371]
   Landauer TK, 1997, PSYCHOL REV, V104, P211, DOI 10.1037/0033-295X.104.2.211
   Lazarus R.S., 1991, EMOTION ADAPTATION
   Levy O, 2014, ADV NEUR IN, V27
   Maalej W, 2016, REQUIR ENG, V21, P311, DOI 10.1007/s00766-016-0251-9
   Manning CD, 2014, PROCEEDINGS OF 52ND ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: SYSTEM DEMONSTRATIONS, P55, DOI 10.3115/v1/p14-5010
   Mäntylä M, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P247, DOI [10.1109/MSR.2016.033, 10.1145/2901739.2901752]
   Mäntylä MV, 2017, IEEE WORK CONF MIN S, P198, DOI 10.1109/MSR.2017.47
   Meta, 2017, MET EXCH IS TOO HARS
   Mikolov Tomas, 2013, Advances in Neural Information Processing Systems, P3111, DOI DOI 10.48550/ARXIV.1310.4546
   MILLER GA, 1991, LANG COGNITIVE PROC, V6, P1, DOI 10.1080/01690969108406936
   MITCHELL T, 1989, ANNU REV COMPUT SCI, V4, P417
   Mohammad SM, 2016, EMOTION MEASUREMENT, P201, DOI 10.1016/B978-0-08-100508-8.00009-6
   Mohammad SM, 2013, COMPUT INTELL-US, V29, P436, DOI 10.1111/j.1467-8640.2012.00460.x
   Müller SC, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P688, DOI 10.1109/ICSE.2015.334
   Murgia A., 2014, Proceedings of the 11th working conference on mining software repositories, Ved, P262
   Novielli N, 2015, 7TH INTERNATIONAL WORKSHOP ON SOCIAL SOFTWARE ENGINEERING (SSE 2015), P33, DOI 10.1145/2804381.2804387
   Novielli N, 2013, IEEE T AFFECT COMPUT, V4, P439, DOI 10.1109/T-AFFC.2013.20
   Ortu M, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P480, DOI [10.1145/2901739.2903505, 10.1109/MSR.2016.059]
   Ortu M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P303, DOI 10.1109/MSR.2015.35
   Pang B., 2008, INFORM RETRIEVAL, V2, P1, DOI [10.1561/1500000011, DOI 10.1561/1500000011, https://doi.org/10.1561/1500000011]
   Panichella S, 2015, 31 IEEE INT C SOFTW
   Pennebaker J.W., 2001, Linguistic inquiry and word count: LIWC 2001, V71, P1
   Pletea D., 2014, 11 WORKING C MSR, P348, DOI [10.1145/2597073.2597117, DOI 10.1145/2597073.2597117]
   Pournelle G. H., 1953, Journal of Mammalogy, V34, P133, DOI 10.1890/0012-9658(2002)083[1421:SDEOLC]2.0.CO;2
   Rahman MM, 2015, IEEE INT WORK C SO, P81, DOI 10.1109/SCAM.2015.7335404
   RUSSELL JA, 1980, J PERS SOC PSYCHOL, V39, P1161, DOI 10.1037/h0077714
   Scherer KR, 2004, SOC SCI INFORM, V43, P499, DOI 10.1177/0539018404047701
   Sebastiani F, 2002, ACM COMPUT SURV, V34, P1, DOI 10.1145/505282.505283
   SEmotion, 2016, P 1 INT WORKSH EM AW
   SHAVER P, 1987, J PERS SOC PSYCHOL, V52, P1061, DOI 10.1037//0022-3514.52.6.1061
   Sinha V, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P520, DOI [10.1109/MSR.2016.069, 10.1145/2901739.2903501]
   SMOLENSKY P, 1990, ARTIF INTELL, V46, P159, DOI 10.1016/0004-3702(90)90007-M
   Socher R., 2013, P 2013 C EMP METH NA, V2013, P1631, DOI DOI 10.1371/JOURNAL.PONE.0073791
   Stone P. J., 1966, GEN INQUIRER COMPUTE
   Strapparava C., 2004, Lrec, Volume, V4, P1083
   Thelwall M, 2012, J AM SOC INF SCI TEC, V63, P163, DOI 10.1002/asi.21662
   Tian Y, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P568, DOI 10.1145/2591062.2591071
   Ye X, 2016, PROC INT CONF SOFTW, P404, DOI 10.1145/2884781.2884862
NR 73
TC 146
Z9 156
U1 0
U2 19
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2018
VL 23
IS 3
BP 1352
EP 1382
DI 10.1007/s10664-017-9546-9
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA GH6DH
UT WOS:000433532300006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Sabané, A
   Guehénéuc, YG
   Arnaoudova, V
   Antoniol, G
AF Sabane, Aminata
   Gueheneuc, Yann-Gael
   Arnaoudova, Venera
   Antoniol, Giuliano
TI Fragile base-class problem, problem?
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Inheritance; Overriding; Composition; Fragile base-class; Change
   proneness; Fault proneness; Empirical study
ID INHERITANCE; MECHANISM
AB The fragile base-class problem (FBCP) has been described in the literature as a consequence of "misusing" inheritance and composition in object-oriented programming when (re)using frameworks. Many research works have focused on preventing the FBCP by proposing alternative mechanisms for reuse, but, to the best of our knowledge, there is no previous research work studying the prevalence and impact of the FBCP in real-world software systems. The goal of our work is thus twofold: (1) assess, in different systems, the prevalence of micro-architectures, called FBCS, that could lead to two aspects of the FBCP, (2) investigate the relation between the detected occurrences and the quality of the systems in terms of change and fault proneness, and (3) assess whether there exist bugs in these systems that are related to the FBCP. We therefore perform a quantitative and a qualitative study. Quantitatively, we analyse multiple versions of seven different open-source systems that use 58 different frameworks, resulting in 301 configurations. We detect in these systems 112,263 FBCS occurrences and we analyse whether classes playing the role of sub-classes in FBCS occurrences are more change and-or fault prone than other classes. Results show that classes participating in the analysed FBCS are neither more likely to change nor more likely to have faults. Qualitatively, we conduct a survey to confirm/infirm that some bugs are related to the FBCP. The survey involves 41 participants that analyse a total of 104 bugs of three open-source systems. Results indicate that none of the analysed bugs is related to the FBCP. Thus, despite large, rigorous quantitative and qualitative studies, we must conclude that the two aspects of the FBCP that we analyse may not be as problematic in terms of change and fault-proneness as previously thought in the literature. We propose reasons why the FBCP may not be so prevalent in the analysed systems and in other systems in general.
C1 [Sabane, Aminata; Gueheneuc, Yann-Gael; Antoniol, Giuliano] Ecole Polytech Montreal, Montreal, PQ, Canada.
   [Arnaoudova, Venera] Washington State Univ, Washington, DC USA.
C3 Universite de Montreal; Polytechnique Montreal; Washington State
   University
RP Sabané, A (corresponding author), Ecole Polytech Montreal, Montreal, PQ, Canada.
EM aminata.sabane@gmail.com; yann-gael.gueheneuc@polymtl.ca;
   venera.arnaoudova@wsu.edu; antoniol@ieee.org
RI Arnaoudova, Venera/X-6403-2019; Guéhéneuc, Yann-Gaël/K-9371-2019
FU NSERC Research Chairs in Software Change and Evolution and in Software
   Patterns and Patterns of Software
FX This work has been partly funded by the NSERC Research Chairs in
   Software Change and Evolution and in Software Patterns and Patterns of
   Software. The authors are grateful to all the anonymous participants.
CR Aldrich J, 2004, SELECTIVE OPEN RECUR
   An L, 2014, 2014 14 INT WORK C S
   Biberstein M, 2002, ISR WORKSH PROGR LAN
   Bloch J., 2016, Effective Java
   Briand LC, 2000, J SYST SOFTWARE, V51, P245, DOI 10.1016/S0164-1212(99)00102-8
   Daly J., 1996, Empirical Software Engineering, V1, P109, DOI 10.1007/BF00368701
   Ducasse S, 2006, ACM T PROGR LANG SYS, V28, P331, DOI 10.1145/1119479.1119483
   Ghezzi C, 2002, P INT WORKSH PRINC S, P22
   Groves R.M., 2009, Survey Methodology, V2nd
   Gueheneuc Yann-Gael, 2007, 2007 IEEE International Conference on Software Maintenance, P529, DOI 10.1109/ICSM.2007.4362684
   Gueheneuc Y-G, 2008, IEEE T SOFTW ENG, V34
   Gueheneuc Y-G, 2004, P INT C OBJ ORR PROG
   Harrison R, 2000, J SYST SOFTWARE, V52, P173, DOI 10.1016/S0164-1212(99)00144-2
   Hursch W. L., 1994, Object-Oriented Programming. 8th European Conference, ECOOP '94. Proceedings, P12, DOI 10.1007/BFb0052174
   IBM, 1994, CISC VIS NETW IND GL
   Kegel H, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P431, DOI 10.1145/1368088.1368147
   Khomh F, 2011, EXPLORATORY STUDY IM
   Kiczales G, 1992, P C OBJ OR PROGR SYS, P435
   Mens T, 2002, IEEE T SOFTWARE ENG, V28, P449, DOI 10.1109/TSE.2002.1000449
   Mezini M., 1999, Proceedings of Technology of Object-Oriented Languages and Systems - TOOLS 30 (Cat. No.PR00278), P126, DOI 10.1109/TOOLS.1999.787542
   Mezini M, 1997, ACM SIGPLAN NOTICES, V32, P1, DOI 10.1145/263700.263701
   Mikhajlov L., 1998, ECOOP'98 - Object-Oriented Programming. 12th European Conference. Proceedings, P355, DOI 10.1007/BFb0054099
   Ozaki H, 2003, SIXTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P51, DOI 10.1109/IWPSE.2003.1231209
   Parkinson MJ, 2008, ACM SIGPLAN NOTICES, V43, P75, DOI 10.1145/1328897.1328451
   Robbes R, 2015, EMPIR SOFTW ENG, V20, P745, DOI 10.1007/s10664-013-9298-0
   Ruby C, 2000, ACM SIGPLAN NOTICES, V35, P208, DOI 10.1145/354222.353186
   Sheskin DJ., 2003, HDB PARAMETRIC NONPA, DOI [10.1201/9781420036268, DOI 10.1201/9781420036268]
   SNYDER A, 1986, SIGPLAN NOTICES, V21, P38, DOI 10.1145/960112.28702
   Steyaert P, 1996, ACM SIGPLAN NOTICES, V31, P268, DOI 10.1145/236338.236363
   Taenzer D., 1989, ECOOP '89. Proceedings of the 1989 European Conference on Object-Oriented Programming, P25
   Tempero E, 2010, 33 AUSTR COMP SCI C, P3
   Tempero E, 2008, LECT NOTES COMPUT SC, V5142, P667, DOI 10.1007/978-3-540-70592-5_28
   WEGNER P, 1988, LECT NOTES COMPUT SC, V322, P55
   Williams Sara., 1994, COMPONENT OBJECT MOD
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
NR 35
TC 6
Z9 6
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2017
VL 22
IS 5
BP 2612
EP 2657
DI 10.1007/s10664-016-9448-2
PG 46
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FE0PC
UT WOS:000407921200010
DA 2024-07-18
ER

PT J
AU Li, H
   Shang, WY
   Zou, Y
   Hassan, AE
AF Li, Heng
   Shang, Weiyi
   Zou, Ying
   Hassan, Ahmed E.
TI Towards just-in-time suggestions for log changes
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software logs; Log improvement; Mining software repositories
AB Software developers typically insert logging statements in their source code to record runtime information. However, providing proper logging statements remains a challenging task. Prior approaches automatically enhance logging statements, as a post-implementation process. Such automatic approaches do not take into account developers' domain knowledge; nevertheless, developers usually need to carefully design the logging statements since logs are a rich source about the field operation of a software system. The goals of this paper include: i) understanding the reasons for log changes; and ii) proposing an approach that can provide developers with log change suggestions as soon as they commit a code change, which we refer to as "just-in-time" suggestions for log changes. In particular, we derive a set of measures based on manually examining the reasons for log changes and our experiences. We use these measures as explanatory variables in random forest classifiers to model whether a code commit requires log changes. These classifiers can provide just-in-time suggestions for log changes. We perform a case study on four open source projects: Hadoop, Directory Server, Commons HttpClient, and Qpid. We find that: (i) The reasons for log changes can be grouped along four categories: block change, log improvement, dependence-driven change, and logging issue; (ii) our random forest classifiers can effectively suggest whether a log change is needed: the classifiers that are trained from within-project data achieve a balanced accuracy of 0.76 to 0.82, and the classifiers that are trained from cross-project data achieve a balanced accuracy of 0.76 to 0.80; (iii) the characteristics of code changes in a particular commit and the current snapshot of the source code are the most influential factors for determining the likelihood of a log change in a commit.
C1 [Li, Heng; Hassan, Ahmed E.] Queens Univ, SAIL, Kingston, ON, Canada.
   [Shang, Weiyi] Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ, Canada.
   [Zou, Ying] Queens Univ, Dept Elect & Comp Engn, Kingston, ON, Canada.
C3 Queens University - Canada; Concordia University - Canada; Queens
   University - Canada
RP Li, H (corresponding author), Queens Univ, SAIL, Kingston, ON, Canada.
EM hengli@cs.queensu.ca; shang@encs.concordia.ca; ying.zou@queensu.ca;
   ahmed@cs.queensu.ca
RI Zou, Ying/KLC-9380-2024; Hassan, Ahmed/AAB-7241-2019; KHALIFA, AHMED
   khalifa/HKF-2246-2023; Ali, Ahmed/HOF-4672-2023
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; 
CR [Anonymous], 2014, 11 WORKING C MINING, DOI [DOI 10.1145/2597073.2597076, DOI 10.1145/2597073]
   Apache-Commons, 2016, AP COMM LOGG US GUID
   Bitincka Ledion., 2010, SLAML'10: Proceedings of the 2010 workshop on Managing systems via log analysis and machine learning techniques, P7
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Breiman L., 2002, MANUAL SETTING USING, V1
   Cohen I, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDE '04), P231
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   EFRON B, 1979, ANN STAT, V7, P1, DOI 10.1214/aos/1176344552
   Fu Q, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P24, DOI 10.1145/2591062.2591175
   Fu Q, 2013, IEEE WORK CONF MIN S, P397, DOI 10.1109/MSR.2013.6624054
   Fu QA, 2009, IEEE DATA MINING, P149, DOI 10.1109/ICDM.2009.60
   Fukushima T., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, MSR 2014, P172, DOI DOI 10.1145/2597073.2597075
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Glerum K, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P103
   Gulcu C., 2003, COMPLETE LOG4J MANUA
   Jelihovschi E.G., 2014, TEMA (São Carlos), V15, P3
   Kabinna S, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P154, DOI [10.1145/2901739.2901769, 10.1109/MSR.2016.025]
   Kamei Y, 2016, EMPIR SOFTW ENG, V21, P2072, DOI 10.1007/s10664-015-9400-x
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kavulya Soila, 2010, Proceedings 2010 10th IEEE/ACM International Conference on Cluster, Cloud and Grid Computing (CCGrid), P94, DOI 10.1109/CCGRID.2010.112
   Levenshtein V. I., 1966, SOV PHYS DOKL, V10, P707
   Mariani Leonardo, 2008, 2008 IEEE International Symposium on Software Reliability Engineering, P117, DOI 10.1109/ISSRE.2008.48
   Mariani L, 2009, PROC INT CONF SOFTW, P563, DOI 10.1109/ICSE.2009.5070556
   Microsoft-MSDN, 2016, LOGG AN EXC
   Nagappan Nachiappan, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P364
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Oliner A, 2012, COMMUN ACM, V55, P63, DOI 10.1145/2076450.2076466
   SCOTT AJ, 1974, BIOMETRICS, V30, P507, DOI 10.2307/2529204
   Shang W., 2011, P 2011 18 WORKING C, P335, DOI DOI 10.1109/WCRE.2011.48
   Shang WY, 2014, PROC IEEE INT CONF S, P21, DOI 10.1109/ICSME.2014.24
   Shang WY, 2015, EMPIR SOFTW ENG, V20, P1, DOI 10.1007/s10664-013-9274-8
   Shang WY, 2014, J SOFTW-EVOL PROC, V26, P3, DOI 10.1002/smr.1579
   Sharma B., 2011, P SOCC
   Syer MD, 2013, PROC IEEE INT CONF S, P110, DOI 10.1109/ICSM.2013.22
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Tourani P, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P189, DOI 10.1109/SANER.2016.113
   Xu W, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P117
   Yuan D., 2012, P 2012 USENIX S OP S, P293
   Yuan D, 2012, PROC INT CONF SOFTW, P102, DOI 10.1109/ICSE.2012.6227202
   Yuan D, 2010, ASPLOS XV: FIFTEENTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS, P143
   Yuan D, 2011, ACM SIGPLAN NOTICES, V46, P3, DOI 10.1145/1961296.1950369
   Zhang S, 2005, I C DEPEND SYS NETWO, P644, DOI 10.1109/DSN.2005.44
   Zhu JM, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P415, DOI 10.1109/ICSE.2015.60
   Zimmermann T, 2004, PROC INT CONF SOFTW, P563, DOI 10.1109/ICSE.2004.1317478
NR 44
TC 58
Z9 63
U1 0
U2 8
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2017
VL 22
IS 4
BP 1831
EP 1865
DI 10.1007/s10664-016-9467-z
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FB6ZI
UT WOS:000406290500007
DA 2024-07-18
ER

PT J
AU Lokan, C
   Mendes, E
AF Lokan, Chris
   Mendes, Emilia
TI Investigating the use of moving windows to improve software effort
   prediction: a replicated study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Chronological splitting; Effort estimation; Regression-based estimation
   models; Moving window
ID COST ESTIMATION; MODELS; ACCURACY
AB To date most research in software effort estimation has not taken chronology into account when selecting projects for training and validation sets. A chronological split represents the use of a project's starting and completion dates, such that any model that estimates effort for a new project p only uses as its training set projects that have been completed prior to p's starting date. A study in 2009 ("S3") investigated the use of chronological split taking into account a project's age. The research question investigated was whether the use of a training set containing only the most recent past projects (a "moving window" of recent projects) would lead to more accurate estimates when compared to using the entire history of past projects completed prior to the starting date of a new project. S3 found that moving windows could improve the accuracy of estimates. The study described herein replicates S3 using three different and independent data sets. Estimation models were built using regression, and accuracy was measured using absolute residuals. The results contradict S3, as they do not show any gain in estimation accuracy when using windows for effort estimation. This is a surprising result: the intuition that recent data should be more helpful than old data for effort estimation is not supported. Several factors, which are discussed in this paper, might have contributed to such contradicting results. Some of our future work entails replicating this work using other datasets, to understand better when using windows is a suitable choice for software companies.
C1 [Lokan, Chris] UNSW Canberra, Sch Engn & Informat Technol, Canberra, ACT, Australia.
   [Mendes, Emilia] Blekinge Inst Technol, Fac Comp, SE-37179 Karlskrona, Sweden.
   [Mendes, Emilia] Univ Oulu, Fac Informat Technol & Elect Engn, POB 3000, Oulu 90014, Finland.
C3 University of New South Wales Sydney; Blekinge Institute Technology;
   University of Oulu
RP Lokan, C (corresponding author), UNSW Canberra, Sch Engn & Informat Technol, Canberra, ACT, Australia.
EM c.lokan@adfa.edu.au; emilia.mendes@bth.se
RI Mendes, Maria E/B-4207-2015
OI Mendes, Emilia/0000-0003-0449-5322
CR Amasaki S., 2011, 2011 Proceedings of Joint Conf of 21st Int'l Workshop on Software Measurement and the 6th Int'l Conference on Software Process and Product Measurement (IWSM-MENSURA 2011), P188, DOI 10.1109/IWSM-MENSURA.2011.29
   Amasaki S, 2015, P 11 INT C PRED MOD, p[1, 6]
   Amasaki S, 2014, P 6 INT WORKSH EMP S
   Amasaki S, 2016, P 20 INT C EV ASS SO
   Amasaki S, 2012, IWSM MENSURA 2012
   Amasaki S, 2016, P 7 INT WORKSH EMP S
   Amasaki S, 2014, J SOFTWARE EVOLUTION, V27, P488
   Amasaki S, 2014, LECT NOTES COMPUT SC, V8892, P63, DOI 10.1007/978-3-319-13835-0_5
   Amasaki S, 2013, LECT NOTES COMPUT SC, V7983, P214, DOI 10.1007/978-3-642-39259-7_18
   [Anonymous], 1986, Software Engineering Metrics and Models
   [Anonymous], 2009, P 5 INT C PRED MOD S
   [Anonymous], 2016, The promise repository of empirical software engineering data. north carolina state university, department of computer science
   [Anonymous], 2012, P PROMISE 12
   Azhar D., 2012, Proceedings ofthe 8th International Conference on Predictive Models in Software Engineering, PROMISE, V12, P49, DOI [10.1145/2365324.2365332, DOI 10.1145/2365324.2365332]
   Azzeh M., 2010, Proceedings of the 2010 IEEE 10th International Conference on Computer and Information Technology (CIT 2010), P249, DOI 10.1109/CIT.2010.76
   Bibi S, 2008, INFORM SOFTWARE TECH, V50, P656, DOI 10.1016/j.infsof.2007.06.004
   Bibi S, 2010, J SOFTW MAINT EVOL-R, V22, P121, DOI [10.1002/smr.451, 10.1002/spip.418]
   Britto R, 2015, INT CONF GLOBAL SOFT, P38, DOI 10.1109/ICGSE.2015.10
   Britto R, 2014, INT CONF GLOBAL SOFT, P135, DOI 10.1109/ICGSE.2014.11
   Carver J. C., 2010, P 1 INT WORKSH REP E
   COHEN J, 1992, PSYCHOL BULL, V112, P155, DOI 10.1037/0033-2909.112.1.155
   Cohn M., 2005, Agile Estimating and Planning
   COOK RD, 1977, TECHNOMETRICS, V19, P15, DOI 10.2307/1268249
   Fernandez-Diego M., 2010, P 6 INT C PRED MOD S, P13, DOI DOI 10.1145/1868328.1868348
   Forselius P, 2006, DATA QUALITY CRITERI
   Foss T, 2003, IEEE T SOFTWARE ENG, V29, P985, DOI 10.1109/TSE.2003.1245300
   Han J., 2006, DATA MINING CONCEPTS, DOI 10.1016/C2009-0-61819-5
   Jorgensen M, 2005, IEEE SOFTWARE, V22, P57, DOI 10.1109/MS.2005.73
   Jorgensen M, 2004, J SYST SOFTWARE, V70, P37, DOI 10.1016/S0164-1212(02)00156-5
   Jorgensen M, 2008, IEEE SOFTWARE, V25, P78
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Jorgensen M, 2013, IEEE SOFTWARE, V30, P74, DOI 10.1109/MS.2012.70
   Kitchenham B, 2002, J SYST SOFTWARE, V64, P57, DOI 10.1016/S0164-1212(02)00021-3
   Kitchenham B. A., 2001, IEE Proceedings-Software, V148, P81, DOI 10.1049/ip-sen:20010506
   Kitchenham BA, 2007, IEEE T SOFTWARE ENG, V33, P316, DOI 10.1109/TSE.2007.1101
   Kocaguneli E, 2013, EMPIR SOFTW ENG, V18, P1, DOI 10.1007/s10664-011-9189-1
   Lefley M, 2003, LECT NOTES COMPUT SC, V2724, P2477
   Li YF, 2009, EMPIR SOFTW ENG, V14, P603, DOI 10.1007/s10664-008-9104-6
   Lokan C., 2008, P 12 C EV ASS SOFTW, P151
   Lokan C., 2009, Proceedings of the Thirty-Second Australasian Conference on Computer Science - Volume 91, P47
   Lokan C, 2012, P 19 AS PAC SOFTW EN
   Lokan C, 2014, INFORM SOFTWARE TECH, V56, P1063, DOI 10.1016/j.infsof.2014.02.008
   Lokan C, 2009, INT SYMP EMP SOFTWAR, P111, DOI 10.1109/ESEM.2009.5316019
   Lopez-Martin C, 2012, EMPIR SOFTW ENG, V17, P738, DOI 10.1007/s10664-011-9192-6
   MACDONELL SG, 2003, P 9 IEEE INT S SOFTW
   MacDonell SG, 2010, P 4 INT S EMP SOFTW
   Mantyla MV, 2010, P 1 WORKSH REP EMP S
   MAXWELL K, 2002, SOFTWARE QUALITY I S
   Mendes E., 2009, P 13 INT C EV ASS SO
   Mendes E, 2008, IEEE T SOFTWARE ENG, V34, P723, DOI 10.1109/TSE.2008.64
   Mendes Emilia., 2014, PRACTITIONERS KNOWLE
   Minku L, 2015, 2015 ACM IEEE INT S, P1, DOI DOI 10.1109/ESEM.2015.7321199
   Minku L.L, 2012, INT JOINT C NEUR NET, P1
   Premraj R, 2005, P 11 INT S SOFTW MET
   Schmietendorf Andreas., 2008, 5 SOFTW MEAS EUR FOR, P113
   Shepperd M, 2012, INFORM SOFTWARE TECH, V54, P820, DOI 10.1016/j.infsof.2011.12.008
   Shull FJ, 2008, EMPIR SOFTW ENG, V13, P211, DOI 10.1007/s10664-008-9060-1
   Sigweni B, 2016, P 20 INT C ASS EV SO
   Song L., 2013, PROMISE
   Tabachnick, 2013, Using multivariate statistics, V6th
   Tsunoda M., 2013, P 2013 INT C SOFTW S, P10
   Turhan B, 2012, EMPIR SOFTW ENG, V17, P62, DOI 10.1007/s10664-011-9182-8
   Usman M., 2014, PROMISE '14: Proceedings of the 10th International Conference on Predictive Models in Software Engineering, page, P82
NR 63
TC 19
Z9 19
U1 0
U2 7
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2017
VL 22
IS 2
BP 716
EP 767
DI 10.1007/s10664-016-9446-4
PG 52
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ES9PL
UT WOS:000399891400004
DA 2024-07-18
ER

PT J
AU Unterkalmsteiner, M
   Gorschek, T
   Feldt, R
   Lavesson, N
AF Unterkalmsteiner, Michael
   Gorschek, Tony
   Feldt, Robert
   Lavesson, Niklas
TI Large-scale information retrieval in software engineering - an
   experience report from industrial application
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Test case selection; Information retrieval; Data mining; Experiment
ID RECOVERING TRACEABILITY LINKS; SOURCE-CODE; PROGRAM; MODELS
AB Software Engineering activities are information intensive. Research proposes Information Retrieval (IR) techniques to support engineers in their daily tasks, such as establishing and maintaining traceability links, fault identification, and software maintenance. We describe an engineering task, test case selection, and illustrate our problem analysis and solution discovery process. The objective of the study is to gain an understanding of to what extent IR techniques (one potential solution) can be applied to test case selection and provide decision support in a large-scale, industrial setting. We analyze, in the context of the studied company, how test case selection is performed and design a series of experiments evaluating the performance of different IR techniques. Each experiment provides lessons learned from implementation, execution, and results, feeding to its successor. The three experiments led to the following observations: 1) there is a lack of research on scalable parameter optimization of IR techniques for software engineering problems; 2) scaling IR techniques to industry data is challenging, in particular for latent semantic analysis; 3) the IR context poses constraints on the empirical evaluation of IR techniques, requiring more research on developing valid statistical approaches. We believe that our experiences in conducting a series of IR experiments with industry grade data are valuable for peer researchers so that they can avoid the pitfalls that we have encountered. Furthermore, we identified challenges that need to be addressed in order to bridge the gap between laboratory IR experiments and real applications of IR in the industry.
C1 [Unterkalmsteiner, Michael; Gorschek, Tony; Feldt, Robert] Blekinge Inst Technol, Dept Software Engn, Valhallavagen 1, S-37141 Karlskrona, Sweden.
   [Lavesson, Niklas] Blekinge Inst Technol, Dept Comp Sci & Engn, Valhallavagen 1, S-37141 Karlskrona, Sweden.
C3 Blekinge Institute Technology; Blekinge Institute Technology
RP Unterkalmsteiner, M (corresponding author), Blekinge Inst Technol, Dept Software Engn, Valhallavagen 1, S-37141 Karlskrona, Sweden.
EM mun@bth.se; tgo@bth.se; rfd@bth.se; nla@bth.se
RI Lavesson, Niklas/B-3313-2013
OI Unterkalmsteiner, Michael/0000-0003-4118-0952
CR Abadi A, 2008, INT C PROGRAM COMPRE, P103, DOI 10.1109/ICPC.2008.30
   [Anonymous], 2004, INFORM RETRIEVAL SER
   [Anonymous], 2002, Lanczos algorithms for large symmetric eigenvalue computations
   [Anonymous], 2012, Programming with big data in R
   [Anonymous], 2013, Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering-ESEC/FSE 2013, page
   [Anonymous], 2007, Latent Semantic Analysis: A Road to Meaning. Ed. by
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Antoniol G., 1999, Sixth Working Conference on Reverse Engineering (Cat. No.PR00303), P136, DOI 10.1109/WCRE.1999.806954
   Antoniol G, 2000, PROC IEEE INT CONF S, P40, DOI 10.1109/ICSM.2000.883003
   Arcuri A, 2011, LECT NOTES COMPUT SC, V6956, P33, DOI 10.1007/978-3-642-23716-4_6
   Asuncion HU, 2010, 2010 ACM IEEE 32 INT, V1, P95
   Babar MA, 2010, IEEE SOFTWARE, V27, P89, DOI 10.1109/MS.2010.77
   Baglama J, 2014, IRLBA FAST PARTIAL S
   BASILI VR, 1995, SLOAN MANAGE REV, V37, P55
   Bender R, 2001, J CLIN EPIDEMIOL, V54, P343, DOI 10.1016/S0895-4356(00)00314-0
   Berry MW, 2014, SVDPACKC
   Berry MW, 2006, HDB PARALLEL COMPUTI
   Biggers LR, 2014, EMPIR SOFTW ENG, V19, P465, DOI 10.1007/s10664-012-9224-x
   BIGGERSTAFF TJ, 1993, PROC INT CONF SOFTW, P482, DOI 10.1109/ICSE.1993.346017
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Borg M, 2014, EMPIR SOFTW ENG, V19, P1565, DOI 10.1007/s10664-013-9255-y
   Brand M, 2006, LINEAR ALGEBRA APPL, V415, P20, DOI 10.1016/j.laa.2005.07.021
   Broy M., 2006, 28th International Conference on Software Engineering Proceedings, P33, DOI 10.1145/1134285.1134292
   Calcote J, 2010, AUTOTOOLS PRACTITION
   Chen LP, 2011, INFORM SOFTWARE TECH, V53, P344, DOI 10.1016/j.infsof.2010.12.006
   Cleary B, 2009, EMPIR SOFTW ENG, V14, P93, DOI 10.1007/s10664-008-9095-3
   Cleland-Huang J., 2011, Proceedings of the 6th International Workshop on Traceability in Emerging Forms of Software Engineering, P17, DOI [10.1145/1987856.1987861, DOI 10.1145/1987856.1987861]
   Corazza A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P233, DOI 10.1109/ICSM.2012.6405277
   Crawley MJ, 2007, The R Book, DOI [10.1002/9780470515075, DOI 10.1002/9780470515075]
   De Lucia A, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1276933.1276934
   De Lucia A, 2011, CONF PROC INT SYMP C, P21, DOI 10.1109/ICPC.2011.34
   De Lucia A, 2006, INT C PROGRAM COMPRE, P307, DOI 10.1109/ICPC.2006.15
   De Lucia A, 2009, EMPIR SOFTW ENG, V14, P57, DOI 10.1007/s10664-008-9090-8
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   Dit B, 2014, EMPIR SOFTW ENG, P1
   Dit B, 2013, 2013 7TH INTERNATIONAL WORKSHOP ON TRACEABILITY IN EMERGING FORMS OF SOFTWARE ENGINEERING (TEFSE), P105, DOI 10.1109/TEFSE.2013.6620164
   Dit B, 2013, J SOFTW-EVOL PROC, V25, P53, DOI 10.1002/smr.567
   Dit B, 2011, CONF PROC INT SYMP C, P11, DOI 10.1109/ICPC.2011.47
   DUMAIS ST, 1992, NIST SPECIAL PUBLICA, P137
   Dyba T, 2005, IEEE SOFTWARE, V22, P58, DOI 10.1109/MS.2005.6
   Ebert C, 2009, COMPUTER, V42, P42, DOI 10.1109/MC.2009.118
   Edgington E., 2007, RANDOMIZATION TESTS
   Engstrom E, 2011, INF SOFTW TECHNOL, V53
   Engström E, 2010, INFORM SOFTWARE TECH, V52, P14, DOI 10.1016/j.infsof.2009.07.001
   Enslen E, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P71, DOI 10.1109/MSR.2009.5069482
   Falessi D, 2013, IEEE T SOFTWARE ENG, V39, P18, DOI 10.1109/TSE.2011.122
   Feinerer I, 2008, J STAT SOFTW, V25, P1
   FELDMAN SI, 1979, SOFTWARE PRACT EXPER, V9, P255, DOI 10.1002/spe.4380090402
   Gay G, 2009, PROC IEEE INT CONF S, P351, DOI 10.1109/ICSM.2009.5306315
   Gethers M., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P133, DOI 10.1109/ICSM.2011.6080780
   Goldberg D. E., 1989, GENETIC ALGORITHMS S
   Gorschek T, 2006, IEEE SOFTWARE, V23, P88, DOI 10.1109/MS.2006.147
   Gotel O. C. Z., 1994, Proceedings of the First International Conference on Requirements Engineering (Cat. No.94TH0613-0), P94, DOI 10.1109/ICRE.1994.292398
   Graaf H, 2003, IEEE SOFTWARE, V20, P61, DOI 10.1109/MS.2003.1241368
   Grant S, 2013, SCI COMPUT PROGRAM, V78, P1663, DOI 10.1016/j.scico.2013.03.015
   Guerrouj L, 2011, J SOFTW-EVOL PROC, V25, P575
   Hernandez V, 2005, ACM T MATH SOFTWARE, V31, P351, DOI 10.1145/1089014.1089019
   Hill E., 2008, P 2008 INT WORKING C, P79
   Hooker J. N., 1995, Journal of Heuristics, V1, P33, DOI 10.1007/BF02430364
   Hsin-Yi Jiang, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P59, DOI 10.1109/ASE.2008.16
   Islam MM, 2012, EUR CON SFTWR MTNCE, P21, DOI 10.1109/CSMR.2012.13
   Ivarsson M, 2011, EMPIR SOFTW ENG, V16, P365, DOI 10.1007/s10664-010-9146-4
   IVERSON KE, 1980, COMMUN ACM, V23, P444, DOI 10.1145/358896.358899
   Knaus J., 2013, SNOWFALL EASIER CLUS
   Lavesson N., 2006, P 21 NAT C ART INT B, V6, P395
   Lawrence M. A., 2013, EZ EASY ANAL VISUALI
   Lawrie D., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P113, DOI 10.1109/ICSM.2011.6080778
   Lee Jihyun, 2012, P 16 INT SOFTW PROD, P31
   Liu Dapeng, 2007, P 22 IEEEACM INT C A, P234, DOI 10.1145/1321631.1321667
   Liu TY, 2011, LEARNING TO RANK FOR INFORMATION RETRIEVAL, P1, DOI 10.1007/978-3-642-14267-3
   Lormans M, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P45
   Ludbrook J, 1998, AM STAT, V52, P127, DOI 10.2307/2685470
   Maletic J. I., 1999, 14th IEEE International Conference on Automated Software Engineering, P251, DOI 10.1109/ASE.1999.802296
   Maletic JI, 2002, PROG COMPREHEN, P289, DOI 10.1109/WPC.2002.1021351
   Maletic JI, 2001, PROC INT CONF SOFTW, P103, DOI 10.1109/ICSE.2001.919085
   Maletic JI, 2000, PROC INT C TOOLS ART, P46, DOI 10.1109/TAI.2000.889845
   Marcus A, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P214, DOI 10.1109/WCRE.2004.10
   Marcus A, 2003, PROC INT CONF SOFTW, P125, DOI 10.1109/ICSE.2003.1201194
   Mittas N, 2008, J SYST SOFTWARE, V81, P616, DOI 10.1016/j.jss.2007.07.039
   Moreno L, 2013, PROC IEEE INT CONF S, P452, DOI 10.1109/ICSM.2013.70
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Oliveto Rocco, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P68, DOI 10.1109/ICPC.2010.20
   Panichella A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P522, DOI 10.1109/ICSE.2013.6606598
   Perrouin Gilles, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P459, DOI 10.1109/ICST.2010.43
   Pettersson F, 2008, J SYST SOFTWARE, V81, P972, DOI 10.1016/j.jss.2007.08.032
   Pohl K, 2006, COMMUN ACM, V49, P78, DOI 10.1145/1183236.1183271
   Poshyvanyk D, 2007, INT C PROGRAM COMPRE, P37
   Poshyvanyk D, 2006, INT C PROGRAM COMPRE, P137, DOI 10.1109/ICPC.2006.17
   Poshyvanyk D, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2377656.2377660
   Qusef A, 2014, J SYST SOFTWARE, V88, P147, DOI 10.1016/j.jss.2013.10.019
   Rehurek R, 2011, LECT NOTES COMPUT SC, V6611, P289, DOI 10.1007/978-3-642-20161-5_29
   Rothermel G, 1996, IEEE T SOFTWARE ENG, V22, P529, DOI 10.1109/32.536955
   SALTON G, 1975, COMMUN ACM, V18, P613, DOI 10.1145/361219.361220
   Shepperd M, 2014, IEEE T SOFTWARE ENG, V40, P603, DOI 10.1109/TSE.2014.2322358
   Sheskin D. J., 2000, Handbook of Parametric and Nonparametric Statistical Procedures
   Smucker MD, 2007, P 16 ACM C C INF KNO, P623, DOI [DOI 10.1145/1321440.1321528, 10.1145/1321440.1321528U, DOI 10.1145/1321440.1321528U]
   Teh YW, 2006, J AM STAT ASSOC, V101, P1566, DOI 10.1198/016214506000000302
   The Apache Software Foundation, 2014, AP LUC AP LUC COR
   Thomas SW, 2014, EMPIR SOFTW ENG, V19, P182, DOI 10.1007/s10664-012-9219-7
   Thomas SW, 2013, IEEE T SOFTWARE ENG, V39, P1427, DOI 10.1109/TSE.2013.27
   Thörn C, 2010, INFORM SOFTWARE TECH, V52, P411, DOI 10.1016/j.infsof.2009.10.009
   Unterkalmsteiner M, 2014, SUPPLEMENTARY MAT LA
   Utting M, 2012, SOFTW TEST VERIF REL, V22, P297, DOI 10.1002/stvr.456
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Wohlin C, 2012, IEEE SOFTWARE, V29, P67, DOI 10.1109/MS.2011.92
   Xia X, 2015, J SOFTWARE IN PRESS
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Zeimpekis D, 2006, GROUPING MULTIDIMENSIONAL DATA: RECENT ADVANCES IN CLUSTERING, P187, DOI 10.1007/3-540-28349-8_7
   Zhao W, 2006, ACM T SOFTW ENG METH, V15, P195, DOI 10.1145/1131421.1131424
NR 109
TC 9
Z9 11
U1 0
U2 10
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2016
VL 21
IS 6
BP 2324
EP 2365
DI 10.1007/s10664-015-9410-8
PG 42
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ED7XQ
UT WOS:000389085500004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Kamei, Y
   Fukushima, T
   McIntosh, S
   Yamashita, K
   Ubayashi, N
   Hassan, AE
AF Kamei, Yasutaka
   Fukushima, Takafumi
   McIntosh, Shane
   Yamashita, Kazuhiro
   Ubayashi, Naoyasu
   Hassan, Ahmed E.
TI Studying just-in-time defect prediction using cross-project models
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Empirical study; Defect prediction; Just-in-time prediction
AB Unlike traditional defect prediction models that identify defect-prone modules, Just-In-Time (JIT) defect prediction models identify defect-inducing changes. As such, JIT defect models can provide earlier feedback for developers, while design decisions are still fresh in their minds. Unfortunately, similar to traditional defect models, JIT models require a large amount of training data, which is not available when projects are in initial development phases. To address this limitation in traditional defect prediction, prior work has proposed cross-project models, i.e., models learned from other projects with sufficient history. However, cross-project models have not yet been explored in the context of JIT prediction. Therefore, in this study, we empirically evaluate the performance of JIT models in a cross-project context. Through an empirical study on 11 open source projects, we find that while JIT models rarely perform well in a cross-project context, their performance tends to improve when using approaches that: (1) select models trained using other projects that are similar to the testing project, (2) combine the data of several other projects to produce a larger pool of training data, and (3) combine the models of several other projects to produce an ensemble model. Our findings empirically confirm that JIT models learned using other projects are a viable solution for projects with limited historical data. However, JIT models tend to perform best in a cross-project context when the data used to learn them are carefully selected.
C1 [Kamei, Yasutaka; Fukushima, Takafumi; Yamashita, Kazuhiro; Ubayashi, Naoyasu] Kyushu Univ, Principles Software Languages Grp POSL, Fukuoka, Fukuoka 8190395, Japan.
   [McIntosh, Shane] McGill Univ, Dept Elect & Comp Engn, Montreal, PQ H3A OG4, Canada.
   [Hassan, Ahmed E.] Queens Univ, SAIL, Kingston, ON K7L 3N6, Canada.
C3 Kyushu University; McGill University; Queens University - Canada
RP Kamei, Y (corresponding author), Kyushu Univ, Principles Software Languages Grp POSL, Fukuoka, Fukuoka 8190395, Japan.; McIntosh, S (corresponding author), McGill Univ, Dept Elect & Comp Engn, Montreal, PQ H3A OG4, Canada.
EM kamei@ait.kyushu-u.ac.jp; f.taka@posl.ait.kyushu-u.ac.jp;
   shane.mcintosh@mcgill.ca; yamashita@posl.ait.kyushu-u.ac.jp;
   ubayashi@ait.kyushu-u.ac.jp; ahmed@cs.queensu.ca
RI Hassan, Ahmed/AAB-7241-2019; Ali, Ahmed/HOF-4672-2023; Fukushima,
   Takafumi/AAC-9922-2019; KHALIFA, AHMED khalifa/HKF-2246-2023
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; Ubayashi,
   Naoyasu/0000-0003-1578-7195
FU JSPS [15H05306, 24680003]; Natural Sciences and Engineering Research
   Council of Canada (NSERC); Grants-in-Aid for Scientific Research
   [24680003, 25540026, 15H05306] Funding Source: KAKEN
FX This research was partially supported by JSPS KAKENHI Grant Numbers
   15H05306 and 24680003 and the Natural Sciences and Engineering Research
   Council of Canada (NSERC).
CR [Anonymous], 2012, THESIS
   [Anonymous], 2008, Proceedings of the 4th International Workshop on Predictor Models in Software Engineering, PROMISE '08
   [Anonymous], 2012, P ACM SIGSOFT 20 INT
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Bettenburg N., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P60, DOI 10.1109/MSR.2012.6224300
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Briand LC, 2002, IEEE T SOFTWARE ENG, V28, P706, DOI 10.1109/TSE.2002.1019484
   Cheung S.-C., 2011, P 19 ACM SIGSOFT S 1, P15
   Coolidge FL., 2012, STAT GENTLE INTRO
   D'Ambros Marco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P31, DOI 10.1109/MSR.2010.5463279
   Fukushima T., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, MSR 2014, P172, DOI DOI 10.1145/2597073.2597075
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Guo PJ, 2010, Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering, P495
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   He ZM, 2012, AUTOMAT SOFTW ENG, V19, P167, DOI 10.1007/s10515-011-0090-3
   Jiang Y., 2008, DEFECTS 08 P 2008 WO, P16, DOI [DOI 10.1145/1390817.1390822, 10.1145/1390817.1390822]
   Kamei Yasutaka, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P196
   Kamei Y., 2010, Proceedings of the 26th International Conference on Software Maintenance, P1, DOI 10.1109/ICSM.2010.5609530
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kampstra P., 2008, Journal of Statistical Software, V28, P1, DOI [10.18637/jss.v028.c01, DOI 10.18637/JSS.V028.C01, 10.18637/jss.v028.c01.papers3://publication/uuid/692988CE-7E10-498E-96EC-E7A0CE3620A3]
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kocaguneli E, 2012, IEEE T SOFTWARE ENG, V38, P1403, DOI 10.1109/TSE.2011.111
   Koru AG, 2009, IEEE T SOFTWARE ENG, V35, P293, DOI 10.1109/TSE.2008.90
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Luo Li P., 2006, 28th International Conference on Software Engineering Proceedings, P413, DOI 10.1145/1134285.1134343
   Matsumoto S, 2010, P 6 INT C PREDICTIVE, P1, DOI DOI 10.1145/1868328.1868356
   McIntosh S, 2014, EMPIRICAL SOFTWARE E, DOI 10.1.1/jpb001.http://link.springer.com/article/10.1007
   Menzies T., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P343, DOI 10.1109/ASE.2011.6100072
   Menzies T, 2013, IEEE T SOFTWARE ENG, V39, P822, DOI 10.1109/TSE.2012.83
   Minku LL, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P446, DOI 10.1145/2568225.2568228
   Misirli AT, 2011, SOFTWARE QUAL J, V19, P515, DOI 10.1007/s11219-010-9128-1
   Mockus A, 2000, BELL LABS TECH J, V5, P169, DOI 10.1002/bltj.2229
   Mockus A, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P11, DOI 10.1109/MSR.2009.5069476
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Nam J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P382, DOI 10.1109/ICSE.2013.6606584
   Purushothaman R, 2005, IEEE T SOFTWARE ENG, V31, P511, DOI 10.1109/TSE.2005.74
   Ratzinger J., 2008, Proceedings of the 2008 international working conference on Mining software repositories, P35, DOI [10.1145/1370750.1370759, DOI 10.1145/1370750.1370759]
   Shihab E., 2012, P ACM SIGSOFT 20 INT
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Tan M, 2015, P INT C SOFTW ENG IC
   Thomas SW, 2013, IEEE T SOFTWARE ENG, V39, P1427, DOI 10.1109/TSE.2013.27
   Turhan B, 2012, EMPIR SOFTW ENG, V17, P62, DOI 10.1007/s10664-011-9182-8
   Turhan B, 2011, EUROMICRO CONF PROC, P396, DOI 10.1109/SEAA.2011.59
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Zhang F, 2013, PROC IEEE INT CONF S, P350, DOI 10.1109/ICSM.2013.46
   Zhang FM, 2014, CRYST GROWTH DES, V14, P2014, DOI 10.1021/cg5001254
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
NR 50
TC 152
Z9 173
U1 2
U2 25
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2016
VL 21
IS 5
BP 2072
EP 2106
DI 10.1007/s10664-015-9400-x
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DU2BX
UT WOS:000382017100007
DA 2024-07-18
ER

PT J
AU Damevski, K
   Shepherd, D
   Pollock, L
AF Damevski, Kostadin
   Shepherd, David
   Pollock, Lori
TI A field study of how developers locate features in source code
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Code search; Feature location; Field studies
AB Our current understanding of how programmers perform feature location during software maintenance is based on controlled studies or interviews, which are inherently limited in size, scope and realism. Replicating controlled studies in the field can both explore the findings of these studies in wider contexts and study new factors that have not been previously encountered in the laboratory setting. In this paper, we report on a field study about how software developers perform feature location within source code during their daily development activities. Our study is based on two complementary field data sets: one that reflects complete IDE activity of 67 professional developers over approximately one month, and the other that reflects usage of an IR-based code search tool by nearly 600 developers. Analyzing this data, we report results on how often developers use which type of code search tools, on the types of queries and retreival strategies used by developers, and on patterns of developer feature location behavior following code search. The results of the study suggest that there is (1) a need for helping developers to devise better code search queries; (2) a lack of adoption of niche code search tools; (3) a need for code search tool to handle both lookup and exploratory queries; and (4) a need for better integration between code search, structured navigation, and debugging tools in feature location tasks.
C1 [Damevski, Kostadin] Virginia State Univ, Petersburg, VA 23806 USA.
   [Shepherd, David] ABB Inc, Raleigh, NC 27606 USA.
   [Pollock, Lori] Univ Delaware, Newark, DE 19716 USA.
C3 Virginia State University; ABB; University of Delaware
RP Damevski, K (corresponding author), Virginia State Univ, Petersburg, VA 23806 USA.
EM kostadin@gmail.com; david.shepherd@us.abb.com; pollock@udel.edu
RI Damevski, Kostadin/F-4476-2014
OI Damevski, Kostadin/0000-0001-7799-2026; Shepherd, David
   C./0000-0003-2017-7842
CR Baeza-Yates Ricardo, 1999, MODERN INFORM RETRIE, V463
   Bajracharya SK, 2012, EMPIR SOFTW ENG, V17, P424, DOI 10.1007/s10664-010-9144-6
   BATES MJ, 1989, ONLINE REV, V13, P407, DOI 10.1108/eb024320
   Damevski K, 2014, PROCEEDINGS OF THE I
   Dit B., 2011, IEEE INT C PROGR COM
   Ge X, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P425, DOI 10.1109/CSMR-WCRE.2014.6747210
   Haiduc S., 2013, INT C SOFTW ENG ICSE
   Howard MJ, 2013, IEEE WORK CONF MIN S, P377, DOI 10.1109/MSR.2013.6624052
   Jinqiu Yang, 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P161, DOI 10.1109/MSR.2012.6224276
   Jinshui Wang, 2011, 2011 IEEE 27th International Conference on Software Maintenance, P213, DOI 10.1109/ICSM.2011.6080788
   Kersten M, 2005, P 2005 INT C ASP OR, P159, DOI DOI 10.1145/1052898.1052912
   Ko AJ, 2006, IEEE T SOFTWARE ENG, V32, P971, DOI 10.1109/TSE.2006.116
   Manning Christopher D., 2008, INTRO INFORM RETRIEV
   Murphy GC, 2006, IEEE SOFTWARE, V23, P76, DOI 10.1109/MS.2006.105
   Murphy-Hill E., 2012, P ACM SIGSOFT 20 INT
   Murphy-Hill E, 2009, PROC INT CONF SOFTW, P287, DOI 10.1109/ICSE.2009.5070529
   ReSharper, 2014, MOST INT EXT VIS STU
   Robillard MP, 2004, IEEE T SOFTWARE ENG, V30, P889, DOI 10.1109/TSE.2004.101
   Roldan-Vega M, 2013, PROC IEEE INT CONF S, P512, DOI 10.1109/ICSM.2013.84
   Shepherd D, 2012, P ACM SIGSOFT 20 INT
   Sillito J., 2006, Proc. of the ACM SIGSOFT Int'l Symp. on Foundations of Software Engineering, P23, DOI DOI 10.1145/1181775.1181779
   Wang JS, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P762, DOI 10.1109/ICSE.2013.6606622
NR 22
TC 17
Z9 19
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2016
VL 21
IS 2
BP 724
EP 747
DI 10.1007/s10664-015-9373-9
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DI2ST
UT WOS:000373349700013
DA 2024-07-18
ER

PT J
AU Dit, B
   Moritz, E
   Linares-Vásquez, M
   Poshyvanyk, D
   Cleland-Huang, J
AF Dit, Bogdan
   Moritz, Evan
   Linares-Vasquez, Mario
   Poshyvanyk, Denys
   Cleland-Huang, Jane
TI Supporting and accelerating reproducible empirical research in software
   evolution and maintenance using TraceLab Component Library
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software maintenance; Reproducible; Experiments; Empirical case studies;
   TraceLab
ID FEATURE LOCATION; EXECUTION
AB Research studies in software maintenance are notoriously hard to reproduce due to lack of datasets, tools, implementation details (e.g., parameter values, environmental settings) and other factors. The progress in the field is hindered by the challenge of comparing new techniques against existing ones, as researchers have to devote a large portion of their resources to the tedious and error-prone process of reproducing previously introduced approaches. In this paper, we address the problem of experiment reproducibility in software maintenance and provide a long-term solution towards ensuring that future experiments will be reproducible and extensible. We conducted a preliminary mapping study of a number of representative maintenance techniques and approaches and implemented them as a set of experiments and a library of components that we make publicly available with TraceLab, called the Component Library. The goal of these experiments and components is to create a body of actionable knowledge that would (i) facilitate future research and (ii) allow the research community to contribute to it as well. In addition, to illustrate the process of using and adapting these techniques, we present an example of creating new techniques based on existing ones, in order to produce improved results.
C1 [Dit, Bogdan; Moritz, Evan; Linares-Vasquez, Mario; Poshyvanyk, Denys] Coll William & Mary, Williamsburg, VA 23186 USA.
   [Cleland-Huang, Jane] Depaul Univ, Sch Comp, Chicago, IL 60604 USA.
   [Dit, Bogdan] Coll William & Mary, Dept Comp Sci, Williamsburg, VA USA.
C3 William & Mary; DePaul University; William & Mary
RP Poshyvanyk, D (corresponding author), Coll William & Mary, Williamsburg, VA 23186 USA.
EM bdit@cs.wm.edu; eamoritz@cs.wm.edu; mlinarev@cs.wm.edu; denys@cs.wm.edu;
   jhuang@cs.depaul.edu
OI Linares-Vasquez, Mario/0000-0003-0161-2888; Poshyvanyk,
   Denys/0000-0002-5626-7586
FU United States NSF [CNS-0959924]; NSF [CCF-1218129, CCF-1016868]; Direct
   For Computer & Info Scie & Enginr; Division of Computing and
   Communication Foundations [1218129] Funding Source: National Science
   Foundation; Division Of Computer and Network Systems; Direct For
   Computer & Info Scie & Enginr [1510239] Funding Source: National Science
   Foundation
FX This work is supported in part by the United States NSF CNS-0959924, NSF
   CCF-1218129, and NSF CCF-1016868 grants. Any opinions, findings and
   conclusions expressed herein are the authors' and do not necessarily
   reflect those of the sponsors. We would also like to acknowledge the
   team of researchers from DePaul University led by Jane Cleland-Huang: Ed
   Keenan, Adam Czauderna, Greg Leach, and Piotr Pruski. This work would
   not have been possible without their continuous support on the TraceLab
   project.
CR Abadi A, 2008, INT C PROGRAM COMPRE, P103, DOI 10.1109/ICPC.2008.30
   Alhindawi N, 2013, 2013 7TH INTERNATIONAL WORKSHOP ON TRACEABILITY IN EMERGING FORMS OF SOFTWARE ENGINEERING (TEFSE), P79, DOI 10.1109/TEFSE.2013.6620159
   [Anonymous], 2008, PROC 12 INT C EVAL A
   [Anonymous], 2007, PROMISE 07, DOI DOI 10.1109/PROMISE.2007.10
   Asuncion H, 2010, 32 INT C SOFTW ENG I
   Barr E., 2010, P FSE SDP WORKSH FUT, P23
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Borg M, 2014, EMPIR SOFTW ENG, V19, P1565, DOI 10.1007/s10664-013-9255-y
   Brin S, 1998, COMPUT NETWORKS ISDN, V30, P107, DOI 10.1016/S0169-7552(98)00110-X
   Capobianco G, 2009, INT C PROGRAM COMPRE, P148, DOI 10.1109/ICPC.2009.5090038
   Chang J, 2010, STAT ANN APPL
   Chen X, 2011, P 33 INT C SOFTW ENG, V1985943, P912, DOI [10.1145/1985793.1985943, DOI 10.1145/1985793.1985943]
   Cleland-Huang J, 2011, 6 ICSE2011 INT WORKS
   Cleland-Huang J, 2013, 2013 7TH INTERNATIONAL WORKSHOP ON TRACEABILITY IN EMERGING FORMS OF SOFTWARE ENGINEERING (TEFSE), P5, DOI 10.1109/TEFSE.2013.6620147
   Cleland-Huang J, 2012, PROC INT CONF SOFTW, P1329, DOI 10.1109/ICSE.2012.6227087
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   De Lucia A., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P193
   De Lucia A, 2011, CONF PROC INT SYMP C, P21, DOI 10.1109/ICPC.2011.34
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   Dekhtyar A, 2013, 2013 7TH INTERNATIONAL WORKSHOP ON TRACEABILITY IN EMERGING FORMS OF SOFTWARE ENGINEERING (TEFSE), P37, DOI 10.1109/TEFSE.2013.6620152
   Dit B., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P203
   Dit B, 2013, PROC IEEE INT CONF S, P330, DOI 10.1109/ICSM.2013.44
   Dit B, 2013, IEEE WORK CONF MIN S, P131, DOI 10.1109/MSR.2013.6624019
   Dit B, 2013, 2013 7TH INTERNATIONAL WORKSHOP ON TRACEABILITY IN EMERGING FORMS OF SOFTWARE ENGINEERING (TEFSE), P105, DOI 10.1109/TEFSE.2013.6620164
   Dit B, 2013, J SOFTW-EVOL PROC, V25, P53, DOI 10.1002/smr.567
   Dit B, 2013, EMPIR SOFTW ENG, V18, P277, DOI 10.1007/s10664-011-9194-4
   Dit B, 2011, CONF PROC INT SYMP C, P11, DOI 10.1109/ICPC.2011.47
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Egyed A, 2003, IEEE T SOFTWARE ENG, V29, P116, DOI 10.1109/TSE.2003.1178051
   Eisenbarth T, 2001, IWPC
   Enslen E, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P71, DOI 10.1109/MSR.2009.5069482
   Gay G, 2009, PROC IEEE INT CONF S, P351, DOI 10.1109/ICSM.2009.5306315
   Gethers M., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P133, DOI 10.1109/ICSM.2011.6080780
   González-Barahona JM, 2012, EMPIR SOFTW ENG, V17, P75, DOI 10.1007/s10664-011-9181-9
   Haiduc S., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P223, DOI 10.1145/1810295.1810335
   Hays M., 2013, International Workshop on Traceability in Emerging Forms of Software Engineering (TEFSE'13), P90
   Jorgensen M, 2004, J SYST SOFTWARE, V70, P37, DOI 10.1016/S0164-1212(02)00156-5
   Kaushik N, 2012, EUR CON SFTWR MTNCE, P159, DOI 10.1109/CSMR.2012.78
   Keenan E, 2012, PROC INT CONF SOFTW, P1375, DOI 10.1109/ICSE.2012.6227244
   Kitchenham BA, 2011, INFORM SOFTWARE TECH, V53, P638, DOI 10.1016/j.infsof.2010.12.011
   Kleinberg JM, 1999, J ACM, V46, P604, DOI 10.1145/324133.324140
   Li W., 2013, International Workshop on Traceability in Emerging Forms of Software Engineering (TEFSE'13), P95
   Liu Dapeng, 2007, P 22 IEEEACM INT C A, P234, DOI 10.1145/1321631.1321667
   Marcus A, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P214, DOI 10.1109/WCRE.2004.10
   Menzies T., 2012, The PROMISE Repository of empirical software engineering data
   Mytkowicz T, 2010, COMPUTER, V43, P62, DOI 10.1109/MC.2010.214
   Oliveto Rocco, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P68, DOI 10.1109/ICPC.2010.20
   Panichella A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P522, DOI 10.1109/ICSE.2013.6606598
   Panichella A, 2013, EUR CON SFTWR MTNCE, P199, DOI 10.1109/CSMR.2013.29
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI [10.1109/TSE.2007.1016, 10.1109/TSE.2007.1016.]
   Rempel P, 2013, 2013 7TH INTERNATIONAL WORKSHOP ON TRACEABILITY IN EMERGING FORMS OF SOFTWARE ENGINEERING (TEFSE), P100, DOI 10.1109/TEFSE.2013.6620163
   Revelle M, 2009, INT C PROGRAM COMPRE, P218, DOI 10.1109/ICPC.2009.5090045
   Robles Gregorio, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P171, DOI 10.1109/MSR.2010.5463348
   Runeson P, 2007, PROC INT CONF SOFTW, P499
   SALTON G, 1975, COMMUN ACM, V18, P613, DOI 10.1145/361219.361220
   Sayyad Shirabad J., 2005, The PROMISE Repository of Software Engineering Databases
   Scanniello G, 2011, CONF PROC INT SYMP C, P1, DOI 10.1109/ICPC.2011.13
   Shull FJ, 2008, EMPIR SOFTW ENG, V13, P211, DOI 10.1007/s10664-008-9060-1
   Tian K, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P163, DOI 10.1109/MSR.2009.5069496
   Wang XY, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P461, DOI 10.1145/1368088.1368151
   Wieloch M, 2013, 2013 7TH INTERNATIONAL WORKSHOP ON TRACEABILITY IN EMERGING FORMS OF SOFTWARE ENGINEERING (TEFSE), P110, DOI 10.1109/TEFSE.2013.6620165
   Wiese A., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P496, DOI 10.1109/ICSM.2011.6080817
NR 62
TC 9
Z9 11
U1 0
U2 10
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2015
VL 20
IS 5
BP 1198
EP 1236
DI 10.1007/s10664-014-9339-3
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CQ5UP
UT WOS:000360671500002
DA 2024-07-18
ER

PT J
AU Petersen, K
   Gencel, C
   Asghari, N
   Betz, S
AF Petersen, Kai
   Gencel, Cigdem
   Asghari, Negin
   Betz, Stefanie
TI An elicitation instrument for operationalising GQM<SUP>+</SUP>Strategies
   (GQM<SUP>+</SUP>S-EI)
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Goal driven measurement; Goal elicitation; Strategy elicitation;
   Information need; GQM(+)Strategies; Action research; Case study
ID SOFTWARE-DEVELOPMENT; AGILE; RISK
AB A recent approach for measurement program planning, GQM(+)Strategies, provides an important extension to existing approaches linking measurements and improvement activities to strategic goals and ways to achieve these goals. There is a need for instruments aiding in eliciting information from stakeholders to use GQM(+)Strategies. The success of GQM(+) Strategies highly depends on accurately identifying goals, strategies and information needs from stakeholders. The research aims at providing an instrument (called GQM(+)S-EI), aiding practitioners to accurately elicit information needed by GQM(+)Strategies (capturing goals, strategies and information needs). The research included two phases. In the first phase, using action research method, the GQM(+)S-EI was designed in three iterations in Ericsson AB. Thereafter, a case study was conducted to evaluate whether the information elicited with the designed instrument following the defined process was accurate and complete. We identified that the industry requires elicitation instruments that are capable to elicit information from stakeholders, not having to know about the concepts (e.g. goals and strategies). The case study results showed that our proposed instrument is capable of accurately and completely capturing the needed information from the stakeholders. We conclude that GQM(+)S-EI can be used for accurately and completely eliciting the information needed by goal driven measurement frameworks. The instrument has been successfully transferred to Ericsson AB for measurement program planning.
C1 [Petersen, Kai] Blekinge Inst Technol, Karlskrona, Sweden.
   [Gencel, Cigdem] Free Univ Bolzano Bozen, I-39100 Bolzano, Italy.
   [Asghari, Negin] Ericsson AB, Kista, Sweden.
   [Betz, Stefanie] Blekinge Inst Technol, Software Engn Lab, Karlskrona, Sweden.
C3 Blekinge Institute Technology; Free University of Bozen-Bolzano;
   Ericsson; Blekinge Institute Technology
RP Petersen, K (corresponding author), Blekinge Inst Technol, Karlskrona, Sweden.
EM kai.petersen@bth.se; cigdem.gencel@unibz.it; negin.asghari@ericsson.com;
   stefanie.betz@bth.se
RI Gencel, Cigdem/H-8630-2019; Betz, Stefanie/AGI-1451-2022
OI Gencel, Cigdem/0000-0003-0115-8902; Betz, Stefanie/0000-0002-3613-5893;
   Petersen, Kai/0000-0002-1532-8223
FU Ericsson Software Research (ESR); ELLIIT, the Strategic Area for ICT
   research; Swedish Government
FX This work has been conducted as part of an Ericsson Software Research
   (ESR) funded project; GQM-Lean- Establishing a Lean and Sustainable
   Software Measurement Program. The work also funded partially by ELLIIT,
   the Strategic Area for ICT research, funded by the Swedish Government.
   We also would like to thank the measurement analysts who have worked
   with us in close collaboration, and all the interviewees that
   participated in this research.
CR [Anonymous], 1996, GOAL DRIVEN SOFTWARE
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], 2002, ISOIEC15939
   [Anonymous], 1994, HDB QUALITATIVE RES
   [Anonymous], 2007, SOFTWARE PRODUCT LIN
   [Anonymous], FORUM QUALITATIVE SO
   Ardimento P, 2006, INFORM SOFTWARE TECH, V48, P313, DOI 10.1016/j.infsof.2005.09.010
   Baca D, 2013, J SYST SOFTWARE, V86, P2411, DOI 10.1016/j.jss.2013.04.023
   Basili V., 2007, ICIS 2007 P, P25
   Basili V. R., 1994, Encyclopedia of Software Engineering, V1, P528
   Basili VR, 2010, COMPUTER, V43, P57, DOI 10.1109/MC.2010.108
   BASILI VR, 1984, IEEE T SOFTWARE ENG, V10, P728, DOI 10.1109/TSE.1984.5010301
   Bin Ali N, 2012, INT SYMP EMP SOFTWAR, P211, DOI 10.1145/2372251.2372290
   Boyd A, 2002, ASLIB PROC, V54, P177, DOI 10.1108/00012530210441728
   Boyd AJ, 2005, ASLIB PROC, V57, P523, DOI 10.1108/00012530510634253
   Briand L., 1996, Softw. Process, Improve-ment Pract., V2, P253
   Brydon-Miller Mary., 2003, WHY ACTION RES, P9, DOI [DOI 10.1177/14767503030011002, 10.1177/14767503030011002]
   Bühne S, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P41, DOI 10.1109/RE.2005.45
   Damm L.-O., 2006, Software Process Improvement and Practice, V11, P47, DOI 10.1002/spip.253
   Davis A, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P179
   Dieste O, 2011, IEEE T SOFTWARE ENG, V37, P283, DOI 10.1109/TSE.2010.33
   Finke JS, 2011, IMPLEMENTING CISCO 1
   Gencel C, 2013, J SYST SOFT IN PRESS
   Graham D, 2009, FDN SOFTWARE TESTING
   Guest G, 2006, FIELD METHOD, V18, P59, DOI 10.1177/1525822X05279903
   Ivarsson M, 2011, EMPIR SOFTW ENG, V16, P365, DOI 10.1007/s10664-010-9146-4
   Iversen JH, 2004, MIS QUART, V28, P395
   Kaneko T., 2011, 2011 Proceedings of Joint Conf of 21st Int'l Workshop on Software Measurement and the 6th Int'l Conference on Software Process and Product Measurement (IWSM-MENSURA 2011), P221, DOI 10.1109/IWSM-MENSURA.2011.22
   Kaplan R.S., 1996, The balanced scorecard: translating strategy into action
   Keele S., 2007, GUIDELINES PERFORMIN
   Kilpi T, 2001, IEEE SOFTWARE, V18, P72, DOI 10.1109/52.965808
   Mandic V., 2010, TRTOL20102802 U OUL
   Mandic V, 2010, P INT S EMP SOFTW EN, P2010
   Mandic V, 2010, LECT NOTES COMPUT SC, V6156, P291, DOI 10.1007/978-3-642-13792-1_23
   McGarry John., 2002, Practical Software Measurement: Objective Information for Decision Makers
   Mendonça MG, 2000, IEEE T SOFTWARE ENG, V26, P484, DOI 10.1109/32.852739
   Mujtaba S, 2011, EUROMICRO CONF PROC, P369, DOI 10.1109/SEAA.2011.72
   Munch J, 2008, ALIGNING BUSINESS ST
   Munch J, 2013, P DASMA SOFTW METR C
   Munch J, 2013, P 39 EUROPMICRO C SO
   Offen RJ, 1997, IEEE SOFTWARE, V14, P45, DOI 10.1109/52.582974
   Petersen K, 2011, SOFTWARE PRACT EXPER, V41, P975, DOI 10.1002/spe.975
   Petersen K, 2013, P JOINT C 23 INT WOR
   Petersen K, 2010, EMPIR SOFTW ENG, V15, P654, DOI 10.1007/s10664-010-9136-6
   Petersen K, 2010, J SYST SOFTWARE, V83, P1275, DOI 10.1016/j.jss.2010.02.005
   Petersen K, 2009, INT SYMP EMP SOFTWAR, P402
   Petersen K, 2009, J SYST SOFTWARE, V82, P1479, DOI 10.1016/j.jss.2009.03.036
   Poppendieck M., 2003, Lean Software Development: An Agile Tollkit
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sarcia S.A., 2010, ACM IEEE INT S EMP S, P1
   Scholtes P.R., 2003, THE TEAM HDB, V3rd
   Tahir T., 2011, Proceedings of the 2011 Frontiers of Information Technology (FIT 2011), P39, DOI 10.1109/FIT.2011.15
   Trendowicz A., 2011, 2011 Proceedings of Joint Conf of 21st Int'l Workshop on Software Measurement and the 6th Int'l Conference on Software Process and Product Measurement (IWSM-MENSURA 2011), P142, DOI 10.1109/IWSM-MENSURA.2011.20
   van Latum F, 1998, IEEE SOFTWARE, V15, P78, DOI 10.1109/52.646887
   Wilson Hugh., 2002, J MARKETING MANAGEME, V18, P193, DOI DOI 10.1362/0267257022775918
   Yin R. K., 2011, APPL CASE STUDY RES
NR 56
TC 8
Z9 8
U1 0
U2 7
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2015
VL 20
IS 4
BP 968
EP 1005
DI 10.1007/s10664-014-9306-z
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CJ8MB
UT WOS:000355754500003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Jurkiewicz, J
   Nawrocki, J
   Ochodek, M
   Glowacki, T
AF Jurkiewicz, Jakub
   Nawrocki, Jerzy
   Ochodek, Miroslaw
   Glowacki, Tomasz
TI HAZOP-based identification of events in use cases An empirical study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Requirements engineering; Software quality; Use cases; HAZOP; Controlled
   experiment
AB Completeness is one of the main quality attributes of requirements specifications. If functional requirements are expressed as use cases, one can be interested in event completeness. A use case is event complete if it contains description of all the events that can happen when executing the use case. Missing events in any use case can lead to higher project costs. Thus, the question arises of what is a good method of identification of events in use cases and what accuracy and review speed one can expect from it. The goal of this study was to check if (1) HAZOP-based event identification is more effective than ad hoc review and (2) what is the review speed of these two approaches. Two controlled experiments were conducted in order to evaluate ad hoc approach and H4U method to event identification. The first experiment included 18 students, while the second experiment was conducted with the help of 82 professionals. In both cases, accuracy and review speed of the investigated methods were measured and analyzed. Moreover, the usage of HAZOP keywords was analyzed. In both experiments, a benchmark specification based on use cases was used. The first experiment with students showed that a HAZOP-based review is more effective in event identification than ad hoc review and this result is statistically significant. However, the reviewing speed of HAZOP-based reviews is lower. The second experiment with professionals confirmed these results. These experiments showed also that event completeness is hard to achieve. It on average ranged from 0.15 to 0.26. HAZOP-based identification of events in use cases is an useful alternative to ad hoc reviews. It can achieve higher event completeness at the cost of an increase in effort.
C1 [Jurkiewicz, Jakub; Nawrocki, Jerzy; Ochodek, Miroslaw; Glowacki, Tomasz] Poznan Univ Tech, Inst Comp Sci, PL-60965 Poznan, Poland.
C3 Poznan University of Technology
RP Jurkiewicz, J (corresponding author), Poznan Univ Tech, Inst Comp Sci, Ul Piotrowo 2, PL-60965 Poznan, Poland.
EM jakub.jurkiewicz@cs.put.poznan.pl; jnawrocki@cs.put.poznan.pl;
   mochodek@cs.put.poznan.pl; tglowacki@cs.put.poznan.pl
RI Nawrocki, Jerzy R/I-5690-2012; Ochodek, Mirosław/G-1505-2014
OI Glowacki, Tomasz/0000-0002-9294-1507
FU Polish National Science Center [DEC-2011/01/N/ST6/06794]; PUT [DS
   91-518]
FX This project was funded by Polish National Science Center based on the
   decision DEC-2011/01/N/ST6/06794 and by the PUT internal grant DS
   91-518.
CR Adolph S., 2003, PATTERNS EFFECTIVE U
   Alchimowicz B, 2011, LECT NOTEST COMPUTER, V4980, P20
   Alchimowicz B, 2010, COMPUT INFORM, V29, P27
   Alexander I, 2003, IEEE SOFTWARE, V20, P58, DOI 10.1109/MS.2003.1159030
   Allenby K, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P228
   Anda B., 2002, SEKE 02, P127
   [Anonymous], 2004, The rational unified process: an introduction
   [Anonymous], 2003, Software requirements
   Biffl S, 2003, IEEE T SOFTWARE ENG, V29, P385, DOI 10.1109/TSE.2003.1199069
   Carson Ronald S., 1998, P 8 ANN INT INCOSE S
   Carson RS, 1995, P NCOSE
   *CHEM IND ASS, 1992, GUID HAZ OP STUD
   Cockburn A, 2001, Writing effective use cases, the crystal collection for software professionals
   Cohen J., 1992, Current Directions in Psychological Science, V1, P98, DOI [DOI 10.1111/1467-8721.EP10768783, 10.1111/1467-8721.ep10768783]
   Cox K, 2004, J RES PRACT INF TECH, V36, P211
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   IEEE, 1998, 8301998 IEEE
   ISO, 2011, 250101011 ISO
   Jacobson I., 1985, CONCEPTS MODELING LA
   Jarzebowicz A, 2007, THESIS GDANSK U TECH
   LAWLEY HG, 1974, CHEM ENG PROG, V70, P45
   Leveson N.G., 1995, Safeware: System Safety and Computers
   Mar Brian W., 1994, P NCOSE
   Martin James, 1983, Managing the data-base environment
   Nawrocki J, 2006, LECT NOTES COMPUT SC, V3943, P266
   Neill CJ, 2003, IEEE SOFTWARE, V20, P40, DOI 10.1109/MS.2003.1241365
   Pumfrey D.J., 1999, The Principled Design of Computer System Safety Analyses
   Redmill F., 1999, SYSTEM SAFETY HAZOP
   SCHLECHTER W, 1995, INT J PRES VES PIP, V61, P479, DOI 10.1016/0308-0161(94)00123-Z
   Srivatanakul T, 2004, LECT NOTES COMPUT SC, V3225, P416
   Stålhane T, 2007, LECT NOTES COMPUT SC, V4801, P423
   Stålhane T, 2010, LECT NOTES COMPUT SC, V6051, P165, DOI 10.1007/978-3-642-13094-6_14
   Stark GE, 1999, J SOFTW MAINT-RES PR, V11, P293, DOI 10.1002/(SICI)1096-908X(199909/10)11:5<293::AID-SMR198>3.0.CO;2-R
   Wiegers Karl E., 2003, P 9 IEEE INT SOFTW M
   Zumbo BD, 1998, J ROY STAT SOC D-STA, V47, P385, DOI 10.1111/1467-9884.00139
NR 35
TC 11
Z9 12
U1 0
U2 20
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2015
VL 20
IS 1
BP 82
EP 109
DI 10.1007/s10664-013-9277-5
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AZ7EN
UT WOS:000348381800003
OA hybrid
DA 2024-07-18
ER

PT J
AU Gómez-Martínez, E
   Cabero, RG
   Merseguer, J
AF Gomez-Martinez, Elena
   Gonzalez Cabero, Rafael
   Merseguer, Jose
TI Performance assessment of an architecture with adaptative interfaces for
   people with special needs
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software architecture; Performance assessment; ICT for people with
   special needs; Industrial report; Performance patterns and antipatterns
ID PREDICTION; SYSTEM; MODEL; DESIGN
AB People in industrial societies carry more and more portable electronic devices (e. g., smartphone or console) with some kind of wireless connectivity support. Interaction with auto-discovered target devices present in the environment (e. g., the air conditioning of a hotel) is not so easy since devices may provide inaccessible user interfaces (e. g., in a foreign language that the user cannot understand). Scalability for multiple concurrent users and response times are still problems in this domain. In this paper, we assess an interoperable architecture, which enables interaction between people with some kind of special need and their environment. The assessment, based on performance patterns and antipatterns, tries to detect performance issues and also tries to enhance the architecture design for improving system performance. As a result of the assessment, the initial design changed substantially. We refactorized the design according to the Fast Path pattern and The Ramp antipattern. Moreover, resources were correctly allocated. Finally, the required response time was fulfilled in all system scenarios. For a specific scenario, response time was reduced from 60 seconds to less than 6 seconds.
C1 [Gomez-Martinez, Elena] Univ Politecn Madrid, Babel Grp, Fac Informat, Madrid, Spain.
   [Gonzalez Cabero, Rafael] Univ Politecn Madrid, Ontol Engn Grp, Madrid, Spain.
   [Merseguer, Jose] Univ Zaragoza, Dept Informat & Ingn Sistemas, Zaragoza, Spain.
C3 Universidad Politecnica de Madrid; Universidad Politecnica de Madrid;
   University of Zaragoza
RP Gómez-Martínez, E (corresponding author), Univ Politecn Madrid, Babel Grp, Fac Informat, Madrid, Spain.
EM elena.gomez@fi.upm.es; rgonza@fi.upm.es; jmerse@unizar.es
RI Merseguer, Jose/A-6028-2012
OI Merseguer, Jose/0000-0001-5538-3553; Gomez-Martinez,
   Elena/0000-0002-7753-3345
FU CDTI (Industrial Technology Development Centre), under the CENIT
   (National Strategic Technical Research Consortia) Programme, in the
   framework of the Spanish government's INGE-NIO initiative; CICYT
   [DPI2010-20413]; GISED; Aragonese Government [T27]; European Social
   Fund; Austrian Science Fund (FWF) [T27] Funding Source: Austrian Science
   Fund (FWF)
FX The research described in this paper arises from a Spanish research
   project called INREDIS (INterfaces for RElations between Environment and
   people with DISabilities). INREDIS is led by Technosite and funded by
   CDTI (Industrial Technology Development Centre), under the CENIT
   (National Strategic Technical Research Consortia) Programme, in the
   framework of the Spanish government's INGE-NIO 2010 initiative. The
   opinions expressed in this paper are those of the authors and are not
   necessarily those of the INREDIS project's partners or of the CDTI.;
   Jose Merseguer has been supported by CICYT DPI2010-20413 and GISED
   (partially co-financed by the Aragonese Government (Ref. T27) and the
   European Social Fund).
CR Abrams M, 1999, COMPUT NETW, V31, P1695, DOI 10.1016/S1389-1286(99)00044-4
   Alvargonzalez M, 2010, P 5 JORN CIENT TEN S
   [Anonymous], 2004, Enterprise service bus
   [Anonymous], 2000, PATTERN ORIENTED SOF
   [Anonymous], 2009, P 10 INT WORK C AR 2
   [Anonymous], UML PROF MOD AN REAL
   Bass L., 2005, SOFTWARE ARCHITECTUR
   Becker S, 2009, J SYST SOFTWARE, V82, P3, DOI 10.1016/j.jss.2008.03.066
   Bergenti F, 2000, 12 INT C SOFTW ENG K, P336
   Bernardi S, 2007, J SYST SOFTWARE, V80, P1843, DOI 10.1016/j.jss.2007.02.029
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Card S. K., 1991, Human Factors in Computing Systems. Reaching Through Technology. CHI '91. Conference Proceedings, P181, DOI 10.1145/108844.108874
   Catalan E., 2010, TECHNICAL REPORT
   Chi CF, 2012, IEEE T NEUR SYS REH, V20, P564, DOI 10.1109/TNSRE.2012.2193419
   CHIOLA G, 1995, PERFORM EVALUATION, V24, P47, DOI 10.1016/0166-5316(95)00008-L
   Cortellessa V, 2012, J SOFTWARE SYSTEMS M, P1
   Cortellessa V, 2011, MODEL-BASED SOFTWARE PERFORMANCE ANALYSIS, P1, DOI 10.1007/978-3-642-13621-4
   Cortés U, 2003, AI COMMUN, V16, P193
   de Gooijer T., 2012, 3 ACM SPEC INT C PER, P205
   Distefano S, 2011, IEEE T SOFTWARE ENG, V37, P65, DOI 10.1109/TSE.2010.10
   Dugan R.F., 2002, 3 INT WORKSH SOFTW P, P10
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Gimenez R., 2012, 2012 IEEE Workshops of International Conference on Advanced Information Networking and Applications (WAINA), P714, DOI 10.1109/WAINA.2012.191
   Gomez-Martinez E., 2007, P 6 INT WORKSH SOFTW, P181
   Gomez-Martinez E, 2013, INTERACTING IN UNPUB
   Gómez-Martínez E, 2006, LECT NOTES COMPUT SC, V4024, P401
   Gómez-Martínez E, 2010, LECT NOTES COMPUT SC, V6342, P160
   Gonzalez-Cabero R, 2010, P 4 INT S UB COMP AM, P315
   Grand M., 2001, Java Enterprise Design Patterns: Patterns in Java Volume, V3
   GRAND M, 1998, PATTERNS JAVA CATALO, V1
   Hermanns H, 2002, THEOR COMPUT SCI, V274, P43, DOI 10.1016/S0304-3975(00)00305-4
   Huber N., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P1, DOI 10.1145/1810295.1810297
   INREDIS, 2010, DEL 78 2 1 FIN GUID
   International Standard Organization, 2009, 247562009 ISO
   International Standard Organization, 2011, 99992011 ISO
   Isa MA, 2011, COMM COM INF SC, V181, P764
   Jin Y, 2007, PROC INT CONF SOFTW, P540
   KADOUCHE R., 2009, International journal of smart home, V3, P13
   Kauppi T, 2003, 512 VTT TECHN RES CT
   Kounev S, 2006, IEEE T SOFTWARE ENG, V32, P486, DOI 10.1109/TSE.2006.69
   Koziolek Anne, 2011, JOINT ACM SIGSOFT C, P33
   Koziolek H, 2012, EMPIR SOFTW ENG, P1
   Lazowska E. D., 1984, COMPUTER SYSTEM ANAL
   Lea Doug, 1999, Design Principles and Patterns, V2nd
   Levandoski JJ, 2011, PROC VLDB ENDOW, V4, P911
   Liang Senlin., 2009, PROC 18 INT C WORLD, P601, DOI [10.1145/1526709.1526790, DOI 10.1145/1526709.1526790]
   Liu Y, 2005, IEEE T SOFTWARE ENG, V31, P928, DOI 10.1109/TSE.2005.127
   Liu Y, 2007, P INT COMP SOFTW APP, P327
   Marsan M.A., 1995, MODELLING GEN STOCHA
   Miller R., 1968, AFIPS Fall Joint Computer Conference, P267, DOI [10.1145/1476589.1476628, DOI 10.1145/1476589.1476628]
   Murua A., 2011, 2011 Federated Conference on Computer Science and Information Systems (FedCSIS), P985
   Petriu DC, 2002, LECT NOTES COMPUT SC, V2324, P141
   Phanouriou C., 2000, UIML DEVICE INDEPEND
   Pooley R. J., 2010, Proceedings of the 2010 17th IEEE International Conference and Workshops on Engineering of Computer-Based Systems (ECBS 2010), P79, DOI 10.1109/ECBS.2010.16
   POUS M, 2012, P IEEE CONS COMM NET, P404
   Prud'hommeaux Eric., 2006, SPARQL Query Language for RDF
   QoSA, 2005, INT ACM SIGS C QUAL
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sainz F, 2011, LNCS, V6949
   Sereno M, 1997, PERFORM EVALUATION, V29, P35, DOI 10.1016/S0166-5316(96)00003-X
   SMITH C, 2002, PRACTICAL GUIDE CREA
   Smith C., 2001, 27 INT C COMP MEAS G, P797
   Smith C. U., 2000, Proceedings Second International Workshop on Software and Performance. WOSP2000, P127, DOI 10.1145/350391.350420
   Smith C.U., 1990, Performance engineering of software systems, VSeventh
   Smith Connie U., 2003, 29 INT C COMP MEAS G, P717
   Smith Connie U., 2002, International Computer Measurement Group Conference
   Stephanidis C, 2001, USER MODEL USER-ADAP, V11, P159, DOI 10.1023/A:1011144232235
   Tribastone M, 2008, INT CONF QUANT EVAL, P205, DOI 10.1109/QEST.2008.18
   UML-SPT, 2005, UML PROF SCHED PERF
   United Nations Educational Scientific and Cultural Organization (UNESCO), 2018, INT TECHN GUID SEX E
   W3C, 2012, OWL
   Williams L. G., 2002, Proceedings of the 3rd international workshop on Software and performance, WOSP'02, P179
   Woodcock A, 2012, WORK, V41, P1381, DOI 10.3233/WOR-2012-0328-1381
   WOODSIDE CM, 1995, IEEE T COMPUT, V44, P20, DOI 10.1109/12.368012
   Woodside M., 2005, P 5 INT WORKSH SOFTW, P1, DOI [10.1145/1071021.1071022, 10.1145, DOI 10.1145/1071021.1071022]
   Woodside M, 2013, SOFTW SYST IN PRESS
   Woodside M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P171, DOI 10.1109/FOSE.2007.32
   Zimmermann G, 2007, LECT NOTES COMPUT SC, V4551, P1040
NR 78
TC 6
Z9 6
U1 0
U2 10
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2014
VL 19
IS 6
BP 1967
EP 2018
DI 10.1007/s10664-013-9297-1
PG 52
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AR9QU
UT WOS:000343910700013
OA Green Accepted
DA 2024-07-18
ER

PT J
AU D'Ambros, M
   Lanza, M
   Robbes, R
AF D'Ambros, Marco
   Lanza, Michele
   Robbes, Romain
TI Evaluating defect prediction approaches: a benchmark and an extensive
   comparison
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Defect prediction; Source code metrics; Change metrics
ID FAULT PREDICTION; SOFTWARE; METRICS; VALIDATION; COMPLEXITY; FRAMEWORK;
   FAILURES
AB Reliably predicting software defects is one of the holy grails of software engineering. Researchers have devised and implemented a plethora of defect/bug prediction approaches varying in terms of accuracy, complexity and the input data they require. However, the absence of an established benchmark makes it hard, if not impossible, to compare approaches. We present a benchmark for defect prediction, in the form of a publicly available dataset consisting of several software systems, and provide an extensive comparison of well-known bug prediction approaches, together with novel approaches we devised. We evaluate the performance of the approaches using different performance indicators: classification of entities as defect-prone or not, ranking of the entities, with and without taking into account the effort to review an entity. We performed three sets of experiments aimed at (1) comparing the approaches across different systems, (2) testing whether the differences in performance are statistically significant, and (3) investigating the stability of approaches across different learners. Our results indicate that, while some approaches perform better than others in a statistically significant manner, external validity in defect prediction is still an open problem, as generalizing results to different contexts/learners proved to be a partially unsuccessful endeavor.
C1 [D'Ambros, Marco; Lanza, Michele] Univ Lugano, REVEAL Fac Informat, CH-6900 Lugano, Switzerland.
   [Robbes, Romain] Univ Chile, Comp Sci Dept DCC, PLEIAD Lab, Santiago, Chile.
C3 Universita della Svizzera Italiana; Universidad de Chile
RP D'Ambros, M (corresponding author), Univ Lugano, REVEAL Fac Informat, CH-6900 Lugano, Switzerland.
EM marco.dambros@usi.ch; michele.lanza@usi.ch; rrobbes@dcc.uchile.cl
RI Lanza, Michele/JNQ-9470-2023; Robbes, Romain/H-3771-2013
OI Lanza, Michele/0000-0003-4391-0197; Robbes, Romain/0000-0003-4569-6868
FU Swiss National Science foundation (SNF) [132175]
FX We acknowledge the financial support of the Swiss National Science
   foundation for the project "SOSYA" (SNF Project No. 132175).
CR [Anonymous], 2007, PROMISE 07, DOI DOI 10.1109/PROMISE.2007.10
   Antoniol G, 2008, P 2008 C CTR ADV STU, P304
   Arisholm E., 2006, ISESE 06 P 2006 ACMI, P8
   Arisholm E, 2010, J SYST SOFTWARE, V83, P2, DOI 10.1016/j.jss.2009.06.055
   ARNAOUDOVA V., 2010, Proceedings of the International Conference on Software Maintenance (ICSM) - ERA Track, P1
   Bacchelli A, 2010, LECT NOTES COMPUT SC, V6013, P59
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Bernstein A., 2007, 9 INT WORKSHOP PRINC, P11
   Binkley AB, 1998, PROC INT CONF SOFTW, P452, DOI 10.1109/ICSE.1998.671604
   Bird C, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P121, DOI 10.1145/1595696.1595716
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P91, DOI 10.1109/32.748920
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   D'Ambros Marco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P31, DOI 10.1109/MSR.2010.5463279
   D'Ambros M, 2010, SCI COMPUT PROGRAM, V75, P276, DOI 10.1016/j.scico.2009.07.005
   Demeyer S., 2001, FAMIX 2 1 FAMOOS INF
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   Ducasse S., 2005, Proceedings of the 10th European Software Engineering Conference Held Jointly with 13th ACM SIGSOFT International Symposium on Foundations of Software Engineering, ESEC/FSE-13, P99
   El Emam K, 2001, J SYST SOFTWARE, V56, P63, DOI 10.1016/S0164-1212(00)00086-8
   Fenton NE, 2000, IEEE T SOFTWARE ENG, V26, P797, DOI 10.1109/32.879815
   Fischer M, 2003, PROC IEEE INT CONF S, P23, DOI 10.1109/ICSM.2003.1235403
   Foss T, 2003, IEEE T SOFTWARE ENG, V29, P985, DOI 10.1109/TSE.2003.1245300
   Friedman M, 1937, J AM STAT ASSOC, V32, P675, DOI 10.2307/2279372
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Gunes Koru A., 2007, PROMISE 07, P10, DOI DOI 10.1109/PROMISE.2007.9
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Hall M. A., 2000, P 17 INT C MACH LEAR, P359, DOI DOI 10.5555/645529.657793
   Hall MA, 2003, IEEE T KNOWL DATA EN, V15, P1437, DOI 10.1109/TKDE.2003.1245283
   Hassan AE, 2005, PROC IEEE INT CONF S, P263
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Ho YC, 2002, J OPTIMIZ THEORY APP, V115, P549, DOI 10.1023/A:1021251113462
   Jackson E.J., 2003, USERS GUIDE PRINCIPA
   Jiang Y, 2008, EMPIR SOFTW ENG, V13, P561, DOI 10.1007/s10664-008-9079-3
   Juristo N, 2009, INT SYMP EMP SOFTWAR, P357
   Kamei Y., 2010, Proceedings of the 26th International Conference on Software Maintenance, P1, DOI 10.1109/ICSM.2010.5609530
   Khoshgoftaar T. M., 1999, Empirical Software Engineering, V4, P159, DOI 10.1023/A:1009876418873
   Khoshgoftaar TM, 1996, SEVENTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P364, DOI 10.1109/ISSRE.1996.558896
   Kim S, 2007, PROC INT CONF SOFTW, P489
   Kira K, 1992, P 9 INT WORKSH MACH, P249
   Kohavi R, 1997, ARTIF INTELL, V97, P273, DOI 10.1016/S0004-3702(97)00043-X
   Kollmann R, 2002, NINTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P22, DOI 10.1109/WCRE.2002.1173061
   Kononenko I., 1994, EUR C MACH LEARN, V94, P171, DOI DOI 10.1007/3-540-57868-4_57
   Koru AG, 2008, EMPIR SOFTW ENG, V13, P473, DOI 10.1007/s10664-008-9080-x
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Marcus A, 2008, IEEE T SOFTWARE ENG, V34, P287, DOI 10.1109/TSE.2007.70768
   Mende T., 2009, P 5 INT C PREDICTOR, P1, DOI [10.1145/1540438.1540448, DOI 10.1145/1540438.1540448]
   Mende T, 2010, EUR CON SFTWR MTNCE, P107, DOI 10.1109/CSMR.2010.18
   Mende Thilo., 2010, P 6 INT C PREDICTIVE, P5
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Menzies T, 2010, AUTOMAT SOFTW ENG, V17, P375, DOI 10.1007/s10515-010-0069-5
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Myrtveit I, 2005, IEEE T SOFTWARE ENG, V31, P380, DOI 10.1109/TSE.2005.58
   Nagappan N, 2005, PROC INT CONF SOFTW, P580, DOI 10.1145/1062455.1062558
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Neuhaus S, 2007, CCS'07: PROCEEDINGS OF THE 14TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P529
   Nikora AP, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P338, DOI 10.1109/METRIC.2003.1232479
   Ohlsson N, 1996, IEEE T SOFTWARE ENG, V22, P886, DOI 10.1109/32.553637
   Ostrand T. J., 2002, Software Engineering Notes, V27, P55, DOI 10.1145/566171.566181
   Ostrand T.J., 2007, Proceedings of the 2007 international symposium on Software testing and analysis (ISSTA '07), P219
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   Ostrand TJ., 2004, Proceedings of the 2004 ACM SIGSOFT International Symposium on Software Testing and Analysis, ISSTA '04, V29, P86, DOI [DOI 10.1145/1013886.1007524, 10.1145/1013886.1007524]
   Pinzger Martin, 2008, P 16 ACM SIGSOFT INT, P2, DOI DOI 10.1145/1453101.1453105
   Robles Gregorio, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P171, DOI 10.1109/MSR.2010.5463348
   Shin Y, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P61, DOI 10.1109/MSR.2009.5069481
   Sim SE, 2003, PROC INT CONF SOFTW, P74, DOI 10.1109/ICSE.2003.1201189
   Subramanyam R, 2003, IEEE T SOFTWARE ENG, V29, P297, DOI 10.1109/TSE.2003.1191795
   Turhan B, 2010, LECT NOTES COMPUT SC, V6156, P116, DOI 10.1007/978-3-642-13792-1_11
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Wolf T, 2009, PROC INT CONF SOFTW, P1, DOI 10.1109/ICSE.2009.5070503
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
   Zimmermann T, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P531, DOI 10.1145/1368088.1368161
NR 70
TC 379
Z9 410
U1 2
U2 54
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2012
VL 17
IS 4-5
BP 531
EP 577
DI 10.1007/s10664-011-9173-9
PG 47
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 943WF
UT WOS:000304155700008
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Hackbarth, RL
   Mockus, A
   Palframan, JD
   Weiss, DM
AF Hackbarth, Randy L.
   Mockus, Audris
   Palframan, John Douglas
   Weiss, David M.
TI Assessing the state of software in a large enterprise
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software development; Software engineering; Software quality; Software
   process improvement; Software practices; Software assessments; Software
   metrics; R&D assessment; Distributed and offshore development; Iterative
   development; Code growth; R&D domain expertise; R&D productivity; Agile
   Development
AB To be relevant to the goals of an enterprise, an industrial software engineering research organization must identify problems of interest to, and find solutions that have an impact on, the software development organizations within the company. Using a systematic measurement program both to identify the problems and assess the impact of solutions is key to satisfying this need. Avaya has had such a program in place for about seven years. Every year we produce an annual report known as the State of Software in Avaya that describes software development trends throughout the company and that contains prioritized recommendations for improving Avaya's software development capabilities. We start by identifying the goals of the enterprise and use the goal-question-metric approach to identify the measures to compute. The result is insight into the enterprise's problems in software development, recommendations for improving the development process, and problems that require research to solve. We will illustrate the process with examples from the Software Technology Research Department in Avaya Labs whose purpose is to improve the state of software development and know it. "Know it" means that improvement should be subjectively evident and objectively quantifiable. "Know it" also means that one must be skilled at identifying the data sources, performing the appropriate analyses to answer the questions of interest, and validating that the data are accurate and appropriate for the purpose. Examples will include how and why we developed a measure of software quality that appeals to customers, how and why we are studying the effectiveness of distributed software development, and how and why we are helping development organizations to adopt iterative development methods. We will also discuss how we keep the company and the department apprised of the current strengths and weaknesses of software development in Avaya through the publication of the annual State of Software in Avaya Report. Our purpose is both to provide a model for assessment that others may emulate, based on seven years of experience, and to spotlight analyses and conclusions that we feel are common to software development today.
C1 [Mockus, Audris; Palframan, John Douglas] Avaya Labs, Basking Ridge, NJ 07920 USA.
   [Hackbarth, Randy L.] Avaya Labs, Western Springs, IL 60558 USA.
   [Weiss, David M.] Iowa State Univ, Dept Comp Sci, Ames, IA 50011 USA.
C3 Avaya; Avaya; Iowa State University
RP Palframan, JD (corresponding author), Avaya Labs, Basking Ridge, NJ 07920 USA.
EM randyh@avaya.com; audris@avaya.com; palframan@avaya.com;
   weiss@cs.iastate.edu
RI Mockus, Audris/AEY-3361-2022
FU ARC program and Christian Von Reventlow
FX We especially thank David Bennett, Neil Harrison, Joe Maranzano, and
   John Payseur for their contributions to early assessments, Trung
   Dinh-Trong for his contributions to recent reports especially in the
   areas of test automation and code coverage, Zhou Minghui for her recent
   work in Avaya on developer productivity, Evelyn Moritz for her analyses
   and feedback to the report, Pierre Osborne for his leadership in
   establishing and supporting Avaya's R&D data warehouse, and Jon Bentley
   for his careful and helpful reviews of the reports. Thanks to Ravi Sethi
   for his executive sponsorship and support of the ARC program and
   Christian Von Reventlow for his enthusiastic assistance in establishing
   deployment programs in partnership with business and R& D leaders.
CR Akao Y., 1990, QUALITY FUNCTION DEP
   [Anonymous], P 10 INT S SOFTW MET
   APPLETON B, 2003, SOFTWARE CONFIGURATI
   Basili V., 1992, International Conference on Software Engineering, P370, DOI 10.1145/143062.143154
   BASILI VR, 1984, IEEE T SOFTWARE ENG, V10, P728, DOI 10.1109/TSE.1984.5010301
   BASILI VR, 1985, IEEE T SOFT ENG, V11, P157
   CHANG HF, 2008, MINING SOFTWARE REPO
   CLEMENTS P, 1983, 4843 NRL
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Grady R.B., 1987, SOFTWARE METRICS
   Maranzano JF, 2005, IEEE SOFTWARE, V22, P34, DOI 10.1109/MS.2005.28
   MCCONNEL S, 1996, RAPID DEV
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Mockus A, 2001, IEEE SOFTWARE, V18, P30, DOI 10.1109/52.914737
   Mockus A., 2007, ICSE 07 INT WORKSH E
   Mockus A, 2008, 2008 INT C SOFTW ENG, P733
   Rifkin S, 2001, IEEE SOFTWARE, V18, P112, DOI 10.1109/MS.2001.936229
   Stokes D. E., 2011, PASTEURS QUADRANT BA
   Van Solingen Rini, 1999, The Goal/ Question/ Metric Method: a practical guide for quality improvement of software development
   WALSTON CE, 1977, IBM SYST J, V16, P54, DOI 10.1147/sj.161.0054
   WEISS D, 2002, INT C SOFTW ENG MAY
   Zhou M., 2009, ICSE WORKSH SOC CONG
   2000, BALL LABS TECHNI APR, V5
NR 23
TC 3
Z9 3
U1 0
U2 12
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2010
VL 15
IS 3
BP 219
EP 249
DI 10.1007/s10664-009-9120-1
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 580WD
UT WOS:000276480300001
DA 2024-07-18
ER

PT J
AU Kitchenham, B
   Al-Khilidar, H
   Babar, MA
   Berry, M
   Cox, K
   Keung, J
   Kurniawati, F
   Staples, M
   Zhang, H
   Zhu, LM
AF Kitchenham, Barbara
   Al-Khilidar, Hiyam
   Babar, Muhammed Ali
   Berry, Mike
   Cox, Karl
   Keung, Jacky
   Kurniawati, Felicia
   Staples, Mark
   Zhang, He
   Zhu, Liming
TI Evaluating guidelines for reporting empirical software engineering
   studies
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 5th International Symposium on Empirical Software Engineering
CY 2006
CL Rio de Janeiro, BRAZIL
DE controlled experiments; software engineering; guidelines;
   perspective-based reading; checklist-based reviews
AB Background Several researchers have criticized the standards of performing and reporting empirical studies in software engineering. In order to address this problem, Jedlitschka and Pfahl have produced reporting guidelines for controlled experiments in software engineering. They pointed out that their guidelines needed evaluation. We agree that guidelines need to be evaluated before they can be widely adopted.
   Aim The aim of this paper is to present the method we used to evaluate the guidelines and report the results of our evaluation exercise. We suggest our evaluation process may be of more general use if reporting guidelines for other types of empirical study are developed.
   Method We used a reading method inspired by perspective-based and checklist-based reviews to perform a theoretical evaluation of the guidelines. The perspectives used were: Researcher, Practitioner/Consultant, Meta-analyst, Replicator, Reviewer and Author. Apart from the Author perspective, the reviews were based on a set of questions derived by brainstorming. A separate review was performed for each perspective. The review using the Author perspective considered each section of the guidelines sequentially.
   Results The reviews detected 44 issues where the guidelines would benefit from amendment or clarification and 8 defects.
   Conclusions Reporting guidelines need to specify what information goes into what section and avoid excessive duplication. The current guidelines need to be revised and then subjected to further theoretical and empirical validation. Perspective-based checklists are a useful validation method but the practitioner/consultant perspective presents difficulties.
   Categories and Subject Descriptors K.6.3 [Software Engineering]: Software Management-Software process.
   General Terms Management, Experimentation.
C1 [Kitchenham, Barbara] Univ Keele, Sch Comp & Math, Keele ST5 5BG, Staffs, England.
   [Al-Khilidar, Hiyam; Berry, Mike; Keung, Jacky; Zhang, He] Univ New S Wales, Sch Engn & Comp Sci, Sydney, NSW 2052, Australia.
   [Babar, Muhammed Ali] Univ Limerick, Irish Software Engn Res Ctr, Limerick, Ireland.
   [Al-Khilidar, Hiyam; Berry, Mike; Cox, Karl; Keung, Jacky; Kurniawati, Felicia; Staples, Mark; Zhang, He; Zhu, Liming] Natl ICT Australia Ltd, Sydney, NSW 1466, Australia.
C3 Keele University; University of New South Wales Sydney; University of
   Limerick; NICTA
RP Kitchenham, B (corresponding author), Univ Keele, Sch Comp & Math, Keele ST5 5BG, Staffs, England.
EM Barbara.Kitchenham@cs.keele.ac.uk; malibaba@lero.ie;
   karl.cox@nicta.com.au; jkeung@cse.unsw.edu.au;
   felicia.kurniawata@nicta.com; mark.staples@nicta.com.au;
   liming.zhu@nicta.com.au
RI Keung, Jacky/X-4693-2019; Kitchenham, Barbara/AAL-4311-2020; ZHANG,
   HE/E-5977-2012; Zhu, Li/GXH-9801-2022; Keung, Jacky/ABA-7089-2020
OI Keung, Jacky/0000-0002-3803-9600; Kitchenham,
   Barbara/0000-0002-6134-8460; Zhu, Liming/0000-0001-5839-3765;
   Al-Kilidar, Hiyam/0000-0002-4145-8486
CR ABDELNABI Z, 2004, P ISESE 04
   ABRAHAO S, 2004, P ISESE 04
   Dybå T, 2006, INFORM SOFTWARE TECH, V48, P745, DOI 10.1016/j.infsof.2005.08.009
   FOREST S, 2000, IEEE COMPUTER    JUL, P73
   Harris P., 2002, DESIGNING REPORTING
   Hartley J, 2004, J MED LIBR ASSOC, V92, P368
   JAN V, 2004, P ISESE 04
   JEDLITSCHKA A, 2005, IESE0355E
   Kitchenham B., 2004, PROCEDURES PERFORMIN, V33, P1
   KITCHENHAM B, 2006, ISES06
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Moher D, 2001, LANCET, V357, P1191, DOI 10.1016/S0140-6736(00)04337-3
   Pickard LM, 1998, INFORM SOFTWARE TECH, V40, P811, DOI 10.1016/S0950-5849(98)00101-3
   SCHROEDER PJ, 2004, P ISESE 04
   SJOBERG DIK, 2005, IEEE T SOFTW ENG SEP, P733
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   WOHLIN C, 2003, LECT NOTES EMPIRICAL
NR 17
TC 69
Z9 80
U1 0
U2 10
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2008
VL 13
IS 1
BP 97
EP 121
DI 10.1007/s10664-007-9053-5
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 245WT
UT WOS:000251970200005
DA 2024-07-18
ER

PT J
AU Sinha, A
   Smidts, C
AF Sinha, A
   Smidts, C
TI An experimental evaluation of a higher-ordered-typed-functional
   specification-based test-generation technique
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE empirical study; controlled experiment; EFSM software model; software
   test automation; functional specification language
AB HOTTest is a model based test automation technique of software systems based on models of the system described using HaskellDB. HaskellDB is an embedded domain specific language derived from Haskell. HOTTest enforces a systematic abstraction process and exploits system invariants for automatically producing test cases for domain specific requirements. Use of functional languages for system modeling is a new concept and hence HOTTest is subject to concerns of usability, like any other new technique. Also, the syntax and the declarative style of Haskell based languages make them difficult to learn. Similar concerns can be raised for HOTTest as it shares the same syntax with Haskell. In this paper we describe an experiment designed to study the usability of HOTTest and to compare it with existing model based test design techniques. The results show that HOTTest is more usable than the traditional technique and demonstrate that the test suites produced by HOTTest are more effective and efficient than those generated using the traditional model based test design technique.
C1 IBM Corp, TJ Watson Res Ctr, Hawthorne, NY USA.
   Univ Maryland, Dept Mech Engn, Ctr Risk & Reliabil Engn, College Pk, MD 20742 USA.
C3 International Business Machines (IBM); University System of Maryland;
   University of Maryland College Park
RP Sinha, A (corresponding author), IBM Corp, TJ Watson Res Ctr, Hawthorne, NY USA.
EM avisinha@us.ibm.com
OI Smidts, Carol/0000-0001-7867-023X
CR [Anonymous], 1999, Haskell: The Craft of Functional Programming
   [Anonymous], P 12 C IEEE COMP COM
   Arango G., 1989, Proceedings of Fifth International Workshop on Software Specification and Design (Cat. No.89CH2717-7), P152, DOI 10.1145/75199.75224
   BARNETT M, 2003, P 1 EUR C MOD DRIV S
   Basili Victor R., 1995, Software Quality Assurance and Measurement: Worldwide Perspective, P21
   BJESSE P, 1998, LAVA HARDWARE DESIGN
   Campbell DT., 1963, EXPT QUASIEXPERIMENT
   CHAAR JK, 1993, IEEE T SOFTWARE ENG, V19, P1055, DOI 10.1109/32.256853
   CHAYS D, 2000, P INT S SOFTW TEST A, P147
   COHEN J, 1992, PSYCHOL BULL, V112, P155, DOI 10.1037/0033-2909.112.1.155
   Dick J., 1993, FME'93: Industrial-Strength Formal Methods. First International Symposium of Formal Methods Europe Proceedings, P268, DOI 10.1007/BFb0024651
   Dssouli R, 1999, COMPUT NETW, V31, P1835, DOI 10.1016/S1389-1286(99)00063-8
   *EMP INC, 1999, TEST MAST US GUID
   Field A., 2003, How to Design and Report Experiments
   *GROV CONST, 2002, TEST TOOL INF
   HALL PAV, 1991, INFORM SOFTWARE TECH, V33, P47, DOI 10.1016/0950-5849(91)90023-5
   HUBER JT, 1999, EFFICIENCY EFFECTIVE
   Hudak Paul., 2000, The Haskell school of expression: learning functional programming through multimedia
   Hughes AnnJ., 1971, STAT FDN ANAL
   *IBM CORP, 2004, RAT XDE TEST US GUID
   *IEEE STAND, 1984, 830 IEEE STAND
   Jagadeesan LJ, 1997, PROC INT CONF SOFTW, P525, DOI 10.1145/253228.253435
   JOHN BE, 1996, EVALUATING USABILITY
   Leijen D, 1999, USENIX ASSOCIATION PROCEEDINGS OF THE 2ND CONFERENCE ON DOMAIN-SPECIFIC LANGUAGES (DSL'99), P109, DOI 10.1145/331963.331977
   Memon AM, 2001, IEEE T SOFTWARE ENG, V27, P144, DOI 10.1109/32.908959
   *MERC INT INC, 2001, WINRUNNER US GUID VE
   Peters N, 1998, NEUROPATH APPL NEURO, V24, P3
   *SEG SOFTW INC, 2002, SILKT US GUID VERS 6
   Sinha A, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P181
   SINHA A, 2005, THESIS U MARYLAND
   STARK GE, 2001, EVALUATION SOFTWARE
   STOCKS PA, 1991, P 6 AUSTR SOFTW ENG, P327
   THIEMANN P, EMBEDDED DOMAIN SPEC
   TRETMANS J, 1999, P EUROSTAR 99 7 EUR, P8
   United Nations Educational Scientific and Cultural Organization (UNESCO), 2018, INT TECHN GUID SEX E
   van Deursen A, 2000, ACM SIGPLAN NOTICES, V35, P26, DOI 10.1145/352029.352035
   VAYSBURG B, 2002, P 2002 ACM SIGSOFT I, P00107
   Williams C., 2001, P WORKSH PRACT UML B, P270
   [No title captured]
NR 39
TC 11
Z9 13
U1 0
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2006
VL 11
IS 2
BP 173
EP 202
DI 10.1007/s10664-006-6401-9
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 020RV
UT WOS:000235928900001
DA 2024-07-18
ER

PT J
AU Lethbridge, TC
   Sim, SE
   Singer, J
AF Lethbridge, TC
   Sim, SE
   Singer, J
TI Studying software engineers: Data collection techniques for software
   field studies
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE field studies; work practices; empirical software engineering
ID PROCESS IMPROVEMENT; CODE; COMMUNICATION; BENEFITS; DESIGN
AB Software engineering is an intensively people-oriented activity, yet too little is known about how designers, maintainers, requirements analysts and all other types of software engineers perform their work. In order to improve software engineering tools and practice, it is therefore essential to conduct field studies, i.e. to study real practitioners as they solve real problems. To do so effectively, however, requires an understanding of the techniques most suited to each type of field study task. In this paper, we provide a taxonomy of techniques, focusing on those for data collection. The taxonomy is organized according to the degree of human intervention each requires. For each technique, we provide examples from the literature, an analysis of some of its advantages and disadvantages, and a discussion of how to use it effectively. We also briefly talk about field study design in general, and data analysis.
C1 Univ Ottawa, Sch Informat Technol & Engn, Ottawa, ON K1N 6N5, Canada.
   Univ Calif Irvine, Dept Informat, Irvine, CA 92697 USA.
   Natl Res Council Canada, Inst Informat Technol, Ottawa, ON K1A 0R6, Canada.
C3 University of Ottawa; University of California System; University of
   California Irvine; National Research Council Canada
RP Univ Ottawa, Sch Informat Technol & Engn, Ottawa, ON K1N 6N5, Canada.
EM tcl@site.uottawa.ca; ses@ics.uci.edu; janice.singer@nrc-cnrc.gc.ca
RI Lethbridge, Timothy/I-3199-2014; Fuglerud, Kristin Skeide/A-2815-2011
OI Lethbridge, Timothy/0000-0001-9410-2056; 
CR [Anonymous], P 2 INT C SOFTW PROC
   Anquetil N, 1999, J SOFTW MAINT-RES PR, V11, P201, DOI 10.1002/(SICI)1096-908X(199905/06)11:3<201::AID-SMR192>3.0.CO;2-1
   Baddoo N, 2003, J SYST SOFTWARE, V66, P23, DOI 10.1016/S0164-1212(02)00060-2
   Baddoo N, 2002, J SYST SOFTWARE, V62, P85, DOI 10.1016/S0164-1212(01)00125-X
   BASILI VR, 1992, CSTR2956 U MAR DEP C
   Beecham S, 2003, EMPIR SOFTW ENG, V8, P7, DOI 10.1023/A:1021764731148
   Bellotti V., 1996, COMPUTER SUPPORTED C, P209, DOI DOI 10.1145/240080.240256
   Berlin L. M., 1993, Empirical Studies of Programmers: Fifth Workshop, P6
   Bratthall L., 2002, Empirical Software Engineering, V7, P9, DOI 10.1023/A:1014866909191
   Briand L., 1996, Empirical Software Engineering, V1, P61, DOI 10.1007/BF00125812
   BUCKLEY J, 1997, INT WORKSH EMP STUD, P109
   Budgen D, 2003, J SYST SOFTWARE, V67, P55, DOI 10.1016/S0164-1212(02)00088-2
   Chi MTH, 1997, J LEARN SCI, V6, P271, DOI 10.1207/s15327809jls0603_1
   CURTIS B, 1988, COMMUN ACM, V31, P1268, DOI 10.1145/50087.50089
   Damian D, 2004, EMPIR SOFTW ENG, V9, P45, DOI 10.1023/B:EMSE.0000013514.19567.ad
   Delbecq A.L., 1975, Group techniques for program planning: A guide to nominal group and Delphi process
   DeVaus D., 1996, SURVEYS SOCIAL RES
   DRAPER S, 2004, HAWTHORNE EFFECT
   Ericcson K.A., 1984, PROTOCOL ANAL VERBAL
   Foddy W., 1994, CONSTRUCTING QUESTIO, DOI DOI 10.1016/S0031-9406(10)61110-8
   HASSAN A, 2004, P ICSE 2004 INT C SO, P23
   Herbsleb JD, 2003, IEEE T SOFTWARE ENG, V29, P481, DOI 10.1109/TSE.2003.1205177
   Hungerford BC, 2004, IEEE T SOFTWARE ENG, V30, P82, DOI 10.1109/TSE.2004.1265814
   Iivari J, 1996, COMMUN ACM, V39, P94, DOI 10.1145/236156.236183
   JICK TD, 1979, ADMIN SCI QUART, V24, P602, DOI 10.2307/2392366
   Jordan B, 1995, J LEARN SCI, V4, P39, DOI 10.1207/s15327809jls0401_2
   JORGENSEN M, 1995, J SOFTW MAINT-RES PR, V7, P27, DOI 10.1002/smr.4360070104
   Keller R. K., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P226, DOI 10.1109/ICSE.1999.841012
   Kemerer CF, 1997, J SOFTW MAINT-RES PR, V9, P235, DOI 10.1002/(SICI)1096-908X(199707/08)9:4<235::AID-SMR153>3.0.CO;2-3
   KENSING F, 1998, INTERACTIONS     JAN, P7
   Lethbridge T.C., 2001, Object-oriented Software Engineering: Practical Software Development Using UML and Java
   Lethbridge TC, 2000, J SYST SOFTWARE, V53, P53, DOI 10.1016/S0164-1212(00)00009-1
   LETHBRIDGE TC, 2000, ADV SOFTWARE ENG TOP
   Miles M. B., 1984, Qualitative data analysis: An expanded sourcebook
   MILES MB, 1979, ADMIN SCI QUART, V24, P590, DOI 10.2307/2392365
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   *NASA, 1998, SEL98001 NASA
   Nielsen J., 1997, USE MISUSE FOCUS GRO
   PERRY DE, 1994, IEEE SOFTWARE    JUL, P37
   Pfleeger S.L., 2001, SIGSOFT Softw. Eng. Notes., V26, P16, DOI [10.1145/505532.505535, DOI 10.1145/505532.505535]
   Pfleeger SL, 1997, COMPUTER, V30, P33, DOI 10.1109/2.566148
   Porter AA, 1997, IEEE T SOFTWARE ENG, V23, P329, DOI 10.1109/32.601071
   Punter T, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P80, DOI 10.1109/ISESE.2003.1237967
   Rainer A, 2003, J SYST SOFTWARE, V66, P7, DOI 10.1016/S0164-1212(02)00059-6
   Robbins S.P., 1994, Essentials of organizational behavior, V4th
   Robillard PN, 1998, PROC INT CONF SOFTW, P292, DOI 10.1109/ICSE.1998.671342
   SayyadShirabad J, 1997, PROG COMPREHEN, P111, DOI 10.1109/WPC.1997.601275
   SAYYADSHIRABAD J, 2003, P CASCON 2003 TOR OC, P136
   SCACCHI W, 2003, P 3 WORKSH OP SOURC
   Seaman CB, 2003, IEEE T SOFTWARE ENG, V29, P838, DOI 10.1109/TSE.2003.1232288
   Seaman CB, 1998, IEEE T SOFTWARE ENG, V24, P559, DOI 10.1109/32.708569
   Seigel S., 1988, Nonparametric statistics for the behavioral sciences, V2nd
   Shull F, 2000, IEEE T SOFTWARE ENG, V26, P1101, DOI 10.1109/32.881720
   Sim SE, 1998, PROC INT CONF SOFTW, P361, DOI 10.1109/ICSE.1998.671389
   Sim SE, 1998, PROG COMPREHEN, P180, DOI 10.1109/WPC.1998.693351
   Singer J, 2002, IEEE T SOFTWARE ENG, V28, P1171, DOI 10.1109/TSE.2002.1158289
   Singer J, 1998, PROC IEEE INT CONF S, P139, DOI 10.1109/ICSM.1998.738502
   Singer J, 1998, PROG COMPREHEN, P173, DOI 10.1109/WPC.1998.693348
   SINGER J, 1998, P CASCON IBM TOR OCT, P209
   SNELLING L, 1997, INTERACTIONS     JUL, P25
   Some SS, 1998, PROG COMPREHEN, P118, DOI 10.1109/WPC.1998.693328
   Teasley SD, 2002, IEEE T SOFTWARE ENG, V28, P671, DOI 10.1109/TSE.2002.1019481
   von Mayrhauser A., 1993, Proceedings IEEE Second Workshop on Program Comprehension (Cat. No.93TH0551-2), P78, DOI 10.1109/WPC.1993.263903
   von Mayrhauser Anneliese., 1995, ADV COMPUT, P1
   WALENSTEIN A, 2003, P 11 IEEE WORKSH PRO
   WALZ DB, 1993, COMMUN ACM, V36, P63, DOI 10.1145/163430.163447
   Williams L, 2000, IEEE SOFTWARE, V17, P19, DOI 10.1109/52.854064
   WU J, 2003, P INT S EMP SOFTW EN
NR 68
TC 245
Z9 279
U1 1
U2 8
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2005
VL 10
IS 3
BP 311
EP 341
DI 10.1007/s10664-005-1290-x
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 936ZU
UT WOS:000229895100003
DA 2024-07-18
ER

PT J
AU Wu, XF
   Yang, JQ
   Ma, L
   Xue, YX
   Zhao, JJ
AF Wu, Xiongfei
   Yang, Jinqiu
   Ma, Lei
   Xue, Yinxing
   Zhao, Jianjun
TI On the usage and development of deep learning compilers: an empirical
   study on TVM
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Deep learning; Compiler; Optimization; Intermediate representation
AB Recent advances in deploying deep learning (DL) models have inspired the innovation of DL compilers from both industry and academia such as Facebook Glow and TVM. Given the importance of DL compilers, we seek for answering the important question to ease the adoption and development of TVM: What challenges do users face when using DL compilers and what are common challenges for developers when developing DL compilers. This paper presents the first empirical study on identifying the challenges in both usage and development of a DL compiler. We choose TVM as the representative DL compiler and manually inspect 347 sampled posts from its official discuss forum. We identify a taxonomy of challenges in usage of TVM consisting of 15 categories and seven types of common topics about developing TVM. Furthermore, we characterize TVM bugs in total of four impacts to obtain an initial understanding on defects of TVM through manual inspection of 44 bug reports and propose five implications for both developers and researchers in order to improve the development practices and build more robust DL compilers.
C1 [Wu, Xiongfei; Ma, Lei; Zhao, Jianjun] Kyushu Univ, Fukuoka, Japan.
   [Yang, Jinqiu] Concordia Univ, Montreal, PQ, Canada.
   [Xue, Yinxing] Univ Sci & Technol China, Hefei, Peoples R China.
C3 Kyushu University; Concordia University - Canada; Chinese Academy of
   Sciences; University of Science & Technology of China, CAS
RP Wu, XF (corresponding author), Kyushu Univ, Fukuoka, Japan.
EM xiongfei.wu.a94@s.kyushu-u.ac.jp; jinqiu.yang@concordia.ca;
   malei@ait.kyushu-u.ac.jp; yxxue@ustc.edu.cn; zhao@ait.kyushu-u.ac.jp
OI Wu, Xiongfei/0009-0009-8457-0839
FU JST, the establishment of university fellowships towards the creation of
   science technology innovation [JPMJFS2132]
FX This work was supported by JST, the establishment of university
   fellowships towards the creation of science technology innovation, Grant
   Number JPMJFS2132.
CR Abadi M, 2016, PROCEEDINGS OF OSDI'16: 12TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P265
   Abdelfattah MS, 2018, I C FIELD PROG LOGIC, P411, DOI 10.1109/FPL.2018.00077
   [Anonymous], 2021, GITHUB SEARCH API
   [Anonymous], 2013, P INT C MACH LEARN
   Badue C, 2021, EXPERT SYST APPL, V165, DOI 10.1016/j.eswa.2020.113816
   Bagherzadeh M, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P432, DOI 10.1145/3338906.3338939
   Berg Bruce Lawrence, 2000, Qualitative Research Methods for the Social Sciences
   Boemer F, 2019, CF '19 - PROCEEDINGS OF THE 16TH ACM INTERNATIONAL CONFERENCE ON COMPUTING FRONTIERS, P3, DOI 10.1145/3310273.3323047
   Chen AR, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09893-w
   Chen TQ, 2018, PROCEEDINGS OF THE 13TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P579
   Chen TQ, 2018, ADV NEUR IN, V31
   Chen T, 2021, J SERV MANAGE, V32, P383, DOI 10.1108/JOSM-09-2019-0297
   Chen ZP, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P750, DOI 10.1145/3368089.3409759
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Cyphers S, 2018, Arxiv, DOI arXiv:1801.08058
   Deng L., 2018, DEEP LEARNING NATURA, DOI [DOI 10.1007/978-981-10-5209-5, 10.1007/978-981-10-5209-5]
   Fischer M, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P90, DOI 10.1109/WCRE.2003.1287240
   Foundation A, 2020, MXXNET
   Garcia J, 2020, PROC INT CONF SOFTW, P385, DOI 10.1145/3377811.3380397
   Gulzar MA, 2016, PROC INT CONF SOFTW, P784, DOI 10.1145/2884781.2884813
   Hemanth D.J., 2017, Deep learning for image processing applications, V31
   Hochreiter S, 1997, NEURAL COMPUT, V9, P1735, DOI [10.1162/neco.1997.9.1.1, 10.1007/978-3-642-24797-2]
   Humbatova N, 2020, PROC INT CONF SOFTW, P1110, DOI 10.1145/3377811.3380395
   Intel, 2020, ACC FAST MATH INT ON
   Islam MJ, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P510, DOI 10.1145/3338906.3338955
   Jouppi NP, 2017, 44TH ANNUAL INTERNATIONAL SYMPOSIUM ON COMPUTER ARCHITECTURE (ISCA 2017), P1, DOI 10.1145/3079856.3080246
   Kingsley-Hughes A., 2017, ZDNET
   Lacey G, 2016, Arxiv, DOI arXiv:1602.04283
   Leary C., 2017, TensorFlow Dev Summit
   Lecun Y, 1998, P IEEE, V86, P2278, DOI 10.1109/5.726791
   Lecun Y, 2019, ISSCC DIG TECH PAP I, V62, P12, DOI 10.1109/ISSCC.2019.8662396
   Li MZ, 2021, IEEE T PARALL DISTR, V32, P708, DOI 10.1109/TPDS.2020.3030548
   Liu C, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P282, DOI 10.1109/ICST.2013.24
   Liu SL, 2016, CONF PROC INT SYMP C, P393, DOI 10.1109/ISCA.2016.42
   Moreau T, 2019, Arxiv, DOI arXiv:1807.04188
   Nguyen G, 2019, ARTIF INTELL REV, V52, P77, DOI 10.1007/s10462-018-09679-z
   NVIDIA, 2020, NVIDIA CUDNN
   ONNX, 2020, OP NUER NETW EXCH
   Paszke A, 2019, ADV NEUR IN, V32
   Ragan-Kelley J, 2013, ACM SIGPLAN NOTICES, V48, P519, DOI 10.1145/2499370.2462176
   Roesch J, 2018, MAPL'18: PROCEEDINGS OF THE 2ND ACM SIGPLAN INTERNATIONAL WORKSHOP ON MACHINE LEARNING AND PROGRAMMING LANGUAGES, P58, DOI 10.1145/3211346.3211348
   Rotem N, 2019, Arxiv, DOI arXiv:1805.00907
   RUMELHART DE, 1986, NATURE, V323, P533, DOI 10.1038/323533a0
   Saha RK, 2013, IEEE INT CONF AUTOM, P345, DOI 10.1109/ASE.2013.6693093
   Tompson Jonathan., 2012, INTRO OPENCL PROGRAM
   TVM, 2020, TVM LANG REF
   TVM, 2020, TVM START TUT
   TVM, 2020, DIV DEEP LEARN COMP
   TVM, 2020, AB VTA
   TVMConf, 2019, TVM C KEYN
   TVMDeveloper, 2019, IMPR QUANT ACC MOR P
   TvmDeveloper, 2018, TVM BENCHM
   TvmDeveloper, 2020, TVM DOC RUNT
   TvmDeveloper, 2020, TVM DOCS DEPL INT
   TvmDeveloper, 2020, NAM CONS UT VS UT
   TvmDeveloper, 2018, DAT STRUCT
   TvmDeveloper, 2018, INT8 QUANT PROP
   TvmDocs, 2020, PATT MATCH REL
   TvmUser, 2018, REG OP ATTR REL PATT
   TvmUser, 2019, TENS GLOB GLOB CONF
   TvmUser, 2019, TENS FIFOQUEUEV2 QUE
   TvmUser, 2019, ERR DOING AUT TENS N
   TvmUser, 2018, COMPILER CANNOT COMP
   TvmUser, 2020, CAN TVM NOW SUPP BAT
   TvmUser, 2018, LOAD READ PAR BIG EN
   TvmUser, 2020, RPC ERROR LARG ARR
   TvmUser, 2020, ROCM SEGM FAULT ERR
   TvmUser, 2018, LOC NOT WORK WIND
   TvmUser, 2020, IS DLDAT DEF
   TvmUser, 2019, QUANT TRANSP NN PAD
   TvmUser, 2019, WHATS MOD BIAS TVM P
   TvmUser, 2019, CUD GOT ERR CUD ERR
   TvmUser, 2020, IMPR PULL REQ RESP B
   TvmUser, 2018, EXPORT MOD LIB SO FI
   TvmUser, 2020, SAM SHAP PATT
   TvmUser, 2020, COMPL PATT MATCH REL
   TvmUser, 2020, SUPP TVM REL WASM RU
   TvmUser, 2020, MIGR ALL LOW LEV PAS
   TvmUser, 2019, LIM CPU COR AUT MOD
   TvmUser, 2018, GLOB SYNC DIFF BLOCK
   TvmUser, 2019, COMP OFF MOB ONNX GE
   TvmUser, 2019, SSD GLUONCV INC INF
   TvmUser, 2019, WHATS DIFF BUILD CRE
   TvmUser, 2018, INT8 QUANT PROP
   Vasilache N, 2018, Arxiv, DOI arXiv:1802.04730
   Hoang VCD, 2018, NEURAL MACHINE TRANSLATION AND GENERATION, P18
   Wang SW, 2016, J SOFTW-EVOL PROC, V28, P921, DOI 10.1002/smr.1801
   Wang X, 2020, P 5 C MACHINE TRANSL, P881
   Xing YS, 2019, IEEE T IND INFORM, V15, P6048, DOI 10.1109/TII.2019.2915569
   Zhang TY, 2019, PROC INT SYMP SOFTW, P104, DOI 10.1109/ISSRE.2019.00020
   Zhang XY, 2020, PROC INT CONF SOFTW, P739, DOI 10.1145/3377811.3380368
   Zhang YH, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P129, DOI 10.1145/3213846.3213866
   Zimmermann T, 2010, IEEE T SOFTWARE ENG, V36, P618, DOI 10.1109/TSE.2010.63
NR 93
TC 0
Z9 0
U1 5
U2 16
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2022
VL 27
IS 7
AR 172
DI 10.1007/s10664-022-10221-7
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4V4SY
UT WOS:000859469500002
DA 2024-07-18
ER

PT J
AU Naeem, H
   Alalfi, MH
AF Naeem, Hajra
   Alalfi, Manar H.
TI Predicting sensitive information leakage in IoT applications using
   flows-aware machine learning approach
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Internet of Things; Machine learning; Sensitive information leakage;
   Taint flow analysis
ID COMPONENTS
AB This paper presents an approach for identification of vulnerable IoT applications. The approach focuses on a category of vulnerabilities that leads to sensitive information leakage which can be identified by using taint flow analysis. Tainted flows vulnerability is very much impacted by the structure of the program and the order of the statements in the code, designing an approach to detect such vulnerability needs to take into consideration such information in order to provide precise results. In this paper, we propose and develop an approach, FlowsMiner, that mines features from the code related to program structure such as control statements and methods, in addition to program's statement order. FlowsMiner, generates features in the form of tainted flows. We developed, Flows2Vec, a tool that transform the features recovered by FlowsMiner into vectors, which are then used to aid the process of machine learning by providing a flow's aware model building process. The resulting model is capable of accurately classify applications as vulnerable if the vulnerability is exhibited by changes in the order of statements in source code. When compared to a base Bag of Words (BoW) approach, the experiments show that the proposed approach has improved the AUC of the prediction models for all algorithms and the best case for Corpus1 dataset is improved from 0.91 to 0.94 and for Corpus2 from 0.56 to 0.96.
C1 [Naeem, Hajra; Alalfi, Manar H.] Toronto Metropolitan Univ, Dept Comp Sci, Toronto, ON, Canada.
C3 Toronto Metropolitan University
RP Alalfi, MH (corresponding author), Toronto Metropolitan Univ, Dept Comp Sci, Toronto, ON, Canada.
EM hajra@ryerson.ca; manar.alalfi@ryerson.ca
CR Alon U., 2018, CoRR
   Andersen L. O., 1994, Ph.D. thesis
   [Anonymous], 2013, P WORKSH ICLR 2013 S
   [Anonymous], 2020, Pandas-dev/pandas: Pandas 1.4.4
   [Anonymous], 2015, Towards a definition of the internet of things iot
   [Anonymous], 2019, SmartThings Classic Documentation.
   Arzt S, 2014, ACM SIGPLAN NOTICES, V49, P259, DOI [10.1145/2666356.2594299, 10.1145/2594291.2594299]
   Avdiienko V, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P426, DOI 10.1109/ICSE.2015.61
   Celik ZB, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P1687
   Chernis B, 2018, IWSPA '18: PROCEEDINGS OF THE FOURTH ACM INTERNATIONAL WORKSHOP ON SECURITY AND PRIVACY ANALYTICS, P31, DOI 10.1145/3180445.3180453
   Harer J. A., 2018, CORR
   Hassan J, 2020, NEURAL PROCESS LETT, V51, P1031, DOI 10.1007/s11063-019-10125-6
   Hoa Khanh Dam, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P46, DOI 10.1109/MSR.2019.00017
   Dam HK, 2021, IEEE T SOFTWARE ENG, V47, P67, DOI 10.1109/TSE.2018.2881961
   Irfan M.N., 2010, MIIT, P11
   Irfan MN, 2013, ADV COMPUT, V89, P89, DOI 10.1016/B978-0-12-408094-2.00003-5
   Kim H, 2008, 10TH INTERNATIONAL CONFERENCE ON ADVANCED COMMUNICATION TECHNOLOGY, VOLS I-III, P255
   López V, 2013, INFORM SCIENCES, V250, P113, DOI 10.1016/j.ins.2013.07.007
   Medeiros Iberia., 2016, Proceedings of the 25th International Symposium on Software Testing and Analysis, P1, DOI DOI 10.1145/2931037.2931041
   Naeem H, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P582, DOI [10.1109/SANER48275.2020.9054817, 10.1109/saner48275.2020.9054817]
   Parveen S, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P587, DOI [10.1109/SANER48275.2020.9054853, 10.1109/saner48275.2020.9054853]
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Sadeghi A, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P725, DOI 10.1109/ICSE.2015.233
   Scandariato R, 2014, IEEE T SOFTWARE ENG, V40, P993, DOI 10.1109/TSE.2014.2340398
   Schmeidl F, 2019, 2019 IEEE/ACM 6TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2019), P25, DOI 10.1109/MOBILESoft.2019.00013
   Shar LK, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P642, DOI 10.1109/ICSE.2013.6606610
   Shar LK, 2012, PROC INT CONF SOFTW, P1293, DOI 10.1109/ICSE.2012.6227096
   Shoaib U, 2014, EXPERT SYST APPL, V41, P2300, DOI 10.1016/j.eswa.2013.09.027
   Sui YL, 2020, P ACM PROGRAM LANG, V4, DOI 10.1145/3428301
   Tai KS, 2015, PROCEEDINGS OF THE 53RD ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS AND THE 7TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING, VOL 1, P1556
   Walden J, 2014, PROC INT SYMP SOFTW, P23, DOI 10.1109/ISSRE.2014.32
   Wang S, 2016, PROC INT CONF SOFTW, P297, DOI 10.1145/2884781.2884804
   Zhao K, 2015, 2015 IEEE SYMPOSIUM ON COMPUTERS AND COMMUNICATION (ISCC), P714, DOI 10.1109/ISCC.2015.7405598
   Zheng W, 2020, PROCEEDINGS OF THE 2020 IEEE 2ND INTERNATIONAL WORKSHOP ON INTELLIGENT BUG FIXING (IBF '20), P26, DOI [10.1109/IBF50092.2020.9034888, 10.1109/ibf50092.2020.9034888]
   Zhu DL, 2017, IEEE SYMP COMP COMMU, P438, DOI 10.1109/ISCC.2017.8024568
NR 35
TC 0
Z9 0
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2022
VL 27
IS 6
AR 137
DI 10.1007/s10664-022-10157-y
PG 51
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 3D2UA
UT WOS:000829162000001
DA 2024-07-18
ER

PT J
AU Fregnan, E
   Petrulio, F
   Di Geronimo, L
   Bacchelli, A
AF Fregnan, Enrico
   Petrulio, Fernando
   Di Geronimo, Linda
   Bacchelli, Alberto
TI What happens in my code reviews? An investigation on automatically
   classifying review changes
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Review
DE Modern code review; Empirical software engineering; Review changes;
   Automatic classification
ID CROSS-VALIDATION; PREDICTION; MODELS; TREE
AB Code reviewing is a widespread practice used by software engineers to maintain high code quality. To date, the knowledge on the effect of code review on source code is still limited. Some studies have addressed this problem by classifying the types of changes that take place during the review process (a.k.a. review changes), as this strategy can, for example, pinpoint the immediate effect of reviews on code. Nevertheless, this classification (1) is not scalable, as it was conducted manually, and (2) was not assessed in terms of how meaningful the provided information is for practitioners. This paper aims at addressing these limitations: First, we investigate to what extent a machine learning-based technique can automatically classify review changes. Then, we evaluate the relevance of information on review change types and its potential usefulness, by conducting (1) semi-structured interviews with 12 developers and (2) a qualitative study with 17 developers, who are asked to assess reports on the review changes of their project. Key results of the study show that not only it is possible to automatically classify code review changes, but this information is also perceived by practitioners as valuable to improve the code review process. Data and materials: https://doi.org/10.5281/zenodo.5592254
C1 [Fregnan, Enrico; Petrulio, Fernando; Di Geronimo, Linda; Bacchelli, Alberto] Univ Zurich, Zurich, Switzerland.
C3 University of Zurich
RP Fregnan, E (corresponding author), Univ Zurich, Zurich, Switzerland.
EM fregnan@ifi.uzh.ch; fpetrulio@ifi.uzh.ch; digeronimo@ifi.uzh.ch;
   bacchelli@ifi.uzh.ch
RI Bacchelli, Alberto/ABG-5379-2020
OI Bacchelli, Alberto/0000-0003-0193-6823; Fregnan,
   Enrico/0000-0002-6897-7665
FU Swiss National Science Foundation through the SNF [PP00P2_170529]
FX The authors would like to thank the anonymous reviewers for their
   thoughtful and important comments and gratefully acknowledge the support
   of the Swiss National Science Foundation through the SNF Projects No.
   PP00P2_170529.
CR Abelein U, 2015, EMPIR SOFTW ENG, V20, P28, DOI 10.1007/s10664-013-9278-4
   Adams W. C., 2015, Handbook of Practical Program Evaluation, P492, DOI DOI 10.1002/9781119171386.CH19
   Android, 2020, ANDR GERR ONL REP
   [Anonymous], 2014, 11 WORKING C MINING, DOI [DOI 10.1145/2597073.2597076, DOI 10.1145/2597073]
   [Anonymous], 1997, An Algorithm for Suffix Stripping, page
   [Anonymous], 2006, P SIGCHI C HUM FACT, DOI DOI 10.1145/1124772.1124808
   [Anonymous], P INT JOINT C ART IN
   Arlot S, 2010, STAT SURV, V4, P40, DOI 10.1214/09-SS054
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Baeza-Yates Ricardo, 1999, MODERN INFORM RETRIE, V463
   Ball T., 1997, ICSE WORKSH PROC MOD
   Baum T, 2019, EMPIR SOFTW ENG, V24, P1762, DOI 10.1007/s10664-018-9676-8
   Baum T, 2017, LECT NOTES COMPUT SC, V10611, P111, DOI 10.1007/978-3-319-69926-4_9
   Baum T, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2016), P74, DOI 10.1109/QRS.2016.19
   Bavota G, 2015, PROC IEEE INT CONF S, P81, DOI 10.1109/ICSM.2015.7332454
   Baysal O, 2016, EMPIR SOFTW ENG, V21, P932, DOI 10.1007/s10664-015-9366-8
   Beller M., 2014, 11 WORK C MIN SOFTW, P202, DOI DOI 10.1145/2597073.2597082
   Bettenburg N., 2008, P 16 ACM SIGSOFT INT, P308
   Bird C, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P191, DOI 10.1109/MSR.2015.25
   Bishop Christopher M, 2006, PATTERN RECOGN, V128, P1
   Bosu Amiangshu, 2014, P 8 ACM IEEE INT S E, P33
   Burnett MM, 2011, INTERACT COMPUT, V23, P450, DOI 10.1016/j.intcom.2011.06.004
   Buse RPL, 2010, IEEE T SOFTWARE ENG, V36, P546, DOI 10.1109/TSE.2009.70
   Chandrashekar G, 2014, COMPUT ELECTR ENG, V40, P16, DOI 10.1016/j.compeleceng.2013.11.024
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Czerwonka J, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P27, DOI 10.1109/ICSE.2015.131
   Di Penta M, 2009, INFORM SOFTWARE TECH, V51, P1469, DOI 10.1016/j.infsof.2009.04.013
   Domingos P, 2012, COMMUN ACM, V55, P78, DOI 10.1145/2347736.2347755
   Fagan M., 2002, Software Pioneers, P575
   Fink A., 2003, DESIGN SURVEY STUDIE
   Fluri B, 2007, IEEE T SOFTWARE ENG, V33, P725, DOI 10.1109/TSE.2007.70731
   Fregnan E, 2020, WHAT HAPPENS MY CODE, DOI [10.5281/zenodo.5592254, DOI 10.5281/ZENODO.5592254]
   Gata W, 2018, ADV SOC SCI EDUC HUM, V258, P161
   Giger E, 2012, INT SYMP EMP SOFTWAR, P171, DOI 10.1145/2372251.2372285
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Hall M.A., 1999, P 17 INT C MACHINE L, P359
   Jiarpakdee J, 2021, IEEE T SOFTWARE ENG, V47, P320, DOI 10.1109/TSE.2019.2891758
   Johnson B, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P672, DOI 10.1109/ICSE.2013.6606613
   Johnson R. B., 2004, ED RES, V33, P14, DOI DOI 10.3102/0013189X033007014
   Kamei Y, 2010, PROC IEEE INT CONF S
   Kaner C., 2000, Testing Computer Software
   Karegowda AG, 2010, INT J INF TECHNOL KN, V2, P271, DOI DOI 10.1007/S12031-014-0367-7
   Kemerer CF, 2009, IEEE T SOFTWARE ENG, V35, P534, DOI 10.1109/TSE.2009.27
   Kononenko O, 2015, PROC IEEE INT CONF S, P111, DOI 10.1109/ICSM.2015.7332457
   Kotsiantis SB, 2006, PROC WRLD ACAD SCI E, V12, P278
   Kovalenko V, 2020, IEEE T SOFTWARE ENG, V46, P710, DOI 10.1109/TSE.2018.2868367
   Krawczyk B, 2016, PROG ARTIF INTELL, V5, P221, DOI 10.1007/s13748-016-0094-0
   Krippendorff K., 2011, DEP PAPERS ASC
   Kumar L., 2019, P 12 INN SOFTW ENG C
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Li YJ, 2007, IEEE T PATTERN ANAL, V29, P1091, DOI 10.1109/TPAMI.2007.1070
   Likert R, 1932, TECHNIQUE MEASUREMEN
   Longhurst R., 2003, Key Methods in Geography, P117
   Lyons E., 2007, Analysing qualitative data in psychology
   Mahboob T, 2016, PROCEEDINGS OF THE 2016 19TH INTERNATIONAL MULTI-TOPIC CONFERENCE (INMIC), P17
   Mäntylä MV, 2009, IEEE T SOFTWARE ENG, V35, P430, DOI 10.1109/TSE.2008.71
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   McIntosh S, 2016, EMPIR SOFTW ENG, V21, P2146, DOI 10.1007/s10664-015-9381-9
   Morales R, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P171, DOI 10.1109/SANER.2015.7081827
   Ouni A, 2016, PROC IEEE INT CONF S, P367, DOI 10.1109/ICSME.2016.65
   Paixao M, 2018, IEEE WORK CONF MIN S, P46, DOI 10.1145/3196398.3196466
   Palomba F, 2016, 2016 IEEE 24TH INTERNATIONAL CONFERENCE ON PROGRAM COMPREHENSION (ICPC)
   Pantiuchina J, 2018, INT C PROGRAM COMPRE, P312, DOI 10.1145/3196321.3196365
   Pascarella Luca, 2018, Proceedings of the ACM on Human-Computer Interaction, V2, DOI 10.1145/3274404
   Pecorelli F, 2019, INT C PROGRAM COMPRE, P93, DOI 10.1109/ICPC.2019.00023
   Porter A., 1998, ACM Transactions on Software Engineering and Methodology, V7, P41, DOI 10.1145/268411.268421
   PORTER A.A., 1996, ADV COMPUT, V42, P39
   Portigal S., 2013, Interviewing Users: How to Uncover Compelling Insights
   Ram A, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P201, DOI 10.1145/3236024.3236080
   Reich Y, 1999, ARTIF INTELL ENG, V13, P257, DOI 10.1016/S0954-1810(98)00021-1
   Rigby PC, 2013, P 2013 9 JOINT M FDN, P202, DOI DOI 10.1145/2491411.2491444
   Rigby PC, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2594458
   Sadowski C, 2018, COMMUN ACM, V61, P58, DOI 10.1145/3188720
   Sadowski C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P598, DOI 10.1109/ICSE.2015.76
   Santos MS, 2018, IEEE COMPUT INTELL M, V13, P59, DOI 10.1109/MCI.2018.2866730
   Sauer C, 2000, IEEE T SOFTWARE ENG, V26, P1, DOI 10.1109/32.825763
   Shibuya B, 2009, 2009 ICSE WORKSHOP ON EMERGING TRENDS IN FREE-LIBRE-OPEN SOURCE SOFTWARE RESEARCH AND DEVELOPMENT, P1, DOI 10.1109/FLOSS.2009.5071352
   Spadini D, 2019, PROC INT CONF SOFTW, P1061, DOI 10.1109/ICSE.2019.00110
   Spadini D, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P677, DOI 10.1145/3180155.3180192
   Struder S, 2020, P 24 ACM C SYST SOFT, VA, P1, DOI [10.1145/3382025.3414960, DOI 10.1145/3382025.3414960]
   Tantithamthavorn C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P286, DOI 10.1145/3183519.3183547
   Tantithamthavorn C, 2019, IEEE T SOFTWARE ENG, V45, P683, DOI 10.1109/TSE.2018.2794977
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Thongtanunam P, 2016, PROC INT CONF SOFTW, P1039, DOI 10.1145/2884781.2884852
   Thongtanunam P, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P168, DOI 10.1109/MSR.2015.23
   Thongtanunam P, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P141, DOI 10.1109/SANER.2015.7081824
   Vassallo C., 2019, EMPIR SOFTW ENG
   Vassallo C, 2019, PROC INT CONF SOFTW, P105, DOI 10.1109/ICSE.2019.00028
   Vassallo C, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P38, DOI 10.1109/SANER.2018.8330195
   Wiegers Karl Eugene, 2002, Peer reviews in software: A practical guide
   Wolf T, 2009, PROC INT CONF SOFTW, P1, DOI 10.1109/ICSE.2009.5070503
   Zanjani MB, 2016, IEEE T SOFTWARE ENG, V42, P530, DOI 10.1109/TSE.2015.2500238
NR 92
TC 3
Z9 3
U1 1
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2022
VL 27
IS 4
AR 89
DI 10.1007/s10664-021-10075-5
PG 43
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0N1KR
UT WOS:000782605800002
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Ibrahim, MH
   Sayagh, M
   Hassan, AE
AF Ibrahim, Md Hasan
   Sayagh, Mohammed
   Hassan, Ahmed E.
TI A study of how Docker Compose is used to compose multi-component systems
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Docker; Docker compose; Multi-component applications; Containerization
AB Many modern software applications are composed of several components (e.g., a web application is composed of a web server component and a database component). Each of these components can be instantiated as a container from a Docker image. Each Docker image corresponds to a software package (e.g, Apache or MySQL) along with various configuration details. Such containerization simplifies, speeds up, and enables the systematic deployment and maintenance of components at scale. As a natural progression of Docker, applications are now using "Docker Compose" to compose multi-component (aka. multi-container) applications by specifying the various components and their relations - in turn simplifying the deployment and maintenance of complex multi-component applications. This paper reports on a study of 4,103 open-source Github projects that use Docker Compose. Our primary goal is to better understand how it is used in the wild. We observe that over a quarter (26.8%) of the studied projects use Docker Compose for single-component applications. The Docker Compose file for an application is infrequently updated with 30% of such files never changed. We also observe that most of the composed applications leverage basic Docker Compose options instead of using advanced options (e.g., just 4.3% of the multi-component applications use a security related option). While Docker Compose has evolved over the years (it is currently at version 3), applications rarely adopt the new versions and 2.4% of the studied projects downgraded to an earlier version due to platform and option compatibility issues. Our study highlights that while applications are using Docker Compose, they appear to be content with its basic options and earlier versions in many instances. Future studies are needed to better understand how to improve the uptake of the more advanced aspects of Docker Compose, if they are needed at all.
C1 [Ibrahim, Md Hasan; Hassan, Ahmed E.] Queens Univ, Software Anal & Intelligence Lab SAIL, Kingston, ON, Canada.
   [Sayagh, Mohammed] ETS Quebec Univ, Montreal, PQ, Canada.
C3 Queens University - Canada
RP Ibrahim, MH (corresponding author), Queens Univ, Software Anal & Intelligence Lab SAIL, Kingston, ON, Canada.
EM ibrahim.mdhasan@cs.queensu.ca; mohammed.sayagh@etsmtl.ca;
   ahmed@cs.queensu.ca
RI KHALIFA, AHMED khalifa/HKF-2246-2023
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; Sayagh,
   Mohammed/0000-0002-2724-0034
CR 451research, 2019, 451 RES
   Agrawal R., 1993, SIGMOD Record, V22, P207, DOI 10.1145/170036.170072
   Brown, 2015, REF DOCK IM, P4
   Cito J, 2017, IEEE WORK CONF MIN S, P323, DOI 10.1109/MSR.2017.67
   Docker, 2017, BEST PRACTICES WRITI, P2
   DockerCompose, 2017, OVERVIEW DOCKER COMP, P2
   DockerCompose, 2017, ENV VAR COMP, P2
   DockerCompose, 2019, DOCK COMP VERS 1
   DockerCompose, 2018, COMP FIL VERS UPGR, P10
   DockerCompose, 2019, DOCK COMP VERS 3
   DockerHub, 2019, BUILD SHIP AN APPL A, P5
   Gallaba K, 2020, IEEE T SOFTWARE ENG, V46, P33, DOI 10.1109/TSE.2018.2838131
   Google, 2019, GOOGL BIG QUER, P8
   Gousios G, 2013, IEEE WORK CONF MIN S, P233, DOI 10.1109/MSR.2013.6624034
   Henkel J, 2020, PROC INT CONF SOFTW, P38, DOI 10.1145/3377811.3380406
   Horton E, 2019, PROC INT CONF SOFTW, P328, DOI 10.1109/ICSE.2019.00047
   Humble Jez, 2010, Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation
   Muhtaroglu N, 2017, 5 INT C PAR DISTR GR
   Serverwatch, 2019, MOBILE COMMERCE PRED, P5
   Shu R, 2017, PROCEEDINGS OF THE SEVENTH ACM CONFERENCE ON DATA AND APPLICATION SECURITY AND PRIVACY (CODASPY'17), P269, DOI 10.1145/3029806.3029832
   Tak B, 2018, LECT NOTES COMPUT SC, V10966, P116, DOI 10.1007/978-3-319-94289-6_8
   Zerouali A, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P491, DOI [10.1109/saner.2019.8668013, 10.1109/SANER.2019.8668013]
   Zhang Y, 2019, SCI CHINA INFORM SCI, V62, DOI 10.1007/s11432-017-9415-3
   Zhang Y, 2018, P INT COMP SOFTW APP, P138, DOI 10.1109/COMPSAC.2018.00026
NR 24
TC 7
Z9 8
U1 7
U2 23
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2021
VL 26
IS 6
AR 128
DI 10.1007/s10664-021-10025-1
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UU2TA
UT WOS:000698652500002
DA 2024-07-18
ER

PT J
AU Rahman, MM
   Khomh, F
   Yeasmin, S
   Roy, CK
AF Rahman, Mohammad Masudur
   Khomh, Foutse
   Yeasmin, Shamima
   Roy, Chanchal K.
TI The forgotten role of search queries in IR-based bug localization: an
   empirical study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Debugging automation; Bug localization; Information retrieval; Natural
   language processing; Query construction; Keyword selection; Genetic
   algorithm; Optimal search query; Poor search query; Empirical study
ID FEATURE LOCATION
AB Being light-weight and cost-effective, IR-based approaches for bug localization have shown promise in finding software bugs. However, the accuracy of these approaches heavily depends on their used bug reports. A significant number of bug reports contain only plain natural language texts. According to existing studies, IR-based approaches cannot perform well when they use these bug reports as search queries. On the other hand, there is a piece of recent evidence that suggests that even these natural language-only reports contain enough good keywords that could help localize the bugs successfully. On one hand, these findings suggest that natural language-only bug reports might be a sufficient source for good query keywords. On the other hand, they cast serious doubt on the query selection practices in the IR-based bug localization. In this article, we attempted to clear the sky on this aspect by conducting an in-depth empirical study that critically examines the state-of-the-art query selection practices in IR-based bug localization. In particular, we use a dataset of 2,320 bug reports, employ ten existing approaches from the literature, exploit the Genetic Algorithm-based approach to construct optimal, near-optimal search queries from these bug reports, and then answer three research questions. We confirmed that the state-of-the-art query construction approaches are indeed not sufficient for constructing appropriate queries (for bug localization) from certain natural language-only bug reports. However, these bug reports indeed contain high-quality search keywords in their texts even though they might not contain explicit hints for localizing bugs (e.g., stack traces). We also demonstrate that optimal queries and non-optimal queries chosen from bug report texts are significantly different in terms of several keyword characteristics (e.g., frequency, entropy, position, part of speech). Such an analysis has led us to four actionable insights on how to choose appropriate keywords from a bug report. Furthermore, we demonstrate 27%-34% improvement in the performance of non-optimal queries through the application of our actionable insights to them. Finally, we summarize our study findings with future research directions (e.g., machine intelligence in keyword selection).
C1 [Rahman, Mohammad Masudur] Dalhousie Univ, Halifax, NS, Canada.
   [Khomh, Foutse] Polytech Montreal, Montreal, PQ, Canada.
   [Yeasmin, Shamima; Roy, Chanchal K.] Univ Saskatchewan, Saskatoon, SK, Canada.
C3 Dalhousie University; Universite de Montreal; Polytechnique Montreal;
   University of Saskatchewan
RP Rahman, MM (corresponding author), Dalhousie Univ, Halifax, NS, Canada.
EM masud.rahman@dal.ca; foutse.khomh@polymtl.ca; shamima.yeasmin@usask.ca;
   chanchal.roy@usask.ca
RI Rahman, Masud/N-7453-2019
OI Rahman, Masud/0000-0003-3821-5990
FU Tenure-track startup grant; Dalhousie University; Saskatchewan
   Innovation & Opportunity Scholarship (2017-2018); Natural Sciences and
   Engineering Research Council of Canada (NSERC)
FX This research was supported by Tenure-track startup grant, Dalhousie
   University, Saskatchewan Innovation & Opportunity Scholarship
   (2017-2018), and the Natural Sciences and Engineering Research Council
   of Canada (NSERC).
CR [Anonymous], 2019, COST SOFTWARE DEBUGG
   [Anonymous], 2017, REPORT SOFTWARE FAIL
   Arif ASM, 2009, PROCEEDINGS OF THE 2009 INTERNATIONAL CONFERENCE ON SIGNAL PROCESSING SYSTEMS, P526, DOI 10.1109/ICSPS.2009.122
   Arong, 2014, PROCEEDINGS OF 2014 IEEE INTERNATIONAL CONFERENCE ON PROGRESS IN INFORMATICS AND COMPUTING (PIC), P51, DOI 10.1109/PIC.2014.6972294
   Bachmann A, 2009, IWPSE-EVOL 09: ERCIM WORKSHOP ON SOFTWARE EVOLUTION (EVOL) AND INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION (IWPSE), P119
   Bajracharya S., 2006, COMP 21 ACM SIGPLAN, P681, DOI DOI 10.1145/1176617.1176671
   Bavota G, 2013, 2013 7TH INTERNATIONAL WORKSHOP ON TRACEABILITY IN EMERGING FORMS OF SOFTWARE ENGINEERING (TEFSE), P83, DOI 10.1109/TEFSE.2013.6620160
   Blanco R, 2012, INFORM RETRIEVAL, V15, P54, DOI 10.1007/s10791-011-9172-x
   Brin S, 1998, COMPUT NETWORKS ISDN, V30, P107, DOI 10.1016/S0169-7552(98)00110-X
   Carmel D., 2006, Proceedings of the Twenty-Ninth Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, P390, DOI 10.1145/1148170.1148238
   Carpineto C, 2012, ACM COMPUT SURV, V44, DOI 10.1145/2071389.2071390
   Chaparro O, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P218, DOI [10.1109/SANER.2019.8667985, 10.1109/saner.2019.8667985]
   Chaparro O, 2017, PROC IEEE INT CONF S, P376, DOI 10.1109/ICSME.2017.100
   Chaparro O, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P716, DOI 10.1145/2889160.2892647
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Cheung S.-C., 2011, P 19 ACM SIGSOFT S 1, P15
   FURNAS GW, 1987, COMMUN ACM, V30, P964, DOI 10.1145/32206.32212
   Gay G, 2009, PROC IEEE INT CONF S, P351, DOI 10.1109/ICSM.2009.5306315
   Haiduc S., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P223, DOI 10.1145/1810295.1810335
   Haiduc S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P842, DOI 10.1109/ICSE.2013.6606630
   Haiduc S, 2012, IEEE INT CONF AUTOM, P90, DOI 10.1145/2351676.2351690
   Haiduc S, 2012, PROC INT CONF SOFTW, P1273, DOI 10.1109/ICSE.2012.6227101
   Hassan S, 2007, ICSC 2007: INTERNATIONAL CONFERENCE ON SEMANTIC COMPUTING, PROCEEDINGS, P242, DOI 10.1109/ICSC.2007.56
   Herzig K, 2013, IEEE WORK CONF MIN S, P121, DOI 10.1109/MSR.2013.6624018
   Hill E., 2012, 2012 12th IEEE Working Conference on Source Code Analysis and Manipulation (SCAM 2012), P184, DOI 10.1109/SCAM.2012.29
   Hill E, 2009, PROC INT CONF SOFTW, P232, DOI 10.1109/ICSE.2009.5070524
   Howard MJ, 2013, IEEE WORK CONF MIN S, P377, DOI 10.1109/MSR.2013.6624052
   Jiang Y, 2015, 2015 INTERNATIONAL SYMPOSIUM ON BIOELECTRONICS AND BIOINFORMATICS (ISBB), P1, DOI 10.1109/ISBB.2015.7344908
   Jinqiu Yang, 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P161, DOI 10.1109/MSR.2012.6224276
   Kevic K., 2014, P MSR, P320
   Kevic K, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P468, DOI 10.1145/2591062.2591117
   Kim M, 2018, PROC IEEE ACM INT C, P248, DOI 10.1145/3183440.3194954
   Kochhar P. S., 2014, MSR, P296
   Kochhar Pavneet Singh, 2014, P 2 ACM IEEE INT C, P803, DOI DOI 10.1145/2642937.2642997
   Le Goues C, 2012, IEEE T SOFTWARE ENG, V38, P54, DOI 10.1109/TSE.2011.104
   Le TDB, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P579, DOI 10.1145/2786805.2786880
   Lee J, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P61, DOI 10.1145/3213846.3213856
   Lin J., 2005, SIGIR 2005. Proceedings of the Twenty-Eighth Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, P635, DOI 10.1145/1076034.1076165
   Linares-Vasquez M., 2014, P 22 INT C PROGR COM, P83, DOI DOI 10.1145/2597008.2597155
   Liu Dapeng, 2007, P 22 IEEEACM INT C A, P234, DOI 10.1145/1321631.1321667
   Marcus A, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P214, DOI 10.1109/WCRE.2004.10
   Mihalcea, 2004, P EMNLP, P401, DOI DOI 10.3115/1219044.1219064
   MILLER GA, 1995, COMMUN ACM, V38, P39, DOI 10.1145/219717.219748
   Mills C, 2018, PROC IEEE INT CONF S, P381, DOI 10.1109/ICSME.2018.00046
   Mills C, 2017, ACM T SOFTW ENG METH, V26, DOI 10.1145/3078841
   Moreno L, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P567, DOI 10.1145/2786805.2786859
   Moreno L, 2014, PROC IEEE INT CONF S, P151, DOI 10.1109/ICSME.2014.37
   Nenkova A, 2004, HLT-NAACL 2004: HUMAN LANGUAGE TECHNOLOGY CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE MAIN CONFERENCE, P145
   Panichella A, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P314, DOI 10.1109/SANER.2016.97
   Parnin C., 2011, P 2011 INT S SOFTWAR, P199, DOI [10.1145/2001420.2001445, DOI 10.1145/2001420.2001445]
   Pérez F, 2018, DATA KNOWL ENG, V116, P159, DOI 10.1016/j.datak.2018.06.001
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI [10.1109/TSE.2007.1016, 10.1109/TSE.2007.1016.]
   Rahman MM, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P621, DOI 10.1145/3236024.3236065
   Rahman MM, 2018, PROC IEEE ACM INT C, P348, DOI 10.1145/3183440.3195003
   Rahman MM, 2017, IEEE INT CONF AUTOM, P428, DOI 10.1109/ASE.2017.8115655
   Rahman MM, 2017, IEEE WORK CONF MIN S, P215, DOI 10.1109/MSR.2017.17
   Rahman MM, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P79, DOI 10.1109/SANER.2017.7884611
   Rahman MM, 2016, IEEE INT CONF AUTOM, P220, DOI 10.1145/2970276.2970362
   Rahman MM, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P426, DOI 10.1109/MSR.2015.55
   Rahman MM, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P349, DOI 10.1109/SANER.2016.80
   Rao S., 2011, P 8 WORK C MIN SOFTW, P43
   ROBERTSON SE, 1990, J DOC, V46, P359, DOI 10.1108/eb026866
   Rocchio J. J., 1971, SMART RETRIEVAL SYST, P313
   Saha RK, 2013, IEEE INT CONF AUTOM, P345, DOI 10.1109/ASE.2013.6693093
   SHANNON CE, 1948, BELL SYST TECH J, V27, P379, DOI 10.1002/j.1538-7305.1948.tb01338.x
   Shepherd D., 2007, P 6 INT C ASP OR SOF, P212, DOI 10.1145/1218563.1218587
   Shi Z., 2014, Proc. InnoSWDev, P106
   Sisman B., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P50, DOI 10.1109/MSR.2012.6224299
   Sisman B, 2013, IEEE WORK CONF MIN S, P309, DOI 10.1109/MSR.2013.6624044
   SPARCKJONES K, 1972, J DOC, V28, P11, DOI 10.1108/eb026526
   STRUTZEL E, 1968, NURS RES, V17, P364
   Tian Y, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P44, DOI 10.1109/CSMR-WCRE.2014.6747213
   Toutanova K, 2003, HLT-NAACL 2003: HUMAN LANGUAGE TECHNOLOGY CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE MAIN CONFERENCE, P252, DOI 10.3115/1073445.1073478
   Wang SW, 2016, J SOFTW-EVOL PROC, V28, P921, DOI 10.1002/smr.1801
   Wen M, 2016, IEEE INT CONF AUTOM, P262, DOI 10.1145/2970276.2970359
   Wong CP, 2014, PROC IEEE INT CONF S, P181, DOI 10.1109/ICSME.2014.40
   Wong E, 2013, IEEE INT CONF AUTOM, P562, DOI 10.1109/ASE.2013.6693113
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Youm KC, 2015, ASIA PAC SOFWR ENG, P190, DOI 10.1109/APSEC.2015.23
   Zamani S, 2014, INFORM SOFTWARE TECH, V56, P991, DOI 10.1016/j.infsof.2014.03.007
   Zhang T, 2016, COMPUT J, V59, P741, DOI 10.1093/comjnl/bxv114
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
   Zou W, 2018, PRACTITIONERS PERCEI
NR 83
TC 7
Z9 7
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2021
VL 26
IS 6
AR 116
DI 10.1007/s10664-021-10022-4
PG 56
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UE1RE
UT WOS:000687672600001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Liu, JK
   Huang, Q
   Xia, X
   Shihab, E
   Lo, D
   Li, SP
AF Liu, Jiakun
   Huang, Qiao
   Xia, Xin
   Shihab, Emad
   Lo, David
   Li, Shanping
TI An exploratory study on the introduction and removal of different types
   of technical debt in deep learning frameworks
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Self-admitted technical debt; Deep learning; Categorization; Empirical
   study
AB To complete tasks faster, developers often have to sacrifice the quality of the software. Such compromised practice results in the increasing burden to developers in future development. The metaphor, technical debt, describes such practice. Prior research has illustrated the negative impact of technical debt, and many researchers investigated how developers deal with a certain type of technical debt. However, few studies focused on the removal of different types of technical debt in practice. To fill this gap, we use the introduction and removal of different types of self-admitted technical debt (i.e., SATD) in 7 deep learning frameworks as an example. This is because deep learning frameworks are some of the most important software systems today due to their prevalent use in life-impacting deep learning applications. Moreover, the field of the development of different deep learning frameworks is the same, which enables us to find common behaviors on the removal of different types of technical debt across projects. By mining the file history of these frameworks, we find that design debt is introduced the most along the development process. As for the removal of technical debt, we find that requirement debt is removed the most, and design debt is removed the fastest. Most of test debt, design debt, and requirement debt are removed by the developers who introduced them. Based on the introduction and removal of different types of technical debt, we discuss the evolution of the frequencies of different types of technical debt to depict the unresolved sub-optimal trade-offs or decisions that are confronted by developers along the development process. We also discuss the removal patterns of different types of technical debt, highlight future research directions, and provide recommendations for practitioners.
C1 [Liu, Jiakun; Huang, Qiao; Li, Shanping] Zhejiang Univ, Coll Comp Sci & Technol, Hangzhou, Peoples R China.
   [Xia, Xin] Monash Univ, Fac Informat Technol, Melbourne, Vic, Australia.
   [Shihab, Emad] Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ, Canada.
   [Lo, David] Singapore Management Univ, Sch Informat Syst, Singapore, Singapore.
C3 Zhejiang University; Monash University; Concordia University - Canada;
   Singapore Management University
RP Xia, X (corresponding author), Monash Univ, Fac Informat Technol, Melbourne, Vic, Australia.
EM jkliu@zju.edu.cn; tkdsheep@zju.edu.cn; xin.xia@monash.edu;
   eshihab@encs.concordia.ca; davidlo@smu.edu.sg; shan@zju.edu.cn
RI Xia, Xin/AAD-6217-2022; LO, David/A-2493-2012
OI Xia, Xin/0000-0002-6302-3256; 
FU National Key R&D Program of China [2018YFB1003904]; Australian Research
   Council's Discovery Early Career Researcher Award (DECRA) [DE200100021];
   Australian Research Council [DE200100021] Funding Source: Australian
   Research Council
FX This research was partially supported by the National Key R&D Program of
   China (No. 2018YFB1003904) and the Australian Research Council's
   Discovery Early Career Researcher Award (DECRA) (DE200100021).
CR Al-Qizwini M, 2017, IEEE INT VEH SYM, P89, DOI 10.1109/IVS.2017.7995703
   Alves OL, 2014, NANOMED NANOTOXICOL, P1, DOI 10.1007/978-1-4614-8993-1_1
   [Anonymous], 2015, ARXIV PREPRINT ARXIV
   [Anonymous], 2017, ELECT IMAG, DOI [DOI 10.2352/ISSN.2470-1173.2017.19.AVM-023, 10.2352/ISSN.2470-1173.2017.19.AVM-023]
   [Anonymous], 2018, EMPIR SOFTW ENG, DOI DOI 10.1007/s10664-017-9522-4
   Bavota G, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P315, DOI [10.1109/MSR.2016.040, 10.1145/2901739.2901742]
   Brown M, 2010, SMART SCIENCE FOR EXPLORATION AND MINING, VOL 1 AND 2, P47
   Carpenter M, 1997, SURVIVAL ANAL SELF L
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Cox DR., 1984, Analysis of Survival Data
   Cunningham W., 1993, OOPS Messenger, V4, P29
   de Almeida RR, 2018, PROC IEEE INT CONF S, P655, DOI 10.1109/ICSME.2018.00075
   DUNN OJ, 1961, J AM STAT ASSOC, V56, P52, DOI 10.2307/2282330
   Ernst NA, 2012, P 3 INT WORKSH MAN T, P61
   Ernst NA, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P50, DOI 10.1145/2786805.2786848
   Fontana F. A., 2012, Proceedings 2012 Third International Workshop on Managing Technical Debt (MTD 2012), P15, DOI 10.1109/MTD.2012.6225993
   Goodfellow I, 2020, COMMUN ACM, V63, P139, DOI 10.1145/3422622
   Huval B., 2015, EMPIRICAL EVALUATION
   Islam MJ, 2019, ESEC FSE 19
   Jouppi NP, 2017, 44TH ANNUAL INTERNATIONAL SYMPOSIUM ON COMPUTER ARCHITECTURE (ISCA 2017), P1, DOI 10.1145/3079856.3080246
   KAPLAN EL, 1958, J AM STAT ASSOC, V53, P457, DOI 10.2307/2281868
   Klinger T, 2011, P 2 WORKSHOP MANAGIN, P35
   Kruchten Philippe, 2013, ACM SIGSOFT Software Engineering Notes, V38, P51
   KRUSKAL WH, 1952, J AM STAT ASSOC, V47, P583, DOI 10.1080/01621459.1952.10483441
   Li LK, 2020, CHIN J LASERS, V47, DOI 10.3788/CJL202047.0502002
   Li ZY, 2015, J SYST SOFTWARE, V101, P193, DOI 10.1016/j.jss.2014.12.027
   Lim E, 2012, IEEE SOFTWARE, V29, P22, DOI 10.1109/MS.2012.130
   Litjens G, 2017, MED IMAGE ANAL, V42, P60, DOI 10.1016/j.media.2017.07.005
   Liu ZX, 2018, PROC IEEE ACM INT C, P9, DOI 10.1145/3183440.3183478
   Ma L, 2018, IEEE INT CONF AUTOM, P120, DOI 10.1145/3238147.3238202
   Maldonado E, 2017, P 33 INT C SOFTW MAI
   Maldonado ED, 2015, 2015 IEEE 7TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD) PROCEEDINGS, P9, DOI 10.1109/MTD.2015.7332619
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   MANTEL NATHAN, 1966, CANCERCHEMOTHERAP REP, V50, P163
   McElreath R., 2020, STAT RETHINKING BAYE
   McHugh ML, 2012, BIOCHEM MEDICA, V22, P276, DOI 10.11613/bm.2012.031
   Miller Jr Rupert G, 2011, Survival analysis, V66
   Pei KX, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P1, DOI 10.1145/3132747.3132785
   Potdar A, 2014, PROC IEEE INT CONF S, P91, DOI 10.1109/ICSME.2014.31
   QUESENBERRY CP, 1989, AM J PUBLIC HEALTH, V79, P1643, DOI 10.2105/AJPH.79.12.1643
   Sculley D., 2015, ADV NEURAL INF PROCE, P2503, DOI DOI 10.5555/2969442.2969519
   Seaman C, 2011, ADV COMPUT, V82, P25, DOI 10.1016/B978-0-12-385512-1.00002-5
   Shalev-Shwartz S., 2016, arXiv
   Shull F, 2011, IEEE SOFTWARE, V28, P4, DOI 10.1109/MS.2011.38
   Spencer D., 2009, CARD SORTING DESIGNI
   Spínola RO, 2013, 2013 4TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD), P1, DOI 10.1109/MTD.2013.6608671
   Sun Y., 2018, Testing deep neural networks
   Sun YC, 2018, IEEE INT CONF AUTOM, P109, DOI 10.1145/3238147.3238172
   Tian YC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P303, DOI 10.1145/3180155.3180220
   Wehaibi S, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P179, DOI 10.1109/SANER.2016.72
   WEI LJ, 1984, J AM STAT ASSOC, V79, P653, DOI 10.2307/2288413
   Zampetti F, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P355, DOI [10.1109/SANER48275.2020.9054868, 10.1109/saner48275.2020.9054868]
   Zampetti F, 2018, IEEE WORK CONF MIN S, P526, DOI 10.1145/3196398.3196423
   Zazworka N., 2013, Proceedings of the 17th International Conference on Evaluation and Assessment in Software Engineering, DOI DOI 10.1145/2460999.2461005.ASSOCIATIONFORCOMPUTINGMACHINERY
   Zazworka Nico, 2011, P 2 WORKSH MAN TECHN, P17, DOI 10.1145/1985362.1985366
   Zhang MS, 2018, IEEE INT CONF AUTOM, P132, DOI 10.1145/3238147.3238187
   Zhang Y, 2018, INT S SOFTW TEST AN
NR 57
TC 6
Z9 6
U1 2
U2 13
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2021
VL 26
IS 2
AR 16
DI 10.1007/s10664-020-09917-5
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA QH3TJ
UT WOS:000618199100001
DA 2024-07-18
ER

PT J
AU Herbold, S
   Trautsch, A
   Trautsch, F
AF Herbold, Steffen
   Trautsch, Alexander
   Trautsch, Fabian
TI On the feasibility of automated prediction of bug and non-bug issues
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Issue type prediction; Mislabeled issues; Issue tracking
AB Context Issue tracking systems are used to track and describe tasks in the development process, e.g., requested feature improvements or reported bugs. However, past research has shown that the reported issue types often do not match the description of the issue. Objective We want to understand the overall maturity of the state of the art of issue type prediction with the goal to predict if issues are bugs and evaluate if we can improve existing models by incorporating manually specified knowledge about issues. Method We train different models for the title and description of the issue to account for the difference in structure between these fields, e.g., the length. Moreover, we manually detect issues whose description contains a null pointer exception, as these are strong indicators that issues are bugs. Results Our approach performs best overall, but not significantly different from an approach from the literature based on the fastText classifier from Facebook AI Research. The small improvements in prediction performance are due to structural information about the issues we used. We found that using information about the content of issues in form of null pointer exceptions is not useful. We demonstrate the usefulness of issue type prediction through the example of labelling bugfixing commits. Conclusions Issue type prediction can be a useful tool if the use case allows either for a certain amount of missed bug reports or the prediction of too many issues as bug is acceptable.
C1 [Herbold, Steffen] Karlsruhe Inst Technol KIT, Inst AIFB, Karlsruhe, Germany.
   [Trautsch, Alexander; Trautsch, Fabian] Univ Goettingen, Inst Comp Sci, Gottingen, Germany.
C3 Helmholtz Association; Karlsruhe Institute of Technology; University of
   Gottingen
RP Herbold, S (corresponding author), Karlsruhe Inst Technol KIT, Inst AIFB, Karlsruhe, Germany.
EM steffen.herbold@kit.edu; alexander.trautsch@cs.uni-goettingen.de;
   fabian.trautsch@cs.uni-goettingen.de
RI Trautsch, Alexander/ABH-7306-2020
OI Trautsch, Alexander/0000-0001-5236-7953; Herbold,
   Steffen/0000-0001-9765-2803
FU DFG [402774445]
FX This work is partially funded by DFG Grant 402774445.
CR Antoniol G, 2008, P 2008 C CTR ADV STU, P304
   Bartlett MS, 1937, PROC R SOC LON SER-A, V160, P0268, DOI 10.1098/rspa.1937.0109
   Benavoli A, 2017, J MACH LEARN RES, V18
   Chawla I, 2015, P 8 IND SOFTW ENG C, DOI DOI 10.1145/2723742.2723751
   Chawla I, 2018, J COMPUT METHODS SCI, V18, P177, DOI 10.3233/JCM-180779
   Cohen J., 1988, STAT POWER ANAL BEHA
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   Devlin J., 2018, BERT PRE TRAINING DE
   DUNN OJ, 1961, J AM STAT ASSOC, V56, P52, DOI 10.2307/2282330
   Facebook AI Research, 2019, FASTT LIB EFF TEXT C
   Friedman M, 1940, ANN MATH STAT, V11, P86, DOI 10.1214/aoms/1177731944
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Hammad M., 2018, International Journal of Advanced Computer Research, V8, P313
   Han ZB, 2017, PROC IEEE INT CONF S, P125, DOI 10.1109/ICSME.2017.52
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Herbold S, 2020, P 2020 INT C SOFTW E
   Herbold S, 2018, IEEE T SOFTWARE ENG, V44, P811, DOI 10.1109/TSE.2017.2724538
   Herzig K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P392, DOI 10.1109/ICSE.2013.6606585
   Hosseini S, 2019, IEEE T SOFTWARE ENG, V45, P111, DOI 10.1109/TSE.2017.2770124
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Kallis R, 2019, PROC IEEE INT CONF S, P406, DOI 10.1109/ICSME.2019.00070
   Kearns M, 1998, J ACM, V45, P983, DOI 10.1145/293347.293351
   Limsettho N, 2016, INT J SOFTW ENG KNOW, V26, P1027, DOI 10.1142/S0218194016500352
   Limsettho N, 2014, INT WORKSH EMPIR ENG, P7, DOI 10.1109/IWESEP.2014.8
   liwerski J, 2005, ACM SIGSOFT SOFTWARE, V30, P1, DOI [10.1145/1082983.1083147, DOI 10.1145/1083142.1083147, DOI 10.1145/1082983.1083147]
   Lukins SK, 2008, WORK CONF REVERSE EN, P155, DOI 10.1109/WCRE.2008.33
   Marcus A, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P214, DOI 10.1109/WCRE.2004.10
   Mills C, 2018, PROC IEEE INT CONF S, P381, DOI 10.1109/ICSME.2018.00046
   Nemenyi P. B., 1963, doctoral dissertation
   Ortu M, 2015, Proceedings of the 11th International Conference on Predictive Models and Data Analytics in Software Engineering, PROMISE'15, P1, DOI DOI 10.1145/2810146.2810147
   Otoom AF, 2019, PROCEEDINGS OF 9TH INTERNATIONAL CONFERENCE ON INFORMATION COMMUNICATION AND MANAGEMENT (ICICM 2019), P17, DOI 10.1145/3357419.3357424
   Palacio DN, 2019, PROC IEEE INT CONF S, P140, DOI 10.1109/ICSME.2019.00024
   Pandey A, 2018, PROCEEDINGS OF THE 2ND INTERNATIONAL CONFERENCE ON INVENTIVE SYSTEMS AND CONTROL (ICISC 2018), P423, DOI 10.1109/ICISC.2018.8399107
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Pingclasai N, 2013, ASIA PAC SOFWR ENG, P13, DOI 10.1109/APSEC.2013.105
   Rao S., 2011, P 8 WORK C MIN SOFTW, P43
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   Terdchanakul P, 2017, PROC IEEE INT CONF S, P534, DOI 10.1109/ICSME.2017.14
   Trautsch A., 2020, ISSUES SZZ EMPIRICAL
   Trautsch A, 2020, P 2020 INT C SOFTW E
   Trautsch F, 2018, EMPIR SOFTW ENG, V23, P1036, DOI 10.1007/s10664-017-9537-x
   Xiao JY, 2018, PLASMA SCI TECHNOL, V20, DOI 10.1088/2058-6272/aac3d1
   Zhou Y, 2016, J SOFTW-EVOL PROC, V28, P150, DOI 10.1002/smr.1770
   Zolkeply MS, 2019, SAC '19: PROCEEDINGS OF THE 34TH ACM/SIGAPP SYMPOSIUM ON APPLIED COMPUTING, P1860, DOI 10.1145/3297280.3297608
NR 44
TC 30
Z9 30
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2020
VL 25
IS 6
BP 5333
EP 5369
DI 10.1007/s10664-020-09885-w
EA SEP 2020
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA OI4BB
UT WOS:000569291600002
OA hybrid
DA 2024-07-18
ER

PT J
AU Ralph, P
   Baltes, S
   Adisaputri, G
   Torkar, R
   Kovalenko, V
   Kalinowski, M
   Novielli, N
   Yoo, S
   Devroey, X
   Tan, X
   Zhou, MH
   Turhan, B
   Hoda, R
   Hata, H
   Robles, G
   Fard, AM
   Alkadhi, R
AF Ralph, Paul
   Baltes, Sebastian
   Adisaputri, Gianisa
   Torkar, Richard
   Kovalenko, Vladimir
   Kalinowski, Marcos
   Novielli, Nicole
   Yoo, Shin
   Devroey, Xavier
   Tan, Xin
   Zhou, Minghui
   Turhan, Burak
   Hoda, Rashina
   Hata, Hideaki
   Robles, Gregorio
   Milani Fard, Amin
   Alkadhi, Rana
TI Pandemic programming How COVID-19 affects software developers and how
   their organizations can help
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software development; Work from home; Crisis management; Disaster
   management; Emergency management; Wellbeing; Productivity; COVID-19;
   Pandemic; Questionnaire; Structural equation modeling
ID RISK PERCEPTION; WORK; BEHAVIORS; INFORMATION; PERFORMANCE; TELEWORKING;
   KNOWLEDGE; HEALTH; IMPACT
AB Context As a novel coronavirus swept the world in early 2020, thousands of software developers began working from home. Many did so on short notice, under difficult and stressful conditions. Objective This study investigates the effects of the pandemic on developers' wellbeing and productivity. Method A questionnaire survey was created mainly from existing, validated scales and translated into 12 languages. The data was analyzed using non-parametric inferential statistics and structural equation modeling. Results The questionnaire received 2225 usable responses from 53 countries. Factor analysis supported the validity of the scales and the structural model achieved a good fit (CFI = 0.961, RMSEA = 0.051, SRMR = 0.067). Confirmatory results include: (1) the pandemic has had a negative effect on developers' wellbeing and productivity; (2) productivity and wellbeing are closely related; (3) disaster preparedness, fear related to the pandemic and home office ergonomics all affect wellbeing or productivity. Exploratory analysis suggests that: (1) women, parents and people with disabilities may be disproportionately affected; (2) different people need different kinds of support. Conclusions To improve employee productivity, software companies should focus on maximizing employee wellbeing and improving the ergonomics of employees' home offices. Women, parents and disabled persons may require extra support.
C1 [Ralph, Paul; Adisaputri, Gianisa] Dalhousie Univ, Halifax, NS B3H 4R2, Canada.
   [Baltes, Sebastian] Univ Adelaide, Adelaide, SA 5005, Australia.
   [Torkar, Richard] Chalmers & Univ Gothenburg, Gothenburg, Sweden.
   [Torkar, Richard] Stellenbosch Inst Adv Study, Stellenbosch, South Africa.
   [Kovalenko, Vladimir] JetBrains, Amsterdam, Netherlands.
   [Kalinowski, Marcos] Pontifical Catholic Univ Rio De Janeiro, Rio De Janeiro, Brazil.
   [Novielli, Nicole] Univ Bari Aldo Moro, Bari, Italy.
   [Yoo, Shin] Korea Adv Inst Sci & Technol, Daejeon, South Korea.
   [Devroey, Xavier] Delft Univ Technol, Delft, Netherlands.
   [Tan, Xin; Zhou, Minghui] Peking Univ, Beijing, Peoples R China.
   [Turhan, Burak; Hoda, Rashina] Monash Univ, Melbourne, Vic, Australia.
   [Turhan, Burak] Univ Oulu, Oulu, Finland.
   [Hata, Hideaki] Nara Inst Sci & Technol, Ikoma, Japan.
   [Robles, Gregorio] Univ Rey Juan Carlos, Mostoles, Spain.
   [Milani Fard, Amin] New York Inst Technol, Vancouver, BC, Canada.
   [Alkadhi, Rana] King Saud Univ, Riyadh, Saudi Arabia.
C3 Dalhousie University; University of Adelaide; Chalmers University of
   Technology; Stellenbosch University; Pontificia Universidade Catolica do
   Rio de Janeiro; Universita degli Studi di Bari Aldo Moro; Korea Advanced
   Institute of Science & Technology (KAIST); Delft University of
   Technology; Peking University; Monash University; University of Oulu;
   Nara Institute of Science & Technology; Universidad Rey Juan Carlos; New
   York Institute Technology; King Saud University
RP Ralph, P (corresponding author), Dalhousie Univ, Halifax, NS B3H 4R2, Canada.; Baltes, S (corresponding author), Univ Adelaide, Adelaide, SA 5005, Australia.; Turhan, B (corresponding author), Monash Univ, Melbourne, Vic, Australia.; Turhan, B (corresponding author), Univ Oulu, Oulu, Finland.
EM paulralph@dal.ca; sebastian.baltes@adelaide.edu.au; gianisaa@gmail.com;
   richard.torkar@cse.gu.se; vladimir.kovalenko@jetbrains.com;
   kalinowski@inf.puc-rio.br; nicole.novielli@uniba.it;
   shin.yoo@kaist.ac.kr; X.D.M.Devroey@tudelft.nl; tanxin16@pku.edu.cn;
   zhmh@pku.edu.cn; burak.turhan@monash.edu; rashina.hoda@monash.edu;
   hata@is.naist.jp; grex@gsyc.urjc.es; amilanif@nyit.edu;
   ralkadi@ksu.edu.sa
RI Hata, Hideaki/GQB-2557-2022; Ralph, D. Paul/H-4322-2019; Devroey,
   Xavier/I-3918-2019; Milani Fard, Amin/AAA-5923-2021; Novielli,
   Nicole/Y-9583-2019; Turhan, Burak/G-7400-2011; Yoo, Shin/E-3247-2015;
   Robles, Gregorio/I-2507-2012; Hata, Hideaki/N-7103-2019
OI Ralph, D. Paul/0000-0002-7411-0857; Devroey, Xavier/0000-0002-0831-7606;
   Milani Fard, Amin/0000-0003-0816-0597; Novielli,
   Nicole/0000-0003-1160-2608; Turhan, Burak/0000-0003-1511-2163; Yoo,
   Shin/0000-0002-0836-6993; Robles, Gregorio/0000-0002-1442-6761; Hata,
   Hideaki/0000-0003-0708-5222
FU Natural Sciences and Engineering Research Council of Canada
   [RGPIN-2020-05001]; Government of Spain through project "BugBirth"
   [RTI2018-101963-B-100]; University of Adelaide; Dalhousie University
FX This project was supported by the Natural Sciences and Engineering
   Research Council of Canada Grant RGPIN-2020-05001, the Government of
   Spain through project "BugBirth" (RTI2018-101963-B-100), Dalhousie
   University and the University of Adelaide. Thanks to Brett Cannon,
   Alexander Serebrenik and Klaas Stol for their advice and support, as
   well as all of our pilot participants. Thanks also to all of the media
   outlets who provided complementary advertising, including DNU.nl,
   eksisozluk, InfoQ and Heise Online. Finally, thanks to everyone at
   Empirical Software Engineering for fast-tracking COVID-related research.
CR Amir B, 2018, PROC IEEE ACM INT C, P344, DOI 10.1145/3183440.3195001
   Anderson RM, 2020, LANCET, V395, P931, DOI 10.1016/S0140-6736(20)30567-5
   Angus Reid Institute (ARI), 2020, WORR GRAT BOR COV 19
   [Anonymous], 2020, CNN
   Bailey DE, 2002, J ORGAN BEHAV, V23, P383, DOI 10.1002/job.144
   Baker E., 2007, Research and Practice in Human Resource Management, V15, P37
   Baltes S, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P187, DOI 10.1145/3236024.3236061
   Baltes Sebastian, 2020, ARXIV200207764
   Bao L., 2020, ARXIV200513167
   Baruch Y, 2000, NEW TECH WORK EMPLOY, V15, P34, DOI 10.1111/1468-005X.00063
   Baruch Y., 1996, J MANAGE PSYCHOL, V11, P50, DOI DOI 10.1108/02683949610129758
   Blake KD, 2010, EMERG INFECT DIS, V16, P212, DOI 10.3201/eid1602.090638
   Bracha HS, 2006, PREHOSPITAL DISASTER, V21, P290, DOI 10.1017/S1049023X00003897
   Brown T.A., 2006, Methodology in the Social Sciences, DOI 10.1007/s11336-016-9548-3
   Brug J, 2004, EMERG INFECT DIS, V10, P1486, DOI 10.3201/eid1008.040283
   Cascio WF, 2000, ACAD MANAGE EXEC, V14, P81, DOI 10.5465/AME.2000.4468068
   Chrystal KA, 2003, CENTRAL BANKING MONE, V1, P221, DOI DOI 10.4337/9781781950777.00022
   Dall'Ora C, 2016, INT J NURS STUD, V57, P12, DOI 10.1016/j.ijnurstu.2016.01.007
   Davenport TH, 1998, SLOAN MANAGE REV, V39, P51
   DiGiovanni C, 2004, BIOSECUR BIOTERROR, V2, P265, DOI 10.1089/bsp.2004.2.265
   Donnelly N, 2015, NEW TECH WORK EMPLOY, V30, P47, DOI 10.1111/ntwe.12040
   Duxbury L, 1998, S INF TECHN MANAG, P218
   Evers KE, 2014, PSYCHOL REP, V114, P843, DOI 10.2466/13.01.PR0.114k25w4
   Fisher JRW, 2020, MED J AUSTRALIA, V213, P458, DOI 10.5694/mja2.50831
   Flora DB, 2004, PSYCHOL METHODS, V9, P466, DOI 10.1037/1082-989X.9.4.466
   Forsgren N., 2020, Octoverse Spotlight: An Analysis of Developer Productivity, Work Cadence, and Collaboration in the Early Days of COVID-19
   Furia CA, 2021, IEEE T SOFTWARE ENG, V47, P1786, DOI 10.1109/TSE.2019.2935974
   Goodhart C. A. E., 1984, Monetary Theory and Practice
   Graziotin D, 2019, RETHINKING PRODUCTIV, P109, DOI [10.1007/978-1-4842-4221-6_10, DOI 10.1007/978-1-4842-4221-6_10]
   Graziotin D, 2015, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.18
   Graziotin D, 2017, 2017 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON EMOTION AWARENESS IN SOFTWARE ENGINEERING (SEMOTION 2017), P42, DOI 10.1109/SEmotion.2017.5
   Hanselman S, 2020, TWEET
   Harper CA, 2021, INT J MENT HEALTH AD, V19, P1875, DOI 10.1007/s11469-020-00281-5
   Hu LT, 1999, STRUCT EQU MODELING, V6, P1, DOI 10.1080/10705519909540118
   Hyman J, 2003, BRIT J IND RELAT, V41, P215, DOI 10.1111/1467-8543.00270
   Jaspan C, 2019, RETHINKING PRODUCTIV, P13, DOI [10.1007/978-1-4842-4221-6_2, DOI 10.1007/978-1-4842-4221-6_2]
   Joreskog K.G., 1999, How large can a standardized coefficient be?
   Kaplan J., 2020, A third of the global population is on coronavirus lockdown-here's our constantly updated list of countries and restrictions. Business Insider India
   Kessler RC, 2003, J OCCUP ENVIRON MED, V45, P156, DOI 10.1097/01.jom.0000052967.43131.51
   Kim Y, 2015, DISASTER MED PUBLIC, V9, P145, DOI 10.1017/dmp.2014.87
   Ko Amy J., 2019, Rethinking Productivity in Software Engineering, P21
   Loose VW, 2010, SAND20101910 SAND NA
   Madhav Nita, 2018, Pandemics: risks, impacts, and mitigation, DOI [10.1596/978-1-4648-0527-1/pt5.ch17, DOI 10.1596/978-1-4648-0527-1/PT5.CH17]
   McInerney CR, 1999, LIBR INFORM SCI RES, V21, P69, DOI 10.1016/S0740-8188(99)80006-1
   McLeod L, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1978802.1978803
   Meyer Andre N., 2017, Proceedings of the ACM on Human-Computer Interaction, V1, DOI 10.1145/3134714
   Ng CF, 2010, FACILITIES, V28, P137, DOI 10.1108/02632771011023113
   North CS, 2010, J OCCUP ENVIRON MED, V52, P713, DOI 10.1097/JOM.0b013e3181e48b01
   Paton D., 2008, The phoenix of natural disasters: Community resilience, P13
   Perez M.P., 2004, EUR J INNOV MANAG, V7, P280, DOI DOI 10.1108/14601060410565038
   Perry SJ, 2018, EUR J WORK ORGAN PSY, V27, P577, DOI 10.1080/1359432X.2018.1487402
   Prati G, 2011, RISK ANAL, V31, P645, DOI 10.1111/j.1539-6924.2010.01529.x
   Ralph Paul, 2018, P 22 INT C EV ASS SO, P13
   Rebmann T, 2009, APIC TEXT INFECT CON
   Roberto A.J., 2009, Handbook of Risk and Crisis Communication, P287
   Ronan KR, 2015, CURR PSYCHIAT REP, V17, DOI 10.1007/s11920-015-0589-6
   Rönkkö M, 2013, ORGAN RES METHODS, V16, P425, DOI 10.1177/1094428112474693
   Russell H, 2009, GENDER WORK ORGAN, V16, P73, DOI 10.1111/j.1468-0432.2008.00431.x
   Saldana J., 2016, CODING MANUAL QUALIT, DOI DOI 10.1017/CBO9781107415324.004
   Shultz JM, 2016, CURR PSYCHIAT REP, V18, DOI 10.1007/s11920-016-0741-y
   Spataro Jared, 2020, HELPING OUR DEV STAY
   Storey MA, 2021, IEEE T SOFTWARE ENG, V47, P2125, DOI 10.1109/TSE.2019.2944354
   Taha S, 2014, BRIT J HEALTH PSYCH, V19, P592, DOI 10.1111/bjhp.12058
   Teasdale E, 2012, BRIT J HEALTH PSYCH, V17, P44, DOI 10.1111/j.2044-8287.2011.02017.x
   Thommes EW, 2016, SPRINGER P MATH STAT, V185, P309, DOI 10.1007/978-3-319-43709-5_15
   Topp CW, 2015, PSYCHOTHER PSYCHOSOM, V84, DOI 10.1159/000376585
   World Health Organization, 2020, Coronavirus disease 2019 (COVID-19) situation report -72
   Wrobel MR, 2013, C HUM SYST INTERACT, P518, DOI 10.1109/HSI.2013.6577875
   Xiang YT, 2020, INT J BIOL SCI, V16, P1741, DOI 10.7150/ijbs.45072
   Yong AG, 2019, NAT HAZARDS, V98, P319, DOI 10.1007/s11069-019-03669-2
   Yong AG, 2017, RISK ANAL, V37, P2321, DOI 10.1111/risa.12797
NR 71
TC 124
Z9 130
U1 6
U2 52
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2020
VL 25
IS 6
BP 4927
EP 4961
DI 10.1007/s10664-020-09875-y
EA SEP 2020
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA OI4BB
UT WOS:000569291600001
PM 32952438
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Morasca, S
   Lavazza, L
AF Morasca, Sandro
   Lavazza, Luigi
TI On the assessment of software defect prediction models via ROC curves
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software defect prediction model; Software defect proneness; ROC;
   Thresholds; AUC; Gini
ID METRICS; CLASSIFICATION; AREA; PERFORMANCE; THRESHOLDS; ERROR
AB Software defect prediction models are classifiers often built by setting a thresholdton a defect proneness model, i.e., a scoring function. For instance, they classify a software module non-faulty if its defect proneness is belowtand positive otherwise. Different values oftmay lead to different defect prediction models, possibly with very different performance levels. Receiver Operating Characteristic (ROC) curves provide an overall assessment of a defect proneness model, by taking into account all possible values oftand thus all defect prediction models that can be built based on it. However, using a defect proneness model with a value oftis sensible only if the resulting defect prediction model has a performance that is at least as good as some minimal performance level that depends on practitioners' and researchers' goals and needs. We introduce a new approach and a new performance metric (the Ratio of Relevant Areas) for assessing a defect proneness model by taking into account only the parts of a ROC curve corresponding to values oftfor which defect proneness models have higher performance than some reference value. We provide the practical motivations and theoretical underpinnings for our approach, by: 1) showing how it addresses the shortcomings of existing performance metrics like the Area Under the Curve and Gini's coefficient; 2) deriving reference values based on random defect prediction policies, in addition to deterministic ones; 3) showing how the approach works with several performance metrics (e.g.,PrecisionandRecall) and their combinations; 4) studying misclassification costs and providing a general upper bound for the cost related to the use of any defect proneness model; 5) showing the relationships between misclassification costs and performance metrics. We also carried out a comprehensive empirical study on real-life data from the SEACRAFT repository, to show the differences between our metric and the existing ones and how more reliable and less misleading our metric can be.
C1 [Morasca, Sandro; Lavazza, Luigi] Univ Insubria, Dipartimento Sci Teor & Applicate, Via Ottorino Rossi 9, I-21100 Varese, Italy.
C3 University of Insubria
RP Morasca, S (corresponding author), Univ Insubria, Dipartimento Sci Teor & Applicate, Via Ottorino Rossi 9, I-21100 Varese, Italy.
EM sandro.morasca@uninsubria.it; luigi.lavazza@uninsubria.it
OI Morasca, Sandro/0000-0003-4598-7024
FU Universita degli Studi dell'Insubria within the CRUI-CARE Agreement
FX Open access funding provided by Universita degli Studi dell'Insubria
   within the CRUI-CARE Agreement.
CR Al Dallal J, 2014, EMPIR SOFTW ENG, V19, P775, DOI 10.1007/s10664-012-9239-3
   Alves TL, 2010, PROC IEEE INT CONF S
   [Anonymous], 2017, PROC 21 INT C EVAL A
   Arisholm E, 2007, ISSRE 2007: 18TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P215, DOI 10.1109/ISSRE.2007.22
   Arisholm E, 2010, J SYST SOFTWARE, V83, P2, DOI 10.1016/j.jss.2009.06.055
   Baker SG, 2001, J AM STAT ASSOC, V96, P421, DOI 10.1198/016214501753168136
   Black S., 2010, Technical report Lero-TR-2010-04
   Bowes D, 2018, SOFTWARE QUAL J, V26, P525, DOI 10.1007/s11219-016-9353-3
   Catal C, 2012, ACTA POLYTECH HUNG, V9, P193
   Catal C, 2009, EXPERT SYST APPL, V36, P7346, DOI 10.1016/j.eswa.2008.10.027
   Cerpa N, 2010, INFORM SOFTWARE TECH, V52, P934, DOI 10.1016/j.infsof.2010.03.011
   Cohen J., 1988, STAT POWER ANAL BEHA
   Cremona L, 2005, ELEMENTS PROJECTIVE
   da Costa DA, 2018, EMPIR SOFTW ENG, V23, P334, DOI 10.1007/s10664-017-9520-6
   Di Nucci D, 2018, IEEE T SOFTWARE ENG, V44, P5, DOI 10.1109/TSE.2017.2659747
   Dodd LE, 2003, BIOMETRICS, V59, P614, DOI 10.1111/1541-0420.00071
   Drummond C, 2006, MACH LEARN, V65, P95, DOI 10.1007/s10994-006-8199-5
   Erni K, 1996, PROCEEDINGS OF THE 3RD INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, P64, DOI 10.1109/METRIC.1996.492444
   Fawcett T, 2006, PATTERN RECOGN LETT, V27, P861, DOI 10.1016/j.patrec.2005.10.010
   Fenton N. E., 2014, CHAPMAN HALL CRC INN
   FLACH P. A., 2003, P 20 INT C ICML 2003, P194
   Gini C., 1912, VARIABILIT MUTABILIT
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Hand DJ, 2009, MACH LEARN, V77, P103, DOI 10.1007/s10994-009-5119-5
   HANLEY JA, 1982, RADIOLOGY, V143, P29, DOI 10.1148/radiology.143.1.7063747
   Hardin J.W., 2002, Generalized Estimating Equations
   Herbold S, 2021, IEEE T SOFTWARE ENG, V47, P2617, DOI 10.1109/TSE.2019.2957794
   Herbold S, 2018, IEEE T SOFTWARE ENG, V44, P811, DOI 10.1109/TSE.2017.2724538
   Hosmer DW, 2013, WILEY SER PROBAB ST, P89
   Huang Q, 2019, EMPIR SOFTW ENG, V24, P2823, DOI 10.1007/s10664-018-9661-2
   Jiang Y., 2009, P 5 INT C PRED MOD S, P1, DOI [10.1145/1540438.1540466, DOI 10.1145/1540438.1540466]
   Jiang YL, 1996, RADIOLOGY, V201, P745, DOI 10.1148/radiology.201.3.8939225
   Jones Capers., 2008, A New Business Model For Function Point Metrics
   Jureczko M, 2010, P 6 INT C PREDICTIVE, DOI DOI 10.1145/1868328.1868342
   Kabinna S, 2018, EMPIR SOFTW ENG, V23, P290, DOI 10.1007/s10664-017-9518-0
   Khoshgoftaar T. M., 1998, Empirical Software Engineering, V3, P275, DOI 10.1023/A:1009736205722
   Khoshgoftaar TM, 2004, EMPIR SOFTW ENG, V9, P229, DOI 10.1023/B:EMSE.0000027781.18360.9b
   Khoshgoftaar TM, 2001, SOFTWARE QUAL J, V9, P9, DOI 10.1023/A:1016621219262
   Krantz DH, 1971, TVERSKY FDN MEASUREM, V1
   Langdon WB, 2016, INFORM SOFTWARE TECH, V73, P16, DOI 10.1016/j.infsof.2016.01.003
   Lessmann S, 2015, EUR J OPER RES, V247, P124, DOI 10.1016/j.ejor.2015.05.030
   Malhotra R, 2015, APPL SOFT COMPUT, V27, P504, DOI 10.1016/j.asoc.2014.11.023
   Malhotra R, 2013, INT J MACH LEARN CYB, V4, P273, DOI 10.1007/s13042-012-0095-7
   MATTHEWS BW, 1975, BIOCHIM BIOPHYS ACTA, V405, P442, DOI 10.1016/0005-2795(75)90109-9
   MCCLISH DK, 1989, MED DECIS MAKING, V9, P190, DOI 10.1177/0272989X8900900307
   McIntosh S, 2018, IEEE T SOFTWARE ENG, V44, P412, DOI 10.1109/TSE.2017.2693980
   Mendling J, 2012, J SYST SOFTWARE, V85, P1188, DOI 10.1016/j.jss.2012.01.017
   Morasca S, 2017, INFORM SOFTWARE TECH, V89, P37, DOI 10.1016/j.infsof.2017.03.005
   Morasca S, 2009, INT SYMP EMP SOFTWAR, P44, DOI 10.1109/ESEM.2009.5316048
   Murgia A, 2018, EMPIR SOFTW ENG, V23, P521, DOI 10.1007/s10664-017-9526-0
   Nam J, 2018, IEEE T SOFTWARE ENG, V44, P874, DOI 10.1109/TSE.2017.2720603
   Posnett D, 2011, P 2011 26 IEEE ACM I, P362
   Powers D. M. W., 2012, 2012 IEEE International Conference on Information Science and Technology, P567, DOI 10.1109/ICIST.2012.6221710
   Powers DMW, 2020, J MACH LEARN TECHNOL, P37, DOI DOI 10.9735/2229-3981
   Provost F, 2001, MACH LEARN, V42, P203, DOI 10.1023/A:1007601015854
   Pundir S., 2012, INT J ENG SCI INNOVA, V1, P296
   Radjenovic D, 2013, INFORM SOFTWARE TECH, V55, P1397, DOI 10.1016/j.infsof.2013.02.009
   Ragkhitwetsagul C, 2018, EMPIR SOFTW ENG, V23, P2464, DOI 10.1007/s10664-017-9564-7
   Robin X, 2011, BMC BIOINFORMATICS, V12, DOI 10.1186/1471-2105-12-77
   Sanchez-Gonzalez L, 2012, 16 INT C EV ASS SOFT, P197, DOI [10.1049/ic.2012.0026, DOI 10.1049/IC.2012.0026]
   Schneidewind NF, 2000, SEVENTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 2001, PROCEEDINGS, P328, DOI 10.1109/METRIC.2001.915540
   Shatnawi R, 2010, IEEE T SOFTWARE ENG, V36, P216, DOI 10.1109/TSE.2010.9
   Shatnawi R, 2010, J SOFTW MAINT EVOL-R, V22, P1, DOI 10.1002/smr.404
   Shepperd M, 2014, IEEE T SOFTWARE ENG, V40, P603, DOI 10.1109/TSE.2014.2322358
   Shepperd M, 2012, INFORM SOFTWARE TECH, V54, P820, DOI 10.1016/j.infsof.2011.12.008
   Singh Y, 2010, SOFTWARE QUAL J, V18, P3, DOI 10.1007/s11219-009-9079-6
   SWETS J. A, 1982, ACAD PRESS SERIES CO
   Tosun A, 2009, INT SYMP EMP SOFTWAR, P478
   Total Metrics, 2007, METH SOFTW SIZ DEC M
   Van Rijsbergen C. J., 1979, Information Retrieval, V2nd
   Morales SPV, 2014, COLECCION OPERA PRIM, P13
   Vilalta Ricardo., 2000, ICML 00, P1087
   YOUDEN WJ, 1950, CANCER-AM CANCER SOC, V3, P32, DOI 10.1002/1097-0142(1950)3:1<32::AID-CNCR2820030106>3.0.CO;2-3
   Yue Jiang, 2008, 2008 IEEE International Symposium on Software Reliability Engineering, P197, DOI 10.1109/ISSRE.2008.54
   Zhang F, 2017, EMPIR SOFTW ENG, V22, P3186, DOI 10.1007/s10664-017-9516-2
   Zhang H., 2013, P 2013 9 JOINT M FDN, P643, DOI DOI 10.1145/2491411.2494581
NR 76
TC 24
Z9 26
U1 1
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2020
VL 25
IS 5
BP 3977
EP 4019
DI 10.1007/s10664-020-09861-4
EA AUG 2020
PG 43
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NJ1FD
UT WOS:000561279500002
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Allodi, L
   Cremonini, M
   Massacci, F
   Shim, W
AF Allodi, Luca
   Cremonini, Marco
   Massacci, Fabio
   Shim, Woohyun
TI Measuring the accuracy of software vulnerability assessments:
   experiments with students and professionals
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software vulnerabilities; Risk assessment; Cybersecurity management;
   CVSS; Knowledge units; Professionalization
ID DIGITAL SKILLS; SECURITY
AB Assessing the risks of software vulnerabilities is a key process of software development and security management. This assessment requires to consider multiple factors (technical features, operational environment, involved assets, status of the vulnerability lifecycle, etc.) and may depend from the assessor's knowledge and skills. In this work, we tackle with an important part of this problem by measuring the accuracy of technical vulnerability assessments by assessors with different level and type of knowledge. We report an experiment to compare how accurately students with different technical education and security professionals are able to assess the severity of software vulnerabilities with the Common Vulnerability Scoring System (v3) industry methodology. Our results could be useful for increasing awareness about the intrinsic subtleties of vulnerability risk assessment and possibly better compliance with regulations. With respect to academic education, professional training and human resources selections our work suggests that measuring the effects of knowledge and expertise on the accuracy of software security assessments is feasible albeit not easy.
C1 [Allodi, Luca] Eindhoven Univ Technol, Secur Grp, Eindhoven, Netherlands.
   [Cremonini, Marco] Univ Milan, Milan, Italy.
   [Massacci, Fabio] Univ Trento, Trento, Italy.
   [Shim, Woohyun] Korea Inst Publ Adm, Seoul, South Korea.
C3 Eindhoven University of Technology; University of Milan; University of
   Trento
RP Massacci, F (corresponding author), Univ Trento, Trento, Italy.
EM l.allodi@tue.nl; marco.cremonini@unimi.it; fabio.massacci@unitn.it;
   whshim@kipa.re.kr
RI Massacci, Fabio/C-2662-2012; Cremonini, Marco/AAD-7612-2022
OI Massacci, Fabio/0000-0002-1091-8486; Cremonini,
   Marco/0000-0002-4031-9791
FU European Union [285223, 830929]; NWO through the SpySpot project
   [628.001.004]
FX This research has been partially supported by the European Union's 7th
   Framework Programme under grant agreement no 285223 (SECONOMICS), the
   H2020 Framework Programme under grant agreement no 830929
   (CyberSec4Europe) and from the NWO through the SpySpot project
   (no.628.001.004).
CR Acar Y, 2017, P IEEE S SECUR PRIV, P154, DOI 10.1109/SP.2017.52
   Acar Y, 2017, PROCEEDINGS OF THIRTEENTH SYMPOSIUM ON USABLE PRIVACY AND SECURITY (SOUPS 2017), P81
   Acar Y, 2016, P IEEE S SECUR PRIV, P289, DOI 10.1109/SP.2016.25
   Agresti A., 2011, Categorical Data Analysis, P206, DOI [10.1007/978-3-642-04898-2_161, DOI 10.1007/978-3-642-04898-2_161]
   Allodi L, 2017, LECT NOTES COMPUT SC, V10646, P23, DOI 10.1007/978-3-319-70004-5_2
   Allodi L, 2017, RISK ANAL, V37, P1606, DOI 10.1111/risa.12864
   Allodi L, 2014, ACM T INFORM SYST SE, V17, DOI 10.1145/2630069
   Arkin B, 2005, IEEE SECUR PRIV, V3, P84, DOI 10.1109/MSP.2005.23
   Binkley M, 2012, ASSESSMENT AND TEACHING OF 21ST CENTURY SKILLS, P17, DOI 10.1007/978-94-007-2324-5_2
   Bozorgi M., 2010, Proceedings of of 16th International Conference of on Knowledge discovery and data mining, P105
   Buczak AL, 2016, IEEE COMMUN SURV TUT, V18, P1153, DOI 10.1109/COMST.2015.2494502
   Burley DL, 2019, COMPUTER, V52, P29, DOI 10.1109/MC.2018.2883567
   Burley DL, 2014, COMMUN ACM, V57, P24, DOI 10.1145/2556936
   Camerer C. F., 1991, GEN THEORY EXPERTISE
   Colesky M, 2016, 2016 IEEE SYMPOSIUM ON SECURITY AND PRIVACY WORKSHOPS (SPW 2016), P33, DOI 10.1109/SPW.2016.23
   Conklin W, 2018, P 51 HAW INT C SYST
   Conklin WA, 2014, P ANN HICSS, P2006, DOI 10.1109/HICSS.2014.254
   Conti M, 2018, ELECTRONICS-SWITZ, V7, DOI 10.3390/electronics7050075
   Dietrich F, 2017, SOC CHOICE WELFARE, V48, P747, DOI 10.1007/s00355-017-1034-z
   Doynikova E, 2017, EUROMICRO WORKSHOP P, P346, DOI 10.1109/PDP.2017.44
   Edmundson Anne, 2013, Engineering Secure Software and Systems. 5th International Symposium, ESSoS 2013. Proceedings, P197, DOI 10.1007/978-3-642-36563-8_14
   ENISA, 2017, PRIOR EU RES AN ECSO
   FIRST, 2015, TECH REP
   Geer Dan, 2015, login:: the magazine of USENIX & SAGE, V40, P50
   Hallett J, 2018, P USENIX WORKSH ADV
   Holm H, 2015, COMPUT SECUR, V53, P18, DOI 10.1016/j.cose.2015.04.012
   Hudnall M, 2019, COMPUTER, V52, P18, DOI 10.1109/MC.2018.2883334
   Islam S, 2011, SOFTW SYST MODEL, V10, P369, DOI 10.1007/s10270-010-0154-z
   ISO, 2008, TECH REP
   Jacobs J, 2019, P WORKSH EC INF SEC
   Joint Task Force on Cybersecurity Education, 2017, CURR GUID POSTS DEGR
   Kalyuga S, 2003, EDUC PSYCHOL-US, V38, P23, DOI 10.1207/S15326985EP3801_4
   Katsantonis M, 2017, IEEE GLOB ENG EDUC C, P771, DOI 10.1109/EDUCON.2017.7942934
   Kretz Donald R., 2018, Cognitive Biases in Visualizations, P111
   Labunets K, 2017, EMPIR SOFTW ENG, V22, P3017, DOI 10.1007/s10664-017-9502-8
   Lichtenstein S., 1982, JUDGMENT UNCERTAINTY, DOI DOI 10.1017/CBO9780511809477.023
   Marks J, 2018, NIST TEAMS IBM WATSO
   McGettrick A, 2013, IEEE SECUR PRIV, V11, P66, DOI 10.1109/MSP.2013.155
   McGraw G., 2006, SOFTWARE SECURITY BU, V1
   Mell P, 2007, TECH REP
   MEYER BD, 1995, J BUS ECON STAT, V13, P151, DOI 10.2307/1392369
   Microsoft, 2019, MICR SEC DEV LIF SDL
   Morel B., 2011, P 4 ACM WORKSHOP SEC, DOI [10.1145/2046684.2046699, DOI 10.1145/2046684.2046699]
   Morrison P, 2018, INFORM SOFTWARE TECH, V102, P146, DOI 10.1016/j.infsof.2018.05.011
   Morrison Patrick., 2017, P HOT TOPICS SCI SEC, P85, DOI DOI 10.1145/3055305.3055312
   Murphy SA, 2000, J AM STAT ASSOC, V95, P449, DOI 10.2307/2669386
   Nakagawa S, 2013, METHODS ECOL EVOL, V4, P133, DOI 10.1111/j.2041-210x.2012.00261.x
   NIST, 2018, VULN DESCR ONT VDO F
   Onarlioglu Kaan, 2012, P NETW DISTR SYST SE
   OWASP, 2019, OWASP RISK RAT METH
   PCI-DSS, 2018, TECH REP
   Pereira Teresa, 2017, 2017 IEEE World Engineering Education Conference (EDUNINE). Proceedings, P47, DOI 10.1109/EDUNINE.2017.7918179
   Reece RP, 2015, COMPUT SECUR, V48, P182, DOI 10.1016/j.cose.2014.10.007
   SAFECode, 2018, FUND PRACT SEC SOFTW
   Salman I, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P666, DOI 10.1109/ICSE.2015.82
   Scarfone K, 2009, INT SYMP EMP SOFTWAR, P517
   Shumba R., 2013, P ITICSE WORK GROUP, P1, DOI [10.1145/2543882.2543883, DOI 10.1145/2543882.2543883]
   Singh C, 2002, AM J PHYS, V70, P1103, DOI 10.1119/1.1512659
   Sjoberg DIK, 2003, LECT NOTES COMPUT SC, V2765, P24
   Spring J, 2018, TECH REP
   Tripwire, 2019, ADV VULN RISK SCOR P
   van Laar E, 2018, TELEMAT INFORM, V35, P2184, DOI 10.1016/j.tele.2018.08.006
   van Laar E, 2017, COMPUT HUM BEHAV, V72, P577, DOI 10.1016/j.chb.2017.03.010
   Viega J., 2001, BUILDING SECURE SOFT
   von Solms B, 2005, COMPUT SECUR, V24, P99, DOI 10.1016/j.cose.2005.02.002
   Williams BR, 2012, PCI COMPLIANCE UNDER
   Wohlin C., 2012, Experimentation in Software Engineering
   Workman M, 2008, J AM SOC INF SCI TEC, V59, P662, DOI 10.1002/asi.20779
NR 68
TC 10
Z9 12
U1 1
U2 7
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2020
VL 25
IS 2
SI SI
BP 1063
EP 1094
DI 10.1007/s10664-019-09797-4
EA JAN 2020
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA KT0VU
UT WOS:000507930800001
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Li, PL
   Ko, AJ
   Begel, A
AF Li, Paul Luo
   Ko, Amy J.
   Begel, Andrew
TI What distinguishes great software engineers?
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software engineering; Software development management; Collaboration;
   Computer science education
ID MODEL
AB Great software engineers are essential to the creation of great software. However, today, we lack an understanding of what distinguishes great engineers from ordinary ones. We address this knowledge gap by conducting one of the largest mixed-method studies of experienced engineers to date. We surveyed 1,926 expert engineers, including senior engineers, architects, and technical fellows, asking them to judge the importance of a comprehensive set of 54 attributes of great engineers. We then conducted 77 email interviews to interpret our findings and to understand the influence of contextual factors on the ratings. After synthesizing the findings, we believe that the top five distinguishing characteristics of great engineers are writing good code, adjusting behaviors to account for future value and costs, practicing informed decision-making, avoiding making others' jobs harder, and learning continuously. We relate the findings to prior work, and discuss implications for researchers, practitioners, and educators.
C1 [Li, Paul Luo] Microsoft, Redmond, WA 98052 USA.
   [Ko, Amy J.] Univ Washington, Informat Sch, Seattle, WA 98195 USA.
   [Begel, Andrew] Microsoft Res, Redmond, WA 98052 USA.
C3 Microsoft; University of Washington; University of Washington Seattle;
   Microsoft
RP Li, PL (corresponding author), Microsoft, Redmond, WA 98052 USA.
EM paul.li@microsoft.com; ajko@uw.edu; andrew.begel@microsoft.com
RI Begel, Andrew/AAP-9630-2020
OI Begel, Andrew/0000-0002-7425-4818
FU Microsoft; Google; National Science Foundation (NSF) [CCF-0952733,
   CNS-1240786, IIS-1314399]
FX The authors wish to thank the Microsoft software engineers who
   participated in our research. This work was supported in part by
   Microsoft, Google, and National Science Foundation (NSF) Grants
   CCF-0952733, CNS-1240786, and IIS-1314399.
CR Ahmed F, 2012, IT PROF, V14, P44, DOI 10.1109/MITP.2012.7
   American Medical Association, 2001, PRINC MED ETH
   [Anonymous], 2013, NONPARAMETRIC STAT M
   [Anonymous], 2016, THESIS
   [Anonymous], 2007, 4 INT WORKSHOP MININ
   [Anonymous], 2013, P ACM SIGCSE MAR
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Aranda J, 2009, PROC INT CONF SOFTW, P298, DOI 10.1109/ICSE.2009.5070530
   Baltes S, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P187, DOI 10.1145/3236024.3236061
   Beck K., 2011, MANIFESTO AGILE SOFT
   Begel A, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P120
   Bertram D, 2010, 2010 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, P291
   BOEHM BW, 1988, COMPUTER, V21, P61, DOI 10.1145/12944.12948
   Bourque Pierre, 2014, SWEBOK: Guide to the Software Engineering Body of Knowledge, V3rd
   Brechner Eric, 2003, Conference on Object Oriented Programming Systems Languages and Applications, Companion of the 18th Annual ACM SIGPLAN Conference on Object-Oriented Programming, Systems, Languages, and Applications, Anaheim, CA, USA, P134
   Brooks Frederick P., 1995, The mythical man-month
   Carver JC, 2008, IEEE T SOFTWARE ENG, V34, P800, DOI 10.1109/TSE.2008.49
   Cruz S, 2015, COMPUT HUM BEHAV, V46, P94, DOI 10.1016/j.chb.2014.12.008
   ERICSSON KA, 1993, PSYCHOL REV, V100, P363, DOI 10.1037/0033-295X.100.3.363
   Fisher A., 2002, SIGCSE Bulletin, V34, P79, DOI 10.1145/543812.543836
   Fitzpatrick B., 2009, The Myth of the Genius Programmer
   Gan YB, 2016, STEM CELLS INT, V2016, DOI 10.1155/2016/9042019
   Gobeli DH, 1998, J PROD INNOVAT MANAG, V15, P423, DOI 10.1016/S0737-6782(98)00011-3
   Gugerty L., 1986, P CHI 1986 BOST MASS, P171, DOI DOI 10.1145/22627.22367
   Herbsleb J., 1997, COMMUN ACM, V40, P31
   Hewner M, 2010, SIGCSE 10: PROCEEDINGS OF THE 41ST ACM TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION, P275
   Jeong G, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P111, DOI 10.1145/1595696.1595715
   Joint Task Force on Computing Curricula, 2014, TECHNICAL REPORT
   Kelley R., 1999, How to be a star at work: Nine breakthrough strategies you need to succeed
   Ko A., 2011, iConference, P106
   Ko AJ, 2007, PROC INT CONF SOFTW, P344
   Kruchten P, 2012, IEEE SOFTWARE, V29, P18, DOI 10.1109/MS.2012.167
   LaToza T. D., 2006, 28th International Conference on Software Engineering Proceedings, P492, DOI 10.1145/1134285.1134355
   Li PL, 2015, P 37 INT C SOFTW ENG
   Margolis JaneFischer., 2003, Unlocking the Clubhouse: Women in Computing
   Meade AW, 2012, PSYCHOL METHODS, V17, P437, DOI 10.1037/a0028085
   NSPE, 2007, NAT SOC PROF ENG COD
   PERRY DE, 1994, IEEE SOFTWARE, V11, P36, DOI 10.1109/52.300082
   Podgurski A, 2003, PROC INT CONF SOFTW, P465, DOI 10.1109/ICSE.2003.1201224
   Radermacher A, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P291, DOI 10.1145/2591062.2591159
   Rising L, 2000, IEEE SOFTWARE, V17, P26, DOI 10.1109/52.854065
   Robillard MP, 2004, IEEE T SOFTWARE ENG, V30, P889, DOI 10.1109/TSE.2004.101
   Rozovsky J., 2015, 5 KEYS SUCCESSFUL GO
   Runeson P, 2007, PROC INT CONF SOFTW, P499
   SACKMAN H, 1968, COMMUN ACM, V11, P3, DOI 10.1145/362851.362858
   Shackelford R., 2006, SIGCSE Bulletin, V38, P456, DOI 10.1145/1124706.1121482
   SIMON HA, 1973, PUBLIC ADMIN REV, V33, P268, DOI 10.2307/974804
   Simon HA, 1955, Q J ECON, V69, P99, DOI 10.2307/1884852
   Singer J., 1997, Proceedings of the 1997 Conference of the Centre for Advanced Studies onf Collaborative Research, P174
   Valett J. D., 1988, Proceedings of the Twenty-First Annual Hawaii International Conference on System Sciences. Vol.II. Software Track (Cat. No.88TH0212-1), P293, DOI 10.1109/HICSS.1988.11818
   Ventures CBS, 2000, RISK RETURN EXPECTED
NR 51
TC 17
Z9 17
U1 2
U2 17
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN
PY 2020
VL 25
IS 1
BP 322
EP 352
DI 10.1007/s10664-019-09773-y
EA DEC 2019
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA KP0WS
UT WOS:000500275700001
DA 2024-07-18
ER

PT J
AU Yao, KD
   de Pádua, GB
   Shang, WY
   Sporea, C
   Toma, A
   Sajedi, S
AF Yao, Kundi
   de Padua, Guilherme B.
   Shang, Weiyi
   Sporea, Catalin
   Toma, Andrei
   Sajedi, Sarah
TI Log4Perf: suggesting and updating logging locations for web-based
   systems' performance monitoring
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software logs; Logging suggestion; Performance monitoring; Performance
   modeling; Performance engineering
AB Performance assurance activities are an essential step in the release cycle of software systems. Logs have become one of the most important sources of information that is used to monitor, understand and improve software performance. However, developers often face the challenge of making logging decisions, i.e., neither logging too little and logging too much is desirable. Although prior research has proposed techniques to assist in logging decisions, those automated logging guidance techniques are rather general, without considering a particular goal, such as monitoring software performance. In this paper, we present Log4Perf, an automated approach that provides suggestions of where to insert logging statement with the goal of monitoring web-based systems' CPU usage. In the first part of our approach, we leverage the performance model's prediction errors to suggest the need for updating logging locations when software evolves. In the second part of our approach, we build and manipulate a statistical performance model to identify the locations in the source code that statistically significantly influence CPU usage. To evaluate Log4Perf, we conduct case studies on two open source systems, i.e., CloudStore and OpenMRS, and one large-scale commercial system. Our evaluation results show that our approach can suggest the need for updating logging locations and identify the logging locations that can be kept unchanged. We manually examine the logging locations that are newly suggested or deprecated. We find that our approach can build well-fit statistical performance models, indicating that such models can be leveraged to investigate the influence of locations in the source code on performance. The suggested logging locations are often in small and simple methods that do not have logging statements, and are not performance hotspots. Our approach can be used to complement traditional approaches that are based on software metrics or performance hotspots. In addition, we identify seven root-causes of these suggested or deprecated logging locations. Log4Perf is integrated into the release engineering process of the commercial software to provide logging suggestions on a regular basis.
C1 [Yao, Kundi; de Padua, Guilherme B.; Shang, Weiyi] Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ, Canada.
   [Sporea, Catalin; Toma, Andrei; Sajedi, Sarah] ERA Environm Management Solut, Montreal, PQ, Canada.
C3 Concordia University - Canada
RP Yao, KD (corresponding author), Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ, Canada.
EM ku_yao@encs.concordia.ca; g_bicalh@encs.concordia.ca;
   shang@encs.concordia.ca; steve.sporea@era-ehs.com;
   andrei.toma@era-ehs.com; sarah.sajedi@era-ehs.com
RI Toma, Andrei N/K-2483-2012; sajedi, sarah/ABE-2024-2020; Sajedi,
   Sarah/KGL-3269-2024
OI Sajedi, Sarah/0000-0002-7900-2812
CR Ahmed TM, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P1, DOI [10.1145/2901739.2901774, 10.1109/MSR.2016.011]
   AlGhmadi HM, 2016, PROC IEEE INT CONF S, P279, DOI 10.1109/ICSME.2016.46
   [Anonymous], 2017, LOG4J ASYNC
   [Anonymous], 2015, APACHE JMETER
   [Anonymous], 2010, JAVA HOTSPOT PERFORM
   [Anonymous], 2010, PROC ACMIEEE INT S E
   [Anonymous], 2017, NET COMPILER PLATFOR
   [Anonymous], 2017, PSUTIL
   [Anonymous], 2017, VISUAL STUDIO PROFIL
   [Anonymous], 2009, Introduction to the Practice of Statistics
   [Anonymous], 2017, JPROFILER
   Bezemer C, 2014, J SOFTW-EVOL PROC, V26, P1193, DOI 10.1002/smr.1657
   Bezemer CP, 2014, J SYST SOFTWARE, V87, P87, DOI 10.1016/j.jss.2013.09.013
   Brebner P, 2016, PROCEEDINGS OF THE 2016 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE'16), P55, DOI 10.1145/2851553.2851560
   Chen JF, 2017, PROC IEEE INT CONF S, P341, DOI 10.1109/ICSME.2017.13
   Chen TH, 2016, P 24 ACM SIGSOFT INT
   Chen TH, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P666, DOI 10.1145/2950290.2950303
   Chen TH, 2016, IEEE T SOFTWARE ENG, V42, P1148, DOI 10.1109/TSE.2016.2553039
   Chen TH, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1001, DOI 10.1145/2568225.2568259
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   CloudScale, 2017, CLOUDSCALE PROJECT
   Cohen AE, 2005, INT CONF ACOUST SPEE, P105
   Cohen I, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDE '04), P231
   Eclipse JDT, 2017, ECLIPSE JAVA DEV TOO
   Farshchi M, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P24, DOI 10.1109/ISSRE.2015.7381796
   Foo King Chun, 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P32, DOI 10.1109/QSIC.2010.35
   Freedman D. A., 2009, STAT MODELS THEORY P
   Fu Q, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P24, DOI 10.1145/2591062.2591175
   Gao RY, 2016, IEEE INT CONF SOFTW, P22, DOI 10.1109/ICST.2016.9
   Harrell F.E., 2001, Regression modeling strategies: with applications to linear models, logistic regression, and survival analysis
   Jiang ZM, 2009, PROC IEEE INT CONF S, P125, DOI 10.1109/ICSM.2009.5306331
   JIT, 2018, TRAC JUST IN TIM COM
   JVM, 2018, JVM JIT COMP WAY PER
   Kabinna S, 2018, EMPIR SOFTW ENG, V23, P290, DOI 10.1007/s10664-017-9518-0
   Kabinna S, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P154, DOI [10.1145/2901739.2901769, 10.1109/MSR.2016.025]
   Kabinna S, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P326, DOI 10.1109/SANER.2016.29
   Kernighan B. W., 1999, The Practice of Programming, V1st
   Kuhn M, 2008, J STAT SOFTW, V28, P1, DOI 10.18637/jss.v028.i05
   Li H, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P1, DOI 10.1145/3183519.3183544
   Li H, 2017, EMPIR SOFTW ENG, V22, P1684, DOI 10.1007/s10664-016-9456-2
   Li H, 2017, EMPIR SOFTW ENG, V22, P1831, DOI 10.1007/s10664-016-9467-z
   Liu Y, 2018, DESTECH TRANS COMP, P11
   Maplesden D, 2015, P 6 ACM SPEC INT C P, P175
   Maplesden D, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P149, DOI 10.1109/ICSE.2015.143
   Mockus A, 2010, Proc. of the 18th Symposium on the Foundations of Software Engineering (FSE), P117
   Nguyen LTH, 2012, BIOMATERIALS AND STEM CELLS IN REGENERATIVE MEDICINE, P299
   Alcocer JPS, 2016, PROCEEDINGS OF THE 2016 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE'16), P37, DOI 10.1145/2851553.2851571
   Shang W., 2011, P 2011 18 WORKING C, P335, DOI DOI 10.1109/WCRE.2011.48
   Shang WY, 2014, J SOFTW-EVOL PROC, V26, P3, DOI 10.1002/smr.1579
   Shang Weiyi., 2015, P 6 ACMSPEC INT C PE, P15
   Shihab E., 2011, Proceedings of the ACM SIGSOFT symposium and the European Conference on Foundations of Software Engineering, P300
   Sim SE, 2003, PROC INT CONF SOFTW, P74, DOI 10.1109/ICSE.2003.1201189
   Stewart C., 2007, Operating Systems Review, V41, P31, DOI 10.1145/1272998.1273002
   Syer MD, 2017, AUTOMAT SOFTW ENG, V24, P189, DOI 10.1007/s10515-016-0196-8
   Tang L, 2018, PROCEEDINGS OF 2018 INTERNATIONAL CONFERENCE ON COMPUTING AND ARTIFICIAL INTELLIGENCE (ICCAI 2018), P127, DOI 10.1145/3194452.3194467
   TPC-W, 2017, TPC BENCHM W TPC W
   van Hoorn A., 2009, Continuous monitoring of software services: Design and application of the Kieker framework
   van Hoorn Andre, 2012, 3 JOINT WOSP SIPEW I, P247, DOI DOI 10.1145/2188286.2188326
   Waller Jan, 2015, ACM SIGSOFT Software Engineering Notes, V40, P1, DOI [10.1145/2735399, 10.1145/2735399.2735416]
   Weyuker EJ, 2000, IEEE T SOFTWARE ENG, V26, P1147, DOI 10.1109/32.888628
   Xiong PengCheng, 2013, ACM SPEC INT C PERF, P271, DOI 10.1145/2479871.2479909
   Yuan D., 2012, P 2012 USENIX S OP S, P293
   Yuan D, 2011, ACM SIGPLAN NOTICES, V46, P3, DOI 10.1145/1961296.1950369
   Yuan Ding, 2014, 11 USENIX S OPERATIN, P249
   Zhang S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P152, DOI 10.1145/2568225.2568251
   Zhang SJ, 2015, AER ADV ENG RES, V21, P12
   Zhao X, 2017, PROCEEDINGS OF THE 16TH WORKSHOP ON HOT TOPICS IN OPERATING SYSTEMS (HOTOS 2017), P125, DOI 10.1145/3102980.3103001
   Zhu JM, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P415, DOI 10.1109/ICSE.2015.60
   Zhuang Zhenyun., 2015, Proceedings of the 6th ACM/SPEC International Conference on Performance Engineering, P39
NR 69
TC 18
Z9 19
U1 0
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN
PY 2020
VL 25
IS 1
BP 488
EP 531
DI 10.1007/s10664-019-09748-z
EA OCT 2019
PG 44
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KP0WS
UT WOS:000492652400001
DA 2024-07-18
ER

PT J
AU Casalnuovo, C
   Sagae, K
   Deyanbu, P
AF Casalnuovo, Casey
   Sagae, Kenji
   Deyanbu, Prem
TI Studying the difference between natural and programming language corpora
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Language modeling; Programming languages; Natural languages; Syntax &
   grammar; Parse trees; Corpus comparison
ID CODE; QUALITY; LAWS
AB Code corpora, as observed in large software systems, are now known to be far more repetitive and predictable than natural language corpora. But why? Does the difference simply arise from the syntactic limitations of programming languages? Or does it arise from the differences in authoring decisions made by the writers of these natural and programming language texts? We conjecture that the differences are not entirely due to syntax, but also from the fact that reading and writing code is un-natural for humans, and requires substantial mental effort; so, people prefer to write code in ways that are familiar to both reader and writer. To support this argument, we present results from two sets of studies: 1) a first set aimed at attenuating the effects of syntax, and 2) a second, aimed at measuring repetitiveness of text written in other settings (e.g. second language, technical/specialized jargon), which are also effortful to write. We find that this repetition in source code is not entirely the result of grammar constraints, and thus some repetition must result from human choice. While the evidence we find of similar repetitive behavior in technical and learner corpora does not conclusively show that such language is used by humans to mitigate difficulty, it is consistent with that theory. This discovery of non-syntactic repetitive behaviour is actionable, and can be leveraged for statistically significant improvements on the code suggestion task. We discuss this finding, and other future implications on practice, and for research.
C1 [Casalnuovo, Casey; Deyanbu, Prem] Univ Calif Davis, Dept Comp Sci, Davis, CA 95616 USA.
   [Sagae, Kenji] Univ Calif Davis, Dept Linguist, Davis, CA 95616 USA.
C3 University of California System; University of California Davis;
   University of California System; University of California Davis
RP Casalnuovo, C (corresponding author), Univ Calif Davis, Dept Comp Sci, Davis, CA 95616 USA.
EM ccasal@ucdavis.edu; sagae@ucdavis.edu; ptdevanbu@ucdavis.edu
RI /AAZ-7265-2020
OI Casalnuovo, Casey/0000-0002-7112-8189
FU NSF [1414172]
FX We would like to thank Professors C. Sutton, Z. Su, V. Filkov, and R.
   Aranovich, along with the UC Davis DECAL and NLP Reading groups for
   comments and feedback on this research. We also would like to especially
   thank V. Hellendoorn for his feedback and input on our experiment
   between parse trees in Java and English. We also acknowledge support
   from NSF Grant #1414172, Exploiting the Naturalness of Software. Finally
   we are grateful to the reviewers and editors of this journal for their
   thoughtful comments, which were very helpful in improving the work
   presented in this paper.
CR Abadi Martin, 2016, TENSORFLOW LARGE SCA, V16, P265
   Allamanis M, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P472, DOI 10.1145/2635868.2635901
   Allamanis M, 2013, IEEE WORK CONF MIN S, P207, DOI 10.1109/MSR.2013.6624029
   [Anonymous], ARXIV13123005 CORR
   [Anonymous], 2017, ARXIV PREPRINT ARXIV
   [Anonymous], 2016, ARXIV160306042
   [Anonymous], 2015, Advances in neural information processing systems
   [Anonymous], 2008, COLING 2008 P WORKSH
   Bachmann A, 2009, IWPSE-EVOL 09: ERCIM WORKSHOP ON SOFTWARE EVOLUTION (EVOL) AND INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION (IWPSE), P119
   Baxter G, 2006, ACM SIGPLAN NOTICES, V41, P397, DOI 10.1145/1167515.1167507
   Bird S., 2004, P ACL INTERACTIVE PO, P214
   Bradley D., 1978, THESIS
   Bright W., 2017, The handbook of sociolinguistics, P81, DOI DOI 10.1002/9781405166256.CH5
   Busjahn T, 2015, INT C PROGRAM COMPRE, P255, DOI 10.1109/ICPC.2015.36
   Carlstrom B., 2013, Gachon learner corpus
   Chen SF, 1998, TR1098 HARV COMP SCI
   Chomsky N., 2002, On nature and language, P92
   Concas G, 2007, IEEE T SOFTWARE ENG, V33, P687, DOI [10.1109/TSE.2007.1019, 10.1109/TSE.2007.1016]
   Conklin K, 2008, APPL LINGUIST, V29, P72, DOI 10.1093/applin/amm022
   DANET B, 1980, LAW SOC REV, V14, P445, DOI 10.2307/3053192
   de Cock S., 2000, Corpus linguistics and linguistic theory, P51
   De Marneffe M.-C., 2006, LREC, V6, P449
   Demberg V, 2008, COGNITION, V109, P193, DOI 10.1016/j.cognition.2008.07.008
   Dig D, 2005, PROC IEEE INT CONF S, P389
   Field A., 2013, DISCOVERING STAT USI
   Frank SL, 2013, TOP COGN SCI, V5, P475, DOI 10.1111/tops.12025
   Gerlach M, 2013, PHYS REV X, V3, DOI 10.1103/PhysRevX.3.021006
   Gopstein D, 2018, IEEE WORK CONF MIN S, P281, DOI 10.1145/3196398.3196432
   Gopstein D, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P129, DOI 10.1145/3106237.3106264
   Gotti M., 2011, Investigating specialized discourse
   Gousios Georgios, 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P12, DOI 10.1109/MSR.2012.6224294
   Hale J, 2003, J PSYCHOLINGUIST RES, V32, P101, DOI 10.1023/A:1022492123056
   Harker S., 1993, P IEEE INT S REQUIRE, P266, DOI DOI 10.1109/ISRE.1993.324847
   Hathhorn C, 2015, ACM SIGPLAN NOTICES, V50, P336, DOI [10.1145/2813885.2737979, 10.1145/2737924.2737979]
   Hayes JH, 2005, IEEE SOFTWARE, V22, P30, DOI 10.1109/MS.2005.156
   Heafield K., 2011, P 6 WORKSH STAT MACH, P187
   Hellendoorn VJ, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P763, DOI 10.1145/3106237.3106290
   Hellendoorn VJ, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P157, DOI 10.1109/MSR.2015.22
   Hindle A, 2012, PROC INT CONF SOFTW, P837, DOI 10.1109/ICSE.2012.6227135
   Hochreiter S, 1997, NEURAL COMPUT, V9, P1735, DOI [10.1162/neco.1997.9.1.1, 10.1007/978-3-642-24797-2]
   HOFFMANN SH, 1984, HUM RIGHTS QUART, V6, P1, DOI 10.2307/762011
   Hothorn T, 2006, AM STAT, V60, P257, DOI 10.1198/000313006X118430
   i Cancho Ramon Ferrer, 2001, J QUANT LINGUIST, V8, P165
   Jbara Ahmad, 2017, Empirical Software Engineering, V22, P1440, DOI 10.1007/s10664-016-9477-x
   Kavaler D, 2017, IEEE INT CONF AUTOM, P72, DOI 10.1109/ASE.2017.8115620
   Khanh Dam H, 2016, ARXIV160802715
   Kim M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P151, DOI 10.1145/1985793.1985815
   KNESER R, 1995, INT CONF ACOUST SPEE, P181, DOI 10.1109/ICASSP.1995.479394
   KNUTH DE, 1984, COMPUT J, V27, P97, DOI 10.1093/comjnl/27.2.97
   Kuera H., 1967, Computational analysis of present-day American English
   Lehman M. M., 1996, Software Process Technology. 5th European Workshop, EWSPT '96 Proceedings, P108, DOI 10.1007/BFb0017737
   LEHMAN MM, 1980, P IEEE, V68, P1060, DOI 10.1109/PROC.1980.11805
   Levy R, 2008, COGNITION, V106, P1126, DOI 10.1016/j.cognition.2007.05.006
   Liu H, 2017, PROC INT CONF SOFTW, P221, DOI 10.1109/ICSE.2017.28
   Louridas P, 2008, ACM T SOFTW ENG METH, V18, DOI 10.1145/1391984.1391986
   Mandelbrot B., 1953, Commun. theory, V84, P486, DOI DOI 10.1140/EPJB/E2014-40805-2
   Manning C.D., 1999, FDN STAT NATURAL LAN
   Marcus M.P., 1993, COMPUT LINGUIST, V19, P313, DOI DOI 10.21236/ADA273556
   Michael L., 2014, ROUTLEDGE HDB HIST L, P484, DOI [10.4324/9781315794013.ch22, DOI 10.4324/9781315794013.CH22]
   Mikolov T, 2010, 11TH ANNUAL CONFERENCE OF THE INTERNATIONAL SPEECH COMMUNICATION ASSOCIATION 2010 (INTERSPEECH 2010), VOLS 1-2, P1045
   Mitzenmacher M., 2004, Internet Math., V1, P226, DOI DOI 10.1080/15427951.2004.10129088
   Norvig Peter, 2009, Beautiful data, P219
   Paquot M, 2012, ANNU REV APPL LINGUI, V32, P130, DOI 10.1017/S0267190512000098
   Petersen AM, 2012, SCI REP-UK, V2, DOI 10.1038/srep00943
   Petrov S, 2006, COLING/ACL 2006, VOLS 1 AND 2, PROCEEDINGS OF THE CONFERENCE, P433
   Petrov Slav, 2016, ANNOUNCING SYNTAXNET
   Piantadosi ST, 2014, PSYCHON B REV, V21, P1112, DOI 10.3758/s13423-014-0585-6
   Piantadosi ST, 2012, COGNITION, V122, P280, DOI 10.1016/j.cognition.2011.10.004
   Pierret D, 2009, INT C PROGRAM COMPRE, P228, DOI 10.1109/ICPC.2009.5090047
   Salager F., 1983, Compound Nominal Phrases in Scientific-Technical Literature: Proportion and Rationale
   Salvador A, 2017, PROC CVPR IEEE, P3068, DOI 10.1109/CVPR.2017.327
   Santos EA, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P504, DOI [10.1109/MSR.2016.065, 10.1145/2901739.2903493]
   Scalabrino S, 2017, IEEE INT CONF AUTOM, P417, DOI 10.1109/ASE.2017.8115654
   Schmitt N., 2004, Formulaic sequences: Acquisition, processing and use, DOI DOI 10.1075/LLLT.9
   Shannon C. E., 1948, BELL SYST TECH J, V27, P379, DOI DOI 10.1002/J.1538-7305.1948.TB01338.X
   SHANNON CE, 1951, BELL SYST TECH J, V30, P50, DOI 10.1002/j.1538-7305.1951.tb01366.x
   Siegmund J, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P378, DOI 10.1145/2568225.2568252
   Stefik A, 2013, ACM T COMPUT EDUC, V13, DOI 10.1145/2534973
   Stefik Andreas., 2017, P 2017 ACM SIGCSE TE, P641, DOI 10.1145/3017680.3022377
   SUNDARAM S.K., 2005, Proceedings of the 2005 workshop on Predictor models in software engineering, P1, DOI 10.1145/1082983.1083169
   Sundermeyer M, 2012, 13TH ANNUAL CONFERENCE OF THE INTERNATIONAL SPEECH COMMUNICATION ASSOCIATION 2012 (INTERSPEECH 2012), VOLS 1-3, P194
   Trockman A, 2018, IEEE WORK CONF MIN S, P314, DOI 10.1145/3196398.3196441
   Tsay J, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P356, DOI 10.1145/2568225.2568315
   Tu ZP, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P269, DOI 10.1145/2635868.2635875
   Varantola K., 1986, Unesco Alsed-LSP Newsletter (1977-2000), V9
   Wasow T, 2005, STANF STUD MORPHOL L, P265
   Weintrop in D., 2015, P 11 ANN INT C INT C, P101, DOI 10.1145/2787622.2787721
   White M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P334, DOI 10.1109/MSR.2015.38
   Wickham H, 2009, USE R, P1, DOI 10.1007/978-0-387-98141-3
   Xue X, 2015, 10000 ENGLISH COMPOS
   Zhang HY, 2008, WORK CONF REVERSE EN, P101, DOI 10.1109/WCRE.2008.37
   Zhi JJ, 2015, J SYST SOFTWARE, V99, P175, DOI 10.1016/j.jss.2014.09.042
   Zipf G., 1949, AM ARCH ETHNOLHARVAR, V19, P1
NR 93
TC 13
Z9 15
U1 2
U2 10
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2019
VL 24
IS 4
BP 1823
EP 1868
DI 10.1007/s10664-018-9669-7
PG 46
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA IL9CL
UT WOS:000477582700005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Santos, AR
   Machado, ID
   de Almeida, ES
   Siegmund, J
   Apel, S
AF Santos, Alcemir Rodrigues
   Machado, Ivan do Carmo
   de Almeida, Eduardo Santana
   Siegmund, Janet
   Apel, Sven
TI Comparing the influence of using feature-oriented programming and
   conditional compilation on comprehending feature-oriented software
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Quasi-experiments; Replication; Feature-oriented software development;
   FeatureHouse; Conditional compilation; Graduate students
AB Several variability representations have been proposed over the years. Software maintenance in the presence of variability is known to be hard. One of the reasons is that maintenance tasks require a large amount of cognitive effort for program comprehension. In fact, the different ways of representing variability in source code might influence the comprehension process in different ways. Despite the differences, there is little evidence about how these variability representations - such as conditional-compilation directives or feature-oriented programming - influence program comprehension. Existing research has focused primarily on either understanding how code using modern paradigms evolves compared to the traditional way of realizing variability, namely conditional compilation, or on the aspects influencing the comprehension of conditional compilation only. We used two different programs implemented in Java and each of these variability representations. As Java does not support conditional compilation natively, we relied on the mimicking (i.e., preprocessing annotations in comments) that has been used in the literature. Our results show no significant statistical differences regarding the evaluated measures (correctness, understanding, or response time) in the tasks. Our heterogeneous sample allowed us to produce evidence about the influence of using CC and FOP variability representations on the aspects involved in the comprehension of feature-oriented software, while addressing bug-finding tasks.
C1 [Santos, Alcemir Rodrigues] Univ Fed Bahia, Salvador, BA, Brazil.
   [Machado, Ivan do Carmo; de Almeida, Eduardo Santana] Univ Fed Bahia, Dept Comp Sci, Salvador, BA, Brazil.
   [Siegmund, Janet; Apel, Sven] Univ Passau, Chair Software Prod Lines, Passau, Germany.
C3 Universidade Federal da Bahia; Universidade Federal da Bahia; University
   of Passau
RP Santos, AR (corresponding author), Univ Fed Bahia, Salvador, BA, Brazil.
EM alcemirsantos@dcc.ufba.br; ivanmachado@dcc.ufba.br; esa@dcc.ufba.br;
   janet.siegmund@uni-passau.de; apel@uni-passau.de
RI Machado, Isabel C/I-6935-2012; Machado, Ivan/AAC-1015-2020; de Almeida,
   Eduardo/JJC-2493-2023
OI Machado, Ivan/0000-0001-9027-2293; Apel, Sven/0000-0003-3687-2233;
   Rodrigues Santos, Alcemir/0000-0001-8880-2996
FU INES [CNPq/465614/2014-0]; FAPESB [BOL0820/2014, JCB0060/2016]; CAPES
   [PDSE 99999.007061/2015-03]; German Research Foundation [AP 206/6, SI
   2045/2/1]; Bavarian State Ministry of Education, Science and the Arts of
   Centre Digitisation.Bavaria
FX This work is partially supported by INES (grant CNPq/465614/2014-0),
   FAPESB (grants BOL0820/2014 and JCB0060/2016), CAPES (grant PDSE
   99999.007061/2015-03), the German Research Foundation (AP 206/6, SI
   2045/2/1), and the Bavarian State Ministry of Education, Science and the
   Arts in the framework of the Centre Digitisation.Bavaria (ZD.B).
CR Anderson T.W., 1996, NEW STAT ANAL DATA
   Anderson TW, 1956, STAT INFERENCE FACTO, P111
   [Anonymous], 1988, OBJECT ORIENTED SOFT
   [Anonymous], 2012, INT WORKSHOP FEATURE
   [Anonymous], 2016, Feature-Oriented Software Product Lines
   Apel S., 2013, IEEE Transactions on Software Engineering, V39, P63, DOI 10.1109/TSE.2011.120
   Apel S, 2009, J OBJECT TECHNOL, V8, P49, DOI 10.5381/jot.2009.8.5.c5
   Batory D, 2005, LECT NOTES COMPUT SC, V3714, P7
   Costello A.B., 2005, Research and Evaluation, V10, P173
   Neto PADS, 2016, 2016 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON VARIABILITY AND COMPLEXITY IN SOFTWARE DESIGN (VACE), P12, DOI [10.1145/2897045.2897047, 10.1109/VACE.2016.011]
   Feigenspan J., 2011, P INT S EMP SOFTW EN
   Feigenspan J, 2009, P INT WORKSH FEAT OR
   Feigenspan J, 2013, EMPIR SOFTW ENG, V18, P699, DOI 10.1007/s10664-012-9208-x
   Figueiredo E, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P261, DOI 10.1145/1368088.1368124
   Gaia FN, 2014, SCI COMPUT PROGRAM, V96, P230, DOI 10.1016/j.scico.2014.03.006
   Likert R., 1932, ARCH PSYCHOL, V140, P53
   Maalej W, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2622669
   Malaquias R, 2017, INT C PROGRAM COMPRE, P297, DOI 10.1109/ICPC.2017.41
   Medeiros Flavio, 2015, 29 EUR C OBJ OR PROG, P495
   Melo J, 2017, INT C PROGRAM COMPRE, P34, DOI 10.1109/ICPC.2017.34
   Melo J, 2016, PROC INT CONF SOFTW, P679, DOI 10.1145/2884781.2884831
   Salman I, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P666, DOI 10.1109/ICSE.2015.82
   Santos AR, 2016, 20 INT SYST SOFTW PR, P154, DOI [10.1145/2934466.2934486, DOI 10.1145/2934466.2934486]
   Santos JAM, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P1472, DOI 10.1145/2695664.2695682
   Santoso A, 2017, ADV SOC SCI EDUC HUM, V102, P1
   Schulze S, 2013, INT WORKS SOFTW CLON, P62, DOI 10.1109/IWSC.2013.6613045
   Shull FJ, 2008, EMPIR SOFTW ENG, V13, P211, DOI 10.1007/s10664-008-9060-1
   Siegmund J, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P378, DOI 10.1145/2568225.2568252
   Siegmund J, 2015, EMPIR SOFTW ENG, V20, P1159, DOI 10.1007/s10664-014-9318-8
   Siegmund J, 2014, EMPIR SOFTW ENG, V19, P1299, DOI 10.1007/s10664-013-9286-4
   Ferreira GCS, 2014, SCI COMPUT PROGRAM, V93, P65, DOI 10.1016/j.scico.2013.10.010
   SPENCER H, 1992, PROCEEDINGS OF THE SUMMER 1992 USENIX CONFERENCE, P185
   Wohlin C., 2012, Experimentation in Software Engineering
NR 33
TC 6
Z9 6
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2019
VL 24
IS 3
BP 1226
EP 1258
DI 10.1007/s10664-018-9658-x
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ID9YT
UT WOS:000472043800006
DA 2024-07-18
ER

PT J
AU Bennin, KE
   Keung, JW
   Monden, A
AF Bennin, Kwabena Ebo
   Keung, Jacky W.
   Monden, Akito
TI On the relative value of data resampling approaches for software defect
   prediction
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software defect prediction; Imbalanced data; Data resampling approaches;
   Class imbalance; Empirical study
ID STATIC CODE ATTRIBUTES; SMOTE
AB Software defect data sets are typically characterized by an unbalanced class distribution where the defective modules are fewer than the non-defective modules. Prediction performances of defect prediction models are detrimentally affected by the skewed distribution of the faulty minority modules in the data set since most algorithms assume both classes in the data set to be equally balanced. Resampling approaches address this concern by modifying the class distribution to balance the minority and majority class distribution. However, very little is known about the best distribution for attaining high performance especially in a more practical scenario. There are still inconclusive results pertaining to the suitable ratio of defect and clean instances (Pfp), the statistical and practical impacts of resampling approaches on prediction performance and the more stable resampling approach across several performance measures. To assess the impact of resampling approaches, we investigated the bias and effect of commonly used resampling approaches on prediction accuracy in software defect prediction. Analyzes of six resampling approaches on 40 releases of 20 open-source projects across five performance measures and five imbalance rates were performed. The experimental results obtained indicate that there were statistical differences between the prediction results with and without resampling methods when evaluated with the geometric-mean, recall(pd), probability of false alarms(pf ) and balance performance measures. However, resampling methods could not improve the AUC values across all prediction models implying that resampling methods can help in defect classification but not defect prioritization. A stable Pfp rate was dependent on the performance measure used. Lower Pfp rates are required for lower pf values while higher Pfp values are required for higher pd values. Random Under-Sampling and Borderline-SMOTE proved to be the more stable resampling method across several performance measures among the studied resampling methods. Performance of resampling methods are dependent on the imbalance ratio, evaluation measure and to some extent the prediction model. Newer oversampling methods should aim at generating relevant and informative data samples and not just increasing the minority samples.
C1 [Bennin, Kwabena Ebo; Keung, Jacky W.] City Univ Hong Kong, Dept Comp Sci, Kowloon Tong, Hong Kong, Peoples R China.
   [Monden, Akito] Okayama Univ, Grad Sch Nat Sci & Technol, Okayama, Japan.
C3 City University of Hong Kong; Okayama University
RP Bennin, KE (corresponding author), City Univ Hong Kong, Dept Comp Sci, Kowloon Tong, Hong Kong, Peoples R China.
EM kebennin2-c@my.cityu.edu.hk; Jacky.Keung@cityu.edu.hk;
   monden@okayama-u.ac.jp
RI Keung, Jacky/ABA-7089-2020; Keung, Jacky/X-4693-2019
OI Keung, Jacky/0000-0002-3803-9600; Bennin, Kwabena/0000-0001-9140-9271;
   Monden, Akito/0000-0003-4295-207X
FU General Research Fund of the Research Grants Council of Hong Kong
   [11208017]; City University of Hong Kong [7004474, 7004683]; JSPS
   KAKENHI [17K00102]; Grants-in-Aid for Scientific Research [17K00102]
   Funding Source: KAKEN
FX This work is supported in part by the General Research Fund of the
   Research Grants Council of Hong Kong (No. 11208017), and the research
   funds of City University of Hong Kong (No. 7004474, 7004683) and JSPS
   KAKENHI 17K00102.
CR Abu Shanab A, 2012, 2012 IEEE 13TH INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION (IRI), P415, DOI 10.1109/IRI.2012.6303039
   [Anonymous], IEEE T SOFTW ENG
   [Anonymous], 2017, ARXIV170503697
   [Anonymous], 11 INT S EMP SOFTW E
   [Anonymous], USING OBJECT ORIENTE
   [Anonymous], 2012, R LANG ENV STAT COMP
   [Anonymous], INNOV SYST SOFTW ENG
   [Anonymous], J STAT PLAN INFERENC
   [Anonymous], AUTOMAT SOFTW ENG
   [Anonymous], COMPUT STAT DATA ANA
   [Anonymous], INTELL DATA ANAL
   [Anonymous], 2008, Proceedings of the 4th International Workshop on Predictor Models in Software Engineering, PROMISE '08
   Arisholm E, 2010, J SYST SOFTWARE, V83, P2, DOI 10.1016/j.jss.2009.06.055
   Barua S, 2014, IEEE T KNOWL DATA EN, V26, P405, DOI 10.1109/TKDE.2012.232
   Bennin KE, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2016), P214, DOI 10.1109/QRS.2016.33
   Bennin KE, 2016, P INT COMP SOFTW APP, P154, DOI 10.1109/COMPSAC.2016.144
   Bradley AP, 1997, PATTERN RECOGN, V30, P1145, DOI 10.1016/S0031-3203(96)00142-2
   Bunkhumpornpat C, 2009, LECT NOTES ARTIF INT, V5476, P475, DOI 10.1007/978-3-642-01307-2_43
   Chawla NV, 2010, DATA MINING AND KNOWLEDGE DISCOVERY HANDBOOK, SECOND EDITION, P875, DOI 10.1007/978-0-387-09823-4_45
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   D'Ambros Marco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P31, DOI 10.1109/MSR.2010.5463279
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   Domingos Pedro, 1999, P 5 ACM SIGKDD INT C, P155, DOI DOI 10.1145/312129.312220
   Drown DJ, 2009, IEEE T SYST MAN CY A, V39, P1097, DOI 10.1109/TSMCA.2009.2020804
   Estabrooks A, 2004, COMPUT INTELL-US, V20, P18, DOI 10.1111/j.0824-7935.2004.t01-1-00228.x
   García V, 2012, KNOWL-BASED SYST, V25, P13, DOI 10.1016/j.knosys.2011.06.013
   Gray David, 2011, 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), P96, DOI 10.1049/ic.2011.0012
   Haibo He, 2009, IEEE Transactions on Knowledge and Data Engineering, V21, P1263, DOI 10.1109/TKDE.2008.239
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Han H, 2005, LECT NOTES COMPUT SC, V3644, P878, DOI 10.1007/11538059_91
   Hata H, 2012, PROC INT CONF SOFTW, P200, DOI 10.1109/ICSE.2012.6227193
   He HB, 2008, IEEE IJCNN, P1322, DOI 10.1109/IJCNN.2008.4633969
   He ZM, 2012, AUTOMAT SOFTW ENG, V19, P167, DOI 10.1007/s10515-011-0090-3
   Jiang Y, 2008, EMPIR SOFTW ENG, V13, P561, DOI 10.1007/s10664-008-9079-3
   Joshi MV, 2001, 2001 IEEE INTERNATIONAL CONFERENCE ON DATA MINING, PROCEEDINGS, P257, DOI 10.1109/ICDM.2001.989527
   Jureczko M., 2010, P 6 INT C PRED MOD S, P9, DOI 10.1145/1868328.1868342
   Kamei Yasutaka, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P196
   Kamei Y., 2010, Proceedings of the 26th International Conference on Software Maintenance, P1, DOI 10.1109/ICSM.2010.5609530
   Kitchenham B, 2017, EMPIR SOFTW ENG, V22, P579, DOI 10.1007/s10664-016-9437-5
   Kocaguneli E, 2013, IEEE T SOFTWARE ENG, V39, P1040, DOI 10.1109/TSE.2012.88
   Kocaguneli E, 2012, IEEE T SOFTWARE ENG, V38, P425, DOI 10.1109/TSE.2011.27
   Kraemer HC, 2006, BIOL PSYCHIAT, V59, P990, DOI 10.1016/j.biopsych.2005.09.014
   Kubat M., 1997, ADDRESSING CURSE IMB, V97, P179
   Kuhn Max., 2014, caret: Classification and Regression Training
   Laradji IH, 2015, INFORM SOFTWARE TECH, V58, P388, DOI 10.1016/j.infsof.2014.07.005
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Liu MX, 2014, IEEE T RELIAB, V63, P676, DOI 10.1109/TR.2014.2316951
   Madeyski L, 2015, SOFTWARE QUAL J, V23, P393, DOI 10.1007/s11219-014-9241-7
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P637, DOI 10.1109/TSE.2007.70721
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Nickerson A., 2001, Proceedings of the 8th International Workshop on AI and Statistics, P261
   Pazzani M.J., 1994, INT C MACHINE LEARNI, P217
   Pelayo L, 2007, NAFIPS 2007 - 2007 ANNUAL MEETING OF THE NORTH AMERICAN FUZZY INFORMATION PROCESSING SOCIETY, P69, DOI 10.1109/NAFIPS.2007.383813
   Phung S.L., 2009, LEARNING PATTERN CLA, DOI 10.5772/7544
   Radjenovic D, 2013, INFORM SOFTWARE TECH, V55, P1397, DOI 10.1016/j.infsof.2013.02.009
   Riquelme J., 2008, Actas de los Talleres de las Jornadas de Ingenieria del Software y Bases de Datos, V2, P67
   Seiffert C, 2010, IEEE T SYST MAN CY A, V40, P185, DOI 10.1109/TSMCA.2009.2029559
   Shepperd M, 2001, IEEE T SOFTWARE ENG, V27, P1014, DOI 10.1109/32.965341
   Shirabad J.S., 2005, The PROMISE Repository of Software Engineering Databases
   Sun YM, 2007, PATTERN RECOGN, V40, P3358, DOI 10.1016/j.patcog.2007.04.009
   Sun ZB, 2012, IEEE T SYST MAN CY C, V42, P1806, DOI 10.1109/TSMCC.2012.2226152
   Tang YC, 2009, IEEE T SYST MAN CY B, V39, P281, DOI 10.1109/TSMCB.2008.2002909
   Wang S, 2013, IEEE T RELIAB, V62, P434, DOI 10.1109/TR.2013.2259203
   Weiss GM, 2003, J ARTIF INTELL RES, V19, P315, DOI 10.1613/jair.1199
   Weiss GM., 2001, EFFECT CLASS DISTRIB
   Wilcox R.R., 2014, The WRS package for robust statistics in R
   Wong GY, 2013, IEEE IND ELEC, P2354, DOI 10.1109/IECON.2013.6699499
   Yan M, 2017, INT SYMP EMP SOFTWAR, P344, DOI 10.1109/ESEM.2017.48
   Yoon K, 2007, NEURAL COMPUT APPL, V16, P295, DOI 10.1007/s00521-007-0089-7
   Zheng J, 2010, EXPERT SYST APPL, V37, P4537, DOI 10.1016/j.eswa.2009.12.056
NR 71
TC 57
Z9 58
U1 0
U2 22
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2019
VL 24
IS 2
BP 602
EP 636
DI 10.1007/s10664-018-9633-6
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HQ8DM
UT WOS:000462654200003
DA 2024-07-18
ER

PT J
AU Mujahid, S
   Sierra, G
   Abdalkareem, R
   Shihab, E
   Shang, WY
AF Mujahid, Suhaib
   Sierra, Giancarlo
   Abdalkareem, Rabe
   Shihab, Emad
   Shang, Weiyi
TI An empirical study of Android Wear user complaints
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Wearable apps; Users' reviews; User complaints; Google Play Store;
   Empirical studies
ID COEFFICIENT
AB Wearable apps are becoming increasingly popular in recent years. Nevertheless, to date, very few studies have examined the issues that wearable apps face. Prior studies showed that user reviews contain a plethora of insights that can be used to understand quality issues and help developers build better quality mobile apps. Therefore, in this paper, we mine user reviews in order to understand the user complaints about wearable apps. We manually sample and categorize 2,667 reviews from 19 Android wearable apps. Additionally, we examine the replies posted by developers in response to user complaints. This allows us to determine the type of complaints that developers care about the most, and to identify problems that despite being important to users, do not receive a proper response from developers. Our findings indicate that the most frequent complaints are related to Functional Errors, Cost, and Lack of Functionality, whereas the most negatively impacting complaints are related to Installation Problems, Device Compatibility, and Privacy & Ethical Issues. We also find that developers mostly reply to complaints related to Privacy & Ethical Issues, Performance Issues, and notification related issues. Furthermore, we observe that when developers reply, they tend to provide a solution, request more details, or let the user know that they are working on a solution. Lastly, we compare our findings on wearable apps with the study done by Khalid et al. (2015) on handheld devices. From this, we find that some complaint types that appear in handheld apps also appear in wearable apps; though wearable apps have unique issues related to Lack of Functionality, Installation Problems, Connection & Sync, Spam Notifications, and Missing Notifications. Our results highlight the issues that users of wearable apps face the most, and the issues to which developers should pay additional attention to due to their negative impact.
C1 [Mujahid, Suhaib; Sierra, Giancarlo; Abdalkareem, Rabe; Shihab, Emad] Concordia Univ, Dept Comp Sci & Software Engn, Data Driven Anal Software DAS Lab, Montreal, PQ, Canada.
   [Shang, Weiyi] Concordia Univ, Dept Comp Sci & Software Engn, Software Engn & Syst Engn SENSE Lab, Montreal, PQ, Canada.
C3 Concordia University - Canada; Concordia University - Canada
RP Shihab, E (corresponding author), Concordia Univ, Dept Comp Sci & Software Engn, Data Driven Anal Software DAS Lab, Montreal, PQ, Canada.
EM s_mujahi@encs.concordia.ca; g_sierr@encs.concordia.ca;
   rab_abdu@encs.concordia.ca; eshihab@encs.concordia.ca;
   shang@encs.concordia.ca
RI Abdalkareem, Rabe/IQV-8842-2023; Abdalkareem, Rabe/AET-2496-2022
OI Abdalkareem, Rabe/0000-0001-9914-5434; Mujahid,
   Suhaib/0000-0003-2738-1387
CR Ahola J, 2015, LECT NOTES COMPUT SC, V9114, P601, DOI 10.1007/978-3-319-19890-3_38
   Android Developers Documentation, 2016, CREAT WEAR APPS
   Android Developers Documentation, 2016, FILT GOOGL PLAY
   Bonato P, 2010, IEEE ENG MED BIOL, V29, P25, DOI 10.1109/MEMB.2010.936554
   Carreño LVG, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P582, DOI 10.1109/ICSE.2013.6606604
   Chauhan J., 2016, PERVASIVE COMPUTING, P1
   Chen N, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P767, DOI 10.1145/2568225.2568263
   Ciurumelea A, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P91, DOI 10.1109/SANER.2017.7884612
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Di Sorbo A, 2017, PROC IEEE ACM INT C, P55, DOI 10.1109/ICSE-C.2017.5
   Di Sorbo A, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P499, DOI 10.1145/2950290.2950299
   Do Q, 2017, SOFTWARE PRACT EXPER, V47, P391, DOI 10.1002/spe.2414
   Finkelstein A, 2017, INFORM SOFTWARE TECH, V87, P119, DOI 10.1016/j.infsof.2017.03.002
   FLEISS JL, 1973, EDUC PSYCHOL MEAS, V33, P613, DOI 10.1177/001316447303300309
   Fu B, 2013, 19TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'13), P1276
   Guzman E, 2014, INT REQUIR ENG CONF, P153, DOI 10.1109/RE.2014.6912257
   Ha E, 2013, 2013 IEEE CONSUMER COMMUNICATIONS AND NETWORKING CONFERENCE (CCNC), P149, DOI 10.1109/CCNC.2013.6488439
   Harman M., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P108, DOI 10.1109/MSR.2012.6224306
   Hoon L., 2012, AUSTR COMP HUM INT C, P245
   Keertipati S, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2916003
   Khalid H, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P610, DOI 10.1145/2635868.2635909
   Khalid H, 2015, IEEE SOFTWARE, V32, P70, DOI 10.1109/MS.2014.50
   Lyons K, 2015, ISWC 2015: PROCEEDINGS OF THE 2015 ACM INTERNATIONAL SYMPOSIUM ON WEARABLE COMPUTERS, P3, DOI 10.1145/2802083.2802084
   Martin W, 2017, IEEE T SOFTWARE ENG, V43, P817, DOI 10.1109/TSE.2016.2630689
   Martin W, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P123, DOI 10.1109/MSR.2015.19
   McIlroy S, 2017, IEEE SOFTWARE, V34, P64, DOI 10.1109/MS.2015.149
   McIlroy S, 2016, EMPIR SOFTW ENG, V21, P1067, DOI 10.1007/s10664-015-9375-7
   Min C, 2015, ISWC 2015: PROCEEDINGS OF THE 2015 ACM INTERNATIONAL SYMPOSIUM ON WEARABLE COMPUTERS, P11, DOI 10.1145/2802083.2802085
   Mujahid S, 2017, THESIS
   Mujahid S, 2017, P 4 IEEE ACM INT C M
   Nagappan M, 2016, P 23 IEEE INT C SOFT
   Pagano D, 2013, S VIS LANG HUM CEN C, P125, DOI 10.1109/RE.2013.6636712
   Palomba F, 2017, PROC INT CONF SOFTW, P106, DOI 10.1109/ICSE.2017.18
   Palomba F, 2015, PROC IEEE INT CONF S, P291, DOI 10.1109/ICSM.2015.7332475
   Panichella S, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P1023, DOI 10.1145/2950290.2983938
   Panichella S, 2015, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSM.2015.7332474
   Park S, 2003, MRS BULL, V28, P585, DOI 10.1557/mrs2003.170
   Rawassizadeh R, 2015, COMMUN ACM, V58, P45, DOI 10.1145/2629633
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Sentistrength, 2017, SENT STRENGTH DET
   Tehrani K., 2014, WEARABLE DEVICES MAG
   Teng Xiao-Fei, 2008, IEEE Rev Biomed Eng, V1, P62, DOI 10.1109/RBME.2008.2008248
   Usman M, 2017, INFORM SOFTWARE TECH, V85, P43, DOI 10.1016/j.infsof.2017.01.006
   Vasa R., 2012, AUSTR COMP HUM INT C, P241, DOI DOI 10.1145/2414536.2414577
   Wei J, 2014, IEEE CONSUM ELECTR M, V3, P53, DOI 10.1109/MCE.2014.2317895
   Wright Robin, 2014, Journal of Electronic Resources in Medical Libraries, V11, P204, DOI 10.1080/15424065.2014.969051
   Zhang H., 2017, P 39 INT C SOFTW ENG
NR 47
TC 7
Z9 8
U1 0
U2 8
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2018
VL 23
IS 6
BP 3476
EP 3502
DI 10.1007/s10664-018-9615-8
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HC1WE
UT WOS:000451593200011
DA 2024-07-18
ER

PT J
AU Le, XBD
   Thung, F
   Lo, D
   Le Goues, C
AF Le, Xuan Bach D.
   Thung, Ferdian
   Lo, David
   Le Goues, Claire
TI Overfitting in semantics-based automated program repair
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Automated program repair; Program synthesis; Symbolic execution; Patch
   overfitting
AB The primary goal of Automated Program Repair (APR) is to automatically fix buggy software, to reduce the manual bug-fix burden that presently rests on human developers. Existing APR techniques can be generally divided into two families: semantics- vs. heuristics-based. Semantics-based APR uses symbolic execution and test suites to extract semantic constraints, and uses program synthesis to synthesize repairs that satisfy the extracted constraints. Heuristic-based APR generates large populations of repair candidates via source manipulation, and searches for the best among them. Both families largely rely on a primary assumption that a program is correctly patched if the generated patch leads the program to pass all provided test cases. Patch correctness is thus an especially pressing concern. A repair technique may generate overfitting patches, which lead a program to pass all existing test cases, but fails to generalize beyond them. In this work, we revisit the overfitting problem with a focus on semantics-based APR techniques, complementing previous studies of the overfitting problem in heuristics-based APR. We perform our study using IntroClass and Codeflaws benchmarks, two datasets well-suited for assessing repair quality, to systematically characterize and understand the nature of overfitting in semantics-based APR. We find that similar to heuristics-based APR, overfitting also occurs in semantics-based APR in various different ways.
C1 [Le, Xuan Bach D.; Thung, Ferdian; Lo, David] Singapore Management Univ, Sch Informat Syst, Singapore, Singapore.
   [Le Goues, Claire] Carnegie Mellon Univ, Sch Comp Sci, Pittsburgh, PA 15213 USA.
C3 Singapore Management University; Carnegie Mellon University
RP Le, XBD (corresponding author), Singapore Management Univ, Sch Informat Syst, Singapore, Singapore.
EM dxb.le.2013@phdis.smu.edu.sg; ferdiant.2013@phdis.smu.edu.sg;
   davidlo@smu.edu.sg; clegoues@cs.cmu.edu
RI Thung, Ferdian/AAX-9321-2020; Le, Xuan-Bach D./AFR-4740-2022; Lo,
   David/A-2493-2012
OI Le Goues, Claire/0000-0002-3931-060X; Lo, David/0000-0002-4367-7201
FU Direct For Computer & Info Scie & Enginr; Division of Computing and
   Communication Foundations [1564162, 1563797] Funding Source: National
   Science Foundation; Division of Computing and Communication Foundations;
   Direct For Computer & Info Scie & Enginr [1645136] Funding Source:
   National Science Foundation
CR Abreu R, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P89, DOI 10.1109/TAIC.PART.2007.13
   Alur R, 2015, NATO SCI PEAC SECUR, V40, P1, DOI 10.3233/978-1-61499-495-4-1
   [Anonymous], P 2017 ACM INT S SOF
   [Anonymous], 2016, PROGRAMMING EXAMPLES
   [Anonymous], ICSE POSTER
   [Anonymous], 2016, PROC EUR C COMPUT VI
   [Anonymous], 2012, HAIF VER C SPRING
   Cadar C., 2008, OSDI, V8, P209, DOI DOI 10.5555/1855741.1855756
   DeMarco F, 2014, P 6 INT WORKSHOP CON, P30, DOI 10.1145/2593735.2593740
   Fry Z.P., 2012, INT S SOFTWARE TESTI, P177, DOI 10.1145/04000800.2336775
   Nguyen HDT, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P772, DOI 10.1109/ICSE.2013.6606623
   Jha S., 2010, P 32 ACM IEEE INT C, V1, P215, DOI DOI 10.1145/1806799.1806833
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Ke YL, 2015, IEEE INT CONF AUTOM, P295, DOI 10.1109/ASE.2015.60
   Kim D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P802, DOI 10.1109/ICSE.2013.6606626
   Konighofer R., 2011, 2011 Formal Methods in Computer-Aided Design (FMCAD), P91
   Le Goues C., 2012, IEEE Transactions on Software Engineering, V38, P54, DOI 10.1109/TSE.2011.104
   Le Goues C, 2015, IEEE T SOFTWARE ENG, V41, P1236, DOI 10.1109/TSE.2015.2454513
   Le Goues C, 2012, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.2012.6227211
   Le TDB, 2015, IEEE INT CONF AUTOM, P115, DOI 10.1109/ASE.2015.83
   Le XBD, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P593, DOI 10.1145/3106237.3106309
   Le XBD, 2016, PROC IEEE INT CONF S, P428, DOI 10.1109/ICSME.2016.66
   Le XBD, 2016, IEEE INT CONF AUTOM, P876, DOI 10.1145/2970276.2975934
   Le XBD, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P213, DOI 10.1109/SANER.2016.76
   Le XBD, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P427, DOI 10.1109/ISSRE.2015.7381836
   Logozzo F, 2012, ACM SIGPLAN NOTICES, V47, P133, DOI 10.1145/2398857.2384626
   Long F, 2016, ACM SIGPLAN NOTICES, V51, P298, DOI 10.1145/2914770.2837617
   Martínez M, 2015, EMPIR SOFTW ENG, V20, P176, DOI 10.1007/s10664-013-9282-8
   Mechtaev S., 2016, P 38 INT C SOFTWARE, P691
   Mechtaev S, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P448, DOI 10.1109/ICSE.2015.63
   Qi YH, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P254, DOI 10.1145/2568225.2568254
   Qi Zichao, 2015, P 2015 INT S SOFTW T, P24, DOI DOI 10.1145/2771783.2771791
   Reynolds A, 2015, LECT NOTES COMPUT SC, V9207, P198, DOI 10.1007/978-3-319-21668-3_12
   Smith EK, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P532, DOI 10.1145/2786805.2786825
   Tassey G, 2002, 7007011 RTI NAT I ST
   Thung F, 2015, INT C PROGRAM COMPRE, P60, DOI 10.1109/ICPC.2015.15
   Weimer W, 2013, IEEE INT CONF AUTOM, P356, DOI 10.1109/ASE.2013.6693094
   Weimer W, 2010, COMMUN ACM, V53, P109, DOI 10.1145/1735223.1735249
   Xuan JF, 2017, IEEE T SOFTWARE ENG, V43, P34, DOI 10.1109/TSE.2016.2560811
NR 39
TC 35
Z9 40
U1 0
U2 12
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2018
VL 23
IS 5
BP 3007
EP 3033
DI 10.1007/s10664-017-9577-2
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GO5AW
UT WOS:000440031100016
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Ragkhitwetsagul, C
   Krinke, J
   Clark, D
AF Ragkhitwetsagul, Chaiyong
   Krinke, Jens
   Clark, David
TI A comparison of code similarity analysers
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Empirical study; Code similarity measurement; Clone detection;
   Plagiarism detection; Parameter optimisation
ID CLONE DETECTION; PROGRAM SIMILARITY; PLAGIARISM; OBFUSCATION;
   DECOMPILATION; HARMFUL; SYSTEM
AB Copying and pasting of source code is a common activity in software engineering. Often, the code is not copied as it is and it may be modified for various purposes; e.g. refactoring, bug fixing, or even software plagiarism. These code modifications could affect the performance of code similarity analysers including code clone and plagiarism detectors to some certain degree. We are interested in two types of code modification in this study: pervasive modifications, i.e. transformations that may have a global effect, and local modifications, i.e. code changes that are contained in a single method or code block. We evaluate 30 code similarity detection techniques and tools using five experimental scenarios for Java source code. These are (1) pervasively modified code, created with tools for source code and bytecode obfuscation, and boiler-plate code, (2) source code normalisation through compilation and decompilation using different decompilers, (3) reuse of optimal configurations over different data sets, (4) tool evaluation using ranked-based measures, and (5) local + global code modifications. Our experimental results show that in the presence of pervasive modifications, some of the general textual similarity measures can offer similar performance to specialised code similarity tools, whilst in the presence of boiler-plate code, highly specialised source code similarity detection techniques and tools outperform textual similarity measures. Our study strongly validates the use of compilation/decompilation as a normalisation technique. Its use reduced false classifications to zero for three of the tools. Moreover, we demonstrate that optimal configurations are very sensitive to a specific data set. After directly applying optimal configurations derived from one data set to another, the tools perform poorly on the new data set. The code similarity analysers are thoroughly evaluated not only based on several well-known pair-based and query-based error measures but also on each specific type of pervasive code modification. This broad, thorough study is the largest in existence and potentially an invaluable guide for future users of similarity detection in source code.
C1 [Ragkhitwetsagul, Chaiyong; Krinke, Jens; Clark, David] UCL, Dept Comp Sci, Ctr Res Evolut Search & Testing, Gower St, London WC1E 6BT, England.
C3 University of London; University College London
RP Ragkhitwetsagul, C (corresponding author), UCL, Dept Comp Sci, Ctr Res Evolut Search & Testing, Gower St, London WC1E 6BT, England.
EM chaiyong.ragkhitwetsagul.14@ucl.ac.uk; j.krinke@ucl.ac.uk;
   david.clark@ucl.ac.uk
RI Ragkhitwetsagul, Chaiyong/W-2835-2019; Ragkhitwetsagul,
   Chaiyong/JOZ-6943-2023; Krinke, Jens/E-9011-2011
OI Ragkhitwetsagul, Chaiyong/0000-0002-6502-1107; Krinke,
   Jens/0000-0003-1009-2861; Clark, David/0000-0002-7004-934X
FU Faculty of Information and Communication Technology, Mahidol University,
   Thailand; Microsoft Azure for Research award [CRM:0518332]
FX Chaiyong Ragkhitwetsagul is supported by the Ph.D. scholarship from the
   Faculty of Information and Communication Technology, Mahidol University,
   Thailand. The authors would like to thank Microsoft Azure for Research
   award (CRM:0518332) that allowed us to leverage cloud computing power
   and feasibly explore the large search space of the tools'
   configurations. Lastly, the authors extend their gratitude to the
   anonymous reviewers for their valuable comments on the earlier versions
   of this paper.
CR [Anonymous], SCAM 16
   [Anonymous], KRAKATAU BYTECODE TO
   [Anonymous], 2001, ISC'01: Proceedings of the 4th International Conference on Information Security
   [Anonymous], PYTHON NGRAM 3 3
   [Anonymous], ISFST 04
   [Anonymous], ANDROID REVERSING DE
   [Anonymous], 2006, P 2006 ACM SIGPLAN S
   [Anonymous], 1989, Kolmogorov Complexity and Its Applications
   [Anonymous], MSR 11
   [Anonymous], STUDYS WEBSITE COMPA
   [Anonymous], THICK FAM SOURC COD
   [Anonymous], TYPE BASED DECOMPILA
   [Anonymous], SHERLOCK PLAGIARISM
   [Anonymous], ESEC FSE 07
   [Anonymous], 2009, AVERAGE R PRECISION, DOI [10.1007/978-0-387-39940-9491, 10.1007/978-0-387-39940-9_491]
   [Anonymous], SIGMOD 03
   [Anonymous], ICSE 05
   [Anonymous], 2013, Proceeding of the 11th annual international conference on Mobile systems, applications, and services, DOI [10.1145/2462456.2464461, DOI 10.1145/2462456.2464461]
   [Anonymous], ACM SIGCSE B
   [Anonymous], SIGCSE 92
   [Anonymous], DSN 01
   [Anonymous], DIABLO
   [Anonymous], 2016, PROCYON JAVA DECOMPI
   [Anonymous], PROG BYT OBF TOOL
   [Anonymous], 2009, INTRO INFORM RETRIEV
   [Anonymous], ICPC 14
   [Anonymous], ISSTA 12
   [Anonymous], PMDS COPY PASTE DETE
   [Anonymous], DIFFL HELP COMP DELT
   [Anonymous], KDD 06
   [Anonymous], ICSE 15
   [Anonymous], 148 U AUCKL DEP COM
   [Anonymous], P INT C MIN SOFTW RE
   [Anonymous], 11 INT WORKSH SOFTW
   [Anonymous], SIGCSE 76
   [Anonymous], SIGCSE 81
   [Anonymous], PYTHON LIB DOING APP
   [Anonymous], DETECTION SOURCE COD
   [Anonymous], 2007, P CIKM
   [Anonymous], CATALOG REFACTORINGS
   Batchelder M, 2007, LECT NOTES COMPUT SC, V4420, P96
   Baxter ID, 1998, PROC IEEE INT CONF S, P368, DOI 10.1109/ICSM.1998.738528
   Bellon S, 2007, IEEE T SOFTWARE ENG, V33, P577, DOI 10.1109/TSE.2007.70725
   BERGHEL HL, 1984, SIGPLAN NOTICES, V19, P65, DOI 10.1145/988241.988245
   Box G.E., 1978, Statistics for Experimenters, V664
   BREUER PT, 1994, ACM T PROGR LANG SYS, V16, P1613, DOI 10.1145/186025.186093
   Brixtel R, 2010, IEEE INT WORK C SO, P77, DOI 10.1109/SCAM.2010.19
   Bruntink M, 2005, IEEE T SOFTWARE ENG, V31, P804, DOI 10.1109/TSE.2005.114
   Burd E, 2002, SCAM 2002: SECOND IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS MANIPULATION, PROCEEDINGS, P36, DOI 10.1109/SCAM.2002.1134103
   Burrows S, 2007, SOFTWARE PRACT EXPER, V37, P151, DOI 10.1002/spe.750
   Ceccato M, 2014, EMPIR SOFTW ENG, V19, P1040, DOI 10.1007/s10664-013-9248-x
   Ceccato M, 2009, INT C PROGRAM COMPRE, P178, DOI 10.1109/ICPC.2009.5090041
   Chae DK, 2013, PROCEEDINGS OF THE 22ND ACM INTERNATIONAL CONFERENCE ON INFORMATION & KNOWLEDGE MANAGEMENT (CIKM'13), P1577, DOI 10.1145/2505515.2507848
   Chen K, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P175, DOI 10.1145/2568225.2568286
   Chuda D, 2012, IEEE T EDUC, V55, P22, DOI 10.1109/TE.2011.2112768
   CIFUENTES C, 1995, SOFTWARE PRACT EXPER, V25, P811, DOI 10.1002/spe.4380250706
   Cilibrasi R, 2005, IEEE T INFORM THEORY, V51, P1523, DOI 10.1109/TIT.2005.844059
   Cohen A., 2011, FUZZYWUZZY FUZZY STR
   Collberg C., 2003, IEEE Security & Privacy, V1, P40, DOI 10.1109/MSECP.2003.1219058
   Collberg CS, 2002, IEEE T SOFTWARE ENG, V28, P735, DOI 10.1109/TSE.2002.1027797
   Cosma G, 2008, IEEE T EDUC, V51, P195, DOI 10.1109/TE.2007.906776
   Cosma G, 2012, IEEE T COMPUT, V61, P379, DOI 10.1109/TC.2011.223
   Crussell Jonathan, 2013, Computer Security - ESORICS 2013. 18th European Symposium on Research in Computer Security. Proceedings: LNCS 8134, P182, DOI 10.1007/978-3-642-40203-6_11
   Crussell Jonathan, 2012, Computer Security - ESORICS 2012. Proceedings 17th European Symposium on Research in Computer Security, P37, DOI 10.1007/978-3-642-33167-1_3
   Davies J, 2013, EMPIR SOFTW ENG, V18, P1195, DOI 10.1007/s10664-012-9199-7
   Davis I. J., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P242, DOI 10.1109/WCRE.2010.35
   Ducasse S., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P109, DOI 10.1109/ICSM.1999.792593
   Duric Z, 2013, COMPUT J, V56, P70, DOI 10.1093/comjnl/bxs018
   FAIDHI JAW, 1987, COMPUT EDUC, V11, P11, DOI 10.1016/0360-1315(87)90042-X
   Fisher R. A., 1937, The design of experiments.
   Gitchell D, 1999, PROCEEDINGS OF THE THIRTIETH SIGCSE TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION, P266, DOI 10.1145/299649.299783
   Göde N, 2009, EUR CON SFTWR MTNCE, P219, DOI 10.1109/CSMR.2009.20
   Hage J., 2010, A comparison of plagiarism detection tools
   Halstead M. H., 1977, ELEMENTS SOFTWARE SC
   Harris S., 2015, SIMIAN SIMILARITY AN
   Hartmann B, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P1019
   Jiang LX, 2007, PROC INT CONF SOFTW, P96
   Joy M, 1999, IEEE T EDUC, V42, P129, DOI 10.1109/13.762946
   Joy Mike., 2005, J ED RESOURCES COMPU, V5, P2
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kapser C, 2003, ELISA 03, P67
   Kapser C, 2006, WORK CONF REVERSE EN, P19
   Kapser CJ, 2008, EMPIR SOFTW ENG, V13, P645, DOI 10.1007/s10664-008-9076-6
   Ke YL, 2015, IEEE INT CONF AUTOM, P295, DOI 10.1109/ASE.2015.60
   Keivanloo I, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P664, DOI 10.1145/2568225.2568292
   Keivanloo I, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P201, DOI 10.1109/SANER.2015.7081830
   Komondoor Raghavan, 2001, P 8 INT S STAT AN SA, V1, P40
   Kononenko O, 2014, PROC IEEE INT CONF S, P481, DOI 10.1109/ICSME.2014.78
   Krinke J, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P301, DOI 10.1109/WCRE.2001.957835
   Li ZM, 2006, IEEE T SOFTWARE ENG, V32, P176, DOI 10.1109/TSE.2006.28
   Lim HI, 2009, INFORM SOFTWARE TECH, V51, P1338, DOI 10.1016/j.infsof.2009.04.011
   Luo LN, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P389, DOI 10.1145/2635868.2635900
   Maletic JI, 2001, PROC INT CONF SOFTW, P103, DOI 10.1109/ICSE.2001.919085
   McMillan C, 2012, PROC INT CONF SOFTW, P848, DOI 10.1109/ICSE.2012.6227134
   Myles G, 2004, LECT NOTES COMPUT SC, V3225, P404
   Nachenberg Carey., 1996, The Symantec Enterprise Papers, V30, P16
   Necula GC, 2002, LECT NOTES COMPUT SC, V2304, P213
   Pate JR, 2013, J SOFTW-EVOL PROC, V25, P261, DOI 10.1002/smr.579
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Prechelt L, 2002, J UNIVERS COMPUT SCI, V8, P1016
   Proebsting TA, 1997, PROCEEDINGS OF THE THIRD USENIX CONFERENCE ON OBJECT-ORIENTED TECHNOLOGIES AND SYSTEMS (COOTS), P185
   Rahikainen M., 2006, P 6 BALT SEA C COMP, P141, DOI DOI 10.1145/1315803.1315831
   Roy CK, 2009, IEEE ICST WORKSHOP, P157, DOI 10.1109/ICSTW.2009.18
   Roy CK, 2008, INT C PROGRAM COMPRE, P172, DOI 10.1109/ICPC.2008.41
   Roy CK, 2009, SCI COMPUT PROGRAM, V74, P470, DOI 10.1016/j.scico.2009.02.007
   Sajnani H, 2016, PROC INT CONF SOFTW, P1157, DOI 10.1145/2884781.2884877
   Schulze S, 2013, INT WORKS SOFTW CLON, P62, DOI 10.1109/IWSC.2013.6613045
   Selim G. M. K., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P227, DOI 10.1109/WCRE.2010.33
   Svajlenko J, 2016, PROC IEEE INT CONF S, P596, DOI 10.1109/ICSME.2016.62
   Svajlenko J, 2014, PROC IEEE INT CONF S, P321, DOI 10.1109/ICSME.2014.54
   Thomas SW, 2014, EMPIR SOFTW ENG, V19, P182, DOI 10.1007/s10664-012-9219-7
   Udupa SK, 2005, WCRE: 12TH WORKING CONFERENCE ON REVERSE ENGINEERING 2005, PROCEEDINGS, P45
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Wang Tiantian, 2013, P 2013 9 JOINT M FDN, P455
   WHALE G, 1990, COMPUT J, V33, P140, DOI 10.1093/comjnl/33.2.140
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Wise M. J., 1996, SIGCSE Bulletin, V28, P130, DOI 10.1145/236462.236525
   Zhang F., 2014, P 2014 ACM C SEC PRI, P25, DOI DOI 10.1145/2627393.2627395
NR 118
TC 68
Z9 71
U1 1
U2 23
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2018
VL 23
IS 4
BP 2464
EP 2519
DI 10.1007/s10664-017-9564-7
PG 56
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GK0MK
UT WOS:000435804100020
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU El Mezouar, M
   Zhang, F
   Zou, Y
AF El Mezouar, Mariam
   Zhang, Feng
   Zou, Ying
TI Are tweets useful in the bug fixing process? An empirical study on
   Firefox and Chrome
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Bug report; Social network; Twitter; Bug fixing
ID FALSE DISCOVERY RATE
AB When encountering an issue, technical users (e.g., developers) usually file the issue report to the issue tracking systems. But non-technical end-users are more likely to express their opinions on social network platforms, such as Twitter. For software systems (e.g., Firefox and Chrome) that have a high exposure to millions of non-technical end-users, it is important to monitor and solve issues observed by a large user base. The widely used micro-blogging site (i.e., Twitter) has millions of active users. Therefore, it can provide instant feedback on products to the developers. In this paper, we investigate whether social networks (i.e., Twitter) can improve the bug fixing process by analyzing the short messages posted by end-users on Twitter (i.e., tweets). We propose an approach to remove noisy tweets, and map the remaining tweets to bug reports. We conduct an empirical study to investigate the usefulness of Twitter in the bug fixing process. We choose two widely adopted browsers (i.e., Firefox and Chrome) that are also large and rapidly released software systems. We find that issue reports are not treated differently regardless whether users tweet about the issue or not, except that Firefox developers tend to label an issue as more severe if users tweet about it. The feedback from Firefox contributors confirms that the tweets are not currently leveraged in the bug fixing process, due to the challenges associated to discovering bugs through Twitter. Moreover, we observe that many issues are posted on Twitter earlier than on issue tracking systems. More specifically, at least one third of issues could have been reported to developers 8.2 days and 7.6 days earlier in Firefox and Chrome, respectively. In conclusion, tweets are useful in providing earlier acknowledgment of issues, which developers can potentially use to focus their efforts on the issues impacting a large user-base.
C1 [El Mezouar, Mariam; Zhang, Feng] Queens Univ, Sch Comp, Kingston, ON, Canada.
   [Zou, Ying] Queens Univ, Dept Elect & Comp Engn, Kingston, ON, Canada.
C3 Queens University - Canada; Queens University - Canada
RP El Mezouar, M (corresponding author), Queens Univ, Sch Comp, Kingston, ON, Canada.
EM mariam@cs.queensu.ca; feng@cs.queensu.ca; ying.zou@queensu.ca
RI Zou, Ying/KLC-9380-2024; Zhang, Feng/AAQ-3506-2021
CR Ahmadi Navid, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering - Workshops, P1, DOI 10.1109/ASEW.2008.4686304
   [Anonymous], APPLE PULLS IOS 8 0
   [Anonymous], 2009, ENTROPY
   [Anonymous], LUCENE JAVA WIKI POW
   [Anonymous], 2012, Mining Text Data, DOI [10.1007/978-1-4614-3223-4_13, DOI 10.1007/978-1-4614-3223-4_13, DOI 10.1007/978-1-4614-3223-413]
   [Anonymous], IEEE SOFTWARE
   [Anonymous], P SENSE WORKSH SOFTW
   [Anonymous], LUCENE JAVA WIKI LUC
   [Anonymous], NEW CLICK RATE STUDY
   [Anonymous], 2014, Proceedings of the 17th ACM conference on Computer supported cooperative work social computing
   Arun R, 2010, LECT NOTES ARTIF INT, V6118, P391
   Bacchelli A, 2012, PROC INT CONF SOFTW, P375, DOI 10.1109/ICSE.2012.6227177
   Baldi PF, 2008, ACM SIGPLAN NOTICES, V43, P543, DOI 10.1145/1449955.1449807
   Benjamini Y, 2001, ANN STAT, V29, P1165
   BENJAMINI Y, 1995, J R STAT SOC B, V57, P289, DOI 10.1111/j.2517-6161.1995.tb02031.x
   Bies A., 1995, University of Pennsylvania, V97, P100
   Bird S., 2004, P ACL INTERACTIVE PO, P214
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Bougie Gargi, 2011, P 2 INT WORKSHOP WEB, P31, DOI [10.1145/1984701.1984707, DOI 10.1145/1984701.1984707]
   Buckley C., 2000, SIGIR Forum, V34, P33
   Cao J, 2009, NEUROCOMPUTING, V72, P1775, DOI 10.1016/j.neucom.2008.06.011
   Chen N, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P767, DOI 10.1145/2568225.2568263
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Coelho J, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P186, DOI 10.1145/3106237.3106246
   DEVEAUD R, 2014, DOCUMENT NUMERIQUE, V0017
   Feng Zhang, 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P225, DOI 10.1109/WCRE.2012.32
   FLEISS JL, 1971, PSYCHOL BULL, V76, P378, DOI 10.1037/h0031619
   Gachechiladze D, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS TRACK (ICSE-NIER), P11, DOI 10.1109/ICSE-NIER.2017.18
   Griffiths TL, 2004, P NATL ACAD SCI USA, V101, P5228, DOI 10.1073/pnas.0307752101
   Grissom R. J., 2005, EFFECT SIZES RES BRO
   Guzzi A., 2010, Proceedings of the International Conference on Software Maintenance, ICSM '10, P1
   Hill Felix., 2016, Computational Linguistics
   Keertipati S., 2016, Evaluation and Assessment in Software Engineering, page, P33
   Kouloumpis E., 2011, TWITTER SENTIMENT AN, P538
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Linstead E, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P99, DOI 10.1109/MSR.2009.5069486
   Maalej W, 2015, INT REQUIR ENG CONF, P116, DOI 10.1109/RE.2015.7320414
   MacMahon Matt, 2006, AAAI
   OConnor B., 2010, P INT AAAI C WEBLOGS, P1
   Pak A, 2010, P 7 C INT LANG RES E, DOI DOI 10.17148/IJARCCE.2016.51274
   Panichella S, 2015, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSM.2015.7332474
   Piwowar HA, 2011, PLOS ONE, V6, DOI 10.1371/journal.pone.0018657
   PORTER MF, 1980, PROGRAM-AUTOM LIBR, V14, P130, DOI 10.1108/eb046814
   Prasetyo PK, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P596, DOI 10.1109/ICSM.2012.6405330
   Romano J, 2006, ANN M FLOR ASS I RES, P1
   Sharma A, 2015, PROC IEEE INT CONF S, P541, DOI 10.1109/ICSM.2015.7332510
   Sheskin DJ., 2003, HDB PARAMETRIC NONPA, DOI [10.1201/9781420036268, DOI 10.1201/9781420036268]
   Singer L, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P211, DOI 10.1145/2568225.2568305
   Socher Richard, 2013, Long Papers, P455
   Somasundaram K., 2012, Proceedings of the 5th India Software Engineering Conference, ISEC '12, P125, DOI DOI 10.1145/2134254.2134276
   Storey MA., 2010, P FSE SDP WORKSH FUT, P359, DOI DOI 10.1145/1882362.1882435
   Tian Y, 2015, PROC IEEE INT CONF S, P301, DOI 10.1109/ICSM.2015.7332476
   Villarroel L, 2016, PROC INT CONF SOFTW, P14, DOI 10.1145/2884781.2884818
   Weiss C, 2007, P 4 INT WORKSH MIN S, P1, DOI [10.1109/MSR.2007.13, DOI 10.1109/MSR.2007.13]
   Yao XC, 2014, PROCEEDINGS OF THE 52ND ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P956
   Yin RK, 2002, Applied Social Research Methods Series, V34
   Yuan Tian, 2014, 2014 IEEE 4th Workshop on Mining Unstructured Data (MUD), P1, DOI 10.1109/MUD.2014.14
NR 57
TC 16
Z9 18
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2018
VL 23
IS 3
BP 1704
EP 1742
DI 10.1007/s10664-017-9559-4
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GH6DH
UT WOS:000433532300015
DA 2024-07-18
ER

PT J
AU da Costa, DA
   McIntosh, S
   Treude, C
   Kulesza, U
   Hassan, AE
AF da Costa, Daniel Alencar
   McIntosh, Shane
   Treude, Christoph
   Kulesza, Uira
   Hassan, Ahmed E.
TI The impact of rapid release cycles on the integration delay of fixed
   issues
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Integration delay; Rapid releases; Mining software repositories; Release
   engineering
AB The release frequency of software projects has increased in recent years. Adopters of so-called rapid releases-short release cycles, often on the order of weeks, days, or even hours-claim that they can deliver fixed issues (i.e., implemented bug fixes and new features) to users more quickly. However, there is little empirical evidence to support these claims. In fact, our prior work shows that code integration phases may introduce delays for rapidly releasing projects-98% of the fixed issues in the rapidly releasing Firefox project had their integration delayed by at least one release. To better understand the impact that rapid release cycles have on the integration delay of fixed issues, we perform a comparative study of traditional and rapid release cycles. Our comparative study has two parts: (i) a quantitative empirical analysis of 72,114 issue reports from the Firefox project, and a (ii) qualitative study involving 37 participants, who are contributors of the Firefox, Eclipse, and ArgoUML projects. Our study is divided into quantitative and qualitative analyses. Quantitative analyses reveal that, surprisingly, fixed issues take a median of 54% (57 days) longer to be integrated in rapid Firefox releases than the traditional ones. To investigate the factors that are related to integration delay in traditional and rapid release cycles, we train regression models that model whether a fixed issue will have its integration delayed or not. Our explanatory models achieve good discrimination (ROC areas of 0.80-0.84) and calibration scores (Brier scores of 0.05-0.16) for rapid and traditional releases. Our explanatory models indicate that (i) traditional releases prioritize the integration of backlog issues, while (ii) rapid releases prioritize issues that were fixed in the current release cycle. Complementary qualitative analyses reveal that participants' perception about integration delay is tightly related to activities that involve decision making, risk management, and team collaboration. Moreover, the allure of shipping fixed issues faster is a main motivator for adopting rapid release cycles among participants (although this motivation is not supported by our quantitative analysis). Furthermore, to explain why traditional releases deliver fixed issues more quickly, our participants point out the rush for integration in traditional releases and the increased time that is invested on polishing issues in rapid releases. Our results suggest that rapid release cycles may not be a silver bullet for the rapid delivery of new content to users. Instead, our results suggest that the benefits of rapid releases are increased software stability and user feedback.
C1 [da Costa, Daniel Alencar] Queens Univ, Dept Elect & Comp Engn, Kingston, ON, Canada.
   [McIntosh, Shane] McGill Univ, Dept Elect & Comp Engn, Montreal, PQ, Canada.
   [Treude, Christoph] Univ Adelaide, Sch Comp Sci, Adelaide, SA, Australia.
   [Kulesza, Uira] Univ Fed Rio Grande do Norte, Dept Informat & Appl Math DIMAp, Natal, RN, Brazil.
   [Hassan, Ahmed E.] Queens Univ, SAIL, Kingston, ON, Canada.
C3 Queens University - Canada; McGill University; University of Adelaide;
   Universidade Federal do Rio Grande do Norte; Queens University - Canada
RP da Costa, DA (corresponding author), Queens Univ, Dept Elect & Comp Engn, Kingston, ON, Canada.
EM daniel.alencar@queensu.ca; shane.mcintosh@mcgill.ca;
   christoph.treude@adelaide.edu.au; uira@dimap.ufrn.br;
   ahmed@cs.queensu.ca
RI Hassan, Ahmed/AAB-7241-2019; KHALIFA, AHMED khalifa/HKF-2246-2023;
   Treude, Christoph/AAZ-6257-2021; Ali, Ahmed/HOF-4672-2023
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; Treude,
   Christoph/0000-0002-6919-2149; Kulesza, Uira/0000-0002-5467-6458
FU Natural Sciences and Engineering Research Council of Canada (NSERC);
   National Institute of Science and Technology for Software Engineering
   (INES); CNPq [465614/2014-0]
FX This work was partially supported by the Natural Sciences and
   Engineering Research Council of Canada (NSERC) and the National
   Institute of Science and Technology for Software Engineering (INES),
   CNPq grant 465614/2014-0. We also thank all the participants from the
   Firefox, Eclipse, and ArgoUML projects for giving their time to respond
   our surveys and participate in our interviews.
CR Adams B, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 5, P78, DOI 10.1109/SANER.2016.108
   AlGhmadi HM, 2016, PROC IEEE INT CONF S, P279, DOI 10.1109/ICSME.2016.46
   [Anonymous], 2001, Journal of Computer-Mediated Communication, DOI [DOI 10.1111/J.1083-6101.2001.TB00117.X, 10.1111/j.1083-6101.2001.tb00117.x]
   [Anonymous], EMPIR SOFTW ENG
   [Anonymous], 30 INT C AUT SOFTW E
   Antoniol G, 2008, P 2008 C CTR ADV STU, P304
   Baskerville R, 2004, INFORM SYST J, V14, P237, DOI 10.1111/j.1365-2575.2004.00171.x
   Baysal O, 2011, P 8 WORK C MIN SOFTW, P238, DOI DOI 10.1145/1985441.1985481
   Beck K., 2000, EXTREME PROGRAMMING
   Beller M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P559, DOI 10.1109/ICSE.2015.193
   BOEHM BW, 1988, COMPUTER, V21, P61, DOI 10.1145/12944.12948
   Charmaz K., 2006, CONSTRUCTING GROUNDE, DOI DOI 10.7748/NR.13.4.84.S4
   Choetkiertikul M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P280, DOI 10.1109/MSR.2015.33
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   da Costa DA, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P374, DOI [10.1109/MSR.2016.045, 10.1145/2901739.2901764]
   da Costa DA, 2014, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSME.2014.50
   DUNN OJ, 1964, TECHNOMETRICS, V6, P241, DOI 10.2307/1266041
   EFRON B, 1986, J AM STAT ASSOC, V81, P461, DOI 10.2307/2289236
   Fisher R. A., 1946, Statistical methods for research workers.
   Giger E., 2010, P 2 INT WORKSH REC S, P52
   Greer D, 2004, INFORM SOFTWARE TECH, V46, P243, DOI 10.1016/j.infsof.2003.07.002
   Harrell F.E., 2001, Regression modeling strategies: with applications to linear models, logistic regression, and survival analysis
   Herraiz I., 2008, Proceedings of the 2008 International Working Conference on Mining Software Repositories. MSR'08, P145
   HOLM S, 1979, SCAND J STAT, V6, P65
   Howell D.C., 2005, Encyclopedia of Statistics in Behavioral Science
   Iasonos A, 2008, J CLIN ONCOL, V26, P1364, DOI 10.1200/JCO.2007.12.9791
   Jeong G, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P111, DOI 10.1145/1595696.1595715
   Jiang Y, 2014, 2 INT WORKSH REL ENG
   Jiang YJ, 2013, IEEE WORK CONF MIN S, P101, DOI 10.1109/MSR.2013.6624016
   Kampstra P., 2008, Journal of Statistical Software, V28, P1, DOI [10.18637/jss.v028.c01, DOI 10.18637/JSS.V028.C01, 10.18637/jss.v028.c01.papers3://publication/uuid/692988CE-7E10-498E-96EC-E7A0CE3620A3]
   Karlsson J, 1997, IEEE SOFTWARE, V14, P67, DOI 10.1109/52.605933
   Khomh F., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P179, DOI 10.1109/MSR.2012.6224279
   KRUSKAL WH, 1952, J AM STAT ASSOC, V47, P583, DOI 10.1080/01621459.1952.10483441
   Leys C, 2013, J EXP SOC PSYCHOL, V49, P764, DOI 10.1016/j.jesp.2013.03.013
   McIntosh S, 2016, EMPIR SOFTW ENG, V21, P2146, DOI 10.1007/s10664-015-9381-9
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Paetsch F, 2003, TWELFTH IEEE INTERNATIONAL WORKSHOPS ON ENABLING TECHNOLOGIES: INFRASTRUCTURE FOR COLLABORATIVE ENTERPRISES, PROCEEDINGS, P308
   Panjer LucasD., 2007, Proceedings of the 4th International Workshop on Mining Software Repositories, MSR '07, P29
   Rahman MT, 2015, IEEE SOFTWARE, V32, P80
   Regnell B, 2005, ENGINEERING AND MANAGING SOFTWARE REQUIREMENTS, P287, DOI 10.1007/3-540-28244-0_13
   SANDELOWSKI M, 1995, RES NURS HEALTH, V18, P179, DOI 10.1002/nur.4770180211
   Schroter Adrian, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P118, DOI 10.1109/MSR.2010.5463280
   Schwaber K., 1997, BUSINESS OBJECT DESI, DOI [10.1007/978-1-4471-0947-1_11, DOI 10.1007/978-1-4471-0947-1_11]
   Shihab E., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P249, DOI 10.1109/WCRE.2010.36
   Shimagaki J, 2016, PROC IEEE INT CONF S, P301, DOI 10.1109/ICSME.2016.83
   Smith E, 2013, 2013 6TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P89, DOI 10.1109/CHASE.2013.6614738
   Souza R, 2015, IEEE SOFTWARE, V32, P88, DOI 10.1109/MS.2015.30
   Souza R, 2014, 2014 28TH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2014), P31, DOI 10.1109/SBES.2014.10
   Spearman C, 1904, AM J PSYCHOL, V15, P72, DOI 10.2307/1412159
   Subramaniam C, 2009, DECIS SUPPORT SYST, V46, P576, DOI 10.1016/j.dss.2008.10.005
   Tian Y, 2015, MEDIAT INFLAMM, V2015, DOI 10.1155/2015/819232
   Wilks D. S, 2011, International Geophysics Series, V100, DOI DOI 10.1002/MET.16
   Zaman S., 2011, Proceedings of the 8th working conference on mining software repositories, P93, DOI [10.1145/1985441.1985457, DOI 10.1145/1985441.1985457]
NR 53
TC 9
Z9 9
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2018
VL 23
IS 2
BP 835
EP 904
DI 10.1007/s10664-017-9548-7
PG 70
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA GC1OI
UT WOS:000429551000007
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Hadar, I
   Hasson, T
   Ayalon, O
   Toch, E
   Birnhack, M
   Sherman, S
   Balissa, A
AF Hadar, Irit
   Hasson, Tomer
   Ayalon, Oshrat
   Toch, Eran
   Birnhack, Michael
   Sherman, Sofia
   Balissa, Arod
TI Privacy by designers: software developers' privacy mindset
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Data protection; Privacy; Privacy by design; Qualitative research;
   Grounded analysis; Social cognitive theory; Organizational climate
ID SAFETY CLIMATE; INFORMATION PRIVACY; ETHICAL BEHAVIOR; MODEL;
   PERSONALIZATION; ORGANIZATIONS; PERCEPTIONS; ONLINE
AB Privacy by design (PbD) is a policy measure that guides software developers to apply inherent solutions to achieve better privacy protection. For PbD to be a viable option, it is important to understand developers' perceptions, interpretation and practices as to informational privacy (or data protection). To this end, we conducted in-depth interviews with 27 developers from different domains, who practice software design. Grounded analysis of the data revealed an interplay between several different forces affecting the way in which developers handle privacy concerns. Borrowing the schema of Social Cognitive Theory (SCT), we classified and analyzed the cognitive, organizational and behavioral factors that play a role in developers' privacy decision making. Our findings indicate that developers use the vocabulary of data security to approach privacy challenges, and that this vocabulary limits their perceptions of privacy mainly to third-party threats coming from outside of the organization; that organizational privacy climate is a powerful means for organizations to guide developers toward particular practices of privacy; and that software architectural patterns frame privacy solutions that are used throughout the development process, possibly explaining developers' preference of policy-based solutions to architectural solutions. Further, we show, through the use of the SCT schema for framing the findings of this study, how a theoretical model of the factors that influence developers' privacy practices can be conceptualized and used as a guide for future research toward effective implementation of PbD.
C1 [Hadar, Irit; Hasson, Tomer; Sherman, Sofia] Univ Haifa, Dept Informat Syst, 199 Aba Khoushy Ave Mt Carmel, IL-3498838 Haifa, Israel.
   [Ayalon, Oshrat; Toch, Eran] Tel Aviv Univ, Fac Engn, POB 39040, IL-6997801 Tel Aviv, Israel.
   [Birnhack, Michael; Balissa, Arod] Tel Aviv Univ, Fac Law, POB 39040, IL-6997801 Tel Aviv, Israel.
C3 University of Haifa; Tel Aviv University; Tel Aviv University
RP Hadar, I (corresponding author), Univ Haifa, Dept Informat Syst, 199 Aba Khoushy Ave Mt Carmel, IL-3498838 Haifa, Israel.
EM hadari@is.haifa.ac.il
RI Toch, Eran/AAD-6233-2019
OI Ayalon, Oshrat/0000-0002-5905-9838; Toch, Eran/0000-0001-6939-5870
FU Israel Science Foundation [1116/12]
FX We acknowledge the support of the Israel Science Foundation, Grant
   1116/12.
CR Abril PS, 2012, AM BUS LAW J, V49, P63, DOI 10.1111/j.1744-1714.2011.01127.x
   [Anonymous], PRIVACY DESIGN ORIGI
   [Anonymous], WORKSH US SEC USEC 1
   [Anonymous], FACIAL RECOGNITION B
   [Anonymous], 2009, PRIVACY DESIGN 7 FDN
   [Anonymous], P 36 INT C SOFTW ENG
   [Anonymous], P 36 INT C SOFTW ENG
   [Anonymous], 2014, PRIVACY ENG MANIFEST
   [Anonymous], ALB L REV
   [Anonymous], INT C UB COMP BERL H
   [Anonymous], CUCS01011 DEP COMP S
   [Anonymous], 2011, COMPUT PRIV DATA PRO
   [Anonymous], EUR COMM PROP REG EU
   [Anonymous], 1990, Basics of qualitative research
   [Anonymous], 7 INT WORKSH REQ ENG
   [Anonymous], P 50 HAW INT C SYST
   [Anonymous], REP SEC ADV COMM AUT
   [Anonymous], P 9 S US PRIV SEC
   [Anonymous], 2013, NW J TECHNOL INTELLE
   [Anonymous], P 1 ACM C EL COMM DE
   [Anonymous], 2014, DESIGNING PRIVACY DE
   [Anonymous], 2013, J PRIVACY CONFIDENTI, DOI DOI 10.29012/JPC.V4I2.620
   [Anonymous], P 2013 INT C SOFTW E
   [Anonymous], P 2005 ACM WORKSH PR
   [Anonymous], 2011, MICH TELECOMM TECH L
   [Anonymous], 2014, WORKSH US SEC USEC 2
   Argyris C., 1960, UNDERSTANDING ORG BE
   Awad NF, 2006, MIS QUART, V30, P13
   Bamberger KA, 2013, GEORGE WASH LAW REV, V81, P1529
   Bamberger KA, 2011, STANFORD LAW REV, V63, P247
   Bandura A., 1996, SOCIAL FDN THOUGHT A, DOI DOI 10.5465/AMR.1987.4306538
   Bartels LK, 1998, J BUS ETHICS, V17, P799, DOI 10.1023/A:1005817401688
   Berente N, 2012, INFORM SYST RES, V23, P376, DOI 10.1287/isre.1110.0373
   Birnhack Michael, 2014, Jurimetrics: Journal of Law, Science and Technology, V55, P55
   BROWN RL, 1986, ACCIDENT ANAL PREV, V18, P455, DOI 10.1016/0001-4575(86)90019-9
   Budi A, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P447
   Castro M, 2008, ACM SIGPLAN NOTICES, V43, P319, DOI 10.1145/1353536.1346322
   Chan YE, 2000, J MANAGE INFORM SYST, V16, P225, DOI 10.1080/07421222.2000.11518272
   Cooper MD, 2004, J SAFETY RES, V35, P497, DOI 10.1016/j.jsr.2004.08.004
   Cuinan MJ, 2009, MIS QUART, V33, P673
   Deshpande SP, 1996, J BUS ETHICS, V15, P315, DOI 10.1007/BF00382957
   Dinev T, 2006, INFORM SYST RES, V17, P61, DOI 10.1287/isre.1060.0080
   EISENBERGER R, 1990, J APPL PSYCHOL, V75, P51, DOI 10.1037//0021-9010.75.1.51
   Fienberg SE, 2006, STAT SCI, V21, P143, DOI 10.1214/088342306000000240
   Friedman B, 2006, ADV MANAG INFORM SYS, V5, P348
   Gellman Robert., 2013, Fair Information Practices: A Basic History
   Gershon RRM, 2000, AM J INFECT CONTROL, V28, P211, DOI 10.1067/mic.2000.105288
   Gimeno D, 2005, OCCUP ENVIRON MED, V62, P337, DOI 10.1136/oem.2004.014936
   Grechanik Mark, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P368, DOI 10.1109/ISSRE.2010.13
   Grosch JW, 1999, AM J IND MED, P122
   Institute of International Finance, 2019, BUSINESSES POLICYMAK
   Jaramillo F, 2013, J BUS RES, V66, P2301, DOI 10.1016/j.jbusres.2012.03.013
   Kalloniatis C, 2008, REQUIR ENG, V13, P241, DOI 10.1007/s00766-008-0067-3
   Lacity M. C., 1994, Journal of Management Information Systems, V11, P137
   Lahlou S, 2005, COMMUN ACM, V48, P59, DOI 10.1145/1047671.1047705
   Luria Gil., 2008, QUALITY MANAGEMENT J, V15, P27, DOI DOI 10.1080/10686967.2008.11918054
   Mohamed S, 2002, J CONSTR ENG M, V128, P375, DOI 10.1061/(ASCE)0733-9364(2002)128:5(375)
   Myers M. D., 2007, Information and Organization, V17, P2, DOI 10.1016/j.infoandorg.2006.11.001
   Myers MD, 1997, MIS QUART, V21, P241, DOI 10.2307/249422
   NICHOLSON N, 1985, ACAD MANAGE REV, V10, P397, DOI 10.2307/258123
   Ohm P, 2010, UCLA LAW REV, V57, P1701
   Ozer NicolasA., 2012, NYU Rev. L. Soc. Change, V36, P215
   Peters F, 2013, IEEE T SOFTWARE ENG, V39, P1054, DOI 10.1109/TSE.2013.6
   Peters F, 2012, PROC INT CONF SOFTW, P189, DOI 10.1109/ICSE.2012.6227194
   Reay I, 2009, ACM T WEB, V3, DOI 10.1145/1513876.1513878
   Resnick ML, 2003, INT J HUM-COMPUT INT, V16, P211, DOI 10.1207/S15327590IJHC1602_05
   Rubinstein Ira S., 2013, Berkeley Technology Law Journal, V28, P1333
   Schneider B, 2017, J APPL PSYCHOL, V102, P468, DOI 10.1037/apl0000090
   Schneider B, 2013, ANNU REV PSYCHOL, V64, P361, DOI 10.1146/annurev-psych-113011-143809
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Shaw TR, 2003, J BUS ETHICS, V46, P301, DOI 10.1023/A:1025628530013
   Siu OL, 2004, ACCIDENT ANAL PREV, V36, P359, DOI 10.1016/S0001-4575(03)00016-2
   Smith HJ, 2011, MIS QUART, V35, P989
   Spiekermann S, 2009, IEEE T SOFTWARE ENG, V35, P67, DOI 10.1109/TSE.2008.88
   Spreitzer G. M., 2008, Taking Stock: A Review of More Than Twenty Years of Research on Empowerment at Work, V1, P54
   Stamper R, 2000, BEHAV INFORM TECHNOL, V19, P15, DOI 10.1080/014492900118768
   Strauss A., 1994, HDB QUALITATIVE RES, P273, DOI DOI 10.1007/BF00988593
   Strauss E, 1998, CLIN ORTHOP RELAT R, P2
   Suddaby R, 2006, ACAD MANAGE J, V49, P633, DOI 10.5465/AMJ.2006.22083020
   Szekely Ivan, 2013, INTERNET SURVEILLANC, V16, P198
   Taneja K., 2011, ESECFSE, P201
   Toch E, 2012, USER MODEL USER-ADAP, V22, P203, DOI 10.1007/s11257-011-9110-z
   Tsai MT, 2010, EXPERT SYST APPL, V37, P8479, DOI 10.1016/j.eswa.2010.05.029
   van Lieshout Marc, 2011, Info, V13, P55, DOI 10.1108/14636691111174261
   Varonen U, 2000, ACCIDENT ANAL PREV, V32, P761, DOI 10.1016/S0001-4575(99)00129-3
   Walsham G, 2006, EUR J INFORM SYST, V15, P320, DOI 10.1057/palgrave.ejis.3000589
   WIMBUSH JC, 1994, J BUS ETHICS, V13, P637, DOI 10.1007/BF00871811
   WOOD R, 1989, ACAD MANAGE REV, V14, P361, DOI 10.2307/258173
   Zohar D, 2005, J APPL PSYCHOL, V90, P616, DOI 10.1037/0021-9010.90.4.616
   ZOHAR D, 1980, J APPL PSYCHOL, V65, P96, DOI 10.1037/0021-9010.65.1.96
   Zohar D, 2000, J APPL PSYCHOL, V85, P587, DOI 10.1037//0021-9010.85.4.587
NR 91
TC 77
Z9 84
U1 1
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2018
VL 23
IS 1
BP 259
EP 289
DI 10.1007/s10664-017-9517-1
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA FU9TG
UT WOS:000424199400007
DA 2024-07-18
ER

PT J
AU Kabinna, S
   Bezemer, CP
   Shang, WY
   Syer, MD
   Hassan, AE
AF Kabinna, Suhas
   Bezemer, Cor-Paul
   Shang, Weiyi
   Syer, Mark D.
   Hassan, Ahmed E.
TI Examining the stability of logging statements
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Logging statements; Log file stability; Log processing tools
ID INFORMATION; REGRESSION
AB Logging statements (embedded in the source code) produce logs that assist in understanding system behavior, monitoring choke-points and debugging. Prior work showcases the importance of logging statements in operating, understanding and improving software systems. The wide dependence on logs has lead to a new market of log processing and management tools. However, logs are often unstable, i.e., the logging statements that generate logs are often changed without the consideration of other stakeholders, causing sudden failures of log processing tools and increasing the maintenance costs of such tools. We examine the stability of logging statements in four open source applications namely: Liferay, ActiveMQ, Camel and CloudStack. We find that 20-45% of their logging statements change throughout their lifetime. The median number of days between the introduction of a logging statement and the first change to that statement is between 1 and 17 in our studied applications. These numbers show that in order to reduce maintenance effort, developers of log processing tools must be careful when selecting the logging statements on which their tools depend. In order to effectively mitigate the issues that are caused by unstable logging statements, we make an important first step towards determining whether a logging statement is likely to remain unchanged in the future. First, we use a random forest classifier to determine whether a just-introduced logging statement will change in the future, based solely on metrics that are calculated when it is introduced. Second, we examine whether a long-lived logging statement is likely to change based on its change history. We leverage Cox proportional hazards models (Cox models) to determine the change risk of long-lived logging statements in the source code. Through our case study on four open source applications, we show that our random forest classifier achieves a 83-91% precision, a 65-85% recall and a 0.95-0.96 AUC. We find that file ownership, developer experience, log density and SLOC are important metrics in our studied projects for determining the stability of logging statements in both our random forest classifiers and Cox models. Developers can use our approach to determine the risk of a logging statement changing in their own projects, to construct more robust log processing tools, by ensuring that these tools depend on logs that are generated by more stable logging statements.
C1 [Kabinna, Suhas; Bezemer, Cor-Paul; Syer, Mark D.; Hassan, Ahmed E.] Queens Univ, SAIL, Kingston, ON, Canada.
   [Shang, Weiyi] Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ, Canada.
C3 Queens University - Canada; Concordia University - Canada
RP Kabinna, S (corresponding author), Queens Univ, SAIL, Kingston, ON, Canada.
EM kabinna@cs.queensu.ca; bezemer@cs.queensu.ca; shang@encs.concordia.ca;
   mdsyer@cs.queensu.ca; ahmed@cs.queensu.ca
RI KHALIFA, AHMED khalifa/HKF-2246-2023; Hassan, Ahmed/AAB-7241-2019; Ali,
   Ahmed/HOF-4672-2023
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; Bezemer,
   Cor-Paul/0000-0002-0474-5718
CR [Anonymous], 2010, P USENIX ANN TECH C
   [Anonymous], 2015, MODELLING SURVIVAL D, DOI DOI 10.1201/B18041
   [Anonymous], EPIGENETICS
   [Anonymous], 2008, PROC 1 USENIX C ANAL
   [Anonymous], 1996, GUIDE CHI SQUARED TE
   Bigliardi L, 2014, INT CONF QUAL SOFTW, P286, DOI 10.1109/QSIC.2014.31
   Bird C, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P1, DOI 10.1109/MSR.2009.5069475
   Boulon J., 2008, P CCA, V8, P1
   Carasso D., 2012, Exploring splunk, P978
   Cohen J., 2013, APPL MULTIPLE REGRES
   Ding Rui, 2015, P 2015 USENIX TECHN, P139
   ELBERS C, 1982, REV ECON STUD, V49, P403, DOI 10.2307/2297364
   Fisher LD, 1999, ANNU REV PUBL HEALTH, V20, P145, DOI 10.1146/annurev.publhealth.20.1.145
   Fu Q, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P24, DOI 10.1145/2591062.2591175
   Fu QA, 2009, IEEE DATA MINING, P149, DOI 10.1109/ICDM.2009.60
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Gunes Koru A., 2007, PROMISE 07, P10, DOI DOI 10.1109/PROMISE.2007.9
   Harrell FE, 2015, SPRINGER SER STAT, DOI 10.1007/978-3-319-19425-7
   Hastie T., 2009, The Elements of Statistical Learning
   HOAGLIN DC, 1978, AM STAT, V32, P17, DOI 10.2307/2683469
   Hosmer D., 1999, APPL SURVIVAL ANAL R
   Hripcsak G, 2005, J AM MED INFORM ASSN, V12, P296, DOI 10.1197/jamia.M1733
   Ihaka R., 1996, J COMPUTATIONAL GRAP, V5, P299, DOI [DOI 10.1080/10618600.1996.10474713, 10.2307/1390807, DOI 10.2307/1390807]
   Kabinna S, 2016, MINIG SOFTW IN PRESS
   Kabinna S, 2016, SANER 2016
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Kendall M. G., 1948, RANK CORRELATION MET
   Koru AG, 2009, IEEE T SOFTWARE ENG, V35, P293, DOI 10.1109/TSE.2008.90
   Li H, 2016, EMPIR SOFTW IN PRESS
   Malik H, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1012, DOI 10.1109/ICSE.2013.6606651
   McIntosh S, 2016, EMPIR SOFTW ENG, V21, P2146, DOI 10.1007/s10664-015-9381-9
   Mednis M., 2012, Biosystems and Information technology, V1, P14, DOI DOI 10.11592/BIT.121102
   Miller Jr Rupert G, 2011, Survival analysis, V66
   Pecchia A, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P169, DOI 10.1109/ICSE.2015.145
   Ren HN, 2004, J CLIN ONCOL, V22, P3230, DOI 10.1200/JCO.2004.02.080
   Serfling R.J., 2009, APPROXIMATION THEORE, V162
   Shang WY, 2014, PROC IEEE INT CONF S, P21, DOI 10.1109/ICSME.2014.24
   Shang WY, 2015, EMPIR SOFTW ENG, V20, P1, DOI 10.1007/s10664-013-9274-8
   Shang WY, 2014, J SOFTW-EVOL PROC, V26, P3, DOI 10.1002/smr.1579
   Shang WY, 2012, PROC INT CONF SOFTW, P1583, DOI 10.1109/ICSE.2012.6227031
   Strobl C, 2008, BMC BIOINFORMATICS, V9, DOI 10.1186/1471-2105-9-307
   Syer MD, 2015, IEEE T SOFTWARE ENG, V41, P176, DOI 10.1109/TSE.2014.2361131
   Tantithamthavorn C., 2015, T SOFTWARE IN PRESS
   THERNEAU TM, 1990, BIOMETRIKA, V77, P147, DOI 10.2307/2336057
   van Rijsbergen C. J, 1979, Information Retrieval, V2nd
   Xu W, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P117
   Yuan D., 2012, P 2012 USENIX S OP S, P293
   Yuan D, 2012, PROC INT CONF SOFTW, P102, DOI 10.1109/ICSE.2012.6227202
   Yuan D, 2011, ACM SIGPLAN NOTICES, V46, P3, DOI 10.1145/1961296.1950369
   Zhu JM, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P415, DOI 10.1109/ICSE.2015.60
NR 50
TC 56
Z9 62
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2018
VL 23
IS 1
BP 290
EP 333
DI 10.1007/s10664-017-9518-0
PG 44
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FU9TG
UT WOS:000424199400008
DA 2024-07-18
ER

PT J
AU Lin, D
   Bezemer, CP
   Hassan, AE
AF Lin, Dayi
   Bezemer, Cor-Paul
   Hassan, Ahmed E.
TI Studying the urgent updates of popular games on the Steam platform
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Update cycle; Update strategy; Urgent update; Computer games; Steam
ID PATCH RELEASE; SOFTWARE; SECURITY; IMPACT
AB The steadily increasing popularity of computer games has led to the rise of a multi-billion dollar industry. This increasing popularity is partly enabled by online digital distribution platforms for games, such as Steam. These platforms offer an insight into the development and test processes of game developers. In particular, we can extract the update cycle of a game and study what makes developers deviate from that cycle by releasing so-called urgent updates. An urgent update is a software update that fixes problems that are deemed critical enough to not be left unfixed until a regular-cycle update. Urgent updates are made in a state of emergency and outside the regular development and test timelines which causes unnecessary stress on the development team. Hence, avoiding the need for an urgent update is important for game developers. We define urgent updates as 0-day updates (updates that are released on the same day), updates that are released faster than the regular cycle, or self-admitted hotfixes. We conduct an empirical study of the urgent updates of the 50 most popular games from Steam, the dominant digital game delivery platform. As urgent updates are reflections of mistakes in the development and test processes, a better understanding of urgent updates can in turn stimulate the improvement of these processes, and eventually save resources for game developers. In this paper, we argue that the update strategy that is chosen by a game developer affects the number of urgent updates that are released. Although the choice of update strategy does not appear to have an impact on the percentage of updates that are released faster than the regular cycle or self-admitted hotfixes, games that use a frequent update strategy tend to have a higher proportion of 0-day updates than games that use a traditional update strategy.
C1 [Lin, Dayi; Bezemer, Cor-Paul; Hassan, Ahmed E.] Queens Univ, Kingston, ON, Canada.
C3 Queens University - Canada
RP Lin, D (corresponding author), Queens Univ, Kingston, ON, Canada.
EM dayi.lin@cs.queensu.ca; bezemer@cs.queensu.ca; ahmed@cs.queensu.ca
RI Hassan, Ahmed/AAB-7241-2019; Ali, Ahmed/HOF-4672-2023; KHALIFA, AHMED
   khalifa/HKF-2246-2023; Lin, Dayi/AAS-8054-2020
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; Bezemer,
   Cor-Paul/0000-0002-0474-5718; Lin, Dayi/0000-0002-4034-6650
CR Ampatzoglou A, 2010, INFORM SOFTWARE TECH, V52, P888, DOI 10.1016/j.infsof.2010.05.004
   [Anonymous], 2002, RTI PROJECT
   Arora A, 2006, MANAGE SCI, V52, P465, DOI 10.1287/mnsc.1050.0440
   Arora A, 2010, INFORM SYST RES, V21, P115, DOI 10.1287/isre.1080.0226
   Beckman RC, 2012, NUS CENT INT LAW SER, P1
   Blackburn J, 2011, ARXIV11124915
   Bohn R, 2000, HARVARD BUS REV, V78, P82
   Chambers C, 2005, MEASUREMENT BASED CH
   da Costa DA, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P374, DOI [10.1109/MSR.2016.045, 10.1145/2901739.2901764]
   Galyonkin S., 2017, STEAM SALES 2016
   Gray J., 2016, Steam Charts - Tracking What's Played
   Hassan S., 2016, EMPIR SOFTW ENG, P1
   Huang Jeff., 2013, Proc. Conf. on Human Factors in Computing Systems, P695, DOI DOI 10.1145/2470654.2470753
   Kerzazi N, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P574, DOI 10.1109/SANER.2016.114
   Khomh F., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P179, DOI 10.1109/MSR.2012.6224279
   Khomh F, 2015, EMPIR SOFTW ENG, V20, P336, DOI 10.1007/s10664-014-9308-x
   Kim BC, 2011, PROD OPER MANAG, V20, P603, DOI 10.1111/j.1937-5956.2010.01189.x
   Lesensmer, 2013, HOTF LEAG LEG WIK WI
   Lewis Chris, 2010, Proceedings of the 5th International Conference on the Foundations of Digital Games FDG, P108
   Leys C, 2013, J EXP SOC PSYCHOL, V49, P764, DOI 10.1016/j.jesp.2013.03.013
   Long J.D., 2003, Ordinal Analysis of Behavioral Data
   Mäntylä MV, 2013, PROC IEEE INT CONF S, P20, DOI 10.1109/ICSM.2013.13
   McGraw G, 2007, IEEE SECUR PRIV, V5, P76, DOI 10.1109/MSP.2007.116
   McIlroy S, 2016, EMPIR SOFTW ENG, V21, P1346, DOI 10.1007/s10664-015-9388-2
   Microsoft, 2015, XBOX GAM STOR
   Microsoft, 2003, UND PATCH UPD MAN MI
   MILLER J, 1991, Q J EXP PSYCHOL-A, V43, P907, DOI 10.1080/14640749108400962
   Motoyama M., P 2011 ACM SIGCOMM C, P71, DOI DOI 10.1145/2068816.2068824
   Murphy-Hill E, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1, DOI 10.1145/2568225.2568226
   Nayebi M, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P552, DOI 10.1109/SANER.2016.116
   Romano J., 2006, P ANN M SO ASS I RES
   Rosenmai, 2013, Using the median absolute deviation to find outliers
   RUBAT, 2013, CENS UPD
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Seaman CB, 2008, DEFECT CATEGORIZATIO
   Sifa R., 2015, LARGE SCALE CROSS GA
   Sinclair Brendan, 2015, GAMING WILL HIT 91 5
   Souza R, 2015, IEEE SOFTWARE, V32, P88, DOI 10.1109/MS.2015.30
   Stone J, 2016, NEW STEAM STEALER MA
   SuperData, 2015, WORLDW DIG GAM MARK
   Valve, 2016, STEAM COMM
   Valve, 2016, STEAM STOR
   Washburn M, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P280, DOI 10.1145/2889160.2889253
   Zwillinger D., 1999, CRC Standard Probability and Statistics Tables and Formulae
NR 44
TC 42
Z9 46
U1 0
U2 23
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2017
VL 22
IS 4
BP 2095
EP 2126
DI 10.1007/s10664-016-9480-2
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA FB6ZI
UT WOS:000406290500014
DA 2024-07-18
ER

PT J
AU Jonsson, L
   Borg, M
   Broman, D
   Sandahl, K
   Eldh, S
   Runeson, P
AF Jonsson, Leif
   Borg, Markus
   Broman, David
   Sandahl, Kristian
   Eldh, Sigrid
   Runeson, Per
TI Automated bug assignment: Ensemble-based machine learning in large scale
   industrial contexts
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Machine learning; Ensemble learning; Classification; Bug reports; Bug
   assignment; Industrial scale; Large scale
ID SOFTWARE; CONFIGURATION; ACCURATE; MODEL
AB Bug report assignment is an important part of software maintenance. In particular, incorrect assignments of bug reports to development teams can be very expensive in large software development projects. Several studies propose automating bug assignment techniques using machine learning in open source software contexts, but no study exists for large-scale proprietary projects in industry. The goal of this study is to evaluate automated bug assignment techniques that are based on machine learning classification. In particular, we study the state-of-the-art ensemble learner Stacked Generalization (SG) that combines several classifiers. We collect more than 50,000 bug reports from five development projects from two companies in different domains. We implement automated bug assignment and evaluate the performance in a set of controlled experiments. We show that SG scales to large scale industrial application and that it outperforms the use of individual classifiers for bug assignment, reaching prediction accuracies from 50 % to 89 % when large training sets are used. In addition, we show how old training data can decrease the prediction accuracy of bug assignment. We advice industry to use SG for bug assignment in proprietary contexts, using at least 2,000 bug reports for training. Finally, we highlight the importance of not solely relying on results from cross-validation when evaluating automated bug assignment.
C1 [Jonsson, Leif] Ericsson AB, Div Res, Torshamnsgatan 35 Kista, Stockholm, Sweden.
   [Eldh, Sigrid] Ericsson AB, Torshamnsgatan 35 Kista, Stockholm, Sweden.
   [Jonsson, Leif; Sandahl, Kristian] Linkoping Univ, Dept Comp & Informat Sci, SE-58183 Linkoping, Sweden.
   [Borg, Markus; Runeson, Per] Lund Univ, Dept Comp Sci, Box 118, S-22100 Lund, Sweden.
   [Broman, David] KTH Royal Inst Technol, S-16440 Kista, Sweden.
   [Broman, David] Univ Calif Berkeley, Berkeley, CA 94720 USA.
C3 Ericsson; Ericsson; Linkoping University; Lund University; Royal
   Institute of Technology; University of California System; University of
   California Berkeley
RP Jonsson, L (corresponding author), Ericsson AB, Div Res, Torshamnsgatan 35 Kista, Stockholm, Sweden.; Jonsson, L (corresponding author), Linkoping Univ, Dept Comp & Informat Sci, SE-58183 Linkoping, Sweden.
EM leif.jonsson@ericsson.com; markus.borg@cs.lth.se; dbro@kth.se;
   kristian.sandahl@liu.se; sigrid.eldh@ericsson.com; per.runeson@cs.lth.se
RI Runeson, Per/H-5113-2019; Borg, Markus/F-3609-2010; Eldh,
   Sigrid/JVO-0074-2024
OI Runeson, Per/0000-0003-2795-4851; Borg, Markus/0000-0001-7879-4371;
   Eldh, Sigrid/0000-0002-5070-9312; Jonsson, Leif/0000-0002-8989-0251
FU Industrial Excellence Center EASE Embedded Applications Software
   Engineering
FX This work was supported in part by the Industrial Excellence Center EASE
   Embedded Applications Software Engineering.<SUP>9</SUP>
CR Aberdour M, 2007, IEEE SOFTWARE, V24, P58, DOI 10.1109/MS.2007.2
   Ahsan SN, 2009, 2009 FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING ADVANCES (ICSEA 2009), P216, DOI 10.1109/ICSEA.2009.92
   Alenezi M, 2013, J SOFTW, V8
   Alshammari R, 2009, IEEE SYMPOSIUM ON COMPUTATIONAL INTELLIGENCE IN CYBER SECURITY, P167
   Amamra A, 2012, COMM COM INF SC, V340, P131
   [Anonymous], 2004, Software Engineering and Knowledge Engineering
   [Anonymous], EXPT SOFTWARE ENG PR
   [Anonymous], 2010, P 2010 ACM IEEE INT, DOI DOI 10.1145/1852786.1852814
   [Anonymous], 2011, P INT WORKSH MACH LE
   [Anonymous], DATA MINING USE CASE
   Anvik J, 2007, THESIS
   Anvik J, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000794
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Arlot S, 2010, STAT SURV, V4, P40, DOI 10.1214/09-SS054
   Asklund U., 2002, IEE Proceedings-Software, V149, P40, DOI 10.1049/ip-sen:20020196
   Avazpour I, 2014, Recomm Syst Softw Eng, P245
   BASILI VR, 1986, IEEE T SOFTWARE ENG, V12, P733, DOI 10.1109/TSE.1986.6312975
   Baysal O, 2009, INT C PROGRAM COMPRE, P297, DOI 10.1109/ICPC.2009.5090066
   Bettenburg N, 2008, PROC IEEE INT CONF S, P337, DOI 10.1109/ICSM.2008.4658082
   Bezanson Jeff, 2012, Julia: A fast dynamic language for technical computing
   Bhattacharya P, 2012, J SYST SOFTWARE, V85, P2275, DOI 10.1016/j.jss.2012.04.053
   Bifet A, 2010, J MACH LEARN RES, V11, P1601
   Bishop Christopher M, 2006, PATTERN RECOGN, V128, P1
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Borg M, 2014, EMPIR SOFTW ENG, V19, P1565, DOI 10.1007/s10664-013-9255-y
   Breiman L, 2001, MACH LEARN, V45, P5, DOI 10.1023/A:1010933404324
   BURMAN P, 1994, BIOMETRIKA, V81, P351, DOI 10.1093/biomet/81.2.351
   CANFORA G, 2006, P 2006 ACM S APPL CO, P1767, DOI DOI 10.1145/1141277.1141693
   Chen L, 2011, J SOFTW, V6
   Frank E, 2004, BIOINFORMATICS, V20, P2479, DOI 10.1093/bioinformatics/bth261
   Freund Y., 1995, COMPUTATIONAL LEARNI
   GREEN SB, 1991, MULTIVAR BEHAV RES, V26, P499, DOI 10.1207/s15327906mbr2603_7
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Helming J, 2011, P INT C EV NOV APPR, P236
   Jeong G, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P111, DOI 10.1145/1595696.1595715
   Jonsson L., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P437, DOI 10.1109/ICST.2012.56
   Just S, 2008, 2008 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P82, DOI 10.1109/VLHCC.2008.4639063
   Kagdi H, 2012, J SOFTW-EVOL PROC, V24, P3, DOI 10.1002/smr.530
   Kodovsky J, 2011, DANGERS CROSS VALIDA
   Kohavi R., 1995, STUDY CROSS VALIDATI, DOI DOI 10.1067/MOD.2000.109031
   Kuncheva LI, 2003, MACH LEARN, V51, P181, DOI 10.1023/A:1022859003006
   Li Q, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P223
   Lin ZP, 2009, INT SYMP EMP SOFTWAR, P452
   Linares-Vásquez M, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P451, DOI 10.1109/ICSM.2012.6405306
   Matter D, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P131, DOI 10.1109/MSR.2009.5069491
   McCallum A.K., 2002, MALLET MACHINE LEARN
   Mozilla, 2013, LIF CYCL OF A BUG
   Murphy-Hill E, 2014, RECOMMENDATION SYSTE
   Nagwani N, 2012, P 9 INT C ICT KNOWL, P113, DOI DOI 10.1109/ICTKE.2012.6152388
   Ning Li, 2011, 2011 Sixth International Conference on Digital Information Management, P294, DOI 10.1109/ICDIM.2011.6093330
   Owen Sean., 2011, Mahout in Action
   Parasuraman R, 2000, IEEE T SYST MAN CY A, V30, P286, DOI 10.1109/3468.844354
   Park J, 2011, P 25 AAAI C ART INT
   Paulson JW, 2004, IEEE T SOFTWARE ENG, V30, P246, DOI 10.1109/TSE.2004.1274044
   Petersen K, 2009, INT SYMP EMP SOFTWAR, P402
   Rao R. B., 2008, P 2008 SIAM INT C DA, P588, DOI [https://doi.org/10.1137/1.9781611972788.54, DOI 10.1137/1.9781611972788.54, 10.1137/1.9781611972788.54]
   Regnell B, 2008, IEEE SOFTWARE, V25, P42, DOI 10.1109/MS.2008.48
   Robles G, 2006, INT FED INFO PROC, V203, P273
   Servant F, 2012, PROC INT CONF SOFTW, P36, DOI 10.1109/ICSE.2012.6227208
   Shokripour R, 2012, INT CONF ADV COMPUT, P144, DOI 10.1109/ACSAT.2012.56
   Sill Joseph, 2009, Feature-weighted linear stacking
   Tamrawi A, 2011, P 19 ACM SIGSOFT S 1, P365, DOI [DOI 10.1145/2025113.2025163, 10.31274/etd-180810-1814, DOI 10.31274/ETD-180810-1814]
   Thomas SW, 2013, IEEE T SOFTWARE ENG, V39, P1427, DOI 10.1109/TSE.2013.27
   Tibshirani R, 2001, J ROY STAT SOC B, V63, P411, DOI 10.1111/1467-9868.00293
   Wiklund K, 2013, IEEE-ACM INT WKSP CO, P67, DOI 10.1109/CESI.2013.6618475
   WITTEN IH, 2011, DATA MINING PUB
   WOLPERT DH, 1992, NEURAL NETWORKS, V5, P241, DOI 10.1016/S0893-6080(05)80023-1
   Wu WJ, 2011, ASIA PAC SOFWR ENG, P389, DOI 10.1109/APSEC.2011.15
   Xia X, 2013, WORK CONF REVERSE EN, P72, DOI 10.1109/WCRE.2013.6671282
   Xie X, 2012, P 8 INT C PRED MOD S, P19, DOI [DOI 10.1145/2365324.2365329, 10.1145/2365324.2365329]
   Zaharia M, 2010, P 2 USENIX WORKSHOP
   Zhao YH, 2008, ADV SPACE RES, V41, P1955, DOI 10.1016/j.asr.2007.07.020
NR 72
TC 85
Z9 92
U1 0
U2 12
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2016
VL 21
IS 4
BP 1533
EP 1578
DI 10.1007/s10664-015-9401-9
PG 46
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DQ2VF
UT WOS:000379060700004
DA 2024-07-18
ER

PT J
AU de França, BBN
   Travassos, GH
AF Nicolau de Franca, Breno Bernard
   Travassos, Guilherme Horta
TI Experimentation with dynamic simulation models in software engineering:
   planning and reporting guidelines
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Reporting; Planning; Guidelines; Software engineering; Simulation-based
   studies
ID MANAGEMENT
AB Simulation-based studies (SBS) have become an interesting investigation approach for Software Engineering (SE). However, the reports on experiments with dynamic simulation models found in the technical literature lack relevant information, hampering the full understanding of the procedures and results reported, as well as their replicability. Apart from the limitations on the length in conferences and journal papers, some of the relevant information seems to be missing due to methodological issues not considered when conducting such studies. This is the case of missing research questions and goals, lack of evidence regarding the dynamic simulation model validity, poorly designed simulation experiments, amongst others. Based on findings from a previous quasi-systematic literature review, we propose a set of reporting guidelines for SBS with dynamic models in the context of SE aiming at providing guidance on which information the report should contain. Furthermore, these guidelines were evolved to support SBS planning by identifying potential threats to simulation study validity and in making recommendations to avoid them, through qualitative analysis and external evaluation. Finally, we conducted different evaluations regarding both the reporting and planning guidelines, apart from using them to support the planning of a SBS as regards software evolution. A set of 33 reporting and planning guidelines for different stages of the simulation lifecycle and focused on the experimentation with dynamic simulation models have been put together. The first assessments point to a comprehensive set of guidelines, supporting a comprehensive preparation and review of the plans and reports from the studies, apart from the planning of a SBS focused on software evolution, potentially reducing the threats to the experimentation with the validity of dynamic simulation models. The 33 guidelines cannot be understood as separate groups for reporting and planning as they overlap in many aspects. The main goal is to use the guidelines to support the planning of a simulation-based study with dynamic models so that experimenters may identify potential threats to validity and produce relevant information for a complete simulation experiment report in advance. Despite their initial contribution to increase the validity of SBS, the reporting and planning of simulation-based experiments with dynamic models still has to be discussed and improved in SE. Therefore, additional assessments of this set of guidelines are needed to strengthen the confidence in their completeness and usefulness.
C1 [Nicolau de Franca, Breno Bernard; Travassos, Guilherme Horta] Univ Fed Rio de Janeiro, COPPE, POB 68511, Rio De Janeiro, Brazil.
C3 Universidade Federal do Rio de Janeiro
RP de França, BBN (corresponding author), Univ Fed Rio de Janeiro, COPPE, POB 68511, Rio De Janeiro, Brazil.
EM brenofranca@gmail.com; ght@cos.ufrj.br
RI de França, Breno Bernard Nicolau/AAB-4730-2019; Travassos, Guilherme
   H/G-2842-2012; de França, Breno B N/D-8754-2017
OI de França, Breno Bernard Nicolau/0000-0002-4531-1473; 
FU CNPq [141152/2010-9, 304795/2010-0]
FX The authors would like to thank the CNPq (Grants 141152/2010-9 and
   304795/2010-0) for their support of this work.
CR Al-Emran A, 2010, P INT C SOFTW PROC
   Alexopoulos C, 2007, P WINT SIM C, DOI [10.1109/WSC.2007.4419597, DOI 10.1109/WSC.2007.4419597]
   Andersson C., 2002, P 9 ANN IEEE INT C W
   [Anonymous], 2014, 8 ACM IEEE ESEM
   [Anonymous], 2008, CASE STUDY RES DESIG
   Araujo MA, 2012, ESEM 2012
   Bai X, 2012, J SOFTW-EVOL PROC, V24, P721, DOI 10.1002/smr.480
   BALCI O, 1990, 1990 WINTER SIMULATION CONFERENCE PROCEEDINGS, P25, DOI 10.1109/WSC.1990.129482
   Banks J, 1999, WINT SIM C
   Barney S, 2012, INFORM SOFTWARE TECH, V54, P651, DOI 10.1016/j.infsof.2012.01.008
   Barros M. D. O., 2002, Software Process Improvement and Practice, V7, P161, DOI 10.1002/spip.162
   Barros MD, 2004, J SYST SOFTWARE, V70, P21, DOI 10.1016/S0164-1212(02)00155-3
   Basili V. R., 1992, Technical Report
   Bin Ali N, 2012, EUROMICRO CONF PROC, P327, DOI 10.1109/SEAA.2012.69
   Biolchini J., 2005, Int. Sugar J.
   Birkholzer T, 2010, P INT C SOFTW PROC
   Burton A, 2006, STAT MED, V25, P4279, DOI 10.1002/sim.2673
   Carver J.C., 2010, RESER 10
   Concas G, 2013, J SOFTW-EVOL PROC, V25, P1225, DOI 10.1002/smr.1599
   Cook T. D., 1979, Quasi-experimentation: Design analysis issues for field settings
   Corbin J., 2008, QUAL RES, DOI DOI 10.4135/9781452230153.N10
   Davis JP, 2007, ACAD MANAGE REV, V32, P480, DOI 10.5465/AMR.2007.24351453
   de Franca BBN, 2014, CIBSE ESELAW
   de Franca BBN, 2014, 74714 RTES
   de Franca BBN, 2013, 74613 RTES
   Dybå T, 2012, INT SYMP EMP SOFTWAR, P19, DOI 10.1145/2372251.2372256
   Eck J.E., 2008, Journal of Experimental Criminology, V4, P195, DOI DOI 10.1007/S11292-008-9059-Z
   FLORAC WA, 1999, SEI S SOFTW, P1
   Foss T, 2003, IEEE T SOFTWARE ENG, V29, P985, DOI 10.1109/TSE.2003.1245300
   Garousi Vahid, 2009, Software Process: Improvement and Practice, V14, P165, DOI 10.1002/spip.411
   Grimm V, 2010, ECOL MODEL, V221, P2760, DOI 10.1016/j.ecolmodel.2010.08.019
   Houston D, 2010, P INT C SOFTW PROC
   Houston DX, 2001, J SYST SOFTWARE, V59, P259, DOI 10.1016/S0164-1212(01)00067-X
   Houston DX, 2013, P ICSSP 13 MAY 18 19
   Ivarsson M, 2011, EMPIR SOFTW ENG, V16, P365, DOI 10.1007/s10664-010-9146-4
   Jedlitschka A., 2008, Guide to Advanced Empirical Software Engineering
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kitchenham BA, 1999, J SOFTW MAINT-RES PR, V11, P365, DOI 10.1002/(SICI)1096-908X(199911/12)11:6<365::AID-SMR200>3.0.CO;2-W
   Kitchenham B, 2008, EMPIR SOFTW ENG, V13, P97, DOI 10.1007/s10664-007-9053-5
   Kleijnen J. P. C., 1975, Informatie, V17, P531
   Kleijnen JPC, 2005, INFORMS J COMPUT, V17, P263, DOI 10.1287/ijoc.1050.0136
   Montgomery D., 2013, DESIGN ANAL EXPT, V8
   Muller Mark, 2008, Guide to Advanced Empirical Software Engineering, P117, DOI DOI 10.1007/978-1-84800-044-5_5
   Nicolau de Franca Breno Bernard, 2012, 16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012), P156, DOI 10.1049/ic.2012.0019
   OREN TI, 1981, COMMUN ACM, V24, P180, DOI 10.1145/358598.358605
   Pai M, 2004, NATL MED J INDIA, V17, P2
   Paikari E, 2012, P INT C SOFTW SYST P
   Petersen K, 2011, INFORM SOFTWARE TECH, V53, P317, DOI 10.1016/j.infsof.2010.12.001
   Pfahl D., 2002, Software Process Improvement and Practice, V7, P189, DOI 10.1002/spip.164
   Psaroudakis JE, 2011, INT C COMMERCE BUS, P113, DOI 10.1109/CEC.2011.19
   Raffo DM, 2005, INFORM SOFTWARE TECH, V47, P1009, DOI 10.1016/j.infsof.2005.09.004
   Rahmandad H, 2012, SYST DYNAM REV, V28, P396, DOI 10.1002/sdr.1481
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sargent R., 1999, WINT SIM C
   SHANNON RE, 1998, P 1998 WINT SIM C
   Sterman JohnD., 2000, BUSINESS DYNAMICS
   Thomke S.H., 2003, EXPT MATTERS UNLOCKI
   Travassos G.H., 2013, CLEI ELECT J, V16, P8
   Travassos GH, 2003, WSESE03
   Uzzafer M, 2013, J SYST SOFTWARE, V86, P21, DOI 10.1016/j.jss.2012.06.042
   Wakeland W. W., 2004, Software Process Improvement and Practice, V9, P107, DOI 10.1002/spip.200
   Wohlin C., 2012, EXPT SOFTWARE ENG IN
   Zhang H, 2012, ICSSP 2012
NR 63
TC 17
Z9 18
U1 0
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2016
VL 21
IS 3
BP 1302
EP 1345
DI 10.1007/s10664-015-9386-4
PG 44
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DQ2VO
UT WOS:000379061700017
DA 2024-07-18
ER

PT J
AU Vidal, SA
   Bergel, A
   Marcos, C
   Díaz-Pace, JA
AF Vidal, Santiago A.
   Bergel, Alexandre
   Marcos, Claudia
   Diaz-Pace, J. Andres
TI Understanding and addressing exhibitionism in Java empirical research
   about method accessibility
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Method accessibility; Information hiding
AB Information hiding is a positive consequence of properly defining component interfaces. Unfortunately, determining what should constitute a public interface remains difficult. We have analyzed over 3.6 million lines of Java open-source code and found that on the average, at least 20 % of defined methods are over-exposed, thus threatening public interfaces to unnecessary exposure. Such over-exposed methods may have their accessibility reduced to exactly reflect the method usage. We have identified three patterns in the source code to identify over-exposed methods. We also propose an Eclipse plugin to guide practitioners in identifying over-exposed methods and refactoring their applications. Our plugin has been successfully used to refactor a non-trivial application.
C1 [Vidal, Santiago A.; Marcos, Claudia; Diaz-Pace, J. Andres] UNICEN, ISISTAN, Buenos Aires, DF, Argentina.
   [Vidal, Santiago A.] Consejo Nacl Invest Cient & Tecn, Natl Council Sci & Technol Res Argentina, ISISTAN Inst, Tandil, Argentina.
   [Diaz-Pace, J. Andres] Consejo Nacl Invest Cient & Tecn, Tandil, Argentina.
   [Bergel, Alexandre] Univ Chile, Dept Comp Sci, Pleiad Lab, Santiago, Chile.
   [Marcos, Claudia] CIC, Buenos Aires, DF, Argentina.
C3 Consejo Nacional de Investigaciones Cientificas y Tecnicas (CONICET);
   Consejo Nacional de Investigaciones Cientificas y Tecnicas (CONICET);
   Universidad de Chile
RP Vidal, SA (corresponding author), UNICEN, ISISTAN, Buenos Aires, DF, Argentina.; Vidal, SA (corresponding author), Consejo Nacl Invest Cient & Tecn, Natl Council Sci & Technol Res Argentina, ISISTAN Inst, Tandil, Argentina.
EM svidal@exa.unicen.edu.ar; abergel@dcc.uchile.cl;
   cmarcos@exa.unicen.edu.ar; adiaz@exa.unicen.edu.ar
RI Bergel, Alexandre/I-1397-2013
OI Bergel, Alexandre/0000-0001-8087-1903; Vidal,
   Santiago/0000-0003-2440-3034
FU PIP Project (CONICET) - Argentina [112-201101-00078]
FX We thank Emmanuel Puybaret, principal author of SweetHome3D, for his
   feedback on our refactoring. We gratefully thank Romain Robbes and
   Renato Cerro for their feedback on an earlier draft of the manuscript.
   We also thank Hugo Manterola and Ignacio Orlando for contributing to the
   development of the plugin. We thank the anonymous reviewers for their
   comments and suggestions to improve the quality of this work. This work
   was partially supported by PIP Project 112-201101-00078 (CONICET) -
   Argentina.
CR [Anonymous], 2004, OBJECT ORIENTED ANAL
   Binkley D, 2005, PROC IEEE INT CONF S, P27
   Bouillon P, 2008, LECT NOTES BUS INF P, V11, P41
   Briand L. C., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P475, DOI 10.1109/ICSM.1999.792645
   Chowdhury I., 2010, Proceedings of the 2010 ACM Symposium on Applied Computing, P1963
   Fowler M, 2002, IEEE SOFTWARE, V19, P18, DOI 10.1109/52.991326
   Ge X, 2012, PROC INT CONF SOFTW, P211, DOI 10.1109/ICSE.2012.6227192
   Liang DL, 2001, ACM SIGPLAN NOTICES, P73
   Martin R. C., 2002, AGILE SOFTWARE DEV P
   Meyer B., 2009, TOUCH CLASS LEARNING
   Mockus A, 2009, INT SYMP EMP SOFTWAR, P292
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   Patenaude JF, 1999, PROG COMPREHEN, P49, DOI 10.1109/WPC.1999.777743
   Riel AJ., 1996, Object-Oriented Design Heuristics
   Robbes R., 2012, P ACM SIGSOFT 20 INT, P1, DOI 10.1145/2393596.2393662
   Schäfer M, 2012, IEEE T SOFTWARE ENG, V38, P1233, DOI 10.1109/TSE.2012.13
   Siegel Sidney, 1988, Nonparametric statistics for the behavioral sciences
   SINGH S, 2011, ACM SIGSOFT SOFTW EN, V36, P1, DOI DOI 10.1145/2020976.2020994
   Singh V., 2012, ACM SIGSOFT Softw. Eng. Notes, V37, P1, DOI [10.1145/2088883.2088899, DOI 10.1145/2088883.2088899]
   Steimann F, 2009, LECT NOTES COMPUT SC, V5653, P419, DOI 10.1007/978-3-642-03013-0_19
   Tempero E, 2010, ASIA PAC SOFWR ENG, P336, DOI 10.1109/APSEC.2010.46
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Zoller C, 2012, PROCEEDINGS OF THE 2012 JOINT CONFERENCE OF THE 22ND INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE 2012 SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA 2012), P43, DOI 10.1109/IWSM-MENSURA.2012.15
   [No title captured]
   [No title captured], DOI DOI 10.1145/236337.236371
   [No title captured]
NR 26
TC 4
Z9 4
U1 1
U2 7
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2016
VL 21
IS 2
BP 483
EP 516
DI 10.1007/s10664-015-9365-9
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DI2ST
UT WOS:000373349700007
DA 2024-07-18
ER

PT J
AU Guo, YP
   Spínola, RO
   Seaman, C
AF Guo, Yuepu
   Spinola, Rodrigo Oliveira
   Seaman, Carolyn
TI Exploring the costs of technical debt management - a case study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Technical debt; Decision making; Cost; Case study
ID RISK-MANAGEMENT; SOFTWARE
AB Technical debt is a metaphor for delayed software maintenance tasks. Incurring technical debt may bring short-term benefits to a project, but such benefits are often achieved at the cost of extra work in future, analogous to paying interest on the debt. Currently technical debt is managed implicitly, if at all. However, on large systems, it is too easy to lose track of delayed tasks or to misunderstand their impact. Therefore, we have proposed a new approach to managing technical debt, which we believe to be helpful for software managers to make informed decisions. In this study we explored the costs of the new approach by tracking the technical debt management activities in an on-going software project. The results from the study provided insights into the impact of technical debt management on software projects. In particular, we found that there is a significant start-up cost when beginning to track and monitor technical debt, but the cost of ongoing management soon declines to very reasonable levels.
C1 [Guo, Yuepu; Seaman, Carolyn] Univ Maryland Baltimore Cty, Dept Informat Syst, Baltimore, MD 21228 USA.
   [Spinola, Rodrigo Oliveira] Univ Salvador, Dept Syst & Comp, Salvador, BA, Brazil.
   [Spinola, Rodrigo Oliveira] Univ Fed Bahia, Fraunhofer Project Ctr Software & Syst Engn, Salvador, BA, Brazil.
C3 University System of Maryland; University of Maryland Baltimore County;
   Universidade Salvador (UNIFACS); Universidad de El Salvador;
   Universidade Federal da Bahia
RP Guo, YP (corresponding author), Univ Maryland Baltimore Cty, Dept Informat Syst, Baltimore, MD 21228 USA.
EM yuepu.guo@umbc.edu; rodrigo.spinola@pro.unifacs.br; cseaman@umbc.edu
CR Alberts C.J., 1996, Continuous Risk Management Guidebook
   ALTER S, 1978, SLOAN MANAGE REV, V20, P23
   [Anonymous], 2012, 2012 3rd International Workshop on Managing Technical Debt, MTD 2012-Proceedings, DOI [10.1109/MTD.2012.6225997, DOI 10.1109/MTD.2012.6225997]
   Bachmann F., 2012, CrossTalk, P20
   BOEHM BW, 1991, IEEE SOFTWARE, V8, P32, DOI 10.1109/52.62930
   Boehm BW., 1981, Software Engineering Economics
   Bohnet J., 2011, Proceedings of the 2nd Workshop on Managing Technical Debt, P9, DOI [DOI 10.1145/1985362.1985365, 10.1145/1985362.1985365]
   Brondum J., 2012, Proceedings 2012 Third International Workshop on Managing Technical Debt (MTD 2012), P7, DOI 10.1109/MTD.2012.6226003
   Brown N, 2011, 2011 9TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P103, DOI 10.1109/WICSA.2011.22
   CAST, 2012, CAST WORLDW APPL SOF
   Charette R. N., 1989, SOFTWARE ENG RISK AN
   Cunningham W., 1993, OOPS Messenger, V4, P29
   DALKEY N, 1963, MANAGE SCI, V9, P458, DOI 10.1287/mnsc.9.3.458
   DoD U, 2006, RISK MAN GUID DOD AC
   FAIRLEY R, 1994, IEEE SOFTWARE, V11, P57, DOI 10.1109/52.281716
   Fowler M, 2009, TECHN DEBT QUADR
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Fowler M, 2003, TECHN DEBT
   Fowler M, 2007, DES STAM HYP
   Gaudin O., 2009, EVALUATE YOUR TECHNI
   Higuera RonalrP., 1996, SOFTWARE RISK MANAGE
   ISO, 2002, RISK MAN PRINC GUID
   Kontio J., 2001, Software Engineering Risk Management: A Method, Improvement Framework and Empirical Evaluation
   Lester A., 2008, Get Out of Technical Debt
   Leung H., 2002, HDB SOFTWARE ENG KNO
   Marinescu R, 2012, IBM J RES DEV, V56, DOI 10.1147/JRD.2012.2204512
   McConnell S., 2007, 10x Software Development
   Mo R, 2013, 2013 4TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD), P39, DOI 10.1109/MTD.2013.6608677
   Nord R. L., 2012, 2012 Joint Working IEEE/IFIP Conference on Software Architecture (WICSA 2012) & European Conference on Software Architecture (ECSA 2012), P91, DOI 10.1109/WICSA-ECSA.212.17
   Nugroho A, 2011, P 2 WORKSH MAN TECHN, P1
   PARKINSON C.N., 1957, PARKINSONS LAW OTHER
   PUTNAM LH, 1978, IEEE T SOFTWARE ENG, V4, P345, DOI 10.1109/TSE.1978.231521
   Rothman J., 2006, An Incremental Technique to Pay Off Testing Technical Debt
   Schmid Klaus, 2013, QOSA 13 P 9 INT ACMS, P153, DOI [DOI 10.1145/2465478.2465492, 10.1145/2465478.2465492]
   Seaman C, 2011, ADV COMPUT, V82, P25, DOI 10.1016/B978-0-12-385512-1.00002-5
   Shepperd M, 2001, IEEE T SOFTWARE ENG, V27, P1014, DOI 10.1109/32.965341
   Sisti F J., 1994, Software Risk Evaluation Method
   Stamatelatos M., 2002, Probabilistic risk assessment procedures guide for nasa managers and practitioners
   van Emden E, 2002, NINTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P97, DOI 10.1109/WCRE.2002.1173068
   Wang P, 2013, 2013 4TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD), P47, DOI 10.1109/MTD.2013.6608678
   Whiston S.C., 1993, J CAREER DEV, V19, P175
   Yuepu Guo, 2011, 2011 IEEE 27th International Conference on Software Maintenance, P528, DOI 10.1109/ICSM.2011.6080824
   Zazworka N., 2011, P 2 WORKSH MAN TECHN, P39
NR 43
TC 72
Z9 79
U1 0
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2016
VL 21
IS 1
BP 159
EP 182
DI 10.1007/s10664-014-9351-7
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DI2SQ
UT WOS:000373349300006
DA 2024-07-18
ER

PT J
AU Mäntylä, MV
   Adams, B
   Khomh, F
   Engström, E
   Petersen, K
AF Mantyla, Mika V.
   Adams, Bram
   Khomh, Foutse
   Engstrom, Emelie
   Petersen, Kai
TI On rapid releases and software testing: a case study and a
   semi-systematic literature review
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software testing; Release model; Builds; Bugs; Open-source; Agile
   releases; Mozilla
ID AGILE; ART
AB Large open and closed source organizations like Google, Facebook and Mozilla are migrating their products towards rapid releases. While this allows faster time-to-market and user feedback, it also implies less time for testing and bug fixing. Since initial research results indeed show that rapid releases fix proportionally less reported bugs than traditional releases, this paper investigates the changes in software testing effort after moving to rapid releases in the context of a case study on Mozilla Firefox, and performs a semi-systematic literature review. The case study analyzes the results of 312,502 execution runs of the 1,547 mostly manual system-level test cases of Mozilla Firefox from 2006 to 2012 (5 major traditional and 9 major rapid releases), and triangulates our findings with a Mozilla QA engineer. We find that rapid releases have a narrower test scope that enables a deeper investigation of the features and regressions with the highest risk. Furthermore, rapid releases make testing more continuous and have proportionally smaller spikes before the main release. However, rapid releases make it more difficult to build a large testing community , and they decrease test suite diversity and make testing more deadline oriented. In addition, our semi-systematic literature review presents the benefits, problems and enablers of rapid releases from 24 papers found using systematic search queries and a similar amount of papers found through other means. The literature review shows that rapid releases are a prevalent industrial practice that are utilized even in some highly critical domains of software engineering, and that rapid releases originated from several software development methodologies such as agile, open source, lean and internet-speed software development. However, empirical studies proving evidence of the claimed advantages and disadvantages of rapid releases are scarce.
C1 [Mantyla, Mika V.] Aalto Univ, Dept Comp Sci & Engn, Espoo, Finland.
   [Adams, Bram] Polytech Montreal, MCIS, Montreal, PQ, Canada.
   [Khomh, Foutse] Polytech Montreal, SWAT, Montreal, PQ, Canada.
   [Engstrom, Emelie] Lund Univ, Dept Comp Sci, S-22100 Lund, Sweden.
   [Petersen, Kai] Blekinge Inst Technol, Sch Comp, Karlskrona, Sweden.
C3 Aalto University; Universite de Montreal; Polytechnique Montreal;
   Universite de Montreal; Polytechnique Montreal; Lund University;
   Blekinge Institute Technology
RP Mäntylä, MV (corresponding author), Aalto Univ, Dept Comp Sci & Engn, Espoo, Finland.
EM mika.mantyla@aalto.fi; bram.adams@polymtl.ca; foutse.khomh@polymtl.ca;
   emelie.engstrom@cs.lth.se; kai.petersen@bth.se
RI Mäntylä, Mika V/E-7644-2012; Engström, Emelie/AAG-7808-2019
OI Engström, Emelie/0000-0001-6736-9425; Petersen, Kai/0000-0002-1532-8223;
   Adams, Bram/0000-0001-7213-4006; Mantyla, Mika/0000-0002-2841-5879
FU EU [318082]; ELLIIT (the StrategicArea for ICT research - Swedish
   Government); N4S (research program - TEKES); NSERC (Natural Sciences and
   Engineering Research Council of Canada)
FX We would like to thank the Mozilla QA engineer who provided feedback to
   our findings. His responses are accounts of personal experience and
   opinion, and are in no means whatsoever an official statement from
   Mozilla. This work has been partially supported by EU FP7 Grant 318082
   (U-QASAR, http://www.uqasar.eu/), ELLIIT (the StrategicArea for ICT
   research, funded by the Swedish Government, http://www.liu.se/elliit),
   N4S (research program managed by DIGILE and funded by TEKES,
   http://www.n4s.fi/), and NSERC (Natural Sciences and Engineering
   Research Council of Canada).
CR Agarwal P., 2011, P 4 IND SOFTW ENG C, P51
   [Anonymous], 2013, ORDDOM ORDINAL DOMIN
   [Anonymous], 2004, XP Ser
   Azham Z., 2011, 2011 5th Malaysian Conference in Software Engineering (MySEC), P414, DOI 10.1109/MySEC.2011.6140708
   Baskerville R., 2006, IT Professional, V8, P29, DOI 10.1109/MITP.2006.86
   Baysal O, 2011, P 8 WORK C MIN SOFTW, P238, DOI DOI 10.1145/1985441.1985481
   Baysal O, 2012, SECRET LIFE PATCHES, P447
   Begel A, 2007, USAGE PERCEPTIONS AG, P255
   Bell R, 2006, LOOKING BUGS ALL RIG, V2006, P61
   Berner S, 2005, PROC INT CONF SOFTW, P571
   Boshuizen C, 2011, LEARNING FOLLOW EMBR, V10, P8097
   Brown AW, 2011, LECT NOTES BUS INF P, V77, P266
   BYRT T, 1993, J CLIN EPIDEMIOL, V46, P423, DOI 10.1016/0895-4356(93)90018-V
   Carney PA, 2010, RADIOLOGY, V255, P354, DOI 10.1148/radiol.10091636
   CICCHETTI DV, 1990, J CLIN EPIDEMIOL, V43, P551, DOI 10.1016/0895-4356(90)90159-M
   Codabux Z, 2013, MANAGING TECHNICAL D, P8
   Cohan S, 2007, SUCCESSFUL INTEGRATI, P255
   Cohen J., 1988, STAT POWER ANAL BEHA
   Cusumano M.A., 1999, Competing on Internet Time: Lessons from Netscape and Its Battle with Microsoft
   Gamma E, 2005, 27 INT C SOFTW ENG I
   Greiler M, 2012, LECT NOTES COMPUT SC, V7304, P91, DOI 10.1007/978-3-642-30561-0_8
   Gündebahar M, 2013, 2013 INTERNATIONAL CONFERENCE ON TECHNOLOGICAL ADVANCES IN ELECTRICAL, ELECTRONICS AND COMPUTER ENGINEERING (TAEECE), P365
   Heikkila V, 2010, REVELATORY CASE STUD, P289
   Hemmati H, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2430536.2430540
   Hodgetts P., 2002, EXTREME ADOPTION EXP, V30
   Hollander M., 2014, Nonparametric Statistical Methods, Solutions Manual, Vthird
   HP, 2012, HP APPL HDB
   Humble Jez, 2010, Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation
   InvestmentWatch, 2011, MOZ PUTS OUT FIR 5 0
   Iwai A, 2011, AUTOMOTIVE CLOUD SER, P638
   Jansen S, 2006, P INT WORKSH SOFTW P, P44
   Jenkins J, 2011, OR VEL C
   Jones G, 2005, VISUAL SURVEILLANCE, P161
   Kaply M, 2012, WHY DO CO STAY OLD T
   Kettunen V., 2010, P 19 INT S SOFTW TES, P231, DOI [10.1145/1831708.1831737, DOI 10.1145/1831708.1831737]
   Khomh F., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P179, DOI 10.1109/MSR.2012.6224279
   Kim S., 2012, PPCOR PARTIAL SEMIPA
   Kitchenham B., 2004, PROCEDURES PERFORMIN, V33, P1
   Kong S, 2009, P AM C INF SYST AMCI, P12
   Kühner G, 2012, FUSION ENG DES, V87, P2232, DOI 10.1016/j.fusengdes.2012.06.003
   Landis JR, 1977, BIOMETRICS, P159
   Lavoie T, 2013, INT WORKS SOFTW CLON, P83, DOI 10.1109/IWSC.2013.6613048
   Li J, 2010, IEEE INT C SOL DIEL
   Li X, 2011, INFORM SOFTWARE TECH, V53, P929, DOI 10.1016/j.infsof.2011.04.005
   Maalej W, 2009, IEEE INT CONF AUTOM, P344, DOI 10.1109/ASE.2009.36
   Mäntylä MV, 2013, PROC IEEE INT CONF S, P20, DOI 10.1109/ICSM.2013.13
   Mäntylä MV, 2013, INFORM SOFTWARE TECH, V55, P986, DOI 10.1016/j.infsof.2012.12.004
   Marschall M, 2007, AGILE 2007, Proceedings, P395, DOI 10.1109/AGILE.2007.64
   Martin D, 2007, PROC INT CONF SOFTW, P602
   MCDANIEL LS, 1990, J ACCOUNTING RES, V28, P267, DOI 10.2307/2491150
   Middleton P, 2001, SOFTWARE QUAL J, V9, P241, DOI 10.1023/A:1013754402981
   Middleton P, 2012, IEEE T ENG MANAGE, V59, P20, DOI 10.1109/TEM.2010.2081675
   Mozilla, 2013, MOZ SOURC COD MERC R
   Olsson H.H., 2013, Towards RD as innovation experiment systems: A framework for moving beyond agile software development, P798
   Olsson HH, 2012, EUROMICRO CONF PROC, P392, DOI 10.1109/SEAA.2012.54
   Otte Tobias, 2008, 2008 IEEE 32nd International Computer Software and Applications Conference (COMPSAC), P1247, DOI 10.1109/COMPSAC.2008.65
   Oza N, 2012, IEEE SOFTWARE, V29
   Paasivaara M., 2003, Software Process Improvement and Practice, V8, P183, DOI 10.1002/spip.187
   Patel C, 2006, P 39 ANN HAW INT C S, V1, p10c
   Paul R, 2011, MOZILLA OUTLINES 16
   Paul R, 2012, FIREFOX EXTENDED SUP
   Pérez-Castillo R, 2011, INT SYMP EMP SOFTWAR, P453, DOI 10.1109/ESEM.2011.64
   Petersen K, 2010, EMPIR SOFTW ENG, V15, P654, DOI 10.1007/s10664-010-9136-6
   Petersen K, 2009, J SYST SOFTWARE, V82, P1479, DOI 10.1016/j.jss.2009.03.036
   Poppendieck M, 2007, PROC INT CONF SOFTW, P165, DOI 10.1109/ICSECOMPANION.2007.46
   Rafi D. M., 2012, 2012 Proceedings of 7th International Workshop on Automation of Software Test (AST 2012), P36, DOI 10.1109/IWAST.2012.6228988
   Raymond Eric, 1999, KNOWLEDGE TECHNOLOGY, V12, P23, DOI DOI 10.1007/S12130-999-1026-0
   Reinertsen D.G., 2009, The Principles of Product Development Flow: Second Generation Lean Product Development
   Ruhe G, 2005, IEEE SOFTWARE, V22, P47, DOI 10.1109/MS.2005.164
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Schwaber K., 1997, BUSINESS OBJECT DESI, DOI [10.1007/978-1-4471-0947-1_11, DOI 10.1007/978-1-4471-0947-1_11]
   Shankland S., 2011, Rapid-release firefox meets corporate backlash
   Sicore D, 2011, NEW CHANNELS FIREFOX
   SONNENTAG S, 1994, J OCCUP ORGAN PSYCH, V67, P327, DOI 10.1111/j.2044-8325.1994.tb00571.x
   Sundmark D, 2011, EXPLORATORY CASE STU, P166
   Szoke A, 2011, INFORM SOFTWARE TECH, V53, P574, DOI 10.1016/j.infsof.2011.01.008
   Torkar R, 2011, J ASSOC INF SYST, V12, P88
NR 77
TC 57
Z9 62
U1 1
U2 42
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2015
VL 20
IS 5
BP 1384
EP 1425
DI 10.1007/s10664-014-9338-4
PG 42
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CQ5UP
UT WOS:000360671500007
DA 2024-07-18
ER

PT J
AU del Sagrado, J
   del Aguila, IM
   Orellana, FJ
AF del Sagrado, Jose
   del Aguila, Isabel M.
   Orellana, Francisco J.
TI Multi-objective ant colony optimization for requirements selection
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software requirements; Search based software engineering; Ant colony
   optimization; Next release problem
ID SOFTWARE; EVOLUTIONARY; SCIENCE; ART
AB The selection of a set of requirements between all the requirements previously defined by customers is an important process, repeated at the beginning of each development step when an incremental or agile software development approach is adopted. The set of selected requirements will be developed during the actual iteration. This selection problem can be reformulated as a search problem, allowing its treatment with metaheuristic optimization techniques. This paper studies how to apply Ant Colony Optimization algorithms to select requirements. First, we describe this problem formally extending an earlier version of the problem, and introduce a method based on Ant Colony System to find a variety of efficient solutions. The performance achieved by the Ant Colony System is compared with that of Greedy Randomized Adaptive Search Procedure and Non-dominated Sorting Genetic Algorithm, by means of computational experiments carried out on two instances of the problem constructed from data provided by the experts.
C1 [del Sagrado, Jose; del Aguila, Isabel M.; Orellana, Francisco J.] Univ Almeria, Dept Informat, Almeria 04120, Spain.
C3 Universidad de Almeria
RP del Aguila, IM (corresponding author), Univ Almeria, Dept Informat, Ctra Sacramento S-N, Almeria 04120, Spain.
EM jsagrado@ual.es; imaguila@ual.es; fjorella@ual.es
RI del Sagrado, Jose/F-9504-2016; del Aguila, Isabel/A-9740-2015
OI del Sagrado, Jose/0000-0002-5616-056X; del Aguila,
   Isabel/0000-0001-9896-7196
FU Spanish Ministry of Education, Culture and Sport [TIN2010-20900-C04-02]
FX This research has been funded by the Spanish Ministry of Education,
   Culture and Sport under project TIN2010-20900-C04-02. We wish also thank
   to anonymous reviewers for their useful comments.
CR ALBRECHT AJ, 1983, IEEE T SOFTWARE ENG, V9, P639, DOI 10.1109/TSE.1983.235271
   Ali S, 2010, IEEE T SOFTWARE ENG, V36, P742, DOI 10.1109/TSE.2009.52
   [Anonymous], 1995, MYTHICAL MAN MONTH
   [Anonymous], 2004, ANT COLONY OPTIMIZAT
   [Anonymous], 1990, COMPUT INTRACTABILIT
   [Anonymous], 2003, Software requirements
   Arcuri A, 2013, EMPIR SOFTW ENG, V18, P594, DOI 10.1007/s10664-013-9249-9
   Bagnall AJ, 2001, INFORM SOFTWARE TECH, V43, P883, DOI 10.1016/S0950-5849(01)00194-X
   Baker P, 2006, PROC IEEE INT CONF S, P176
   Boehm BW., 1981, Software Engineering Economics
   Carlshamre P., 2002, Requirements Engineering, V7, P139, DOI 10.1007/s007660200010
   Carlshamre P, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P84
   Cheng BHC, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P285, DOI 10.1109/FOSE.2007.17
   Coello C. A. C., 2007, EVOLUTIONARY ALGORIT, V5
   Davis AM, 2003, COMPUTER, V36, P42, DOI 10.1109/MC.2003.1185216
   de Souza JT, 2011, LECT NOTES COMPUT SC, V6956, P142, DOI 10.1007/978-3-642-23716-4_15
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Deb K., 2010, MULTIOBJECTIVE OPTIM
   del Sagrado Jose, 2010, 2010 Proceedings of Second International Symposium on Search Based Software Engineering (SSBSE), P67, DOI 10.1109/SSBSE.2010.18
   del Sagrado J, 2011, GECCO 11, P241, DOI 10.1145/2001858.2001994
   del Sagrado J, 2009, P 1 INT S SEARCH BAS
   del Sagrado J, 2010, P 6 WORKSH KNOWL ENG, V636
   del Sagrado J, 2012, FRONT ARTIF INTEL AP, V242, P1009, DOI 10.3233/978-1-61499-098-7-1009
   Doerner K, 2004, ANN OPER RES, V131, P79, DOI 10.1023/B:ANOR.0000039513.99038.c6
   Dorigo M., 1997, IEEE Transactions on Evolutionary Computation, V1, P53, DOI 10.1109/4235.585892
   Dorigo M, 2006, IEEE COMPUT INTELL M, V1, P28, DOI 10.1109/MCI.2006.329691
   Durillo JJ, 2009, 1ST INTERNATIONAL SYMPOSIUM ON SEARCH BASED SOFTWARE ENGINEERING, PROCEEDINGS, P49, DOI 10.1109/SSBSE.2009.21
   Durillo JJ, 2011, EMPIR SOFTW ENG, V16, P29, DOI 10.1007/s10664-010-9147-3
   FEO TA, 1995, J GLOBAL OPTIM, V6, P109, DOI 10.1007/BF01096763
   FEO TA, 1989, OPER RES LETT, V8, P67, DOI 10.1016/0167-6377(89)90002-3
   Finkelstein A, 2009, REQUIR ENG, V14, P231, DOI 10.1007/s00766-009-0075-y
   Finkelstein A, 2008, INT REQUIR ENG CONF, P115, DOI 10.1109/RE.2008.61
   Greer D, 2004, INFORM SOFTWARE TECH, V46, P243, DOI 10.1016/j.infsof.2003.07.002
   Hackel Sascha., 2008, Proceedings of the 10th Annual Conference on Genetic and Evolutionary Computation, P33
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Harman M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P342, DOI 10.1109/FOSE.2007.29
   He Jiang, 2010, Proceedings of the 2nd International Conference on Software Engineering and Data Mining (SEDM 2010), P166
   Iredi S, 2001, LECT NOTES COMPUT SC, V1993, P359
   Johnson J, 2003, CHAOS CHRONICLES V3
   Karlsson J., 1997, Requirements Engineering, V2, P51, DOI 10.1007/BF02802897
   Kotonya G., 1998, Requirements engineering: processes and techniques
   Momoh J., 2006, Software Process Improvement and Practice, V11, P295, DOI 10.1002/spip.273
   Pitsoulis L, 2003, GREEDY RANDOMIZED AD, P168
   Resende MGC, 2003, INT SER OPER RES MAN, V57, P219, DOI 10.1007/0-306-48056-5_8
   Ruhe G, 2005, IEEE SOFTWARE, V22, P47, DOI 10.1109/MS.2005.164
   Saliu M.O., 2007, P 6 JOINT M EUROPEAN, P105, DOI DOI 10.1145/1287624.1287641
   Schott J, 1995, THESIS MIT US
   Simmons E, 2004, IEEE SOFTWARE, V21, P86, DOI 10.1109/MS.2004.25
   Srinivas N., 1994, Evolutionary Computation, V2, P221, DOI 10.1162/evco.1994.2.3.221
   Vianna DS, 2004, SCCC 2004: XXIV INTERNATIONAL CONFERENCE OF THE CHILEAN COMPUTER SCIENCE SOCIETY, P69
   Wohlin C., 2012, EXPT SOFTWARE ENG IN
   Yuanyuan Zhang, 2010, 2010 Proceedings of Second International Symposium on Search Based Software Engineering (SSBSE), P47, DOI 10.1109/SSBSE.2010.16
   Zhang YY, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1129
   Zitzler E, 1999, IEEE T EVOLUT COMPUT, V3, P257, DOI 10.1109/4235.797969
NR 54
TC 48
Z9 48
U1 0
U2 11
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2015
VL 20
IS 3
BP 577
EP 610
DI 10.1007/s10664-013-9287-3
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CI1DF
UT WOS:000354480800001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Khomh, F
   Adams, B
   Dhaliwal, T
   Zou, Y
AF Khomh, Foutse
   Adams, Bram
   Dhaliwal, Tejinder
   Zou, Ying
TI Understanding the impact of rapid releases on software quality
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software release; Release cycle; Software quality; Testing; Bugs
AB Many software companies are shifting from the traditional multi-month release cycle to shorter release cycles. For example, Google Chrome and Mozilla Firefox release new versions every 6 weeks. These shorter release cycles reduce the users' waiting time for a new release and offer better feedback and marketing opportunities to companies, but it is unclear if the quality of the software product improves as well, since developers and testers are under more pressure. In this paper, we extend our previous empirical study of Mozilla Firefox on the impact of rapid releases on quality assurance with feedback by Mozilla project members. The study compares crash rates, median uptime, and the proportion of pre- and post-release bugs in traditional releases with those in rapid releases, and we also analyze the source code changes made by developers to identify potential changes in the development process. We found that (1) with shorter release cycles, users do not experience significantly more pre- or post-release bugs (percentage-wise) and (2) bugs are fixed faster, yet (3) users experience these bugs earlier during software execution (the program crashes earlier). Increased integration activity and propagation of harder bugs to later versions account for some of these findings. Overall, our case study suggests that a clear release engineering process with thorough automation is one of the major challenges when switching to rapid releases.
C1 [Khomh, Foutse] Polytech Montreal, SWAT, Quebec City, PQ, Canada.
   [Adams, Bram] Polytech Montreal, MCIS, Quebec City, PQ, Canada.
   [Dhaliwal, Tejinder; Zou, Ying] Queens Univ, Dept Elect & Comp Engn, Kingston, ON, Canada.
C3 Universite de Montreal; Polytechnique Montreal; Universite de Montreal;
   Polytechnique Montreal; Queens University - Canada
RP Khomh, F (corresponding author), Polytech Montreal, SWAT, Quebec City, PQ, Canada.
EM foutse.khomh@polymtl.ca; bram.adams@polymtl.ca;
   tejinder.dhaliwal@queensu.ca; ying.zou@queensu.ca
RI Zou, Ying/KLC-9380-2024
OI Adams, Bram/0000-0001-7213-4006
CR Adve, 2010, P 32 ACM IEEE INT C, V1, P485, DOI DOI 10.1145/1806799.1806870
   Baysal O, 2011, P 8 WORK C MIN SOFTW, P238, DOI DOI 10.1145/1985441.1985481
   Beck K., 2000, EXTREME PROGRAMMING
   Brown AW, 2011, LECT NOTES BUS INF P, V77, P266
   Dolstra E, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE EIGHTEENTH LARGE INSTALLATION SYSTEM ADMINISTRATION CONFERENCE, P79
   Downer T, 2011, SOME CLARIFICATION M
   Duvall Paul M., 2007, Continuous integration: improving software quality and reducing risk
   Gamma E, 2005, 27 INT C SOFTW ENG I
   Herraiz I., 2011, 2011 18th Working Conference on Reverse Engineering, P219, DOI 10.1109/WCRE.2011.34
   Hodgetts P., 2002, EXTREME ADOPTION EXP, V30
   Hollander M., 2014, Nonparametric Statistical Methods, Solutions Manual, Vthird
   HP, 2011, HP APPL HDB
   Humble Jez, 2010, Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation
   Jansen S, 2006, P INT WORKSH SOFTW P, P44
   Jenkins J, 2011, OR VEL C
   Johnson J W, 2000, Multivariate Behav Res, V35, P1, DOI 10.1207/S15327906MBR3501_1
   Kaply M, 2011, WHY DO CO STAY OLD T
   Khomh F., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P179, DOI 10.1109/MSR.2012.6224279
   Khomh F., 2011, 2011 18th Working Conference on Reverse Engineering, P261, DOI 10.1109/WCRE.2011.39
   Kong S, 2009, P AM C INF SYST AMCI
   Kuppuswami S., 2003, ACM SIGSOFT Software Engineering Notes, V28, P6
   Li PL, 2012, P 33 INT C SOFTW ENG, P716, DOI DOI 10.1145/1985793.1985894
   liwerski J, 2005, ACM SIGSOFT SOFTWARE, V30, P1, DOI [10.1145/1082983.1083147, DOI 10.1145/1083142.1083147, DOI 10.1145/1082983.1083147]
   Ltd. RS, 2012, WEB BROWS GLOB MARK
   Lu S, 2008, ACM SIGPLAN NOTICES, V43, P329, DOI 10.1145/1353536.1346323
   Mantyla M, 2013, P 29 IEEE I IN PRESS
   Marschall M, 2007, AGILE 2007, Proceedings, P395, DOI 10.1109/AGILE.2007.64
   Mozilla, 2013, AUT AUT DEV
   Mozilla, 2011, SOC MOZ CRASH REP SY
   Mozilla, 2011, MOZ PUTS OUR FIR 5 0
   NELDER JA, 1972, J R STAT SOC SER A-G, V135, P370, DOI 10.2307/2344614
   Otte Tobias, 2008, 2008 IEEE 32nd International Computer Software and Applications Conference (COMPSAC), P1247, DOI 10.1109/COMPSAC.2008.65
   Paul R, 2011, MOZILLA OUTLINES 16
   Porter A., 2006, Software Process Improvement and Practice, V11, P163, DOI 10.1002/spip.260
   Rouget P, 2012, SHAPING FIREFOX FEAT
   Shankland S., 2011, Rapid-release firefox meets corporate backlash
   Shankland S, 2011, MOZILLA PROPOSES NOT
   Shankland S., 2010, Google ethos speeds up chrome release cycle
   Sicore D, 2011, MOZILLA BLOG    0413
   Software C, 2012, SOURCEMONITOR
   Stewart K., 2005, Proceedings of the fifth workshop on Open source software engineering - 5-WOSSE, P1
   Thung F., 2012, Proceedings of the 2012 IEEE 23rd International Symposium on Software Reliability Engineering (ISSRE), P271, DOI 10.1109/ISSRE.2012.22
   van der Storm T, 2005, P 12 INT WORKSH SOFT, P43
   Vaughan-Nichols SJ, 2012, TRUTH GOOBUNTU GOOGL
   VersionOne, 2009, 4 ANN STAT AG SURV
   Yin R. K., 2017, CASE STUDY RES DESIG
   Zaman S., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P199, DOI 10.1109/MSR.2012.6224281
NR 47
TC 36
Z9 41
U1 0
U2 24
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2015
VL 20
IS 2
BP 336
EP 373
DI 10.1007/s10664-014-9308-x
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CH2AB
UT WOS:000353824000003
DA 2024-07-18
ER

PT J
AU Abelein, U
   Paech, B
AF Abelein, Ulrike
   Paech, Barbara
TI Understanding the Influence of User Participation and Involvement on
   System Success - a Systematic Mapping Study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE User participation; User involvement; Software development; Systematic
   mapping study; Literature review; Meta analysis
ID DECISION-SUPPORT-SYSTEMS; SOFTWARE-DEVELOPMENT; INFORMATION-SYSTEMS;
   BEHAVIORAL INTENTION; DESIGN PROCESS; MANAGEMENT; IMPACT; MODEL;
   SATISFACTION; COMMUNICATION
AB User participation and involvement in software development are considered to be essential for a successful software system. Three research areas, human aspects of software engineering, requirements engineering, and information systems, study these topics from various perspectives. We think it is important to analyze user participation and involvement in software engineering comprehensively to encourage further research in this area. We investigate the evidence on effects of user participation and involvement on system success and we explore which methods are available in literature. A systematic mapping study was conducted. The systematic search yielded 3,698 hits, from which we identified 289 unique papers. These papers were reviewed by the first author based on inclusion and exclusion criteria. The second author validated the selection of papers by reviewing the reasons for exclusion and inclusion and the corresponding papers on a sample base. 58 of the 289 papers were selected (22 statistical survey and meta-study papers and 36 methods papers). Based on the empirical evidence of the surveys and meta-studies, we developed a meta-analysis of structural equation models. This overview demonstrates that most papers showed positive correlations between aspects of development processes (including user participation) and human aspects (including user involvement) and system success. The analysis of the proposed solutions from the method papers revealed a wide variety of user participation and involvement practices for most activities within software development.
C1 [Abelein, Ulrike; Paech, Barbara] Heidelberg Univ, Inst Comp Sci, D-69120 Heidelberg, Germany.
C3 Ruprecht Karls University Heidelberg
RP Abelein, U (corresponding author), Heidelberg Univ, Inst Comp Sci, Neuenheimer Feld 326, D-69120 Heidelberg, Germany.
EM abelein@informatik.uni-heidelberg.de; paech@informatik.uni-heidelberg.de
RI Paech, Barbara/AAI-5997-2020
CR Abelein U, 2012, P 5 INT WORKSH COOP
   Al-Rawas A., 1996, Proceedings of the First Westminster Conference on Professional Awareness in Software Engineering, P1
   Alleman G. B., 2002, Extreme Programming and Agile Methods - XP/Agile Universe 2002 Second XP Universe and First Agile Universe Conference. Proceedings (Lecture Notes in Computer Science Vol.2418), P70
   Allingham P, 1992, J INFORMATION TECHNO, V7, P160
   Alter S., 1978, MIS QUART, V2, P33, DOI DOI 10.2307/249176
   Amoako-Gyampah K., 1997, Information Strategy: The Executive's Journal, V13, P40
   Amoako-Gyampah K, 1993, INFORM MANAGE, V25, P25
   Amoako-Gyampah K, 2007, COMPUT HUM BEHAV, V23, P1232, DOI 10.1016/j.chb.2004.12.002
   Bai Han-bin, 2010, 2010 2nd International Conference on Computer Engineering and Technology (ICCET), P1, DOI 10.1109/ICCET.2010.5485738
   Bano M., 2013, Proceedings of the 17th International Conference on Evaluation and Assessment in Software Engineering, P125, DOI [10.1145/2460999.2461017, DOI 10.1145/2460999.2461017]
   BARKI H, 1994, INFORM SYST RES, V5, P422, DOI 10.1287/isre.5.4.422
   Barki H., 1991, Proceedings of the Twenty-Fourth Annual Hawaii International Conference on System Sciences (Cat. No.91TH0350-9), P487, DOI 10.1109/HICSS.1991.184096
   BARONAS AMK, 1988, MIS QUART, V12, P111, DOI 10.2307/248811
   BAROUDI JJ, 1986, COMMUN ACM, V29, P232, DOI 10.1145/5666.5669
   Beck K., 2011, MANIFESTO AGILE SOFT
   Begier B, 2010, STUD COMP INTELL, V283, P191
   Berger H, 2011, COMPUT SUPP COOP WOR, P263, DOI 10.1007/978-1-84996-347-3_16
   Bjarnason E, 2011, INT REQUIR ENG CONF, P37, DOI 10.1109/RE.2011.6051639
   Blili S, 1998, INFORM MANAGE-AMSTER, V33, P137, DOI 10.1016/S0378-7206(97)00043-8
   BOLAND RJ, 1978, MANAGE SCI, V24, P887, DOI 10.1287/mnsc.24.9.887
   Bragge J, 2009, J ASSOC INF SYST, V10, P196, DOI 10.17705/1jais.00188
   Butler T., 1997, P 18 INT C INFORM SY, P411
   CAVAYE ALM, 1995, INFORM MANAGE, V28, P311, DOI 10.1016/0378-7206(94)00053-L
   Chang KC, 2010, INFORM SOFTWARE TECH, V52, P672, DOI 10.1016/j.infsof.2010.02.003
   Cherry C., 1999, Requirements Engineering, V4, P103, DOI 10.1007/s007660050017
   Cohen S, 2010, INT J COMPUT COMMUN, V5, P20, DOI 10.15837/ijccc.2010.1.2462
   CURTIS B, 1988, COMMUN ACM, V31, P1268, DOI 10.1145/50087.50089
   DAVIS FD, 1989, MANAGE SCI, V35, P982, DOI 10.1287/mnsc.35.8.982
   Dean D.L., 1998, Journal of Management Information Systems, V14, P179
   DEBRABANDER B, 1984, MANAGE SCI, V30, P137, DOI 10.1287/mnsc.30.2.137
   Discenza Richard, 2008, International Journal of Internet and Enterprise Management, V5, P373, DOI 10.1504/IJIEM.2008.020107
   Doll W. J., 2001, Information Resources Management Journal, V14, P6, DOI 10.4018/irmj.2001040101
   DOLL WJ, 1988, MIS QUART, V12, P259, DOI 10.2307/248851
   DOLL WJ, 1989, MANAGE SCI, V35, P1151, DOI 10.1287/mnsc.35.10.1151
   DOLL WJ, 1991, DECISION SCI, V22, P443, DOI 10.1111/j.1540-5915.1991.tb00358.x
   Dorner C, 2008, P 2008 INT WORKSH CO, P48, DOI [10.1145/1370114.1370126, DOI 10.1145/1370114.1370126]
   Eckhardt A, 2010, SIGMIS CPR '10: PROCEEDINGS OF THE 2010 ACM SIGMIS COMPUTER PERSONNEL RESEARCH CONFERENCE, P75
   EDSTROM A, 1977, HUM RELAT, V30, P589, DOI 10.1177/001872677703000702
   El Emam K., 1996, Requirements Engineering, V1, P4, DOI 10.1007/BF01235763
   Finck M, 2004, P 8 C BIENN PART DES, V2
   Foster ST, 1999, J ENG TECHNOL MANAGE, V16, P329, DOI 10.1016/S0923-4748(99)00014-4
   Franz C.R., 1979, Contingency factors affecting the user involvement role in the design of successful information systems
   FRANZ CR, 1986, DECISION SCI, V17, P329, DOI 10.1111/j.1540-5915.1986.tb00230.x
   Fruhling AL, 2006, VALUE-BASED SOFTWARE ENGINEERING, P201, DOI 10.1007/3-540-29263-2_10
   Fuentes-Fernández R, 2010, REQUIR ENG, V15, P267, DOI 10.1007/s00766-009-0087-7
   GALLAGHER CA, 1974, ACAD MANAGE J, V17, P46, DOI 10.5465/254770
   Gefen D, 2008, INFORM MANAGE-AMSTER, V45, P507, DOI 10.1016/j.im.2008.08.001
   Ginzberg M.J., 1979, TIMS STUDIES MANAGEM, V13, P85
   Guimaraes T., 2003, Quality Management Journal, V10, P39
   Guimaraes T, 1997, DECISION SCI, V28, P851, DOI 10.1111/j.1540-5915.1997.tb01334.x
   GUTHRIE A, 1972, SURVEY CANADIAN MIDD
   Hansson C, 2004, LECT NOTES COMPUT SC, V3092, P175
   Hansson C, 2006, P 39 ANN HAW INT C S, p175c
   Harris MA, 2009, COMMUN ASSOC INF SYS, V24, P739
   HARTWICK J, 1994, MANAGE SCI, V40, P440, DOI 10.1287/mnsc.40.4.440
   Hartwick J, 2001, IEEE T PROF COMMUN, V44, P21, DOI 10.1109/47.911130
   Hartwick J, 1997, REV LIT ARTS AM
   HAWK SR, 1993, INT J MAN MACH STUD, V38, P839, DOI 10.1006/imms.1993.1039
   Hazzan O, 2004, LECT NOTES COMPUT SC, V3092, P303
   Heinbokel T, 1996, BEHAV INFORM TECHNOL, V15, P226, DOI 10.1080/014492996120157
   Hendry DG, 2008, INT J HUM-COMPUT ST, V66, P545, DOI 10.1016/j.ijhcs.2007.12.002
   HIRSCHHEIM RA, 1985, MIS QUART, V9, P295, DOI 10.2307/249230
   Hope KL, 2011, NEW TECH WORK EMPLOY, V26, P54, DOI 10.1111/j.1468-005X.2010.00257.x
   Hsu LL, 2008, INT J TECHNOL MANAGE, V43, P30, DOI 10.1504/IJTM.2008.019405
   Huang YN, 2008, PROCEEDINGS OF THE 2008 INTERNATIONAL SYMPOSIUM ON COMPUTATIONAL INTELLIGENCE AND DESIGN, VOL 2, P334, DOI 10.1109/ISCID.2008.203
   Humayoun SR, 2011, LECT NOTES COMPUT SC, V6776, P55, DOI 10.1007/978-3-642-21753-1_7
   Hunton JE, 1997, MANAGE SCI, V43, P797, DOI 10.1287/mnsc.43.6.797
   Hunton JE, 1996, DECISION SCI, V27, P647, DOI 10.1111/j.1540-5915.1996.tb01830.x
   Hunton JE, 1997, MIS QUART, V21, P359, DOI 10.2307/249719
   Hwang MI, 1999, INFORM MANAGE-AMSTER, V35, P229, DOI 10.1016/S0378-7206(98)00092-5
   IGBARIA M, 1994, OMEGA-INT J MANAGE S, V22, P157, DOI 10.1016/0305-0483(94)90076-0
   Igersheim R., 1976, AFIPS Conference Proceedings: National Computer Conference, P877
   Iivari J, 1997, BEHAV INFORM TECHNOL, V16, P111, DOI 10.1080/014492997119950
   Iivari J, 2010, INFORM SYST J, V20, P109, DOI 10.1111/j.1365-2575.2009.00336.x
   Iivari N., 2004, 3rd Nordic Conference on Human-Computer Interaction, P287
   IVES B, 1984, MANAGE SCI, V30, P586, DOI 10.1287/mnsc.30.5.586
   Jackson CM, 1997, DECISION SCI, V28, P357, DOI 10.1111/j.1540-5915.1997.tb01315.x
   Jalali S, 2012, INT SYMP EMP SOFTWAR, P29, DOI 10.1145/2372251.2372257
   JARVENPAA SL, 1991, MIS QUART, V15, P205, DOI 10.2307/249382
   Jiang J.J., 2002, PROJ MANAG J, V33, P20
   Jong-Min Choe, 1996, Journal of Management Information Systems, V12, P215
   Jorgensen M., 2005, P 11 IEEE INT SOFTW, P24
   Kabbedijk J, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P281, DOI 10.1109/RE.2009.28
   KAISER KM, 1980, NATIONAL AIDS C P, P201
   Kamal M, 2011, GOV INFORM Q, V28, P200, DOI 10.1016/j.giq.2010.08.003
   Kanungo S., 2000, Journal of Management Research, V1, P47
   Kappelman L. K., 1991, Proceedings of the Twelfth International Conference on Information Systems, P339
   Kautz K, 2000, ANALYSIS, P168, DOI [10.1007/978-3-642-01853-422, DOI 10.1007/978-3-642-01853-422]
   Kautz K, 2011, INFORM TECHNOL PEOPL, V24, P217, DOI 10.1108/09593841111158356
   Kawalek P., 2002, Data Base for Advances in Information Systems, V33, P13
   Kensing F, 1998, HUM-COMPUT INTERACT, V13, P167, DOI 10.1207/s15327051hci1302_3
   KIM EH, 1986, INFORM MANAGE, V11, P87, DOI 10.1016/0378-7206(86)90038-8
   KING WR, 1981, MANAGE SCI, V27, P717, DOI 10.1287/mnsc.27.6.717
   Kirsch L.J., 1996, ACCOUNTING MANAGEMEN, V6, P221, DOI DOI 10.1016/S0959-8022(96)90015-6
   Kitchenham B., 2007, 23 EBSE, DOI DOI 10.1145/1134285.1134500
   Korkala M, 2006, AGILE 2006, PROCEEDINGS, P76, DOI 10.1109/AGILE.2006.1
   Korkala M, 2010, AGILITY ACROSS TIME AND SPACE: IMPLEMENTING AGILE METHODS IN GLOBAL SOFTWARE PROJECTS, P201, DOI 10.1007/978-3-642-12442-6_14
   Kristensen P. T., 2011, 2011 Conference on Lasers & Electro-Optics Europe & 12th European Quantum Electronics Conference (CLEO EUROPE/EQEC), DOI 10.1109/CLEOE.2011.5943126
   Kujala S, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P75, DOI 10.1109/RE.2005.72
   Kujala S, 2003, BEHAV INFORM TECHNOL, V22, P1, DOI 10.1080/0144929021000055530
   Kujala S, 2008, BEHAV INFORM TECHNOL, V27, P457, DOI 10.1080/01449290601111051
   LAWRENCE M, 1993, MIS QUART, V17, P195, DOI 10.2307/249801
   Lawrence M, 2002, OMEGA-INT J MANAGE S, V30, P381, DOI 10.1016/S0305-0483(02)00048-8
   Lin WT, 2000, INFORM MANAGE, V37, P283, DOI 10.1016/S0378-7206(99)00055-5
   Lu HP, 1997, INFORM MANAGE, V32, P203, DOI 10.1016/S0378-7206(97)00021-9
   Lucas, 1975, WHY INFORM SYSTEMS F
   Lynch T, 2004, EUR J INFORM SYST, V13, P286, DOI 10.1057/palgrave.ejis.3000512
   Maalej W., 2011, Proceedings of the 2011 IEEE 9th International Conference on Dependable, Autonomic and Secure Computing (DASC 2011), P864, DOI 10.1109/DASC.2011.146
   Maalej W., 2009, P 24 ACM SIGPLAN C C, P981, DOI [10.1145/1639950.1640068, DOI 10.1145/1639950.1640068]
   Maish A.M., 1979, MIS QUART, V3, P39
   Majid R. A., 2010, Proceedings of the 5th International Conference on Computer Sciences and Convergence Information Technology (ICCIT 2010), P240, DOI 10.1109/ICCIT.2010.5711064
   Mambrey P., 1998, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V7, P291, DOI 10.1023/A:1008687122083
   Martin A, 2010, AGILE SOFTWARE DEVELOPMENT: CURRENT RESEARCH AND FUTURE DIRECTIONS, P111, DOI 10.1007/978-3-642-12575-1_6
   McGill T, 2008, BEHAV INFORM TECHNOL, V27, P407, DOI 10.1080/01449290601110715
   McKeen J. D., 1997, Journal of Management Information Systems, V14, P133
   MCKEEN JD, 1994, MIS QUART, V18, P427, DOI 10.2307/249523
   Olson M. H., 1981, Information and Management, V4, P183, DOI 10.1016/0378-7206(81)90059-8
   PALANISAMY R, 2001, J SERV RES, V1, P125
   Pekkola S., 2006, Proceedings of the ninth conference on Participatory design: Expanding boundaries in design-Volume, V1, P21, DOI [10.1145/1147261.1147265, DOI 10.1145/1147261.1147265]
   Perez Francisca, 2011, End-User Development. Proceedings Third International Symposium, IS-EUD 2011, P258, DOI 10.1007/978-3-642-21530-8_23
   POWERS RF, 1973, CALIF MANAGE REV, V15, P147, DOI 10.2307/41164448
   Pries-Heje Lene, 2009, Scandinavian Journal of Information Systems, V21, P27
   Pries-Heje L, 2008, INT J ENTERP INF SYS, V4, P48, DOI 10.4018/jeis.2008070104
   ROBEY D, 1982, MANAGE SCI, V28, P73, DOI 10.1287/mnsc.28.1.73
   ROBEY D, 1989, MANAGE SCI, V35, P1172, DOI 10.1287/mnsc.35.10.1172
   Rouibah K, 2009, IND MANAGE DATA SYST, V109, P338, DOI 10.1108/02635570910939371
   Saleem N., 1996, Journal of Management Information Systems, V13, P145
   Santhanam R, 2000, DECIS SUPPORT SYST, V30, P51, DOI 10.1016/S0167-9236(00)00089-0
   Seddon P. B., 1996, Australian Journal of Information Systems, V4, P90
   Singh S., 2003, P C S AFRICAN I COMP, P37
   Sommerville Ian, 2016, Software engineering 8
   Subramanyam R, 2010, COMMUN ACM, V53, P137, DOI 10.1145/1666420.1666455
   Sutcliff A. G., 1999, Requirements Engineering, V4, P134, DOI 10.1007/s007660050024
   SWANSON EB, 1974, MANAGE SCI B-APPL, V21, P178, DOI 10.1287/mnsc.21.2.178
   TAIT P, 1988, MIS QUART, V12, P91, DOI 10.2307/248809
   Takats A, 2005, AGILE 2005, Proceedings, P243, DOI 10.1109/ADC.2005.30
   Teixeira L, 2011, IEEE ENG MED BIO, P5339, DOI 10.1109/IEMBS.2011.6091321
   Torkzadeh G, 2003, INFORM MANAGE-AMSTER, V40, P607, DOI 10.1016/S0378-7206(02)00090-3
   Torkzadeh G, 1999, OMEGA-INT J MANAGE S, V27, P327, DOI 10.1016/S0305-0483(98)00049-8
   Wagner EL, 2007, COMMUN ACM, V50, P51, DOI 10.1145/1323688.1323694
   Wixom BH, 2005, INFORM SYST RES, V16, P85, DOI 10.1287/isre.1050.0042
   Wu JTB, 2006, J COMPUT INFORM SYST, V46, P127, DOI 10.1080/08874417.2006.11645930
   Yetton P, 2000, INFORM SYST J, V10, P263, DOI 10.1046/j.1365-2575.2000.00088.x
   Yoon Y, 1998, J ENG TECHNOL MANAGE, V15, P179, DOI 10.1016/S0923-4748(98)00011-3
   Zeffane R., 1998, Human Systems Management, V17, P115
NR 145
TC 63
Z9 64
U1 4
U2 25
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2015
VL 20
IS 1
BP 28
EP 81
DI 10.1007/s10664-013-9278-4
PG 54
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA AZ7EN
UT WOS:000348381800002
DA 2024-07-18
ER

PT J
AU Martínez, M
   Monperrus, M
AF Martinez, Matias
   Monperrus, Martin
TI Mining software repair models for reasoning on the search space of
   automated program fixing
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Mining software repositories; Automated software repair; Search-based
   software engineering
ID AGREEMENT
AB This paper is about understanding the nature of bug fixing by analyzing thousands of bug fix transactions of software repositories. It then places this learned knowledge in the context of automated program repair. We give extensive empirical results on the nature of human bug fixes at a large scale and a fine granularity with abstract syntax tree differencing. We set up mathematical reasoning on the search space of automated repair and the time to navigate through it. By applying our method on 14 repositories of Java software and 89,993 versioning transactions, we show that not all probabilistic repair models are equivalent.
C1 [Martinez, Matias; Monperrus, Martin] Univ Lille, Lille, France.
   [Martinez, Matias; Monperrus, Martin] INRIA, Lille, France.
C3 Universite de Lille; Inria
RP Monperrus, M (corresponding author), Univ Lille, Lille, France.
EM martin.monperrus@univ-lille1.fr
RI Martinez, Matias/ABA-8871-2021; Monperrus, Martin/I-3640-2012
OI Martinez, Matias/0000-0002-2945-866X; Monperrus,
   Martin/0000-0003-3505-3383
CR Alali A, 2008, P IEEE INT C PROGR C
   [Anonymous], 2012, MINING REPAIR ACTION
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Arcuri A, 2011, APPL SOFT COMPUT, V11, P3494, DOI 10.1016/j.asoc.2011.01.023
   Bird C, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P121, DOI 10.1145/1595696.1595716
   Bona M., 2011, A Walk Through Combinatorics: An Introduction to Enumeration and Graph Theory
   Carzaniga A., 2010, Proceedings of the eighteenth ACM SIGSOFT international symposium on Foundations of software engineering, P237
   Cheung S.-C., 2011, P 19 ACM SIGSOFT S 1, P15
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Dallmeier V., 2009, P INT C AUT SOFTW EN
   Debroy Vidroha, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P65, DOI 10.1109/ICST.2010.66
   Department of Mathematics of the University of York, 2013, STAT TABLES
   FLEISS JL, 1971, PSYCHOL BULL, V76, P378, DOI 10.1037/h0031619
   Fluri B, 2008, P INT C AUT SOFTW EN
   Fluri B, 2007, IEEE T SOFTWARE ENG, V33, P725, DOI 10.1109/TSE.2007.70731
   German DM, 2006, EMPIR SOFTW ENG, V11, P369, DOI 10.1007/s10664-006-9004-6
   Giger E., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P217, DOI 10.1109/MSR.2012.6224284
   Giger E, 2011, WORK C MIN SOFTW REP
   Gopinath Divya, 2011, P INT C TOOLS ALG CO
   Hattori Lile P., 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering - Workshops, P63, DOI 10.1109/ASEW.2008.4686322
   Hindle A., 2008, P INT WORK C MIN SOF
   Hindle A, 2009, P DEBR C PROGR COMPR
   Kim D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P802, DOI 10.1109/ICSE.2013.6606626
   Kim S., 2006, P 14 ACM SIGSOFT INT
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Le Goues C, 2012, PROCEEDINGS OF THE FOURTEENTH INTERNATIONAL CONFERENCE ON GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P959, DOI 10.1145/2330163.2330296
   Livshits B, 2005, P EUR SOFTW ENG C HE
   Martinez M, 2012, HAL00903804 INRIA
   Monperrus M., 2012, CVS-Vintage: A Dataset of 14 CVS Repositories of Java Software
   Murgia A, 2010, P INT S EMP SOFTW EN
   NEAMTIU I, 2005, P INT WORKSH MIN SOF
   Pan K, 2009, EMPIR SOFTW ENG, V14, P286, DOI 10.1007/s10664-008-9077-5
   Purushothaman R, 2005, IEEE T SOFTWARE ENG, V31, P511, DOI 10.1109/TSE.2005.74
   RAGHAVAN S, 2004, P 20 IEEE INT C SOFT
   ROBBES R, 2008, THESIS U LUGANO
   Vaucher S, 2008, P WORK C REV ENG
   Wei Y., 2010, P INT S SOFTW TEST A
   Weimer W., 2009, P INT C SOFTW ENG
   Weimer Westley, 2006, P INT C GEN PROGR CO
   Williams CC, 2005, IEEE T SOFTWARE ENG, V31, P466, DOI 10.1109/TSE.2005.63
NR 40
TC 107
Z9 117
U1 0
U2 11
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2015
VL 20
IS 1
BP 176
EP 205
DI 10.1007/s10664-013-9282-8
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AZ7EN
UT WOS:000348381800006
DA 2024-07-18
ER

PT J
AU Bavota, G
   De Lucia, A
   Marcus, A
   Oliveto, R
AF Bavota, Gabriele
   De Lucia, Andrea
   Marcus, Andrian
   Oliveto, Rocco
TI Automating extract class refactoring: an improved method and its
   evaluation
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Extract class refactoring; Cohesion; Coupling; Graph clustering
   algorithms
ID OPEN SOURCE SOFTWARE; COHESION; OPPORTUNITIES; VALIDATION; METRICS;
   OBJECTS
AB During software evolution the internal structure of the system undergoes continuous modifications. These continuous changes push away the source code from its original design, often reducing its quality, including class cohesion. In this paper we propose a method for automating the Extract Class refactoring. The proposed approach analyzes (structural and semantic) relationships between the methods in a class to identify chains of strongly related methods. The identified method chains are used to define new classes with higher cohesion than the original class, while preserving the overall coupling between the new classes and the classes interacting with the original class. The proposed approach has been first assessed in an artificial scenario in order to calibrate the parameters of the approach. The data was also used to compare the new approach with previous work. Then it has been empirically evaluated on real Blobs from existing open source systems in order to assess how good and useful the proposed refactoring solutions are considered by software engineers and how well the proposed refactorings approximate refactorings done by the original developers. We found that the new approach outperforms a previously proposed approach and that developers find the proposed solutions useful in guiding refactorings.
C1 [Bavota, Gabriele; De Lucia, Andrea] Univ Salerno, Software Engn Lab, I-84084 Fisciano Sa, Italy.
   [Marcus, Andrian] Wayne State Univ, Dept Comp Sci, SEVERE Grp, Detroit, MI 48202 USA.
   [Oliveto, Rocco] Univ Molise, Dept Biosci & Terr, I-86090 Pesche Is, Italy.
C3 University of Salerno; Wayne State University; University of Molise
RP Oliveto, R (corresponding author), Univ Molise, Dept Biosci & Terr, I-86090 Pesche Is, Italy.
EM gbavota@unisa.it; adelucia@unisa.it; amarcus@wayne.edu;
   rocco.oliveto@unimol.it
RI De Lucia, Andrea/AAG-6781-2020
OI BAVOTA, Gabriele/0000-0002-2216-3148; De Lucia,
   Andrea/0000-0002-4238-1425; Marcus, Andrian/0000-0001-5450-5598
FU US National Science Foundation [CCF-0845706, CCF-1017263]; Division of
   Computing and Communication Foundations; Direct For Computer & Info Scie
   & Enginr [1017263] Funding Source: National Science Foundation
FX We would like to thank all the students who participated to our studies.
   We would also like to thank anonymous reviewers for their careful
   reading of our manuscript and high-quality feedback. Their detailed
   comments have helped us to substantially revise, extend, and improve the
   original version of this paper. Andrian Marcus was supported in part by
   grants from the US National Science Foundation (CCF-0845706 and
   CCF-1017263).
CR Abdeen H, 2009, WORK CONF REVERSE EN, P103, DOI 10.1109/WCRE.2009.13
   [Anonymous], PRACTICAL NONPARAMET
   [Anonymous], INTRO ALGORITHMS
   [Anonymous], 2007, P WORKSH REF TOOLS W
   [Anonymous], 3 WORKSH REF TOOLS
   [Anonymous], 2006, P 2006 INT WORKSH MI
   [Anonymous], 2010, ASE 10 P IEEE ACM IN, DOI DOI 10.1145/1858996.1859024
   [Anonymous], AUTOMATING EXTRACT C
   [Anonymous], 2010, Proceedings of the International Conference on Software Maintenance (ICSM)
   [Anonymous], 2011 INT WORKSH REF
   Anquetil N., 1999, Sixth Working Conference on Reverse Engineering (Cat. No.PR00303), P235, DOI 10.1109/WCRE.1999.806964
   Arisholm E, 2004, IEEE T SOFTWARE ENG, V30, P521, DOI 10.1109/TSE.2004.43
   Atkinson DC, 2005, 12TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P663, DOI 10.1109/APSEC.2005.76
   Baeza-Yates Ricardo, 1999, MODERN INFORM RETRIE, V463
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Bavota G, 2011, J SYST SOFTWARE, V84, P397, DOI 10.1016/j.jss.2010.11.918
   Binkley AB, 1998, PROC INT CONF SOFTW, P452, DOI 10.1109/ICSE.1998.671604
   Briand L. C., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P345, DOI 10.1109/ICSE.1999.841025
   Briand L. C., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P475, DOI 10.1109/ICSM.1999.792645
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Canfora G, 2001, INFORM SOFTWARE TECH, V43, P401, DOI 10.1016/S0950-5849(01)00149-5
   CASAIS E, 1992, LECT NOTES COMPUT SC, V615, P114, DOI 10.1007/BFb0053033
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Christl A, 2007, INFORM SOFTWARE TECH, V49, P255, DOI 10.1016/j.infsof.2006.10.015
   Cohen J., 1988, STAT POWER ANAL BEHA
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   Du Bois B, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P144, DOI 10.1109/WCRE.2004.33
   Fokaefs M, 2009, PROC IEEE INT CONF S, P93, DOI 10.1109/ICSM.2009.5306332
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Girard JF, 2000, SCI COMPUT PROGRAM, V36, P149, DOI 10.1016/S0167-6423(99)00035-0
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Joshi P, 2009, EUR CON SFTWR MTNCE, P237, DOI 10.1109/CSMR.2009.54
   Khomh F, 2009, INT CONF QUAL SOFTW, P305, DOI 10.1109/QSIC.2009.47
   Koschke R, 2006, SCI COMPUT PROGRAM, V60, P171, DOI 10.1016/j.scico.2005.10.004
   Kuhn A, 2007, INFORM SOFTWARE TECH, V49, P230, DOI 10.1016/j.infsof.2006.10.017
   Lee YS., 1995, Proc. International Conference on Software Quality, Maribor, P81
   Li W., 1993, Proceedings First International Software Metrics Symposium (Cat. No.93TH0518-1), P52, DOI 10.1109/METRIC.1993.263801
   Liu YX, 2009, PROC IEEE INT CONF S, P233, DOI 10.1109/ICSM.2009.5306318
   Maletic JI, 2001, PROC INT CONF SOFTW, P103, DOI 10.1109/ICSE.2001.919085
   Marcus A, 2008, IEEE T SOFTWARE ENG, V34, P287, DOI 10.1109/TSE.2007.70768
   Marinescu R, 2004, PROC IEEE INT CONF S, P350, DOI 10.1109/ICSM.2004.1357820
   Maruyama K., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P236, DOI 10.1109/ICSE.1999.841013
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Moore I, 1996, ACM SIGPLAN NOTICES, V31, P235, DOI 10.1145/236338.236361
   O'Keeffe M, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P247
   Olbrich S, 2009, INT SYMP EMP SOFTWAR, P391
   Oliveto R, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P820, DOI 10.1145/1985793.1985913
   Oppenheim A.N., 1992, QUESTIONNAIRE DESIGN
   Poshyvanyk D, 2009, EMPIR SOFTW ENG, V14, P5, DOI 10.1007/s10664-008-9088-2
   Praditwong K, 2011, IEEE T SOFTWARE ENG, V37, P264, DOI 10.1109/TSE.2010.26
   Sartipi K, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P103, DOI 10.1109/WCRE.2001.957814
   Seng O, 2006, GECCO 2006: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1909
   Seng O, 2005, GECCO 2005: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOLS 1 AND 2, P1045
   Simon F, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P30, DOI 10.1109/CSMR.2001.914965
   STEVENS WP, 1974, IBM SYST J, V13, P115, DOI 10.1147/sj.132.0115
   Stewart KJ, 2006, STAT SCI, V21, P167, DOI 10.1214/088342306000000141
   Tahvildari L, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P183, DOI 10.1109/CSMR.2003.1192426
   Tonella P, 2001, IEEE T SOFTWARE ENG, V27, P351, DOI 10.1109/32.917524
   Trifu A, 2005, WCRE: 12TH WORKING CONFERENCE ON REVERSE ENGINEERING 2005, PROCEEDINGS, P155
   Tsantalis N, 2009, IEEE T SOFTWARE ENG, V35, P347, DOI 10.1109/TSE.2009.1
   van Deursen A., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P246, DOI 10.1109/ICSE.1999.841014
   Wen Z, 2004, PROG COMPREHEN, P194, DOI 10.1109/WPC.2004.1311061
   Wiggerts TA, 1997, PROCEEDINGS OF THE FOURTH WORKING CONFERENCE ON REVERSE ENGINEERING, P33, DOI 10.1109/WCRE.1997.624574
NR 64
TC 61
Z9 66
U1 0
U2 18
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2014
VL 19
IS 6
BP 1617
EP 1664
DI 10.1007/s10664-013-9256-x
PG 48
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AR9QU
UT WOS:000343910700003
DA 2024-07-18
ER

PT J
AU Lopez-Martin, C
   Isaza, C
   Chavoya, A
AF Lopez-Martin, Cuauhtemoc
   Isaza, Claudia
   Chavoya, Arturo
TI Software development effort prediction of industrial projects applying a
   general regression neural network
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software development effort prediction; General regression neural
   network; Statistical regression; ISBSG; Repeatability
AB An important factor for planning, budgeting and bidding a software project is prediction of the development effort required to complete it. This prediction can be obtained from models related to neural networks. The hypothesis of this research was the following: effort prediction accuracy of a general regression neural network (GRNN) model is statistically equal or better than that obtained by a statistical regression model, using data obtained from industrial environments. Each model was generated from a separate dataset obtained from the International Software Benchmarking Standards Group (ISBSG) software projects repository. Each of the two models was then validated using a new dataset from the same ISBSG repository. Results obtained from a variance analysis of accuracies of the models suggest that a GRNN could be an alternative for predicting development effort of software projects that have been developed in industrial environments.
C1 [Lopez-Martin, Cuauhtemoc; Chavoya, Arturo] Univ Guadalajara, Informat Syst Dept CUCEA, Guadalajara, Jalisco, Mexico.
   [Isaza, Claudia] Univ Antioquia, GEPAR Res Grp, Dept Elect Engn, Medellin, Colombia.
   [Lopez-Martin, Cuauhtemoc; Chavoya, Arturo] Univ Guadalajara, Dept Informat Syst, Guadalajara, Jalisco, Mexico.
C3 Universidad de Guadalajara; Universidad de Antioquia; Universidad de
   Guadalajara
RP Lopez-Martin, C (corresponding author), Univ Guadalajara, Informat Syst Dept CUCEA, POB 45100, Guadalajara, Jalisco, Mexico.
EM cuauhtemoc@cucea.udg.mx; cisaza@udea.edu.co; achavoya@cucea.udg.mx
RI Lopez-Martin, Cuauhtemoc/AAL-4768-2021; Chavoya, Arturo/AER-7386-2022
OI Chavoya, Arturo/0000-0003-0084-3932; Isaza, Claudia/0000-0003-1044-9429
CR Afzal W, 2011, EXPERT SYST APPL, V38, P11984, DOI 10.1016/j.eswa.2011.03.041
   [Anonymous], MATLAB NEURAL NETWOR
   Bishop C. M., 1995, NEURAL NETWORKS PATT
   Boehm B, 2000, COCOMO
   Boehm BW., 1981, Software Engineering Economics
   Tronto IFD, 2008, J SYST SOFTWARE, V81, P356, DOI 10.1016/j.jss.2007.05.011
   Duda R. O., 2001, PATTERN CLASSIFICATI, P517
   El-Sebakhy EA, 2011, EXPERT SYST APPL, V38, P2187, DOI 10.1016/j.eswa.2010.08.005
   Foss T, 2003, IEEE T SOFTWARE ENG, V29, P985, DOI 10.1109/TSE.2003.1245300
   Garmus D., 1996, Measuring The Software Process: A Practical Guide to functional Measurements
   Haykin S., 1999, NEURAL NETWORKS COMP, DOI [10.1017/S0269888998214044, DOI 10.1017/S0269888998214044]
   Heiat A, 2002, INFORM SOFTWARE TECH, V44, P911, DOI 10.1016/S0950-5849(02)00128-3
   Huang SJ, 2008, EUR J OPER RES, V188, P898, DOI 10.1016/j.ejor.2007.07.002
   Idri A, 2002, PROCEEDINGS OF THE 2002 IEEE INTERNATIONAL CONFERENCE ON FUZZY SYSTEMS, VOL 1 & 2, P1162, DOI 10.1109/FUZZ.2002.1006668
   Jorgensen M, 2007, INT J FORECASTING, V23, P449, DOI 10.1016/j.ijforecast.2007.05.008
   Jorgensen M, 2006, PROCEEDINGS OF IRNOP VII PROJECT RESEARCH CONFERENCE, P661
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Jorgensen Magne., 2007, 1 INT WORKSHOP SOFTW, P15
   Kitchenham BA, 2007, IEEE T SOFTWARE ENG, V33, P316, DOI 10.1109/TSE.2007.1101
   Kultur Y, 2009, KNOWL-BASED SYST, V22, P395, DOI 10.1016/j.knosys.2009.05.001
   Kumar KV, 2008, J SYST SOFTWARE, V81, P1853, DOI 10.1016/j.jss.2007.12.793
   Lopez-Martin C, 2011, NEURAL COMPUT APPL, V20, P389, DOI 10.1007/s00521-010-0405-5
   Lopez-Martin C, 2011, APPL SOFT COMPUT, V11, P724, DOI 10.1016/j.asoc.2009.12.034
   Montgomery D.C., 2001, Introduction to linear regression analysis
   Myrtveit I, 2005, IEEE T SOFTWARE ENG, V31, P380, DOI 10.1109/TSE.2005.58
   Oliveira ALI, 2006, NEUROCOMPUTING, V69, P1749, DOI 10.1016/j.neucom.2005.12.119
   Paliwal M, 2009, EXPERT SYST APPL, V36, P2, DOI 10.1016/j.eswa.2007.10.005
   Park H, 2008, EXPERT SYST APPL, V35, P929, DOI 10.1016/j.eswa.2007.08.001
   Sheetz SD, 2009, J SYST SOFTWARE, V82, P1540, DOI 10.1016/j.jss.2009.04.038
   Shepperd M, 2001, IEEE T SOFTWARE ENG, V27, P1014, DOI 10.1109/32.965341
   SPECHT DF, 1991, IEEE T NEURAL NETWOR, V2, P568, DOI 10.1109/72.97934
   Sudha KR, 2010, J COMPUT, V2
   Thwin MMT, 2005, J SYST SOFTWARE, V76, P147, DOI 10.1016/j.jss.2004.05.001
NR 33
TC 25
Z9 26
U1 1
U2 13
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2012
VL 17
IS 6
BP 738
EP 756
DI 10.1007/s10664-011-9192-6
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 994VN
UT WOS:000307962100005
DA 2024-07-18
ER

PT J
AU Zaidman, A
   Van Rompaey, B
   van Deursen, A
   Demeyer, S
AF Zaidman, Andy
   Van Rompaey, Bart
   van Deursen, Arie
   Demeyer, Serge
TI Studying the co-evolution of production and test code in open source and
   industrial developer test processes through repository mining
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software repository mining; Software testing; Co-evolution; Software
   evolution; Test coverage
ID SOFTWARE REPOSITORIES; EVOLUTION; VISUALIZATION; COVERAGE; HISTORY
AB Many software production processes advocate rigorous development testing alongside functional code writing, which implies that both test code and production code should co-evolve. To gain insight in the nature of this co-evolution, this paper proposes three views (realized by a tool called TeMo) that combine information from a software project's versioning system, the size of the various artifacts and the test coverage reports. We validate these views against two open source and one industrial software project and evaluate our results both with the help of log messages, code inspections and the original developers of the software system. With these views we could recognize different co-evolution scenarios (i.e., synchronous and phased) and make relevant observations for both developers as well as test engineers.
C1 [Zaidman, Andy; van Deursen, Arie] Delft Univ Technol, NL-2626 CD Delft, Netherlands.
   [Van Rompaey, Bart; Demeyer, Serge] Univ Antwerp, B-2020 Antwerp, Belgium.
C3 Delft University of Technology; University of Antwerp
RP Zaidman, A (corresponding author), Delft Univ Technol, Mekelweg 4, NL-2626 CD Delft, Netherlands.
EM a.e.zaidman@tudelft.nl; bart.vanrompaey@gmail.com;
   arie.vandeursen@tudelft.nl; serge.demeyer@ua.ac.be
RI Demeyer, Serge/JMQ-7341-2023; van Deursen, Arie/G-3084-2011; Zaidman,
   Andy/O-6542-2014
OI Demeyer, Serge/0000-0002-4463-2945; van Deursen,
   Arie/0000-0003-4850-3312; Zaidman, Andy/0000-0003-2413-3935
FU Eureka sigma 2023 Programme; ITEA [if04032]; NWO; Interuniversity
   Attraction Poles Programme- Belgian State - Belgian Science Policy;
   Center for Dependable ICT (CeDICT); NIRICT; Netherlands Institute for
   Research on ICT; Research Foundation - Flanders (FWO)
FX Our gratitude goes out to the Software Improvement Group<SUP>8</SUP>
   (SIG) for providing us with the opportunity and the support to analyze
   one of their software systems; in particular we would like to thank
   Zeeger Lubsen, Joost Visser and Jose Pedro Correia. We would also like
   to thank Teemu Kanstren for his feedback on earlier versions of this
   paper.; This work has been sponsored by (i) the Eureka Sigma 2023
   Programme; under grants of the ITEA project if04032 (SERIOUS), (ii) the
   NWO Jacquard Reconstructor project, (iii) the Interuniversity Attraction
   Poles Programme- Belgian State - Belgian Science Policy, project MoVES;
   (iv) the Center for Dependable ICT (CeDICT), an initiative of NIRICT,
   the Netherlands Institute for Research on ICT and (v) the Research
   Foundation - Flanders (FWO) sponsoring a sabbatical leave of Prof. Serge
   Demeyer.
CR Adams B., 2010, P 32 ACMIEEE INT C S, P305
   [Anonymous], 2003, TEST DRIVEN DEV EXAM
   [Anonymous], 2006, P 2006 INT WORKSHOP, DOI DOI 10.1145/1137983.1138001
   Bachmann Adrian, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P62, DOI 10.1109/MSR.2010.5463286
   Ball T, 1996, COMPUTER, V29, P33, DOI 10.1109/2.488299
   Ball T., 1997, ICSE WORKSH PROC MOD
   Beck K, 1998, JAVA REP, V3, P37
   Beck Kent, 1999, Extreme Programming Explained: Embrace Change
   Berner S, 2007, PROC INT CONF SOFTW, P612
   Beyer D, 2005, PROG COMPREHEN, P259, DOI 10.1109/WPC.2005.12
   Beyer D, 2006, WORK CONF REVERSE EN, P199
   Bhat T., 2006, Proceedings of the 2006 ACM/IEEE International Symposium on Empirical Software Engineering (ISESE '06), P356, DOI [DOI 10.1145/1159733.1159787, 10.1145/1159733.1159787]
   Bible J, 2001, ACM T SOFTW ENG METH, V10, P149, DOI 10.1145/367008.367015
   Binder R.V., 2000, AW OBJ TECHNOL S
   Bouktif S, 2006, WORK CONF REVERSE EN, P221
   Breu S, 2006, IEEE INT CONF AUTOM, P221
   Bruntink M, 2006, J SYST SOFTWARE, V79, P1219, DOI 10.1016/j.jss.2006.02.036
   Cornelissen B, 2009, INT C PROGRAM COMPRE, P100, DOI 10.1109/ICPC.2009.5090033
   D'Ambros M, 2009, IEEE T SOFTWARE ENG, V35, P720, DOI 10.1109/TSE.2009.17
   DAmbros M., 2008, SOFTWARE EVOLUTION, P39
   Demeyer S., 2002, Object-Oriented Reengineering Patterns
   Elbaum S, 2001, PROC IEEE INT CONF S, P170, DOI 10.1109/ICSM.2001.972727
   Feathers M., 2005, WORKING EFFECTIVELY
   Fewster M., 1999, Software test automation: effective use of test execution tools
   Fluri B, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P70, DOI 10.1109/WCRE.2007.21
   GAELLI M, 2004, P 20 INT C SOFTW MAI, P114
   Gall H, 1998, PROC IEEE INT CONF S, P190, DOI 10.1109/ICSM.1998.738508
   Gîrba T, 2006, J SOFTW MAINT EVOL-R, V18, P207, DOI 10.1002/smr.325
   Glover A., 2006, PURSUIT CODE QUALITY
   Godfrey MW, 2000, PROC IEEE INT CONF S, P131, DOI 10.1109/ICSM.2000.883030
   Hassan AE, 2005, IEEE T SOFTWARE ENG, V31, P426, DOI 10.1109/TSE.2005.70
   HINDLE A, 2007, P 23 INT C SOFTW MAI, P285
   HINDLE A, 2007, P INT WORKSH MIN SOF, P19
   Kagdi H, 2007, J SOFTW MAINT EVOL-R, V19, P77, DOI 10.1002/smr.344
   Kagdi H, 2007, INT C PROGRAM COMPRE, P145
   Kanstrén T, 2008, J SOFTW MAINT EVOL-R, V20, P59, DOI 10.1002/smr.362
   Lanza M, 2003, IEEE T SOFTWARE ENG, V29, P782, DOI 10.1109/TSE.2003.1232284
   Lanza M., 2001, Proceedings of the 4th International Workshop on Principles of Software Evolution, P37
   LANZA M, 2010, P 7 INT WORK C MIN S
   Lanza Michele., 2002, P LMO 2002 LANGUAGES, P135
   Lehman M. M., 1980, Journal of Systems and Software, V1, P213, DOI 10.1016/0164-1212(79)90022-0
   Lubsen Z, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P151, DOI 10.1109/MSR.2009.5069493
   Luijten Bart, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P94, DOI 10.1109/MSR.2010.5463292
   Margaret-Anne D.Storey., 2005, SOFTVIS, P193, DOI DOI 10.1145/1056018.1056045
   MATHUR AP, 2008, FDN SOFTWARE TESTING
   Maximilien EM, 2003, PROC INT CONF SOFTW, P564, DOI 10.1109/ICSE.2003.1201238
   Mens T, 2005, EIGHTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P13, DOI 10.1109/IWPSE.2005.7
   Meszaros G., 2007, Xunit test patterns: refactoring test code
   Moonen L., 2008, Software Evolution, P173
   MULDER F, 2010, P 4 INT JOI IN PRESS
   Ratzinger J, 2005, EIGHTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P103, DOI 10.1109/IWPSE.2005.16
   Runeson P, 2006, IEEE SOFTWARE, V23, P22, DOI 10.1109/MS.2006.91
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sangwan R. S., 2006, IT Professional, V8, P25, DOI 10.1109/MITP.2006.122
   Schwaber K., 2002, AGILE SOFTWARE DEV S
   SINIAALTO M, 2007, P 1 INT S EMP SOFTW, P275, DOI DOI 10.1109/ESEM.2007.2
   Slaughter SA, 1998, COMMUN ACM, V41, P67, DOI 10.1145/280324.280335
   Tassey G., 2002, 023 NIST
   Telea A, 2008, COMPUT GRAPH FORUM, V27, P831, DOI 10.1111/j.1467-8659.2008.01214.x
   Van Rompaey B, 2007, IEEE T SOFTWARE ENG, V33, P800, DOI 10.1109/TSE.2007.70745
   Van Rompaey B, 2008, WORK CONF REVERSE EN, P269, DOI 10.1109/WCRE.2008.29
   Van Rysselberghe F, 2004, PROC IEEE INT CONF S, P328, DOI 10.1109/ICSM.2004.1357818
   Voinea L., 2005, Proceedings of the ACM Symposium on Software Visualization, P47, DOI [10.1145/1056018.1056025, DOI 10.1145/1056018.1056025]
   Voinea L., 2006, MSR 06 P 2006 INT WO, P33
   Voinea L, 2007, COMPUT GRAPH-UK, V31, P410, DOI 10.1016/j.cag.2007.01.031
   Wu JW, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P80
   Yamaura T, 1998, IEEE SOFTWARE, V15, P30, DOI 10.1109/52.730835
   Yin RK, 2002, Applied Social Research Methods Series, V34
   Zaidman A., 2008, 2008 1st international conference on software testing, verification, and validation, P220
   Zhu H, 1997, ACM COMPUT SURV, V29, P366, DOI 10.1145/267580.267590
   2010, PREVALENCE INCIDENCE
NR 71
TC 91
Z9 98
U1 1
U2 7
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2011
VL 16
IS 3
BP 325
EP 364
DI 10.1007/s10664-010-9143-7
PG 40
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 746NS
UT WOS:000289254600002
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Marchetto, A
   Tonella, P
AF Marchetto, Alessandro
   Tonella, Paolo
TI Using search-based algorithms for Ajax event sequence generation during
   testing
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Web testing; Ajax applications; Search-based software engineering
AB Modern Web applications offer a rich and unique user experience by taking advantages of the so called Web 2.0 technologies, among which Ajax. Ajax supports the intensive use of asynchronous communication between client-pages and the Web server and it allows on-the-fly manipulations of client-pages content and structure to realize a rich, dynamic and interactive user interface. Correspondingly, new types of faults that cannot be easily revealed by existing Web testing techniques are associated with modern Ajax-based applications. In our previous investigations, we used state-based testing for event sequence generation and it proved to be quite effective in exposing Ajax specific faults. However, the search space of the semantically interacting event sequences is huge, as it can grow exponentially with the event sequence length. In this paper, we apply search-based algorithms, namely hill climbing and simulated annealing, to the problem of generating maximally diverse event sequences of various lengths. In this way, we control the size of the generated test suites, while keeping the included test cases as diverse as possible. We evaluate the performance of the algorithms on two open source Ajax applications.
C1 [Marchetto, Alessandro; Tonella, Paolo] Fdn Bruno Kessler IRST, I-38050 Povo, Trento, Italy.
C3 Fondazione Bruno Kessler
RP Marchetto, A (corresponding author), Fdn Bruno Kessler IRST, I-38050 Povo, Trento, Italy.
EM marchetto@fbk.eu; tonella@fbk.eu
RI Marchetto, Alessandro/AAE-4179-2022; Tonella, Paolo/C-1702-2015
OI Marchetto, Alessandro/0000-0002-6833-896X; Tonella,
   Paolo/0000-0003-3088-0339
CR Andrews A, 2005, SOFTWARE SYSTEMS MOD, V4, P326, DOI DOI 10.1007/S10270-004-0077-7
   Bozdag E, 2009, J WEB ENG, V8, P287
   Cheon Y, 2005, SERP '05: PROCEEDINGS OF THE 2005 INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH AND PRACTICE, VOLS 1 AND 2, P290
   Dallmeier V., 2006, P 2006 INT WORKSH DY, P17, DOI DOI 10.1145/1138912.1138918
   Elbaum S, 2005, IEEE T SOFTWARE ENG, V31, P187, DOI 10.1109/TSE.2005.36
   GATLIN KS, 2004, ACM QUEUE, V2, P67
   KIRKPATRICK S, 1983, SCIENCE, V220, P671, DOI 10.1126/science.220.4598.671
   Marchetto Alessandro, 2008, International Journal on Software Tools for Technology Transfer, V10, P477, DOI 10.1007/s10009-008-0086-x
   MARCHETTO A, 2008, P 1 INT C SOFTW TEST, P121, DOI DOI 10.1109/ICST.2008.22
   MARCHETTO A, 2010, P IEEE EUR C SOFTW M, P241
   Marchetto A, 2009, 1ST INTERNATIONAL SYMPOSIUM ON SEARCH BASED SOFTWARE ENGINEERING, PROCEEDINGS, P3, DOI 10.1109/SSBSE.2009.13
   MCMINN P, 2004, SEACH BASED SOFTWARE
   Mesbah A, 2009, PROC INT CONF SOFTW, P210, DOI 10.1109/ICSE.2009.5070522
   Nikolik B, 2006, INFORM SOFTWARE TECH, V48, P1083, DOI 10.1016/j.infsof.2006.02.001
   Pargas RoyP., 1999, Verification and Reliability, V9, P263
   PATTON RM, 2003, GENETIC ALGORITHM AP
   Ricca F, 2001, PROC INT CONF SOFTW, P25, DOI 10.1109/ICSE.2001.919078
   Russell S., 2016, Artificial intelligence a modern approach
   Suman B, 2006, J OPER RES SOC, V57, P1143, DOI 10.1057/palgrave.jors.2602068
   Turner C. D., 1993, Proceedings. Conference on Software Maintenance 1993. CSM-93 (Cat. No.93CH3360-5), P302, DOI 10.1109/ICSM.1993.366932
   XIONG J, 2006, TESTING AJAX APPL SE
   Yuan X, 2007, PROC INT CONF SOFTW, P396
   Yuan X, 2008, TACI PART 2008:TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P23, DOI 10.1109/TAIC-PART.2008.10
NR 23
TC 26
Z9 30
U1 0
U2 8
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2011
VL 16
IS 1
BP 103
EP 140
DI 10.1007/s10664-010-9149-1
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 718CJ
UT WOS:000287097200005
DA 2024-07-18
ER

PT J
AU Gonzalez-Barahona, JM
   Robles, G
   Michlmayr, M
   Amor, JJ
   German, DM
AF Gonzalez-Barahona, Jesus M.
   Robles, Gregorio
   Michlmayr, Martin
   Jose Amor, Juan
   German, Daniel M.
TI Macro-level software evolution: a case study of a large software
   compilation
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Mining software repositories; Large software collections; Software
   evolution; Software integrators
AB Software evolution studies have traditionally focused on individual products. In this study we scale up the idea of software evolution by considering software compilations composed of a large quantity of independently developed products, engineered to work together. With the success of libre (free, open source) software, these compilations have become common in the form of 'software distributions', which group hundreds or thousands of software applications and libraries into an integrated system. We have performed an exploratory case study on one of them, Debian GNU/Linux, finding some significant results. First, Debian has been doubling in size every 2 years, totalling about 300 million lines of code as of 2007. Second, the mean size of packages has remained stable over time. Third, the number of dependencies between packages has been growing quickly. Finally, while C is still by far the most commonly used programming language for applications, use of the C++, Java, and Python languages have all significantly increased. The study helps not only to understand the evolution of Debian, but also yields insights into the evolution of mature libre software systems in general.
C1 [Gonzalez-Barahona, Jesus M.; Robles, Gregorio; Jose Amor, Juan] Univ Rey Juan Carlos, Madrid, Spain.
   [Michlmayr, Martin] HP, Open Source Program Off, Innsbruck, Austria.
   [German, Daniel M.] Univ Victoria, Victoria, BC, Canada.
C3 Universidad Rey Juan Carlos; University of Victoria
RP Gonzalez-Barahona, JM (corresponding author), Univ Rey Juan Carlos, Madrid, Spain.
EM jgb@gsyc.es; grex@gsyc.es; jjamor@gsyc.es; dmgerman@uvic.ca
RI Robles, Gregorio/I-2507-2012; Gonzalez-Barahona, Jesus M./L-5646-2017
OI Robles, Gregorio/0000-0002-1442-6761; Gonzalez-Barahona, Jesus
   M./0000-0001-9682-460X
CR AMOR JJ, 2005, UPGRADE MAGAZINE AUG
   [Anonymous], 4 INT WORKSH MIN SOF
   [Anonymous], UPGRADE
   Burton Swanson E., 1976, Proceedings of International Conference on Software Engineering (ICSE), P492
   Gall H, 1997, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P160, DOI 10.1109/ICSM.1997.624242
   Godfrey MW, 2000, PROC IEEE INT CONF S, P131, DOI 10.1109/ICSM.2000.883030
   Lehman M. M., 1985, Program Evolution: Processes of Software Change
   Lehman MM, 1997, FOURTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P20, DOI 10.1109/METRIC.1997.637156
   Lehman MM, 2001, ANN SOFTW ENG, V11, P15, DOI 10.1023/A:1012535017876
   LEHMAN MM, 1998, IMPLICATIONS LAW SOF
   Mancinelli F, 2006, IEEE INT CONF AUTOM, P199
   McNair A, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P130, DOI 10.1109/WCRE.2007.52
   Michalowski P, 2003, GR STUD CULT, V3, P105
   Rosen Lawrence., 2004, Open Source Licensing: Software Freedom and Intellectual Property Law
   SUCCI G, 2001, ESDER 3 WORKSH TOR M
   Tucker C, 2007, PROC INT CONF SOFTW, P178
   Turski WM, 1996, IEEE T SOFTWARE ENG, V22, P599, DOI 10.1109/32.536959
   Wheeler D.A., 2001, More than a gigabuck: Estimating GNU/Linux's size
NR 18
TC 52
Z9 59
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2009
VL 14
IS 3
BP 262
EP 285
DI 10.1007/s10664-008-9100-x
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 461TN
UT WOS:000267294500002
OA hybrid
DA 2024-07-18
ER

PT J
AU Pan, K
   Kim, SH
   Whitehead, EJ
AF Pan, Kai
   Kim, Sunghun
   Whitehead, E. James, Jr.
TI Toward an understanding of bug fix patterns
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software bugs; Bug fix changes; Categorization of software faults;
   Software fault taxonomy; Software fault; Software error; Causes of
   software bugs; Algorithms; Measurement; Experimentation
AB Twenty-seven automatically extractable bug fix patterns are defined using the syntax components and context of the source code involved in bug fix changes. Bug fix patterns are extracted from the configuration management repositories of seven open source projects, all written in Java ( Eclipse, Columba, JEdit, Scarab, ArgoUML, Lucene, and MegaMek). Defined bug fix patterns cover 45.7% to 63.3% of the total bug fix hunk pairs in these projects. The frequency of occurrence of each bug fix pattern is computed across all projects. The most common individual patterns are MC-DAP ( method call with different actual parameter values) at 14.9 - 25.5%, IF-CC ( change in if conditional) at 5.6-18.6%, and AS-CE ( change of assignment expression) at 6.0-14.2%. A correlation analysis on the extracted pattern instances on the seven projects shows that six have very similar bug fix pattern frequencies. Analysis of if conditional bug fix sub-patterns shows a trend towards increasing conditional complexity in if conditional fixes. Analysis of five developers in the Eclipse projects shows overall consistency with project-level bug fix pattern frequencies, as well as distinct variations among developers in their rates of producing various bug patterns. Overall, data in the paper suggest that developers have difficulty with specific code situations at surprisingly consistent rates. There appear to be broad mechanisms causing the injection of bugs that are largely independent of the type of software being produced.
C1 [Kim, Sunghun] Hong Kong Univ Sci & Technol, Dept Comp Sci & Engn, Kowloon, Hong Kong, Peoples R China.
   [Pan, Kai; Whitehead, E. James, Jr.] Univ Calif Santa Cruz, Dept Comp Sci, Santa Cruz, CA 95064 USA.
C3 Hong Kong University of Science & Technology; University of California
   System; University of California Santa Cruz
RP Kim, SH (corresponding author), Hong Kong Univ Sci & Technol, Dept Comp Sci & Engn, Clear Water Bay, Kowloon, Hong Kong, Peoples R China.
EM pankai@cs.ucsc.edu; hunkim@gmail.com; ejw@cs.ucsc.edu
CR [Anonymous], 10441993 IEEE
   BASILI VR, 1984, COMMUN ACM, V27, P42, DOI 10.1145/69605.2085
   Bevan J, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P134, DOI 10.1109/WCRE.2003.1287244
   CHILLAREGE R, 1992, IEEE T SOFTWARE ENG, V18, P943, DOI 10.1109/32.177364
   COURTNEY RE, 1993, SOFTWARE ENG J, V8, P5, DOI 10.1049/sej.1993.0002
   Cubranic D, 2003, PROC INT CONF SOFTW, P408, DOI 10.1109/ICSE.2003.1201219
   Duraes JA, 2006, IEEE T SOFTWARE ENG, V32, P849, DOI 10.1109/TSE.2006.113
   *ECL, 2006, ECL JAV DEV TOOLS JD
   Endres Albert., 1975, Proceedings: International Conference on Reliable Software, P327
   Fischer M, 2003, PROC IEEE INT CONF S, P23, DOI 10.1109/ICSM.2003.1235403
   FLANAGAN C, 2002, P ACM SIGPLAN 2002 C, P234
   *GNU, 2003, GNU DIFF
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Hassan AE, 2005, PROC IEEE INT CONF S, P263
   Hovemeyer D, 2004, ACM SIGPLAN NOTICES, V39, P92, DOI 10.1145/1052883.1052895
   KIM S, 2006, P 21 IEEE ACM INT C
   Leszak M., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P428, DOI 10.1109/ICSE.2000.870433
   Li Z, 2006, P 1 WORKSH ARCH SYST, P25, DOI DOI 10.1145/1181309.1181314
   Livshits B., 2005, Proceedings of the Workshop on the Evaluation of Software Defect Detection Tools, P296
   MARICK B, 1990, UIUCDCSR901651
   Mockus A, 2000, PROC IEEE INT CONF S, P120, DOI 10.1109/ICSM.2000.883028
   OSTRAND TJ, 1984, J SYST SOFTWARE, V4, P289, DOI 10.1016/0164-1212(84)90028-1
   PAN K, 2006, THESIS UC SANTA CRUZ, P61
   Perry DewayneE., 1993, P 4 EUROPEAN SOFTWAR, P48
   POTIER D, 1982, P 6 INT C SOFTW ENG, P94
   Sliwerski J, 2005, P INT WORKSH MIN SOF, P24
   Williams CC, 2005, IEEE T SOFTWARE ENG, V31, P466, DOI 10.1109/TSE.2005.63
NR 27
TC 134
Z9 152
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2009
VL 14
IS 3
BP 286
EP 315
DI 10.1007/s10664-008-9077-5
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 461TN
UT WOS:000267294500003
DA 2024-07-18
ER

PT J
AU Mendes, E
   Lokan, C
AF Mendes, Emilia
   Lokan, Chris
TI Replicating studies on cross- vs single-company effort models using the
   ISBSG Database
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 5th International Symposium on Empirical Software Engineering
CY 2006
CL Rio de Janeiro, BRAZIL
DE effort estimation; software projects; cross-company estimation models;
   single-company estimation model; regression-based estimation models;
   replication study; experimental procedure
AB In 2001 the ISBSG database was used by Jeffery et al. (Using public domain metrics to estimate software development effort. Proceedings Metrics'01, London, pp 16-27, 2001; S1) to compare the effort prediction accuracy between cross- and single-company effort models. Given that more than 2,000 projects were later volunteered to this database, in 2005 Mendes et al. (A replicated comparison of cross-company and within-company effort estimation models using the ISBSG Database, in Proceedings of Metrics'05, Como, 2005; S2) replicated S1 but obtained different results. The difference in results could have occurred due to legitimate differences in data set patterns; however, they could also have occurred due to differences in experimental procedure given that S2 was unable to employ exactly the same experimental procedure used in S1 because S1's procedure was not fully documented. Recently, we applied S2's experimental procedure to the ISBSG database version used in S1 (release 6) to assess if differences in experimental procedure would have contributed towards different results (Lokan and Mendes, Cross-company and single-company effort models using the ISBSG Database: a further replicated study, Proceedings of the ISESE'06, pp 75-84, 2006; S3). Our results corroborated those from S1, suggesting that differences in the results obtained by S2 were likely caused by legitimate differences in data set patterns. We have since been able to reconstruct the experimental procedure of S1 and therefore in this paper we present both S3 and also another study (S4), which applied the experimental procedure of S1 to the data set used in S2. By applying the experimental procedure of S2 to the data set used in S1 (study S3), and the experimental procedure of S1 to the data set used in S2 (study S4), we investigate the effect of all the variations between S1 and S2. Our results for S4 support those of S3, suggesting that differences in data preparation and analysis procedures did not affect the outcome of the analysis. Thus, the different results of S1 and S2 are very likely due to fundamental differences in the data sets.
C1 [Mendes, Emilia] Univ Auckland, Dept Comp Sci, Auckland 1, New Zealand.
   [Lokan, Chris] UNSW ADFA, Sch IT & EE, Canberra, ACT 2600, Australia.
C3 University of Auckland; Australian Defense Force Academy; University of
   New South Wales Sydney
RP Mendes, E (corresponding author), Univ Auckland, Dept Comp Sci, Private Bag 92019, Auckland 1, New Zealand.
EM emilia@cs.auckland.ac.nz; c.lokan@adfa.edu.au
RI Mendes, Maria E/B-4207-2015
OI Mendes, Emilia/0000-0003-0449-5322
CR [Anonymous], ICL TECHNICAL J
   [Anonymous], 1986, Software Engineering Metrics and Models
   [Anonymous], P EASE
   [Anonymous], 2002, Applied Statistics for Software Managers
   Briand L. C., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P313, DOI 10.1109/ICSE.1999.841022
   BRIAND LC, 2000, P 22 INT C SOFTW ENG, V20, P377
   COOK RD, 1977, TECHNOMETRICS, V19, P15, DOI 10.2307/1268249
   Jeffery R, 2000, SEVENTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 2001, PROCEEDINGS, P16, DOI 10.1109/METRIC.2001.915512
   Jeffery R, 2000, INFORM SOFTWARE TECH, V42, P1009, DOI 10.1016/S0950-5849(00)00153-1
   KEMERER CF, 1987, COMMUNICATIONS ACM, V30
   Kirsopp C., 2002, IEE Proceedings-Software, V149, P123, DOI 10.1049/ip-sen:20020695
   KITCHENHAM BA, 2006, P EASE 06 BCS
   Lefley M, 2003, LECT NOTES COMPUT SC, V2724, P2477
   Lokan Chris., 2006, 2006 ACMIEEE INT S E, P75, DOI DOI 10.1145/1159733.1159747
   Maxwell K, 1999, MANAGE SCI, V45, P787, DOI 10.1287/mnsc.45.6.787
   Mendes E, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P348, DOI 10.1109/METRIC.2004.1357920
   Mendes E., 2005, P METR 05 COM
   Tabachnick, 2013, Using multivariate statistics, V6th
   Wieczorek I, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P237, DOI 10.1109/METRIC.2002.1011342
NR 19
TC 23
Z9 24
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2008
VL 13
IS 1
BP 3
EP 37
DI 10.1007/s10664-007-9045-5
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 245WT
UT WOS:000251970200002
DA 2024-07-18
ER

PT J
AU Goseva-Popstojanova, K
   Singh, AD
   Mazimdar, S
   Li, FB
AF Goseva-Popstojanova, K
   Singh, AD
   Mazimdar, S
   Li, FB
TI Empirical characterization of session-based workload and reliability for
   Web servers
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 15th International Symposium on Software Reliability Engineering
CY NOV 02-05, 2004
CL St Malo, FRANCE
SP IEEE Comp Soc, Reliabil Soc, IRISA, cigital, Microsoft, france telecom R&D, Thales, IBM, CNRS, DGA, INRIA, Metropole Rennes, Bretagne Reg, Univ Rennes
DE Web workload; Web error behaviour; Web reliability; session-based
   analysis; heavy-tailed distributions
ID PERFORMANCE; TAIL
AB The growing availability of Internet access has led to significant increase in the use of World Wide Web. If we are to design dependable Web-based systems that deal effectively with the increasing number of clients and highly variable workload, it is important to be able to describe the Web workload and errors accurately. In this paper we focus on the detailed empirical analysis of the session-based workload and reliability based on the data extracted from actual Web logs of eleven Web servers. First, we introduce and rigourously analyze several intra-session and inter-session metrics that collectively describe Web workload in terms of user sessions. Then, we analyze Web error characteristics and estimate the request-based and session-based reliability of Web servers. Finally, we identify the invariants of the Web workload and reliability that apply through all data sets considered. The results presented in this paper show that session-based workload and reliability are better indicators of the users perception of the Web quality than the request-based metrics.
C1 W Virginia Univ, Lane Dept Comp Sci & Elect Engn, Morgantown, WV 26506 USA.
C3 West Virginia University
RP W Virginia Univ, Lane Dept Comp Sci & Elect Engn, Morgantown, WV 26506 USA.
EM Katerina.Goseva@mail.wvu.edu
RI Li, Fanbiao/J-2107-2016
OI Goseva-Popstojanova, Katerina/0000-0003-4683-672X
CR ALAGAR VS, 2002, 26 ANN INT COMP SOFT
   [Anonymous], HPL199935R1
   Arlitt M., 2001, ACM T INTERNET TECHN, V1, P44
   Arlitt MF, 1997, IEEE ACM T NETWORK, V5, P631, DOI 10.1109/90.649565
   BACKES PG, 2000, IEEE INT C ROB AUT, P2025
   Barford P., 1998, Performance Evaluation Review, V26, P151, DOI 10.1145/277858.277897
   Basili VR, 1996, PROC INT CONF SOFTW, P442, DOI 10.1109/ICSE.1996.493439
   *BUS INT GROUP SAN, 2004, BIG SF REP GOV WEB A
   *BUS INT GROUP SAN, 2004, BLACK FRID REP WEB A
   CHERKASOVA L, 1998, HPL98119
   Cremonesi P, 2002, LECT NOTES COMPUT SC, V2459, P158
   Crovella ME, 1997, IEEE ACM T NETWORK, V5, P835, DOI 10.1109/90.650143
   CROVELLA ME, 1995, TR95015 BOST U
   Goseva-Popstojanova K, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P403, DOI 10.1109/ISSRE.2004.19
   Goseva-Popstojanova K, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P307, DOI 10.1109/ISSRE.2003.1251052
   HILL BM, 1975, ANN STAT, V3, P1163, DOI 10.1214/aos/1176343247
   Kallepalli C, 2001, IEEE T SOFTWARE ENG, V27, P1023, DOI 10.1109/32.965342
   KITCHENHAM BA, 1996, ACM SIGSOFT SOFTWRE, V23, P20
   MENASCE D, 2000, 2 ACM C EL COMM EC 0, P56
   Menascé DA, 2000, PERFORM EVALUATION, V42, P223, DOI 10.1016/S0166-5316(00)00034-1
   MENASCE DA, 2002, 11 INT WORLD WID WEB
   MENASCE DA, 1999, ACM C EL COMM DENV C, P119
   NELSON E, 1978, MICROELECTRON RELIAB, V17, P67, DOI 10.1016/0026-2714(78)91139-3
   Oppenheimer D, 2002, IEEE INTERNET COMPUT, V6, P41, DOI 10.1109/MIC.2002.1036037
   Resnick SI, 1997, ANN STAT, V25, P1805, DOI 10.1214/aos/1069362376
   ROSENSTEIN M, 2000, 2 ACM C EL COMM EC 0, P38
   WANG W, 2003, 14 INT S SOFTW REL E, P293
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Zelkowitz MV, 1998, COMPUTER, V31, P23, DOI 10.1109/2.675630
NR 29
TC 30
Z9 37
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2006
VL 11
IS 1
BP 71
EP 117
DI 10.1007/s10664-006-5966-7
PG 47
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 013XO
UT WOS:000235443500004
DA 2024-07-18
ER

PT J
AU Takagi, Y
   Mizuno, O
   Kikuno, T
AF Takagi, Y
   Mizuno, O
   Kikuno, T
TI An empirical approach to characterizing risky software projects based on
   logistic regression analysis
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE software risk management; questionnaire; risky project; logistic
   regression
ID COMPONENTS; QUALITY; METRICS; COST
AB During software development, projects often experience risky situations. If projects fail to detect such risks, they may exhibit confused behavior. In this paper, we propose a new scheme for characterization of the level of confusion exhibited by projects based on an empirical questionnaire. First, we designed a questionnaire from five project viewpoints, requirements, estimates, planning, team organization, and project management activities. Each of these viewpoints was assessed using questions in which experience and knowledge of software risks are determined. Secondly, we classify projects into "confused" and "not confused," using the resulting metrics data. We thirdly analyzed the relationship between responses to the questionnaire and the degree of confusion of the projects using logistic regression analysis and constructing a model to characterize confused projects. The experimental result used actual project data shows that 28 projects out of 32 were characterized correctly. As a result, we concluded that the characterization of confused projects was successful. Furthermore, we applied the constructed model to data from other projects in order to detect risky projects. The result of the application of this concept showed that 7 out of 8 projects were classified correctly. Therefore, we concluded that the proposed scheme is also applicable to the detection of risky projects.
C1 Osaka Univ, Grad Sch Informat Sci & Technol, Osaka 5650871, Japan.
C3 Osaka University
EM yasunari.takagi@omron.co.jp; o-mizuno@ist.osaka-u.ac.jp;
   kikuno@ist.osaka-u.ac.jp
OI Mizuno, Osamu/0000-0001-8061-7657
CR [Anonymous], 1997, Software metrics: A rigorous and practical approach
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   BOEHM B, 1987, IEEE SOFTWARE, V4, P84
   BRIAND LC, 1993, IEEE T SOFTWARE ENG, V19, P1028, DOI 10.1109/32.256851
   Conrow EH, 1997, IEEE SOFTWARE, V14, P83, DOI 10.1109/52.589242
   FAIRLEY R, 1997, SOFTWARE ENG, P387
   Humphrey W S, 1995, A discipline for software engineering
   Humphrey Watts., 2001, Winning with Software: An Executive Strategy
   Jiang J, 2000, J SYST SOFTWARE, V52, P3, DOI 10.1016/S0164-1212(99)00128-4
   JONES C, 1993, ASSESSMENT CONTROL S
   Karolak D.W., 1996, SOFTWARE ENG RISK MA
   KASSER J, 1998, DOD SOFTWARE TECH NE, V2
   Mizuno O, 1998, PROC INT CONF SOFTW, P410, DOI 10.1109/ICSE.1998.671596
   Mizuno O., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P387, DOI 10.1109/ICSE.2000.870429
   Mizuno O, 2000, INFORM SOFTWARE TECH, V42, P465, DOI 10.1016/S0950-5849(00)00092-6
   MUNSON JC, 1992, IEEE T SOFTWARE ENG, V18, P423, DOI 10.1109/32.135775
   Ropponen J, 2000, IEEE T SOFTWARE ENG, V26, P98, DOI 10.1109/32.841112
   SISTI FJ, 1994, CMUSEI94TR19
   WILLIAMS R, 1999, CMUSEI99TR029
   Yourdon E., 1997, DEATH MARCH COMPLETE
NR 20
TC 26
Z9 30
U1 0
U2 7
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2005
VL 10
IS 4
BP 495
EP 515
DI 10.1007/s10664-005-3864-z
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 969PQ
UT WOS:000232247100004
DA 2024-07-18
ER

PT J
AU Pfahl, D
   Laitenberger, O
   Dorsch, J
   Ruhe, G
AF Pfahl, D
   Laitenberger, O
   Dorsch, J
   Ruhe, G
TI An externally replicated experiment for evaluating the learning
   effectiveness of using simulations in software project management
   education
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE COCOMO; learning effectiveness; replicated experiment; software project
   management education; system dynamics simulation
AB The increasing demand for software project managers in industry requires strategies for the development of the management-related knowledge and skills of the current and future software workforce. Although several approaches help teach the required skills in a university setting, few empirical studies are currently available to characterize and compare their effects.
   This paper presents results of an externally replicated controlled experiment that evaluates the learning effectiveness of using a process simulation model for educating computer science students in software project management. While the experimental group applies a system dynamics (SD) simulation model, the control group uses the well-known COCOMO model as a predictive tool for project planning.
   The results of the empirical study indicate that students using the simulation model gain a better understanding about typical behavior patterns of software development projects. The combination of the results from the initial experiment and the replication corroborates this finding. Additional analysis shows that the observed effect can mainly be attributed to the use of the simulation model in combination with a web-based role-play scenario. This finding is strongly supported by information gathered from the debriefing questionnaires of subjects in the experimental group. They consistently rated the simulation-based role-play scenario as a very useful approach for learning about issues in software project management.
C1 Univ Calgary, Calgary, AB, Canada.
C3 University of Calgary
EM pfahl@iese.fhg.de; oliver_laitenberger@droege.de;
   joerg.dorsch@accenture.com; ruhe@ucalgary.ca
RI Pfahl, Dietmar Alfred Paul Kurt/H-3084-2015
OI Pfahl, Dietmar Alfred Paul Kurt/0000-0003-2400-501X
CR Abdel-Hamid T., 1991, SOFTWARE PROJECT DYN
   [Anonymous], 2000, Software Cost Estimation with COCOMO II
   [Anonymous], P 7 INT S SOFTW METR
   [Anonymous], 1971, Principles of systems
   [Anonymous], EMPIR SOFTW ENG
   BOEHM B, 1987, IEEE SOFTWARE, V4, P84
   Boehm BW., 1981, Software Engineering Economics
   Cohen J., 1988, STAT POWER ANAL BEHA
   Drappa A, 1999, J SYST SOFTWARE, V46, P113, DOI 10.1016/S0164-1212(99)00005-9
   GRAHAM AK, 1992, EUR J OPER RES, V59, P151, DOI 10.1016/0377-2217(92)90012-X
   KELLNER MI, 1989, P 22 ANN HAW INT C S
   LANE DC, 1995, J OPER RES SOC, V46, P604, DOI 10.2307/2584534
   Likert R., 1932, Arch. Psychol., V22, P44, DOI DOI 10.4135/9781412961288.N454
   Lin CY, 1997, J SYST SOFTWARE, V38, P263, DOI 10.1016/S0164-1212(96)00156-2
   LIN CY, 1993, AM PROGRAM, P33
   Lipsey M.W., 1990, DESIGN SENSITIVITY
   MADACHY R, 1999, P 2 SOFTW PROC SIM M
   MILLING P, 1995, Z BETRIEBSWIRTSCHA S, P93
   MORECROFT JDW, 1988, EUR J OPER RES, V35, P301, DOI 10.1016/0377-2217(88)90221-4
   Pfahl D, 2001, J SYST SOFTWARE, V59, P283, DOI 10.1016/S0164-1212(01)00069-3
   PFAHL D, 2001, THESIS STUTTGART, V8
   Richardson G., 1981, INTRO SYSTEM DYNAMIC
   Sheskin D.J., 1997, HDB PARAMETRIC NONPA
   SMITH BJ, 1993, AM PROGRAM, P10
   VENNIX JAM, 1990, THESIS U NIJMEGEN
   WILDT AR, 1978, SAGE U PAPER SERIES
NR 26
TC 13
Z9 16
U1 0
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2003
VL 8
IS 4
BP 367
EP 395
DI 10.1023/A:1025320418915
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 803WH
UT WOS:000220260700003
DA 2024-07-18
ER

PT J
AU Schach, SR
   Jin, B
   Yu, LG
   Heller, GZ
   Offutt, J
AF Schach, SR
   Jin, B
   Yu, LG
   Heller, GZ
   Offutt, J
TI Determining the distribution of maintenance categories: Survey versus
   measurement
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE maintenance categories; open-source software; repeated maintenance;
   real-time product; Linux; GCC
AB In 1978, Lientz, Swanson, and Tompkins published the results of a survey on software maintenance. They found that 17.4% of maintenance effort was categorized as corrective in nature, 18.2% as adaptive, 60.3% as perfective, and 4.1% was categorized as other. We refer to this as the "LST" result. We contrast this survey-based result with our empirical results from the analysis of data for the repeated maintenance of three software products: a commercial real-time product, the Linux kernel, and GCC. For all three products and at both levels of granularity we considered, our observed distributions of maintenance categories were statistically very highly significantly different from LST. In particular, corrective maintenance was always more than twice the LST value. For the summed data, the percentage of corrective maintenance was more than three times the LST value. We suggest various explanations for the observed differences, including inaccuracies on the part of the maintenance managers who responded to the LST survey.
C1 Vanderbilt Univ, Dept Elect Engn & Comp Sci, Nashville, TN 37235 USA.
   Macquarie Univ, Dept Stat, Sydney, NSW 2109, Australia.
   George Mason Univ, Dept Informat & Software Engn, Fairfax, VA 22030 USA.
C3 Vanderbilt University; Macquarie University; George Mason University
RP Vanderbilt Univ, Dept Elect Engn & Comp Sci, 221 Kirkland Hall, Nashville, TN 37235 USA.
EM srs@vuse.vanderbilt.edu; bo.jin@vanderbilt.edu; liguo.yu@vanderbilt.edu;
   gheller@efs.mq.edu.au; ofut@ise.gmu.edu
OI Heller, Gillian/0000-0003-1270-1499
CR Burton Swanson E., 1976, Proceedings of International Conference on Software Engineering (ICSE), P492
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   ELEMAM K, 1998, ISERN9802
   *FSF, 2001, GCC HOM PAG
   Graves TL, 1998, FIFTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 1998, PROCEEDINGS, P267, DOI 10.1109/METRIC.1998.731253
   LIENTZ BP, 1978, COMMUN ACM, V21, P466, DOI 10.1145/359511.359522
   Mockus A, 2000, PROC IEEE INT CONF S, P120, DOI 10.1109/ICSM.2000.883028
   Nosek J. T., 1990, Journal of Software Maintenance: Research and Practice, V2, P157, DOI 10.1002/smr.4360020303
   PRESSMAN RS, 2001, SOFTWARE ENG PRACTIT, P805
   Schach S. R., 2002, IEE Proceedings-Software, V149, P18, DOI 10.1049/ip-sen:20020198
   SCHACH SR, 2002, OBJECT ORIENTED CLAS, V52, P426
   SCHACH SR, 2002, OBJECT ORIENTED CLAS, V10, P181
   SOMMERVILLE I, 2001, SOFTWARE ENG, P606
   Wang SL, 2001, J SOFTW MAINT EVOL-R, V13, P127, DOI 10.1002/smr.227
   Weiss N.A., 1995, INTRO STAT, V4th
NR 15
TC 36
Z9 43
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2003
VL 8
IS 4
BP 351
EP 365
DI 10.1023/A:1025368318006
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 803WH
UT WOS:000220260700002
DA 2024-07-18
ER

PT J
AU Kaltenecker, C
   Mühlbauer, S
   Grebhahn, A
   Siegmund, N
   Apel, S
AF Kaltenecker, Christian
   Muehlbauer, Stefan
   Grebhahn, Alexander
   Siegmund, Norbert
   Apel, Sven
TI Performance evolution of configurable software systems: an empirical
   study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Configurable software systems; Performance; Evolution; Performance
   changes
AB As a software system evolves, its performance can improve or degrade over time. Performance evolution is especially delicate in configurable software systems, where performance degradation may manifest only for specific configurations, making it especially hard to spot and fix. Problem. Prior work concentrated mainly on performance-bug detection and root-cause analysis of a single version of a system. The big picture of how performance co-evolves with a system and what role configurability plays is largely unclear. Approach. In an empirical study, we investigate the relation between configurability and performance evolution. Specifically, we analyze a total of 190 releases of 12 configurable real-world systems and examine the extent to which performance changes are specific to particular configurations and whether few or many configuration options cause performance changes. We triangulate our findings by analyzing change logs and commit messages of the respective projects to pin down causes of performance changes. Results. We found that almost every release of every subject system exhibits performance changes in some of their configurations. Notably, the majority of performance changes affects only a subset of the configuration space, and most performance changes are triggered by multiple options (up to 6). In a deeper analysis, we found that a considerable number of releases mention performance changes in the change log and commits: performance changes are reported in 45% 69\% of the releases in the change log and the commit messages, respectively, but only a fraction report the involved configuration options.
C1 [Kaltenecker, Christian; Apel, Sven] Saarland Univ, Saarland Informat Campus, Saarbrucken, Germany.
   [Muehlbauer, Stefan; Siegmund, Norbert] Univ Leipzig, Leipzig, Germany.
   [Grebhahn, Alexander] Adesso SE, Berlin, Germany.
C3 Saarland University; Leipzig University
RP Kaltenecker, C (corresponding author), Saarland Univ, Saarland Informat Campus, Saarbrucken, Germany.
EM kaltenec@cs.uni-saarland.de; muehlbauer@informatik.uni-leipzig.de;
   Alexander.Grebhahn@adesso.de;
   norbert.siegmund@informatik.uni-leipzig.de; apel@cs.uni-saarland.de
OI Kaltenecker, Christian/0000-0002-4160-7162; Muhlbauer,
   Stefan/0000-0002-7971-6727
FU German Research Foundation (DFG) [AP 206/11-1, AP 206/11-2, 389792660,
   SI 2171/2-2]; Federal Ministry of Education and Research of Germany;
   Sachsische Staatsministerium fur Wissenschaft Kultur und Tourismus in
   the program Center of Excellence for AI-research "Center for Scalable
   Data Analytics and Artificial Intelligence Dresden/Leipzig"; BMBF
FX We thank our reviewers for their constructive comments. Apel's work has
   been funded by the German Research Foundation (DFG) under the contracts
   AP 206/11-1, AP 206/11-2, and Grant 389792660 as part of TRR 248 - CPEC.
   Siegmund's work has been funded by the German Research Foundation (SI
   2171/2-2), by the Federal Ministry of Education and Research of Germany,
   and by the Sachsische Staatsministerium fur Wissenschaft Kultur und
   Tourismus in the program Center of Excellence for AI-research "Center
   for Scalable Data Analytics and Artificial Intelligence
   Dresden/Leipzig", project identification number: ScaDS.AI, and by the
   BMBF project Agile-AI.
CR ANDREWS DF, 1974, TECHNOMETRICS, V16, P523, DOI 10.2307/1267603
   Apel S, 2013, P INT WORKSH FEAT OR, P1
   Burnim J, 2009, PROC INT CONF SOFTW, P463, DOI 10.1109/ICSE.2009.5070545
   Chen JF, 2017, PROC IEEE INT CONF S, P341, DOI 10.1109/ICSME.2017.13
   Chen ZF, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P811, DOI 10.1145/3180155.3180229
   Costa D, 2021, IEEE T SOFTWARE ENG, V47, P1452, DOI 10.1109/TSE.2019.2925345
   Dorn J, 2023, EMPIR SOFTW ENG, V28, DOI 10.1007/s10664-022-10250-2
   Feitelson DG, 2002, LECT NOTES COMPUT SC, V2459, P114
   Flora Parminder, 2014, P 11 WORK C MIN SOFT, P232, DOI [DOI 10.1145/2597073.2597092EVENT-PLACE, 10.1145/2597073.2597092event-place:Hyderabad,India, DOI 10.1145/2597073.2597092EVENT-PLACE:HYDERABAD,INDIA]
   Foo King Chun, 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P32, DOI 10.1109/QSIC.2010.35
   Georges A, 2007, OOPSLA: 22ND INTERNATIONAL CONFERENCE ON OBJECT-ORIENTED PROGRAMMING, SYSTEMS, LANGUAGES, AND APPLICATIONS, PROCEEDINGS, P57
   Grebhahn A, 2017, Concurrency and Computation: Practice and Experience, V29
   Gropp W., 2011, P INT C SUP ICS 11, P172, DOI [10.1145/1995896.1995924, DOI 10.1145/1995896.1995924]
   Han S, 2012, PROC INT CONF SOFTW, P145, DOI 10.1109/ICSE.2012.6227198
   Han X, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962602
   Heger Christoph, 2013, P 4 ACM SPEC INT C P, P27, DOI DOI 10.1145/2479871.2479879
   James G, 2013, SPRINGER TEXTS STAT, V103, P1, DOI [10.1007/978-1-4614-7138-7, 10.1007/978-1-4614-7138-7_1]
   Jamshidi P, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P71, DOI 10.1145/3236024.3236074
   Jamshidi P, 2017, IEEE INT CONF AUTOM, P497, DOI 10.1109/ASE.2017.8115661
   Jiang ZM, 2015, IEEE T SOFTWARE ENG, V41, P1091, DOI 10.1109/TSE.2015.2445340
   Jin GL, 2012, ACM SIGPLAN NOTICES, V47, P77, DOI 10.1145/2345156.2254075
   Kaltenecker C, 2020, IEEE SOFTWARE, V37, P58, DOI 10.1109/MS.2020.2987024
   Kaltenecker C, 2019, PROC INT CONF SOFTW, P1084, DOI 10.1109/ICSE.2019.00112
   Kendall MG, 1938, BIOMETRIKA, V30, P81, DOI 10.2307/2332226
   Kleber A, 2013, DEVEL SEDIM, V66, P1, DOI 10.1016/B978-0-444-53118-6.00001-5
   Knüppel A, 2018, LECT NOTES COMPUT SC, V10895, P342, DOI 10.1007/978-3-319-94821-8_20
   Kolesnikov S, 2019, EMPIR SOFTW ENG, V24, P2410, DOI 10.1007/s10664-019-09705-w
   Kolesnikov S, 2019, SOFTW SYST MODEL, V18, P2265, DOI 10.1007/s10270-018-0662-9
   Lee D, 2012, IEEE T KNOWL DATA EN, V24, P1345, DOI 10.1109/TKDE.2011.88
   Leitner P., 2017, P 8 ACMSPEC INT C PE, P373
   Malik H, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1012, DOI 10.1109/ICSE.2013.6606651
   Mühlbauer S, 2020, IEEE INT CONF AUTOM, P611, DOI 10.1145/3324884.3416573
   Mühlbauer S, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P652, DOI 10.1109/ASE.2019.00065
   Muhlbauer S, 2023, P INT C SOFTWARE ENG
   Mytkowicz T, 2009, ACM SIGPLAN NOTICES, V44, P265, DOI 10.1145/1508284.1508275
   Nair V, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P257, DOI 10.1145/3106237.3106238
   Oh J, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P61, DOI 10.1145/3106237.3106273
   Passos L, 2021, IEEE T SOFTWARE ENG, V47, P146, DOI 10.1109/TSE.2018.2884911
   Passos L, 2016, EMPIR SOFTW ENG, V21, P1744, DOI 10.1007/s10664-015-9364-x
   Peng X, 2011, INFORM SOFTWARE TECH, V53, P707, DOI 10.1016/j.infsof.2011.01.001
   Pereira J, 2020, P INT C PERFORMANCE
   Pett T, 2020, SPLC'19: PROCEEDINGS OF THE 23RD INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL A, P78, DOI 10.1145/3336294.3336322
   Pukall M, 2013, SOFTWARE PRACT EXPER, V43, P153, DOI 10.1002/spe.2107
   Reichelt DG, 2018, COMPANION OF THE 2018 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE '18), P183, DOI 10.1145/3185768.3186404
   Saltelli A., 2008, Global Sensitivity Analysis: The Primer, DOI DOI 10.1002/9780470725184
   Alcocer JPS, 2016, ACM SIGPLAN NOTICES, V51, P129, DOI [10.1145/2816707.2816718, 10.1145/2936313.2816718]
   Seidel I, 2013, IEEE INT CON MULTI
   Seidl C., 2012, P 16 INT SOFTW PROD, V1, P76, DOI DOI 10.1145/2362536.2362550
   Sheather SJ, 2009, SPRINGER TEXTS STAT, P1, DOI 10.1007/978-0-387-09608-7_1
   Siegmund N, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P284, DOI 10.1145/2786805.2786845
   Siegmund N, 2013, INFORM SOFTWARE TECH, V55, P491, DOI 10.1016/j.infsof.2012.07.020
   Thum T, 2019, P INT SYSTEMS SOFTWA, p69:1
   van Zyl P, 2006, P ANN RES C S AFR I, P1
   Von Rhein A, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3280986
   Wolf F, 2014, LECT NOTES COMPUT SC, V8806, P589, DOI 10.1007/978-3-319-14313-2_50
   Xu TY, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P307, DOI 10.1145/2786805.2786852
   Zaman S., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P199, DOI 10.1109/MSR.2012.6224281
NR 57
TC 0
Z9 0
U1 2
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2023
VL 28
IS 6
AR 152
DI 10.1007/s10664-023-10338-3
PG 41
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA X8JK0
UT WOS:001100843200001
OA hybrid
DA 2024-07-18
ER

PT J
AU Pazos, JC
   Légaré, JS
   Beschastnikh, I
AF Pazos, Jose Carlos
   Legare, Jean-Sebastien
   Beschastnikh, Ivan
TI XSnare: application-specific client-side cross-site scripting protection
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Cross-site scripting; Security; Web; Program analysis
ID INJECTION; XSS
AB We present XSnare, a client-side Cross-Site Scripting (XSS) solution implemented as a Firefox extension. The client-side design of XSnare can protect users before application developers release patches and before server operators apply them. XSnare blocks XSS attacks by using previous knowledge of a web application's HTML template content and the rich DOM context. XSnare uses a database of exploit descriptions, which are written with the help of previously recorded CVEs. It singles out injection points for exploits in the HTML and dynamically sanitizes content to prevent malicious payloads from appearing in the DOM. XSnare displays a secured version of the site, even if is exploited. We evaluated XSnare on 81 recent CVEs related to XSS attacks, and found that it defends against 93.8% of these exploits. We compared XSnare's funcitonality and protection with two well known content filtering extensions: NoScript and uBlockOrigin. To the best of our knowledge, XSnare is the first protection mechanism for XSS that is application-specific, and based on publicly available CVE information. We show that XSnare's specificity protects users against exploits which evade other, more generic, XSS defenses. Our performance evaluation shows that our extension's overhead on web page loading time is less than 10% for 72.6% of the sites in the Moz Top 500 list. We also show that XSnare has as a slowdown of less than 10% on 60% of the vulnerable sites that we considered. XSnare has a false positive rate of 1/4876 (0.0205%) on the Alexa top 5000 sites.
C1 [Pazos, Jose Carlos; Legare, Jean-Sebastien; Beschastnikh, Ivan] Univ British Columbia, Dept Comp Sci, Vancouver, BC, Canada.
C3 University of British Columbia
RP Beschastnikh, I (corresponding author), Univ British Columbia, Dept Comp Sci, Vancouver, BC, Canada.
EM jose_pazos8@hotmail.com; jslegare@gmail.com; bestchai@cs.ubc.ca
CR Abgrall E, 2014, IEEE ICST WORKSHOP, P34, DOI 10.1109/ICSTW.2014.63
   Acu, 2021, AC WEB VULN TEST REP
   adb, 2018, DOES ADBL WORK
   [Anonymous], 2012, P ACM SIGSOFT 20 INT, DOI DOI 10.1145/2393596.2393608
   Artzi S, 2010, IEEE T SOFTWARE ENG, V36, P474, DOI 10.1109/TSE.2010.31
   Bezemer CP, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P81, DOI 10.1145/1595696.1595711
   Bisht P, 2008, LECT NOTES COMPUT SC, V5137, P23, DOI 10.1007/978-3-540-70542-0_2
   Pazos JC, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P154, DOI 10.1109/SANER50967.2021.00023
   CSP, 2019, SAM OR POL
   cve, 2019, WORDPR VULN STAT
   cve, 2019, WORDPR CVES
   dep, 2019, INT DEPR REM XSSAUDI
   exa, 2018, WORDPR PLUG RESP COO
   exp, 2019, EXPL DAT
   Hallaraker O, 2005, IEEE INT C ENG COMP, P85
   Heiderich M, 2017, LECT NOTES COMPUT SC, V10493, P116, DOI 10.1007/978-3-319-66399-9_7
   Jim Trevor., 2007, WWW 07, P601, DOI [10.1145/1242572.1242654, DOI 10.1145/1242572.1242654]
   Kiezun A, 2009, PROC INT CONF SOFTW, P199, DOI 10.1109/ICSE.2009.5070521
   Kirda E, 2009, COMPUT SECUR, V28, P592, DOI 10.1016/j.cose.2009.04.008
   Kocher P, 2018, Arxiv, DOI arXiv:1801.01203
   Moz, 2022, MOZ TOP 500 WEBS
   Nadji Yacin., 2009, NDSS
   nav, 2019, NAV TIM LEV 2
   Nguyen-Tuong A, 2005, INT FED INFO PROC, V181, P295
   nMa, 2019, NMAP NETWORK MAPPER
   Noscript, 2022, NOSCR HOM
   Pan JK, 2017, PROC IEEE INT CONF S, P24, DOI 10.1109/ICSME.2017.11
   Pietraszek T, 2006, LECT NOTES COMPUT SC, V3858, P124
   Rap, 2018, SEC REP IN PROD WEB
   Rap, 2021, 2021 VULN INT REP
   rcc, 2019, RESP COOK CONS 1 8 P
   saf, 2019, SAF INS EXT CONT PAG
   Snyder P, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P179, DOI 10.1145/3133956.3133966
   Steffens M, 2019, 26TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2019), DOI 10.14722/ndss.2019.23009
   Stock B, 2017, PROCEEDINGS OF THE 26TH USENIX SECURITY SYMPOSIUM (USENIX SECURITY '17), P971
   Stock B, 2014, PROCEEDINGS OF THE 23RD USENIX SECURITY SYMPOSIUM, P655
   stu, 2019, WORDPR PLUG RESP COO
   Suc, 2021, 2021 WEBS THREAT RES
   Sun FQ, 2009, LECT NOTES COMPUT SC, V5789, P539
   Sundareswaran S, 2012, LECT NOTES COMPUT SC, V7371, P223, DOI 10.1007/978-3-642-31540-4_17
   uBlockOrigin, 2022, UBL OR
   w3s, 2019, US CONT MAN SYST WEB
   Wassermann G., 2008, Proceedings of the ACM/SIGSOFT International Symposium on Software Testing and Analysis (ISSTA 2008), P249
   Wassermann G, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P171, DOI 10.1145/1368088.1368112
   wpp, 2019, WORDPR PLUG
   wps, 2019, ABOUT US
   wpw, 2019, STAT SHOW WHY WORDPR
   Wurzinger P, 2009, 2009 ICSE WORKSHOP ON SOFTWARE ENGINEERING FOR SECURE SYSTEMS, P33, DOI 10.1109/IWSESS.2009.5068456
   xss, 2020, CVE DET VULN TYP
   xss, 2019, XSS AUD
   Xu W, 2006, USENIX ASSOCIATION PROCEEDINGS OF THE 15TH USENIX SECURITY SYMPOSIUM, P121
NR 51
TC 1
Z9 1
U1 0
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2023
VL 28
IS 5
AR 110
DI 10.1007/s10664-023-10323-w
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA P3ZZ2
UT WOS:001050076100001
DA 2024-07-18
ER

PT J
AU Piantadosi, V
   Scalabrino, S
   Serebrenik, A
   Novielli, N
   Oliveto, R
AF Piantadosi, Valentina
   Scalabrino, Simone
   Serebrenik, Alexander
   Novielli, Nicole
   Oliveto, Rocco
TI Do attention and memory explain the performance of software developers?
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Cognitive human factors; Coding task outcome prediction; Empirical
   software engineering
ID DIGIT MODALITIES TEST; ADULT COGNITION; WORKING-MEMORY; NIH TOOLBOX;
   EXPERIENCE; COMPREHENSION; INTELLIGENCE; VARIABILITY; TELEPHONE;
   VALIDITY
AB Writing and modifying source code are core activities in software development and evolution. The outcome of a coding task in terms of quality may depend on several aspects, such as the difficulty of the task or the complexity of the system. Besides, it is well known that individual characteristics of developers, like the programming experience, play a lead role in this. Recent work started exploring the influence that cognitive human aspects have on the ability of developers to acquire information from the source code (e.g., finding security blind spots). However, it is still unknown to what extent such aspects influence their ability of completing coding tasks. In this paper, we theorize that two cognitive human aspects, attention and memory, play a role in predicting the outcome of a coding task. We conducted a controlled experiment involving 32 participants (18 bachelor students, 9 master students, 2 Ph.D. students. and 3 practitioners), in which we asked them to complete two bug-fixing and two feature implementation tasks. We measured, for each of them, three attention-related factors (i.e., alerting, orienting, and executive control) and two memory-related ones (i.e., working memory and immediate recall) through well-established psychometric tests. Finally, we investigated to what extent these factors can explain the correctness, the readability and the time taken to complete a task in function of such factors. Our results show that all the attention- and memory-related factors achieved very low correlation with correctness and time. Indeed, the number of years of programming experience is far more important than all the other variables we considered for explaining the correctness and the time required to complete a task. Moreover, we found a significant relationship between orienting (an attention-related factor) and code readability.
C1 [Piantadosi, Valentina; Scalabrino, Simone; Oliveto, Rocco] Univ Molise, Campobasso, Italy.
   [Serebrenik, Alexander] Eindhoven Univ Technol, Eindhoven, Netherlands.
   [Novielli, Nicole] Univ Bari, Bari, Italy.
C3 University of Molise; Eindhoven University of Technology; Universita
   degli Studi di Bari Aldo Moro
RP Piantadosi, V (corresponding author), Univ Molise, Campobasso, Italy.
EM valentina.piantadosi@unimol.it; simone.scalabrino@unimol.it;
   a.serebrenik@tue.nl; nicole.novielli@uniba.it; rocco.oliveto@unimol.it
OI Serebrenik, Alexander/0000-0002-1418-0095; Piantadosi,
   Valentina/0000-0003-0666-6121
CR Allan J, 2013, COGNITIONS, P441, DOI [10.1007/978-1-4419-1005-9_1114, DOI 10.1007/978-1-4419-1005-9_1114]
   [Anonymous], 2012, P ACM SIGSOFT 20 INT
   BADDELEY AD, 1983, PHILOS T R SOC B, V302, P311, DOI 10.1098/rstb.1983.0057
   Benedict RHB, 2017, MULT SCLER J, V23, P721, DOI 10.1177/1352458517690821
   Benjafield J.G., 2010, COGNITION
   BENJAMINI Y, 1995, J R STAT SOC B, V57, P289, DOI 10.1111/j.2517-6161.1995.tb02031.x
   Bhattacharya P, 2011, P 8 WORK C MIN SOFTW, P207
   Bialystok E, 2009, J EXP PSYCHOL HUMAN, V35, P565, DOI 10.1037/a0012735
   Blackburn JD, 1996, IEEE T SOFTWARE ENG, V22, P875, DOI 10.1109/32.553636
   Blank A, 2020, J SPEECH LANG HEAR R, V63, P321, DOI 10.1044/2019_JSLHR-19-00230
   Bowrin AR, 2010, MANAG AUDIT J
   Brearly TW, 2019, ARCH CLIN NEUROPSYCH, V34, P524, DOI 10.1093/arclin/acy070
   Brun Y, 2021, Arxiv, DOI arXiv:2103.06091
   Cairncross M, 2022, BRAIN INJURY, V36, P1228, DOI 10.1080/02699052.2022.2109744
   Cappos Justin., 2014, Proceedings of the 2014 workshop on New Security Paradigms Workshop, Victoria, BC, Canada, September 15-18, 2014, P53, DOI DOI 10.1145/2683467.2683472
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Colom R, 2005, PERS INDIV DIFFER, V39, P1005, DOI 10.1016/j.paid.2005.03.020
   Conway A., 2007, VARIATION WORKING ME, DOI [10.1093/acprof:oso/9780195168648.001.0001, DOI 10.1093/ACPROF:OSO/9780195168648.001.0001]
   COULTER NS, 1983, IEEE T SOFTWARE ENG, V9, P166, DOI 10.1109/TSE.1983.236461
   Crawford JR, 1998, NEUROPSYCHOL REHABIL, V8, P209, DOI 10.1080/713755574
   Di Nucci D, 2018, IEEE T SOFTWARE ENG, V44, P5, DOI 10.1109/TSE.2017.2659747
   Ebisch SJH, 2013, NEUROIMAGE, V78, P426, DOI 10.1016/j.neuroimage.2013.04.058
   Efroymson M.A., 1960, MATH METHODS DIGITAL, P191
   ERIKSEN BA, 1974, PERCEPT PSYCHOPHYS, V16, P143, DOI 10.3758/BF03203267
   Fan J, 2002, J COGNITIVE NEUROSCI, V14, P340, DOI 10.1162/089892902317361886
   Fellows RP, 2020, ARCH CLIN NEUROPSYCH, V35, P105, DOI 10.1093/arclin/acz020
   Fisher RA, 1922, J R STAT SOC, V85, P87, DOI 10.2307/2340521
   Floyd B, 2017, PROC INT CONF SOFTW, P175, DOI 10.1109/ICSE.2017.24
   Forn C, 2013, EXP BRAIN RES, V225, P399, DOI 10.1007/s00221-012-3380-5
   Forn C, 2009, NEUROSCI LETT, V456, P11, DOI 10.1016/j.neulet.2009.03.081
   Friedman NP, 2004, J EXP PSYCHOL GEN, V133, P101, DOI 10.1037/0096-3445.133.1.101
   Genova HM, 2009, J INT NEUROPSYCH SOC, V15, P383, DOI 10.1017/S1355617709090535
   Gershon RC, 2013, NEUROLOGY, V80, pS2, DOI 10.1212/WNL.0b013e3182872e5f
   Green CS, 2007, PSYCHOL SCI, V18, P88, DOI 10.1111/j.1467-9280.2007.01853.x
   Habib M, 2009, MUSIC PERCEPT, V26, P279, DOI 10.1525/MP.2009.26.3.279
   Halberda J, 2008, NATURE, V455, P665, DOI 10.1038/nature07246
   He ZM, 2012, AUTOMAT SOFTW ENG, V19, P167, DOI 10.1007/s10515-011-0090-3
   Howard SJ, 2014, COGNITIVE DEV, V31, P1, DOI 10.1016/j.cogdev.2014.03.001
   Huang Y, 2019, PROC INT CONF SOFTW, P396, DOI 10.1109/ICSE.2019.00053
   Hughes DJ., 2018, PSYCHOMETRIC VALIDIT, P751
   HUTCHINS M, 1994, PROC INT CONF SOFTW, P191, DOI 10.1109/ICSE.1994.296778
   Juristo N., 2013, BASICS SOFTWARE ENG
   Karas Z, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P767, DOI 10.1145/3468264.3468579
   Koen JD, 2013, J EXP PSYCHOL LEARN, V39, P1726, DOI 10.1037/a0033671
   Krueger R, 2020, PROC INT CONF SOFTW, P678, DOI 10.1145/3377811.3380348
   Kuutila M, 2017, 2017 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON EMOTION AWARENESS IN SOFTWARE ENGINEERING (SEMOTION 2017), P54, DOI 10.1109/SEmotion.2017.11
   Lachman ME, 2014, ASSESSMENT, V21, P404, DOI 10.1177/1073191113508807
   LeetCode, 2020, LEETC PROBL REG EXPR
   LeetCode, 2020, LEETC PROBL DUPL ZER
   LeetCode, 2020, LEETC PROBL FIND REP
   LeetCode, 2020, LEETC PROBL SORT MAT
   Lesage E, 2020, NEUROPSYCHOPHARMACOL, V45, P857, DOI 10.1038/s41386-020-0623-1
   Li ZQ, 2018, IET SOFTW, V12, P161, DOI 10.1049/iet-sen.2017.0148
   Lilienthal L, 2013, PSYCHON B REV, V20, P135, DOI 10.3758/s13423-012-0335-6
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Martínez K, 2011, INTELLIGENCE, V39, P473, DOI 10.1016/j.intell.2011.09.001
   Matchock RL, 2009, EXP BRAIN RES, V192, P189, DOI 10.1007/s00221-008-1567-6
   Mundy E, 2009, J EXP CHILD PSYCHOL, V103, P490, DOI 10.1016/j.jecp.2009.02.003
   Musso M, 2012, EDUC RES INT, V2012
   Nour S, 2019, BEHAV SCI-BASEL, V9, DOI 10.3390/bs9040043
   Oded Y., 2011, Biofeedback, V39, P112, DOI DOI 10.5298/1081-5937-39.3.03
   Oliveira D., 2014, P 30 ANN COMP SEC AP, P296, DOI [10.1145/2664243.2664254, DOI 10.1145/2664243.2664254]
   Oliveira DS, 2018, PROCEEDINGS OF THE FOURTEENTH SYMPOSIUM ON USABLE PRIVACY AND SECURITY, P315
   Parmenter BA, 2007, MULT SCLER J, V13, P52, DOI 10.1177/1352458506070750
   Passolunghi MC, 2007, COGNITIVE DEV, V22, P165, DOI 10.1016/j.cogdev.2006.09.001
   Peitek N, 2020, IEEE T SOFTWARE ENG, V46, P442, DOI 10.1109/TSE.2018.2863303
   Piantadosi V, 2021, REPLICATION PACKAGE
   Pinto G, 2017, 2017 IEEE/ACM 10TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE 2017), P74, DOI 10.1109/CHASE.2017.13
   POSNER MI, 1980, Q J EXP PSYCHOL, V32, P3, DOI 10.1080/00335558008248231
   POSNER MI, 1990, ANNU REV NEUROSCI, V13, P25, DOI 10.1146/annurev.ne.13.030190.000325
   Posnett D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P452, DOI 10.1109/ICSE.2013.6606591
   Rapport MD, 2009, J ATTEN DISORD, V12, P563, DOI 10.1177/1087054708322990
   RASCH RH, 1992, MIS QUART, V16, P395, DOI 10.2307/249535
   Ricca F, 2007, PROC INT CONF SOFTW, P375
   Ricca F, 2010, IEEE T SOFTWARE ENG, V36, P96, DOI 10.1109/TSE.2009.69
   Rick Turner J., 2013, Encyclopedia of Behavioral Medicine, DOI 10.1007/978-1-4419-1005-9
   Roy E., 2013, Encyclopedia of behavioral medicine, DOI [10.1007/978-1-4419-1005-9_1117, DOI 10.1007/978-1-4419-1005-9_1117]
   Scalabrino S, 2019, IEEE T SOFTW ENG
   Scalabrino S, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1958
   Schacter DL., 2000, Memory systems of 1999
   Schellenberg EG, 2004, PSYCHOL SCI, V15, P511, DOI 10.1111/j.0956-7976.2004.00711.x
   Sharafi Z, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3434643
   SHNEIDERMAN B, 1979, INT J COMPUT INF SCI, V8, P219, DOI 10.1007/BF00977789
   Shorey C., 2018, Innov. Aging, V2, P505, DOI [10.1093/geroni/igy023.1878, DOI 10.1093/GERONI/IGY023.1878]
   Siegmund J, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P140, DOI 10.1145/3106237.3106268
   Siegmund J, 2014, EMPIR SOFTW ENG, V19, P1299, DOI 10.1007/s10664-013-9286-4
   Silva PHR, 2018, MULT SCLER RELAT DIS, V20, P136, DOI 10.1016/j.msard.2018.01.014
   Sloan Luke., 2015, Learn about Spearmans rank-order correlation coefficient in SPSS with data from the general social survey (2012)
   Song MK, 2015, HEMODIAL INT, V19, P90, DOI 10.1111/hdi.12202
   Spearman C, 1904, AM J PSYCHOL, V15, P72, DOI 10.2307/1412159
   Thota M. K., 2020, Int. J. ApplSci Eng., V17, P331, DOI [DOI 10.6703/IJASE.20201217(4).331, DOI 10.6703/IJASE.202012_17(4).331]
   Tiego J, 2018, FRONT PSYCHOL, V9, DOI 10.3389/fpsyg.2018.01339
   Tun PA, 2006, AGE AGEING, V35, P629, DOI 10.1093/ageing/afl095
   Wang H, 2004, P ANN M COGN SCI SOC
   Weaver B, 2013, CLIN NEUROPSYCHOL, V27, P1281, DOI 10.1080/13854046.2013.851741
   Weaver B, 2009, ACCIDENT ANAL PREV, V41, P76, DOI 10.1016/j.aap.2008.09.006
   Wei W, 2012, BRIT J EDUC PSYCHOL, V82, P157, DOI 10.1111/j.2044-8279.2011.02049.x
   Wong WE, 2014, IEEE T RELIAB, V63, P290, DOI 10.1109/TR.2013.2285319
   Wong WE, 1998, SOFTWARE PRACT EXPER, V28, P347, DOI 10.1002/(SICI)1097-024X(19980410)28:4<347::AID-SPE145>3.0.CO;2-L
   Woumans E, 2015, J EXP PSYCHOL LEARN, V41, P1579, DOI 10.1037/xlm0000107
   Zelazo PD, 2013, MONOGR SOC RES CHILD, V78, P16, DOI 10.1111/mono.12032
   Zhang HY, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1042, DOI 10.1109/ICSE.2013.6606654
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
NR 103
TC 0
Z9 0
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2023
VL 28
IS 5
AR 112
DI 10.1007/s10664-023-10316-9
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA Q1IE8
UT WOS:001055115000001
DA 2024-07-18
ER

PT J
AU Alazba, A
   Aljamaan, H
   Alshayeb, M
AF Alazba, Amal
   Aljamaan, Hamoud
   Alshayeb, Mohammad
TI Deep learning approaches for bad smell detection: a systematic
   literature review
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Review
DE Deep Learning; Bad Smell Detection; Systematic Literature Review
ID CODE CLONE DETECTION; TIME
AB ContextBad smells negatively impact software quality metrics such as understandability, reusability, and maintainability. Reduced costs and enhanced software quality can be achieved through accurate bad smell detection.ObjectiveThis review aims to summarize and synthesize the studies that used deep learning (DL) techniques for bad smell detection. Given the rapid growth of DL techniques, we believe that reviewing and analyzing the current body of knowledge would facilitate the development of new techniques and help researchers identify research gaps in this area.MethodWe followed a systematic approach to identify 67 studies on DL-based bad smell detection published until October 2021. We collected and analyzed quantitative and qualitative data to obtain our results.ResultsCode Clone was the most recurring smell. Supervised learning is the most adopted learning approach for DL-based bad smell detection. Convolutional neural network (CNN), Artificial neural network (ANN), Deep neural network (DNN), Long short-term memory (LSTM), Attention model, and recursive autoencoder (RAE) are the most popularly used DL models. DL models that efficiently detect bad smells, such as Tree-based CNN (TBCNN) and the Abstract syntax tree-based LSTM (AST-LSTM), tend to be specifically designed to encode features for bad smell detection.ConclusionMany factors can affect the detection performance of DL models. Although studies exist on DL-based bad smell detection, more works that use other DL models than those already studied are needed. In this SLR, we provide a summary of existing research and recommendations for further research directions on DL-based bad smell detection.
C1 [Alazba, Amal; Aljamaan, Hamoud; Alshayeb, Mohammad] King Fahd Univ Petr & Minerals, Informat & Comp Sci Dept, Dhahran 31261, Saudi Arabia.
   [Alazba, Amal] King Saud Univ, Dept Informat Syst, Riyadh 11362, Saudi Arabia.
   [Alshayeb, Mohammad] Interdisciplinary Res Ctr Intelligent Secure Syst, Dhahran 31261, Saudi Arabia.
C3 King Fahd University of Petroleum & Minerals; King Saud University
RP Alazba, A (corresponding author), King Fahd Univ Petr & Minerals, Informat & Comp Sci Dept, Dhahran 31261, Saudi Arabia.; Alazba, A (corresponding author), King Saud Univ, Dept Informat Syst, Riyadh 11362, Saudi Arabia.
EM g201901590@kfupm.edu.sa; hjamaan@kfupm.edu.sa; alshayeb@kfupm.edu.sa
RI Aljamaan, Hamoud/N-9756-2019; Alshayeb, Mohammad/B-5941-2015
OI Aljamaan, Hamoud/0000-0002-2146-9348; Alazba, Amal/0000-0002-9353-7872
CR AbuHassan A, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2320
   Al-Shaaby A, 2020, ARAB J SCI ENG, V45, P2341, DOI 10.1007/s13369-019-04311-w
   Alkharabsheh K, 2019, SOFTWARE QUAL J, V27, P1069, DOI 10.1007/s11219-018-9424-8
   Ardimento P, 2021, NEUROCOMPUTING, V463, P454, DOI 10.1016/j.neucom.2021.08.010
   Azeem MI, 2019, INFORM SOFTWARE TECH, V108, P115, DOI 10.1016/j.infsof.2018.12.009
   Barbez A, 2019, PROC IEEE INT CONF S, P114, DOI 10.1109/ICSME.2019.00021
   Bengio Y, 2013, IEEE T PATTERN ANAL, V35, P1798, DOI 10.1109/TPAMI.2013.50
   Brier G. W., 1950, MON WEATHER REV, V78, P1, DOI 10.1175/1520-0493(1950)078andlt;0001:VOFEITandgt;2.0.CO;2
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Büch L, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P95, DOI [10.1109/saner.2019.8668039, 10.1109/SANER.2019.8668039]
   Bui NDQ, 2021, PROC INT CONF SOFTW, P1186, DOI 10.1109/ICSE43902.2021.00109
   Caram FL, 2019, INT J SOFTW ENG KNOW, V29, P285, DOI 10.1142/S021819401950013X
   Chen L, 2019, CF '19 - PROCEEDINGS OF THE 16TH ACM INTERNATIONAL CONFERENCE ON COMPUTING FRONTIERS, P174, DOI 10.1145/3310273.3321560
   Chicco D, 2020, BMC GENOMICS, V21, DOI 10.1186/s12864-019-6413-7
   Chunrong Fang, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P516, DOI 10.1145/3395363.3397362
   Cruzes DS, 2011, INFORM SOFTWARE TECH, V53, P440, DOI 10.1016/j.infsof.2011.01.004
   Das AK, 2019, TENCON IEEE REGION, P2081, DOI [10.1109/tencon.2019.8929628, 10.1109/TENCON.2019.8929628]
   Devlin J, 2019, Arxiv, DOI arXiv:1810.04805
   Disli H., 2020, BILI IM TEKNOLOJILER, V13, P1, DOI [10.17671/gazibtd.541476, DOI 10.17671/GAZIBTD.541476]
   Dong WY, 2020, INT WIREL COMMUN, P1516, DOI 10.1109/IWCMC48107.2020.9148302
   Fakhoury S, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P602, DOI 10.1109/SANER.2018.8330265
   Feng CH, 2020, ASIA PAC SOFWR ENG, P238, DOI 10.1109/APSEC51365.2020.00032
   Fontana FA, 2016, EMPIR SOFTW ENG, V21, P1143, DOI 10.1007/s10664-015-9378-4
   Fowler M., 1999, Refactoring: Improving the Design of Existing Code
   Gao Y, 2019, PROC IEEE INT CONF S, P145, DOI 10.1109/ICSME.2019.00025
   Goodfellow I, 2016, ADAPT COMPUT MACH LE, P1
   Guggulothu T, 2020, SOFTWARE QUAL J, V28, P1063, DOI 10.1007/s11219-020-09498-y
   Guo CK, 2020, IEEE ACCESS, V8, P24948, DOI 10.1109/ACCESS.2020.2966532
   Guo XL, 2019, 11TH ASIA-PACIFIC SYMPOSIUM ON INTERNETWARE (INTERNETWARE 2019), DOI 10.1145/3361242.3361257
   Hadj-Kacem M, 2019, COMM COM INF SC, V1142, P296, DOI 10.1007/978-3-030-36808-1_32
   Hadj-Kacem M, 2019, IEEE IJCNN
   Hadj-Kacem M, 2018, PROCEEDINGS OF THE 13TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL APPROACHES TO SOFTWARE ENGINEERING, P137, DOI 10.5220/0006709801370146
   Hahne F, 2008, USE R, P137, DOI 10.1007/978-0-387-77240-0_10
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Hamdy A., 2020, J. Theor. Appl. Inf. Technol., V98, P2684
   Harzing A.W., 2007, Publish or Perish
   He H, 2013, IMBALANCED LEARNING: FOUNDATIONS, ALGORITHMS, AND APPLICATIONS, P1, DOI 10.1002/9781118646106
   He HB, 2009, IEEE T KNOWL DATA EN, V21, P1263, DOI 10.1109/TKDE.2008.239
   Hosseini S, 2019, IEEE T SOFTWARE ENG, V45, P111, DOI 10.1109/TSE.2017.2770124
   Hua W, 2021, IEEE T RELIAB, V70, P304, DOI 10.1109/TR.2020.3001918
   Jaiswal A, 2021, TECHNOLOGIES, V9, DOI 10.3390/technologies9010002
   Ji XJ, 2021, INT J SOFTW ENG KNOW, V31, P837, DOI 10.1142/S021819402150025X
   Jiang LX, 2007, PROC INT CONF SOFTW, P96
   Jo YB, 2021, APPL SCI-BASEL, V11, DOI 10.3390/app11146613
   Karabulut EM, 2012, PROC TECH, V1, P323, DOI 10.1016/j.protcy.2012.02.068
   Kaur Amandeep, 2021, International Journal of Open Source Software and Processes, V12, P1, DOI 10.4018/IJOSSP.2021070102
   Kaur A, 2020, REV MACHINE LEARNING, DOI [10.2174/2352096513999200922125839, DOI 10.2174/2352096513999200922125839]
   Khan A, 2021, Arxiv, DOI arXiv:1802.00938
   Kim DK., 2019, INT J ELECT COMPUT E, V9, P3804, DOI 10.11591/ijece.v9i5.pp3804-3812
   Kim DK, 2020, IEICE T INF SYST, VE103D, DOI 10.1587/transinf.2019EDL8195
   Kitchenham B., 2004, PROCEDURES PERFORMIN, V33, P1
   Kitchenham B., 2007, 2007001 EBSE
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kotsiantis SB, 2007, INFORM-J COMPUT INFO, V31, P249
   Lacerda G, 2020, J SYST SOFTWARE, V167, DOI 10.1016/j.jss.2020.110610
   Le Q. V., 2011, P 28 INT C INT C MAC, P265
   Lei MG, 2022, J SYST SOFTWARE, V184, DOI 10.1016/j.jss.2021.111141
   Lewowski T, 2022, Code Smells Detection Using Artificial Intelligence Techniques: A Business-Driven Systematic Review, V3, P285, DOI DOI 10.1007/978-3-030-77916-0_12
   Li BZ, 2020, 2020 IEEE 20TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY, AND SECURITY (QRS 2020), P382, DOI 10.1109/QRS51102.2020.00057
   Li GJ, 2020, 2020 INTERNATIONAL CONFERENCE ON INTELLIGENT COMPUTING AND HUMAN-COMPUTER INTERACTION (ICHCI 2020), P337, DOI 10.1109/ICHCI51889.2020.00078
   Li LQ, 2017, PROC IEEE INT CONF S, P249, DOI 10.1109/ICSME.2017.46
   Li YJ, 2017, Arxiv, DOI arXiv:1511.05493
   Liang HL, 2021, IEEE IJCNN, DOI 10.1109/IJCNN52387.2021.9534099
   Lim TS, 2000, MACH LEARN, V40, P203, DOI 10.1023/A:1007608224229
   Liu H, 2021, IEEE T SOFTWARE ENG, V47, P1811, DOI 10.1109/TSE.2019.2936376
   Liu X., 2020, arXiv
   Marinescu C., 2005, IEEE INT C SOFTW MAI
   Mayvan BB, 2020, J SOFTW-EVOL PROC, V32, DOI 10.1002/smr.2255
   Mehrotra N, 2022, IEEE T SOFTWARE ENG, V48, P3771, DOI 10.1109/TSE.2021.3105556
   Meng Y, 2020, COMPLEXITY, V2020, DOI 10.1155/2020/5027198
   Menshawy R. S., 2021, 2021 INT MOB INT UB, P78
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Mostaeen G, 2020, J SYST SOFTWARE, V169, DOI 10.1016/j.jss.2020.110686
   Mumtaz H, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.2154
   Nafi KW, 2020, J SYST SOFTWARE, V162, DOI 10.1016/j.jss.2019.110491
   Nafi KW, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1026, DOI 10.1109/ASE.2019.00099
   Nair A., 2020, P 14 ACM IEEE INT S, P1, DOI DOI 10.1145/3382494.3410675
   Ohri K, 2021, KNOWL-BASED SYST, V224, DOI 10.1016/j.knosys.2021.107090
   Olbrich S. M., 2010, 2010 IEEE 26th International Conference on Software Maintenance (ICSM 2010), DOI 10.1109/ICSM.2010.5609564
   Palomba F, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P482, DOI 10.1109/MSR.2015.69
   Patnaik Archana, 2021, International Journal of Open Source Software and Processes, V12, P21, DOI 10.4018/IJOSSP.2021040102
   Pecorelli F, 2020, J SYST SOFTWARE, V169, DOI 10.1016/j.jss.2020.110693
   Perez Daniel, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P518, DOI 10.1109/MSR.2019.00078
   Pérez J, 2013, PROC IEEE INT CONF S, P572, DOI 10.1109/ICSM.2013.98
   Rasmussen CE, 2001, ADV NEUR IN, V13, P294
   Ren SJ, 2021, P INT COMP SOFTW APP, P864, DOI 10.1109/COMPSAC51774.2021.00119
   Sabir F, 2019, SOFTWARE PRACT EXPER, V49, P3, DOI 10.1002/spe.2639
   Saini V, 2019, PROC INT CONF SOFTW, P49, DOI 10.1109/ICSE.2019.00023
   Saini V, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P354, DOI 10.1145/3236024.3236026
   Sajnani H, 2016, PROC INT CONF SOFTW, P1157, DOI 10.1145/2884781.2884877
   Sammut C., 2011, Encyclopedia of machine learning, DOI DOI 10.1007/978-0-387-30164-8
   Sarker Iqbal H, 2021, SN Comput Sci, V2, P420, DOI 10.1007/s42979-021-00815-1
   Sharma T, 2021, J SYST SOFTWARE, V176, DOI 10.1016/j.jss.2021.110936
   Sheneamer A, 2021, IEEE ACCESS, V9, P84828, DOI 10.1109/ACCESS.2021.3079156
   Sheneamer A, 2018, 2018 17TH IEEE INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA), P701, DOI 10.1109/ICMLA.2018.00111
   Sheneamer A, 2017, 2017 16TH IEEE INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA), P981, DOI 10.1109/ICMLA.2017.00-25
   Sidhu Brahmaleen Kaur, 2022, International Journal of Computers and Applications, V44, P166, DOI 10.1080/1206212X.2020.1711616
   Storey MA, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P928, DOI 10.1145/2950290.2983989
   Suryanarayana G., 2015, Refactoring for Software Design Smells, P9, DOI 10.1016/B978-0-12-801397-7.00002-3
   Sutskever I., 2013, INT C MACHINE LEARNI, P1139
   Svajlenko J, 2014, PROC IEEE INT CONF S, P476, DOI 10.1109/ICSME.2014.77
   Tantithamthavorn C, 2019, IEEE T SOFTWARE ENG, V45, P683, DOI 10.1109/TSE.2018.2794977
   Tsantalis N, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P329
   Tufano M, 2018, IEEE WORK CONF MIN S, P542, DOI 10.1145/3196398.3196431
   Ullah F, 2021, INT J MACH LEARN CYB, V12, P3115, DOI 10.1007/s13042-020-01246-9
   Wang C, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P374, DOI 10.1145/3293882.3338996
   Wang HZ, 2020, IEEE INT SYMP PARAL, P448, DOI 10.1109/ISPA-BDCloud-SocialCom-SustainCom51426.2020.00082
   Wang WH, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3409331
   Wang WH, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P261, DOI [10.1109/SANER48275.2020.9054857, 10.1109/saner48275.2020.9054857]
   Wei HH, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P2840
   Wei HH, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P3034
   Wen JF, 2012, INFORM SOFTWARE TECH, V54, P41, DOI 10.1016/j.infsof.2011.09.002
   White M, 2016, IEEE INT CONF AUTOM, P87, DOI 10.1145/2970276.2970326
   Wu Y, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON INFORMATION COMMUNICATION AND SOFTWARE ENGINEERING (ICICSE 2021), P47, DOI 10.1109/ICICSE52190.2021.9404110
   Wu YM, 2020, IEEE INT CONF AUTOM, P821, DOI 10.1145/3324884.3416562
   Xie CL, 2020, APPL SCI-BASEL, V10, DOI 10.3390/app10217519
   Xu W, Multi-granularity code smell detection using deep learning method based on abstract syntax tree, DOI [10.18293/SEKE2021-014, DOI 10.18293/SEKE2021-014]
   Xue HF, 2018, FEAST'18: PROCEEDINGS OF THE 2018 WORKSHOP ON FORMING AN ECOSYSTEM AROUND SOFTWARE TRANSFORMATION, P27, DOI 10.1145/3273045.3273047
   Yamashita A, 2013, J SYST SOFTWARE, V86, P2639, DOI 10.1016/j.jss.2013.05.007
   Yin X, 2021, P INT COMP SOFTW APP, P942, DOI 10.1109/COMPSAC51774.2021.00127
   Yu H, 2019, INT C PROGRAM COMPRE, P70, DOI 10.1109/ICPC.2019.00021
   Yuan Yuan, 2020, 2019 6th International Conference on Dependable Systems and Their Applications (DSA). Proceedings, P13, DOI 10.1109/DSA.2019.00012
   Zeng J, 2019, IEEE ACCESS, V7, P125062, DOI 10.1109/ACCESS.2019.2938825
   Zhang J, 2019, PROC INT CONF SOFTW, P783, DOI 10.1109/ICSE.2019.00086
   Zhang JF, 2021, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, ACL-IJCNLP 2021, P4454
   Zhang LX, 2020, INT WIREL COMMUN, P1800, DOI 10.1109/IWCMC48107.2020.9148382
   Zhang M, 2011, J SOFTW MAINT EVOL-R, V23, P179, DOI 10.1002/smr.521
   Zhang YZ, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON INFORMATION COMMUNICATION AND SOFTWARE ENGINEERING (ICICSE 2021), P61, DOI 10.1109/ICICSE52190.2021.9404141
   Zhao G, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P141, DOI 10.1145/3236024.3236068
   Zhou X, 2016, ASIA PAC SOFWR ENG, P153, DOI [10.1109/APSEC.2016.031, 10.1109/APSEC.2016.62]
NR 130
TC 9
Z9 9
U1 3
U2 14
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAY
PY 2023
VL 28
IS 3
AR 77
DI 10.1007/s10664-023-10312-z
PG 73
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA G0ME3
UT WOS:000986190100001
DA 2024-07-18
ER

PT J
AU Russo, D
   Hanel, PHP
   Altnickel, S
   van Berkel, N
AF Russo, Daniel
   Hanel, Paul H. P.
   Altnickel, Seraphina
   van Berkel, Niels
TI Satisfaction and performance of software developers during enforced work
   from home in the COVID-19 pandemic
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Pandemic; COVID-19; Productivity; Well-being; Longitudinal study; Remote
   work; Working from home
ID SELF-DETERMINATION THEORY; BOREDOM PRONENESS; BALANCED MEASURE; STRESS;
   SCALE; PRODUCTIVITY; PERCEPTIONS; PERSONALITY; BEHAVIOR; ORGANIZATIONS
AB Following the onset of the COVID-19 pandemic and subsequent lockdowns, the daily lives of software engineers were heavily disrupted as they were abruptly forced to work remotely from home. To better understand and contrast typical working days in this new reality with work in pre-pandemic times, we conducted one exploratory (N = 192) and one confirmatory study (N = 290) with software engineers recruited remotely. Specifically, we build on self-determination theory to evaluate whether and how specific activities are associated with software engineers' satisfaction and productivity. To explore the subject domain, we first ran a two-wave longitudinal study. We found that the time software engineers spent on specific activities (e.g., coding, bugfixing, helping others) while working from home was similar to pre-pandemic times. Also, the amount of time developers spent on each activity was unrelated to their general well-being, perceived productivity, and other variables such as basic needs. Our confirmatory study found that activity-specific variables (e.g., how much autonomy software engineers had during coding) do predict activity satisfaction and productivity but not by activity-independent variables such as general resilience or a good work-life balance. Interestingly, we found that satisfaction and autonomy were significantly higher when software engineers were helping others and lower when they were bugfixing. Finally, we discuss implications for software engineers, management, and researchers. In particular, active company policies to support developers' need for autonomy, relatedness, and competence appear particularly effective in a WFH context.
C1 [Russo, Daniel] Aalborg Univ, Dept Comp Sci, Copenhagen, Denmark.
   [Hanel, Paul H. P.] Univ Essex, Dept Psychol, Colchester, England.
   [Altnickel, Seraphina] Think Distributed, Berlin, Germany.
   [van Berkel, Niels] Aalborg Univ, Dept Comp Sci, Aalborg, Denmark.
C3 Aalborg University; University of Essex; Aalborg University
RP Russo, D (corresponding author), Aalborg Univ, Dept Comp Sci, Copenhagen, Denmark.
EM daniel.russo@cs.aau.dk
RI Russo, Daniel/O-3002-2019; Hanel, Paul/AAB-3287-2020
OI Russo, Daniel/0000-0001-7253-101X; Hanel, Paul/0000-0002-3225-1395
FU Carlsberg Foundation [CF20-0322]
FX AcknowledgementsThis work was supported by the Carlsberg Foundation
   under grant agreement number CF20-0322 (PanTra - Pandemic
   Transformation).
CR Allen JA, 2012, MANAG RES REV, V35, P405, DOI 10.1108/01409171211222331
   Anderson AJ, 2015, EUR J WORK ORGAN PSY, V24, P882, DOI 10.1080/1359432X.2014.966086
   [Anonymous], 1994, Statistics
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Aten J, 2020, REMOTE WORKING ISNT
   Bai Y, 2004, PSYCHIAT SERV, V55, P1055, DOI 10.1176/appi.ps.55.9.1055
   Bao LF, 2021, Arxiv, DOI [arXiv:2005.13167, 10.48550/arXiv.2005.13167]
   Barrero J. M., 2021, Why working from home will stick (No. w28731), DOI DOI 10.3386/W28731
   Baruch Y, 2000, NEW TECH WORK EMPLOY, V15, P34, DOI 10.1111/1468-005X.00063
   Bates D, 2015, J STAT SOFTW, V67, P1, DOI 10.18637/jss.v067.i01
   Bhui K, 2016, BJPSYCH BULL, V40, P318, DOI 10.1192/pb.bp.115.050823
   Bloom N, 2015, Q J ECON, V130, P165, DOI 10.1093/qje/qju032
   Brauer M, 2018, PSYCHOL METHODS, V23, P389, DOI 10.1037/met0000159
   Brooks SK, 2020, LANCET, V395, P912, DOI 10.1016/S0140-6736(20)30460-8
   Buchanan KE, 2010, J SOC PSYCHOL, V150, P235, DOI 10.1080/00224540903365554
   Buffer, 2020, The 2020 state of remote work
   Butler J, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2021), P362, DOI 10.1109/ICSE-SEIP52600.2021.00047
   Byerly H, 2018, FRONT ECOL ENVIRON, V16, P159, DOI 10.1002/fee.1777
   Caleo G, 2018, BMC PUBLIC HEALTH, V18, DOI 10.1186/s12889-018-5158-6
   Cantarero K, 2021, SOC PSYCHOL PERS SCI, V12, P821, DOI 10.1177/1948550620942708
   Carli LL, 2020, GEND MANAG, V35, P647, DOI 10.1108/GM-07-2020-0236
   Cascio WF, 2000, ACAD MANAGE EXEC, V14, P81, DOI 10.5465/AME.2000.4468068
   Chyi T, 2018, PEERJ, V6, DOI 10.7717/peerj.4213
   Clifton JDW, 2020, PSYCHOL METHODS, V25, P259, DOI 10.1037/met0000236
   COHEN J, 1992, PSYCHOL BULL, V112, P155, DOI 10.1037/0033-2909.112.1.155
   COHEN S, 1983, J HEALTH SOC BEHAV, V24, P385, DOI 10.2307/2136404
   Connolly M, 2013, J HAPPINESS STUD, V14, P457, DOI 10.1007/s10902-012-9338-2
   Cruz S, 2015, COMPUT HUM BEHAV, V46, P94, DOI 10.1016/j.chb.2014.12.008
   Cucolas AA, 2023, J SYST SOFTWARE, V197, DOI 10.1016/j.jss.2022.111562
   Dababneh AJ, 2001, ERGONOMICS, V44, P164, DOI 10.1080/001401301750048196
   Danilova A, 2021, PROC INT CONF SOFTW, P537, DOI 10.1109/ICSE43902.2021.00057
   DAVIDSON AR, 1979, J PERS SOC PSYCHOL, V37, P1364, DOI 10.1037/0022-3514.37.8.1364
   Deci EL, 2017, ANNU REV ORGAN PSYCH, V4, P19, DOI 10.1146/annurev-orgpsych-032516-113108
   Deole SS., 2021, 791 GLO
   Deshpande Advait, 2016, INT C INFORM SYSTEMS
   Diener E, 2009, SOC INDIC RES SER, V37, P1, DOI 10.1007/978-90-481-2350-6
   DIENER E, 1985, J PERS ASSESS, V49, P71, DOI 10.1207/s15327752jpa4901_13
   Edwards JR, 2009, J APPL PSYCHOL, V94, P654, DOI 10.1037/a0014891
   EPSTEIN S, 1979, J PERS SOC PSYCHOL, V37, P1097, DOI 10.1037/0022-3514.37.7.1097
   FARMER R, 1986, J PERS ASSESS, V50, P4, DOI 10.1207/s15327752jpa5001_2
   Faul F, 2009, BEHAV RES METHODS, V41, P1149, DOI 10.3758/BRM.41.4.1149
   Felstead A, 2017, NEW TECH WORK EMPLOY, V32, P195, DOI 10.1111/ntwe.12097
   Ford D, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3487567
   Ford D, 2019, 2019 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON GENDER EQUALITY IN SOFTWARE ENGINEERING (GE 2019), P9, DOI 10.1109/GE.2019.00011
   Forsgren N., 2020, Octoverse Spotlight: An Analysis of Developer Productivity, Work Cadence, and Collaboration in the Early Days of COVID-19
   Gagné M, 2005, J ORGAN BEHAV, V26, P331, DOI 10.1002/job.322
   Gallup, 2020, IS WORK REM EFF GALL
   Gebauer JE, 2017, J PERS SOC PSYCHOL, V113, pE18, DOI 10.1037/pspp0000104
   Gibbs M., 2021, SSRN ELECT J
   Gignac GE, 2016, PERS INDIV DIFFER, V102, P74, DOI 10.1016/j.paid.2016.06.069
   Graziotin D, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING CHASE 2015, P123, DOI 10.1109/CHASE.2015.23
   Graziotin D, 2014, PEERJ, V2, DOI 10.7717/peerj.289
   Guo H, 2001, SECOND ASIA-PACIFIC CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P331, DOI 10.1109/APAQS.2001.990038
   Hadden J, 2020, 19 MAJOR CO HAVE ANN
   Hair JF, 2010, Multivariate data analysis
   Hanel PHP, 2020, NAT COMMUN, V11, DOI 10.1038/s41467-020-18831-9
   Hanel PHP, 2018, FRONT PSYCHOL, V9, DOI 10.3389/fpsyg.2018.00849
   Hawryluck L, 2004, EMERG INFECT DIS, V10, P1206, DOI 10.3201/eid1007.030703
   Hayati K, 2012, PROCD SOC BEHV, V65, P272, DOI 10.1016/j.sbspro.2012.11.122
   He J, 2017, EUR J PERSONALITY, V31, P642, DOI 10.1002/per.2132
   Herbsleb JD, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P188, DOI 10.1109/FOSE.2007.11
   Herbsleb JD, 2001, IEEE SOFTWARE, V18, P16, DOI 10.1109/52.914732
   Higa K, 2000, IEEE T ENG MANAGE, V47, P163, DOI 10.1109/17.846784
   Hood AC, 2017, J BUS PSYCHOL, V32, P73, DOI 10.1007/s10869-016-9436-y
   Hung WH, 2015, TELEMAT INFORM, V32, P143, DOI 10.1016/j.tele.2014.06.002
   James Peter, 2014, Information Management & Computer Security, DOI DOI 10.1108/IMCS-07-2013-0052
   Judd CM, 2012, J PERS SOC PSYCHOL, V103, P54, DOI 10.1037/a0028347
   Kajonius PJ, 2015, PERS INDIV DIFFER, V77, P173, DOI 10.1016/j.paid.2014.12.055
   Karademas EC, 2007, PERS INDIV DIFFER, V43, P277, DOI 10.1016/j.paid.2006.11.031
   Kim Y, 2015, DISASTER MED PUBLIC, V9, P145, DOI 10.1017/dmp.2014.87
   Kitagawa Ritsu, 2021, Technical Report
   Ko Amy J., 2019, Rethinking Productivity in Software Engineering, P21
   Lamarche V., 2020, Social Psychological Bulletin, V15, P1, DOI [DOI 10.32872/SPB.4409, 10.32872/SPB.4409]
   Larson Reed., 2014, The Experience Sampling Method, P21, DOI [DOI 10.1007/978-94-017-9088-8_2, 10.1007/978-94-017-9088-8_2]
   Lee EH, 2012, ASIAN NURS RES, V6, P121, DOI 10.1016/j.anr.2012.08.004
   Lee S, 2005, SOC SCI MED, V61, P2038, DOI 10.1016/j.socscimed.2005.04.010
   Lenberg P, 2015, J SYST SOFTWARE, V107, P15, DOI 10.1016/j.jss.2015.04.084
   Louis KS, 2016, EDUC ADMIN QUART, V52, P310, DOI 10.1177/0013161X15627678
   Lunn PD., 2020, J Behav Public Adm, V3, P1, DOI [DOI 10.30636/JBPA.31.147, 10.30636/jbpa.31.147]
   Machado LS, 2021, CURR CONTENTS
   Mackey J., 2014, CONSCIOUS CAPITALISM
   Marjanovic Z, 2007, INT J NURS STUD, V44, P991, DOI 10.1016/j.ijnurstu.2006.02.012
   Martela F, 2018, J HAPPINESS STUD, V19, P1261, DOI 10.1007/s10902-017-9869-7
   Mazzina A, 2017, WHAT IT MEANS BE REM
   McCalister KT, 2006, AM J HEALTH PROMOT, V20, P183, DOI 10.4278/0890-1171-20.3.183
   McDonald RP, 1999, TEST THEORY UNIFIED
   Mesaglio M, 2020, 4 ACTIONS BE STRONG
   Meyer AN, 2021, IEEE T SOFTWARE ENG, V47, P863, DOI 10.1109/TSE.2019.2904957
   Meyer AN, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P19, DOI 10.1145/2635868.2635892
   Miller C, 2021, PROC INT CONF SOFTW, P624, DOI 10.1109/ICSE43902.2021.00064
   Moors A, 2006, PSYCHOL BULL, V132, P297, DOI 10.1037/0033-2909.132.2.297
   Morikawa Masayuki, 2020, Technical Report
   Neubauer AB, 2016, J INDIVID DIFFER, V37, P56, DOI 10.1027/1614-0001/a000188
   OLSON MH, 1983, COMMUN ACM, V26, P182, DOI 10.1145/358061.358068
   Onyemah V, 2008, J PERS SELL SALES M, V28, P299, DOI 10.2753/PSS0885-3134280306
   Owl Labs, 2019, STAT REM WORK 2019 R
   Palan S, 2018, J BEHAV EXP FINANC, V17, P22, DOI 10.1016/j.jbef.2017.12.004
   Patil I, 2021, VISUALIZATIONS STAT
   Pavot W, 2009, SOC INDIC RES SER, V39, P101, DOI 10.1007/978-90-481-2354-4_5
   Pérez MP, 2002, TECHNOVATION, V22, P775, DOI 10.1016/s0166-4972(01)00069-4
   Pounder C, 1998, COMPUT SECUR, V17, P27, DOI 10.1016/S0167-4048(97)80246-5
   Prati G, 2011, RISK ANAL, V31, P645, DOI 10.1111/j.1539-6924.2010.01529.x
   Qualtrics, 2022, QUALTRICS SAMPLE ENG
   Ralph P, 2021, Arxiv, DOI arXiv:2010.03525
   Ralph P, 2020, EMPIR SOFTW ENG, V25, P4927, DOI 10.1007/s10664-020-09875-y
   RedHat, 2015, RED HAT NAMED TOP 10
   Reynolds DL, 2008, EPIDEMIOL INFECT, V136, P997, DOI 10.1017/S0950268807009156
   Richardson I, 2012, INFORM SOFTWARE TECH, V54, P1175, DOI 10.1016/j.infsof.2012.05.002
   Russo D, 2022, arXiv
   Russo D, 2021, Arxiv, DOI arXiv:2111.10349
   Russo D, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10106-1
   Russo D, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2021), P364, DOI 10.1109/ICSE-SEIP52600.2021.00048
   Russo D, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09945-9
   Russo D, 2022, IEEE T SOFTWARE ENG, V48, P819, DOI 10.1109/TSE.2020.3003413
   Ryan RM, 2000, AM PSYCHOL, V55, P68, DOI 10.1037/0003-066X.55.1.68
   Sadowski C., 2019, Rethinking productivity in software engineering, P39, DOI DOI 10.1007/978-1-4842-4221-6
   Sánchez-Gordón M, 2019, INFORM SOFTWARE TECH, V115, P23, DOI 10.1016/j.infsof.2019.08.002
   Saroglou V, 2004, PERS INDIV DIFFER, V37, P721, DOI 10.1016/j.paid.2003.10.005
   Senney GT, 2019, LABOUR ECON, V57, P23, DOI 10.1016/j.labeco.2019.01.003
   Sharma GG, 2020, J SYST SOFTWARE, V159, DOI 10.1016/j.jss.2019.110442
   Sheldon KM, 2012, MOTIV EMOTION, V36, P439, DOI 10.1007/s11031-012-9279-4
   Skimina E, 2019, FRONT PSYCHOL, V10, DOI 10.3389/fpsyg.2019.00281
   Smite D, 2023, IEEE SOFTWARE, V40, P34, DOI 10.1109/MS.2022.3230289
   Smite D, 2022, J SYST SOFTWARE, V186, DOI 10.1016/j.jss.2021.111197
   Smite D, 2010, EMPIR SOFTW ENG, V15, P91, DOI 10.1007/s10664-009-9123-y
   Smith BW, 2008, INT J BEHAV MED, V15, P194, DOI 10.1080/10705500802222972
   Sprang G, 2013, DISASTER MED PUBLIC, V7, P105, DOI 10.1017/dmp.2013.22
   Stol KJ, 2015, IEEE SOFTWARE, V32, P60, DOI 10.1109/MS.2014.77
   Struk AA, 2017, ASSESSMENT, V24, P346, DOI 10.1177/1073191115609996
   Tag B, 2022, COMPUT HUM BEHAV REP, V6, DOI 10.1016/j.chbr.2022.100192
   Tam KYY, 2021, J PERS, V89, P831, DOI 10.1111/jopy.12618
   van Berkel N, 2020, INT J HUM-COMPUT ST, V137, DOI 10.1016/j.ijhcs.2020.102396
   van Berkel N, 2019, CHI 2019: PROCEEDINGS OF THE 2019 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, DOI 10.1145/3290605.3300281
   Van den Broeck A, 2010, J OCCUP ORGAN PSYCH, V83, P981, DOI 10.1348/096317909X481382
   Vega RP, 2015, J BUS PSYCHOL, V30, P313, DOI 10.1007/s10869-014-9359-4
   Venema T, 2021, A Handbook of Theories on Designing Alignment Between People and the Office Environment, P222
   Verwijs C, 2023, CURR CONTENTS
   Waber BN, 2010, PRODUCTIVITY COFFEE, DOI [10.2139/ssrn.1586375, DOI 10.2139/SSRN.1586375]
   Wagner S., 2018, A systematic review of productivity factors in software development
   Walton S, 2020, TECH REP
   Weinstein N, 2011, STRESS HEALTH, V27, P4, DOI 10.1002/smi.1368
   Wickham H, 2009, USE R, P1, DOI 10.1007/978-0-387-98141-3_1
   Wilken JA, 2017, PREHOSP DISASTER MED, V32, P673, DOI [10.1017/s1049023x17006720, 10.1017/S1049023X17006720]
   Wolf LJ, 2021, EUR REV SOC PSYCHOL, V32, P123, DOI 10.1080/10463283.2020.1810403
   Wood J, 2014, BMJ-BRIT MED J, V348, DOI 10.1136/bmj.g2215
   Yadav A, 2019, INFORM SOFTWARE TECH, V112, P1, DOI 10.1016/j.infsof.2019.03.014
   Yang LQ, 2022, NAT HUM BEHAV, V6, P43, DOI 10.1038/s41562-021-01196-4
   Yu S, 2018, J HAPPINESS STUD, V19, P1863, DOI 10.1007/s10902-017-9898-2
NR 148
TC 1
Z9 1
U1 4
U2 17
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2023
VL 28
IS 2
AR 53
DI 10.1007/s10664-023-10293-z
PG 48
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 9U5PY
UT WOS:000947763700001
PM 36915711
OA Green Published, Green Accepted, hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Al Alamin, MA
   Uddin, G
   Malakar, S
   Afroz, S
   Haider, T
   Iqbal, A
AF Al Alamin, Md Abdullah
   Uddin, Gias
   Malakar, Sanjay
   Afroz, Sadia
   Haider, Tameem
   Iqbal, Anindya
TI Developer discussion topics on the adoption and barriers of low code
   software development platforms
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Low-code software development; Empirical study; Stack overflow
ID DISCUSSIONS; DESIGN
AB Low-code software development (LCSD) is an emerging approach to democratize application development for software practitioners from diverse backgrounds. LCSD platforms promote rapid application development with a drag-and-drop interface and minimal programming by hand. As it is a relatively new paradigm, it is vital to study developers' difficulties when adopting LCSD platforms. Software engineers frequently use the online developer forum Stack Overflow (SO) to seek assistance with technical issues. We observe a growing body of LCSD-related posts in SO. This paper presents an empirical study of around 33K SO posts (questions + accepted answers) containing discussions of 38 popular LCSD platforms. We use Topic Modeling to determine the topics discussed in those posts. Additionally, we examine how these topics are spread across the various phases of the agile software development life cycle (SDLC) and which part of LCSD is the most popular and challenging. Our study offers several interesting findings. First, we find 40 LCSD topics that we group into five categories: Application Customization, Database and File Management, Platform Adoption, Platform Maintenance, and Third-party API Integration. Second, while the Application Customization (30%) and Data Storage (25%) topic categories are the most common, inquiries relating to several other categories (e.g., the Platform Adoption topic category) have gained considerable attention in recent years. Third, all topic categories are evolving rapidly, especially during the Covid-19 pandemic. Fourth, the How-type questions are prevalent in all topics, but the What-type and Why-type (i.e., detail information for clarification) questions are more prevalent in the Platform Adoption and Platform Maintenance category. Fifth, LCSD practitioners find topics related to Platform Query the most popular, while topics related to Message Queue and Library Dependency Management as the most difficult to get accepted answers to. Sixth, the Why-type and What-type questions and Agile Maintenance and Deployment phase are the most challenging among practitioners. The findings of this study have implications for all three LCSD stakeholders: LCSD platform vendors, LCSD developers/practitioners, Researchers, and Educators. Researchers and LCSD platform vendors can collaborate to improve different aspects of LCSD, such as better tutorial-based documentation, testing, and DevOps support.
C1 [Al Alamin, Md Abdullah; Uddin, Gias] Univ Calgary, DISA Lab, Calgary, AB, Canada.
   [Malakar, Sanjay; Afroz, Sadia; Haider, Tameem; Iqbal, Anindya] Bangladesh Univ Engn & Technol, Dhaka, Bangladesh.
C3 University of Calgary; Bangladesh University of Engineering & Technology
   (BUET)
RP Al Alamin, MA (corresponding author), Univ Calgary, DISA Lab, Calgary, AB, Canada.
EM mdabdullahal.alamin@ucalgary.ca; gias.uddin@ucalgary.ca
OI Alamin, Md Abdullah Al/0000-0002-7136-5045
CR Abdellatif A, 2020, IEEE WORK CONF MIN S, P174, DOI 10.1145/3379597.3387472
   Adrian Benjamin, 2020, Advances in Human Factors and Systems Interaction. Proceedings of the AHFE 2020 Virtual Conference on Human Factors and Systems Interaction. Advances in Intelligent Systems and Computing (AISC 1207), P45, DOI 10.1007/978-3-030-51369-6_7
   Agrawal A, 2018, INFORM SOFTWARE TECH, V98, P74, DOI 10.1016/j.infsof.2018.02.005
   Ahmed S, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3239524
   Akiki PA, 2020, SCI COMPUT PROGRAM, V200, DOI 10.1016/j.scico.2020.102534
   Al Alamin MA, 2021, IEEE WORK CONF MIN S, P46, DOI 10.1109/MSR52588.2021.00018
   Alonso A N, 2020, ARXIV
   Alsaadi HA, 2021, ROM J INF TECH AUT C, V31, P123, DOI 10.33436/v31i3y202110
   [Anonymous], 2022, MICROSOFT POWER APPS
   [Anonymous], 2022, ZOHO CREATOR PLATFOR
   [Anonymous], 2022, VINYL PLATFORM OVERV
   [Anonymous], 2022, AMAZON HONEYCODE PLA
   [Anonymous], 2022, QUICKBASE PLATFORM O
   [Anonymous], 2022, AWS AMPLIFY STUDIO O
   [Anonymous], 2022, BEST LOW CODE DEV PL
   [Anonymous], 2021, GOOGLE APP MAKER WIL
   [Anonymous], 2022, SALESFORCE PLATFORM
   [Anonymous], 2022, IBM LOTUS SOFTWARE
   [Anonymous], 2020, GOOGLE APP MAKER PLA
   [Anonymous], 2022, PROGRAMMING GAINS SP
   [Anonymous], 2022, LOW CODE DEV PLATFOR
   [Anonymous], 2022, MANY LOW CODE NO COD
   [Anonymous], 2022, ORACLE APEX PLATFORM
   [Anonymous], 2021, MICROSOFT POWER FX
   [Anonymous], 2022, MENDIX PLATFORM OVER
   [Anonymous], 2006, CHI
   [Anonymous], 2022, ONEBLINK PLATFORM OV
   [Anonymous], 2022, APPIAN PLATFORM OVER
   App Engine, 2021, FULL MAN SERV PLATF
   AppSheet, 2021, LOW COD APPL DEV
   Arun R, 2010, LECT NOTES ARTIF INT, V6118, P391
   Asaduzzaman M, 2013, IEEE WORK CONF MIN S, P97, DOI 10.1109/MSR.2013.6624015
   Asuncion HU, 2010, 2010 ACM IEEE 32 INT, V1, P95
   Bagherzadeh M, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P432, DOI 10.1145/3338906.3338939
   Bajaj K, 2014, P 11 WORK C MIN SOFT, P112
   Bandeira Alan, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P255, DOI 10.1109/MSR.2019.00051
   Barua A, 2014, EMPIR SOFTW ENG, V19, P619, DOI 10.1007/s10664-012-9231-y
   Basciani F., 2014, 2 INT WORKSH MOD DRI, V1242, P66
   Basili V. R., 1975, IEEE Transactions on Software Engineering, VSE-1, P390, DOI 10.1109/TSE.1975.6312870
   Bavota G, 2014, IEEE T SOFTWARE ENG, V40, P671, DOI 10.1109/TSE.2013.60
   Bayer J, 2006, 13TH ANNUAL IEEE INTERNATIONAL SYMPOSIUM AND WORKSHOP ON ENGINEERING OF COMPUTER BASED SYSTEMS, PROCEEDINGS, P269, DOI 10.1109/ECBS.2006.18
   Beynon-Davies P, 1999, EUR J INFORM SYST, V8, P211, DOI 10.1057/palgrave.ejis.3000325
   Bhat JM, 2006, IEEE SOFTWARE, V23, P38, DOI 10.1109/MS.2006.137
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Botterweck G., 2006, Models in Software Engineering. Workshops and Symposia at MoDELS 2006. Reports and Revised Selected Papers (Lecture Notes in Computer Science Vol.4364), P106
   Brambilla M., 2012, Model-Driven Software Engineering in Practice, DOI [DOI 10.1007/978-3-031-02549-5, 10.2200/S00441ED1V01Y201208SWE001, DOI 10.2200/S00441ED1V01Y201208SWE001]
   Brambilla M, 2017, J INTERNET SERV APPL, V8, DOI 10.1186/s13174-017-0064-1
   BURNETT MM, 1995, COMPUTER, V28, P14
   Chakraborty P, 2021, INFORM SOFTWARE TECH, V137, DOI 10.1016/j.infsof.2021.106603
   Chen TH, 2016, EMPIR SOFTW ENG, V21, P1843, DOI 10.1007/s10664-015-9402-8
   Cleary B, 2009, EMPIR SOFTW ENG, V14, P93, DOI 10.1007/s10664-008-9095-3
   Costabile MF, 2007, IEEE T SYST MAN CY A, V37, P1029, DOI 10.1109/TSMCA.2007.904776
   Dahlberg D, 2020, DEV EXPERIENCE LOW C
   De Lucia A, 2014, EMPIR SOFTW ENG, V19, P1383, DOI 10.1007/s10664-013-9285-5
   Di Sipio Claudio, 2020, P 23 ACM IEEE INT C, P1, DOI 10.1145/3417990.3420202
   Driver Mark, 2019, LOW CODE DEV TECHNOL
   Enterprise Low-Code Application Platforms (LCAP), 2022, REV RAT
   Exchange S, 2020, Stack exchange data dump
   Fincher S, 2005, EXPERT SYST, V22, P89, DOI 10.1111/j.1468-0394.2005.00299.x
   Fischer G, 2004, COMMUN ACM, V47, P33, DOI 10.1145/1015864.1015884
   Fors N, 2016, THESIS LUND U
   Fowler M., 2001, Software Development, V9, P28
   Fryling M., 2019, J. Comput. Sci. Colleges, V34, P119, DOI DOI 10.5555/3344051.3344061
   Halbert Daniel Conrad, 1984, Ph.D. Dissertation.
   Han JX, 2020, EMPIR SOFTW ENG, V25, P2694, DOI 10.1007/s10664-020-09819-6
   Hu JJ, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P3, DOI 10.1109/SANER.2015.7081810
   Ihirwe F., 2020, P 23 ACMIEEE INT C M, P1, DOI [10.1145/3417990.3420208, DOI 10.1145/3417990.3420208]
   Ihirwe Felicien, 2020, P 23 ACM IEEE INT C, P1
   Jacinto A, 2020, P 23 ACMIEEE INT C M, P1, DOI [10.1145/3417990.3420209, DOI 10.1145/3417990.3420209]
   Kendall MG, 1938, BIOMETRIKA, V30, P81, DOI 10.2307/2332226
   Khan JY, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P318, DOI 10.1109/SANER50967.2021.00037
   Khorram F., 2020, P 23 ACM IEEE INT C, P1, DOI [DOI 10.1145/3417990, 10.1145/3417990.3420204, DOI 10.1145/3417990.3420204]
   Kourouklidis Panagiotis, 2020, 23 ACM IEEE INT C MO, P1
   KRUSKAL WH, 1957, J AM STAT ASSOC, V52, P356, DOI 10.2307/2280906
   Lethbridge T. C., 2021, P INT S LEV APPL FOR, P202, DOI 10.1007/978-3-030-89159-6_14
   Li H, 2018, EMPIR SOFTW ENG, V23, P2655, DOI 10.1007/s10664-018-9595-8
   Lin GJ, 2020, P IEEE, V108, P1825, DOI 10.1109/JPROC.2020.2993293
   Linares-Vásquez M, 2013, IEEE WORK CONF MIN S, P93, DOI 10.1109/MSR.2013.6624014
   Loper E., 2002, ARXIV
   Luo YS, 2022, PEDIATR HEMAT ONCOL, V39, P145, DOI 10.1080/08880018.2021.1953655
   McCallum A.K., 2002, MALLET MACHINE LEARN
   McHugh ML, 2012, BIOCHEM MEDICA, V22, P276, DOI 10.11613/bm.2012.031
   Mernik M, 2005, ACM COMPUT SURV, V37, P316, DOI 10.1145/1118890.1118892
   Ness C, 2019, THESIS
   Overeem M, 2021, 24TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2021), P90, DOI 10.1109/MODELS-C53483.2021.00020
   Overflow S., 2020, STACK OV QUEST
   Pane JF, 2006, HUM COM INT, V9, P31
   Paterno F., 2013, INT SCHOLARLY RES NO, V2013
   Phalake Vaishali S., 2021, Information and Communication Technology for Competitive Strategies (ICTCS 2020). Intelligent Strategies for ICT. Lecture Notes in Networks and Systems (LNNS 190), P689, DOI 10.1007/978-981-16-0882-7_61
   Pleuss A., 2013, P 5 ACM SIGCHI S ENG, P13, DOI [10.1145/2480296.2480298, DOI 10.1145/2480296.2480298]
   Ponzanelli L, 2014, PROC IEEE INT CONF S, P541, DOI 10.1109/ICSME.2014.90
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI [10.1109/TSE.2007.1016, 10.1109/TSE.2007.1016.]
   Ramasubramanian C., 2013, International Journal of Advanced Research in Computer and Communication Engineering, V2, P4536
   Rao S., 2011, P 8 WORK C MIN SOFTW, P43
   Rehurek R., 2010, P LREC 2010 WORKSH N, P45, DOI DOI 10.13140/2.1.2393.1847
   Ren XX, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P151, DOI 10.1109/ASE.2019.00024
   Resnick M, 2009, COMMUN ACM, V52, P60, DOI 10.1145/1592761.1592779
   Robillard MP, 2013, IEEE T SOFTWARE ENG, V39, P613, DOI 10.1109/TSE.2012.63
   Röder M, 2015, WSDM'15: PROCEEDINGS OF THE EIGHTH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING, P399, DOI 10.1145/2684822.2685324
   Rosen C, 2016, EMPIR SOFTW ENG, V21, P1192, DOI 10.1007/s10664-015-9379-3
   Rymer J R, 2019, FORRESTER WAVE LOW Q, Vq1
   Sahay A, 2020, EUROMICRO CONF PROC, P171, DOI 10.1109/SEAA51224.2020.00036
   Sinha G., 2010, Proceedings of the Third International Conference on Emerging Trends in Engineering and Technology (ICETET 2010), P1, DOI 10.1109/ICETET.2010.85
   Sun X, 2015, Computer and Information Science, P22
   Sun XB, 2016, 2016 17TH IEEE/ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, ARTIFICIAL INTELLIGENCE, NETWORKING AND PARALLEL/DISTRIBUTED COMPUTING (SNPD), P357, DOI 10.1109/SNPD.2016.7515925
   Sun XB, 2015, INFORM SOFTWARE TECH, V66, P1, DOI 10.1016/j.infsof.2015.05.003
   Thomas SW, 2014, SCI COMPUT PROGRAM, V80, P457, DOI 10.1016/j.scico.2012.08.003
   Thomas SW, 2011, 8 WORK C MIN SOFTW R, P173
   Tian K, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P163, DOI 10.1109/MSR.2009.5069496
   Torres C, 2018, BLOOMBERG
   Treude C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P804, DOI 10.1145/1985793.1985907
   Tse-Hsun Chen, 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P189, DOI 10.1109/MSR.2012.6224280
   Uddin G, 2020, INF SOFTW TECHNOL 1, V16
   Uddin G, 2019, IEEE T SOFTW ENG, V40
   Uddin G, 2017, P 32 IEEEACM INT C A, P6
   Uddin G, 2019, IEEE Transactions on Software Engineering, V35
   Uddin G, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-10021-5
   Uddin G, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3439769
   Uddin G, 2017, IEEE INT CONF AUTOM, P159, DOI 10.1109/ASE.2017.8115629
   Uddin G, 2015, IEEE SOFTWARE, V32, P68, DOI 10.1109/MS.2014.80
   Ur B, 2014, 32ND ANNUAL ACM CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2014), P803, DOI 10.1145/2556288.2557420
   van Deursen A, 2000, ACM SIGPLAN NOTICES, V35, P26, DOI 10.1145/352029.352035
   Vincent P., 2019, Gartner report
   Wan ZY, 2021, IEEE T SOFTWARE ENG, V47, P1331, DOI 10.1109/TSE.2019.2921343
   Waszkowski R, 2019, IFAC PAPERSONLINE, V52, P376, DOI 10.1016/j.ifacol.2019.10.060
   Wolber D, 2011, SIGCSE 11: PROCEEDINGS OF THE 42ND ACM TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION, P601
   Woo M, 2020, ENGINEERING-PRC, V6, P960, DOI 10.1016/j.eng.2020.07.007
   Yang D, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P391, DOI [10.1109/MSR.2016.047, 10.1145/2901739.2901767]
   Yang XL, 2016, J COMPUT SCI TECH-CH, V31, P910, DOI 10.1007/s11390-016-1672-0
   Zhu LM, 2016, IEEE SOFTWARE, V33, P32, DOI 10.1109/MS.2016.81
   Zhuang WM, 2022, Arxiv, DOI arXiv:2105.07603
NR 131
TC 4
Z9 4
U1 11
U2 36
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2023
VL 28
IS 1
AR 4
DI 10.1007/s10664-022-10244-0
PG 59
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 6A0EO
UT WOS:000880336500005
PM 36407813
OA Bronze, Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Aghayi, E
   LaToza, TD
AF Aghayi, Emad
   LaToza, Thomas D.
TI A controlled experiment on the impact of microtasking on programming
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Crowdsourcing; Software development; Microtask programming; Evaluation
ID SOFTWARE-DEVELOPMENT; BEHAVIOR; BARRIERS; TASK
AB In microtask programming, developers complete short self-contained microtasks through the use of a specialized programming environment. For example, given only a short description of the purpose of a function and a partially complete implementation, a developer might be asked to identify, test, and implement an additional behavior in the function. Adopting a microtask approach to programming tasks has been envisioned to offer a number of potential benefits, including reducing the onboarding time necessary for new developers to contribute to a project and achieving higher project velocity by enabling larger project teams and greater parallelism. To investigate the potential benefits and drawbacks of microtask programming we conducted a controlled experiment. We focused our investigation on the context in which microtasking is most widely used, implementing and debugging function bodies, and investigated the impact of microtasking with respect to onboarding, project velocity, code quality, and developer productivity. 28 developers worked to implement microservice endpoints, either in the form of traditional programming tasks described in an issue tracker or as programming microtasks. Our study did not examine the design effort necessary to prepare for microtask programming or consider how microtask programming might be applied to maintenance tasks. We found that, compared to traditional programming, microtask programming reduced onboarding time by a factor of 3.7, increased project velocity by a factor of 5.76 by increasing team size by a factor of 7, and decreased individual developer productivity by a factor of 1.3. The quality of code did not significantly differ. Through qualitative analysis of how developers worked, we explore potential explanations of these differences. These findings offer evidence for the potential benefits that adopting microtask programming might bring, particularly in cases where increasing project velocity is paramount.
C1 [Aghayi, Emad; LaToza, Thomas D.] George Mason Univ, Dept Comp Sci, Fairfax, VA 22030 USA.
C3 George Mason University
RP Aghayi, E (corresponding author), George Mason Univ, Dept Comp Sci, Fairfax, VA 22030 USA.
EM eaghayi@gmu.edu; tlatoza@gmu.edu
FU National Science Foundation [CCF-1414197, CCF-1845508]
FX The research leading to these results received funding in part from the
   National Science Foundation under Grant Agreement No CCF-1414197 and
   Grant Agreement No CCF-1845508.
CR Aberdour M, 2007, IEEE SOFTWARE, V24, P58, DOI 10.1109/MS.2007.2
   Aghayi E, REPLICATION PACKAGE, DOI [10.5281/zenodo.4922866, DOI 10.5281/ZENODO.4922866]
   Aghayi E., 2020, P VL HCC, P1
   Aghayi E, 2021, J SYST SOFTWARE, V171, DOI 10.1016/j.jss.2020.110840
   Ammann Paul, 2008, Introduction to software testing, V1st
   [Anonymous], 2005, P SIGCHI C HUM FACT, DOI DOI 10.1145/1054972.1055017
   [Anonymous], 2011, Proceedings of the 24th annual ACM symposium on User interface software and technology
   [Anonymous], 2011, P 24 ANN ACM S USER, DOI DOI 10.1145/2047196.2047202
   [Anonymous], 2010, PROC 18 ACM SIGSOFT
   [Anonymous], 2010, TOPCODER A DEV SOFTW
   [Anonymous], 2013, INDIA SOFTWARE ENG C
   [Anonymous], 2011, P 19 ACM SIGSOFT S 1
   Bavota G, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P56, DOI 10.1109/ICSM.2012.6405253
   Begel Andrew, 2008, P 4 INT WORKSH COMP, P3, DOI [DOI 10.1145/RESEARCH(ICER'1404520.1404522, 10.1145/Research(ICER'1404520.1404522]
   Bernstein Michael S., 2010, P 23ND ANN ACM S USE, P313, DOI 10.1145/1866029.1866078
   Britto R, 2020, J SYST SOFTWARE, V169, DOI 10.1016/j.jss.2020.110699
   Chen Y, 2017, PROCEEDINGS OF THE 2017 ACM SIGCHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'17), P6220, DOI 10.1145/3025453.3025972
   Chen Y, 2016, 34TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, CHI 2016, P3192, DOI 10.1145/2858036.2858512
   Cheng J, 2015, CHI 2015: PROCEEDINGS OF THE 33RD ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P4061, DOI 10.1145/2702123.2702146
   Cutrell E., 2000, EXTENDED ABSTRACTS C, P99, DOI [10.1145/633292.633351, DOI 10.1145/633292.633351]
   Czerwinski Mary, 2004, P SIGCHI C HUM FACT, P175, DOI [10.1145/985692.985715, DOI 10.1145/985692.985715]
   Doan A, 2011, COMMUN ACM, V54, P86, DOI 10.1145/1924421.1924442
   Espinosa A, 2001, INT C INF SYST, V64
   Fagerholm F, 2014, IEEE SOFTWARE, V31, P54, DOI 10.1109/MS.2014.107
   Fagerholm F, 2013, 2013 IEEE 8TH INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING WORKSHOPS (ICGSEW 2013), P5, DOI 10.1109/ICGSEW.2013.8
   Filippova A, 2016, ACM CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING (CSCW 2016), P705, DOI 10.1145/2818048.2820018
   Gerber Elizabeth M., 2016, HUM FACT COMP SYST
   Goldman M, 2012, THESIS MIT
   HARRISON W, 2001, EMPIR SOFTW ENG, V6, P193
   Hoseini M, 2019, KYBERNETES, V48, P906, DOI 10.1108/K-07-2017-0249
   Iqbal ST, 2018, UIST 2018: PROCEEDINGS OF THE 31ST ANNUAL ACM SYMPOSIUM ON USER INTERFACE SOFTWARE AND TECHNOLOGY, P411, DOI 10.1145/3242587.3242611
   Iqbal ST, 2008, CHI 2008: 26TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS VOLS 1 AND 2, CONFERENCE PROCEEDINGS, P93
   Jensen R.W., 2014, Improving Software Development Productivity: Effective Leadership and Quantitative Methods in Software Management
   Jiang H, 2014, LECT NOTES ARTIF INT, V8861, P65, DOI 10.1007/978-3-319-13191-7_6
   Johnson M, 2010, J WORKPLACE LEARN, V22, P180, DOI 10.1108/13665621011028620
   Kersten Mik, 2006, P 14 ACM SIGSOFT INT, P1
   Kim J, 2017, CSCW'17: PROCEEDINGS OF THE 2017 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING, P233, DOI 10.1145/2998181.2998196
   Kittur Aniket, 2013, P 2013 C COMP SUPP C, P1301, DOI DOI 10.1145/2441776.2441923
   Kochhar PS, 2013, INT CONF QUAL SOFTW, P103, DOI 10.1109/QSIC.2013.57
   Lasecki WS, 2015, CHI 2015: PROCEEDINGS OF THE 33RD ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P1925, DOI 10.1145/2702123.2702565
   LaToza TD, 2013, CROWDCONF
   LaToza TD, 2019, IEEE T SOFTWARE ENG, V45, P1106, DOI 10.1109/TSE.2018.2823327
   LaToza TD, 2016, IEEE SOFTWARE, V33, P74, DOI 10.1109/MS.2016.12
   LaToza TD, 2015, PROCEEDINGS 2015 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING (VL/HCC), P23, DOI 10.1109/VLHCC.2015.7357194
   LaToza ThomasD., 2014, Proceedings of the 27th Annual ACM Symposium on User Interface Software and Technology, UIST '14, P43, DOI DOI 10.1145/2642918.2647349
   Mao K, 2017, J SYST SOFTWARE, V126, P57, DOI 10.1016/j.jss.2016.09.015
   Martin J., 1983, SOFTWARE MAINTENANCE
   Maxwell KD, 2003, ADV COMPUT, V58, P1, DOI 10.1016/S0065-2458(03)58001-9
   Meyer AN, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P19, DOI 10.1145/2635868.2635892
   Nebeling Michael, 2012, Web Engineering. Proceedings 12th International Conference, ICWE 2012, P31, DOI 10.1007/978-3-642-31753-8_3
   Oliveira E, 2017, ICEIS: PROCEEDINGS OF THE 19TH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS - VOL 2, P76, DOI 10.5220/0006314400760087
   Perry DE, 2001, ACM T SOFTW ENG METH, V10, P308, DOI 10.1145/383876.383878
   Peterson Becky, 2017, BUSINESS INSIDER
   Ramakrishnan R, 2004, INTERNATIONAL DATABASE ENGINEERING AND APPLICATIONS SYMPOSIUM, PROCEEDINGS, P133
   Retelny D., 2017, Proc. ACM Hum.-Comput. Interact. Artic, V1, DOI [https://doi.org/10.1145/3134724, DOI 10.1145/3134724, 10.1145/3134724]
   Sadowski Caitlin, 2019, Rethinking productivity in software engineering, DOI DOI 10.1007/978-1-4842-4221-6_9
   Saengkhattiya M, 2012, THESIS LUND U
   Saito S, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1263, DOI 10.1145/3368089.3417046
   Sang Won Lee, 2018, Proceedings of the ACM on Human-Computer Interaction, V2, DOI 10.1145/3274373
   Schiller TW, 2012, ACM SIGPLAN NOTICES, V47, P95, DOI 10.1145/2398857.2384624
   Sim SE, 1998, PROC INT CONF SOFTW, P361, DOI 10.1109/ICSE.1998.671389
   Stamelos I, 2002, INFORM SYST J, V12, P43, DOI 10.1046/j.1365-2575.2002.00117.x
   Steinmacher I, 2016, PROC INT CONF SOFTW, P273, DOI 10.1145/2884781.2884806
   Steinmacher I, 2015, INFORM SOFTWARE TECH, V59, P67, DOI 10.1016/j.infsof.2014.11.001
   Stol KJ, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P187, DOI 10.1145/2568225.2568249
   Tian J., 2005, Software Quality Engineering: Testing, Quality Assurance, and Quantifiable Improvement
   Trafton JG, 2003, INT J HUM-COMPUT ST, V58, P583, DOI 10.1016/S1071-5819(03)00023-5
   von Ahn Luis., 2004, CHI, DOI DOI 10.1145/985692.985733
   von Krogh G, 2003, RES POLICY, V32, P1217, DOI 10.1016/S0048-7333(03)00050-7
   Wang JG, 2011, PROCEEDINGS OF THE 4TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE'11), P76
   Warner J, 2017, PROCEEDINGS OF THE 2017 ACM SIGCHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'17), P1136, DOI 10.1145/3025453.3025876
   Weidema ERQ, 2016, 2016 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON CROWDSOURCING IN SOFTWARE ENGINEERING (CSI-SE), P41, DOI [10.1145/2897659.2897664, 10.1109/CSI-SE.2016.015]
   Weld D.S., 2008, AAAI, V8, P1609
   Williams AC, 2019, PROCEEDINGS OF THE 32ND ANNUAL ACM SYMPOSIUM ON USER INTERFACE SOFTWARE AND TECHNOLOGY (UIST 2019), P81, DOI 10.1145/3332165.3347932
   Witkower Z, 2020, J PERS SOC PSYCHOL, V118, P89, DOI 10.1037/pspi0000181
   Zanatta AL, 2018, 2018 IEEE/ACM 5TH INTERNATIONAL WORKSHOP ON CROWD SOURCING IN SOFTWARE ENGINEERING (CSI-SE), P9, DOI 10.1145/3195863.3195869
   Zhao L., 2000, Software Engineering Notes, V25, P54, DOI 10.1145/505863.505878
NR 77
TC 3
Z9 3
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN
PY 2023
VL 28
IS 1
AR 10
DI 10.1007/s10664-022-10226-2
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 6M2UA
UT WOS:000888727700003
DA 2024-07-18
ER

PT J
AU Lavazza, L
   Morasca, S
AF Lavazza, Luigi
   Morasca, Sandro
TI Comparing <i>φ</i> and the F-measure as performance metrics for
   software-related classifications
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Binary classification; Software defect prediction; Performance
   evaluation; Performance metrics; Matthews Correlation Coefficient;
   F-measure; F-score
AB Context The F-measure has been widely used as a performance metric when selecting binary classifiers for prediction, but it has also been widely criticized, especially given the availability of alternatives such as phi (also known as Matthews Correlation Coefficient). Objectives Our goals are to (1) investigate possible issues related to the F-measure in depth and show how phi can address them, and (2) explore the relationships between the F-measure and phi. Method Based on the definitions of phi and the F-measure, we derive a few mathematical properties of these two performance metrics and of the relationships between them. To demonstrate the practical effects of these mathematical properties, we illustrate the outcomes of an empirical study involving 70 Empirical Software Engineering datasets and 837 classifiers. Results We show that phi can be defined as a function of Precision and Recall, which are the only two performance metrics used to define the F-measure, and the rate of actually positive software modules in a dataset. Also, phi can be expressed as a function of the F-measure and the rates of actual and estimated positive software modules. We derive the minimum and maximum value of phi for any given value of the F-measure, and the conditions under which both the F-measure and phi rank two classifiers in the same order. Conclusions Our results show that phi is a sensible and useful metric for assessing the performance of binary classifiers. We also recommend that the F-measure should not be used by itself to assess the performance of a classifier, but that the rate of positives should always be specified as well, at least to assess if and to what extent a classifier performs better than random classification. The mathematical relationships described here can also be used to re-interpret the conclusions of previously published papers that relied mainly on the F-measure as a performance metric.
C1 [Lavazza, Luigi; Morasca, Sandro] Univ Insubria, Dipartimento Sci Teor & Applicate, Varese, Italy.
C3 University of Insubria
RP Lavazza, L (corresponding author), Univ Insubria, Dipartimento Sci Teor & Applicate, Varese, Italy.
EM luigi.lavazza@uninsubria.it; sandro.morasca@uninsubria.it
OI Lavazza, Luigi/0000-0002-5226-4337
FU "Fondo di ricerca d'Ateneo" - Universita degli Studi dell'Insubria
FX This work was partly supported by the "Fondo di ricerca d'Ateneo" funded
   by the Universit`a degli Studi dell'Insubria.
CR [Anonymous], 2017, SEACRAFT REPOSITORY
   [Anonymous], 1821, COURS ANAL ECOLE ROY
   BLAIR DC, 1979, J AM SOC INFORM SCI, V30, P374, DOI 10.1002/asi.4630300621
   Bowes D., 2012, Proceedings of the 8th International Conference on Predictive Models in Software Engineering, P109, DOI [10.1145/2365324.2365338, DOI 10.1145/2365324.2365338]
   Bowes D, 2018, SOFTWARE QUAL J, V26, P525, DOI 10.1007/s11219-016-9353-3
   Chicco D, 2020, BMC GENOMICS, V21, DOI 10.1186/s12864-019-6413-7
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Delgado R, 2019, PLOS ONE, V14, DOI 10.1371/journal.pone.0222916
   Deng JH, 2020, IEEE ACCESS, V8, P66647, DOI 10.1109/ACCESS.2020.2985780
   Canedo ED, 2020, ENTROPY-SWITZ, V22, DOI 10.3390/e22091057
   Gray D., 2011, 15 ANN C EV ASS SOFT
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Hernández-Orallo J, 2012, J MACH LEARN RES, V13, P2813
   Jingxiu Yao, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P120, DOI 10.1145/3383219.3383232
   Jureczko M, 2010, P 6 INT C PREDICTIVE, DOI DOI 10.1145/1868328.1868342
   Lavazza L, 2022, STAT METHODS MED RES, V31, P419, DOI 10.1177/09622802211060515
   Li M, 2012, AUTOMAT SOFTW ENG, V19, P201, DOI 10.1007/s10515-011-0092-1
   Luque A, 2019, PATTERN RECOGN, V91, P216, DOI 10.1016/j.patcog.2019.02.023
   MATTHEWS BW, 1975, BIOCHIM BIOPHYS ACTA, V405, P442, DOI 10.1016/0005-2795(75)90109-9
   Menzies T, 2004, EIGHTH IEEE INTERNATIONAL SYMPOSIUM ON HIGH ASSURANCE SYSTEMS ENGINEERING, PROCEEDINGS, P129, DOI 10.1109/HASE.2004.1281737
   Morasca S, 2020, EMPIR SOFTW ENG, V25, P3977, DOI 10.1007/s10664-020-09861-4
   Morasca S, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2915997
   Morasca S, 2017, INFORM SOFTWARE TECH, V89, P37, DOI 10.1016/j.infsof.2017.03.005
   Pierri F, 2020, EPJ DATA SCI, V9, DOI 10.1140/epjds/s13688-020-00253-8
   Powers DMW, 2020, J MACH LEARN TECHNOL, P37, DOI DOI 10.9735/2229-3981
   Scaranti GF, 2020, IEEE ACCESS, V8, P100172, DOI 10.1109/ACCESS.2020.2997939
   Serafini P., 1985, MATH MULTIOBJECTIVE
   Singh PK, 2015, 2015 2ND INTERNATIONAL CONFERENCE ON COMPUTING FOR SUSTAINABLE GLOBAL DEVELOPMENT (INDIACOM), P1793
   Sokolova M, 2009, INFORM PROCESS MANAG, V45, P427, DOI 10.1016/j.ipm.2009.03.002
   Sonbol R, 2020, 2020 IEEE SEVENTH INTERNATIONAL WORKSHOP ON ARTIFICIAL INTELLIGENCE FOR REQUIREMENTS ENGINEERING (AIRE 2020), P1, DOI 10.1109/AIRE51212.2020.00007
   Song QB, 2019, IEEE T SOFTWARE ENG, V45, P1253, DOI 10.1109/TSE.2018.2836442
   WASSERTHEIL S, 1970, BIOMETRICS, V26, P588, DOI 10.2307/2529115
   Yao JX, 2021, INFORM SOFTWARE TECH, V139, DOI 10.1016/j.infsof.2021.106664
   Zhang F, 2017, EMPIR SOFTW ENG, V22, P3186, DOI 10.1007/s10664-017-9516-2
NR 34
TC 7
Z9 7
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2022
VL 27
IS 7
AR 185
DI 10.1007/s10664-022-10199-2
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 5A0CE
UT WOS:000862564000002
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Xavier, L
   Montandon, JE
   Ferreira, F
   Brito, R
   Valente, MT
AF Xavier, Laerte
   Montandon, Joao Eduardo
   Ferreira, Fabio
   Brito, Rodrigo
   Valente, Marco Tulio
TI On the documentation of self-admitted technical debt in issues
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Self-Admitted Technical Debt; Issue tracker; GitHub; GitLab
ID IDENTIFICATION; MANAGEMENT
AB Self-Admitted Technical Debt (Satd) is a particular case of Technical Debt (TD) in which developers rely on source code comments (Satd-C) or labeled issues (Satd-I) to report their sub-optimal technical solutions. In this paper, we first explore a sample of 286 Satd-I instances collected from five open source projects, including Microsoft Visual Studio Code and GitLab Community Edition. We show that in 45% of the studied issues TD was introduced to ship earlier (i.e., to deliver faster), and in almost 60% it refers to Design flaws. Besides, we report that most developers pay Satd-I to reduce its costs or interests (66%). To complement the previous exploratory results, we investigate the adoption of tools to support Satd-I documentation. For that, we build a large-scale dataset of 72K Satd-C and 20K Satd-I instances, extracted from 190 GitHub projects. We also implement a prototype tool, called AdmiTD, to automatically report Satd-C as GitHub issues. We use this dataset and tool to reveal that developers are not interested in the automatic transformation of Satd-C in Satd-I. Moreover, we show that it might not be feasible to create a tool to recommend explicit links between Satd-C and Satd-I instances.
C1 [Xavier, Laerte; Brito, Rodrigo; Valente, Marco Tulio] Univ Fed Minas Gerais, Dept Comp Sci, Belo Horizonte, MG, Brazil.
   [Montandon, Joao Eduardo] Univ Fed Minas Gerais, Tech Coll COLTEC, Belo Horizonte, MG, Brazil.
   [Ferreira, Fabio] IF SUDESTE MG, Ctr Informat, Barbacena, Brazil.
C3 Universidade Federal de Minas Gerais; Universidade Federal de Minas
   Gerais
RP Xavier, L (corresponding author), Univ Fed Minas Gerais, Dept Comp Sci, Belo Horizonte, MG, Brazil.
EM laertexavier@dcc.ufmg.br; joao.montandon@dcc.ufmg.br;
   fabio.ferreira@ifsudestemg.edu.br; britorodrigo@dcc.ufmg.br;
   mtov@dcc.ufmg.br
RI Ferreira, Fábio/JBR-9074-2023; Ferreira, Fábio/HGU-3176-2022
OI Ferreira, Fábio/0000-0003-4485-3219; Ferreira,
   Fábio/0000-0003-4485-3219; Xavier, Laerte/0000-0001-7925-4115; Valente,
   Marco Tulio/0000-0002-8180-7548
FU FAPEMIG; CNPq; CAPES
FX We thank the developers who participated in our surveys and shared their
   ideas and practices about technical debt documentation and payment. This
   research is supported by grants from FAPEMIG, CNPq, and CAPES.
CR Alves NSR, 2016, INFORM SOFTWARE TECH, V70, P100, DOI 10.1016/j.infsof.2015.10.008
   [Anonymous], 2016, 12ND BRAZILIAN S INF
   Azuma H, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10081-7
   Bavota G, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P315, DOI [10.1109/MSR.2016.040, 10.1145/2901739.2901742]
   Bellomo S, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P327, DOI [10.1145/2901739.2901754, 10.1109/MSR.2016.041]
   Borges H, 2018, J SYST SOFTWARE, V146, P112, DOI 10.1016/j.jss.2018.09.016
   Borges H, 2016, PROC IEEE INT CONF S, P334, DOI 10.1109/ICSME.2016.31
   Cabot J, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P550, DOI 10.1109/SANER.2015.7081875
   Cunningham W., 1993, OOPS Messenger, V4, P29
   da Fonseca Lage L C, 2019, 13 INT S EMPIRICAL S, P1
   Dai K., 2017, QUASOQ APSEC, P59
   Farias MAD, 2020, INFORM SOFTWARE TECH, V121, DOI 10.1016/j.infsof.2020.106270
   Farias MAD, 2017, LECT NOTES BUS INF P, V291, P284, DOI 10.1007/978-3-319-62386-3_14
   DELIMA B, 2022, SOFTW QUAL J, V1, P1
   Ernst NA, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P50, DOI 10.1145/2786805.2786848
   Fahid F M, 2019, ARXIV
   Flisar J, 2019, IEEE ACCESS, V7, P106475, DOI 10.1109/ACCESS.2019.2933318
   Fowler M, 2019, TECHNICALDEBTQUADRAN
   Fucci G, 2021, IEEE WORK CONF MIN S, P403, DOI 10.1109/MSR52588.2021.00052
   Fucci G, 2020, PROC IEEE INT CONF S, P672, DOI 10.1109/ICSME46990.2020.00070
   Guo ZQ, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3447247
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Huang Q, 2018, EMPIR SOFTW ENG, V23, P418, DOI 10.1007/s10664-017-9522-4
   Iammarino M, 2021, J SYST SOFTWARE, V178, DOI 10.1016/j.jss.2021.110976
   Iammarino M, 2019, PROC IEEE INT CONF S, P186, DOI 10.1109/ICSME.2019.00029
   Kamei E.d.S., 2016, QUASOQ TDA APSEC, P68
   Kashiwa Y, 2022, INFORM SOFTWARE TECH, V146, DOI 10.1016/j.infsof.2022.106855
   Kruchten P, 2012, IEEE SOFTWARE, V29, P18, DOI 10.1109/MS.2012.167
   Li Y., 2022, EMPIR SOFTW ENG, V1, P1
   Li YK, 2020, EUROMICRO CONF PROC, P495, DOI 10.1109/SEAA51224.2020.00083
   Li ZY, 2015, J SYST SOFTWARE, V101, P193, DOI 10.1016/j.jss.2014.12.027
   Lim E, 2012, IEEE SOFTWARE, V29, P22, DOI 10.1109/MS.2012.130
   Liu ZX, 2018, PROC IEEE ACM INT C, P9, DOI 10.1145/3183440.3183478
   Maipradit R, 2020, IEEE INT WORK C SO, P54, DOI 10.1109/SCAM51674.2020.00011
   Maipradit R, 2020, EMPIR SOFTW ENG, V25, P3770, DOI 10.1007/s10664-020-09854-3
   Maldonado ED, 2017, PROC IEEE INT CONF S, P238, DOI 10.1109/ICSME.2017.8
   Maldonado ED, 2015, 2015 IEEE 7TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD) PROCEEDINGS, P9, DOI 10.1109/MTD.2015.7332619
   Maldonado ED, 2017, IEEE T SOFTWARE ENG, V43, P1044, DOI 10.1109/TSE.2017.2654244
   Martini A, 2018, SCI COMPUT PROGRAM, V163, P42, DOI 10.1016/j.scico.2018.03.007
   Potdar A, 2014, PROC IEEE INT CONF S, P91, DOI 10.1109/ICSME.2014.31
   Ren XX, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3324916
   Rios N, 2018, INFORM SOFTWARE TECH, V102, P117, DOI 10.1016/j.infsof.2018.05.010
   Sierra G, 2019, J SYST SOFTWARE, V152, P70, DOI 10.1016/j.jss.2019.02.056
   Sierra G, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P534, DOI [10.1109/saner.2019.8667999, 10.1109/SANER.2019.8667999]
   Spencer D., 2009, CARD SORTING DESIGNI
   Storey MA, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P251, DOI 10.1145/1368088.1368123
   Tan J, 2021, PROC IEEE INT CONF S, P251, DOI 10.1109/ICSME52107.2021.00029
   Vidoni M, 2021, IEEE WORK CONF MIN S, P179, DOI 10.1109/MSR52588.2021.00030
   Wang X, 2020, IEEE INT CONF AUTOM, P871, DOI 10.1145/3324884.3416583
   Wehaibi S, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P179, DOI 10.1109/SANER.2016.72
   Wiese M, 2022, INFORM SOFTWARE TECH, V148, DOI 10.1016/j.infsof.2022.106926
   Xavier L., 2022, IEEE SOFTWARE, V1, P1, DOI [10.3390/software1010001, DOI 10.3390/SOFTWARE1010001]
   Xavier L, 2020, IEEE WORK CONF MIN S, P137, DOI 10.1145/3379597.3387459
   Xiao T, 2022, IEEE T SOFTWARE ENG, V48, P4214, DOI 10.1109/TSE.2021.3115772
   Yli-Huumo J, 2016, J SYST SOFTWARE, V120, P195, DOI 10.1016/j.jss.2016.05.018
   Zampetti F, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P355, DOI [10.1109/SANER48275.2020.9054868, 10.1109/saner48275.2020.9054868]
   Zampetti F, 2018, IEEE WORK CONF MIN S, P526, DOI 10.1145/3196398.3196423
   Zampetti F, 2017, PROC IEEE INT CONF S, P216, DOI 10.1109/ICSME.2017.44
   Zazworka N., 2013, Proceedings of the 17th International Conference on Evaluation and Assessment in Software Engineering, DOI DOI 10.1145/2460999.2461005.ASSOCIATIONFORCOMPUTINGMACHINERY
   Zazworka Nico, 2011, P 2 WORKSH MAN TECHN, P17, DOI 10.1145/1985362.1985366
NR 60
TC 1
Z9 1
U1 1
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2022
VL 27
IS 7
AR 163
DI 10.1007/s10664-022-10203-9
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4V4SY
UT WOS:000859469500008
DA 2024-07-18
ER

PT J
AU Boutaib, S
   Elarbi, M
   Bechikh, S
   Palomba, F
   Ben Said, L
AF Boutaib, Sofien
   Elarbi, Maha
   Bechikh, Slim
   Palomba, Fabio
   Ben Said, Lamjed
TI Handling uncertainty in SBSE: a possibilistic evolutionary approach for
   code smells detection
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Code smells; Subjectivity and doubtfulness of software engineers; Data
   labels uncertainty; Possibility theory; Possibilistic decision tree
   evolution; SBSE
ID DECISION TREES; BAD; INFORMATION; ALGORITHMS; IDENTIFICATION
AB Code smells, also known as anti-patterns, are poor design or implementation choices that hinder program comprehensibility and maintainability. While several code smell detection methods have been proposed, Mantyla et al. identified the uncertainty issue as one of the major individual human factors that may affect developer's decisions about the smelliness of software classes: they may indeed have different opinions mainly due to their different knowledge and expertise. Unfortunately, almost all the existing approaches assume data perfection and neglect the uncertainty when identifying the labels of the software classes. Ignoring or rejecting any uncertainty form could lead to a considerable loss of information, which could significantly deteriorate the effectiveness of the detection and identification processes. Inspired by our previous works and motivated by the interesting performance of the PDT (Possibilistic Decision Tree) in classifying uncertain data, we propose ADIPE (Anti-pattern Detection and Identification using Possibilistic decision tree Evolution), as a new tool that evolves and optimizes a set of detectors (PDTs) that could effectively deal with software class labels uncertainty using some concepts from the Possibility theory. ADIPE uses a PBE (Possibilistic Base of Examples: a dataset with possibilistic labels) that it is built using a set of opinion-based classifiers (i.e., a set of probabilistic classifiers) with the aim to simulate human developers' uncertainty. A set of advisors and probabilistic classifiers are employed in order to mimic the subjectivity and the doubtfulness of software engineers. A detailed experimental study is conducted to show the merits and outperformance of ADIPE in dealing with uncertainty in code smells detection and identification with respect to four relevant state-of-the-art methods, including the baseline PDT. The experimental study was performed in uncertain and certain environments based on two suitable metrics: PF-measure_dist (Possibilistic F-measure_Distance) and IAC (Information Affinity Criterion); which corresponds to the F-measure and Accuracy (PCC) for the certain case. The obtained results for the uncertain environment reveal that for the detection process, the PF-measure_dist of ADIPE ranges within [0.9047 and 0.9285], and its IAC lies within [0.9288 and 0.9557]; while for the identification process, the PF-measure_dist of ADIPE is in [0.8545, 0.9228], and its IAC lies within [0.8751, 0.933]. ADIPE is able to find 35% more code smells with uncertain data than the second best algorithm (i.e., BLOP). In addition, ADIPE succeeds to decrease the number of false alarms (i.e., misclassified smelly instances) with a rate equals to 12%. Our proposed approach is also able to identify 43% more smell types than BLOP and decreases the number of false alarms with a rate equals to 32%. Similar results were obtained for the certain environment, which demonstrate the ability of ADIPE to also deal with the certain environment.
C1 [Boutaib, Sofien; Elarbi, Maha; Bechikh, Slim; Ben Said, Lamjed] Univ Tunis, SMART Lab, ISG, Tunis, Tunisia.
   [Palomba, Fabio] Univ Salerno, SeSa Lab, Salerno, Italy.
C3 Universite de Tunis; University of Salerno
RP Boutaib, S (corresponding author), Univ Tunis, SMART Lab, ISG, Tunis, Tunisia.
EM boutaibsofien@yahoo.fr; arbi.maha@yahoo.com; slim.bechikh@fsegn.rnu.tn;
   fpalomba@unisa.it; lamjed.bensaid@isg.rnu.tn
OI Boutaib, Sofien/0000-0001-5238-3902
FU Swiss National Science Foundation through the SNF [PZ00P2_186090]
FX Fabio Palomba gratefully acknowledges the support of the Swiss National
   Science Foundation through the SNF Project No. PZ00P2_186090 (TED).
CR Al-Sahaf H, 2019, J ROY SOC NEW ZEAL, V49, P205, DOI 10.1080/03036758.2019.1609052
   Alcalá-Fdez J, 2011, J MULT-VALUED LOG S, V17, P255
   Amorim L, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P261, DOI 10.1109/ISSRE.2015.7381819
   [Anonymous], 1999, FUZZY SETS APPROXIMA
   [Anonymous], 1998, Practical nonparametric statistics
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Azeem MI, 2019, INFORM SOFTWARE TECH, V108, P115, DOI 10.1016/j.infsof.2018.12.009
   Barbez A, 2019, PROC IEEE INT CONF S, P114, DOI 10.1109/ICSME.2019.00021
   Barros RC, 2012, IEEE T SYST MAN CY C, V42, P291, DOI 10.1109/TSMCC.2011.2157494
   Behmo R, 2010, LECT NOTES COMPUT SC, V6314, P171, DOI 10.1007/978-3-642-15561-1_13
   Bessghaier Narjes, 2020, Services Computing - SCC 2020. 17th International Conference Held as Part of the Services Conference Federation, SCF 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12409), P67, DOI 10.1007/978-3-030-59592-0_5
   BLAIR DC, 1979, J AM SOC INFORM SCI, V30, P374, DOI 10.1002/asi.4630300621
   Bounhas M, 2014, FUZZY SET SYST, V239, P137, DOI 10.1016/j.fss.2013.07.012
   Boussaa Mohamed, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P50, DOI 10.1007/978-3-642-39742-4_6
   Boussaïd I, 2017, AUTOMAT SOFTW ENG, V24, P233, DOI 10.1007/s10515-017-0215-4
   Boutaib S., P 24 EUR C GEN PROGR, V2021, P181
   Boutaib S, 2021, EXPERT SYST APPL, V166, DOI 10.1016/j.eswa.2020.114076
   Bowers KM, 2020, J SYST SOFTWARE, V162, DOI 10.1016/j.jss.2019.110497
   Brindle A, 1980, Genetic algorithms for function optimization
   Sobrinho EVD, 2021, IEEE T SOFTWARE ENG, V47, P17, DOI 10.1109/TSE.2018.2880977
   Dhambri K, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P279
   Di Nucci D, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P612, DOI 10.1109/SANER.2018.8330266
   Du XT, 2020, SOFTWARE QUAL J, V28, P39, DOI 10.1007/s11219-019-09467-0
   DUBOIS D, 1983, FUZZY SET SYST, V10, P15, DOI 10.1016/S0165-0114(83)80099-2
   DUBOIS D, 1994, CONTROL ENG PRACT, V2, P811, DOI 10.1016/0967-0661(94)90346-8
   Dubois D, 2001, CISM COURSES LECT, P53
   Dubois D., 1994, Traitement du Signal, V11, P447
   Dubois D., 1988, Possibility Theory: an Approach to Computerized Processing of Uncertainty
   Dunford N., 1958, LINEAR OPERATORS 1
   Eiben AE, 2011, SWARM EVOL COMPUT, V1, P19, DOI 10.1016/j.swevo.2011.02.001
   Erni K, 1996, PROCEEDINGS OF THE 3RD INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, P64, DOI 10.1109/METRIC.1996.492444
   Fernandes E, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2915984
   Fontana FA, 2016, EMPIR SOFTW ENG, V21, P1143, DOI 10.1007/s10664-015-9378-4
   Fontana FA, 2017, KNOWL-BASED SYST, V128, P43, DOI 10.1016/j.knosys.2017.04.014
   Fontana FA, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P609, DOI 10.1109/SANER.2016.84
   Fontana FA, 2012, J OBJECT TECHNOL, V11, DOI 10.5381/jot.2012.11.2.a5
   Foundation A S., 2004, AP COMM 151
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Friedman N, 1997, MACH LEARN, V29, P131, DOI 10.1023/A:1007465528199
   Fu SZ, 2015, INT SYMP EMP SOFTWAR, P41
   Gopalan R, 2012, THESIS U W AUSTR
   Hadj-Kacem M, 2019, IEEE IJCNN
   Hassaine S, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P343, DOI 10.1109/QUATIC.2010.61
   Henderson-Sellers B., 1995, Object-oriented metrics: measures of complexity
   HIGASHI M, 1983, INT J GEN SYST, V9, P103, DOI 10.1080/03081078308960805
   HOLLAND JH, 1992, SCI AM, V267, P66, DOI 10.1038/scientificamerican0792-66
   Holmes CC, 2002, J ROY STAT SOC B, V64, P295, DOI 10.1111/1467-9868.00338
   Hosseini S, 2018, INFORM SOFTWARE TECH, V95, P296, DOI 10.1016/j.infsof.2017.06.004
   Jenhani I, 2010, THESIS ARTOIS
   Ilyes J, 2008, LECT NOTES COMPUT SC, V4932, P348, DOI 10.1007/978-3-540-77684-0_23
   Jenhani I, 2007, LECT NOTES ARTIF INT, V4724, P840
   Jenhani I, 2009, LECT NOTES COMPUT SC, V5590, P505, DOI 10.1007/978-3-642-02906-6_44
   Jenhani Y, 2008, INT J APPROX REASON, V48, P784, DOI 10.1016/j.ijar.2007.12.002
   Karafotias G, 2015, IEEE T EVOLUT COMPUT, V19, P167, DOI 10.1109/TEVC.2014.2308294
   Kessentini M, 2011, LECT NOTES COMPUT SC, V6603, P401, DOI 10.1007/978-3-642-19811-3_28
   Kessentini W, 2014, IEEE T SOFTWARE ENG, V40, P841, DOI 10.1109/TSE.2014.2331057
   Khomh F, 2011, J SYST SOFTWARE, V84, P559, DOI 10.1016/j.jss.2010.11.921
   Khomh F, 2009, INT CONF QUAL SOFTW, P305, DOI 10.1109/QSIC.2009.47
   Klement E.P, 2000, Triangular norms
   Kreimer J, 2005, ELECTRON NOTES THEOR, V141, P117, DOI 10.1016/j.entcs.2005.02.059
   Kretowski M, 2005, INFORMATION PROCESSING AND SECURITY SYSTEMS, P401, DOI 10.1007/0-387-26325-X_36
   Kroupa T, 2006, INT J INTELL SYST, V21, P349, DOI 10.1002/int.20139
   Langelier G., 2005, Proc. IEEE/ACM Automated Software Engineering, P214
   Lanza M, 2007, Object-oriented Metrics in Practice: Using Software Metrics To Characterize, Evaluate, and Improve the Design of Object-oriented Systems
   Li K, 2020, IEEE INT CONF AUTOM, P573, DOI 10.1145/3324884.3416617
   Liu H, 2021, IEEE T SOFTWARE ENG, V47, P1811, DOI 10.1109/TSE.2019.2936376
   Ma CY, 2009, COMPUT CHEM ENG, V33, P1602, DOI 10.1016/j.compchemeng.2009.04.005
   Maiga A., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P466, DOI 10.1109/WCRE.2012.56
   Maiga A, 2012, IEEE INT CONF AUTOM, P278, DOI 10.1145/2351676.2351723
   Mansoor U., 2013, CODE SMELLS DETECTIO
   Mansoor U, 2017, SOFTWARE QUAL J, V25, P529, DOI 10.1007/s11219-016-9309-7
   Mäntylä MV, 2004, PROC IEEE INT CONF S, P399, DOI 10.1109/ICSM.2004.1357825
   Marinescu R, 2004, PROC IEEE INT CONF S, P350, DOI 10.1109/ICSM.2004.1357820
   Marinescu R, 2002, THESIS POLITEHICA U
   Martin R.C., 2002, AGILE SOFTWARE DEV
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Oliveto R, 2010, EUR CON SFTWR MTNCE, P248, DOI 10.1109/CSMR.2010.47
   Ouni A, 2014, THESIS FACUTLY ARTS
   Ouni A, 2013, AUTOMAT SOFTW ENG, V20, P47, DOI 10.1007/s10515-011-0098-8
   Palomba F, 2018, IEEE T SOFTWARE ENG, V44, P977, DOI 10.1109/TSE.2017.2752171
   Palomba F, 2015, IEEE T SOFTWARE ENG, V41, P462, DOI 10.1109/TSE.2014.2372760
   Palomba F, 2014, PROC IEEE INT CONF S, P101, DOI 10.1109/ICSME.2014.32
   Palomba F, 2013, IEEE INT CONF AUTOM, P268, DOI 10.1109/ASE.2013.6693086
   Pan SJ, 2011, IEEE T NEURAL NETWOR, V22, P199, DOI 10.1109/TNN.2010.2091281
   Pearl J., 1985, P 7 C COGN SCI SOC, P15
   Pearl J., 1982, P NAT C ART INT, P133, DOI DOI 10.1038/4580
   Pecorelli F, 2020, IEEE WORK CONF MIN S, P220, DOI 10.1145/3379597.3387457
   Pecorelli F, 2020, J SYST SOFTWARE, V169, DOI 10.1016/j.jss.2020.110693
   Pecorelli F, 2019, INT C PROGRAM COMPRE, P93, DOI 10.1109/ICPC.2019.00023
   Qing H., 2015, ACM INT C P SER, P74
   Quinlan J. R., 1987, Proceedings of the Fourth International Workshop on Machine Learning, P31
   Ramirez A, 2019, J SYST SOFTWARE, V149, P382, DOI 10.1016/j.jss.2018.12.015
   Ratiu D, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P223
   Sahin D, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2675067
   Saidani Islem, 2020, Web Services - ICWS 2020. 27th International Conference Held as Part of the Services Conference Federation, SCF 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12406), P114, DOI 10.1007/978-3-030-59618-7_8
   Sanguesa R, 1998, INT J APPROX REASON, V18, P145, DOI 10.1016/S0888-613X(98)00012-7
   Sharma T, 2018, J SYST SOFTWARE, V138, P158, DOI 10.1016/j.jss.2017.12.034
   Taibi D, 2017, INFORM SOFTWARE TECH, V92, P223, DOI 10.1016/j.infsof.2017.08.008
   Tsang S, 2011, IEEE T KNOWL DATA EN, V23, P64, DOI 10.1109/TKDE.2009.175
   Tsantalis N, 2011, J SYST SOFTWARE, V84, P1757, DOI 10.1016/j.jss.2011.05.016
   Tsantalis N, 2009, IEEE T SOFTWARE ENG, V35, P347, DOI 10.1109/TSE.2009.1
   Tufano M, 2017, IEEE T SOFTWARE ENG, V43, P1063, DOI 10.1109/TSE.2017.2653105
   van Emden E, 2002, NINTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P97, DOI 10.1109/WCRE.2002.1173068
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Vaucher S, 2009, WORK CONF REVERSE EN, P145, DOI 10.1109/WCRE.2009.23
   Whittle J, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P79, DOI 10.1109/RE.2009.36
   Wirfs-Brock Rebecca, 2003, Object Design: Roles, Responsibilities, and Collaborations
   Yamashita A, 2013, WORK CONF REVERSE EN, P242, DOI 10.1109/WCRE.2013.6671299
   Zadeh L. A., 1978, Fuzzy Sets and Systems, V1, P3, DOI 10.1016/0165-0114(78)90029-5
   Zhu ZY, 2020, PROCEEDINGS OF THE TWENTY-NINTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P3565
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
NR 111
TC 0
Z9 0
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2022
VL 27
IS 6
AR 124
DI 10.1007/s10664-022-10142-5
PG 78
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 2J2HM
UT WOS:000815484900001
DA 2024-07-18
ER

PT J
AU Elder, S
   Zahan, N
   Shu, R
   Metro, M
   Kozarev, V
   Menzies, T
   Williams, L
AF Elder, Sarah
   Zahan, Nusrat
   Shu, Rui
   Metro, Monica
   Kozarev, Valeri
   Menzies, Tim
   Williams, Laurie
TI Do I really need all this work to find vulnerabilities? An empirical
   case study comparing vulnerability detection techniques on a Java
   application
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Vulnerability Management; Web Application Security; Penetration Testing;
   Vulnerability Scanners
ID HIGH AGREEMENT; LOW KAPPA
AB Context: Applying vulnerability detection techniques is one of many tasks using the limited resources of a software project. Objective: The goal of this research is to assist managers and other decision-makers in making informed choices about the use of software vulnerability detection techniques through an empirical study of the efficiency and effectiveness of four techniques on a Java-based web application. Method: We apply four different categories of vulnerability detection techniques - systematic manual penetration testing (SMPT), exploratory manual penetration testing (EMPT), dynamic application security testing (DAST), and static application security testing (SAST) - to an open-source medical records system. Results: We found the most vulnerabilities using SAST. However, EMPT found more severe vulnerabilities. With each technique, we found unique vulnerabilities not found using the other techniques. The efficiency of manual techniques (EMPT, SMPT) was comparable to or better than the efficiency of automated techniques (DAST, SAST) in terms of Vulnerabilities per Hour (VpH). Conclusions: The vulnerability detection technique practitioners should select may vary based on the goals and available resources of the project. If the goal of an organization is to find "all" vulnerabilities in a project, they need to use as many techniques as their resources allow.
C1 [Elder, Sarah; Zahan, Nusrat; Shu, Rui; Metro, Monica; Kozarev, Valeri; Menzies, Tim; Williams, Laurie] North Carolina State Univ NCSU, Coll Engn, Dept Comp Sci, 890 Oval Dr,Engn Bldg 2, Raleigh, NC 27695 USA.
C3 North Carolina State University
RP Elder, S (corresponding author), North Carolina State Univ NCSU, Coll Engn, Dept Comp Sci, 890 Oval Dr,Engn Bldg 2, Raleigh, NC 27695 USA.
EM seelder@ncsu.edu; laurie_williams@ncsu.edu
RI Menzies, Tim/X-7680-2019
OI Menzies, Tim/0000-0002-5040-3196; Zahan, Nusrat/0000-0002-2738-4118
FU National Science Foundation [1909516]; Direct For Computer & Info Scie &
   Enginr; Division of Computing and Communication Foundations [1909516]
   Funding Source: National Science Foundation
FX We appreciate the feedback provided by reviewers for this paper. We
   thank Jiaming Jiang for her support as teaching assistant for the
   security class. We are grateful to the I/T staff at the university for
   their assistance in ensuring that we had sufficient computing power
   running the course. We also thank the students in the software security
   class. Finally, we thank all the members of the Realsearch research
   group for their valuable feedback through this project.; This material
   is based upon work supported by the National Science Foundation under
   Grant No. 1909516. Any opinions, findings, and conclusions or
   recommendations expressed in this material are those of the author(s)
   and do not necessarily reflect the views of the National Science
   Foundation.
CR Ackerman E., 2019, Deploys Medical Delivery Drones. with U.S. Military
   Alomar N, 2020, PROCEEDINGS OF THE SIXTEENTH SYMPOSIUM ON USABLE PRIVACY AND SECURITY (SOUPS 2020), P319
   Amankwah R, 2020, SOFTWARE PRACT EXPER, V50, P1842, DOI 10.1002/spe.2870
   Anderson T, 2020, REGISTER
   [Anonymous], 2021, EXECUTIVE ORDER IMPR
   [Anonymous], 2011, NIST SP 500 283, DOI [DOI 10.6028/NIST.SP.500-283, 10.6028/NIST.SP.500-283]
   [Anonymous], 2013, 2911912013 ISOIECIEE
   [Anonymous], 2017, BUSINESS INSIDER
   [Anonymous], 2017, OWASP TOP 10 2017
   [Anonymous], 2021, RADIO NZ
   Antunes Nuno, 2010, 2010 IEEE International Conference on Web Services (ICWS), P203, DOI 10.1109/ICWS.2010.76
   Antunes N, 2009, IEEE 15TH PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P301, DOI 10.1109/PRDC.2009.54
   Austin A, 2013, INFORM SOFTWARE TECH, V55, P1279, DOI 10.1016/j.infsof.2012.11.007
   Austin A, 2011, INT SYMP EMP SOFTWAR, P97, DOI 10.1109/ESEM.2011.18
   Bannister A, 2021, DAILY SWIG
   Bartlett MS, 1937, PROC R SOC LON SER-A, V160, P0268, DOI 10.1098/rspa.1937.0109
   Bau Jason, 2012, Stanford, Tech. Rep
   Cass S., 2021, IEEE SPECTRUM
   Chaim ML., 2018, INT J SYSTEMS SOFTWA, V9, P1, DOI [10.4018/IJSSSP.2018070101, DOI 10.4018/IJSSSP.2018070101]
   CICCHETTI DV, 1990, J CLIN EPIDEMIOL, V43, P551, DOI 10.1016/0895-4356(90)90159-M
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Condon Christine., 2021, The Baltimore Sun
   Cook T. D., 1979, Quasi-experimentation: Design analysis issues for field settings
   Corbin J., 2015, BASICS QUALITATIVE R
   Cruzes DS, 2017, LECT NOTES BUS INF P, V283, P201, DOI 10.1007/978-3-319-57633-6_13
   Dambra S, 2020, P IEEE S SECUR PRIV, P1367, DOI 10.1109/SP40000.2020.00019
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   Delaitre AM, 2018, TECHNICAL REPORT, DOI [DOI 10.6028/NIST.SP.500-326, 10.6028/nist.sp.500-326]
   Doupé A, 2010, LECT NOTES COMPUT SC, V6201, P111, DOI 10.1007/978-3-642-14215-4_7
   Elder SE, 2021 IEEE ACM 43 INT, P95
   Epic Systems Corporation, 2020, HEALTHC MAPP MILK WA
   FEINSTEIN AR, 1990, J CLIN EPIDEMIOL, V43, P543, DOI 10.1016/0895-4356(90)90158-L
   Feldt R, 2010, 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING & KNOWLEDGE ENGINEERING (SEKE 2010), P374
   Feng GC, 2013, QUAL QUANT, V47, P2959, DOI 10.1007/s11135-012-9745-9
   Fielding R., 2014, RFC 7231 HYPERTEXT T
   Finifter M., 2013, 22 USENIX SECURITY S, P273
   Fonseca J, 2007, 13TH PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P365, DOI 10.1109/PRDC.2007.55
   Force J.T., 2013, NIST Special Publication, V800, P8, DOI [10.6028/NIST.SP.800-53r4, DOI 10.6028/NIST.SP.800-53R4]
   Games PA., 1976, J. Educ. Stat., V1, P113, DOI [10.3102/10769986001002113, DOI 10.3102/10769986001002113, 10.2307/1164979, DOI 10.2307/1164979]
   GitHub, 2021, STAT OCT
   Goncales L, 2021, INF SOFTW TECHNOL
   Hafiz M, 2016, EMPIR SOFTW ENG, V21, P1920, DOI 10.1007/s10664-015-9403-7
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Imtiaz Nasif, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P245, DOI 10.1109/MSR.2019.00049
   Itkonen J, 2014, EMPIR SOFTW ENG, V19, P303, DOI 10.1007/s10664-013-9266-8
   Itkonen J, 2013, IEEE T SOFTWARE ENG, V39, P707, DOI 10.1109/TSE.2012.55
   Johnson B, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P672, DOI 10.1109/ICSE.2013.6606613
   Kirk R. E., 2013, EXPT DESIGN PROCEDUR, DOI 10.4135/9781483384733
   Kitchenham B., 2015, Evidence-Based Software Engineering and Systematic Reviews
   Kitchenham B, 2017, EMPIR SOFTW ENG, V22, P579, DOI 10.1007/s10664-016-9437-5
   Klees G, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P2123, DOI 10.1145/3243734.3243804
   Liu M, 2019, IEEE ACCESS, V7, P182004, DOI 10.1109/ACCESS.2019.2960449
   Lombard M, 2002, HUM COMMUN RES, V28, P587, DOI 10.1093/hcr/28.4.587
   Lung J, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P191, DOI 10.1145/1368088.1368115
   McGraw G., 2006, Software security: building security in
   MITRE, 2021, CVE CWE MAPP GUID
   MITRE, 2016, COMM VULN EXP
   MITRE, 2022, CWE 1003 CWE VIEW WE
   MITRE, 2021, CWE VIEW WEAKN OW TO
   Morrison P, 2018, INFORM SOFTWARE TECH, V102, P146, DOI 10.1016/j.infsof.2018.05.011
   Mozilla, 2021, HTTP MESS
   Nagarakatte S, 2009, PLDI'09 PROCEEDINGS OF THE 2009 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P245, DOI 10.1145/1542476.1542504
   NVD, 2021, NAT VULN DAT
   NVD, 2021, CWE TIM
   NVD, 2021, VULN
   NVD, 2021, NVD GEN FAQS
   Okun V, 2009, 500279 NIST SP, DOI DOI 10.6028/NIST.SP.500-279
   Okun V, 2010, 2 STATIC ANAL TOOL E, DOI DOI 10.6028/NIST.SP.500-287
   Okun V, 2013, Special Publication (NIST SP), DOI DOI 10.6028/NIST.SP.500-297
   Open Web Application Security Project (OWASP) Foundation, 2021, OW TOP 10 2021
   Open Web Application Security Project (OWASP) Foundation, 2013, OWASP TOP 10 2013
   Open Web Application Security Project (OWASP) Foundation, 2021, OW TOP 10 APPL SEC R
   Open Web Application Security Project (OWASP) Foundation, 2021, OW ZAP
   Open Web Application Security Project (OWASP) Foundation, 2013, 102010 OWASP
   OPENMRS, 2019, OPENMRS
   OpenMRSAtlas, 2021, ATLAS LOUISIANA GIS
   OWASP ZAP Dev Team, 2021, GETT START FEAT AL
   Pfahl D, 2014, INT S EMP SOFTW ENG, P5
   Purkayastha S, 2020, 2020 INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND ASSURANCE (ICSSA 2020), P26, DOI 10.1109/ICSSA51305.2020.00012
   Ralph Paul, 2018, P 22 INT C EV ASS SO, P13
   Razali N. M., 2011, J. Stat. Model. and Anal., V2, P21, DOI DOI 10.1515/BILE-2015-0008
   Scandariato R, 2013, PROC INT SYMP SOFTW, P451, DOI 10.1109/ISSRE.2013.6698898
   Scanlon T, 2018, 10 TYPES APPL SECURI
   Smith B., 2012, Proceedings of the 2012 IEEE Sixth International Conference on Software Security and Reliability (SERE 2012), P108, DOI 10.1109/SERE.2012.23
   Smith B, 2011, TR20115 N CAR STAT U
   Smith J, 2020, PROCEEDINGS OF THE SIXTEENTH SYMPOSIUM ON USABLE PRIVACY AND SECURITY (SOUPS 2020), P221
   Smith J, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P248, DOI 10.1145/2786805.2786812
   SonarSource, 2019, SON DOC SEC REL RUL
   SonarSource S. A, 2016, SONARANALYZER JAVA
   StackOverflow, 2021, 2021 DEV SURV
   Team OZD, 2021, OW ZED ATT PROX ZAP
   The MITRE Corporation, 2021, CWE COMM WEAKN EN
   Tondel I. A., 2019, INF COMPUT SECUR, V27
   U.S. Cybersecurity and Infrastructure Security Agency (CISA), 2021, PROV MED CAR CRIT CO
   Ur Rahman AA, 2015, 2015 AGILE CONFERENCE, P1, DOI 10.1109/Agile.2015.12
   US Dept of Veterans Affairs Office of Information and Technology Enterprise Program Management Office, 2021, VA MON
   van der Stock A, 2019, APPL SEC VER STAND R
   Votipka D, 2018, P IEEE S SECUR PRIV, P374, DOI 10.1109/SP.2018.00003
   Walpole J., 2000, Proceedings DARPA Information Survivability Conference and Exposition. DIS-CEX'00, P119
   Wilcox RR, 2003, PSYCHOL METHODS, V8, P254, DOI 10.1037/1082-989X.8.3.254
   World Health Organization, 2020, WHAT IS QUAL CAR WHY
NR 101
TC 6
Z9 6
U1 1
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2022
VL 27
IS 6
AR 154
DI 10.1007/s10664-022-10179-6
PG 78
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 3O4IB
UT WOS:000836798500013
DA 2024-07-18
ER

PT J
AU Lin, JH
   Zhang, HX
   Adams, B
   Hassan, AE
AF Lin, Jiahuei
   Zhang, Haoxiang
   Adams, Bram
   Hassan, Ahmed E.
TI Upstream bug management in Linux distributions An empirical study of
   Debian and Fedora practices
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software ecosystems; Open source collaboration; Linux upstream package
   management; Upstream bug fixing
ID OPEN SOURCE SOFTWARE; IMPACT
AB A Linux distribution consists of thousands of packages that are either developed by in-house developers (in-house packages) or by external projects (upstream packages). Leveraging upstream packages speeds up development and improves productivity, yet bugs might slip through into the packaged code and end up propagating into downstream Linux distributions. Maintainers, who integrate upstream projects into their distribution, typically lack the expertise of the upstream projects. Hence, they could try either to propagate the bug report upstream and wait for a fix, or fix the bug locally and maintain the fix until it is incorporated upstream. Both of these outcomes come at a cost, yet, to the best of our knowledge, no prior work has conducted an in-depth analysis of upstream bug management in the Linux ecosystem. Hence, this paper empirically studies how high-severity bugs are fixed in upstream packages for two Linux distributions, i.e., Debian and Fedora. Our results show that 13.9% of the upstream package bugs are explicitly reported being fixed by upstream, and 13.3% being fixed by the distribution, while the vast majority of bugs do not have explicit information about this in Debian. When focusing on the 27.2% with explicit information, our results also indicate that upstream fixed bugs make users wait for a longer time to get fixes and require more additional information compared to fixing upstream bugs locally by the distribution. Finally, we observe that the number of bug comment links to reference information (e.g., design docs, bug reports) of the distribution itself and the similarity score between upstream and distribution bug reports are important factors for the likelihood of a bug being fixed upstream. Our findings strengthen the need for traceability tools on bug fixes of upstream packages between upstream and distributions in order to find upstream fixes easier and lower the cost of upstream bug management locally.
C1 [Lin, Jiahuei; Adams, Bram; Hassan, Ahmed E.] Queens Univ, Software Anal & Intelligence Lab SAIL, Kingston, ON, Canada.
   [Zhang, Haoxiang] Huawei Canada, Ctr Software Excellence, Kingston, ON, Canada.
C3 Queens University - Canada; Huawei Technologies
RP Zhang, HX (corresponding author), Huawei Canada, Ctr Software Excellence, Kingston, ON, Canada.
EM jhlin@cs.queensu.ca; haoxiang.zhang@acm.org; bram.adams@cs.queensu.ca;
   ahmed@cs.queensu.ca
RI KHALIFA, AHMED khalifa/HKF-2246-2023
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572
CR Adams B, 2016, EMPIR SOFTW ENG, V21, P960, DOI 10.1007/s10664-015-9371-y
   Alipour A, 2013, IEEE WORK CONF MIN S, P183, DOI 10.1109/MSR.2013.6624026
   Anbalagan P, 2009, PROC IEEE INT CONF S, P523, DOI 10.1109/ICSM.2009.5306337
   Duc AN, 2011, IFIP ADV INF COMM TE, V365, P1
   [Anonymous], 2007, P 22 IEEE ACM INT C, DOI DOI 10.1145/1321631.1321639
   [Anonymous], 2012, P ACM SIGSOFT 20 INT
   Barr E. T., 2015, ISSTA, P257
   Bettenburg N, 2008, PROC IEEE INT CONF S, P337, DOI 10.1109/ICSM.2008.4658082
   Bhattacharya Pamela., 2011, PROCEEDING 8 WORKING, P207, DOI DOI 10.1145/1985441.1985472
   Boisselle V, 2015, IEEE INT WORK C SO, P131, DOI 10.1109/SCAM.2015.7335409
   Canfora G., 2011, Proceedings of the 8th Working Conference on Mining Software Repositories (MSR'11), P143, DOI DOI 10.1145/1985441.1985463
   Canfora G, 2020, COMPUT SECUR, V99, DOI 10.1016/j.cose.2070.10706
   Claes M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P212, DOI 10.1109/MSR.2015.27
   Crowston K, 2008, J DATABASE MANAGE, V19, P1, DOI 10.4018/jdm.2008040101
   da Costa DA, 2018, EMPIR SOFTW ENG, V23, P835, DOI 10.1007/s10664-017-9548-7
   Davies Julius, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P86, DOI 10.1109/MSR.2010.5463288
   debian, DEBIAN INFORM REGARD
   debian, DEBIAN DEVELOPERS RE
   debian, DEBIAN MANAGING PACK
   Ding H, 2017, ASIA PAC SOFWR ENG, P318, DOI 10.1109/APSEC.2017.38
   docs.fedoraproject, FEDORA PACKAGING GUI
   docs.fedoraproject, FEDORA FEDORA ENG ST
   docs.fedoraproject, FEDORA CREATING PATC
   Fan YR, 2020, IEEE T SOFTWARE ENG, V46, P495, DOI 10.1109/TSE.2018.2864217
   fedoraproject, STAYING CLOSE UPSTRE
   fedoraproject, FEDORA BUG STATUS WO
   fedoraproject, FEDORA UPSTREAM RELE
   fedoraproject, FEDORA JOIN PACKAGE
   fedoraproject, FEDORA HIST SCHEDULE
   Feng Zhang, 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P225, DOI 10.1109/WCRE.2012.32
   freedesktop, UPSTREAM GUIDELINES
   Giger E., 2010, P 2 INT WORKSH REC S, P52
   Guo P J, 2010, P 32 ACMIEEE INT C S, P495
   HARRELL FE, 1984, STAT MED, V3, P143, DOI 10.1002/sim.4780030207
   Hauge O, 2010, INFORM SOFTWARE TECH, V52, P1133, DOI 10.1016/j.infsof.2010.05.008
   Herraiz I., 2011, 2011 18th Working Conference on Reverse Engineering, P219, DOI 10.1109/WCRE.2011.34
   Hu H, 2014, PROC INT SYMP SOFTW, P122, DOI 10.1109/ISSRE.2014.17
   Huelsenbeck JP, 1997, ANNU REV ECOL SYST, V28, P437, DOI 10.1146/annurev.ecolsys.28.1.437
   Jeong G, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P111, DOI 10.1145/1595696.1595715
   Just S, 2008, 2008 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P82, DOI 10.1109/VLHCC.2008.4639063
   Kim S, 2006, Proceedings of the 2006 international workshop on Mining software repositories, P173
   Lamkanfi Ahmed, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P1, DOI 10.1109/MSR.2010.5463284
   Lee D, 2020, EMPIR SOFTW ENG, V25, P3396, DOI 10.1007/s10664-020-09840-9
   Li JY, 2005, LECT NOTES COMPUT SC, V3547, P54
   Ling CX, 2003, LECT NOTES ARTIF INT, V2671, P329
   Ma WWY, 2020, PROC INT CONF SOFTW, P100, DOI 10.1145/3377811.3380442
   Ma WWY, 2017, PROC INT CONF SOFTW, P381, DOI 10.1109/ICSE.2017.42
   Marks L., 2011, INT C PRED MOD SOFTW
   McIntosh S, 2016, EMPIR SOFTW ENG, V21, P2146, DOI 10.1007/s10664-015-9381-9
   Menzies T, 2008, PROC IEEE INT CONF S, P346, DOI 10.1109/ICSM.2008.4658083
   Merilinna J, 2006, EUROMICRO CONF PROC, P170, DOI 10.1109/EUROMICRO.2006.61
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Ohira M, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P264, DOI 10.1109/ICSM.2012.6405281
   /packages.debian, DEBIAN LIST PACKAGE
   Panichella S, 2014, PROC IEEE INT CONF S, P251, DOI 10.1109/ICSME.2014.47
   perl-team.pages.debian.ne, DEBIAN QUILT DEBIAN
   Rajbahadur GK, 2021, IEEE T SOFTWARE ENG, V48, P2245, DOI 10.1109/TSE.2021.3056941
   Ray B, 2013, IEEE INT CONF AUTOM, P367, DOI 10.1109/ASE.2013.6693095
   release-monitoring, FEDORA ANITYA UPSTRE
   Shihab E, 2013, EMPIR SOFTW ENG, V18, P1005, DOI 10.1007/s10664-012-9228-6
   Stol KJ, 2011, INFORM SOFTWARE TECH, V53, P1319, DOI 10.1016/j.infsof.2011.06.007
   Storey MA, 2017, IEEE T SOFTWARE ENG, V43, P185, DOI 10.1109/TSE.2016.2584053
   Thongtanunam P, 2021, IEEE T SOFTWARE ENG, V47, P2698, DOI 10.1109/TSE.2020.2964660
   Thongtanunam P, 2016, PROC INT CONF SOFTW, P1039, DOI 10.1145/2884781.2884852
   van den Berk Ivo., 2010, Proceedings of the Fourth European Conference on Software Architecture: Companion Volume, P127, DOI DOI 10.1145/1842752.1842781
   Weimer Westley, 2006, Proceedings of the 5th International Conference on Generative Programming and Component Engineering (GPCE'06), P181, DOI DOI 10.1145/1173706.1173734
   Weiss C, 2007, P 4 INT WORKSH MIN S, P1, DOI [10.1109/MSR.2007.13, DOI 10.1109/MSR.2007.13]
   wiki.debian, DEBIAN RELEASES
   wiki.debian, UPSTREAM GUIDE
   wiki.debian, DEBIAN BUG TRIAGE WI
   wiki.ubuntu, UBUNTU ADOPT UPSTREA
   Xia X, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P174, DOI 10.1109/CSMR-WCRE.2014.6747167
   Xuan JF, 2012, PROC INT CONF SOFTW, P25, DOI 10.1109/ICSE.2012.6227209
   Zhang HY, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1042, DOI 10.1109/ICSE.2013.6606654
   Zhang Y, 2018, SOFTWAREMINING '18: PROCEEDINGS OF THE 7TH INTERNATIONAL WORKSHOP ON SOFTWARE MINING, P12, DOI 10.1145/3242887.3242891
   Zhou B, 2015, P 19 INT C EV ASS SO, P1
   Zimmermann T, 2010, IEEE T SOFTWARE ENG, V36, P618, DOI 10.1109/TSE.2010.63
NR 77
TC 0
Z9 1
U1 1
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2022
VL 27
IS 6
AR 134
DI 10.1007/s10664-022-10173-y
PG 41
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 3B9IK
UT WOS:000828248300002
DA 2024-07-18
ER

PT J
AU Springer, O
   Miler, J
AF Springer, Olga
   Miler, Jakub
TI A comprehensive overview of software product management challenges
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software product management; Software product manager; Product
   development; Survey
ID DESIGN
AB The principal focus of software product management is to ensure the economic success of the product, which means to prolong the product life as much as possible with modest expenditures to maximizs profits. Software product managers play an important role in the software development organization while being responsible for the strategy, business case, product roadmap, high-level requirements, product deployment (release-management), and retirement plan. This article explores the problems that affect the software product management process, their perceived frequency and perceived severity. The data were collected by a systematic literature review (5 main databases were analyzed), interviews (10 software product managers from IT companies), and surveys (89 participants). 95 software product management problems assigned nonexclusively to 7 areas were identified. 27 commonly mentioned software product management problems were evaluated for their perceived frequency and perceived severity. The problems perceived as the most frequent are: determining the true value of the product that the customer needs, strategy and priorities change frequently, technical debt, working in silos, and balancing between reactive and proactive work. In total, 95 problems have been identified which have been narrowed down to 27 problems based on their occurrence in at least 3 interviews. These selected problems were prioritized by perceived frequency and perceived severity. Some of the identified problems spanned beyond the software product management process itself, but they all affect the work of software product managers.
C1 [Springer, Olga; Miler, Jakub] Gdansk Univ Technol, G Narutowicza 11-12, PL-80233 Gdansk, Poland.
C3 Fahrenheit Universities; Gdansk University of Technology
RP Springer, O (corresponding author), Gdansk Univ Technol, G Narutowicza 11-12, PL-80233 Gdansk, Poland.
EM olga.springer@pg.edu.pl; jakub.miler@pg.edu.pl
OI Springer, Olga/0000-0001-7051-008X
FU DS Funds of the ETI Faculty, Gdansk University of Technology
FX This research was partially supported by the DS Funds of the ETI
   Faculty, Gdansk University of Technology. The authors thank all of the
   experts and respondents who took part in the interviews and the survey.
CR Ankiety PG., 2019, GUT CUI
   [Anonymous], 2017, The scrum guide: the definitive guide to scrum
   [Anonymous], 2021, GUID PROJ MAN BOD KN, V7th
   [Anonymous], 2019, 310102019 ISOEC
   Axelos, 2017, MAN SUCC PROJ PRINCE
   Bekkers W., 2012, 2012 IEEE 20th International Requirements Engineering Conference (RE 2012), P51, DOI 10.1109/RE.2012.6345839
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Burker J., 2015, The Invent To Learn Guide To Fun: Makerspace, Classroom, Library, and Home STEM Projects
   CMMI Institute, 2019, CMMI R V20 MOD GLANC
   Dyba T, 2005, IEEE SOFTWARE, V22, P58, DOI 10.1109/MS.2005.6
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Ebert C, 2014, J SYST SOFTWARE, V95, P10, DOI 10.1016/j.jss.2013.12.042
   Fernández DM, 2015, INFORM SOFTWARE TECH, V57, P616, DOI 10.1016/j.infsof.2014.05.008
   Fricker RD., 2017, SAGE HDB ONLINE RES, V2nd ed., P162, DOI [10.4135/9781473957992.n10, DOI 10.4135/9781473957992.N10]
   Geracie G., 2013, GUIDE PRODUCT MANAGE
   Ghazi AN, 2019, IEEE ACCESS, V7, P24703, DOI 10.1109/ACCESS.2018.2881041
   Goldkuhl G, 2012, EUR J INFORM SYST, V21, P135, DOI 10.1057/ejis.2011.54
   Harpe SE, 2015, CURR PHARM TEACH LEA, V7, P836, DOI 10.1016/j.cptl.2015.08.001
   Hove SE, 2005, 2005 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS (METRICS), P201
   ISPMA, SPM FRAM V 1 3
   Jantunen Sami, 2013, Requirements Engineering: Foundation for Software Quality. 19th International Working Conference, REFSQ 2013. Proceedings, P386, DOI 10.1007/978-3-642-37422-7_28
   Kagan P, 2016, MATEC WEB CONF, V73, DOI 10.1051/matecconf/20167307016
   Kitchenham B, 2004, Procedures for Undertaking Systematic Reviews
   Kittlaus H.-B., 2017, SOFTWARE PRODUCT MAN, DOI [10.1007/978-3-642-55140-6, DOI 10.1007/978-3-642-55140-6]
   Kittlaus H.-B., 2012, SOFTWARE FOR PEOPLE, P83
   Kristinsdottir S, 2016, LNCS 2016, V9856, P316
   López-Martínez J, 2016, 2016 FOURTH INTERNATIONAL CONFERENCE IN SOFTWARE ENGINEERING RESEARCH AND INNOVATION - CONISOFT 2016, P141, DOI 10.1109/CONISOFT.2016.30
   Maglyas A., 2012, 2012 IEEE 20th International Requirements Engineering Conference (RE 2012), P261, DOI 10.1109/RE.2012.6345812
   Maglyas A, 2017, J ADV MANAG RES, V14, P23, DOI 10.1108/JAMR-03-2016-0022
   Maglyas A, 2012, LECT NOTES BUS INF P, V114, P15
   Maglyas A, 2013, J SYST SOFTWARE, V86, P3071, DOI 10.1016/j.jss.2013.07.045
   Maglyas A, 2012, IEEE SOFTWARE, V29, P40, DOI 10.1109/MS.2012.108
   Murphy-Hill E, 2015, IEEE T SOFTWARE ENG, V41, P65, DOI 10.1109/TSE.2014.2357438
   Murray-Webster R., 2010, Management of risk: guidance for practitioners
   Palinkas LA, 2015, ADM POLICY MENT HLTH, V42, P533, DOI 10.1007/s10488-013-0528-y
   Pragmatic Institute, 2020, PRAGM FRAM
   Punter T, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P80, DOI 10.1109/ISESE.2003.1237967
   Scaled Agile Inc, 2019, WHITE PAPER ACHIEVIN
   Shahin M, 2019, EMPIR SOFTW ENG, V24, P1061, DOI 10.1007/s10664-018-9651-4
   Shull F., 2008, Guide to Advanced Empirical Software Engineering, DOI DOI 10.1007/978-1-84800-044-5
   Sommerville I., 2011, Software engineering
   Springer O, 2018, FED CONF COMPUT SCI, P985, DOI 10.15439/2018F100
   Uusitalo P, 2019, ENG CONSTR ARCHIT MA, V26, P1387, DOI 10.1108/ECAM-03-2018-0135
   VersionOne CollabNet, 2019, 13 ANN STAT AG REP
   Wagenblatt T., MANAGEMENT PROFESSIO
   Walsham G, 2006, EUR J INFORM SYST, V15, P320, DOI 10.1057/palgrave.ejis.3000589
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Zhou X, 2016, ASIA PAC SOFWR ENG, P153, DOI [10.1109/APSEC.2016.031, 10.1109/APSEC.2016.62]
NR 48
TC 1
Z9 1
U1 5
U2 27
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2022
VL 27
IS 5
AR 106
DI 10.1007/s10664-022-10134-5
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 1U7GT
UT WOS:000805577100010
OA hybrid
DA 2024-07-18
ER

PT J
AU Cazzola, W
   Favalli, L
AF Cazzola, Walter
   Favalli, Luca
TI Towards a recipe for language decomposition: quality assessment of
   language product lines
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Language product lines; Feature modularity; Software variability; Domain
   specific languages
ID SOFTWARE; MANAGEMENT; DESIGN; VARIABILITY; FRAMEWORK; METRICS; UML
AB Programming languages are complex systems that are usually implemented as monolithic interpreters and compilers. In recent years, researchers and practitioners gained interest in product line engineering to improve the reusability of language assets and the management of variability-rich systems, introducing the notions of language workbenches and language product lines (LPLs). Nonetheless, language development remains a complex activity and design or implementation flaws can easily waste the efforts of decomposing a language specification into language features. Poorly designed language decompositions result in high inter-dependent components, reducing the variability space of the LPL system and its maintainability. One should detect and fix the design flaws posthaste to prevent these risks while minimizing the development overhead. Therefore, various aspects of the quality of a language decomposition should be quantitatively measurable through adequate metrics. The evaluation, analysis and feedback of these measures should be a primary part of the engineering process of a LPL. In this paper, we present an exploratory study trying to capture these aspects by introducing a design methodology for LPLs; we define the properties of a good language decomposition and adapt a set of metrics from the literature to the framework of language workbenches. Moreover, we leverage the AiDE 2 LPL engineering environment to perform an empirical evaluation of 26 Neverlang-based LPLs based on this design methodology. Our contributions form the foundations of a design methodology for Neverlang-based LPLs. This methodology is comprised of four different elements: i) an engineering process that defines the order in which decisions are made, ii) an integrated development environment for LPL designers and iii) some best practices in the design of well-structured language decomposition when using Neverlang, supported by iv) a variety of LPL metrics that can be used to detect errors in design decisions.
C1 [Cazzola, Walter; Favalli, Luca] Univ Milan, Comp Sci Dept, Milan, Italy.
C3 University of Milan
RP Cazzola, W (corresponding author), Univ Milan, Comp Sci Dept, Milan, Italy.
EM cazzola@di.unimi.it; favalli@di.unimi.it
OI FAVALLI, LUCA/0000-0001-7452-2440; Cazzola, Walter/0000-0002-4652-8113
FU MUR project "T-LADIES" [PRIN 2020TL3X8X]
FX This work was partly supported by the MUR project "T-LADIES" (PRIN
   2020TL3X8X).
CR Al-Hajjaji M, 2017, ACM SIGPLAN NOTICES, V52, P144, DOI [10.1145/2993236.2993253, 10.1145/3093335.2993253]
   Aldekoa G, 2006, P 11 JORN ING SOFTW, P173
   Aldekoa G, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P243
   Apel S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P482, DOI 10.1109/ICSE.2013.6606594
   Bagheri E, 2011, SOFTWARE QUAL J, V19, P579, DOI 10.1007/s11219-010-9127-2
   Barais O, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE WORKSHOPS (ICSAW), P189, DOI 10.1109/ICSAW.2017.61
   Basalaj W, 2008, IMPROVEMENTS IN SYSTEM SAFETY, P43, DOI 10.1007/978-1-84800-100-8_4
   Batory D, 2000, KLUWER INT SER ENG C, V576, P227
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Bettini L, 2015, COMMUN COMPUT PHYS, V586, P63
   Bezerra C., 2015, Lecture Notes in Computer Science, P282
   Briand L., 1994, Defining and validating high-level design metrics
   Briand L. C., 1998, Empirical Software Engineering, V3, P65, DOI 10.1023/A:1009783721306
   Briand LC, 1998, FIFTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 1998, PROCEEDINGS, P246, DOI 10.1109/METRIC.1998.731251
   Butting A, 2017, ACM INT CONF PR SER, P75, DOI 10.1145/3168365.3168368
   Card D. N., 1985, Proceedings of the 8th International Conference on Software Engineering (Cat. No.85CH2139-4), P372
   CARD DN, 1986, IEEE T SOFTWARE ENG, V12, P264, DOI 10.1109/TSE.1986.6312942
   Cazzola Walter, 2013, Software Composition. 12th International Conference, SC 2013. Proceedings. LNCS 8088, P17, DOI 10.1007/978-3-642-39614-4_2
   Cazzola W., 2012, Lecture Notes in Computer Science, V7306, P162, DOI DOI 10.1007/978-3-642-30564-1_11
   Cazzola W., 2010, P 7 ECOOP WORKSH REF
   Cazzola W, 2018, COMPUT LANG SYST STR, V51, P71, DOI 10.1016/j.cl.2017.07.003
   Cazzola W, 2016, IEEE T EMERG TOP COM, V4, P404, DOI 10.1109/TETC.2015.2446192
   Chen C, 2017, PROC IEEE ACM INT C, P377, DOI 10.1109/ICSE-C.2017.75
   Chen Z., 2000, JAVA CARD TECHNOLOGY
   CHIDAMBER SR, 1991, OOPSLA 91 CONFERENCE PROCEEDINGS : OBJECT-ORIENTED PROGRAMMING SYSTEMS, LANGUAGES, AND APPLICATIONS, P197, DOI 10.1145/118014.117970
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   COLEMAN D, 1994, COMPUTER, V27, P44, DOI 10.1109/2.303623
   Coleman D, 1992, P SOFTWARE ENG PRODU, P525
   Colyer A., 2004, SEPARATION CONCERNS, V107
   Combemale B, 2014, COMPUTER, V47, P68, DOI 10.1109/MC.2014.147
   Cordy M, 2013, PROCEEDINGS OF THE 17TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE CO-LOCATED WORKSHOPS (SPLC'13 WORKSHOPS), P141
   Crane ML, 2005, LECT NOTES COMPUT SC, V3713, P97, DOI 10.1007/11557432_8
   de Lara Juan, 2012, Modelling Foundations and Applications. Proceedings 8th European Conference, ECMFA 2012, P259, DOI 10.1007/978-3-642-31491-9_20
   de Vasconcelos JB, 2017, INT J INFORM MANAGE, V37, P1499, DOI 10.1016/j.ijinfomgt.2016.05.005
   Degueule Thomas., 2015, SLE 2015 P 2015 ACM, P25, DOI DOI 10.1145/2814251.2814252
   Ebert C, 2016, IEEE SOFTWARE, V33, P27, DOI 10.1109/MS.2016.147
   El-Sharkawy S, 2019, INFORM SOFTWARE TECH, V106, P1, DOI 10.1016/j.infsof.2018.08.015
   Erdweg S, 2015, COMPUT LANG SYST STR, V44, P24, DOI 10.1016/j.cl.2015.08.007
   Erdweg S, 2013, LECT NOTES COMPUT SC, V8225, P197, DOI 10.1007/978-3-319-02654-1_11
   Erdweg S, 2011, ACM SIGPLAN NOTICES, V46, P391, DOI 10.1145/2076021.2048099
   Favalli Luca, 2020, SPLC 20, P285
   Fenton NE., 1991, Software Metrics: A Rigorous Approach
   Fernández-Sáez AM, 2018, EMPIR SOFTW ENG, V23, P3281, DOI 10.1007/s10664-018-9599-4
   Fowler M, 2005, Language workbenches: The killer-app for domain specific languages?
   Gronniger Hans, 2010, Foundations of Computer Software. Modeling, Development, and Verification of Adaptive Systems. 16th Monterey Workshop 2010. Revised Selected Papers, P17, DOI 10.1007/978-3-642-21292-5_2
   Halstead M. H., 1977, ELEMENTS SOFTWARE SC
   Hatton L, 2007, INFORM SOFTWARE TECH, V49, P475, DOI 10.1016/j.infsof.2006.07.004
   Hedin G, 2003, SCI COMPUT PROGRAM, V47, P37, DOI 10.1016/S0167-6423(02)00109-0
   HENRY S, 1990, IEEE SOFTWARE, V7, P36, DOI 10.1109/52.50772
   Her JS, 2007, INFORM SOFTWARE TECH, V49, P740, DOI 10.1016/j.infsof.2006.08.008
   Hermans F, 2020, P ACM INT COMP ED RE
   Hitz M., 1995, PROC INT S APPL CORP
   ISO/IEC/IEEE International Standard, 2017, Standard ISO/IEC/IEEE 24765, DOI [DOI 10.1109/IEEESTD.2017.8016712, 10.1109/ IEEESTD.2017.8016712, 10.1109/IEEESTD.2017.8016712]
   Jezequel JM, 2014, P 5 INT C COMPL SYST, P1
   KAISER HF, 1960, EDUC PSYCHOL MEAS, V20, P141, DOI 10.1177/001316446002000116
   Kang KC, 1990, CMUSEI9021
   Kim CHP, 2010, LECT NOTES COMPUT SC, V6418, P285, DOI 10.1007/978-3-642-16612-9_22
   Krahn Holger, 2010, International Journal on Software Tools for Technology Transfer, V12, P353, DOI 10.1007/s10009-010-0142-1
   Krieter S, 2016, PROC INT SYSTEMS SOF, P60
   Krueger CW, 2002, LECT NOTES COMPUT SC, V2290, P282
   Kühn T, 2020, SPLC'19: PROCEEDINGS OF THE 23RD INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL A, P131, DOI 10.1145/3336294.3336301
   Kühn T, 2014, LECT NOTES COMPUT SC, V8706, P141, DOI 10.1007/978-3-319-11245-9_8
   Kuhn T., 2015, P 19 INT C SOFTW PRO, P71, DOI DOI 10.1145/2791060.2791092
   Kuhn Thomas, 2016, P 20 INT SOFTWARE PR, P50
   Lanza Michele, 2006, Objectoriented metrics in practice: using software metrics to characterize, evaluate, and improve the design of object-oriented systems
   Liebig J, 2013, P 7 INT WORKSH VAR M
   Lima LG, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P517, DOI 10.1109/SANER.2016.85
   Macro A., 1987, The craft of software engineering
   Mann S, 2011, P 5 WORKSH VAR MOD S, P29
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Meinicke J, 2017, MASTERING SOFTWARE V, DOI DOI 10.1007/978-3-319-61443-4
   Meinicke J, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P629, DOI 10.1145/2889160.2889175
   Méndez-Acuña D, 2017, J SYST SOFTWARE, V133, P145, DOI 10.1016/j.jss.2017.05.042
   Méndez-Acuña D, 2016, COMPUT LANG SYST STR, V46, P206, DOI 10.1016/j.cl.2016.09.004
   Méndez-Acuña D, 2016, LECT NOTES COMPUT SC, V9679, P393, DOI 10.1007/978-3-319-35122-3_26
   Mosses PD, 2019, J COMPUT LANG, V50, P39, DOI 10.1016/j.jvlc.2018.11.003
   Ng K, 2011, CISC VIS NETW IND GL
   Cardona PAN, 2015, CUAD ACT, P154
   Oster Sebastian., 2011, P 5 WORKSHOP VARIABI, DOI [DOI 10.1145/1944892.1944901, 10.1145/1944892.1944901]
   Parnas D. L., 1972, Information Processing 71 Proceedings of the IFIP Congress 1971 Volume 1, P339
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   Pearson K., 1895, P R SOC LOND, V58, P240, DOI 10.1098/rspl.1895.0041
   Pereira JA, 2016, LECT NOTES COMPUT SC, V9679, P397, DOI 10.1007/978-3-319-35122-3_27
   Perepletchikov M, 2007, 2007 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P329, DOI 10.1109/ASWEC.2007.17
   Perrouin G, 2012, SOFTWARE QUAL J, V20, P605, DOI 10.1007/s11219-011-9160-9
   Pinto G, 2014, ACM SIGPLAN NOTICES, V49, P345, DOI [10.1145/2714064.2660235, 10.1145/2660193.2660235]
   Pohl K., 2005, Software Product Line Engineering: Foundations, Principles and Techniques, V1, DOI [10.1007/3-540-28901-1, DOI 10.1007/3-540-28901-1]
   Pressman R.S., 2005, Software engineering: a Practitioner's Approach
   Rosenmuller M, 2011, P 5 INT WORKSH VAR M, P11, DOI DOI 10.1145/1944892.1944894
   Schmid K, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P593, DOI 10.1109/ICSE.2002.1008004
   Sundermann C., 2021, 15th International Working Conference on Variability Modelling of Software-Intensive Systems, P1
   Tao Zhang, 2008, 2008 International Conference on Computer Science and Software Engineering (CSSE 2008), P500, DOI 10.1109/CSSE.2008.500
   Tavares E, 2008, SEFM 2008: SIXTH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, PROCEEDINGS, P291, DOI 10.1109/SEFM.2008.47
   ter Beek MH, 2019, P 23 INT SYST SOFTW, P39
   Thüma T, 2014, SCI COMPUT PROGRAM, V79, P70, DOI 10.1016/j.scico.2012.06.002
   Thum T., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P270, DOI 10.1109/ICSTW.2011.48
   Thum T., 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P191, DOI 10.1109/SPLC.2011.53
   Tiwari V., 1994, IEEE Transactions on Very Large Scale Integration (VLSI) Systems, V2, P437, DOI 10.1109/92.335012
   Tratt L, 2008, ACM T PROGR LANG SYS, V30, DOI 10.1145/1391956.1391958
   Trefethen AE, 2013, J COMPUT SCI-NETH, V4, P444, DOI 10.1016/j.jocs.2013.01.005
   TROY DA, 1981, J SYST SOFTWARE, V2, P113, DOI 10.1016/0164-1212(81)90031-5
   Vacchi E, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P167, DOI 10.1145/2648511.2648529
   Vacchi E, 2015, COMPUT LANG SYST STR, V43, P1, DOI 10.1016/j.cl.2015.02.001
   Vacchi E, 2013, LECT NOTES COMPUT SC, V8225, P76, DOI 10.1007/978-3-319-02654-1_5
   van der Hoek A, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P298, DOI 10.1109/METRIC.2003.1232476
   Visser E, 2014, P 2014 ACM INT S NEW, P95, DOI DOI 10.1145/2661136.2661149
   Voelter M, 2012, PROC INT CONF SOFTW, P1449, DOI 10.1109/ICSE.2012.6227070
   Voelter Markus., 2012, PROC C SYSTEMS PROGR, P121, DOI DOI 10.1145/2384716.2384767
   Volter M, 2011, INT SUMMER SCH GENER, V7680, P383
   Wachsmuth GH, 2014, IEEE SOFTWARE, V31, P35, DOI 10.1109/MS.2014.100
   Wende C, 2010, LECT NOTES COMPUT SC, V5969, P254
   White J, 2009, IEEE SOFTWARE, V26, P47, DOI 10.1109/MS.2009.95
   Wohlin C, 2003, LECT NOTES COMPUT SC, V2765, P7
   Yau S. S., 1978, Proceedings of COMPSAC 78 Computer Software and Applications Conference, P60
   Zschaler Steffen, 2009, Software Language Engineering. Second International Conference, SLE 2009. Revised Selected Papers, P334
   Zschaler S, 2010, LECT NOTES COMPUT SC, V5969, P82
NR 116
TC 6
Z9 6
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2022
VL 27
IS 4
AR 82
DI 10.1007/s10664-021-10074-6
PG 47
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0I9QT
UT WOS:000779747300001
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Soares, E
   Sizilio, G
   Santos, J
   da Costa, DA
   Kulesza, U
AF Soares, Eliezio
   Sizilio, Gustavo
   Santos, Jadson
   da Costa, Daniel Alencar
   Kulesza, Uira
TI The effects of continuous integration on software development: a
   systematic literature review
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Review
DE Continuous integration; Impact; Adoption; Software development
ID CHALLENGES; DELIVERY
AB Context Continuous integration (CI) is a software engineering technique that proclaims frequent activities to assure the software product health. Researchers and practitioners mention several benefits related to CI. However, no systematic study surveys state of the art regarding such benefits or cons. Objective This study aims to identify and interpret empirical evidence regarding how CI impacts software development. Method Through a Systematic Literature Review, we search for studies in six digital libraries. Starting from 479 studies, we select 101 empirical studies that evaluate CI in the context of software development. We thoroughly read and extract information regarding (i) the CI environment, (ii) findings related to the effects of CI, and (iii) the employed research methods. We apply a thematic synthesis to group and summarize the findings. Results Existing research has explored the positive effects of CI, such as better cooperation, or negative effects, such as adding technical and process challenges. From our thematic synthesis, we identify six themes: development activities, software process, quality assurance, integration patterns, issues & defects, and build patterns. Conclusions Empirical research in CI has been increasing over recent years. We found that much of the existing research reveals that CI brings positive effects to software development. However, CI may also bring technical challenges to software development teams. Despite the overall positive outlook regarding CI, we still find room for improvements in the existing empirical research that evaluates the effects of CI.
C1 [Soares, Eliezio; Sizilio, Gustavo] Fed Inst Rio Grande do Norte IFRN, Natal, RN, Brazil.
   [Soares, Eliezio; Kulesza, Uira] Fed Univ Rio Grande do Norte UFRN, Grad Program Syst & Comp, Natal, RN, Brazil.
   [Sizilio, Gustavo; Santos, Jadson] Fed Univ Rio Grande do Norte UFRN, Natal, RN, Brazil.
   [Kulesza, Uira] Fed Univ Rio Grande do Norte UFRN, Dept Informat & Appl Math DIMAp, Natal, RN, Brazil.
   [da Costa, Daniel Alencar] Univ Otago, Dunedin, New Zealand.
C3 Instituto Federal do Rio Grande do Norte; Universidade Federal do Rio
   Grande do Norte; Universidade Federal do Rio Grande do Norte;
   Universidade Federal do Rio Grande do Norte; University of Otago
RP Soares, E (corresponding author), Fed Inst Rio Grande do Norte IFRN, Natal, RN, Brazil.; Soares, E (corresponding author), Fed Univ Rio Grande do Norte UFRN, Grad Program Syst & Comp, Natal, RN, Brazil.
EM eliezio.soares@ifrn.edu.br; gustavo.sizilio@ifrn.edu.br;
   jadson.santos@ufrn.br; danielcalencar@otago.ac.nz; uira@dimap.ufrn.br
OI Soares de Sousa Neto, Eliezio/0000-0003-1292-828X
FU INES; CNPq [465614/2014-0, 425211/2018-5]; CAPES [88887.136410/2017-00];
   FACEPE [APQ-03991.03/17, PRONEX APQ/0388-1.03/]
FX This work is partially supported by INES (www.ines.org.br), CNPq grants
   465614/2014-0 and 425211/2018-5, CAPES grant 88887.136410/2017-00, and
   FACEPE grants APQ-03991.03/17 and PRONEX APQ/0388-1.03/14.
CR [Anonymous], 2005, Extreme programming explained: Embrace change
   Beller M, 2017, IEEE WORK CONF MIN S, P447, DOI 10.1109/MSR.2017.24
   Bernardo JH, 2018, IEEE WORK CONF MIN S, P131, DOI 10.1145/3196398.3196421
   Chen L., 2010, Towards an Evidence -Based Understanding of Electronic Data Sources, DOI DOI 10.14236/EWIC/EASE2010.17
   CI Theatre, 2017, THOUGHTWORKS
   COHEN J, 1968, PSYCHOL BULL, V70, P213, DOI 10.1037/h0026256
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Debbiche A, 2014, LECT NOTES COMPUT SC, V8892, P17, DOI 10.1007/978-3-319-13835-0_2
   Dikert K, 2016, J SYST SOFTWARE, V119, P87, DOI 10.1016/j.jss.2016.06.013
   Duvall Paul, 2018, CONTINUOUS DELIVERY
   Duvall PM., 2013, CONTINUOUS INTEGRATI
   Dyba Tore, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P225
   Dybå T, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P178
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Embury SM, 2019, SOFTWARE ENG ASPECTS, DOI DOI 10.1007/978-3-030-06019-0
   Felidré W, 2019, INT SYMP EMP SOFTWAR, P192, DOI 10.1109/ESEM.2019.8870152
   Fitzgerald B, 2017, J SYST SOFTWARE, V123, P176, DOI 10.1016/j.jss.2015.06.063
   Fowler M., 2006, Continuous integration
   Fowler M., 2017, CONTINUOUSINTEGRATIO
   Fowler M, 2013, EXTREMEPROGRAMMING
   Ghaleb TA, 2019, EMPIR SOFTW ENG, V24, P2102, DOI 10.1007/s10664-019-09695-9
   Hilton M, 2016, IEEE INT CONF AUTOM, P426, DOI 10.1145/2970276.2970358
   Holmstrom H, 2006, 2006 IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P3, DOI 10.1109/ICGSE.2006.261210
   Johanssen JO, 2018, PROCEEDINGS OF THE 2018 INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESS (ICSSP 2018), P41, DOI 10.1145/3202710.3203150
   Kitchenham B., 2007, Joint Report
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Laukkanen E, 2017, INFORM SOFTWARE TECH, V82, P55, DOI 10.1016/j.infsof.2016.10.001
   Leppanen Marko, 2015, IEEE Software, V32, P64, DOI 10.1109/MS.2015.50
   Meedeniya DA, 2019, INT J ADVA COMPUT SC, DOI DOI 10.14569/IJACSA.2019.0100411
   Pinto G, 2018, SOFTWARE PRACT EXPER, V48, P2223, DOI 10.1002/spe.2637
   Rausch T, 2017, IEEE WORK CONF MIN S, P345, DOI 10.1109/MSR.2017.54
   Robles Gregorio, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P171, DOI 10.1109/MSR.2010.5463348
   Rodríguez-Pérez G, 2018, INFORM SOFTWARE TECH, V99, P164, DOI 10.1016/j.infsof.2018.03.009
   Rogers RO, 2004, LECT NOTES COMPUT SC, V3092, P68
   Shahin M, 2017, IEEE ACCESS, V5, P3909, DOI 10.1109/ACCESS.2017.2685629
   Soares E, 2021, ZENODO, DOI [10.5281/zenodo.4545623, DOI 10.5281/ZENODO.4545623]
   Stahl D, 2013, P 12 IASTED INT C SO, P736, DOI 10.2316/p.2013.796-012
   Ståhl D, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P54, DOI 10.1145/2591062.2591186
   Ståhl D, 2014, J SYST SOFTWARE, V87, P48, DOI 10.1016/j.jss.2013.08.032
   Vasilescu B, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P805, DOI 10.1145/2786805.2786850
   Vassallo C, 2019, PROC INT CONF SOFTW, P105, DOI 10.1109/ICSE.2019.00028
   Vassallo C, 2018, PROC IEEE INT CONF S, P564, DOI 10.1109/ICSME.2018.00068
   Viggiato M, 2019, INT CONF GLOBAL SOFT, P84, DOI 10.1109/ICGSE.2019.00013
   Volf Z, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P872, DOI 10.1145/3106237.3117766
   Wheelan SA, 1996, SMALL GR RES, V27, P143, DOI 10.1177/1046496496271007
   Yu Y, 2016, SCI CHINA INFORM SCI, V59, DOI 10.1007/s11432-016-5595-8
   Zampetti F, 2017, IEEE WORK CONF MIN S, P334, DOI 10.1109/MSR.2017.2
   Zhao YY, 2017, IEEE INT CONF AUTOM, P60, DOI 10.1109/ASE.2017.8115619
NR 48
TC 9
Z9 9
U1 4
U2 15
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAY
PY 2022
VL 27
IS 3
AR 78
DI 10.1007/s10664-021-10114-1
PG 61
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0D8GR
UT WOS:000776227600002
DA 2024-07-18
ER

PT J
AU Stol, KJ
   Schaarschmidt, M
   Goldblit, S
AF Stol, Klaas-Jan
   Schaarschmidt, Mario
   Goldblit, Shelly
TI Gamification in software engineering: the mediating role of developer
   engagement and job satisfaction
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Gamification; Developer engagement; Behavioral software engineering; Job
   satisfaction; Structural equation modeling
ID PROCESS IMPROVEMENT; FIT INDEXES; COMMUNITIES; MOTIVATION; VARIABLES;
   QUALITY
AB Gamification seeks to encourage behavior of participants by borrowing elements of games, such as scoring points. Few rigorous studies exist of gamification in software organizations, and several questions have remained unanswered, for example, what might drive developers to partake, and what are the consequences of developer engagement. This article seeks to provide some answers through a rigorous empirical study at one organization that created an internal gamification platform. We develop a theoretical model that seeks to explain why developers may participate, and develop the concept of developer engagement, which we link to job satisfaction. We collected data from two sources that were linked together: developer opinion data collected through a survey, and data from the organization's version control system. We test our theoretical model using structural equation modeling and moderation analysis, and find support for our model. These findings suggest that gamification can be an effective mechanism to engage developers within the organization, and that developer engagement is positively associated with job satisfaction, which is a key outcome that is of great interest to software organizations.
C1 [Stol, Klaas-Jan] Univ Coll Cork, Lero Irish Software Res Ctr, Sch Comp Sci & Informat Technol, Cork, Ireland.
   [Schaarschmidt, Mario] Paderborn Univ, Serv Management & Technol Mkt, Paderborn, Germany.
   [Goldblit, Shelly] Dell Technol, Software Serv, Haifa, Israel.
C3 University College Cork; University of Paderborn
RP Stol, KJ (corresponding author), Univ Coll Cork, Lero Irish Software Res Ctr, Sch Comp Sci & Informat Technol, Cork, Ireland.
EM k.stol@ucc.ie
RI Stol, Klaas-Jan/I-6269-2013
OI Stol, Klaas-Jan/0000-0002-1038-5050
FU Science Foundation Ireland [15/SIRG/3293, 13/RC/2094 P2]; European
   Regional Development Fund through the Southern & Eastern Regional
   Operational Programme
FX This work was supported, in part, by Science Foundation Ireland grant
   15/SIRG/3293 and 13/RC/2094 P2 and co-funded under the European Regional
   Development Fund through the Southern & Eastern Regional Operational
   Programme to Lero-the Irish Software Research Centre (www.lero.ie).
CR Adams PJ, 2008, INT FED INFO PROC, V275, P333
   Alhammad MM, 2020, J SOFTW-EVOL PROC, V32, DOI 10.1002/smr.2231
   Alhammad MM, 2018, J SYST SOFTWARE, V141, P131, DOI 10.1016/j.jss.2018.03.065
   Altair de Melo Alexandre, 2014, Social Computing and Social Media. 6th International Conference, SCSM 2014, Held as Part of HCI International 2014. Proceedings: LNCS 8531, P550, DOI 10.1007/978-3-319-07632-4_52
   [Anonymous], 2012, P SIGCH C HUM FACT C, DOI [DOI 10.1145/2207676.2208358, 1Θ.1145/22Θ7676.22Θ8358, 10.1145/2207676.2208358]
   [Anonymous], 2016, PRINCIPLES PRACTICE
   [Anonymous], 2014, Proceedings of the 17th ACM conference on Computer supported cooperative work social computing
   Aurum A, 2008, INFORM SOFTWARE TECH, V50, P511, DOI 10.1016/j.infsof.2007.05.005
   Badihi S, 2017, IEEE SOFTWARE, V34, P71, DOI 10.1109/MS.2017.45
   Bagozzi RP, 2006, MANAGE SCI, V52, P1099, DOI 10.1287/mnsc.1060.0545
   Beecham S, 2008, INFORM SOFTWARE TECH, V50, P860, DOI 10.1016/j.infsof.2007.09.004
   Bitrián P, 2021, J BUS RES, V132, P170, DOI 10.1016/j.jbusres.2021.04.028
   Bolin JH, 2014, J EDUC MEAS, V51, P335, DOI 10.1111/jedm.12050
   Bollen KA, 2011, MIS QUART, V35, P359
   Braskamp LA, 2009, CULTURE, SELF, AND, MOTIVATION: ESSAYS IN HONOR OF MARTIN L. MAEHR, P21
   Capra E, 2008, IEEE T SOFTWARE ENG, V34, P765, DOI 10.1109/TSE.2008.68
   Cheong C., 2013, PACIS 2013 Proceedings, P1
   Chiu CM, 2006, DECIS SUPPORT SYST, V42, P1872, DOI 10.1016/j.dss.2006.04.001
   Cooper D., 2018, ADOPTING INNERSOURCE
   Dabbish L, 2012, P ACM 2012 C COMP SU, P1277, DOI [10.1145/2145204.2145396, DOI 10.1145/2145204.2145396]
   Dal Sasso T, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P261, DOI 10.1109/SANER.2017.7884627
   Deterding S., 2012, Interactions, V19, P14, DOI DOI 10.1145/2212877.2212883
   Deterding S., 2011, P 15 INT AC MINDTREK, P9, DOI [10.1145/2181037.2181040, DOI 10.1145/2181037.2181040]
   Devi V. Rama, 2009, Human Resource Management International Digest, V17, P3, DOI 10.1108/09670730910940186
   Dubois D.J., 2013, Proceedings of the 2013 ninth Joint Meeting on Foundations of Software Engineering, P659
   Finney S., 2012, STRUCTURAL EQUATION, V2nd
   FORNELL C, 1981, J MARKETING RES, V18, P39, DOI 10.2307/3151312
   França C, 2020, IEEE T SOFTWARE ENG, V46, P118, DOI 10.1109/TSE.2018.2842201
   Fraser G, 2017, 2017 IEEE/ACM 12TH INTERNATIONAL WORKSHOP ON AUTOMATION OF SOFTWARE TESTING (AST), P2, DOI 10.1109/AST.2017.20
   Furr M.R., 2008, PSYCHOMETRICS INTRO
   Gana K., 2019, Structural Equation with Lavaan, P1
   García F, 2017, J SYST SOFTWARE, V132, P21, DOI 10.1016/j.jss.2017.06.021
   Garcia-Mireles GA, 2019, INT C SOFTWARE PROCE, P116
   Grant S, 2013, IEEE WORK CONF MIN S, P65, DOI 10.1109/MSR.2013.6624007
   Graziotin D, 2021, ACM T SOFTW ENG METH, V31, P1
   Hair JF, 2010, Multivariate data analysis
   Hamari J, 2014, P ANN HICSS, P3025, DOI 10.1109/HICSS.2014.377
   Henseler J, 2015, J ACAD MARKET SCI, V43, P115, DOI 10.1007/s11747-014-0403-8
   Herranz E, 2015, P EUR C SOFTW PROC I, P127, DOI DOI 10.1007/978-3-319-24647-5_11
   Herranz E, 2019, IET SOFTW, V13, P112, DOI 10.1049/iet-sen.2018.5120
   Hertel G, 2003, RES POLICY, V32, P1159, DOI 10.1016/S0048-7333(03)00047-7
   Hu LT, 1999, STRUCT EQU MODELING, V6, P1, DOI 10.1080/10705519909540118
   Jordan PJ, 2020, AUST J MANAGE, V45, P3, DOI 10.1177/0312896219871976
   KAHN WA, 1990, ACAD MANAGE J, V33, P692, DOI 10.5465/256287
   Karanika-Murray M, 2015, J MANAGE PSYCHOL, V30, P1019, DOI 10.1108/JMP-11-2013-0359
   Khandelwal S, 2017, PROCEEDINGS OF THE 10TH INNOVATIONS IN SOFTWARE ENGINEERING CONFERENCE, P122, DOI 10.1145/3021460.3021474
   Kline R.B., 2012, HDB STRUCTURAL EQUAT, P111
   Lenberg P, 2015, J SYST SOFTWARE, V107, P15, DOI 10.1016/j.jss.2015.04.084
   Li W, 2012, UIST'12: PROCEEDINGS OF THE 25TH ANNUAL ACM SYMPOSIUM ON USER INTERFACE SOFTWARE AND TECHNOLOGY, P103
   Lindsjorn Y, 2016, J SYST SOFTWARE, V122, P274, DOI 10.1016/j.jss.2016.09.028
   Loehlin J.C, 2017, LATENT VARIABLE MODE
   Lombriser P, 2016, LECT NOTES COMPUT SC, V9619, P171, DOI 10.1007/978-3-319-30282-9_12
   Longo M, 2011, INFORM MANAGE-AMSTER, V48, P278, DOI 10.1016/j.im.2011.06.005
   Macey WH, 2008, IND ORGAN PSYCHOL-US, V1, P3, DOI 10.1111/j.1754-9434.2007.0002.x
   Machuca-Villegas L., 2018, PROC INT C SOFTWARE, P41
   Maehr M.L., 1986, MOTIVATION FACTOR TH
   Mäntylä MV, 2016, LECT NOTES COMPUT SC, V10027, P611, DOI 10.1007/978-3-319-49094-6_46
   Marczewski A.C., 2013, Gamification: A simple introduction and a bit more
   Marques R, 2020, EMPIR SOFTW ENG, V25, P2583, DOI 10.1007/s10664-020-09816-9
   Meldrum S, 2017, P 21 INT C EVALUATIO, P180
   Morschheuser B, 2018, INFORM SOFTWARE TECH, V95, P219, DOI 10.1016/j.infsof.2017.10.015
   Morschheuser B, 2016, P ANN HICSS, P4375, DOI 10.1109/HICSS.2016.543
   Neto PS, 2019, IET SOFTW, V13, P129, DOI 10.1049/iet-sen.2018.5149
   Passos E.B., 2011, Games and Digital Entertainment (SBGAMES'11), P260
   Pedreira O, 2015, INFORM SOFTWARE TECH, V57, P157, DOI 10.1016/j.infsof.2014.08.007
   Podsakoff PM, 2003, J APPL PSYCHOL, V88, P879, DOI 10.1037/0021-9010.88.5.879
   Prause CR, 2012, PPIG, P17
   R Studio Team, 2020, RSTUDIO INT DEV ENV
   Ralph P, 2020, EMPIR SOFTW ENG, V25, P4927, DOI 10.1007/s10664-020-09875-y
   Rapp A, 2019, INT J HUM-COMPUT ST, V127, P1, DOI 10.1016/j.ijhcs.2018.11.007
   Ree MJ, 2005, PERS PSYCHOL, V58, P853
   Reinartz W, 2009, INT J RES MARK, V26, P332, DOI 10.1016/j.ijresmar.2009.08.001
   Rhemtulla M, 2012, PSYCHOL METHODS, V17, P354, DOI 10.1037/a0029315
   Richter G., 2015, GAMIFICATION ED BUSI, P21, DOI [10.1007/978-3-319-10208-5_2, DOI 10.1007/978-3-319-10208-5_2]
   Rigdon EE., 2017, MARKETING ZFP, V39, P4, DOI [DOI 10.15358/0344-1369-2017-3-4, 10.15358/0344-1369-2017-3-4]
   Rosseel Y, 2012, J STAT SOFTW, V48, P1, DOI 10.18637/jss.v048.i02
   Russo D, 2021, ACM COMPUT SURV, V54, DOI 10.1145/3447580
   Saks A. M., 2006, Journal of Managerial Psychology, V21, P600, DOI [10.1108/02683940610690169, https://doi.org/10.1108/02683940610690169, DOI 10.1108/02683940610690169]
   Sarstedt M., 2016, PRIMER PARTIAL LEAST
   Sarstedt M, 2019, AUSTRALAS MARK J, V27, P197, DOI 10.1016/j.ausmj.2019.05.003
   Savalei V, 2018, MULTIVAR BEHAV RES, V53, P419, DOI 10.1080/00273171.2018.1455142
   Schaarschmidt M, 2019, INT J INNOV MANAG, V23, DOI 10.1142/S1363919619500336
   Schaufeli WB., 2013, What is engagement? Employee Engagement in Theory and Practice, P29, DOI 10.4324/9780203076965-10
   Sharma GG, 2020, J SYST SOFTWARE, V159, DOI 10.1016/j.jss.2019.110442
   Singer L., 2012, Proceedings 2012 2nd International Workshop on Games and Software Engineering: Realizing User Engagement with Game Engineering Techniques (GAS 2012), P5, DOI 10.1109/GAS.2012.6225927
   Singer L., 2013, THESIS GW LEIBNIZ U
   Snipes W, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P105, DOI 10.1145/2591062.2591171
   Stol KJ, 2019, IEEE T SOFTWARE ENG, V45, P237, DOI 10.1109/TSE.2017.2774297
   Stol KJ, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3241743
   Stol KJ, 2017, IEEE SOFTWARE, V34, P30, DOI 10.1109/MS.2017.52
   Strode DE, 2016, INFORM SYST FRONT, V18, P23, DOI 10.1007/s10796-015-9574-1
   Suff P., 2008, Going the extra mile. the relationship between reward and employee engagement
   Sukale R., 2014, 32 ACM C HUM FACT CO
   Tabachnick, 2013, Using multivariate statistics, V6th
   Tarka P., 2017, Archives of Data Science, V2, P1, DOI DOI 10.5445/KSP/1000058749/10
   van Doorn J, 2010, J SERV RES-US, V13, P253, DOI 10.1177/1094670510375599
   Vargas-Enríquez J, 2015, 2015 IEEE 7TH INTERNATIONAL CONFERENCE ON GAMES AND VIRTUAL WORLDS FOR SERIOUS APPLICATIONS (VS-GAMES), P131
   von Ahn L, 2006, COMPUTER, V39, P92, DOI 10.1109/MC.2006.196
   Welbers K., 2019, E-Learning and Digital Media, V16, P92, DOI DOI 10.1177/2042753018818342
   Williams LJ, 2011, ORGAN RES METHODS, V14, P350, DOI 10.1177/1094428110391472
   Yi LL, 2012, PROCEEDINGS OF THE 2012 8TH INTERNATIONAL SYMPOSIUM ON COMMUNICATION SYSTEMS, NETWORKS & DIGITAL SIGNAL PROCESSING (CSNDSP)
   Yilmaz M, 2019, IET SOFTW, V13, P97, DOI 10.1049/iet-sen.2019.0052
   Yilmaz M, 2016, TEH VJESN, V23, P237, DOI 10.17559/TV-20140922220409
   Zhao XS, 2010, J CONSUM RES, V37, P197, DOI 10.1086/651257
   Zichermann G., 2011, GAMIFICATION DESIGN
NR 105
TC 1
Z9 1
U1 4
U2 31
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2022
VL 27
IS 2
AR 35
DI 10.1007/s10664-021-10062-w
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA XX7FP
UT WOS:000736456800001
PM 35002475
OA Bronze, Green Published
DA 2024-07-18
ER

PT J
AU Hata, H
   Novielli, N
   Baltes, S
   Kula, RG
   Treude, C
AF Hata, Hideaki
   Novielli, Nicole
   Baltes, Sebastian
   Kula, Raula Gaikovina
   Treude, Christoph
TI GitHub Discussions: An exploratory study of early adoption
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE GitHub discussions; Communications; Sentiment; Empirical study;
   Exploratory study
ID SOFTWARE; SENTIMENT; KAPPA; ISSUE
AB Discussions is a new feature of GitHub for asking questions or discussing topics outside of specific Issues or Pull Requests. Before being available to all projects in December 2020, it had been tested on selected open source software projects. To understand how developers use this novel feature, how they perceive it, and how it impacts the development processes, we conducted a mixed-methods study based on early adopters of GitHub discussions from January until July 2020. We found that: (1) errors, unexpected behavior, and code reviews are prevalent discussion categories; (2) there is a positive relationship between project member involvement and discussion frequency; (3) developers consider GitHub Discussions useful but face the problem of topic duplication between Discussions and Issues; (4) Discussions play a crucial role in advancing the development of projects; and (5) positive sentiment in Discussions is more frequent than in Stack Overflow posts. Our findings are a first step towards data-informed guidance for using GitHub Discussions, opening up avenues for future work on this novel communication channel.
C1 [Hata, Hideaki] Shinshu Univ, Nagano, Japan.
   [Novielli, Nicole] Univ Bari, Bari, Italy.
   [Baltes, Sebastian] Univ Adelaide, QAware GmbH, Adelaide, SA, Australia.
   [Kula, Raula Gaikovina] Nara Inst Sci & Technol, Ikoma, Japan.
   [Treude, Christoph] Univ Melbourne, Parkville, Vic, Australia.
C3 Shinshu University; Universita degli Studi di Bari Aldo Moro; University
   of Adelaide; Nara Institute of Science & Technology; University of
   Melbourne
RP Hata, H (corresponding author), Shinshu Univ, Nagano, Japan.
EM hata@shinshu-u.ac.jp; nicole.novielli@uniba.it; research@sbaltes.com;
   raula-k@is.naist.jp; christoph.treude@unimelb.edu.au
RI Hata, Hideaki/N-7103-2019; Hata, Hideaki/GQB-2557-2022; Treude,
   Christoph/AAZ-6257-2021; Novielli, Nicole/Y-9583-2019; Kula,
   Raula/AAD-6079-2019
OI Hata, Hideaki/0000-0003-0708-5222; Novielli, Nicole/0000-0003-1160-2608;
   Kula, Raula/0000-0003-2324-0608; Treude, Christoph/0000-0002-6919-2149
FU Grants-in-Aid for Scientific Research [20K19774, 20H05706] Funding
   Source: KAKEN
CR Abdellatif A, 2020, EMPIR SOFTW ENG, V25, P1834, DOI 10.1007/s10664-019-09788-5
   Allamanis M, 2013, IEEE WORK CONF MIN S, P53, DOI 10.1109/MSR.2013.6624004
   Aranda J, 2009, PROC INT CONF SOFTW, P298, DOI 10.1109/ICSE.2009.5070530
   Arya D, 2019, PROC INT CONF SOFTW, P454, DOI 10.1109/ICSE.2019.00058
   Balali S., 2020, Proceedings of the 16th International Symposium on Open Collaboration, P1
   Baltes S, 2019, EMPIR SOFTW ENG, V24, P1259, DOI 10.1007/s10664-018-9650-5
   Baltes S, 2018, IEEE WORK CONF MIN S, P319, DOI 10.1145/3196398.3196430
   Beyer S, 2020, EMPIR SOFTW ENG, V25, P2258, DOI 10.1007/s10664-019-09758-x
   Beyer S, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P430, DOI [10.1109/MSR.2016.051, 10.1145/2901739.2901750]
   Bo Pang, 2008, Foundations and Trends in Information Retrieval, V2, P1, DOI 10.1561/1500000001
   Borges H, 2016, PROC IEEE INT CONF S, P334, DOI 10.1109/ICSME.2016.31
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   Calefato F, 2019, 2019 IEEE/ACM 4TH INTERNATIONAL WORKSHOP ON EMOTION AWARENESS IN SOFTWARE ENGINEERING (SEMOTION 2019), P34, DOI 10.1109/SEmotion.2019.00014
   Calefato F, 2018, EMPIR SOFTW ENG, V23, P1352, DOI 10.1007/s10664-017-9546-9
   Calefato F, 2018, INFORM SOFTWARE TECH, V94, P186, DOI 10.1016/j.infsof.2017.10.009
   Chatterjee P, 2021, PROC INT CONF SOFTW, P1260, DOI 10.1109/ICSE43902.2021.00115
   Cleary B, 2013, 2013 6TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P159, DOI 10.1109/CHASE.2013.6614756
   Cleveland W.S., 1996, Contrib. Stat, P10, DOI [DOI 10.1007/978-3-642-48425-4_2, 10.1007/978-3-642-48425-42, DOI 10.1007/978-3-642-48425-42]
   Cohen J., 1988, STAT POWER ANAL BEHA
   Dias E, 2021, PROC INT CONF SOFTW, P982, DOI 10.1109/ICSE43902.2021.00093
   Ebert F, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P49, DOI [10.1109/SANER.2019.8668024, 10.1109/saner.2019.8668024]
   FLEISS JL, 1973, EDUC PSYCHOL MEAS, V33, P613, DOI 10.1177/001316447303300309
   Gachechiladze D, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS TRACK (ICSE-NIER), P11, DOI 10.1109/ICSE-NIER.2017.18
   Giuffrida R, 2013, INFORM SOFTWARE TECH, V55, P1143, DOI 10.1016/j.infsof.2013.01.004
   Guzman E., 2014, Association for Computing Machinery, P352
   Guzzi A, 2013, IEEE WORK CONF MIN S, P277, DOI 10.1109/MSR.2013.6624039
   Hata H, 2021, RES ARTIFACT EXPLORA, DOI DOI 10.5281/ZENODO.5026134
   Hata H, 2019, PROC INT CONF SOFTW, P1211, DOI 10.1109/ICSE.2019.00123
   Hata H, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING CHASE 2015, P15, DOI 10.1109/CHASE.2015.9
   Hirao T, 2020, IEEE Transactions on Software Engineering, DOI [DOI 10.1109/TSE.2020.2977907, 10.1109/TSE.2020.2977907]
   Hirao T, 2019, IEICE T INF SYST, VE102D, P2423, DOI 10.1587/transinf.2019MPP0005
   Islam MR, 2017, IEEE WORK CONF MIN S, P203, DOI 10.1109/MSR.2017.9
   Jiang J, 2017, INFORM SOFTWARE TECH, V84, P48, DOI 10.1016/j.infsof.2016.10.006
   Lin B, 2019, PROC INT CONF SOFTW, P548, DOI 10.1109/ICSE.2019.00066
   Maipradit R, 2020, IEEE INT WORK C SO, P54, DOI 10.1109/SCAM51674.2020.00011
   Maipradit R, 2020, EMPIR SOFTW ENG, V25, P3770, DOI 10.1007/s10664-020-09854-3
   Mäntylä M, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P247, DOI [10.1109/MSR.2016.033, 10.1145/2901739.2901752]
   Matsumoto K., 2019, ARXIV191006932
   Morrison P, 2015, 12 WORKING C MINING, P69
   Munaiah N, 2017, EMPIR SOFTW ENG, V22, P3219, DOI 10.1007/s10664-017-9512-6
   Murgia A., 2014, Proceedings of the 11th working conference on mining software repositories, Ved, P262
   Novielli N, 2019, IEEE SOFTWARE, V36, P6, DOI 10.1109/MS.2019.2924013
   Novielli N, 2018, IEEE WORK CONF MIN S, P364, DOI 10.1145/3196398.3196403
   Novielli N, 2019, J SYST SOFTWARE, V148, P180, DOI 10.1016/j.jss.2018.11.016
   Ortu M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P303, DOI 10.1109/MSR.2015.35
   Pascarella Luca, 2018, Proceedings of the ACM on Human-Computer Interaction, V2, DOI 10.1145/3274404
   Pletea D., 2014, 11 WORKING C MSR, P348, DOI [10.1145/2597073.2597117, DOI 10.1145/2597073.2597117]
   Potdar A, 2014, PROC IEEE INT CONF S, P91, DOI 10.1109/ICSME.2014.31
   Rahman MM, 2017, IEEE WORK CONF MIN S, P215, DOI 10.1109/MSR.2017.17
   Raman N, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2020), P57, DOI 10.1145/3377816.3381732
   Robillard MP, 2020, SIGCSE 2020: PROCEEDINGS OF THE 51ST ACM TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION, P72, DOI 10.1145/3328778.3366832
   Rosen C, 2016, EMPIR SOFTW ENG, V21, P1192, DOI 10.1007/s10664-015-9379-3
   Sahar H, 2021, J SYST SOFTWARE, V172, DOI 10.1016/j.jss.2020.110852
   Sinha V, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P520, DOI [10.1109/MSR.2016.069, 10.1145/2901739.2903501]
   Steinmacher I, 2019, IEEE SOFTWARE, V36, P41, DOI 10.1109/MS.2018.110162131
   Steinmacher I, 2015, INFORM SOFTWARE TECH, V59, P67, DOI 10.1016/j.infsof.2014.11.001
   Storey MA, 2017, IEEE T SOFTWARE ENG, V43, P185, DOI 10.1109/TSE.2016.2584053
   Storey MA, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P251, DOI 10.1145/1368088.1368123
   Sulistyo Nugroho Y, 2020, ARXIV200909130
   Thelwall M, 2010, J AM SOC INF SCI TEC, V61, P2544, DOI 10.1002/asi.21416
   Treude C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P804, DOI 10.1145/1985793.1985907
   Tsay J, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P144, DOI 10.1145/2635868.2635882
   Uddin G, 2017, IEEE INT CONF AUTOM, P978, DOI 10.1109/ASE.2017.8115715
   Vasilescu B, 2012, PROCEEDINGS OF THE 2012 ASE INTERNATIONAL CONFERENCE ON SOCIAL INFORMATICS (SOCIALINFORMATICS 2012), P332, DOI 10.1109/SocialInformatics.2012.81
   Viera AJ, 2005, FAM MED, V37, P360
   Wang SW, 2020, IEEE T SOFTWARE ENG, V46, P1024, DOI 10.1109/TSE.2018.2874470
   Wang Shaowei, 2013, SAC '13 Proceedings of the 28th Annual ACM Symposium on Applied Computing, P1019
   Yang D, 2017, IEEE WORK CONF MIN S, P280, DOI 10.1109/MSR.2017.13
NR 68
TC 12
Z9 13
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN
PY 2022
VL 27
IS 1
AR 3
DI 10.1007/s10664-021-10058-6
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WL0WL
UT WOS:000710136400003
OA Green Submitted, hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Rani, P
   Panichella, S
   Leuenberger, M
   Ghafari, M
   Nierstrasz, O
AF Rani, Pooja
   Panichella, Sebastiano
   Leuenberger, Manuel
   Ghafari, Mohammad
   Nierstrasz, Oscar
TI What do class comments tell us? An investigation of comment evolution
   and practices in Pharo Smalltalk
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Commenting practices; Class comment analysis; Comment evolution;
   Template analysis; Pharo; Program comprehension
AB Context Previous studies have characterized code comments in various programming languages, showing how high quality of code comments is crucial to support program comprehension activities, and to improve the effectiveness of maintenance tasks. However, very few studies have focused on understanding developer practices to write comments. None of them has compared such developer practices to the standard comment guidelines to study the extent to which developers follow the guidelines. Objective Therefore, our goal is to investigate developer commenting practices and compare them to the comment guidelines. Method This paper reports the first empirical study investigating commenting practices in Pharo Smalltalk. First, we analyze class comment evolution over seven Pharo versions. Then, we quantitatively and qualitatively investigate the information types embedded in class comments. Finally, we study the adherence of developer commenting practices to the official class comment template over Pharo versions. Results Our results show that there is a rapid increase in class comments in the initial three Pharo versions, while in subsequent versions developers added comments to both new and old classes, thus maintaining a similar code to comment ratio. We furthermore found three times as many information types in class comments as those suggested by the template. However, the information types suggested by the template tend to be present more often than other types of information. Additionally, we find that a substantial proportion of comments follow the writing style of the template in writing these information types, but they are written and formatted in a non-uniform way. Conclusion The results suggest the need to standardize the commenting guidelines for formatting the text, and to provide headers for the different information types to ensure a consistent style and to identify the information easily. Given the importance of high-quality code comments, we draw numerous implications for developers and researchers to improve the support for comment quality assessment tools.
C1 [Rani, Pooja; Leuenberger, Manuel; Nierstrasz, Oscar] Univ Bern, Software Composit Grp, CH-3012 Bern, Switzerland.
   [Panichella, Sebastiano] Zurich Univ Appl Sci, Zurich, Switzerland.
   [Ghafari, Mohammad] Univ Auckland, Sch Comp Sci, Auckland, New Zealand.
C3 University of Bern; Zurich University of Applied Sciences; University of
   Auckland
RP Rani, P (corresponding author), Univ Bern, Software Composit Grp, CH-3012 Bern, Switzerland.
EM pooja.rani@inf.unibe.ch; panc@zhaw.ch; m.ghafari@auckland.ac.nz
OI , Pooja Rani/0000-0001-5127-4042; Panichella,
   Sebastiano/0000-0003-4120-626X
FU Swiss National Science Foundation [200020-181973]; Swiss National
   Science Foundation (SNF) [200020_181973] Funding Source: Swiss National
   Science Foundation (SNF)
FX We gratefully acknowledge the financial support of the Swiss National
   Science Foundation for the project "Agile Software Assistance" (SNSF
   project No. 200020-181973, Feb 1, 2019 -Apr 30, 2022).
CR [Anonymous], 2019, REPLICATION PACKAGE
   [Anonymous], 2020, ORACLE DOCUMENTATION
   [Anonymous], 2020, MOOSE
   [Anonymous], 2020, GOOGLE STYLE GUIDELI
   [Anonymous], 2009, CHI 09 EXTENDED ABST, DOI [10.1145/1520340.1520678, DOI 10.1145/1520340.1520678]
   Bavota G, 2013, PROC IEEE INT CONF S, P210, DOI 10.1109/ICSM.2013.32
   Cioch FA, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P286, DOI 10.1109/ICSM.1996.565018
   Cline A, 2015, AGILE DEV REAL WORLD, P221
   Cornelissen B, 2009, IEEE T SOFTWARE ENG, V35, P684, DOI 10.1109/TSE.2009.28
   de Souza S., 2006, J BRAZ COMPUT SOC, V12, P31, DOI DOI 10.1007/BF03194494
   de Souza S.C.B., 2005, P 23 ANN INT C DES C, P68, DOI [10.1145/1085313, 10.1145/1085313.1085331]
   Dias M, 2014, SOFTWARE PRACT EXPER, V44, P433, DOI 10.1002/spe.2136
   Ducasse S., 2005, Proceedings of the 10th European Software Engineering Conference Held Jointly with 13th ACM SIGSOFT International Symposium on Foundations of Software Engineering, ESEC/FSE-13, P99
   Farooq M, 2015, J QUALITY TECHNOLOGY, V10
   Fluri B, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P70, DOI 10.1109/WCRE.2007.21
   Fluri B, 2009, SOFTWARE QUAL J, V17, P367, DOI 10.1007/s11219-009-9075-x
   Goldberg A., 1983, Smalltalk 80: The Language and Its Implementation
   Guzzi A, 2013, IEEE WORK CONF MIN S, P277, DOI 10.1109/MSR.2013.6624039
   Haiduc S., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P35, DOI 10.1109/WCRE.2010.13
   Haouari D, 2011, INT SYMP EMP SOFTWAR, P137, DOI 10.1109/ESEM.2011.22
   Hartzman C. S., 1993, Proceedings CASCON '93, P138
   Hata H, 2019, PROC INT CONF SOFTW, P1211, DOI 10.1109/ICSE.2019.00123
   Ibrahim WM, 2012, J SYST SOFTWARE, V85, P2293, DOI 10.1016/j.jss.2011.09.019
   Jiang Zhen Ming, 2006, MSR '06: Proceedings of the 2006 international workshop on Mining software repositories, P179, DOI DOI 10.1145/1137983.1138030
   Jingyi Zhang, 2018, Web Information Systems and Applications. 15th International Conference, WISA 2018. Proceedings: Lecture Notes in Computer Science (LNCS 11242), P39, DOI 10.1007/978-3-030-02934-0_4
   Khamis N, 2010, LECT NOTES COMPUT SC, V6177, P68, DOI 10.1007/978-3-642-13881-2_7
   LaToza ThomasD., 2010, EVALUATION USABILITY, p8:1
   Lidwell William, 2010, Universal Principles of Design, Revised and Updated: 125 Ways to Enhance Usability, Influence Perception, Increase Appeal, Make Better Design Decisions, and Teach through Design
   Lin Tan, 2007, Operating Systems Review, V41, P145, DOI 10.1145/1323293.1294276
   Liu Yangchao., 2015, Proceedings of the 19th International Conference on Evaluation and Assessment in Software Engineering, page, P27
   Maalej W, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2622669
   Marin DP., 2005, What motivates programmers to comment
   Moreno L, 2013, CONF PROC INT SYMP C, P23, DOI 10.1109/ICPC.2013.6613830
   Nurvitadhi E, 2003, 33 ANN FRONT ED FIE, V1, pT3C
   Padioleau Y, 2009, PROC INT CONF SOFTW, P331, DOI 10.1109/ICSE.2009.5070533
   Pascarella L, 2017, IEEE WORK CONF MIN S, P227, DOI 10.1109/MSR.2017.63
   Petrosyan G, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P869, DOI 10.1109/ICSE.2015.97
   Ratol IK, 2017, IEEE INT CONF AUTOM, P112, DOI 10.1109/ASE.2017.8115624
   Robbes R., 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P161, DOI 10.1109/MSR.2010.5463278
   Scalabrino S, 2016, 2016 IEEE 24 INT C P, P1
   Schreck D., 2007, 9 INT WORKSHOP PRINC, P4
   Shinyama Y, 2018, ASIA PAC SOFWR ENG, P325, DOI 10.1109/APSEC.2018.00047
   Siegmund J, 2015, EMPIR SOFTW ENG, V20, P1159, DOI 10.1007/s10664-014-9318-8
   Soetens QD, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3038926
   Steidl D, 2013, CONF PROC INT SYMP C, P83, DOI 10.1109/ICPC.2013.6613836
   TENNY T, 1988, IEEE T SOFTWARE ENG, V14, P1271, DOI 10.1109/32.6171
   Tenny T., 1985, SIGCSE Bulletin, V17, P44, DOI 10.1145/382208.382523
   Tomassetti F, 2014, P 18 INT C EV ASS SO, p17:1
   Triola M, 2014, Elementary Statistics, V12th
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Wen FC, 2019, INT C PROGRAM COMPRE, P53, DOI 10.1109/ICPC.2019.00019
   Woodfield S. N., 1981, 5th International Conference on Software Engineering, P215
   Ying A. T., 2005, ACM SIGSOFT software engineering notes, V30, P1
   Zaidman A., 2008, 2008 1st international conference on software testing, verification, and validation, P220
   Zhou Y, 2017, PROC INT CONF SOFTW, P27, DOI 10.1109/ICSE.2017.11
NR 55
TC 7
Z9 8
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2021
VL 26
IS 6
AR 112
DI 10.1007/s10664-021-09981-5
PG 49
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UC6WX
UT WOS:000686665100003
OA hybrid, Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Uddin, G
   Sabir, F
   Guéhéneuc, YG
   Alam, O
   Khomh, F
AF Uddin, Gias
   Sabir, Fatima
   Gueheneuc, Yann-Gael
   Alam, Omar
   Khomh, Foutse
TI An empirical study of IoT topics in IoT developer discussions on Stack
   Overflow
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Stack overflow; IoT; Topic modeling
ID LATENT DIRICHLET ALLOCATION; FEATURE LOCATION; INFORMATION-RETRIEVAL;
   LARGE-SCALE; SOFTWARE; INTERNET; THINGS; ARCHITECTURE; EXECUTION;
   ANALYTICS
AB Internet of Things (IoT) is defined as the connection between places and physical objects (i.e., things) over the Internet via smart computing devices. It is a rapidly emerging paradigm that encompasses almost every aspect of our modern life, such as smart home, cars, and so on. With interest in IoT growing, we observe that the IoT discussions are becoming prevalent in online developer forums, such as Stack Overflow (SO). An understanding of such discussions can offer insights into the prevalence, popularity, and difficulty of various IoT topics. For this paper, we download a large number of SO posts that contain discussions about various IoT technologies. We apply topic modeling on the textual contents of the posts. We label the topics and categorize the topics into hierarchies. We analyze the popularity and difficulty of the topics. Our study offers several findings. First, IoT developers discuss a range of topics in SO related to Hardware, Software, Network, and Tutorials. Second, secure messaging using IoT devices from the Network category is the most prevalent topic, followed by scheduling of IoT script in the Software category. Third, all the topic categories are evolving rapidly in SO, i.e., new questions are being added more and more in SO about IoT tools and techniques. Fourth, the "How" type of questions are asked more across the three topic categories (Software, Network, and Hardware), although a large number of questions are also of the "What" type: IoT developers are using SO not only to discuss how to address a problem related to IoT, but also to learn what the different IoT techniques and tools offer. Fifth, topics related to data parsing and micro-controller configuration are the most popular. Sixth, topics related to multimedia streaming and Bluetooth are the most difficult. Our study findings have implications for all four different IoT stakeholders: tool builders, developers, educators, and researchers. For example, IoT developers and newcomers can use our findings on topic popularity to learn about popular IoT techniques. Educators and researchers can make more tutorials or develop new techniques to make difficult IoT topics easier. IoT tool builders can look at our identified topics and categories to learn about IoT developers' preferences, which then can help them develop new tools or enhance their current offerings.
C1 [Uddin, Gias] Univ Calgary, Calgary, AB, Canada.
   [Sabir, Fatima; Gueheneuc, Yann-Gael] Concordia Univ, Montreal, PQ, Canada.
   [Sabir, Fatima] COMSATS Univ Islamabad, Lahore Campus, Lahore, Pakistan.
   [Alam, Omar] Trent Univ, Peterborough, ON, Canada.
   [Khomh, Foutse] Polytech Montreal, Montreal, PQ, Canada.
C3 University of Calgary; Concordia University - Canada; COMSATS University
   Islamabad (CUI); Trent University; Universite de Montreal; Polytechnique
   Montreal
RP Uddin, G (corresponding author), Univ Calgary, Calgary, AB, Canada.
EM gias.uddin@ucalgary.ca; fatima.sabir@concordia.ca;
   yann-gael.gueheneuc@concordia.ca; omaralam@trentu.ca;
   foutse.khomh@polymtl.ca
OI Sabir, Fatima/0000-0001-8707-6603; Uddin, Gias/0000-0003-1376-095X
CR Abdellatif A, 2020, IEEE WORK CONF MIN S, P174, DOI 10.1145/3379597.3387472
   Agrawal A, 2018, INFORM SOFTWARE TECH, V98, P74, DOI 10.1016/j.infsof.2018.02.005
   Ahmed S, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3239524
   Al-Fuqaha A, 2015, IEEE COMMUN SURV TUT, V17, P2347, DOI 10.1109/COMST.2015.2444095
   Aly M, 2021, INTERNET THINGS-NETH, V14, DOI 10.1016/j.iot.2021.100364
   Andrzejewski D, 2007, LECT NOTES ARTIF INT, V4701, P6
   [Anonymous], 2007, Latent Semantic Analysis: A Road to Meaning. Ed. by
   [Anonymous], 2012, EMPIR SOFTW ENG
   Arun R, 2010, LECT NOTES ARTIF INT, V6118, P391
   Asaduzzaman M, 2013, IEEE WORK CONF MIN S, P97, DOI 10.1109/MSR.2013.6624015
   Asuncion HU, 2010, 2010 ACM IEEE 32 INT, V1, P95
   Atzori L, 2010, COMPUT NETW, V54, P2787, DOI 10.1016/j.comnet.2010.05.010
   Bagherzadeh M, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P432, DOI 10.1145/3338906.3338939
   Bandeira Alan, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P255, DOI 10.1109/MSR.2019.00051
   Bavota G, 2014, IEEE T SOFTWARE ENG, V40, P671, DOI 10.1109/TSE.2013.60
   Bavota G, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2559935
   Biggers LR, 2014, EMPIR SOFTW ENG, V19, P465, DOI 10.1007/s10664-012-9224-x
   Blei DM, 2007, ANN APPL STAT, V1, P17, DOI 10.1214/07-AOAS114
   Blei DM, 2012, COMMUN ACM, V55, P77, DOI 10.1145/2133806.2133826
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Booth T, 2016, 34TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, CHI 2016, P3485, DOI 10.1145/2858036.2858533
   Bridge C., 2011, UNSTRUCTURED DATA 80
   Bukhari A, 2018, SERV ORIENTED COMPUT, V12, P169, DOI 10.1007/s11761-018-0232-6
   Chae B, 2019, TELECOMMUN POLICY, V43, DOI 10.1016/j.telpol.2019.101848
   Chaqfeh M. A., 2012, 2012 International Conference on Collaboration Technologies and Systems (CTS), P21, DOI 10.1109/CTS.2012.6261022
   Chase J., 2013, EVOLUTION INTERNET T
   Chen TH, 2016, EMPIR SOFTW ENG, V21, P1843, DOI 10.1007/s10664-015-9402-8
   Cleary B, 2009, EMPIR SOFTW ENG, V14, P93, DOI 10.1007/s10664-008-9095-3
   Dagenais B., 2010, Moving into a new software project landscape, DOI DOI 10.1145/1806799.1806842
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   Dit B, 2013, J SOFTW-EVOL PROC, V25, P53, DOI 10.1002/smr.567
   Dit B, 2013, EMPIR SOFTW ENG, V18, P277, DOI 10.1007/s10664-011-9194-4
   Fahland D, 2013, IEEE INT CONF AUTOM, P443, DOI 10.1109/ASE.2013.6693102
   Frustaci M, 2018, IEEE INTERNET THINGS, V5, P2483, DOI 10.1109/JIOT.2017.2767291
   Girdhar P.G. Y., 2013, Experimental Robotics: The 13th International Symposium on Experimental Robotics, P789
   Gubbi J, 2013, FUTURE GENER COMP SY, V29, P1645, DOI 10.1016/j.future.2013.01.010
   Han JX, 2020, EMPIR SOFTW ENG, V25, P2694, DOI 10.1007/s10664-020-09819-6
   Hong L., 2010, P 1 WORKSH SOC MED A, P80, DOI [10.1145/1964858.1964870, DOI 10.1145/1964858.1964870]
   Hu JJ, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P3, DOI 10.1109/SANER.2015.7081810
   Hudson W., 2013, ENCY HUMAN COMPUTER, V2nd
   Kamilaris A, 2020, J AMB INTEL SMART EN, V12, P491, DOI 10.3233/AIS-200582
   Kang K, 2020, SOC SCI COMPUT REV, V38, P686, DOI 10.1177/0894439319840716
   Kendall MG, 1938, BIOMETRIKA, V30, P81, DOI 10.2307/2332226
   Khan MA, 2018, FUTURE GENER COMP SY, V82, P395, DOI 10.1016/j.future.2017.11.022
   KRUSKAL WH, 1957, J AM STAT ASSOC, V52, P356, DOI 10.2307/2280906
   Lee SE, 2017, TELECOMMUN POLICY, V41, P1056, DOI 10.1016/j.telpol.2017.09.007
   Li H, 2018, EMPIR SOFTW ENG, V23, P2655, DOI 10.1007/s10664-018-9595-8
   Liao YX, 2018, IEEE INTERNET THINGS, V5, P4515, DOI 10.1109/JIOT.2018.2834151
   Linstead E, 2009, DATA MIN KNOWL DISC, V18, P300, DOI 10.1007/s10618-008-0118-x
   Linton Marco, 2017, Applied quantitative finance, P355
   Liu B, 2010, CH CRC MACH LEARN PA, P627
   Liu L, 2016, SPRINGERPLUS, V5, DOI 10.1186/s40064-016-3252-8
   Marjani M, 2017, IEEE ACCESS, V5, P5247, DOI 10.1109/ACCESS.2017.2689040
   Mathews E, 2017, ENERGIES, V10, DOI 10.3390/en10081187
   McCallum A., 2019, MALLET MACHINE LEARN
   McHugh ML, 2012, BIOCHEM MEDICA, V22, P276, DOI 10.11613/bm.2012.031
   Mens T., 2014, EVOLVING SOFTWARE SY, DOI [10.1007/978-3-642-45398-4, DOI 10.1007/978-3-642-45398-4]
   Mentsiev AU, 2020, IOP C SER EARTH ENV, V548, DOI 10.1088/1755-1315/548/3/032035
   Minoli D, 2017, 2017 IEEE/ACM SECOND INTERNATIONAL CONFERENCE ON CONNECTED HEALTH - APPLICATIONS, SYSTEMS AND ENGINEERING TECHNOLOGIES (CHASE), P13, DOI 10.1109/CHASE.2017.53
   Mocrii D, 2018, INTERNET THINGS-NETH, V1-2, P81, DOI 10.1016/j.iot.2018.08.009
   Nabli H, 2018, J SYST SOFTWARE, V146, P233, DOI 10.1016/j.jss.2018.09.069
   Nie KM, 2012, ASIA PAC SOFWR ENG, P547, DOI 10.1109/APSEC.2012.116
   NLTK, 2016, PROC WORKSHOP SEMANT
   Overflow S., 2020, STACK OV QUEST
   Panichella A, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P314, DOI 10.1109/SANER.2016.97
   Panichella A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P522, DOI 10.1109/ICSE.2013.6606598
   Pathak A.R., 2019, International Journal of Intelligent Systems and Applications, V11, P13, DOI 10.5815/IJISA.2019.06.02
   Ponzanelli L, 2016, EMPIR SOFTW ENG, V21, P2190, DOI 10.1007/s10664-015-9397-1
   Ponzanelli L, 2014, PROC IEEE INT CONF S, P541, DOI 10.1109/ICSME.2014.90
   Porter M.F., 1997, Readings in information retrieval
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI [10.1109/TSE.2007.1016, 10.1109/TSE.2007.1016.]
   Poshyvanyk D, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2377656.2377660
   Pretz K., 2013, The next evolution of the internet, V50
   Rahman LF, 2018, PROCEDIA COMPUT SCI, V130, P1057, DOI 10.1016/j.procs.2018.04.148
   Rao S., 2011, P 8 WORK C MIN SOFTW, P43
   Rehurek R., 2010, P LREC 2010 WORKSH N, P45, DOI DOI 10.13140/2.1.2393.1847
   Ren XX, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P151, DOI 10.1109/ASE.2019.00024
   Röder M, 2015, WSDM'15: PROCEEDINGS OF THE EIGHTH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING, P399, DOI 10.1145/2684822.2685324
   Rosen C, 2016, EMPIR SOFTW ENG, V21, P1192, DOI 10.1007/s10664-015-9379-3
   SALTON G, 1990, J AM SOC INFORM SCI, V41, P288, DOI 10.1002/(SICI)1097-4571(199006)41:4<288::AID-ASI8>3.0.CO;2-H
   Savage T, 2010, PROC IEEE INT CONF S
   Sethi P, 2017, J ELECTR COMPUT ENG, V2017, DOI 10.1155/2017/9324035
   Shahid MN., 2020, P 53 HAW INT C SYST
   Sharma N., 2019, Internet of Things and Big Data Analytics for Smart Generation, P27, DOI [DOI 10.1007/978-3-030-04203-5_3, 10.1007/978-3-030-04203-5_3]
   Singh S, 2020, SUSTAIN CITIES SOC, V63, DOI 10.1016/j.scs.2020.102364
   Stack Exchange Inc, 2019, STACK EXCH DAT DUMP
   Stack Overflow, 2010, STAT WHAT IS AV RESP
   Sun X, 2015, Computer and Information Science, P22
   Sun XB, 2016, 2016 17TH IEEE/ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, ARTIFICIAL INTELLIGENCE, NETWORKING AND PARALLEL/DISTRIBUTED COMPUTING (SNPD), P357, DOI 10.1109/SNPD.2016.7515925
   Sun XB, 2015, INFORM SOFTWARE TECH, V66, P1, DOI 10.1016/j.infsof.2015.05.003
   Terragni V., 2016, P 25 INT S SOFTWARE, P118
   Thomas SW, 2014, SCI COMPUT PROGRAM, V80, P457, DOI 10.1016/j.scico.2012.08.003
   Thomas SW, 2011, 8 WORK C MIN SOFTW R, P173
   Tian K, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P163, DOI 10.1109/MSR.2009.5069496
   Tse-Hsun Chen, 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P189, DOI 10.1109/MSR.2012.6224280
   Nguyen TT, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P932, DOI 10.1145/1985793.1985950
   Uddin G, 2018, IEEE T SOFTW ENG, V37
   Uddin G, 2017, IEEE INT CONF AUTOM, P159, DOI 10.1109/ASE.2017.8115629
   Uddin G, 2015, IEEE SOFTWARE, V32, P68, DOI 10.1109/MS.2014.80
   Vayansky I, 2020, INFORM SYST, V94, DOI 10.1016/j.is.2020.101582
   Verma S, 2017, IEEE COMMUN SURV TUT, V19, P1457, DOI 10.1109/COMST.2017.2694469
   Wan ZY, 2021, IEEE T SOFTWARE ENG, V47, P1331, DOI 10.1109/TSE.2019.2921343
   Wang J, 2017, IEEE ACCESS, V5, P10193, DOI 10.1109/ACCESS.2017.2712744
   Wang SY, 2016, COMPUT NETW, V101, P158, DOI 10.1016/j.comnet.2015.12.017
   Weyrich M, 2016, IEEE SOFTWARE, V33, P112, DOI 10.1109/MS.2016.20
   Whitmore A, 2015, INFORM SYST FRONT, V17, P261, DOI 10.1007/s10796-014-9489-2
   Wohlin C., 2000, Experimentation in Software Engineering: An Introduction, V1, DOI DOI 10.1007/978-1-4615-4625-2
   Xiangyue Liu, 2014, 2014 IEEE/ACIS 13th International Conference on Computer and Information Science (ICIS), P349, DOI 10.1109/ICIS.2014.6912158
   Xie X, 2012, P 8 INT C PRED MOD S, P19, DOI [DOI 10.1145/2365324.2365329, 10.1145/2365324.2365329]
   Xu BW, 2017, IEEE INT CONF AUTOM, P706, DOI 10.1109/ASE.2017.8115681
   Yang D, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P391, DOI [10.1109/MSR.2016.047, 10.1145/2901739.2901767]
   Yang G, 2014, P INT COMP SOFTW APP, P97, DOI 10.1109/COMPSAC.2014.16
   Yang XL, 2016, J COMPUT SCI TECH-CH, V31, P910, DOI 10.1007/s11390-016-1672-0
   Zhang TY, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P886, DOI 10.1145/3180155.3180260
   Zhang ZK, 2014, IEEE INT CONF SERV, P230, DOI 10.1109/SOCA.2014.58
   Zheng Y, 2016, IEEE T PATTERN ANAL, V38, P1056, DOI 10.1109/TPAMI.2015.2476802
   Zhihong Yang, 2011, 2011 International Conference on Multimedia Technology, P747
NR 117
TC 15
Z9 16
U1 1
U2 14
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2021
VL 26
IS 6
AR 121
DI 10.1007/s10664-021-10021-5
PG 45
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA UM2AZ
UT WOS:000693140600001
DA 2024-07-18
ER

PT J
AU Novielli, N
   Calefato, F
   Lanubile, F
   Serebrenik, A
AF Novielli, Nicole
   Calefato, Fabio
   Lanubile, Filippo
   Serebrenik, Alexander
TI Assessment of off-the-shelf SE-specific sentiment analysis tools: An
   extended replication study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Sentiment analysis; Human aspects of software engineering; Replication
   study
ID AGREEMENT; KAPPA
AB Sentiment analysis methods have become popular for investigating human communication, including discussions related to software projects. Since general-purpose sentiment analysis tools do not fit well with the information exchanged by software developers, new tools, specific for software engineering (SE), have been developed. We investigate to what extent off-the-shelf SE-specific tools for sentiment analysis mitigate the threats to conclusion validity of empirical studies in software engineering, highlighted by previous research. First, we replicate two studies addressing the role of sentiment in security discussions on GitHub and in question-writing on Stack Overflow. Then, we extend the previous studies by assessing to what extent the tools agree with each other and with the manual annotation on a gold standard of 600 documents. We find that different SE-specific sentiment analysis tools might lead to contradictory results at a fine-grain level, when used off-the-shelf. Conversely, platform-specific tuning or retraining might be needed to take into account differences in platform conventions, jargon, or document lengths.
C1 [Novielli, Nicole; Calefato, Fabio; Lanubile, Filippo] Univ Bari Aldo Moro, Dipartimento Informat, Via E Orabona 4, I-70125 Bari, Italy.
   [Serebrenik, Alexander] Eindhoven Univ Technol, Math & Comp Sci, POB 513, NL-5600 MB Eindhoven, Netherlands.
C3 Universita degli Studi di Bari Aldo Moro; Eindhoven University of
   Technology
RP Novielli, N (corresponding author), Univ Bari Aldo Moro, Dipartimento Informat, Via E Orabona 4, I-70125 Bari, Italy.
EM nicole.novielli@uniba.it; fabio.calefato@uniba.it;
   filippo.lanubile@uniba.it; a.serebrenik@tue.nl
RI Novielli, Nicole/Y-9583-2019; Lanubile, Filippo/AAF-9132-2020; Calefato,
   Fabio/H-4177-2014
OI Novielli, Nicole/0000-0003-1160-2608; Lanubile,
   Filippo/0000-0003-3373-7589; Calefato, Fabio/0000-0003-2654-1588;
   Serebrenik, Alexander/0000-0002-1418-0095
FU Universita degli Studi di Bari Aldo Moro within the CRUI-CARE Agreement
FX Open access funding provided by Universita degli Studi di Bari Aldo Moro
   within the CRUI-CARE Agreement.
CR Ahmed T, 2017, IEEE INT CONF AUTOM, P106, DOI 10.1109/ASE.2017.8115623
   [Anonymous], 2010, 1 INT WORKSH REPL EM
   Blaz CCA, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P235, DOI [10.1109/MSR.2016.032, 10.1145/2901739.2901781]
   Bo Pang, 2008, Foundations and Trends in Information Retrieval, V2, P1, DOI 10.1561/1500000001
   Bosco C, 2013, IEEE INTELL SYST, V28, P55, DOI 10.1109/MIS.2013.28
   Calefato F, 2018, EMPIR SOFTW ENG, V23, P1352, DOI 10.1007/s10664-017-9546-9
   Calefato F, 2018, INFORM SOFTWARE TECH, V94, P186, DOI 10.1016/j.infsof.2017.10.009
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chen ZP, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P841, DOI 10.1145/3338906.3338977
   COHEN J, 1968, PSYCHOL BULL, V70, P213, DOI 10.1037/h0026256
   Di Eugenio B, 2004, COMPUT LINGUIST, V30, P95, DOI 10.1162/089120104773633402
   Ebert F, 2018, PROC IEEE INT CONF S, P519, DOI 10.1109/ICSME.2018.00061
   Gachechiladze D, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS TRACK (ICSE-NIER), P11, DOI 10.1109/ICSE-NIER.2017.18
   Gousios G, 2013, IEEE WORK CONF MIN S, P233, DOI 10.1109/MSR.2013.6624034
   Guzman E., 2014, Association for Computing Machinery, P352
   Guzman E, 2016, INT REQUIR ENG CONF, P96, DOI 10.1109/RE.2016.67
   Imtiaz N, 2018, 2018 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON EMOTION AWARENESS IN SOFTWARE ENGINEERING (SEMOTION), P55, DOI 10.1145/3194932.3194938
   Islam MR, 2018, 33RD ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, P1536, DOI 10.1145/3167132.3167296
   Islam MR, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P487, DOI 10.1109/SANER.2018.8330245
   Islam MR, 2017, IEEE WORK CONF MIN S, P203, DOI 10.1109/MSR.2017.9
   Jongeling R, 2017, EMPIR SOFTW ENG, V22, P2543, DOI 10.1007/s10664-016-9493-x
   Kurtanovic Z, 2018, REQUIR ENG, V23, P357, DOI 10.1007/s00766-018-0293-2
   Lin B, 2019, P 41 ACM IEEE INT C
   Lin B, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P94, DOI 10.1145/3180155.3180195
   Mäntylä M, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P247, DOI [10.1109/MSR.2016.033, 10.1145/2901739.2901752]
   Mäntylä MV, 2017, IEEE WORK CONF MIN S, P198, DOI 10.1109/MSR.2017.47
   Murgia A, 2018, EMPIR SOFTW ENG, V23, P521, DOI 10.1007/s10664-017-9526-0
   Novielli N, 2020, P 17 INT C MIN SOFTW, DOI [10.1145/3379597.3387446, DOI 10.1145/3379597.3387446]
   Novielli N, 2020, IEEE SOFTWARE, V37, P86, DOI 10.1109/MS.2020.2968557
   Novielli N, 2018, IEEE WORK CONF MIN S, P364, DOI 10.1145/3196398.3196403
   Novielli N, 2019, J SYST SOFTWARE, V148, P180, DOI 10.1016/j.jss.2018.11.016
   Novielli N, 2018, IEEE WORK CONF MIN S, P14, DOI 10.1145/3196398.3196453
   Novielli N, 2015, 7TH INTERNATIONAL WORKSHOP ON SOCIAL SOFTWARE ENGINEERING (SSE 2015), P33, DOI 10.1145/2804381.2804387
   Ortu M, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P480, DOI [10.1145/2901739.2903505, 10.1109/MSR.2016.059]
   Panichella S, 2015, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSM.2015.7332474
   Pletea D., 2014, 11 WORKING C MSR, P348, DOI [10.1145/2597073.2597117, DOI 10.1145/2597073.2597117]
   Shull FJ, 2008, EMPIR SOFTW ENG, V13, P211, DOI 10.1007/s10664-008-9060-1
   Sinha V, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P520, DOI [10.1109/MSR.2016.069, 10.1145/2901739.2903501]
   Storey M A, 2012, P 9 IEEE WORK C MIN, P140
   Thelwall M, 2012, J AM SOC INF SCI TEC, V63, P163, DOI 10.1002/asi.21662
   Uddin G, 2017, IEEE INT CONF AUTOM, P978, DOI 10.1109/ASE.2017.8115715
   Viera AJ, 2005, FAM MED, V37, P360
   Weitzel L, 2016, STUD COMPUT INTELL, V639, P49, DOI 10.1007/978-3-319-30319-2_3
   Werner C, 2018, 2018 1ST INTERNATIONAL WORKSHOP ON AFFECTIVE COMPUTING FOR REQUIREMENTS ENGINEERING (AFFECTRE 2018), P1, DOI 10.1109/AffectRE.2018.00006
   Zhang T, 2020, PROC IEEE INT CONF S, P70, DOI 10.1109/ICSME46990.2020.00017
NR 45
TC 11
Z9 12
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2021
VL 26
IS 4
AR 77
DI 10.1007/s10664-021-09960-w
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SN3BE
UT WOS:000658167700001
OA hybrid, Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Pimentel, JF
   Murta, L
   Braganholo, V
   Freire, J
AF Pimentel, Joao Felipe
   Murta, Leonardo
   Braganholo, Vanessa
   Freire, Juliana
TI Understanding and improving the quality and reproducibility of Jupyter
   notebooks
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Jupyter notebook; GitHub; Reproducibility; Quality; Lint
ID SYSTEM
AB Jupyter Notebooks have been widely adopted by many different communities, both in science and industry. They support the creation of literate programming documents that combine code, text, and execution results with visualizations and other rich media. The self-documenting aspects and the ability to reproduce results have been touted as significant benefits of notebooks. At the same time, there has been growing criticism that the way in which notebooks are being used leads to unexpected behavior, encourages poor coding practices, and makes it hard to reproduce its results. To better understand good and bad practices used in the development of real notebooks, in prior work we studied 1.4 million notebooks from GitHub. We presented a detailed analysis of their characteristics that impact reproducibility, proposed best practices that can improve the reproducibility, and discussed open challenges that require further research and development. In this paper, we extended the analysis in four different ways to validate the hypothesis uncovered in our original study. First, we separated a group of popular notebooks to check whether notebooks that get more attention have more quality and reproducibility capabilities. Second, we sampled notebooks from the full dataset for an in-depth qualitative analysis of what constitutes the dataset and which features they have. Third, we conducted a more detailed analysis by isolating library dependencies and testing different execution orders. We report how these factors impact the reproducibility rates. Finally, we mined association rules from the notebooks. We discuss patterns we discovered, which provide additional insights into notebook reproducibility. Based on our findings and best practices we proposed, we designed Julynter, a Jupyter Lab extension that identifies potential issues in notebooks and suggests modifications that improve their reproducibility. We evaluate Julynter with a remote user experiment with the goal of assessing Julynter recommendations and usability.
C1 [Pimentel, Joao Felipe; Murta, Leonardo; Braganholo, Vanessa] Univ Fed Fluminense, Inst Comp, Niteroi, RJ, Brazil.
   [Freire, Juliana] NYU, Dept Comp Sci & Engn, New York, NY USA.
C3 Universidade Federal Fluminense; New York University; New York
   University Tandon School of Engineering
RP Pimentel, JF (corresponding author), Univ Fed Fluminense, Inst Comp, Niteroi, RJ, Brazil.
EM jpimentel@ic.uff.br; leomurta@ic.uff.br; vanessa@ic.uff.br;
   juliana.freire@nyu.edu
RI Braganholo, Vanessa/E-6931-2016
OI Braganholo, Vanessa/0000-0002-1184-8192; Freire,
   Juliana/0000-0003-3915-7075; Pimentel, Joao Felipe/0000-0001-6680-7470
FU CAPES; CNPq; FAPERJ; NSF [OAC-1640864]; NYU Moore-Sloan Data Science
   Environment
FX This work is partially supported by CAPES, CNPq, FAPERJ, the NYU
   Moore-Sloan Data Science Environment, and NSF award OAC-1640864.
CR Agrawal R., 1994, P INT VLDB C VLDB 94, P487, DOI DOI 10.5555/645920.672836
   Anaconda, 2018, AN SOFTW DISTR
   Arnaoudova V, 2016, EMPIR SOFTW ENG, V21, P104, DOI 10.1007/s10664-014-9350-8
   Bangor A, 2008, INT J HUM-COMPUT INT, V24, P574, DOI 10.1080/10447310802205776
   Benedek J., 2002, P USABILITY PROFESSI, P57
   Brachmann M., 2020, C INN DAT SYST RES C
   Burns T, 2013, IPYTHON NOSE
   Cannon B, 2016, PEP 518 SPECIFYING M
   Chirigati F, 2016, SIGMOD'16: PROCEEDINGS OF THE 2016 INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P2085, DOI 10.1145/2882903.2899401
   Collberg C., 2014, Measuring reproducibility in computer systems research, V51, P1, DOI 10.1145/3186266
   Danilak MM, 2016, LANGDETECT
   Freire J, 2008, COMPUT SCI ENG, V10, P11, DOI 10.1109/MCSE.2008.79
   Garousi V, 2018, J SYST SOFTWARE, V138, P52, DOI 10.1016/j.jss.2017.12.013
   Grus J., 2018, I don't like notebooks
   Han J, 2012, MOR KAUF D, P1
   Hook D, 2009, 2009 ICSE WORKSHOP ON SOFTWARE ENGINEERING FOR COMPUTATIONAL SCIENCE AND ENGINEERING, P59, DOI 10.1109/SECSE.2009.5069163
   HORWITZ S, 1992, 14TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING : PROCEEDINGS, P392
   Hursch W., 1995, Separation of concerns
   Israel G.D., 1992, The Level of Precision, V11, P1
   Jordan P.W., 1996, Usability Evaluation in Industry, DOI DOI 10.1201/9781498710411
   Kallen Malin, 2020, ARXIV200710146
   Kalliamvakou E., 2014, P 11 WORKING C MININ, P92, DOI DOI 10.1145/2597073.2597074
   Kery MB, 2018, PROCEEDINGS OF THE 2018 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2018), DOI 10.1145/3173574.3173748
   Kluyver T, 2016, POSITIONING AND POWER IN ACADEMIC PUBLISHING: PLAYERS, AGENTS AND AGENDAS, P87, DOI 10.3233/978-1-61499-649-1-87
   KNUTH DE, 1984, COMPUT J, V27, P97, DOI 10.1093/comjnl/27.2.97
   Koenzen A., 2020, ARXIV200513709
   Konig-Ries B, 2018, INT SEM WEB C ISWC M, P1
   Krassowski M, 2019, LANGUAGE SERVER PROT
   LEWINE D, 1991, POSIX PROGRAMMERS GU
   McNutt A, 2019, JUPYTERLAB FLAKE8
   Microsoft, 2018, NAM FIL PATHS NAM
   Mueller Alexander, 2018, 5 Reasons Why Jupyter Notebooks Suck
   Munaiah N, 2017, EMPIR SOFTW ENG, V22, P3219, DOI 10.1007/s10664-017-9512-6
   Myers G J., 2004, The Art of Software Testing, V2nd ed.
   Neglectos, 2018, PREL AN US PYTH NOT
   Parente P, 2020, NBESTIMATE
   Patel J, 2017, WORKSH THEOR PRACT P, P1
   Pérez F, 2007, COMPUT SCI ENG, V9, P21, DOI 10.1109/MCSE.2007.53
   Pimentel Joao Felipe, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P507, DOI 10.1109/MSR.2019.00077
   Pimentel J.F. N., 2015, Workshop on the Theory and Practice of Provenance (TaPP), Edinburgh, Scotland, P155
   Pimentel JF, 2016, IPYTHON UNITTEST
   Pimentel JF, 2019, ACM COMPUT SURV, V52, DOI 10.1145/3311955
   Pomogajko K, 2015, WHY I DONT JUPYTER F
   PyPA, 2020, PYTH PACK DOC INST R
   Python-Wiki, 2019, PYTH TEST TOOLS TAX
   ReproZip, 2017, MAK JUP NOT REPR REP
   Rule A, 2018, PROCEEDINGS OF THE 2018 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2018), DOI 10.1145/3173574.3173606
   Samuel S., 2020, HSCC20, P1
   Shen H, 2014, NATURE, V515, P151, DOI 10.1038/515151a
   Staley T, 2017, MAKING GIT JUPYTER N
   Tim Doorknob, 2014, UNIX LINUX
   Tufano M, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1838
   Udacity, 2017, DEEP LEARNING NANODE
   Van Rossum G., 2001, Python org, V1565, P28
   Vavrova N, 2017, SCI ENG PROGRAM, V1, P11, DOI [10.22152/programming-journal.org/2017/1/11, DOI 10.22152/PROGRAMMING-JOURNAL.ORG/2017/1/11]
   Wang JW, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2020), P53, DOI 10.1145/3377816.3381724
   Wilson G, 2014, PLOS BIOL, V12, DOI 10.1371/journal.pbio.1001745
NR 57
TC 23
Z9 25
U1 1
U2 13
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2021
VL 26
IS 4
AR 65
DI 10.1007/s10664-021-09961-9
PG 55
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RZ1XF
UT WOS:000648390800001
PM 33994841
OA Bronze, Green Published
DA 2024-07-18
ER

PT J
AU Soremekun, E
   Kirschner, L
   Böhme, M
   Zeller, A
AF Soremekun, Ezekiel
   Kirschner, Lukas
   Bohme, Marcel
   Zeller, Andreas
TI Locating faults with program slicing: an empirical analysis
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software engineering; Software debugging; Software testing; Automated
   fault localization; Program slicing; Statistical debugging
AB Statistical fault localization is an easily deployed technique for quickly determining candidates for faulty code locations. If a human programmer has to search the fault beyond the top candidate locations, though, more traditional techniques of following dependencies along dynamic slices may be better suited. In a large study of 457 bugs (369 single faults and 88 multiple faults) in 46 open source C programs, we compare the effectiveness of statistical fault localization against dynamic slicing. For single faults, we find that dynamic slicing was eight percentage points more effective than the best performing statistical debugging formula; for 66% of the bugs, dynamic slicing finds the fault earlier than the best performing statistical debugging formula. In our evaluation, dynamic slicing is more effective for programs with single fault, but statistical debugging performs better on multiple faults. Best results, however, are obtained by a hybrid approach: If programmers first examine at most the top five most suspicious locations from statistical debugging, and then switch to dynamic slices, on average, they will need to examine 15% (30 lines) of the code. These findings hold for 18 most effective statistical debugging formulas and our results are independent of the number of faults (i.e. single or multiple faults) and error type (i.e. artificial or real errors).
C1 [Soremekun, Ezekiel] Univ Luxembourg, SnT, Luxembourg, Luxembourg.
   [Kirschner, Lukas; Zeller, Andreas] CISPA Helmholtz Ctr Informat Secur, Saarbrucken, Germany.
   [Bohme, Marcel] Monash Univ, Melbourne, Vic, Australia.
C3 University of Luxembourg; Monash University
RP Soremekun, E (corresponding author), Univ Luxembourg, SnT, Luxembourg, Luxembourg.
EM ezekiel.soremekun@uni.lu; s8lukirs@stud.uni-saarland.de;
   marcel.boehme@acm.org; zeller@cispa.saarland
RI Soremekun, Ezekiel/ADE-1138-2022
OI Soremekun, Ezekiel/0000-0002-0039-8106; Zeller,
   Andreas/0000-0003-4719-8803
FU Deutsche Forschungsgemeinschaft, Project "Extracting and Mining of
   Probabilistic Event Structures from Software Systems (EMPRESS)"
FX We thank the anonymous reviewers for their helpful comments. This work
   was funded by Deutsche Forschungsgemeinschaft, Project "Extracting and
   Mining of Probabilistic Event Structures from Software Systems
   (EMPRESS)".
CR Abreu R, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P89, DOI 10.1109/TAIC.PART.2007.13
   Abreu R, 2006, 12TH PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P39
   Abreu R, 2009, IEEE INT CONF AUTOM, P88, DOI 10.1109/ASE.2009.25
   Abreu R, 2009, J SYST SOFTWARE, V82, P1780, DOI 10.1016/j.jss.2009.06.035
   AGRAWAL H, 1990, SIGPLAN NOTICES, V25, P246, DOI 10.1145/93548.93576
   Agrawal H., 1993, Proceedings. Conference on Software Maintenance 1993. CSM-93 (Cat. No.93CH3360-5), P348, DOI 10.1109/ICSM.1993.366927
   Alves E., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P520, DOI 10.1109/ASE.2011.6100114
   [Anonymous], 2013, P 2013 INT S SOFTW T, DOI DOI 10.1145/2483760.2483767
   [Anonymous], 2005, P 6 INT S AUTOMATED
   Assiri FY, 2017, SOFTWARE QUAL J, V25, P171, DOI 10.1007/s11219-016-9312-z
   B_ohme M., 2014, INT S SOFTWARE TESTI, P105
   Binkley D, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1217295.1217297
   Böhme M, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P117, DOI 10.1145/3106237.3106255
   Burger Martin., 2011, Proceedings of the 2011 International Symposium on Software Testing and Analysis, ISSTA '11, P221, DOI DOI 10.1145/2001420.2001447
   Chen MY, 2002, INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P595, DOI 10.1109/DSN.2002.1029005
   Christi A, 2018, IEEE INT SYMP SOFTW, P184, DOI [10.1109/1SSREW.2018.00005, 10.1109/ISSREW.2018.00005]
   DiGiuseppe N., 2011, P 20 INT S SOFTW TES, P210, DOI DOI 10.1145/2001420.2001446
   Gopinath Rahul, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P237, DOI 10.1145/3395363.3397349
   Grissom R. J., 2005, EFFECT SIZES RES BRO
   Guo AB, 2018, PROC IEEE INT CONF S, P554, DOI 10.1109/ICSME.2018.00066
   Gyimóthy T, 1999, LECT NOTES COMPUT SC, V1687, P303, DOI 10.1145/318774.319248
   Hammoudi M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P333, DOI 10.1145/2786805.2786846
   Heiden S, 2019, SOFTWARE PRACT EXPER, V49, P1197, DOI 10.1002/spe.2703
   Nguyen HDT, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P772, DOI 10.1109/ICSE.2013.6606623
   HOFER B, 2012, FRONT ARTIF INTEL AP, V12, P420
   HUTCHINS M, 1994, PROC INT CONF SOFTW, P191, DOI 10.1109/ICSE.1994.296778
   Jones J.A., 2005, P 20 IEEE ACM INT C, P273, DOI [10.1145/1101908.1101949, DOI 10.1145/1101908.1101949]
   Jones JA, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P467, DOI 10.1109/ICSE.2002.1007991
   Jose M, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P437
   Kampmann A, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1228, DOI 10.1145/3368089.3409687
   Keller F, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P114, DOI 10.1109/QRS.2017.22
   Kim D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P802, DOI 10.1109/ICSE.2013.6606626
   Kirschner, 2020, 2020 IEEE ACM 42 INT
   Kochhar Pavneet Singh, 2016, 25 INT S SOFTWARE TE, P165, DOI 10.1145/2931037.2931051
   KOREL B, 1988, INFORM PROCESS LETT, V29, P155, DOI 10.1016/0020-0190(88)90054-3
   Landsberg D, 2016, THESIS U OXFORD
   Landsberg D, 2015, LECT NOTES COMPUT SC, V9033, P115, DOI 10.1007/978-3-662-46675-9_8
   Le Goues C, 2012, IEEE T SOFTWARE ENG, V38, P54, DOI 10.1109/TSE.2011.104
   Le Goues C, 2015, IEEE T SOFTWARE ENG, V41, P1236, DOI 10.1109/TSE.2015.2454513
   Le T.-D. B., 2016, P 25 INT S SOFTW TES, P177, DOI DOI 10.1145/2931037.2931049
   Lei Y, 2012, P INT COMP SOFTW APP, P1, DOI 10.1109/COMPSAC.2012.9
   Li XY, 2020, IEEE INT CONF SOFTW, P28, DOI 10.1109/ICST46399.2020.00014
   Liblit B, 2005, ACM SIGPLAN NOTICES, V40, P15, DOI 10.1145/1064978.1065014
   Lin Y, 2018, IEEE INT CONF AUTOM, P509, DOI 10.1145/3238147.3238163
   Liu B, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P359, DOI 10.1109/SANER.2017.7884636
   Liu B, 2016, SOFTW TEST VERIF REL, V26, P431, DOI 10.1002/stvr.1605
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Naish L, 2013, IEEE AUS SOFT ENGR, P51, DOI 10.1109/ASWEC.2013.16
   Naish L, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000795
   Parnin C., 2011, P 2011 INT S SOFTWAR, P199, DOI [10.1145/2001420.2001445, DOI 10.1145/2001420.2001445]
   Pearson S, 2017, PROC INT CONF SOFTW, P609, DOI 10.1109/ICSE.2017.62
   Perez A, 2017, IEEE INT CONF SOFTW, P12, DOI 10.1109/ICST.2017.9
   Qi DW, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2522920.2522925
   Qi YH, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P254, DOI 10.1145/2568225.2568254
   Reis S, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P4760
   Renieris M, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P30, DOI 10.1109/ASE.2003.1240292
   RUSSELL PAUL F., 1940, JOUR MALARIA INST INDIA, V3, P153
   Shin Yoo, 2012, Search Based Software Engineering. Proceedings of the 4th International Symposium (SSBSE 2012), P244, DOI 10.1007/978-3-642-33119-0_18
   Shu T, 2017, 2017 ANNUAL CONFERENCE ON SOFTWARE ANALYSIS, TESTING AND EVOLUTION (SATE 2017), P37, DOI 10.1109/SATE.2017.13
   Spafford E, 1990, TECH REP
   Tan SH, 2017, PROC IEEE ACM INT C, P180, DOI 10.1109/ICSE-C.2017.76
   TIP F, 1995, J PROGRAM LANG, V3, P121
   WEISER M, 1982, COMMUN ACM, V25, P446, DOI 10.1145/358557.358577
   Weiser M., 1981, 5th International Conference on Software Engineering, P439
   Wong W. E., 2012, Proceedings of the 2012 IEEE Sixth International Conference on Software Security and Reliability (SERE 2012), P21, DOI 10.1109/SERE.2012.12
   Wong WE, 2007, P INT COMP SOFTW APP, P449
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Wong WE, 2014, IEEE T RELIAB, V63, P290, DOI 10.1109/TR.2013.2285319
   Wotawa Franz, 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P161, DOI 10.1109/QSIC.2010.51
   WOTAWA F, 2002, LECT NOTES ARTIF INT, P746
   Xiaoyuan Xie, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P224, DOI 10.1007/978-3-642-39742-4_17
   Xie XY, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2522920.2522924
   Yang JQ, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P831, DOI 10.1145/3106237.3106274
   Yu YB, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P201, DOI 10.1145/1368088.1368116
   Zeller A, 2002, IEEE T SOFTWARE ENG, V28, P183, DOI 10.1109/32.988498
   Zhang MX, 2017, LECT NOTES COMPUT SC, V10538, P261, DOI [10.1007/978-3-319-68155-9_20, 10.1145/3092703.3092731]
   Zhang XY, 2007, EMPIR SOFTW ENG, V12, P143, DOI 10.1007/s10664-006-9007-3
   Zheng A. X., 2003, ADV NEURAL INFORM PR, P9
   Zheng Alice X., 2006, INT C MACH LEARN, P1105, DOI DOI 10.1145/1143844.1143983
   Zou DM, 2021, IEEE T SOFTWARE ENG, V47, P332, DOI 10.1109/TSE.2019.2892102
NR 80
TC 16
Z9 16
U1 1
U2 12
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAY
PY 2021
VL 26
IS 3
AR 51
DI 10.1007/s10664-020-09931-7
PG 45
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RH6SM
UT WOS:000636345900001
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Heumüller, R
   Nielebock, S
   Krüger, J
   Ortmeier, F
AF Heumueller, Robert
   Nielebock, Sebastian
   Krueger, Jacob
   Ortmeier, Frank
TI Publish or perish, but do not forget your software artifacts
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software; Open science; Open source; Artifacts; Publishing
ID OPEN-ACCESS; RESEARCH IMPACT; CHALLENGES; REPRODUCIBILITY; PERSISTENCE;
   CITATIONS; INSIGHTS
AB Open-science initiatives have gained substantial momentum in computer science, and particularly in software-engineering research. A critical aspect of open-science is the public availability of artifacts (e.g., tools), which facilitates the replication, reproduction, extension, and verification of results. While we experienced that many artifacts are not publicly available, we are not aware of empirical evidence supporting this subjective claim. In this article, we report an empirical study on software artifact papers (SAPs) published at the International Conference on Software Engineering (ICSE), in which we investigated whether and how researchers have published their software artifacts, and whether this had scientific impact. Our dataset comprises 789 ICSE research track papers, including 604 SAPs (76.6 %), from the years 2007 to 2017. While showing a positive trend towards artifact availability, our results are still sobering. Even in 2017, only 58.5 % of the papers that stated to have developed a software artifact made that artifact publicly available. As we did find a small, but statistically significant, positive correlation between linking to artifacts in a paper and its scientific impact in terms of citations, we hope to motivate the research community to share more artifacts. With our insights, we aim to support the advancement of open science by discussing our results in the context of existing initiatives and guidelines. In particular, our findings advocate the need for clearly communicating artifacts and the use of non-commercial, persistent archives to provide replication packages.
C1 [Heumueller, Robert; Nielebock, Sebastian] Otto von Guericke Univ, Magdeburg, Germany.
   [Krueger, Jacob] Otto von Guericke Univ, Databases & Software Engn Work Grp, Magdeburg, Germany.
   [Ortmeier, Frank] Otto von Guericke Univ, Chair Software Engn CSE, Magdeburg, Germany.
   [Krueger, Jacob] Univ Toronto, Toronto, ON, Canada.
C3 Otto von Guericke University; Otto von Guericke University; Otto von
   Guericke University; University of Toronto
RP Heumüller, R (corresponding author), Otto von Guericke Univ, Magdeburg, Germany.
EM robert.heumueller@ovgu.de; sebastian.nielebock@ovgu.de;
   jacob.krueger@ovgu.de; frank.ortmeier@ovgu.de
RI Nielebock, Sebastian/HSE-7136-2023
OI Nielebock, Sebastian/0000-0002-0147-3526; Kruger,
   Jacob/0000-0002-0283-248X; Ortmeier, Frank/0000-0001-6186-4142;
   Heumuller, Robert/0000-0002-9906-0323
FU German Research Foundation [SA 465/49-3]; IFI fellowship of the German
   Academic Exchange Service
FX The work of Jacob Kruger has been supported by the German Research
   Foundation (SA 465/49-3) and an IFI fellowship of the German Academic
   Exchange Service.
CR Agarwal A, 2016, ASIAN J ANDROL, V18, P296, DOI 10.4103/1008-682X.171582
   Almeida DA, 2017, INT C PROGRAM COMPRE, P1, DOI 10.1109/ICPC.2017.7
   Antelman K, 2004, COLL RES LIBR, V65, P372, DOI 10.5860/crl.65.5.372
   Bellon S, 2007, IEEE T SOFTWARE ENG, V33, P577, DOI 10.1109/TSE.2007.70725
   Benureau FCY, 2018, FRONT NEUROINFORM, V11, DOI 10.3389/fninf.2017.00069
   Boettiger Carl, 2015, ACM SIGOPS Operating Systems Review, V49, P71
   Boisvert RF, 2016, COMMUN ACM, V59, P5, DOI 10.1145/2994031
   Budgen D, 2008, EMPIR SOFTW ENG, V13, P435, DOI 10.1007/s10664-008-9075-7
   de Souza MR, 2019, 2019 IEEE/ACM 12TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE 2019), P135, DOI 10.1109/CHASE.2019.00039
   Di Cosmo R, 2018, IEEE INT CONF AUTOM, P1, DOI 10.1145/3238147.3241085
   Diebold Philipp, 2014, P INT S EMP SOFTW EN, DOI [10.1145/2652524.2652552, DOI 10.1145/2652524.2652552]
   Fehr J, 2016, AIMS MATH, V1, P261, DOI 10.3934/Math.2016.3.261
   Fernandes E, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2915984
   Fernandez D.M., 2019, ARXIV190406499
   Fernández DM, 2019, EMPIR SOFTW ENG, V24, P1057, DOI 10.1007/s10664-019-09712-x
   Fu W, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P72, DOI 10.1145/3106237.3106257
   Garousi V, 2016, INFORM SOFTWARE TECH, V79, P106, DOI 10.1016/j.infsof.2016.07.006
   Garousi V, 2016, COMPUT SCI REV, V19, P56, DOI 10.1016/j.cosrev.2015.12.002
   Giannoulatou E, 2014, BMC BIOINFORMATICS, V15, DOI 10.1186/1471-2105-15-S16-S15
   Girvan M, 2002, P NATL ACAD SCI USA, V99, P7821, DOI 10.1073/pnas.122653799
   Hagberg A. A., 2008, EXPLORING NETWORK ST, P11, DOI DOI 10.1016/J.JELECTROCARD.2010.09.003
   Hampton SE, 2017, BIOSCIENCE, V67, P546, DOI 10.1093/biosci/bix025
   HARRISON W., 2000, Proceedings of the Conference on the Future of Software Engineering (Limerick, Ireland, June 04 - 11, P261, DOI DOI 10.1145/336512.336569.ACM
   Haupt C, 2018, 2018 IEEE/ACM 13TH INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR SCIENCE (SE4SCIENCE), P16, DOI 10.1145/3194747.3194753
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hinsen Konrad, 2014, F1000Res, V3, P289, DOI 10.12688/f1000research.5773.3
   Hogarty KY, 1999, P SAS US GROUP INT S, P1389
   Hutchins BI, 2016, PLOS BIOL, V14, DOI 10.1371/journal.pbio.1002541
   Johanson AN, 2018, COMPUT SCI ENG, V20, P90, DOI 10.1109/MCSE.2018.021651343
   Joppa LN, 2013, SCIENCE, V340, P814, DOI 10.1126/science.1231535
   Jorgensen M, 2016, J SYST SOFTWARE, V116, P133, DOI 10.1016/j.jss.2015.03.065
   Katz DS, 2018, COMPUT SCI ENG, V20, P84, DOI 10.1109/MCSE.2018.03221930
   Kidwell MC, 2016, PLOS BIOL, V14, DOI 10.1371/journal.pbio.1002456
   Kim YM, 2018, GIGASCIENCE, V7, DOI 10.1093/gigascience/giy077
   Kitchenham B, 2017, EMPIR SOFTW ENG, V22, P579, DOI 10.1007/s10664-016-9437-5
   Koehler W, 2004, INFORM RES, V9
   Koehler W, 2002, J AM SOC INF SCI TEC, V53, P162, DOI 10.1002/asi.10018
   Konkol M, 2019, INT J GEOGR INF SCI, V33, P408, DOI 10.1080/13658816.2018.1508687
   Kratz John, 2014, F1000Res, V3, P94, DOI 10.12688/f1000research.3979.1
   Kurtz M, 2006, CHANDOS INF PROF SER, P45
   Laakso M, 2018, SCIENTOMETRICS, V116, P291, DOI 10.1007/s11192-018-2751-5
   Le Goues C, 2018, COMMUN ACM, V61, P30, DOI 10.1145/3208157
   Lewis C, 2018, INFORM TECHNOL LIBR, V37, P50, DOI 10.6017/ital.v37i3.10604
   Li K, 2019, J INFORMETR, V13, P449, DOI 10.1016/j.joi.2019.02.007
   Liu David M, 2019, Socius, V5, DOI 10.1177/2378023119849803
   Lo D, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P415, DOI 10.1145/2786805.2786809
   Lowndes JSS, 2017, NAT ECOL EVOL, V1, DOI 10.1038/s41559-017-0160
   Menzies T, 2019, INFORM SOFTWARE TECH, V112, P35, DOI 10.1016/j.infsof.2019.04.005
   Monperrus M, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P234, DOI 10.1145/2568225.2568324
   Morton S, 2015, RES EVALUAT, V24, P405, DOI 10.1093/reseval/rvv016
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Piwowar Heather, 2018, PeerJ, V6, pe4375, DOI 10.7717/peerj.4375
   Poldrack RA, 2015, TRENDS COGN SCI, V19, P59, DOI 10.1016/j.tics.2014.11.008
   Pradal C, 2013, J COMPUT SCI-NETH, V4, P311, DOI 10.1016/j.jocs.2013.08.001
   Prechelt L, 2018, INFORM SOFTWARE TECH, V95, P75, DOI 10.1016/j.infsof.2017.10.019
   Rowhani-Farid Anisa, 2017, Res Integr Peer Rev, V2, P4, DOI 10.1186/s41073-017-0028-9
   Roy CK, 2009, SCI COMPUT PROGRAM, V74, P470, DOI 10.1016/j.scico.2009.02.007
   Salman I, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P666, DOI 10.1109/ICSE.2015.82
   Schreiber A, 2017, P 13 INT S OP COLL O, P26, DOI 10.1145/3125433.3125470
   Schröter I, 2017, ICEIS: PROCEEDINGS OF THE 19TH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS - VOL 1, P653, DOI 10.5220/0006368706530658
   Schröter I, 2017, INT C PROGRAM COMPRE, P308, DOI 10.1109/ICPC.2017.9
   Sicilia MA, 2017, PROCEDIA COMPUT SCI, V106, P54, DOI 10.1016/j.procs.2017.03.009
   Siegmund J, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P9, DOI 10.1109/ICSE.2015.24
   Sjoberg DIK, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P17, DOI 10.1109/ISESE.2002.1166921
   Swan A, 2006, Open access: key strategic, technical and economic aspects, Chandos, Patent No. 262428
   Thomee B, 2018, SIGMULTIMEDIA REC, V10, P1, DOI 10.1145/3264706.3264707
   Trautsch F, 2018, EMPIR SOFTW ENG, V23, P1036, DOI 10.1007/s10664-017-9537-x
   Vinh Nguyen Xuan, 2009, P 26 ANN INT C MACH, P1073, DOI DOI 10.1145/1553374.1553511
   Virtanen P, 2020, NAT METHODS, V17, P261, DOI 10.1038/s41592-019-0686-2
   von Luxburg U, 2007, STAT COMPUT, V17, P395, DOI 10.1007/s11222-007-9033-z
   von Nostitz-Wallwitz I, 2018, PROCEEDINGS 2018 IEEE/ACM 5TH INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING RESEARCH AND INDUSTRIAL PRACTICE (SER&IP), P10, DOI 10.1145/3195546.3195548
   von Nostitz-Wallwitz I, 2018, PROC IEEE ACM INT C, P300, DOI 10.1145/3183440.3194980
   Wicks MN, 2007, J SYST SOFTWARE, V80, P1569, DOI 10.1016/j.jss.2007.03.089
   Wilson G, 2017, PLOS COMPUT BIOL, V13, DOI 10.1371/journal.pcbi.1005510
NR 74
TC 12
Z9 13
U1 1
U2 10
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2020
VL 25
IS 6
BP 4585
EP 4616
DI 10.1007/s10664-020-09851-6
EA OCT 2020
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA OI4BB
UT WOS:000576383500002
OA hybrid
DA 2024-07-18
ER

PT J
AU Gralha, C
   Goulao, M
   Araujo, J
AF Gralha, Catarina
   Goulao, Miguel
   Araujo, Joao
TI Are there gender differences when interacting with social goal models? A
   quasi-experiment
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Social goal models; iStar 2; 0; Biometrics; Gender
ID COMPUTER SELF-EFFICACY; HEART-RATE-VARIABILITY; MENTAL WORKLOAD;
   EYE-MOVEMENTS; SOFTWARE; PERFORMANCE; EFFICIENCY; ATTITUDES; TRACKING;
   ANXIETY
AB Context Research has shown gender differences in problem-solving, and gender biases in how software supports it. GenderMag has five problem-solving facets related to gender-inclusiveness: motivation for using software, information processing style, computer self-efficacy, attitude towards risk, and ways of learning new technology. Some facet values are more frequent in women, others in men. The role these facets may play when interacting with social goal models is unexplored. Objectives We evaluated the impact of different levels of GenderMag facets on creating, modifying, understanding, and reviewing iStar 2.0 models. Methods We performed a quasi-experiment and characterised 180 participants according to each GenderMag facet. Participants performed creation, modification, understanding, and reviewing tasks on iStar 2.0. We measured their accuracy, speed, and ease, using metrics of task success, time, and effort, collected with eye-tracking, EEG and EDA sensors, and participants' feedback. Results Although participants with facet levels frequently seen in women had lower speed when compared to those with facet levels more often observed in men, their accuracy was higher. There were also statistically significant differences in visual and mental effort, and stress. Overall, participants were able to create, modify, and understand the models reasonably well, but struggled when reviewing them. Conclusions Participants with a comprehensive information processing style and a conservative attitude towards risk (characteristics frequently seen in female) solved the tasks with lower speed but higher accuracy. Participants with a selective information processing style (characteristic frequently seen in males) were able to better separate what was relevant from what was not. The complementarity of results suggests there is more gain in leveraging people's diversity.
C1 [Gralha, Catarina; Goulao, Miguel; Araujo, Joao] Univ Nova Lisboa, NOVA LINCS, Dept Comp Sci, Fac Sci & Technol, Lisbon, Portugal.
C3 Universidade Nova de Lisboa
RP Gralha, C (corresponding author), Univ Nova Lisboa, NOVA LINCS, Dept Comp Sci, Fac Sci & Technol, Lisbon, Portugal.
EM acg.almeida@campus.fct.unl.pt; mgoul@fct.unl.pt; joao.araujo@fct.unl.pt
RI Araujo, Joao/G-2108-2011; Goulão, Miguel/AAB-8223-2020; Araujo,
   Joao/M-3560-2013
OI Goulão, Miguel/0000-0002-5356-5203; Araujo, Joao/0000-0001-5914-1631
FU NOVA LINCS [UID/CEC/04516/2019]; FCT-MCTES [SFRH/BD/108492/ 2015];
   Fundação para a Ciência e a Tecnologia [SFRH/BD/108492/2015] Funding
   Source: FCT
FX We thank NOVA LINCS UID/CEC/04516/2019 and FCT-MCTES SFRH/BD/108492/
   2015 for financial support.
CR [Anonymous], 2013, Psychophysiology: Human behavior physiological response
   [Anonymous], 2020, BIOSIGNALSPLUS WEARA
   [Anonymous], 2006, P SIGCHI C HUM FACT, DOI DOI 10.1145/1124772.1124808
   [Anonymous], 2007, Eye tracking methodology: Theory and practice, DOI DOI 10.1007/978-3-319-57883-5
   Appel M, 2011, EUR J SOC PSYCHOL, V41, P904, DOI 10.1002/ejsp.835
   BASILI VR, 1988, IEEE T SOFTWARE ENG, V14, P758, DOI 10.1109/32.6156
   Beckwith L., 2005, P SIGCHI C HUMAN FAC, P869, DOI [10.1145/1054972.1055094, DOI 10.1145/1054972.1055094]
   BITalino, 2020, BITALINO BIOMEDICAL
   Burnett M, 2020, GENDERMAG PERSONAS F
   Burnett M, 2017, S VIS LANG HUM CEN C, P139, DOI 10.1109/VLHCC.2017.8103461
   Burnett M, 2016, INTERACT COMPUT, V28, P760, DOI 10.1093/iwc/iwv046
   Burnett MM, 2011, INTERACT COMPUT, V23, P450, DOI 10.1016/j.intcom.2011.06.004
   Byrnes JP, 1999, PSYCHOL BULL, V125, P367, DOI 10.1037/0033-2909.125.3.367
   Cafferata P., 1989, Cognitive and affective responses to advertising
   Cagiltay NE, 2013, J SYST SOFTWARE, V86, P2184, DOI 10.1016/j.jss.2013.03.106
   Cao A, 2009, BEHAV RES METHODS, V41, P113, DOI 10.3758/BRM.41.1.113
   Carlson NR, 2019, PHYSL BEHAV
   Charness G, 2012, J ECON BEHAV ORGAN, V83, P50, DOI 10.1016/j.jebo.2011.06.007
   COHEN J, 1992, PSYCHOL BULL, V112, P155, DOI 10.1037/0033-2909.112.1.155
   CROSBY ME, 1990, COMPUTER, V23, P24, DOI 10.1109/2.48797
   Dalpiaz F, 2016, ARXIV 160507767V3
   De Smet B, 2014, SCI COMPUT PROGRAM, V79, P260, DOI 10.1016/j.scico.2012.01.004
   Dishman RK, 2000, INT J PSYCHOPHYSIOL, V37, P121, DOI 10.1016/S0167-8760(00)00085-4
   Dohmen T, 2011, J EUR ECON ASSOC, V9, P522, DOI 10.1111/j.1542-4774.2011.01015.x
   Durndell A, 2002, COMPUT HUM BEHAV, V18, P521, DOI 10.1016/S0747-5632(02)00006-7
   EKMAN P, 1983, SCIENCE, V221, P1208, DOI 10.1126/science.6612338
   Fisher M, 2006, PROC IEEE INT CONF S, P289
   Fleming, 2010, P 2010 ACM IEEE INT, P1, DOI DOI 10.1145/1852786.1852824
   Fritz T, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P402, DOI 10.1145/2568225.2568266
   Galhotra S, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P498, DOI 10.1145/3106237.3106277
   Goldberg JH, 1999, INT J IND ERGONOM, V24, P631, DOI 10.1016/S0169-8141(98)00068-7
   Gralha C, 2019, ISTARLAB TOOL
   Gralha C, 2019, THESIS
   Gralha C, 2019, ARE THERE GENDER DIF, DOI 10.5281/zenodo.3819208
   Gralha C, 2019, INT REQUIR ENG CONF, P165, DOI 10.1109/RE.2019.00027
   Grigoreanu V, 2012, ACM T COMPUT-HUM INT, V19, DOI 10.1145/2147783.2147788
   Haag A, 2004, LECT NOTES COMPUT SC, V3068, P36
   Hancock P. A., 1986, Proceedings of the 1986 IEEE International Conference on Systems, Man, and Cybernetics (Cat. No.86CH2364-8), P378
   Handy TC, 2005, Event-related potentials: a methods handbook
   HART S G, 1988, P139
   Hart S. G., 2006, P HUM FACT ERG SOC A, V50, P904, DOI DOI 10.1177/154193120605000909
   Hartzel K, 2003, COMMUN ACM, V46, P167, DOI 10.1145/903893.903933
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hou W., 2006, CHI'06 Extended Abstracts on Human Factors in Computing Systems, P875
   Huffman AH, 2013, COMPUT HUM BEHAV, V29, P1779, DOI 10.1016/j.chb.2013.02.012
   Ikutani Y, 2014, 15 IEEE ACIS INT C S, P1, DOI DOI 10.1109/SNPD.2014.6888727
   Jernigan W, 2015, PROCEEDINGS 2015 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING (VL/HCC), P235, DOI 10.1109/VLHCC.2015.7357222
   Kitchenham B, 2019, PROCEEDINGS OF EASE 2019 - EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING, P134, DOI 10.1145/3319008.3319009
   Kitchenham B, 2017, EMPIR SOFTW ENG, V22, P579, DOI 10.1007/s10664-016-9437-5
   Kramer A. F., 1990, MULTIPLE TASK PERFOR, P279, DOI [10.1080/00140139.2014.956151, DOI 10.1080/00140139.2014.956151]
   Li Mu, 2009, Annu Int Conf IEEE Eng Med Biol Soc, V2009, P1323, DOI 10.1109/IEMBS.2009.5334139
   Luque-Casado A, 2016, BIOL PSYCHOL, V113, P83, DOI 10.1016/j.biopsycho.2015.11.013
   Martini FH, 2016, ESSENTIALS ANATOMY P
   Meyers-Levy J, 2015, J CONSUM PSYCHOL, V25, P129, DOI 10.1016/j.jcps.2014.06.003
   MEYERSLEVY J, 1991, J CONSUM RES, V18, P63, DOI 10.1086/209241
   Müller SC, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P688, DOI 10.1109/ICSE.2015.334
   Murugappan M., 2009, P INT C MAN MACHINE, P1
   Nasa, 2020, TLX NASA AM NASA TLX
   NeuroSky MindWave EEG headset, 2020, EEG SENSORS EEG HEAD
   Nourbakhsh N., 2012, P 24 AUSTR COMP HUM, P420, DOI DOI 10.1145/2414536.2414602
   O'Donnell E., 2001, INT J AUDIT, V5, P91, DOI DOI 10.1111/J.1099-1123.2001.00328.X
   PAAS FGWC, 1993, HUM FACTORS, V35, P737, DOI 10.1177/001872089303500412
   PAAS FGWC, 1994, EDUC PSYCHOL REV, V6, P351, DOI 10.1007/BF02213420
   PAJARES F, 1994, J EDUC PSYCHOL, V86, P193, DOI 10.1037/0022-0663.86.2.193
   Pereira R, 2020, THESIS
   Petrusel Razvan, 2013, Advanced Information Systems Engineering. 25th International Conference, CAiSE 2013. Proceedings: LNCS 7908, P224, DOI 10.1007/978-3-642-38709-8_15
   Pimentel J, 2018, INT REQUIR ENG CONF, P498, DOI 10.1109/RE.2018.00071
   Poole A., 2006, Encyclopedia of human computer interaction, P211, DOI [10.4018/978-1-59140-562-7.ch034, DOI 10.4018/978-1-59140-562-7.CH034]
   Porras GC, 2010, EMPIR SOFTW ENG, V15, P493, DOI 10.1007/s10664-009-9125-9
   Radach R., 2003, The mind's eye: Cognitive and applied aspects of eye movement research
   Rayner K, 1998, PSYCHOL BULL, V124, P372, DOI 10.1037/0033-2909.124.3.372
   Rosner D, 2009, CHI2009: PROCEEDINGS OF THE 27TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P419
   Runeson Per, 2012, Case study research in software engineering: Guidelines and examples
   Santos M, 2018, INT REQUIR ENG CONF, P228, DOI 10.1109/RE.2018.00031
   Santos M, 2016, INT REQUIR ENG CONF, P206, DOI 10.1109/RE.2016.51
   Sharafi Z., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P27
   Sharafi Z, 2015, ASIA PAC SOFWR ENG, P96, DOI 10.1109/APSEC.2015.53
   Sharafi Z, 2015, INFORM SOFTWARE TECH, V67, P79, DOI 10.1016/j.infsof.2015.06.008
   Sharafi Z, 2013, CONF PROC INT SYMP C, P33, DOI 10.1109/ICPC.2013.6613831
   Sharif B., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P544, DOI 10.1109/ICSM.2011.6080828
   Sharma B., 2010, P 26 IEEE INT C SOFT, P1, DOI DOI 10.1109/ICSM.2010.5609582
   Shi Y, 2007, GALVANIC SKIN RESPON, P2651
   Showkat D, 2018, INT CONF UBIQ ROBOT, P443, DOI 10.1109/URAI.2018.8441766
   Siegmund J, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P378, DOI 10.1145/2568225.2568252
   Simon S. J., 2001, Data Base for Advances in Information Systems, V32, P18
   SLOAN RP, 1994, BIOL PSYCHOL, V37, P89, DOI 10.1016/0301-0511(94)90024-8
   Smith ME, 2005, PROC SPIE, V5797, P116, DOI 10.1117/12.602181
   Storrle H., 2014, Proceedings of the International Conference on Model Driven Engineering Languages and Systems (MoDELS 2014), P31
   Szafir D, 2012, P SIGCHI C HUM FACT, P11, DOI DOI 10.1145/2207676.2207679
   Tan D.S., 2003, CHI 03, P209
   Tatum WilliamO., 2014, Handbook of EEG interpretation
   The Eye Tribe, 2020, EYE TRIB EYE TRACK
   TORKZADEH G, 1994, EDUC PSYCHOL MEAS, V54, P813, DOI 10.1177/0013164494054003028
   Vegas S, 2016, IEEE T SOFTWARE ENG, V42, P120, DOI 10.1109/TSE.2015.2467378
   VORVOREANU M, 2019, CHI 2019 P 2019 CHI
   Wattenberg M, 2003, INFOVIS 2002: IEEE SYMPOSIUM ON INFORMATION VISUALIZATION 2003, PROCEEDINGS, P23, DOI 10.1109/INFVIS.2003.1249005
   Weber EU, 2002, J BEHAV DECIS MAKING, V15, P263, DOI 10.1002/bdm.414
   WELFORD AT, 1978, ERGONOMICS, V21, P151, DOI 10.1080/00140137808931710
   YEH YY, 1988, HUM FACTORS, V30, P111, DOI 10.1177/001872088803000110
   Yu E., 2010, SOCIAL MODELING REQU
   Yu ESK, 1997, RE '97 - PROCEEDINGS OF THE THIRD IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, P226, DOI 10.1109/ISRE.1997.566873
   Yusuf S, 2007, INT C PROGRAM COMPRE, P113
NR 102
TC 1
Z9 1
U1 1
U2 13
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2020
VL 25
IS 6
BP 5416
EP 5453
DI 10.1007/s10664-020-09883-y
EA SEP 2020
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA OI4BB
UT WOS:000570838700001
DA 2024-07-18
ER

PT J
AU Masood, Z
   Hoda, R
   Blincoe, K
AF Masood, Zainab
   Hoda, Rashina
   Blincoe, Kelly
TI How agile teams make self-assignment work: a grounded theory study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Self-assignment; Task allocation agile practice; Agile software
   development; Grounded theory
ID PROJECT-MANAGEMENT; SOFTWARE; CHALLENGES
AB Self-assignment, a self-directed method of task allocation in which teams and individuals assign and choose work for themselves, is considered one of the hallmark practices of empowered, self-organizing agile teams. Despite all the benefits it promises, agile software teams do not practice it as regularly as other agile practices such as iteration planning and daily stand-ups, indicating that it is likely not an easy and straighforward practice. There has been very little empirical research on self-assignment. This Grounded Theory study explores how self-assignment works in agile projects. We collected data through interviews with 42 participants representing 28 agile teams from 23 software companies and supplemented these interviews with observations. Based on rigorous application of Grounded Theory analysis procedures such as open, axial, and selective coding, we present a comprehensive grounded theory of making self-assignment work that explains the (a) context and (b) causal conditions that give rise to the need for self-assignment, (c) a set of facilitating conditions that mediate how self-assignment may be enabled, (d) a set of constraining conditions that mediate how self-assignment may be constrained and which are overcome by a set of (e) strategies applied by agile teams, which in turn result in (f) a set of consequences, all in an attempt to make the central phenomenon, self-assignment, work. The findings of this study will help agile practitioners and companies understand different aspects of self-assignment and practice it with confidence regularly as a valuable practice. Additionally, it will help teams already practicing self-assignment to apply strategies to overcome the challenges they face on an everyday basis.
C1 [Masood, Zainab; Blincoe, Kelly] Univ Auckland, Dept Elect Comp & Software Engn, Auckland, New Zealand.
   [Hoda, Rashina] Monash Univ, Fac Informat Technol, Acad Dev, Melbourne, Vic, Australia.
   [Hoda, Rashina] Monash Univ, Fac Informat Technol, Software Engn, Melbourne, Vic, Australia.
C3 University of Auckland; Monash University; Monash University
RP Masood, Z (corresponding author), Univ Auckland, Dept Elect Comp & Software Engn, Auckland, New Zealand.
EM zmas690@aucklanduni.ac.nz; rashina.hoda@monash.edu;
   k.blincoe@auckland.ac.nz
OI Blincoe, Kelly/0000-0003-4092-9706; Masood, Zainab/0000-0002-3592-8250
CR Acuña ST, 2006, IEEE SOFTWARE, V23, P94, DOI 10.1109/MS.2006.47
   Almeida LH, 2011, INT C ROUGH SETS KNO
   Andriyani Y, 2017, INT C AG SOFTW DEV
   [Anonymous], 1988, CRITICAL SUCCESS FAC
   [Anonymous], 2001, PROJ MAN BOD KNOWL P
   Augustine S, 2005, COMMUN ACM, V48, P85, DOI 10.1145/1101779.1101781
   Augustine S., 2005, Managing agile projects, V1st
   Beck K, 2005, CHRYSLER GOES EXTREM
   Bick S, 2018, IEEE T SOFTWARE ENG, V44, P932, DOI 10.1109/TSE.2017.2730870
   BOEHM BW, 1991, IEEE SOFTWARE, V8, P32, DOI 10.1109/52.62930
   Carroll J, 2015, EASY STEPS
   Coleman G, 2007, INFORM SOFTWARE TECH, V49, P654, DOI 10.1016/j.infsof.2007.02.011
   Corbin J., 2015, BASICS QUALITATIVE R
   Crowston K, 2007, INFORM SOFTWARE TECH, V49, P564, DOI 10.1016/j.infsof.2007.02.004
   Deemer P., 2012, A Lightweight Guide to the Theory and Practice of Scrum
   Fetterman D.M., 2019, Ethnography: Step by step, V4th
   Fowler M., 2001, Software Development, V9, P28
   Giardino C, 2016, IEEE T SOFTWARE ENG, V42, P585, DOI 10.1109/TSE.2015.2509970
   Glaser B. G., 1967, DISCOVERY GROUNDED T, DOI 10.1515/9783111660211/html
   Hayata T, 2011, SERV OP LOG INF SOLI
   Hoda R, 2017, P 39 INT C SOFTW ENG
   Hoda R, 2016, J SYST SOFTWARE, V117, P245, DOI 10.1016/j.jss.2016.02.049
   Hoda R, 2012, EMPIR SOFTW ENG, V17, P609, DOI 10.1007/s10664-011-9161-0
   Jurison J., 1999, COMMUN AIS, V2, P2, DOI DOI 10.17705/1CAIS.00217
   Kalliamvakou E, 2015, P 37 INT C SOFTW ENG, V1
   Kelle U, 2007, HIST SOC RES, P133
   Lee E, 2010, PUSH VS PULL SCRUM
   Lee S, 2016, J SYST SOFTWARE, V117, P199, DOI 10.1016/j.jss.2016.02.050
   Lin J, 2013, P 28 IEEE ACM INT C
   Mak DK, 2006, EL COMP ENG 2006 CCE
   Masood Z, 2017, 2017 IEEE ACM 10 INT
   Masood Z, 2017, INT C AG SOFTW DEV
   Masood Z, 2020, FIGSHARE, DOI [10.17608/k6.auckland.12133494.v8, DOI 10.17608/K6.AUCKLAND.12133494.V8]
   Nerur S, 2005, COMMUN ACM, V48, P72, DOI 10.1145/1060710.1060712
   Schwaber K., 2011, SCRUM GUIDE
   Seidel S., 2016, Enacting Research Methods in Information Systems: Volume, V1, P157
   Simao M, 2015, ADV INTELL SYST, V349, P243, DOI 10.1007/978-3-319-18473-9_24
   Stol K.-J, 2016, SOFTW ENG ICSE 2016
   Strauss A.L., 1990, BASICS QUALITATIVE R
   Strauss E, 1998, CLIN ORTHOP RELAT R, P2
   Stray V, 2018, P 19 INT C AG SOFTW
   Stray V, 2016, J SYST SOFTWARE, V114, P101, DOI 10.1016/j.jss.2016.01.004
   Strode DE, 2016, INFORM SYST FRONT, V18, P23, DOI 10.1007/s10796-015-9574-1
   Stylianou C, 2014, HUMAN RESOURCE ALLOC, P73
   Urquhart C., 2013, Grounded Theory for Qualitative Research: A PracticalGuide
   Vidgen R, 2009, INFORM SYST RES, V20, P355, DOI 10.1287/isre.1090.0237
   Williams L, 2000, IEEE SOFTWARE, V17, P19, DOI 10.1109/52.854064
   Yin R.K., 2002, Applied Social Research Methods Series, V34
NR 48
TC 17
Z9 17
U1 9
U2 29
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2020
VL 25
IS 6
BP 4962
EP 5005
DI 10.1007/s10664-020-09876-x
EA SEP 2020
PG 44
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA OI4BB
UT WOS:000566066800001
OA hybrid
DA 2024-07-18
ER

PT J
AU Wang, CH
   Zhang, W
   Zhao, HY
   Jin, Z
AF Wang, Chunhui
   Zhang, Wei
   Zhao, Haiyan
   Jin, Zhi
TI Towards a fictional collective programming scenario: an approach based
   on the EIF loop
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Collective programming; Genetic algorithm; Software engineering;
   Collaborative learning
ID FEEDBACK GENERATION; REPAIR
AB In this paper, we base our research on a fictional collective programming scenario: A group of physically-distributed programmers try to collaboratively solve a programming problem in a web-based development environment, through a continually executing loop, consisting of three concurrent activities: exploration, integration, and feedback. Inexploration, a programmer is freely to submit a sequence of gradually improved solutions until achieving a correct one. All programmers' latest submissions are integrated into a collective artifact throughintegration. And throughfeedback, any programmer who hasn't achieved a correct solution is continuously pushed with personalized feedback information from the collective artifact, to help the programmer improve her/his submission. In order to facilitate the realization of this fictional scenario, we narrow the target problems to those introductory programming problems, design a genetic algorithm to integrate a set of syntax-correct programs into acollective program dependence graph(CPDG), and propose an automatic feedback generation method based on the CPDG and a programmer's latest submission. The key idea is to generate feedback from mutual inspiration: Any programmer's submission (even not correct) may possess information that could provide inspiration for others. We evaluate the proposed approach through a set of simulated experiments, as well as a set of real experiments. The results show that our approach has a precision of 90% and a recall of 80% in randomly generated data sets on average, and a precision of 69% and a recall of 77% in real student submissions on average.
C1 [Wang, Chunhui; Zhang, Wei; Zhao, Haiyan; Jin, Zhi] Peking Univ, Key Lab High Confidence Software Technol MoE, Beijing, Peoples R China.
   [Wang, Chunhui; Zhang, Wei; Zhao, Haiyan; Jin, Zhi] Peking Univ, Sch EECS, Inst Software, Beijing, Peoples R China.
   [Wang, Chunhui] Inner Mongolia Normal Univ, Coll Comp Sci & Technol, Hohhot, Peoples R China.
C3 Peking University; Peking University; Inner Mongolia Normal University
RP Jin, Z (corresponding author), Peking Univ, Key Lab High Confidence Software Technol MoE, Beijing, Peoples R China.; Jin, Z (corresponding author), Peking Univ, Sch EECS, Inst Software, Beijing, Peoples R China.
EM ciecwch@pku.edu.cn; zhangw.sei@pku.edu.cn; zhhy.sei@pku.edu.cn;
   zhijin@pku.edu.cn
RI zhang, weizhen/K-1484-2018; Wang, Chunhui/GQR-1652-2022; Jin,
   Zhi/E-1288-2013
OI Wang, Chunhui/0000-0002-3551-4226; 
FU National Natural Science Foundation of China [61690200, 61620106007,
   61751210]
FX The authors would like to thank the anonymous reviewers for precious
   feedback that allowed us to significantly improve this paper. This
   research is supported by the National Natural Science Foundation of
   China under Grant Nos. 61690200, 61620106007 and 61751210.
CR ADAM A, 1980, ARTIF INTELL, V15, P75, DOI 10.1016/0004-3702(80)90023-5
   [Anonymous], 38 C LAT INF CLEI 20
   Boyer KE, 2008, ITICSE '08: PROCEEDINGS OF THE 13TH ANNUAL CONFERENCE ON INNOVATION AND TECHNOLOGY IN COMPUTER SCIENCE EDUCATION, P158
   Debroy Vidroha, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P65, DOI 10.1109/ICST.2010.66
   Donald MacLaren M., 1969, Siam Review, V11, P89
   Forrest S., 2009, P 11 ANN C GENETIC E, P947, DOI DOI 10.1145/1569901.1570031
   GAO Y, 2018, SUSTAINABILITY BASEL, V10
   GENOVESE V, 1992, PROCEEDINGS OF THE 1992 IEEE INTERNATIONAL SYMPOSIUM ON INTELLIGENT CONTROL, P243, DOI 10.1109/ISIC.1992.225098
   GIRGIS MR, 1992, SOFTWARE ENG J, V7, P285, DOI 10.1049/sej.1992.0029
   Gopinath D, 2011, LECT NOTES COMPUT SC, V6605, P173, DOI 10.1007/978-3-642-19835-9_15
   Gulwani S, 2018, ACM SIGPLAN NOTICES, V53, P465, DOI [10.1145/3192366.3192387, 10.1145/3296979.3192387]
   Harrold M. J., 1993, SIGSOFT Software Engineering Notes, V18, P160, DOI 10.1145/174146.154268
   Horwitz S, 2004, ACM SIGPLAN NOTICES, V39, P229, DOI 10.1145/989393.989419
   Kidwell P, 1996, IEEE ANN HIST COMPUT, V18, P71
   Konighofer R., 2011, 2011 Formal Methods in Computer-Aided Design (FMCAD), P91
   Kurniawan A, 2015, PROCEDIA COMPUT SCI, V59, P510, DOI 10.1016/j.procs.2015.07.531
   Lin YT, 2018, INT J DIST EDUC, V16, P18, DOI 10.4018/IJDET.2018070102
   McDowell C., 2002, SIGCSE Bulletin, V34, P38, DOI 10.1145/563517.563353
   Rolim R, 2017, PROC INT CONF SOFTW, P404, DOI 10.1109/ICSE.2017.44
   Saraph V, 2014, BIOINFORMATICS, V30, P2931, DOI 10.1093/bioinformatics/btu409
   Shannon CE, 1997, M D COMPUT, V14, P306
   Shi JL, 2018, P 2018 CHI C HUM FAC
   Simon D., 2013, EVOLUTIONARY OPTIMIZ
   Singh R, 2013, ACM SIGPLAN NOTICES, V48, P15, DOI 10.1145/2499370.2462195
   Susi T., 2001, Cognitive Systems Research, V2, P273, DOI DOI 10.1016/S1389-0417(01)00053-5
   Wang K, 2018, PROCEEDINGS OF THE 39TH ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, PLDI 2018, P481, DOI 10.1145/3192366.3192384
   Watson Christopher, 2012, Advances in Web-Based Learning - ICWL 2012. Proceedings of the 11th International Conference, P228, DOI 10.1007/978-3-642-33642-3_25
   Xu SW, 2003, IEEE T SOFTWARE ENG, V29, P360, DOI 10.1109/TSE.2003.1191799
   Yashiro Tomohito, 2017, Human-Computer Interaction: Interaction Contexts. 19th International Conference, held as part of HCI International 2017. Proceedings: LNCS 10272, P398, DOI 10.1007/978-3-319-58077-7_32
   Yi JY, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P740, DOI 10.1145/3106237.3106262
   Yuhua Qi, 2013, 2013 Fifth International Conference on Computational and Information Sciences (ICCIS 2013), P1875, DOI 10.1109/ICCIS.2013.490
   Zhang W, 2020, NATL SCI REV, V7, P1273, DOI 10.1093/nsr/nwaa092
NR 32
TC 1
Z9 1
U1 4
U2 12
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2020
VL 25
IS 5
BP 3671
EP 3710
DI 10.1007/s10664-020-09850-7
EA AUG 2020
PG 40
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NJ1FD
UT WOS:000561279500001
DA 2024-07-18
ER

PT J
AU Guo, H
   Kafali, Ö
   Jeukeng, AL
   Williams, L
   Singh, MP
AF Guo, Hui
   Kafali, Ozgur
   Jeukeng, Anne-Liz
   Williams, Laurie
   Singh, Munindar P.
TI corba: crowdsourcing to obtain requirements from regulations and
   breaches
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Regulatory norms; Sociotechnical systems; HIPAA
ID PRIVACY; TEXT
AB Context Modern software systems are deployed in sociotechnical settings, combining social entities (humans and organizations) with technical entities (software and devices). In such settings, on top of technical controls that implement security features of software, regulations specify how users should behave in security-critical situations. No matter how carefully the software is designed and how well regulations are enforced, such systems are subject to breaches due to social (user misuse) and technical (vulnerabilities in software) factors. Breach reports, often legally mandated, describe what went wrong during a breach and how the breach was remedied. However, breach reports are not formally investigated in current practice, leading to valuable lessons being lost regarding past failures. Objective Our research aim is to aid security analysts and software developers in obtaining a set of legal, security, and privacy requirements, by developing a crowdsourcing methodology to extract knowledge from regulations and breach reports. Method We present corba, a methodology that leverages human intelligence via crowdsourcing, and extracts requirements from textual artifacts in the form of regulatory norms. We evaluate corba on the US healthcare regulations from the Health Insurance Portability and Accountability Act (HIPAA) and breach reports published by the US Department of Health and Human Services (HHS). Following this methodology, we have conducted a pilot and a final study on the Amazon Mechanical Turk crowdsourcing platform. Results corba yields high quality responses from crowd workers, which we analyze to identify requirements for the purpose of complementing HIPAA regulations. We publish a curated dataset of the worker responses and identified requirements. Conclusions The results show that the instructions and question formats presented to the crowd workers significantly affect the response quality regarding the identification of requirements. We have observed significant improvement from the pilot to the final study by revising the instructions and question formats. Other factors, such as worker types, breach types, or length of reports, do not have notable effect on the workers' performance. Moreover, we discuss other potential improvements such as breach report restructuring and text highlighting with automated methods.
C1 [Guo, Hui; Williams, Laurie; Singh, Munindar P.] North Carolina State Univ, Dept Comp Sci, Raleigh, NC USA.
   [Kafali, Ozgur] Univ Kent, Sch Comp, Canterbury, England.
   [Jeukeng, Anne-Liz] Univ Florida, Dept Comp & Informat Sci & Engn, Gainesville, FL USA.
C3 North Carolina State University; University of Kent; State University
   System of Florida; University of Florida
RP Guo, H (corresponding author), North Carolina State Univ, Dept Comp Sci, Raleigh, NC USA.
EM hguo5@ncsu.edu
RI Singh, Munindar P/L-8500-2013
OI Singh, Munindar P/0000-0003-3599-3893; Guo, Hui/0000-0003-4887-6354
CR Allen I Elaine, 2007, QUAL PROG, V40, P64, DOI DOI 10.1111/J.1365-2929.2004.02012.X
   [Anonymous], 2016, DAT BREACH INV REP
   [Anonymous], 2003, Summary of the HIPAA Privacy Rule
   [Anonymous], 2015, Berkeley Technol Law J
   Arora C, 2015, IEEE T SOFTWARE ENG, V41, P944, DOI 10.1109/TSE.2015.2428709
   Barth A, 2006, P IEEE S SECUR PRIV, P184, DOI 10.1109/SP.2006.32
   Bhatia J, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2907942
   Breaux TD, 2008, IEEE T SOFTWARE ENG, V34, P5, DOI 10.1109/TSE.2007.70746
   Breaux TD, 2014, INT REQUIR ENG CONF, P163, DOI 10.1109/RE.2014.6912258
   Dalpiaz F., 2016, Security Requirements Engineering: Designing Secure Socio-Technical Systems
   Dam HK, 2015, 2015 IEEE/ACM 37th IEEE International Conference on Software Engineering, Vol 2, P627, DOI 10.1109/ICSE.2015.209
   DataLossDB, 2015, 2015 REP DAT BREACH
   Downs JS, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P2399
   Dwarakanath A, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P41, DOI 10.1145/2889160.2889225
   Gao XB, 2014, AAMAS'14: PROCEEDINGS OF THE 2014 INTERNATIONAL CONFERENCE ON AUTONOMOUS AGENTS & MULTIAGENT SYSTEMS, P101
   Getman AP, 2014, ARTIF INTELL LAW, V22, P313, DOI 10.1007/s10506-014-9159-1
   Ghanavati S, 2014, INT REQUIR ENG CONF, P73, DOI 10.1109/RE.2014.6912249
   Gurses Seda., 2008, Proceedings of International Conference on Information Systems (ICIS), P90
   Hao JY, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P50, DOI 10.1145/2950290.2950307
   Hashmi M, 2015, IEEE INT ENTERP, P41, DOI 10.1109/EDOCW.2015.29
   HHS Breach Portal, 2016, NOT SECR HHS BREACH
   Kafali ÖO, 2017, PROC INT CONF SOFTW, P530, DOI 10.1109/ICSE.2017.55
   Kafali Ö, 2016, INT REQUIR ENG CONF, P136, DOI 10.1109/RE.2016.34
   Kafali Ö, 2016, IEEE INTELL SYST, V31, P8, DOI 10.1109/MIS.2016.89
   Kashyap A, 2016, LANG RESOUR EVAL, V50, P125, DOI 10.1007/s10579-015-9319-2
   Kunchur MN, 2015, NATO SCI PEACE SECUR, P15, DOI 10.1007/978-94-017-9005-5_2
   Landwehr N, 2005, MACH LEARN, V59, P161, DOI 10.1007/s10994-005-0466-3
   Le Quoc V., 2014, P INT C MACH LEARN I
   Liu Y, 2015, PROCEEDINGS OF THE 24TH USENIX SECURITY SYMPOSIUM, P1009
   MacLean DL, 2013, J AM MED INFORM ASSN, V20, P1120, DOI 10.1136/amiajnl-2012-001110
   Massey AK, 2014, INT REQUIR ENG CONF, P83, DOI 10.1109/RE.2014.6912250
   Matulevicius R, 2008, ARES 2008: PROCEEDINGS OF THE THIRD INTERNATIONAL CONFERENCE ON AVAILABILITY, SECURITY AND RELIABILITY, P1397, DOI 10.1109/ARES.2008.88
   Maxwell JC, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P101, DOI 10.1109/RE.2009.21
   Murukannaiah PK, 2016, INT REQUIR ENG CONF, P176, DOI 10.1109/RE.2016.68
   Murukannaiah PradeepK., 2017, Proceedings of the Hot Topics in Science of Security: Symposium and Bootcamp (Hanover, MD, USA) (HoTSoS), P35
   Patwardhan M, 2018, IEEE INT CONF AUTOM, P850, DOI 10.1145/3238147.3240727
   Riaz M, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962599
   Riaz M, 2014, INT REQUIR ENG CONF, P183, DOI 10.1109/RE.2014.6912260
   Savarimuthu BTR, 2014, LECT NOTES ARTIF INT, V8316, P26, DOI 10.1007/978-3-642-55192-5_3
   Siena Alberto, 2012, Conceptual Modeling. Proceedings 31st International Conference, ER 2012, P383, DOI 10.1007/978-3-642-34002-4_30
   Sindre G, 2005, REQUIR ENG, V10, P34, DOI 10.1007/s00766-004-0194-4
   Singh MP, 2013, ACM T INTEL SYST TEC, V5, DOI 10.1145/2542182.2542203
   Slankas J, 2013, 2013 ASE/IEEE INTERNATIONAL CONFERENCE ON SOCIAL COMPUTING (SOCIALCOM), P435, DOI 10.1109/SocialCom.2013.68
   Sleimi A, 2018, INT REQUIR ENG CONF, P124, DOI 10.1109/RE.2018.00022
   Staddon J, 2016, CYBER SECURITY PRACT
   Sumner M, 2005, LECT NOTES ARTIF INT, V3721, P675
   von Wright G.H., 1999, RATIO JURIS, V12, P26
   Wilson S, 2016, PROCEEDINGS OF THE 25TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'16), P133, DOI 10.1145/2872427.2883035
   Zeni N, 2018, DATA KNOWL ENG, V117, P407, DOI 10.1016/j.datak.2018.04.009
   Zeni Nicola, 2017, International Journal of Metadata, Semantics and Ontologies, V12, P47
   Zeni N, 2015, REQUIR ENG, V20, P1, DOI 10.1007/s00766-013-0181-8
NR 51
TC 3
Z9 3
U1 0
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN
PY 2020
VL 25
IS 1
BP 532
EP 561
DI 10.1007/s10664-019-09753-2
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KP0WS
UT WOS:000515965100013
DA 2024-07-18
ER

PT J
AU Lin, DY
   Bezemer, CP
   Hassan, AE
AF Lin, Dayi
   Bezemer, Cor-Paul
   Hassan, Ahmed E.
TI Identifying gameplay videos that exhibit bugs in computer games
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Gameplay videos; Bug report; Computer games; Steam
ID MOTIVATIONS
AB With the rapid growing market and competition in the gaming industry, it is challenging to develop a successful game, making the quality of games very important. To improve the quality of games, developers commonly use gamer-submitted bug reports to locate bugs in games. Recently, gameplay videos have become popular in the gaming community. A few of these videos showcase a bug, offering developers a new opportunity to collect context-rich bug information. In this paper, we investigate whether videos that showcase a bug can automatically be identified from the metadata of gameplay videos that are readily available online. Such bug videos could then be used as a supplemental source of bug information for game developers. We studied the number of gameplay videos on the Steam platform, one of the most popular digital game distribution platforms, and the difficulty of identifying bug videos from these gameplay videos. We show that naive approaches such as using keywords to search for bug videos are time-consuming and imprecise. We propose an approach which uses a random forest classifier to rank gameplay videos based on their likelihood of being a bug video. Our proposed approach achieves a precision that is 43% higher than that of the naive keyword searching approach on a manually labelled dataset of 96 videos. In addition, by evaluating 1,400 videos that are identified by our approach as bug videos, we calculated that our approach has both a mean average precision at 10 and a mean average precision at 100 of 0.91. Our study demonstrates that it is feasible to automatically identify gameplay videos that showcase a bug.
C1 [Lin, Dayi; Hassan, Ahmed E.] Queens Univ, SAIL, Kingston, ON, Canada.
   [Bezemer, Cor-Paul] Univ Alberta, Dept Elect & Comp Engn, Edmonton, AB, Canada.
C3 Queens University - Canada; University of Alberta
RP Lin, DY (corresponding author), Queens Univ, SAIL, Kingston, ON, Canada.
EM dayi.lin@cs.queensu.ca; bezemer@ualberta.ca; ahmed@cs.queensu.ca
RI KHALIFA, AHMED khalifa/HKF-2246-2023; Lin, Dayi/AAS-8054-2020
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; Bezemer,
   Cor-Paul/0000-0002-0474-5718; Lin, Dayi/0000-0002-4034-6650
CR Afic R., 2015, How to report a game bug
   Alexa, 2018, YOUT COM TRAFF DEM C
   [Anonymous], 2017, Natural Language Toolkit
   [Anonymous], 2007, P 22 IEEE ACM INT C, DOI DOI 10.1145/1321631.1321639
   [Anonymous], 2016, P AAAI C ARTIFICIAL
   Baeza-Yates R., 1999, Modern information retrieval
   Blackburn J, 2014, ACM T INTERNET TECHN, V13, DOI 10.1145/2602570
   Chambers C., 2005, P 5 ACM SIGCOMM C IN, P1
   CLEVELAND WS, 1988, J AM STAT ASSOC, V83, P596, DOI 10.2307/2289282
   EFRON B, 1983, J AM STAT ASSOC, V78, P316, DOI 10.2307/2288636
   Ekaterina P, 2017, 4 REASONS PEOPLE WAT
   Electronic Arts Inc, 2018, ORIGIN
   Fulda N, 2018, WORKSH 32 AAAI C ART, P1
   Google, 2018, IRR KEYW SEARCH CONS
   Guzdial M., 2016, P AAAI C ART INT INT, P44
   Guzdial M, 2018, ARXIV180909424 CORR
   Guzdial M, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P3707
   Habakuk CCP, 2017, BUG REPORTING EVE CO
   Hilvert-Bruce Z, 2018, COMPUT HUM BEHAV, V84, P58, DOI 10.1016/j.chb.2018.02.013
   Jacob LB, 2014, BRAZIL SYMP GAME DIG, P41, DOI 10.1109/SBGAMES.2014.33
   Kabinna S, 2018, EMPIR SOFTW ENG, V23, P290, DOI 10.1007/s10664-017-9518-0
   Kempka M, 2016, IEEE CONF COMPU INTE
   Larson RR, 2010, J AM SOC INF SCI TEC, V61, P852, DOI 10.1002/asi.21234
   Lewis PG, 2010, NATIONAL POLITICS AND EUROPEAN INTEGRATION: FROM THE CONSTITUTION TO THE LISBON TREATY, P108
   Lin D, 2019, SUPPLEMENTARY MAT OU
   Lin DY, 2019, EMPIR SOFTW ENG, V24, P170, DOI 10.1007/s10664-018-9627-4
   Lin DY, 2018, EMPIR SOFTW ENG, V23, P771, DOI 10.1007/s10664-017-9531-3
   Lin D, 2017, EMPIR SOFTW ENG, V22, P2095, DOI 10.1007/s10664-016-9480-2
   Linstead E, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P99, DOI 10.1109/MSR.2009.5069486
   Long J.D., 2003, Ordinal Analysis of Behavioral Data
   Louppe G., 2013, ADV NEURAL INFORM PR, P431, DOI DOI 10.5555/2999611.2999660
   Luo Z, 2018, AAAI C ART INT INT D, P1
   Mnih V, 2013, ARXIV
   Phillips T, 2018, HUM COST RED DEAD RE, V2
   PwC, 2016, VAL GLOB VID GAM MAR
   Romano J, 2006, ANN M FLOR ASS I RES, P1
   Schreier Jason., 2018, Inside Rockstar Games' Culture of Crunch
   Sixen, 2010, WRITE GOOD BUG REPOR
   Sjöblom M, 2017, COMPUT HUM BEHAV, V75, P985, DOI 10.1016/j.chb.2016.10.019
   Tantithamthavorn C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P286, DOI 10.1145/3183519.3183547
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Tin Kam Ho, 1995, Proceedings of the Third International Conference on Document Analysis and Recognition, P278, DOI 10.1109/ICDAR.1995.598994
   Valve, 2018, STEAM STOR
   Valve, 2018, STEAM COMM
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   YouTube, 2018, AUT TOP CHANN YOUT H
   Zimmermann T, 2010, IEEE T SOFTWARE ENG, V36, P618, DOI 10.1109/TSE.2010.63
   Zimmermann T, 2009, PROC INT CONF SOFTW, P247, DOI 10.1109/ICSE-COMPANION.2009.5070993
NR 48
TC 7
Z9 8
U1 0
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2019
VL 24
IS 6
BP 4006
EP 4033
DI 10.1007/s10664-019-09733-6
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JT6XW
UT WOS:000501131100024
DA 2024-07-18
ER

PT J
AU Cruz, L
   Abreu, R
AF Cruz, Luis
   Abreu, Rui
TI Catalog of energy patterns for mobile applications
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Mobile applications; Energy efficiency; Energy patterns; Catalog; Open
   source software
ID INTERNET; IMPACT
AB Software engineers make use of design patterns for reasons that range from performance to code comprehensibility. Several design patterns capturing the body of knowledge of best practices have been proposed in the past, namely creational, structural and behavioral patterns. However, with the advent of mobile devices, it becomes a necessity a catalog of design patterns for energy efficiency. In this work, we inspect commits, issues and pull requests of 1027 Android and 756 iOS apps to identify common practices when improving energy efficiency. This analysis yielded a catalog, available online, with 22 design patterns related to improving the energy efficiency of mobile apps. We argue that this catalog might be of relevance to other domains such as Cyber-Physical Systems and Internet of Things. As a side contribution, an analysis of the differences between Android and iOS devices shows that the Android community is more energy-aware.
C1 [Cruz, Luis] INESC ID, Porto, Portugal.
   [Cruz, Luis] Univ Porto, Porto, Portugal.
   [Abreu, Rui] Univ Lisbon, INESC ID, Lisbon, Portugal.
   [Abreu, Rui] Univ Lisbon, IST, Lisbon, Portugal.
C3 INESC-ID; Universidade de Lisboa; Universidade do Porto; INESC-ID;
   Universidade de Lisboa; Universidade de Lisboa
RP Cruz, L (corresponding author), INESC ID, Porto, Portugal.; Cruz, L (corresponding author), Univ Porto, Porto, Portugal.
EM luiscruz@fe.up.pt; rui@computer.org
RI Abreu, Rui/K-7048-2019; Cruz, Luis/AAJ-1874-2021
OI Abreu, Rui/0000-0003-3734-3157; Cruz, Luis/0000-0002-1615-355X
FU ERDF - European Regional Development Fund through the Operational
   Program for Competitiveness and Internationalization -COMPETE 2020
   Program; Portuguese funding agency, FCT -Fundacao para a Ciencia e a
   Tecnologia [UID/CEC/50021/2019]; FCT scholarship [PD/BD/52237/2013];
   Portuguese funding agency, FCT -Fundacao para a Ciencia e a Tecnologia
   within project GreenLab [POCI-01-0145-FEDER-016718]; Portuguese funding
   agency, FCT -Fundacao para a Ciencia e a Tecnologia within project
   FaultLockerRef [PTDC/CCI-COM/29300/2017]; Fundação para a Ciência e a
   Tecnologia [PD/BD/52237/2013, PTDC/CCI-COM/29300/2017] Funding Source:
   FCT
FX This work is financed by the ERDF - European Regional Development Fund
   through the Operational Program for Competitiveness and
   Internationalization -COMPETE 2020 Program and by National Funds through
   the Portuguese funding agency, FCT -Fundacao para a Ciencia e a
   Tecnologia with reference UID/CEC/50021/2019, and within projects
   GreenLab (POCI-01-0145-FEDER-016718) and FaultLockerRef
   (PTDC/CCI-COM/29300/2017). Luis Cruz is sponsored by an FCT scholarship
   grant number PD/BD/52237/2013. Furthermore, we would like to thank Sofia
   Reis for the illustrations of energy patterns.
CR Agolli Tedis, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P30, DOI 10.1109/MOBILESoft.2017.17
   An KJ, 2018, 2018 IEEE/ACM 5TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT), P180, DOI 10.1145/3197231.3197240
   [Anonymous], 2011, P 10 ACM WORKSH HOT
   [Anonymous], 2018, 5 IEEE ACM INT C MOB
   [Anonymous], 15 INT C MIN SOFTW R
   [Anonymous], 2012, HOTPOWER
   [Anonymous], PROC INT CONF SOFTW
   [Anonymous], 2014, P C MOD 2014 WORKSH
   [Anonymous], DESIGN PATTERNS ELEM
   [Anonymous], CIBSE 21 IB AM C SOF
   Banerjee A, 2016, 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2016), P139, DOI [10.1109/MobileSoft.2016.038, 10.1145/2897073.2897086]
   Banerjee A, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P588, DOI 10.1145/2635868.2635871
   Bao LF, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P37, DOI [10.1145/2901739.2901748, 10.1109/MSR.2016.014]
   Boonkrong S, 2015, 2015 7TH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY AND ELECTRICAL ENGINEERING (ICITEE), P565, DOI 10.1109/ICITEED.2015.7409011
   Cai H., 2015, 2015 IEEE Power & Energy Society General Meeting, P1, DOI 10.1109/PESGM.2015.7285596
   Carette A, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P115, DOI 10.1109/SANER.2017.7884614
   Chowdhury R, 2018, MEN AND FEMINISM IN INDIA, P1
   Chowdhury S, 2018, EMPIR SOFTW ENG, V23, P1422, DOI 10.1007/s10664-017-9545-x
   Corral L, 2015, 2015 IEEE/ACM FOURTH INTERNATIONAL WORKSHOP ON GREEN AND SUSTAINABLE SOFTWARE (GREENS), P1, DOI 10.1109/GREENS.2015.8
   Cruz Luis, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P46, DOI 10.1109/MOBILESoft.2017.19
   Cuadrado F, 2012, IEEE COMMUN MAG, V50, P160, DOI 10.1109/MCOM.2012.6353696
   Di Nucci D, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P103, DOI 10.1109/SANER.2017.7884613
   Fereday J., 2006, INT J QUAL METH, V5, P80, DOI [10.1177/160940690600500107, DOI 10.1177/160940690600500107]
   Gottschalk Marion., 2014, EnviroInfo, P437
   Hao S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P92, DOI 10.1109/ICSE.2013.6606555
   Hecht G, 2016, 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2016), P59, DOI [10.1145/2897073.2897100, 10.1109/MobileSoft.2016.030]
   Hindle Abram, 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, P12
   Jabbarvand R, 2015, 2015 IEEE/ACM FOURTH INTERNATIONAL WORKSHOP ON GREEN AND SUSTAINABLE SOFTWARE (GREENS), P8, DOI 10.1109/GREENS.2015.9
   Kim D, 2016, IEEE T MOBILE COMPUT, V15, P1925, DOI 10.1109/TMC.2015.2467393
   Li D., 2014, P 3 INT WORKSHOP GRE, P46, DOI DOI 10.1145/2593743.2593750
   Li D, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P958, DOI 10.1145/2786805.2803190
   Li D, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P527, DOI 10.11455/2568225.2568321
   Linares-Vasquez M., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, P2
   Linares-Vásquez M, 2017, PROC IEEE ACM INT C, P11, DOI 10.1109/ICSE-C.2017.10
   Liu YP, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P396, DOI 10.1145/2950290.2950297
   Liu YP, 2013, INT CONF PERVAS COMP, P2, DOI 10.1109/PerCom.2013.6526708
   Manotas I, 2016, PROC INT CONF SOFTW, P237, DOI 10.1145/2884781.2884810
   Martin W, 2017, IEEE T SOFTWARE ENG, V43, P817, DOI 10.1109/TSE.2016.2630689
   McIntosh A, 2018, EMPIR SOFTW ENG, P1, DOI [10.1007/s10664-018-9629-210.1007/s10664-018-9629-2, DOI 10.1007/S10664-018-9629-210.1007/S10664-018-9629-2]
   Metri Grace., 2012, ENERGY AWARE COMPUTI, P1
   Moura I, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P56, DOI 10.1109/MSR.2015.13
   Negara S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P803, DOI 10.1145/2568225.2568317
   Oliveira W, 2017, IEEE WORK CONF MIN S, P42, DOI 10.1109/MSR.2017.66
   Palattella MR, 2016, IEEE J SEL AREA COMM, V34, P510, DOI 10.1109/JSAC.2016.2525418
   Palomba F, 2019, INFORM SOFTWARE TECH, V105, P43, DOI 10.1016/j.infsof.2018.08.004
   Palomba F, 2018, PROC IEEE ACM INT C, P240, DOI 10.1145/3183440.3194950
   Palomba F, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P487, DOI 10.1109/SANER.2017.7884659
   Pathak Abhijit D., 2012, Proceedings of the PCIM ASIA 2012. International Conference and Exhibition for Power Electronics, Intelligent Motion, Renewable Energy and Energy Management, P29
   Pathak A, 2011, EUROSYS 11: PROCEEDINGS OF THE EUROSYS 2011 CONFERENCE, P153
   Pathak A, 2012, IEEE INT CONF NETWOR, P268, DOI 10.1109/ICON.2012.6506568
   Pham R, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P890, DOI 10.1145/2786805.2803202
   Pham R, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P112, DOI 10.1109/ICSE.2013.6606557
   Pinto G., 2014, P 11 WORK C MIN SOFT, P22
   Romansky S, 2017, PROC IEEE INT CONF S, P273, DOI 10.1109/ICSME.2017.79
   Sahin C., 2012, 2012 First International Workshop on Green and Sustainable Software (GREENS), P55, DOI 10.1109/GREENS.2012.6224257
   Sahin C, 2016, J SYST SOFTWARE, V117, P307, DOI 10.1016/j.jss.2016.03.031
   Shafer I, 2010, ACM S MODEL ANAL SIM, P81
   Sousa L, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P921, DOI 10.1145/3180155.3180239
   White J, 2010, J INTERNET SERV APPL, V1, P45, DOI 10.1007/s13174-010-0004-9
   Wilke Claas, 2013, P 2013 WORKSHOP GREE, P9
   Yskout K, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P292, DOI 10.1109/ICSE.2015.49
   Zhang L, 2010, PROCEEDINGS OF 2010 INTERNATIONAL CONFERENCE ON PUBLIC ADMINISTRATION (6TH), VOL II, P105, DOI 10.1145/1878961.1878982
NR 62
TC 54
Z9 55
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2019
VL 24
IS 4
BP 2209
EP 2235
DI 10.1007/s10664-019-09682-0
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IL9CL
UT WOS:000477582700015
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Laaber, C
   Scheuner, J
   Leitner, P
AF Laaber, Christoph
   Scheuner, Joel
   Leitner, Philipp
TI Software microbenchmarking in the cloud. How bad is it really?
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Performance testing; Microbenchmarking; Cloud; Performance-regression
   detection
AB Rigorous performance engineering traditionally assumes measuring on bare-metal environments to control for as many confounding factors as possible. Unfortunately, some researchers and practitioners might not have access, knowledge, or funds to operate dedicated performance-testing hardware, making public clouds an attractive alternative. However, shared public cloud environments are inherently unpredictable in terms of the system performance they provide. In this study, we explore the effects of cloud environments on the variability of performance test results and to what extent slowdowns can still be reliably detected even in a public cloud. We focus on software microbenchmarks as an example of performance tests and execute extensive experiments on three different well-known public cloud services (AWS, GCE, and Azure) using three different cloud instance types per service. We also compare the results to a hosted bare-metal offering from IBM Bluemix. In total, we gathered more than 4.5 million unique microbenchmarking data points from benchmarks written in Java and Go. We find that the variability of results differs substantially between benchmarks and instance types (by a coefficient of variation from 0.03% to >100%). However, executing test and control experiments on the same instances (in randomized order) allows us to detect slowdowns of 10% or less with high confidence, using state-of-the-art statistical tests (i.e., Wilcoxon rank-sum and overlapping bootstrapped confidence intervals). Finally, our results indicate that Wilcoxon rank-sum manages to detect smaller slowdowns in cloud environments.
C1 [Laaber, Christoph] Univ Zurich, Dept Informat, Zurich, Switzerland.
   [Scheuner, Joel; Leitner, Philipp] Chalmers Univ Gothenburg, Software Engn Div, Gothenburg, Sweden.
C3 University of Zurich; Chalmers University of Technology
RP Laaber, C (corresponding author), Univ Zurich, Dept Informat, Zurich, Switzerland.
EM laaber@ifi.uzh.ch; scheuner@chalmers.se; philipp.leitner@chalmers.se
RI Laaber, Christoph/AAU-8240-2021
OI Laaber, Christoph/0000-0001-6817-331X
FU Swiss National Science Foundation (SNF) under project MINCA - Models to
   Increase the Cost Awareness of Cloud Developers [165546]; Wallenberg AI,
   Autonomous Systems and Software Program (WASP) - Knut and Alice
   Wallenberg Foundation; Chalmer's ICT Area of Advance
FX The research leading to these results has received funding from the
   Swiss National Science Foundation (SNF) under project MINCA - Models to
   Increase the Cost Awareness of Cloud Developers (no. 165546), the
   Wallenberg AI, Autonomous Systems and Software Program (WASP) funded by
   the Knut and Alice Wallenberg Foundation, and Chalmer's ICT Area of
   Advance. Further, we are grateful for the anonymous reviewers and their
   feedback, which helped to significantly improve this paper's quality.
CR Abedi Ali, 2017, P 8 ACM SPEC INT C P, P287, DOI DOI 10.1145/3030207.3030229
   [Anonymous], 2011, AUTONOMIC LOAD TESTI
   [Anonymous], 1991, The Art of Computer Systems Performance Analysis: Techniques for Experimental Design, Measurement, Simulation, and Modeling
   Arif MM, 2018, EMPIR SOFTW ENG, V23, P1490, DOI 10.1007/s10664-017-9553-x
   Bulej L, 2017, ICPE'17: COMPANION OF THE 2017 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING, P186, DOI 10.1145/3053600.3053638
   Chen J, 2017, P 33 INT C SOFTW MAI
   Cito J, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P393, DOI 10.1145/2786805.2786826
   Cliff N., 2014, Ordinal Methods for Behavioral Data Analysis
   Davison AC, 1997, BOOTSTRAP METHODS TH, P94
   Farley B., 2012, P 3 ACM S CLOUD COMP, V20, P1
   Flora Parminder, 2014, P 11 WORK C MIN SOFT, P232, DOI [DOI 10.1145/2597073.2597092EVENT-PLACE, 10.1145/2597073.2597092event-place:Hyderabad,India, DOI 10.1145/2597073.2597092EVENT-PLACE:HYDERABAD,INDIA]
   Foo KC, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P159, DOI 10.1109/ICSE.2015.144
   Georges A, 2007, OOPSLA: 22ND INTERNATIONAL CONFERENCE ON OBJECT-ORIENTED PROGRAMMING, SYSTEMS, LANGUAGES, AND APPLICATIONS, PROCEEDINGS, P57
   Gillam L, 2013, J CLOUD COMPUT-ADV S, V2, DOI 10.1186/2192-113X-2-6
   Grechanik M, 2012, PROC INT CONF SOFTW, P156, DOI 10.1109/ICSE.2012.6227197
   Hesterberg TC, 2015, AM STAT, V69, P371, DOI 10.1080/00031305.2015.1089789
   Horky Vojtech, 2015, P 6 ACM SPEC INT C P, P289, DOI DOI 10.1145/2668930.2688051
   Iosup A., 2011, 2011 Proceedings of 11th IEEE/ACM International Symposium on Cluster, Cloud and Grid Computing (CCGrid 2011), P104, DOI 10.1109/CCGrid.2011.22
   Jiang ZM, 2015, IEEE T SOFTWARE ENG, V41, P1091, DOI 10.1109/TSE.2015.2445340
   John LizyKurian., 2005, Performance Evaluation and Benchmarking
   Kalibera T, 2012, 412 US KENT
   Kalibera T, 2013, PROCEEDINGS OF THE ACM SIGPLAN INTERNATIONAL SYMPOSIUM ON MEMORY MANAGEMENT (ISMM '13), P63
   Laaber C, 2019, DATASET SCRIPTS ONLI, DOI [10.6084/m9.figshare.7546703, DOI 10.6084/M9.FIGSHARE.7546703]
   Laaber C, 2018, IEEE WORK CONF MIN S, P119, DOI 10.1145/3196398.3196407
   Leitner P., 2017, P 8 ACMSPEC INT C PE, P373
   Leitner P, 2016, ACM T INTERNET TECHN, V16, DOI 10.1145/2885497
   Mell P., 2011, TECH REP 800 145
   Menascé DA, 2002, IEEE INTERNET COMPUT, V6, P70, DOI 10.1109/MIC.2002.1020328
   Mytkowicz T, 2009, ACM SIGPLAN NOTICES, V44, P265, DOI 10.1145/1508284.1508275
   Ou Z., 2012, Pro- ceedings of the 4th USENIX conference on Hot Topics in Cloud Ccomputing, HotCloud'12, P4
   Ren SQ, 2010, J APPL STAT, V37, P1487, DOI 10.1080/02664760903046102
   Romano J, 2006, ANN M FLOR ASS I RES, P1
   Scheuner J, 2014, INT CONF CLOUD COMP, P246, DOI 10.1109/CloudCom.2014.98
   Stefan P., 2017, P 8 ACM SPEC INT C P, P401, DOI [DOI 10.1145/3030207.3030226, 10. 1145/3030207.3030226]
   Weyuker EJ, 2000, IEEE T SOFTWARE ENG, V26, P1147, DOI 10.1109/32.888628
   Woodside M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P171, DOI 10.1109/FOSE.2007.32
NR 36
TC 37
Z9 39
U1 1
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2019
VL 24
IS 4
BP 2469
EP 2508
DI 10.1007/s10664-019-09681-1
PG 40
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IL9CL
UT WOS:000477582700022
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Pascarella, L
   Bruntink, M
   Bacchelli, A
AF Pascarella, Luca
   Bruntink, Magiel
   Bacchelli, Alberto
TI Classifying code comments in Java software systems
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Code comments usage; Code comment classification; Dataset
ID TRACEABILITY LINKS; DOCUMENTATION
AB Code comments are a key software component containing information about the underlying implementation. Several studies have shown that code comments enhance the readability of the code. Nevertheless, not all the comments have the same goal and target audience. In this paper, we investigate how 14 diverse Java open and closed source software projects use code comments, with the aim of understanding their purpose. Through our analysis, we produce a taxonomy of source code comments; subsequently, we investigate how often each category occur by manually classifying more than 40,000 lines of code comments from the aforementioned projects. In addition, we investigate how to automatically classify code comments at line level into our taxonomy using machine learning; initial results are promising and suggest that an accurate classification is within reach, even when training the machine learner on projects different than the target one. Data and Materials [10.5281/zenodo.2628361].
C1 [Pascarella, Luca] Delft Univ Technol, Delft, Netherlands.
   [Bruntink, Magiel] Software Improvement Grp, Res, Amsterdam, Netherlands.
   [Bacchelli, Alberto] Univ Zurich, Fac Business Econ & Informat, Dept Informat, Empir Software Engn, Zurich, Switzerland.
C3 Delft University of Technology; University of Zurich
RP Pascarella, L (corresponding author), Delft Univ Technol, Delft, Netherlands.
EM l.pascarella@tudelft.nl; m.bruntink@sig.eu; bacchelli@ifi.uzh.ch
RI Pascarella, Luca/HKO-7228-2023; Bacchelli, Alberto/ABG-5379-2020;
   Pascarella, Luca/AFM-2533-2022
OI Pascarella, Luca/0000-0001-8289-7736; Bacchelli,
   Alberto/0000-0003-0193-6823; Pascarella, Luca/0000-0001-8289-7736
FU European Union's Horizon 2020 research and innovation programme under
   the Marie Sklodowska-Curie grant [642954]; Swiss National Science
   Foundation through the SNF [PP00P2_170529]
FX This project has received funding from the European Union's Horizon 2020
   research and innovation programme under the Marie Sklodowska-Curie grant
   agreement No 642954. Bacchelli gratefully acknowledges the support of
   the Swiss National Science Foundation through the SNF Project No.
   PP00P2_170529.
CR [Anonymous], 2016, DEEP LEARNING
   [Anonymous], 2008, INTRO INFORM RETRIEV, DOI DOI 10.1017/CBO9780511809071
   Antoniol G, 2000, PROC IEEE INT CONF S, P40, DOI 10.1109/ICSM.2000.883003
   Apache Software Foundation (ASF), 2017, APACHE SOFTWARE FDN
   Bacchelli A., 2010, Proceedings of the 32nd International Conference on Software Engineering, P375
   Bacchelli A, 2012, PROC INT CONF SOFTW, P375, DOI 10.1109/ICSE.2012.6227177
   Chawla NV, 2010, DATA MINING AND KNOWLEDGE DISCOVERY HANDBOOK, SECOND EDITION, P875, DOI 10.1007/978-0-387-09823-4_45
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   de Souza S.C.B., 2005, P 23 ANN INT C DES C, P68, DOI [10.1145/1085313, 10.1145/1085313.1085331]
   Diakopoulos Nicholas., 2016, TOP PROGRAMMING LANG
   FLEISS JL, 1971, PSYCHOL BULL, V76, P378, DOI 10.1037/h0031619
   Fluri B, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P70, DOI 10.1109/WCRE.2007.21
   Flyvbjerg B, 2006, QUAL INQ, V12, P219, DOI 10.1177/1077800405284363
   Friedman S, 2001, IND REL RES, P1, DOI 10.1097/00054725-200102000-00001
   Garcia MJB, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P87, DOI 10.1109/ICSM.1996.564992
   Haouari D, 2011, INT SYMP EMP SOFTWAR, P137, DOI 10.1109/ESEM.2011.22
   Hartzman Carl, 1993, MAINTENANCE PRODUCTI, P138, DOI [10.1145/962304, DOI 10.1145/962304]
   Jiang Zhen Ming, 2006, MSR '06: Proceedings of the 2006 international workshop on Mining software repositories, P179, DOI DOI 10.1145/1137983.1138030
   Lawrie DJ, 2006, INT C PROGRAM COMPRE, P149, DOI 10.1109/ICPC.2006.34
   Lidwell W, 2010, INFLUENCE PERCEPTION
   Lin Tan, 2007, Operating Systems Review, V41, P145, DOI 10.1145/1323293.1294276
   Maalej W, 2013, IEEE T SOFTWARE ENG, V39, P1264, DOI 10.1109/TSE.2013.12
   Marcus A, 2005, INT J SOFTW ENG KNOW, V15, P811, DOI 10.1142/S0218194005002543
   Marcus A, 2003, PROC INT CONF SOFTW, P125, DOI 10.1109/ICSE.2003.1201194
   O'Brien RM, 2007, QUAL QUANT, V41, P673, DOI 10.1007/s11135-006-9018-6
   Oman P., 1992, Conference on Software Maintenance 1992 (Cat.No.92CH3206-0), P337, DOI 10.1109/ICSM.1992.242525
   Padioleau Y, 2009, PROC INT CONF SOFTW, P331, DOI 10.1109/ICSE.2009.5070533
   Pascarella L, 2017, MANUALLY CLASSIFIED, DOI [10.5281/zenodo.2628361, DOI 10.5281/ZEN0D0.2628361]
   Paulson JW, 2004, IEEE T SOFTWARE ENG, V30, P246, DOI 10.1109/TSE.2004.1274044
   Sebastiani F, 2002, ACM COMPUT SURV, V34, P1, DOI 10.1145/505282.505283
   Sridhara Giriprasad, 2010, 25 IEEEACM INT C AUT, P43
   Stamelos I, 2002, INFORM SYST J, V12, P43, DOI 10.1046/j.1365-2575.2002.00117.x
   Steidl D, 2013, CONF PROC INT SYMP C, P83, DOI 10.1109/ICPC.2013.6613836
   TENNY T, 1988, IEEE T SOFTWARE ENG, V14, P1271, DOI 10.1109/32.6171
   Tenny T., 1985, SIGCSE Bulletin, V17, P44, DOI 10.1145/382208.382523
   Triola M, 2014, Elementary Statistics, V12th
   Witte R, 2007, LECT NOTES COMPUT SC, V4519, P37
   Woodfield SN, 1981, EFFECT MODULARIZATIO, P215
NR 38
TC 30
Z9 31
U1 0
U2 8
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2019
VL 24
IS 3
BP 1499
EP 1537
DI 10.1007/s10664-019-09694-w
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA ID9YT
UT WOS:000472043800014
OA hybrid
DA 2024-07-18
ER

PT J
AU Shahin, M
   Zahedi, M
   Babar, MA
   Zhu, LM
AF Shahin, Mojtaba
   Zahedi, Mansooreh
   Babar, Muhammad Ali
   Zhu, Liming
TI An empirical study of architecting for continuous delivery and
   deployment
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software architecture; Continuous delivery; Continuous deployment;
   DevOps; Empirical study
ID CONTINUOUS INTEGRATION; SOFTWARE
AB Recently, many software organizations have been adopting Continuous Delivery and Continuous Deployment (CD) practices to develop and deliver quality software more frequently and reliably. Whilst an increasing amount of the literature covers different aspects of CD, little is known about the role of software architecture in CD and how an application should be (re-) architected to enable and support CD. We have conducted a mixed-methods empirical study that collected data through in-depth, semi-structured interviews with 21 industrial practitioners from 19 organizations, and a survey of 91 professional software practitioners. Based on a systematic and rigorous analysis of the gathered qualitative and quantitative data, we present a conceptual framework to support the process of (re-) architecting for CD. We provide evidence-based insights about practicing CD within monolithic systems and characterize the principle of small and independent deployment units as an alternative to the monoliths. Our framework supplements the architecting process in a CD context through introducing the quality attributes (e.g., resilience) that require more attention and demonstrating the strategies (e.g., prioritizing operations concerns) to design operations-friendly architectures. We discuss the key insights (e.g., monoliths and CD are not intrinsically oxymoronic) gained from our study and draw implications for research and practice.
C1 [Shahin, Mojtaba; Babar, Muhammad Ali] Univ Adelaide, CREST, Adelaide, SA, Australia.
   [Zahedi, Mansooreh] IT Univ Copenhagen, CREST, Copenhagen, Denmark.
   [Zhu, Liming] CSIRO, Data61, Sydney, NSW 2015, Australia.
C3 University of Adelaide; IT University Copenhagen; Commonwealth
   Scientific & Industrial Research Organisation (CSIRO)
RP Shahin, M (corresponding author), Univ Adelaide, CREST, Adelaide, SA, Australia.
EM mojtaba.shahin@adelaide.edu.au; mzah@itu.dk; ali.babar@adelaide.edu.au;
   liming.zhu@data61.csiro.au
RI Zhu, Li/GXH-9801-2022
OI Zhu, Liming/0000-0001-5839-3765; Zahedi, Mansooreh/0000-0001-6276-9956
FU Data61, a business unit of CSIRO, Australia; Australian Government
   Research Training Program Scholarship
FX The authors would like to thank all participants in this study. This
   work is partially supported by Data61, a business unit of CSIRO,
   Australia. The first author is also supported by Australian Government
   Research Training Program Scholarship. We also greatly appreciate the
   hard work and time spent by the anonymous reviewers and the handling
   editor in providing insightful comments and help us to improve the
   manuscript.
CR Adams B, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 5, P78, DOI 10.1109/SANER.2016.108
   Adrian F., 1996, PERS INDIVIDUAL DIFF, V7, P385
   Andre van Hoorn PJ, 2017, REPORT GI DAGSTUHL S
   [Anonymous], 2015, 2015 STATE DEVOPS RE
   [Anonymous], 2016, CONTINUOUS DELIVERY
   [Anonymous], 2017, WHAT TEAM STRUCTURE
   [Anonymous], 2014, SELF CONTAINED SYSTE
   [Anonymous], 2014, THESIS
   Ao ZM, 2012, NANOSCALE RES LETT, V7, P1, DOI 10.1186/1556-276X-7-158
   Arun G, 2015, MICROSERVICES MONOLI
   Balalaie A, 2016, IEEE SOFTWARE, V33, P42, DOI 10.1109/MS.2016.64
   Bass L, 2018, IEEE SOFTWARE, V35, P8, DOI 10.1109/MS.2017.4541051
   Bass L, 2013, 2013 1ST INTERNATIONAL WORKSHOP ON RELEASE ENGINEERING (RELENG), P5, DOI 10.1109/RELENG.2013.6607688
   Bass Len, 2015, DevOps: A Software Architect's Perspective
   Beijer P., 2010, IT architecture: essential practice for IT business solutions
   Bellomo S, 2014, 44 ANN IEEE IFIP INT
   Bosch J, 2016, IEEE SOFTWARE, V33, P82, DOI 10.1109/MS.2016.14
   Brandolini A, 2013, INTRO EVENT STORMING
   Brandtner M, 2015, INFORM SOFTWARE TECH, V65, P97, DOI 10.1016/j.infsof.2014.10.004
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   Brown A, 2015, WHATS BEST TEAM STRU
   Capilla R, 2016, J SYST SOFTWARE, V116, P191, DOI 10.1016/j.jss.2015.08.054
   Chen LP, 2015, 2015 12TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P131, DOI 10.1109/WICSA.2015.23
   Chris R, 2014, PATTERN MONOLITHIC A
   Cito J, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P393, DOI 10.1145/2786805.2786826
   Claps GG, 2015, INFORM SOFTWARE TECH, V57, P21, DOI 10.1016/j.infsof.2014.07.009
   CONWAY ME, 1968, DATAMATION, V14, P28
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   de Jong M, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P143, DOI 10.1109/ICSE-SEIP.2017.5
   Debbiche A, 2014, CHALLENGES ADOPTING, P17
   Dooley PM, 2015, INTERSECTION DEVOPS
   Dragoni N., 2017, Microservices: yesterday, today, and tomorrow, P195, DOI [DOI 10.1007/978-3-319-67425-4_12, 10.1007/978-3-319-67425-4_12]
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Elbaum S, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P235, DOI 10.1145/2635868.2635910
   Erder M, 2015, CONTINUOUS ARCHITECT
   Ernst N, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE WORKSHOPS (ICSAW), P133, DOI 10.1109/ICSAW.2017.19
   Evans E., 2011, DOMAIN DRIVEN DESIGN
   Fitzgerald B, 2017, J SYST SOFTWARE, V123, P176, DOI 10.1016/j.jss.2015.06.063
   Ford N, 2016, MICROSERVICES EVOLUT
   Ford N, 2016, ARCHITECTURE IS ABST
   Fowler F. J., 2013, Survey research methods
   Fowler M, 2015, CONTINUOUS INTEGRATI
   Fowler M., 2015, MicroservicePremium [WWW Document]. martinfowler.com
   Fowler M., 2013, Continuous Delivery
   Gabhart K, 2014, RESILIENT IT DEVOPS
   Garousi V, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2916008
   Gibson S, 2016, MONOLITHS ARE BAD DE
   Gitlevich V, 2015, WHAT IS DOMAIN DRIVE
   GOODMAN LA, 1961, ANN MATH STAT, V32, P148, DOI 10.1214/aoms/1177705148
   Gousios G, 2016, PROC INT CONF SOFTW, P285, DOI 10.1145/2884781.2884826
   Hasselbring Wilhelm, 2017, 2017 IEEE International Conference on Software Architecture: Workshops (ICSAW), P243, DOI 10.1109/ICSAW.2017.11
   Hilton M, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P197, DOI 10.1145/3106237.3106270
   Hohpe G, 2016, IEEE SOFTWARE, V33, P30, DOI 10.1109/MS.2016.137
   Hove S. E., 2005, Experiences from conducting semi-structured interviews in empirical software engineering research. Paper presented at: IEEE International Software Metrics Symposium (METRICS), P10, DOI DOI 10.1109/METRICS.2005.24
   Humble J, 2007, CONTINUOUS DELIVERY
   Humble J, 2011, ORG SOFTWARE DELIVER
   Humble Jez, 2010, Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation
   ISO/IEC/IEEE Systems and software engineering -- Architecture description, 2011, 420102011E ISOIECIEE, P1
   Kim EH, 2009, PROCEEDINGS OF THE 2009 SIXTH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: NEW GENERATIONS, VOLS 1-3, P784, DOI 10.1109/ITNG.2009.260
   KITCHENHAM B, 1995, IEEE SOFTWARE, V12, P52, DOI 10.1109/52.391832
   Kitchenham BA, 2008, Guide to advanced empirical software engineering, P63, DOI [DOI 10.1007/978-1-84800-044-5_3, 10.1007/ 978-1-84800-044-5_3]
   Laukkanen E, 2016, 10 ACM IEEE INT S EM, P1
   Laukkanen E, 2017, INFORM SOFTWARE TECH, V82, P55, DOI 10.1016/j.infsof.2016.10.001
   Leppanen Marko, 2015, IEEE Software, V32, P64, DOI 10.1109/MS.2015.50
   Lewis J, 2010, MICROSERVICES DEFINI
   Lianping Chen, 2015, IEEE Software, V32, P50, DOI 10.1109/MS.2015.27
   Luke E, 2016, NO ONE AGREES DEFINE
   Mäkinen S, 2016, INFORM SOFTWARE TECH, V80, P175, DOI 10.1016/j.infsof.2016.09.001
   Manotas I, 2016, PROC INT CONF SOFTW, P237, DOI 10.1145/2884781.2884810
   Mäntylä MV, 2015, EMPIR SOFTW ENG, V20, P1384, DOI 10.1007/s10664-014-9338-4
   Mårtensson T, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2017), P169, DOI 10.1109/ICSA.2017.11
   Meade AW, 2012, PSYCHOL METHODS, V17, P437, DOI 10.1037/a0028085
   Meho LI, 2006, J AM SOC INF SCI TEC, V57, P1284, DOI 10.1002/asi.20416
   Murphy-Hill E, 2015, IEEE T SOFTWARE ENG, V41, P65, DOI 10.1109/TSE.2014.2357438
   Mysara M, 2016, CAIRO INT BIOM ENG, P19, DOI 10.1109/CIBEC.2016.7836090
   Newman S., 2015, BUILDING MICROSERVIC
   Northrop L, 2015, TRENDS NEW DIRECTION
   Palinkas LA, 2015, ADM POLICY MENT HLTH, V42, P533, DOI 10.1007/s10488-013-0528-y
   Pauw TD, 2017, FEATURE BRANCHING IS
   Prewer L, 2015, SMOOTHING CONTINUOUS
   Prince S, 2016, PRODUCT MANAGERS GUI
   Rahman MT, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P201, DOI [10.1145/2901739.2901745, 10.1109/MSR.2016.029]
   Rodriguez P, 2017, J SYST SOFTWARE, V123, P263, DOI 10.1016/j.jss.2015.12.015
   Savor T, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P21, DOI 10.1145/2889160.2889223
   Schauenberg D., 2014, DEV DEPLOYMENT COLLA
   Schermann G., 2016, PEERJ PREPRINTS
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Shahin M., 2017, P 21 INT C EV ASS SO, P384
   Shahin M, 2017, INT SYMP EMP SOFTWAR, P111, DOI 10.1109/ESEM.2017.18
   Shahin M, 2017, IEEE ACCESS, V5, P3909, DOI 10.1109/ACCESS.2017.2685629
   Skelton M, 2016, BREAK APART MONOLITH
   Sokhan B, 2016, DOMAIN DRIVEN DESIGN
   Ståhl D, 2014, J SYST SOFTWARE, V87, P48, DOI 10.1016/j.jss.2013.08.032
   Suneja S, 2017, ACM SIGPLAN NOTICES, V52, P97, DOI [10.1145/3140607.3050766, 10.1145/3050748.3050766]
   Thiele A, 2014, CONTINUOUS DELIVERY
   Vishal N, 2015, ARCHITECTING CONTINU
   Wallgren A, 2015, CONTINUOUS DELIVERY
   Wnuk K, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE WORKSHOPS (ICSAW), P129, DOI 10.1109/ICSAW.2017.68
   Woods E, 2016, IEEE SOFTWARE, V33, P20, DOI 10.1109/MS.2016.86
   Yaniv Y, 2014, CLOSING GAP DATABASE
NR 100
TC 24
Z9 27
U1 2
U2 15
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2019
VL 24
IS 3
BP 1061
EP 1108
DI 10.1007/s10664-018-9651-4
PG 48
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ID9YT
UT WOS:000472043800002
DA 2024-07-18
ER

PT J
AU Jiang, SY
   McMillan, C
   Santelices, R
AF Jiang, Siyuan
   McMillan, Collin
   Santelices, Raul
TI Do Programmers do Change Impact Analysis in Debugging?
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Change impact analysis; Program debugging; Empirical software
   engineering; Software maintenance; Programmer navigation
ID INFORMATION; CODE; COMPREHENSION; TOOLS
AB "Change Impact Analysis" is the process of determining the consequences of a modification to software. In theory, change impact analysis should be done during software maintenance, to make sure changes do not introduce new bugs. Many approaches and techniques are proposed to help programmers do change impact analysis automatically. However, it is still an open question whether and how programmers do change impact analysis. In this paper, we conducted two studies, one in-depth study and one breadth study. For the in-depth study, we recorded videos of nine professional programmers repairing two bugs for two hours. For the breadth study, we surveyed 35 professional programmers using an online system. We found that the programmers in our studies did static change impact analysis before they made changes by using IDE navigational functionalities, and they did dynamic change impact analysis after they made changes by running the programs. We also found that they did not use any change impact analysis tools.
C1 [Jiang, Siyuan; McMillan, Collin] Univ Notre Dame, Dept Comp Sci & Engn, Notre Dame, IN 46545 USA.
   [Santelices, Raul] Dell SecureWorks, Atlanta, GA 30328 USA.
C3 University of Notre Dame
RP Jiang, SY (corresponding author), Univ Notre Dame, Dept Comp Sci & Engn, Notre Dame, IN 46545 USA.
EM sjiang1@nd.edu; cmc@nd.edu
OI Jiang, Siyuan/0000-0002-0684-789X
FU ONR [N000141410037]; NSF [CCF-1452959, CNS-1510329]
FX This work is supported by the ONR N000141410037, the NSF CCF-1452959 and
   CNS-1510329 grants. Any opinions, findings, and conclusions expressed
   herein are the authors' and do not necessarily reflect those of the
   sponsors.
CR Acharya M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P746, DOI 10.1145/1985793.1985898
   ALTMANN J, 1974, BEHAVIOUR, V49, P227, DOI 10.1163/156853974X00534
   [Anonymous], SOFTWARE SYSTEMS QUA
   [Anonymous], 2012, P ACM SIGSOFT 20 INT, DOI DOI 10.1145/2393596.2393656
   [Anonymous], 2009, HDB BIOL STAT
   [Anonymous], P 6 JOINT M EUR SOFT
   [Anonymous], 2006, P 2006 INT WORKSHOP
   [Anonymous], 1980, WINTHROP COMPUTER SY
   [Anonymous], 1983, P GUIDE 48
   [Anonymous], 2008, Proceedings of the 4th International Workshop on End-user Software Engineering, DOI [DOI 10.1145/1370847.1370848, 10.1145/1370847.1370848]
   [Anonymous], IEEE INT C SOFTW MAI
   Apiwattanapong T, 2005, PROC INT CONF SOFTW, P432
   Bassil S, 2001, PROG COMPREHEN, P7, DOI 10.1109/WPC.2001.921708
   Beszedes A, 2007, CSMR 2007: 11TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P103
   Bohner S. A., 1996, SOFTWARE CHANGE IMPA
   Brandt J, 2009, CHI2009: PROCEEDINGS OF THE 27TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P1589
   Breech B, 2006, PROC IEEE INT CONF S, P55
   Briand L. C., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P475, DOI 10.1109/ICSM.1999.792645
   BROOKS R, 1983, INT J MAN MACH STUD, V18, P543, DOI 10.1016/S0020-7373(83)80031-5
   Dam H. K., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P33, DOI 10.1109/ICSM.2011.6080770
   de Souza CRB, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P241, DOI 10.1145/1368088.1368122
   Dorn B, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P703
   Eaddy M, 2008, IEEE T SOFTWARE ENG, V34, P497, DOI 10.1109/TSE.2008.36
   Gethers M, 2012, PROC INT CONF SOFTW, P430, DOI 10.1109/ICSE.2012.6227172
   Hartmann B, 2008, IEEE PERVAS COMPUT, V7, P46, DOI 10.1109/MPRV.2008.54
   Hattori L, 2008, 7TH IEEE/ACIS INTERNATIONAL CONFERENCE ON COMPUTER AND INFORMATION SCIENCE IN CONJUNCTION WITH 2ND IEEE/ACIS INTERNATIONAL WORKSHOP ON E-ACTIVITY, PROCEEDINGS, P513, DOI 10.1109/ICIS.2008.104
   Kagdi H, 2013, EMPIR SOFTW ENG, V18, P933, DOI 10.1007/s10664-012-9233-9
   Kienle HM, 2007, 4TH IEEE INTERNATIONAL WORKSHOP ON VISUALIZING SOFTWARE FOR UNDERSTANDING AND ANALYSIS, PROCEEDINGS, P2, DOI 10.1109/VISSOF.2007.4290693
   Ko AJ, 2006, IEEE T SOFTWARE ENG, V32, P971, DOI 10.1109/TSE.2006.116
   LAKHOTIA A, 1993, J SYST SOFTWARE, V23, P269, DOI 10.1016/0164-1212(93)90101-3
   LaToza Thomas D., 2010, P 32 ACM IEEE INT C, P185, DOI DOI 10.1145/1806799.1806829
   Law J, 2003, PROC INT CONF SOFTW, P308, DOI 10.1109/ICSE.2003.1201210
   Lawrance J, 2013, IEEE T SOFTWARE ENG, V39, P197, DOI 10.1109/TSE.2010.111
   Lehnert S., 2011, PROC 12 INT WORKSHOP, P41, DOI DOI 10.1145/2024445.2024454
   Li BX, 2013, SOFTW TEST VERIF REL, V23, P613, DOI 10.1002/stvr.1475
   McIntosh S, 2014, PROC IEEE INT CONF S, P241, DOI 10.1109/ICSME.2014.46
   McMillan C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P111, DOI 10.1145/1985793.1985809
   Orso A., 2003, Software Engineering Notes, V28, P128, DOI 10.1145/949952.940089
   Paranjape MakarandR., 2010, Introduction to Sarojini Naidu: Selected Poetry and Prose, by Naidu, P1
   Petrenko M, 2009, INT C PROGRAM COMPRE, P10, DOI 10.1109/ICPC.2009.5090023
   Poshyvanyk D, 2009, EMPIR SOFTW ENG, V14, P5, DOI 10.1007/s10664-008-9088-2
   Ren XX, 2004, ACM SIGPLAN NOTICES, V39, P432, DOI 10.1145/1035292.1029012
   Robillard MP, 2004, IEEE T SOFTWARE ENG, V30, P889, DOI 10.1109/TSE.2004.101
   Roehm T, 2012, PROC INT CONF SOFTW, P255, DOI 10.1109/ICSE.2012.6227188
   Rovegård P, 2008, IEEE T SOFTWARE ENG, V34, P516, DOI 10.1109/TSE.2008.32
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Rungta N, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P109, DOI 10.1109/ICSM.2012.6405261
   Sillito J, 2008, IEEE T SOFTWARE ENG, V34, P434, DOI 10.1109/TSE.2008.26
   Storey MAD, 1997, PROCEEDINGS OF THE FOURTH WORKING CONFERENCE ON REVERSE ENGINEERING, P12, DOI 10.1109/WCRE.1997.624572
   Storey MA, 2006, SOFTWARE QUAL J, V14, P187, DOI 10.1007/s11219-006-9216-4
   Wilkerson JW, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P625, DOI 10.1109/ICSM.2012.6405338
   Ye X, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P689, DOI 10.1145/2635868.2635874
   Yongzheng Wu, 2010, 2010 32nd International Conference on Software Engineering (ICSE), P89, DOI 10.1145/1810295.1810309
   Zeller A, 2009, WHY PROGRAMS FAIL: A GUIDE TO SYSTEMATIC DEBUGGING, 2ND EDITION
   Zimmermann T, 2005, IEEE T SOFTWARE ENG, V31, P429, DOI 10.1109/TSE.2005.72
NR 55
TC 22
Z9 26
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2017
VL 22
IS 2
BP 631
EP 669
DI 10.1007/s10664-016-9441-9
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ES9PL
UT WOS:000399891400002
DA 2024-07-18
ER

PT J
AU Cinnéide, MO
   Moghadam, IH
   Harman, M
   Counsell, S
   Tratt, L
AF Cinneide, Mel O.
   Moghadam, Iman Hemati
   Harman, Mark
   Counsell, Steve
   Tratt, Laurence
TI An experimental search-based approach to cohesion metric evaluation
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Refactoring; Software metrics; Empirical studies
AB In spite of several decades of software metrics research and practice, there is little understanding of how software metrics relate to one another, nor is there any established methodology for comparing them. We propose a novel experimental technique, based on search-based refactoring, to 'animate' metrics and observe their behaviour in a practical setting. Our aim is to promote metrics to the level of active, opinionated objects that can be compared experimentally to uncover where they conflict, and to understand better the underlying cause of the conflict. Our experimental approaches include semi-random refactoring, refactoring for increased metric agreement/disagreement, refactoring to increase/decrease the gap between a pair of metrics, and targeted hypothesis testing. We apply our approach to five popular cohesion metrics using ten real-world Java systems, involving 330,000 lines of code and the application of over 78,000 refactorings. Our results demonstrate that cohesion metrics disagree with each other in a remarkable 55 % of cases, that Low-level Similarity-based Class Cohesion (LSCC) is the best representative of the set of metrics we investigate while Sensitive Class Cohesion (SCOM) is the least representative, and we discover several hitherto unknown differences between the examined metrics. We also use our approach to investigate the impact of including inheritance in a cohesion metric definition and find that doing so dramatically changes the metric.
C1 [Cinneide, Mel O.] Univ Coll Dublin, Sch Comp Sci, Dublin, Ireland.
   [Moghadam, Iman Hemati; Harman, Mark] UCL, Dept Comp Sci, London, England.
   [Counsell, Steve] Brunel Univ, Dept Comp Sci, London, England.
   [Tratt, Laurence] Kings Coll London, Dept Informat, London, England.
C3 University College Dublin; University of London; University College
   London; Brunel University; University of London; King's College London
RP Cinnéide, MO (corresponding author), Univ Coll Dublin, Sch Comp Sci, Dublin, Ireland.
EM mel.ocinneide@ucd.ie; i.moghadam@ucl.ac.uk; mark.harman@ucl.ac.uk;
   Steve.Counsell@brunel.ac.uk; laurie@tratt.net
RI Ó Cinnéide, Mel/GQP-1737-2022; Tratt, Laurence/A-8594-2013; Moghadam,
   Iman Hemati/AAY-1374-2021
OI Hemati Moghadam, Iman/0000-0002-5478-9858
FU Engineering and Physical Sciences Research Council of the UK (EPSRC)
   [EP/E055141/1, EP/J017515/1]; Science Foundation Ireland (SFI)
   [10/CE/I1855]; EPSRC [EP/J017515/1, EP/L02344X/1] Funding Source: UKRI
FX This work was supported, in part, by grants from the Engineering and
   Physical Sciences Research Council of the UK (EPSRC) - Grant references:
   EP/E055141/1 and EP/J017515/1, and by Science Foundation Ireland (SFI)
   grant 10/CE/I1855 to Lero - the Irish Software Engineering Research
   Centre.
CR Al Dallal J, 2013, SOFTWARE PRACT EXPER, V43, P685, DOI 10.1002/spe.2127
   Al Dallal J, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2089116.2089118
   Al Dallal J, 2010, INFORM SOFTWARE TECH, V52, P1346, DOI 10.1016/j.infsof.2010.08.006
   Al Dallal J, 2010, ELE COM ENG, P73
   Allen E.B., 2001, Proceedings Seventh International Software Metrics Symposium, IEEE, P124
   Alshayeb M, 2009, PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON COMPUTING, ENGINEERING AND INFORMATION, P3, DOI 10.1109/ICC.2009.12
   Alshayeb M, 2009, INFORM SOFTWARE TECH, V51, P1319, DOI 10.1016/j.infsof.2009.04.002
   [Anonymous], 1978, SIGMETRICS PERFORM E, DOI DOI 10.1145/1007775.811113
   [Anonymous], 1995, FDN SOFTWARE MEASURE
   [Anonymous], THESIS
   Bansiya J, 1999, J OBJECT-ORIENT PROG, V11, P47
   Beck F., 2011, P 19 ACM SIGSOFT S 1, P354
   Bieman J. M., 1995, SIGSOFT Software Engineering Notes, P259, DOI 10.1145/223427.211856
   BIEMAN JM, 1994, IEEE T SOFTWARE ENG, V20, P644, DOI 10.1109/32.310673
   Bonja C., 2006, ACM SE 44 P 44 ANN S, P91
   Bouwers E, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P921, DOI 10.1109/ICSE.2013.6606641
   Briand L., 1996, Empirical Software Engineering, V1, P61, DOI 10.1007/BF00125812
   Briand L. C., 1998, Empirical Software Engineering, V3, P65, DOI 10.1023/A:1009783721306
   Chaparro O, 2014, PROC IEEE INT CONF S, P456, DOI 10.1109/ICSME.2014.73
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Cinneide M. O., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P437, DOI 10.1109/ICSTW.2011.23
   Cinnéide MO, 2012, INT SYMP EMP SOFTWAR, P49, DOI 10.1145/2372251.2372260
   Cooper KD, 1999, ACM SIGPLAN NOTICES, V34, P1, DOI 10.1145/315253.314414
   Counsell S, 2005, FIFTH IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P161, DOI 10.1109/SCAM.2005.19
   Counsell S, 2006, ACM T SOFTW ENG METH, V15, P123, DOI 10.1145/1131421.1131422
   de Oliveira Barros Marcio, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P275, DOI 10.1007/978-3-642-39742-4_24
   Fatiregun D, 2005, WCRE: 12TH WORKING CONFERENCE ON REVERSE ENGINEERING 2005, PROCEEDINGS, P3
   Fatiregun D, 2004, FOURTH IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P65
   FENTON N, 1994, IEEE T SOFTWARE ENG, V20, P199, DOI 10.1109/32.268921
   Fenton N., 2000, INT C SOFTWARE ENG, P357, DOI DOI 10.1145/336512.336588
   Fenton Norman E., 1996, Software Metrics A Practical and Rigorous Approach, V2nd
   Fernandez L., 2006, INF THEOR APPL, V13, P82
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Ghaith Shadi, 2012, Search Based Software Engineering. Proceedings of the 4th International Symposium (SSBSE 2012), P121, DOI 10.1007/978-3-642-33119-0_10
   Ghannem Adnane, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P96, DOI 10.1007/978-3-642-39742-4_9
   Gligoric M, 2013, LECT NOTES COMPUT SC, V7920, P629, DOI 10.1007/978-3-642-39038-8_26
   Gutzmann T, 2013, RECODER FRAMEWORK JA
   Harman M, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P58, DOI 10.1109/METRIC.2004.1357891
   Harman M., 1995, P 8 INT QUAL WEEK SA, P1
   Harman M, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1106
   Hitz M, 1996, IEEE T SOFTWARE ENG, V22, P267, DOI 10.1109/32.491650
   Jensen und A.C., 2010, Proceedings of the 12th Annual Conference on Genetic and Evolutionary Computation. GECCO '10, P1341
   Joshi P, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P319, DOI 10.1109/QUATIC.2010.63
   Kaur Kuljit, 2010, Journal of Software Engineering and Applications, V3, P384, DOI 10.4236/jsea.2010.34043
   Kemerer C. F., 1995, Annals of Software Engineering, V1, P1, DOI 10.1007/BF02249043
   Kilic H, 2011, LECT NOTES COMPUT SC, V6956, P271, DOI 10.1007/978-3-642-23716-4_26
   Kitchenham B, 2010, J SYST SOFTWARE, V83, P37, DOI 10.1016/j.jss.2009.06.041
   LAKHOTIA A, 1993, PROC INT CONF SOFTW, P35, DOI 10.1109/ICSE.1993.346057
   Liu YX, 2009, PROC IEEE INT CONF S, P233, DOI 10.1109/ICSM.2009.5306318
   Mahouachi Rim, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P126, DOI 10.1007/978-3-642-39742-4_11
   Marcus A, 2008, IEEE T SOFTWARE ENG, V34, P287, DOI 10.1109/TSE.2007.70768
   Meneely A, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2377656.2377661
   Meyers TM, 2007, ACM T SOFTW ENG METH, V17, DOI 10.1145/1314493.1314495
   Mkaouer M. W., 2014, P 29 ACM IEEE INT C, P331, DOI [DOI 10.1145/2642937.2642965, 10.1145/2642937.2642965. u r l, DOI 10.1145/2642937.2642965.URL]
   Moghadam IH, 2015, E-INFORMATICA, V9, P37, DOI 10.5277/e-Inf150103
   Moghadam IH, 2012, EUR CON SFTWR MTNCE, P43, DOI 10.1109/CSMR.2012.15
   Moghadam Iman Hemati., 2011, Proceeding of the 4th workshop on Refactoring tools - WRT'11, page, P41
   Nisbet A, 1998, LECT NOTES COMPUT SC, V1401, P987, DOI 10.1007/BFb0037253
   O'Keeffe M., 2003, PPPJ 03, P59, DOI [10.1145/957289.957308, DOI 10.1145/957289.957308]
   O'Keeffe M, 2008, J SOFTW MAINT EVOL-R, V20, P345, DOI 10.1002/smr.378
   O'Keeffe M, 2008, J SYST SOFTWARE, V81, P502, DOI 10.1016/j.jss.2007.06.003
   O'Keeffe M, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P247
   Otero FEB, 2010, P 2 INT C SEARCH BAS
   Ouni A, 2013, GECCO'13: PROCEEDINGS OF THE 2013 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1461
   Ouni A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P347, DOI 10.1109/ICSM.2012.6405292
   Ouni A, 2013, AUTOMAT SOFTW ENG, V20, P47, DOI 10.1007/s10515-011-0098-8
   Sahraoui HA, 2000, PROC IEEE INT CONF S, P154, DOI 10.1109/ICSM.2000.883034
   Schäfer M, 2012, IEEE T SOFTWARE ENG, V38, P1233, DOI 10.1109/TSE.2012.13
   Seng O, 2006, GECCO 2006: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1909
   Simons Chris, 2015, Search-Based Software Engineering. 7th International Symposium, SSBSE 2015. Proceedings: LNCS 9275, P47, DOI 10.1007/978-3-319-22183-0_4
   Stuckman Jeffrey, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P259, DOI 10.1109/ESEM.2013.38
   Succi G, 2005, EMPIR SOFTW ENG, V10, P81, DOI 10.1023/B:EMSE.0000048324.12188.a2
   Tsantalis N, 2011, EUR CON SFTWR MTNCE, P25, DOI 10.1109/CSMR.2011.7
   Ujházi B, 2010, IEEE INT WORK C SO, P33, DOI 10.1109/SCAM.2010.14
   Veerappa V, 2013, EMPIRICAL VALIDATION
   WEYUKER EJ, 1988, IEEE T SOFTWARE ENG, V14, P1357, DOI 10.1109/32.6178
   Wohlin C., 2012, Experimentation in Software Engineering
NR 78
TC 12
Z9 14
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2017
VL 22
IS 1
BP 292
EP 329
DI 10.1007/s10664-016-9427-7
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EI3GS
UT WOS:000392378400008
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Bettenburg, N
   Hassan, AE
   Adams, B
   German, DM
AF Bettenburg, Nicolas
   Hassan, Ahmed E.
   Adams, Bram
   German, Daniel M.
TI Management of community contributions
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software management; Software process; Measurement; Contribution
   management; Open source software; Best practices
AB In recent years, many companies have realized that collaboration with a thriving user or developer community is a major factor in creating innovative technology driven by market demand. As a result, businesses have sought ways to stimulate contributions from developers outside their corporate walls, and integrate external developers into their development process. To support software companies in this process, this paper presents an empirical study on the contribution management processes of two major, successful, open source software ecosystems. We contrast a for-profit (ANDROID) system having a hybrid contribution style, with a not-for-profit (LINUX kernel) system having an open contribution style. To guide our comparisons, we base our analysis on a conceptual model of contribution management that we derived from a total of seven major open-source software systems. A quantitative comparison based on data mined from the ANDROID code review system and the LINUX kernel code review mailing lists shows that both projects have significantly different contribution management styles, suited to their respective market goals, but with individual advantages and disadvantages that are important for practitioners. Contribution management is a real-world problem that has received very little attention from the research community so far. Both studied systems (LINUX and ANDROID) employ different strategies and techniques for managing contributions, and both approaches are valuable examples for practitioners. Each approach has specific advantages and disadvantages that need to be carefully evaluated by practitioners when adopting a contribution management process in practice.
C1 [Bettenburg, Nicolas; Hassan, Ahmed E.] Queens Univ, Sch Comp, Software & Anal Lab SAIL, Kingston, ON, Canada.
   [Adams, Bram] Ecole Polytech, Dept Genie Informat & Genie Logiciel, Montreal, PQ H3C 3A7, Canada.
   [German, Daniel M.] Univ Victoria, Dept Comp Sci, Victoria, BC, Canada.
C3 Queens University - Canada; Universite de Montreal; Polytechnique
   Montreal; University of Victoria
RP Bettenburg, N (corresponding author), Queens Univ, Sch Comp, Software & Anal Lab SAIL, Kingston, ON, Canada.
EM nicbet@cs.queensu.ca; ahmed@cs.queensu.ca; bram.adams@polymtl.ca;
   dmg@uvic.ca
RI Ali, Ahmed/HOF-4672-2023; Hassan, Ahmed/AAB-7241-2019; KHALIFA, AHMED
   khalifa/HKF-2246-2023
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; Adams,
   Bram/0000-0001-7213-4006
CR [Anonymous], HARVARD BUSINESS REV
   [Anonymous], 2007, CONTINUOUS INTEGRATI
   [Anonymous], 2005, 1 MONDAY
   [Anonymous], P 2010 PORTL INT C M
   [Anonymous], STAT SERIES
   [Anonymous], 2008, Proceedings of the 2008 international working conference on Mining software repositories
   Asundi J., 2007, Proceedings of the 40th Annual Hawaii International Conference on System Sciences, p166c
   BASS FM, 1969, MANAGE SCI, V15, P215, DOI 10.1287/mnsc.15.5.215
   Bettenburg N., 2008, P 2008 INT WORKING C, P27
   Bettenburg N, 2009, PROC IEEE INT CONF S, P539, DOI 10.1109/ICSM.2009.5306383
   Bird C., 2007, MSR 07, P6, DOI DOI 10.1109/MSR.2007.23
   Bird C., 2007, 4 INT WORKSHOP MININ, P26
   Bird C, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P1, DOI 10.1109/MSR.2009.5069475
   Burt R. S., 2005, BROKERAGE CLOSURE IN
   Capiluppi A, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P317, DOI 10.1109/CSMR.2003.1192440
   CLEVELAND WS, 1988, J AM STAT ASSOC, V83, P596, DOI 10.2307/2289282
   Dobson A.J., 2002, An Introduction to Generalized Linear Models
   German DM, 2009, PROC INT CONF SOFTW, P188, DOI 10.1109/ICSE.2009.5070520
   Glaser B. G., 1967, DISCOVERY GROUNDED T, DOI 10.1515/9783111660211/html
   Hecker F, 1999, IEEE SOFTWARE, V16, P45, DOI 10.1109/52.744568
   Jiang YJ, 2013, IEEE WORK CONF MIN S, P101, DOI 10.1109/MSR.2013.6624016
   Johnson PM, 1998, COMMUN ACM, V41, P49, DOI 10.1145/269012.269020
   Krishnamurthy S., 2005, Perspectives on free and open source software, P279
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Mockus A., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P263, DOI 10.1109/ICSE.2000.870417
   Porter A., 1998, ACM Transactions on Software Engineering and Methodology, V7, P41, DOI 10.1145/268411.268421
   Raymond Eric Steven, 2001, The Cathedral and the Bazaar: Musings on Linux and Open Source by an Accidental Revolutionary
   Rigby PC, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P541
   ROSENBLATT M, 1956, ANN MATH STAT, V27, P832, DOI 10.1214/aoms/1177728190
   Strauss A., 1990, BASICS QUALITATIVE R
   von Hippel E, 2003, ORGAN SCI, V14, P209, DOI 10.1287/orsc.14.2.209.14992
   Wnuk K, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P89, DOI 10.1109/RE.2009.32
   Yin R.K., 2014, Applications of case study research, V2nd
NR 33
TC 7
Z9 11
U1 2
U2 24
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2015
VL 20
IS 1
BP 252
EP 289
DI 10.1007/s10664-013-9284-6
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AZ7EN
UT WOS:000348381800008
DA 2024-07-18
ER

PT J
AU Jbara, A
   Matan, A
   Feitelson, DG
AF Jbara, Ahmad
   Matan, Adam
   Feitelson, Dror G.
TI High-MCC Functions in the Linux Kernel
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software complexity; McCabe cyclomatic complexity; Linux kernel;
   Perceived complexity; Code regularity
ID SOFTWARE; COMPLEXITY; METRICS; VALIDATION; EVOLUTION; CRITIQUE
AB McCabe's Cyclomatic Complexity (MCC) is a widely used metric for the complexity of control flow. Common usage decrees that functions should not have an MCC above 50, and preferably much less. However, the Linux kernel includes more than 800 functions with MCC values above 50, and over the years 369 functions have had an MCC of 100 or more. Moreover, some of these functions undergo extensive evolution, indicating that developers are successful in coping with the supposed high complexity. Functions with similarly high MCC values also occur in other operating systems and domains, including Windows. For example, the highest MCC value in FreeBSD is 1316, double the highest MCC in Linux. We attempt to explain all this by analyzing the structure of high-MCC functions in Linux and showing that in many cases they are in fact well-structured (albeit we observe some cases where developers indeed refactor the code in order to reduce complexity). Moreover, human opinions do not correlate with the MCC values of these functions. A survey of perceived complexity shows that there are cases where high MCC functions were ranked as having a low complexity. We characterize these cases and identify specific code attributes such as the diversity of constructs (not only a switch but also ifs) and nesting that correlate with discrete increases in perceived complexity. These observations indicate that a high MCC is not necessarily an impediment to code comprehension, and support the notion that complexity cannot be fully captured using simple syntactic code metrics. In particular, we show that regularity in the code (meaning repetitions of the same pattern of control structures) correlates with low perceived complexity.
C1 [Jbara, Ahmad; Matan, Adam; Feitelson, Dror G.] Hebrew Univ Jerusalem, Sch Comp Sci & Engn, IL-91904 Jerusalem, Israel.
   [Jbara, Ahmad] Netanya Acad Coll, Sch Math & Comp Sci, IL-42100 Netanya, Israel.
C3 Hebrew University of Jerusalem
RP Jbara, A (corresponding author), Hebrew Univ Jerusalem, Sch Comp Sci & Engn, IL-91904 Jerusalem, Israel.
EM ahmadjbara@cs.huji.ac.il; feit@cs.huji.ac.il
OI Jbara, Ahmad/0000-0002-6642-6499
CR Adams B, 2009, AOSD'09: 8TH INTERNATIONAL CONFERENCE ON ASPECT-ORIENTED SOFTWARE DEVELOPMENT, P243
   [Anonymous], 2008, AV EXC COMPL
   [Anonymous], 2011, MAKING SOFTWARE WHAT
   Baggen R, 2012, SOFTWARE QUAL J, V20, P287, DOI 10.1007/s11219-011-9144-9
   Ball T, 2000, COMPUTER, V33, P57, DOI 10.1109/2.869371
   Binkley AB, 1998, PROC INT CONF SOFTW, P452, DOI 10.1109/ICSE.1998.671604
   Capiluppi A, 2013, EMPIR SOFTW ENG, V18, P60, DOI 10.1007/s10664-011-9191-7
   Curtis B., 1979, Proceedings of the 4th International Conference on Software Engineering, P356
   Curtis B, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P711, DOI 10.1145/1985793.1985893
   Denaro G, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P241, DOI 10.1109/ICSE.2002.1007972
   DIJKSTRA EW, 1968, COMMUN ACM, V11, P147, DOI 10.1145/362929.362947
   Etsion Y, 2006, ACM T MULTIM COMPUT, V2, P318, DOI 10.1145/1201730.1201734
   Foreman J, 1997, CMUSEI97HB001
   HARRISON W, 1982, COMPUTER, V15, P65, DOI 10.1109/MC.1982.1654138
   Heitlager I, 2007, QUATIC 2007: 6TH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, PROCEEDINGS, P30, DOI 10.1109/QUATIC.2007.8
   Hindle A, 2008, INT C PROGRAM COMPRE, P133, DOI 10.1109/ICPC.2008.13
   Israeli A, 2010, J SYST SOFTWARE, V83, P485, DOI 10.1016/j.jss.2009.09.042
   Jbara A., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P83
   Jbara A, 2013, 13 IEEE INT WORK C S
   JONES C, 1994, COMPUTER, V27, P98, DOI 10.1109/2.312055
   Koziolek Heiko, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P279, DOI 10.1109/ISSRE.2010.15
   LANNING DL, 1994, COMPUTER, V27, P35, DOI 10.1109/2.312036
   Lehman MM, 2003, INFORM PROCESS LETT, V88, P33, DOI 10.1016/S0020-0190(03)00382-X
   Liebig Jorg, 2010, P 32 ACM IEEE INT C, V1, P105
   McCabe Software, 2009, METR THRESH MCCABE I
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Mens T, 2008, PROC IEEE INT CONF S, P386, DOI 10.1109/ICSM.2008.4658087
   Myers G. J., 1977, SIGPLAN Notices, V12, P61, DOI 10.1145/954627.954633
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Ohlsson N, 1996, IEEE T SOFTWARE ENG, V22, P886, DOI 10.1109/32.553637
   Olague HM, 2007, IEEE T SOFTWARE ENG, V33, P402, DOI 10.1109/TSE.2007.1015.
   OMAN P, 1994, J SYST SOFTWARE, V24, P251, DOI 10.1016/0164-1212(94)90067-1
   Sauer F, 2005, ECLIPSE METRICS PLUG
   Schneidewind Norm, 2009, 2009 20th International Symposium on Software Reliability Engineering (ISSRE 2009), P1, DOI 10.1109/ISSRE.2009.10
   SHEPPERD M, 1994, J SYST SOFTWARE, V26, P197, DOI 10.1016/0164-1212(94)90011-6
   SHEPPERD M, 1988, SOFTWARE ENG J, V3, P30, DOI 10.1049/sej.1988.0003
   Soetens QD, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P313, DOI 10.1109/QUATIC.2010.58
   SOLOWAY E, 1984, IEEE T SOFTWARE ENG, V10, P595, DOI 10.1109/TSE.1984.5010283
   Stamelos I, 2002, INFORM SYST J, V12, P43, DOI 10.1046/j.1365-2575.2002.00117.x
   STARK G, 1994, COMPUTER, V27, P42, DOI 10.1109/2.312037
   Vasa R, 2009, PROC IEEE INT CONF S, P179, DOI 10.1109/ICSM.2009.5306322
   WEYUKER EJ, 1988, IEEE T SOFTWARE ENG, V14, P1357, DOI 10.1109/32.6178
   ZIV J, 1978, IEEE T INFORM THEORY, V24, P530, DOI 10.1109/TIT.1978.1055934
NR 43
TC 12
Z9 13
U1 0
U2 9
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2014
VL 19
IS 5
BP 1261
EP 1298
DI 10.1007/s10664-013-9275-7
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AP9VT
UT WOS:000342429900005
DA 2024-07-18
ER

PT J
AU McIntosh, S
   Adams, B
   Hassan, AE
AF McIntosh, Shane
   Adams, Bram
   Hassan, Ahmed E.
TI The evolution of Java build systems
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Build systems; Software evolution; ANT; Maven; Software complexity
ID SOFTWARE; PROGRAM; CODE
AB Build systems are responsible for transforming static source code artifacts into executable software. While build systems play such a crucial role in software development and maintenance, they have been largely ignored by software evolution researchers. However, a firm understanding of build system aging processes is needed in order to allow project managers to allocate personnel and resources to build system maintenance tasks effectively, and reduce the build maintenance overhead on regular development activities. In this paper, we study the evolution of build systems based on two popular Java build languages (i.e., ANT and Maven) from two perspectives: (1) a static perspective, where we examine the complexity of build system specifications using software metrics adopted from the source code domain; and (2) a dynamic perspective, where the complexity and coverage of representative build runs are measured. Case studies of the build systems of six open source build projects with a combined history of 172 releases show that build system and source code size are highly correlated, with source code restructurings often requiring build system restructurings. Furthermore, we find that Java build systems evolve dynamically in terms of duration and recursive depth of the directory hierarchy.
C1 [McIntosh, Shane; Adams, Bram; Hassan, Ahmed E.] Queens Univ, SAIL, Kingston, ON, Canada.
C3 Queens University - Canada
RP McIntosh, S (corresponding author), Queens Univ, SAIL, Kingston, ON, Canada.
EM mcintosh@cs.queensu.ca; bram@cs.queensu.ca; ahmed@cs.queensu.ca
RI KHALIFA, AHMED khalifa/HKF-2246-2023; Hassan, Ahmed/AAB-7241-2019; Ali,
   Ahmed/HOF-4672-2023
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; Adams,
   Bram/0000-0001-7213-4006
CR Abreu R, 2009, IWPSE-EVOL 09: ERCIM WORKSHOP ON SOFTWARE EVOLUTION (EVOL) AND INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION (IWPSE), P153
   Adams B, 2008, ELECT COMMUN ECEASST, V8
   Adams B, 2007, PROC IEEE INT CONF S, P214
   [Anonymous], 1976, ICSE 76
   Antoniol G, 2005, PROC IEEE INT CONF S, P357
   Apache Foundation, 2010, AP MAV
   Apache Foundation, 2010, MEV MIGR GUID
   Apache Foundation, 2010, AP ANT MAN
   Apache Foundation, 2011, MAV BUILD LIF
   BELADY LA, 1976, IBM SYST J, V15, P225, DOI 10.1147/sj.153.0225
   Berger T, 2010, P 25 INT C AUT SOFTW
   de Jonge M, 2005, IEEE T SOFTWARE ENG, V31, P588, DOI 10.1109/TSE.2005.77
   Dmitriev M., 2002, P 17 C OBJ OR PROGR
   Ebersole S, 2007, MAVEN MIGRATION
   FELDMAN SI, 1979, SOFTWARE PRACT EXPER, V9, P255, DOI 10.1002/spe.4380090402
   Godfrey MW, 2000, PROC IEEE INT CONF S, P131, DOI 10.1109/ICSM.2000.883030
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Halstead M.H., 1977, OPERATING PROGRAMMIN
   Knight S., 2002, 10 INT PYTH C
   Kumfert G., 2002, "Software in the doe: The hidden overhead of "the build","
   Lehman M. M., 1980, Journal of Systems and Software, V1, P213, DOI 10.1016/0164-1212(79)90022-0
   LEHMAN MM, 1997, P 4 INT SOFTW METR S
   McIntosh S., 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P42, DOI 10.1109/MSR.2010.5463341
   McIntosh S., 2011, P 33 INT C SOFTW ENG
   McIntosh S, 2010, ANT MAVEN BUILD LOGS, P42
   Miller P, 1998, AUUGN Journal of AUUG Inc, V19, P14
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Neagu A, 2010, WHAT IS WRONG MAKE
   Neundorf A, 2010, WHY KDE PROJECT SWIT
   Neville-Neil GV, 2009, COMMUN ACM, V52, P25, DOI 10.1145/1498765.1498777
   Robles G, 2005, EIGHTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P165, DOI 10.1109/IWPSE.2005.17
   Robles G, 2006, J SYST SOFTWARE, V79, P1233, DOI 10.1016/j.jss.2006.02.048
   TU Q, 2002, P INT C SOFTW MAINT, P398
   Weirich J, 2011, RAKE RUBY MAKE
   Wheeler DA, 2011, SLOCCOUNT
   Zadok E, 2002, USENIX ASSOCIATION PROCEEDINGS OF THE FREENIX TRACK, P287
NR 36
TC 36
Z9 43
U1 1
U2 14
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2012
VL 17
IS 4-5
BP 578
EP 608
DI 10.1007/s10664-011-9169-5
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 943WF
UT WOS:000304155700009
DA 2024-07-18
ER

PT J
AU Shin, Y
   Bell, RM
   Ostrand, TJ
   Weyuker, EJ
AF Shin, Yonghee
   Bell, Robert M.
   Ostrand, Thomas J.
   Weyuker, Elaine J.
TI On the use of calling structure information to improve fault prediction
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software faults; Negative binomial model; Empirical study; Calling
   structure attributes
ID ORIENTED DESIGN METRICS; QUANTITATIVE-ANALYSIS; SOFTWARE; NUMBER
AB Previous studies have shown that software code attributes, such as lines of source code, and history information, such as the number of code changes and the number of faults in prior releases of software, are useful for predicting where faults will occur. In this study of two large industrial software systems, we investigate the effectiveness of adding information about calling structure to fault prediction models. Adding calling structure information to a model based solely on non-calling structure code attributes modestly improved prediction accuracy. However, the addition of calling structure information to a model that included both history and non-calling structure code attributes produced no improvement.
C1 [Shin, Yonghee] N Carolina State Univ, Raleigh, NC 27695 USA.
   [Bell, Robert M.; Ostrand, Thomas J.; Weyuker, Elaine J.] AT&T Labs Res, Florham Pk, NJ 07932 USA.
C3 North Carolina State University; AT&T
RP Shin, Y (corresponding author), N Carolina State Univ, Raleigh, NC 27695 USA.
EM yonghee.shin@ncsu.edu; rbell@research.att.com; ostrand@research.att.com;
   weyuker@research.att.com
FU National Science Foundation [0716176]; CAREER [0346903]; Division Of
   Computer and Network Systems; Direct For Computer & Info Scie & Enginr
   [0716176] Funding Source: National Science Foundation; Division of
   Computing and Communication Foundations; Direct For Computer & Info Scie
   & Enginr [0346903] Funding Source: National Science Foundation
FX This work is supported in part by the National Science Foundation Grant
   No. 0716176 and the CAREER Grant No. 0346903. Any opinions expressed in
   this material are those of the authors and do not necessarily reflect
   the views of the National Science Foundation. The comments by several
   reviewers helped us greatly to clarify and strengthen the results
   reported in the paper.
CR Andersson C, 2007, IEEE T SOFTWARE ENG, V33, P273, DOI 10.1109/TSE.2007.1005
   [Anonymous], FAQ WHAT AR PSEUD R
   [Anonymous], INT WORKSH PRED MOD
   [Anonymous], 2002, 7007011 RTI NAT I ST
   Arisholm E., 2006, ISESE 06 P 2006 ACMI, P8
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   BASILI VR, 1984, COMMUN ACM, V27, P42, DOI 10.1145/69605.2085
   Boehm BW., 1981, Software Engineering Economics
   Briand L. C., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P345, DOI 10.1109/ICSE.1999.841025
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Fenton NE, 2000, IEEE T SOFTWARE ENG, V26, P797, DOI 10.1109/32.879815
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Guyon I., 2003, Journal of Machine Learning Research, V3, P1157, DOI 10.1162/153244303322753616
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Kamiya T, 1999, 2ND IEEE INTERNATIONAL SYMPOSIUM ON OBJECT-ORIENTED REAL-TIME DISTRIBUTED COMPUTING (ISORC'99), PROCEEDINGS, P253, DOI 10.1109/ISORC.1999.776386
   Khoshgoftaar TM, 1996, IEEE SOFTWARE, V13, P65, DOI 10.1109/52.476287
   Khoshgoftaar TM, 2002, IEEE T RELIAB, V51, P455, DOI 10.1109/TR.2002.804488
   Kim S, 2007, PROC INT CONF SOFTW, P489
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Nagappan Nachiappan, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P364
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Nguyen T.N. D., 2010, Proceedings of the International Conference on Software Maintenance, P1, DOI DOI 10.1109/ICSM.2010.5609560
   Ohlsson N, 1996, IEEE T SOFTWARE ENG, V22, P886, DOI 10.1109/32.553637
   Ostrand T. J., 2002, Software Engineering Notes, V27, P55, DOI 10.1145/566171.566181
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   Pardo B., 2002, Computer Music Journal, V26, P27, DOI 10.1162/014892602760137167
   Shin Y, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P61, DOI 10.1109/MSR.2009.5069481
   STEVENS WP, 1974, IBM SYST J, V13, P115, DOI 10.1147/sj.132.0115
   Tosun Aye, 2009, P 5 INT C PRED MOD S
   van Heesch D., DOXYGEN
   Weyuker EJ, 2008, INT WORKSH DEF LARG
   Weyuker EJ, 2010, EMPIR SOFTWARE ENG, V15
   Weyuker EJ, 2008, EMPIR SOFTW ENG, V13, P539, DOI 10.1007/s10664-008-9082-8
   Weyuker Elaine J., 2008, Proceedings of the 4th International Workshop on Predictor Models in Software Engineering, PROMISE '08, P3
   Zhou YM, 2006, IEEE T SOFTWARE ENG, V32, P771, DOI 10.1109/TSE.2006.102
   Zimmermann T, 2004, 1 INT WORKSH MIN SOF
   Zimmermann T, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P531, DOI 10.1145/1368088.1368161
NR 37
TC 6
Z9 9
U1 0
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2012
VL 17
IS 4-5
BP 390
EP 423
DI 10.1007/s10664-011-9165-9
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 943WF
UT WOS:000304155700003
DA 2024-07-18
ER

PT J
AU Azzeh, M
AF Azzeh, Mohammad
TI A replicated assessment and comparison of adaptation techniques for
   analogy-based effort estimation
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Analogy-based software effort estimation; Adaptation techniques; Feature
   subset selection
ID SOFTWARE EFFORT ESTIMATION; COST ESTIMATION; PREDICTION
AB Variants of adaptation techniques have been proposed in previous studies to improve the performance of analogy-based effort estimation. The results of these studies are often contradictory and cannot simply be generalized because there are many uncontrollable source of variations between adaptation studies. The study presented in this paper has been carried out in order to replicate the assessment and comparison of different adaptation techniques utilised in analogy-based software effort prediction. Empirical evaluation of variants of adaptation techniques with Jack-knifing procedure have been carried out. Seven datasets come from PROMISE data repository were used for benchmarking. The results are also investigated within the presence/absence of feature subset selection algorithm. The current study permitted us to discover that linear adjustment approaches are more accurate than nonlinear adjustment because of the nature of the employed datasets that have, in most cases, normality characteristics.
C1 Appl Sci Univ, Dept Software Engn, Amman, Jordan.
C3 Applied Science University - Jordan
RP Azzeh, M (corresponding author), Appl Sci Univ, Dept Software Engn, POB 166, Amman, Jordan.
EM m.y.azzeh@asu.edu.jo
RI Azzeh, Mohammad/G-5472-2017
OI Azzeh, Mohammad/0000-0002-0323-6452
FU Applied Science Private University, Amman, Jordan
FX The author is grateful to the Applied Science Private University, Amman,
   Jordan, for the financial support granted to this research project.
CR ALBRECHT AJ, 1983, IEEE T SOFTWARE ENG, V9, P639, DOI 10.1109/TSE.1983.235271
   Angelis L., 2000, Empirical Software Engineering, V5, P35, DOI 10.1023/A:1009897800559
   [Anonymous], 1989, ANAL STAT PRODUCTIVI
   [Anonymous], 2002, Applied Statistics for Software Managers
   Auer M, 2006, IEEE T SOFTWARE ENG, V32, P83, DOI 10.1109/TSE.2006.1599418
   Azzeh M., 2008, P 4 INT WORKSH PRED, P71, DOI DOI 10.1145/1370788.1370805
   Azzeh M, 2010, EMPIR SOFTW ENG, V15, P60, DOI 10.1007/s10664-009-9113-0
   Boehm BW., 1981, Software Engineering Economics
   Boetticher G., 2010, PROMISE REPOSITORY E
   Briand L. C., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P313, DOI 10.1109/ICSE.1999.841022
   CHEN Z, 2005, ACM SIGSOFT SOFTWARE, V30, P1
   Chiu NH, 2007, J SYST SOFTWARE, V80, P628, DOI 10.1016/j.jss.2006.06.006
   Foss T, 2003, IEEE T SOFTWARE ENG, V29, P985, DOI 10.1109/TSE.2003.1245300
   IDRI A, 2001, 11 INT WORKSH SOFTW, P93
   *ISBSG, 2007, INT SOFTW BENCHM STA
   Jeffery R, 2000, SEVENTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 2001, PROCEEDINGS, P16, DOI 10.1109/METRIC.2001.915512
   Jorgensen M, 2003, J SYST SOFTWARE, V68, P253, DOI 10.1016/S0164-1212(03)00066-9
   KEMERER CF, 1987, COMMUN ACM, V30, P416, DOI 10.1145/22899.22906
   Keung JW, 2008, IEEE T SOFTWARE ENG, V34, P471, DOI 10.1109/TSE.2008.34
   Kirsopp C, 2003, LECT NOTES ARTIF INT, V2689, P231
   Kocaguneli E, 2011, EXPLOITING ESSENTIAL
   Li JZ, 2007, EMPIR SOFTW ENG, V12, P65, DOI 10.1007/s10664-006-7552-4
   Li YF, 2009, EMPIR SOFTW ENG, V14, P603, DOI 10.1007/s10664-008-9104-6
   Mendes E, 2003, EMPIR SOFTW ENG, V8, P163, DOI 10.1023/A:1023062629183
   Mendes E, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P100, DOI 10.1109/ISESE.2003.1237969
   Menzies T, 2006, IEEE T SOFTWARE ENG, V32, P883, DOI 10.1109/TSE.2006.114
   Miller J, 2005, INFORM SOFTWARE TECH, V47, P233, DOI 10.1016/j.infsof.2004.08.005
   Myrtveit I, 2005, IEEE T SOFTWARE ENG, V31, P380, DOI 10.1109/TSE.2005.58
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   Shepperd M, 2001, IEEE T SOFTWARE ENG, V27, P1014, DOI 10.1109/32.965341
   Shepperd M., 2005, P 11 IEEE INT SOFTW, P38
   Walkerden F., 1999, Empirical Software Engineering, V4, P135, DOI 10.1023/A:1009872202035
NR 32
TC 37
Z9 37
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2012
VL 17
IS 1-2
SI SI
BP 90
EP 127
DI 10.1007/s10664-011-9176-6
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 893GG
UT WOS:000300343600007
DA 2024-07-18
ER

PT J
AU Jiang, Y
   Cukic, B
   Ma, Y
AF Jiang, Yue
   Cukic, Bojan
   Ma, Yan
TI Techniques for evaluating fault prediction models
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 3rd International Workshop on Predictor Models in Software Engineering
   (PROMISE 2007)
CY MAY, 2007
CL Minneapolis, MN
DE fault-prediction models; model evaluation; predictive models in software
   engineering; empirical studies
ID STATIC CODE ATTRIBUTES; HIGH-RISK; CLASSIFIERS; MODULES
AB Many statistical techniques have been proposed to predict fault-proneness of program modules in software engineering. Choosing the "best" candidate among many available models involves performance assessment and detailed comparison, but these comparisons are not simple due to the applicability of varying performance measures. Classifying a software module as fault-prone implies the application of some verification activities, thus adding to the development cost. Misclassifying a module as fault free carries the risk of system failure, also associated with cost implications. Methodologies for precise evaluation of fault prediction models should be at the core of empirical software engineering research, but have attracted sporadic attention. In this paper, we overview model evaluation techniques. In addition to many techniques that have been used in software engineering studies before, we introduce and discuss the merits of cost curves. Using the data from a public repository, our study demonstrates the strengths and weaknesses of performance evaluation techniques and points to a conclusion that the selection of the "best" model cannot be made without considering project cost characteristics, which are specific in each development environment.
C1 [Jiang, Yue; Cukic, Bojan] W Virginia Univ, Lane Dept Comp Sci & Elect Engn, Morgantown, WV 26506 USA.
   [Ma, Yan] W Virginia Univ, Dept Stat, Morgantown, WV 26506 USA.
C3 West Virginia University; West Virginia University
RP Cukic, B (corresponding author), W Virginia Univ, Lane Dept Comp Sci & Elect Engn, Morgantown, WV 26506 USA.
EM bojan.cukic@mail.wvu.edu
RI Cukic, Bojan/B-8287-2009
OI Cukic, Bojan/0000-0001-7130-9054
CR Adams NM, 1999, PATTERN RECOGN, V32, P1139, DOI 10.1016/S0031-3203(98)00154-X
   [Anonymous], P WORKSH ROC AN MACH
   ARISHOLM E, 2006, P 2006 ACM IEEE INT
   AZAR D, 2002, 17 IEEE INT C AUT SO
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   BOETTICHER GD, 2005, ACM SIGSOFT SOFTWARE, V30, P1
   BRAGA AC, 2006, INT C ROB STAT ICORS
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Challagulla VUB, 2005, WORDS 2005: 10TH IEEE INTERNATIONAL WORKSHOP ON OBJECT-ORIENTED REAL-TIME DEPENDABLE, PROCEEDINGS, P263, DOI 10.1109/WORDS.2005.32
   CONOVER WJ, 1999, PRACTICAL NONPARAMET
   Davis JJ., 2006, PROC INT C MACHINE L, DOI DOI 10.1145/1143844.1143874
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   Drummond C, 2006, MACH LEARN, V65, P95, DOI 10.1007/s10994-006-8199-5
   El Emam K, 2001, J SYST SOFTWARE, V55, P301, DOI 10.1016/S0164-1212(00)00079-0
   FENTON N, 1999, 2 EUR SOFTW MEAS C F, P39
   GOKHALE SS, 1997, 3 ISSAT INT C REL QU, P31
   GUO L, 2004, P 15 IEEE INT S SOFT
   Khoshgoftaar TaghiM., 2007, Quality Technology of Quantitative Manage- ment, V4, P171, DOI DOI 10.1080/16843703.2007.11673144
   Khoshgoftaar TM, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P203, DOI 10.1109/METRIC.2002.1011339
   Khoshgoftaar TM, 1997, EIGHTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P27, DOI 10.1109/ISSRE.1997.630845
   KHOSHGOFTAAR TM, 1995, J SYST SOFTWARE, V29, P85, DOI 10.1016/0164-1212(94)00130-F
   Koru AG, 2005, IEEE SOFTWARE, V22, P23, DOI 10.1109/MS.2005.149
   Kubat M, 1998, MACH LEARN, V30, P195, DOI 10.1023/A:1007452223027
   Lewis D. D., 1994, SIGIR '94. Proceedings of the Seventeenth Annual International ACM-SIGIR Conference on Research and Development in Information Retrieval, P3
   Ling C.X., 1998, P INT C KNOWLEDGE DI, P73
   MA Y, 2007, THESIS W VIRGINIA U
   Macskassy SA, 2005, P 22 INT C MACH LEAR
   MENZIES T, 2003, P 9 INT SOFTW METR S
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Ohlsson N, 1996, IEEE T SOFTWARE ENG, V22, P886, DOI 10.1109/32.553637
   Ohlsson N., 1997, Empirical Software Engineering, V2, P166, DOI 10.1023/A:1009757419320
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   SELBY RW, 1988, IEEE T SOFTWARE ENG, V14, P1743, DOI 10.1109/32.9061
   Siegel S., 1956, NONPARAMETRIC STAT B
   Vuk M, 2006, Metodoloski Zvezki, V3, P89
   Witten I. H., 2005, DATA MINING PRACTICA
   YOUDEN WJ, 1950, CANCER-AM CANCER SOC, V3, P32, DOI 10.1002/1097-0142(1950)3:1<32::AID-CNCR2820030106>3.0.CO;2-3
   Yousef W. A., 2004, Proceedings. 33rd Applied Imagery Pattern Recognition Workshop, P190
   Zhang HY, 2007, IEEE T SOFTWARE ENG, V33, P635, DOI 10.1109/TSE.2007.70706
NR 39
TC 165
Z9 177
U1 0
U2 14
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2008
VL 13
IS 5
BP 561
EP 595
DI 10.1007/s10664-008-9079-3
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 350QU
UT WOS:000259369000005
DA 2024-07-18
ER

PT J
AU Lindvall, M
   Rus, I
   Donzelli, P
   Memon, A
   Zelkowitz, M
   Betin-Can, A
   Bultan, T
   Ackermann, C
   Anders, B
   Asgari, S
   Basili, V
   Hochstein, L
   Fellmann, J
   Shull, F
   Tvedt, R
   Pech, D
   Hirschbach, D
AF Lindvall, Mikael
   Rus, Ioana
   Donzelli, Paolo
   Memon, Atif
   Zelkowitz, Marvin
   Betin-Can, Aysu
   Bultan, Tevfik
   Ackermann, Chris
   Anders, Bettina
   Asgari, Sima
   Basili, Victor
   Hochstein, Lorin
   Fellmann, Joerg
   Shull, Forrest
   Tvedt, Roseanne
   Pech, Daniel
   Hirschbach, Daniel
TI Experimenting with software testbeds for evaluating new technologies
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE empirical study; technology evaluation; software testbed
ID DEPENDABILITY
AB The evolution of a new technology depends upon a good theoretical basis for developing the technology, as well as upon its experimental validation. In order to provide for this experimentation, we have investigated the creation of a software testbed and the feasibility of using the same testbed for experimenting with a broad set of technologies. The testbed is a set of programs, data, and supporting documentation that allows researchers to test their new technology on a standard software platform. An important component of this testbed is the Unified Model of Dependability (UMD), which was used to elicit dependability requirements for the testbed software. With a collection of seeded faults and known issues of the target system, we are able to determine if a new technology is adept at uncovering defects or providing other aids proposed by its developers. In this paper, we present the Tactical Separation Assisted Flight Environment (TSAFE) testbed environment for which we modeled and evaluated dependability requirements and defined faults to be seeded for experimentation. We describe two completed experiments that we conducted on the testbed. The first experiment studies a technology that identifies architectural violations and evaluates its ability to detect the violations. The second experiment studies model checking as part of design for verification. We conclude by describing ongoing experimental work studying testing, using the same testbed. Our conclusion is that even though these three experiments are very different in terms of the studied technology, using and re-using the same testbed is beneficial and cost effective.
C1 Univ Calif Santa Barbara, Santa Barbara, CA 93106 USA.
   Middle E Tech Univ, Inst Informat, TR-06531 Ankara, Turkey.
   Univ Nebraska, Dept Comp Sci & Engn, Lincoln, NE 68588 USA.
C3 University of California System; University of California Santa Barbara;
   Middle East Technical University; University of Nebraska System;
   University of Nebraska Lincoln
RP Lindvall, M (corresponding author), Univ Calif Santa Barbara, Santa Barbara, CA 93106 USA.
EM mlindvall@fc-md.umd.edu; irus@computer.org; p.donzelli@governo.it;
   atif@cs.umd.edu; mvz@cs.umd.edu; aysu@ii.metu.edu.tr; bultan@ucsb.edu;
   cackermann@fc-md.umd.edu; banders@fc-md.umd.edu; sima@cs.umd.edu;
   basili@cs.umd.edu; lorinh@gmail.com; joerg.fell@gmail.com;
   fshull@fc-md.umd.edu; rtvedt@panorange.com;
   Daniel.Pech@iese.fraunhofer.de; DanielHirschbach@gmx.net
RI Betin Can, Aysu/HTN-8580-2023; Shull, Forrest/GZK-6750-2022
OI Betin Can, Aysu/0000-0002-4828-0190; 
CR [Anonymous], 1995, MYTHICAL MAN MONTH
   ASGARI S, 2004, ICSE DSN 2004 TWIN W
   Basili V, 2004, IEEE SOFTWARE, V21, P19, DOI 10.1109/MS.2004.30
   Betin-Can A., 2005, PROC 20 IEEEACM INT, P14
   Bhansali S., 1992, Proceedings of the Seventh Knowledge-Based Software Engineering Conference (Cat. No.92TH0480-4), P100, DOI 10.1109/KBSE.1992.252904
   BOEHM B, 2003, NATURE INFORM SYSTEM
   BRAT G, 2000, P WORKSH ADV VER JUL
   BULTAN T, 2001, P 16 IEEE INT C AUT, P282
   Dennis G, 2003, THESIS MIT
   Donzelli P, 2006, J SYST SOFTWARE, V79, P107, DOI 10.1016/j.jss.2005.03.011
   Erzberger H., 2001, 4 USA EUR AIR TRAFF
   Erzberger H., 2004, TRANSFORMING NAS NEX
   GODFREY MW, 2000, P 2 S CONSTR SOFTW E
   HUYNH D, 2003, MODELING DEPENDABILI, pB6
   *INT FED INF PROC, WG104 IFIP
   LAPRICE JC, 1992, DEPENDABILITY BASIC
   Lehman M. M., 1996, Software Process Technology. 5th European Workshop, EWSPT '96 Proceedings, P108, DOI 10.1007/BFb0017737
   Lehman M. M., 1985, Program Evolution: Processes of Software Change
   LINDVALL M, 2005, NASA J INNOVATIONS S, V1, P3
   Memon A, 2005, J SOFTW MAINT EVOL-R, V17, P27, DOI 10.1002/smr.305
   Memon A, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P164, DOI 10.1109/ASE.2003.1240304
   MEMON A, 2001, 8 EUR SOFTW ENG C ES, P265
   RANDELL B, 1998, P WORKSH COMPUTER SE, P16
   RUS I, 2002, WORKSH DEP BENCHM IN, pF19
   Tvedt RT, 2002, PROC IEEE INT CONF S, P393, DOI 10.1109/ICSM.2002.1167796
   [No title captured]
NR 26
TC 8
Z9 8
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2007
VL 12
IS 4
BP 417
EP 444
DI 10.1007/s10664-006-9034-0
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 190JV
UT WOS:000248056000005
OA Green Published
DA 2024-07-18
ER

PT J
AU Hayes, JH
   Offutt, J
AF Hayes, Jane Huffman
   Offutt, Jeff
TI Input validation analysis and testing
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE specification analysis; software testing; input validation; fault-based
   analysis; fault-based testing; empirical research; syntax-based;
   interface verification; system testing; static analysis; dynamic
   testing; case study
ID AUTOMATIC-GENERATION
AB This research addresses the problem of statically analyzing input command syntax as defined in interface and requirements specifications and then generating test cases for dynamic input validation testing. The IVAT (Input Validation Analysis and Testing) technique has been developed, a proof-of-concept tool (MICASA) has been implemented, and a case study validation has been performed. Empirical validation on large-scale industrial software (from the Tomahawk Cruise Missile) shows that as compared with senior, experienced analysts and testers, MICASA found more syntactic requirement specification defects, generated test cases with higher syntactic coverage, and found additional defects. The experienced analysts found more semantic defects than MICASA, and the experienced testers' cases found 7.4 defects per test case as opposed to an average of 4.6 defects found by MICASA test cases. Additionally, the MICASA tool performed at less cost.
C1 Univ Kentucky, Dept Comp Sci, Lab Adv Networking, Lexington, KY 40506 USA.
   George Mason Univ, Informat & Software Engn Dept, Fairfax, VA 22030 USA.
C3 University of Kentucky; George Mason University
RP Hayes, JH (corresponding author), Univ Kentucky, Dept Comp Sci, Lab Adv Networking, Lexington, KY 40506 USA.
EM hayes@cs.uky.edu; offutt@ise.gmu.edu
CR AMMANN P, 1994, COMPASS '94 - PROCEEDINGS OF THE NINTH ANNUAL CONFERENCE ON COMPUTER ASSURANCE, P69, DOI 10.1109/CMPASS.1994.318466
   [Anonymous], 1990, Software testing techniques {
   Basili V., 1996, Proceedings of the 21st Annual Software Engineering Workshop, Software Engineering Laboratory Series, SEL-96-002, P59
   Bauer J. A., 1979, Proceedings of the 4th International Conference on Software Engineering, P425
   BAZZICHI F, 1982, IEEE T SOFTWARE ENG, V8, P343, DOI 10.1109/TSE.1982.235428
   BIRD DL, 1983, IBM SYST J, V22, P229, DOI 10.1147/sj.223.0229
   Davis A.M., 1990, SOFTWARE REQUIREMENT
   Duncan A.G., 1981, P 5 INT C SOFTW ENG, P170
   *ESPR, 1999, GRAPH EV DRIV INT SP
   GHOSH S, 1997, TR175P SERC
   GUPTA N, 2000, P INT C AUT SOFTW EN
   HANFORD KV, 1970, IBM SYST J, V9, P242, DOI 10.1147/sj.94.0242
   Hayes J. H., 1999, Proceedings 10th International Symposium on Software Reliability Engineering (Cat. No.PR00443), P199, DOI 10.1109/ISSRE.1999.809325
   Hayes JH, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P49, DOI 10.1109/ISSRE.2003.1251030
   Hayes JH, 2003, 11TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P138
   HAYES JH, 1991, P 1 INT C SOFTW QUAL, P1
   HAYES JH, 2005, P WORKSH MIN SOFTW R, P58
   HAYES JH, 1998, THESIS G MASON U FAI
   Howe AE, 1997, KNOWLEDGE-BASED SOFTWARE ENGINEERING, P77, DOI 10.1023/A:1008607721339
   *IEEE, 1999, 610121999 IEEE
   INCE DC, 1987, COMPUT J, V30, P63, DOI 10.1093/comjnl/30.1.63
   KITCHENHAM B, 1995, IEEE SOFTWARE, V12, P52, DOI 10.1109/52.391832
   KOREL B, 1990, IEEE T SOFTWARE ENG, V16, P870, DOI 10.1109/32.57624
   Lee D, 1996, P IEEE, V84, P1090, DOI 10.1109/5.533956
   Marick B., 1995, CRAFT SOFTWARE TESTI
   MAURER PM, 1990, IEEE SOFTWARE, V7, P50, DOI 10.1109/52.56422
   MEMON AM, 2001, P 8 EUR SOFTW ENG C, P256
   MILLER LA, 1995, NUREGCR6316 US NUCL, V4
   MORELL LJ, 1990, IEEE T SOFTWARE ENG, V16, P844, DOI 10.1109/32.57623
   NAKAJO T, 1989, HEWLETT-PACKARD J, V40, P50
   NAKAJO T, 1991, IEEE T SOFTWARE ENG, V17, P830, DOI 10.1109/32.83917
   OFFUTT J, 1996, P INT S SOFTW TEST A, P195
   OSTRAND TJ, 1988, COMMUN ACM, V31, P676, DOI 10.1145/62959.62964
   Payne A. J., 1978, SIGPLAN Notices, V13, P59, DOI 10.1145/953428.953435
   PERRY DE, 1985, P INT S NEW DIR COMP, P32
   Purdom P., 1972, BIT (Nordisk Tidskrift for Informationsbehandling), V12, P366, DOI 10.1007/BF01932308
   von Mayrhauser A., 1994, Proceedings. 5th International Symposium on Software Reliability Engineering (Cat. No.94TH8017), P206, DOI 10.1109/ISSRE.1994.341375
   VONMAYRHAUSER A, 1994, INTERNATIONAL TEST CONFERENCE 1994, PROCEEDINGS, P840, DOI 10.1109/TEST.1994.528031
   WHITE LJ, 1987, ADV COMPUT, V26, P335, DOI 10.1016/S0065-2458(08)60010-8
   WHITE LJ, 1980, IEEE T SOFTWARE ENG, V6, P247, DOI 10.1109/TSE.1980.234486
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Woodward M.R., 2000, Proc. of the 2000 ACM SIGSOFT Int'l Symp. on Software Testing and Analysis, P168
NR 42
TC 15
Z9 17
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2006
VL 11
IS 4
BP 493
EP 522
DI 10.1007/s10664-006-9025-1
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 116LS
UT WOS:000242805000001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Damian, D
   Zowghi, D
   Vaidyanathasamy, L
   Pal, Y
AF Damian, D
   Zowghi, D
   Vaidyanathasamy, L
   Pal, Y
TI An industrial case study of immediate benefits of requirements
   engineering process improvement at the Australian center for unisys
   software
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE requirements engineering; process improvement; industrial case study;
   empirical assessment
AB This paper describes an industrial experience in process improvement at one of the Unisys development tabs in Australia. Following a capability maturity model (CMM) mini-assessment, the organization is undertaking significant changes in the requirements management process, which include the introduction of group session approaches to requirements analysis and a structured method for writing requirements. An empirical evaluation which investigated other aspects of the process improvement than the CMM model indicates tangible benefits as well as perceived long-term benefits during design and testing. Findings confirm that a more thorough requirements analysis results in more clearly defined, better understood and specified requirements, and an enhanced ability to address the market needs and product strategy requirements. The catalyst behind these improvements included project management leadership, managing the human dimension, collaboration among stakeholders and senior management support.
C1 Univ Victoria, Dept Comp Sci, Victoria, BC V8W 3P6, Canada.
   Univ Technol, Fac Informat Technol, Broadway, NSW 2007, Australia.
   Unisys Australia Ltd, Rhodes, NSW 2138, Australia.
C3 University of Victoria; University of Technology Sydney
RP Univ Victoria, Dept Comp Sci, POB 3055, Victoria, BC V8W 3P6, Canada.
EM DanielaD@uvic.ca; didar@it.uts.edu.au; Lnv.Samy@unisys.com;
   Yogendra.Pal@unisys.com
RI Zowghi, Didar/AAF-2345-2019
OI Zowghi, Didar/0000-0002-6051-0155
CR [Anonymous], 1956, NONPARAMETRIC STAT
   [Anonymous], 1997, Requirements engineering: a good practice guide
   BASILI VR, 2002, P 24 INT C SOFTW ENG
   BRODMAN J, 1996, CROSSTALK, V9, P23
   *CARN MELL U, CMUSEI91TR24
   Diaz M, 1997, IEEE SOFTWARE, V14, P75, DOI 10.1109/52.605934
   DION R, 1993, IEEE SOFTWARE, V10, P28, DOI 10.1109/52.219618
   El Emam K, 2000, IEEE T SOFTWARE ENG, V26, P541, DOI 10.1109/32.852742
   ELEMAM K, 1998, SPICE THEORY PRACTIC
   ELEMAM K, 1997, ISERN9712
   HALL T, 2002, IEE P SOFTW
   HALLIGAN R, 2000, TAAS SE TRAINING COU
   Herbsleb JD, 1996, PROC INT CONF SOFTW, P323, DOI 10.1109/ICSE.1996.493427
   HUMPHREY WS, 1991, IEEE SOFTWARE, V8, P11, DOI 10.1109/52.300031
   *INT O STAD, 1987, QUAL STAND QUAL ASS
   JOHNSON A, 1994, P IEEE INT C SOFTW E
   Kotonya G.Sommerville., 1997, Requirements Engineering: Processes and Techniques
   Laporte C. Y., 1998, Software Process Improvement and Practice, V4, P187, DOI 10.1002/(SICI)1099-1670(199812)4:4<187::AID-SPIP108>3.0.CO;2-F
   Lauesen S., 2001, Requirements Engineering, V6, P37, DOI 10.1007/PL00010355
   MACAULAY L, 1996, REQUIRMENTS ENG
   Moitra D., 1998, Software Process Improvement and Practice, V4, P199, DOI 10.1002/(SICI)1099-1670(199812)4:4<199::AID-SPIP107>3.0.CO;2-D
   Osborne M, 1996, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, P229, DOI 10.1109/ICRE.1996.491451
   Paulk Mark., 1993, Encyclopedia of Software Engineering
   *SEI, 1995, CAP MAT MOD GUID IMP
   Shubert S., 1995, Journal of Technical Writing and Communication, vol, V25, P347
   Sommerville I, 1998, THIRD INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING - PROCEEDINGS, P74, DOI 10.1109/ICRE.1998.667811
   SOMMERVILLE I, 2003, COMMUNICATION
   Stelzer D., 1998, Software Process Improvement and Practice, V4, P227, DOI 10.1002/(SICI)1099-1670(199812)4:4<227::AID-SPIP106>3.0.CO;2-1
   WOHLWEND H, 1993, PROC INT CONF SOFTW, P212, DOI 10.1109/ICSE.1993.346042
   1998, 15504 ISO IEC
   1996, 2 INT REQ ENG, P42
   1995, COMPUTER WORLD  1220
NR 32
TC 33
Z9 34
U1 0
U2 11
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2004
VL 9
IS 1-2
BP 45
EP 75
DI 10.1023/B:EMSE.0000013514.19567.ad
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 805NU
UT WOS:000220373800002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Kaleeswaran, AP
   Nordmann, A
   Vogel, T
   Grunske, L
AF Kaleeswaran, Arut Prakash
   Nordmann, Arne
   Vogel, Thomas
   Grunske, Lars
TI A user study for evaluation of formal verification results and their
   explanation at Bosch
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE User study; Error comprehension; Counterexample interpretation; Formal
   methods; Model checker
AB ContextEnsuring safety for any sophisticated system is getting more complex due to the rising number of features and functionalities. This calls for formal methods to entrust confidence in such systems. Nevertheless, using formal methods in industry is demanding because of their lack of usability and the difficulty of understanding verification results.ObjectiveWe evaluate the acceptance of formal methods by Bosch automotive engineers, particularly whether the difficulty of understanding verification results can be reduced.MethodWe perform two different exploratory studies. First, we conduct a user survey to explore challenges in identifying inconsistent specifications and using formal methods by Bosch automotive engineers. Second, we perform a one-group pretest-posttest experiment to collect impressions from Bosch engineers familiar with formal methods to evaluate whether understanding verification results is simplified by our counterexample explanation approach.ResultsThe results from the user survey indicate that identifying refinement inconsistencies, understanding formal notations, and interpreting verification results are challenging. Nevertheless, engineers are still interested in using formal methods in real-world development processes because it could reduce the manual effort for verification. Additionally, they also believe formal methods could make the system safer. Furthermore, the one-group pretest-posttest experiment results indicate that engineers are more comfortable understanding the counterexample explanation than the raw model checker output.LimitationsThe main limitation of this study is the generalizability beyond the target group of Bosch automotive engineers.
C1 [Kaleeswaran, Arut Prakash] Robert Bosch GmbH, Cross Domain Comp Solut, Leonberg, Germany.
   [Kaleeswaran, Arut Prakash; Nordmann, Arne] Robert Bosch GmbH, Corp Sect Res, Renningen, Germany.
   [Vogel, Thomas; Grunske, Lars] Humboldt Univ, Software Engn Grp, Berlin, Germany.
C3 Bosch; Bosch; Humboldt University of Berlin
RP Kaleeswaran, AP (corresponding author), Robert Bosch GmbH, Cross Domain Comp Solut, Leonberg, Germany.; Kaleeswaran, AP (corresponding author), Robert Bosch GmbH, Corp Sect Res, Renningen, Germany.
EM arutprakash.kaleeswaran@de.bosch.com; arne.nordmann@neura-robotics.com;
   thomas.vogel@informatik.hu-berlin.de; grunske@informatik.hu-berlin.de
RI Grunske, Lars/AAH-4550-2019
OI Grunske, Lars/0000-0002-8747-3745
FU We would like to express our gratitude to all engineers who participated
   in our study for their time spent and their valuable responses.
   Furthermore, we would like to thank Amalinda Post, Igor Menzel, and
   Kevin Heiner for their support in designing the stu
FX We would like to express our gratitude to all engineers who participated
   in our study for their time spent and their valuable responses.
   Furthermore, we would like to thank Amalinda Post, Igor Menzel, and
   Kevin Heiner for their support in designing the study and improving the
   questionnaire.
CR Abrial J. -R., 2006, 28th International Conference on Software Engineering Proceedings, P761, DOI 10.1145/1134285.1134406
   Autili M, 2015, IEEE T SOFTWARE ENG, V41, P620, DOI 10.1109/TSE.2015.2398877
   Babbie E.R., 2020, PRACTICE SOCIAL RES
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Barbon G, 2019, LECT NOTES COMPUT SC, V11427, P386, DOI 10.1007/978-3-030-17462-0_26
   Bicarregui JC, 2009, LECT NOTES COMPUT SC, V5850, P810, DOI 10.1007/978-3-642-05089-3_52
   Bowen JP, 2022, LECT NOTES COMPUT SC, V13230, P287, DOI 10.1007/978-3-031-12429-7_21
   Bozzano Marco, 2020, Computer Safety, Reliability, and Security. 39th International Conference, SAFECOMP 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12234), P99, DOI 10.1007/978-3-030-54549-9_7
   Campbell DT., 1963, EXPT QUASIEXPERIMENT
   Cimatti A., 2000, Int. J. Softw. Tools for Technol. Transf. (STTT), V2, P410, DOI [DOI 10.1007/S100090050046, 10.1007/s100090050046]
   Cimatti A, 2012, EUROMICRO CONF PROC, P21, DOI 10.1109/SEAA.2012.68
   Clarke EdmundM., 2018, Cyber physical systems series, V2nd
   Clarke EM, 1996, ACM COMPUT SURV, V28, P626, DOI 10.1145/242223.242257
   Clarke T.A., 2018, HDB MODEL CHECKING, DOI DOI 10.1007/978-3-319-10575-8
   Davis JA, 2013, LECT NOTES COMPUT SC, V8187, P63, DOI 10.1007/978-3-642-41010-9_5
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Dwyer M. B., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P411, DOI 10.1109/ICSE.1999.841031
   Ferrari A, 2019, RELIABILITY SAFETY S, V11495
   Ferrari A, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3520480
   Fink A., 2003, THE SURVEY KIT
   Friedenthal S., 2014, A Practical Guide to SysML: the Systems Modeling Language, DOI DOI 10.1016/C2013-0-14457-1
   Garavel H, 2020, LECT NOTES COMPUT SC, V12327, P3, DOI 10.1007/978-3-030-58298-2_1
   Gerking C, 2015, CEUR WORKSHOP PROC, V1514, P18
   Giannakopoulou D, 2020, LECT NOTES COMPUT SC, V12045, P19, DOI 10.1007/978-3-030-44429-7_2
   Gladisch C, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P26, DOI 10.1109/ASE.2019.00013
   Gleirscher M, 2020, EMPIR SOFTW ENG, V25, P4473, DOI 10.1007/s10664-020-09836-5
   Grumberg Orna, 2008, 25 YEARS MODEL CHECK, DOI DOI 10.1007/978-3-540-69850-0
   Grunske L, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P31, DOI 10.1145/1368088.1368094
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Heitmeyer C, 1998, LECT NOTES COMPUT SC, V1486, P18, DOI 10.1007/BFb0055332
   Jones CB, 2022, FORM ASP COMPUT, V34, DOI 10.1145/3522577
   Kaiser B., 2015, COMPLEX SYSTEMS INFO, V4, P66, DOI [10.7250/csimq.2015-4.05, DOI 10.7250/CSIMQ.2015-4.05]
   Kaleeswaran Arut Prakash, 2020, Model-Based Safety and Assessment. 7th International Symposium, IMBSA 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12297), P99, DOI 10.1007/978-3-030-58920-2_7
   Kaleeswaran AP, 2021, Arxiv, DOI arXiv:2108.06376
   Kaleeswaran AP, 2022, INFORM SOFTWARE TECH, V145, DOI 10.1016/j.infsof.2021.106800
   Khazeev M, 2019, LECT NOTES COMPUTER, V12271, P28
   Kitchenham BA, 2008, Guide to advanced empirical software engineering, P63, DOI [DOI 10.1007/978-1-84800-044-5_3, 10.1007/ 978-1-84800-044-5_3]
   Konrad S, 2005, PROC INT CONF SOFTW, P372
   Kossak Felix, 2014, Requirements Engineering: Foundation for Software Quality. 20th International Working Conference, REFSQ 2014. Proceedings: LNCS 8396, P184, DOI 10.1007/978-3-319-05843-6_14
   McMillan KL., 1999, SMV LANGUAGE, P1
   Neuman W. L., 2014, BASICS SOCIAL RES
   Paulson L.C., 1994, J. Automat. Reason., V5, DOI DOI 10.1007/BFB0030541
   Pnueli A., 1977, 18th Annual Symposium on Foundations of Computer Science, P46, DOI 10.1109/SFCS.1977.32
   Pohl K., 2011, Requirements Engineering Fundamentals, V1st
   Post A, 2012, LECT NOTES COMPUT SC, V7152, P225, DOI 10.1007/978-3-642-27705-4_18
   Post A, 2012, REQUIR ENG, V17, P19, DOI 10.1007/s00766-011-0145-9
   Ratiu Daniel, 2021, FASTEN: An Extensible Platform to Experiment with Rigorous Modeling of Safety-Critical Systems, P131, DOI [DOI 10.1007/978-3-030-73758-0_5, 10.1007/978-3-030-73758-0, DOI 10.1007/978-3-030-73758-0]
   Reid A, 2020, Arxiv, DOI arXiv:2010.16345
   Robbins N., 2011, P 2011 JOINT STAT M, DOI DOI 10.1002/LT.25677
   Robson C., 2002, Real world research
   Rodrigues P, 2018, P 14 BRAZ S INF SYST, p53:1, DOI [10.1145/3229345, DOI 10.1145/3229345]
   Rushby J., 1993, Formal methods and the certification of critical systems
   Snook C, 2001, INFORM SOFTWARE TECH, V43, P275, DOI 10.1016/S0950-5849(00)00166-X
   ter Beek M. H., 2019, FORMAL METHODS THE N, V3, P762
   Weber J., 2009, SPRINGER, DOI [10.1007/978-3-642-01253-2, DOI 10.1007/978-3-642-01253-2]
   WING JM, 1990, COMPUTER, V23, P8, DOI 10.1109/2.58215
   Zaidman A, 2013, EMPIR SOFTW ENG, V18, P181, DOI 10.1007/s10664-012-9200-5
NR 57
TC 0
Z9 1
U1 0
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2023
VL 28
IS 5
AR 125
DI 10.1007/s10664-023-10353-4
PG 67
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA S2JJ1
UT WOS:001069479400001
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Li, YK
   Soliman, M
   Avgeriou, P
AF Li, Yikun
   Soliman, Mohamed
   Avgeriou, Paris
TI Automatic identification of self-admitted technical debt from four
   different sources
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Deep learning; Multitask learning; Self-admitted technical debt; Issue
   tracking systems; Source code comments; Commit messages; Pull requests
AB Technical debt refers to taking shortcuts to achieve short-term goals while sacrificing the long-term maintainability and evolvability of software systems. A large part of technical debt is explicitly reported by the developers themselves; this is commonly referred to as Self-Admitted Technical Debt or SATD. Previous work has focused on identifying SATD from source code comments and issue trackers. However, there are no approaches available for automatically identifying SATD from other sources such as commit messages and pull requests, or by combining multiple sources. Therefore, we propose and evaluate an approach for automated SATD identification that integrates four sources: source code comments, commit messages, pull requests, and issue tracking systems. Our findings show that our approach outperforms baseline approaches and achieves an average F1-score of 0.611 when detecting four types of SATD (i.e., code/design debt, requirement debt, documentation debt, and test debt) from the four aforementioned sources. Thereafter, we analyze 23.6M code comments, 1.3M commit messages, 3.7M issue sections, and 1.7M pull request sections to characterize SATD in 103 open-source projects. Furthermore, we investigate the SATD keywords and relations between SATD in different sources. The findings indicate, among others, that: 1) SATD is evenly spread among all sources; 2) issues and pull requests are the two most similar sources regarding the number of shared SATD keywords, followed by commit messages, and then followed by code comments; 3) there are four kinds of relations between SATD items in the different sources.
C1 [Li, Yikun; Soliman, Mohamed; Avgeriou, Paris] Univ Groningen, Bernoulli Inst Math Comp Sci & Artificial Intellig, Groningen, Netherlands.
C3 University of Groningen
RP Li, YK (corresponding author), Univ Groningen, Bernoulli Inst Math Comp Sci & Artificial Intellig, Groningen, Netherlands.
EM yikun.li@rug.nl; m.a.m.soliman@rug.nl; p.avgeriou@rug.nl
OI Soliman, Mohamed/0000-0002-6638-3732; Li, Yikun/0000-0002-1566-725X;
   Avgeriou, Paris/0000-0002-7101-0754
FU ITEA3; RVO [17038 VISDOM]
FX This study was funded by ITEA3 and RVO under grant agreement No. 17038
   VISDOM (https://visdom-project.github.io/website).
CR Ajisaka Akira, 2021, HADOOP CONTRIBUTOR G
   Allman E, 2012, COMMUN ACM, V55, P50, DOI 10.1145/2160718.2160733
   Alves Nicolli S. R., 2014, 2014 Sixth International Workshop on Managing Technical Debt. Proceedings, P1, DOI 10.1109/MTD.2014.9
   [Anonymous], 1908, BIOMETRIKA, V6, P1
   [Anonymous], 2014, Proceedings of the 2014 conference on empirical methods in natural language processing (EMNLP), DOI [DOI 10.3115/V1/D14-1181, 10.3115/v1/D14-1181]
   Apache Software Foundation, 2021, BRIEF AP WAY
   Avgeriou P, 2016, Dagstuhl reports, V6, DOI DOI 10.4230/DAGREP.6.4.110
   Bellomo S, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P327, DOI [10.1145/2901739.2901754, 10.1109/MSR.2016.041]
   Breiman L, 2001, MACH LEARN, V45, P5, DOI 10.1023/A:1010933404324
   Chen X, 2022, IEEE T RELIAB, V71, P1309, DOI 10.1109/TR.2021.3087864
   Collobert R, 2008, P 25 ICML, P160, DOI 10.1145/1390156.1390177
   Dai K., 2017, QUASOQ APSEC, P59
   Genkin A, 2007, TECHNOMETRICS, V49, P291, DOI 10.1198/004017007000000245
   GLASER BG, 1965, SOC PROBL, V12, P436, DOI 10.1525/sp.1965.12.4.03a00070
   Guo ZQ, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3447247
   Huang Q, 2018, EMPIR SOFTW ENG, V23, P418, DOI 10.1007/s10664-017-9522-4
   Iammarino M, 2021, J SYST SOFTWARE, V178, DOI 10.1016/j.jss.2021.110976
   Iammarino M, 2019, PROC IEEE INT CONF S, P186, DOI 10.1109/ICSME.2019.00029
   Kamei E.d.S., 2016, QUASOQ TDA APSEC, P68
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Li YK, 2023, IEEE T SOFTWARE ENG, V49, P2545, DOI 10.1109/TSE.2022.3224378
   Li YK, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10128-3
   Li YK, 2020, EUROMICRO CONF PROC, P495, DOI 10.1109/SEAA51224.2020.00083
   Li ZY, 2015, J SYST SOFTWARE, V101, P193, DOI 10.1016/j.jss.2014.12.027
   Liu Xiaodong., 2015, Proceedings of the 2015 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies, P912
   Maldonado ED, 2015, 2015 IEEE 7TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD) PROCEEDINGS, P9, DOI 10.1109/MTD.2015.7332619
   Maldonado ED, 2017, IEEE T SOFTWARE ENG, V43, P1044, DOI 10.1109/TSE.2017.2654244
   Mikolov T, 2018, PROCEEDINGS OF THE ELEVENTH INTERNATIONAL CONFERENCE ON LANGUAGE RESOURCES AND EVALUATION (LREC 2018), P52
   Monson-Haefel R., 2021, ITS EASY YOUR 1 TOME
   Potdar A, 2014, PROC IEEE INT CONF S, P91, DOI 10.1109/ICSME.2014.31
   Ren XX, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3324916
   Runeson Per, 2012, Case study research in software engineering: Guidelines and examples
   Sierra G, 2019, J SYST SOFTWARE, V152, P70, DOI 10.1016/j.jss.2019.02.056
   Stannard Aaron, 2021, US GITH PROF BEST PR
   Sun AX, 2009, DECIS SUPPORT SYST, V48, P191, DOI 10.1016/j.dss.2009.07.011
   Van Solingen Rini, 2002, ENCY SOFTWARE ENG, V2002, P528
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Wang X, 2020, IEEE INT CONF AUTOM, P871, DOI 10.1145/3324884.3416583
   Xavier L, 2020, IEEE WORK CONF MIN S, P137, DOI 10.1145/3379597.3387459
   Zampetti F, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-10031-3
   Zampetti F, 2018, IEEE WORK CONF MIN S, P526, DOI 10.1145/3196398.3196423
   Zhang Y., 2017, P 8 INT JOINT C NAT, V1, P253, DOI DOI 10.48550/ARXIV.1510.03820
NR 42
TC 4
Z9 4
U1 0
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2023
VL 28
IS 3
AR 65
DI 10.1007/s10664-023-10297-9
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA D7SF3
UT WOS:000970681800001
OA Green Published, Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Ramasamy, D
   Sarasua, C
   Bacchelli, A
   Bernstein, A
AF Ramasamy, Dhivyabharathi
   Sarasua, Cristina
   Bacchelli, Alberto
   Bernstein, Abraham
TI Visualising data science workflows to support third-party notebook
   comprehension: an empirical study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Notebook comprehension; Program comprehension; Data science code; Data
   science workflow; Workflow visualisation; Garden of forking paths;
   Software visualisation; Jupyter notebooks
ID SOFTWARE MAINTENANCE; ANALYSTS; DESIGN
AB Data science is an exploratory and iterative process that often leads to complex and unstructured code. This code is usually poorly documented and, consequently, hard to understand by a third party. In this paper, we first collect empirical evidence for the non-linearity of data science code from real-world Jupyter notebooks, confirming the need for new approaches that aid in data science code interaction and comprehension. Second, we propose a visualisation method that elucidates implicit workflow information in data science code and assists data scientists in navigating the so-called garden of forking paths in non-linear code. The visualisation also provides information such as the rationale and the identification of the data science pipeline step based on cell annotations. We conducted a user experiment with data scientists to evaluate the proposed method, assessing the influence of (i) different workflow visualisations and (ii) cell annotations on code comprehension. Our results show that visualising the exploration helps the users obtain an overview of the notebook, significantly improving code comprehension. Furthermore, our qualitative analysis provides more insights into the difficulties faced during data science code comprehension.
C1 [Ramasamy, Dhivyabharathi; Sarasua, Cristina; Bacchelli, Alberto; Bernstein, Abraham] Univ Zurich, Dept Informat, Zurich, Switzerland.
C3 University of Zurich
RP Ramasamy, D (corresponding author), Univ Zurich, Dept Informat, Zurich, Switzerland.
EM ramasamy@ifi.uzh.ch; sarasua@ifi.uzh.ch; bacchelli@ifi.uzh.ch;
   bernstein@ifi.uzh.ch
RI Bacchelli, Alberto/ABG-5379-2020
OI Bacchelli, Alberto/0000-0003-0193-6823; Ramasamy,
   Dhivyabharathi/0009-0002-9056-6907
CR [Anonymous], 2008, Proceedings of the 4th International Workshop on End-user Software Engineering, DOI [DOI 10.1145/1370847.1370848, 10.1145/1370847.1370848]
   Ball T, 1996, COMPUTER, V29, P33, DOI 10.1109/2.488299
   Bangor A, 2008, INT J HUM-COMPUT INT, V24, P574, DOI 10.1080/10447310802205776
   Bavishi R, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360594
   Begel A, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P120
   Brooke J, 1996, USABILITY EVALUATION, V189, P4
   Cohen J., 1988, STAT POWER ANAL BEHA
   Collberg C., 2003, Proceedings of the 2003 ACM symposium on Software visualization-SoftVis '03, P77
   CORBI TA, 1989, IBM SYST J, V28, P294, DOI 10.1147/sj.282.0294
   Cornelissen B, 2009, INT C PROGRAM COMPRE, P100, DOI 10.1109/ICPC.2009.5090033
   DeLine R, 2005, 2005 IEEE Symposium on Visual Language and Human-Centric Computing, Proceedings, P241, DOI 10.1109/VLHCC.2005.32
   Dictionary OL, 2020, MARG OXF LEARN DICT
   Fjeldstad R. K., 1979, P GUIDE 48 PA
   Francese R, 2017, IEEE INT CON INF VIS, P8, DOI 10.1109/iV.2017.26
   Gelman A., 2013, GARDEN FORKING PATHS
   Gil Y, 2011, IEEE INTELL SYST, V26, P62, DOI 10.1109/MIS.2010.9
   Granger B., 2021, PREPRINT
   Green TRG, 1996, J VISUAL LANG COMPUT, V7, P131, DOI 10.1006/jvlc.1996.0009
   Head A, 2019, CHI 2019: PROCEEDINGS OF THE 2019 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, DOI 10.1145/3290605.3300500
   Hill C, 2016, S VIS LANG HUM CEN C, P162, DOI 10.1109/VLHCC.2016.7739680
   Hulkko H, 2005, PROC INT CONF SOFTW, P495
   Jupyter P, 2015, PROJECT JUPYTER COMP
   Kandel S, 2012, IEEE T VIS COMPUT GR, V18, P2917, DOI 10.1109/TVCG.2012.219
   Kery MB, 2019, CHI 2019: PROCEEDINGS OF THE 2019 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, DOI 10.1145/3290605.3300322
   Kery MB, 2018, PROCEEDINGS OF THE 2018 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2018), DOI 10.1145/3173574.3173748
   Kery MB, 2018, 2018 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING (VL/HCC), P147, DOI 10.1109/VLHCC.2018.8506576
   Kery MB, 2017, PROCEEDINGS OF THE 2017 ACM SIGCHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'17), P1265, DOI 10.1145/3025453.3025626
   Kienle HM, 2010, SCI COMPUT PROGRAM, V75, P247, DOI 10.1016/j.scico.2009.10.007
   Kim M, 2018, IEEE T SOFTWARE ENG, V44, P1024, DOI 10.1109/TSE.2017.2754374
   Ko AJ, 2006, IEEE T SOFTWARE ENG, V32, P971, DOI 10.1109/TSE.2006.116
   Koop David, 2017, P 9 USENIX C THEORY, P17
   LETOVSKY S, 1986, IEEE SOFTWARE, V3, P41, DOI 10.1109/MS.1986.233414
   LITTMAN DC, 1987, J SYST SOFTWARE, V7, P341, DOI 10.1016/0164-1212(87)90033-1
   Liu JL, 2020, IEEE T VIS COMPUT GR, V26, P66, DOI 10.1109/TVCG.2019.2934593
   Liu Y, P 2020 CHI C HUM FAC, P1
   Macke S, 2021, Arxiv, DOI arXiv:2012.06981
   Merali Z, 2010, NATURE, V467, P775, DOI 10.1038/467775a
   Minelli R, 2015, INT C PROGRAM COMPRE, P25, DOI 10.1109/ICPC.2015.12
   Minelli Roberto, 2013, 2013 1 IEEE WORKING, P1
   Namaki MH, 2020, KDD '20: PROCEEDINGS OF THE 26TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY & DATA MINING, P1542, DOI 10.1145/3394486.3403205
   Nosek JT, 1998, COMMUN ACM, V41, P105, DOI 10.1145/272287.272333
   Patel K, 2008, CHI 2008: 26TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS VOLS 1 AND 2, CONFERENCE PROCEEDINGS, P667
   Patterson E, 2017, IBM J RES DEV, V61, DOI 10.1147/JRD.2017.2736278
   Pauw WD, 2001, REV LECT SOFTW VIS I, P151
   Perkel J. M., 2018, Nature, VVol. 563, ppp. 145
   Perkel JM, 2019, NATURE, V573, P149, DOI 10.1038/d41586-019-02619-z
   Pimentel Joao Felipe, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P507, DOI 10.1109/MSR.2019.00077
   Pimentel JF, 2015, TAPP
   Pimentel JF, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09961-9
   Pimentel JF, 2019, ACM COMPUT SURV, V52, DOI 10.1145/3311955
   Quaranta Luigi, 2022, Proceedings of the ACM on Human-Computer Interaction, V6, DOI 10.1145/3512934
   Ragavan SS, 2016, 34TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, CHI 2016, P3509, DOI 10.1145/2858036.2858469
   Rajlich V, 1997, PROG COMPREHEN, P160, DOI 10.1109/WPC.1997.601284
   Ramasamy D, 2022, IN PRESS
   Randles BM, 2017, 2017 ACM IEEE JOINT, P1, DOI DOI 10.1109/JCDL.2017.7991618
   Rule A., 2019, Ten simple rules for writing and sharing computational analyses in Jupyter Notebooks
   Rule A, 2018, Arxiv, DOI arXiv:1810.08055
   Rule A, 2018, PROCEEDINGS OF THE 2018 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2018), DOI 10.1145/3173574.3173606
   Saldana J., 2016, CODING MANUAL QUALIT, DOI DOI 10.1017/CBO9781107415324.004
   Schweinsberg M, 2021, ORGAN BEHAV HUM DEC, V165, P228, DOI 10.1016/j.obhdp.2021.02.003
   Siegmund J, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 5, P13, DOI 10.1109/SANER.2016.35
   Silberzahn R, 2018, ADV METH PRACT PSYCH, V1, P337, DOI 10.1177/2515245917747646
   Steegen S, 2016, PERSPECT PSYCHOL SCI, V11, P702, DOI 10.1177/1745691616658637
   Storey MAD, 1997, IEEE SYMPOSIUM ON INFORMATION VISUALIZATION, PROCEEDINGS, P38, DOI 10.1109/INFVIS.1997.636784
   Storey MAD, 1997, PROG COMPREHEN, P17, DOI 10.1109/WPC.1997.601257
   Storey MAD, 1998, THESIS S FRASER U CA
   Systä T, 2001, SOFTWARE PRACT EXPER, V31, P371, DOI 10.1002/spe.386
   THURING M, 1995, COMMUN ACM, V38, P57, DOI 10.1145/208344.208348
   Wacker J, 2017, FRONT PSYCHOL, V8, DOI 10.3389/fpsyg.2017.01332
   Wang D., 2019, P ACM HUMAN COMPUTER, V3, P1, DOI [10.1145/3359313, DOI 10.1145/3359313]
   Wilson G, 2014, PLOS BIOL, V12, DOI 10.1371/journal.pbio.1001745
   Ye DH, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P90, DOI 10.1109/SANER.2016.10
NR 72
TC 1
Z9 1
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2023
VL 28
IS 3
AR 58
DI 10.1007/s10664-023-10289-9
PG 42
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA A1WJ0
UT WOS:000953100700001
PM 36968214
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Trautsch, A
   Herbold, S
   Grabowski, J
AF Trautsch, Alexander
   Herbold, Steffen
   Grabowski, Jens
TI Are automated static analysis tools worth it? An investigation into
   relative warning density and external software quality on the example of
   Apache open source projects
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Static code analysis; Quality evolution; Software metrics; Software
   quality
AB Automated Static Analysis Tools (ASATs) are part of software development best practices. ASATs are able to warn developers about potential problems in the code. On the one hand, ASATs are based on best practices so there should be a noticeable effect on software quality. On the other hand, ASATs suffer from false positive warnings, which developers have to inspect and then ignore or mark as invalid. In this article, we ask whether ASATs have a measurable impact on external software quality, using the example of PMD for Java. We investigate the relationship between ASAT warnings emitted by PMD on defects per change and per file. Our case study includes data for the history of each file as well as the differences between changed files and the project in which they are contained. We investigate whether files that induce a defect have more static analysis warnings than the rest of the project. Moreover, we investigate the impact of two different sets of ASAT rules. We find that, bug inducing files contain less static analysis warnings than other files of the project at that point in time. However, this can be explained by the overall decreasing warning density. When compared with all other changes, we find a statistically significant difference in one metric for all rules and two metrics for a subset of rules. However, the effect size is negligible in all cases, showing that the actual difference in warning density between bug inducing changes and other changes is small at best.
C1 [Trautsch, Alexander; Herbold, Steffen] Univ Passau, Passau, Germany.
   [Grabowski, Jens] Univ Gottingen, Inst Comp Sci, Gottingen, Germany.
C3 University of Passau; University of Gottingen
RP Trautsch, A (corresponding author), Univ Passau, Passau, Germany.
EM alexander.trautsch@uni-passau.de; steffen.herbold@uni-passau.de;
   grabowski@cs.uni-goettingen.de
OI Herbold, Steffen/0000-0001-9765-2803; Trautsch,
   Alexander/0000-0001-5236-7953
FU Projekt DEAL; German Research Foundation (DFG) [402774445]
FX Open Access funding enabled and organized by Projekt DEAL. This work was
   partly funded bythe German Research Foundation (DFG) through the project
   DEFECTS, grant 402774445
CR Abdi H, 2007, ENCY MEASUREMENT STA, P103, DOI DOI 10.4135/9781412952644
   Aloraini B, 2019, J SYST SOFTWARE, V158, DOI 10.1016/j.jss.2019.110427
   Antoniol Giuliano, 2008, P 2008 C CTR ADV STU
   Christakis M, 2016, IEEE INT CONF AUTOM, P332, DOI 10.1145/2970276.2970347
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Devanbu P, 2016, PROC INT CONF SOFTW, P108, DOI 10.1145/2884781.2884812
   Di Penta M, 2009, INFORM SOFTWARE TECH, V51, P1469, DOI 10.1016/j.infsof.2009.04.013
   Habib A, 2018, IEEE INT CONF AUTOM, P317, DOI 10.1145/3238147.3238213
   Heckman S, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P161, DOI 10.1109/ICST.2009.45
   Herbold S, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10083-5
   Herbold S, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10092-4
   Herzig K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P392, DOI 10.1109/ICSE.2013.6606585
   Johnson B, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P672, DOI 10.1109/ICSE.2013.6606613
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kim S, 2007, P 6 JOINT M EUR SOFT, P45, DOI DOI 10.1145/1287624.1287633
   Koc U, 2017, MAPL'17: PROCEEDINGS OF THE 1ST ACM SIGPLAN INTERNATIONAL WORKSHOP ON MACHINE LEARNING AND PROGRAMMING LANGUAGES, P35, DOI 10.1145/3088525.3088675
   Lenarduzzi V, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P501, DOI [10.1109/SANER48275.2020.9054821, 10.1109/saner48275.2020.9054821]
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Nagappan N, 2005, PROC INT CONF SOFTW, P580, DOI 10.1145/1062455.1062558
   Pascarella L, 2019, J SYST SOFTWARE, V150, P22, DOI 10.1016/j.jss.2018.12.001
   Plosch R., 2008, Proceedings of the 2008 32nd Annual IEEE Software Engineering Workshop. SEW 2008, P169, DOI 10.1109/SEW.2008.17
   Querel LP, 2021, INT C PROGRAM COMPRE, P433, DOI 10.1109/ICPC52881.2021.00051
   Querel LP, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P892, DOI 10.1145/3236024.3264599
   Rahman F, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P424, DOI 10.1145/2568225.2568269
   Rodríguez-Pérez G, 2022, IEEE T SOFTWARE ENG, V48, P1400, DOI 10.1109/TSE.2020.3021380
   Rosen C, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P966, DOI 10.1145/2786805.2803183
   Spadini D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P908, DOI 10.1145/3236024.3264598
   Thung F, 2012, IEEE INT CONF AUTOM, P50, DOI 10.1145/2351676.2351685
   Trautsch A, 2020, PROC IEEE INT CONF S, P127, DOI 10.1109/ICSME46990.2020.00022
   Trautsch A, 2020, EMPIR SOFTW ENG, V25, P5137, DOI 10.1007/s10664-020-09880-1
   Trautsch F, 2018, EMPIR SOFTW ENG, V23, P1036, DOI 10.1007/s10664-017-9537-x
   Tufano M, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1797
   Vassallo C, 2020, EMPIR SOFTW ENG, V25, P1419, DOI 10.1007/s10664-019-09750-5
   Vetro Antonio, 2011, 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), P144, DOI 10.1049/ic.2011.0018
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
NR 36
TC 0
Z9 0
U1 1
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2023
VL 28
IS 3
AR 66
DI 10.1007/s10664-023-10301-2
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA D8FN8
UT WOS:000971031800001
OA hybrid
DA 2024-07-18
ER

PT J
AU García, S
   Strüber, D
   Brugali, D
   Di Fava, A
   Pelliccione, P
   Berger, T
AF Garcia, Sergio
   Strueber, Daniel
   Brugali, Davide
   Di Fava, Alessandro
   Pelliccione, Patrizio
   Berger, Thorsten
TI Software variability in service robotics
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Autonomous and (self-)adaptive systems; Service robots; Variability;
   Robotics software engineering
ID SYSTEMS; ARCHITECTURES; HYPERFLEX; DESIGN
AB Robots artificially replicate human capabilities thanks to their software, the main embodiment of intelligence. However, engineering robotics software has become increasingly challenging. Developers need expertise from different disciplines as well as they are faced with heterogeneous hardware and uncertain operating environments. To this end, the software needs to be variable-to customize robots for different customers, hardware, and operating environments. However, variability adds substantial complexity and needs to be managed-yet, ad hoc practices prevail in the robotics domain, challenging effective software reuse, maintenance, and evolution. To improve the situation, we need to enhance our empirical understanding of variability in robotics. We present a multiple-case study on software variability in the vibrant and challenging domain of service robotics. We investigated drivers, practices, methods, and challenges of variability from industrial companies building service robots. We analyzed the state-of-the-practice and the state-of-the-art-the former via an experience report and eleven interviews with two service robotics companies; the latter via a systematic literature review. We triangulated from these sources, reporting observations with actionable recommendations for researchers, tool providers, and practitioners. We formulated hypotheses trying to explain our observations, and also compared the state-of-the-art from the literature with the-state-of-the-practice we observed in our cases. We learned that the level of abstraction in robotics software needs to be raised for simplifying variability management and software integration, while keeping a sufficient level of customization to boost efficiency and effectiveness in their robots' operation. Planning and realizing variability for specific requirements and implementing robust abstractions permit robotic applications to operate robustly in dynamic environments, which are often only partially known and controllable. With this aim, our companies use a number of mechanisms, some of them based on formalisms used to specify robotic behavior, such as finite-state machines and behavior trees. To foster software reuse, the service robotics domain will greatly benefit from having software components-completely decoupled from hardware-with harmonized and standardized interfaces, and organized in an ecosystem shared among various companies.
C1 [Garcia, Sergio; Berger, Thorsten] Univ Gothenburg Chalmers, Gothenburg, Sweden.
   [Strueber, Daniel] Radboud Univ Nijmegen, Nijmegen, Netherlands.
   [Brugali, Davide] Univ Bergamo, Bergamo, Italy.
   [Di Fava, Alessandro] PAL Robot, Barcelona, Spain.
   [Pelliccione, Patrizio] Gran Sasso Sci Inst GSSI, Laquila, Italy.
   [Berger, Thorsten] Ruhr Univ Bochum, Bochum, Germany.
C3 Radboud University Nijmegen; University of Bergamo; Consejo Superior de
   Investigaciones Cientificas (CSIC); CSIC - Institut de Robotica i
   Informatica Industrial (IRII); Gran Sasso Science Institute (GSSI); Ruhr
   University Bochum
RP García, S (corresponding author), Univ Gothenburg Chalmers, Gothenburg, Sweden.
EM sergio.garciagonzalo@gmail.com; d.strueber@cs.ru.nl;
   davide.brugali@unibg.it; alessandro.difava@pal-robotics.com;
   patrizio.pelliccione@gssi.it; thorsten.berger@rub.de
RI Pelliccione, Patrizio/Q-5118-2019
OI Pelliccione, Patrizio/0000-0002-5438-2281
FU EU H2020 Prog. [731869]; Wallenberg AI, Autonomous Systems and Software
   Program (WASP) - Knut and Alice Wallenberg Foundation; Centre of
   EXcellence on Connected, Geo-Localized, and Cybersecure Vehicle
   (EX-Emerge) - Italian Government [70/2017]
FX We are thankful to the interviewees for their collaboration. Research
   supported by the EU H2020 Prog. under GA No. 731869 (Co4Robots),
   Wallenberg AI, Autonomous Systems and Software Program (WASP) funded by
   the Knut and Alice Wallenberg Foundation, and the Centre of EXcellence
   on Connected, Geo-Localized, and Cybersecure Vehicle (EX-Emerge), funded
   by Italian Government under CIPE resolution n. 70/2017 (Aug. 7, 2017).
CR Agha Gul., 2002, Communications of the ACM, SPECIAL ISSUE: Adaptive middleware, V45, P30, DOI [DOI 10.1145/504729.504750, 10.1145/504729.504750]
   Ahmad A, 2016, J SYST SOFTWARE, V122, P16, DOI 10.1016/j.jss.2016.08.039
   Ajaykumar G, 2021, ACM COMPUT SURV, V54, DOI 10.1145/3466819
   Alvarez B, 2006, ROBOTICA, V24, P411, DOI 10.1017/S0263574705002407
   [Anonymous], 2009, 14 INT VDI C EL SYST
   [Anonymous], 2016, Classification of service robots by application areas
   [Anonymous], 2015, P ACMIEEE 6 INT C CY, P70
   [Anonymous], 2015, P 19 INT C SOFTW PRO, DOI DOI 10.1145/2791060.2791108
   [Anonymous], 2007, COMPANION 22 ACM SIG
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   [Anonymous], 1991, P 12 INT JOINT C ART
   Apel S., 2014, Dagstuhl Rep, V4, P1, DOI DOI 10.4230/DAGREP.4.7.1
   Apel S, 2013, FEATURE PPES
   Apel Sven., 2013, P 5 INT WORKSHOP FEA, P1, DOI [10.1145/2528265.2528267, DOI 10.1145/2528265.2528267]
   Bashroush R, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3034827
   Berger T, 2020, EMPIR SOFTW ENG, V25, P1755, DOI 10.1007/s10664-019-09787-6
   Berger T, 2014, INFORM SOFTWARE TECH, V56, P1520, DOI 10.1016/j.infsof.2014.05.005
   Berger Thorsten, 2013, 7 INT WORKSH VAR MOD, DOI DOI 10.1145/2430502.2430513
   Bischoff R, 2010, ISR 2010, P1
   Bosch J, 2002, LECT NOTES COMPUT SC, V2290, P13
   Bosch J, 2004, P 2 GRON WORKSH SOFT
   Bozhinoski D, 2019, J SYST SOFTWARE, V151, P150, DOI 10.1016/j.jss.2019.02.021
   Braga RosanaT. V., 2012, Proceedings of the 16th International Software Product Line Conference - Volume, V1, P249
   Brooks C., 2009, ACM symposium of Applied Computing, P1145
   Brown D, 2007, RELIABLE RECONFIGURA
   Brugali D, 2016, LECT NOTES COMPUTER, V9789, P358
   Brugali D, 2018, INT J SEMANT COMPUT, V12, P89, DOI 10.1142/S1793351X18400056
   Brugali D, 2018, 2018 SECOND IEEE INTERNATIONAL CONFERENCE ON ROBOTIC COMPUTING (IRC), P129, DOI 10.1109/IRC.2018.00027
   Brugali D, 2017, 2017 FIRST IEEE INTERNATIONAL CONFERENCE ON ROBOTIC COMPUTING (IRC), P277, DOI 10.1109/IRC.2017.20
   Brugali D, 2016, STUD COMPUT INTELL, V625, P509, DOI 10.1007/978-3-319-26054-9_20
   Brugali D, 2009, IEEE ROBOT AUTOM MAG, V16, P84, DOI 10.1109/MRA.2009.934837
   Brugali D, 2009, IEEE ROBOT AUTOM MAG, V16, P9, DOI 10.1109/MRA.2009.932127
   Bruyninckx H, 2001, IEEE INT CONF ROBOT, P2523, DOI 10.1109/ROBOT.2001.933002
   Buchmann T, 2015, INT WORK PROD LINE, P27, DOI 10.1109/PLEASE.2015.15
   Businge J, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10078-2
   Calder M, 2003, COMPUT NETW, V41, P115, DOI 10.1016/S1389-1286(02)00352-3
   Chen LP, 2010, LECT NOTES COMPUT SC, V6287, P166, DOI 10.1007/978-3-642-15579-6_12
   Chen LP, 2011, INFORM SOFTWARE TECH, V53, P344, DOI 10.1016/j.infsof.2010.12.006
   Cleland-Huang J, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS (ICSE-NIER), P109, DOI 10.1145/3183399.3183408
   Colledanchise M., 2018, Behavior trees in robotics and AI: An introduction
   CORBIN J, 1990, Z SOZIOL, V19, P418, DOI 10.1007/BF00988593
   Creswell J. W., 2013, RES DESIGN QUALITATI
   Czarnecki Krzysztof., 2012, P 6 INT WORKSHOP VAR, P173, DOI DOI 10.1145/2110147.2110167
   Czerniejewski A, 2016, P 14 INT WORKSH JAV
   Dragule S, 2021, SOFTWARE ENG ROBOTIC
   Dragule S, 2021, SOFTW SYST MODEL, V20, P1123, DOI 10.1007/s10270-020-00854-x
   Dubinsky Y, 2013, EUR CON SFTWR MTNCE, P25, DOI 10.1109/CSMR.2013.13
   Dumitrescu C., 2013, P 17 INT SOFTW PROD, P254
   Duncan BA, 2017, ACM T INTERACT INTEL, V7, DOI 10.1145/2983927
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Engström E, 2011, INFORM SOFTWARE TECH, V53, P2, DOI 10.1016/j.infsof.2010.05.011
   Estefo P, 2019, J SYST SOFTWARE, V151, P226, DOI 10.1016/j.jss.2019.02.024
   Flick U., 2013, SAGE HDB QUALITATIVE, P79, DOI [DOI 10.4135/9781446282243, DOI 10.4135/9781446282243.N6]
   Flores Rick., 2012, Proceedings of the 16th International Software Product Line Conference, V1, P259
   Foster S, 2020, THEOR COMPUT SCI, V802, P105, DOI 10.1016/j.tcs.2019.09.017
   Fragal VH, 2013, ICEIS: PROCEEDINGS OF THE 15TH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS - VOL 2, P94, DOI 10.5220/0004402600940101
   Franz P, 2021, 43 INT C SOFTWARE EN
   Garcia S, 2021, ONLINE APPENDIX
   García S, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P593, DOI 10.1145/3368089.3409743
   García S, 2019, PROCEEDINGS OF THE 12TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING (SLE '19), P127, DOI 10.1145/3357766.3359535
   Garcia S, 2018, 2018 IEEE 15TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P75, DOI 10.1109/ICSA.2018.00017
   Garcia S, 2019, PROCEEDINGS OF THE 13TH INTERNATIONAL WORKSHOP ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS (VAMOS '19), DOI 10.1145/3302333.3302350
   Gherardi L, 2013, THESIS U STUDI BERGA
   Gherardi L, 2014, IEEE INT CONF ROBOT, P6414, DOI 10.1109/ICRA.2014.6907806
   Ghzouli R, 2020, PROCEEDINGS OF THE 13TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING, SLE 2020, P196, DOI 10.1145/3426425.3426942
   Goldsby H.J., 2008, Proceedings of the 10th Annual Conference on Genetic and Evolutionary Computation, P1751, DOI DOI 10.1145/1389095.1389434
   Hubaux A, 2012, P WORKSHOP CONFIGURA, V958, P31
   IEEE Robots, 2020, TYP ROB
   Juarez Dominguez AL, 2012, THESIS U WATERLOO
   Kastner C, 2009, P 31 INT C SOFTWARE
   Kimour Mohamed T., 2009, Journal of Computing and Information Technology - CIT, V17, P195, DOI 10.2498/cit.1001212
   Kitchenham B., 2007, GUIDELINES PERFORMIN
   KITZINGER J, 1995, BRIT MED J, V311, P299, DOI 10.1136/bmj.311.7000.299
   Kortenkamp D, 2016, SPRINGER HANDBOOK OF ROBOTICS, P283
   Koster N, 2016, P SAI INTELLIGENT SY, P338
   Kramer J, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P259, DOI 10.1109/FOSE.2007.19
   Krüger J, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P432, DOI 10.1145/3368089.3409684
   Krüger J, 2017, 21ST INTERNATIONAL SYSTEMS & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 1, P237, DOI 10.1145/3106195.3106217
   Lee K, 2006, SPLC 2006: 10TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P103
   Logothetis M, 2021, IEEE ROBOT AUTOM MAG, V28, P74, DOI 10.1109/MRA.2021.3064761
   Lotz A, 2013, LECT NOTES BUS INF P, V147, P441
   Lu DV, 2014, THESIS WASHINGTON U
   Macenski S, 2020, IEEE INT C INT ROBOT, P2718, DOI 10.1109/IROS45743.2020.9341207
   MacQueen K. M., 1998, Cam Journal, V10, P31, DOI [DOI 10.1177/1525822X980100020301, 10.1177/1525822X980100020301]
   Mahmood W, 2021, 43 INT C SOFTWARE EN
   Malavolta I, 2010, IEEE T SOFTWARE ENG, V36, P119, DOI 10.1109/TSE.2009.51
   MAXWELL JA, 1992, HARVARD EDUC REV, V62, P279, DOI 10.17763/haer.62.3.8323320856251826
   Menghi C, 2019, IEEE T SOFTW ENG
   Menghi C, 2018, PROC IEEE ACM INT C, P434, DOI 10.1145/3183440.3195044
   Mossige M, 2014, LECT NOTES COMPUT SC, V8656, P25, DOI 10.1007/978-3-319-10428-7_6
   Mourao E, 2020, INFORM SOFTWARE TECH, V123, DOI 10.1016/j.infsof.2020.106294
   Myers M. D., 2007, Information and Organization, V17, P2, DOI 10.1016/j.infoandorg.2006.11.001
   Nebut C, 2006, IEEE T SOFTWARE ENG, V32, P140, DOI 10.1109/TSE.2006.22
   Nesic Damir, 2019, ESEC/FSE 2019: Proceedings of the 2019 27th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering, P62, DOI 10.1145/3338906.3338974
   Niemczyk S, 2015, 2015 IEEE/ACM 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS, P127, DOI 10.1109/SEAMS.2015.21
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Olaechea R, 2018, 2018 IEEE/ACM 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS), P69, DOI 10.1145/3194133.3194143
   Olszewska JI, 2017, IEEE ROMAN, P189, DOI 10.1109/ROMAN.2017.8172300
   Ozdemir U, 2014, J INTELL ROBOT SYST, V74, P371, DOI 10.1007/s10846-013-9900-0
   Pant YV, 2015, REAL TIM SYST SYMP P, P43, DOI 10.1109/RTSS.2015.12
   Perez B, 2009, 4 INT C SOFTWARE DAT
   Queiroz PGG, 2014, 26 INT C SOFTW ENG K, P71
   Quigley M., 2009, ICRA WORKSH OP SOURC, VVolume 3, P5
   Risler M, 2008, AAMAS08, P12
   Rollenhagen M, 2019, P 2019 3 INT S COMP, P1
   Rouxel B, 2020, GPCE '2020: PROCEEDINGS OF THE 19TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING: CONCEPTS AND EXPERIENCES, P70, DOI 10.1145/3425898.3426954
   Rubin J., 2013, SPLC, P101
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Saglietti Francesca, 2016, MORSE 16 P 3 WORKSHO, P17, DOI DOI 10.1145/3022099.3022102
   Schillinger P, 2021, ROBOT AUTON SYST, V145, DOI 10.1016/j.robot.2021.103866
   Schillinger P, 2018, INT J ROBOT RES, V37, P818, DOI 10.1177/0278364918774135
   Seiger Ronny., 2015, P 2015 JOINT MORSEVA, P49
   Service RW, 2009, ORGAN RES METHODS, V12, P614, DOI 10.1177/1094428108324514
   Silva RF, 2013, ICEIS: PROCEEDINGS OF THE 15TH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS - VOL 2, P257, DOI 10.5220/0004446802570264
   SPARC, 2016, ROB 2020 MULT ROADM
   Steck A., 2011, 2011 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS 2011), P2064, DOI 10.1109/IROS.2011.6048337
   Steiner Eduardo, 2013, CLEIej, V16, P7
   Thomas J., 2011, Workshop on Variability Modeling of Software-Intensive Systems, Volume, V5, P137
   van der Linden F. J., 2007, Software Product Lines in Action: the Best Industrial Practice in Product Line Engineering
   Ventre-Dominey J, 2019, SCI REP-UK, V9, DOI 10.1038/s41598-019-46528-7
   Verner JM, 2009, INT CONF RES CHAL, P313, DOI 10.1109/RCIS.2009.5089295
   Vierhauser M., 2019, IEEE Transactions on Software Engineering, P1
   Wirkus M, 2020, J INTELL ROBOT SYST, V100, P1283, DOI 10.1007/s10846-020-01234-9
   Wohlin C., 2012, Experimentation in Software Engineering
NR 124
TC 4
Z9 4
U1 1
U2 10
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2023
VL 28
IS 2
AR 24
DI 10.1007/s10664-022-10231-5
PG 67
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 7I0VV
UT WOS:000903614800001
PM 36588914
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Young, JM
   Bittner, PM
   Walkingshaw, E
   Thüm, T
AF Young, Jeffrey M.
   Bittner, Paul Maximilian
   Walkingshaw, Eric
   Thuem, Thomas
TI Variational satisfiability solving: efficiently solving lots of related
   SAT problems
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Satisfiability solving; Variation; Choice calculus; Software product
   lines
ID SOFTWARE PRODUCT LINES; SYSTEMS
AB Incremental satisfiability (SAT) solving is an extension of classic SAT solving that enables solving a set of related SAT problems by identifying and exploiting shared terms. However, using incremental solvers effectively is hard since performance is sensitive to the input order of subterms and results must be tracked manually. For analyses that generate sets of related SAT problems, such as those in software product lines, incremental solvers are either not used or their use is not clearly described in the literature. This paper translates the ordering problem to an encoding problem and automates the use of incremental solving. We introduce variational SAT solving, which differs from incremental solving by accepting all related problems as a single variational input and returning all results as a single variational output. Variational solving syntactically encodes differences in related SAT problems as local points of variation. With this syntax, our approach automates the interaction with the incremental solver and enables a method to automatically optimize sharing in the input. To evaluate these ideas, we formalize a variational SAT algorithm, construct a prototype variational solver, and perform an empirical analysis on two real-world datasets that applied incremental solvers to software evolution scenarios. We show, assuming a variational input, that the prototype solver scales better for these problems than four off-the-shelf incremental solvers while also automatically tracking individual results.
C1 [Young, Jeffrey M.] IOHK, Longmont, CO USA.
   [Bittner, Paul Maximilian; Thuem, Thomas] Univ Ulm, Ulm, Germany.
C3 Ulm University
RP Bittner, PM (corresponding author), Univ Ulm, Ulm, Germany.
EM jeffrey.young@iohk.io; paul.bittner@uni-ulm.de; ewalkingshaw@acm.org;
   thomas.thuem@uni-ulm.de
OI Bittner, Paul Maximilian/0000-0001-9388-0649; Thum,
   Thomas/0000-0001-8069-9584; Young, Jeffrey M./0000-0002-2935-772X
FU German Research Foundation within the project VariantSync [TH 2387/1-1]
FX This work has been partially supported by the German Research Foundation
   within the project VariantSync (TH 2387/1-1).
CR Acher Mathieu, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P424, DOI 10.1109/ASE.2011.6100089
   Aloul FA, 2002, IEEE/ACM INTERNATIONAL CONFERENCE ON CAD-02, DIGEST OF TECHNICAL PAPERS, P450, DOI 10.1109/ICCAD.2002.1167571
   Ananieva S, 2016, PROCEEDINGS OF THE 7TH INTERNATIONAL WORKSHOP ON FEATURE-ORIENTED SOFTWARE DEVELOPMENT (FOSD'16), P18, DOI 10.1145/3001867.3001870
   [Anonymous], 2019, R LANG ENV STAT COMP
   [Anonymous], 2010, J SATISFIABIL BOOLEA, DOI DOI 10.3233/SAT190075
   Apel S., 2010, FOSD, P65
   Ataei P, 2018, VLDB WORKSHOP POLYST
   Ataei P, 2021, ACM SIGPLAN INT C GE
   Ataei P, 2021, INT WORKING C VARIAB
   Ataei P, 2017, INT S DATABASE PROGR, P111
   Austin TH, 2012, POPL 12: PROCEEDINGS OF THE 39TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P165
   Austin ThomasH., 2013, P 2013 ACM SIGPLAN W, P15, DOI DOI 10.1145/2465106.2465121
   Balyo Tomas, 2020, Department of Computer Science Report Series B
   Barrett Clark, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P171, DOI 10.1007/978-3-642-22110-1_14
   Barrett C., 2016, The Satisfiability Modulo Theories Library (SMT-LIB)
   Barrett C., 2010, P 8 INT WORKSHOP SAT, V13, P14
   Barrett C.W., 2018, Handbook of Model Checking, P305, DOI DOI 10.1007/978-3-319-10575-8_11
   Batory D, 2005, LECT NOTES COMPUT SC, V3714, P7
   Benavides D, 2005, LECT NOTES COMPUT SC, V3520, P491
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Biere A, 2009, FRONT ARTIF INTEL AP, V185, P457, DOI 10.3233/978-1-58603-929-5-457
   Bittnere PM, 2019, LECT NOTES COMPUT SC, V11724, P127, DOI 10.1007/978-3-030-30446-1_7
   Bodden E, 2013, ACM SIGPLAN NOTICES, V48, P355, DOI 10.1145/2499370.2491976
   Brummayer R, 2021, BOOLECTOR SATISFIABI
   Brummayer R, 2009, LECT NOTES COMPUT SC, V5505, P174, DOI 10.1007/978-3-642-00768-2_16
   Campora JP, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3236793
   Campora JP, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3158103
   Chen S, 2016, EUROPEAN C OBJECT OR, V56
   Chen S, 2017, J VISUAL LANG COMPUT, V39, P10, DOI 10.1016/j.jvlc.2016.07.001
   Chen S, 2014, S VIS LANG HUM CEN C, P145, DOI 10.1109/VLHCC.2014.6883038
   Chen S, 2014, ACM T PROGR LANG SYS, V36, DOI 10.1145/2518190
   Chen S, 2014, ACM SIGPLAN NOTICES, V49, P583, DOI 10.1145/2535838.2535863
   Chen S, 2012, ACM SIGPLAN NOTICES, V47, P29, DOI 10.1145/2398856.2364535
   Chih-Long Lin, 1994, Algorithms and Computation. 5th International Symposium, ISAAC '94 Proceedings, P74
   CHRISTOPHE J, 1995, DES AUT CON, P641
   Claessen K, 2000, ACM SIGPLAN NOTICES, V35, P268, DOI 10.1145/357766.351266
   CLARKE EM, 1986, ACM T PROGR LANG SYS, V8, P244, DOI 10.1145/5397.5399
   Classen A, 2013, IEEE T SOFTWARE ENG, V39, P1069, DOI 10.1109/TSE.2012.86
   Competition SAT, 2021, SAT COMP 2021 INCR L
   Czarnecki K., 2006, GPCE, P211
   Czarnecki K, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P23, DOI 10.1109/SPLINE.2007.24
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Dutertre B, 2014, LECT NOTES COMPUT SC, V8559, P737, DOI 10.1007/978-3-319-08867-9_49
   Eén N, 2004, LECT NOTES COMPUT SC, V2919, P502, DOI 10.1007/978-3-540-24605-3_37
   Een N., 2003, ELECT NOTES THEORETI, V89, P543, DOI 10.1016/s1571-0661(05)82542-3
   Erkok L, 2011, SBV SMT BASED VERIFI
   Erwig M, 2018, LECT NOTES ARTIF INT, V10871, P55, DOI 10.1007/978-3-319-91376-6_9
   Erwig M, 2011, ACM T SOFTW ENG METH, V21, DOI 10.1145/2063239.2063245
   Erwig Martin., 2013, 5th International Workshop on Feature-Oriented Software Development, FOSD'13, Indianapolis, IN, USA, October 26, 2013, P25, DOI DOI 10.1145/2528265.2528270
   Fenske W, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P316, DOI 10.1109/SANER.2017.7884632
   Galindo JA, 2019, COMPUTING, V101, P387, DOI 10.1007/s00607-018-0646-1
   Garson James, 2018, Stanford Encyclopedia of Philosophy
   Gent I. P., 1994, ECAI 94. 11th European Conference on Artificial Intelligence. Proceedings, P105
   HAMMING RW, 1950, BELL SYST TECH J, V29, P147, DOI 10.1002/j.1538-7305.1950.tb00463.x
   Harper R, 2016, Practical Foundations for Programming Languages
   HOLM S, 1979, SCAND J STAT, V6, P65
   Hooker JN, 1993, SOLVING INCREMENTAL, DOI [10.1184/R1/6708044.v1, DOI 10.1184/R1/6708044.V1]
   Huang SS, 2011, SCI COMPUT PROGRAM, V76, P376, DOI 10.1016/j.scico.2008.09.007
   Hudak P., 1992, ACM SIGPLAN Notices, V27, P1, DOI 10.1145/130697.130699
   Huet G., 1997, Journal of Functional Programming, V7, P549, DOI 10.1017/S0956796897002864
   Nguyen HV, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P907, DOI 10.1145/2568225.2568300
   Joonyoung Kim, 2000, Proceedings Design, Automation and Test in Europe Conference and Exhibition 2000 (Cat. No. PR00537), P380, DOI 10.1109/DATE.2000.840299
   Kästner C, 2012, ACM SIGPLAN NOTICES, V47, P773, DOI 10.1145/2398857.2384673
   Kästner C, 2011, ACM SIGPLAN NOTICES, V46, P805, DOI 10.1145/2076021.2048128
   Kastner Christian, 2011, P 5 WORKSHOP VARIABI, P127
   Kim J, 2000, PR IEEE COMP DESIGN, P379, DOI 10.1109/ICCD.2000.878311
   Kleene S.C., 1968, INTRO METAMATHEMATIC
   Kocher P, 2019, P IEEE S SECUR PRIV, P1, DOI 10.1109/SP.2019.00002
   Kowal M, 2017, ACM SIGPLAN NOTICES, V52, P132, DOI [10.1145/3093335.2993248, 10.1145/2993236.2993248]
   Krieter S, 2016, PROC INT SYSTEMS SOF, P60
   Krieter S, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P898, DOI 10.1145/3180155.3180159
   Labs R, 2020, REDIS
   Larabel M, 2020, GLOBAL SWITCH KILL L
   LEVENSHT.VI, 1965, DOKL AKAD NAUK SSSR+, V163, P845
   Liebig J, 2013, SCALABLE ANAL VARIAB
   Liebig Jorg, 2011, AOSD 11
   Lipp M, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P973
   Machado ID, 2014, INFORM SOFTWARE TECH, V56, P1183, DOI 10.1016/j.infsof.2014.04.002
   Mauro J, 2021, PROCEEDINGS OF 15TH INTERNATIONAL WORKING CONFERENCE ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS, VAMOS 2021, DOI 10.1145/3442391.3442405
   Mauro J, 2017, 21ST INTERNATIONAL SYSTEM & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 2, P18, DOI 10.1145/3109729.3109752
   Medeiros F, 2016, PROC INT CONF SOFTW, P643, DOI 10.1145/2884781.2884793
   Meinicke J., 2014, THESIS U MAGDEBURG
   Meinicke J, 2019, THESIS U MAGDEBURG
   Mendonca M, 2008, GPCE'08: PROCEEDINGS OF THE ACM SIGPLAN SEVENTH INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING AND COMPONENT ENGINEERING, P13
   Meng Meng, 2017, INT WORK VAR MOD SOF, P28
   Micinski K, 2020, P IEEE COMPUT SECUR, P184, DOI 10.1109/CSF49147.2020.00021
   Moskewicz MW, 2001, DES AUT CON, P530, DOI 10.1109/DAC.2001.935565
   Nadel A, 2014, LECT NOTES COMPUT SC, V8561, P206, DOI 10.1007/978-3-319-09284-3_16
   National Institute of Standards and Technology, 2020, NIST E HDB STAT METH
   Nieke M, 2018, PROCEEDINGS OF THE 17TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING: CONCEPTS AND EXPERIENCES (GPCE'18), P188, DOI 10.1145/3278122.3278123
   OSullivan B, 2009, CRITERIAN HASKELL MI
   Rescher N., 1969, Many-Valued Logic
   Russell S, 2009, ARTIFICIAL INTELLIGE, Vthird
   Sayyad AS, 2013, IEEE INT CONF AUTOM, P465, DOI 10.1109/ASE.2013.6693104
   Schmitz T, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P1617, DOI 10.1145/3243734.3243806
   Schröter R, 2016, PROC INT CONF SOFTW, P667, DOI 10.1145/2884781.2884823
   Siegmund N, 2012, SOFTWARE QUAL J, V20, P487, DOI 10.1007/s11219-011-9152-9
   Smeltzer K, 2017, PROCEEDINGS OF THE 8TH ACM SIGPLAN INTERNATIONAL WORKSHOP ON FEATURE-ORIENTED SOFTWARE DEVELOPMENT (FOSD'17), P31, DOI 10.1145/3141848.3141852
   Tartler R, 2011, EUROSYS 11: PROCEEDINGS OF THE EUROSYS 2011 CONFERENCE, P47
   Thaker Sahil., 2007, P 6 INT C GENERATIVE, P95
   Thüm T, 2014, ACM COMPUT SURV, V47, DOI 10.1145/2580950
   Tinelli C, 2003, SMT LIB FORMAT INITI
   Varshosaz M, 2018, SPLC'18: PROCEEDINGS OF THE 22ND INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL 1, P1, DOI 10.1145/3233027.3233035
   Visser Willem, 2012, P FSE, DOI DOI 10.1145/2393596.2393665
   von Rhein A, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P178, DOI 10.1109/ICSE.2015.39
   Walkingshaw E, 2013, THESIS OREGON STATE
   Walkingshaw Eric, 2014, ACM SIGPLAN S NEW ID, P213
   Whittemore J, 2001, DES AUT CON, P542, DOI 10.1109/DAC.2001.935567
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Wong CP, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3276487
   Wong CP., 2021, THESIS CARNEGIE MELL
   Young J, 2021, THESIS OREGON STATE
   Young JM, 2020, P 24 ACM C SYSTEMS S, Va, DOI [10.1145/3382025.3414965, DOI 10.1145/3382025.3414965]
   Zhang LT, 2001, ICCAD 2001: IEEE/ACM INTERNATIONAL CONFERENCE ON COMPUTER AIDED DESIGN, DIGEST OF TECHNICAL PAPERS, P279, DOI 10.1109/ICCAD.2001.968634
NR 114
TC 1
Z9 1
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN
PY 2023
VL 28
IS 1
AR 14
DI 10.1007/s10664-022-10217-3
PG 53
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 6N4TU
UT WOS:000889551000002
OA hybrid
DA 2024-07-18
ER

PT J
AU Derakhshanfar, P
   Devroey, X
   Zaidman, A
AF Derakhshanfar, Pouria
   Devroey, Xavier
   Zaidman, Andy
TI Basic block coverage for search-based unit testing and crash
   reproduction
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Automated crash reproduction; Search-based software testing;
   Evolutionary algorithm; Secondary objective
ID EMPIRICAL-EVALUATION; GENERATION; ALGORITHMS
AB Search-based techniques have been widely used for white-box test generation. Many of these approaches rely on the approach level and branch distance heuristics to guide the search process and generate test cases with high line and branch coverage. Despite the positive results achieved by these two heuristics, they only use the information related to the coverage of explicit branches (e.g., indicated by conditional and loop statements), but ignore potential implicit branchings within basic blocks of code. If such implicit branching happens at runtime (e.g., if an exception is thrown in a branchless-method), the existing fitness functions cannot guide the search process. To address this issue, we introduce a new secondary objective, called Basic Block Coverage (BBC), which takes into account the coverage level of relevant basic blocks in the control flow graph. We evaluated the impact of BBC on search-based unit test generation (using the DvsTAMOSA algorithm) and search-based crash reproduction (using the STDistance and WeightedSum fitness functions). Our results show that for unit test generation, BBC improves the branch coverage of the generated tests. Although small (similar to 1.5%), this improvement in the branch coverage is systematic and leads to an increase of the output domain coverage and implicit runtime exception coverage, and of the diversity of runtime states. In terms of crash reproduction, in the combination of STDistance and WeightedSum, BBC helps in reproducing 3 new crashes for each fitness function. BBC significantly decreases the time required to reproduce 43.5% and 45.1% of the crashes using STDistance and WeightedSum, respectively. For these crashes, BBC reduces the consumed time by 71.7% (for STDistance) and 68.7% (for WeightedSum) on average.
C1 [Derakhshanfar, Pouria; Zaidman, Andy] Delft Univ Technol, Postbus 5, NL-2600 AA Delft, Netherlands.
   [Devroey, Xavier] Univ Namur, Namur Digital Inst, Rue Bruxelles 61, B-5000 Namur, Belgium.
C3 Delft University of Technology; University of Namur
RP Derakhshanfar, P (corresponding author), Delft Univ Technol, Postbus 5, NL-2600 AA Delft, Netherlands.
EM p.derakhshanfar@tudelft.nl; xavier.devroey@unamur.be;
   a.e.zaidman@tudelft.nl
RI Devroey, Xavier/I-3918-2019; Zaidman, Andy/O-6542-2014
OI Devroey, Xavier/0000-0002-0831-7606; Derakhshanfar,
   Pouria/0000-0003-3549-9019; Zaidman, Andy/0000-0003-2413-3935
FU EU [731529, 957254]; Dutch Science Foundation NWO [VI.C.182.032]
FX This research was partially funded by the EU Horizon 2020
   ICT-10-2016-RIA "STAMP" project (No.731529), the EU Horizon 2020
   H2020-ICT-2020-1-RIA "COSMOS" project (No.957254), and the Vici
   "TestShift" project (No. VI.C.182.032) from the Dutch Science Foundation
   NWO.
CR Almasi MM, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P263, DOI 10.1109/ICSE-SEIP.2017.27
   Alshahwan N., 2014, Proceedings of the 2014 International Symposium on Software Testing and Analysis, P181
   [Anonymous], 1970, ACM SIGPLAN NOTICES, DOI DOI 10.1145/390013.808479
   Arcuri A, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3293455
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Arcuri A, 2013, EMPIR SOFTW ENG, V18, P594, DOI 10.1007/s10664-013-9249-9
   Bin Noor T, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P58, DOI 10.1109/ISSRE.2015.7381799
   Borba P., 2010, LNCS, V6153, DOI [10.1007/978-3-642-14335-9, DOI 10.1007/978-3-642-14335-94]
   Campos J, 2018, INFORM SOFTWARE TECH, V104, P207, DOI 10.1016/j.infsof.2018.08.010
   Chen N, 2015, IEEE T SOFTWARE ENG, V41, P198, DOI 10.1109/TSE.2014.2363469
   Derakhshanfar Pouria, 2020, Search-Based Software Engineering. 12th International Symposium, SSBSE 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12420), P42, DOI 10.1007/978-3-030-59762-7_4
   Derakhshanfar P, 2021, PDERAKHSHANFAREMSE B, DOI [10.5281/zenodo.4665874, DOI 10.5281/ZENODO.4665874]
   Derakhshanfar P, 2020, REPLICATION PACKAGE, DOI [10.5281/zenodo.3953519, DOI 10.5281/ZENODO.3953519]
   Derakhshanfar P, 2021, Arxiv, DOI arXiv:2001.04221
   Derakhshanfar P, 2020, IEEE INT CONF AUTOM, P211, DOI 10.1145/3324884.3416643
   Derakhshanfar P, 2020, SOFTW TEST VERIF REL, V30, DOI 10.1002/stvr.1733
   Devroey X., 2020, P IEEEACM 42 INT C S, P545, DOI DOI 10.1145/3387940.3392265
   Fraser G, 2015, EMPIR SOFTW ENG, V20, P783, DOI 10.1007/s10664-013-9299-z
   Fraser G, 2015, EMPIR SOFTW ENG, V20, P611, DOI 10.1007/s10664-013-9288-2
   Fraser G, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2685612
   Fraser G, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P362, DOI 10.1109/ICST.2013.51
   Fraser G, 2013, IEEE T SOFTWARE ENG, V39, P276, DOI 10.1109/TSE.2012.14
   Fraser Gordon, 2011, PROC 19 ACM SIGSOFT, P416, DOI 10.1145/2025113.2025179
   García S, 2009, J HEURISTICS, V15, P617, DOI 10.1007/s10732-008-9080-4
   HOWDEN WE, 1982, IEEE T SOFTWARE ENG, V8, P371, DOI 10.1109/TSE.1982.235571
   Japkowicz N., 2011, EVALUATING LEARNING, DOI [10.1017/CBO9780511921803, DOI 10.1017/CBO9780511921803]
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Kifetew F, 2019, 2019 IEEE/ACM 12TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST 2019), P15, DOI 10.1109/SBST.2019.00014
   Le T.-D. B., 2016, P 25 INT S SOFTW TES, P177, DOI DOI 10.1145/2931037.2931049
   Li YC, 2011, LECT NOTES COMPUT SC, V6956, P237, DOI 10.1007/978-3-642-23716-4_21
   Lu YF, 2016, PROC INT CONF SOFTW, P535, DOI 10.1145/2884781.2884874
   Ma L, 2015, IEEE INT CONF AUTOM, P212, DOI 10.1109/ASE.2015.49
   Martinez M., 2016, P 25 INT S SOFTWARE, P441, DOI 10.1145/2931037
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   McMinn P., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P153, DOI 10.1109/ICSTW.2011.100
   Nayrolles M, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P101, DOI 10.1109/SANER.2015.7081820
   OFFUTT AJ, 1994, IEEE T SOFTWARE ENG, V20, P337, DOI 10.1109/32.286422
   Panichella A, 2021, INFORM SOFTWARE TECH, V130, DOI 10.1016/j.infsof.2020.106411
   Panichella A, 2018, INFORM SOFTWARE TECH, V104, P236, DOI 10.1016/j.infsof.2018.08.009
   Panichella A, 2018, IEEE T SOFTWARE ENG, V44, P122, DOI 10.1109/TSE.2017.2663435
   Papadakis M, 2011, SOFTWARE QUAL J, V19, P691, DOI 10.1007/s11219-011-9142-y
   Pearson S, 2017, PROC INT CONF SOFTW, P609, DOI 10.1109/ICSE.2017.62
   Rössler J, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P114, DOI 10.1109/ICST.2013.18
   Rojas Jose Miguel, 2015, Search-Based Software Engineering. 7th International Symposium, SSBSE 2015. Proceedings: LNCS 9275, P93, DOI 10.1007/978-3-319-22183-0_7
   Molina UR, 2018, PROCEEDINGS 2018 IEEE/ACM 11TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST), P22, DOI 10.1145/3194718.3194728
   Shamshiri S, 2015, IEEE INT CONF AUTOM, P201, DOI 10.1109/ASE.2015.86
   Smith EK, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P532, DOI 10.1145/2786805.2786825
   Soltani M, 2020, IEEE T SOFTWARE ENG, V46, P1294, DOI 10.1109/TSE.2018.2877664
   Soltani M, 2020, EMPIR SOFTW ENG, V25, P96, DOI 10.1007/s10664-019-09762-1
   Soltani M, 2018, LECT NOTES COMPUT SC, V11036, P325, DOI 10.1007/978-3-319-99241-9_18
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Xiao XS, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P611, DOI 10.1145/1985793.1985876
   Xuan JF, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P910, DOI 10.1145/2786805.2803206
   Zeller A, 2009, WHY PROGRAMS FAIL: A GUIDE TO SYSTEMATIC DEBUGGING, 2ND EDITION
NR 54
TC 0
Z9 0
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2022
VL 27
IS 7
AR 192
DI 10.1007/s10664-022-10155-0
PG 41
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 5D0KB
UT WOS:000864638900003
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Yahmed, AH
   Ben Braiek, H
   Khomh, F
   Bouzidi, S
   Zaatour, R
AF Yahmed, Ahmed Haj
   Ben Braiek, Houssem
   Khomh, Foutse
   Bouzidi, Sonia
   Zaatour, Rania
TI DiverGet: a Search-Based Software Testing approach for Deep Neural
   Network Quantization assessment
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Quantization assessment; Deep Learning; Search-Based Software Testing;
   Metamorphic Relations; Hyperspectral images
AB Quantization is one of the most applied Deep Neural Network (DNN) compression strategies, when deploying a trained DNN model on an embedded system or a cell phone. This is owing to its simplicity and adaptability to a wide range of applications and circumstances, as opposed to specific Artificial Intelligence (AI) accelerators and compilers that are often designed only for certain specific hardware (e.g., Google Coral Edge TPU). With the growing demand for quantization, ensuring the reliability of this strategy is becoming a critical challenge. Traditional testing methods, which gather more and more genuine data for better assessment, are often not practical because of the large size of the input space and the high similarity between the original DNN and its quantized counterpart. As a result, advanced assessment strategies have become of paramount importance. In this paper, we present DiverGet, a search-based testing framework for quantization assessment. DiverGet defines a space of metamorphic relations that simulate naturally-occurring distortions on the inputs. Then, it optimally explores these relations to reveal the disagreements among DNNs of different arithmetic precision. We evaluate the performance of DiverGet on state-of-the-art DNNs applied to hyperspectral remote sensing images. We chose the remote sensing DNNs as they're being increasingly deployed at the edge (e.g., high-lift drones) in critical domains like climate change research and astronomy. Our results show that DiverGet successfully challenges the robustness of established quantization techniques against naturally-occurring shifted data, and outperforms its most recent concurrent, DiffChaser, with a success rate that is (on average) four times higher.
C1 [Yahmed, Ahmed Haj; Ben Braiek, Houssem; Khomh, Foutse] Polytech Montreal, SWAT Lab, Montreal, PQ, Canada.
   [Khomh, Foutse] Mila Quebec Artificial Intelligence Inst, Montreal, PQ, Canada.
   [Bouzidi, Sonia] Natl Inst Appl Sci & Technol, Tunis, Tunisia.
   [Zaatour, Rania] Potsdam Inst Climate Impact Res, Potsdam, Germany.
C3 Universite de Montreal; Polytechnique Montreal; Universite de Carthage;
   Potsdam Institut fur Klimafolgenforschung
RP Yahmed, AH (corresponding author), Polytech Montreal, SWAT Lab, Montreal, PQ, Canada.
EM ahmed.haj-yahmed@polymtl.ca; houssem.ben-braiek@polymtl.ca;
   foutse.khomh@polymtl.ca; sonia.bouzidi@insat.u-carthage.tn;
   raniaz@pik-potsdam.de
OI Haj Yahmed, Ahmed/0000-0002-3749-4679
FU Fonds de Recherche du Quebec (FRQ); Natural Sciences and Engineering
   Research Council of Canada (NSERC); Canadian Institute for Advanced
   Research (CIFAR); Huawei Canada
FX We acknowledge the support from the following organizations and
   companies: Fonds de Recherche du Quebec (FRQ), Natural Sciences and
   Engineering Research Council of Canada (NSERC), Canadian Institute for
   Advanced Research (CIFAR), and Huawei Canada. However, the findings and
   opinions expressed in this paper are those of the authors and do not
   necessarily represent or reflect those organizations/companies.
CR Abadi M, 2016, Arxiv, DOI [arXiv:1605.08695, DOI 10.48550/ARXIV.1605.08695]
   Agili H., 2014, GEOMATICA, V68, P331, DOI [10.5623/cig2014-407, DOI 10.5623/CIG2014-407]
   Alzantot M, 2019, Arxiv, DOI arXiv:1805.11090
   [Anonymous], 2006, Elements of Information Theory
   Ben Braiek H, 2020, J SYST SOFTWARE, V164, DOI 10.1016/j.jss.2020.110542
   Biggio B, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P2154, DOI 10.1145/3243734.3264418
   Bouzidi S, 2019, J APPL REMOTE SENS, V13, DOI 10.1117/1.JRS.13.034501
   Braiek H.B., 2019, ARXIV
   Deng J., 2009, IEEE C COMP VIS PATT
   Dua Y, 2020, OPT ENG, V59, DOI 10.1117/1.OE.59.9.090902
   Eberhart R.C., 1995, Proc Int Symp Micro Mach Hum Sci, P39, DOI [DOI 10.1109/MHS.1995.494215, 10.1109/mhs.1995.494215]
   Gholami A., 2021, arXiv
   Guo YH, 2018, Arxiv, DOI [arXiv:1808.04752, DOI 10.48550/ARXIV.1808.04752]
   He KM, 2015, Arxiv, DOI [arXiv:1512.03385, 10.48550/arxiv.1512.03385]
   Hess M. R., 2004, ANN M AM ED RES ASS, P1
   Hinton G, 2012, IEEE SIGNAL PROC MAG, V29, P82, DOI 10.1109/MSP.2012.2205597
   Ho YC, 2002, J OPTIMIZ THEORY APP, V115, P549, DOI 10.1023/A:1021251113462
   Hu Q, 2022, ARXIV, DOI DOI 10.48550/ARXIV.2204.04220
   Jaccard P., 1912, New Phytologist, V11, P37, DOI [10.1111/j.1469-8137.1912.tb05611.x, DOI 10.1111/J.1469-8137.1912.TB05611.X]
   Joshi SK, 2020, KNOWL-BASED SYST, V189, DOI 10.1016/j.knosys.2019.105094
   Krishnamoorthi R, 2018, Arxiv, DOI arXiv:1806.08342
   Krizhevsky A., 2014, The cifar-10 dataset
   KULLBACK S, 1987, AM STAT, V41, P340
   LeCun Y., 2010, MNIST HANDWRITTEN DI
   Ma L, 2018, IEEE INT CONF AUTOM, P120, DOI 10.1145/3238147.3238202
   McMinn P., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P153, DOI 10.1109/ICSTW.2011.100
   Mitchell M., 1998, INTRO GENETIC ALGORI
   Mosli R., 2019, arXiv
   Odena A, 2018, Arxiv, DOI arXiv:1807.10875
   Pei KX, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P1, DOI 10.1145/3132747.3132785
   Roy SK, 2020, IEEE GEOSCI REMOTE S, V17, P277, DOI 10.1109/LGRS.2019.2918719
   Salimans T, 2016, ADV NEUR IN, V29
   Shi Y.Q., 2017, Image and Video Compression for Multimedia Engineering: Fundamentals, Algorithms, and Standards, VSecond
   Thomos N, 2006, IEEE T IMAGE PROCESS, V15, P54, DOI 10.1109/TIP.2005.860338
   Tian YC, 2018, Arxiv, DOI arXiv:1708.08559
   van der Maaten L, 2008, J MACH LEARN RES, V9, P2579
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Wu H, 2020, Arxiv, DOI arXiv:2004.09602
   Xie XF, 2018, Arxiv, DOI arXiv:1809.01266
   Xie XF, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P5772
   Yang Guoan, 2007, Journal of Electronics (China), V24, P276, DOI 10.1007/s11767-006-0143-0
   Young T, 2018, Arxiv, DOI arXiv:1708.02709
   Yu J, 2019, IEEE INT C COMPUT, P16, DOI 10.1109/CSE/EUC.2019.00013
   Zaatour R, 2020, IEEE T GEOSCI REMOTE, V58, P7931, DOI 10.1109/TGRS.2020.2985260
   Zhong ZL, 2018, IEEE T GEOSCI REMOTE, V56, P847, DOI 10.1109/TGRS.2017.2755542
NR 46
TC 3
Z9 3
U1 0
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2022
VL 27
IS 7
AR 193
DI 10.1007/s10664-022-10202-w
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 5D0KB
UT WOS:000864638900001
DA 2024-07-18
ER

PT J
AU Herbold, S
   Trautsch, A
   Ledel, B
   Aghamohammadi, A
   Ghaleb, TA
   Chahal, KK
   Bossenmaier, T
   Nagaria, B
   Makedonski, P
   Ahmadabadi, MN
   Szabados, K
   Spieker, H
   Madeja, M
   Hoy, N
   Lenarduzzi, V
   Wang, SW
   Rodríguez-Pérez, G
   Colomo-Palacios, R
   Verdecchia, R
   Singh, P
   Qin, YH
   Chakroborti, D
   Davis, W
   Walunj, V
   Wu, HJ
   Marcilio, D
   Alam, O
   Aldaeej, A
   Amit, I
   Turhan, B
   Eismann, S
   Wickert, AK
   Malavolta, I
   Sulír, M
   Fard, F
   Henley, AZ
   Kourtzanidis, S
   Tuzun, E
   Treude, C
   Shamasbi, SM
   Pashchenko, I
   Wyrich, M
   Davis, J
   Serebrenik, A
   Albrecht, E
   Aktas, EU
   Strüber, D
   Erbel, J
AF Herbold, Steffen
   Trautsch, Alexander
   Ledel, Benjamin
   Aghamohammadi, Alireza
   Ghaleb, Taher A.
   Chahal, Kuljit Kaur
   Bossenmaier, Tim
   Nagaria, Bhaveet
   Makedonski, Philip
   Ahmadabadi, Matin Nili
   Szabados, Kristof
   Spieker, Helge
   Madeja, Matej
   Hoy, Nathaniel
   Lenarduzzi, Valentina
   Wang, Shangwen
   Rodriguez-Perez, Gema
   Colomo-Palacios, Ricardo
   Verdecchia, Roberto
   Singh, Paramvir
   Qin, Yihao
   Chakroborti, Debasish
   Davis, Willard
   Walunj, Vijay
   Wu, Hongjun
   Marcilio, Diego
   Alam, Omar
   Aldaeej, Abdullah
   Amit, Idan
   Turhan, Burak
   Eismann, Simon
   Wickert, Anna-Katharina
   Malavolta, Ivano
   Sulir, Matus
   Fard, Fatemeh
   Henley, Austin Z.
   Kourtzanidis, Stratos
   Tuzun, Eray
   Treude, Christoph
   Shamasbi, Simin Maleki
   Pashchenko, Ivan
   Wyrich, Marvin
   Davis, James
   Serebrenik, Alexander
   Albrecht, Ella
   Aktas, Ethem Utku
   Struber, Daniel
   Erbel, Johannes
TI A fine-grained data set and analysis of tangling in bug fixing commits
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Tangled changes; Tangled commits; Bug fix; Manual validation; Research
   turk; Registered report
ID INTERVAL ESTIMATION; DEFECT PREDICTION
AB Context Tangled commits are changes to software that address multiple concerns at once. For researchers interested in bugs, tangled commits mean that they actually study not only bugs, but also other concerns irrelevant for the study of bugs. Objective We want to improve our understanding of the prevalence of tangling and the types of changes that are tangled within bug fixing commits. Methods We use a crowd sourcing approach for manual labeling to validate which changes contribute to bug fixes for each line in bug fixing commits. Each line is labeled by four participants. If at least three participants agree on the same label, we have consensus. Results We estimate that between 17% and 32% of all changes in bug fixing commits modify the source code to fix the underlying problem. However, when we only consider changes to the production code files this ratio increases to 66% to 87%. We find that about 11% of lines are hard to label leading to active disagreements between participants. Due to confirmed tangling and the uncertainty in our data, we estimate that 3% to 47% of data is noisy without manual untangling, depending on the use case. Conclusion Tangled commits have a high prevalence in bug fixes and can lead to a large amount of noise in the data. Prior research indicates that this noise may alter results. As researchers, we should be skeptics and assume that unvalidated data is likely very noisy, until proven otherwise.
C1 [Herbold, Steffen; Ledel, Benjamin] Tech Univ Clausthal, Inst Software & Syst Engn, Clausthal Zellefeld, Germany.
   [Trautsch, Alexander; Makedonski, Philip; Albrecht, Ella; Erbel, Johannes] Univ Goettingen, Inst Comp Sci, Gottingen, Germany.
   [Aghamohammadi, Alireza] Sharif Univ Technol, Dept Comp Engn, Tehran, Iran.
   [Ghaleb, Taher A.] Univ Ottawa, Sch Elect Engn & Comp Sci, Ottawa, ON, Canada.
   [Chahal, Kuljit Kaur] Guru Nanak Dev Univ, Dept Comp Sci, Amritsar, Punjab, India.
   [Bossenmaier, Tim] Karlsruhe Inst Technol KIT, Karlsruhe, Germany.
   [Nagaria, Bhaveet; Hoy, Nathaniel] Brunel Univ London, Uxbridge, Middx, England.
   [Ahmadabadi, Matin Nili] Univ Tehran, Tehran, Iran.
   [Szabados, Kristof] Ericsson Hungary Ltd, Budapest, Hungary.
   [Spieker, Helge] Simula Res Lab, Oslo, Norway.
   [Madeja, Matej; Sulir, Matus] Tech Univ Kosice, Kosice, Slovakia.
   [Lenarduzzi, Valentina] LUT Univ, Lappeenranta, Finland.
   [Wang, Shangwen; Qin, Yihao; Wu, Hongjun] Natl Univ Def Technol, Changsha, Peoples R China.
   [Rodriguez-Perez, Gema; Fard, Fatemeh] Univ British Columbia, Kelowna, BC, Canada.
   [Colomo-Palacios, Ricardo] Ostfold Univ Coll, Halden, Norway.
   [Verdecchia, Roberto; Malavolta, Ivano] Vrije Univ Amsterdam, Amsterdam, Netherlands.
   [Singh, Paramvir] Univ Auckland, Auckland, New Zealand.
   [Chakroborti, Debasish] Univ Saskatchewan, Saskatoon, SK, Canada.
   [Davis, Willard] IBM Corp, Boulder, NY USA.
   [Walunj, Vijay] Univ Missouri, Kansas City, MO 64110 USA.
   [Marcilio, Diego] Univ Svizzera Italiana, Lugano, Switzerland.
   [Alam, Omar] Trent Univ, Peterborough, ON, Canada.
   [Aldaeej, Abdullah] Imam Abdulrahman Bin Faisal Univ, Dammam, Saudi Arabia.
   [Amit, Idan] Hebrew Univ Acumen, Jerusalem, Israel.
   [Turhan, Burak] Univ Oulu, Oulu, Finland.
   [Turhan, Burak] Monash Univ, Melbourne, Vic, Australia.
   [Eismann, Simon] Univ Wurzburg, Wurzburg, Germany.
   [Wickert, Anna-Katharina] Tech Univ Darmstadt, Darmstadt, Germany.
   [Henley, Austin Z.] Univ Tennessee, Knoxville, TN USA.
   [Kourtzanidis, Stratos] Univ Macedonia, Dept Appl Informat, Thessaloniki, Greece.
   [Tuzun, Eray] Dept Comp Engn, Ankara, Turkey.
   [Treude, Christoph] Univ Melbourne, Melbourne, Vic, Australia.
   [Shamasbi, Simin Maleki] Univ Ghent, Dept Business Informat & Operat Management, Ghent, Belgium.
   [Pashchenko, Ivan] TomTom BV, Amsterdam, Netherlands.
   [Wyrich, Marvin] Univ Stuttgart, Stuttgart, Germany.
   [Davis, James] Purdue Univ, W Lafayette, IN 47907 USA.
   [Serebrenik, Alexander] Eindhoven Univ Technol, Eindhoven, Netherlands.
   [Aktas, Ethem Utku] Softtech Inc, Res & Dev Ctr, TR-34947 Istanbul, Turkey.
   [Struber, Daniel] Radboud Univ Nijmegen, Nijmegen, Netherlands.
C3 TU Clausthal; University of Gottingen; Sharif University of Technology;
   University of Ottawa; Guru Nanak Dev University; Helmholtz Association;
   Karlsruhe Institute of Technology; Brunel University; University of
   Tehran; Ericsson; Technical University Kosice; Lappeenranta-Lahti
   University of Technology LUT; National University of Defense Technology
   - China; University of British Columbia; Ostfold University College;
   Vrije Universiteit Amsterdam; University of Auckland; University of
   Saskatchewan; International Business Machines (IBM); University of
   Missouri System; University of Missouri Kansas City; Universita della
   Svizzera Italiana; Trent University; Imam Abdulrahman Bin Faisal
   University; University of Oulu; Monash University; University of
   Wurzburg; Technical University of Darmstadt; University of Tennessee
   System; University of Tennessee Knoxville; University of Macedonia;
   University of Melbourne; Ghent University; University of Stuttgart;
   Purdue University System; Purdue University; Eindhoven University of
   Technology; Radboud University Nijmegen
RP Herbold, S (corresponding author), Tech Univ Clausthal, Inst Software & Syst Engn, Clausthal Zellefeld, Germany.
EM steffen.herbold@tu-clausthal.de;
   alexander.trautsch@cs.uni-goettingen.de; benjamin.ledel@tu-clausthal.de;
   aaghamohammadi@ce.sharif.edu; tghaleb@uottawa.ca;
   kuljitchahal.cse@gndu.ac.in; tim.bossenmaier@alumni.kit.edu;
   bhaveet.nagaria@brunel.ac.uk; makedonski@cs.uni-goettingen.de;
   matin_nili@alumni.ut; kristof.szabados@ericsson.com; helge@simula.no;
   matej.madeja@tuke.sk; nathaniel.hoy2@brunel.ac.uk;
   valentina.lenarduzzi@lut.fi; wangshangwen13@nudtedu.cn;
   gema.rodriguezperez@ubc.ca; ricardo.colomo-palacios@hiof.no;
   r.verdecchia@vu.nl; p.singh@auckland.ac.nz; yihaogin@nudt.edu.cn;
   debasish.chakroborti@usask.ca; wdavis@usibm.com; vbwgh6@umsystem.edu;
   wuhongjun15@nudt.edu.cn; diego.marcilio@usi.ch; omaralam@trentu.ca;
   aaaldaeej@iau.edu.sa; idan.amit@mail.huji.ac.il; burak.turhan@oulu.fi;
   simon.eismann@uni-wuerzburg.de; wickert@cs.tu-darmstadt.de;
   i.malavolta@vu.nl; matus.sulir@tuke.sk; Fatemeh.fard@ubc.ca;
   azh@utk.edu; ekourtzanidis@uom.edu.gr; eraytuzun@cs.bilkent.edu.gr;
   christoph.treude@unimelb.edu.au; simin.maleki@ugent.be;
   ivan.pashchenko@tomtom.com; marvin.wyrich@iste.uni-stuttgart.de;
   davisjam@purdue.edu; a.serebrenik@tue.nl;
   ella.albrecht@cs.uni-goettingen.de; utku.aktas@softtech.com.tr;
   d.strueber@cs.ru.nl; johannes.erbel@cs.uni-goettingen.de
RI Treude, Christoph/AAZ-6257-2021; Chakroborti, Debasish
   Chakroborti/HZI-3031-2023; Rodríguez-Pérez, Gema/AAN-7844-2020; Madeja,
   Matej/AAC-5893-2020; Sulír, Matúš/AAA-6376-2020; Turhan,
   Burak/G-7400-2011; Aldaeej, Abdullah/KTI-5552-2024; Tuzun,
   Eray/AAD-7282-2021; Malavolta, Ivano/E-9018-2017; Szabados,
   Kristof/K-8294-2018; Wang, Shangwen/IQW-8844-2023; Ghaleb, Taher
   A/I-9457-2018
OI Rodríguez-Pérez, Gema/0000-0002-0062-8418; Madeja,
   Matej/0000-0002-8197-1962; Sulír, Matúš/0000-0003-2221-9225; Turhan,
   Burak/0000-0003-1511-2163; Aldaeej, Abdullah/0000-0002-6405-1750; Tuzun,
   Eray/0000-0002-5550-7816; Wang, Shangwen/0000-0003-1469-2063; Ghaleb,
   Taher A/0000-0001-9336-7298; Treude, Christoph/0000-0002-6919-2149;
   Herbold, Steffen/0000-0001-9765-2803; Spieker,
   Helge/0000-0003-2494-4279; Henley, Austin/0000-0003-1069-2795;
   Serebrenik, Alexander/0000-0002-1418-0095; Fard,
   Fatemeh/0000-0002-4505-6257
FU Projekt DEAL
FX Open Access funding enabled and organized by Projekt DEAL.
CR Agresti A, 1998, AM STAT, V52, P119, DOI 10.2307/2685469
   Anderson A, 2013, P 22 INT C WORLD WID, DOI DOI 10.1145/2488388.2488398
   Arima R, 2018, IEEE WORK CONF MIN S, P336, DOI 10.1145/3196398.3196406
   Baltes S, 2020, ARXIV 200207764
   Bissyandé TF, 2013, EUR CON SFTWR MTNCE, P89, DOI 10.1109/CSMR.2013.19
   Brown LD, 2001, STAT SCI, V16, P101, DOI 10.1214/ss/1009213286
   CAMPBELL MJ, 1988, BRIT MED J, V296, P1454, DOI 10.1136/bmj.296.6634.1454
   Neto EC, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P380, DOI 10.1109/SANER.2018.8330225
   Cook T. D., 1979, Quasi-experimentation: Design analysis issues for field settings
   Dias M, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P341, DOI 10.1109/SANER.2015.7081844
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   DUNNETT CW, 1955, J AM STAT ASSOC, V50, P1096, DOI 10.2307/2281208
   FLEISS JL, 1971, PSYCHOL BULL, V76, P378, DOI 10.1037/h0031619
   Gazzola L, 2019, IEEE T SOFTWARE ENG, V45, P34, DOI 10.1109/TSE.2017.2755013
   Gopstein D, 2018, IEEE WORK CONF MIN S, P281, DOI 10.1145/3196398.3196432
   Grant S, 2013, IEEE WORK CONF MIN S, P65, DOI 10.1109/MSR.2013.6624007
   Gyimesi P, 2019, IEEE INT CONF SOFTW, P90, DOI 10.1109/ICST.2019.00019
   Herbold S, 2019, ISSUES SZZ EMPIRICAL
   Herbold S, 2020, **DATA OBJECT**, DOI 10.17605/OSF.IO/ACNWK
   Herbold S, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2020), P93, DOI 10.1145/3377816.3381721
   Herzig K, 2016, EMPIR SOFTW ENG, V21, P303, DOI 10.1007/s10664-015-9376-6
   Herzig K, 2013, IEEE WORK CONF MIN S, P121, DOI 10.1109/MSR.2013.6624018
   Herzig K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P392, DOI 10.1109/ICSE.2013.6606585
   Hindle Abram, 2008, P 2008 INT WORKING C, P99
   Nguyen HA, 2013, PROC INT SYMP SOFTW, P138, DOI 10.1109/ISSRE.2013.6698913
   Hosseini S, 2019, IEEE T SOFTWARE ENG, V45, P111, DOI 10.1109/TSE.2017.2770124
   HUTCHINS M, 1994, PROC INT CONF SOFTW, P191, DOI 10.1109/ICSE.1994.296778
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kawrykow D, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P351, DOI 10.1145/1985793.1985842
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kim S, 2006, IEEE INT CONF AUTOM, P81
   Kirch W., 2008, ENCY PUBLIC HLTH
   Kirinuki H., 2014, P 22 INT C PROGRAM C, P262
   Kirinuki H, 2016, ASIA PAC SOFWR ENG, P129, DOI [10.1109/APSEC.2016.028, 10.1109/APSEC.2016.17]
   Kochhar Pavneet Singh, 2014, P 2 ACM IEEE INT C, P803, DOI DOI 10.1145/2642937.2642997
   Kreutzer P, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P61, DOI [10.1145/2901739.2901749, 10.1109/MSR.2016.016]
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Le Goues C, 2015, IEEE T SOFTWARE ENG, V41, P1236, DOI 10.1109/TSE.2015.2454513
   Li Y, 2020, PROC INT CONF SOFTW, P602, DOI 10.1145/3377811.3380345
   Martinez M, 2017, EMPIR SOFTW ENG, V22, P1936, DOI 10.1007/s10664-016-9470-4
   Mills C, 2020, EMPIR SOFTW ENG, V25, P3086, DOI 10.1007/s10664-020-09823-w
   Mills C, 2018, PROC IEEE INT CONF S, P381, DOI 10.1109/ICSME.2018.00046
   Partachi PP, 2020, P 2020 ACM JOINT EUR
   Patton M.Q., 2014, Qualitative Research and Evaluation Methods, V4th
   Podsakoff PM, 2003, J APPL PSYCHOL, V88, P879, DOI 10.1037/0021-9010.88.5.879
   Rodríguez-Pérez G, 2020, EMPIR SOFTW ENG, V25, P1294, DOI 10.1007/s10664-019-09781-y
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Saha RK, 2018, IEEE WORK CONF MIN S, P10, DOI 10.1145/3196398.3196473
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Struder S, 2020, P INT SYSTEMS SOFTWA
   Tao Y, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P180, DOI 10.1109/MSR.2015.24
   Trautsch A, 2020, PROC INT CONF SOFTW, P25, DOI 10.1145/3377812.3382139
   Trautsch Alexander, 2019, ARXIVCSSE191202179
   Trautsch F, 2018, EMPIR SOFTW ENG, V23, P1036, DOI 10.1007/s10664-017-9537-x
   Tsantalis N, 2022, IEEE T SOFTWARE ENG, V48, P930, DOI 10.1109/TSE.2020.3007722
   Tsantalis N, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P483, DOI 10.1145/3180155.3180206
   Tufano M, 2019, PROC INT CONF SOFTW, P25, DOI 10.1109/ICSE.2019.00021
   Wang M, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1050, DOI 10.1109/ASE.2019.00101
   Werbach K., 2012, For the win: How game thinking can revolutionize your business
   Wohlin C., 2012, Experimentation in Software Engineering
   WUU Y, 1991, SOFTWARE PRACT EXPER, V21, P739, DOI 10.1002/spe.4380210706
   Yamashita S, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P657, DOI [10.1109/SANER48275.2020.9054861, 10.1109/saner48275.2020.9054861]
NR 65
TC 8
Z9 8
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2022
VL 27
IS 6
AR 125
DI 10.1007/s10664-021-10083-5
PG 49
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 2Q1UP
UT WOS:000820214800001
OA Green Published, Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Zhu, WH
   Zhang, HX
   Hassan, AE
   Godfrey, MW
AF Zhu, Wenhan
   Zhang, Haoxiang
   Hassan, Ahmed E.
   Godfrey, Michael W.
TI An empirical study of question discussions on Stack Overflow
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Empirical software engineering; Stack Overflow; Q&A website;
   Communication channel; Commenting; Real-time chatting; Crowdsourced
   knowledge sharing
ID TAG RECOMMENDATION SYSTEM
AB Stack Overflow provides a means for developers to exchange knowledge. While much previous research on Stack Overflow has focused on questions and answers (Q&A), recent work has shown that discussions in comments also contain rich information. On Stack Overflow, discussions through comments and chat rooms can be tied to questions or answers. In this paper, we conduct an empirical study that focuses on the nature of question discussions. We observe that: (1) Question discussions occur at all phases of the Q&A process, with most beginning before the first answer is received. (2) Both askers and answerers actively participate in question discussions; the likelihood of their participation increases as the number of comments increases. (3) There is a strong correlation between the number of question comments and the question answering time (i.e., more discussed questions receive answers more slowly). Our findings suggest that question discussions contain a rich trove of data that is integral to the Q&A processes on Stack Overflow. We further suggest how future research can leverage the information in question discussions, along with the commonly studied Q&A information.
C1 [Zhu, Wenhan; Godfrey, Michael W.] Univ Waterloo, Software Analyt Grp SWAG, Waterloo, ON, Canada.
   [Zhang, Haoxiang] Huawei Canada, Ctr Software Excellence, Kingston, ON, Canada.
   [Hassan, Ahmed E.] Queens Univ, Software Anal & Intelligence Lab SAIL, Kingston, ON, Canada.
C3 University of Waterloo; Huawei Technologies; Queens University - Canada
RP Zhang, HX (corresponding author), Huawei Canada, Ctr Software Excellence, Kingston, ON, Canada.
EM w65zhu@uwaterloo.ca; haoxiang.zhang@acm.org; ahmed@cs.queensu.ca;
   migod@uwaterloo.ca
RI KHALIFA, AHMED khalifa/HKF-2246-2023; Godfrey, Michael W/A-1068-2008
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; 
CR Alkadhi R, 2017, IEEE WORK CONF MIN S, P436, DOI 10.1109/MSR.2017.43
   Allamanis M, 2013, IEEE WORK CONF MIN S, P53, DOI 10.1109/MSR.2013.6624004
   Anderson Ashton, 2012, P 18 ACM SIGKDD INT, DOI DOI 10.1145/2339530.2339665
   [Anonymous], 2014, Proceedings of the 17th ACM conference on Computer supported cooperative work social computing
   Asaduzzaman M, 2013, IEEE WORK CONF MIN S, P97, DOI 10.1109/MSR.2013.6624015
   Baltes S, 2018, IEEE WORK CONF MIN S, P319, DOI 10.1145/3196398.3196430
   Beyer S, 2015, INT C PROGRAM COMPRE, P94, DOI 10.1109/ICPC.2015.18
   Cai L, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P1134, DOI 10.1145/3338906.3341186
   Calefato F, 2018, INFORM SOFTWARE TECH, V94, P186, DOI 10.1016/j.infsof.2017.10.009
   Chatterjee Preetha, 2019, IEEE WORK CONF MIN S, P490, DOI [DOI 10.1109/MSR.2019.00075, 10.1109/MSR.2019.00075]
   Chen C, 2018, P 2018 ACM HUMAN COM, V2
   Chen MS, 2019, PROC INT CONF SOFTW, P536, DOI 10.1109/ICSE.2019.00065
   Choetkiertikul M, 2015, 2015 24TH AUSTRALASIAN SOFTWARE ENGINEERING CONFERENCE (ASWEC 2015), P155, DOI 10.1109/ASWEC.2015.28
   Chowdhury SA, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P422, DOI 10.1109/MSR.2015.54
   Dittrich Y., 2011, Proceedings of the 2011 6th IEEE International Conference on Global Software Engineering (ICGSE 2011), P103, DOI 10.1109/ICGSE.2011.21
   Ford DP, 2019, PAP PALAEONTOL, V5, P197, DOI 10.1002/spp2.1236
   Lin B, 2016, PROCEEDINGS OF THE 19TH ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING COMPANION, P333, DOI 10.1145/2818052.2869117
   Linares-Vasquez M, 2014, P 22 INT C PROGR C, P83
   Nasehi SM, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P25, DOI 10.1109/ICSM.2012.6405249
   Ponzanelli L, 2014, PROC IEEE INT CONF S, P541, DOI 10.1109/ICSME.2014.90
   Ragkhitwetsagul C, 2021, IEEE T SOFTWARE ENG, V47, P560, DOI 10.1109/TSE.2019.2900307
   Raymond E.S., 2006, ASK QUESTIONS SMART
   Rigby P. C., 2007, Proceedings of the 4th International Workshop on Mining Software Repositories (MSR '07), P23, DOI [10.1109/MSR.2007.35, DOI 10.1109/MSR.2007.35]
   Saha AK, 2013, IEEE WORK CONF MIN S, P73, DOI 10.1109/MSR.2013.6624009
   Sengupta S, 2020, P 53 HAW INT C SYST, P2898, DOI DOI 10.24251/HICSS.2020.354
   Shcherban S., 2020, P 14 ACM IEEE INT S
   Shihab E, 2009, PROC IEEE INT CONF S, P147, DOI 10.1109/ICSM.2009.5306333
   Shihab E, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P107, DOI 10.1109/MSR.2009.5069488
   Soni Abhishek, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P220, DOI 10.1109/MSR.2019.00044
   Sowe S, 2006, INFORM SOFTWARE TECH, V48, P1025, DOI 10.1016/j.infsof.2005.12.019
   Spearman C, 1904, AM J PSYCHOL, V15, P72, DOI 10.2307/1412159
   Srba I, 2016, IEEE SOFTWARE, V33, P80, DOI 10.1109/MS.2016.34
   Stack Exchange, 2021, STACK EXCHANGE DATA
   Storey MA, 2017, IEEE T SOFTWARE ENG, V43, P185, DOI 10.1109/TSE.2016.2584053
   Tian Qiongjie, 2013, P ICWSM
   Treude C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P804, DOI 10.1145/1985793.1985907
   Uddin G, 2020, INFORM SOFTWARE TECH, V122, DOI 10.1016/j.infsof.2020.106277
   Wang SW, 2020, IEEE T SOFTWARE ENG, V46, P1024, DOI 10.1109/TSE.2018.2874470
   Wang SW, 2018, EMPIR SOFTW ENG, V23, P1552, DOI 10.1007/s10664-017-9558-5
   Wang SW, 2018, EMPIR SOFTW ENG, V23, P800, DOI 10.1007/s10664-017-9533-1
   Wang SW, 2014, PROC IEEE INT CONF S, P291, DOI 10.1109/ICSME.2014.51
   Xia X, 2013, IEEE WORK CONF MIN S, P287, DOI 10.1109/MSR.2013.6624040
   Xianhao Jin, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P225, DOI 10.1109/MSR.2019.00045
   Yang D, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P391, DOI [10.1109/MSR.2016.047, 10.1145/2901739.2901767]
   Ye DH, 2017, EMPIR SOFTW ENG, V22, P375, DOI 10.1007/s10664-016-9430-z
   Zagalsky A., 2012, 2012 Third International Workshop on Recommendation Systems for Software Engineering (RSSE), P38, DOI 10.1109/RSSE.2012.6233407
   Zhang HX, 2021, IEEE T SOFTWARE ENG, V47, P2520, DOI 10.1109/TSE.2019.2954319
   Zhang HX, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3434279
   Zhang HX, 2021, IEEE T SOFTWARE ENG, V47, P850, DOI 10.1109/TSE.2019.2906315
   Zhen Wei Y G, 2019, 2019 KDD WORKSHOP DE
   Zhou JY, 2020, EMPIR SOFTW ENG, V25, P139, DOI 10.1007/s10664-019-09744-3
NR 51
TC 6
Z9 6
U1 4
U2 8
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2022
VL 27
IS 6
AR 148
DI 10.1007/s10664-022-10180-z
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 3O4IB
UT WOS:000836798500001
DA 2024-07-18
ER

PT J
AU Meloca, R
   Nunes, I
AF Meloca, Romulo
   Nunes, Ingrid
TI A comparative study of application-level caching recommendations at the
   method level
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software performance; Caching; Application-level caching; Memoisation;
   Empirical study; Web applications
ID WEB; PERFORMANCE
AB Performance and scalability requirements have a fundamental role in most large-scale software applications. To satisfy such requirements, caching is often used at various levels and infrastructure layers. Application-level caching-or memoization-is an increasingly used form of caching within the application boundaries, which consists of storing the results of computations in memory to avoid re-computing them. This is typically manually done by developers, who identify caching opportunities in the code and write additional code to manage the cache content. The task of identifying caching opportunities is a challenge because it requires the analysis of workloads and code locations where it is feasible and beneficial to cache objects. To aid developers in this task, there are approaches that automatically identify cacheable methods. Although such approaches have been individually evaluated, their effectiveness has not been compared. We thus in this paper present an empirical evaluation to compare the method recommendations made by the two existing application-level caching approaches at the method level, namely APLCache and MemoizeIt, using seven open-source web applications. We analyse the recommendations made by each approach as well as the hits, misses and throughput achieved with their valid caching recommendations. Our results show that the effectiveness of both approaches largely depends on the specific application, the presence of invalid recommendations and additional configurations, such as the time-to-live. By inspecting the obtained results, we observed in which cases the recommendations of each approach fail and succeed, which allowed us to derive a set of seven lessons learned that give directions for future approaches to support developers in the adoption of this type of caching.
C1 [Meloca, Romulo; Nunes, Ingrid] Univ Fed Rio Grande do Sul UFRGS, Inst Informat, Porto Alegre, RS, Brazil.
C3 Universidade Federal do Rio Grande do Sul
RP Meloca, R (corresponding author), Univ Fed Rio Grande do Sul UFRGS, Inst Informat, Porto Alegre, RS, Brazil.
EM rmmeloca@inf.ufrgs.br; ingridnunes@inf.ufrgs.br
RI Nunes, Ingrid/A-3715-2014
OI Nunes, Ingrid/0000-0002-6879-5829
FU CNPq [131271/2018-0, 313357/2018-8, 428157/2018-1]; Coordenacao de
   Aperfeicoamento de Pessoal de Nivel Superior - Brasil (CAPES) [001]
FX The authors would like to thank for CNPq grants ref. 131271/2018-0, ref.
   313357/2018-8, and ref. 428157/2018-1. This study was financed in part
   by the Coordenacao de Aperfeicoamento de Pessoal de Nivel Superior
   -Brasil (CAPES) -Finance Code 001.
CR Abbott Martin L, 2009, The art of scalability: Scalable web architecture, processes
   Ahmed WA, 2011, EXPERT SYST APPL, V38, P14715, DOI 10.1016/j.eswa.2011.05.009
   Ali W, 2012, DECIS SUPPORT SYST, V53, P565, DOI 10.1016/j.dss.2012.04.011
   Alici Sadiye, 2012, Advances in Information Retrieval. Proceedings of the 34th European Conference on IR Research (ECIR 2012), P401, DOI 10.1007/978-3-642-28997-2_34
   Candan KS, 2001, SIGMOD RECORD, V30, P532, DOI 10.1145/376284.375736
   Chen TH, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P666, DOI 10.1145/2950290.2950303
   Chen ZF, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P811, DOI 10.1145/3180155.3180229
   Della Toffola L, 2015, ACM SIGPLAN NOTICES, V50, P607, DOI [10.1145/2858965.2814290, 10.1145/2814270.2814290]
   Ghandeharizadeh S, 2012, 21 INT C SOFTW ENG D
   Ghandeharizadeh S, 2015, PROCEEDINGS, P9, DOI DOI 10.1137/1.9781611973754.1
   Guo Philip J, 2011, P 2011 INT S SOFTW T, P287
   Gupta P, 2011, LECT NOTES COMPUT SC, V7049, P329
   Huang J, 2010, P 2010 IEEE INT C SE, DOI [10.1109/SOCA.2010.5707138, DOI 10.1109/SOCA.2010.5707138]
   Hwang Jinho., 2013, Proc. International Conference on Autonomic Computing (ICAC), P33
   Larson PÅ, 2004, PROC INT CONF DATA, P177, DOI 10.1109/ICDE.2004.1319994
   Leszczynski P, 2010, LECT NOTES COMPUT SC, V6295, P363, DOI 10.1007/978-3-642-15576-5_28
   Maplesden D, 2015, P 6 ACM SPEC INT C P, P175
   Maplesden D, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P149, DOI 10.1109/ICSE.2015.143
   Megiddo N, 2004, COMPUTER, V37, P58, DOI 10.1109/MC.2004.1297303
   Mertz J, 2018, SOFTWARE PRACT EXPER, V48, P1218, DOI 10.1002/spe.2571
   Mertz J, 2018, ACM COMPUT SURV, V50, DOI 10.1145/3145813
   Mertz J, 2017, IEEE T SOFTWARE ENG, V43, P798, DOI 10.1109/TSE.2016.2633992
   Nguyen Khanh, 2013, Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering, ESEC/FSE 2013, page, P268
   Port DRK, 2010, P 9 USENIX S OP SYST, P279
   Qin XL, 2014, COMPUTING, V96, P415, DOI 10.1007/s00607-013-0365-6
   Radhakrishnan G, 2004, BELL LABS TECH J, V9, P165, DOI 10.1002/bltj.20011
   Saemundsson Trausti., 2014, P ACM S CLOUD COMPUT, P1
   Santhanakrishnan G, 2006, SOFTWARE PRACT EXPER, V36, P1179, DOI 10.1002/spe.755
   Scully Z, 2017, ACM SIGPLAN NOTICES, V52, P271, DOI 10.1145/3093333.3009891
   Selakovic M, 2016, PROC INT CONF SOFTW, P61, DOI 10.1145/2884781.2884829
   Subramanian R, 2006, INT SYMP MICROARCH, P385
   Sun HL, 2017, SOFTWARE PRACT EXPER, V47, P891, DOI 10.1002/spe.2462
   Venketesh P, 2009, IETE TECH REV, V26, P171, DOI 10.4103/0256-4602.50701
   Wang W, 2014, P 6 ASIAPACIFIC S IN, P35
   Xu GQ, 2012, ACM SIGPLAN NOTICES, V47, P1017, DOI 10.1145/2398857.2384690
   Xu GQ, 2013, ACM SIGPLAN NOTICES, V48, P111, DOI [10.1145/2509136.2509512, 10.1145/2544173.2509512]
   Xu GQ, 2012, LECT NOTES COMPUT SC, V7313, P738, DOI 10.1007/978-3-642-31057-7_32
   Xu YH, 2014, IEEE INTERNET COMPUT, V18, P41, DOI 10.1109/MIC.2013.80
   Yang Q, 2003, IEEE T KNOWL DATA EN, V15, P1050, DOI 10.1109/TKDE.2003.1209022
   Zaidenberg N, 2015, PROCEEDINGS OF THE 2015 INTERNATIONAL SYMPOSIUM ON PERFORMANCE EVALUATION OF COMPUTER AND TELECOMMUNICATION SYSTEMS (SPECTS)
NR 40
TC 1
Z9 1
U1 0
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2022
VL 27
IS 4
AR 88
DI 10.1007/s10664-021-10089-z
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0M8XM
UT WOS:000782431700001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Díaz, O
   Montalvillo, L
   Medeiros, R
   Azanza, M
   Fogdal, T
AF Diaz, Oscar
   Montalvillo, Leticia
   Medeiros, Raul
   Azanza, Maider
   Fogdal, Thomas
TI Visualizing the customization endeavor in product-based-evolving
   software product lines: a case of action design research
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE SPL evolution; Visual analytics; Code diffing; Action design research
ID SANKEY DIAGRAMS; CODE CHURN; FRAMEWORK; EVOLUTION; ENERGY; DELTA; FLOW
AB Software Product Lines (SPLs) aim at systematically reusing software assets, and deriving products (a.k.a., variants) out of those assets. However, it is not always possible to handle SPL evolution directly through these reusable assets. Time-to-market pressure, expedited bug fixes, or product specifics lead to the evolution to first happen at the product level, and to be later merged back into the SPL platform where the core assets reside. This is referred to as product-based evolution. In this scenario, deciding when and what should go into the next SPL release is far from trivial. Distinct questions arise. How much effort are developers spending on product customization? Which are the most customized core assets? To which extent is the core asset code being reused for a given product? We refer to this endeavor as Customization Analysis, i.e., understanding the functional increments in adjusting products from the last SPL platform release. The scale of the SPLs' code-base calls for customization analysis to be conducted through Visual Analytics tools. This work addresses the design principles for such tools through a joint effort between academia and industry, specifically, Danfoss Drives, a company division in charge of the P400 SPL. Accordingly, we adopt an Action Design Research approach where answers are sought by interacting with the practitioners in the studied situations. We contribute by providing informed goals for customization analysis as well as an intervention in terms of a visual analytics tool. We conclude by discussing to what extent this experience can be generalized to product-based evolving SPL organizations other than Danfoss Drives.
C1 [Diaz, Oscar; Montalvillo, Leticia; Medeiros, Raul; Azanza, Maider] Univ Basque Country, UPV EHU, San Sebastian, Spain.
   [Fogdal, Thomas] Danfoss, Grasten, Denmark.
C3 University of Basque Country
RP Azanza, M (corresponding author), Univ Basque Country, UPV EHU, San Sebastian, Spain.
EM oscar.diaz@ehu.eus; lmontalvillo@ikerlan.es; raul.medeiros@ehu.eus;
   maider.azanza@ehu.eus; tfogdal@danfoss.com
RI Diaz, Oscar/D-2822-2011; Azanza Sese, Maider/L-6400-2014
OI Diaz, Oscar/0000-0003-1334-4761; Medeiros, Raul/0000-0002-2413-9336;
   Azanza Sese, Maider/0000-0002-4537-1572
FU CRUE-CSIC agreement; Springer Nature; Spanish Ministry of Science,
   Innovation and Universities [RTI2018099818-B-I00]; MCIU-AEI
   [TIN2017-90644-REDT]; program 'Grupos de Investigacion del Sistema
   Univesitario Vasco 2019-2021' [IT1235-19]; Spanish Ministry of Science
   and Innovation
FX Open Access funding provided thanks to the CRUE-CSIC agreement with
   Springer Nature. This work is supported by the Spanish Ministry of
   Science, Innovation and Universities grant number RTI2018099818-B-I00
   and MCIU-AEI TIN2017-90644-REDT (TASOVA). ONEKIN enjoys support from the
   program 'Grupos de Investigacion del Sistema Univesitario Vasco
   2019-2021' under contract IT1235-19. Raul Medeiros enjoys a doctoral
   grant from the Spanish Ministry of Science and Innovation.
CR Agarwal R, 1998, INFORM SYST RES, V9, P204, DOI 10.1287/isre.9.2.204
   Ajila SA, 2007, J SYST SOFTWARE, V80, P74, DOI 10.1016/j.jss.2006.05.034
   [Anonymous], 2012, 16 INT SOFTW PROD LI, DOI DOI 10.1145/2362536.2362566
   [Anonymous], 2005, ILLUMINATING PATH RE
   [Anonymous], 2012, 16 INT SOFTWARE PROD, DOI DOI 10.1145/2362536.2362561
   [Anonymous], 2013, 17 INT SOFTW PROD LI, DOI DOI 10.1145/2491627.2491637
   Bartholdt J., 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P232, DOI 10.1109/SPLC.2011.16
   Basili V. R., 1994, Encyclopedia of Software Engineering, V1, P528
   Carbon R, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P180, DOI 10.1109/SPLC.2008.21
   Clements P., 2002, Software product lines
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   Deelstra S, 2005, J SYST SOFTWARE, V74, P173, DOI 10.1016/j.jss.2003.11.012
   Faragó C, 2015, IEEE INT WORK C SO, P141, DOI 10.1109/SCAM.2015.7335410
   Faust D, 2003, SOFTWARE PRACT EXPER, V33, P933, DOI 10.1002/spe.530
   Fogdal T., 2016, P SPLC, P252
   Gregor S, 2020, J ASSOC INF SYST, V21, P1622, DOI 10.17705/1jais.00649
   Hall GA, 2000, J SYST SOFTWARE, V54, P111, DOI 10.1016/S0164-1212(00)00031-5
   Hinterreiter D, 2020, LECT NOTES COMPUT SC, V12045, P300, DOI 10.1007/978-3-030-44429-7_21
   Hornbaek K, 2017, ACM T COMPUT-HUM INT, V24, DOI 10.1145/3127358
   Iida T, 2016, P 20 INT SYST SOFTW, P232, DOI [10.1145/2934466.2934490, DOI 10.1145/2934466.2934490]
   Jensen P, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P35, DOI 10.1109/SPLINE.2007.25
   KHOSHGOFTAAR TM, 1994, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P58, DOI 10.1109/ICSM.1994.336789
   Kodama R, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P254, DOI 10.1145/2648511.2648540
   Krueger CW, 2006, COMMUN ACM, V49, P37, DOI 10.1145/1183236.1183262
   Krüger J, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P432, DOI 10.1145/3368089.3409684
   Krugel J., 2020, P 24 ACM C SYSTEMS S, P1, DOI 10.1145/3421590
   Lopez-Herrejon RE, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1912
   Lupton RC, 2017, RESOUR CONSERV RECY, V124, P141, DOI 10.1016/j.resconrec.2017.05.002
   Mathieson K., 2001, Data Base for Advances in Information Systems, V32, P86
   McKenna S, 2014, IEEE T VIS COMPUT GR, V20, P2191, DOI 10.1109/TVCG.2014.2346331
   Montalvillo L, 2017, 21ST INTERNATIONAL SYSTEM & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 2, P73, DOI 10.1145/3109729.3109737
   Nagamine Motoi, 2016, SPLC
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Novais RL, 2013, INFORM SOFTWARE TECH, V55, P1860, DOI 10.1016/j.infsof.2013.05.008
   Ohlsson M. C., 1999, 1999 IEEE Aerospace Conference. Proceedings (Cat. No.99TH8403), P69, DOI 10.1109/AERO.1999.790190
   Pohl K., 2005, Software Product Line Engineering: Foundations, Principles and Techniques, V1, DOI [10.1007/3-540-28901-1, DOI 10.1007/3-540-28901-1]
   Reddivari S, 2014, REQUIR ENG, V19, P257, DOI 10.1007/s00766-013-0194-3
   Schackmann H., 2006, 2006 INT WORKSH SOFT, P13
   Schmidt M, 2008, J IND ECOL, V12, P173, DOI 10.1111/j.1530-9290.2008.00015.x
   Schulze S, 2016, TENTH INTERNATIONAL WORKSHOP ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS (VAMOS 2016), P9, DOI 10.1145/2866614.2866616
   Sein MK, 2011, MIS QUART, V35, P37
   Sjoberg DIK, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P17, DOI 10.1109/ISESE.2002.1166921
   Subramanyam V, 2015, ENERG CONVERS MANAGE, V91, P342, DOI 10.1016/j.enconman.2014.12.024
   Takebe Y, 2009, 13 INT C SOFTW PROD, V446, P275
   Tenev V, 2017, 21ST INTERNATIONAL SYSTEM & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 2, P22, DOI 10.1145/3109729.3109753
   Ursachi G, 2015, PROC ECON FINANC, V20, P679, DOI 10.1016/S2212-5671(15)00123-9
   van van Rossum G., 2018, UNIFIED DIFF FORMAT
   Wnuk K, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P89, DOI 10.1109/RE.2009.32
   Zhang Bo., 2013, Proceedings of the 17th International Software Product Line Conference, P168
NR 49
TC 2
Z9 2
U1 2
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAY
PY 2022
VL 27
IS 3
AR 75
DI 10.1007/s10664-021-10101-6
PG 44
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZV6AK
UT WOS:000770610500001
OA hybrid
DA 2024-07-18
ER

PT J
AU Pecorelli, F
   Catolino, G
   Ferrucci, F
   De Lucia, A
   Palomba, F
AF Pecorelli, Fabiano
   Catolino, Gemma
   Ferrucci, Filomena
   De Lucia, Andrea
   Palomba, Fabio
TI Software testing and Android applications: a large-scale empirical study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software testing; Mobile applications; Empirical studies
ID PREDICTING FAULTS; COHESION METRICS; CODE SMELLS; DIFFUSENESS; COVERAGE;
   IMPACT; SUITE
AB These days, over three billion users rely on mobile applications (a.k.a. apps) on a daily basis to access high-speed connectivity and all kinds of services it enables, from social to emergency needs. Having high-quality apps is therefore a vital requirement for developers to keep staying on the market and acquire new users. For this reason, the research community has been devising automated strategies to better test these applications. Despite the effort spent so far, most developers write their test cases manually without the adoption of any tool. Nevertheless, we still observe a lack of knowledge on the quality of these manually written tests: an enhanced understanding of this aspect may provide evidence-based findings on the current status of testing in the wild and point out future research directions to better support the daily activities of mobile developers. We perform a large-scale empirical study targeting 1,693 open-source Android apps and aiming at assessing (1) the extent to which these apps are actually tested, (2) how well-designed are the available tests, (3) what is their effectiveness, and (4) how well manual tests can reduce the risk of having defects in production code. In addition, we conduct a focus group with 5 Android testing experts to discuss the findings achieved and gather insights into the next research avenues to undertake. The key results of our study show Android apps are poorly tested and the available tests have low (i) design quality, (ii) effectiveness, and (iii) ability to find defects in production code. Among the various suggestions, testing experts report the need for improved mechanisms to locate potential defects and deal with the complexity of creating tests that effectively exercise the production code.
C1 [Pecorelli, Fabiano; Ferrucci, Filomena; De Lucia, Andrea; Palomba, Fabio] Univ Salerno, SeSa Lab, Fisciano, Italy.
   [Catolino, Gemma] Tilburg Univ, Jheronimus Acad Data Sci, Tilburg, Netherlands.
C3 University of Salerno; Tilburg University
RP Pecorelli, F (corresponding author), Univ Salerno, SeSa Lab, Fisciano, Italy.
EM fpecorelli@unisa.it; g.catolino@uvt.nl; fferrucci@unisa.it;
   adelucia@unisa.it; fpalomba@unisa.it
RI De Lucia, Andrea/AAG-6781-2020; Pecorelli, Fabiano/HKO-8789-2023;
   Catolino, Gemma/AAD-3209-2020
OI Pecorelli, Fabiano/0000-0003-2446-4291; Catolino,
   Gemma/0000-0002-4689-3401; FERRUCCI, Filomena/0000-0002-0975-8972
FU European Commission [825040]; Swiss National Science Foundation through
   the SNF Projects [PZ00P2_186090]
FX Gemma is partially supported by the European Commission grant no. 825040
   (RADON). Fabio gratefully acknowledges the support of the Swiss National
   Science Foundation through the SNF Projects No. PZ00P2_186090 (TED). The
   authors would like to thank the Associate Editor and the anonymous
   Reviewers for their insightful comments provided during the peer-review
   process, which were instrumental to improve the quality of the
   manuscript.
CR [Anonymous], 2010, SOFTWARE ENG ISSUES
   [Anonymous], 2014, STATISTA
   [Anonymous], 2020, NEW YORK TIMES, DOI DOI 1035724/HTTPS://WWW.NYTIMES.COM/INTERACTIVE/2020/US/CORONAVIRUS-NURSING-HOMES.HTML
   [Anonymous], 2007, PROMISE 07, DOI DOI 10.1109/PROMISE.2007.10
   Antoine Jean-Yves, 2014, WEIGHTED KRIPPENDORF
   Balogh G, 2016, IEEE INT WORK C SO, P137, DOI 10.1109/SCAM.2016.10
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Bavota G, 2015, EMPIR SOFTW ENG, V20, P1052, DOI 10.1007/s10664-014-9313-0
   Bavota G, 2015, IEEE T SOFTWARE ENG, V41, P384, DOI 10.1109/TSE.2014.2367027
   Bavota G, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P56, DOI 10.1109/ICSM.2012.6405253
   Beller M, 2019, IEEE T SOFTWARE ENG, V45, P261, DOI 10.1109/TSE.2017.2776152
   Beller M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P179, DOI 10.1145/2786805.2786843
   Buse RPL, 2010, IEEE T SOFTWARE ENG, V36, P546, DOI 10.1109/TSE.2009.70
   Catolino G, 2019, PROC IEEE INT CONF S, P223, DOI 10.1109/ICSME.2019.00034
   Catolino G, 2019, 2019 IEEE/ACM 6TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2019), P99, DOI 10.1109/MOBILESoft.2019.00023
   Catolino G, 2019, J SYST SOFTWARE, V152, P165, DOI 10.1016/j.jss.2019.03.002
   Catolino G, 2018, 2018 IEEE/ACM 5TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT), P43, DOI 10.1145/3197231.3198447
   Chen MH, 2001, IEEE T RELIAB, V50, P165, DOI 10.1109/24.963124
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Choudhary SR, 2015, IEEE INT CONF AUTOM, P429, DOI 10.1109/ASE.2015.89
   Cleary M, 2014, J ADV NURS, V70, P473, DOI 10.1111/jan.12163
   Counsell S, 2006, ACM T SOFTW ENG METH, V15, P123, DOI 10.1145/1131421.1131422
   Creswell J.W., 1999, Handbook of educational policy, P455, DOI [https://doi.org/10.1016/B978-012174698-8/50045-X, DOI 10.1016/B978-012174698-8/50045-X]
   Cruz L, 2019, EMPIR SOFTW ENG, V24, P2209, DOI 10.1007/s10664-019-09682-0
   D'Ambros Marco, 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P23, DOI 10.1109/QSIC.2010.58
   Das T, 2016, PROC IEEE INT CONF S, P443, DOI 10.1109/ICSME.2016.49
   Di Nucci D, 2018, IEEE T SOFTWARE ENG, V44, P5, DOI 10.1109/TSE.2017.2659747
   Di Nucci D, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P103, DOI 10.1109/SANER.2017.7884613
   Draper N. R., 2014, Applied regression analysis
   ECK M, 2019, IN PRESS, P830, DOI DOI 10.1145/3338906.3338945
   Etzkorn LH, 2004, INFORM SOFTWARE TECH, V46, P677, DOI 10.1016/j.infsof.2003.12.002
   Fischer M, 2003, PROC IEEE INT CONF S, P23, DOI 10.1109/ICSM.2003.1235403
   Fowler M., 1999, Refactoring: Improving the Design of Existing Code
   Fraser Gordon, 2011, PROC 19 ACM SIGSOFT, P416, DOI 10.1145/2025113.2025179
   Fregnan E, 2019, INFORM SOFTWARE TECH, V107, P159, DOI 10.1016/j.infsof.2018.11.008
   Gao J, 2014, IEEE HI ASS SYS ENGR, P158, DOI 10.1109/HASE.2014.30
   Garousi V, 2018, J SYST SOFTWARE, V138, P52, DOI 10.1016/j.jss.2017.12.013
   Geiger F-X, 2018, ARXIV180910069
   Geiger FX, 2018, IEEE WORK CONF MIN S, P30, DOI 10.1145/3196398.3196460
   Gilbert P., 2011, P 2 INT WORKSHOP MOB, P21, DOI DOI 10.1145/1999732.1999740
   Gopinath R, 2017, IEEE T RELIAB, V66, P854, DOI 10.1109/TR.2017.2705662
   Gopinath R, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P72, DOI 10.1145/2568225.2568278
   GRANO G, 2018, P 26 INT C PROGR COM
   Grano G, 2020, PROC IEEE INT CONF S, P336, DOI 10.1109/ICSME46990.2020.00040
   Grano G, 2019, J SYST SOFTWARE, V156, P312, DOI 10.1016/j.jss.2019.07.016
   Grano G, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P72, DOI 10.1109/SANER.2018.8330198
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Greiler M, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P322, DOI 10.1109/ICST.2013.45
   Halekoh U, 2006, J STAT SOFTW, V15, P1, DOI 10.18637/jss.v015.i02
   Hall T, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2629648
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   HendersonSellers B, 1996, OBJECT ORIENTED SYST, V3, P143
   Hindle Abram, 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, P12
   Iannone E, 2020, INT C PROGRAM COMPRE, P451, DOI 10.1145/3387904.3389298
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Joorabchi Mona Erfani, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P15, DOI 10.1109/ESEM.2013.9
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Khalid H, 2015, IEEE SOFTWARE, V32, P70, DOI 10.1109/MS.2014.50
   Khomh F, 2012, EMPIR SOFTW ENG, V17, P243, DOI 10.1007/s10664-011-9171-y
   Kim H, 2009, 2009 THIRD IEEE INTERNATIONAL CONFERENCE ON SECURE SOFTWARE INTEGRATION AND RELIABILITY IMPROVEMENT, PROCEEDINGS, P171, DOI 10.1109/SSIRI.2009.28
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kim S, 2007, PROC INT CONF SOFTW, P489
   Kochhar P. S., 2015, ICST'15, P1
   Koru AG, 2009, IEEE T SOFTWARE ENG, V35, P293, DOI 10.1109/TSE.2008.90
   Krippendorff K., 2018, CONTENT ANAL INTRO I
   Krutz DE, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P522, DOI 10.1109/MSR.2015.79
   Kudrjavets G, 2006, ISSRE 2006:17TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P204
   Laaber C, 2018, IEEE WORK CONF MIN S, P119, DOI 10.1145/3196398.3196407
   Leicht N, 2017, IEEE SOFTWARE, V34, P62, DOI 10.1109/MS.2017.37
   Lin JW, 2020, IEEE INT CONF AUTOM, P1078, DOI 10.1145/3324884.3416623
   Linares-Vasquez M, 2014, P 22 INT C PROGR COM, P232
   Linares-Vásquez M, 2017, PROC IEEE INT CONF S, P399, DOI 10.1109/ICSME.2017.27
   Linares-Vásquez M, 2017, PROC IEEE INT CONF S, P613, DOI 10.1109/ICSME.2017.47
   liwerski J, 2005, ACM SIGSOFT SOFTWARE, V30, P1, DOI [10.1145/1082983.1083147, DOI 10.1145/1083142.1083147, DOI 10.1145/1082983.1083147]
   Luo QZ, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P643, DOI 10.1145/2635868.2635920
   Machiry A., 2013, P 2013 9 JOINT M FDN, P224
   Mao K., 2016, P 25 INT S SOFTW TES, P94
   Marick B., 1999, Proceedings of the 16th Interational Conference on Testing Computer Software, P16
   Martin W, 2017, IEEE T SOFTWARE ENG, V43, P817, DOI 10.1109/TSE.2016.2630689
   Mateus BG, 2019, EMPIR SOFTW ENG, V24, P3356, DOI 10.1007/s10664-019-09727-4
   McIlroy S, 2016, EMPIR SOFTW ENG, V21, P1346, DOI 10.1007/s10664-015-9388-2
   Mesbah A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P561, DOI 10.1145/1985793.1985870
   Meszaros G., 2007, Xunit test patterns: refactoring test code
   Minelli R, 2013, EUR CON SFTWR MTNCE, P144, DOI 10.1109/CSMR.2013.24
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Mojica IJ, 2014, IEEE SOFTWARE, V31, P78, DOI 10.1109/MS.2013.142
   Moonen L, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P13, DOI 10.1109/WCRE.2001.957806
   Moonen Leon, 2001, P 2 INT C EXTR PROGR
   Morales R, 2016, ARXIV161005711
   Muccini H., 2012, 2012 Proceedings of 7th International Workshop on Automation of Software Test (AST 2012), P29, DOI 10.1109/IWAST.2012.6228987
   Myers Glenford J., 2011, The Art of Software Testing
   Nagappan M, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 5, P21, DOI 10.1109/SANER.2016.88
   Nagappan Nachiappan, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P309, DOI 10.1109/ISSRE.2010.25
   Nagappan N., 2005, Proceedings of the third workshop on Software quality, P1
   Nagappan N, 2008, EMPIR SOFTW ENG, V13, P289, DOI 10.1007/s10664-008-9062-z
   Nayebi M, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P552, DOI 10.1109/SANER.2016.116
   NELDER JA, 1972, J R STAT SOC SER A-G, V135, P370, DOI 10.2307/2344614
   O'Brien RM, 2007, QUAL QUANT, V41, P673, DOI 10.1007/s11135-006-9018-6
   Palomba F, 2016, P 25 INT S SOFTW TES, P130, DOI [10.1145/2931037.2931057, DOI 10.1145/2931037.2931057]
   Palomba F, 2019, IEEE T SOFTWARE ENG, V45, P194, DOI 10.1109/TSE.2017.2770122
   Palomba F, 2019, INFORM SOFTWARE TECH, V105, P43, DOI 10.1016/j.infsof.2018.08.004
   Palomba F, 2018, PROC IEEE INT CONF S, P311, DOI 10.1109/ICSME.2018.00040
   Palomba F, 2018, IEEE T SOFTWARE ENG, V44, P977, DOI 10.1109/TSE.2017.2752171
   Palomba F, 2018, EMPIR SOFTW ENG, V23, P1188, DOI 10.1007/s10664-017-9535-z
   Palomba F, 2018, INFORM SOFTWARE TECH, V99, P1, DOI 10.1016/j.infsof.2018.02.004
   Palomba F, 2018, J SYST SOFTWARE, V137, P143, DOI 10.1016/j.jss.2017.11.043
   Palomba F, 2017, PROC INT CONF SOFTW, P106, DOI 10.1109/ICSE.2017.18
   Palomba F, 2017, INT C PROGRAM COMPRE, P176, DOI 10.1109/ICPC.2017.38
   Palomba F, 2016, 2016 IEEE/ACM 9TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST), P5, DOI [10.1145/2897010.2897016, 10.1109/SBST.2016.010]
   Palomba F, 2015, IEEE T SOFTWARE ENG, V41, P462, DOI 10.1109/TSE.2014.2372760
   Panichella S, 2016, PROC INT CONF SOFTW, P547, DOI 10.1145/2884781.2884847
   Pecorelli F, 2021, SOFTWARE TESTING AND
   Pecorelli F, 2020, EMPIR SOFTW ENG, Vxxx, pxxx
   Pecorelli F, 2020, INT C PROGRAM COMPRE, P296, DOI 10.1145/3387904.3389256
   Pecorelli F, 2019, INT C PROGRAM COMPRE, P93, DOI 10.1109/ICPC.2019.00023
   Peruma A., 2019, P 29 ANN INT C COMP, P193, DOI DOI 10.5555/3370272.3370293
   Peruma Anthony, 2020, C SOFTW ENG WORKSH I
   Pham R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P30, DOI 10.1145/2635868.2635925
   Pidgeon N.F., 2004, GROUNDED THEORY
   Rossi P.H., 2013, Handbook of survey research
   Salza P, 2020, EMPIR SOFTW ENG, V25, P2341, DOI 10.1007/s10664-019-09754-1
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   Shihab E., 2013, P 2013 INT WORKSHOP, P1, DOI [10.1145/2501553.2501554, DOI 10.1145/2501553.2501554]
   Silva Danilo., 2016, 24th International Symposium on the Foundations of Software Engineering (FSE), P1, DOI [10.1109/CLEI.2016.7833334, DOI 10.1109/CLEI.2016.7833334]
   Spadini D, 2018, PROC IEEE INT CONF S, P1, DOI 10.1109/ICSME.2018.00010
   Spearman C, 1904, AM J PSYCHOL, V15, P72, DOI 10.2307/1412159
   Spinellis D, 2005, IEEE SOFTWARE, V22, P9, DOI 10.1109/MS.2005.111
   Tamburri DA., 2020, IEEE T ENG MANAGE, V68, P599
   Tufano M, 2017, IEEE T SOFTWARE ENG, V43, P1063, DOI 10.1109/TSE.2017.2653105
   Tufano M, 2016, IEEE INT CONF AUTOM, P4, DOI 10.1145/2970276.2970340
   Ujházi B, 2010, IEEE INT WORK C SO, P33, DOI 10.1109/SCAM.2010.14
   Vahabzadeh A, 2015, PROC IEEE INT CONF S, P101, DOI 10.1109/ICSM.2015.7332456
   Van Rompaey B, 2007, IEEE T SOFTWARE ENG, V33, P800, DOI 10.1109/TSE.2007.70745
   Van Rompaey B, 2009, EUR CON SFTWR MTNCE, P209, DOI 10.1109/CSMR.2009.39
   Wei LL, 2016, IEEE INT CONF AUTOM, P226, DOI 10.1145/2970276.2970312
   Wei Y, 2012, LECT NOTES COMPUT SC, V7007, P194
   Wilkinson S., 1998, International Journal of Social Research Methodology Theory and Practice, V1, P181, DOI DOI 10.1080/13645579.1998.10846874
   Yang JQ, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P831, DOI 10.1145/3106237.3106274
   Yu CS, 2019, COMPREHENDING TEST C
   Zazworka Nico, 2011, P 2 WORKSH MAN TECHN, P17, DOI 10.1145/1985362.1985366
NR 140
TC 5
Z9 7
U1 0
U2 9
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2022
VL 27
IS 2
AR 31
DI 10.1007/s10664-021-10059-5
PG 41
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA XO4RR
UT WOS:000730174900004
DA 2024-07-18
ER

PT J
AU Levy, O
   Feitelson, DG
AF Levy, Omer
   Feitelson, Dror G.
TI Understanding large-scale software systems - structure and flows
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 27th IEEE/ACM International Conference on Program Comprehension (ICPC)
CY MAY 25, 2019
CL Montreal, CANADA
SP IEEE, Assoc Comp Machinery, Concordia Univ, Tourisme Montreal
DE Program comprehension; System comprehension; Code structure; Program
   flows
ID PROGRAM COMPREHENSION; MAINTENANCE; BEHAVIOR
AB Program comprehension accounts for a large portion of software development costs and effort. The academic literature contains mainly research on program comprehension of short code snippets, but comprehension at the system level is no less important. We claim that comprehending a software system is a distinct activity that differs from code comprehension. We interviewed experienced developers, architects, and managers in the software industry and open-source community, to uncover the meaning of program comprehension at the system level; later we conducted a survey to verify the findings. The interviews demonstrate, among other things, that system comprehension is largely detached from code and programming language, and includes scope that is not captured in the code. It focuses on one hand on the structure of the system, and on the other hand on the flows in the system, but less on the code itself. System comprehension is a continuous, unending, iterative process, which utilizes white-box and black-box approaches at different layers of the system depending on needs, and combines both bottom-up and top-down comprehension strategies. In summary, comprehending a system is not just comprehending the code at a larger scale, and it is not possible to comprehend large systems at the same level as comprehending code.
C1 [Levy, Omer; Feitelson, Dror G.] Hebrew Univ Jerusalem, Dept Comp Sci, IL-91904 Jerusalem, Israel.
C3 Hebrew University of Jerusalem
RP Feitelson, DG (corresponding author), Hebrew Univ Jerusalem, Dept Comp Sci, IL-91904 Jerusalem, Israel.
EM lomer1978@gmail.com; feit@cs.huji.ac.il
OI Feitelson, Dror/0000-0002-2733-7709
FU Berthold Badler Chair in Computer Science; ISRAEL SCIENCE FOUNDATION
   [407/13, 832/18]
FX Dror Feitelson holds the Berthold Badler Chair in Computer Science. This
   research was supported by the ISRAEL SCIENCE FOUNDATION (grants no.
   407/13 and 832/18). This paper is an invited extended version of a paper
   from ICPC 2019.
CR Ajami S, 2019, EMPIR SOFTW ENG, V24, P287, DOI 10.1007/s10664-018-9628-3
   Alomari HW, 2016, 2016 IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION, P101, DOI 10.1109/VISSOFT.2016.22
   Alon U., 2019, 7 INT C LEARNING REP
   ALPERN B, 1987, DISTRIB COMPUT, V2, P117, DOI 10.1007/BF01782772
   [Anonymous], 2014, 22 INT C PROGR COMPR, DOI DOI 10.1145/2597008.2597140
   Arisholm E, 2006, IEEE T SOFTWARE ENG, V32, P365, DOI 10.1109/TSE.2006.59
   Austin MA, 2005, 18TH INTERNATIONAL CONFERENCE ON SYSTEMS ENGINEERING, PROCEEDINGS, P414, DOI 10.1109/ICSENG.2005.77
   Avidan E, 2017, INT C PROGRAM COMPRE, P55, DOI 10.1109/ICPC.2017.27
   Bach MJ, 1986, DESIGN UNIX OPERATIN
   BANKER RD, 1993, COMMUN ACM, V36, P81, DOI 10.1145/163359.163375
   Beniamini G, 2017, INT C PROGRAM COMPRE, P45, DOI 10.1109/ICPC.2017.18
   Bogner A, 2009, RES METHODS SER, P43
   BROOKS FP, 1987, COMPUTER, V20, P10, DOI 10.1109/MC.1987.1663532
   BROOKS R, 1983, INT J MAN MACH STUD, V18, P543, DOI 10.1016/S0020-7373(83)80031-5
   Brunner T, 2019, 2019 IEEE 15TH INTERNATIONAL SCIENTIFIC CONFERENCE ON INFORMATICS (INFORMATICS 2019), P219, DOI [10.1109/informatics47936.2019.9119278, 10.1109/Informatics47936.2019.9119278]
   Carter N, 2014, ONCOL NURS FORUM, V41, P545, DOI 10.1188/14.ONF.545-547
   Conway ME., 1968, COMMITTEES INVENT DA, V14, P31
   COOK C, 1984, INFORM PROCESS MANAG, V20, P199, DOI 10.1016/0306-4573(84)90050-5
   Cornelissen B, 2011, IEEE T SOFTWARE ENG, V37, P341, DOI 10.1109/TSE.2010.47
   Cornelissen B, 2009, IEEE T SOFTWARE ENG, V35, P684, DOI 10.1109/TSE.2009.28
   Crouch M, 2006, SOC SCI INFORM, V45, P483, DOI 10.1177/0539018406069584
   Fekete A, 2020, ANN MATH INFORM, V51, P103, DOI 10.33039/ami.2020.07.007
   Feng Y, 2018, INT C PROGRAM COMPRE, P86, DOI 10.1145/3196321.3196343
   Haiduc S., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P223, DOI 10.1145/1810295.1810335
   HENRY S, 1981, IEEE T SOFTWARE ENG, V7, P510, DOI 10.1109/TSE.1981.231113
   Hwa J, 2009, ASIA PAC SOFWR ENG, P11, DOI 10.1109/APSEC.2009.60
   Jaffe A, 2018, INT C PROGRAM COMPRE, P20, DOI 10.1145/3196321.3196330
   Ko AJ, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P3, DOI 10.1109/ICSE-SEIP.2017.29
   Kosar T, 2018, EMPIR SOFTW ENG, V23, P2734, DOI 10.1007/s10664-017-9593-2
   Kruchten P., 2004, GRON WORKSH SOFTW VA, P54
   KRUCHTEN PB, 1995, IEEE SOFTWARE, V12, P42, DOI 10.1109/52.469759
   Kulkarni A. M., 2016, PROC IEEE 6 INT C PO, P1
   Kulkarni N, 2017, SOFTWARE PRACT EXPER, V47, P971, DOI 10.1002/spe.2439
   LEHMAN MM, 1980, P IEEE, V68, P1060, DOI 10.1109/PROC.1980.11805
   LETOVSKY S, 1987, J SYST SOFTWARE, V7, P325, DOI 10.1016/0164-1212(87)90032-X
   Levy O, 2019, INT C PROGRAM COMPRE, P283, DOI 10.1109/ICPC.2019.00047
   Lions J., 1996, Lions' Commentary on UNIX 6th Edition with Source Code.
   LITTMAN DC, 1987, J SYST SOFTWARE, V7, P341, DOI 10.1016/0164-1212(87)90033-1
   Maletic JI, 2002, VISSOFT 2002: FIRST INTERNATIONAL WORKSHOP ON VISUALIZING SOFTWARE FOR UNDERSTANDING AND ANALYSIS, PROCEEDINGS, P32, DOI 10.1109/VISSOF.2002.1019792
   Martin RC, 2015, EXPECTING PROFESSION
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   McKusick Marshall Kirk, 1996, DESIGN IMPLEMENTATIO
   Medeiros F, 2019, EMPIR SOFTW ENG, V24, P1693, DOI 10.1007/s10664-018-9666-x
   Metz S, 2014, ALL LITTLE THINGS
   MEYER B, 1992, COMPUTER, V25, P40, DOI 10.1109/2.161279
   Moonen L, 2016, INFORM SOFTWARE TECH, V77, P34, DOI 10.1016/j.infsof.2016.05.002
   Ning J, 1991, ANN KNOWL BAS SOFTW, P162
   Panas T, 2007, IEEE INT C ENG COMP, P217, DOI 10.1109/ICECCS.2007.20
   PARNAS DL, 1985, IEEE T SOFTWARE ENG, V11, P259, DOI 10.1109/TSE.1985.232209
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   Petersen K, 2018, IEEE T SOFTWARE ENG, V44, P237, DOI 10.1109/TSE.2017.2677909
   Razavizadeh A, 2009, LECT NOTES COMPUT SC, V5872, P433, DOI 10.1007/978-3-642-05290-3_55
   Robinson BP, 2011, INT WORKSH VIS SOFTW
   Rodeghero P, 2015, IEEE T SOFTWARE ENG, V41, P1038, DOI 10.1109/TSE.2015.2442238
   Roehm T, 2012, PROC INT CONF SOFTW, P255, DOI 10.1109/ICSE.2012.6227188
   SACKMAN H, 1968, COMMUN ACM, V11, P3, DOI 10.1145/362851.362858
   Salah M., 2006, 10th European Conference on Software Maintenance and Reengineering
   Salvaneschi G, 2017, IEEE T SOFTWARE ENG, V43, P1125, DOI 10.1109/TSE.2017.2655524
   SHNEIDERMAN B, 1976, INT J COMPUT INF SCI, V5, P123, DOI 10.1007/BF00975629
   Siegmund J., 2012, P ACM SIGSOFT 20 INT, V24
   Sora I., 2015, EVALUATION NOVEL APP, P122
   Spolsky Joel, 2002, The Law of Leaky Abstractions. Blog post: Joel on Software
   Storey MA, 2006, SOFTWARE QUAL J, V14, P187, DOI 10.1007/s11219-006-9216-4
   Störrle H, 2014, LECT NOTES COMPUT SC, V8767, P518, DOI 10.1007/978-3-319-11653-2_32
   STRUTZEL E, 1968, NURS RES, V17, P364
   Tichy Walter, 2011, MAKING SOFTWARE, P393
   Torchiano M, 2017, J VISUAL LANG COMPUT, V41, P10, DOI 10.1016/j.jvlc.2017.06.002
   von Mayrhauser A., 1994, Proceedings. IEEE Third Workshop on Program Comprehension (Cat. No.94TH06767), P74, DOI 10.1109/WPC.1994.341253
   von Mayrhauser A, 1998, PROG COMPREHEN, P164, DOI 10.1109/WPC.1998.693345
   vonMayrhauser A, 1997, J SOFTW MAINT-RES PR, V9, P299, DOI 10.1002/(SICI)1096-908X(199709/10)9:5<299::AID-SMR157>3.0.CO;2-S
   VONMAYRHAUSER A, 1995, COMPUTER, V28, P44, DOI 10.1109/2.402076
   VONMAYRHAUSER A, 1994, PROC INT CONF SOFTW, P39, DOI 10.1109/ICSE.1994.296764
   vonMayrhauser A, 1996, FOURTH WORKSHOP ON PROGRAM COMPREHENSION, PROCEEDINGS, P68, DOI 10.1109/WPC.1996.501122
   Weissman L., 1974, SIGPLAN Notices, V9, P25, DOI 10.1145/953233.953237
   Wettel R, 2007, 4TH IEEE INTERNATIONAL WORKSHOP ON VISUALIZING SOFTWARE FOR UNDERSTANDING AND ANALYSIS, PROCEEDINGS, P92, DOI 10.1109/VISSOF.2007.4290706
   Wettel R, 2007, INT C PROGRAM COMPRE, P231
   Wikipedia, 2018, JAVA PACKAGE
   Xia X, 2018, IEEE T SOFTWARE ENG, V44, P951, DOI 10.1109/TSE.2017.2734091
   Zhang HH, 2010, J SUPERCOMPUT, V53, P352, DOI 10.1007/s11227-009-0299-0
NR 79
TC 4
Z9 4
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAY
PY 2021
VL 26
IS 3
AR 48
DI 10.1007/s10664-021-09938-8
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA RH6UU
UT WOS:000636351900001
DA 2024-07-18
ER

PT J
AU Riom, T
   Sawadogo, A
   Allix, K
   Bissyandé, TF
   Moha, N
   Klein, J
AF Riom, Timothe
   Sawadogo, Arthur
   Allix, Kevin
   Bissyande, Tegawende F.
   Moha, Naouel
   Klein, Jacques
TI Revisiting the VCCFinder approach for the identification of
   vulnerability-contributing commits
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Vulnerability detection; Machine learning; Replication; Software
   engineering
AB Detecting vulnerabilities in software is a constant race between development teams and potential attackers. While many static and dynamic approaches have focused on regularly analyzing the software in its entirety, a recent research direction has focused on the analysis of changes that are applied to the code. VCCFinder is a seminal approach in the literature that builds on machine learning to automatically detect whether an incoming commit will introduce some vulnerabilities. Given the influence of VCCFinder in the literature, we undertake an investigation into its performance as a state-of-the-art system. To that end, we propose to attempt a replication study on the VCCFinder supervised learning approach. The insights of our failure to replicate the results reported in the original publication informed the design of a new approach to identify vulnerability-contributing commits based on a semi-supervised learning technique with an alternate feature set. We provide all artefacts and a clear description of this approach as a new reproducible baseline for advancing research on machine learning-based identification of vulnerability-introducing commits.
C1 [Riom, Timothe; Allix, Kevin; Bissyande, Tegawende F.; Klein, Jacques] Univ Luxembourg, SnT, Luxembourg, Luxembourg.
   [Sawadogo, Arthur; Moha, Naouel] Univ Quebec Montreal, Montreal, PQ, Canada.
C3 University of Luxembourg; University of Quebec; University of Quebec
   Montreal
RP Riom, T (corresponding author), Univ Luxembourg, SnT, Luxembourg, Luxembourg.
EM timothee.riom@uni.lu
RI Allix, Kevin/AAF-3197-2021
OI Allix, Kevin/0000-0003-3221-7266; Klein, Jacques/0000-0003-4052-475X;
   Riom, Timothee/0000-0001-7486-0538
FU Luxembourg National Research Fund (FNR), under project CHARACTERIZE
   [CHARACTERIZE C17/IS/11693861]; SPARTA project from the European Union
   [830892]; Luxembourg Ministry of Foreign and European Affairs
FX This work was partly supported (1) by the Luxembourg National Research
   Fund (FNR), under project CHARACTERIZE C17/IS/11693861, (2) by the
   SPARTA project, which has received funding from the European Union's
   Horizon 2020 research and innovation program under grant agreement No
   830892, and (3) by the Luxembourg Ministry of Foreign and European
   Affairs through their Digital4Development (D4D) portfolio under project
   LuxWAyS.
CR Alohaly M, 2017, 2017 IEEE 3RD INTERNATIONAL CONFERENCE ON COLLABORATION AND INTERNET COMPUTING (CIC), P59, DOI 10.1109/CIC.2017.00020
   [Anonymous], 2011, PROC INT C INFR MILL, P1, DOI [DOI 10.1145/1988630.1988632, DOI 10.1109/IRMMW-THZ.2011.6105031]
   [Anonymous], 2002, 6 WORLD C INT DES PR
   Arusoaie A, 2017, INT SYMP SYMB NUMERI, P161, DOI 10.1109/SYNASC.2017.00035
   Arzt S, 2014, ACM SIGPLAN NOTICES, V49, P259, DOI [10.1145/2666356.2594299, 10.1145/2594291.2594299]
   Association for Computer Machinery, 2020, ART REV BADG
   Balcan MF, 2005, LECT NOTES COMPUT SC, V3559, P111, DOI 10.1007/11503415_8
   Ban XB, 2019, CONCURR COMP-PRACT E, V31, DOI 10.1002/cpe.5103
   Blum A., 1998, Proceedings of the Eleventh Annual Conference on Computational Learning Theory, P92, DOI 10.1145/279943.279962
   Cadar C., 2008, OSDI, V8, P209, DOI DOI 10.5555/1855741.1855756
   Cadar C, 2013, COMMUN ACM, V56, P82, DOI 10.1145/2408776.2408795
   CASTELLI V, 1995, PATTERN RECOGN LETT, V16, P105, DOI 10.1016/0167-8655(94)00074-D
   Chang RY, 2008, IEEE T SOFTWARE ENG, V34, P579, DOI 10.1109/TSE.2008.24
   Cho ChiaYuan., 2011, P 20 USENIX SECURITY, P139
   Fan RE, 2008, J MACH LEARN RES, V9, P1871
   Feng Q., 2016, P 2016 ACM SIGSAC C, P480, DOI [10.1145/2976749.2978370, DOI 10.1145/2976749.2978370]
   Ghaffarian SM, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3092566
   Goseva-Popstojanova K, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2018), P344, DOI 10.1109/QRS.2018.00047
   Gro Samuel, 2018, FuzzIL: Coverage guided fuzzing for JavaScript engines
   Hogan K, 2019, IEEE INT SYMP SOFTW, P270, DOI 10.1109/ISSREW.2019.00083
   Hsu C.-W., 2003, PRACTICAL GUIDE SUPP
   Kersten R, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2511, DOI 10.1145/3133956.3138820
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kirchner F, 2015, FORM ASP COMPUT, V27, P573, DOI 10.1007/s00165-014-0326-7
   Klees G, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P2123, DOI 10.1145/3243734.3243804
   Kononenko I., 1995, IJCAI-95. Proceedings of the Fourteenth International Joint Conference on Artificial Intelligence, P1034
   Krsul I.V., 1998, SOFTWARE VULNERABILI
   Larochelle D, 2001, USENIX ASSOCIATION PROCEEDINGS OF THE 10TH USENIX SECURITY SYMPOSIUM, P177
   Le Traon Y, 2020, ARXIV200109148
   Levin A, 2003, NINTH IEEE INTERNATIONAL CONFERENCE ON COMPUTER VISION, VOLS I AND II, PROCEEDINGS, P626
   Li H, 2016, IFIP ADV INF COMM TE, V471, P211, DOI 10.1007/978-3-319-33630-5_15
   Li ZH, 2016, PROCEEDINGS OF THE 12TH EURO-ASIA CONFERENCE ON ENVIRONMENT AND CSR: TOURISM, SOCIETY AND EDUCATION SESSION, PT II, P201
   Lin GJ, 2018, IEEE T IND INFORM, V14, P3289, DOI 10.1109/TII.2018.2821768
   Livshits V Benjamin, 2005, USENIX SEC S, V14, P18
   liwerski J, 2005, ACM SIGSOFT SOFTWARE, V30, P1, DOI [10.1145/1082983.1083147, DOI 10.1145/1083142.1083147, DOI 10.1145/1082983.1083147]
   Martin M, 2005, ACM SIGPLAN NOTICES, V40, P365, DOI 10.1145/1103845.1094840
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Medeiros Iberia., 2016, Proceedings of the 25th International Symposium on Software Testing and Analysis, P1, DOI DOI 10.1145/2931037.2931041
   Meneely Andrew, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P65, DOI 10.1109/ESEM.2013.19
   Moshtari S, 2013, COMPUT FRAUD SECUR, P8, DOI 10.1016/S1361-3723(13)70045-9
   Neuhaus S, 2007, CCS'07: PROCEEDINGS OF THE 14TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P529
   Oles F, 2000, VALUE UNLABELED DATA
   Oostenryck LV, 2003, SPARSE SEMANTIC PARS
   Padhye R, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P398, DOI 10.1145/3293882.3339002
   Perl H, 2015, CCS'15: PROCEEDINGS OF THE 22ND ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P426, DOI 10.1145/2810103.2813604
   Rieck K, 2012, J MACH LEARN RES, V13, P3247
   Sabetta A, 2018, PROC IEEE INT CONF S, P579, DOI 10.1109/ICSME.2018.00058
   Scandariato R, 2014, IEEE T SOFTWARE ENG, V40, P993, DOI 10.1109/TSE.2014.2340398
   Vapnik V., 1999, NATURE STAT LEARNING
   Wan L, 2019, AUTOMATED VULNERABIL
   Wang S, 2016, IEEE INT CONF AUTOM, P708, DOI 10.1145/2970276.2970341
   Wheeler D.A., 2001, FlawFinder
   Wijayasekara D, 2014, IEEE IND ELEC, P3612, DOI 10.1109/IECON.2014.7049035
   Wijayasekara D, 2012, C HUM SYST INTERACT, P89, DOI 10.1109/HSI.2012.22
   Xue J, 2019, FEATURE ORIENTED COR, P658
   Yamaguchi F., 2013, P 2013 ACM SIGSAC C, P499
   Yamaguchi F, 2014, P IEEE S SECUR PRIV, P590, DOI 10.1109/SP.2014.44
   Yamamoto K, 2018, VULNERABILITY DETECT, DOI [10.13140/RG.2.2.28338.09922, DOI 10.13140/RG.2.2.28338.09922]
   Yang LM, 2017, IEEE GLOB COMM CONF
   Zalewski M., 2017, American fuzzy lop
   Zhou YQ, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P914, DOI 10.1145/3106237.3117771
   Zimmermann Thomas, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P421, DOI 10.1109/ICST.2010.32
NR 62
TC 5
Z9 5
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAY
PY 2021
VL 26
IS 3
AR 46
DI 10.1007/s10664-021-09944-w
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RF4MU
UT WOS:000634815200001
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Hoyos, J
   Abdalkareem, R
   Mujahid, S
   Shihab, E
   Bedoya, AE
AF Hoyos, Juan
   Abdalkareem, Rabe
   Mujahid, Suhaib
   Shihab, Emad
   Bedoya, Albeiro Espinosa
TI On the Removal of Feature Toggles A Study of Python Projects and
   Practitioners Motivations
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Feature toggles; Continuous integration; Continuous delivery; Empirical
   studies
AB Feature Toggling is a technique to control the execution of features in a software project. For example, practitioners using feature toggles can experiment with new features in a production environment by exposing them to a subset of users. Some of these toggles require additional maintainability efforts and are expected to be removed, whereas others are meant to remain for a long time. However, to date, very little is known about the removal of feature toggles, which is why we focus on this topic in our paper. We conduct an empirical study that focuses on the removal of feature toggles. We use source code analysis techniques to analyze 12 Python open source projects and surveyed 61 software practitioners to provide deeper insights on the topic. Our study shows that 75% of the toggle components in the studied Python projects are removed within 49 weeks after introduction. However, eventually practitioners remove feature toggles to follow the life cycle of a feature when it becomes stable in production. We also find that not all long-term feature toggles are designed to live that long and not all feature toggles are removed from the source code, opening the possibilities to unwanted risks. Our study broadens the understanding of feature toggles by identifying reasons for their survival in practice and aims to help practitioners make better decisions regarding the way they manage and remove feature toggles.
C1 [Hoyos, Juan; Bedoya, Albeiro Espinosa] Univ Nacl Colombia, Medellin, Colombia.
   [Abdalkareem, Rabe; Mujahid, Suhaib; Shihab, Emad] Concordia Univ, Montreal, PQ, Canada.
   [Abdalkareem, Rabe] Queens Univ, Kingston, ON, Canada.
C3 Universidad Nacional de Colombia; Concordia University - Canada; Queens
   University - Canada
RP Hoyos, J (corresponding author), Univ Nacl Colombia, Medellin, Colombia.
EM jdhoyosr@unal.edu.co; abdrabe@gmail.com; s_mujahi@encs.concordia.ca;
   eshihab@encs.concordia.ca; aespinos@unal.edu.co
RI Abdalkareem, Rabe/IQV-8842-2023; Abdalkareem, Rabe/AET-2496-2022;
   Espinosa Bedoya, Albeiro/O-3341-2017
OI Abdalkareem, Rabe/0000-0001-9914-5434; Hoyos, Juan/0000-0003-4017-6126;
   Mujahid, Suhaib/0000-0003-2738-1387; Espinosa Bedoya,
   Albeiro/0000-0001-7292-987X
CR Adams B, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 5, P78, DOI 10.1109/SANER.2016.108
   Adams B, 2015, IEEE SOFTWARE, V32, P41
   [Anonymous], 2012, ANNOUNCING CONTINUOU
   Asthagiri N, 2018, OEP 17 FEATURE TOGGL
   Bosworth A., 2012, BUILDING TESTING FAC
   Claps GG, 2015, INFORM SOFTWARE TECH, V57, P21, DOI 10.1016/j.infsof.2014.07.009
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Corbin J, 2008, Techniques and procedures for developing grounded theory, V3rd
   Feitelson DG, 2013, IEEE INTERNET COMPUT, V17, P8, DOI 10.1109/MIC.2013.25
   GitHub, 2011, SEARCH GITHUB DEVELO
   GitHub, 2011, GITHUB API V3 GITHUB
   GitHub, 2013, SEARCHING CODE USER
   Hodgson P., 2016, FEATURE TOGGLES
   Humble Jez, 2010, Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation
   Kalliamvakou E., 2014, P 11 WORKING C MININ, P92, DOI DOI 10.1145/2597073.2597074
   KAPLAN EL, 1958, J AM STAT ASSOC, V53, P457, DOI 10.2307/2281868
   Kostner C, 2019, FEATURE FLAGS VS CON
   LaunchDarkly, 2015, FEATURE FLAGS FEATUR
   Mäntylä MV, 2015, EMPIR SOFTW ENG, V20, P1384, DOI 10.1007/s10664-014-9338-4
   Neely S, 2013, 2013 AGILE CONFERENCE (AGILE), P121, DOI 10.1109/AGILE.2013.17
   Osherove R, 2016, FEATURE TOGGLES ENTE
   Rahman M.T., 2018, EMPIR SOFTW ENG, V22, P1
   Rahman MT, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P201, DOI [10.1145/2901739.2901745, 10.1109/MSR.2016.029]
   Ray B, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P155, DOI 10.1145/2635868.2635922
   Sayagh M, 2020, IEEE T SOFTWARE ENG, V46, P646, DOI 10.1109/TSE.2018.2867847
   Schermann G., 2016, PEERJ PREPRINTS
   Securities and E. Commission, 2013, ADM CEASE AND DESIST
   Smith E, 2013, 2013 6TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P89, DOI 10.1109/CHASE.2013.6614738
   Ur Rahman AA, 2015, 2015 AGILE CONFERENCE, P1, DOI 10.1109/Agile.2015.12
   Yin R.K., 2014, Applications of case study research, V2nd
   Zapata D., 2014, GOING 3 WEEK DAILY R
NR 31
TC 0
Z9 0
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2021
VL 26
IS 2
AR 15
DI 10.1007/s10664-020-09902-y
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QB8RH
UT WOS:000614404000001
DA 2024-07-18
ER

PT J
AU Xu, YS
   Wu, F
   Jia, XY
   Li, LB
   Xuan, JF
AF Xu, Yisen
   Wu, Fan
   Jia, Xiangyang
   Li, Lingbo
   Xuan, Jifeng
TI Mining the use of higher-order functions: An exploratory study on Scala
   programs
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Scala programs; Higher-order functions; GitHub; Exploratory study;
   Correlation analysis; Code reuse
ID IMPACT; CODE
AB A higher-order function takes one or more functions as inputs or outputs to support the generality of function definitions. In modern programming languages, higher-order functions are designed as a feature to enhance usability and scalability. ing higher-order functions from existing functions decreases the number of similar functions and improves the code reuse. However, due to the complexity, defining and calling higher-order functions are not widely used in practice. In this paper, we investigate the use of higher-order functions in Scala programs. We collected 8,285 higher-order functions from 35 Scala projects in GitHub with the most stars and conducted an exploratory study via answering five research questions of using higher-order functions, including the data scale, the definition types, the definition distribution, the factor that correlates with the function calls, and the developer contribution. Our study mainly shows five empirical results about the common use of higher-order functions in Scala programs. Our findings are listed as follows. (1) Among 35 Scala projects, 6.84% of functions are defined as higher-order functions on average and the average calls per function show that higher-order functions are called more frequently than first-order functions. (2) In all higher-order functions in the study, 87.35% of definitions of higher-order functions and 90.66% of calls belong to the type that only takes functions as parameters. (3) Three measurements (including lines of executable code, Cyclomatic complexity, and warnings in the code style) in higher-order functions are lower than those of first-order functions. (4) Regression analysis on all projects suggests that the number of calling higher-order functions highly correlates with the Cyclomatic complexity. (5) In all projects in the study, 43.82% calls of higher-order functions are written by the same developers who have defined the functions and results show that top 20% authors of higher-order functions favor defining or calling higher-order functions than first-order functions. This study can be viewed as a preliminary result to understand the use of higher-order functions and to motivate further investigation in Scala programs.
C1 [Xu, Yisen; Jia, Xiangyang; Xuan, Jifeng] Wuhan Univ, Sch Comp Sci, Wuhan 430072, Peoples R China.
   [Wu, Fan; Li, Lingbo] Turing Intelligence Technol Ltd, 1 Ropemaker St, London EC2Y 9ST, England.
C3 Wuhan University
RP Xuan, JF (corresponding author), Wuhan Univ, Sch Comp Sci, Wuhan 430072, Peoples R China.
EM xuyisen@whu.edu.cn; fan@turintech.ai; jxy@whu.edu.cn;
   lingbo@turintech.ai; jxuan@whu.edu.cn
RI Xuan, Jifeng/F-2177-2016
OI Xuan, Jifeng/0000-0002-2968-3496
FU National Key R&D Program of China [2018YFB1003901]; National Natural
   Science Foundation of China [61872273]; Advance Research Projects of
   Civil Aerospace Technology - Communications, Navigation and Remote
   Sensing Integrated Applications and Multi-source Spatial Data Fusion
   Technology
FX The work is supported by the National Key R&D Program of China under
   Grant No. 2018YFB1003901, the National Natural Science Foundation of
   China under Grant No. 61872273, and the Advance Research Projects of
   Civil Aerospace Technology - Communications, Navigation and Remote
   Sensing Integrated Applications and Multi-source Spatial Data Fusion
   Technology.
CR ALBRECHT AJ, 1983, IEEE T SOFTWARE ENG, V9, P639, DOI 10.1109/TSE.1983.235271
   Altenkirch T, 2001, LECT NOTES COMPUT SC, V2044, P8
   [Anonymous], 2009, HACKERNEWS
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Bassoy C, 2018, LECT NOTES COMPUT SC, V10860, P639, DOI 10.1007/978-3-319-93698-7_49
   Brachthäuser JI, 2017, SCALA'17: PROCEEDINGS OF THE 8TH ACM SIGPLAN INTERNATIONAL SYMPOSIUM ON SCALA, P67, DOI 10.1145/3136000.3136007
   Budtz-Jorgensen E, 2007, ANN EPIDEMIOL, V17, P27, DOI 10.1016/j.annepidem.2006.05.007
   CARDELLI L, 1985, COMPUT SURV, V17, P471, DOI 10.1145/6041.6042
   Cassez F, 2017, SCALA'17: PROCEEDINGS OF THE 8TH ACM SIGPLAN INTERNATIONAL SYMPOSIUM ON SCALA, P51, DOI 10.1145/3136000.3136004
   Cohen J., 2013, APPL MULTIPLE REGRES
   Fry T, 2020, ARXIV200308349
   Gousios G, 2016, PROC INT CONF SOFTW, P285, DOI 10.1145/2884781.2884826
   Gu YF, 2019, J SYST SOFTWARE, V148, P88, DOI 10.1016/j.jss.2018.11.004
   Judziewicz Emmet J., 2013, Journal of the Botanical Research Institute of Texas, V7, P137
   Karlsson O, 2018, PROCEEDINGS OF THE 9TH ACM SIGPLAN INTERNATIONAL SYMPOSIUM ON SCALA (SCALA '18), P72, DOI 10.1145/3241653.3241661
   Koch R, 2011, 80 20 PRINCIPLE SECR
   Kroll L, 2017, SCALA'17: PROCEEDINGS OF THE 8TH ACM SIGPLAN INTERNATIONAL SYMPOSIUM ON SCALA, P73, DOI 10.1145/3136000.3136009
   Lee PH, 2014, SCI REP-UK, V4, DOI 10.1038/srep06085
   Lincke D, 2012, INT WORKSH LANG DESC, P3, DOI [10.1145/2427048.2427051, DOI 10.1145/2427048.2427051]
   Madhavan R, 2017, ACM SIGPLAN NOTICES, V52, P330, DOI 10.1145/3093333.3009874
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   McIntosh S, 2016, EMPIR SOFTW ENG, V21, P2146, DOI 10.1007/s10664-015-9381-9
   Nakaguchi T, 2016, P IEEE I C SERV COMP, P798, DOI 10.1109/SCC.2016.110
   Nystrom N, 2017, SCALA'17: PROCEEDINGS OF THE 8TH ACM SIGPLAN INTERNATIONAL SYMPOSIUM ON SCALA, P18, DOI 10.1145/3136000.3136011
   Odersky M., 2004, Tech. Rep. IC/2004/64
   Racordon D, 2018, ARXIV181208278 CORR
   Rahman W, 2020, INT WORKS SOFTW CLON, P38, DOI [10.1109/iwsc50091.2020.9047640, 10.1109/IWSC50091.2020.9047640]
   Reed WJ, 2001, ECON LETT, V74, P15, DOI 10.1016/S0165-1765(01)00524-9
   Reynders B, 2018, C COMP 2 INT C ART S, P69, DOI [10.1145/3191697.3191731, DOI 10.1145/3191697.3191731]
   Richardson B, 2017, SHOULD I USE HIGHER
   Richmond D, 2018, IEEE T COMPUT AID D, V37, P2835, DOI 10.1109/TCAD.2018.2857259
   Rigby PC, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P541, DOI 10.1145/1985793.1985867
   Rusu V, 2017, J LOG ALGEBR METHODS, V93, P68, DOI 10.1016/j.jlamp.2017.09.002
   Selakovic M, 2018, PACMPL, V2
   van der Lippe T, 2016, SCALA'16: PROCEEDINGS OF THE 2016 7TH ACM SIGPLAN SYMPOSIUM ON SCALA, P65, DOI 10.1145/2998392.2998402
   Voirol N, 2015, P 6 ACM SIGPLAN S SC, P18, DOI [10.1145/2774975.2774978, DOI 10.1145/2774975.2774978]
   Walpole R. E., 2007, Probability & Statistics for Engineers and Scientists
   Wester P, 2013, ARCHIVING 2013: FINAL PROGRAM AND PROCEEDINGS, P1
   Wester Rinse, 2014, Reconfigurable Computing: Architectures, Tools, and Applications. 10th International Symposium, ARC 2014. Proceedings: LNCS 8405, P219, DOI 10.1007/978-3-319-05960-0_21
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Xu Y., 2019, IEEE ICC, DOI DOI 10.1109/icc.2019.8761264
   Zhang X, 2018, PROC IEEE INT CONF S, P228, DOI 10.1109/ICSME.2018.00032
   Zhao YY, 2017, IEEE INT CONF AUTOM, P60, DOI 10.1109/ASE.2017.8115619
   Zou WQ, 2019, EMPIR SOFTW ENG, V24, P3871, DOI 10.1007/s10664-019-09720-x
NR 44
TC 4
Z9 5
U1 0
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2020
VL 25
IS 6
BP 4547
EP 4584
DI 10.1007/s10664-020-09842-7
EA SEP 2020
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA OI4BB
UT WOS:000566066800002
DA 2024-07-18
ER

PT J
AU Kitchenham, B
   Madeyski, L
   Brereton, P
AF Kitchenham, Barbara
   Madeyski, Lech
   Brereton, Pearl
TI Meta-analysis for families of experiments in software engineering: a
   systematic review and reproducibility and validity assessment
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Evidence-based software engineering; Systematic review; Meta-analysis;
   Effect size; Families of experiments; Reproducible research
ID EFFECT SIZE; SEQUENCE DIAGRAMS; UML DIAGRAMS; CODE; MODEL;
   UNDERSTANDABILITY; COMPREHENSION
AB Context Previous studies have raised concerns about the analysis and meta-analysis of crossover experiments and we were aware of several families of experiments that used crossover designs and meta-analysis. Objective To identify families of experiments that used meta-analysis, to investigate their methods for effect size construction and aggregation, and to assess the reproducibility and validity of their results. Method We performed a systematic review (SR) of papers reporting families of experiments in high quality software engineering journals, that attempted to apply meta-analysis. We attempted to reproduce the reported meta-analysis results using the descriptive statistics and also investigated the validity of the meta-analysis process. Results Out of 13 identified primary studies, we reproduced only five. Seven studies could not be reproduced. One study which was correctly analyzed could not be reproduced due to rounding errors. When we were unable to reproduce results, we provide revised meta-analysis results. To support reproducibility of analyses presented in our paper, it is complemented by the reproducer R package. Conclusions Meta-analysis is not well understood by software engineering researchers. To support novice researchers, we present recommendations for reporting and meta-analyzing families of experiments and a detailed example of how to analyze a family of 4-group crossover experiments.
C1 [Kitchenham, Barbara; Brereton, Pearl] Keele Univ, Sch Comp & Math, Keele ST5 5BG, Staffs, England.
   [Madeyski, Lech] Wroclaw Univ Sci & Technol, Fac Comp Sci & Management, Wyb Wyspianskiego 27, PL-50370 Wroclaw, Poland.
C3 Keele University; Wroclaw University of Science & Technology
RP Madeyski, L (corresponding author), Wroclaw Univ Sci & Technol, Fac Comp Sci & Management, Wyb Wyspianskiego 27, PL-50370 Wroclaw, Poland.
EM b.a.kitchenham@keele.ac.uk; Lech.Madeyski@pwr.edu.pl;
   o.p.brereton@keele.ac.uk
RI Kitchenham, Barbara/AAL-4311-2020; Madeyski, Lech/D-4986-2012
OI Kitchenham, Barbara/0000-0002-6134-8460; Madeyski,
   Lech/0000-0003-3907-3357
CR Abrahao S, 2013, IEEE T SOFTWARE ENG, V39, P327, DOI 10.1109/TSE.2012.27
   Abrahao S, 2011, INFORM SCIENCES, V181, P3356, DOI 10.1016/j.ins.2011.04.005
   [Anonymous], 2002, J WILEY
   [Anonymous], 2011, Understanding the New Statistics: Effect Sizes, Confidence Intervals, and Meta-Analysis
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   BioStat, 2006, COMPR MET CMA V2 0
   Borenstein M., 2009, INT STAT REV
   CHOW S.-C., 1992, Design and Analysis of Bioavailability and Bioequivalence Studies
   Ciolkowski M, 2009, INT SYMP EMP SOFTWAR, P133, DOI 10.1109/ESEM.2009.5316026
   Cruz-Lemus JA, 2011, INFORM SOFTWARE TECH, V53, P1391, DOI 10.1016/j.infsof.2011.07.002
   Cruz-Lemus JA, 2009, EMPIR SOFTW ENG, V14, P685, DOI 10.1007/s10664-009-9106-z
   Fernandez A, 2013, J SYST SOFTWARE, V86, P161, DOI 10.1016/j.jss.2012.07.043
   Fernández-Sáez AM, 2016, EMPIR SOFTW ENG, V21, P212, DOI 10.1007/s10664-014-9354-4
   Fernández-Sáez AM, 2015, INFORM SOFTWARE TECH, V57, P644, DOI 10.1016/j.infsof.2014.05.014
   Fisher R. A., 1921, Metron, V1, P3, DOI DOI 10.1093/BIOMET/9.1-2.22
   Gonzalez-Huerta J, 2015, INFORM SOFTWARE TECH, V57, P405, DOI 10.1016/j.infsof.2014.05.018
   Hadar I, 2013, INFORM SOFTWARE TECH, V55, P1823, DOI 10.1016/j.infsof.2013.05.003
   Hedges LV., 2014, STAT METHODS META AN
   Higgins JPT, 2002, STAT MED, V21, P1539, DOI 10.1002/sim.1186
   Hunter J.E., 1990, METHODS METAANALYSIS
   Johnson NL, 1940, BIOMETRIKA, V31, P362, DOI 10.1093/biomet/31.3-4.362
   Jureczko M, 2015, E-INFORMATICA, V9, P21, DOI 10.5277/e-Inf150102
   Kitchenham B., 2015, Evidence-Based Software Engineering and Systematic Reviews
   Kitchenham B, 2019, SUPPLEMENTARY MAT PA
   Kitchenham B, 2019, PROCEEDINGS OF EASE 2019 - EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING, P134, DOI 10.1145/3319008.3319009
   Kitchenham B, 2018, STAT MED, V37, P320, DOI 10.1002/sim.7379
   Kitchenham B, 2017, EMPIR SOFTW ENG, V22, P579, DOI 10.1007/s10664-016-9437-5
   Laitenberger O, 2001, IEEE T SOFTWARE ENG, V27, P387, DOI 10.1109/32.922713
   Lakens D, 2013, FRONT PSYCHOL, V4, DOI 10.3389/fpsyg.2013.00863
   Lipsey MW, 2001, PRACTICAL METEANALYS
   Madeyski L., 2019, REPRODUCER REPRODUCE
   Madeyski L, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P420, DOI 10.1145/3180155.3182556
   Madeyski L, 2018, EMPIR SOFTW ENG, V23, P1982, DOI 10.1007/s10664-017-9574-5
   Madeyski L, 2017, J INTELL FUZZY SYST, V32, P1509, DOI 10.3233/JIFS-169146
   Madeyski L, 2015, SOFTWARE QUAL J, V23, P393, DOI 10.1007/s11219-014-9241-7
   Morales JM, 2016, J SYST SOFTWARE, V114, P82, DOI 10.1016/j.jss.2015.12.056
   Morris SB, 2000, BRIT J MATH STAT PSY, V53, P17, DOI 10.1348/000711000159150
   Morris SB, 2002, PSYCHOL METHODS, V7, P105, DOI 10.1037//1082-989X.7.1.105
   Pfahl D, 2004, INFORM SOFTWARE TECH, V46, P127, DOI 10.1016/S0950-5849(03)00115-0
   Rosenthal R., 1991, METAANALYTIC PROCEDU
   Santos A, 2018, ARXIV180509009 CORR
   Scanniello G, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2491912
   Teruel MA, 2012, INFORM SOFTWARE TECH, V54, P1215, DOI 10.1016/j.infsof.2012.06.001
   Vegas S, 2016, IEEE T SOFTWARE ENG, V42, P120, DOI 10.1109/TSE.2015.2467378
   Viechtbauer W, 2010, J STAT SOFTW, V36, P1, DOI 10.18637/jss.v036.i03
NR 45
TC 20
Z9 20
U1 3
U2 13
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN
PY 2020
VL 25
IS 1
BP 353
EP 401
DI 10.1007/s10664-019-09747-0
PG 49
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KP0WS
UT WOS:000515965100009
OA hybrid
DA 2024-07-18
ER

PT J
AU Mori, T
   Uchihira, N
AF Mori, Toshiki
   Uchihira, Naoshi
TI Balancing the trade-off between accuracy and interpretability in
   software defect prediction
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software defect prediction; Predictive accuracy; Interpretability;
   Trade-off analysis; Naive Bayes classifier; Weights of evidence;
   Ensemble learning; Model approximation
ID NETWORKS
AB ContextClassification techniques of supervised machine learning have been successfully applied to various domains of practice. When building a predictive model, there are two important criteria: predictive accuracy and interpretability, which generally have a trade-off relationship. In particular, interpretability should be accorded greater emphasis in the domains where the incorporation of expert knowledge into a predictive model is required.ObjectiveThe aim of this research is to propose a new classification model, called superposed naive Bayes (SNB), which transforms a naive Bayes ensemble into a simple naive Bayes model by linear approximation.MethodIn order to evaluate the predictive accuracy and interpretability of the proposed method, we conducted a comparative study using well-known classification techniques such as rule-based learners, decision trees, regression models, support vector machines, neural networks, Bayesian learners, and ensemble learners, over 13 real-world public datasets.ResultsA trade-off analysis between the accuracy and interpretability of different classification techniques was performed with a scatter plot comparing relative ranks of accuracy with those of interpretability. The experiment results show that the proposed method (SNB) can produce a balanced output that satisfies both accuracy and interpretability criteria.ConclusionsSNB offers a comprehensible predictive model based on a simple and transparent model structure, which can provide an effective way for balancing the trade-off between accuracy and interpretability.
C1 [Mori, Toshiki] Toshiba Co Ltd, Corp Software Engn & Technol Ctr, Kawasaki, Kanagawa, Japan.
   [Mori, Toshiki; Uchihira, Naoshi] JAIST, Sch Knowledge Sci, Nomi, Ishikawa, Japan.
C3 Toshiba Corporation; Japan Advanced Institute of Science & Technology
   (JAIST)
RP Mori, T (corresponding author), Toshiba Co Ltd, Corp Software Engn & Technol Ctr, Kawasaki, Kanagawa, Japan.; Mori, T (corresponding author), JAIST, Sch Knowledge Sci, Nomi, Ishikawa, Japan.
EM toshiki1.mori@toshiba.co.jp; uchihira@jaist.ac.jp
OI Uchihira, Naoshi/0000-0002-8107-089X
CR AGTERBERG FP, 1990, COMPUT GEOL, V7, P1
   Akaike H, 1973, 2 INT S INF THEOR, P267, DOI [DOI 10.1007/978-1-4612-1694-0_15, 10.1007/978-1-4612-0919-5_38, DOI 10.1007/978-1-4612-0919-5_38]
   Allahyari H, 2011, FRONT ARTIF INTEL AP, V227, P11, DOI 10.3233/978-1-60750-754-3-11
   Aly M., 2005, NEURAL NETWORKS, V19, P9
   [Anonymous], 1995, 11 C UNC ART INT SAN, DOI DOI 10.1109/TGRS.2004.834800
   [Anonymous], 2008, P INT C SOFTW ENG, DOI DOI 10.1145/1370788.1370793
   [Anonymous], 2007, PROMISE 07, DOI DOI 10.1109/PROMISE.2007.10
   [Anonymous], 2016, The promise repository of empirical software engineering data. north carolina state university, department of computer science
   Bauer E, 1999, MACH LEARN, V36, P105, DOI 10.1023/A:1007515423169
   Bishop Christopher M, 2006, PATTERN RECOGN, V128, P1
   BONHAMCARTER GF, 1988, PHOTOGRAMM ENG REM S, V54, P1585
   Bouckaert RR, 2004, LECT NOTES ARTIF INT, V3339, P1089
   Breiman L, 2001, MACH LEARN, V45, P5, DOI 10.1023/A:1010933404324
   Breiman L, 1996, MACH LEARN, V24, P123, DOI 10.1007/bf00058655
   BRIAND LC, 1992, IEEE T SOFTWARE ENG, V18, P931, DOI 10.1109/32.177363
   Burges CJC, 1998, DATA MIN KNOWL DISC, V2, P121, DOI 10.1023/A:1009715923555
   Bury H., 2008, New Approaches in Automation and Robotics, P153, DOI [10.5772/5393, DOI 10.5772/5393]
   Carranza E.J.M., 2004, NAT RESOUR RES, V13, P173, DOI [DOI 10.1023/B:NARR.0000046919.87758.F5, 10.1023/B:NARR.0000046919.87758.f5]
   Cestnik B., 1990, ECAI 90. Proceedings of the 9th European Conference on Artificial Intelligence, P147
   Choetkiertikul M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P280, DOI 10.1109/MSR.2015.33
   Cohen W.W., 1995, P 12 INT C MACH LEAR, P115, DOI [DOI 10.1016/B978-1-55860-377-6.50023-2, 10.1016/B978-1-55860-377-6.50023-2]
   Dahal RK, 2008, ENVIRON GEOL, V54, P311, DOI 10.1007/s00254-007-0818-3
   Dejaeger K, 2013, IEEE T SOFTWARE ENG, V39, P237, DOI 10.1109/TSE.2012.20
   Dejaeger K, 2012, IEEE T SOFTWARE ENG, V38, P375, DOI 10.1109/TSE.2011.55
   Domingos P, 1997, MACH LEARN, V29, P103, DOI 10.1023/A:1007413511361
   Fawcett T, 2006, PATTERN RECOGN LETT, V27, P861, DOI 10.1016/j.patrec.2005.10.010
   Fayyad U, 1996, AI MAG, V17, P37
   FAYYAD UM, 1993, IJCAI-93, VOLS 1 AND 2, P1022
   Fenton NE, 1999, IEEE T SOFTWARE ENG, V25, P675, DOI 10.1109/32.815326
   Fenton N, 2008, EMPIR SOFTW ENG, V13, P499, DOI 10.1007/s10664-008-9072-x
   Freitas AA., 2014, ACM SIGKDD EXPLORATI, V15, P1, DOI [DOI 10.1145/2594473, DOI 10.1145/2594473.2594475]
   Freitas AA., 2004, SIGKDD Explor. Newsl., V6, P77, DOI [DOI 10.1145/1046456.1046467, 10.1145/1046456.1046467]
   Freund Y, 1997, J COMPUT SYST SCI, V55, P119, DOI 10.1006/jcss.1997.1504
   Friedman JH, 2001, ANN STAT, V29, P1189, DOI 10.1214/aos/1013203451
   Friedman JH, 2002, COMPUT STAT DATA AN, V38, P367, DOI 10.1016/S0167-9473(01)00065-2
   Friedman N, 1997, MACH LEARN, V29, P131, DOI 10.1023/A:1007465528199
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Goldstein A, 2015, J COMPUT GRAPH STAT, V24, P44, DOI 10.1080/10618600.2014.907095
   Good I. J., 1985, BAYESIAN STAT, V1, P249
   Goodman SN, 1999, ANN INTERN MED, V130, P995, DOI 10.7326/0003-4819-130-12-199906150-00008
   Guo L, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P417
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Halstead M. H., 1977, ELEMENTS SOFTWARE SC
   Hastie T., 2009, The Elements of Statistical Learning
   Heckerman D., 1991, METHOD INFORM MED, V31, P90
   HOLTE RC, 1993, MACH LEARN, V11, P63, DOI 10.1023/A:1022631118932
   Hu Y, 2013, DECIS SUPPORT SYST, V56, P439, DOI 10.1016/j.dss.2012.11.001
   Huysmans J, 2011, DECIS SUPPORT SYST, V51, P141, DOI 10.1016/j.dss.2010.12.003
   Jain AK, 1996, COMPUTER, V29, P31, DOI 10.1109/2.485891
   Jelihovschi E.G., 2014, TEMA (São Carlos), V15, P3
   Jiang LX, 2009, IEEE T KNOWL DATA EN, V21, P1361, DOI 10.1109/TKDE.2008.234
   Jiang Y, 2008, EMPIR SOFTW ENG, V13, P561, DOI 10.1007/s10664-008-9079-3
   Kamei Y, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 5, P33, DOI 10.1109/SANER.2016.56
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kohavi R., 1996, KDD-96 Proceedings. Second International Conference on Knowledge Discovery and Data Mining, P202
   KONONENKO I, 1993, APPL ARTIF INTELL, V7, P317, DOI 10.1080/08839519308949993
   Kotsiantis SB, 2007, INFORM-J COMPUT INFO, V31, P249
   Kulesza T., 2015, P 20 INT C INTELLIGE, P126, DOI DOI 10.1145/2678025.2701399
   LECESSIE S, 1992, APPL STAT-J ROY ST C, V41, P191
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Lewis D.D, 1998, EUR C MACH LEARN, P4
   Lipton ZC, 2018, COMMUN ACM, V61, P36, DOI 10.1145/3233231
   Madigan D, 1997, J COMPUT GRAPH STAT, V6, P160, DOI 10.2307/1390929
   Malhotra R, 2015, APPL SOFT COMPUT, V27, P504, DOI 10.1016/j.asoc.2014.11.023
   Martens D, 2011, DECIS SUPPORT SYST, V51, P782, DOI 10.1016/j.dss.2011.01.013
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Mori Toshiki, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P283, DOI 10.1109/ESEM.2013.40
   Mori T, 2015, 2015 IEEE 14TH INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA), P1228, DOI 10.1109/ICMLA.2015.147
   Platt JC, 2000, ADV NEUR IN, P61
   Quinlan J.R., 1993, C4 5 PROGRAMS MACHIN
   Ribeiro MT, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1135, DOI 10.1145/2939672.2939778
   Ridgeway G., 1998, Proceedings Fourth International Conference on Knowledge Discovery and Data Mining, P101
   Rish Irina, 2001, IJCAI 2001 WORKSHOP, V3, P41
   SAATY TL, 1990, EUR J OPER RES, V48, P9, DOI 10.1016/0377-2217(90)90057-I
   SAKAMOTO Y, 1997, ANN INST STAT MATH, V30, P185
   SCHWARZ G, 1978, ANN STAT, V6, P461, DOI 10.1214/aos/1176344136
   Shepperd M, 2013, IEEE T SOFTWARE ENG, V39, P1208, DOI 10.1109/TSE.2013.11
   SPIEGELHALTER DJ, 1984, J ROY STAT SOC A, V147, P35, DOI 10.2307/2981737
   Vandecruys O, 2008, J SYST SOFTWARE, V81, P823, DOI 10.1016/j.jss.2007.07.034
   Webb GI, 2005, MACH LEARN, V58, P5, DOI 10.1007/s10994-005-4258-6
   Webb GI, 2000, MACH LEARN, V40, P159, DOI 10.1023/A:1007659514849
   Wen JF, 2012, INFORM SOFTWARE TECH, V54, P41, DOI 10.1016/j.infsof.2011.09.002
   Witten IH, 2011, MOR KAUF D, P1
   Yang Y, 2009, MACH LEARN, V74, P39, DOI 10.1007/s10994-008-5083-5
   Zadrozny B., 2002, P 8 ACM SIGKDD INT C, P694, DOI [10.1145/775047.775151, DOI 10.1145/775047.775151]
   Zhang JQ, 2004, 18TH INTERNATIONAL CONFERENCE ON ADVANCED INFORMATION NETWORKING AND APPLICATIONS, VOL 1 (LONG PAPERS), PROCEEDINGS, P562
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
NR 89
TC 43
Z9 45
U1 2
U2 28
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2019
VL 24
IS 2
BP 779
EP 825
DI 10.1007/s10664-018-9638-1
PG 47
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HQ8DM
UT WOS:000462654200008
DA 2024-07-18
ER

PT J
AU Ceccato, M
   Tonella, P
   Basile, C
   Falcarin, P
   Torchiano, M
   Coppens, B
   De Sutter, B
AF Ceccato, Mariano
   Tonella, Paolo
   Basile, Cataldo
   Falcarin, Paolo
   Torchiano, Marco
   Coppens, Bart
   De Sutter, Bjorn
TI Understanding the behaviour of hackers while performing attack tasks in
   a professional setting and in a public challenge
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software protection; Software hacking; Attack process; Attack model;
   Attack taxonomy; Empirical study; Hacker model; Reverse engineering;
   Analysis tools; Code understanding; Defeat protections
ID SOURCE CODE OBFUSCATION; COMPREHENSION; MAINTENANCE; PROGRAMMERS
AB When critical assets or functionalities are included in a piece of software accessible to the end users, code protections are used to hinder or delay the extraction or manipulation of such critical assets. The process and strategy followed by hackers to understand and tamper with protected software might differ from program understanding for benign purposes. Knowledge of the actual hacker behaviours while performing real attack tasks can inform better ways to protect the software and can provide more realistic assumptions to the developers, evaluators, and users of software protections. Within Aspire, a software protection research project funded by the EU under framework programme FP7, we have conducted three industrial case studies with the involvement of professional penetration testers and a public challenge consisting of eight attack tasks with open participation. We have applied a systematic qualitative analysis methodology to the hackers' reports relative to the industrial case studies and the public challenge. The qualitative analysis resulted in 459 and 265 annotations added respectively to the industrial and to the public challenge reports. Based on these annotations we built a taxonomy consisting of 169 concepts. They address the hacker activities related to (i) understanding code; (ii) defining the attack strategy; (iii) selecting and customizing the tools; and (iv) defeating the protections. While there are many commonalities between professional hackers and practitioners, we could spot many fundamental differences. For instance, while industrial professional hackers aim at elaborating automated and reproducible deterministic attacks, practitioners prefer to minimize the effort and try many different manual tasks. This analysis allowed us to distill a number of new research directions and potential improvements for protection techniques. In particular, considering the critical role of analysis tools, protection techniques should explicitly attack them, by exploiting analysis problems and complexity aspects that available automated techniques are bad at addressing.
C1 [Ceccato, Mariano] Fdn Bruno Kessler, Trento, Italy.
   [Tonella, Paolo] Fdn Bruno Kessler, Software Engn Res Unit, Trento, Italy.
   [Basile, Cataldo] Politecn Torino, Comp Engn, Turin, Italy.
   [Torchiano, Marco] Politecn Torino, Control & Comp Engn Dept, Turin, Italy.
   [Falcarin, Paolo] Univ East London, Comp Sci, London, England.
   [Coppens, Bart; De Sutter, Bjorn] Univ Ghent, Ghent, Belgium.
C3 Fondazione Bruno Kessler; Fondazione Bruno Kessler; Polytechnic
   University of Turin; Polytechnic University of Turin; University of East
   London; Ghent University
RP Ceccato, M (corresponding author), Fdn Bruno Kessler, Trento, Italy.
EM ceccato@fbk.eu; tonella@fbk.eu; cataldo.basile@polito.it;
   falcarin@uel.ac.uk; marco.torchiano@polito.it; bart.coppens@ugent.be;
   bjorn.desutter@ugent.be
RI Tonella, Paolo/C-1702-2015; Basile, Cataldo/U-3618-2019; Ceccato,
   Mariano/T-7139-2019; Falcarin, Paolo/B-6635-2015
OI Ceccato, Mariano/0000-0001-7325-0316; Torchiano,
   Marco/0000-0001-5328-368X; Falcarin, Paolo/0000-0003-1933-5348; BASILE,
   CATALDO/0000-0002-8016-1490
FU European Union [609734]
FX The research leading to these results has received funding from the
   European Union Seventh Framework Programme (FP7/2007-2013) under grant
   agreement number 609734.
CR Anckaert B, 2007, QOP'07: PROCEEDINGS OF THE 2007 ACM WORKSHOP ON QUALITY OF PROTECTION, P15
   Andrews A, 2002, PROC IEEE INT CONF S, P359, DOI 10.1109/ICSM.2002.1167792
   [Anonymous], 2016, 6 WORKSH SOFTW SEC P, DOI DOI 10.1145/3015135.3015142
   [Anonymous], 2001, LECT NOTES COMPUTER, DOI DOI 10.1007/3-540-44647-8_2
   [Anonymous], 2009, Surreptitious Software: Obfuscation, Watermarking, and Tamperproofing for Software Protection: Obfuscation, Watermarking, and Tamperproofing for Software Protection
   [Anonymous], 2013, P SIGCHI C HUMAN FAC
   Armknecht F., 2013, ACM SIGSAC Conference on Computer Communications Security, P1
   Burkhardt J.-M., 2002, Empirical Software Engineering, V7, P115, DOI 10.1023/A:1015297914742
   Cabutto A., 2015, PROC 2 ACM WORKSHOP, P95, DOI 10.1145/2808475.2808481
   Capiluppi A., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P71, DOI 10.1109/WCRE.2012.17
   Ceccato M, 2017, INT C PROGRAM COMPRE, P154, DOI 10.1109/ICPC.2017.2
   Ceccato M, 2007, SEVENTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P27
   Ceccato M, 2015, EMPIR SOFTW ENG, V20, P1486, DOI 10.1007/s10664-014-9321-0
   Ceccato M, 2014, EMPIR SOFTW ENG, V19, P1040, DOI 10.1007/s10664-013-9248-x
   Ceccato M, 2009, INT C PROGRAM COMPRE, P178, DOI 10.1109/ICPC.2009.5090041
   Collberg C., 1997, TAXONOMY OBFUSCATING
   Demissie BF, 2015, 2015 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON SOFTWARE PROTECTION (SPRO), P38, DOI 10.1109/SPRO.2015.15
   Edmundson Anne, 2013, Engineering Secure Software and Systems. 5th International Symposium, ESSoS 2013. Proceedings, P197, DOI 10.1007/978-3-642-36563-8_14
   Flick, 2014, INTRO QUALITATIVE RE
   Glaser B. G., 1967, DISCOV GROUNDED THEO
   Katipally Rajeshwar., 2011, CSIIRW, P63, DOI DOI 10.1145/2179298.2179369
   LETOVSKY S, 1987, J SYST SOFTWARE, V7, P325, DOI 10.1016/0164-1212(87)90032-X
   Linn C., 2003, P 10 ACM C COMP COMM, P290, DOI DOI 10.1145/948109.948149
   LITTMAN DC, 1987, J SYST SOFTWARE, V7, P341, DOI 10.1016/0164-1212(87)90033-1
   Mallikarjunan K.Narasimma, 2015, IEEE WORKSH COMP INT, DOI [10.1109/WCI.2015.7495520, DOI 10.1109/WCI.2015.7495520]
   PENNINGTON N, 1987, COGNITIVE PSYCHOL, V19, P295, DOI 10.1016/0010-0285(87)90007-7
   Prechelt L, 2016, PROC INT CONF SOFTW, P1017, DOI 10.1145/2884781.2884789
   Sillito J., 2006, Proc. of the ACM SIGSOFT Int'l Symp. on Foundations of Software Engineering, P23, DOI DOI 10.1145/1181775.1181779
   Stol KJ, 2016, PROC INT CONF SOFTW, P120, DOI 10.1145/2884781.2884833
   Strauss A.L., 1990, BASICS QUALITATIVE R
   Sutherland I, 2006, COMPUT SECUR, V25, P221, DOI 10.1016/j.cose.2005.11.002
   Udupa SK, 2005, WCRE: 12TH WORKING CONFERENCE ON REVERSE ENGINEERING 2005, PROCEEDINGS, P45
   van Oorschot PC, 2005, IEEE T DEPEND SECURE, V2, P82, DOI 10.1109/TDSC.2005.24
   Vectra, 2017, ATT BEH IND REP, pAttacker
   Viticchié A, 2016, IEEE INT WORK C SO, P11, DOI 10.1109/SCAM.2016.17
   VONMAYRHAUSER A, 1995, SOFTWARE ENG J, V10, P171, DOI 10.1049/sej.1995.0023
   vonMayrhauser A, 1997, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P12, DOI 10.1109/ICSM.1997.624226
   vonMayrhauser A, 1997, P INT COMP SOFTW APP, P630, DOI 10.1109/CMPSAC.1997.625084
   vonMayrhauser A, 1996, IEEE T SOFTWARE ENG, V22, P424, DOI 10.1109/32.508315
   VONMAYRHAUSER A, 1994, PROC INT CONF SOFTW, P39, DOI 10.1109/ICSE.1994.296764
   vonMayrhauser A, 1996, FOURTH WORKSHOP ON PROGRAM COMPREHENSION, PROCEEDINGS, P68, DOI 10.1109/WPC.1996.501122
   Wheeler D.A., 2001, More than a gigabuck: Estimating GNU/Linux's size
   Wyseur B, 2009, THESIS
NR 43
TC 16
Z9 18
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2019
VL 24
IS 1
BP 240
EP 286
DI 10.1007/s10664-018-9625-6
PG 47
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HL3RV
UT WOS:000458634400009
DA 2024-07-18
ER

PT J
AU Jha, N
   Mahmoud, A
AF Jha, Nishant
   Mahmoud, Anas
TI Using frame semantics for classifying and summarizing application store
   reviews
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Requirements elicitation; Application store; Classification;
   Summarization; FrameNet; Frame semantics
ID LEXRANK
AB Text mining techniques have been recently employed to classify and summarize user reviews on mobile application stores. However, due to the inherently diverse and unstructured nature of user-generated online textual data, text-based review mining techniques often produce excessively complicated models that are prone to overfitting. In this paper, we propose a novel approach, based on frame semantics, for app review mining. Semantic frames help to generalize from raw text (individual words) to more abstract scenarios (contexts). This lower-dimensional representation of text is expected to enhance the predictive capabilities of review mining techniques and reduce the chances of overfitting. Specifically, our analysis in this paper is two-fold. First, we investigate the performance of semantic frames in classifying informative user reviews into various categories of actionable software maintenance requests. Second, we propose and evaluate the performance of multiple summarization algorithms in generating concise and representative summaries of informative reviews. Three different datasets of app store reviews, sampled from a broad range of application domains, are used to conduct our experimental analysis. The results show that semantic frames can enable an efficient and accurate review classification process. However, in review summarization tasks, our results show that text-based summarization generates more comprehensive summaries than frame-based summarization. Finally, we introduces MARC 2.0, a review classification and summarization suite that implements the algorithms investigated in our analysis.
C1 [Jha, Nishant; Mahmoud, Anas] Louisiana State Univ, Div Comp Sci & Engn, Baton Rouge, LA 70803 USA.
C3 Louisiana State University System; Louisiana State University
RP Mahmoud, A (corresponding author), Louisiana State Univ, Div Comp Sci & Engn, Baton Rouge, LA 70803 USA.
EM njha1@lsu.edu; mahmoud@csc.lsu.edu
FU Louisiana Board of Regents Research Competitiveness Subprogram (LA
   BoR-RCS) [LEQSF(2015-18)-RD-A-07]
FX This work was supported in part by the Louisiana Board of Regents
   Research Competitiveness Subprogram (LA BoR-RCS), contract number:
   LEQSF(2015-18)-RD-A-07.
CR Agarwal A., 2014, P 14 C EUR CHAPT ASS, P211
   [Anonymous], 2003, Proceedings of the 7th International Conference on Empirical Assessment in Software Engineering
   [Anonymous], 2003, P 2003 C N AM CHAPT
   [Anonymous], 2012, Service Science, DOI [10.1287/serv.1120.0004, DOI 10.1287/SERV.1120.0004]
   [Anonymous], 2011, AAAI C WEBL SOC MED
   [Anonymous], 1999, TECH REP
   [Anonymous], 1998, LEARNING TEXT CATEGO
   [Anonymous], 2017, DESIGN ANAL EXPT
   Baker C.F., 1998, P 36 ANN M ASS COMP, P86, DOI [DOI 10.3115/980845.980860, DOI 10.3115/980451.980860]
   Bano M, 2015, INFORM SOFTWARE TECH, V58, P148, DOI 10.1016/j.infsof.2014.06.011
   Barker E., 2016, International Conference on Language Resources and Evaluation, P23
   Barzilay Regina, 1999, P 37 ANN M ASS COMPU, P550, DOI DOI 10.1115/10146781014760
   Berry DM, 2017, 2017 IEEE 25TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW), P284, DOI 10.1109/REW.2017.25
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Brin S, 1998, COMPUT NETWORKS ISDN, V30, P107, DOI 10.1016/S0169-7552(98)00110-X
   Brusilovsky P., 2007, The Adaptive Web: Methods and Strategies of Web Personalization, P335
   Burges CJC, 1998, DATA MIN KNOWL DISC, V2, P121, DOI 10.1023/A:1009715923555
   Cai L., 2004, ACM INT C INF KNOWL, P78, DOI DOI 10.1145/1031171.1031186
   Carreño LVG, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P582, DOI 10.1109/ICSE.2013.6606604
   Chen N, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P767, DOI 10.1145/2568225.2568263
   Cheung J. C., 2008, THESIS
   Ciurumelea A, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P91, DOI 10.1109/SANER.2017.7884612
   Das D., 2010, CMULTI10001
   Di Sorbo A, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P499, DOI 10.1145/2950290.2950299
   Dumais S., 2000, SIGIR Forum, V34, P256
   Erkan G, 2004, J ARTIF INTELL RES, V22, P457, DOI 10.1613/jair.1523
   Ester M., 1996, KDD-96 Proceedings. Second International Conference on Knowledge Discovery and Data Mining, P226
   FILLMORE CJ, 1976, ANN NY ACAD SCI, V280, P20, DOI 10.1111/j.1749-6632.1976.tb25467.x
   Fleischman M, 2003, PROCEEDINGS OF THE 2003 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING, P49
   Groen EC, 2017, INT REQUIR ENG CONF, P80, DOI 10.1109/RE.2017.73
   Guzman E, 2017, INT REQUIR ENG CONF, P11, DOI 10.1109/RE.2017.88
   Guzman E, 2016, INT REQUIR ENG CONF, P96, DOI 10.1109/RE.2016.67
   Guzman E, 2015, IEEE INT CONF AUTOM, P771, DOI 10.1109/ASE.2015.88
   Guzman E, 2014, INT REQUIR ENG CONF, P153, DOI 10.1109/RE.2014.6912257
   Ha E, 2013, 2013 IEEE CONSUMER COMMUNICATIONS AND NETWORKING CONFERENCE (CCNC), P149, DOI 10.1109/CCNC.2013.6488439
   Hahn U, 2000, COMPUTER, V33, P29, DOI 10.1109/2.881692
   Hasa K., 2013, Computational Natural Language Learning, P124
   Hayes JH, 2006, IEEE T SOFTWARE ENG, V32, P4, DOI 10.1109/TSE.2006.3
   Iacob C, 2013, IEEE WORK CONF MIN S, P41, DOI 10.1109/MSR.2013.6624001
   Inouye D., 2011, Proceedings of the 2011 IEEE Third International Conference on Privacy, Security, Risk and Trust and IEEE Third International Conference on Social Computing (PASSAT/SocialCom 2011), P298, DOI 10.1109/PASSAT/SocialCom.2011.31
   Jha N, 2017, LECT NOTES COMPUT SC, V10153, P273, DOI 10.1007/978-3-319-54045-0_20
   Joachims T., 1998, Machine Learning: ECML-98. 10th European Conference on Machine Learning. Proceedings, P137, DOI 10.1007/BFb0026683
   Johann T, 2017, INT REQUIR ENG CONF, P21, DOI 10.1109/RE.2017.71
   Khalid H, 2015, IEEE SOFTWARE, V32, P70, DOI 10.1109/MS.2014.50
   Khatiwada S, 2018, INFORM SOFTWARE TECH, V93, P45, DOI 10.1016/j.infsof.2017.08.012
   Kim SB, 2006, IEEE T KNOWL DATA EN, V18, P1457, DOI 10.1109/TKDE.2006.180
   Kohavi R., 1995, IJCAI-95. Proceedings of the Fourteenth International Joint Conference on Artificial Intelligence, P1137
   LANGLEY P, 1992, AAAI-92 PROCEEDINGS : TENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE, P223
   Lin CY, 2004, ROUGE: A Package for Automatic Evaluation of Summaries, P74, DOI DOI 10.1253/JCJ.34.1213
   Llewellyn C., 2014, Eighth International AAAI Conference on Weblogs and Social Media, P599
   Lo D, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P415, DOI 10.1145/2786805.2786809
   LOVINS JB, 1968, MECH TRANSL, V11, P22
   Maalej W, 2015, INT REQUIR ENG CONF, P116, DOI 10.1109/RE.2015.7320414
   Mackie S., 2014, Information Access Evaluation. Multilinguality, Multimodality, P153
   Martin W, 2017, IEEE T SOFTWARE ENG, V43, P817, DOI 10.1109/TSE.2016.2630689
   Martin W, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P123, DOI 10.1109/MSR.2015.19
   McCord M., 2011, Autonomic and Trusted Computing. Proceedings 8th International Conference (ATC 2011), P175, DOI 10.1007/978-3-642-23496-5_13
   McIlroy S, 2016, EMPIR SOFTW ENG, V21, P1067, DOI 10.1007/s10664-015-9375-7
   Mehrotra R, 2013, SIGIR'13: THE PROCEEDINGS OF THE 36TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH & DEVELOPMENT IN INFORMATION RETRIEVAL, P889
   Mitchell T. M., 1997, MACHINE LEARNING
   Moschitti A., 2003, P FLAIRS
   Nayebi M, 2017, PROC IEEE ACM INT C, P152, DOI 10.1109/ICSE-C.2017.77
   Nenkova A., 2005, IMPACT FREQUENCY SUM
   Nichols J., 2012, Summarizing sporting events using Twitter, P189, DOI DOI 10.1145/2166966.2166999
   Otterbacher J, 2009, INFORM PROCESS MANAG, V45, P42, DOI 10.1016/j.ipm.2008.06.004
   Pagano D, 2013, S VIS LANG HUM CEN C, P125, DOI 10.1109/RE.2013.6636712
   Panichella S, 2015, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSM.2015.7332474
   Petsas Thanasis., 2013, P 2013 C INTERNET ME, P277, DOI DOI 10.1145/2504730.2504749
   Platt JC, 1999, ADVANCES IN KERNEL METHODS, P185
   Poché E, 2017, INT C PROGRAM COMPRE, P196, DOI 10.1109/ICPC.2017.26
   Powers D, 2014, KIT14001 FLIND U SCH
   Quinlan J. R., 1986, Machine Learning, V1, P81, DOI 10.1007/BF00116251
   Read J, 2008, IEEE DATA MINING, P995, DOI 10.1109/ICDM.2008.74
   Sebastiani F, 2002, ACM COMPUT SURV, V34, P1, DOI 10.1145/505282.505283
   Shen Dan, 2007, EMNLP-CoNLL 2007, Proceedings of the 2007 Joint Conference on Empirical Methods in Natural Language Processing and Computational Natural Language Learning, June 28-30, 2007, Prague, Czech Republic, P12
   Sinha S, 2008, THESIS
   Squires L, 2010, LANG SOC, V39, P457, DOI 10.1017/S0047404510000412
   Steinwart I, 2002, J MACH LEARN RES, V2, P67, DOI 10.1162/153244302760185252
   TUKEY JW, 1949, BIOMETRICS, V5, P99, DOI 10.2307/3001913
   Üstün B, 2006, CHEMOMETR INTELL LAB, V81, P29, DOI 10.1016/j.chemolab.2005.09.003
   Villarroel L, 2016, PROC INT CONF SOFTW, P14, DOI 10.1145/2884781.2884818
   Wang AH, 2010, SECRYPT 2010: PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON SECURITY AND CRYPTOGRAPHY, P142
   Wang S., 2012, Baselines and bigrams: Simple, good sentiment and topic classification, P90
   Williams G, 2017, INT REQUIR ENG CONF, P1, DOI 10.1109/RE.2017.14
   Xie Boyi, 2013, P ACL, P873
NR 85
TC 23
Z9 31
U1 1
U2 20
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2018
VL 23
IS 6
BP 3734
EP 3767
DI 10.1007/s10664-018-9605-x
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HC1WE
UT WOS:000451593200018
DA 2024-07-18
ER

PT J
AU Aniche, M
   Bavota, G
   Treude, C
   Gerosa, MA
   van Deursen, A
AF Aniche, Mauricio
   Bavota, Gabriele
   Treude, Christoph
   Gerosa, Marco Aurelio
   van Deursen, Arie
TI Code smells for Model-View-Controller architectures
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Code smells; Code anomalies; Code anti-patterns; Software maintenance;
   Code quality
ID SOFTWARE; COMPLEXITY; METRICS; IMPACT; BAD
AB Previous studies have shown the negative effects that low-quality code can have on maintainability proxies, such as code change- and defect-proneness. One of the symptoms of low-quality code are code smells, defined as sub-optimal implementation choices. While this definition is quite general and seems to suggest a wide spectrum of smells that can affect software systems, the research literature mostly focuses on the set of smells defined in the catalog by Fowler and Beck, reporting design issues that can potentially affect any kind of system, regardless of their architecture (e.g., Complex Class). However, systems adopting a specific architecture (e.g., the Model-View-Controller pattern) can be affected by other types of poor practices that only manifest themselves in the chosen architecture. We present a catalog of six smells tailored to MVC applications and defined by surveying/interviewing 53 MVC developers. We validate our catalog from different perspectives. First, we assess the relationship between the defined smells and the code change- and defect-proneness. Second, we investigate when these smells are introduced and how long they survive. Third, we survey 21 developers to verify their perception of the defined smells. Fourth, since our catalog has been mainly defined together with developers adopting a specific Java framework in their MVC applications (e.g., Spring), we interview four expert developers working with different technologies for the implementation of their MVC applications to check the generalizability of our catalog. The achieved results show that the defined Web MVC smells (i) more often than not, have more chances of being subject to changes and defects, (ii) are mostly introduced when the affected file (i.e., the file containing the smell) is committed for the first time in the repository and survive for long time in the system, (iii) are perceived by developers as severe problems, and (iv) generalize to other languages/frameworks.
C1 [Aniche, Mauricio] Delft Univ Technol, Delft, Netherlands.
   [van Deursen, Arie] Delft Univ Technol, Software Engn, Delft, Netherlands.
   [Bavota, Gabriele] USI, Lugano, Switzerland.
   [Treude, Christoph] Univ Adelaide, Sch Comp Sci, Adelaide, SA, Australia.
   [Gerosa, Marco Aurelio] No Arizona Univ, Flagstaff, AZ 86011 USA.
C3 Delft University of Technology; Delft University of Technology;
   University of Adelaide; Northern Arizona University
RP Aniche, M (corresponding author), Delft Univ Technol, Delft, Netherlands.
EM M.F.Aniche@tudelft.nl; gabriele.bavota@usi.ch;
   christoph.treude@adelaide.edu.au; marco.gerosa@nau.edu;
   Arie.VanDeursen@tudelft.nl
RI Gerosa, Marco Aurelio/A-6686-2009; Treude, Christoph/AAZ-6257-2021; van
   Deursen, Arie/G-3084-2011
OI Gerosa, Marco Aurelio/0000-0003-1399-7535; van Deursen,
   Arie/0000-0003-4850-3312; Treude, Christoph/0000-0002-6919-2149; BAVOTA,
   Gabriele/0000-0002-2216-3148
FU Swiss National Science foundation [172479]
FX Bavota thanks the Swiss National Science foundation for the financial
   support through SNF Project JITRA, No. 172479.
CR Abbes M, 2011, EUR CON SFTWR MTNCE, P181, DOI 10.1109/CSMR.2011.24
   Agrawal R., 1993, SIGMOD Record, V22, P207, DOI 10.1145/170036.170072
   Alves T. L., 2010, IEEE INT C SOFTW MAI
   Alves TL, 2011, JOINT C 21 INT WORKS
   Aniche M, 2017, SPRINGLINT
   Aniche M, 2016, 32 INT C SOFTW MAINT
   Aniche M, 2016, CODE SMELLS MODEL VI, DOI [10.5281/zenodo.253681, DOI 10.5281/ZENODO.253681]
   [Anonymous], PRACTICAL NONPARAMET
   [Anonymous], IEEE INT C SOFTW MAI
   Arcoverde R., 2011, WORKSH REF TOOLS, P33
   Bavota G, 2015, J SYST SOFTWARE, V107, P1, DOI 10.1016/j.jss.2015.05.024
   Bavota G, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P56, DOI 10.1109/ICSM.2012.6405253
   Bird C, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P1, DOI 10.1109/MSR.2009.5069475
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Chatzigeorgiou A, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P106, DOI 10.1109/QUATIC.2010.16
   Chen TH, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1001, DOI 10.1145/2568225.2568259
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   COLEMAN D, 1995, J SYST SOFTWARE, V29, P3, DOI 10.1016/0164-1212(94)00125-7
   Dyer R, 2013, P 35 INT C SOFTW ENG
   Emam KE, 2001, IEEE T SOFTWARE ENG, V27, P630, DOI 10.1109/32.935855
   Evans E., 2011, DOMAIN DRIVEN DESIGN
   Fard AM, 2013, IEEE INT WORK C SO, P116, DOI 10.1109/SCAM.2013.6648192
   Fischer M, 2003, 11 INT C SOFTW MAINT
   Fontana FA, 2015, P 6 INT WORKSH EM TR
   Fowler M., 1997, REFACTORING IMPROVIN
   Fowler M., 2002, Patterns of Enterprise Application Architecture
   Grissom R. J., 2005, EFFECT SIZES RES BRO
   Hecht G, 2015, 2ND ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS MOBILESOFT 2015, P148, DOI 10.1109/MobileSoft.2015.38
   Herzig K, 2013, IEEE WORK CONF MIN S, P121, DOI 10.1109/MSR.2013.6624018
   Jay Graylin, 2009, Journal of Software Engineering and Applications, V2, P137, DOI 10.4236/jsea.2009.23020
   Khomh F, 2012, EMPIR SOFTW ENG, V17, P243, DOI 10.1007/s10664-011-9171-y
   Khomh F, 2009, WORK CONF REVERSE EN, P75, DOI 10.1109/WCRE.2009.28
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Krasner G. E., 1988, J OBJECT ORIENTED PR, V1, P26
   Lanza M, 2007, Object-oriented Metrics in Practice: Using Software Metrics To Characterize, Evaluate, and Improve the Design of Object-oriented Systems
   Li W, 2007, J SYST SOFTWARE, V80, P1120, DOI 10.1016/j.jss.2006.10.018
   Lozano Angelo., 2007, Ninth International Workshop on Principles of software evolution, P31
   Marinescu R, 2004, PROC IEEE INT CONF S, P350, DOI 10.1109/ICSM.2004.1357820
   Martin Robert C, 2009, Clean Code: a Handbook of Agile Software Craftsmanship
   Mazinanian D, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P496, DOI 10.1145/2635868.2635879
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Mesbah A, 2012, PROC INT CONF SOFTW, P408, DOI 10.1109/ICSE.2012.6227174
   Moonen Leon, 2001, P 2 INT C EXTR PROGR
   Nederlof A, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P4, DOI 10.1145/2591062.2591170
   NEJMEH BA, 1988, COMMUN ACM, V31, P188, DOI 10.1145/42372.42379
   Oliveira P, 2014, IEEE C SOFTW MAINT R
   Palomba F, 2014, PROC IEEE INT CONF S, P101, DOI 10.1109/ICSME.2014.32
   Palomba F, 2013, IEEE INT CONF AUTOM, P268, DOI 10.1109/ASE.2013.6693086
   Peters R, 2012, EUR CON SFTWR MTNCE, P411, DOI 10.1109/CSMR.2012.79
   Ratiu D, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P223
   Riel ArthurJ., 1996, OBJECT ORIENTED DESI, V335
   Saboury A, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P294, DOI 10.1109/SANER.2017.7884630
   SHEPPERD M, 1988, SOFTWARE ENG J, V3, P30, DOI 10.1049/sej.1988.0003
   Sheskin J.D., 2004, Handbook of Parametric and Nonparametric Statistical Procedures, VThird
   Silva LH, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P73, DOI 10.1109/SANER.2015.7081817
   Sjoberg DIK, 2013, IEEE T SOFTWARE ENG, V39, P1144, DOI 10.1109/TSE.2012.89
   Tufano M., 2017, IEEE T SOFTWARE ENG
   Tufano M, 2016, IEEE INT CONF AUTOM, P4, DOI 10.1145/2970276.2970340
   Turnaround Z, 2017, TOP 4 JAVA WEB FRAME
   Webster BruceF., 1995, PITFALLS OBJECT ORIE
   Yamashita A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P682, DOI 10.1109/ICSE.2013.6606614
   Yamashita A, 2013, WORK CONF REVERSE EN, P242, DOI 10.1109/WCRE.2013.6671299
   Yamashita A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P306, DOI 10.1109/ICSM.2012.6405287
NR 63
TC 45
Z9 48
U1 4
U2 39
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2018
VL 23
IS 4
BP 2121
EP 2157
DI 10.1007/s10664-017-9540-2
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GK0MK
UT WOS:000435804100010
OA Green Published
DA 2024-07-18
ER

PT J
AU Borle, NC
   Feghhi, M
   Stroulia, E
   Greiner, R
   Hindle, A
AF Borle, Neil C.
   Feghhi, Meysam
   Stroulia, Eleni
   Greiner, Russell
   Hindle, Abram
TI Analyzing the effects of test driven development in GitHub
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Test driven development; Human factors in software development; GitHub
   repositories; Continuous integration
ID BONFERRONI
AB Testing is an integral part of the software development lifecycle, approached with varying degrees of rigor by different process models. Agile process models recommend Test Driven Development (TDD) as a key practice for reducing costs and improving code quality. The objective of this work is to perform a cost-benefit analysis of this practice. To that end, we have conducted a comparative analysis of GitHub repositories that adopts TDD to a lesser or greater extent, in order to determine how TDD affects software development productivity and software quality. We classified GitHub repositories archived in 2015 in terms of how rigorously they practiced TDD, thus creating a TDD spectrum. We then matched and compared various subsets of these repositories on this TDD spectrum with control sets of equal size. The control sets were samples from all GitHub repositories that matched certain characteristics, and that contained at least one test file. We compared how the TDD sets differed from the control sets on the following characteristics: number of test files, average commit velocity, number of bug-referencing commits, number of issues recorded, usage of continuous integration, number of pull requests, and distribution of commits per author. We found that Java TDD projects were relatively rare. In addition, there were very few significant differences in any of the metrics we used to compare TDD-like and non-TDD projects; therefore, our results do not reveal any observable benefits from using TDD.
C1 [Borle, Neil C.; Feghhi, Meysam; Stroulia, Eleni; Hindle, Abram] Univ Alberta, Dept Comp Sci, Edmonton, AB, Canada.
   [Greiner, Russell] Alberta Machine Intelligence Inst, Edmonton, AB, Canada.
C3 University of Alberta
RP Borle, NC (corresponding author), Univ Alberta, Dept Comp Sci, Edmonton, AB, Canada.
EM nborle@ualberta.ca; feghhi@ualberta.ca; stroulia@ualberta.ca;
   rgreiner@ualberta.ca; hindle1@ualberta.ca
RI Greiner, Russell/AAQ-4502-2020; Stroulia, Eleni/H-6518-2018
OI Greiner, Russell/0000-0001-8327-934X; Stroulia,
   Eleni/0000-0002-8784-8236
FU NSERC; AMII
FX The authors wish to acknowledge the support of NSERC, and of AMII.
CR Aickin M, 1996, AM J PUBLIC HEALTH, V86, P726, DOI 10.2105/AJPH.86.5.726
   [Anonymous], 2007, P 4 INT WORKSH MIN S
   [Anonymous], 2004, XP Ser
   [Anonymous], 2003, TEST DRIVEN DEV EXAM
   Athanasiou D, 2014, IEEE T SOFTWARE ENG, V40, P1100, DOI 10.1109/TSE.2014.2342227
   Beller M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P179, DOI 10.1145/2786805.2786843
   Beller M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P559, DOI 10.1109/ICSE.2015.193
   Bird C, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P1, DOI 10.1109/MSR.2009.5069475
   Brack F, 2016, CODE REV TEST 1 DEV
   Budhabhatti M, 2008, TEST DRIVEN DEV CONT
   DevIQ, 2017, TEST DRIV DEV EXPL
   Dyer R, 2013, THESIS
   Dyer R, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P422, DOI 10.1109/ICSE.2013.6606588
   Elliott E, 2016, 5 COMMON MISCONCEPTI
   Fucci D., 2016, P INT S EMP SOFTW EN
   Fucci D, 2016, IEEE T SOFTW ENG
   HOCHBERG Y, 1988, BIOMETRIKA, V75, P800, DOI 10.2307/2336325
   HOLM S, 1979, SCAND J STAT, V6, P65
   Jeffries R, 2007, IEEE SOFTWARE, V24, P24, DOI 10.1109/MS.2007.75
   Kalliamvakou E., 2014, P 11 WORKING C MININ, P92, DOI DOI 10.1145/2597073.2597074
   Lakeview Labs, 2017, CHIC APP DEV PROC
   Pugh K., 2010, Lean-Agile Acceptance Test-Driven-Development
   ROUSSEEUW PJ, 1987, J COMPUT APPL MATH, V20, P53, DOI 10.1016/0377-0427(87)90125-7
   Santos EA, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P504, DOI [10.1109/MSR.2016.065, 10.1145/2901739.2903493]
   Travis-CI, 2017, LEARN COD CONF
   Vasa R, 2009, PROC IEEE INT CONF S, P179, DOI 10.1109/ICSM.2009.5306322
   Vasilescu B, 2015, ARXIV151201862
   Weiss K, 2017, DO TEST DRIVEN DEV M
   Winter D, 2016, 9 BENEFITS TEST DRIV
   Zaidman Andy, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P220, DOI 10.1109/ICST.2008.47
NR 30
TC 10
Z9 10
U1 1
U2 13
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2018
VL 23
IS 4
BP 1931
EP 1958
DI 10.1007/s10664-017-9576-3
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GK0MK
UT WOS:000435804100003
DA 2024-07-18
ER

PT J
AU Trautsch, F
   Herbold, S
   Makedonski, P
   Grabowski, J
AF Trautsch, Fabian
   Herbold, Steffen
   Makedonski, Philip
   Grabowski, Jens
TI Addressing problems with replicability and validity of repository mining
   studies through a smart data platform
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software mining; Software analytics; Smart data platform; Replicability;
   Validity
ID SOFTWARE
AB The usage of empirical methods has grown common in software engineering. This trend spawned hundreds of publications, whose results are helping to understand and improve the software development process. Due to the data-driven nature of this venue of investigation, we identified several problems within the current state-of-the-art that pose a threat to the replicability and validity of approaches. The heavy re-use of data sets in many studies may invalidate the results in case problems with the data itself are identified. Moreover, for many studies data and/or the implementations are not available, which hinders a replication of the results and, thereby, decreases the comparability between studies. Furthermore, many studies use small data sets, which comprise of less than 10 projects. This poses a threat especially to the external validity of these studies. Even if all information about the studies is available, the diversity of the used tooling can make their replication even then very hard. Within this paper, we discuss a potential solution to these problems through a cloud-based platform that integrates data collection and analytics. We created SmartSHARK, which implements our approach. Using SmartSHARK, we collected data from several projects and created different analytic examples. Within this article, we present SmartSHARK and discuss our experiences regarding the use of it and the mentioned problems. Additionally, we show how we have addressed the issues that we have identified during our work with SmartSHARK.
C1 [Trautsch, Fabian; Herbold, Steffen; Makedonski, Philip; Grabowski, Jens] Georg August Univ Gottingen, Inst Comp Sci, Gottingen, Germany.
C3 University of Gottingen
RP Trautsch, F (corresponding author), Georg August Univ Gottingen, Inst Comp Sci, Gottingen, Germany.
EM trautsch@cs.uni-goettingen.de; herbold@cs.uni-goettingen.de;
   makedonski@cs.uni-goettingen.de; grabowski@cs.uni-goettingen.de
OI Herbold, Steffen/0000-0001-9765-2803
CR Alexandru CV, 2015, 2015 IEEE/ACM 37th IEEE International Conference on Software Engineering, Vol 2, P635, DOI 10.1109/ICSE.2015.211
   Alliance Osg., 2007, OSGi Service Platform Core Specification Release 4. OSGi Specification
   [Anonymous], 2012, P 9 USENIX C NETWORK
   [Anonymous], 1998, 924114 ISOIEC, V1998
   [Anonymous], ARCHAEOLOGICAL ANTHR
   Arcuri A, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P155, DOI 10.1145/2786805.2786828
   Avdiienko V, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P426, DOI 10.1109/ICSE.2015.61
   Bang L, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P61, DOI 10.1145/2786805.2786863
   Benelallam A, 2014, LECT NOTES COMPUT SC, V8569, P230
   Bevan J, 2005, ACM SIGSOFT SOFTWARE, V30
   Beyer D, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P721, DOI 10.1145/2786805.2786867
   Bird Christian, 2006, P MSR, P137, DOI DOI 10.1145/1137983.1138016
   Catal C, 2009, EXPERT SYST APPL, V36, P7346, DOI 10.1016/j.eswa.2008.10.027
   Claes M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P212, DOI 10.1109/MSR.2015.27
   Coelho R, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P134, DOI 10.1109/MSR.2015.20
   Cubranic D, 2005, IEEE T SOFTWARE ENG, V31, P446, DOI 10.1109/TSE.2005.71
   Czerwonka J, 2013, IEEE SOFTWARE, V30, P64, DOI 10.1109/MS.2013.68
   Devanbu P., 2016, P 38 INT C SOFTWARE, P108, DOI [DOI 10.1590/0103, 10.1145/2884781, DOI 10.1145/2884781]
   Dhar A, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P555, DOI 10.1145/2786805.2786877
   Di Ruscio D, 2015, ESEC FSE 2015 TOOL D
   Di Sorbo A, 2015, P IEEE ACM 30 INT C
   Draisbach U., 2010, P INT WORKSH QUAL DA
   Dyer R, 2015, ACM T SOFTW IN PRESS
   Dyer R, 2013, P IEEE ACM 35 INT C
   Eichberg M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P474, DOI 10.1145/2786805.2786865
   Fernandez-Ramil J, 2009, INT FED INFO PROC, V299, P170
   Foucault M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P829, DOI 10.1145/2786805.2786870
   FrontEndART Ltd, 2016, SOURCEMETER DOC JAV
   FrontEndART Ltd, 2016, SOURCEMETER DOC PYTH
   Gallaba Keheliya, 2015, 2015 ACM/IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM). Proceedings, P1, DOI 10.1109/ESEM.2015.7321196
   German D. M., 2004, EVOLUTION, V245, P92
   Giger E., 2010, P 2 INT WORKSH REC S, P52
   Gong L, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P357, DOI 10.1145/2786805.2786831
   Gousios Georgios, 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P12, DOI 10.1109/MSR.2012.6224294
   Gousios G., 2008, P 2008 INT WORKING C, P129, DOI [DOI 10.1145/1370750.1370781, 10.1145/1370750.1370781]
   Gousios G., 2014, Proceedings of the 11th working conference on mining software repositories, Ved, P384, DOI [DOI 10.1145/2597073.2597126, 10.1145/2597073]
   Gousios G, 2009, P IEEE ACM 31 INT C
   Gupta M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P346, DOI 10.1109/MSR.2015.39
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   He P, 2015, INFORM SOFTWARE TECH, V59, P170, DOI 10.1016/j.infsof.2014.11.006
   Herbold Steffen, 2017, ABS170506429 CORR
   Hermann B, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P758, DOI 10.1145/2786805.2786829
   Herraiz I, 2007, P 4 IEEE WORK C MIN
   Herraiz I., 2006, Proceedings of the 2006 International Workshop on Global Software Development for the Practitioner, P27
   Honsel V, 2015, P 4 INT WORKSH SOFTW
   HOWISON J, 2005, P 1 INT C OP SOURC S
   Nguyen HV, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P369, DOI 10.1145/2786805.2786872
   Jermakovics A, 2011, PROCEEDINGS OF THE 4TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE'11), P24
   Joblin M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P563, DOI 10.1109/ICSE.2015.73
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Kouroshfar E, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P246, DOI 10.1109/MSR.2015.30
   Le DM, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P235, DOI 10.1109/MSR.2015.29
   Lin ZP, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P68, DOI 10.1109/MSR.2015.14
   Linares-Vásquez M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P143, DOI 10.1145/2786805.2786847
   Linares-Vásquez M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P111, DOI 10.1109/MSR.2015.18
   Long F, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P166, DOI 10.1145/2786805.2786811
   Makedonski P, 2016, P SEM SER A IN PRESS
   Makedonski P., 2015, ACM SIGSOFT SOFTW EN, V40, P1
   Menzies T., 2015, The promise repository of empirical software engineering data
   Nanz S, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P778, DOI 10.1109/ICSE.2015.90
   Park J, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P745, DOI 10.1145/2786805.2786807
   Robles Gregorio, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P171, DOI 10.1109/MSR.2010.5463348
   Robles Gregorio., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, P222
   Safi G, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P25, DOI 10.1145/2786805.2786836
   Samak M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P131, DOI 10.1145/2786805.2786874
   Scheidgen M, 2012, AUTOMATED TRANSPAREN
   Shepperd M, 2013, IEEE T SOFTWARE ENG, V39, P1208, DOI 10.1109/TSE.2013.11
   Shi A, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P237, DOI 10.1145/2786805.2786878
   Shull FJ, 2008, EMPIR SOFTW ENG, V13, P211, DOI 10.1007/s10664-008-9060-1
   Siegmund J, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P9, DOI 10.1109/ICSE.2015.24
   Siegmund N, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P284, DOI 10.1145/2786805.2786845
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Smith EK, 2016, 9TH IEEE/ACM INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE 2016), P15, DOI [10.1145/2897586.2897596, 10.1109/CHASE.2016.011]
   Smith EK, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P532, DOI 10.1145/2786805.2786825
   Sun XB, 2016, 2016 17TH IEEE/ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, ARTIFICIAL INTELLIGENCE, NETWORKING AND PARALLEL/DISTRIBUTED COMPUTING (SNPD), P357, DOI 10.1109/SNPD.2016.7515925
   Tan M, 2015, P IEEE ACM 37 INT C
   Tao Y, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P180, DOI 10.1109/MSR.2015.24
   Thomas JJ, 2006, IEEE COMPUT GRAPH, V26, P10, DOI 10.1109/MCG.2006.5
   Trautsch F, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P97, DOI [10.1109/MSR.2016.019, 10.1145/2901739.2901753]
   Nguyen TH, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P591, DOI 10.1145/2786805.2786876
   Van Rysselberghe F, 2004, PROC IEEE INT CONF S, P328, DOI 10.1109/ICSM.2004.1357818
   Walden J, 2014, PROC INT SYMP SOFTW, P23, DOI 10.1109/ISSRE.2014.32
   Wheeler DA, 2004, SLOCCOUNT DOCUMENTAT
   Xu TY, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P307, DOI 10.1145/2786805.2786852
   Yang W, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P303, DOI 10.1109/ICSE.2015.50
   Zaharia M., 2010, HOTCLOUD 2010
   Zhu JM, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P415, DOI 10.1109/ICSE.2015.60
NR 88
TC 31
Z9 32
U1 0
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2018
VL 23
IS 2
BP 1036
EP 1083
DI 10.1007/s10664-017-9537-x
PG 48
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GC1OI
UT WOS:000429551000011
DA 2024-07-18
ER

PT J
AU Fernández, DM
   Wagner, S
   Kalinowski, M
   Felderer, M
   Mafra, P
   Vetrò, A
   Conte, T
   Christiansson, MT
   Greer, D
   Lassenius, C
   Männistö, T
   Nayabi, M
   Oivo, M
   Penzenstadler, B
   Pfahl, D
   Prikladnicki, R
   Ruhe, G
   Schekelmann, A
   Sen, S
   Spinola, R
   Tuzcu, A
   de la Vara, JL
   Wieringa, R
AF Fernandez, D. Mendez
   Wagner, S.
   Kalinowski, M.
   Felderer, M.
   Mafra, P.
   Vetro, A.
   Conte, T.
   Christiansson, M. -T.
   Greer, D.
   Lassenius, C.
   Mannisto, T.
   Nayabi, M.
   Oivo, M.
   Penzenstadler, B.
   Pfahl, D.
   Prikladnicki, R.
   Ruhe, G.
   Schekelmann, A.
   Sen, S.
   Spinola, R.
   Tuzcu, A.
   de la Vara, J. L.
   Wieringa, R.
TI Naming the pain in requirements engineering
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Requirements engineering; Survey research
ID SOFTWARE COMPANIES; QUALITY
AB Requirements Engineering (RE) has received much attention in research and practice due to its importance to software project success. Its interdisciplinary nature, the dependency to the customer, and its inherent uncertainty still render the discipline difficult to investigate. This results in a lack of empirical data. These are necessary, however, to demonstrate which practically relevant RE problems exist and to what extent they matter. Motivated by this situation, we initiated the Naming the Pain in Requirements Engineering (NaPiRE) initiative which constitutes a globally distributed, bi-yearly replicated family of surveys on the status quo and problems in practical RE. In this article, we report on the qualitative analysis of data obtained from 228 companies working in 10 countries in various domains and we reveal which contemporary problems practitioners encounter. To this end, we analyse 21 problems derived from the literature with respect to their relevance and criticality in dependency to their context, and we complement this picture with a cause-effect analysis showing the causes and effects surrounding the most critical problems. Our results give us a better understanding of which problems exist and how they manifest themselves in practical environments. Thus, we provide a first step to ground contributions to RE on empirical observations which, until now, were dominated by conventional wisdom only.
C1 [Fernandez, D. Mendez] Tech Univ Munich, Software & Syst Engn, Garching, Germany.
   [Wagner, S.] Univ Stuttgart, Keplerstr 7, D-70174 Stuttgart, Germany.
   [Kalinowski, M.; Mafra, P.] Univ Fed Fluminense, R Miguel de Frias 9, BR-24220900 Niteroi, RJ, Brazil.
   [Felderer, M.] Univ Innsbruck, Innrain 52, A-6020 Innsbruck, Austria.
   [Vetro, A.] Politecn Torino, Corso Duca Abruzzi 24, I-10129 Turin, Italy.
   [Conte, T.] Univ Fed Amazonas, Ave Gen Rodrigo Otavio Jordao Ramos 6200, BR-69067005 Manaus, Amazonas, Brazil.
   [Christiansson, M. -T.] Karlstads Univ, Univ Gatan 2, S-65188 Karlstad, Sweden.
   [Greer, D.] Queens Univ Belfast, Belfast BT7 1NN, Antrim, North Ireland.
   [Lassenius, C.] Aalto Univ, Espoo 02150, Finland.
   [Mannisto, T.] Univ Helsinki, Yliopistonkatu 4, Helsinki 00100, Finland.
   [Nayabi, M.; Ruhe, G.] Univ Calgary, 2500 Univ Dr NW, Calgary, AB T2N 1N4, Canada.
   [Oivo, M.] Univ Oulu, Pentti Kaiteran Katu 1, Oulu 90014, Finland.
   [Penzenstadler, B.] Calif State Univ Long Beach, 1250 Bellflower Blvd, Long Beach, CA 90840 USA.
   [Pfahl, D.] Univ Tartu, Ulikooli 18, EE-50090 Tartu, Estonia.
   [Prikladnicki, R.] Pontificia Univ Catolica Rio Grande do Sul, Ave Ipiranga 6681, BR-90619900 Porto Alegre, RS, Brazil.
   [Schekelmann, A.] Hsch Niederrhein, Reinarzstr 49, D-47805 Krefeld, Germany.
   [Sen, S.] Simula Res Lab, Martin Linges Vei 25, N-1364 Fornebu, Norway.
   [Spinola, R.] Salvador Univ UNIFACS, Grad Program Syst & Comp, Salvador, BA, Brazil.
   [Spinola, R.] Fed Univ Bahia UFBA, Fraunhofer Project Ctr Software & Syst Engn, Salvador, BA, Brazil.
   [Tuzcu, A.] Zeb Rolfes Schierenbeck Associates GmbH, Theresienhohe 13A, Munich, Germany.
   [de la Vara, J. L.] Univ Carlos III Madrid, Ave Univ 30, Madrid 28911, Spain.
   [Wieringa, R.] Univ Twente, Informat Syst, Enschede, Netherlands.
C3 Technical University of Munich; University of Stuttgart; Universidade
   Federal Fluminense; University of Innsbruck; Polytechnic University of
   Turin; Universidade Federal de Amazonas; Karlstad University; Queens
   University Belfast; Aalto University; University of Helsinki; University
   of Calgary; University of Oulu; California State University System;
   California State University Long Beach; University of Tartu; Pontificia
   Universidade Catolica Do Rio Grande Do Sul; Universidade Salvador
   (UNIFACS); Universidade Federal da Bahia; Universidad Carlos III de
   Madrid; University of Twente
RP Fernández, DM (corresponding author), Tech Univ Munich, Software & Syst Engn, Garching, Germany.
EM Daniel.Mendez@tum.de
RI Conte, Tayana/AAK-2433-2020; de la Vara, Jose Luis/A-7678-2018; Pfahl,
   Dietmar Alfred Paul Kurt/H-3084-2015; Mendez, Daniel/ABA-4579-2021;
   Lassenius, Casper C/A-4339-2013; Wagner, Stefan/A-5200-2018; Felderer,
   Michael/AAF-4909-2020; del Carmen Ocaña Gautherot, Kary
   Ann/AAC-3932-2019; Vetrò, Antonio/M-9042-2019; Männistö,
   Tomi/ABC-7781-2021; Penzenstadler, Birgit S/B-1582-2015
OI Conte, Tayana/0000-0001-6436-3773; de la Vara, Jose
   Luis/0000-0003-1813-398X; Pfahl, Dietmar Alfred Paul
   Kurt/0000-0003-2400-501X; Mendez, Daniel/0000-0003-0619-6027; Wagner,
   Stefan/0000-0002-5256-8429; del Carmen Ocaña Gautherot, Kary
   Ann/0000-0002-2151-7418; Vetrò, Antonio/0000-0003-2027-3308; Männistö,
   Tomi/0000-0001-7470-5183; Penzenstadler, Birgit S/0000-0002-5771-0455;
   Greer, Des/0000-0001-6367-9274; Kalinowski, Marcos/0000-0003-1445-3425
FU Estonian Research Council
FX We want to thank all members of ISERN who supported the design of this
   research initiative. Furthermore, we want to thank all our contacts from
   industry for their participation in the survey. Our gratitude also goes
   to the reviewers whose constructive feedback supported us improving our
   manuscript and in particular the further re-design of our instrument for
   the follow-up replications. Finally, Dietmar Pfahl was supported by the
   Estonian Research Council.
CR Adolph S, 2011, EMPIR SOFTW ENG, V16, P487, DOI 10.1007/s10664-010-9152-6
   Al-Rawas Amer., 1996, Communication problems in requirements engineering: a field study
   [Anonymous], 1997, Requirements engineering: a good practice guide
   [Anonymous], 1967, ALDINE T
   Beecham S, 2003, EMPIR SOFTW ENG, V8, P7, DOI 10.1023/A:1021764731148
   Birks M., 2011, Grounded Theory: A Practical Guide
   Brand A, 2015, LEARN PUBL, V28, P151, DOI 10.1087/20150211
   Buschermohle R., 2006, SUCCESS ERFOLGS MISS
   Card DN, 2005, ADV COMPUT, V65, P259, DOI 10.1016/S0065-2458(05)65006-1
   Cheng BHC, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P285, DOI 10.1109/FOSE.2007.17
   Condori-Fernandez N, 2009, INT SYMP EMP SOFTWAR, P503
   Condori-Fernandez Nelly, 2012, TRCTIT1210 U TWENT
   Cox K, 2009, IET SOFTW, V3, P339, DOI 10.1049/iet-sen.2008.0076
   Damian D, 2006, IEEE T SOFTWARE ENG, V32, P433, DOI 10.1109/TSE.2006.61
   Davis A, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P179
   Eveleens JL, 2010, IEEE SOFTWARE, V27, P30, DOI 10.1109/MS.2009.154
   Fernandez D.M., 2013, P 17 INT C EV ASS SO
   Fernandez D. Mendez, 2014, P 18 INT C EV ASS SO
   Fernandez DM, 2015, IEEE SOFTWARE, V32, P16, DOI 10.1109/MS.2015.122
   Fernández DM, 2015, INFORM SOFTWARE TECH, V57, P616, DOI 10.1016/j.infsof.2014.05.008
   Fernández DM, 2012, INFORM SOFTWARE TECH, V54, P162, DOI 10.1016/j.infsof.2011.09.001
   Fernandez Daniel Mendez, 2013, TUMI1326
   HSIA P, 1993, IEEE SOFTWARE, V10, P75, DOI 10.1109/52.241974
   IEEE, 1998, 8301998 IEEE I EL EL
   Kalinowski M, 2016, P SOFTW QUAL DAYS
   Kalinowski M, 2011, P INT C PROD FOC SOF
   Kalinowski M, 2008, P EUR C SOFTW ENG AD
   Kalinowski M., 2015, P 27 INT C SOFTW ENG
   Kalinowski M, 2012, IEEE SOFTWARE, V29, P16, DOI 10.1109/MS.2012.72
   Kamata MI, 2007, INT REQUIR ENG CONF, P69, DOI 10.1109/RE.2007.31
   Lemos J., 2012, Proceedings of the Annual ACM Symposium on Applied Computing (SAC), P1083
   Lin Liu, 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P317, DOI 10.1109/RE.2010.45
   Napier NP, 2009, IEEE T SOFTWARE ENG, V35, P593, DOI 10.1109/TSE.2009.33
   Nikula U., 2000, Research Report 951-764-431-0.
   Nuseibeh B., 2000, P C FUTURE SOFTWARE, P35, DOI [10.1145/336512.336523, DOI 10.1145/336512.336523]
   Pekar V, 2014, 2014 9TH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY (QUATIC), P242, DOI 10.1109/QUATIC.2014.40
   Pettersson F, 2008, J SYST SOFTWARE, V81, P972, DOI 10.1016/j.jss.2007.08.032
   Solemon B, 2009, COMM COM INF SC, V59, P70
   Staples M, 2007, J SYST SOFTWARE, V80, P883, DOI 10.1016/j.jss.2006.09.008
   Verner J, 2005, AUSTRALAS J INF SYST, V13, P225
   Wagner S., 2015, The Art and Science of Analyzing Software Data
NR 41
TC 127
Z9 130
U1 15
U2 60
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2017
VL 22
IS 5
BP 2298
EP 2338
DI 10.1007/s10664-016-9451-7
PG 41
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FE0PC
UT WOS:000407921200002
OA Green Published, Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Le, TDB
   Thung, F
   Lo, D
AF Le, Tien-Duy B.
   Thung, Ferdian
   Lo, David
TI Will this localization tool be effective for this bug? Mitigating the
   impact of unreliability of information retrieval based bug localization
   tools
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Text classification; Information retrieval; Bug reports; Bug
   localization; Effectiveness prediction
ID CLASSIFICATION; ALGORITHMS; SEVERITY
AB Information retrieval (IR) based bug localization approaches process a textual bug report and a collection of source code files to find buggy files. They output a ranked list of files sorted by their likelihood to contain the bug. Recently, several IR-based bug localization tools have been proposed. However, there are no perfect tools that can successfully localize faults within a few number of most suspicious program elements for every single input bug report. Therefore, it is difficult for developers to decide which tool would be effective for a given bug report. Furthermore, for some bug reports, no bug localization tools would be useful. Even a state-of-the-art bug localization tool outputs many ranked lists where buggy files appear very low in the lists. This potentially causes developers to distrust bug localization tools. In this work, we build an oracle that can automatically predict whether a ranked list produced by an IR-based bug localization tool is likely to be effective or not. We consider a ranked list to be effective if a buggy file appears in the top-N position of the list. If a ranked list is unlikely to be effective, developers do not need to waste time in checking the recommended files one by one. In such cases, it is better for developers to use traditional debugging methods or request for further information to localize bugs. To build this oracle, our approach extracts features that can be divided into four categories: score features, textual features, topic model features, and metadata features. We build a separate prediction model for each category, and combine them to create a composite prediction model which is used as the oracle. We name this solution APRILE, which stands for Automated PRediction of IR-based Bug Localization's Effectiveness. We further integrate APRILE with two other components that are learned using our bagging-based ensemble classification (BEC) method. We refer to the extension of APRILE as APRILE (+). We have evaluated APRILE (+) to predict the effectiveness of three state-of-the-art IR-based bug localization tools on more than three thousands bug reports from AspectJ, Eclipse, SWT, and Tomcat. APRILE (+) can achieve an average precision, recall, and F-measure of 77.61 %, 88.94 %, and 82.09 %, respectively. Furthermore, APRILE (+) outperforms a baseline approach by Le and Lo and APRILE by up to a 17.43 % and 10.51 % increase in F-measure respectively.
C1 [Le, Tien-Duy B.; Thung, Ferdian; Lo, David] Singapore Management Univ, Sch Informat Syst, Singapore, Singapore.
C3 Singapore Management University
RP Le, TDB (corresponding author), Singapore Management Univ, Sch Informat Syst, Singapore, Singapore.
EM btdle.2012@smu.edu.sg; ferdiant.2013@smu.edu.sg; davidlo@smu.edu.sg
RI Thung, Ferdian/AAX-9321-2020; Lo, David/A-2493-2012
OI Lo, David/0000-0002-4367-7201
CR Abreu R, 2009, J SYST SOFTWARE, V82, P1780, DOI 10.1016/j.jss.2009.06.035
   [Anonymous], P 26 INT C SOFTW ENG
   Antoniol G, 2008, P 2008 C CTR ADV STU, P304
   Arong, 2014, PROCEEDINGS OF 2014 IEEE INTERNATIONAL CONFERENCE ON PROGRESS IN INFORMATICS AND COMPUTING (PIC), P51, DOI 10.1109/PIC.2014.6972294
   Ayewah N., 2010, Proceedings of the 19th international symposium on Software testing and analysis, P241
   Bachmann A, 2009, IWPSE-EVOL 09: ERCIM WORKSHOP ON SOFTWARE EVOLUTION (EVOL) AND INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION (IWPSE), P119
   Bauer E, 1999, MACH LEARN, V36, P105, DOI 10.1023/A:1007515423169
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Bowring J. F., 2004, Software Engineering Notes, V29, P195, DOI 10.1145/1013886.1007539
   Breiman L, 2001, MACH LEARN, V45, P5, DOI 10.1023/A:1010933404324
   Broomhead D. S., 1988, Complex Systems, V2, P321
   Cleve H, 2005, PROC INT CONF SOFTW, P342
   Cronen-Townsend S., 2002, Proceedings of SIGIR 2002. Twenty-Fifth Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, P299
   diaeresis>tze Hinrich Schu<spacing, 2008, INTRO INFORM RETRIEV, V39
   Han J., 2006, DATA MINING CONCEPTS, DOI 10.1016/C2009-0-61819-5
   He B, 2004, LECT NOTES COMPUT SC, V3246, P43
   Heckman S, 2011, INFORM SOFTWARE TECH, V53, P363, DOI 10.1016/j.infsof.2010.12.007
   Hovemeyer D, 2004, ACM SIGPLAN NOTICES, V39, P92, DOI 10.1145/1052883.1052895
   Jalbert N, 2008, I C DEPEND SYS NETWO, P52, DOI 10.1109/DSN.2008.4630070
   Johnson B, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P672, DOI 10.1109/ICSE.2013.6606613
   Johnson S, 1978, LINT
   Jones J.A., 2005, P 20 IEEE ACM INT C, P273, DOI [10.1145/1101908.1101949, DOI 10.1145/1101908.1101949]
   Kim S, 2007, P 6 JOINT M EUR SOFT, P45, DOI DOI 10.1145/1287624.1287633
   Kochhar Pavneet Singh, 2014, P 2 ACM IEEE INT C, P803, DOI DOI 10.1145/2642937.2642997
   Kochhar Pavneet Singh, 2016, 25 INT S SOFTWARE TE, P165, DOI 10.1145/2931037.2931051
   Kohavi R., 1996, Machine Learning. Proceedings of the Thirteenth International Conference (ICML '96), P275
   Lamkanfi Ahmed, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P1, DOI 10.1109/MSR.2010.5463284
   Lamkanfi A, 2011, EUR CON SFTWR MTNCE, P249, DOI 10.1109/CSMR.2011.31
   Le T.-D. B., 2016, P 25 INT S SOFTW TES, P177, DOI DOI 10.1145/2931037.2931049
   Le TDB, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P579, DOI 10.1145/2786805.2786880
   Le TDB, 2015, EMPIR SOFTW ENG, V20, P1237, DOI 10.1007/s10664-014-9349-1
   Le TDB, 2014, PROC INT SYMP SOFTW, P335, DOI 10.1109/ISSRE.2014.39
   Le Tien-Duy B, 2013, PROC IEEE INT CONF S, P310, DOI 10.1109/ICSM.2013.42
   Lemmens A, 2006, J MARKETING RES, V43, P276, DOI 10.1509/jmkr.43.2.276
   Lucia, 2014, J SOFTW-EVOL PROC, V26, P172, DOI 10.1002/smr.1616
   Lukins SK, 2010, INFORM SOFTWARE TECH, V52, P972, DOI 10.1016/j.infsof.2010.04.002
   Marcus A, 2003, PROC INT CONF SOFTW, P125, DOI 10.1109/ICSE.2003.1201194
   Menzies T, 2008, PROC IEEE INT CONF S, P346, DOI 10.1109/ICSM.2008.4658083
   MITCHELL T, 1989, ANNU REV COMPUT SCI, V4, P417
   Mothe J., 2005, ACM C RES DEV INFORM
   Parnin C., 2011, P 2011 INT S SOFTWAR, P199, DOI [10.1145/2001420.2001445, DOI 10.1145/2001420.2001445]
   Porter MF, 2006, PROGRAM-ELECTRON LIB, V40, P211, DOI [10.1108/00330330610681286, 10.1108/eb046814]
   Prasad AM, 2006, ECOSYSTEMS, V9, P181, DOI 10.1007/s10021-005-0054-1
   Rao S., 2011, P 8 WORK C MIN SOFTW, P43
   Saha RK, 2013, IEEE INT CONF AUTOM, P345, DOI 10.1109/ASE.2013.6693093
   Seo HM, 2012, IEEE INT CONF AUTOM, P180, DOI 10.1145/2351676.2351702
   Shihab E., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P249, DOI 10.1109/WCRE.2010.36
   Shihab E, 2013, EMPIR SOFTW ENG, V18, P1005, DOI 10.1007/s10664-012-9228-6
   Shin Yoo, 2012, Search Based Software Engineering. Proceedings of the 4th International Symposium (SSBSE 2012), P244, DOI 10.1007/978-3-642-33119-0_18
   Shtok A, 2010, SIGIR 2010: PROCEEDINGS OF THE 33RD ANNUAL INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH DEVELOPMENT IN INFORMATION RETRIEVAL, P259
   Shtok A, 2009, LECT NOTES COMPUT SC, V5766, P305, DOI 10.1007/978-3-642-04417-5_30
   Sisman B., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P50, DOI 10.1109/MSR.2012.6224299
   Tantithamthavorn C, 2013, 2013 14TH ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, ARTIFICIAL INTELLIGENCE, NETWORKING AND PARALLEL/DISTRIBUTED COMPUTING (SNPD 2013), P543, DOI 10.1109/SNPD.2013.92
   Tassey G., 2002, EC IMPACTS INADEQUAT
   Thomas SW, 2013, IEEE T SOFTWARE ENG, V39, P1427, DOI 10.1109/TSE.2013.27
   Tian Y, 2012, EUR CON SFTWR MTNCE, P385, DOI 10.1109/CSMR.2012.48
   Valdivia-Garcia Harold., 2014, P 11 WORKING C MININ, P72
   Vinay V., 2006, Proceedings of the Twenty-Ninth Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, P398, DOI 10.1145/1148170.1148239
   Xia X, 2016, P 32 INT C SOFTW MAI
   Xiaoyuan Xie, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P224, DOI 10.1007/978-3-642-39742-4_17
   Xie XY, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2522920.2522924
   Xuan JF, 2014, PROC IEEE INT CONF S, P191, DOI 10.1109/ICSME.2014.41
   Yuan Tian, 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P215, DOI 10.1109/WCRE.2012.31
   Zeller A., 2002, Software Engineering Notes, V27, P1, DOI 10.1145/605466.605468
   Zeller A, 2002, IEEE T SOFTWARE ENG, V28, P183, DOI 10.1109/32.988498
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
NR 67
TC 21
Z9 25
U1 0
U2 8
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2017
VL 22
IS 4
BP 2237
EP 2279
DI 10.1007/s10664-016-9484-y
PG 43
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FB6ZI
UT WOS:000406290500018
DA 2024-07-18
ER

PT J
AU Kessentini, M
   Mansoor, U
   Wimmer, M
   Ouni, A
   Deb, K
AF Kessentini, Marouane
   Mansoor, Usman
   Wimmer, Manuel
   Ouni, Ali
   Deb, Kalyanmoy
TI Search-based detection of model level changes
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Search-based software engineering; Software maintenance; Multi-objective
   optimization; Model changes detection
ID SOFTWARE; TRANSFORMATION; REFACTORINGS; ALGORITHM
AB Software models, defined as code abstractions, are iteratively refined, restructured, and evolved due to many reasons such as reflecting changes in requirements or modifying a design to enhance existing features. For understanding the evolution of a model a-posteriori, change detection approaches have been proposed for models. The majority of existing approaches are successful to detect atomic changes. However, composite changes, such as refactorings, are difficult to detect due to several possible combinations of atomic changes or eventually hidden changes in intermediate model versions that may be no longer available. Moreover, a multitude of refactoring sequences may be used to describe the same model evolution. In this paper, we propose a multi-objective approach to detect model changes as a sequence of refactorings. Our approach takes as input an exhaustive list of possible types of model refactoring operations, the initial model, and the revised model, and generates as output a list of refactoring applications representing a good compromise between the following two objectives (i) maximize the similarity between the expected revised model and the generated model after applying the refactoring sequence on the initial model, and (ii) minimize the number of atomic changes used to describe the evolution. In fact, minimizing the number of atomic changes can important since it is maybe easier for a designer to understand and analyze a sequence of refactorings (composite model changes) rather than an equivalent large list of atomic changes (Weissgerber and Diehl 2006). Due to the huge number of possible refactoring sequences, a metaheuristic search method is used to explore the space of possible solutions. To this end, we use the non-dominated sorting genetic algorithm (NSGA-II) to find the best trade-off between our two objectives. The paper reports on the results of an empirical study of our multi-objective model changes detection technique as applied on various versions of real-world models taken from open source projects and one industrial project. We compared our approach to the simple deterministic greedy algorithm, multi-objective particle swarm optimization (MOPSO), an existing mono-objective changes detection approach, and two model changes detection tools not based on computational search. The statistical test results provide evidence to support the claim that our proposal enables the generation of changes detection solutions with correctness higher than 85 %, in average, using a variety of real-world scenarios.
C1 [Kessentini, Marouane; Mansoor, Usman] Univ Michigan, Dearborn, MI 48128 USA.
   [Wimmer, Manuel] Vienna Univ Technol, Vienna, Austria.
   [Ouni, Ali] Osaka Univ, Osaka, Japan.
   [Deb, Kalyanmoy] Michigan State Univ, E Lansing, MI 48824 USA.
C3 University of Michigan System; University of Michigan; Technische
   Universitat Wien; Osaka University; Michigan State University
RP Kessentini, M (corresponding author), Univ Michigan, Dearborn, MI 48128 USA.
EM marouane@umich.edu
RI Ouni, Ali/Y-8280-2019
OI Ouni, Ali/0000-0003-4708-0362
CR Alanen M, 2003, LECT NOTES COMPUT SC, V2863, P2
   [Anonymous], LNCS
   [Anonymous], 2010, Proceedings of the International Conference on Software Maintenance (ICSM)
   Arcuri A., 2011, P 33 INT C SOFTW ENG
   Bechikh S., 2010, P IEEE C EV COMP CEC, P2129
   Ben Fadhel A, 2012, P 28 IEEE INT C SOFT
   Briand LC, 2002, PROC IEEE INT CONF S, P252, DOI 10.1109/ICSM.2002.1167775
   Brosch P, 2012, J OBJECT TECHNOL, V11, DOI 10.5381/jot.2012.11.3.a2
   Brosch P, 2009, LECT NOTES COMPUT SC, V5795, P271, DOI 10.1007/978-3-642-04425-0_20
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Brun Cedric, 2008, UPGRADE, The European Journal for the Informatics Professional, V9, P29
   Cicchetti A, 2007, J OBJECT TECHNOL, V6, P165, DOI 10.5381/jot.2007.6.9.a9
   Cinnéide MO, 2012, INT SYMP EMP SOFTWAR, P49, DOI 10.1145/2372251.2372260
   Cinneide MO, 2001, THESIS
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Demeyer S, 2000, ACM SIGPLAN NOTICES, V35, P166, DOI 10.1145/354222.353183
   Dig D, 2008, IEEE T SOFTWARE ENG, V34, P321, DOI 10.1109/TSE.2008.29
   Dig D, 2006, LECT NOTES COMPUT SC, V4067, P404
   Eiben AE, 2011, SWARM EVOL COMPUT, V1, P19, DOI 10.1016/j.swevo.2011.02.001
   Ekman Torbjorn., 2004, Electr. Notes Theor. Comput. Sci, V107, P57, DOI DOI 10.1016/J.ENTCS.2004.02.048
   Fluri B, 2007, IEEE T SOFTWARE ENG, V33, P725, DOI 10.1109/TSE.2007.70731
   FONSECA CM, 1993, PROCEEDINGS OF THE FIFTH INTERNATIONAL CONFERENCE ON GENETIC ALGORITHMS, P416
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   France R, 2007, P INT C SOFTW ENG IC
   Friedman M, 1937, J AM STAT ASSOC, V32, P675, DOI 10.2307/2279372
   Gasevic D., 2009, Model Driven Engineering and Ontology Development, V2nd ed
   Gîrba T, 2006, J SOFTW MAINT EVOL-R, V18, P207, DOI 10.1002/smr.325
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Harman M., 2009, TR0903 KINGS COLL
   Harman M, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1106
   Kehrer T., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P163, DOI 10.1109/ASE.2011.6100050
   Kehrer T, 2012, P 28 INT C SOFTW MAI
   Kessentini M, 2008, LECT NOTES COMPUT SC, V5301, P159, DOI 10.1007/978-3-540-87875-9_12
   Kim M., 2012, IEEE T SOFTWARE ENG
   Koegel M., 2010, P IEEE INT EDOC C
   Koza J.R., 1992, GENETIC PROGRAMMING, VVolume 1
   Kuster JM, 2008, LNCS, P244
   Langer P, 2012, J SYST STWARE
   Li XD, 2003, LECT NOTES COMPUT SC, V2723, P37
   Lin YH, 2007, EUR J INFORM SYST, V16, P349, DOI 10.1057/palgrave.ejis.3000685
   Liu H, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P265, DOI 10.1145/1595696.1595738
   Mansoor U, 2015, J SYST STWARE, P1
   Mansoor U, 2015, J SYST SOFTWARE, V103, P423, DOI 10.1016/j.jss.2014.11.043
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Moha N., 2009, IEEE T SOFTWARE ENG
   Nejati S, 2007, PROC INT CONF SOFTW, P54
   Opdyke William F., 1992, THESIS
   Ouni A, 2013, GECCO'13: PROCEEDINGS OF THE 2013 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1461
   Pilskalns O, 2006, PROC IEEE INT CONF S, P254
   Porres I, 2003, MODEL REFACTORINGS R, P159
   Rivera JE, 2008, LECT NOTES BUS INF, V11, P141
   Robbes Romain., 2007, MSR 07, P15
   Roberts D., 1999, THESIS
   Ruiz R, 2007, EUR J OPER RES, V177, P2033, DOI 10.1016/j.ejor.2005.12.009
   Sahin D, 2015, J SOFTW-EVOL PROC, V27, P821, DOI 10.1002/smr.1735
   Seng O, 2006, GECCO 2006: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1909
   Vermolen S., 2011, TUDSERG2011026 DELFT
   Weissgerber P, 2006, IEEE INT CONF AUTOM, P231
   Wieland K, 2013, COMPUT SUPP COOP W J, V22, P181, DOI 10.1007/s10606-012-9172-4
   Wohlin C., 2012, Experimentation in Software Engineering
   Xing Z., 2005, 20 IEEEACM INT C AUT, P54, DOI DOI 10.1145/1101908.1101919
   Xing ZC, 2006, WORK CONF REVERSE EN, P263
   Zitzler E, 2003, IEEE T EVOLUT COMPUT, V7, P117, DOI 10.1109/TEVC.2003.810758
NR 63
TC 17
Z9 18
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2017
VL 22
IS 2
BP 670
EP 715
DI 10.1007/s10664-016-9442-8
PG 46
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ES9PL
UT WOS:000399891400003
DA 2024-07-18
ER

PT J
AU Luo, Q
   Nair, A
   Grechanik, M
   Poshyvanyk, D
AF Luo, Qi
   Nair, Aswathy
   Grechanik, Mark
   Poshyvanyk, Denys
TI FOREPOST: finding performance problems automatically with
   feedback-directed learning software testing
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Performance testing; Feedback-directed learning system
ID GENERATION; CHECKING; SYSTEMS
AB A goal of performance testing is to find situations when applications unexpectedly exhibit worsened characteristics for certain combinations of input values. A fundamental question of performance testing is how to select a manageable subset of the input data faster in order to automatically find performance bottlenecks in applications. We propose FOREPOST, a novel solution, for automatically finding performance bottlenecks in applications using black-box software testing. Our solution is an adaptive, feedback-directed learning testing system that learns rules from execution traces of applications. Theses rules are then used to automatically select test input data for performance testing. We hypothesize that FOREPOST can find more performance bottlenecks as compared to random testing. We have implemented our solution and applied it to a medium-size industrial application at a major insurance company and to two open-source applications. Performance bottlenecks were found automatically and confirmed by experienced testers and developers. We also thoroughly studied the factors (or independent variables) that impact the results of FOREPOST.
C1 [Luo, Qi; Poshyvanyk, Denys] Coll William & Mary, Dept Comp Sci, Williamsburg, VA 23188 USA.
   [Nair, Aswathy] Bank Amer Merrill Lynch, Pennington, NJ 08534 USA.
   [Grechanik, Mark] Univ Illinois, Dept Comp Sci, Chicago, IL 60601 USA.
C3 William & Mary; University of Illinois System; University of Illinois
   Chicago; University of Illinois Chicago Hospital
RP Luo, Q (corresponding author), Coll William & Mary, Dept Comp Sci, Williamsburg, VA 23188 USA.
EM qluo@cs.wm.edu; nair.a.87@gmail.com; drmark@uic.edu; denys@cs.wm.edu
RI Grechanik, Mark/IZD-6018-2023
OI Grechanik, Mark/0000-0002-8364-595X; Poshyvanyk,
   Denys/0000-0002-5626-7586
FU NSF [CCF-0916139, CCF-1017633, CCF-1218129, CCF-1525902]; major
   insurance company; Accenture; Direct For Computer & Info Scie & Enginr;
   Division of Computing and Communication Foundations [1218129] Funding
   Source: National Science Foundation; Division of Computing and
   Communication Foundations; Direct For Computer & Info Scie & Enginr
   [1525902] Funding Source: National Science Foundation
FX We are grateful to the anonymous ICSE'12 and EMSE journal reviewers for
   their relevant and useful comments and suggestions, which helped us to
   significantly improve an earlier version of this paper. We would like to
   thank Bogdan Dit and Kevin Moran for reading the paper and providing the
   feedback on early drafts. We would also like to thank Du Shen for his
   pertinent feedback on improving the current version of FOREPOST as well
   as pointing out areas for improvement. We also thank Chen Fu and Qin Xie
   for their contributions to the earlier version of this work. This work
   is supported by NSF CCF-0916139, NSF CCF-1017633, NSF CCF-1218129, NSF
   CCF-1525902, a major insurance company, and Accenture.
CR Achenbach M, 2009, IEEE INT WORK C SO, P137, DOI 10.1109/SCAM.2009.25
   Aguilera M. K., 2003, Operating Systems Review, V37, P74, DOI 10.1145/1165389.945454
   Ammann Paul, 2008, Introduction to software testing, V1st
   Ammons G, 2004, LECT NOTES COMPUT SC, V3086, P170
   [Anonymous], 2003, WHAT IS GOOD TEST CA
   [Anonymous], 1994, Encyclopedia of software Engineering
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Ashley C, 2006, APPL PERFORMANCE MAN
   Avritzer A, 1996, SOFTWARE PRACT EXPER, V26, P613, DOI 10.1002/(SICI)1097-024X(199606)26:6<613::AID-SPE23>3.0.CO;2-5
   Avritzer A, 2011, IET SOFTW, V5, P113, DOI 10.1049/iet-sen.2010.0035
   Avritzer A., 1994, SIGSOFT Software Engineering Notes, P44
   Barna C., 2011, Proceedings of the 8th ACM International Conference on Autonomic Computing - ICAC'11, P91
   Bayan M, 2008, APPLIED COMPUTING 2008, VOLS 1-3, P661
   Beck K., 2003, ADDISON WESLEY SIGNA
   BIRD DL, 1983, IBM SYST J, V22, P229, DOI 10.1147/sj.223.0229
   Bishop Christopher M, 2006, PATTERN RECOGNITION, DOI DOI 10.1117/1.2819119
   Briand LC, 2005, GECCO 2005: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOLS 1 AND 2, P1021
   Cohen J., 1988, STAT POWER ANAL BEHA
   Cohen W.W., 1995, P 12 INT C MACH LEAR, P115, DOI [DOI 10.1016/B978-1-55860-377-6.50023-2, 10.1016/B978-1-55860-377-6.50023-2]
   CORNELISSEN W, 1995, IEEE SOFTWARE, V12, P87, DOI 10.1109/52.406764
   Dickinson W, 2001, PROC INT CONF SOFTW, P339, DOI 10.1109/ICSE.2001.919107
   Dijkstra E W, 1976, DISCIPLINE PROGRAMMI, V1
   Dustin E., 1999, AUTOMATED SOFTWARE T
   Fewster M., 1999, Software test automation: effective use of test execution tools
   Foo King Chun, 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P32, DOI 10.1109/QSIC.2010.35
   Freeman S., 2004, Companion to the 19th annual ACM SIGPLAN Conference on Object-oriented Programming Systems, Languages, and Applications, OOPSLA '04, P236
   Furnkranz J., 1994, INCREMENTAL REDUCED, P70, DOI DOI 10.1016/B978-1-55860-335-6.50017-9
   Garbani JP, 2008, MARKET OVERVIEW APPL
   Glenford JMyers., 1979, The art of software testing
   Grant S, 2008, WORK CONF REVERSE EN, P138, DOI 10.1109/WCRE.2008.49
   Grechanik M, 2012, PROC INT CONF SOFTW, P156, DOI 10.1109/ICSE.2012.6227197
   Grindal M, 2005, SOFTW TEST VERIF REL, V15, P167, DOI 10.1002/stvr.319
   Group TY, 2005, ENTERPRISE APPL MANA
   Hamlet Dick., 2006, RT 06, P1
   Haran M., 2005, ESECSIGSOFT FSE, P146, DOI [10.1145/1095430.1081732, DOI 10.1145/1095430.1081732]
   Hull E., 2005, REQUIR ENG, V2nd
   Hyvärinen A, 2000, NEURAL NETWORKS, V13, P411, DOI 10.1016/S0893-6080(00)00026-5
   (IEEE) IoEaEE, 1991, IEEE STAND COMP DICT
   Isaacs R, 2002, 7 CABERNET RAD WORKS
   Jiang ZM, 2009, PROC IEEE INT CONF S, P125, DOI 10.1109/ICSM.2009.5306331
   Jin GL, 2012, ACM SIGPLAN NOTICES, V47, P77, DOI 10.1145/2345156.2254075
   Jovic M, 2011, ACM SIGPLAN NOTICES, V46, P155, DOI 10.1145/2076021.2048081
   Kaner C., 1997, SOFTWARE QA, V4
   Koziolek H, 2005, SEM DEP ENG GERM CIT
   Linares-Vasquez M, 2014, EMPIR SOFTW ENG, V19, P582, DOI 10.1007/s10664-012-9230-z
   Lowry Richard, 2014, Concepts and applications of inferential statistics
   Malik H., 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P201, DOI 10.1109/ISSRE.2010.43
   Malik H, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1012, DOI 10.1109/ICSE.2013.6606651
   McMillan C., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P343, DOI 10.1109/ICSM.2011.6080801
   Menasce D A., 2002, Computer Measurement Group (CMG) Conference, P271
   Molyneaux I., 2009, The Art of Application Performance Testing: Help for Programmers and Quality Assurance, V1st
   Murphy TE, 2008, TECH REP
   MUSA JD, 1993, IEEE SOFTWARE, V10, P14, DOI 10.1109/52.199724
   Nistor A, 2015, CARAMEL DETECTING FI
   Nistor A, 2013, IEEE WORK CONF MIN S, P237, DOI 10.1109/MSR.2013.6624035
   Park Sangmin., 2012, Proceedings of the ACM SIGSOFT 20th International Symposium on the Foundations of Software Engineering. FSE'12, p35:1, DOI DOI 10.1145/2393596.2393636
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   Parsons S, 2005, KNOWL ENG REV, V20, P198, DOI DOI 10.1017/S0269888905220519
   Schwaber C, 2006, PERFORMANCE DRIVEN S
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   Shen Du, 2015, P 2015 INT S SOFTW T, P270
   Syer MD, 2013, PROC IEEE INT CONF S, P110, DOI 10.1109/ICSM.2013.22
   Tarr P., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P107, DOI 10.1109/ICSE.1999.841000
   Tian K, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P163, DOI 10.1109/MSR.2009.5069496
   Westcott MR, 1968, CONT PSYCHOL I HIST
   Weyuker EJ, 2000, IEEE T SOFTWARE ENG, V26, P1147, DOI 10.1109/32.888628
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Wildstrom J, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1113
   Witten I. H., 2005, DATA MINING PRACTICA
   Yuhanna N, 2009, DBMS SELECTION LOOK
   Zaman S., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P199, DOI 10.1109/MSR.2012.6224281
   Zaman S., 2011, Proceedings of the 8th working conference on mining software repositories, P93, DOI [10.1145/1985441.1985457, DOI 10.1145/1985441.1985457]
   Zaparanuks D, 2012, ACM SIGPLAN NOTICES, V47, P67, DOI 10.1145/2345156.2254074
   ZHANG P, 2011, ASE, P43
NR 74
TC 14
Z9 14
U1 2
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2017
VL 22
IS 1
BP 6
EP 56
DI 10.1007/s10664-015-9413-5
PG 51
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EI3GS
UT WOS:000392378400001
DA 2024-07-18
ER

PT J
AU Vitharana, P
AF Vitharana, Padmal
TI Defect propagation at the project-level: results and a post-hoc analysis
   on inspection efficiency
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Inspections; Software quality; Defect propagation; Requirements; Design;
   Coding
ID 2-STAGE LEAST-SQUARES; SOFTWARE-DEVELOPMENT; CODE INSPECTIONS; MODELS;
   BEHAVIOR; REVIEWS; TEAMS
AB Inspections are increasingly utilized to enhance software quality. While the effectiveness of inspections in uncovering defects is widely accepted, there is a lack of research that takes a more holistic approach by considering defect counts from initial phases of the development process (requirements, design, and coding) and examining defect propagation where defect counts are aggregated to the project-level (i.e., application-level). Using inspection data collected from a large software development firm, this paper investigates the extent of defect propagation at the project-level during early lifecycle phases. I argue that defect propagation can be observed from the relationship between defects in the prior phase and the defects in the subsequent phase. Both Ordinary Least Squares and 3-Stage Least Squares analyses support the hypotheses on defect propagation. Moreover, results show that the inspection efficiency (defects per unit inspection time) decreases as the software product progresses from requirements to design to coding. A post-hoc analysis revealed further insights into inspection efficiency. In each phase, as the inspection time increased, efficiency reached an optimal point and then dropped off. In addition, a project's inspection efficiency generally tends to remain stable from one phase to another. These insights offer managers means to assess inspections, their efficiency, and make adjustments to the time allotted to inspect project's artifacts in both the current and the subsequent phase. Implications for managers and future research directions are discussed.
C1 [Vitharana, Padmal] Syracuse Univ, Whitman Sch Management, Syracuse, NY 13244 USA.
C3 Syracuse University
RP Vitharana, P (corresponding author), Syracuse Univ, Whitman Sch Management, Syracuse, NY 13244 USA.
EM padmal@syr.edu
FU Earl V. Snyder Innovation Management Center at the Whitman School of
   Management, Syracuse University; Robert H. Brethen Operations Management
   Institute at the Whitman School of Management, Syracuse University
FX The author thanks Empirical Software Engineering Editors-in-Chief and
   the review team for guidance through the review process. This research
   was partly funded by grants from the Earl V. Snyder Innovation
   Management Center and Robert H. Brethen Operations Management Institute
   at the Whitman School of Management, Syracuse University.
CR [Anonymous], 2000, Software Cost Estimation with COCOMO II
   [Anonymous], P 10 INT S SOFTW MET
   [Anonymous], 2002, EMPIRICAL SOFTW ENG
   [Anonymous], ECONOMETRIC ANAL
   BANKER RD, 1989, IEEE T SOFTWARE ENG, V15, P1199, DOI 10.1109/TSE.1989.559768
   Biffl S, 2003, IEEE T SOFTWARE ENG, V29, P385, DOI 10.1109/TSE.2003.1199069
   Biffl S, 2000, IEEE SOFTWARE, V29, P385
   Briand L, 1998, PROC INT CONF SOFTW, P340, DOI 10.1109/ICSE.1998.671387
   Briand LC, 2004, J SYST SOFTWARE, V73, P205, DOI 10.1016/j.jss.2004.01.015
   Briand LC, 2000, IEEE T SOFTWARE ENG, V26, P518, DOI 10.1109/32.852741
   Briand LC, 1997, P INT SOFTW CONS NET
   Christenson D. A., 1988, GLOBECOM '88. IEEE Global Telecommunications Conference and Exhibition - Communications for the Information Age. Conference Record (IEEE Cat. No.88CH2535-3), P468, DOI 10.1109/GLOCOM.1988.25885
   Davidson Russell, 1993, ESTIMATION INFERENCE
   Ebenau RG, 1994, CROSSTALK, V7, P9
   Ebert C, 2009, COMPUTER, V42, P42, DOI 10.1109/MC.2009.118
   FAGAN ME, 1986, IEEE T SOFTWARE ENG, V12, P744, DOI 10.1109/TSE.1986.6312976
   Fagan ME, 2002, SOFTW DES MAN C SOFT
   Fenton NE, 1999, IEEE T SOFTWARE ENG, V25, P675, DOI 10.1109/32.815326
   Freimut B, 2005, IEEE T SOFTWARE ENG, V31, P1074, DOI 10.1109/TSE.2005.136
   Greene W., 1993, ECONOMETRIC ANAL
   Harter D.E., 2000, P 21 INT C INF SYST, P407
   Jacobs J, 2007, INFORM SOFTWARE TECH, V49, P774, DOI 10.1016/j.infsof.2006.09.002
   JAMES LR, 1978, PSYCHOL BULL, V85, P1104, DOI 10.1037/0033-2909.85.5.1104
   Johnson PM, 1998, COMMUN ACM, V41, P49, DOI 10.1145/269012.269020
   KELLY JC, 1992, J SYST SOFTWARE, V17, P111, DOI 10.1016/0164-1212(92)90089-3
   Kemerer CF, 2009, IEEE T SOFTWARE ENG, V35, P534, DOI 10.1109/TSE.2009.27
   Kitchenham B, 1996, IEEE SOFTWARE, V13, P12, DOI 10.1109/52.476281
   Laitenberger O, 2001, IEEE T SOFTWARE ENG, V27, P387, DOI 10.1109/32.922713
   Laitenberger O, 1999, P 6 IEEE S SOFTW MET
   Laitenberger O., 2001, Empirical Software Engineering, V6, P81
   Maddala G.S., 2008, INTRO ECONOMETRICS
   Mandala NR, 2012, INT SYMP EMP SOFTWAR, P221, DOI 10.1145/2372251.2372291
   Mäntylä MV, 2009, IEEE T SOFTWARE ENG, V35, P430, DOI 10.1109/TSE.2008.71
   Miller J., 1998, Empirical Software Engineering, V3, P37, DOI 10.1023/A:1009735805377
   Miller J, 2004, IEEE T SOFTWARE ENG, V30, P811, DOI 10.1109/TSE.2004.69
   Montagud S, 2012, SOFTWARE QUAL J, V20, P425, DOI 10.1007/s11219-011-9146-7
   Myers Glenford J., 2011, The Art of Software Testing
   ONeill D, 1997, IEEE SOFTWARE, V14, P18, DOI 10.1109/52.566420
   Porter AA, 1997, IEEE T SOFTWARE ENG, V23, P329, DOI 10.1109/32.601071
   Raz T, 2004, QUAL RELIAB ENG INT, V20, P17, DOI 10.1002/qre.540
   Raz T, 1997, INFORM SOFTWARE TECH, V39, P297, DOI 10.1016/S0950-5849(96)01147-0
   Raz T, 1994, P C CTR ADV STUD COL, P61
   Rigby PC, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2594458
   Runeson P, 2006, IEEE SOFTWARE, V23, P82, DOI 10.1109/MS.2006.89
   Sauer C, 2000, IEEE T SOFTWARE ENG, V26, P1, DOI 10.1109/32.825763
   SCHMITT N, 1982, J APPL PSYCHOL, V67, P806, DOI 10.1037/0021-9010.67.6.806
   Strauss S, 1994, SFOTWARE INSPECTION
   Unterkalmsteiner M, 2012, IEEE T SOFTWARE ENG, V38, P398, DOI 10.1109/TSE.2011.26
   Vitharana O, 2003, IEEE T SOFTWARE ENG, V29, P167, DOI 10.1109/TSE.2003.1178054
   Wagner Stefan., 2006, Proceedings of the 2006 International Symposium on Software Testing and Analysis, ISSTA '06, P73
   Westland JC, 2004, DECIS SUPPORT SYST, V37, P229, DOI 10.1016/S0167-9236(03)00020-4
   Winkler D, 2010, LECT NOTES COMPUT SC, V6156, P17, DOI 10.1007/978-3-642-13792-1_4
   YU TJ, 1988, IEEE T SOFTWARE ENG, V14, P1261, DOI 10.1109/32.6170
   ZELLNER A, 1962, ECONOMETRICA, V30, P54, DOI 10.2307/1911287
   [No title captured]
NR 55
TC 4
Z9 5
U1 1
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2017
VL 22
IS 1
BP 57
EP 79
DI 10.1007/s10664-015-9415-3
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EI3GS
UT WOS:000392378400002
DA 2024-07-18
ER

PT J
AU Misirli, AT
   Shihab, E
   Kamei, Y
AF Misirli, Ayse Tosun
   Shihab, Emad
   Kamei, Yasukata
TI Studying high impact fix-inducing changes
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Change metrics; Fix-inducing changes; Change impact
ID CODE CHURN; SOFTWARE; METRICS; INDICATORS; COMPLEXITY
AB As software systems continue to play an important role in our daily lives, their quality is of paramount importance. Therefore, a plethora of prior research has focused on predicting components of software that are defect-prone. One aspect of this research focuses on predicting software changes that are fix-inducing. Although the prior research on fix-inducing changes has many advantages in terms of highly accurate results, it has one main drawback: It gives the same level of impact to all fix-inducing changes. We argue that treating all fix-inducing changes the same is not ideal, since a small typo in a change is easier to address by a developer than a thread synchronization issue. Therefore, in this paper, we study high impact fix-inducing changes (HIFCs). Since the impact of a change can be measured in different ways, we first propose a measure of impact of the fix-inducing changes, which takes into account the implementation work that needs to be done by developers in later (fixing) changes. Our measure of impact for a fix-inducing change uses the amount of churn, the number of files and the number of subsystems modified by developers during an associated fix of the fix-inducing change. We perform our study using six large open source projects to build specialized models that identify HIFCs, determine the best indicators of HIFCs and examine the benefits of prioritizing HIFCs. Using change factors, we are able to predict 56 % to 77 % of HIFCs with an average false alarm (misclassification) rate of 16 %. We find that the lines of code added, the number of developers who worked on a change, and the number of prior modifications on the files modified during a change are the best indicators of HIFCs. Lastly, we observe that a specialized model for HIFCs can provide inspection effort savings of 4 % over the state-of-the-art models. We believe our results would help practitioners prioritize their efforts towards the most impactful fix-inducing changes and save inspection effort.
C1 [Misirli, Ayse Tosun] Istanbul Tech Univ, Fac Comp & Informat, TR-80626 Istanbul, Turkey.
   [Shihab, Emad] Concordia Univ, Dept Comp Sci & Software Engn, Quebec City, PQ, Canada.
   [Kamei, Yasukata] Kyushu Univ, Grad Sch, Fukuoka 812, Japan.
   [Kamei, Yasukata] Kyushu Univ, Fac Informat Sci & Elect Engn, Fukuoka 812, Japan.
C3 Istanbul Technical University; Concordia University - Canada; Kyushu
   University; Kyushu University
RP Misirli, AT (corresponding author), Istanbul Tech Univ, Fac Comp & Informat, TR-80626 Istanbul, Turkey.
EM tosunmisirli@itu.edu.tr; eshihab@cse.concordia.ca;
   kamei@ait.kyushu-u.ac.jp
RI Tosun, Ayse/B-4794-2014
OI Tosun, Ayse/0000-0003-1859-7872
FU JSPS KAKENHI [24680003, 25540026]; Grants-in-Aid for Scientific Research
   [24680003, 25540026] Funding Source: KAKEN
FX This research was partially supported by JSPS KAKENHI Grant Numbers
   24680003 and 25540026.
CR [Anonymous], 2011, Proceedings of the 19th ACM SIGSOFT symposium and the 13th European conference on Foundations of software engineering (FSE'11), DOI [10.1145/2025113.2025121, DOI 10.1145/2025113.2025121]
   [Anonymous], 2007, PROMISE 07, DOI DOI 10.1109/PROMISE.2007.10
   [Anonymous], 2008, Proceedings of the 4th International Workshop on Predictor Models in Software Engineering, PROMISE '08
   Arisholm E., 2006, ISESE 06 P 2006 ACMI, P8
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Bernstein A., 2010, P 18 ACM SIGSOFT INT, P97
   Bird C, 2009, EUR SOFTW ENG C S FD
   Boehm B, 2005, SOFTWARE DEFECT REDU
   Bradley P., 1999, MSRTR9835
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Caglayan B, 2010, P 6 INT C PRED MOD S
   Caglayan B., 2012, Proceedings of the 8th International Conference on Predictive Models in Software Engineering', PROMISE'12, ACM, P1
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Czerwonka Jacek, 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P357, DOI 10.1109/ICST.2011.24
   D'Ambros Marco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P31, DOI 10.1109/MSR.2010.5463279
   Estabrooks A., 2001, Advances in Intelligent Data Analysis. 4th International Conference, IDA 2001. Proceedings (Lecture Notes in Computer Science Vol.2189), P34
   Eyolfson J., 2011, WORKING C MINING SOF, P153, DOI DOI 10.1145/1985441.1985464
   Fraley ChrisAE Raftery L. Scrucca., 2012, Normal Mixture Modeling for Model-Based Clustering, Classification, and Density Estimation, V23, P2012
   Gall Juergen, 2012, Outdoor and Large-Scale Real-World Scene Analysis. 15th International Workshop on Theoretical Foundations of Computer Vision. Revised Selected Papers, P243, DOI 10.1007/978-3-642-34091-8_11
   Gethers M, 2012, PROC INT CONF SOFTW, P430, DOI 10.1109/ICSE.2012.6227172
   Giger E., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P217, DOI 10.1109/MSR.2012.6224284
   Giger E, 2012, INT SYMP EMP SOFTWAR, P171, DOI 10.1145/2372251.2372285
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Guo PJ, 2010, Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering, P495
   Halstead M. H., 1977, ELEMENTS SOFTWARE SC
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Hata H, 2012, PROC INT CONF SOFTW, P200, DOI 10.1109/ICSE.2012.6227193
   Herraiz I., 2007, Proceedings of the International Workshop on Mining Software Repositories, P21
   Herzig K, 2013, PROC INT SYMP SOFTW, P118, DOI 10.1109/ISSRE.2013.6698911
   Jiang Y., 2008, DEFECTS 08 P 2008 WO, P16, DOI [DOI 10.1145/1390817.1390822, 10.1145/1390817.1390822]
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kamei Y, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P279
   Kawrykow D, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P351, DOI 10.1145/1985793.1985842
   Kim S, 2007, P 6 JOINT M EUR SOFT, P45, DOI DOI 10.1145/1287624.1287633
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kim S, 2006, IEEE INT CONF AUTOM, P81
   Lehnert S., 2011, TECHNICAL REPORT
   Leszak M, 2002, J SYST SOFTWARE, V61, P173, DOI 10.1016/S0164-1212(01)00146-7
   Li BX, 2013, SOFTW TEST VERIF REL, V23, P613, DOI 10.1002/stvr.1475
   Liaw A, 2013, RANDOMFOREST BREIMAN
   Madhavan Janaki T., 2007, P 2007 OOPSLA WORKSH, P36, DOI [10.1145/1328279.1328287, DOI 10.1145/1328279.1328287]
   Matsumoto S, 2010, P 6 INT C PREDICTIVE, P1, DOI DOI 10.1145/1868328.1868356
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Mende T, 2010, EUR CON SFTWR MTNCE, P107, DOI 10.1109/CSMR.2010.18
   Misirli AT, 2011, P INT WORKSH EM TREN
   Misirli AT, 2013, IEEE SOFTWARE, V30, P54, DOI 10.1109/MS.2013.93
   Mockus A, 2000, BELL LABS TECH J, V5, P169, DOI 10.1002/bltj.2229
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Nagappan N, 2005, PROC INT CONF SOFTW, P580, DOI 10.1145/1062455.1062558
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Ohlsson N, 1996, IEEE T SOFTWARE ENG, V22, P886, DOI 10.1109/32.553637
   Ostrand T. J., 2010, P 6 INT C PRED MOD S, P19, DOI [DOI 10.1145/1868328, 10.1145/1868328]
   Purushothaman R, 2005, IEEE T SOFTWARE ENG, V31, P511, DOI 10.1109/TSE.2005.74
   Ren X, 2004, OOPSLA
   Shadish W. R., 2002, EXPT QUASI EXPT DESI
   Shihab E., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P249, DOI 10.1109/WCRE.2010.36
   Shihab E., 2012, P ACM SIGSOFT 20 INT
   Shihab E., 2011, Proceedings of the ACM SIGSOFT symposium and the European Conference on Foundations of Software Engineering, P300
   Shihab E, 2013, INFORM SOFTWARE TECH, V55, P1981, DOI 10.1016/j.infsof.2013.06.002
   Shihab E, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1106, DOI 10.1145/1985793.1986007
   Shin Y, 2011, IEEE T SOFTWARE ENG, V37, P772, DOI 10.1109/TSE.2010.81
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Thung F., 2012, Proceedings of the 2012 IEEE 23rd International Symposium on Software Reliability Engineering (ISSRE), P271, DOI 10.1109/ISSRE.2012.22
   Tosun A, 2010, INFORM SOFTWARE TECH, V52, P1242, DOI 10.1016/j.infsof.2010.06.006
   Tosun A, 2009, INT SYMP EMP SOFTWAR, P478
   Zimmermann T, 2004, PROC INT CONF SOFTW, P563, DOI 10.1109/ICSE.2004.1317478
   Zimmermann T, 2010, P INT C SOFTW TEST V
NR 68
TC 30
Z9 31
U1 1
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2016
VL 21
IS 2
BP 605
EP 641
DI 10.1007/s10664-015-9370-z
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DI2ST
UT WOS:000373349700010
DA 2024-07-18
ER

PT J
AU Wang, SH
   Khomh, F
   Zou, Y
AF Wang, Shaohua
   Khomh, Foutse
   Zou, Ying
TI Improving bug management using correlations in crash reports
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Crashes; Crash reports; Stack traces; Bug localization; Bug duplication
AB Nowadays, many software organizations rely on automatic problem reporting tools to collect crash reports directly from users' environments. These crash reports are later grouped together into crash types. Usually, developers prioritize crash types based on the number of crash reports and file bug reports for the top crash types. Because a bug can trigger a crash in different usage scenarios, different crash types are sometimes related to the same bug. Two bugs are correlated when the occurrence of one bug causes the other bug to occur. We refer to a group of crash types related to identical or correlated bug reports, as a crash correlation group. In this paper, we propose five rules to identify correlated crash types automatically. We propose an algorithm to locate and rank buggy files using crash correlation groups. We also propose a method to identify duplicate and related bug reports. Through an empirical study on Firefox and Eclipse, we show that the first three rules can identify crash correlation groups using stack trace information, with a precision of 91 % and a recall of 87 % for Firefox and a precision of 76 % and a recall of 61 % for Eclipse. On the top three buggy file candidates, the proposed bug localization algorithm achieves a recall of 62 % and a precision of 42 % for Firefox, and a recall of 52 % and a precision of 50 % for Eclipse. On the top 10 buggy file candidates, the recall increases to 92 % for Firefox and 90 % for Eclipse. The proposed duplicate bug report identification method achieves a recall of 50 % and a precision of 55 % on Firefox, and a recall of 47 % and a precision of 35 % on Eclipse. Developers can combine the proposed crash correlation rules with the new bug localization algorithm to identify and fix correlated crash types all together. Triagers can use the duplicate bug report identification method to reduce their workload by filtering duplicate bug reports automatically.
C1 [Wang, Shaohua] Queens Univ, Sch Comp, Kingston, ON, Canada.
   [Khomh, Foutse] Polytech Montreal, DGIGL, SWAT Lab, Montreal, PQ, Canada.
   [Zou, Ying] Queens Univ, Elect & Comp Engn, Kingston, ON, Canada.
C3 Queens University - Canada; Universite de Montreal; Polytechnique
   Montreal; Queens University - Canada
RP Wang, SH (corresponding author), Queens Univ, Sch Comp, Kingston, ON, Canada.
EM shaohua@cs.queensu.ca; foutse.khomh@polymtl.ca; ying.zou@queensu.ca
RI Zou, Ying/KLC-9380-2024; Wang, Shaohua/AAF-7235-2019; Wang,
   Fayuan/U-8471-2018
OI Wang, Fayuan/0000-0003-1345-256X; wang, shaohua/0000-0001-5777-7759
CR Agrawal R., 1994, P INT VLDB C VLDB 94, P487, DOI DOI 10.5555/645920.672836
   [Anonymous], 2009, UTDCS45 U TEX DALL
   [Anonymous], 2005, J NETW SYST MANAG
   Ball T, 2003, ACM SIGPLAN NOTICES, V38, P97, DOI 10.1145/640128.604140
   Betttenburg N, 2008, P 5 INT WORK C MIN S
   Chan B, 2009, P 18 INT C PROGR COM, P114
   Dang YN, 2012, PROC INT CONF SOFTW, P1084, DOI 10.1109/ICSE.2012.6227111
   Dhaliwal T., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P333, DOI 10.1109/ICSM.2011.6080800
   Glerum K., 2009, Debugging in the (Very) Large: Ten Years of Implementation and Experience
   Heyer LJ, 1999, GENOME RES, V9, P1106, DOI 10.1101/gr.9.11.1106
   Jones JA, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P467, DOI 10.1109/ICSE.2002.1007991
   Jones JA, 2005, P 20 IEEE ACM INT C, P273
   Khomh F., 2011, 2011 18th Working Conference on Reverse Engineering, P261, DOI 10.1109/WCRE.2011.39
   Kim D, 2011, IEEE T SOFTWARE ENG, V3, P37
   Kim S, 2011, CRASH GRAPHS AGGREGA
   KRUSKAL JB, 1983, SIAM REV, V25, P201, DOI 10.1137/1025045
   Le W, 2010, P 8 ACM SIGSOFT INT
   Liblit B, 2005, ACM SIGPLAN NOTICES, V40, P15, DOI 10.1145/1064978.1065014
   liwerski J, 2005, ACM SIGSOFT SOFTWARE, V30, P1, DOI [10.1145/1082983.1083147, DOI 10.1145/1083142.1083147, DOI 10.1145/1082983.1083147]
   Michie D., 1994, MACHINE LEARNING NEU
   Nessa S, 2008, LECT NOTES COMPUT SC, V5258, P548, DOI 10.1007/978-3-540-88582-5_51
   Podgurski A, 2003, PROC INT CONF SOFTW, P465, DOI 10.1109/ICSE.2003.1201224
   RAGHAVAN VV, 1986, J AM SOC INFORM SCI, V37, P279, DOI 10.1002/asi.4630370502
   Schroter Adrian, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P118, DOI 10.1109/MSR.2010.5463280
   Sun C, 2011, MORE ACCURATE RETRIE
   Sun Chengnian, 2010, P 32 ACMIEEE INT C S, V1, P45, DOI [DOI 10.1145/1806799, 10.1145/1806799.1806811]
   Wang JY, 2004, PROC INT CONF DATA, P79, DOI 10.1109/ICDE.2004.1319986
   Wang SH, 2013, IEEE WORK CONF MIN S, P247, DOI 10.1109/MSR.2013.6624036
   Wang XY, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P461, DOI 10.1145/1368088.1368151
   Yin R. K., 2017, CASE STUDY RES DESIG
NR 30
TC 121
Z9 144
U1 8
U2 213
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2016
VL 21
IS 2
BP 337
EP 367
DI 10.1007/s10664-014-9333-9
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DI2ST
UT WOS:000373349700003
PM 25217281
DA 2024-07-18
ER

PT J
AU Siegmund, J
   Schumann, J
AF Siegmund, Janet
   Schumann, Jana
TI Confounding parameters on program comprehension: a literature survey
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Program comprehension; Empirical research; Controlled experiment;
   Confounding parameters
ID WORKING-MEMORY; SOFTWARE MAINTENANCE; UML; DEVELOPERS; KNOWLEDGE;
   CAPACITY; BEHAVIOR; MODEL
AB Program comprehension is an important human factor in software engineering. To measure and evaluate program comprehension, researchers typically conduct experiments. However, designing experiments requires considerable effort, because confounding parameters need to be controlled for. Our aim is to support researchers in identifying relevant confounding parameters and select appropriate techniques to control their influence. To this end, we conducted a literature survey of 13 journals and conferences over a time span of 10 years. As result, we created a catalog of 39 confounding parameters, including an overview of measurement and control techniques. With the catalog, we give experimenters a tool to design reliable and valid experiments.
C1 [Siegmund, Janet] Univ Passau, D-94032 Passau, Germany.
C3 University of Passau
RP Siegmund, J (corresponding author), Univ Passau, D-94032 Passau, Germany.
EM siegmunj@fim.uni-passau.de
CR Anderson MJ, 2001, CAN J FISH AQUAT SCI, V58, P626, DOI 10.1139/cjfas-58-3-626
   Anderson T.W., 1996, NEW STAT ANAL DATA
   [Anonymous], THESIS U MAGDEBURG
   [Anonymous], 1972, TEST COLOUR BLINDNES
   [Anonymous], 2011, P WORKSH SOFTW REENG
   [Anonymous], 1 REPORT ED IN PRESS
   [Anonymous], 2012, 20 IEEE INT C PROGR
   [Anonymous], THESIS U MAGDEBURG
   [Anonymous], 2010, International Conference on Software Maintenance, DOI DOI 10.1109/ICSM.2010.5609691
   Baddeley AD, 2001, AM PSYCHOL, V56, P851, DOI 10.1037/0003-066X.56.11.851
   Beckwith Laura, 2005, P SIGCHI C HUM FACT, P869
   Bergersen GR, 2011, J INDIVID DIFFER, V32, P201, DOI 10.1027/1614-0001/a000052
   Bettenburg Nicolas, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P124, DOI 10.1109/ICPC.2010.46
   Biffl S, 2003, IEEE T SOFTWARE ENG, V29, P385, DOI 10.1109/TSE.2003.1199069
   Binkley D, 2008, INT C PROGRAM COMPRE, P83, DOI 10.1109/ICPC.2008.31
   Boehm BW., 1981, Software Engineering Economics
   Briand LC, 2005, IEEE T SOFTWARE ENG, V31, P833, DOI 10.1109/TSE.2005.105
   Brooks R., 1978, 3rd International Conference on Software Engineering, P196
   Campbell, 2002, EXPT QUASIEXPERIMENT
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Cook T. D., 1979, Quasi-experimentation: Design analysis issues for field settings
   Corbett A. T., 2001, CHI 2001 Conference Proceedings. Conference on Human Factors in Computing Systems, P245, DOI 10.1145/365024.365111
   Druin A, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P413
   Dybå T, 2006, INFORM SOFTWARE TECH, V48, P745, DOI 10.1016/j.infsof.2005.08.009
   Dzidek WJ, 2008, IEEE T SOFTWARE ENG, V34, P407, DOI 10.1109/TSE.2008.15
   Ellis B, 2007, PROC INT CONF SOFTW, P302
   ERICSSON KA, 1980, PSYCHOL REV, V87, P215, DOI 10.1037/0033-295X.87.3.215
   Feigenspan J., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P73
   Friedman M, 1937, J AM STAT ASSOC, V32, P675, DOI 10.2307/2279372
   Goldstein B., 2002, Sensation and perception, V6th
   Goodwin J., 1999, Research in psychology: Methods and design, V2nd
   Grigoreanu V, 2008, 2008 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P149, DOI 10.1109/VLHCC.2008.4639077
   Gülesir G, 2009, EMPIR SOFTW ENG, V14, P720, DOI 10.1007/s10664-009-9107-y
   Hu W, 2010, BRAIN, V133, P1694, DOI 10.1093/brain/awq106
   Jablonski Patricia, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P170, DOI 10.1109/ICPC.2010.22
   Jedlitschka A., 2008, Guide to advanced empirical software engineering, P201, DOI DOI 10.1007/978-1-84800-044-5_8
   Jensen Eric., 1998, Teaching with the Brain in Mind
   Juristo N., 2013, BASICS SOFTWARE ENG
   Kampenes VB, 2009, INFORM SOFTWARE TECH, V51, P71, DOI 10.1016/j.infsof.2008.04.006
   Ko AJ, 2003, PROG COMPREHEN, P175
   Ko AJ, 2006, IEEE T SOFTWARE ENG, V32, P971, DOI 10.1109/TSE.2006.116
   Li Gong, 2001, CHI 2001 Conference Proceedings. Conference on Human Factors in Computing Systems, P158, DOI 10.1145/365024.365090
   McConnell Steve, 2011, Making Software, P567
   McQuiggan SW, 2008, CHI 2008: 26TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS VOLS 1 AND 2, CONFERENCE PROCEEDINGS, P1511
   MILLER GA, 1956, PSYCHOL REV, V63, P81, DOI 10.1037/h0043158
   Mook D., 1996, MOTIVATION ORG ACTIO, V2nd
   Oberauer K, 2000, PERS INDIV DIFFER, V29, P1017, DOI 10.1016/S0191-8869(99)00251-2
   Oezbek Christopher, 2007, 2007 IEEE International Conference on Software Maintenance, P64, DOI 10.1109/ICSM.2007.4362619
   PENNINGTON N, 1987, COGNITIVE PSYCHOL, V19, P295, DOI 10.1016/0010-0285(87)90007-7
   Raven J. C., 1936, Mental Tests Used in Genetic Studies: The Performance of Related Individuals on Tests Mainly Educative and Mainly Reproductive
   Roethlisberger FJ, 1939, Management and the Worker
   ROSENTHA.R, 1966, PSYCHOL REP, V19, P115, DOI 10.2466/pr0.1966.19.1.115
   SACKMAN H, 1968, COMMUN ACM, V11, P3, DOI 10.1145/362851.362858
   Schlaug G, 2001, ANN NY ACAD SCI, V930, P281, DOI 10.1111/j.1749-6632.2001.tb05739.x
   SHAFT TM, 1995, INFORM SYST RES, V6, P286, DOI 10.1287/isre.6.3.286
   Sharif Bonita, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P196, DOI 10.1109/ICPC.2010.41
   Sharif B, 2009, INT C PROGRAM COMPRE, P268, DOI 10.1109/ICPC.2009.5090055
   SHNEIDERMAN B, 1979, INT J COMPUT INF SCI, V8, P219, DOI 10.1007/BF00977789
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   SOLOWAY E, 1984, IEEE T SOFTWARE ENG, V10, P595, DOI 10.1109/TSE.1984.5010283
   STANDISH TA, 1984, IEEE T SOFTWARE ENG, V10, P494, DOI 10.1109/TSE.1984.5010272
   Su H.-M., 1997, Test fur das berliner intelligenzstrukturmodell (BIS)
   Tiarks R., 2011, Softwaretechnik-Trends, V31, P36
   Torchiano M, 2004, PROG COMPREHEN, P226, DOI 10.1109/WPC.2004.1311064
   Vitharana O, 2003, IEEE T SOFTWARE ENG, V29, P167, DOI 10.1109/TSE.2003.1178054
   vonMayrhauser A, 1997, J SOFTW MAINT-RES PR, V9, P299, DOI 10.1002/(SICI)1096-908X(199709/10)9:5<299::AID-SMR157>3.0.CO;2-S
   VONMAYRHAUSER A, 1995, COMPUTER, V28, P44, DOI 10.1109/2.402076
   Wechsler D., 1950, The measurement of adult intelligence Williams
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Wundt W., 1874, GRUNDZUGE PHYSL PSYC
NR 70
TC 31
Z9 33
U1 0
U2 9
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2015
VL 20
IS 4
BP 1159
EP 1192
DI 10.1007/s10664-014-9318-8
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CJ8MB
UT WOS:000355754500008
DA 2024-07-18
ER

PT J
AU Fraser, G
   Arcuri, A
AF Fraser, Gordon
   Arcuri, Andrea
TI 1600 faults in 100 projects: automatically finding faults while
   achieving high coverage with EvoSuite
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Search-based testing; Automated test generation; Test oracles
ID TEST-DATA GENERATION
AB Automated unit test generation techniques traditionally follow one of two goals: Either they try to find violations of automated oracles (e.g., assertions, contracts, undeclared exceptions), or they aim to produce representative test suites (e.g., satisfying branch coverage) such that a developer can manually add test oracles. Search-based testing (SBST) has delivered promising results when it comes to achieving coverage, yet the use in conjunction with automated oracles has hardly been explored, and is generally hampered as SBST does not scale well when there are too many testing targets. In this paper we present a search-based approach to handle both objectives at the same time, implemented in the EvoSuite tool. An empirical study applying EvoSuite on 100 randomly selected open source software projects (the SF100 corpus) reveals that SBST has the unique advantage of being well suited to perform both traditional goals at the same time-efficiently triggering faults, while producing representative test sets for any chosen coverage criterion. In our study, EvoSuite detected twice as many failures in terms of undeclared exceptions as a traditional random testing approach, witnessing thousands of real faults in the 100 open source projects. Two out of every five classes with undeclared exceptions have actual faults, but these are buried within many failures that are caused by implicit preconditions. This "noise" can be interpreted as either a call for further research in improving automated oracles-or to make tools like EvoSuite an integral part of software development to enforce clean program interfaces.
C1 [Fraser, Gordon] Univ Sheffield, Dept Comp Sci, Sheffield S1 4DP, S Yorkshire, England.
   [Arcuri, Andrea] Simula Res Lab, Certus Software V&V Ctr, Lysaker, Norway.
C3 University of Sheffield
RP Fraser, G (corresponding author), Univ Sheffield, Dept Comp Sci, 211 Portobello, Sheffield S1 4DP, S Yorkshire, England.
EM gordon.fraser@sheffield.ac.uk; arcuri@simula.no
FU Google Focused Research Award on "Test Amplification"; Norwegian
   Research Council
FX This project has been funded by a Google Focused Research Award on "Test
   Amplification" and the Norwegian Research Council.
CR [Anonymous], INTRO PROBABILITY TH
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Arcuri A, 2013, EMPIR SOFTW ENG, V18, P594, DOI 10.1007/s10664-013-9249-9
   Arcuri A, 2013, SOFTW TEST VERIF REL, V23, P119, DOI 10.1002/stvr.457
   Arcuri A, 2012, IEEE T SOFTWARE ENG, V38, P258, DOI 10.1109/TSE.2011.121
   BARESI L, 2001, CISTR0102 U OR
   Barr E, 2013, P INT C PRINC PROGR
   Bauersfeld S, 2013, INT WORKSH SEARCH BA
   Bhattacharya N, 2011, LECT NOTES COMPUT SC, V6956, P204, DOI 10.1007/978-3-642-23716-4_19
   Clarke L. A., 1976, IEEE Transactions on Software Engineering, VSE-2, P215, DOI 10.1109/TSE.1976.233817
   COWLES M, 1982, AM PSYCHOL, V37, P553, DOI 10.1037/0003-066X.37.5.553
   Csallner C, 2004, SOFTWARE PRACT EXPER, V34, P1025, DOI 10.1002/spe.602
   Del Grosso C, 2008, COMPUT OPER RES, V35, P3125, DOI 10.1016/j.cor.2007.01.013
   DURAN JW, 1984, IEEE T SOFTWARE ENG, V10, P438, DOI 10.1109/TSE.1984.5010257
   Fraser G., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P121, DOI 10.1109/ICST.2012.92
   Fraser G., 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P150, DOI 10.1109/ICST.2011.54
   Fraser G, 2013, IEEE INT C SOFTW TES
   Fraser G, 2013, GEN EV COMP C GECCO
   Fraser G, 2013, IEEE T SOFTWARE ENG, V39, P276, DOI 10.1109/TSE.2012.14
   Fraser G, 2012, PROC INT CONF SOFTW, P178, DOI 10.1109/ICSE.2012.6227195
   Fraser Gordon, 2011, PROC 19 ACM SIGSOFT, P416, DOI 10.1145/2025113.2025179
   Godefroid P, 2005, ACM SIGPLAN NOTICES, V40, P213, DOI 10.1145/1064978.1065036
   Godefroid Patrice, 2008, EMSOFT, P207
   Gross F, 2012, ACM INT S SOFTW TEST
   Korel B, 1996, PROC INT CONF SOFTW, P71, DOI 10.1109/ICSE.1996.493403
   Lakhotia K., 2010, 2010 Proceedings of Second International Symposium on Search Based Software Engineering (SSBSE), P101, DOI 10.1109/SSBSE.2010.21
   Lakhotia K, 2010, J SYST SOFTWARE, V83, P2379, DOI 10.1016/j.jss.2010.07.026
   Malburg J., 2011, IEEE ACM INT C AUT S
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   McMinn P., 2009, PROC 11 ANN C GENET, P1689, DOI [10.1145/1569901.1570127, DOI 10.1145/1569901.1570127]
   McMinn P, 2007, IGUANA INPUT GENERAT
   Meyer B, 2007, LECT NOTES COMPUT SC, V4362, P114
   Orso Alessandro., 2008, Proceedings of the 2008 international workshop on dynamic analysis: held in conjunction with the ACM SIGSOFT International Symposium on Software Testing and Analysis (ISSTA 2008), WODA '08, P36, DOI DOI 10.1145/1401827.1401835
   Pacheco C, 2005, LECT NOTES COMPUT SC, V3586, P504
   Pacheco C, 2007, PROC INT CONF SOFTW, P75
   PANDITA R, 2010, IEEE INT C SOFTW MAI, P1
   Pournelle G. H., 1953, Journal of Mammalogy, V34, P133, DOI 10.1890/0012-9658(2002)083[1421:SDEOLC]2.0.CO;2
   Romano Daniele, 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P160, DOI 10.1109/ICST.2011.49
   Sen K., 2005, P 10 EUR SOFTW ENG C, V30, P263, DOI DOI 10.1145/1081706.1081750
   Tillmann N, 2008, LECT NOTES COMPUT SC, V4966, P134
   Tracey N, 2000, SOFTWARE PRACT EXPER, V30, P61, DOI 10.1002/(SICI)1097-024X(200001)30:1<61::AID-SPE292>3.0.CO;2-9
   Visser W., 2004, Software Engineering Notes, V29, P97, DOI 10.1145/1013886.1007526
   Williams N, 2005, LECT NOTES COMPUT SC, V3463, P281
   Xiao XS, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P611, DOI 10.1145/1985793.1985876
NR 44
TC 63
Z9 65
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2015
VL 20
IS 3
BP 611
EP 639
DI 10.1007/s10664-013-9288-2
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CI1DF
UT WOS:000354480800002
DA 2024-07-18
ER

PT J
AU Hindle, A
AF Hindle, Abram
TI Green mining: a methodology of relating software change and
   configuration to power consumption
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Power; Power consumption; Mining software repositories; Dynamic
   analysis; Energy consumption; Sustainable-software; Software metrics
AB Power consumption is becoming more and more important with the increased popularity of smart-phones, tablets and laptops. The threat of reducing a customer's battery-life now hangs over the software developer, who now asks, "will this next change be the one that causes my software to drain a customer's battery?" One solution is to detect power consumption regressions by measuring the power usage of tests, but this is time-consuming and often noisy. An alternative is to rely on software metrics that allow us to estimate the impact that a change might have on power consumption thus relieving the developer from expensive testing. This paper presents a general methodology for investigating the impact of software change on power consumption, we relate power consumption to software changes, and then investigate the impact of OO software metrics and churn metrics on power consumption. We demonstrated that software change can effect power consumption using the Firefox web-browser and the Azureus/Vuze BitTorrent client. We found evidence of a potential relationship between some software metrics and power consumption. We also investigate the effect of library versioning on the power consumption of rTorrent. In conclusion, we investigate the effect of software change on power consumption on two projects; and we provide an initial investigation on the impact of software metrics on power consumption.
C1 Univ Alberta, Dept Comp Sci, Edmonton, AB, Canada.
C3 University of Alberta
RP Hindle, A (corresponding author), Univ Alberta, Dept Comp Sci, Edmonton, AB, Canada.
EM abram.hindle@softwareprocess.es
RI Hou, Yanru/AAH-6077-2019
FU NSERC discovery grant
FX Thanks to Taras Glek of Mozilla, Andrew Wong, Philippe Vachon, and
   Andrew Neitsch. This research was supported by an NSERC discovery grant.
CR Amsel Nadine., 2010, Proceedings, CHI EA, P3337, DOI DOI 10.1145/1753846.1753981
   [Anonymous], P 8 INT S HIGH PERF
   Apple Inc, 2010, IOS APPL PROGR GUID
   Dong M, 2011, P ACM USENIX INT C M
   Fei Y, 2007, ACM T EMBED COMPUT S
   Gray C, 2010, PERFORMANCE CONSIDER
   Greenawalt P. M., 1994, MASCOTS '94. Proceedings of the Second International Workshop on Modeling, Analysis, and Simulation of Computer and Telecommunication Systems (Cat. No.94TH0621-3), P62, DOI 10.1109/MASCOT.1994.284446
   Gupta A, 2011, MSRTR2011106
   Hindle A., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P78, DOI 10.1109/MSR.2012.6224303
   Hindle A, 2012, P ICSE NIER TRACK
   IBM, 2011, IBM ACT EN MAN
   Intel, 2011, LESSWATTS ORG SAV PO
   Jureczko M., 2010, Model Methods Syst Dependability Oficyna Wydawnicza Politech Wroclawskiej, P69
   Kocher P., 1999, Advances in Cryptology - CRYPTO'99. 19th Annual International Cryptology Conference. Proceedings, P388
   Larabel M, 2007, UBUNTUS POWER CONSUM
   Lattanzi E, 2004, LECT NOTES COMPUT SC, V3254, P352
   Li L, 2011, P ACM SIGKDD
   Murugesan San, 2008, IT Professional, V10, P24, DOI 10.1109/MITP.2008.10
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Selby JWA, 2011, THESIS U WATERLOO
   Spinellis D, 2005, IEEE SOFTWARE, V22, P9, DOI 10.1109/MS.2005.111
   Sundell J, 2012, LIBTORRENT RTORRENT
   Sundell J, 2010, LIBTORRENT DEVEL LIB
   Sundell J, 2009, LIBTORRENT DEVEL LIB
   Tiwari V, 1996, J VLSI SIG PROCESS S, V13, P223, DOI 10.1007/BF01130407
   US Department of Energy, 2012, EN EXPL EL
   Weiyi Shang, 2011, 2011 18th Working Conference on Reverse Engineering, P335, DOI 10.1109/WCRE.2011.48
   Zhang L, 2010, PROCEEDINGS OF 2010 INTERNATIONAL CONFERENCE ON PUBLIC ADMINISTRATION (6TH), VOL II, P105, DOI 10.1145/1878961.1878982
NR 28
TC 50
Z9 54
U1 0
U2 18
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2015
VL 20
IS 2
BP 374
EP 409
DI 10.1007/s10664-013-9276-6
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CH2AB
UT WOS:000353824000004
DA 2024-07-18
ER

PT J
AU Hanenberg, S
   Kleinschmager, S
   Robbes, R
   Tanter, É
   Stefik, A
AF Hanenberg, Stefan
   Kleinschmager, Sebastian
   Robbes, Romain
   Tanter, Eric
   Stefik, Andreas
TI An empirical study on the impact of static typing on software
   maintainability
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Type systems; Programming languages; Empirical studies; Software
   engineering
ID SYSTEMS; CODE
AB Static type systems play an essential role in contemporary programming languages. Despite their importance, whether static type systems impact human software development capabilities remains open. One frequently mentioned argument in favor of static type systems is that they improve the maintainability of software systems-an often-used claim for which there is little empirical evidence. This paper describes an experiment that tests whether static type systems improve the maintainability of software systems, in terms of understanding undocumented code, fixing type errors, and fixing semantic errors. The results show rigorous empirical evidence that static types are indeed beneficial to these activities, except when fixing semantic errors. We further conduct an exploratory analysis of the data in order to understand possible reasons for the effect of type systems on the three kinds of tasks used in this experiment. From the exploratory analysis, we conclude that developers using a dynamic type system tend to look at different files more frequently when doing programming tasks-which is a potential reason for the observed differences in time.
C1 [Hanenberg, Stefan; Kleinschmager, Sebastian] Univ Duisburg Essen, Dept Comp Sci & BIS, Essen, Germany.
   [Robbes, Romain; Tanter, Eric] Univ Chile, Comp Sci Dept DCC, PLEIAD Lab, Santiago, Chile.
   [Stefik, Andreas] Univ Nevada, Dept Comp Sci, Las Vegas, NV 89154 USA.
C3 University of Duisburg Essen; Universidad de Chile; Nevada System of
   Higher Education (NSHE); University of Nevada Las Vegas
RP Hanenberg, S (corresponding author), Univ Duisburg Essen, Dept Comp Sci & BIS, Essen, Germany.
EM Stefan.Hanenberg@icb.uni-due.de
RI Robbes, Romain/H-3771-2013; Tanter, Éric/A-7955-2008
OI Tanter, Éric/0000-0002-7359-890X
FU FONDECYT, Chile [11110463, 1110051]; Program U-Apoya, University of
   Chile; National Science Foundation [CNS-0940521]; Direct For Computer &
   Info Scie & Enginr; Division Of Computer and Network Systems [0940555]
   Funding Source: National Science Foundation; Division Of Computer and
   Network Systems; Direct For Computer & Info Scie & Enginr [0940521]
   Funding Source: National Science Foundation
FX Romain Robbes is partially funded by FONDECYT project 11110463, Chile,
   and by Program U-Apoya, University of Chile Eric Tanter is partially
   funded by FONDECYT project 1110051, Chile Andreas Stefik is partially
   funded by the National Science Foundation under grant no. (CNS-0940521).
   We thank them for their generous support of this work.
CR [Anonymous], 2007, STAT BEHAV SCI
   Bird R., 1988, INTRO FUNCTIONAL PRO
   Bruce KimB., 2002, Foundations of Object-Oriented Languages: Types and Semantics
   Callaú O, 2013, EMPIR SOFTW ENG, V18, P1156, DOI 10.1007/s10664-012-9203-2
   Cardelli L., 1997, COMPUTER SCI ENG HDB, V2nd, P2208
   Curtis Bill., 1988, Handbook of human-computer interaction, P87
   Daly M., 2009, WORK PROGR EMP STUD
   Denny Paul, 2012, P 17 ACM ANN C INN T, P75, DOI [10.1145/2325296.2325318, DOI 10.1145/2325296.2325318]
   Endrikat S, 2011, CONF PROC INT SYMP C, P51, DOI 10.1109/ICPC.2011.46
   Feigenspan J., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P73
   GANNON JD, 1977, COMMUN ACM, V20, P584, DOI 10.1145/359763.359800
   Gat E, 2000, INTELLIGENCE, V11, P21
   HANENBERG S., 2011, 2 WORKSH EMP EV SOFT
   Hanenberg S, 2010, ACM SIGPLAN NOTICES, V45, P22, DOI 10.1145/1932682.1869462
   Hanenberg S, 2009, INT SYMP EMP SOFTWAR, P156, DOI 10.1109/ESEM.2009.5316028
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   Hudak P, 1994, TECHNICAL REPORT
   Juristo N., 2013, BASICS SOFTWARE ENG
   Juristo N, 2011, EMPIR SOFTW ENG, V16, P295, DOI 10.1007/s10664-010-9141-9
   Kitchenham B., 2006, INT S EMPIRICAL SOFT, P38, DOI DOI 10.1145/1159733.1159742
   Kleinschmager S., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P153
   Kleinschmager S, 2011, THESIS U DUISBURG ES
   Ko AJ, 2006, IEEE T SOFTWARE ENG, V32, P971, DOI 10.1109/TSE.2006.116
   Mayer C, 2012, ACM SIGPLAN C OBJ OR
   McConnell Steve., 2010, Making Software: What Really Works, and Why We Believe It, P567
   Nierstrasz O, 2005, LECT NOTES COMPUT SC, V3628, P1, DOI 10.1007/11550679_1
   Pfleeger S. L., 1995, Annals of Software Engineering, V1, P219, DOI 10.1007/BF02249052
   Pierce Benjamin C., 2002, TYPES PROGRAMMING LA, V1st
   Prechelt L, 2000, COMPUTER, V33, P23, DOI 10.1109/2.876288
   Prechelt L, 1998, IEEE T SOFTWARE ENG, V24, P302, DOI 10.1109/32.677186
   Prechelt L, 2001, KONTROLLIERTE EXPERI
   Richards G, 2011, LECT NOTES COMPUT SC, V6813, P52, DOI 10.1007/978-3-642-22655-7_4
   Rosenthal R., 2008, Artifacts in behavioral research: Robert Rosenthal and Ralph L. Rosnow's classic books
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Steinberg M, 2012, WHAT IS IMPACT UNPUB
   Stuchlik A, 2012, ACM SIGPLAN NOTICES, V47, P97, DOI 10.1145/2168696.2047861
   Tichy W. F., 2000, Empirical Software Engineering, V5, P309, DOI 10.1023/A:1009844119158
   Tratt L, 2009, ADV COMPUT, V77, P149, DOI 10.1016/S0065-2458(09)01205-4
   van Deursen A, 2006, SCI COMPUT PROGRAM, V60, P205, DOI 10.1016/j.scico.2005.10.006
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
NR 40
TC 46
Z9 53
U1 1
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2014
VL 19
IS 5
BP 1335
EP 1382
DI 10.1007/s10664-013-9289-1
PG 48
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AP9VT
UT WOS:000342429900007
DA 2024-07-18
ER

PT J
AU Bavota, G
   De Lucia, A
   Marcus, A
   Oliveto, R
AF Bavota, Gabriele
   De Lucia, Andrea
   Marcus, Andrian
   Oliveto, Rocco
TI Using structural and semantic measures to improve software
   modularization
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software re-modularization; Information-flow-based coupling; Conceptual
   coupling between classes; Empirical studies
ID CLUSTERING ALGORITHMS; LEGACY SYSTEMS; INFORMATION; COHESION
AB Changes during software evolution and poor design decisions often lead to packages that are hard to understand and maintain, because they usually group together classes with unrelated responsibilities. One way to improve such packages is to decompose them into smaller, more cohesive packages. The difficulty lies in the fact that most definitions and interpretations of cohesion are rather vague and the multitude of measures proposed by researchers usually capture only one aspect of cohesion. We propose a new technique for automatic re-modularization of packages, which uses structural and semantic measures to decompose a package into smaller, more cohesive ones. The paper presents the new approach as well as an empirical study, which evaluates the decompositions proposed by the new technique. The results of the evaluation indicate that the decomposed packages have better cohesion without a deterioration of coupling and the re-modularizations proposed by the tool are also meaningful from a functional point of view.
C1 [Bavota, Gabriele] Univ Salerno, Dept Math & Informat, Fisciano Sa, Italy.
   [De Lucia, Andrea] Univ Salerno, Fisciano Sa, Italy.
   [De Lucia, Andrea] Univ Salerno, Dept Engn, Fisciano Sa, Italy.
   [De Lucia, Andrea] Univ Salerno, Res Ctr Software Technol RCOST, Fisciano Sa, Italy.
   [Marcus, Andrian] Wayne State Univ, Detroit, MI 48202 USA.
   [Oliveto, Rocco] Univ Molise, Dept Math & Informat, Pesche Is, Italy.
   [Oliveto, Rocco] Univ Molise, Fac Sci, Pesche Is, Italy.
   [Oliveto, Rocco] Univ Molise, Dept Stat, Pesche Is, Italy.
C3 University of Salerno; University of Salerno; University of Salerno;
   University of Salerno; Wayne State University; University of Molise;
   University of Molise; University of Molise
RP Oliveto, R (corresponding author), Univ Molise, Dept Math & Informat, Pesche Is, Italy.
EM gbavota@unisa.it; adelucia@unisa.it; amarcus@wayne.edu;
   rocco.oliveto@unimol.it
RI De Lucia, Andrea/AAG-6781-2020
OI Marcus, Andrian/0000-0001-5450-5598; De Lucia,
   Andrea/0000-0002-4238-1425; BAVOTA, Gabriele/0000-0002-2216-3148
FU US National Foundation [CCF-1017263, CCF-0845706]; Division of Computing
   and Communication Foundations; Direct For Computer & Info Scie & Enginr
   [0845706, 1017263] Funding Source: National Science Foundation
FX We would like to thank all the students who participated to our study.
   We would also like to thank the anonymous reviewers for their careful
   reading of our manuscript and useful comments. Andrian Marcus was
   supported in part by grants from the US National Foundation: CCF-1017263
   and CCF-0845706.
CR Abdeen H, 2009, WORK CONF REVERSE EN, P103, DOI 10.1109/WCRE.2009.13
   [Anonymous], 2010, ASE 10 P IEEE ACM IN, DOI DOI 10.1145/1858996.1859024
   Anquetil N., 1999, Sixth Working Conference on Reverse Engineering (Cat. No.PR00303), P235, DOI 10.1109/WCRE.1999.806964
   Antoniol G, 2001, PROG COMPREHEN, P281, DOI 10.1109/WPC.2001.921738
   Baeza-Yates Ricardo, 1999, MODERN INFORM RETRIE, V463
   Basili V., 1994, The Goal Question Metric Approach, P528
   Bavota G., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P195, DOI 10.1109/WCRE.2010.29
   Bavota G, 2011, SOFTWARE REMODULARIZ
   Bavota G, 2010, PROC IEEE INT CONF S
   Bavota G, 2011, J SYST SOFTWARE, V84, P397, DOI 10.1016/j.jss.2010.11.918
   Bittencourt RA, 2009, EUR CON SFTWR MTNCE, P251, DOI 10.1109/CSMR.2009.28
   Canfora G, 2001, INFORM SOFTWARE TECH, V43, P401, DOI 10.1016/S0950-5849(01)00149-5
   CIMITILE A, 1995, J SYST SOFTWARE, V28, P117, DOI 10.1016/0164-1212(94)00049-S
   Corazza A, 2011, EUR CON SFTWR MTNCE, P35, DOI 10.1109/CSMR.2011.8
   Corazza A, 2010, EUR CON SFTWR MTNCE, P88, DOI 10.1109/CSMR.2010.36
   De Lucia A, 2011, CONF PROC INT SYMP C, P21, DOI 10.1109/ICPC.2011.34
   De Lucia A, 2008, PROC IEEE INT CONF S, P27, DOI 10.1109/ICSM.2008.4658051
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   DUCASSE S, 2007, P 23 IEEE INT C SOFT, P94
   Harman M., 2002, GEN EV COMP C GECCO, P1351
   Harman M, 2005, GECCO 2005: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOLS 1 AND 2, P1029
   Hartigan J. A., 1975, CLUSTERING ALGORITHM, V458, P468
   Kleinberg JM, 1999, J ACM, V46, P604, DOI 10.1145/324133.324140
   Koschke R, 2006, SCI COMPUT PROGRAM, V60, P171, DOI 10.1016/j.scico.2005.10.004
   Kuhn A, 2007, INFORM SOFTWARE TECH, V49, P230, DOI 10.1016/j.infsof.2006.10.017
   Lee Y, 1995, INT C SOFTW QUAL
   Lehman M. M., 1980, Journal of Systems and Software, V1, P213, DOI 10.1016/0164-1212(79)90022-0
   Maletic JI, 2001, PROC INT CONF SOFTW, P103, DOI 10.1109/ICSE.2001.919085
   Mancoridis S, 1998, PROG COMPREHEN, P45, DOI 10.1109/WPC.1998.693283
   Maqbool O, 2007, IEEE T SOFTWARE ENG, V33, P759, DOI 10.1109/TSE.2007.70732
   Marcus A, 2008, IEEE T SOFTWARE ENG, V34, P287, DOI 10.1109/TSE.2007.70768
   Mitchell BS, 2006, IEEE T SOFTWARE ENG, V32, P193, DOI 10.1109/TSE.2006.31
   Mitchell BS, 2001, PROC IEEE INT CONF S, P744, DOI 10.1109/ICSM.2001.972795
   O'Keeffe M, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P247
   Oppenheim A.N., 1992, QUESTIONNAIRE DESIGN
   Poshyvanyk D, 2009, EMPIR SOFTW ENG, V14, P5, DOI 10.1007/s10664-008-9088-2
   Praditwong K, 2011, IEEE T SOFTWARE ENG, V37, P264, DOI 10.1109/TSE.2010.26
   Ricca F, 2008, J SOFTW MAINT EVOL-R, V20, P1, DOI 10.1002/smr.360
   Scanniello Giuseppe, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P180, DOI 10.1109/ICPC.2010.17
   Seng O, 2006, GECCO 2006: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1909
   Seng O, 2005, GECCO 2005: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOLS 1 AND 2, P1045
   Shaw SC, 2003, IEEE T SOFTWARE ENG, V29, P851, DOI 10.1109/TSE.2003.1232289
   Shtern M, 2009, INT C PROGRAM COMPRE, P248, DOI 10.1109/ICPC.2009.5090051
   STEVENS WP, 1974, IBM SYST J, V13, P115, DOI 10.1147/sj.132.0115
   Tonella P, 2001, IEEE T SOFTWARE ENG, V27, P351, DOI 10.1109/32.917524
   van Deursen A., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P246, DOI 10.1109/ICSE.1999.841014
   Wiggerts TA, 1997, PROCEEDINGS OF THE FOURTH WORKING CONFERENCE ON REVERSE ENGINEERING, P33, DOI 10.1109/WCRE.1997.624574
   Wu JW, 2005, PROC IEEE INT CONF S, P525
   Yin R.K., 2011, Qualitative research from start to finish
NR 49
TC 51
Z9 54
U1 0
U2 13
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2013
VL 18
IS 5
BP 901
EP 932
DI 10.1007/s10664-012-9226-8
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 192CP
UT WOS:000322462000003
DA 2024-07-18
ER

PT J
AU Maia, R
   Cerqueira, R
   de Souza, CS
   Guisasola-Gorham, T
AF Maia, Renato
   Cerqueira, Renato
   de Souza, Clarisse Sieckenius
   Guisasola-Gorham, Tomas
TI A qualitative human-centric evaluation of flexibility in middleware
   implementations
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Middleware evaluation; API evaluation; Programmer experience;
   Qualitative methods; Cognitive Dimensions of Notations
ID DESIGN
AB Today middleware is much more powerful, more reliable and faster than it used to be. Nevertheless, for the application developer, the complexity of using middleware platforms has increased accordingly. The volume and variety of application contexts that current middleware technologies have to support require that developers be able to anticipate the widest possible range of execution environments, desired and undesired effects of different programming strategies, handling procedures for runtime errors, and so on. This paper shows how a generic framework designed to evaluate the usability of notations (the Cognitive Dimensions of Notations Framework, or CDN) has been instantiated and used to analyze the cognitive challenges involved in adapting middleware platforms. This human-centric perspective allowed us to achieve novel results compared to existing middleware evaluation research, typically centered around system performance metrics. The focus of our study is on the process of adapting middleware implementations, rather than in the end product of this activity. Our main contributions are twofold. First, we describe a qualitative CDN-based method to analyze the cognitive effort made by programmers while adapting middleware implementations. And second, we show how two platforms designed for flexibility have been compared, suggesting that certain programming language design features might be particularly helpful for developers.
C1 [Maia, Renato; Cerqueira, Renato; de Souza, Clarisse Sieckenius; Guisasola-Gorham, Tomas] Pontif Catholic Univ Rio de Janeiro PUC Rio, Dept Informat, BR-22451900 Rio De Janeiro, Brazil.
RP Cerqueira, R (corresponding author), Pontif Catholic Univ Rio de Janeiro PUC Rio, Dept Informat, BR-22451900 Rio De Janeiro, Brazil.
EM maia@inf.puc-rio.br; rcerq@inf.puc-rio.br; clarisse@inf.puc-rio.br;
   tgorham@inf.puc-rio.br
RI de Souza, Clarisse Sieckenius/H-7540-2012
OI de Souza, Clarisse Sieckenius/0000-0002-2154-4723
FU PETROBRAS; CNPq [308964/2006-3]; FAPERJ [E-26/102.400/2009]
FX This work was partially supported by grants from PETROBRAS and CNPq.
   Clarisse de Souza is partially supported by grants from FAPERJ
   (E-26/102.400/2009) and CNPq (308964/2006-3).
CR [Anonymous], ACM QUEUE
   [Anonymous], P SBRC 06 SAL FERR
   [Anonymous], ADV COMPUT
   [Anonymous], COMM OBJ REQ BROK AR
   [Anonymous], CHI 2003
   [Anonymous], 2006, Programming in lua
   [Anonymous], SEM 06
   [Anonymous], SIGOPS OPER SYST REV
   [Anonymous], P ARM 05 WORKSH
   [Anonymous], LECT NOTES COMPUTER
   [Anonymous], LECT NOTES COMPUT SC
   [Anonymous], M KAUFMANN SERIES IN
   [Anonymous], **DROPPED REF**
   [Anonymous], 15 ANN WORKSH PSYCH
   [Anonymous], P ICDCS 2002 WORKSH
   [Anonymous], LNCS
   Cairns P, 2008, RESEARCH METHODS FOR HUMAN-COMPUTER INTERACTION, P1
   Cerqueira R., 1999, Proceedings of the International Symposium on Distributed Objects and Applications, P362, DOI 10.1109/DOA.1999.794064
   Clarke S., 2001, P WORKSHOP PSYCHOL P, P275
   Costa P, 2007, LECT NOTES COMPUT SC, V4834, P429
   Coulson G, 2002, DISTRIB COMPUT, V15, P109, DOI 10.1007/s004460100064
   Creswell J. W., 2013, RES DESIGN QUALITATI
   DENZIN NormanK., 2013, LANDSCAPE QUALITATIV, V4th
   Dittrich Y, 2007, INFORM SOFTWARE TECH, V49, P531, DOI 10.1016/j.infsof.2007.02.009
   Eden AH, 2006, IEE P-SOFTW, V153, P113, DOI 10.1049/ip-sen:20050045
   Eichberg M, 2005, LECT NOTES COMPUT SC, V3442, P237, DOI 10.1007/978-3-540-31984-9_18
   Glaser B. G., 1967, DISCOVERY GROUNDED T, DOI 10.1515/9783111660211/html
   Green T. R. G., 1989, People and Computers V. Proceedings of the Fifth Conference of the British Computer Society Human-Computer Interaction Specialist Group, P443
   Green TRG, 1996, J VISUAL LANG COMPUT, V7, P131, DOI 10.1006/jvlc.1996.0009
   Henning M, 2009, COMMUN ACM, V52, P46, DOI 10.1145/1506409.1506424
   Hirsch A, 2007, IEEE SOFTWARE, V24, P31, DOI 10.1109/MS.2007.150
   Ierusalimschy R, 1998, 1998 INTERNATIONAL CONFERENCE ON COMPUTER LANGUAGES, PROCEEDINGS, P39, DOI 10.1109/ICCL.1998.674155
   Ko AJ, 2006, IEEE T SOFTWARE ENG, V32, P971, DOI 10.1109/TSE.2006.116
   Kon F, 2002, COMMUN ACM, V45, P33, DOI 10.1145/508448.508470
   Lazar J., 2010, Research Methods in Human-Computer Interaction
   Maia R, 2004, LECT NOTES COMPUT SC, V3291, P1285
   McLellan SG, 1998, IEEE SOFTWARE, V15, P78, DOI 10.1109/52.676963
   Nierstrasz O, 2005, LECT NOTES COMPUT SC, V3628, P1, DOI 10.1007/11550679_1
   Ousterhout JK, 1998, COMPUTER, V31, P23, DOI 10.1109/2.660187
   Puder Arno., 2006, DISTRIBUTED SYSTEMS
   Ramdhany R, 2009, LECT NOTES COMPUT SC, V5896, P1, DOI 10.1007/978-3-642-10445-9_1
   Ranganathan A, 2007, COMPLEXITY, V12, P37, DOI 10.1002/cplx.2O189
   Robson C., 2002, Real World Research, V2nd
   Rouvoy R, 2009, ANN TELECOMMUN, V64, P65, DOI 10.1007/s12243-008-0072-z
   Vinoski S, 2003, IEEE INTERNET COMPUT, V7, P88
   Wollrath A., 1996, USENIX COMPUTING SYS, V9
NR 46
TC 5
Z9 6
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2012
VL 17
IS 3
BP 166
EP 199
DI 10.1007/s10664-011-9167-7
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 893GI
UT WOS:000300343800002
DA 2024-07-18
ER

PT J
AU McLeod, L
   MacDonell, SG
   Doolin, B
AF McLeod, Laurie
   MacDonell, Stephen G.
   Doolin, Bill
TI Qualitative research on software development: a longitudinal case study
   methodology
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Qualitative methods; Longitudinal case study; Software development;
   Empirical research
ID INFORMATION-SYSTEMS; PROCESS IMPROVEMENT; SPECIAL-ISSUE; TECHNOLOGY;
   FIELD
AB This paper reports the use of a qualitative methodology for conducting longitudinal case study research on software development. We provide a detailed description and explanation of appropriate methods of qualitative data collection and analysis that can be utilized by other researchers in the software engineering field. Our aim is to illustrate the utility of longitudinal case study research, as a complement to existing methodologies for studying software development, so as to enable the community to develop a fuller and richer understanding of this complex, multi-dimensional phenomenon. We discuss the insights gained and lessons learned from applying a longitudinal qualitative approach to an empirical case study of a software development project in a large multi-national organization. We evaluate the methodology used to emphasize its strengths and to address the criticisms traditionally made of qualitative research.
C1 [McLeod, Laurie; MacDonell, Stephen G.; Doolin, Bill] Auckland Univ Technol, Auckland 1142, New Zealand.
C3 Auckland University of Technology
RP MacDonell, SG (corresponding author), Auckland Univ Technol, Private Bag 92006, Auckland 1142, New Zealand.
EM lauriemcleod@xtra.co.nz; stephen.macdonell@aut.ac.nz;
   bill.doolin@aut.ac.nz
RI MacDonell, Stephen G./AAI-1579-2019; Doolin, Bill/Y-4140-2018
OI MacDonell, Stephen G./0000-0002-2231-6941; 
FU Tertiary Education Commission of New Zealand; AlphaCo; SoftCo
FX This research was funded through a Top Achiever Doctoral Scholarship by
   the Tertiary Education Commission of New Zealand. We would like to
   acknowledge the support of AlphaCo and SoftCo.
CR Allison I, 2007, INFORM SOFTWARE TECH, V49, P668, DOI 10.1016/j.infsof.2007.02.003
   [Anonymous], 1988, In The Age Of The Smart Machine
   [Anonymous], 2007, Business research method
   [Anonymous], CHALL COMPL IT PROJ
   BENBASAT I, 1987, MIS QUART, V11, P369, DOI 10.2307/248684
   Boehm B.A., 2006, Proceedings of ICSE'06 Conference, P12, DOI DOI 10.1145/1134285.1134288
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   Cavaye ALM, 1996, INFORM SYST J, V6, P227, DOI 10.1111/j.1365-2575.1996.tb00015.x
   Charette RN, 2005, IEEE SPECTRUM, V42, P42, DOI 10.1109/MSPEC.2005.1502528
   Ciborra C., 1994, ACCOUNTING MANAGEMEN, V4, P61, DOI DOI 10.1016/0959-8022(94)90005-1
   Coleman G, 2007, INFORM SOFTWARE TECH, V49, P654, DOI 10.1016/j.infsof.2007.02.011
   Constantinides P., 2006, Information and Organization, V16, P27, DOI 10.1016/j.infoandorg.2005.07.001
   Darke P, 1998, INFORM SYST J, V8, P273, DOI 10.1046/j.1365-2575.1998.00040.x
   Dittrich Y, 2008, EMPIR SOFTW ENG, V13, P231, DOI 10.1007/s10664-007-9057-1
   Dittrich Y, 2007, INFORM SOFTWARE TECH, V49, P531, DOI 10.1016/j.infsof.2007.02.009
   Doolin B., 1996, Australian Journal of Information Systems, V3, P21
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   El Emam K, 2008, IEEE SOFTWARE, V25, P84, DOI 10.1109/MS.2008.107
   Flyvbjerg B, 2006, QUAL INQ, V12, P219, DOI 10.1177/1077800405284363
   Galliers R. D., 2000, Requirements Engineering, V5, P74, DOI 10.1007/s007660070011
   Gasson S, 1999, DATA BASE ADV INF SY, V30, P82, DOI 10.1145/383371.383377
   Geertz C., 2000, The Interpretation of Cultures
   Giddens A., 1984, CONSTITUTION SOC OUT
   Glaser B. G., 1967, DISCOVERY GROUNDED T, DOI 10.1515/9783111660211/html
   Glass RL, 2002, INFORM SOFTWARE TECH, V44, P491, DOI 10.1016/S0950-5849(02)00049-6
   GOLDENBIDDLE K, 1993, ORGAN SCI, V4, P595, DOI 10.1287/orsc.4.4.595
   GUBA EC, 1990, PARADIGM DIALOG, P17
   HARRISON R, 1999, EMPIR SOFTW ENG, V4, P405
   HOST M, 2007, P 1 INT S EMP SOFTW, P479
   Jorgensen M., 2002, EMPIR SOFTW ENG, V7, P9, DOI [DOI 10.1023/A:1014866909191, 10.1023/A:1014866909191]
   Klein HK, 1999, MIS QUART, V23, P67, DOI 10.2307/249410
   Langley A, 1999, ACAD MANAGE REV, V24, P691, DOI 10.2307/259349
   LANGLEY A, 1994, J MANAGE STUD, V31, P619, DOI 10.1111/j.1467-6486.1994.tb00632.x
   Lanzara GF, 1999, J STRATEGIC INF SYST, V8, P331, DOI 10.1016/S0963-8687(00)00031-7
   Latour B., 1987, SCI ACTION
   Leonard-Barton D, 1990, ORGAN SCI, V1, P248, DOI 10.1287/orsc.1.3.248
   Lethbridge TC, 2005, EMPIR SOFTW ENG, V10, P311, DOI 10.1007/s10664-005-1290-x
   Madsen S, 2006, EUR J INFORM SYST, V15, P225, DOI 10.1057/palgrave.ejis.3000593
   Markus ML, 1999, MIS QUART, V23, P35
   MARKUS ML, 1988, MANAGE SCI, V34, P583, DOI 10.1287/mnsc.34.5.583
   MCLEOD L, 2008, THESIS AUCKLAND U TE
   Miller J, 2008, EMPIR SOFTW ENG, V13, P223, DOI 10.1007/s10664-008-9063-y
   Mingers J, 2001, INFORM SYST RES, V12, P240, DOI 10.1287/isre.12.3.240.9709
   Myers M. D., 2007, Information and Organization, V17, P2, DOI 10.1016/j.infoandorg.2006.11.001
   Nandhakumar J, 1997, INFORM SYST J, V7, P109, DOI 10.1046/j.1365-2575.1997.00013.x
   Pentland BT, 1999, ACAD MANAGE REV, V24, P711
   Perry D. E., 2005, P 29 ANN IEEE NASA S, P96
   Perry DE, 2004, PROC INT CONF SOFTW, P736, DOI 10.1109/ICSE.2004.1317512
   Perry DE., 2000, P C FUT SOFTW ENG, P345, DOI DOI 10.1145/336512.336586
   Pettigrew A., 1997, Scandinavian Journal of Management, V13, P337, DOI DOI 10.1016/S0956-5221(97)00020-1
   Pettigrew AM, 1990, ORGAN SCI, V1, P267, DOI 10.1287/orsc.1.3.267
   Robinson H, 2007, INFORM SOFTWARE TECH, V49, P540, DOI 10.1016/j.infsof.2007.02.007
   Runeson P., 2009, PRODUCT FOCUSED SOFT, V32, P441, DOI 10.1007/978-3-642-02152-7_36
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Schultze U, 2004, INFORM SYST RES, V15, P87, DOI 10.1287/isre.1030.0016
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Sieber J. E., 2001, Empirical Software Engineering, V6, P329, DOI 10.1023/A:1011978700481
   SIM SE, 2001, EMPIR SOFTW ENG, V6, P85, DOI [DOI 10.1023/A:1009809824225, 10.1023/A:1009809824225]
   Singer J, 2002, IEEE T SOFTWARE ENG, V28, P1171, DOI 10.1109/TSE.2002.1158289
   Sjoberg DIK, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P358, DOI 10.1109/FOSE.2007.30
   Star S. L., 1989, DISTRIBUTED ARTIFICI, P37, DOI DOI 10.1016/B978-1-55860-092-8.50006-X
   Tolich M., 1999, Starting fieldwork: An introduction to qualitative research work
   Voss C, 2002, INT J OPER PROD MAN, V22, P195, DOI 10.1108/01443570210414329
   Wainer J., 2007, J BRAZILIAN COMPUTER, V13, P27
   Wallace L, 2004, COMMUN ACM, V47, P68, DOI 10.1145/975817.975819
   WALSHAM G, 1995, EUR J INFORM SYST, V4, P74, DOI 10.1057/ejis.1995.9
   Walsham G, 1999, MIS QUART, V23, P39, DOI 10.2307/249409
   Walsham G., 1993, INTERPRETING INFORM
   Walsham G, 2006, EUR J INFORM SYST, V15, P320, DOI 10.1057/palgrave.ejis.3000589
   WESTRUP C, 1993, J INFORM TECHNOL, V8, P267, DOI 10.1057/jit.1993.37
   Whittle A, 2005, HUM RELAT, V58, P1301, DOI 10.1177/0018726705059859
   Wynekoop JL, 1997, INFORM SYST J, V7, P47, DOI 10.1046/j.1365-2575.1997.00004.x
   Yin R.K., 2011, Qualitative research from start to finish
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 78
TC 17
Z9 33
U1 2
U2 22
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2011
VL 16
IS 4
SI SI
BP 430
EP 459
DI 10.1007/s10664-010-9153-5
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 778ZA
UT WOS:000291746700002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU de Almeida, EC
   Sunyè, G
   Le Traon, Y
   Valduriez, P
AF de Almeida, Eduardo Cunha
   Sunye, Gerson
   Le Traon, Yves
   Valduriez, Patrick
TI Testing peer-to-peer systems
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 19th International Symposium on Software Reliability Engineering
CY 2008
CL Microsoft Campus, Redmond, WA
HO Microsoft Campus
DE Software testing; Peer-to-peer systems; Distributed hash tables (DHT);
   Testing methodology; Experimental procedure
ID MODEL CHECKING; TEST SEQUENCES
C1 [de Almeida, Eduardo Cunha] Univ Fed Parana, BR-80060000 Curitiba, Parana, Brazil.
   [Sunye, Gerson] Univ Nantes, LINA, Nantes, France.
   [Le Traon, Yves] Univ Luxembourg, Luxembourg, Luxembourg.
   [Valduriez, Patrick] INRIA, F-34060 Montpellier, France.
   [Valduriez, Patrick] LIRMM, Montpellier, France.
C3 Universidade Federal do Parana; Nantes Universite; University of
   Luxembourg; Inria; Centre National de la Recherche Scientifique (CNRS);
   Universite Paul-Valery; Universite Perpignan Via Domitia; Universite de
   Montpellier
RP de Almeida, EC (corresponding author), Univ Fed Parana, BR-80060000 Curitiba, Parana, Brazil.
EM eduardo@inf.ufpr.br; gerson.sunye@univ-nantes.fr; yves.letraon@uni.lu;
   patrick.valduriez@inria.fr
RI Cunha de Almeida, Eduardo/AAD-8521-2022; LE TRAON, Yves/T-2911-2019; de
   Almeida, Eduardo/JJC-2493-2023
OI Cunha de Almeida, Eduardo/0000-0002-6644-956X; LE TRAON,
   Yves/0000-0002-1045-4861
CR Androutsellis-Theotokis S, 2004, ACM COMPUT SURV, V36, P335, DOI 10.1145/1041680.1041681
   [Anonymous], 1996, Pattern oriented software architecture: a system of patters
   [Anonymous], 2001, Pastry: Scalable, decentralized object location, and routing for large-scale peer-to-peer systems, DOI DOI 10.1007/3-540-45518-3_18
   [Anonymous], 1999, Testing Object-Oriented Systems: Models, Patterns, and Tools
   Baresi L, 2007, PROC INT CONF SOFTW, P69, DOI 10.1109/ICSECOMPANION.2007.31
   Carzaniga A., 2000, Proceeding of the Nineteenth Annual ACM Symposium on Principles of Distributed Computing, P219, DOI 10.1145/343477.343622
   CHEN K, 2006, SAC, P1791
   CHEN WH, 1995, IEEE ACM T NETWORK, V3, P152, DOI 10.1109/90.374116
   Cirne W., 2006, Journal of Grid Computing, V4, P225, DOI DOI 10.1007/S10723-006-9040-X
   da Silva DP, 2003, LECT NOTES COMPUT SC, V2790, P169
   de Vries R., 2000, INT J SOFTW TOOLS TE, V2, P382
   DRAGAN F, 2006, BDA C
   DUARTE A, 2006, ICSE 06, P779
   DUARTE AN, 2005, P 19 BRAZ S SOFTW EN
   Garlan D, 2003, LECT NOTES COMPUT SC, V2648, P166
   GERCHMAN J, 2005, AMBIENTE DISTRIBUIDO
   Hierons RM, 2001, INFORM SOFTWARE TECH, V43, P551, DOI 10.1016/S0950-5849(01)00169-0
   Hughes D, 2004, FOURTH INTERNATIONAL CONFERENCE ON PEER-TO-PEER COMPUTING, PROCEEDINGS, P262, DOI 10.1109/PTP.2004.1334956
   JARD C, 2001, PRINCIPLES DISTRIBUT
   JARD C, 2005, INT J SOFTW TOOLS TE
   Joubert C, 2006, LECT NOTES COMPUT SC, V3925, P126
   Kapfhammer G.M., 2001, P 18 INT C TEST COMP, V18
   Long B, 2001, DOA'01: 3RD INTERNATIONAL SYMPOSIUM ON DISTRIBUTED OBJECTS & APPLICATIONS, PROCEEDINGS, P20, DOI 10.1109/DOA.2001.954068
   MCWHIRTER B, 2004, SYSUNIT PROJECT
   Petrenko A, 2000, INT FED INFO PROC, V48, P261
   PICKIN S, 2002, 22 IFIP WG 6 1 INT C
   PICKIN S, 2001, UML2001 WKSHP PRACT, P208
   Ratnasamy S., 2001, A scalable content-addressable network
   ROSENBLUM DS, 1995, IEEE T SOFTWARE ENG, V21, P19, DOI 10.1109/32.341844
   Schieferdecker I., 1998, Intelligence in Services and Networks: Technology for Ubiquitous Telecom Services. 5th International Conference on Intelligence in Services and Networks, IS&N'98 Proceedings, P393, DOI 10.1007/BFb0056984
   Stoica I., 2001, Chord: A scalable peer-to-peer lookup service for internet applications
   Ulrich A, 1999, INT FED INFO PROC, V21, P93
   WALTER T, 1998, IFIP C P, V131, P149
   ZANOLIN L, 2003, SAVCBS 03
   ZHOU Z, 2006, CONS COMM NETW C CCN, V2, P1028
NR 35
TC 7
Z9 7
U1 0
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2010
VL 15
IS 4
BP 346
EP 379
DI 10.1007/s10664-009-9124-x
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 593EN
UT WOS:000277435500003
DA 2024-07-18
ER

PT J
AU Sârbu, C
   Johansson, A
   Suri, N
   Nagappan, N
AF Sarbu, Constantin
   Johansson, Andreas
   Suri, Neeraj
   Nagappan, Nachiappan
TI Profiling the operational behavior of OS device drivers
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 19th International Symposium on Software Reliability Engineering
CY 2008
CL Microsoft Campus, Redmond, WA
HO Microsoft Campus
DE Operating system; Device driver; Runtime behavior; Operational profile;
   Empirical studies
ID RELIABILITY
AB As the complexity of modern Operating Systems (OS) increases, testing key OS components such as device drivers (DD) becomes increasingly complex given the multitude of possible DD interactions. Currently, DD testing entails a broad spectrum of techniques, where static (requiring source code) and dynamic (requiring the executable image) and static-dynamic testing combinations are employed. Despite the sustained and improving test efforts in the field of driver development, DDs still represent a significant cause of system outages as the coverage is invariably limited by test resources and release time considerations. The basic factor is the inability to exhaustively assess and then cover the operational states, leading to releases of inadequately tested DDs. Consequently, if representative operational activity profiles of DDs within an OS could be obtained, these could significantly improve the understanding of the actual operational DD state space and help focus the test efforts. Focusing on characterizing DD operational activities while assuming no access to source code, this paper proposes a quantitative technique for profiling the runtime behavior of DDs using a set of occurrence and temporal metrics obtained via I/O traffic characterization. Such profiles are used to improve test adequacy against real-world workloads by enabling similarity quantification across them. The profiles also reveal execution hotspots in terms of DD functionalities activated in the field, thus allowing for dedicated test campaigns. A case study on actual Windows XP and Vista drivers using various performance and stability benchmarks as workloads substantiates our proposed approach.
C1 [Sarbu, Constantin; Suri, Neeraj] Tech Univ Darmstadt, Darmstadt, Germany.
   [Johansson, Andreas] Volvo Technol Corp, Gothenburg, Sweden.
   [Nagappan, Nachiappan] Microsoft Res, Redmond, WA USA.
C3 Technical University of Darmstadt; Volvo; Microsoft
RP Sârbu, C (corresponding author), Tech Univ Darmstadt, Petersenstr 30, Darmstadt, Germany.
EM cs@cs.tu-darmstadt.de; andreas.olof.johansson@volvo.com;
   suri@cs.tu-darmstadt.de; nachin@microsoft.com
OI Suri, Neeraj/0000-0003-1688-1167
CR Albinet A, 2004, 2004 INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P867
   [Anonymous], WINDOWS XP EMBEDDED
   [Anonymous], 2007, DEV DRIVERS WINDOWS
   Arlat J, 2002, IEEE T COMPUT, V51, P138, DOI 10.1109/12.980005
   AVRITZER A, 1995, IEEE T SOFTWARE ENG, V21, P705, DOI 10.1109/32.464549
   Avritzer A, 1996, IEEE SOFTWARE, V13, P76, DOI 10.1109/52.536461
   AVRITZER A, 1993, INT S SOFTW TEST AN, P82, DOI DOI 10.1145/154183.154244
   Ball T, 2004, LECT NOTES COMPUT SC, V2999, P1
   Ball T., 2006, Operating Systems Review, V40, P73, DOI 10.1145/1218063.1217943
   Boehm BW., 1981, Software Engineering Economics
   CHOU A, 2001, ACM S OPERATING SYST, V1, P73
   Duraes J, 2003, IEICE T INF SYST, VE86D, P2563
   GANAPATHI A, 2006, LARG INST SYST ADM C, P12
   Johansson A, 2005, I C DEPEND SYS NETWO, P86, DOI 10.1109/DSN.2005.45
   Leon D, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P442, DOI 10.1109/ISSRE.2003.1251065
   McMaster S, 2005, PROC IEEE INT CONF S, P539
   Mendonça M, 2007, I C DEPEND SYS NETWO, P554, DOI 10.1109/DSN.2007.85
   Menzies T, 2002, 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P15, DOI 10.1109/ISSRE.2002.1173208
   *MICR, 2006, WIND ROADM DRIV
   *MICR CORP, 2009, DRIV VER
   MOLLER KH, 1993, 1ST P IEEE INT SOFTW, P82, DOI DOI 10.1109/METRIC.1993.263798
   MUSA JD, 1984, ICSE 84, P230
   Musa JohnD., 2004, Software Reliability Engineering: More Reliable Software Faster and Cheaper, V2nd
   Nagappan N, 2005, 16TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P85, DOI 10.1109/ISSRE.2005.35
   ONEY W, 2003, PROGRAMMING MS WINDO
   ORGOVAN V, 2008, 19 INT S SOFTW REL E
   *RAT INC, 2009, PUR
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   RUSSINOVICH M, 2008, DEBUGVIEW
   Sârbu C, 2008, LECT NOTES COMPUT SC, V5017, P90
   Sârbu C, 2006, LECT NOTES COMPUT SC, V4328, P120
   Simionato Michele., 2004, An introduction to graphviz and dot
   Swift MM, 2005, ACM T COMPUT SYST, V23, P77, DOI 10.1145/1047915.1047919
   SWIFT MM, 2002, WORKSHOP ACM SIGOPS, P102
   WEYUKER EJ, 1991, IEEE T SOFTWARE ENG, V17, P703, DOI 10.1109/32.83906
   Weyuker EJ, 1998, IEEE SOFTWARE, V15, P54, DOI 10.1109/52.714817
   WEYUKER EJ, 2003, AC S APPL COMP, P1118, DOI DOI 10.1145/952532.952750
   Wheeler D.A., 2001, More than a gigabuck: Estimating GNU/Linux's size
   ZHOU F, 2006, S OP SYST DES IMPL O, P45
NR 39
TC 4
Z9 4
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2010
VL 15
IS 4
BP 380
EP 422
DI 10.1007/s10664-009-9122-z
PG 43
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 593EN
UT WOS:000277435500004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Koru, AG
   El Emam, K
   Zhang, DS
   Liu, HF
   Mathew, D
AF Koru, A. Guenes
   El Emam, Khaled
   Zhang, Dongsong
   Liu, Hongfang
   Mathew, Divya
TI Theory of relative defect proneness
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 3rd International Workshop on Predictor Models in Software Engineering
   (PROMISE 2007)
CY MAY, 2007
CL Minneapolis, MN
DE software metrics; software science; size-defect relationship; planning
   for software quality assurance; open-source software; software
   inspections; software reviews; software testing
ID SOFTWARE; FAULTS; MODELS; NUMBER; SIZE; PREDICTION; COMPLEXITY; DENSITY
AB In this study, we investigated the functional form of the size-defect relationship for software modules through replicated studies conducted on ten open-source products. We consistently observed a power-law relationship where defect proneness increases at a slower rate compared to size. Therefore, smaller modules are proportionally more defect prone. We externally validated the application of our results for two commercial systems. Given limited and fixed resources for code inspections, there would be an impressive improvement in the cost-effectiveness, as much as 341% in one of the systems, if a smallest-first strategy were preferred over a largest-first one. The consistent results obtained in this study led us to state a theory of relative defect proneness (RDP): In large-scale software systems, smaller modules will be proportionally more defect-prone compared to larger ones. We suggest that practitioners consider our results and give higher priority to smaller modules in their focused quality assurance efforts.
C1 [Koru, A. Guenes; Zhang, Dongsong; Mathew, Divya] UMBC, Dept Informat Syst, Baltimore, MD 21250 USA.
   [El Emam, Khaled] Childrens Hosp Eastern Ontario, CHEO Res Inst, E Hlth Informat Lab, Ottawa, ON K1H 8L1, Canada.
   [El Emam, Khaled] Univ Ottawa, Fac Med, Ottawa, ON, Canada.
   [El Emam, Khaled] Univ Ottawa, Sch Informat Technol, Ottawa, ON, Canada.
   [Liu, Hongfang] Georgetown Univ, Dept Biostat Bioinformat & Biomath, Sch Med, Washington, DC 20057 USA.
C3 University System of Maryland; University of Maryland Baltimore County;
   University of Ottawa; Children's Hospital of Eastern Ontario; University
   of Ottawa; University of Ottawa; Georgetown University
RP Koru, AG (corresponding author), UMBC, Dept Informat Syst, 1000 Hilltop Circle, Baltimore, MD 21250 USA.
EM gkoru@umbc.edu; kelemam@uottawa.ca; zhangd@umbc.edu;
   hl224@georgetown.edu; dmathew2@umbc.edu
RI Koru, Gunes/AAR-5819-2020; Liu, Hongfang/ISU-9369-2023
OI Liu, Hongfang/0000-0002-4352-2533
CR AKIYAMA F, 1971, INFORMATION PROCESSI, V71, P353
   Andersen PK., 1993, STAT MODELS BASED CO
   [Anonymous], ROI SOFTWARE QUALITY
   [Anonymous], 2003, R: A Language and Environment for Statistical Computing
   ASKARI M, 2006, WORKSH MIN SOFT REP
   BASILI VR, 1984, COMMUN ACM, V27, P42, DOI 10.1145/69605.2085
   Briand LC, 2002, IEEE T SOFTWARE ENG, V28, P706, DOI 10.1109/TSE.2002.1019484
   Briand LC, 2001, IEEE T SOFTWARE ENG, V27, P513, DOI 10.1109/32.926174
   BRIAND LC, 1993, IEEE T SOFTWARE ENG, V19, P1028, DOI 10.1109/32.256851
   Chayes Felix., 1971, Ratio correlation; a manual for students of petrology and geochemistry
   COMPTON BT, 1990, J SYST SOFTWARE, V12, P199, DOI 10.1016/0164-1212(90)90040-S
   COX DR, 1972, J R STAT SOC B, V34, P187
   El Emam K, 2002, IEEE T SOFTWARE ENG, V28, P494, DOI 10.1109/TSE.2002.1000452
   Emam KE, 2001, IEEE T SOFTWARE ENG, V27, P630, DOI 10.1109/32.935855
   Fenton N., 1996, SOFTWARE METRICS RIG, VSecond
   Fenton NE, 2000, IEEE T SOFTWARE ENG, V26, P797, DOI 10.1109/32.879815
   Fenton NE, 1999, IEEE T SOFTWARE ENG, V25, P675, DOI 10.1109/32.815326
   FUNAMI Y, 1976, P MRI 24 INT S COMP, P133
   GAFFNEY JE, 1984, IEEE T SOFTWARE ENG, V10, P459, DOI 10.1109/TSE.1984.5010260
   Halstead M. H., 1977, ELEMENTS SOFTWARE SC
   Harrell F.E., 2001, Regression modeling strategies: with applications to linear models, logistic regression, and survival analysis
   Harries-Rees K, 2005, CHEM WORLD-UK, V2, P12
   Harvey A.C., 1977, Journal of Econometrics, V6, P103, DOI DOI 10.1016/0304-4076(77)90057-4
   Hatton L, 1998, IEEE SOFTWARE, V15, P46, DOI 10.1109/52.676735
   Hatton L, 1997, IEEE SOFTWARE, V14, P89, DOI 10.1109/52.582978
   Hosmer D., 1999, APPL SURVIVAL ANAL R
   Khoshgoftaar TM, 1997, IEEE T NEURAL NETWOR, V8, P902, DOI 10.1109/72.595888
   Koru AG, 2004, IEEE SOFTWARE, V21, P54, DOI 10.1109/MS.2004.12
   Koru AG, 2003, J SYST SOFTWARE, V67, P153, DOI 10.1016/S0164-1212(02)00126-7
   KORU AG, 2003, WCRE 2003
   KORU AG, 2007, PREDICTOR MODELS SOF
   LIPOW M, 1982, IEEE T SOFTWARE ENG, V8, P437, DOI 10.1109/TSE.1982.235579
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   MEINE JPV, 2007, 18 IEEE INT S SOFTW, P203
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   MUNSON JC, 1992, IEEE T SOFTWARE ENG, V18, P423, DOI 10.1109/32.135775
   Newman MEJ, 2005, CONTEMP PHYS, V46, P323, DOI 10.1080/00107510500052444
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   *PROM, 2007, PROM DAT REP
   Raymond E., 1999, CATHEDRAL BAZAAR MUS
   Rosenberg J, 1997, FOURTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P137, DOI 10.1109/METRIC.1997.637174
   SCHMIDT DC, 1995, COMMUN ACM, V38, P65, DOI 10.1145/226239.226255
   *SCI TOOLW I, 2003, UND C US GUID REF MA
   SHEN VY, 1985, IEEE T SOFTWARE ENG, V11, P317, DOI 10.1109/TSE.1985.232222
   THERNEAU TM, 1999, SURV SURV AN PACK IN
   Therneau TM, 2000, STAT BIOL HEALTH
   Tian J, 1998, J SYST SOFTWARE, V44, P135, DOI 10.1016/S0164-1212(98)10050-X
   TROSTER J, 1995, DEFECT CHARACTERISTI
   WITHROW C, 1990, IEEE SOFTWARE, V7, P26, DOI 10.1109/52.43046
NR 49
TC 52
Z9 63
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2008
VL 13
IS 5
BP 473
EP 498
DI 10.1007/s10664-008-9080-x
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 350QU
UT WOS:000259369000002
DA 2024-07-18
ER

PT J
AU Hennessy, M
   Power, JF
AF Hennessy, Mark
   Power, James F.
TI Analysing the effectiveness of rule-coverage as a reduction criterion
   for test suites of grammar-based software
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE software testing; grammar-based software; test suite reduction; rule
   coverage; mutation testing
AB The term grammar-based software describes software whose input can be specified by a context-free grammar. This grammar may occur explicitly in the software, in the form of an input specification to a parser generator, or implicitly, in the form of a hand-written parser. Grammar-based software includes not only programming language compilers, but also tools for program analysis, reverse engineering, software metrics and documentation generation. Hence, ensuring their completeness and correctness is a vital prerequisite for their use. In this paper we propose a strategy for the construction of test suites for grammar based software, and illustrate this strategy using the ISO C++ stop grammar. We use the concept of grammar-rule coverage as a pivot for the reduction of an implementation-based test suite, and demonstrate a significant decrease in the size of this suite. The effectiveness of this reduced test suite is compared to the original test suite with respect to code coverage and more importantly, fault detection. This work greatly expands upon previous work in this area and utilises large scale mutation testing to compare the effectiveness of grammar-rule coverage to that of statement coverage as a reduction criterion for test suites of grammar-based software. This work finds that when grammar rule coverage is used as the sole criterion for reducing test suites of grammar based software, the fault detection capability of that reduced test suite is greatly diminished when compared to other coverage criteria such as statement coverage.
C1 [Hennessy, Mark; Power, James F.] Natl Univ Ireland, Dept Comp Sci, Maynooth, Kildare, Ireland.
C3 Maynooth University
RP Hennessy, M (corresponding author), Natl Univ Ireland, Dept Comp Sci, Maynooth, Kildare, Ireland.
EM markh@cs.nuim.ie; jpower@cs.nuim.ie
OI Power, James/0000-0002-6770-3910
FU Irish Research Council for Science, Engineering and Technology
FX This work has been funded under the Embark scheme administered by the
   Irish Research Council for Science, Engineering and Technology.
CR ACOSTACHIOAIE D, 2000, CIRCLES ELECT MAGAZI
   Andrews JH, 2006, IEEE T SOFTWARE ENG, V32, P608, DOI 10.1109/TSE.2006.83
   BAZZICHI F, 1982, IEEE T SOFTWARE ENG, V8, P343, DOI 10.1109/TSE.1982.235428
   CELENTANO A, 1980, SOFTWARE PRACT EXPER, V10, P897, DOI 10.1002/spe.4380101104
   Garey M.R., 1979, COMPUTERS INTRACTABI
   Harm J., 2000, Informatica, V24, P355
   Harrold M. J., 1993, ACM Transactions on Software Engineering and Methodology, V2, P270, DOI 10.1145/152388.152391
   Heimdahl MPE, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P176, DOI 10.1109/ASE.2004.1342735
   HENNESSY M, 2003, 11 INT WORKSH PROGR
   HENNESSY M, 2005, 20 IEEE INT C AUT SO, P104
   HENNESSY M, 2005, NUIMCSTR200502 DEP C
   *ISO IEC JTC 1, 1998, 148821998E ISO IEC J
   *ISO IEC JTC 1, 2003, 148822003E ISO IEC J
   Jones JA, 2003, IEEE T SOFTWARE ENG, V29, P195, DOI 10.1109/TSE.2003.1183927
   Klint P, 2005, ACM T SOFTW ENG METH, V14, P331, DOI 10.1145/1072997.1073000
   Koppler R, 1997, SOFTWARE PRACT EXPER, V27, P637, DOI 10.1002/(SICI)1097-024X(199706)27:6<637::AID-SPE99>3.0.CO;2-3
   LAMMEL R, 2001, LECT NOTES COMPUTER, V2029, P201
   Ma YS, 2005, SOFTW TEST VERIF REL, V15, P97, DOI 10.1002/stvr.308
   Malloy BA, 2003, DR DOBBS J, V28, P54
   Malloy BA, 2003, SOFTWARE PRACT EXPER, V33, P19, DOI 10.1002/spe.493
   Malloy BA, 2002, DR DOBBS J, V27, P71
   MALLOY BA, 2001, 1 ANN INT C COMP INF
   Offutt A. J., 1996, ACM Transactions on Software Engineering and Methodology, V5, P99, DOI 10.1145/227607.227610
   Offutt J, 2001, 12TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P84, DOI 10.1109/ISSRE.2001.989461
   *PER, 2007, PER TEST SUIT ISO C
   *PLUM HALL, 2008, PLUM HALL TEST SUIT
   Power JE, 2004, J SOFTW MAINT EVOL-R, V16, P405, DOI 10.1002/smr.293
   Power JF, 2002, NINTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P190, DOI 10.1109/WCRE.2002.1173077
   Purdom P., 1972, BIT (Nordisk Tidskrift for Informationsbehandling), V12, P366, DOI 10.1007/BF01932308
   Roper M., 1994, SOFTWARE TESTING
   Rothermel G, 1998, PROC IEEE INT CONF S, P34, DOI 10.1109/ICSM.1998.738487
   Sim SE, 2002, PROG COMPREHEN, P114, DOI 10.1109/WPC.2002.1021331
   SPINCZYK O, 2002, 40 INT C TECHN OO LA, P53
   Wong WE, 1998, SOFTWARE PRACT EXPER, V28, P347, DOI 10.1002/(SICI)1097-024X(19980410)28:4<347::AID-SPE145>3.0.CO;2-L
NR 34
TC 4
Z9 5
U1 0
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2008
VL 13
IS 4
BP 343
EP 368
DI 10.1007/s10664-008-9067-7
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 343FK
UT WOS:000258838200001
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Li, J
   Bjornson, FO
   Conradi, R
   Kampenes, VB
AF Li, Jingyue
   Bjornson, Finn Olav
   Conradi, Reidar
   Kampenes, Vigdis B.
TI An empirical study of variations in COTS-based software development
   processes in the Norwegian IT industry
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 20th IEEE International Conference on Software Maintenance (ICSM 2004)
CY SEP 11-14, 2004
CL Chicago, IL
SP IEEE Comp Soc
DE software process improvement; COTS-based development; component-based
   development
ID DECISION
AB More and more software projects use Commercial-Off-The-Shelf (COTS) components. Although previous studies have proposed specific COTS-based development processes, there are few empirical studies that investigate how to use and customize COTS-based development processes for different project contexts. This paper describes an exploratory study of state-of-the-practice of COTS-based development processes. Sixteen software projects in the Norwegian IT companies have been studied by structured interviews. The results are that COTS-specific activities can be successfully incorporated in most traditional development processes (such as waterfall or prototyping), given proper guidelines to reduce risks and provide specific assistance. We have identified four COTS-specific activities-the build vs. buy decision, COTS component selection, learning and understanding COTS components, and COTS component integration - and one new role, that of a knowledge keeper. We have also found a special COTS component selection activity for unfamiliar components, combining Internet searches with hands-on trials. The process guidelines are expressed as scenarios, problems encountered, and examples of good practice. They can be used to customize the actual development processes, such as in which lifecycle phase to put the new activities into. Such customization crucially depends on the project context, such as previous familiarity with possible COTS components and flexibility of requirements.
C1 Norwegian Univ Sci & Technol, Dept Comp & Informat Sci, NO-7491 Trondheim, Norway.
   Simula Res Lab, NO-1325 Lysaker, Norway.
C3 Norwegian University of Science & Technology (NTNU)
RP Li, J (corresponding author), Norwegian Univ Sci & Technol, Dept Comp & Informat Sci, NO-7491 Trondheim, Norway.
EM jingyue@idi.ntnu.no; bjornson@idi.ntnu.no; conradi@idi.ntnu.no;
   vigdis@simula.no
CR ABTS C, 2000, P 11 EUR SOFTW CONTR, P325
   Albert C., 2002, EVOLUTIONARY PROCESS
   Alves C, 2003, INT J SOFTW ENG KNOW, V13, P473, DOI 10.1142/S0218194003001408
   [Anonymous], REAL WORLD RES RESOU
   Basili VR, 2001, COMPUTER, V34, P91, DOI 10.1109/2.920618
   Boehm B, 1999, COMPUTER, V32, P135, DOI 10.1109/2.738311
   Boehm B, 2000, COMPUTER, V33, P99, DOI 10.1109/2.869384
   Boehm BW, 2003, LECT NOTES COMPUT SC, V2580, P36
   Brownsword L, 2000, IEEE SOFTWARE, V17, P48, DOI 10.1109/52.854068
   Carney D, 2000, IEEE SOFTWARE, V17, P83, DOI 10.1109/52.841700
   Chung DH, 2002, KOREA-AUST RHEOL J, V14, P175
   Crnkovic I, 2002, COMMUN ACM, V45, P35, DOI 10.1145/570907.570928
   *FED AV ADM SOFTW, 2003, FAA GUID FAA COTS RI
   Fowler F., 2001, Survey Research Methods (Applied Social Research Methods)
   Fox G, 1997, FIFTH INTERNATIONAL SYMPOSIUM ON ASSESSMENT OF SOFTWARE TOOLS AND TECHNOLOGIES, PROCEEDINGS, P133, DOI 10.1109/AST.1997.599923
   KONTIO J, 1996, P ICSE, V18, P201
   Kotonya G, 2001, EUROMICRO CONF PROC, P12, DOI 10.1109/EURMIC.2001.952433
   Lawlis PK, 2001, COMPUTER, V34, P58, DOI 10.1109/2.920613
   Leung KRPH, 2002, INFORM SOFTWARE TECH, V44, P703, DOI 10.1016/S0950-5849(02)00118-0
   MACCRIMMON KR, 1973, P MULT CRIT DEC MAK, P18
   Maiden NA, 1998, IEEE SOFTWARE, V15, P46, DOI 10.1109/52.663784
   MAIDEN NAM, 2002, LNCS, V2255, P151
   Morisio M., 1997, IEE Proceedings-Software Engineering, V144, P162, DOI 10.1049/ip-sen:19971350
   MORISIO M, 2000, P 22 INT C SOFTW ENG, P31
   Morris E, 2003, LECT NOTES COMPUT SC, V2580, P168
   NCUBE C, 2002, LNCS, V2255, P176
   OCHS M, 2001, P 7 INT SOFTW METR S, P285
   Rose LC, 2003, LECT NOTES COMPUT SC, V2693, P352
   SAATY TL, 1990, EUR J OPER RES, V48, P9, DOI 10.1016/0377-2217(90)90057-I
   *SEI, 2004, COTS BAS IN DESCR
   Strauss E, 1998, CLIN ORTHOP RELAT R, P2
   Torchiano M, 2004, IEEE SOFTWARE, V21, P88, DOI 10.1109/MS.2004.1270770
   Tran V, 1997, EIGHTH IEEE INTERNATIONAL WORKSHOP ON SOFTWARE TECHNOLOGY AND ENGINEERING PRACTICE INCORPORATING COMPUTER AIDED SOFTWARE ENGINEERING, PROCEEDINGS, P452, DOI 10.1109/STEP.1997.615535
   Voas J, 1998, IEEE SOFTWARE, V15, P16, DOI 10.1109/52.663777
   Voas JM, 1998, COMPUTER, V31, P44, DOI 10.1109/MC.1998.683006
   2002, SPIKE PROJECT
   2000, INCO PROJECT
   2003, FAMILIES PROJECT
NR 38
TC 17
Z9 19
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2006
VL 11
IS 3
BP 433
EP 461
DI 10.1007/s10664-006-9005-5
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 063MB
UT WOS:000239021200005
DA 2024-07-18
ER

PT J
AU Sfetsos, P
   Angelis, L
   Stamelos, I
AF Sfetsos, P
   Angelis, L
   Stamelos, I
TI Investigating the extreme programming system - An empirical study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE agile methods; extreme programming system; cause-effect model; feedback
   model; developer perception; manager perception; empirical study;
   stepwise discriminant analysis; planning game; pair programming;
   test-driven development; refactoring; simple design; common code
   ownership; continuous integration; on-site customer; short release
   cycles; 40-hour-week; coding standards; metaphor
AB In this paper we discuss our empirical study about the advantages and difficulties 15 Greek software companies experienced applying Extreme Programming (XP) as a holistic system in software development. Based on a generic XP system including feedback influences and using a cause-effect model including social-technical affecting factors, as our research tool, the study statistically evaluates the application of XP practices in the software companies being studied. Data were collected from 30 managers and developers, using the sample survey technique with questionnaires and interviews, in a time period of six months. Practices were analysed individually, using Descriptive Statistics (DS), and as a whole by building up different models using stepwise Discriminant Analysis (DA). The results have shown that companies, facing various problems with common code ownership, on-site customer, 40-hour week and metaphor, prefer to develop their own tailored XP method and way of working-practices that met their requirements. Pair programming and test-driven development were found to be the most significant success factors. Interactions and hidden dependencies for the majority of the practices as well as communication and synergy between skilled personnel were found to be other significant success factors. The contribution of this preliminary research work is to provide some evidence that may assist companies in evaluating whether the XP system as a holistic framework would suit their current situation.
C1 Aristotle Univ Thessaloniki, Dept Informat, Thessaloniki 54124, Greece.
   Inst Educ Technol, Dept Informat Technol, Thessaloniki 54101, Greece.
C3 Aristotle University of Thessaloniki
RP Aristotle Univ Thessaloniki, Dept Informat, Thessaloniki 54124, Greece.
EM stamelos@csd.auth.gr
RI Stamelos, Ioannis/AAK-7207-2020
CR [Anonymous], 1990, QUALITATIVE EVALUATI, DOI DOI 10.1002/NUR.4770140111
   [Anonymous], 1997, Requirements engineering: a good practice guide
   AVELING B, 2004, 5 INT C EXTR PROGR A
   BASILI VR, 1986, IEEE T SOFTWARE ENG, V12, P733, DOI 10.1109/TSE.1986.6312975
   Beck K, 1999, COMPUTER, V32, P70, DOI 10.1109/2.796139
   Beck K., 2000, EXTREME PROGRAMMING
   BROOKS FP, 1987, COMPUTER, V20, P10, DOI 10.1109/MC.1987.1663532
   BUTLER S, 2001, P 2 INT C EXTR PROGR
   Cockburn A., 2001, Agile Software Development Series
   COOCKBURN A, 2000, COSTS BENEFTIS PAIR
   ELEMAM K, 1999, SUCCESS FACTORS BARR
   ELEMAM K, 2003, AGILE PROJECT MANAGE, V4
   ERDOGMUS H, 2004, 47454 NRC
   ERDOGMUS H, 2003, ENG ECON, V48, P33
   ERDOGMUS H, 2005, P IEEE T SOFTWARE EN, V31
   FOWLER M, 2001, NEW METHODOLOGY
   GEORGE B, 2003, ACM S APPL COMP MELB
   GERAS A, 2004, P 10 INT S SOFTW MET
   GITTINS R, 2001, P 2 INT C EXTR BIBL
   Glaser B. G., 1967, DISCOV GROUNDED THEO
   HIRSCHHEIM R, 1995, INFORMATION SYSTEMS
   HULKKO H, 2005, ICSE 05 US
   JEFFRIES R, 2001, XP SERIES
   Kauffman D., 1980, Systems 1: An introduction to systems thinking
   Krzanowski W.J., 1993, Principles of multivarite analysis, a user's perspective
   Layman L, 2004, PROCEEDINGS OF THE AGILE DEVELOPMENT CONFERENCE, P32
   LAYMAN L, 2004, MOTIVATIONS MEASUREM
   LEHMAN M, 1996, CSR 11 ANN WORKSH SO, V38, P681
   Lincoln Y. S., 1985, NATURALISTIC INQUIRY
   LINDVALL M, 2004, COMPUTER IEEE
   Maurer F, 2002, IEEE INTERNET COMPUT, V6, P86, DOI 10.1109/4236.989006
   MELNIK G, 2005, ICSE 05 US
   MULLER M, 2002, INT WORKSH EC DRIV S
   MULLER M, 2003, EUR SOFTW ENG C ESEC
   MULLER MM, 2002, C EMP ASS SOFTW ENG
   Nosek JT, 1998, COMMUN ACM, V41, P105, DOI 10.1145/272287.272333
   PADBERG F, 2003, INT S SOFTW METR MET
   Paulk MC, 2001, IEEE SOFTWARE, V18, P19, DOI 10.1109/52.965798
   REIFER DJ, 2002, 2 XP 1 AG U C CHIC I, P185
   RUMPE B, 2002, P 3 INT C EXTR PROGR
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Senge P., 1990, The fifth discipline: the art and practice of the learning organization
   Strauss A.L., 1990, BASICS QUALITATIVE R
   Taylor SJ., 1984, INTRO QUALITATIVE RE
   WERNICK P, 1996, THESIS U COLL LONDON
   Williams L, 2000, IEEE SOFTWARE, V17, P19, DOI 10.1109/52.854064
   Williams L, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P143, DOI 10.1109/ISESE.2003.1237973
   WILLIAMS L, 2003, P 14 INT S SOFTW REL
   WILLIAMS L, 2002, INT WORKSH EC DRIV S
   WILLIAMS L, 2004, EMPIRICAL ASSESSMENT, P11
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
NR 51
TC 17
Z9 19
U1 1
U2 19
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2006
VL 11
IS 2
BP 269
EP 301
DI 10.1007/s10664-006-6404-6
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 020RV
UT WOS:000235928900004
DA 2024-07-18
ER

PT J
AU Daoudi, N
   Allix, K
   Bissyande, TF
   Klein, J
AF Daoudi, Nadia
   Allix, Kevin
   Bissyande, Tegawende F.
   Klein, Jacques
TI Assessing the opportunity of combining state-of-the-art Android malware
   detectors
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Android; Malware; Machine learning; Ensemble learning
AB Research on Android malware detection based on Machine learning has been prolific in recent years. In this paper, we show, through a large-scale evaluation of four state-of-the-art approaches that their achieved performance fluctuates when applied to different datasets. Combining existing approaches appears as an appealing method to stabilise performance. We therefore proceed to empirically investigate the effect of such combinations on the overall detection performance. In our study, we evaluated 22 methods to combine feature sets or predictions from the state-of-the-art approaches. Our results showed that no method has significantly enhanced the detection performance reported by the state-of-the-art malware detectors. Nevertheless, the performance achieved is on par with the best individual classifiers for all settings. Overall, we conduct extensive experiments on the opportunity to combine state-of-the-art detectors. Our main conclusion is that combining state-of-theart malware detectors leads to a stabilisation of the detection performance, and a research agenda on how they should be combined effectively is required to boost malware detection. All artefacts of our large-scale study (i.e., the dataset of similar to 0.5 million apks and all extracted features) are made available for replicability.
C1 [Daoudi, Nadia; Bissyande, Tegawende F.; Klein, Jacques] Univ Luxembourg, SnT, 29, Ave JF Kennedy, L-1359 Luxembourg, Luxembourg.
   [Allix, Kevin] CentraleSupelec, Ave Boulaie,CS 47601, F-35576 Cesson Sevigne, France.
C3 University of Luxembourg; Universite Paris Saclay
RP Daoudi, N (corresponding author), Univ Luxembourg, SnT, 29, Ave JF Kennedy, L-1359 Luxembourg, Luxembourg.
EM nadia.daoudi@uni.lu
OI Daoudi, Nadia/0000-0002-1437-667X
FU Fonds National de la Recherche (FNR), Luxembourg [C17/IS/11693861];
   University of Luxembourg; SPARTA project - European Union [830892];
   European Union; Luxembourg Ministry of Foreign and European Affairs
   through their Digital4Development (D4D) portfolio under project LuxWAyS
FX This work was partially supported (a) by the Fonds National de la
   Recherche (FNR), Luxembourg, under project CHARACTERIZE C17/IS/11693861,
   (b) by the University of Luxembourg under the HitDroid grant, (c) by the
   SPARTA project, which has received funding from the European Union's
   Horizon 2020 research and innovation program under grant agreement No
   830892, and (d) by the Luxembourg Ministry of Foreign and European
   Affairs through their Digital4Development (D4D) portfolio under project
   LuxWAyS.
CR Afonso VM, 2015, J COMPUT VIROL HACKI, V11, P9, DOI 10.1007/s11416-014-0226-7
   Alam M.S., 2013, Proceedings of the Green Computing and Communications, IEEE Internet of Things, IEEE Cyber, Physical and Social Computing, P663
   Allix K, 2015, Engineering Secure Software and Systems, P51, DOI [10.1007/978-3-319-15618-7_5, DOI 10.1007/978-3-319-15618-7_5]
   Allix K, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P468, DOI [10.1145/2901739.2903508, 10.1109/MSR.2016.056]
   Allix K, 2016, EMPIR SOFTW ENG, V21, P183, DOI 10.1007/s10664-014-9352-6
   Appice A, 2020, J INTELL INF SYST, V55, P1, DOI 10.1007/s10844-020-00598-6
   Arp D, 2021, Arxiv, DOI arXiv:2010.09470
   Arp D, 2014, 21ST ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2014), DOI 10.14722/ndss.2014.23247
   Breiman L, 1996, MACH LEARN, V24, P123, DOI 10.1007/bf00058655
   Breiman L., 2001, MACH LEARN, V45, P5, DOI [DOI 10.1023/A:1010933404324, 10.1023/A:1010933404324]
   Brown G., 2010, ENCY MACHINE LEARNIN
   Caruana Rich, 2004, P 21 INT C MACH LEAR, DOI [10.1145/1015330.1015432, DOI 10.1145/1015330.1015432]
   Christiana Abikoye Oluwakemi, 2020, International Journal of Interactive Mobile Technologies, V14, P61, DOI 10.3991/ijim.v14i09.11548
   Chunhui Zhao, 2019, Security and Privacy in New Computing Environments. Second EAI International Conference, SPNCE 2019. Proceedings. Lecture Notes of the Institute for Computer Sciences, Social Informatics and Telecommunications Engineering (LNICST 284), P105, DOI 10.1007/978-3-030-21373-2_10
   Daoudi N., 2021, ACM T PRIV SECUR
   Daoudi N, 2021, COMM COM INF SC, V1482, P81, DOI 10.1007/978-3-030-87839-9_4
   Daoudi N, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09955-7
   DATA G, 2020, G DATA MOB MALW REP
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   Dhalaria Meghna, 2020, 2020 Sixth International Conference on Parallel, Distributed and Grid Computing (PDGC), P36, DOI 10.1109/PDGC50313.2020.9315818
   Ding YX, 2020, J AMB INTEL HUM COMP, DOI 10.1007/s12652-020-02196-4
   Dong XB, 2020, FRONT COMPUT SCI-CHI, V14, P241, DOI 10.1007/s11704-019-8208-z
   Fereidooni H, 2016, 2016 8TH IFIP INTERNATIONAL CONFERENCE ON NEW TECHNOLOGIES, MOBILITY AND SECURITY (NTMS)
   Freund Y, 1997, J COMPUT SYST SCI, V55, P119, DOI 10.1006/jcss.1997.1504
   Friedman JH, 2001, ANN STAT, V29, P1189, DOI 10.1214/aos/1013203451
   Friedman M, 1937, J AM STAT ASSOC, V32, P675, DOI 10.2307/2279372
   Garcia J, 2018, ACM T SOFTW ENG METH, V26, DOI 10.1145/3162625
   Hsien-De Huang T, 2018, IEEE INT CONF BIG DA, P2633, DOI 10.1109/BigData.2018.8622324
   Hurier Mederic, 2016, Detection of Intrusions and Malware, and Vulnerability Assessment. 13th International Conference, DIMVA 2016. Proceedings: LNCS 9721, P142, DOI 10.1007/978-3-319-40667-1_8
   Idrees F, 2017, COMPUT SECUR, V68, P36, DOI 10.1016/j.cose.2017.03.011
   Kaspersky, 2021, KASP SEC NETW
   Mariconti E, 2017, 24TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2017), DOI 10.14722/ndss.2017.23353
   Miller Brad, 2016, Detection of Intrusions and Malware, and Vulnerability Assessment. 13th International Conference, DIMVA 2016. Proceedings: LNCS 9721, P122, DOI 10.1007/978-3-319-40667-1_7
   Milosevic N, 2017, COMPUT ELECTR ENG, V61, P266, DOI 10.1016/j.compeleceng.2017.02.013
   NEMENYI P, 1962, BIOMETRICS, V18, P263
   Onwuzurike L, 2019, ACM T PRIV SECUR, V22, DOI 10.1145/3313391
   Palumbo P, 2017, COMPUT SECUR, V70, P689, DOI 10.1016/j.cose.2017.07.013
   Parab Shraddha, 2010, Int J Ayurveda Res, V1, P187, DOI 10.4103/0974-7788.72494
   Pendlebury F, 2019, PROCEEDINGS OF THE 28TH USENIX SECURITY SYMPOSIUM, P729
   Perinetti G, 2016, S EUROPEAN J ORTHODO, V3, P3
   Rossow C, 2012, P IEEE S SECUR PRIV, P65, DOI 10.1109/SP.2012.14
   Sagi O, 2018, WIRES DATA MIN KNOWL, V8, DOI 10.1002/widm.1249
   Salem A, 2021, ACM T PRIV SECUR, V24, DOI 10.1145/3465361
   Sebastián M, 2016, LECT NOTES COMPUT SC, V9854, P230, DOI 10.1007/978-3-319-45719-2_11
   Sheldon M R, 1996, Physiother Res Int, V1, P221, DOI 10.1002/pri.66
   Sun T, 2021, P 36 IEEEACM INT C A
   Wang J, 2020, IEEE WCNC, DOI 10.1109/wcnc45663.2020.9120537
   Wang X, 2017, SECUR COMMUN NETW, DOI 10.1155/2017/6451260
   WOLPERT DH, 1992, NEURAL NETWORKS, V5, P241, DOI 10.1016/S0893-6080(05)80023-1
   Wu DJ, 2012, ASIA JT CONF INF SEC, P62, DOI 10.1109/AsiaJCIS.2012.18
   Wu YM, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P139, DOI 10.1109/ASE.2019.00023
   Xu J, 2021, PROCEEDING NETWORK D
   Yerima SY, 2015, IET INFORM SECUR, V9, P313, DOI 10.1049/iet-ifs.2014.0099
   Yerima SY, 2014, 2014 EIGHTH INTERNATIONAL CONFERENCE ON NEXT GENERATION MOBILE APPS, SERVICES AND TECHNOLOGIES (NGMAST), P37, DOI 10.1109/NGMAST.2014.23
   Zhang W, 2015, LECT NOTES COMPUT SC, V9377, P489, DOI 10.1007/978-3-319-25393-0_54
   Zhang XH, 2016, 2016 2ND IEEE INTERNATIONAL CONFERENCE ON COMPUTER AND COMMUNICATIONS (ICCC), P1412, DOI 10.1109/CompComm.2016.7924936
   Zhao CL, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON SMART INTERNET OF THINGS (SMARTIOT 2018), P143, DOI [10.1109/SmartIoT.2018.00034, 10.1109/SmartIoT.2018.00-11]
   Zhao YJ, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3446905
   Zhu H., 2020, IEEE Trans. Netw. Sci. Eng., V99, P1
NR 59
TC 3
Z9 3
U1 1
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2023
VL 28
IS 2
AR 22
DI 10.1007/s10664-022-10249-9
PG 42
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 7I0VV
UT WOS:000903614800004
OA hybrid
DA 2024-07-18
ER

PT J
AU Turcotte, A
   Arteca, E
   Mishra, A
   Alimadadi, S
   Tip, F
AF Turcotte, Alexi
   Arteca, Ellen
   Mishra, Ashish
   Alimadadi, Saba
   Tip, Frank
TI Stubbifier: debloating dynamic server-side JavaScript applications
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Debloating; Program analysis; JavaScript; Node; js
ID STATIC ANALYSIS
AB JavaScript is an increasingly popular language for server-side development, thanks in part to the Node.js runtime environment and its vast ecosystem of modules. With the Node.js package manager npm, users are able to easily include external modules as dependencies in their projects. However, npm installs modules with all of their functionality, even if only a fraction is needed, which causes an undue increase in code size. Eliminating this unused functionality from distributions is desirable, but the sound analysis required to find unused code is difficult due to JavaScript's extreme dynamicity. We present a fully automatic technique that identifies unused code by constructing static or dynamic call graphs from the application's tests, and replacing code deemed unreachable with either file- or function-level stubs. Due to JavaScript's highly dynamic nature, call graph construction may suffer from unsoundness, i.e., code identified as unused may in fact be reachable. To handle such cases, if a stub is called, it will fetch and execute the original code on-demand to preserve the application's behavior. The technique also provides an optional guarded execution mode to guard application against injection vulnerabilities in untested code that resulted from stub expansion. This technique is implemented in an open source tool called Stubbifier, designed to help package developers to produce a minimal production distribution. Stubbifier supports the ECMAScript 2019 standard. In an empirical evaluation on 15 Node.js applications and 75 clients of these applications, Stubbifier reduced application size by 56% on average while incurring only minor performance overhead. The evaluation also shows that Stubbifier's guarded execution mode is capable of preventing several known injection vulnerabilities that are manifested in stubbed-out code. Finally, Stubbifier can work alongside bundlers, popular JavaScript tools for bundling an application with its dependencies. For the considered subject applications, we measured an average size reduction of 37% in bundled distributions.
C1 [Turcotte, Alexi; Arteca, Ellen; Tip, Frank] Northeastern Univ, Khoury Coll Comp Sci, Boston, MA 02115 USA.
   [Mishra, Ashish] Purdue Univ, W Lafayette, IN 47907 USA.
   [Alimadadi, Saba] Simon Fraser Univ, Comp Sci, Vancouver, BC, Canada.
C3 Northeastern University; Purdue University System; Purdue University;
   Simon Fraser University
RP Turcotte, A (corresponding author), Northeastern Univ, Khoury Coll Comp Sci, Boston, MA 02115 USA.
EM turcotte.al@northeastern.edu; arteca.e@northeastern.edu;
   mishr115@purdue.edu; saba@sfu.ca; f.tip@northeastern.edu
OI Mishra, Ashish/0000-0002-0513-3107
FU Office of Naval Research (ONR) [N00014-17-1-2945, N00014-21-1-2491];
   National Science Foundation [CCF-1907727]; Natural Sciences and
   Engineering Research Council of Canada
FX This research was supported in part by Office of Naval Research (ONR)
   grants N00014-17-1-2945 and N00014-21-1-2491, and by National Science
   Foundation grant CCF-1907727. E. Arteca and A. Turcotte are supported in
   part by the Natural Sciences and Engineering Research Council of Canada.
CR Abadi M, 2009, ACM T INFORM SYST SE, V13, DOI 10.1145/1609956.1609960
   AGESEN O, 1994, SIGPLAN NOTICES, V29, P355, DOI 10.1145/191081.191135
   Agesen O., 1993, ECOOP '93, P247, DOI DOI 10.1007/3-540-47910-4_14
   Andreasen E, 2014, ACM SIGPLAN NOTICES, V49, P17, DOI [10.1145/2714064.2660214, 10.1145/2660193.2660214]
   [Anonymous], 2021, EXPRESSJS MORGAN
   [Anonymous], 2021, EXPRESSJS BODY PARSE
   [Anonymous], 2021, MAPBOX NODE BLEND
   [Anonymous], 2013, Learning Python
   [Anonymous], 2021, REDUXJS REDUX
   [Anonymous], 2021, EXPRESSJS SERVE FAVI
   [Anonymous], 2021, WEBPACK MEMORY FS
   [Anonymous], 2021, ISAACS NODE GLOB
   [Anonymous], 2021, EXPRESSJS COMPRESSIO
   [Anonymous], 2021, STREAMICH MEMFS
   [Anonymous], 2021, WEBPACK CONTRIB CSS
   [Anonymous], 2021, About us
   [Anonymous], 2021, COMMIT REMOVE EVAL
   [Anonymous], 2021, KRISKOWAL Q
   [Anonymous], 1997, VISUALAGE SMALLT HDB, V1
   [Anonymous], 2021, DOUGWILSON NODEJS DE
   [Anonymous], 2021, CSS LOAD
   [Anonymous], 2021, PILLARJS SEND
   [Anonymous], 2021, FACEBOOK PROP TYPES
   [Anonymous], 2021, BDISTIN FS NEXTRA
   [Anonymous], 2021, EXPRESSJS SERVE STAT
   Avgustinov Pavel., 2016, 30th European Conference on Object-Oriented Programming, ECOOP 2016, July 18-22, 2016, Rome, Italy, p2:1, DOI DOI 10.4230/LIPICS.ECOOP.2016.2
   Bacon DF, 1996, ACM SIGPLAN NOTICES, V31, P324, DOI 10.1145/236338.236371
   Bhattacharya S, 2013, ACM SIGPLAN NOTICES, V48, P745, DOI [10.1145/2544173.2509522, 10.1145/2509136.2509522]
   Bruce BR, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P135, DOI 10.1145/3368089.3409738
   De Sutter B, 2002, ACM SIGPLAN NOTICES, V37, P275, DOI 10.1145/583854.582445
   Dean J, 1995, LECT NOTES COMPUT SC, V952, P77, DOI 10.1007/3-540-49538-x_5
   ECMA International, 2021, ECMASCRIPT MOD SYST
   ECMA International, 2019, ECMASCRIPT 2019 LANG
   Gauthier F, 2018, COMPANION PROCEEDINGS FOR THE ISSTA/ECOOP 2018 WORKSHOPS, P94, DOI 10.1145/3236454.3236502
   github, 2021, DEPD ISSUE 24
   github, 2021, about us
   GitHub, 2020, LANG TRENDS GITHUB
   GitHub, 2021, CODEQL
   github, 2021, DEPD ISSUE 22
   Hovemeyer D, 2001, USENIX ASSOCIATION PROCEEDINGS JAVA(TM) VIRTUAL MACHINE RESEARCH AND TECHNOLOGY SYMPOSIUM, P127
   Istanbul, 2021, NYC
   Jensen S.H., 2011, P 19 ACM SIGSOFT S 1, P59
   Jensen Simon Holm, 2012, International Symposium on Software Testing and Analysis, ISSTA 2012, Minneapolis, MN, USA, July 15-20, 2012, P34, DOI DOI 10.1145/2338965.2336758
   Karim R, 2020, IEEE T SOFTWARE ENG, V46, P1364, DOI 10.1109/TSE.2018.2878020
   Koishybayev Igibek, 2020, 23 INT S RES ATT INT
   Koo H, 2019, PROCEEDINGS OF THE 12TH EUROPEAN WORKSHOP ON SYSTEMS SECURITY (EUROSEC 2019), DOI 10.1145/3301417.3312501
   Krintz C, 1999, ACM SIGPLAN NOTICES, V34, P276, DOI 10.1145/320385.320412
   Li S., 2021, DETECTING NODEJS PRO, P268, DOI [10.1145/3468264.3468542, DOI 10.1145/3468264.3468542]
   Li S, 2022, 31 USENIX SECURITY S
   Li Y, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3276511
   Li Y, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P129, DOI 10.1145/3236024.3236041
   Livshits Benjamin., 2008, Proceedings of the 16th Symposium on Foun- dations of Software Engineering (FSE), P350
   Madsen M, 2015, ACM SIGPLAN NOTICES, V50, P505, DOI [10.1145/2858965.2814272, 10.1145/2814270.2814272]
   MDN, 2021, TREE SHAK
   Mozilla, 2021, REST PAR
   Muller A, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P409, DOI 10.1145/3338906.3338940
   Nielsen BB, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P455, DOI 10.1145/3338906.3338933
   Niu B, 2015, CCS'15: PROCEEDINGS OF THE 22ND ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P914, DOI 10.1145/2810103.2813644
   npm, 2021, NPM
   npm, 2021, SEMV
   OpenJS Foundation, 2021, NOD JS
   Rayside D, 2002, SCI COMPUT PROGRAM, V45, P245, DOI 10.1016/S0167-6423(02)00059-X
   Richards G, 2011, LECT NOTES COMPUT SC, V6813, P52, DOI 10.1007/978-3-642-22655-7_4
   rlang, 2022, EX FUNCT
   Rollup, 2021, ROLL
   Sharif H, 2018, IEEE INT CONF AUTOM, P329, DOI 10.1145/3238147.3238160
   Sridharan M, 2012, LECT NOTES COMPUT SC, V7313, P435, DOI 10.1007/978-3-642-31057-7_20
   Stack Overflow, 2020, DEV SURV
   Staicu CA, 2020, PROC INT CONF SOFTW, P198, DOI 10.1145/3377811.3380390
   Staicu CA, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23071
   Stein B, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360566
   Sweeney P. F., 2000, Software Engineering Notes, V25, P98, DOI 10.1145/357474.355059
   Tip F, 1999, ACM SIGPLAN NOTICES, V34, P292, DOI 10.1145/320385.320414
   Tip F, 2002, ACM T PROGR LANG SYS, V24, P625, DOI 10.1145/586088.586090
   Tip F, 2000, ACM SIGPLAN NOTICES, V35, P281, DOI 10.1145/354222.353190
   Turcotte A, 2021, STUBBIFER DEBLOATING, DOI [10.5281/zenodo.5599914, DOI 10.5281/ZENODO.5599914]
   Vasilakis N, 2021, CCS '21: PROCEEDINGS OF THE 2021 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1821, DOI 10.1145/3460120.3484535
   VisualWorks User's Guide, 1995, PARCPLACE DIGITALK S
   Wagner G, 2011, SCI COMPUT PROGRAM, V76, P1037, DOI 10.1016/j.scico.2010.04.008
   webpack, 2021, WEBP
   Zhang C, 2013, P IEEE S SECUR PRIV, P559, DOI 10.1109/SP.2013.44
   Zimmermann M, 2019, PROCEEDINGS OF THE 28TH USENIX SECURITY SYMPOSIUM, P995
NR 82
TC 2
Z9 2
U1 3
U2 9
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2022
VL 27
IS 7
AR 161
DI 10.1007/s10664-022-10195-6
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4V4SY
UT WOS:000859469500001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Zyrianov, V
   Peterson, CS
   Guarnera, DT
   Behler, J
   Weston, P
   Sharif, B
   Maletic, JI
AF Zyrianov, Vlas
   Peterson, Cole S.
   Guarnera, Drew T.
   Behler, Joshua
   Weston, Praxis
   Sharif, Bonita
   Maletic, Jonathan, I
TI Deja Vu: semantics-aware recording and replay of high-speed eye tracking
   and interaction data to support cognitive studies of software
   engineering tasks-methodology and analyses
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Eye tracking; High-speed tracking; Empirical software engineering;
   Program comprehension; Replication analyses
ID PROGRAM COMPREHENSION; MICROSACCADES; INHIBITION; MOVEMENTS; DEVIATE;
   RETURN
AB The paper introduces a fundamental technological problem with collecting high-speed eye tracking data while studying software engineering tasks in an integrated development environment. The use of eye trackers is quickly becoming an important means to study software developers and how they comprehend source code and locate bugs. High quality eye trackers can record upwards of 120 to 300 gaze points per second. However, it is not always possible to map each of these points to a line and column position in a source code file (in the presence of scrolling and file switching) in real time at data rates over 60 gaze points per second without data loss. Unfortunately, higher data rates are more desirable as they allow for finer granularity and more accurate study analyses. To alleviate this technological problem, a novel method for eye tracking data collection is presented. Instead of performing gaze analysis in real time, all telemetry (keystrokes, mouse movements, and eye tracker output) data during a study is recorded as it happens. Sessions are then replayed at a much slower speed allowing for ample time to map gaze point positions to the appropriate file, line, and column to perform additional analysis. A description of the method and corresponding tool, Deja Vu, is presented. An evaluation of the method and tool is conducted using three different eye trackers running at four different speeds (60 Hz, 120 Hz, 150 Hz, and 300 Hz). This timing evaluation is performed in Visual Studio, Eclipse, and Atom IDEs. Results show that Deja Vu can playback 100% of the data recordings, correctly mapping the gaze to corresponding elements, making it a well-founded and suitable post processing step for future eye tracking studies in software engineering. Finally, a proof of concept replication analysis of four tasks from two previous studies is performed. Due to using the Deja Vu approach, this replication resulted in richer collected data and improved on the number of distinct syntactic categories that gaze was mapped on in the code.
C1 [Zyrianov, Vlas] Univ Illinois, Dept Comp Sci, Champaign, IL USA.
   [Peterson, Cole S.; Sharif, Bonita] Univ Nebraska, Sch Comp, Lincoln, NE USA.
   [Guarnera, Drew T.] Coll Wooster, Dept Comp Sci, Wooster, OH 44691 USA.
   [Behler, Joshua; Weston, Praxis; Maletic, Jonathan, I] Kent State Univ, Dept Comp Sci, Kent, OH 44242 USA.
C3 University of Illinois System; University of Illinois Urbana-Champaign;
   University of Nebraska System; University of Nebraska Lincoln;
   University System of Ohio; College of Wooster; University System of
   Ohio; Kent State University; Kent State University Kent; Kent State
   University Salem
RP Maletic, JI (corresponding author), Kent State Univ, Dept Comp Sci, Kent, OH 44242 USA.
EM vlasz2@illinois.edu; Cole.Scott.Peterson@huskers.unl.edu;
   dguarnera@wooster.edu; jbehlerl@kent.edu; gweston2@kent.edu;
   bsharif@unl.edu; jmaletic@kent.edu
RI Sharif, Bonita/GXZ-5409-2022
OI Sharif, Bonita/0000-0002-5178-7160
FU US NSF [CNS 17-30181, CNS 18-55753, CCF 18-55756]
FX The authors would like to thank the anonymous reviewers for their
   insightful comments and suggestions. This work has been partly funded by
   the US NSF under Grant Numbers CNS 17-30181, CNS 18-55753, and CCF
   18-55756
CR Abid NJ, 2019, PROC INT CONF SOFTW, P384, DOI 10.1109/ICSE.2019.00052
   Andersson R, 2017, BEHAV RES METHODS, V49, P616, DOI 10.3758/s13428-016-0738-9
   Andersson R, 2010, J EYE MOVEMENT RES, V3
   [Anonymous], 2013, P 26 ANN ACM S USER
   Bao LF, 2015, IEEE INT CONF AUTOM, P864, DOI 10.1109/ASE.2015.90
   Bao LF, 2018, EMPIR SOFTW ENG, V23, P1313, DOI 10.1007/s10664-017-9547-8
   Bernal-Cárdenas C, 2020, PROC INT CONF SOFTW, P309, DOI 10.1145/3377811.3380328
   BROOKS R, 1983, INT J MAN MACH STUD, V18, P543, DOI 10.1016/S0020-7373(83)80031-5
   Brown NCC, 2018, ICER'18: PROCEEDINGS OF THE 2018 ACM CONFERENCE ON INTERNATIONAL COMPUTING EDUCATION RESEARCH, P196, DOI 10.1145/3230977.3230991
   Collard ML, 2013, PROC IEEE INT CONF S, P516, DOI 10.1109/ICSM.2013.85
   Dodd MD, 2009, PSYCHOL SCI, V20, P333, DOI 10.1111/j.1467-9280.2009.02294.x
   Duchowski A. T., 2017, EYE TRACKING METHODO
   Duchowski AT, 2020, PROCEEDINGS OF THE 2020 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'20), DOI 10.1145/3313831.3376394
   Duchowski AT, 2020, IEEE T VIS COMPUT GR, V26, P2904, DOI 10.1109/TVCG.2019.2901881
   Engbert R, 2003, VISION RES, V43, P1035, DOI 10.1016/S0042-6989(03)00084-1
   Eriksen CW, 1995, VISUAL SELECTIVE ATTENTION, P101
   Fakhoury S, 2021, PROC IEEE ACM INT C, P69, DOI 10.1109/ICSE-Companion52605.2021.00038
   Fakhoury S, 2018, INT C PROGRAM COMPRE, P286, DOI 10.1145/3196321.3196347
   Floyd B, 2017, PROC INT CONF SOFTW, P175, DOI 10.1109/ICSE.2017.24
   Goldberg J. H., 2002, Proceedings ETRA 2002. Eye Tracking Research and Applications Symposium, P51, DOI 10.1145/507072.507082
   Guarnera DT, 2018, 2018 ACM SYMPOSIUM ON EYE TRACKING RESEARCH & APPLICATIONS (ETRA 2018), DOI 10.1145/3204493.3208343
   Guo JQ, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P90, DOI 10.1145/3293882.3330557
   Hafed ZM, 2002, VISION RES, V42, P2533, DOI 10.1016/S0042-6989(02)00263-8
   Holmqvist K., 2017, EYE TRACKING COMPREH
   JUST MA, 1980, PSYCHOL REV, V87, P329, DOI 10.1037/0033-295X.87.4.329
   Kelleher C, 2019, CHI 2019: PROCEEDINGS OF THE 2019 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, DOI 10.1145/3290605.3300487
   Kersten Mik, 2006, P 14 ACM SIGSOFT INT, P1
   Kevic K, 2017, J SYST SOFTWARE, V128, P252, DOI 10.1016/j.jss.2016.03.030
   Kevic K, 2015, P 10 JOINT M EUROPEA
   Klein RM, 1999, PSYCHOL SCI, V10, P346, DOI 10.1111/1467-9280.00166
   LETOVSKY S, 1987, J SYST SOFTWARE, V7, P325, DOI 10.1016/0164-1212(87)90032-X
   Lowet E, 2018, NEURON, V99, P207, DOI 10.1016/j.neuron.2018.05.041
   Lupianez J., 2010, ATTENTION TIME, P17, DOI [10.1093/acprof:oso/9780199563456.003.0002, DOI 10.1093/ACPROF:OSO/9780199563456.003.0002]
   Microsoft, 2018, MOUS EV FUNCT WIN H
   Minelli R, 2016, INT WORKSH EMPIR ENG, P1, DOI 10.1109/IWESEP.2016.11
   Minelli R, 2015, INT C PROGRAM COMPRE, P25, DOI 10.1109/ICPC.2015.12
   Minelli R, 2014, INT CONF QUAL SOFTW, P276, DOI 10.1109/QSIC.2014.11
   Nelson GL, 2018, ICER'18: PROCEEDINGS OF THE 2018 ACM CONFERENCE ON INTERNATIONAL COMPUTING EDUCATION RESEARCH, P31, DOI 10.1145/3230977.3230992
   Nino I. J., 2005, 3rd IEEE/IFIP Workshop on End-to-End Monitoring Techniques and Services (IEEE Cat. No. 05EX1107), P127
   Obaidellah U, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3145904
   Olsson P., 2007, Real-time and offline filters for eye tracking
   Park KI, 2021, 2021 IEEE/ACM SIXTH INTERNATIONAL WORKSHOP ON EMOTION AWARENESS IN SOFTWARE ENGINEERING SEMOTION 2021, P1, DOI 10.1109/SEmotion52567.2021.00009
   PENNINGTON N, 1987, COGNITIVE PSYCHOL, V19, P295, DOI 10.1016/0010-0285(87)90007-7
   Peterson CS, 2019, ETRA 2019: 2019 ACM SYMPOSIUM ON EYE TRACKING RESEARCH & APPLICATIONS, DOI 10.1145/3314111.3319833
   Peterson CS, 2019, CHI EA '19 EXTENDED ABSTRACTS: EXTENDED ABSTRACTS OF THE 2019 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, DOI 10.1145/3290607.3312801
   Ramler R, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P664, DOI [10.1109/saner48275.2020.9054833, 10.1109/SANER48275.2020.9054833]
   Rayner K, 1998, PSYCHOL BULL, V124, P372, DOI 10.1037/0033-2909.124.3.372
   RAYNER K, 1978, PSYCHOL BULL, V85, P618, DOI 10.1037/0033-2909.85.3.618
   Rist Robert S., 1986, P 1 WORKSH EMP STUD, P28
   Saddler JA, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P195, DOI [10.1109/saner48275.2020.9054848, 10.1109/SANER48275.2020.9054848]
   Salvucci DD, 2000, 2000 S EYE TRACKING, P71, DOI [10.1145/355017.355028, DOI 10.1145/355017.355028]
   Sharafi Z, 2015, SYSTEMATIC LIT REV U
   Sharafi Z, 2020, EMPIR SOFTW ENG, V25, P3128, DOI 10.1007/s10664-020-09829-4
   Sharafi Z, 2015, ASIA PAC SOFWR ENG, P96, DOI 10.1109/APSEC.2015.53
   Sharif B, 2019, 2019 IEEE/ACM 6TH INTERNATIONAL WORKSHOP ON EYE MOVEMENTS IN PROGRAMMING (EMIP 2019), P41, DOI 10.1109/EMIP.2019.00015
   Sharif B, 2016, PROC IEEE INT CONF S, P647, DOI 10.1109/ICSME.2016.61
   Sharif B, 2017, EMPIR SOFTW ENG, V22, P1063, DOI 10.1007/s10664-016-9486-9
   Sharif B, 2016, IEEE SOFTWARE, V33, P105, DOI 10.1109/MS.2016.84
   SOLOWAY E, 1984, IEEE T SOFTWARE ENG, V10, P595, DOI 10.1109/TSE.1984.5010283
   Storey MA, 2006, SOFTWARE QUAL J, V14, P187, DOI 10.1007/s11219-006-9216-4
   Sun JL, 2018, 2018 IEEE 18TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY COMPANION (QRS-C), P42, DOI 10.1109/QRS-C.2018.00021
   Sun YC, 2015, P INT COMP SOFTW APP, P666, DOI 10.1109/COMPSAC.2015.12
   Sun YC, 2014, P INT COMP SOFTW APP, P456, DOI 10.1109/COMPSAC.2014.68
   Van der Stigchel S, 2006, EXP BRAIN RES, V169, P338, DOI 10.1007/s00221-005-0147-2
   Van der Stigchel S, 2005, VISION RES, V45, P1921, DOI 10.1016/j.visres.2005.02.002
   Van der Stigchel S, 2010, ATTEN PERCEPT PSYCHO, V72, P1244, DOI 10.3758/APP.72.5.1244
   VONMAYRHAUSER A, 1995, COMPUTER, V28, P44, DOI 10.1109/2.402076
   Yan FG, 2018, PROC IEEE ACM INT C, P329, DOI 10.1145/3183440.3194994
   Zyrianov V, 2020, PROC IEEE INT CONF S, P464, DOI 10.1109/ICSME46990.2020.00051
NR 69
TC 3
Z9 3
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2022
VL 27
IS 7
AR 168
DI 10.1007/s10664-022-10209-3
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4V4SY
UT WOS:000859469500019
PM 36159896
OA Bronze, Green Published
DA 2024-07-18
ER

PT J
AU Sawadogo, AD
   Bissyandé, TF
   Moha, N
   Allix, K
   Klein, J
   Li, L
   Le Traon, Y
AF Sawadogo, Arthur D.
   Bissyande, Tegawende F.
   Moha, Naouel
   Allix, Kevin
   Klein, Jacques
   Li, Li
   Le Traon, Yves
TI SSPCATCHER: Learning to catch security patches
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
ID SOFTWARE
AB Timely patching (i.e., the act of applying code changes to a program source code) is paramount to safeguard users and maintainers against dire consequences of malicious attacks. In practice, patching is prioritized following the nature of the code change that is committed in the code repository. When such a change is labeled as being security-relevant, i.e., as fixing a vulnerability, maintainers rapidly spread the change, and users are notified about the need to update to a new version of the library or of the application. Unfortunately, oftentimes, some security-relevant changes go unnoticed as they represent silent fixes of vulnerabilities. In this paper, we propose SSPCATCHER, a Co-Training-based approach to catch security patches (i.e., patches that address vulnerable code) as part of an automatic monitoring service of code repositories. Leveraging different classes of features, we empirically show that such automation is feasible and can yield a precision of over 80% in identifying security patches, with an unprecedented recall of over 80%. Beyond such a benchmarking with ground truth data which demonstrates an improvement over the state-of-the-art, we confirmed that SSPCATCHER can help catch security patches that were not reported as such.
C1 [Sawadogo, Arthur D.; Moha, Naouel] Univ Quebec Montreal, Montreal, PQ, Canada.
   [Bissyande, Tegawende F.; Allix, Kevin; Klein, Jacques; Le Traon, Yves] Univ Luxembourg, SnT, 2 Av Univ, L-4365 Esch Sur Alzette, Luxembourg.
   [Li, Li] Monash Univ, Melbourne, Vic, Australia.
C3 University of Quebec; University of Quebec Montreal; University of
   Luxembourg; Monash University
RP Sawadogo, AD (corresponding author), Univ Quebec Montreal, Montreal, PQ, Canada.
EM sawadogo.delwende_donald_arthur@courrier.uqam.ca;
   tegawende.f.bissyande@uni.lu; moha.naouel@uqam.ca; kevin.allix@uni.lu;
   jacques.klein@uni.lu; li.li@monash.edu; yves.le.traon@uni.lu
RI LE TRAON, Yves/T-2911-2019
CR Allix K, 2015, Engineering Secure Software and Systems, P51, DOI [10.1007/978-3-319-15618-7_5, DOI 10.1007/978-3-319-15618-7_5]
   [Anonymous], 2008, NDSS
   [Anonymous], 2005, NDSS
   [Anonymous], 2008, ORIGIN BDFL
   Arnold Robert S., 1996, SOFTWARE CHANGE IMPA
   Berr J., 2017, WannaCry" ransomware attack losses could reach billion."
   Bissyandé TF, 2013, EUR CON SFTWR MTNCE, P89, DOI 10.1109/CSMR.2013.19
   Blum A., 1998, Proceedings of the Eleventh Annual Conference on Computational Learning Theory, P92, DOI 10.1145/279943.279962
   Brooks T.N., 2017, ARXIV
   Cadar C., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, (USA), P209
   Cha SK, 2012, P IEEE S SECUR PRIV, P380, DOI 10.1109/SP.2012.31
   Chang RY, 2008, IEEE T SOFTWARE ENG, V34, P579, DOI 10.1109/TSE.2008.24
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Cheung S.-C., 2011, P 19 ACM SIGSOFT S 1, P15
   Chowdhury I., 2008, P 4 INT WORKSH SOFTW
   Du XN, 2019, PROC INT CONF SOFTW, P60, DOI 10.1109/ICSE.2019.00024
   Hempstalk K, 2008, LECT NOTES ARTIF INT, V5360, P325, DOI 10.1007/978-3-540-89378-3_32
   Hoang T, 2018, TOOL DEMONSTRATIONS
   Jay Graylin, 2009, Journal of Software Engineering and Applications, V2, P137, DOI 10.4236/jsea.2009.23020
   Jimenez M, 2018, IEEE INT WORK C SO, P56, DOI 10.1109/SCAM.2018.00014
   Knight W, 2017, TECHNOL REV, V120, P54
   Koyuncu A, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P237, DOI 10.1145/3092703.3092713
   Krogel MA, 2004, MACH LEARN, V57, P61, DOI 10.1023/B:MACH.0000035472.73496.0c
   Li BX, 2013, SOFTW TEST VERIF REL, V23, P613, DOI 10.1002/stvr.1475
   Li L, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P280, DOI 10.1109/ICSE.2015.48
   Li X, 2003, IJCAI, V18, P587
   Li Z, 2018, Arxiv, DOI arXiv:1801.01681
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Nguyen A. T., 2012, P ACM SIGSOFT 20 INT, P63
   Nigam K., 2000, Proceedings of the Ninth International Conference on Information and Knowledge Management. CIKM 2000, P86, DOI 10.1145/354756.354805
   NIST, 2018, NAT VULN DAT
   Perl H, 2015, CCS'15: PROCEEDINGS OF THE 22ND ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P426, DOI 10.1145/2810103.2813604
   Ponta SE, 2019, Arxiv, DOI arXiv:1902.02595
   Pontin J., 2018, Greedy, Brittle, Opaque, and Shallow: The Downsides to Deep Learning
   PORTER MF, 1980, PROGRAM-AUTOM LIBR, V14, P130, DOI 10.1108/eb046814
   Reis S, 2017, SECSE ESORICS, V1977, P69
   Ribeiro MT, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1135, DOI 10.1145/2939672.2939778
   Sabetta A, 2018, PROC IEEE INT CONF S, P579, DOI 10.1109/ICSME.2018.00058
   Scandariato R, 2014, IEEE T SOFTWARE ENG, V40, P993, DOI 10.1109/TSE.2014.2340398
   Snyk.io, 2017, The state of open-source security
   Sutton M., 2007, Fuzzing: brute force vulnerability discovery
   Szekeres L, 2013, P IEEE S SECUR PRIV, P48, DOI 10.1109/SP.2013.13
   Tian Y, 2012, PROC INT CONF SOFTW, P386, DOI 10.1109/ICSE.2012.6227176
   Tiantian Ji, 2018, 2018 IEEE Third International Conference on Data Science in Cyberspace (DSC). Proceedings, P53, DOI 10.1109/DSC.2018.00017
   Trend Micro, 2017, PATCH PROBL SOLV THE
   Vapnik V., 1999, NATURE STAT LEARNING
   Xiao Y, 2020, PROCEEDINGS OF THE 29TH USENIX SECURITY SYMPOSIUM, P1165
   Yamaguchi F., 2013, P 2013 ACM SIGSAC C, P499
   Yamaguchi F, 2014, P IEEE S SECUR PRIV, P590, DOI 10.1109/SP.2014.44
   Ying ATT, 2004, IEEE T SOFTWARE ENG, V30, P574, DOI 10.1109/TSE.2004.52
   Zhou YQ, 2019, ADV NEUR IN, V32
   Zhou YQ, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P914, DOI 10.1145/3106237.3117771
   Zimmermann Thomas, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P421, DOI 10.1109/ICST.2010.32
NR 53
TC 5
Z9 5
U1 0
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2022
VL 27
IS 6
AR 151
DI 10.1007/s10664-022-10168-9
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 3O4IB
UT WOS:000836798500012
DA 2024-07-18
ER

PT J
AU Zhang, HN
   Tang, YM
   Lamothe, M
   Li, H
   Shang, WY
AF Zhang, Haonan
   Tang, Yiming
   Lamothe, Maxime
   Li, Heng
   Shang, Weiyi
TI Studying logging practice in test code
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software logs; Logging practices; Software testing; Mining software
   repository; Source code analysis
ID CHI-SQUARE TEST; LOG
AB Logging is widely used in modern software development to record run-time information for software systems and plays a significant role in software testing. Although the research area of logging has attracted much attention, little attention is paid to the practice of test logging (i.e., the logging involved in test files). To fill this knowledge gap, we conduct this empirical study to explore and disclose the practice of test logging. This study examines 21 open-source subjects with similar to 70K logging statements, of which similar to 48K are production logging statements and similar to 22K are test logging statements. We organize our study by answering four research questions, and as a result, (1) we have yielded five findings to reveal the differences between test and production logging statements, (2) we have disclosed four findings regarding the differences between the maintenance efforts of test and production logging statements, (3) we have identified four reasons why developers use test log, and (4) we have uncovered the relationship between test logging and production logging. To the best of our knowledge, this is the first study that quantitatively and qualitatively analyzes the logging practices in test and production code, providing developers and researchers with insight into this topic.
C1 [Zhang, Haonan; Tang, Yiming; Shang, Weiyi] Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ, Canada.
   [Lamothe, Maxime; Li, Heng] Polytech Montreal, Dept Comp Engn & Software Engn, Montreal, PQ, Canada.
C3 Concordia University - Canada; Universite de Montreal; Polytechnique
   Montreal
RP Tang, YM (corresponding author), Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ, Canada.
EM z_haon@encs.concordia.ca; t_yiming@encs.concordia.ca;
   maxime.lamothe@polymtl.ca; heng.li@polymtl.ca; shang@encs.concordia.ca
OI TANG, YIMING/0000-0003-2378-8972; Zhang, Haonan/0000-0002-6874-5581; Li,
   Heng/0000-0001-5441-6763
CR [Anonymous], 2016, MATH METHODS STAT
   Apache Common Logging, 2021, AP COMM
   Chen BY, 2018, IEEE INT CONF AUTOM, P305, DOI 10.1145/3238147.3238214
   Chen BY, 2017, PROC INT CONF SOFTW, P71, DOI 10.1109/ICSE.2017.15
   Chen BY, 2017, EMPIR SOFTW ENG, V22, P330, DOI 10.1007/s10664-016-9429-5
   Cliff N., 2014, Ordinal Methods for Behavioral Data Analysis
   Cohen J., 1988, STAT POWER ANAL BEHA
   Collard ML, 2013, PROC IEEE INT CONF S, P516, DOI 10.1109/ICSM.2013.85
   Danial A., 2021, CLOC
   Ding R, 2015, USENIX ATC15
   Ding Z, 2022, SANER
   Fisher RA, 1922, J R STAT SOC, V85, P87, DOI 10.2307/2340521
   Franke TM, 2012, AM J EVAL, V33, P448, DOI 10.1177/1098214011426594
   Fu Q, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P24, DOI 10.1145/2591062.2591175
   Fu Q, 2013, IEEE WORK CONF MIN S, P397, DOI 10.1109/MSR.2013.6624054
   Fu QA, 2009, IEEE DATA MINING, P149, DOI 10.1109/ICDM.2009.60
   GitPython-Developers, 2021, GITPYTHON DEV GITP G
   Glerum K, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P103
   Grechanik M., 2010, Proceedings of the FSE/SDP workshop on Future of software engineering research, P149, DOI DOI 10.1145/1882362.1882394
   Gulcu C, 2002, COMPLETE LOG4J MANUA
   Hassani M, 2018, EMPIR SOFTW ENG, V23, P3248, DOI 10.1007/s10664-018-9603-z
   He PJ, 2018, IEEE INT CONF AUTOM, P178, DOI 10.1145/3238147.3238193
   Kabinna S, 2018, EMPIR SOFTW ENG, V23, P290, DOI 10.1007/s10664-017-9518-0
   Kernighan B. W., 1999, The Practice of Programming, V1st
   Laaber C, 2019, EMPIR SOFTW ENG, V24, P2469, DOI 10.1007/s10664-019-09681-1
   Li H, 2021, IEEE T SOFTWARE ENG, V47, P2858, DOI 10.1109/TSE.2020.2970422
   Li H, 2018, EMPIR SOFTW ENG, V23, P2655, DOI 10.1007/s10664-018-9595-8
   Li H, 2017, EMPIR SOFTW ENG, V22, P1684, DOI 10.1007/s10664-016-9456-2
   Li H, 2017, EMPIR SOFTW ENG, V22, P1831, DOI 10.1007/s10664-016-9467-z
   Li ZH, 2021, PROC INT CONF SOFTW, P1461, DOI 10.1109/ICSE43902.2021.00131
   Li ZH, 2020, IEEE INT CONF AUTOM, P361, DOI 10.1145/3324884.3416636
   Li ZH, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P147, DOI 10.1109/ICSE-Companion.2019.00062
   Liu ZX, 2021, IEEE T SOFTWARE ENG, V47, P2012, DOI 10.1109/TSE.2019.2941943
   Lou J, 2010, PROTEIN ENG DES SEL, V23, P311, DOI 10.1093/protein/gzq001
   McHugh ML, 2013, BIOCHEM MEDICA, V23, P143, DOI 10.11613/BM.2013.018
   McHugh ML, 2012, BIOCHEM MEDICA, V22, P276, DOI 10.11613/bm.2012.031
   Murphy-Hill E, 2015, IEEE T SOFTWARE ENG, V41, P65, DOI 10.1109/TSE.2014.2357438
   Nachar N, 2008, TUTOR QUANT METHODS, V4, P13, DOI 10.20982/tqmp.04.1.p013
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Nagaraj K, 2012, P 9 USENIX C NETW SY, P353
   QOSch, 2021, SIMPL LOGG FAC JAV S
   Romano J., 2006, ANN M FLORIDA ASS IN
   Shang WY, 2014, PROC IEEE INT CONF S, P21, DOI 10.1109/ICSME.2014.24
   Shang WY, 2015, EMPIR SOFTW ENG, V20, P1, DOI 10.1007/s10664-013-9274-8
   Tang Y, 2021, ARXIV211202758
   Tang YM, 2022, SCI COMPUT PROGRAM, V214, DOI 10.1016/j.scico.2021.102724
   The Apache Software Foundation, 2021, AP LOG4J IS JAV BAS
   Wang SN, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P272, DOI 10.1109/SANER50967.2021.00033
   White R, 2020, PROC INT CONF SOFTW, P861, DOI 10.1145/3377811.3380921
   Yao KD, 2018, PROCEEDINGS OF THE 2018 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE '18), P127, DOI 10.1145/3184407.3184416
   Yuan D., 2012, P 2012 USENIX S OP S, P293
   Yuan D, 2012, PROC INT CONF SOFTW, P102, DOI 10.1109/ICSE.2012.6227202
   Yuan D, 2011, ACM SIGPLAN NOTICES, V46, P3, DOI 10.1145/1961296.1950369
   Zeng Y, 2019, EMPIR SOFTW ENG, V24, P3394, DOI 10.1007/s10664-019-09687-9
   Zhao X, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P565, DOI 10.1145/3132747.3132778
   Zhi C, 2019, PROC IEEE INT CONF S, P459, DOI 10.1109/ICSME.2019.00079
   Zhu JM, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P415, DOI 10.1109/ICSE.2015.60
NR 57
TC 4
Z9 4
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2022
VL 27
IS 4
AR 83
DI 10.1007/s10664-022-10139-0
PG 45
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0I9QT
UT WOS:000779747300002
DA 2024-07-18
ER

PT J
AU dos Reis, JP
   Abreu, FBE
   Carneiro, GD
AF dos Reis, Jose Pereira
   Brito e Abreu, Fernando
   Carneiro, Glauco de Figueiredo
TI Crowdsmelling: A preliminary study on using collective knowledge in code
   smells detection
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Crowdsmelling; Code smells; Code smells detection; Software quality;
   Software maintenance; Collective knowledge; Machine learning algorithms
AB Code smells are seen as major source of technical debt and, as such, should be detected and removed. However, researchers argue that the subjectiveness of the code smells detection process is a major hindrance to mitigate the problem of smells-infected code. This paper presents the results of a validation experiment for the Crowdsmelling approach proposed earlier. The latter is based on supervised machine learning techniques, where the wisdom of the crowd (of software developers) is used to collectively calibrate code smells detection algorithms, thereby lessening the subjectivity issue. In the context of three consecutive years of a Software Engineering course, a total "crowd" of around a hundred teams, with an average of three members each, classified the presence of 3 code smells (Long Method, God Class, and Feature Envy) in Java source code. These classifications were the basis of the oracles used for training six machine learning algorithms. Over one hundred models were generated and evaluated to determine which machine learning algorithms had the best performance in detecting each of the aforementioned code smells. Good performances were obtained for God Class detection (ROC= 0.896 for Naive Bayes) and Long Method detection (ROC= 0.870 for AdaBoostM1), but much lower for Feature Envy (ROC= 0.570 for Random Forrest). The results suggest that Crowdsmelling is a feasible approach for the detection of code smells. Further validation experiments based on dynamic learning are required to a comprehensive coverage of code smells to increase external validity.
C1 [dos Reis, Jose Pereira; Brito e Abreu, Fernando] Inst Univ Lisboa, ISTAR Iscte, Lisbon, Portugal.
   [Carneiro, Glauco de Figueiredo] Univ Salvador UNIFACS, Salvador, BA, Brazil.
C3 Instituto Universitario de Lisboa; Universidade Salvador (UNIFACS)
RP dos Reis, JP (corresponding author), Inst Univ Lisboa, ISTAR Iscte, Lisbon, Portugal.
EM jvprs@iscte-iul.pt; fba@iscte-iul.pt; glauco.carneiro@unifacs.br
RI Brito e Abreu, Fernando/D-2056-2010; Alidadi, Mehdi/HJZ-0235-2023; dos
   Reis, José Pereira/GPK-8629-2022; Pereira dos Reis, Jose/D-9145-2016; de
   Figueiredo Carneiro, Glauco/H-4528-2013
OI Brito e Abreu, Fernando/0000-0002-9086-4122; Alidadi,
   Mehdi/0000-0001-5183-7829; Pereira dos Reis, Jose/0000-0002-2505-9565;
   de Figueiredo Carneiro, Glauco/0000-0001-6241-1612
FU Portuguese Foundation for Science and Technology, under ISTAR's projects
   [UIDB/04466/2020, UIDP/04466/2020]; Anima Institute [43/2021]
FX This work was partially funded by the Portuguese Foundation for Science
   and Technology, under ISTAR's projects UIDB/04466/2020 and
   UIDP/04466/2020, and by Anima Institute (Edital N<SUP>degrees</SUP>
   43/2021).
CR Baltes S, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2020), P13, DOI 10.1145/3377816.3381744
   Bavota G, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P315, DOI [10.1109/MSR.2016.040, 10.1145/2901739.2901742]
   Bentzien J, 2013, DRUG DISCOV TODAY, V18, P472, DOI 10.1016/j.drudis.2013.01.002
   Bigham JP, 2014, COLLECTIVE INTELLIGE
   Breiman L, 2001, MACH LEARN, V45, P5, DOI 10.1023/A:1010933404324
   Caldeira J., 2022, UNVEILING PROCESS IN, V81
   de Mello R, 2017, 2017 IEEE/ACM 10TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE 2017), P62, DOI 10.1109/CHASE.2017.11
   Di Nucci D, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P612, DOI 10.1109/SANER.2018.8330266
   dos Reis JP, 2022, ARCH COMPUT METHOD E, V29, P47, DOI 10.1007/s11831-021-09566-x
   dos Reis JP, 2017, IBER CONF INF SYST
   Feldt R, 2018, EMPIR SOFTW ENG, V23, P3801, DOI 10.1007/s10664-018-9655-0
   Fontana FA, 2016, EMPIR SOFTW ENG, V21, P1143, DOI 10.1007/s10664-015-9378-4
   Fontana FA, 2012, J OBJECT TECHNOL, V11, DOI 10.5381/jot.2012.11.2.a5
   Fontana FA, 2013, PROC IEEE INT CONF S, P396, DOI 10.1109/ICSM.2013.56
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Freund Y., 1996, Machine Learning. Proceedings of the Thirteenth International Conference (ICML '96), P148
   Hall M., 2009, SIGKDD EXPLORATIONS, V11, P10, DOI [10.1145/1656274.1656278, DOI 10.1145/1656274.1656278]
   Humphrey W, 2009, FUTURE SOFTWARE ENG
   John G. H., 1995, Uncertainty in Artificial Intelligence. Proceedings of the Eleventh Conference (1995), P338
   Kessentini W, 2014, IEEE T SOFTWARE ENG, V40, P841, DOI 10.1109/TSE.2014.2331057
   Mansoor U, 2017, SOFTWARE QUAL J, V25, P529, DOI 10.1007/s11219-016-9309-7
   Oliveira R, 2020, INFORM SOFTWARE TECH, V120, DOI 10.1016/j.infsof.2019.106242
   Oliveira R, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P33, DOI 10.1109/ICSE-SEIP.2017.7
   Oliveira R, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P879, DOI 10.1145/2889160.2889272
   Oliveira R, 2016, P BRAZ SYMP SOFTW, P61, DOI 10.1109/SBCARS.2016.18
   Palomba F, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P482, DOI 10.1109/MSR.2015.69
   Pecorelli F, 2019, PROCEEDINGS OF THE 3RD ACM SIGSOFT INTERNATIONAL WORKSHOP ON MACHINE LEARNING TECHNIQUES FOR SOFTWARE QUALITY EVALUATION (MALTESQUE '19), P19, DOI 10.1145/3340482.3342744
   Platt JC, 1999, ADVANCES IN KERNEL METHODS, P185
   Proksch S., 2014, Proceedings of the 4th International Workshop on Recommendation Systems for Software Engineering, P14
   Quinlan J. R., 1993, PROGRAMS MACHINE LEA
   Rahman F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P432, DOI 10.1109/ICSE.2013.6606589
   RUMELHART DE, 1986, NATURE, V323, P533, DOI 10.1038/323533a0
   Sharma M., 2014, LEVERAGING WISDOM CR
   Stol Klass-Jan., 2014, Proceedings of the 1st International Workshop on CrowdSourcing in Software Engineering, P7, DOI DOI 10.1145/2593728.2593731
   STONE M, 1974, J R STAT SOC B, V36, P111, DOI 10.1111/j.2517-6161.1974.tb00994.x
   Tahir A., 2018, EASE 18, P68
   Travassos GH, 1999, ACM SIGPLAN NOTICES, V34, P47, DOI 10.1145/320385.320389
   Tsantalis N, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P4, DOI 10.1109/SANER.2018.8330192
   Wang C., 2015, INT J NETWORKING COM, V5, P180, DOI 10.15803/ijnc.5.1_180
   Yamashita A, 2013, INFORM SOFTWARE TECH, V55, P2223, DOI 10.1016/j.infsof.2013.08.002
   Zitzler E, 2003, IEEE T EVOLUT COMPUT, V7, P117, DOI 10.1109/TEVC.2003.810758
NR 41
TC 4
Z9 4
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAY
PY 2022
VL 27
IS 3
AR 69
DI 10.1007/s10664-021-10110-5
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZV2BV
UT WOS:000770339500010
DA 2024-07-18
ER

PT J
AU Asad, H
   Gashi, I
AF Asad, Hafizul
   Gashi, Ilir
TI Dynamical analysis of diversity in rule-based open source network
   intrusion detection systems
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Security; Diversity of Security Tools; Evolution of Diversity; Intrusion
   Detection Systems
ID GENERATION
AB Diverse layers of defence play an important role in the design of defence-in-depth architectures. The use of Intrusion Detection Systems (IDSs) are ubiquitous in this design. But the selection of the "right" IDSs in various configurations is an important decision that the security architects need to make. Additionally, the ability of these IDSs to adapt to the evolving threat-landscape also needs to be investigated. To help with these decisions, we need rigorous quantitative analysis. In this paper, we present a diversity analysis of open-source IDSs, Snort and Suricata, to help security architects tune/deploy these IDSs. We analyse two types of diversities in these IDSs; configurational diversity and functional diversity. In the configurational diversity analysis, we investigate the diversity in the sets of rules and the Blacklisted IP Addresses (BIPAs) these IDSs use in their configurations. The functional diversity analysis investigates the differences in alerting behaviours of these IDSs when they analyse real network traffic, and how these differences evolve. The configurational diversity experiment utilises snapshots of the rules and BIPAs collected over a period of 5 months, from May to October 2017. The snapshots have been collected for three different off-the-shelf default configurations of the Snort IDS and the Emerging Threats (ET) configuration of the Suricata IDS. The functional diversity investigates the alerting behaviour of these two IDSs for a sample of the real network traffic collected in the same time window. Analysing the differences in these systems allows us to get insights into where the diversity in the behaviour of these systems comes from, how does it evolve and whether this has any effect on the alerting behaviour of these IDSs. This analysis gives insight to security architects on how they can combine and layer these systems in a defence-in-depth deployment.
C1 [Asad, Hafizul] Univ Plymouth, Sch Engn Comp & Math, Plymouth, Devon, England.
   [Gashi, Ilir] Univ London, Sch Math Comp Sci & Engn, Dept Comp Sci, London, England.
C3 University of Plymouth; University of London
RP Gashi, I (corresponding author), Univ London, Sch Math Comp Sci & Engn, Dept Comp Sci, London, England.
EM hafizul.asad@plymouth.ac.uk; ilir.gashi.1@city.ac.uk
OI Asad, Hafiz ul/0000-0002-8506-5721; Gashi, Ilir/0000-0002-8017-3184
FU UK EPSRC [EP/M019462/1]; EU [700692]; EPSRC [EP/M019462/1] Funding
   Source: UKRI; H2020 Societal Challenges Programme [700692] Funding
   Source: H2020 Societal Challenges Programme
FX This work was supported by the UK EPSRC project D3S award number
   EP/M019462/1 and in part by the EU H2020 framework DiSIEM project award
   number 700692.
CR Ahmad Z, 2021, T EMERG TELECOMMUN T, V32, DOI 10.1002/ett.4150
   Alauthman M, 2020, J NETW COMPUT APPL, V150, DOI 10.1016/j.jnca.2019.102479
   Albin E., 2012, 2012 IEEE Workshops of International Conference on Advanced Information Networking and Applications (WAINA), P122, DOI 10.1109/WAINA.2012.29
   Algaith A, 2017, 2017 IEEE 16TH INTERNATIONAL SYMPOSIUM ON NETWORK COMPUTING AND APPLICATIONS (NCA), P19
   Alqahtani SM, 2016, PROCEEDINGS OF 2016 IEEE SYMPOSIUM SERIES ON COMPUTATIONAL INTELLIGENCE (SSCI)
   [Anonymous], 2013, 2013 10 INT C EL ENG
   Asad H, 2018, LECT NOTES COMPUT SC, V11093, P267, DOI 10.1007/978-3-319-99130-6_18
   AVIZIENIS A, 1984, COMPUTER, V17, P67, DOI 10.1109/MC.1984.1659219
   Cummings JJ, 2021, PULLEDPORK
   Garcia M, 2014, SOFTWARE PRACT EXPER, V44, P735, DOI 10.1002/spe.2180
   Garcia-Teodoro P, 2015, COMPUT SECUR, V55, P159, DOI 10.1016/j.cose.2015.09.007
   Gupta V, 2003, LECT NOTES COMPUT SC, V2847, P81
   Hiltunen MattiA., 2000, Proceedings DARPA Information Survivability Conference and Exposition. DISCEX'00, V1, P294
   Ho CY, 2012, IEEE COMMUN MAG, V50, P146, DOI 10.1109/MCOM.2012.6163595
   Hu QW, 2020, J INF SECUR APPL, V51, DOI 10.1016/j.jisa.2019.102426
   Kaur S, 2013, IEEE SECUR PRIV, V11, P54, DOI 10.1109/MSP.2013.51
   Littlewood B, 2004, LECT NOTES COMPUT SC, V3193, P423
   Lopez-Martin M, 2020, EXPERT SYST APPL, V141, DOI 10.1016/j.eswa.2019.112963
   Majorczyk F, 2007, P FEMS WRAITS 2007
   Milenkoski A, 2015, ACM COMPUT SURV, V48, DOI 10.1145/2808691
   Pathan A.-S.K., 2014, The State of the Art in Intrusion Prevention and Detection
   Pihelgas M, 2012, COMP ANAL OPEN SOURC
   Reynolds J, 2002, INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P285, DOI 10.1109/DSN.2002.1028912
   Salah K, 2010, J NETW COMPUT APPL, V33, P6, DOI 10.1016/j.jnca.2009.07.005
   Sanders WH, 2002, SUPPL VOL INT C DEP, P78
   Shah SAR, 2018, FUTURE GENER COMP SY, V80, P157, DOI 10.1016/j.future.2017.10.016
   Tidjon LN, 2019, IEEE COMMUN SURV TUT, V21, P3639, DOI 10.1109/COMST.2019.2922584
   van Niekerk B, 2015, ISACA J
   Wang X., 2013, RIIT 13 P 2 ACM ANN, DOI [10.1145/2512209.2512216, DOI 10.1145/2512209.2512216]
NR 29
TC 6
Z9 6
U1 2
U2 12
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN
PY 2022
VL 27
IS 1
AR 4
DI 10.1007/s10664-021-10046-w
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WL0WL
UT WOS:000710136400001
OA Green Submitted, hybrid, Green Accepted
DA 2024-07-18
ER

PT J
AU Liu, JK
   Zhang, HX
   Xia, X
   Lo, DV
   Zou, Y
   Hassan, AE
   Li, SP
AF Liu, Jiakun
   Zhang, Haoxiang
   Xia, Xin
   Lo, David
   Zou, Ying
   Hassan, Ahmed E.
   Li, Shanping
TI An exploratory study on the repeatedly shared external links on Stack
   Overflow
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Knowledge sharing; Stack overflow; External link
ID CODE
AB On Stack Overflow, users reuse 11,926,354 external links to share the resources hosted outside the Stack Overflow website. The external links connect to the existing programming-related knowledge and extend the crowdsourced knowledge on Stack Overflow. Some of the external links, so-called as repeated external links, can be shared for multiple times. We observe that 82.5% of the link sharing activities (i.e., sharing links in any question, answer, or comment) on Stack Overflow share external resources, and 57.0% of the occurrences of the external links are sharing the repeated external links. However, it is still unclear what types of external resources are repeatedly shared. To help users manage their knowledge, we wish to investigate the characteristics of the repeated external links in knowledge sharing on Stack Overflow. In this paper, we analyze the repeated external links on Stack Overflow. We observe that external links that point to the text resources (hosted in documentation websites, tutorial websites, etc.) are repeatedly shared the most. We observe that different users repeatedly share the same knowledge in the form of repeated external links, thus increasing the maintenance effort of knowledge (e.g., update invalid links in multiple posts). The repeated external links can bring risks to the software engineering process, as 1) the same users can repeatedly share the external links for the purpose of promotion, and 2) external links can point to webpages with an overload of information that makes it difficult for users to retrieve relevant information. Our findings provide insights to Stack Overflow moderators and researchers. For example, we encourage Stack Overflow to centrally manage the commonly occurring knowledge in the form of repeated external links in order to better maintain the crowdsourced knowledge on Stack Overflow.
C1 [Liu, Jiakun; Li, Shanping] Zhejiang Univ, Coll Comp Sci & Technol, Hangzhou, Peoples R China.
   [Zhang, Haoxiang] Ctr Software Excellence Huawei, Toronto, ON, Canada.
   [Xia, Xin] Huawei, Software Engn Applicat Technol Lab, Hangzhou, Peoples R China.
   [Lo, David] Singapore Management Univ, Sch Informat Syst, Singapore, Singapore.
   [Zou, Ying; Hassan, Ahmed E.] Queens Univ, Kingston, ON, Canada.
C3 Zhejiang University; Huawei Technologies; Singapore Management
   University; Queens University - Canada
RP Xia, X (corresponding author), Huawei, Software Engn Applicat Technol Lab, Hangzhou, Peoples R China.
EM jkliu@zju.edu.cn; haoxiang.zhang@huawei.com; xin.xia@acm.org;
   davidlo@smu.edu.sg; ying.zou@queensu.ca; ahmed@cs.queensu.ca;
   shan@zju.edu.cn
RI Xia, Xin/AAD-6217-2022; KHALIFA, AHMED khalifa/HKF-2246-2023; Zou,
   Ying/KLC-9380-2024; Lo, David/A-2493-2012
OI Xia, Xin/0000-0002-6302-3256; KHALIFA, AHMED
   khalifa/0000-0002-2918-7572; Lo, David/0000-0002-4367-7201
FU National Science Foundation of China [U20A20173]; Key Research and
   Development Program of Zhejiang Province [2021C01014]; National Research
   Foundation, Singapore under its Industry Alignment Fund-Prepositioning
   (IAF-PP) Funding Initiative
FX This research was partially supported by the National Science Foundation
   of China (No. U20A20173), Key Research and Development Program of
   Zhejiang Province (No.2021C01014), and the National Research Foundation,
   Singapore under its Industry Alignment Fund -Prepositioning (IAF-PP)
   Funding Initiative. Any opinions, findings, and conclusions, or
   recommendations expressed in this material are those of the author(s)
   and do not reflect the views of Huawei and the National Research
   Foundation, Singapore.
CR An L, 2017, STACK OVERFLOW CODE
   Anderson Ashton, 2012, P 18 ACM SIGKDD INT, DOI DOI 10.1145/2339530.2339665
   Bajaj K, 2014, P 11 WORK C MIN SOFT, P112
   Baltes Sebastian, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P191, DOI 10.1109/MSR.2019.00038
   Baltes S, 2020, IEEE T SOFTWARE ENG
   Baltes S, 2018, IEEE WORK CONF MIN S, P319, DOI 10.1145/3196398.3196430
   Barua A, 2014, EMPIR SOFTW ENG, V19, P619, DOI 10.1007/s10664-012-9231-y
   Benesty J, 2009, SPRINGER TOP SIGN PR, V2, P1, DOI 10.1007/978-3-642-00296-0_1
   Berners-Lee T., 2005, 3986 RFC, DOI DOI 10.17487/RFC3986
   Cai L, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P1075, DOI 10.1145/3338906.3341174
   Cavusoglu H., 2015, P ACM C COMPUTER SUP, V2015, P171, DOI DOI 10.1145/2685553.2698999
   Chen C., 2018, PROC ACM HUM COMPUT, V2, p33:1
   Chen FX, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P320, DOI 10.1145/2786805.2786819
   Chen MS, 2019, PROC INT CONF SOFTW, P536, DOI 10.1109/ICSE.2019.00065
   Cheng CL, 2017, 2017 12TH INTERNATIONAL CONFERENCE ON INTELLIGENT SYSTEMS AND KNOWLEDGE ENGINEERING (IEEE ISKE), DOI 10.1109/ULTSYM.2017.8091659
   Correa D, 2013, IEEE AUS SOFT ENGR, P88, DOI 10.1109/ASWEC.2013.20
   Dang Van, 2010, INT C WEB SEARCH DAT, P41, DOI DOI 10.1145/1718487.1718493
   Gao S, 2017, IEEE INT C ENG COMP, P90, DOI 10.1109/ICECCS.2017.30
   Gómez C, 2013, IEEE WORK CONF MIN S, P81, DOI 10.1109/MSR.2013.6624011
   Hanrahan BV, 2012, P ACM 2012 C COMP SU, P91, DOI DOI 10.1145/2141512.2141550
   Huang Q, 2018, IEEE INT CONF AUTOM, P293, DOI 10.1145/3238147.3238191
   Li G, 2015, PROCEEDINGS OF THE 2015 ACM INTERNATIONAL CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING (CSCW'15), P1080, DOI 10.1145/2675133.2675155
   Linares-Vasquez M., 2014, P 22 INT C PROGR COM, P83, DOI DOI 10.1145/2597008.2597155
   Liu J, EMSE J UNPUB
   Liu J, 2020, ARXIV201004892
   MacLeod L, 2015, INT C PROGRAM COMPRE, P104, DOI 10.1109/ICPC.2015.19
   Mamykina L, 2011, 29TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P2857
   Newman MEJ, 2005, CONTEMP PHYS, V46, P323, DOI 10.1080/00107510500052444
   PAL A, 2012, P 6 INT AAAI C WEBL, P274, DOI DOI 10.1609/ICWSM.V6I1.14262
   Ponzanelli L, 2016, PROC INT CONF SOFTW, P261, DOI 10.1145/2884781.2884824
   Ponzanelli L, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P645, DOI 10.1145/2889160.2889172
   Ragkhitwetsagul C, 2018, ARXIV180607659
   Rahman MM, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P194, DOI 10.1109/CSMR-WCRE.2014.6747170
   Rath M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P834, DOI 10.1145/3180155.3180207
   Rosen C, 2016, EMPIR SOFTW ENG, V21, P1192, DOI 10.1007/s10664-015-9379-3
   SAHA RK, 2013, P 2013 9 JOINT M FDN, P663, DOI DOI 10.1145/2491411.2494585
   Spencer D., 2009, CARD SORTING DESIGNI
   Viera AJ, 2005, FAM MED, V37, P360
   WANG S, 2018, IEEE T SOFTW ENG
   Wang SW, 2014, PROC IEEE INT CONF S, P291, DOI 10.1109/ICSME.2014.51
   Wang T, 2015, 9TH IEEE INTERNATIONAL SYMPOSIUM ON SERVICE-ORIENTED SYSTEM ENGINEERING (SOSE 2015), P107, DOI 10.1109/SOSE.2015.34
   Wu YH, 2019, EMPIR SOFTW ENG, V24, P637, DOI 10.1007/s10664-018-9634-5
   Xia X, 2017, EMPIR SOFTW ENG, V22, P3149, DOI 10.1007/s10664-017-9514-4
   Xu BW, 2016, IEEE INT CONF AUTOM, P51, DOI 10.1145/2970276.2970357
   Ye DH, 2017, EMPIR SOFTW ENG, V22, P375, DOI 10.1007/s10664-016-9430-z
   Zhang H, 2019, IEEE T SOFTWARE ENG, V47, P1
   Zhang HX, 2021, IEEE T SOFTWARE ENG, V47, P850, DOI 10.1109/TSE.2019.2906315
NR 47
TC 2
Z9 2
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN
PY 2022
VL 27
IS 1
AR 19
DI 10.1007/s10664-021-10028-y
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WQ8AA
UT WOS:000714032200002
DA 2024-07-18
ER

PT J
AU Wang, PP
   Brown, C
   Jennings, JA
   Stolee, KT
AF Wang, Peipei
   Brown, Chris
   Jennings, Jamie A.
   Stolee, Kathryn T.
TI Demystifying regular expression bugs A comprehensive study on regular
   expression bug causes, fixes, and testing
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Regular expression bug characteristics; Pull requests; Bug fixes; Test
   code
AB Regular expressions cause string-related bugs and open security vulnerabilities for DOS attacks. However, beyond ReDoS (Regular expression Denial of Service), little is known about the extent to which regular expression issues affect software development and how these issues are addressed in practice. We conduct an empirical study of 356 regex-related bugs from merged pull requests in Apache, Mozilla, Facebook, and Google GitHub repositories. We identify and classify the nature of the regular expression problems, the fixes, and the related changes in the test code. The most important findings in this paper are as follows: 1) incorrect regular expression semantics is the dominant root cause of regular expression bugs (165/356, 46.3%). The remaining root causes are incorrect API usage (9.3%) and other code issues that require regular expression changes in the fix (29.5%), 2) fixing regular expression bugs is nontrivial as it takes more time and more lines of code to fix them compared to the general pull requests, 3) most (51%) of the regex-related pull requests do not contain test code changes. Certain regex bug types (e.g., compile error, performance issues, regex representation) are less likely to include test code changes than others, and 4) the dominant type of test code changes in regex-related pull requests is test case addition (75%). The results of this study contribute to a broader understanding of the practical problems faced by developers when using, fixing, and testing regular expressions.
C1 [Wang, Peipei] ByteDance, Infrastruct Syst Lab, Seattle, WA 98104 USA.
   [Brown, Chris] Virginia Tech, Dept Comp Sci, Blacksburg, VA USA.
   [Jennings, Jamie A.; Stolee, Kathryn T.] North Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
C3 Virginia Polytechnic Institute & State University; North Carolina State
   University
RP Wang, PP (corresponding author), ByteDance, Infrastruct Syst Lab, Seattle, WA 98104 USA.
EM peipei.wang@bytedance.com; dcbrown@vt.edu; jjennings@ncsu.edu;
   ktstolee@ncsu.edu
OI Stolee, Kathryn/0000-0003-0584-7094; Wang, Peipei/0000-0001-6179-9790;
   Brown, Chris/0000-0002-6036-4733
FU National Science Foundation [1714699]; Division of Computing and
   Communication Foundations; Direct For Computer & Info Scie & Enginr
   [1714699] Funding Source: National Science Foundation
FX This material is based upon work supported by the National Science
   Foundation under Grant No. 1714699.
CR Amann S, 2019, IEEE T SOFTWARE ENG, V45, P1170, DOI 10.1109/TSE.2018.2827384
   Amann S, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P464, DOI [10.1145/2901739.2903506, 10.1109/MSR.2016.055]
   [Anonymous], 2014, GITHUT PROGRAMMING L
   [Anonymous], 2015, PYTEST NAMING CONVEN
   [Anonymous], 2021, SKEWNESS R TUTORIAL
   [Anonymous], 2011, YOU SHOULD NOT USE R
   [Anonymous], 2021, PERL COMPATIBLE REGU
   [Anonymous], 2015, PEARSONS MOMENT COEF
   [Anonymous], 2020, GITHUB GRAPHQL API V
   [Anonymous], 2011, Proceedings of the 19th ACM SIGSOFT symposium and the 13th European conference on Foundations of software engineering (FSE'11), DOI [10.1145/2025113.2025121, DOI 10.1145/2025113.2025121]
   [Anonymous], 2017, REPLACING COMPLEX RE
   [Anonymous], 2020, DAT COMPR STUD REG, DOI [10.6084/m9.figshare.13234538.v1, DOI 10.6084/M9.FIGSHARE.13234538.V1]
   [Anonymous], 2021, REGEXP TREE NPM
   [Anonymous], 2020, PYGITHUB PYGITHUB 14
   [Anonymous], 2018, REFACTORING IMPROVIN
   [Anonymous], 2005, REGEX USE VS REGEX A
   Bae S, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P507, DOI 10.1145/2635868.2635916
   Bai GR, 2019, INT C PROGRAM COMPRE, P197, DOI 10.1109/ICPC.2019.00039
   Bartoli A, 2016, IEEE T KNOWL DATA EN, V28, P1217, DOI 10.1109/TKDE.2016.2515587
   Beller M, 2017, IEEE WORK CONF MIN S, P356, DOI 10.1109/MSR.2017.62
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Chapman C., 2016, P 25 INT S SOFTWARE, P282, DOI DOI 10.1145/2931037.2931073
   Chapman C, 2017, IEEE INT CONF AUTOM, P405, DOI 10.1109/ASE.2017.8115653
   Chen QC, 2020, PROCEEDINGS OF THE 41ST ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '20), P487, DOI 10.1145/3385412.3385988
   Cody-Kenny B, 2017, PROCEEDINGS OF THE 2017 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE (GECCO'17), P1280, DOI 10.1145/3071178.3071196
   Coelho R, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P134, DOI 10.1109/MSR.2015.20
   Davis JC, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P427, DOI 10.1109/ASE.2019.00048
   Davis JC, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P443, DOI 10.1145/3338906.3338909
   Davis JC, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P246, DOI 10.1145/3236024.3236027
   Davis JC, 2021, 2021 IEEE S SEC PRIV
   Deokyoon Ko, 2014, 2014 21st Asia-Pacific Software Engineering Conference (APSEC), P27, DOI 10.1109/APSEC.2014.87
   Di Franco A, 2017, IEEE INT CONF AUTOM, P509, DOI 10.1109/ASE.2017.8115662
   Dig D, 2006, J SOFTW MAINT EVOL-R, V18, P83, DOI 10.1002/smr.328
   Eghbali A, 2020, IEEE INT CONF AUTOM, P956, DOI 10.1145/3324884.3416576
   Gousios G., 2014, Proceedings of the Conference on Mining Software Repositories (MSR), MSR 2014, P368, DOI 10.1145/2597073.2597122
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   Gu ZX, 2019, P INT COMP SOFTW APP, P11, DOI 10.1109/COMPSAC.2019.00012
   Gyimesi P, 2019, IEEE INT CONF SOFTW, P90, DOI 10.1109/ICST.2019.00019
   Herzig K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P392, DOI 10.1109/ICSE.2013.6606585
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Kabinna S, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P154, DOI [10.1145/2901739.2901769, 10.1109/MSR.2016.025]
   Kalliamvakou E., 2014, P 11 WORKING C MININ, P92, DOI DOI 10.1145/2597073.2597074
   Kapur P, 2010, ACM SIGPLAN NOTICES, V45, P726, DOI 10.1145/1932682.1869518
   Kechagia M, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P192, DOI 10.1145/3293882.3330552
   Khomh F, 2009, WORK CONF REVERSE EN, P75, DOI 10.1109/WCRE.2009.28
   Kim M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P151, DOI 10.1145/1985793.1985815
   Kochhar PS, 2013, EUR CON SFTWR MTNCE, P353, DOI 10.1109/CSMR.2013.48
   Larson E, 2016, IEEE INT CONF SOFTW, P309, DOI 10.1109/ICST.2016.29
   Locascio N., 2016, P 2016 C EMPIRICAL M, P1918
   Lou YL, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P617, DOI 10.1145/3368089.3409760
   Lu J, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P399, DOI [10.1109/saner.2019.8668027, 10.1109/SANER.2019.8668027]
   Lu S, 2008, ACM SIGPLAN NOTICES, V43, P329, DOI 10.1145/1353536.1346323
   Ma WWY, 2017, PROC INT CONF SOFTW, P381, DOI 10.1109/ICSE.2017.42
   Maalej W, 2015, INT REQUIR ENG CONF, P116, DOI 10.1109/RE.2015.7320414
   Madeiral F, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P468, DOI [10.1109/saner.2019.8667991, 10.1109/SANER.2019.8667991]
   Majumder S, 2019, ARXIV190409954
   Marsavina C, 2014, IEEE INT WORK C SO, P195, DOI 10.1109/SCAM.2014.28
   Michael LG, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P415, DOI 10.1109/ASE.2019.00047
   Mileva YM, 2009, IWPSE-EVOL 09: ERCIM WORKSHOP ON SOFTWARE EVOLUTION (EVOL) AND INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION (IWPSE), P57
   Mileva YM, 2010, LECT NOTES COMPUT SC, V6303, P173, DOI 10.1007/978-3-642-15585-7_17
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Moller Anders., 2017, dk.brics.automaton-finitestate automata and regular expressions for Java
   Munaiah N, 2017, EMPIR SOFTW ENG, V22, P3219, DOI 10.1007/s10664-017-9512-6
   Ohira Masao, 2016, 2016 IEEEACIS 15 INT, P1
   Palomba F, 2013, IEEE INT CONF AUTOM, P268, DOI 10.1109/ASE.2013.6693086
   Park JU, 2019, 2019 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING AND THE 9TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING (EMNLP-IJCNLP 2019), P6425
   Peipei Wang, 2020, MSR '20: Proceedings of the 17th International Conference on Mining Software Repositories, P103, DOI 10.1145/3379597.3387464
   Perkins Jeff H., 2005, PASTE 05, P111, DOI DOI 10.1145/1108768.1108818
   Pham R, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P112, DOI 10.1109/ICSE.2013.6606557
   Pingclasai N, 2013, ASIA PAC SOFWR ENG, P13, DOI 10.1109/APSEC.2013.105
   Pinto LeandroSales., 2012, P ACM SIGSOFT 20 INT, p33:1
   Rahman M.M., 2014, P 11 WORKING C MININ, P364, DOI DOI 10.1145/2597073.2597121
   Saha RK, 2018, IEEE WORK CONF MIN S, P10, DOI 10.1145/3196398.3196473
   Selakovic M, 2016, PROC INT CONF SOFTW, P61, DOI 10.1145/2884781.2884829
   Sharma T, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P189, DOI [10.1109/MSR.2016.028, 10.1145/2901739.2901761]
   Shen YJ, 2018, IEEE INT CONF AUTOM, P225, DOI 10.1145/3238147.3238159
   Shi L, 2011, LECT NOTES COMPUT SC, V6603, P416, DOI 10.1007/978-3-642-19811-3_29
   Spishak Eric, 2012, P 14 WORKSHOP FORMAL, P20, DOI DOI 10.1145/2318202.2318207
   Staicu CA, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P361
   Tan L, 2014, EMPIR SOFTW ENG, V19, P1665, DOI 10.1007/s10664-013-9258-8
   Teyton C., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P289, DOI 10.1109/WCRE.2012.38
   Thung F, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P602, DOI [10.1109/SANER48275.2020.9054860, 10.1109/saner48275.2020.9054860]
   Tufano M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P403, DOI 10.1109/ICSE.2015.59
   Vahabzadeh A, 2015, PROC IEEE INT CONF S, P101, DOI 10.1109/ICSM.2015.7332456
   Veanes Margus, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P498, DOI 10.1109/ICST.2010.15
   Wan ZY, 2017, IEEE WORK CONF MIN S, P413, DOI 10.1109/MSR.2017.59
   Wang PP, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P502, DOI [10.1109/SANER.2019.8667972, 10.1109/saner.2019.8667972]
   Wang PP, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P668, DOI 10.1145/3236024.3236072
   Wang X, 2019, PROCEEDINGS OF THE 16TH USENIX SYMPOSIUM ON NETWORKED SYSTEMS DESIGN AND IMPLEMENTATION, P631
   Widyasari R, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1556, DOI 10.1145/3368089.3417943
   Wu L, 2015, P INT COMP SOFTW APP, P316, DOI 10.1109/COMPSAC.2015.29
   Wüstholz V, 2017, LECT NOTES COMPUT SC, V10206, P3, DOI 10.1007/978-3-662-54580-5_1
   Ye X, 2019, ARXIV190805848
   Yu S, 2018, PROCEEDINGS OF THE 1ST ACM SIGCAS CONFERENCE ON COMPUTING AND SUSTAINABLE SOCIETIES (COMPASS 2018), DOI 10.1145/3209811.3209863
   Zaidman Andy, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P220, DOI 10.1109/ICST.2008.47
   Zhang YH, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P129, DOI 10.1145/3213846.3213866
   Zhang ZJ, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2021), P238, DOI 10.1109/ICSE-SEIP52600.2021.00033
   Zhong H, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P913, DOI 10.1109/ICSE.2015.101
   Zhong H, 2009, LECT NOTES COMPUT SC, V5653, P318, DOI 10.1007/978-3-642-03013-0_15
   Zhong ZX, 2018, 2018 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2018), P1608
NR 100
TC 2
Z9 2
U1 0
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN
PY 2022
VL 27
IS 1
AR 21
DI 10.1007/s10664-021-10033-1
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WS0XV
UT WOS:000714913900001
DA 2024-07-18
ER

PT J
AU Ulan, M
   Löwe, W
   Ericsson, M
   Wingkvist, A
AF Ulan, Maria
   Lowe, Welf
   Ericsson, Morgan
   Wingkvist, Anna
TI Weighted software metrics aggregation and its application to defect
   prediction
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software assessment; Quantitative methods; Defect prediction; Software
   metrics; Aggregation; Weighting
ID QUALITY; FAULTS; VALIDATION
AB It is a well-known practice in software engineering to aggregate software metrics to assess software artifacts for various purposes, such as their maintainability or their proneness to contain bugs. For different purposes, different metrics might be relevant. However, weighting these software metrics according to their contribution to the respective purpose is a challenging task. Manual approaches based on experts do not scale with the number of metrics. Also, experts get confused if the metrics are not independent, which is rarely the case. Automated approaches based on supervised learning require reliable and generalizable training data, a ground truth, which is rarely available. We propose an automated approach to weighted metrics aggregation that is based on unsupervised learning. It sets metrics scores and their weights based on probability theory and aggregates them. To evaluate the effectiveness, we conducted two empirical studies on defect prediction, one on ca. 200 000 code changes, and another ca. 5 000 software classes. The results show that our approach can be used as an agnostic unsupervised predictor in the absence of a ground truth.
C1 [Ulan, Maria; Lowe, Welf; Ericsson, Morgan; Wingkvist, Anna] Linnaeus Univ, Data Driven Software & Informat Qual Grp, Ctr Data Intens Sci & Applicat, S-35195 Vaxjo, Sweden.
C3 Linnaeus University
RP Ulan, M (corresponding author), Linnaeus Univ, Data Driven Software & Informat Qual Grp, Ctr Data Intens Sci & Applicat, S-35195 Vaxjo, Sweden.
EM maria.ulan@lnu.se; welf.lowe@lnu.se; morgan.ericsson@lnu.se;
   anna.wingkvist@lnu.se
RI Ulan, Maria/GXZ-8607-2022
OI Ulan, Maria/0000-0002-3906-7611
FU Linnaeus University
FX Open access funding provided by Linnaeus University.
CR [Anonymous], 2007, INTRO COPULAS, DOI DOI 10.1007/0-387-28678-0
   [Anonymous], 1990, IEEE Std 610.12-1990, V42, P112, DOI [10.1109/IEEESTD.1990.101064, DOI 10.1109/IEEESTD.1990.101064]
   Arisholm E, 2010, J SYST SOFTWARE, V83, P2, DOI 10.1016/j.jss.2009.06.055
   Baggen R, 2012, SOFTWARE QUAL J, V20, P287, DOI 10.1007/s11219-011-9144-9
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Borsboom D, 2003, PSYCHOL REV, V110, P203, DOI 10.1037/0033-295X.110.2.203
   Calvo T, 2002, STUD FUZZ SOFT COMP, V97, P3
   CARLSSON C, 1995, COMPUT OPER RES, V22, P251, DOI 10.1016/0305-0548(94)E0023-Z
   Chen X, 2018, INFORM SOFTWARE TECH, V93, P1, DOI 10.1016/j.infsof.2017.08.004
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Choo EU, 1999, COMPUT IND ENG, V37, P527, DOI 10.1016/S0360-8352(00)00019-X
   D'Ambros Marco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P31, DOI 10.1109/MSR.2010.5463279
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Fenton N., 2014, Software Metrics: A Rigorous and Practical Approach, V3rd, DOI DOI 10.1201/B17461
   Ferenc R, 2020, J SYST SOFTWARE, V169, DOI 10.1016/j.jss.2020.110691
   Fu W, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P72, DOI 10.1145/3106237.3106257
   GARVIN DA, 1984, SLOAN MANAGE REV, V26, P25
   Gil Y, 2017, EMPIR SOFTW ENG, V22, P2585, DOI 10.1007/s10664-017-9513-5
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Henderson-Sellers B., 1995, Object-oriented metrics: measures of complexity
   Hinton GE, 2003, ADV NEURAL INFORM PR, V15
   Huang Q, 2019, EMPIR SOFTW ENG, V24, P2823, DOI 10.1007/s10664-018-9661-2
   ISO/IEC, 2010, Technical report
   Jiarpakdee J, 2020, EMPIR SOFTW ENG, V25, P3590, DOI 10.1007/s10664-020-09848-1
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Khoshgoftaar T. M., 1999, Empirical Software Engineering, V4, P159, DOI 10.1023/A:1009876418873
   Kim S, 2007, PROC INT CONF SOFTW, P489
   Koru AG, 2009, IEEE T SOFTWARE ENG, V35, P293, DOI 10.1109/TSE.2008.90
   Letouzey Jean-Louis, 2010, Proceedings 2010 Second International Conference on Advances in System Testing and Validation Lifecycle (VALID), P43, DOI 10.1109/VALID.2010.31
   Linstone H. A., 1975, The Delphi method: addison-wesley reading
   Liu JP, 2017, INT SYMP EMP SOFTWAR, P11, DOI 10.1109/ESEM.2017.8
   Mai JF, 2009, J MULTIVARIATE ANAL, V100, P1567, DOI 10.1016/j.jmva.2009.01.010
   Marichal JL, 2000, IEEE T FUZZY SYST, V8, P800, DOI 10.1109/91.890347
   Martin R. C., 2002, AGILE SOFTWARE DEV P
   Mende T., 2009, P 5 INT C PREDICTOR, P1, DOI [10.1145/1540438.1540448, DOI 10.1145/1540438.1540448]
   Mende T, 2010, EUR CON SFTWR MTNCE, P107, DOI 10.1109/CSMR.2010.18
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Menzies T, 2010, AUTOMAT SOFTW ENG, V17, P375, DOI 10.1007/s10515-010-0069-5
   Mockus A, 2000, BELL LABS TECH J, V5, P169, DOI 10.1002/bltj.2229
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Newbold P., 2013, STAT BUSINESS EC
   Nikora AP, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P338, DOI 10.1109/METRIC.2003.1232479
   Ohlsson N, 1996, IEEE T SOFTWARE ENG, V22, P886, DOI 10.1109/32.553637
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   Pearson K, 1901, PHILOS MAG, V2, P559, DOI 10.1080/14786440109462720
   Saaty T. L., 2008, INT J SERV SCI, V1, P83, DOI [10.1504/IJSSCI.2008.017590, DOI 10.1504/IJSSCI.2008.017590]
   Saaty T.L., 1996, DECISION MAKING DEPE, V4922
   SCHENKERMAN S, 1991, DECISION SCI, V22, P369, DOI 10.1111/j.1540-5915.1991.tb00352.x
   STEIGER JH, 1980, PSYCHOL BULL, V87, P245, DOI 10.1037/0033-2909.87.2.245
   Triantaphyllou E., 2000, MULTICRITERIA DECISI, P5, DOI [10.1007/978-1-4757-3157-6_2, DOI 10.1007/978-1-4757-3157-6_2, 10.1007/978-1-4757-3157-62, DOI 10.1007/978-1-4757-3157-62]
   van der Maaten L, 2008, J MACH LEARN RES, V9, P2579
   vander Maaten L., 2009, J MACH LEARN RES, V10, P13, DOI [10.1080/13506280444000102, DOI 10.1080/13506280444000102]
   Wagner S., 2013, SOFTWARE PRODUCT QUA, DOI DOI 10.1007/978-3-642-38571-1
   Wagner S, 2015, INFORM SOFTWARE TECH, V62, P101, DOI 10.1016/j.infsof.2015.02.009
   WANG MW, 1970, REV EDUC RES, V40, P663, DOI 10.2307/1169462
   Yang XL, 2017, INFORM SOFTWARE TECH, V87, P206, DOI 10.1016/j.infsof.2017.03.007
   Yang YB, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P157, DOI 10.1145/2950290.2950353
   Zeleny M., 2012, Multiple Criteria Decision Making Kyoto 1975
NR 63
TC 4
Z9 4
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2021
VL 26
IS 5
AR 86
DI 10.1007/s10664-021-09984-2
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA SX2QB
UT WOS:000665053900001
OA hybrid
DA 2024-07-18
ER

PT J
AU Foundjem, A
   Adams, B
AF Foundjem, Armstrong
   Adams, Bram
TI Release synchronization in software ecosystems Empirical Study on
   OpenStack
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
AB Software ecosystems bring value by integrating software projects related to a given domain, such as Linux distributions integrating upstream open-source projects or the Android ecosystem for mobile Apps. Since each project within an ecosystem may potentially have its release cycle and roadmap, this creates an enormous burden for users who must expend the effort to identify and install compatible project releases from the ecosystem manually. Thus, many ecosystems, such as the Linux distributions, take it upon them to release a polished, well-integrated product to the end-user. However, the body of knowledge lacks empirical evidence about the coordination and synchronization efforts needed at the ecosystem level to ensure such federated releases. This paper empirically studies the strategies used to synchronize releases of ecosystem projects in the context of the OpenStack ecosystem, in which a central release team manages the six-month release cycle of the overall OpenStack ecosystem product. We use qualitative analysis on the release team's IRC-meeting logs that comprise two OpenStack releases (one-year long). Thus, we identified, cataloged, and documented ten major release synchronization activities, which we further validated through interviews with eight active OpenStack senior practitioners (members of either the release team or project teams). Our results suggest that even though an ecosystem's power lies in the interaction of inter-dependent projects, release synchronization remains a challenge for both the release team and the project teams. Moreover, we found evidence (and reasons) of multiple release strategies co-existing within a complex ecosystem.
C1 [Foundjem, Armstrong; Adams, Bram] Queens Univ, Kingston, ON, Canada.
C3 Queens University - Canada
RP Foundjem, A (corresponding author), Queens Univ, Kingston, ON, Canada.
EM a.foundjem@queensu.ca; bram.adams@queensu.ca
RI Foundjem, Armstrong/JGE-5293-2023
OI Adams, Bram/0000-0001-7213-4006
CR Adams B, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 5, P78, DOI 10.1109/SANER.2016.108
   Adams B, 2016, EMPIR SOFTW ENG, V21, P960, DOI 10.1007/s10664-015-9371-y
   [Anonymous], 2020, **DATA OBJECT**, DOI [10.5281/zenodo.4304682, DOI 10.5281/ZENODO.4304682]
   [Anonymous], 2011, IWSECO@ ICSOB
   [Anonymous], 2018, Version 8.0.35, web application for managing, analyzing
   Binns R, 2018, WEBSCI'18: PROCEEDINGS OF THE 10TH ACM CONFERENCE ON WEB SCIENCE, P23, DOI 10.1145/3201064.3201089
   Bird Christian., 2016, Perspectives on Data Science for Software Engineering
   Bogart C, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P109, DOI 10.1145/2950290.2950325
   Bosch J., 2002, Software Product Lines. Second International Conference, SPLC 2. Proceedings (Lecture Notes in Computer Science Vol. 2370), P257
   Constantinou E, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P34, DOI 10.1109/SANER.2017.7884607
   de Souza CRB, 2016, 34TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, CHI 2016, P3204, DOI 10.1145/2858036.2858431
   Decan A, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P2, DOI 10.1109/SANER.2017.7884604
   DiCosola BM, 2020, CHI'20: EXTENDED ABSTRACTS OF THE 2020 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, DOI 10.1145/3334480.3382877
   DiStaso MW, 2012, PUBLIC RELAT REV, V38, P511, DOI 10.1016/j.pubrev.2012.01.003
   Drouhard M, 2017, IEEE PAC VIS SYMP, P220, DOI 10.1109/PACIFICVIS.2017.8031598
   Dueñas S, 2018, PROC IEEE ACM INT C, P1, DOI 10.1145/3183440.3183475
   Dyck A, 2015, 2015 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON RELEASE ENGINEERING, P3, DOI 10.1109/RELENG.2015.10
   Ford D, 2017, INT SYMP EMP SOFTWAR, P394, DOI 10.1109/ESEM.2017.54
   Foundjem A, 2017, IEEE INT CONF SOFTW, P219, DOI 10.1109/ICST.2017.27
   Franch X, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P894, DOI 10.1145/2889160.2891051
   German D. M., 2003, Software Process Improvement and Practice, V8, P201, DOI 10.1002/spip.189
   German DM, 2013, EUR CON SFTWR MTNCE, P243, DOI 10.1109/CSMR.2013.33
   Gómez M, 2017, IEEE SOFTWARE, V34, P81, DOI 10.1109/MS.2017.46
   Grudin Jonathan., 2002, Proc. PDC, V2
   Hoepfl M.C., 1997, CHOOSING QUALITATIVE, V9
   Humble Jez, 2010, Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation
   Nguyen H, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON PROGNOSTICS AND HEALTH MANAGEMENT (ICPHM), P214, DOI 10.1109/ICPHM.2017.7998331
   Iansiti M., 2006, ANTITRUST BULL, V51, P77, DOI DOI 10.1177/0003603X0605100104
   Jansen S, 2013, SOFTWARE ECOSYSTEMS: ANALYZING AND MANAGING BUSINESS NETWORKS IN THE SOFTWARE INDUSTRY, P13
   Khomh F., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P179, DOI 10.1109/MSR.2012.6224279
   Kikas R, 2017, IEEE WORK CONF MIN S, P102, DOI 10.1109/MSR.2017.55
   Laukkanen E, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P23, DOI 10.1109/ICSE-SEIP.2017.21
   Liu F, 2019, IEEE ACCESS, V7, P102554, DOI 10.1109/ACCESS.2019.2926986
   Longoria FG, 2016, 3 REASONS OPENSTACK
   Manikas K, 2013, J SYST SOFTWARE, V86, P1294, DOI 10.1016/j.jss.2012.12.026
   Mäntylä MV, 2015, EMPIR SOFTW ENG, V20, P1384, DOI 10.1007/s10664-014-9338-4
   McDonald Nora, 2019, Proceedings of the ACM on Human-Computer Interaction, V3, DOI 10.1145/3359174
   Mens T, 2017, BENEVOL 2017 DEC 201
   Nayebi M, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P552, DOI 10.1109/SANER.2016.116
   Parnin C, 2020, P 42 INT C SOFTW ENG
   Plakidas Konstantinos., 2016, Proceedings of the 20th International Systems and Software Product Line Conference, SPLC'16, P89, DOI DOI 10.1145/2934466.2934488
   Poo-Caamaño G, 2016, IFIP ADV INF COMM TE, V472, P147, DOI 10.1007/978-3-319-39225-7_12
   Rahman A, 2019, PROC INT CONF SOFTW, P164, DOI 10.1109/ICSE.2019.00033
   Rahman MT, 2015, IEEE SOFTWARE, V32, P80
   Saldana J., 2015, The coding manual for qualitative researchers
   Schelter S, 2018, PROC VLDB ENDOW, V11, P1781, DOI 10.14778/3229863.3229867
   Shihab E, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P107, DOI 10.1109/MSR.2009.5069488
   Steglich C, 2019, 2019 IEEE/ACM 12TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE 2019), P99, DOI 10.1109/CHASE.2019.00032
   Strauss A., 1990, BASICS QUALITATIVE R
   Tamburri DA, 2016, IEEE SOFTWARE, V33, P70, DOI 10.1109/MS.2016.144
   Teixeira JA, 2019, J INTERNET SERV APPL, V10, DOI 10.1186/s13174-019-0105-z
   Ur Rahman AA, 2015, 2015 AGILE CONFERENCE, P1, DOI 10.1109/Agile.2015.12
   Wong C-P, 2020, P INT C SOFTW ENG SO
   Yin R.K., 2014, Case study research: Design and methods, V5th, DOI DOI 10.1080/09500790.2011.582317
   Zhang X, 2016, 34TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, CHI 2016, P5350, DOI 10.1145/2858036.2858523
   Zhang Y, 2020, DO CO COLLABORATE OP, P1196, DOI [10.1145/3377811.3380376, DOI 10.1145/3377811.3380376]
NR 56
TC 6
Z9 7
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAY
PY 2021
VL 26
IS 3
AR 34
DI 10.1007/s10664-020-09929-1
PG 50
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QY9QB
UT WOS:000630369400001
DA 2024-07-18
ER

PT J
AU Oliveira, W
   Oliveira, R
   Castor, F
   Pinto, G
   Fernandes, JP
AF Oliveira, Wellington
   Oliveira, Renato
   Castor, Fernando
   Pinto, Gustavo
   Fernandes, Joao Paulo
TI Improving energy-efficiency by recommending Java collections
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Energy consumption; Collections; Recommendation systems
ID CONSUMPTION
AB Over the last years, increasing attention has been given to creating energy-efficient software systems. However, developers still lack the knowledge and the tools to support them in that task. In this work, we explore our vision that non-specialists can build software that consumes less energy by alternating diversely-designed pieces of software without increasing the development complexity. To support our vision, we propose an approach for energy-aware development that combines the construction of application-independent energy profiles of Java collections and static analysis to produce an estimate of in which ways and how intensively a system employs these collections. We implement this approach in a tool named CT+ that works with both desktop and mobile Java systems and is capable of analyzing 39 different collection implementations of lists, maps, and sets. We applied CT+ to seventeen software systems: two mobile-based, twelve desktop-based, and three that can run in both environments. Our evaluation infrastructure involved a high-end server, two notebooks, three smartphones, and a tablet. Overall, 2295 recommendations were applied, achieving up to 16.34% reduction in energy consumption, usually changing a single line of code per recommendation. Even for a real-world, mature system such as Tomcat, CT+ could achieve a 4.12% reduction in energy consumption. Our results indicate that some widely used collections, e.g., ArrayList, HashMap, and Hashtable, are not energy- efficient and sometimes should be avoided when energy consumption is a major concern.
C1 [Oliveira, Wellington; Oliveira, Renato; Castor, Fernando] Fed Univ Pernambuco UFPE, Informat Ctr, Pernambuco, Brazil.
   [Pinto, Gustavo] Fed Univ Para UFPA, Fac Comp, Pernambuco, Brazil.
   [Fernandes, Joao Paulo] Univ Porto FEUP, CISUC, Fac Engn, Porto, Portugal.
C3 Universidade Federal de Pernambuco; Universidade Federal do Para;
   Universidade de Coimbra; Universidade do Porto
RP Oliveira, W (corresponding author), Fed Univ Pernambuco UFPE, Informat Ctr, Pernambuco, Brazil.
EM woj@cin.ufpe.br; ros3@cin.ufpe.br; castor@cin.ufpe.br; gpinto@ufpa.br;
   jpaulo@fe.up.pt
RI de Oliveira Júnior, Wellington/GNO-9975-2022; Fernandes,
   João/IUN-2117-2023; Castor, Fernando/V-4011-2018; Fernandes, Joao
   Paulo/A-1929-2013
OI de Oliveira Júnior, Wellington/0000-0002-1502-772X; Castor,
   Fernando/0000-0002-6389-3630; Fernandes, Joao Paulo/0000-0002-1952-9460
FU Erasmus+ Key Action 2 (Strategic partnership for higher education)
   [2020-1-PT01-KA203-078646]; CAPES/Brazil [88887.364121/2019-00];
   CNPq/Brazil [304755/2014-1, 406308/2016-0, 465614/2014-0,
   309032/2019-9]; FACEPE/Brazil [APQ-0839-1.03/14, 0388-1.03/14,
   0592-1.03/15]
FX We would like to thank the anonymous reviewers for helping to improve
   this paper. This paper acknowledges the support of the Erasmus+ Key
   Action 2 (Strategic partnership for higher education) project No.
   2020-1-PT01-KA203-078646: "SusTrainable - Promoting Sustainability as a
   Fundamental Driver in Software Development Training and Education". The
   information and views set out in this paper are those of the author(s)
   and do not necessarily reflect the official opinion of the European
   Union. Neither the European Union institutions and bodies nor any person
   acting on their behalf may be held responsible for the use which may be
   made of the information contained therein. This research was partially
   funded by CAPES/Brazil (88887.364121/2019-00), CNPq/Brazil
   (304755/2014-1, 406308/2016-0, 465614/2014-0, 309032/2019-9),
   FACEPE/Brazil (APQ-0839-1.03/14, 0388-1.03/14, 0592-1.03/15).
CR Andrae A., 2017, Total Consumer Power Consumption Forecast
   [Anonymous], 2007, P KDD CUP WORKSHOP
   [Anonymous], 2014, CASCON
   Baldwin Carliss Y., DESIGN RULES, V1
   Barrett E, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133876
   Blackburn SM, 2006, ACM SIGPLAN NOTICES, V41, P169, DOI 10.1145/1167515.1167488
   Chowdhury S, 2019, EMPIR SOFTW ENG, V24, P1649, DOI 10.1007/s10664-018-9640-7
   Chowdhury SA, 2019, PROC INT CONF SOFTW, P1107, DOI 10.1109/ICSE.2019.00114
   Chowdhury SA, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P508, DOI [10.1145/2901739.2903494, 10.1109/MSR.2016.066]
   Cliff N, 1996, MULTIVAR BEHAV RES, V31, P331, DOI 10.1207/s15327906mbr3103_4
   Costa D., 2017, P 8 ACM SPEC INT C P, P389, DOI [10.1145/3030207.3030221, DOI 10.1145/3030207.3030221]
   Cruz Luis, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P46, DOI 10.1109/MOBILESoft.2017.19
   Duarte LM, 2019, PROCEEDINGS OF THE XXXIII BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING, SBES 2019, P67, DOI 10.1145/3350768.3353813
   Georges A, 2007, ACM SIGPLAN NOTICES, V42, P57, DOI 10.1145/1297105.1297033
   Georgiou S, 2020, J SYST SOFTWARE, V162, DOI 10.1016/j.jss.2019.110506
   Gonnord L, 2014, WORKSH SOFTW TERM
   Hahnel Marcus, 2012, Performance Evaluation Review, V40, P13
   Halfond WGJ, 2017, P INT C SOFTW MAINT
   Hao S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P92, DOI 10.1109/ICSE.2013.6606555
   Hasan S, 2016, PROC INT CONF SOFTW, P225, DOI 10.1145/2884781.2884869
   Lee J.J., 2015, Student Engagement in Higher Education, V2nd, P1
   Li D, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P527, DOI 10.11455/2568225.2568321
   Li D, 2014, PROC IEEE INT CONF S, P121, DOI 10.1109/ICSME.2014.34
   Lima LG, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P517, DOI 10.1109/SANER.2016.85
   Lin Y, 2015, SOFTW TEST VERIF REL, V25, P397, DOI 10.1002/stvr.1567
   Linares-Vasquez M., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, P2
   Linares-Vásquez M, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3241742
   Linares-Vásquez M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P143, DOI 10.1145/2786805.2786847
   Liu K, 2015, P 18 INT C FUND APPR
   Manotas I, 2016, PROC INT CONF SOFTW, P237, DOI 10.1145/2884781.2884810
   Manotas I, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P503, DOI 10.11455/2568225.2568297
   McIntosh A, 2019, EMPIR SOFTW ENG, V24, P562, DOI 10.1007/s10664-018-9629-2
   Mingay S, 2007, GARTNER RAS CORE RES
   Oliveira Wellington, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P160, DOI 10.1109/MSR.2019.00033
   Oliveira W, 2017, IEEE WORK CONF MIN S, P42, DOI 10.1109/MSR.2017.66
   Pang C, 2016, IEEE SOFTWARE, V33, P83, DOI 10.1109/MS.2015.83
   Pereira Rui, 2016, 2016 IEEE/ACM 5th International Workshop on Green and Sustainable Software (GREENS), P15, DOI 10.1109/GREENS.2016.011
   Pereira R, 2018, IEEE INT CONF AUTOM, P856, DOI 10.1145/3238147.3240473
   Pereira R, 2017, SLE'17: PROCEEDINGS OF THE 10TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING, P256, DOI 10.1145/3136014.3136031
   Peterson M, 2009, INTRO DECISION THEOR, P40
   Pinto G., 2014, P 11 WORK C MIN SOFT, P22
   Pinto G, 2016, PROC IEEE INT CONF S, P20, DOI 10.1109/ICSME.2016.34
   Pinto G, 2014, ACM SIGPLAN NOTICES, V49, P345, DOI [10.1145/2714064.2660235, 10.1145/2660193.2660235]
   Qingwen Chen, 2011, Proceedings of the 2011 IEEE 9th International Conference on Dependable, Autonomic and Secure Computing (DASC 2011), P768, DOI 10.1109/DASC.2011.131
   Rocha G, 2019, INT SYMP EMP SOFTWAR, P398
   Romano J., 2006, ANN M FLORIDA ASS IN
   Romansky S, 2017, PROC IEEE INT CONF S, P273, DOI 10.1109/ICSME.2017.79
   Saborido R, 2018, EMPIR SOFTW ENG, V23, P2829, DOI 10.1007/s10664-018-9607-8
   Sahin C., 2012, 2012 First International Workshop on Green and Sustainable Software (GREENS), P55, DOI 10.1109/GREENS.2012.6224257
   Sahin Cagri., 2014, Proceedings of the 8th ACM/IEEE International Symposium on Empirical Software Engineering and Measurement, p36:1, DOI 10.1145/2652524.2652538
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   Simunic T, 2000, PROC INT SYMP SYST, P193, DOI 10.1109/ISSS.2000.874049
   Wan M, 2017, SOFTW TEST VERIF REL, V27, DOI 10.1002/stvr.1635
   Wilks D., 2011, INT GEOPHYS SERIES, DOI [10.1016/c2010-0-65519-2, DOI 10.1016/C2010-0-65519-2]
NR 54
TC 8
Z9 8
U1 1
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAY
PY 2021
VL 26
IS 3
AR 55
DI 10.1007/s10664-021-09950-y
PG 45
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RM6PL
UT WOS:000639783000001
DA 2024-07-18
ER

PT J
AU Hübner, P
   Paech, B
AF Huebner, Paul
   Paech, Barbara
TI Interaction-based creation and maintenance of continuously usable trace
   links between requirements and source code
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Traceability; Interaction; Maintenance; Source code; Requirement
ID TRACEABILITY
AB Trace links between requirements and code are beneficial for many software engineering tasks such as maintenance, program comprehension, and re-engineering. If trace links are created and used continuously during a project, they need to have high precision and recall to be useful. However, manual trace link creation is cumbersome and existing automatic trace link creation methods are typically only applied retrospectively and to structured requirements. Therefore, they focus on recall and accept manual effort to cope with low precision. Such manual effort is not acceptable continuously. Furthermore, the maintenance of existing links along with changing artefacts in a project is neglected in most automatic trace link creation approaches. Therefore, we developed and evaluated an interaction log-based trace link creation approachILto continuously provide correct trace links during a project.ILlinks unstructured requirements specified in an issue tracker and source code managed in a version control system. In the latest version,ILCom, our approach uses the interactions of developers with files in an integrated development environment and issue identifiers provided in commit messages to create trace links continuously after each commit. In this paper, we presentIL(Com), its most recent evaluation study, and a systematic literature review (SLR) about trace link maintenance (TM). We also present a TM process forIL(Com)based on two approaches from our SLR. In the evaluation study, we show that precision ofIL(Com)created links is above 90% and recall almost at 80%. In the SLR, we discuss 16 approaches. Our approach is the first trace link creation approach with very good precision and recall and integrated trace maintenance.
C1 [Huebner, Paul; Paech, Barbara] Heidelberg Univ, Inst Comp Sci, Heidelberg, Germany.
C3 Ruprecht Karls University Heidelberg
RP Hübner, P (corresponding author), Heidelberg Univ, Inst Comp Sci, Heidelberg, Germany.
EM huebner@informatik.uni-heidelberg.de; paech@informatik.uni-heidelberg.de
OI , Paul/0000-0002-6640-2956
FU Projekt DEAL
FX Open Access funding provided by Projekt DEAL.
CR Armbrust O, 2009, 2009 ICSE WORKSHOP ON TRACEABILITY IN EMERGING FORMS OF SOFTWARE ENGINEERING (TEFSE), P36, DOI 10.1109/TEFSE.2009.5069581
   Barkowski M, 2017, 2017 IEEE 25TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW), P36, DOI 10.1109/REW.2017.52
   Bird C, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P1, DOI 10.1109/MSR.2009.5069475
   Borg M, 2014, EMPIR SOFTW ENG, V19, P1565, DOI 10.1007/s10664-013-9255-y
   Briand L, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2559978
   Cleland-Huang J., 2012, 2012 IEEE 20th International Requirements Engineering Conference (RE 2012), P231, DOI 10.1109/RE.2012.6345809
   Cleland-Huang J, 2003, IEEE T SOFTWARE ENG, V29, P796, DOI 10.1109/TSE.2003.1232285
   Cleland-Huang J., 2014, FOSE P FUTURE SOFTWA, P55
   Drivalos-Matragkas N., 2010, Proceedings of the 6th ECMFA Traceability Workshop. ECMFA-TW'10, P23, DOI DOI 10.1145/1814392.1814396
   Ebner G, 2002, IEEE SOFTWARE, V19, P70, DOI 10.1109/MS.2002.1003459
   Fockel M., 2012, Proceedings 2012 2nd International Workshop on Software Engineering for Embedded Systems (SEES), P37, DOI 10.1109/SEES.2012.6225489
   Gervasi V, 2014, INT REQUIR ENG CONF, P143, DOI 10.1109/RE.2014.6912256
   Ghabi A, 2012, IEEE INT CONF AUTOM, P200, DOI 10.1145/2351676.2351705
   Hayes JH, 2006, IEEE T SOFTWARE ENG, V32, P4, DOI 10.1109/TSE.2006.3
   Herzig K, 2013, IEEE WORK CONF MIN S, P121, DOI 10.1109/MSR.2013.6624018
   Hübner P, 2019, LECT NOTES COMPUT SC, V11412, P73, DOI 10.1007/978-3-030-15538-4_5
   Hübner P, 2018, LECT NOTES COMPUT SC, V10753, P75, DOI 10.1007/978-3-319-77243-1_5
   Hübner P, 2017, LECT NOTES COMPUT SC, V10153, P291, DOI 10.1007/978-3-319-54045-0_21
   Kersten Mik, 2006, P 14 ACM SIGSOFT INT, P1
   Kirinuki H., 2014, P 22 INT C PROGRAM C, P262
   Kitchenham B., 2007, EBSE200701 KEEL U U
   Kleffmann M, 2013, 2013 7TH INTERNATIONAL WORKSHOP ON TRACEABILITY IN EMERGING FORMS OF SOFTWARE ENGINEERING (TEFSE), P23, DOI 10.1109/TEFSE.2013.6620150
   Konôpka M, 2015, LECT NOTES COMPUT SC, V8939, P449, DOI 10.1007/978-3-662-46078-8_37
   Maalej W, 2014, IEEE INT WORKS EMPIR, P64, DOI 10.1109/EmpiRE.2014.6890118
   Mäder P, 2015, EMPIR SOFTW ENG, V20, P413, DOI 10.1007/s10664-014-9314-z
   Mäder P, 2012, J SYST SOFTWARE, V85, P2205, DOI 10.1016/j.jss.2011.10.023
   Maro S, 2016, INT REQUIR ENG CONF, P407, DOI 10.1109/RE.2016.19
   Maro S, 2016, IEEE INT CONF AUTOM, P414, DOI 10.1145/2970276.2970314
   Merten T, 2016, LECT NOTES COMPUT SC, V9619, P45, DOI 10.1007/978-3-319-30282-9_4
   Merten Thorsten, 2016, 24 IEEE INT REQ ENG
   Omoronyia I, 2011, INFORM SOFTWARE TECH, V53, P851, DOI 10.1016/j.infsof.2011.03.001
   Omoronyia I, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P237, DOI 10.1109/RE.2009.26
   Paige RF, 2011, SOFTW SYST MODEL, V10, P469, DOI 10.1007/s10270-010-0158-8
   Pan Y, 2009, 2009 WASE INTERNATIONAL CONFERENCE ON INFORMATION ENGINEERING, ICIE 2009, VOL II, P214, DOI 10.1109/ICIE.2009.227
   Rahimi R, 2016, 2016 IEEE 17TH INTERNATIONAL CONFERENCE ON HIGH PERFORMANCE SWITCHING AND ROUTING (HPSR), P93, DOI 10.1109/HPSR.2016.7525645
   Rath M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P834, DOI 10.1145/3180155.3180207
   Rath M, 2017, INT REQUIR ENG CONF, P516, DOI 10.1109/RE.2017.18
   Schwarz H, 2010, SOFTW SYST MODEL, V9, P473, DOI 10.1007/s10270-009-0141-4
   Seibel Andreas., 2012, SOFTWARE SYSTEMS TRA, P215, DOI [DOI 10.1007/978-1-4471-2239-510, 10.1007/978-1-4471-2239-5_10, DOI 10.1007/978-1-4471-2239-5_10]
   Soh Z, 2017, EMPIRICAL SOFTWARE E
   Wohlrab R, 2016, INT REQUIR ENG CONF, P216, DOI 10.1109/RE.2016.17
NR 41
TC 8
Z9 11
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2020
VL 25
IS 5
BP 4350
EP 4377
DI 10.1007/s10664-020-09831-w
EA AUG 2020
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NJ1FD
UT WOS:000558632800001
OA hybrid
DA 2024-07-18
ER

PT J
AU Koyuncu, A
   Liu, K
   Bissyande, TF
   Kim, D
   Klein, J
   Monperrus, M
   Le Traon, Y
AF Koyuncu, Anil
   Liu, Kui
   Bissyande, Tegawende F.
   Kim, Dongsun
   Klein, Jacques
   Monperrus, Martin
   Le Traon, Yves
TI FixMiner: Mining relevant fix patterns for automated program repair
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Fix patterns; Patches; Program repair; Debugging; Empirical software
   engineering
ID CODE; ALGORITHM
AB Patching is a common activity in software development. It is generally performed on a source code base to address bugs or add new functionalities. In this context, given the recurrence of bugs across projects, the associated similar patches can be leveraged to extract generic fix actions. While the literature includes various approaches leveraging similarity among patches to guide program repair, these approaches often do not yield fix patterns that are tractable and reusable as actionable input to APR systems. In this paper, we propose a systematic and automated approach to mining relevant and actionable fix patterns based on an iterative clustering strategy applied to atomic changes within patches. The goal of FixMiner is thus to infer separate and reusable fix patterns that can be leveraged in other patch generation systems. Our technique, FixMiner, leverages Rich Edit Script which is a specialized tree structure of the edit scripts that captures the AST-level context of the code changes. FixMiner uses different tree representations of Rich Edit Scripts for each round of clustering to identify similar changes. These are abstract syntax trees, edit actions trees, and code context trees. We have evaluated FixMiner on thousands of software patches collected from open source projects. Preliminary results show that we are able to mine accurate patterns, efficiently exploiting change information in Rich Edit Scripts. We further integrated the mined patterns to an automated program repair prototype, PAR(FixMiner), with which we are able to correctly fix 26 bugs of the Defects4J benchmark. Beyond this quantitative performance, we show that the mined fix patterns are sufficiently relevant to produce patches with a high probability of correctness: 81% of PAR(FixMiner)'s generated plausible patches are correct.
C1 [Koyuncu, Anil; Liu, Kui; Bissyande, Tegawende F.; Klein, Jacques; Le Traon, Yves] Univ Luxembourg, SnT, Luxembourg, Luxembourg.
   [Kim, Dongsun] Furiosa Ai, 145 Dosan Daero, Seoul, South Korea.
   [Monperrus, Martin] KTH Royal Inst Technol, Software Technol, Stockholm, Sweden.
C3 University of Luxembourg; Royal Institute of Technology
RP Koyuncu, A (corresponding author), Univ Luxembourg, SnT, Luxembourg, Luxembourg.
EM anil.koyuncu@uni.lu; kui.liu@uni.lu; tagewende.bissyande@uni.lu;
   darkrsw@furiosa.ai; jacques.klein@uni.lu; martin.monperrus@csc.kth.se;
   yves.letraon@uni.lu
RI Koyuncu, Anil/AAA-5382-2021; Monperrus, Martin/I-3640-2012; LE TRAON,
   Yves/T-2911-2019; Kim, Dongsun/B-4856-2015
OI Koyuncu, Anil/0000-0001-6975-6752; Monperrus,
   Martin/0000-0003-3505-3383; Bissyande, Tegawende F./0000-0001-7270-9869;
   Kim, Dongsun/0000-0003-0272-6860; Klein, Jacques/0000-0003-4052-475X; LE
   TRAON, Yves/0000-0002-1045-4861; LIU, Kui/0000-0003-0145-615X
CR Abreu R, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P89, DOI 10.1109/TAIC.PART.2007.13
   Al-Ekram Raihan., 2005, C CTR ADV STUDIES CO, P1
   Andersen J, 2012, IEEE INT CONF AUTOM, P382, DOI 10.1145/2351676.2351753
   Andersen J, 2010, AUTOMAT SOFTW ENG, V17, P119, DOI 10.1007/s10515-010-0062-z
   [Anonymous], 2006, Proceedings of the 14th ACM SIGSOFT international symposium on Foundations of software engineering (SIGSOFT '06/FSE-14), DOI 10.1145/1181775.1181781
   [Anonymous], 2016, ARXIV PREPRINT ARXIV
   [Anonymous], 2018, IEEE Transactions on Software Engineering
   Bille P, 2005, THEOR COMPUT SCI, V337, P217, DOI 10.1016/j.tcs.2004.12.030
   Brunel J, 2009, ACM SIGPLAN NOTICES, V44, P114, DOI 10.1145/1594834.1480897
   Campos J, 2012, IEEE INT CONF AUTOM, P378, DOI 10.1145/2351676.2351752
   Chawathe S. S., 1996, SIGMOD Record, V25, P493, DOI 10.1145/235968.233366
   Chen LS, 2017, IEEE INT CONF AUTOM, P637, DOI 10.1109/ASE.2017.8115674
   Chilowicz M, 2009, INT C PROGRAM COMPRE, P243, DOI 10.1109/ICPC.2009.5090050
   Coker Z, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P792, DOI 10.1109/ICSE.2013.6606625
   Dallmeier V, 2009, IEEE INT CONF AUTOM, P550, DOI 10.1109/ASE.2009.15
   Duley A, 2012, AUTOMAT SOFTW ENG, V19, P459, DOI 10.1007/s10515-012-0107-6
   Durieux T, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P349, DOI 10.1109/SANER.2017.7884635
   Falleri Jean-Remy, 2014, P 29 ACM IEEE INT C, P313
   Falleri JR, 2018, GUMTREE
   Fischer M, 2003, PROC IEEE INT CONF S, P23, DOI 10.1109/ICSM.2003.1235403
   Fluri Beat, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P463, DOI 10.1109/ASE.2008.74
   Fluri B, 2007, IEEE T SOFTWARE ENG, V33, P725, DOI 10.1109/TSE.2007.70731
   Fluri B, 2006, INT C PROGRAM COMPRE, P35, DOI 10.1109/ICPC.2006.16
   Gupta R, 2017, AAAI CONF ARTIF INTE, P1345
   Hanam Q, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P144, DOI 10.1145/2950290.2950308
   Hashimoto M, 2008, WORK CONF REVERSE EN, P279, DOI 10.1109/WCRE.2008.44
   Herzig K, 2013, IEEE WORK CONF MIN S, P121, DOI 10.1109/MSR.2013.6624018
   Nguyen HA, 2013, PROC INT SYMP SOFTW, P138, DOI 10.1109/ISSRE.2013.6698913
   Nguyen HDT, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P772, DOI 10.1109/ICSE.2013.6606623
   Hovemeyer D, 2004, ACM SIGPLAN NOTICES, V39, P92, DOI 10.1145/1052883.1052895
   Hua JR, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P12, DOI 10.1145/3180155.3180245
   Huang KF, 2018, IEEE INT CONF AUTOM, P679, DOI 10.1145/3238147.3238219
   JARO MA, 1989, J AM STAT ASSOC, V84, P414, DOI 10.2307/2289924
   Jiang JJ, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P298, DOI 10.1145/3213846.3213871
   Jihun Park, 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P40, DOI 10.1109/MSR.2012.6224298
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Ke YL, 2015, IEEE INT CONF AUTOM, P295, DOI 10.1109/ASE.2015.60
   Kim D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P802, DOI 10.1109/ICSE.2013.6606626
   Kim M, 2007, PROC INT CONF SOFTW, P333
   Kim M, 2009, PROC INT CONF SOFTW, P309, DOI 10.1109/ICSE.2009.5070531
   Koyuncu A, 2019, ARXIV190202703
   Koyuncu A, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P314, DOI 10.1145/3338906.3338935
   Koyuncu A, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P237, DOI 10.1145/3092703.3092713
   Kreutzer P, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P61, DOI [10.1145/2901739.2901749, 10.1109/MSR.2016.016]
   Le Goues C, 2012, IEEE T SOFTWARE ENG, V38, P54, DOI 10.1109/TSE.2011.104
   Le XBD, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P593, DOI 10.1145/3106237.3106309
   Le XBD, 2016, PROC IEEE INT CONF S, P428, DOI 10.1109/ICSME.2016.66
   Le XBD, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P213, DOI 10.1109/SANER.2016.76
   Lee J, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P61, DOI 10.1145/3213846.3213856
   Lin W, 2016, PROC IEEE INT CONF S, P189, DOI 10.1109/ICSME.2016.25
   Liu K, 2019, P 28 INT S SOFTW TES
   Liu K, 2019, IEEE INT CONF SOFTW, P102, DOI 10.1109/ICST.2019.00020
   Liu K, 2018, ASIA PAC SOFWR ENG, P658, DOI 10.1109/APSEC.2018.00085
   Liu K, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P456, DOI 10.1109/saner.2019.8667970
   Liu K, 2018, PROC IEEE INT CONF S, P275, DOI 10.1109/ICSME.2018.00037
   Liu XL, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P118, DOI 10.1109/SANER.2018.8330202
   Livshits V.B., 2005, ESEC SIGSOFT FSE, P296, DOI [DOI 10.1145/1095430.1081754, DOI 10.1145/1081706.1081754]
   Long F, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P727, DOI 10.1145/3106237.3106253
   Long F, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P166, DOI 10.1145/2786805.2786811
   Long F, 2016, ACM SIGPLAN NOTICES, V51, P298, DOI 10.1145/2914770.2837617
   Madeiral F., 2018, P SANER
   Martinez M., 2016, P 25 INT S SOFTWARE, P441, DOI 10.1145/2931037
   Martinez M, 2018, LECT NOTES COMPUT SC, V11036, P65, DOI 10.1007/978-3-319-99241-9_3
   Martinez M, 2017, EMPIR SOFTW ENG, V22, P1936, DOI 10.1007/s10664-016-9470-4
   Martínez M, 2015, EMPIR SOFTW ENG, V20, P176, DOI 10.1007/s10664-013-9282-8
   Martinez M, 2013, PROC IEEE INT CONF S, P388, DOI 10.1109/ICSM.2013.54
   Mechtaev S, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P448, DOI 10.1109/ICSE.2015.63
   Meng N, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P502, DOI 10.1109/ICSE.2013.6606596
   Meng N, 2011, ACM SIGPLAN NOTICES, V46, P329, DOI 10.1145/1993316.1993537
   Molderez T, 2017, IEEE WORK CONF MIN S, P248, DOI 10.1109/MSR.2017.12
   Monperrus M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3105906
   Myers EW, 1986, ALGORITHMICA, V1, P251, DOI 10.1007/BF01840446
   Neamtiu J. F. I., 2005, P INT WORKSH MIN SOF, V30, P1, DOI [DOI 10.1145/1082983.1083143, 10.1145/1082983.1083143]
   Nguyen Tien N, 2010, Proceedings of the 32Nd ACM/IEEE International Conference on Software Engineering-Volume 1, ICSE '10, P315
   Osman H, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P343, DOI 10.1109/CSMR-WCRE.2014.6747191
   Oumarou H, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P371, DOI 10.1109/SANER.2015.7081847
   Padioleau Y, 2008, EUROSYS'08: PROCEEDINGS OF THE EUROSYS 2008 CONFERENCE, P247, DOI 10.1145/1357010.1352618
   Pan K, 2009, EMPIR SOFTW ENG, V14, P286, DOI 10.1007/s10664-008-9077-5
   Pawlik M, 2011, PROC VLDB ENDOW, V5, P334, DOI 10.14778/2095686.2095692
   Rolim Reudismam, 2018, ARXIV180303806
   Saha RK, 2017, IEEE INT CONF AUTOM, P648, DOI 10.1109/ASE.2017.8115675
   Skiena S, 1997, STONY BROOK ALGORITH
   Tan SH, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P471, DOI 10.1109/ICSE.2015.65
   Tao Y, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P180, DOI 10.1109/MSR.2015.24
   Thomas SW, 2013, IEEE T SOFTWARE ENG, V39, P1427, DOI 10.1109/TSE.2013.27
   Tian Y, 2012, PROC INT CONF SOFTW, P386, DOI 10.1109/ICSE.2012.6227176
   Weimer W, 2009, PROC INT CONF SOFTW, P364, DOI 10.1109/ICSE.2009.5070536
   Weissgerber P, 2006, IEEE INT CONF AUTOM, P231
   Wen M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/3180155.3180233
   Wen M, 2016, IEEE INT CONF AUTOM, P262, DOI 10.1145/2970276.2970359
   Winkler William E., 1990, P SURV RES METH SECT
   Xin Q, 2017, IEEE INT CONF AUTOM, P660, DOI 10.1109/ASE.2017.8115676
   Xiong YF, 2017, PROC INT CONF SOFTW, P416, DOI 10.1109/ICSE.2017.45
   Xuan JF, 2017, IEEE T SOFTWARE ENG, V43, P34, DOI 10.1109/TSE.2016.2560811
   Ying ATT, 2004, IEEE T SOFTWARE ENG, V30, P574, DOI 10.1109/TSE.2004.52
   Yue RR, 2017, PROC IEEE INT CONF S, P422, DOI 10.1109/ICSME.2017.16
NR 96
TC 93
Z9 104
U1 1
U2 11
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAY
PY 2020
VL 25
IS 3
SI SI
BP 1980
EP 2024
DI 10.1007/s10664-019-09780-z
PG 45
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LL7FD
UT WOS:000531720100008
DA 2024-07-18
ER

PT J
AU Heeager, LT
   Nielsen, PA
AF Heeager, Lise Tordrup
   Nielsen, Peter Axel
TI Meshing agile and plan-driven development in safety-critical software: a
   case study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Agile software development; Plan-driven software development; Process;
   Safety-critical software meshing compliance scrum; FDA
ID XP
AB Organizations developing safety-critical software are increasingly seeking to create better practices by meshing agile and plan-driven development processes. Significant differences between the agile and the plan-driven processes make meshing difficult, and very little empirical evidence on using agile processes for safety-critical software development exists. There are four areas of concern, in particular, for meshing the development of safety-critical software concerning: documentation, requirements, life cycle and testing. We report on a case study of a pharmaceutical organization in which a Scrum process was implemented to support agile software development in a plan-driven safety-critical project. The purpose was to answer the following research question: For safety-critical software, what can a software team do to mesh agile and plan-driven processes effectively? The main contribution of the paper is an elaborated understanding of meshing in the four areas of concern and how the conditions for safety-critical software influence them. We discuss how meshing within the four areas of concern is a contribution to existing research.
C1 [Heeager, Lise Tordrup] Aarhus Univ, Dept Management, Fuglesangs Alle 4, DK-8210 Aarhus V, Denmark.
   [Nielsen, Peter Axel] Aalborg Univ, Dept Comp Sci, Selma Lagerlofs Vej 300, DK-9220 Aalborg O, Denmark.
C3 Aarhus University; Aalborg University
RP Nielsen, PA (corresponding author), Aalborg Univ, Dept Comp Sci, Selma Lagerlofs Vej 300, DK-9220 Aalborg O, Denmark.
EM lith@mgmt.au.dk; pan@cs.aau.dk
OI Tordrup, Lise/0000-0003-4495-3084; Nielsen, Peter
   Axel/0000-0002-0282-7445
CR Abdelaziz A, 2015, INT C COMP CONTR NET
   [Anonymous], P 2013 INT C SOFTW E
   [Anonymous], P 2004 WORKSH NEW SE
   Beasley C., 2005, ACM SIGSOFT SOFTWARE, V30, P28
   Bedoll R, 2003, C EXTR PROGR AG METH
   Beznosov K, 2003, 1 ACM WORKSH BUS DRI
   Bostrom G, 2006, P 2006 INT WORKSH SO
   Cockburn A., 2006, AGILE SOFTWARE DEV C
   Conboy K, 2009, INFORM SYST RES, V20, P329, DOI 10.1287/isre.1090.0236
   David P, 2006, ZOOTAXA, P1
   Demissie S, 2016, COMM COM INF SC, V609, P409, DOI 10.1007/978-3-319-38980-6_29
   Drobka J, 2004, IEEE SOFTWARE, V21, P70, DOI 10.1109/MS.2004.47
   Gary K, 2011, SOFTWARE PRACT EXPER, V41, P945, DOI 10.1002/spe.1075
   Ge X, 2010, ITERATIVE APPROACH D
   Gorski J, 2013, INT WORKSH SOFTW ENG
   Górski J, 2012, COMPUT SCI-AGH, V13, P165, DOI 10.7494/csci.2012.13.4.165
   Gregor S, 2006, MIS QUART, V30, P611
   Grenning J, 2001, IEEE SOFTWARE, V18, P27, DOI 10.1109/52.965799
   Hajou A., 2015, Lecture Notes on Software Engineering, V3, P251, DOI 10.7763/LNSE.2015.V3.200
   Hajou A., 2015, Lecture Notes on Software Engineering, V3, P267, DOI 10.7763/LNSE.2015.V3.202
   Heeager L, 2009, AUSTR C INF SYST MEL
   Heeager L.T., 2012, Journal of Information Technology Case and Application Research, V14, P3
   Heeager LT, 2018, INFORM SOFTWARE TECH, V103, P22, DOI 10.1016/j.infsof.2018.06.004
   Jonsson H, 2012, 23 INT S SOFTW REL E
   Karlström D, 2006, EMPIR SOFTW ENG, V11, P203, DOI 10.1007/s10664-006-6402-8
   Kasauli R, 2018, 2018 44 EUR C SOFTW
   Kuhrmann M, 2017, ICSSP'17: PROCEEDINGS OF THE 2017 INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESS, P30, DOI 10.1145/3084100.3084104
   Lee G, 2010, MIS QUART, V34, P87
   Lin W, 2009, INT JOINT C COMP SCI
   McCaffery F, 2016, INT C SOFTW PROC IMP
   McHugh M, 2013, 5 INT WORKSH SOFTW E
   McHugh M., 2014, INT C SOFTW PROC IMP
   McHugh M, 2014, J SOFTW-EVOL PROC, V26, P504, DOI 10.1002/smr.1608
   McHugh M, 2012, COMM COM INF SC, V290, P141
   Mehrfard H, 2010, STUD COMPUT INTELL, V296, P241, DOI 10.1007/978-3-642-13273-5_16
   Misra SC, 2010, INT J QUAL RELIAB MA, V27, P451, DOI 10.1108/02656711011035147
   Myklebust T, 2016, INT C COMP SAF REL S
   Myklebust T, 2018, AGILE SAFETY CASE SP
   Notander JP, 2013, 28 ANN ACM S APPL CO
   Notander JP, 2013, INT C PROD FOC SOFTW
   ozcan-Top o, 2019, J SUPERCOMPUT, P1
   Paige RF, 2005, ACM S APPL COMP SANT
   Paige RF, 2008, INT C COMP SAF REL S
   Rasmussen R, 2009, AG C AGILE CHIC
   Ronkainen J, 2003, INT C EXTR PROGR AG
   Rottier PA, 2008, AG C AGILE TOR
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Schwaber K., 2001, Agile software development with scrum
   Shafiq S, 2014, J SOFTW ENG APPL
   Sidky A, 2007, SOFTW ENG WORKSH SEW
   Spence J, 2005, AG DEV C ADC 05 DENV
   Stalhane T, 2012, EUR SAF REL C ESREL
   Van Schooenderwoert N, 2018, AGILE METHODS SAFETY
   VanderLeest SH, 2009, 28 DIG AV SYST C ORL
   Walsham G, 2006, EUR J INFORM SYST, V15, P320, DOI 10.1057/palgrave.ejis.3000589
   Wang Y., 2018, INT C AG SOFTW DEV
   Wang Y, 2017, INT C PROD FOC SOFTW
   Wäyrynen J, 2004, LECT NOTES COMPUT SC, V3134, P117
   Wils A, 2006, LECT NOTES COMPUT SC, V4044, P123
   Wysocki R.K., 2011, EFFECTIVE PROJECT MA
   Yin R. K., 2008, CASE STUDY RES DESIG, DOI DOI 10.1097/FCH.0B013E31822DDA9E
NR 61
TC 8
Z9 8
U1 0
U2 14
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2020
VL 25
IS 2
SI SI
BP 1035
EP 1062
DI 10.1007/s10664-020-09804-z
EA FEB 2020
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KT0VU
UT WOS:000515762900001
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Yates, R
   Power, N
   Buckley, J
AF Yates, Rebecca
   Power, Norah
   Buckley, Jim
TI Characterizing the transfer of program comprehension in onboarding: an
   information-push perspective
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Program comprehension; Information seeking; In-situ onboarding; Grounded
   theory
ID SOFTWARE ENGINEERS; SEEKING; CODE; DOCUMENTATION; MODEL; KNOWLEDGE;
   BEHAVIOR
AB Many software developers struggle to understand code written by others, leading to increased maintenance costs. Research on program comprehension to date has primarily focused on individual developers attempting to understand code. However, software developers also work together to share and transfer understanding of their codebases. This is common during the onboarding process, when a new developer has joined a project or a company. The work reported here uses a Grounded Theory approach to explore the different types of information passed from experts to newcomers during onboarding, and the perceived value of these types. The theory is grounded in field-study data collected during twelve in-situ onboarding sessions, across eight organizations, with a design based on two pilot studies that were carried out in advance. The field-study data was supplemented and validated with interviews and questionnaires. It provides a description of four views through which the experts represent their code to the newcomers, revealing several interesting aspects of expert-led program comprehension. In particular, it provides evidence that extends current thinking on the temporal aspect of code: where experts discuss changes that have been made to the code-base, changes that are currently being made to the code-base (including temporary fixes) and changes intended for the code-base in the future. In addition, a rationale-based view of the code-base is emphasized in the findings, making explicit the system's functional/non-functional requirements, and their impact on the system's design. This information was perceived as highly valued by the newcomers. Additionally, Structural and Algorithmic views, which have already been firmly established in program comprehension literature, were also noted in these onboarding sessions.
C1 [Yates, Rebecca; Power, Norah; Buckley, Jim] Univ Limerick, Lero, Limerick, Ireland.
C3 University of Limerick
RP Yates, R (corresponding author), Univ Limerick, Lero, Limerick, Ireland.
EM rebecca.yates@fastmail.com
CR ADAIR JG, 1984, J APPL PSYCHOL, V69, P334, DOI 10.1037/0021-9010.69.2.334
   Adolph S, 2011, EMPIR SOFTW ENG, V16, P487, DOI 10.1007/s10664-010-9152-6
   Afonso L.M., 2012, P PSYCH PROGR INT GR, P151
   [Anonymous], 2002, Software Design-Cognitive Aspects
   [Anonymous], P WORKSH EMP STUD PR
   [Anonymous], J SOFTWARE MAINTENAN
   [Anonymous], BEYOND METHOD
   [Anonymous], 2008, GUIDE ADV EMPIRICAL, DOI DOI 10.1007/978-1-84800-044-511
   Bass L., 2007, SOFTWARE ARCHITECTUR, VSecond
   Begel A, 2008, SIGCSE'08: PROCEEDINGS OF THE 39TH ACM TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION, P226, DOI 10.1145/1352322.1352218
   Begel Andrew, 2008, P 4 INT WORKSH COMP, P3, DOI [DOI 10.1145/RESEARCH(ICER'1404520.1404522, 10.1145/Research(ICER'1404520.1404522]
   Berlin L. M., 1993, Empirical Studies of Programmers: Fifth Workshop, P6
   Berlin L. M., 1993, Consultants and apprentices: observations about learning and collaborative problem solving, DOI 10.1145/143457.143471
   BoehmDavis DA, 1996, EMPIRICAL STUDIES OF PROGRAMMERS: SIXTH WORKSHOP, P3
   BROOKS R, 1983, INT J MAN MACH STUD, V18, P543, DOI 10.1016/S0020-7373(83)80031-5
   Buckley J, 2016, P 10 EUR C SOFTW ARC, P14
   Buckley J, 2006, P 18 ANN WORKSH PSYC, P168
   Buckley J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1291, DOI 10.1109/ICSE.2013.6606700
   Charmaz Kathy., 2009, Developing Grounded Theory: The Second Generation, P127
   Chen C, 2012, LECT NOTES COMPUT SC, V7467, P94, DOI 10.1007/978-3-642-32609-7_13
   Chochlov M, 2017, INFORM SOFTWARE TECH, V88, P110, DOI 10.1016/j.infsof.2017.04.003
   Clements P., 2002, DOCUMENTING SOFTWARE
   Corbin J., 2008, QUAL RES, DOI DOI 10.4135/9781452230153.N10
   Dagenais B., 2010, Proc. of the ICSE 10, P275, DOI DOI 10.1145/1806799.1806842
   de Gialdino I.V., 2009, Forum qualitative Sozialforschung/Forum: Qualitative social research, V10
   Dekel U, 2009, INT C PROGRAM COMPRE, P168, DOI 10.1109/ICPC.2009.5090040
   Dekel U, 2009, PROC INT CONF SOFTW, P320, DOI 10.1109/ICSE.2009.5070532
   DETIENNE F, 1990, INT J MAN MACH STUD, V33, P323, DOI 10.1016/S0020-7373(05)80122-1
   Ellis D, 1997, J DOC, V53, P384, DOI 10.1108/EUM0000000007204
   ERICSSON KA, 1980, PSYCHOL REV, V87, P215, DOI 10.1037/0033-295X.87.3.215
   Fagerholm F, 2013, 2013 IEEE 8TH INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING WORKSHOPS (ICGSEW 2013), P5, DOI 10.1109/ICGSEW.2013.8
   Feigenspan J., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P73
   Fritz T., 2010, P 32 ACMIEEE INT C S, P385
   Gamma Erich., 1995, DESIGN PATTERNS ELEM, V206
   Glaser B. G., 1967, DISCOVERY GROUNDED T, DOI 10.1515/9783111660211/html
   Gonçalves MK, 2011, J UNIVERS COMPUT SCI, V17, P1913
   Gorton I., 2006, ESSENTIAL SOFTWARE A
   Hertzum M, 2000, INFORM PROCESS MANAG, V36, P761, DOI 10.1016/S0306-4573(00)00011-X
   Hoda R, 2012, EMPIR SOFTW ENG, V17, P609, DOI 10.1007/s10664-011-9161-0
   Hunt A, 2002, IEEE SOFTWARE, V19, P20, DOI 10.1109/52.991327
   Johnson M, 2010, J WORKPLACE LEARN, V22, P180, DOI 10.1108/13665621011028620
   Jordan H, 2015, INT C PROGRAM COMPRE, P174, DOI 10.1109/ICPC.2015.26
   Kelly T, 2006, INT C PROGRAM COMPRE, P275, DOI 10.1109/ICPC.2006.5
   Kingrey KP, 2002, LIB PHILOS PRACT E J
   Ko AJ, 2007, PROC INT CONF SOFTW, P344
   Ko AJ, 2006, IEEE T SOFTWARE ENG, V32, P971, DOI 10.1109/TSE.2006.116
   KUHLTHAU CC, 1988, RQ, V28, P232
   LAKHOTIA A, 1993, J SYST SOFTWARE, V23, P269, DOI 10.1016/0164-1212(93)90101-3
   LaToza T. D., 2006, 28th International Conference on Software Engineering Proceedings, P492, DOI 10.1145/1134285.1134355
   Lawrance J, 2013, IEEE T SOFTWARE ENG, V39, P197, DOI 10.1109/TSE.2010.111
   Lawrance J, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P25
   Lee S, 2012, STUD COMPUT INTELL, V377, P61
   Lethbridge TC, 2005, EMPIR SOFTW ENG, V10, P311, DOI 10.1007/s10664-005-1290-x
   Lethbridge TC, 2003, IEEE SOFTWARE, V20, P35, DOI 10.1109/MS.2003.1241364
   LETOVSKY S, 1987, J SYST SOFTWARE, V7, P325, DOI 10.1016/0164-1212(87)90032-X
   Lincoln YS., 1985, NAT INQ, V289, P331
   MacLeod L, 2015, INT C PROGRAM COMPRE, P104, DOI 10.1109/ICPC.2015.19
   Marchionini G., 1997, Information seeking in electronic environments, V9
   Matroska, 2013, MATR MED CONT
   McDonald D. W., 1998, ACM 1998 Conference on Computer Supported Cooperative Work. Proceedings. CSCW 98, P315, DOI 10.1145/289444.289506
   McKeogh J., 2004, P OOPSLAWORKSHOP ECL, P93
   Mockus A, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P503, DOI 10.1109/ICSE.2002.1007994
   Muhr T, 2013, ATLAS TI V6
   Murray A, 2005, PROG COMPREHEN, P45, DOI 10.1109/WPC.2005.28
   Murray A., 2005, CASCON 05, P200
   Murray AR, 2006, THESIS
   Neville-Neil GV, 2003, ACM QUEUE, V1, P42
   Northrup D.A., 1997, PROBLEM SELF REPORT
   O'Brien MP, 2005, PROC IEEE INT CONF S, P433
   O'Brien MP, 2004, J SOFTW MAINT EVOL-R, V16, P427, DOI 10.1002/smr.307
   O'Brien S.R.M., 2007, INDICATIONS ENV LITE
   PENNINGTON N, 1987, COGNITIVE PSYCHOL, V19, P295, DOI 10.1016/0010-0285(87)90007-7
   Perlow LA, 1999, ADMIN SCI QUART, V44, P57, DOI 10.2307/2667031
   Pirolli P, 1999, PSYCHOL REV, V106, P643, DOI 10.1037/0033-295X.106.4.643
   Poff MA, 2003, TECHNICAL REPORT
   Ragavan SS, 2017, PROCEEDINGS OF THE 2017 ACM SIGCHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'17), P6232, DOI 10.1145/3025453.3025818
   Ragavan SS, 2016, 34TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, CHI 2016, P3509, DOI 10.1145/2858036.2858469
   Ratanotayanon S, 2006, P 21 INT C AUT SOFTW, P9
   Razzaq Abdul, 2018, ACM T SOFTW ENG METH, V28, P1
   Riley J., 1996, Getting the most from your data
   Rist Robert S., 1986, P 1 WORKSH EMP STUD, P28
   Robillard MP, 2004, IEEE T SOFTWARE ENG, V30, P889, DOI 10.1109/TSE.2004.101
   Rubin J., 2013, Domain Engineering, P29, DOI DOI 10.1007/978-3-642-36654-3
   Seaman CB, 2002, PROC IEEE INT CONF S, P141, DOI 10.1109/ICSM.2002.1167761
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   SHAFT TM, 1995, INFORM SYST RES, V6, P286, DOI 10.1287/isre.6.3.286
   Sharif KY, 2015, INFORM SOFTWARE TECH, V57, P77, DOI 10.1016/j.infsof.2014.09.003
   Sharif KY, 2012, THESIS
   Shaw M., 1996, SOFTWARE ARCHITECTUR
   SHEPPARD SB, 1979, COMPUTER, V12, P41, DOI 10.1109/MC.1979.1658575
   Shi JC, 2011, INT GEOSCI REMOTE SE, P1, DOI 10.1109/IGARSS.2011.6048882
   SHNEIDERMAN B, 1979, INT J COMPUT INF SCI, V8, P219, DOI 10.1007/BF00977789
   Sillito J., 2006, Proc. of the ACM SIGSOFT Int'l Symp. on Foundations of Software Engineering, P23, DOI DOI 10.1145/1181775.1181779
   Sillito J, 2008, IEEE T SOFTWARE ENG, V34, P434, DOI 10.1109/TSE.2008.26
   Sim SE, 1998, PROC INT CONF SOFTW, P361, DOI 10.1109/ICSE.1998.671389
   Singer J, 1998, PROC IEEE INT CONF S, P139, DOI 10.1109/ICSM.1998.738502
   Smith-Atakan S., 2006, HUMAN COMPUTER INTER
   SOLOWAY E, 1984, IEEE T SOFTWARE ENG, V10, P595, DOI 10.1109/TSE.1984.5010283
   Starke J, 2009, PROC IEEE INT CONF S, P157, DOI 10.1109/ICSM.2009.5306335
   Stol KJ, 2016, PROC INT CONF SOFTW, P120, DOI 10.1145/2884781.2884833
   Storey MA, 2006, SOFTWARE QUAL J, V14, P187, DOI 10.1007/s11219-006-9216-4
   van Deursen A, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P176, DOI 10.1109/WCRE.2001.957822
   van Maanen J., 1979, RES ORGAN BEHAV, V1, P209, DOI DOI 10.1108/S2046-410X(2013)0000001006
   VideoLAN, 2013, VLC MED PLAYER
   von Mayrhauser A., 1993, Proceedings IEEE Second Workshop on Program Comprehension (Cat. No.93TH0551-2), P78, DOI 10.1109/WPC.1993.263903
   von Mayrhauser Anneliese., 1995, ADV COMPUT, P1
   vonMayrhauser A, 1997, J SOFTW MAINT-RES PR, V9, P299, DOI 10.1002/(SICI)1096-908X(199709/10)9:5<299::AID-SMR157>3.0.CO;2-S
   VONMAYRHAUSER A, 1995, SOFTWARE ENG J, V10, P171, DOI 10.1049/sej.1995.0023
   WIEDENBECK S, 1986, INT J MAN MACH STUD, V25, P697, DOI 10.1016/S0020-7373(86)80083-9
   WILSON TD, 1981, J DOC, V37, P3, DOI 10.1108/eb026702
NR 110
TC 9
Z9 9
U1 0
U2 11
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN
PY 2020
VL 25
IS 1
BP 940
EP 995
DI 10.1007/s10664-019-09741-6
PG 56
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA KP0WS
UT WOS:000515965100024
DA 2024-07-18
ER

PT J
AU Ragkhitwetsagul, C
   Krinke, J
AF Ragkhitwetsagul, Chaiyong
   Krinke, Jens
TI Siamese: scalable and incremental code clone search via multiple code
   representations
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Code clone search; Code search engine
ID SYSTEM
AB This paper presents a novel code clone search technique that is accurate, incremental, and scalable to hundreds of million lines of code. Our technique incorporates multiple code representations (i.e., a technique to transform code into various representations to capture different types of clones), query reduction (i.e., a technique to select clone search keywords based on their uniqueness), and a customised ranking function (i.e., a technique to allow a specific clone type to be ranked on top of the search results) to improve clone search performance. We implemented the technique in a clone search tool, called Siamese, and evaluated its search accuracy and scalability on three established clone data sets. Siamese offers the highest mean average precision of 95% and 99% on two clone benchmarks compared to seven state-of-the-art clone detection tools, and reported the largest number of Type-3 clones compared to three other code search engines. Siamese is scalable and can return cloned code snippets within 8 seconds for a code corpus of 365 million lines of code. Using an index of 130,719 GitHub projects, we demonstrate that Siamese's incremental indexing capability dramatically decreases the index preparation time for large-scale data sets with multiple releases of software projects. The paper discusses the applications of Siamese to facilitate software development and research with two use cases including online code clone detection and clone search with automated license analysis.
C1 [Ragkhitwetsagul, Chaiyong] Mahidol Univ, Fac Informat & Commun Technol, 999 Phuttamonthon 4 Rd, Salaya 73170, Nakhon Pathom, Thailand.
   [Krinke, Jens] UCL, Dept Comp Sci, Ctr Res Evolut Search & Testing, Gower St, London WC1E 6BT, England.
C3 Mahidol University; University of London; University College London
RP Ragkhitwetsagul, C (corresponding author), Mahidol Univ, Fac Informat & Commun Technol, 999 Phuttamonthon 4 Rd, Salaya 73170, Nakhon Pathom, Thailand.
EM chaiyong.rag@mahidol.ac.th
RI Ragkhitwetsagul, Chaiyong/W-2835-2019; Ragkhitwetsagul,
   Chaiyong/JOZ-6943-2023; Krinke, Jens/E-9011-2011
OI Ragkhitwetsagul, Chaiyong/0000-0002-6502-1107; Krinke,
   Jens/0000-0003-1009-2861
CR Abdalkareem R, 2017, INFORM SOFTWARE TECH, V88, P148, DOI 10.1016/j.infsof.2017.04.005
   Acar Y, 2016, P IEEE S SECUR PRIV, P289, DOI 10.1109/SP.2016.25
   An L, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P283, DOI 10.1109/SANER.2017.7884629
   [Anonymous], 2010, P 32 ACMIEEE INT C S
   [Anonymous], 2010, IEEE INT C SOFTWAREM
   [Anonymous], J ED BEHAV STAT
   [Anonymous], 2009, INTRO INFORM RETRIEV
   [Anonymous], 2009, ENCY DATABASE SYSTEM
   [Anonymous], 2005, P 2005 ACM S APPL CO, DOI DOI 10.1145/1066677.1066753
   [Anonymous], DETECTION SOURCE COD
   [Anonymous], 2007, P CIKM
   Aversano L, 2007, CSMR 2007: 11TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P81
   Bajracharya S.K., 2010, P 18 ACM SIGSOFT INT, P157, DOI 10.1145/1882291.1882316
   Balasubramanian N, 2010, SIGIR 2010: PROCEEDINGS OF THE 33RD ANNUAL INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH DEVELOPMENT IN INFORMATION RETRIEVAL, P571
   Baltes S, 2018, PROCEEDINGS OF THE 4TH ACM SIGSOFT INTERNATIONAL WORKSHOP ON SOFTWARE ANALYTICS (SWAN'18), P1, DOI 10.1145/3278142.3278143
   Bauer V, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 3, P23, DOI 10.1109/SANER.2016.26
   Baxter ID, 1998, PROC IEEE INT CONF S, P368, DOI 10.1109/ICSM.1998.738528
   Beckman NE, 2011, LECT NOTES COMPUT SC, V6813, P2, DOI 10.1007/978-3-642-22655-7_2
   Bellon S, 2007, IEEE T SOFTWARE ENG, V33, P577, DOI 10.1109/TSE.2007.70725
   Bendersky Michael, 2008, P 31 ANN INT ACM SIG, P491
   Burrows S, 2007, SOFTWARE PRACT EXPER, V37, P151, DOI 10.1002/spe.750
   Chatterji D, 2016, EMPIR SOFTW ENG, V21, P1476, DOI 10.1007/s10664-015-9394-4
   Davey N, 1995, INT J APPL SOFTW TEC, V1, P3
   Elasticsearch BV, 2012, LUCENES PRACTICAL SC
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gallardo-Valencia RE, 2009, 2009 ICSE WORKSHOP ON SEARCH-DRIVEN DEVELOPMENT-USERS, INFRASTRUCTURE, TOOLS AND EVALUATION, P49, DOI 10.1109/SUITE.2009.5070022
   German Daniel M., 2010, P 25 IEEE ACM INT C, P437, DOI [10.1145/1858996.1859088, DOI 10.1145/1858996.1859088]
   Göde N, 2009, EUR CON SFTWR MTNCE, P219, DOI 10.1109/CSMR.2009.20
   Gu XD, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P933, DOI 10.1145/3180155.3180167
   Harris S., 2015, SIMIAN SIMILARITY AN
   Inoue K, 2012, PROC INT CONF SOFTW, P331, DOI 10.1109/ICSE.2012.6227181
   Ishio T, 2017, IEEE WORK CONF MIN S, P257, DOI 10.1109/MSR.2017.19
   Jiang LX, 2007, PROC INT CONF SOFTW, P96
   Juergens E, 2011, P 15 EUR C SOFTW MAI, P78
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kapser C, 2006, WORK CONF REVERSE EN, P19
   Kawaguchi S, 2009, WORK CONF REVERSE EN, P313, DOI [10.1109/MCRE.2009.36, 10.1109/WCRE.2009.36]
   Ke YL, 2015, IEEE INT CONF AUTOM, P295, DOI 10.1109/ASE.2015.60
   Keivanloo I., 2012, Proceedings 2012 4th International Workshop on Search-driven Development: Users, Infrastructure, Tools, and Evaluation (SUITE 2012), P21, DOI 10.1109/SUITE.2012.6225474
   Keivanloo I, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P664, DOI 10.1145/2568225.2568292
   Keivanloo I, 2011, CONF PROC INT SYMP C, P223, DOI 10.1109/ICPC.2011.29
   Kim K, 2018, ICSE 18
   Knuth DE, 1971, EMPIRICAL STUDY FORT, V1, P105
   Koschke R, 2006, WORK CONF REVERSE EN, P253
   Koschke R, 2014, J SOFTW-EVOL PROC, V26, P747, DOI 10.1002/smr.1592
   KRINKE J, 2001, WCRE 01
   Kumaran G., 2007, NAACL-HLT, P220
   Kumaran G, 2009, PROCEEDINGS 32ND ANNUAL INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P564, DOI 10.1145/1571941.1572038
   Lavoie T., 2010, IWSC10 Proceedings of the 4th International Workshop on Software Clones, P25
   Lee M.-W., 2010, Proceedings of the Eighteenth ACM SIGSOFT International Symposium on Foundations of Software Engineering, FSE '10, P167
   Li LQ, 2017, PROC IEEE INT CONF S, P249, DOI 10.1109/ICSME.2017.46
   Linstead E, 2009, DATA MIN KNOWL DISC, V18, P300, DOI 10.1007/s10618-008-0118-x
   Livieri S, 2010, NEEDLE STACK EFFICIE
   Lopes CV, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133908
   Martie L, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P774, DOI 10.1145/3106237.3106293
   McMillan C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P111, DOI 10.1145/1985793.1985809
   MILLER GA, 1956, PSYCHOL REV, V63, P81, DOI 10.1037/h0043158
   Nasehi SM, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P25, DOI 10.1109/ICSM.2012.6405249
   Nguyen TT, 2009, PROC IEEE INT CONF S, P491, DOI 10.1109/ICSM.2009.5306283
   Nishi MA, 2018, J SYST SOFTWARE, V137, P130, DOI 10.1016/j.jss.2017.11.039
   Niu HR, 2017, EMPIR SOFTW ENG, V22, P259, DOI 10.1007/s10664-015-9421-5
   Ohmann T, 2015, KNOWL INF SYST, V43, P445, DOI 10.1007/s10115-014-0742-2
   Omar C, 2012, PROC INT CONF SOFTW, P859, DOI 10.1109/ICSE.2012.6227133
   Park JW, 2014, KNOWL INF SYST, V41, P727, DOI 10.1007/s10115-013-0677-z
   Parr T, 2017, GRAMMARS WRITTEN ANT
   Ponzanelli L, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1295, DOI 10.1109/ICSE.2013.6606701
   Ponzanelli Luca, 2014, P 11 WORKING C MININ, P102, DOI DOI 10.1145/2597073.2597077
   Prechelt L, 2002, J UNIVERS COMPUT SCI, V8, P1016
   Ragkhitwetsagul C, 2019, T SOFTWARE ENG EARLY
   Ragkhitwetsagul C, 2018, EMPIR SOFTW ENG, V23, P2464, DOI 10.1007/s10664-017-9564-7
   Rajaraman A., 2011, Mining of Massive Datasets, vol, V67
   Rilling J, 2018, IJADATASET 2 0
   ROBERTSON SE, 1990, J DOC, V46, P359, DOI 10.1108/eb026866
   Roy CK, 2010, J SOFTW MAINT EVOL-R, V22, P165, DOI 10.1002/smr.416
   Roy CK, 2008, INT C PROGRAM COMPRE, P172, DOI 10.1109/ICPC.2008.41
   Roy CK, 2009, SCI COMPUT PROGRAM, V74, P470, DOI 10.1016/j.scico.2009.02.007
   Sadowski C, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P191, DOI 10.1145/2786805.2786855
   Saini V, 2018, 26 ACM JOINT EUR SOF
   Sajnani H, 2016, PROC INT CONF SOFTW, P1157, DOI 10.1145/2884781.2884877
   SALTON G, 1975, COMMUN ACM, V18, P613, DOI 10.1145/361219.361220
   Schleimer Saul, 2003, P 2003 ACM SIGMOD IN, P76, DOI [10.1145/872757.872770, DOI 10.1145/872757.872770]
   Sim S.E., 2013, Finding Source Code on the Web for Remix and Reuse
   Sim SE, 2011, ACM T SOFTW ENG METH, V21, DOI 10.1145/2063239.2063243
   Slaney M, 2008, IEEE SIGNAL PROC MAG, V25, P128, DOI 10.1109/MSP.2007.914237
   Svajlenko J, 2017, PROC IEEE ACM INT C, P27, DOI 10.1109/ICSE-C.2017.3
   Svajlenko J, 2016, PROC IEEE INT CONF S, P596, DOI 10.1109/ICSME.2016.62
   Svajlenko J, 2015, PROC IEEE INT CONF S, P131, DOI 10.1109/ICSM.2015.7332459
   Svajlenko J, 2014, PROC IEEE INT CONF S, P321, DOI 10.1109/ICSME.2014.54
   Svajlenko J, 2014, PROC IEEE INT CONF S, P476, DOI 10.1109/ICSME.2014.77
   Tamersoy A, 2014, PROCEEDINGS OF THE 20TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'14), P1524, DOI 10.1145/2623330.2623342
   Taube-Schock C, 2011, LECT NOTES COMPUT SC, V6813, P204, DOI 10.1007/978-3-642-22655-7_10
   Tempero E, 2010, ASIA PAC SOFWR ENG, P336, DOI 10.1109/APSEC.2010.46
   van Bruggen D, 2017, JAVAPARSER PROCESS J
   Vasilescu B., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P313, DOI 10.1109/ICSM.2011.6080798
   Wang Tiantian, 2013, P 2013 9 JOINT M FDN, P455
   White M, 2016, IEEE INT CONF AUTOM, P87, DOI 10.1145/2970276.2970326
   Yang D, 2017, MSR 17
   Zhang F, 2017, EXPANDING QUERIES CO, DOI [10.1109/TSE.2017.2750682, DOI 10.1109/TSE.2017.2750682]
   Zhang HY, 2008, WORK CONF REVERSE EN, P101, DOI 10.1109/WCRE.2008.37
   Zipf G. K, 1932, SELECTIVE STUDIES PR
NR 100
TC 35
Z9 37
U1 0
U2 11
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2019
VL 24
IS 4
BP 2236
EP 2284
DI 10.1007/s10664-019-09697-7
PG 49
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IL9CL
UT WOS:000477582700016
DA 2024-07-18
ER

PT J
AU Zhao, GL
   da Costa, DA
   Zou, Y
AF Zhao, Guoliang
   da Costa, Daniel Alencar
   Zou, Ying
TI Improving the pull requests review process using learning-to-rank
   algorithms
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Review
DE Pull requests; Learning-to-rank; Merged; Rejected
ID READABILITY
AB Collaborative software development platforms (such as GitHub and GitLab) have become increasingly popular as they have attracted thousands of external contributors to contribute to open source projects. The external contributors may submit their contributions via pull requests, which must be reviewed before being integrated into the central repository. During the review process, reviewers provide feedback to contributors, conduct tests and request further modifications before finally accepting or rejecting the contributions. The role of reviewers is key to maintain the effective review process of the project. However, the number of decisions that reviewers can make is far superseded by the increasing number of pull requests submissions. To help reviewers to perform more decisions on pull requests within their limited working time, we propose a learning-to-rank (LtR) approach to recommend pull requests that can be quickly reviewed by reviewers. Different from a binary model for predicting the decisions of pull requests, our ranking approach complements the existing list of pull requests based on their likelihood of being quickly merged or rejected. We use 18 metrics to build LtR models and we use six different LtR algorithms, such as ListNet, RankNet, MART and random forest. We conduct empirical studies on 74 Java projects to compare the performances of the six LtR algorithms. We compare the best performing algorithm against two baselines obtained from previous research regarding pull requests prioritization: the first-in-and-first-out (FIFO) baseline and the small-size-first baseline. We then conduct a survey with GitHub reviewers to understand the perception of code reviewers regarding the usefulness of our approach. We observe that: (1) The random forest LtR algorithm outperforms other five well adapted LtR algorithms to rank quickly merged pull requests. (2) The random forest LtR algorithm performs better than both the FIFO and the small-size-first baselines, which means our LtR approach can help reviewers make more decisions and improve their productivity. (3) The contributor's social connections and contributor's experience are the most influential metrics to rank pull requests that can be quickly merged. (4) The GitHub reviewers that participated in our survey acknowledge that our approach complements existing prioritization baselines to help them to prioritize and to review more pull requests.
C1 [Zhao, Guoliang] Queens Univ, Sch Comp, Kingston, ON, Canada.
   [da Costa, Daniel Alencar] Univ Otago, Dept Informat Sci, Dunedin 9016, New Zealand.
   [Zou, Ying] Queens Univ, Dept Elect & Comp Engn, Kingston, ON, Canada.
C3 Queens University - Canada; University of Otago; Queens University -
   Canada
RP Zhao, GL (corresponding author), Queens Univ, Sch Comp, Kingston, ON, Canada.
EM 17gz2@queensu.ca; danielcalencar@otago.ac.nz; ying.zou@queensu.ca
RI Zou, Ying/KLC-9380-2024
OI Zhao, Guoliang/0000-0003-0152-5100
CR [Anonymous], 1998, ENCY BIOSTATISTICS
   [Anonymous], 2003, Journal of machine learning research
   [Anonymous], 2013, EURASIP J ADV SIGNAL, DOI DOI 10.1155/2013/189105
   [Anonymous], 2007, P 22 IEEE ACM INT C, DOI DOI 10.1145/1321631.1321639
   [Anonymous], 2012, Proceedings of_the_21st_ACM_international_conference_on_Information_and_knowledge management
   [Anonymous], 2014, Synthesis_Lectures_on_Human_Language_Technologies
   [Anonymous], 1999, Support vector learning for ordinal regression
   [Anonymous], 2008, Proceedings of the 2008 international working conference on Mining software repositories
   [Anonymous], 2002, P INT WORKSH PRINC S
   Balachandran V, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P931, DOI 10.1109/ICSE.2013.6606642
   Breiman L., 2001, Mach. Learn., V45, P5
   Burges C., 2005, ICML, P89
   Cao Z., 2007, P 24 INT C MACHINE L, P129, DOI DOI 10.1145/1273496.1273513
   Colaco M, 2013, J UROLOGY, V189, P1048, DOI 10.1016/j.juro.2012.08.255
   Friedman JH, 2001, ANN STAT, V29, P1189, DOI 10.1214/aos/1013203451
   Gousios G, 2016, PROC INT CONF SOFTW, P285, DOI 10.1145/2884781.2884826
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   Gousios G, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P358, DOI 10.1109/ICSE.2015.55
   Gousios G, 2013, IEEE WORK CONF MIN S, P233, DOI 10.1109/MSR.2013.6624034
   Herbrich R, 2000, ADV NEUR IN, P115
   Hindle Abram, 2008, P 2008 INT WORKING C, P99
   Kalliamvakou E., 2014, P 11 WORKING C MININ, P92, DOI DOI 10.1145/2597073.2597074
   KRUSKAL WH, 1952, J AM STAT ASSOC, V47, P583, DOI 10.1080/01621459.1952.10483441
   Leys C, 2013, J EXP SOC PSYCHOL, V49, P764, DOI 10.1016/j.jesp.2013.03.013
   Li H, 2011, IEICE T INF SYST, VE94D, P1854, DOI 10.1587/transinf.E94.D.1854
   McCallum D.R., 1982, Proceedings of ACM, P44
   Metzler D, 2007, INFORM RETRIEVAL, V10, P257, DOI 10.1007/s10791-006-9019-z
   Niu SZ, 2012, SIGIR 2012: PROCEEDINGS OF THE 35TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P751, DOI 10.1145/2348283.2348384
   Ogawa M, 2007, ASIA-PACIFIC SYMPOSIUM ON VISUALISATION 2007, PROCEEDINGS, P25
   Padhye R., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, P332, DOI 10.1145/2597073.2597113
   Pham R, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P112, DOI 10.1109/ICSE.2013.6606557
   Steinmacher I, 2018, ALMOST THERE STUDY Q, P12
   TENNY T, 1988, IEEE T SOFTWARE ENG, V14, P1271, DOI 10.1109/32.6171
   Thongtanunam P, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P141, DOI 10.1109/SANER.2015.7081824
   Thongtanunam Patanamon, 2014, P 7 INT WORKSHOP COO, P119
   Tsay J, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P356, DOI 10.1145/2568225.2568315
   van der Veen E, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P357, DOI 10.1109/MSR.2015.40
   Vasilescu B, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P805, DOI 10.1145/2786805.2786850
   Yang J, 2017, VIRUSES-BASEL, V9, DOI 10.3390/v9010020
   Yu Y, 2014, PROC IEEE INT CONF S, P609, DOI 10.1109/ICSME.2014.107
   Zhao SP, 2014, ATMOS POLLUT RES, V5, P335, DOI 10.5094/APR.2014.039
NR 41
TC 25
Z9 29
U1 1
U2 9
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2019
VL 24
IS 4
BP 2140
EP 2170
DI 10.1007/s10664-019-09696-8
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IL9CL
UT WOS:000477582700013
DA 2024-07-18
ER

PT J
AU Thongtanunam, P
   Shang, W
   Hassan, AE
AF Thongtanunam, Patanamon
   Shang, Weiyi
   Hassan, Ahmed E.
TI Will this clone be short-lived? Towards a better understanding of the
   characteristics of short-lived clones
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Code clone; Software management; Software maintenance; Software
   evolution
ID CODE; MANAGEMENT; HARMFUL
AB Code clones are created when a developer duplicates a code fragment to reuse existing functionalities. Mitigating clones by refactoring them helps ease the long-term maintenance of large software systems. However, refactoring can introduce an additional cost. Prior work also suggest that refactoring all clones can be counterproductive since clones may live in a system for a short duration. Hence, it is beneficial to determine in advance whether a newly-introduced clone will be short-lived or long-lived to plan the most effective use of resources. In this work, we perform an empirical study on six open source Java systems to better understand the life expectancy of clones. We find that a large number of clones (i.e., 30% to 87%) lived in the systems for a short duration. Moreover, we find that although short-lived clones were changed more frequently than long-lived clones throughout their lifetime, short-lived clones were consistently changed with their siblings less often than long-lived clones. Furthermore, we build random forest classifiers in order to determine the life expectancy of a newly-introduced clone (i.e., whether a clone will be short-lived or long-lived). Our empirical results show that our random forest classifiers can determine the life expectancy of a newly-introduced clone with an average AUC of 0.63 to 0.92. We also find that the churn made to the methods containing a newly-introduced clone, the complexity and size of the methods containing the newly-introduced clone are highly influential in determining whether the newly-introduced clone will be short-lived. Furthermore, the size of a newly-introduced clone shares a positive relationship with the likelihood that the newly-introduced clone will be short-lived. Our results suggest that, to improve the efficiency of clone management efforts, practitioners can leverage our classifiers and insights in order to determine whether a newly-introduced clone will be short-lived or long-lived to plan the most effective use of their clone management resources in advance.
C1 [Thongtanunam, Patanamon] Univ Melbourne, Sch Comp & Informat Syst, Melbourne, Vic, Australia.
   [Shang, Weiyi] Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ, Canada.
   [Hassan, Ahmed E.] Queens Univ, SAIL, Kingston, ON, Canada.
C3 University of Melbourne; Concordia University - Canada; Queens
   University - Canada
RP Thongtanunam, P (corresponding author), Univ Melbourne, Sch Comp & Informat Syst, Melbourne, Vic, Australia.
EM patanamon.thongtanunam@unimelb.edu.au; shang@encs.concordia.ca;
   ahmed@cs.queensu.ca
RI KHALIFA, AHMED khalifa/HKF-2246-2023; Ali, Ahmed/HOF-4672-2023; Hassan,
   Ahmed/AAB-7241-2019
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; 
CR Al-Ekram R., 2005, ISESE, P376
   [Anonymous], SOCIETY FOR INDUSTRI
   [Anonymous], A108 SAS
   [Anonymous], P 40 INT C SOFTW ENG
   [Anonymous], DISPLAY ANAL ROC CUR
   [Anonymous], ENG
   [Anonymous], 2001, P 18 INT C MACH LEAR
   [Anonymous], J EMPIR SOFTW ENG EM
   [Anonymous], P 4 INT WORKSH SOFTW
   [Anonymous], SOFTWARE CLONE DETEC
   [Anonymous], P INT C SOFTW ENG SO
   [Anonymous], 2018, ARXIV180110271
   [Anonymous], 1994, INTRO BOOTSTRAP
   [Anonymous], THESIS
   [Anonymous], ENG
   [Anonymous], 2015, J FUTURE COMPUT COMM, DOI DOI 10.7763/IJFCC.2015.V4.384
   [Anonymous], SCOTT KNOTT EFFECT S
   BAKER BS, 1995, SECOND WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P86, DOI 10.1109/WCRE.1995.514697
   Barbour L., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P273, DOI 10.1109/ICSM.2011.6080794
   Baxter ID, 1998, PROC IEEE INT CONF S, P368, DOI 10.1109/ICSM.1998.738528
   Bettenburg N, 2009, WORK CONF REVERSE EN, P85, DOI 10.1109/WCRE.2009.51
   Bettenburg N, 2012, SCI COMPUT PROGRAM, V77, P760, DOI 10.1016/j.scico.2010.11.010
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Breiman L., 2001, Mach. Learn., V45, P5
   Breiman L., 2015, Breiman and cutler's random forests for classification and regression
   Calinski T., 1974, Communications in Statistics-Simulation and Computation, V3, P1, DOI [10.1080/03610927408827101, DOI 10.1080/03610927408827101]
   Charrad M, 2014, J STAT SOFTW, V61, P1
   Cordy JR, 2003, PROG COMPREHEN, P196
   Dang YN, 2012, 28TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2012), P369
   Duala-Ekoko E, 2007, PROC INT CONF SOFTW, P158
   Ducasse S., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P109, DOI 10.1109/ICSM.1999.792593
   EFRON B, 1983, J AM STAT ASSOC, V78, P316, DOI 10.2307/2288636
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Göde N, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P311, DOI 10.1145/1985793.1985836
   Göde N, 2009, EUR CON SFTWR MTNCE, P219, DOI 10.1109/CSMR.2009.20
   Harrell F.E., 2002, Regression modeling strategies
   Hassan AE, 2008, APPLIED COMPUTING 2008, VOLS 1-3, P837
   Hata H., 2011, Proc. 12th Int'l Workshop on Principles of Software Evolution and the 7th Annual ERCIM Workshop on Software Evolution, P96
   Hou DQ, 2009, INT C PROGRAM COMPRE, P238, DOI 10.1109/ICPC.2009.5090049
   Johnson J. H., 1993, Proceedings CASCON '93, P171
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kapser C, 2006, WORK CONF REVERSE EN, P19
   Kapser CJ, 2008, EMPIR SOFTW ENG, V13, P645, DOI 10.1007/s10664-008-9076-6
   Kim M, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P83
   Kim MK, 2012, EXP DIABETES RES, DOI 10.1155/2012/509437
   Kim Miryung, 2005, ESEC/FSE- 13), P187, DOI [10.1145/1081706.1081737, DOI 10.1145/1081706.1081737]
   Koschke R, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 3, P1, DOI 10.1109/SANER.2016.28
   KRZANOWSKI WJ, 1988, BIOMETRICS, V44, P23, DOI 10.2307/2531893
   Lague B, 1997, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P314, DOI 10.1109/ICSM.1997.624264
   Lin Y, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P164, DOI 10.1145/2568225.2568298
   Lopes CV, 2017, P OBJECT ORIENTED PR, P1
   Macbeth G, 2011, UNIV PSYCHOL, V10, P545, DOI 10.11144/Javeriana.upsy10-2.cdcp
   MARRIOTT FH, 1971, BIOMETRICS, V27, P501, DOI 10.2307/2528592
   Mockus A, 2000, PROC IEEE INT CONF S, P120, DOI 10.1109/ICSM.2000.883028
   Monden A, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P87, DOI 10.1109/METRIC.2002.1011328
   Nicodemus KK, 2010, BMC BIOINFORMATICS, V11, DOI 10.1186/1471-2105-11-110
   Romano J, 2006, ANN M FLOR ASS I RES, P1
   Roy CK, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P18, DOI 10.1109/CSMR-WCRE.2014.6747168
   Saha R. K., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P293, DOI 10.1109/ICSM.2011.6080796
   Saha RK, 2010, IEEE INT WORK C SO, P87, DOI 10.1109/SCAM.2010.32
   Saini V, 2016, PROC IEEE INT CONF S, P257, DOI 10.1109/ICSME.2016.94
   SCOTT AJ, 1971, BIOMETRICS, V27, P387, DOI 10.2307/2529003
   SCOTT AJ, 1974, BIOMETRICS, V30, P507, DOI 10.2307/2529204
   Silva D, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P858, DOI 10.1145/2950290.2950305
   Svajlenko J, 2014, PROC IEEE INT CONF S, P321, DOI 10.1109/ICSME.2014.54
   Tantithamthavorn C., 2018, The impact of class rebalancing techniques on the performance and interpretation of defect prediction models
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Thongtanunam P, 2017, EMPIR SOFTW ENG, V22, P768, DOI 10.1007/s10664-016-9452-6
   Thummalapenta S, 2010, EMPIR SOFTW ENG, V15, P1, DOI 10.1007/s10664-009-9108-x
   Wang W, 2014, PROC IEEE INT CONF S, P331, DOI 10.1109/ICSME.2014.55
   Xie S, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P94, DOI 10.1109/CSMR-WCRE.2014.6747229
   Zhang G, 2013, IEEE INT CONF AUTOM, P497, DOI 10.1109/ASE.2013.6693107
   Zhang G, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P285, DOI 10.1109/ICSM.2012.6405284
   Zibran MF, 2013, APPL COMPUT REV, V13, P30, DOI 10.1145/2577554.2577559
NR 74
TC 10
Z9 11
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2019
VL 24
IS 2
BP 937
EP 972
DI 10.1007/s10664-018-9645-2
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HQ8DM
UT WOS:000462654200012
DA 2024-07-18
ER

PT J
AU Klotins, E
   Unterkalmsteiner, M
   Gorschek, T
AF Klotins, Eriks
   Unterkalmsteiner, Michael
   Gorschek, Tony
TI Software engineering in start-up companies: An analysis of 88 experience
   reports
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software start-up; Software engineering practices; Experience reports
ID REQUIREMENTS; CHALLENGES; PRIORITIZATION; ARCHITECTURE; QUALITY
AB Context Start-up companies have become an important supplier of innovation and software-intensive products. The flexibility and reactiveness of start-ups enables fast development and launch of innovative products. However, a majority of software start-up companies fail before achieving any success. Among other factors, poor software engineering could be a significant contributor to the challenges experienced by start-ups. However, the state-of-practice of software engineering in start-ups, as well as the utilization of state-of-the-art is largely an unexplored area.
   Objective In this study we investigate how software engineering is applied in start-up context with a focus to identify key knowledge areas and opportunities for further research.
   Method We perform a multi-vocal exploratory study of 88 start-up experience reports. We develop a custom taxonomy to categorize the reported software engineering practices and their interrelation with business aspects, and apply qualitative data analysis to explore influences and dependencies between the knowledge areas.
   Results We identify the most frequently reported software engineering (requirements engineering, software design and quality) and business aspect (vision and strategy development) knowledge areas, and illustrate their relationships. We also present a summary of how relevant software engineering knowledge areas are implemented in start-ups and identify potentially useful practices for adoption in start-ups.
   Conclusions The results enable a more focused research on engineering practices in start-ups. We conclude that most engineering challenges in start-ups stem from inadequacies in requirements engineering. Many promising practices to address specific engineering challenges exists, however more research on adaptation of established practices, and validation of new start-up specific practices is needed.
C1 [Klotins, Eriks; Unterkalmsteiner, Michael; Gorschek, Tony] Blekinge Inst Technol, Software Engn Res Lab, Kariskrona, Sweden.
C3 Blekinge Institute Technology
RP Klotins, E (corresponding author), Blekinge Inst Technol, Software Engn Res Lab, Kariskrona, Sweden.
EM eriks.klotins@bth.se
CR Aamir Khan Rao, 2011, Proceedings of the 2011 IEEE 6th International Conference on Intelligent Data Acquisition and Advanced Computing Systems: Technology and Applications (IDAACS 2011), P879, DOI 10.1109/IDAACS.2011.6072898
   Abrahamsson P., 2016, E INFORM SOFTWARE EN, V10, P1
   Ambler SW, 2002, IEEE SOFTWARE, V19, P66, DOI 10.1109/52.991334
   [Anonymous], 2014, Guide to the Software Engineering Body of Knowledge SWEBOK  A Project of the IEEE Computer Society
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], 2005, BUSINESS MODELS ORIG, DOI DOI 10.17705/1CAIS.01601
   [Anonymous], 2015, TECHNICAL REPORT
   [Anonymous], 2009, CODING MANUAL QUALIT
   [Anonymous], P 15 INT C REQ ENG R
   [Anonymous], 2015, TECHNICAL REPORT
   [Anonymous], GUID BUS PROC MAN CO
   Azar J, 2007, IEEE SOFTWARE, V24, P32, DOI 10.1109/MS.2007.30
   Bajwa SS, 2017, EMPIR SOFTW ENG, V22, P2373, DOI 10.1007/s10664-016-9458-0
   Baskerville R, 2003, IEEE SOFTWARE, V20, P70, DOI 10.1109/MS.2003.1241369
   Bjarnason E., 2010, 2010 Fourth International Workshop on Software Product Management (IWSPM), P30, DOI 10.1109/IWSPM.2010.5623866
   Blank, 2013, 4 STEPS EPIPHANY
   Blank S, 2013, HARVARD BUS REV, V91, P64
   Boehm B, 2003, VALUE BASED SOFTWARE, V28
   Bosch J., 2013, LEAN ENTERPRISE SOFT, V167, DOI [10.1007/978-3-642-44930-7_1, DOI 10.1007/978-3-642-44930-7_1]
   Broy M, 2006, COMPUTER, V39, P72, DOI 10.1109/MC.2006.358
   Budgen D., 2008, P PPIG 2008, P195, DOI DOI 10.1007/978-3-642-02152-7_36
   Carlshamre P, 2000, 11TH INTERNATIONAL WORKSHOP ON DATABASE AND EXPERT SYSTEMS APPLICATION, PROCEEDINGS, P961, DOI 10.1109/DEXA.2000.875142
   Carlson C.R., 2006, CROWN BUSINESS
   Carmel Erran, 1994, P 27 HAW INT C SYST
   Carmine G., 2016, IEEE T SOFTWARE ENG, V42, P233
   Castro J, 2006, P WORKSH ENG REQ, P2
   Chow T, 2008, J SYST SOFTWARE, V81, P961, DOI 10.1016/j.jss.2007.08.020
   CHURCHILL NC, 1983, HARVARD BUS REV, V61, P30
   Cocca P., 2009, INT J PRODUCT PERFOR, V59, P186
   Constantinides E, 2010, INTERNET RES, V20, P188, DOI 10.1108/10662241011032245
   CORBIN J, 1990, Z SOZIOL, V19, P418, DOI 10.1007/BF00988593
   Criaco G, 2014, J TECHNOL TRANSFER, V39, P567, DOI 10.1007/s10961-013-9312-0
   Crowne M, 2002, IEMC-2002: IEEE INTERNATIONAL ENGINEERING MANAGEMENT CONFERENCE, VOLS I AND II, PROCEEDINGS, P338, DOI 10.1109/IEMC.2002.1038454
   Dahlstedt G, 2003, INT WORK COTS PROD S
   Davis CJ, 2006, J COMPUT INFORM SYST, V46, P78, DOI 10.1080/08874417.2006.11645926
   Deakins E., 2005, International Journal of Project Management, V23, P65, DOI 10.1016/j.ijproman.2004.05.007
   DORLING A, 1993, INFORM SOFTWARE TECH, V35, P404, DOI 10.1016/0950-5849(93)90011-Q
   Fabijan A, 2012, ICSOB, V114, P139
   Fagerholm F, 2012, DEV EXPERIENCE CONCE, P73
   Fagerholm F, 2015, INFORM SOFTWARE TECH, V64, P132, DOI 10.1016/j.infsof.2015.01.010
   Feldt R, 2010, INFORM SOFTWARE TECH, V52, P611, DOI 10.1016/j.infsof.2010.01.001
   Garengo P, 2005, INT J MANAG REV, V7, P25, DOI 10.1111/j.1468-2370.2005.00105.x
   Garousi V, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2916008
   Giardino C, 2015, LECT NOTES BUS INF P, V212, P52, DOI 10.1007/978-3-319-18612-2_5
   Giardino C, 2014, LECT NOTES BUS INF P, V182, P27
   Giardino C, 2014, IEEE SOFTWARE, V31, P28, DOI 10.1109/MS.2014.129
   Graham D, 2002, IEEE SOFTWARE, V19, P15, DOI 10.1109/MS.2002.1032845
   Hague P.N., 2004, MARKET RES PRACTICE
   HANSSEN GK, 2006, P 5 INT S EMP SOFTW, P164
   Haugen NC, 2006, AGILE 2006, PROCEEDINGS, P23, DOI 10.1109/AGILE.2006.16
   Hofmann HF, 2001, IEEE SOFTWARE, V18, P58, DOI 10.1109/MS.2001.936219
   *IEEE, 2011, 42010 ISOIECIEEE
   Jansen S, 2011, LECT NOTES BUS INF P, V80, P154
   Junk W. S, 2000, SEPM001 U ID COMP SC
   Karlsson L, 2007, INFORM SOFTWARE TECH, V49, P588, DOI 10.1016/j.infsof.2007.02.008
   Khurum M, 2012, J SOFTWARE EVOLUTION, P481
   Kitchenham B, 1996, IEEE SOFTWARE, V13, P12, DOI 10.1109/52.476281
   Klotins E, 2015, LECT NOTES BUS INF P, V210, P245, DOI 10.1007/978-3-319-19593-3_22
   Kujala S, 2008, BEHAV INFORM TECHNOL, V27, P457, DOI 10.1080/01449290601111051
   Lehtola L, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P439, DOI 10.1109/RE.2005.36
   Lethbridge TC, 2005, EMPIR SOFTW ENG, V10, P311, DOI 10.1007/s10664-005-1290-x
   May Beverly, 2012, Proceedings of the 2012 Agile Conference, P141, DOI 10.1109/Agile.2012.18
   Melegati J., 2016, 2 INT WORK SOFTW STA
   Melo CD, 2013, INFORM SOFTWARE TECH, V55, P412, DOI 10.1016/j.infsof.2012.09.004
   Miller G, 2006, PERSONAS MOVING ROLE, P1
   Mitroff I.I., 1983, STAKEHOLDERS ORG MIN
   Molokken K, 2003, 2003 INT S EMP SOFTW
   OGAWA RT, 1991, REV EDUC RES, V61, P265, DOI 10.3102/00346543061003265
   Olsson HH, 2015, ICSOB, V114, P261
   Pacheco C, 2012, J SYST SOFTWARE, V85, P2171, DOI 10.1016/j.jss.2012.04.075
   Paternoster N, 2014, INFORM SOFTWARE TECH, V56, P1200, DOI 10.1016/j.infsof.2014.04.014
   PitchBook Data I, 2015, 2H2015 EUR MIDDL MAR
   Product Team CMMI Team CP, 2010, CMMI DEV VERS 1 3, P482
   Pronin E, 2002, PERS SOC PSYCHOL B, V28, P369, DOI 10.1177/0146167202286008
   Pruitt J, 2003, P 2003 C DES US EXP, P115
   Rafiq U, 2017, 2017 43RD EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P141, DOI 10.1109/SEAA.2017.73
   Ramesh B, 2010, INFORM SYST J, V20, P449, DOI 10.1111/j.1365-2575.2007.00259.x
   Regnell B, 2008, IEEE SOFTWARE, V25, P42, DOI 10.1109/MS.2008.48
   Ries E, 2011, C TODAYS ENTREPRENEU
   Rising L, 2000, IEEE SOFTWARE, V17, P26, DOI 10.1109/52.854065
   Runeson P, 2006, IEEE SOFTWARE, V23, P82, DOI 10.1109/MS.2006.89
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Shahin A, 2007, INT J PRODUCT PERFOR, V56, P226, DOI 10.1108/17410400710731437
   Sicilia MA, 1990, EVALUATION ONTOLOGIC, P1
   Smite D, 2014, EMPIR SOFTW ENG, V19, P105, DOI 10.1007/s10664-012-9217-9
   Sudhakar GP, 2012, J ENTERP INF MANAG I, V19, P83
   Sutton SM, 2000, IEEE SOFTWARE, V17, P33, DOI 10.1109/52.854066
   Terho H, 2015, LECT NOTES COMPUT SC, V9459, P555, DOI 10.1007/978-3-319-26844-6_41
   Tingling P, 2007, LECT NOTES COMPUT SC, V4550, P242
   Tom E, 2013, J SYST SOFTWARE, V86, P1498, DOI 10.1016/j.jss.2012.12.052
   Tovstiga G, 2012, 2 ANN INT C INN ENTR, P76
   Usman M, EFFORT ESTIMATION AG
   Webster KPB, 2005, PROC IEEE INT CONF S, P453
   Wilson C., 2006, Interactions, V13, P46, DOI 10.1145/1167948.1167980
   Woods E, 2015, IEEE SOFTWARE, V32, P24, DOI 10.1109/MS.2015.119
   Yang C, 2016, J SYST SOFTWARE, V111, P157, DOI 10.1016/j.jss.2015.09.028
   Yau A, 2013, TECHNICAL REPORT
   Zachman J.A., 2003, ZACHMAN FRAMEWORK EN
   Zettel J., 2001, LIPE LIGHTWEIGHT PRO, P255
NR 99
TC 31
Z9 32
U1 1
U2 17
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2019
VL 24
IS 1
BP 68
EP 102
DI 10.1007/s10664-018-9620-y
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA HL3RV
UT WOS:000458634400003
OA Green Submitted, Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Kuchta, T
   Lutellier, T
   Wong, E
   Tan, L
   Cadar, C
AF Kuchta, Tomasz
   Lutellier, Thibaud
   Wong, Edmund
   Tan, Lin
   Cadar, Cristian
TI On the correctness of electronic documents: studying, finding, and
   localizing inconsistency bugs in PDF readers and files
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Cross-software inconsistencies; Document correctness; Image comparison;
   Error-message clustering
ID DIGITAL FORENSICS
AB Electronic documents are widely used to store and share information such as bank statements, contracts, articles, maps and tax information. Many different applications exist for displaying a given electronic document, and users rightfully assume that documents will be rendered similarly independently of the application used. However, this is not always the case, and these inconsistencies, regardless of their causes-bugs in the application or the file itself-can become critical sources of miscommunication. In this paper, we present a study on the correctness of PDF documents and readers. We start by manually investigating a large number of real-world PDF documents to understand the frequency and characteristics of cross-reader inconsistencies, and find that such inconsistencies are common-13.5% PDF files are inconsistently rendered by at least one popular reader. We then propose an approach to detect and localize the source of such inconsistencies automatically. We evaluate our automatic approach on a large corpus of over 230 K documents using 11 popular readers and our experiments have detected 30 unique bugs in these readers and files. We also reported 33 bugs, some of which have already been confirmed or fixed by developers.
C1 [Kuchta, Tomasz; Cadar, Cristian] Imperial Coll London, London, England.
   [Lutellier, Thibaud; Wong, Edmund; Tan, Lin] Univ Waterloo, Waterloo, ON, Canada.
C3 Imperial College London; University of Waterloo
RP Cadar, C (corresponding author), Imperial Coll London, London, England.
EM t.kuchta@imperial.ac.uk; tlutelli@uwaterloo.ca; e32wong@uwaterloo.ca;
   lintan@uwaterloo.ca; c.cadar@imperial.ac.uk
RI Kuchta, Tomasz/U-4513-2019; Lutellier, Thibaud/AAM-1838-2020
OI Lutellier, Thibaud/0000-0002-1823-0061; Kuchta,
   Tomasz/0000-0002-2765-6961; Tan, Lin/0000-0002-6690-8332
FU EPSRC [EP/L002795/1]; Microsoft Research; Natural Sciences and
   Engineering Research Council of Canada; Ontario Graduate Scholarship
   award; EPSRC [EP/L002795/1] Funding Source: UKRI
FX This research was generously supported by EPSRC through the Early-Career
   Fellowship EP/L002795/1, Microsoft Research through a PhD scholarship,
   the Natural Sciences and Engineering Research Council of Canada, and an
   Ontario Graduate Scholarship award.
CR [Anonymous], 2013, COMPLEX WAVELET STRU
   [Anonymous], 2001, GRAPH TECHN PREPR 1
   [Anonymous], 2016, MATLABPYRTOOLS
   [Anonymous], DOC MAN EL DOC FIL F
   Archlinux, 2015, WONTF WRONG COL AD R
   Arthur D, 2007, PROCEEDINGS OF THE EIGHTEENTH ANNUAL ACM-SIAM SYMPOSIUM ON DISCRETE ALGORITHMS, P1027
   Bugzilla, 2016, BUG 94260 PDF FILE D
   Bugzilla@Mozilla, 2016, BUG 1244729 PDF VIEW
   Choudhary S. R., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P171, DOI 10.1109/ICST.2012.97
   Choudhary S.R., 2014, P 2014 INT S SOFTWAR, P417
   Choudhary SR, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1146, DOI 10.1145/1985793.1986024
   Choudum SA, 2011, INT J COMPUT MATH, V88, P1, DOI 10.1080/00207160903406554
   Chromium Bug Tracker, 2016, PDFS NOT DISPLAYING
   Corona Igino., 2014, P 2014 WORKSH ARTINT, P47, DOI [DOI 10.1145/2666652.2666657, 10.1145/2666652.2666657]
   Demsky B, 2005, PROC INT CONF SOFTW, P176
   Eaton C., 2007, International Journal of Web Engineering and Technology, V3, P227, DOI 10.1504/IJWET.2007.012055
   ENGINEERING IC, 2008, PDF SPEC IEEE XPLO A
   Garfinkel S, 2009, DIGIT INVEST, V6, pS2, DOI 10.1016/j.diin.2009.06.016
   Google Chrome Help Forum, 2015, PDF VIEW BUG TCPDF
   Grajeda C, 2017, DIGIT INVEST, V22, pS94, DOI 10.1016/j.diin.2017.06.004
   Huynh-Thu Q, 2008, ELECTRON LETT, V44, P800, DOI 10.1049/el:20080522
   Kuchta T, 2014, P 29 ACM IEEE INT C, P563
   Laskov P, 2011, 27TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2011), P373
   Long F, 2012, PROC INT CONF SOFTW, P80, DOI 10.1109/ICSE.2012.6227204
   MacQueen J., 1967, P 5 BERK S MATH STAT, P281
   MacQueen J, 1965, ANN MATH STAT, V36, P1084
   Maiorca Davide., 2013, P 8 ACM SIGSAC S INF, P119, DOI DOI 10.1145/2484313.2484327
   Mesbah A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P561, DOI 10.1145/1985793.1985870
   Mozilla Support Forum, 2013, PDF JS NOT BEING DIS
   Ochin J. G., 2011, INT J SOFTWARE ENG A, V2, P66
   ROUSSEEUW PJ, 1987, J COMPUT APPL MATH, V20, P53, DOI 10.1016/0377-0427(87)90125-7
   Saar T, 2014, LECT NOTES COMPUT SC, V8541, P503, DOI 10.1007/978-3-319-08245-5_37
   Sampat MP, 2009, IEEE T IMAGE PROCESS, V18, P2385, DOI 10.1109/TIP.2009.2025923
   Smutz C, 2012, 28TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2012), P239
   SOLOMON JA, 1994, NATURE, V369, P395, DOI 10.1038/369395a0
   Srndic N., 2013, NDSS
   Tzermias Z., 2011, Pro- ceedings of the Fourth European Workshop on System Security, P4
   Xvfb, 2010, X WINDOW SYSTEM VERS
   Zauner C., 2010, IMPLEMENTATION BENCH
   Zeller A, 2002, IEEE T SOFTWARE ENG, V28, P183, DOI 10.1109/32.988498
NR 40
TC 10
Z9 11
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2018
VL 23
IS 6
BP 3187
EP 3220
DI 10.1007/s10664-018-9600-2
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HC1WE
UT WOS:000451593200004
OA hybrid
DA 2024-07-18
ER

PT J
AU Sawant, AA
   Robbes, R
   Bacchelli, A
AF Sawant, Anand Ashok
   Robbes, Romain
   Bacchelli, Alberto
TI On the reaction to deprecation of clients of 4+1 popular Java APIs and
   the JDK
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Application programming interface; API usage; API popularity; Dataset
ID PROGRAMS
AB Application Programming Interfaces (APIs) are a tremendous resource-that is, when they are stable. Several studies have shown that this is unfortunately not the case. Of those, a large-scale study of API changes in the Pharo Smalltalk ecosystem documented several findings about API deprecations and their impact on API clients. We extend this study, by analyzing clients of both popular third-party Java APIs and the JDK API. This results in a dataset consisting of more than 25,000 clients of five popular Java APIs on GitHub, and 60 clients of the JDK API from Maven Central. This work addresses several short-comings of the previous study, namely: a study of several distinct API clients in a popular, statically-typed language, with more accurate version information. We compare and contrast our findings with the previous study and highlight new ones, particularly on the API client update practices and the startling similarities between reaction behavior in Smalltalk and Java. We make a comparison between reaction behavior for third-party APIs and JDK APIs, given that language APIs are a peculiar case in terms of wide-spread usage, documentation, and support from IDEs. Furthermore, we investigate the connection between reaction patterns of a client and the deprecation policy adopted by the API used.
C1 [Sawant, Anand Ashok] Delft Univ Technol, SERG, Delft, Netherlands.
   [Robbes, Romain] Free Univ Bozen Bolzano, Software & Syst Engn Res Grp SwSE, Bolzano, Italy.
   [Bacchelli, Alberto] Univ Zurich, ZEST, Zurich, Switzerland.
C3 Delft University of Technology; Free University of Bozen-Bolzano;
   University of Zurich
RP Sawant, AA (corresponding author), Delft Univ Technol, SERG, Delft, Netherlands.
EM A.A.Sawant@tudelft.nl; rrobbes@unibz.it; bacchelli@ifi.uzh.ch
RI Bacchelli, Alberto/ABG-5379-2020; Robbes, Romain/H-3771-2013
OI Bacchelli, Alberto/0000-0003-0193-6823; Sawant,
   Anand/0000-0002-5816-8020
CR [Anonymous], 2012, P 20 ACM SIGSOFT S F
   [Anonymous], 2010, Proceedings of the IEEE/ACM international conference on Automated software engineering (ASE'10)
   [Anonymous], P ACM SIGSOFT 20 INT
   Bavota G, 2015, IEEE T SOFTWARE ENG, V41, P384, DOI 10.1109/TSE.2014.2367027
   Begel A, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P12, DOI 10.1145/2568225.2568233
   Black A.P., 2009, PHARO EXAMPLE
   Bogart C, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P109, DOI 10.1145/2950290.2950325
   Brito G., 2016, 23 IEEE INT C SOFTW
   Brooks FP, 1975, NO SILVER BULLET SOF, P14
   Businge J., 2013, SOFTW QUAL J, V23, P107, DOI DOI 10.1007/s11219-013-9221-3
   Businge J, 2013, EUR CON SFTWR MTNCE, P37, DOI 10.1109/CSMR.2013.14
   Chacon Scott., 2009, Pro Git, V1st, DOI DOI 10.1016/j.rse.2010.01.021
   Chow KS, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P359, DOI 10.1109/ICSM.1996.565039
   Dagenais B, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P481, DOI 10.1145/1368088.1368154
   Dagenais B, 2008, ACM SIGPLAN NOTICES, V43, P313, DOI 10.1145/1449955.1449790
   Daqing Hou, 2011, 2011 IEEE 27th International Conference on Software Maintenance, P233, DOI 10.1109/ICSM.2011.6080790
   Daqing Hou, 2011, 2011 18th Working Conference on Reverse Engineering, P131, DOI 10.1109/WCRE.2011.24
   Decan A, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P2, DOI 10.1109/SANER.2017.7884604
   Decan A, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P493, DOI 10.1109/SANER.2016.12
   Dig D, 2005, PROC IEEE INT CONF S, P389
   Dig D, 2006, J SOFTW MAINT EVOL-R, V18, P83, DOI 10.1002/smr.328
   Dig D, 2007, PROC INT CONF SOFTW, P427
   Espinha T, 2015, 2ND ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS MOBILESOFT 2015, P12, DOI 10.1109/MobileSoft.2015.9
   Fraser StevenD., 2007, OOPSLA'07: Companion to the 22nd ACM SIGPLAN conference on Object-oriented programming systems and applications companion, P1026
   Gousios G., 2014, Proceedings of the 11th working conference on mining software repositories, Ved, P384, DOI [DOI 10.1145/2597073.2597126, 10.1145/2597073]
   Gousios G, 2013, IEEE WORK CONF MIN S, P233, DOI 10.1109/MSR.2013.6624034
   Henkel J, 2005, PROC INT CONF SOFTW, P274
   Hoan AN, 2010, ACM SIGPLAN NOTICES, V45, P302, DOI 10.1145/1932682.1869486
   Holmes Reid., 2010, Proc. ICSE, P465
   Hora A, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P278, DOI 10.1145/2950290.2950306
   Hora A, 2015, PROC IEEE INT CONF S, P251, DOI 10.1109/ICSM.2015.7332471
   Hou Daqing, 2010, P 2 INT WORKSHOP REC, P26
   Ingalls D, 1997, ACM SIGPLAN NOTICES, V32, P318, DOI 10.1145/263700.263754
   JOHNSON RE, 1988, J OBJECT-ORIENT PROG, V1, P22
   JUZGADO NJ, 2011, EMPIR SOFTW ENG, V16, P295
   Kalliamvakou E., 2014, P 11 WORKING C MININ, P92, DOI DOI 10.1145/2597073.2597074
   Lammel R., 2011, Proceedings of the 2011 ACM Symposium on Applied Computing, P1317, DOI 10.1145/1982185.1982471
   Lienhard A, 2005, SQUEAKSOURCE SMART M
   Linares-Vasquez M, 2014, P 22 INT C PROGR C, P83
   LLOYD SP, 1982, IEEE T INFORM THEORY, V28, P129, DOI 10.1109/TIT.1982.1056489
   McDonnell T, 2013, PROC IEEE INT CONF S, P70, DOI 10.1109/ICSM.2013.18
   Mileva YM, 2010, LECT NOTES COMPUT SC, V6303, P173, DOI 10.1007/978-3-642-15585-7_17
   Mooi E., 2010, Cluster analysis
   Nagappan M, 2013, 2013 9 JOINT M EUR S, P466, DOI [DOI 10.1145/2491411.2491415, 10.1145/2491411.2491415]
   Raemaekers S, 2014, IEEE INT WORK C SO, P215, DOI 10.1109/SCAM.2014.30
   Raemaekers S, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P378, DOI 10.1109/ICSM.2012.6405296
   Sawant AA, 2017, EMPIR SOFTW ENG, V22, P1348, DOI 10.1007/s10664-016-9444-6
   Sawant AA, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P506, DOI 10.1109/MSR.2015.75
   Schäfer T, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P471, DOI 10.1145/1368088.1368153
   Wang SH, 2014, LECT NOTES COMPUT SC, V8831, P245, DOI 10.1007/978-3-662-45391-9_17
   Wu Wei, 2010, P 32 ACMIEEE INT C S, P325, DOI DOI 10.1145/1806799.1806848
   Xavier L, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P138, DOI 10.1109/SANER.2017.7884616
   Xie Tao, 2006, Proc. MSR, P54
NR 53
TC 26
Z9 29
U1 1
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2018
VL 23
IS 4
BP 2158
EP 2197
DI 10.1007/s10664-017-9554-9
PG 40
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GK0MK
UT WOS:000435804100011
OA hybrid
DA 2024-07-18
ER

PT J
AU Tsikerdekis, M
AF Tsikerdekis, Michail
TI Persistent code contribution: a ranking algorithm for code contribution
   in crowdsourced software
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Contribution; Crowdsource; Open-source; Code; Measure; Ranking
ID COMPLEXITY
AB Measuring code contribution in crowdsourced software is essential for ranking contributors to a project or distributing revenue. Past studies have demonstrated that there is variation between different code contribution measures and their ability for ranking users accurately. This study proposes a new code contribution ranking algorithm, Persistent Code Contribution (PCC), that aims to be language independent, quality aware and provide a ranking balance between new and senior users. PCC tracks the number of characters contributed by a user and ranks each character based on the number of subsequent revisions that each character survived for. It also tracks lines that may have been moved between revisions in the code and attributes character changes to the appropriate user that committed them to a repository. A ranking comparison between existing code contribution measures is performed to determine the similarities and differences, and, quantitative as well as qualitative evidence is presented as a means to validate the algorithm.
C1 [Tsikerdekis, Michail] Western Washington Univ, Dept Comp Sci, Bellingham, WA 98225 USA.
C3 Western Washington University
RP Tsikerdekis, M (corresponding author), Western Washington Univ, Dept Comp Sci, Bellingham, WA 98225 USA.
EM Michael.Tsikerdekis@wwu.edu
OI Tsikerdekis, Michail/0000-0001-6898-952X
CR [Anonymous], 2014, 11 WORKING C MINING, DOI [DOI 10.1145/2597073.2597076, DOI 10.1145/2597073]
   [Anonymous], 1996, CONTEXT CONSCIOUSNES
   Beck K, 1999, EMBRACING CHANGE EXT, DOI [10.1109/2.796139, DOI 10.1109/2.796139]
   Benaglia T, 2009, J STAT SOFTW, V32, P1
   Bird C., 2011, P 19 ACM SIGSOFT S 1, P4, DOI DOI 10.1145/2025113.2025119
   Black P. E, 2004, RATCLIFF OBERSHELP P
   Canfora G, 2009, LDIFF ENHANCED LINE, DOI [10.1109/ICSE.2009.5070564, DOI 10.1109/ICSE.2009.5070564]
   Canfora Gerardo, 2007, 4 INT WORKSH MIN SOF, P14, DOI [10.1109/MSR.2007.14, DOI 10.1109/MSR.2007.14]
   DE JOODE RUBENVAN WENDEL., 2003, PROTECTING VIRTUAL C
   Dixon J, 2009, THE BEEKEEPER
   Eick SG, 2001, IEEE T SOFTWARE ENG, V27, P1, DOI 10.1109/32.895984
   Eyolfson J., 2011, WORKING C MINING SOF, P153, DOI DOI 10.1145/1985441.1985464
   Foucault M, 2015, INFORM SOFTWARE TECH, V64, P102, DOI 10.1016/j.infsof.2015.01.013
   Foucault Matthieu, 2014, P 18 INT C EV ASS SO, P1, DOI [10.1145/2601248.2601283, DOI 10.1145/2601248.2601283]
   Frantzeskou G., 2007, Int. J. Des. Eng, V6, P1
   Halfaker A, 2015, PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW 2015), P410, DOI 10.1145/2736277.2741117
   Halvorsen SM, 2014, LECT NOTES COMPUT SC, V8374, P353, DOI 10.1007/978-3-642-54420-0_35
   HARRISON W, 1992, IEEE T SOFTWARE ENG, V18, P1025, DOI 10.1109/32.177371
   Hirth Matthias., 2011, Anatomy of a crowdsourcing platform - using the example of microworkers.com. pages, P322, DOI DOI 10.1109/IMIS.2011.89
   Kilgour RI, 1998, PROGRESS IN CONNECTIONIST-BASED INFORMATION SYSTEMS, VOLS 1 AND 2, P865
   Linares-Vásquez M, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P451, DOI 10.1109/ICSM.2012.6405306
   MacDonell S.G., 2010, HDB RES COMPUTATIONA, P470
   MAIER D, 1978, J ACM, V25, P322, DOI 10.1145/322063.322075
   Meng XZ, 2013, PROC IEEE INT CONF S, P250, DOI 10.1109/ICSM.2013.36
   Olague HM, 2007, IEEE T SOFTWARE ENG, V33, P402, DOI 10.1109/TSE.2007.1015.
   Panciera K, 2009, GROUP 2009 PROCEEDINGS, P51
   Peng X, 2014, IEEE SOFTWARE, V31, P30, DOI 10.1109/MS.2014.31
   Posnett D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P452, DOI 10.1109/ICSE.2013.6606591
   Prechelt L, 2000, COMPUTER, V33, P23, DOI 10.1109/2.876288
   Pythonorg, 2016, DIFFL HELP COMP DEL
   Rahman F, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P491, DOI 10.1145/1985793.1985860
   Raymond Eric, 1999, KNOWLEDGE TECHNOLOGY, V12, P23, DOI DOI 10.1007/S12130-999-1026-0
   WAGNER RA, 1974, J ACM, V21, P168, DOI 10.1145/321796.321811
NR 33
TC 4
Z9 4
U1 1
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2018
VL 23
IS 4
BP 1871
EP 1894
DI 10.1007/s10664-017-9575-4
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GK0MK
UT WOS:000435804100001
DA 2024-07-18
ER

PT J
AU Ricca, F
   Torchiano, M
   Leotta, M
   Tiso, A
   Guerrini, G
   Reggio, G
AF Ricca, Filippo
   Torchiano, Marco
   Leotta, Maurizio
   Tiso, Alessandro
   Guerrini, Giovanna
   Reggio, Gianna
TI On the impact of state-based model-driven development on
   maintainability: a family of experiments using UniMod
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Model-driven development; MDD; UML; Maintainability; UniMod; Family of
   experiments; Replication and maintenance task
ID SOFTWARE; UML; TECHNOLOGY
AB Context: Model-driven approaches are well-known in the academia but one possible showstopper to a wider adoption in the industry is the limited empirical evidence for their claimed advantages and benefits, that could convince the decision makers. Objective: The aim of this work is gauging one of the claimed benefits of model-driven approaches, namely improvement in maintainability, with respect to a code-centric approach. Method: We conducted a family of five experiments involving 100 students that possessed different levels of education (64 Bachelor, 25 Master, and 11 PhD students; in groups sized 11 to 26 per individual experiment). In these experiments, UniMod - a State-based tool for Model-Driven Development using the Unified Modeling Language - is compared with Java-based code-centric programming, in a software maintenance scenario, with the goal of analyzing the effect on the time to perform the maintenance tasks, the correctness of the modified artifacts, and the efficiency. Results: The results show a reduction in time to accomplish the tasks and no impact on correctness. The adoption of the UniMod-MDD approach almost doubles the developers'efficiency, and in presence of a higher software engineering experience the efficiency is even three times higher. Conclusions: We found that the usage of the UniMod-MDD approach in a software maintenance scenario provides benefits over a pure code-centric approach. The benefits deriving from the UniMod-MDD approach are appreciable for all the categories of students, although with differences.
C1 [Ricca, Filippo; Leotta, Maurizio; Tiso, Alessandro; Guerrini, Giovanna; Reggio, Gianna] Univ Genoa, DIBRIS, Genoa, Italy.
   [Torchiano, Marco] Politecn Torino, DAUIN, Turin, Italy.
C3 University of Genoa; Polytechnic University of Turin
RP Leotta, M (corresponding author), Univ Genoa, DIBRIS, Genoa, Italy.
EM filippo.ricca@unige.it; marco.torchiano@polito.it;
   maurizio.leotta@unige.it; alessandro.tiso@unige.it;
   giovanna.guerrini@unige.it; gianna.reggio@unige.it
RI Ricca, Filippo/ABB-3276-2020; Leotta, Maurizio/I-8145-2014
OI Leotta, Maurizio/0000-0001-5267-0602; Torchiano,
   Marco/0000-0001-5328-368X
CR Anda B, 2006, EMPIR SOFTW ENG, V11, P555, DOI 10.1007/s10664-006-9020-6
   [Anonymous], 2006, SOFTWARE ENG
   [Anonymous], 2007, ENCY MEASUREMENT STA
   [Anonymous], 2005, EMSOFT 2005
   [Anonymous], 2000, HDB PARAMETRIC NONPA
   [Anonymous], 2013, R LANGUAGE ENV STAT
   Arisholm E, 2006, IEEE T SOFTWARE ENG, V32, P365, DOI 10.1109/TSE.2006.59
   Baker R.D., 1995, Randomization Tests
   Ceccato M, 2014, EMPIR SOFTW ENG, V19, P1040, DOI 10.1007/s10664-013-9248-x
   Ceri S., 2003, Designing data-intensive Web applications
   Chapin N, 2001, J SOFTW MAINT EVOL-R, V13, P3, DOI 10.1002/smr.220
   Dzidek WJ, 2008, IEEE T SOFTWARE ENG, V34, P407, DOI 10.1109/TSE.2008.15
   Feitelson D. G., 2015, CORR
   Fowler M., 2015, UML Distilled: A Brief Guide to the Standard Object Modeling Language
   Grissom R. J., 2005, EFFECT SIZES RES BRO
   Gurov VS, 2007, PROGRAM COMPUT SOFT+, V33, P343, DOI 10.1134/S0361768807060059
   Hamon G., 2007, International Journal on Software Tools for Technology Transfer, V9, P447, DOI 10.1007/s10009-007-0049-7
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   Heiberger RM, 2014, J STAT SOFTW, V57
   Hovsepyan A, 2011, INT SYMP EMP SOFTWAR, P315, DOI 10.1109/ESEM.2011.40
   Hutchinson J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P471, DOI 10.1145/1985793.1985858
   Jedlitschka A., 2008, Guide to Advanced Empirical Software Engineering
   Kapteijns T., 2009, CODE CENTRIC MODEL C, P22
   Kitchenham B, 2008, EMPIR SOFTW ENG, V13, P97, DOI 10.1007/s10664-007-9053-5
   Kleppe A.G., 2003, MDA Explained; The Model Driven Architecture: Practice and Promise
   Leotta M, 2013, PROC IEEE INT CONF S, P428, DOI 10.1109/ICSM.2013.64
   Liebel G, 2014, LECT NOTES COMPUT SC, V8767, P166, DOI 10.1007/978-3-319-11653-2_11
   Maraninchi F, 2001, COMPUT LANG, V27, P61, DOI 10.1016/S0096-0551(01)00016-9
   Martínez Y, 2014, EMPIR SOFTW ENG, V19, P1887, DOI 10.1007/s10664-013-9269-5
   Martínez Y, 2011, LECT NOTES COMPUT SC, V6998, P233, DOI 10.1007/978-3-642-24606-7_18
   Melia Santiago, 2008, 2008 8th International Conference on Web Engineering (ICWE), P13, DOI 10.1109/ICWE.2008.36
   Mellegård N, 2016, IEEE T SOFTWARE ENG, V42, P248, DOI 10.1109/TSE.2015.2479221
   Motulsky H.J., 2010, INTUITIVE BIOSTATIST, V2nd
   Mussbacher G, 2014, LECT NOTES COMPUT SC, V8767, P183, DOI 10.1007/978-3-319-11653-2_12
   Oppenheim A.N., 1992, QUESTIONNAIRE DESIGN
   Papotti Paulo Eduardo, 2013, Advanced Information Systems Engineering. 25th International Conference, CAiSE 2013. Proceedings: LNCS 7908, P321, DOI 10.1007/978-3-642-38709-8_21
   Pfleeger SL, 2000, IEEE SOFTWARE, V17, P27, DOI 10.1109/52.819965
   Reggio G, 2015, COMM COM INF SC, V506, P66, DOI 10.1007/978-3-319-25156-1_5
   Reggio G, 2014, LECT NOTES COMPUT SC, V8767, P149, DOI 10.1007/978-3-319-11653-2_10
   Ricca F., 2012, 2012 Proceedings of 4th International Workshop Modeling in Software Engineering (MiSE 2012), P77, DOI 10.1109/MISE.2012.6226018
   Ricca F, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P361, DOI 10.1145/1368088.1368138
   Ricca F, 2010, IEEE T SOFTWARE ENG, V36, P96, DOI 10.1109/TSE.2009.69
   Shalyto AA, 2001, PROGRAM COMPUT SOFT+, V27, P260, DOI 10.1023/A:1012392927006
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   Stahl T., 2006, Model-driven software development: technology, engineering, management
   Svahnberg M, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P288
   Torchiano M, 2017, J VISUAL LANG COMPUT, V41, P10, DOI 10.1016/j.jvlc.2017.06.002
   Torchiano M, 2013, J SYST SOFTWARE, V86, P2110, DOI 10.1016/j.jss.2013.03.084
   Whittle J, 2014, IEEE SOFTWARE, V31, P79, DOI 10.1109/MS.2013.65
   Agner LTW, 2013, J SYST SOFTWARE, V86, P997, DOI 10.1016/j.jss.2012.11.023
   Wohlin C., 2012, Experimentation in Software Engineering
NR 51
TC 13
Z9 14
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2018
VL 23
IS 3
BP 1743
EP 1790
DI 10.1007/s10664-017-9563-8
PG 48
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GH6DH
UT WOS:000433532300016
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Tamburri, DA
   Kazman, R
AF Tamburri, Damian A.
   Kazman, Rick
TI General methods for software architecture recovery: a potential approach
   and its evaluation
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software architecture recovery; Ground-truth software architectures;
   Grounded theory; QVT; OCL; UML profiles; Model-driven engineering;
   Model-driven architecture; European space agency; Industrial experience
   report
AB Software architecture is a critical artefact in the software lifecycle. It is a system blueprint for construction, it aids in planning teaming and division of work, and it aids in reasoning about system properties. But architecture documentation is seldom created and, even when it is initially created, it is seldom maintained. For these reasons organisations often feel the need to recover legacy architectures, for example, as part of planning for evolution or cloud migration. But there is no existing general architecture recovery approach nor tool that can be applied to any type of system, under any condition. We will show that one way of achieving such generality is to apply systematic code inspection following a Grounded Theory (GT) approach. Though relatively costly and human-intensive, a GT-based approach has several merits, for example: (a) it is general by design; (b) it can be partially automated; (c) it yields evidence-based results rooted of the system being examined. This article presents one theoretical formulation of a general architecture recovery method-called REM-and reports on the evaluation of REM in the context of a large architecture recovery campaign performed for the European Space Agency. Our results illustrate some intriguing properties and opportunities of GT-based architecture recovery approaches and point out lessons learned and venues for further research.
C1 [Tamburri, Damian A.] Politecn Milan, Milan, Italy.
   [Kazman, Rick] Univ Hawaii, Honolulu, HI 96822 USA.
   [Kazman, Rick] Carnegie Mellon Univ, Software Engn Inst, Pittsburgh, PA 15213 USA.
C3 Polytechnic University of Milan; University of Hawaii System; Carnegie
   Mellon University; Software Engineering Institute
RP Tamburri, DA (corresponding author), Politecn Milan, Milan, Italy.
EM damianandrew.tamburri@polimi.it; kazman@hawaii.edu
RI Tamburri, Damian Andrew/AAJ-2507-2021
OI Tamburri, Damian Andrew/0000-0003-1230-8961
FU ESA [20645/07/F/VS]; European Commission [644869]
FX We acknowledge the precious comments we received from the anonymous
   reviewers - they helped greatly in structuring the value and
   contributions in this manuscript. This research has been conducted in
   collaboration with TERMA GmbH<SUP>23</SUP> as an ESA GSTP study founded
   by ESA under contract 20645/07/F/VS. The author would like to thank Drs.
   Gert Villemos, Antonio Bianco and Henry Muccini for support during RTE.
   Damian's work is partially supported by the European Commission grant
   no. 644869 (H2020 - Call 1), DICE.
CR [Anonymous], 2009, Proceedings of the 2009 Annual Research Conference of the South African Institute of Computer Scientists and Information Technologists
   [Anonymous], 2002, Stat. Methods Inter-Rater Reliab. Assess. Ser.
   Antoine J.Y., 2014, P 14 C EUR CHAPT ASS, P550, DOI DOI 10.3115/V1/E14-1058
   Bachmann F., 2000, CMUSEI2000SR004
   Baldwin C. Y., 2000, Design Rules: The Power of Modularity, V1
   Bass L, 2012, SEI SERIES SOFTWARE
   Bibel W., 1982, AUTOMATED THEOREM PR
   Bloor Michael., 1997, CONTEXT METHOD QUALI, P37
   Boaduo Nana Adu-Pipim, 2011, International Journal of Virtual Communities and Social Networking, V3, P1, DOI 10.4018/jvcsn.2011100101
   Izquierdo JLC, 2010, IEEE SOFTWARE, V27, P37, DOI 10.1109/MS.2010.61
   Clements P, 2001, EVALUATINJG SOFTWARE
   Clements P., 2002, DOCUMENTING SOFTWARE
   Cois C.A., 2014, Professional Communication Conference (IPCC), 2014 IEEE International, P1
   CORBIN J, 1990, Z SOZIOL, V19, P418, DOI 10.1007/BF00988593
   Corbin J., 2015, BASICS QUALITATIVE R
   Denzin N. K., 2018, SAGE HDB QUALITATIVE
   Ding L, 2001, WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P191, DOI 10.1109/WICSA.2001.948429
   Duenas JC, 1998, SECOND EUROMICRO CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P113, DOI 10.1109/CSMR.1998.665766
   Eixelsberger W, 1998, PROC INT CONF SOFTW, P508, DOI 10.1109/ICSE.1998.671617
   Frankel David., 2002, Model Driven Architecture: Applying MDA to Enterprise Computing
   Garcia J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P901, DOI 10.1109/ICSE.2013.6606639
   Glaser B. G., 1978, [No title captured]
   Guo GYB, 1999, INT FED INFO PROC, V12, P15
   Henriksson A, 2003, TECH REP
   Herbsleb JD, 1999, IEEE SOFTWARE, V16, P63, DOI 10.1109/52.795103
   Hevner March, 2004, DESIGN SCI INFORM SY
   Kandé MM, 2000, LECT NOTES COMPUT SC, V1939, P513
   Kazman R, 1998, FIFTH INTERNATIONAL CONFERENCE ON SOFTWARE REUSE - PROCEEDINGS, P290, DOI 10.1109/ICSR.1998.685754
   Kazman R, 1998, FIFTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P154, DOI 10.1109/WCRE.1998.723185
   Kazman R., 1999, Automated Software Engineering, V6, P107, DOI 10.1023/A:1008781513258
   Khandkar SH, 2011, OPEN CODING INTRO
   Kruchten P., 1995, IEEE SOFTW, V12
   KRUCHTEN PB, 1995, IEEE SOFTWARE, V12, P42, DOI 10.1109/52.469759
   Lago P, 2010, IEEE SOFTWARE, V27, P20, DOI 10.1109/MS.2010.142
   Le Gear A, 2005, P INT S EMP SOFTW EN, P34
   Lutellier T, 2015, P 2015 INT C SOFTW E
   Malavolta I, 2010, IEEE T SOFTWARE ENG, V36, P119, DOI 10.1109/TSE.2009.51
   Medvidovic N., 2006, Automated Software Engineering, V13, P225, DOI 10.1007/s10515-006-7737-5
   Murphy GC, 2001, IEEE T SOFTWARE ENG, V27, P364, DOI 10.1109/32.917525
   Myers D.M., 2009, Qualitative research in business and management
   NAUR P, 1985, MICROPROC MICROPROG, V15, P253, DOI 10.1016/0165-6074(85)90032-8
   Newcomb P, 2005, WCRE: 12th Working Conference on Reverse Engineering 2005, Proceedings, P237
   Onions P. E. W., 2006, P LEEDS METR U INN N, P1
   Pollet D, 2007, CSMR 2007: 11TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P137
   Resnik P, 1999, J ARTIF INTELL RES, V11, P95, DOI 10.1613/jair.514
   Sarkarati M, 2008, P SPACEOPS 2008 C HE, P310
   Sartipi K, 2006, ORCHESTRATED MULTIVI
   Schmerl B, 2006, IEEE T SOFTWARE ENG, V32, P454, DOI 10.1109/TSE.2006.66
   Schreiber C., 2004, Computational & Mathematical Organization Theory, V10, P155, DOI 10.1023/B:CMOT.0000039168.92625.9d
   Sedgwick P., 2013, BMJ, V347, pf6304, DOI [10.4135/9781412963947, 10.1136/bmj.f6304, DOI 10.1136/BMJ.F6304]
   Silverman D., 1997, Context and Method in Qualitative Research, P13
   Suddaby R, 2006, ACAD MANAGE J, V49, P633, DOI 10.5465/AMJ.2006.22083020
   Tamburri DA, 2016, IEEE SOFTWARE, V33, P70, DOI 10.1109/MS.2016.144
   Tamburri DA, 2013, ACM COMPUT SURV, V46, DOI 10.1145/2522968.2522971
   Tamburri DA, 2013, IEEE SOFTWARE, V30, P29, DOI 10.1109/MS.2012.170
   Teddlie C., 2009, FDN MIXED METHODS RE
   Terra R, 2009, SOFTWARE PRACT EXPER, V39, P1073, DOI 10.1002/spe.931
   Thomson SB, 2011, JOAAG, P184
   Tsai JJP, 2000, ANN SOFTW ENG, V10, P207, DOI 10.1023/A:1018960305057
   Vasconcelos A, 2007, LNCS SPRINGER
   Wettinger J, 2016, FUTURE GENER COMP SY, V56, P317, DOI 10.1016/j.future.2015.07.017
   Wille R, 2005, LECT NOTES ARTIF INT, V3626, P1
   Xiao L, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P763, DOI 10.1145/2635868.2661677
NR 63
TC 7
Z9 7
U1 0
U2 7
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2018
VL 23
IS 3
BP 1457
EP 1489
DI 10.1007/s10664-017-9543-z
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GH6DH
UT WOS:000433532300009
DA 2024-07-18
ER

PT J
AU Johanson, A
   Hasselbring, W
AF Johanson, Arne
   Hasselbring, Wilhelm
TI Effectiveness and efficiency of a domain-specific language for
   high-performance marine ecosystem simulation: a controlled experiment
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Domain-specific languages (DSLs); Program comprehension; Computational
   science; Scientific software development
AB It is a long-standing hypothesis that the concise and customized notation of a DSL improves the performance of developers when compared with a GPL. For non-technical domains-e.g., science-, this hypothesis lacks empirical evidence. Given this lack of empirical evidence, we evaluate a DSL for ecological modeling designed and implemented by us with regard to performance improvements of developers as compared to a GPL. We conduct an online survey with embedded controlled experiments among ecologists to assess the correctness and time spent of the participants when using a DSL for ecosystem simulation specifications compared with a GPL-based solution. We observe that (1) solving tasks with the DSL, the participants' correctness point score was -depending on the task- on average 61 % up to 63 % higher than with the GPL-based solution and their average time spent per task was reduced by 31 % up to 56 %; (2) the participants subjectively find it easier to work with the DSL, and (3) more than 90 % of the subjects are able to carry out basic maintenance tasks concerning the infrastructure of the DSL used in our treatment, which is based on another internal DSL embedded into Java. The tasks of our experiments are simplified and our web-based editor components do not offer full IDE-support. Our findings indicate that the development of further DSL for the specific needs of the ecological modeling community should be a worthwhile investment to increase its members' productivity and to enhance the reliability of their scientific results.
C1 [Johanson, Arne; Hasselbring, Wilhelm] Univ Kiel, Software Engn Grp, D-24098 Kiel, Germany.
C3 University of Kiel
RP Johanson, A (corresponding author), Univ Kiel, Software Engn Grp, D-24098 Kiel, Germany.
EM arj@informatik.uni-kiel.de; wha@informatik.uni-kiel.de
RI Hasselbring, Wilhelm/G-4794-2011
OI Johanson, Arne/0000-0002-8469-485X
CR Almorsy M, 2013, S VIS LANG HUM CEN C, P91, DOI 10.1109/VLHCC.2013.6645249
   [Anonymous], 2006, FORSCHUNGSMETHODEN E, DOI DOI 10.1007/978-3-540-33306-7
   April A., 2012, SOFTWARE MAINTENANCE
   Basili V. R., 1994, Encyclopedia of Software Engineering, V1, P528
   Basili VR, 2008, IEEE SOFTWARE, V25, P29, DOI 10.1109/MS.2008.103
   Bortz J., 2010, STAT HUMAN SOZIALWIS
   Collins RW, 2008, INFORM SOFTWARE TECH, V50, P1165, DOI 10.1016/j.infsof.2008.04.001
   Consel C., 1998, LECT NOTES COMPUTER, V1490, P170
   da Silva AR, 2015, COMPUT LANG SYST STR, V43, P139, DOI 10.1016/j.cl.2015.06.001
   Faulk S, 2009, COMPUT SCI ENG, V11, P30, DOI 10.1109/MCSE.2009.205
   Fowler M., 2010, Domain-specific languages
   Galesic M., 2006, JOURNAL OF OFFICIAL STATISTICS, V22, P313
   Hevner AR, 2005, TECH REP
   Hoisl B, 2014, 2014 9TH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY (QUATIC), P95, DOI 10.1109/QUATIC.2014.19
   Jedlitschka A., 2008, Guide to advanced empirical software engineering, P201, DOI DOI 10.1007/978-1-84800-044-5_8
   Johanson AN, 2016, SOFTWARE ENG SCI
   Johanson AN, 2014, P TMS SPRINGSIM 14, P187
   Johansson B., 2014, Pre-ECIS 2014 Workshop" IT Operations Management"(ITOM2014), P1
   Jones B, 2014, DESIGN ANAL CROSS OV
   Kieburtz R, 1995, SOFTWARE DESIGN RELI
   Kieburtz RB, 1996, PROC INT CONF SOFTW, P542, DOI 10.1109/ICSE.1996.493448
   Knight JC, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P547, DOI 10.1109/ICSE.2002.1007998
   Kolovos D.S., 2006, P ECOOP WORKSH DOM S
   Korman A.K., 1971, IND ORGAN PSYCHOL-US
   Kosar T, 2008, INFORM SOFTWARE TECH, V50, P390, DOI 10.1016/j.infsof.2007.04.002
   Kosar T, 2016, INFORM SOFTWARE TECH, V71, P77, DOI 10.1016/j.infsof.2015.11.001
   Kosar T, 2012, EMPIR SOFTW ENG, V17, P276, DOI 10.1007/s10664-011-9172-x
   Likert R., 1932, Arch. Psychol., V22, P44, DOI DOI 10.4135/9781412961288.N454
   Meliá S, 2016, SOFTWARE QUAL J, V24, P709, DOI 10.1007/s11219-015-9299-x
   Mernik M, 2005, ACM COMPUT SURV, V37, P316, DOI 10.1145/1118890.1118892
   Palyart M, 2012, P SDL 11 INT SYST SO, V7083, P247
   Prabhu P., 2011, P INT C HIGH PERF CO, P1, DOI [DOI 10.1145/2063348.2063374, 10.1145/2063348.2063374]
   Ricca F., 2010, EFFECTIVENESS SCREEN
   SHAPIRO SS, 1968, J AM STAT ASSOC, V63, P1343, DOI 10.2307/2285889
   Siegmund J, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P9, DOI 10.1109/ICSE.2015.24
   Stahl T., 2006, Model-driven software development: technology, engineering, management
   Van Solingen Rini, 1999, The Goal/ Question/ Metric Method: a practical guide for quality improvement of software development
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Wohlin C., 2012, Experimentation in Software Engineering
NR 39
TC 30
Z9 31
U1 0
U2 7
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2017
VL 22
IS 4
BP 2206
EP 2236
DI 10.1007/s10664-016-9483-z
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FB6ZI
UT WOS:000406290500017
DA 2024-07-18
ER

PT J
AU Chen, BY
   Jiang, ZM
AF Chen, Boyuan
   Jiang, Zhen Ming (Jack)
TI Characterizing logging practices in Java-based open source software
   projects - a replication study in Apache Software Foundation
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Empirical study; Replication; Log messages; Logging code; Mining
   software engineering data; MSR
AB Log messages, which are generated by the debug statements that developers insert into the code at runtime, contain rich information about the runtime behavior of software systems. Log messages are used widely for system monitoring, problem diagnoses and legal compliances. Yuan et al. performed the first empirical study on the logging practices in open source software systems. They studied the development history of four C/C++ server-side projects and derived ten interesting findings. In this paper, we have performed a replication study in order to assess whether their findings would be applicable to Java projects in Apache Software Foundations. We examined 21 different Java-based open source projects from three different categories: server-side, client-side and supporting-component. Similar to the original study, our results show that all projects contain logging code, which is actively maintained. However, contrary to the original study, bug reports containing log messages take a longer time to resolve than bug reports without log messages. A significantly higher portion of log updates are for enhancing the quality of logs (e.g., formatting & style changes and spelling/grammar fixes) rather than co-changes with feature implementations (e.g., updating variable names).
C1 [Chen, Boyuan; Jiang, Zhen Ming (Jack)] York Univ, Software Construct AnaLyt & Evaluat SCALE Lab, Toronto, ON, Canada.
C3 York University - Canada
RP Chen, BY; Jiang, ZM (corresponding author), York Univ, Software Construct AnaLyt & Evaluat SCALE Lab, Toronto, ON, Canada.
EM chenfsd@gmail.com; zmjiang@cse.yorku.ca
OI Chen, Boyuan/0000-0001-9103-5820
CR [Anonymous], P 25 IEEE INT C SOFT
   [Anonymous], 2015, EST REPR PSYCH SCI
   [Anonymous], P 24 IEEE INT C SOFT
   [Anonymous], 2015, JDT JAVA DEV TOOLS
   [Anonymous], 2011, P 16 INT C ARCH SUPP
   [Anonymous], 2015, DUMPS ASF SUBV REP
   [Anonymous], 2015, OP SOURC LOG MAN
   [Anonymous], 2009, P ACM SIGOPS 22 S OP
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Beschastnikh I, 2014, P 36 INT C SOFTW ENG
   BESCHASTNIKH I., 2011, P 19 ACM SIGSOFT S 1
   Bettenburg N., 2008, P 16 ACM SIGSOFT INT
   Bird C., 2009, P 7 JOINT M EUR SOFT
   Call HC, 2009, IEEE SOFTWARE, V26, P26, DOI 10.1109/MS.2009.6
   Ding R, 2015, USENIX ANN TECHN C M
   Fluri B, 2007, IEEE T SOFTWARE ENG, V33, P725, DOI 10.1109/TSE.2007.70731
   Fu Q., 2014, COMP P 36 INT C SOFT
   Gartner, 2014, SIEM MAG QUADR LEAD
   Ghezzi G, 2013, P 10 WORK C MIN SOFT
   Greiler M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P2, DOI 10.1109/MSR.2015.8
   Han J., 2005, DATA MINING CONCEPTS
   Hassan A.E., 2008, P 30 INT C SOFTW ENG
   Kampstra P., 2008, Journal of Statistical Software, V28, P1, DOI [10.18637/jss.v028.c01, DOI 10.18637/JSS.V028.C01, 10.18637/jss.v028.c01.papers3://publication/uuid/692988CE-7E10-498E-96EC-E7A0CE3620A3]
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Nagappan N., 2005, USE RELATIVE CODE CH
   Oliner A, 2012, COMMUN ACM, V55, P63, DOI 10.1145/2076450.2076466
   Premraj R, 2011, INT SYMP EMP SOFTWAR, P215, DOI 10.1109/ESEM.2011.30
   Rahman F, 2013, P 9 JOINT M FDN SOFT
   Rajlich V., 2014, Proceedings of the Conference on the Future of Software Engineering, P133, DOI [10.1145/2593882.2593893, DOI 10.1145/2593882.2593893]
   Rigby PC, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P541
   Robles Gregorio, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P171, DOI 10.1109/MSR.2010.5463348
   Romano J., 2006, ANN M FLORIDA ASS IN
   Shang W., 2009, P 6 IEEE INT WORK C
   Shang W, 2013, P 35 INT C SOFTW ENG
   Shang WY, 2015, EMPIR SOFTW ENG, V20, P1, DOI 10.1007/s10664-013-9274-8
   Shang WY, 2014, J SOFTW-EVOL PROC, V26, P3, DOI 10.1002/smr.1579
   Syer MD, 2015, IEEE T SOFTWARE ENG, V41, P176, DOI 10.1109/TSE.2014.2361131
   Syer MD, 2014, P 5 ACM SPEC INT C P
   Tan L, 2007, P 21 ACM S OP SYST P
   Woodside M, 2007, P FUT SOFTW ENG FOSE
   Yuan D, 2010, P ASPLOS ARCH SUPP P
   Yuan D, 2012, PROC INT CONF SOFTW, P102, DOI 10.1109/ICSE.2012.6227202
   Zhu J, 2015, P 37 INT C SOFTW ENG
   Zimmermann T, 2010, T SOFTWARE ENG TSE
NR 44
TC 71
Z9 75
U1 0
U2 11
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2017
VL 22
IS 1
BP 330
EP 374
DI 10.1007/s10664-016-9429-5
PG 45
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EI3GS
UT WOS:000392378400009
DA 2024-07-18
ER

PT J
AU Park, J
   Kim, M
   Bae, DH
AF Park, Jihun
   Kim, Miryung
   Bae, Doo-Hwan
TI An empirical study of supplementary patches in open source projects
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software evolution; Empirical study; Patches; Bug fixes
ID MINING VERSION HISTORIES; CLONE DETECTION; CODE
AB Developers occasionally make more than one patch to fix a bug. The related patches sometimes are intentionally separated, but unintended omission errors require supplementary patches. Several change recommendation systems have been suggested based on clone analysis, structural dependency, and historical change coupling in order to reduce or prevent incomplete patches. However, very few studies have examined the reason that incomplete patches occur and how real-world omission errors could be reduced. This paper systematically studies a group of bugs that were fixed more than once in open source projects in order to understand the characteristics of incomplete patches. Our study on Eclipse JDT core, Eclipse SWT, Mozilla, and Equinox p2 showed that a significant portion of the resolved bugs require more than one attempt to fix. Compared to single-fix bugs, the multi-fix bugs did not have a lower quality of bug reports, but more attribute changes (i.e., cc'ed developers or title) were made to the multi-fix bugs than to the single-fix bugs. Multi-fix bugs are more likely to have high severity levels than single-fix bugs. Hence, more developers have participated in discussions about multi-fix bugs compared to single-fix bugs. Multi-fix bugs take more time to resolve than single-fix bugs do. Incomplete patches are longer and more scattered, and they are related to more files than regular patches are. Our manual inspection showed that the causes of incomplete patches were diverse, including missed porting updates, incorrect handling of conditional statements, and incomplete refactoring. Our investigation showed that only 7 % to 17 % of supplementary patches had content similar to their initial patches, which implies that supplementary patch locations cannot be predicted by code clone analysis alone. Furthermore, 16 % to 46 % of supplementary patches were beyond the scope of the immediate structural dependency of their initial patch locations. Historical co-change patterns also showed low precision in predicting supplementary patch locations. Code clones, structural dependencies, and historical co-change analyses predicted different supplementary patch locations, and there was little overlap between them. Combining these analyses did not cover all supplementary patch locations. The present study investigates the characteristics of incomplete patches and multi-fix bugs, which have not been systematically examined in previous research. We reveal that predicting supplementary patch is a difficult problem that existing change recommendation approaches could not cover. New type of approaches should be developed and validated on a supplementary patch data set, which developers failed to make the complete patches at once in practice.
C1 [Park, Jihun; Bae, Doo-Hwan] Korea Adv Inst Sci & Technol, Sch Comp, Daejeon, South Korea.
   [Kim, Miryung] Univ Calif Los Angeles, Dept Comp Sci, Los Angeles, CA 90024 USA.
C3 Korea Advanced Institute of Science & Technology (KAIST); University of
   California System; University of California Los Angeles
RP Park, J (corresponding author), Korea Adv Inst Sci & Technol, Sch Comp, Daejeon, South Korea.
EM jhpark@se.kaist.ac.kr; miryung@cs.ucla.edu; bae@se.kaist.ac.kr
RI Bae, Doo-Hwan/C-1538-2011
OI Park, Jihun/0000-0003-3745-886X
FU National Science Foundation [CCF-1149391, CNS-1239498]; Google Faculty
   Award; Institute for Information & communications Technology
   Promotion(IITP) - Korea government(MSIP) [R0126-16-1101]
FX This work was supported in part by the National Science Foundation under
   grants CCF-1149391, CNS-1239498, and a Google Faculty Award. This work
   was supported by Institute for Information & communications Technology
   Promotion(IITP) grant funded by the Korea government(MSIP) (No.
   R0126-16-1101, (SW Star Lab) Software R&D for Model-based Analysis and
   Verification of Higher-order Large Complex System)
CR An L, 2014, IEEE INT WORK C SO, P205, DOI 10.1109/SCAM.2014.29
   Andersen Jesper, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P337, DOI 10.1109/ASE.2008.44
   [Anonymous], 2005, Proc. of the European Software Engineering Conference and the ACM SIGSOFT Symposium on the Foundations of Software Engineering (ESEC/FSE'05)
   [Anonymous], 2011, Proceedings of the 19th ACM SIGSOFT symposium and the 13th European conference on Foundations of software engineering (FSE'11), DOI [10.1145/2025113.2025121, DOI 10.1145/2025113.2025121]
   [Anonymous], 2007, P 22 IEEE ACM INT C, DOI DOI 10.1145/1321631.1321639
   [Anonymous], 2014, P 29 ACM IEEE INT C, DOI DOI 10.1145/2642937.2642956
   [Anonymous], 2012, P ACM SIGSOFT 20 INT
   [Anonymous], 2010, International Conference on Software Maintenance, DOI DOI 10.1109/ICSM.2010.5609691
   Barnett M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P134, DOI 10.1109/ICSE.2015.35
   Bettenburg N, 2012, SCI COMPUT PROGRAM, V77, P760, DOI 10.1016/j.scico.2010.11.010
   Bird C, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P121, DOI 10.1145/1595696.1595716
   Cliff N., 2014, Ordinal Methods for Behavioral Data Analysis
   Cubranic D, 2003, PROC INT CONF SOFTW, P408, DOI 10.1109/ICSE.2003.1201219
   Duala-Ekoko E, 2007, PROC INT CONF SOFTW, P158
   Eyolfson J., 2011, WORKING C MINING SOF, P153, DOI DOI 10.1145/1985441.1985464
   Fischer M, 2003, PROC IEEE INT CONF S, P23, DOI 10.1109/ICSM.2003.1235403
   Gamma Erich., 1994, DESIGN PATTERNS
   Gorg Carsten., 2005, MSR 05, P1, DOI DOI 10.1145/1083142.1083148
   Grissom R. J., 2005, EFFECT SIZES RES BRO
   Gu Z., 2010, ICSE 10, V1, P55, DOI DOI 10.1145/1806799.1806812
   Hassan AE, 2004, PROC IEEE INT CONF S, P284, DOI 10.1109/ICSM.2004.1357812
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Herzig K, 2013, IEEE WORK CONF MIN S, P121, DOI 10.1109/MSR.2013.6624018
   Herzig K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P392, DOI 10.1109/ICSE.2013.6606585
   Jiang LX, 2007, PROC INT CONF SOFTW, P96
   Jihun Park, 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P40, DOI 10.1109/MSR.2012.6224298
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kim M., 2011, ICSE 11, P151, DOI DOI 10.1145/1985793.1985815
   Kim M, 2009, PROC INT CONF SOFTW, P309, DOI 10.1109/ICSE.2009.5070531
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Loh A., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P263, DOI 10.1145/1810295.1810348
   Meng N, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P502, DOI 10.1109/ICSE.2013.6606596
   Meng N, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P329
   Mijung Kim, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P383, DOI 10.1109/ICST.2010.63
   Mockus A, 2000, PROC IEEE INT CONF S, P120, DOI 10.1109/ICSM.2000.883028
   Mockus A, 2000, BELL LABS TECH J, V5, P169, DOI 10.1002/bltj.2229
   Nagappan Nachiappan, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P309, DOI 10.1109/ISSRE.2010.25
   Nguyen Tien N, 2010, Proceedings of the 32Nd ACM/IEEE International Conference on Software Engineering-Volume 1, ICSE '10, P315
   Nguyen TT, 2009, IEEE INT CONF AUTOM, P123, DOI 10.1109/ASE.2009.90
   Padioleau Y, 2008, EUROSYS'08: PROCEEDINGS OF THE EUROSYS 2008 CONFERENCE, P247, DOI 10.1145/1357010.1352618
   Pham NH, 2009, PROC INT CONF SOFTW, P276, DOI 10.1109/ICSE.2009.5070528
   Purushothaman R, 2005, IEEE T SOFTWARE ENG, V31, P511, DOI 10.1109/TSE.2005.74
   Rahman F, 2012, EMPIR SOFTW ENG, V17, P503, DOI 10.1007/s10664-011-9195-3
   Rahman F, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P491, DOI 10.1145/1985793.1985860
   Ray Baishakhi, 2012, P ACM SIGSOFT 20 INT, DOI [10.1145/2393596.2393659, DOI 10.1145/2393596.2393659]
   SHANNON CE, 1949, BELL SYST TECH J, V28, P656, DOI 10.1002/j.1538-7305.1949.tb00928.x
   Shihab E, 2013, EMPIR SOFTW ENG, V18, P1005, DOI 10.1007/s10664-012-9228-6
   Tao Y, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P180, DOI 10.1109/MSR.2015.24
   Viera AJ, 2005, FAM MED, V37, P360
   Wang X., 2010, Proceedings of the IEEE/ACM International Conference on Automated Software Engineering, ASE '10, P457
   Ying ATT, 2004, IEEE T SOFTWARE ENG, V30, P574, DOI 10.1109/TSE.2004.52
   Zhang XY, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P415, DOI 10.1145/1250734.1250782
   Zimmermann T, 2005, IEEE T SOFTWARE ENG, V31, P429, DOI 10.1109/TSE.2005.72
   Zimmermann T, 2004, PROC INT CONF SOFTW, P563, DOI 10.1109/ICSE.2004.1317478
   Zimmermann T, 2012, PROC INT CONF SOFTW, P1074, DOI 10.1109/ICSE.2012.6227112
   Zimmermann T, 2010, IEEE T SOFTWARE ENG, V36, P618, DOI 10.1109/TSE.2010.63
NR 56
TC 9
Z9 9
U1 0
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2017
VL 22
IS 1
BP 436
EP 473
DI 10.1007/s10664-016-9432-x
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EI3GS
UT WOS:000392378400012
DA 2024-07-18
ER

PT J
AU Phannachitta, P
   Keung, J
   Monden, A
   Matsumoto, K
AF Phannachitta, Passakorn
   Keung, Jacky
   Monden, Akito
   Matsumoto, Kenichi
TI A stability assessment of solution adaptation techniques for
   analogy-based software effort estimation
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software effort estimation; Analogy-based estimation; Solution
   adaptation techniques; Ranking instability; Robust statistical method
ID COST ESTIMATION; PREDICTION; REGRESSION
AB Among numerous possible choices of effort estimation methods, analogy-based software effort estimation based on Case-based reasoning is one of the most adopted methods in both the industry and research communities. Solution adaptation is the final step of analogy-based estimation, employed to aggregate and adapt to solutions derived during the case-based reasoning process. Variants of solution adaptation techniques have been proposed in previous studies; however, the ranking of these techniques is not conclusive and shows conflicting results, since different studies rank these techniques in different ways. This paper aims to find a stable ranking of solution adaptation techniques for analogy-based estimation. Compared with the existing studies, we evaluate 8 commonly adopted solution techniques with more datasets (12), more feature selection techniques included (4), and more stable error measures (5) to a robust statistical test method based on the Brunner test. This comprehensive experimental procedure allows us to discover a stable ranking of the techniques applied, and to observe similar behaviors from techniques with similar adaptation mechanisms. In general, the linear adaptation techniques based on the functions of size and productivity (e.g., regression towards the mean technique) outperform the other techniques in a more robust experimental setting adopted in this study. Our empirical results show that project features with strong correlation to effort, such as software size or productivity, should be utilized in the solution adaptation step to achieve desirable performance. Designing a solution adaptation strategy in analogy-based software effort estimation requires careful consideration of those influential features to ensure its prediction is of relevant and accurate.
C1 [Phannachitta, Passakorn; Matsumoto, Kenichi] Nara Inst Sci & Technol, Grad Sch Informat Sci, Nara, Japan.
   [Keung, Jacky] City Univ Hong Kong, Dept Comp Sci, Hong Kong, Hong Kong, Peoples R China.
   [Monden, Akito] Okayama Univ, Grad Sch Nat Sci & Technol, Okayama, Japan.
C3 Nara Institute of Science & Technology; City University of Hong Kong;
   Okayama University
RP Phannachitta, P (corresponding author), Nara Inst Sci & Technol, Grad Sch Informat Sci, Nara, Japan.; Keung, J (corresponding author), City Univ Hong Kong, Dept Comp Sci, Hong Kong, Hong Kong, Peoples R China.
EM phannachitta-p@is.naist.jp; Jacky.Keung@cityu.edu.hk
RI Keung, Jacky/ABA-7089-2020; Keung, Jacky/X-4693-2019; MATSUMOTO,
   KENICHI/AAD-9090-2019
OI Keung, Jacky/0000-0002-3803-9600; MATSUMOTO,
   KENICHI/0000-0002-7418-9323; Monden, Akito/0000-0003-4295-207X
FU JSPS KAKENHI Grant [26330086]; City University of Hong Kong research
   fund [7200354, 7004222, 7004474]; Grants-in-Aid for Scientific Research
   [26330086] Funding Source: KAKEN
FX This research was supported by JSPS KAKENHI Grant number 26330086, was
   conducted as a part of the JSPS Program for Advancing Strategic
   International Networks to Accelerate the Circulation of Talented
   Researchers, and was supported in part by the City University of Hong
   Kong research fund (Project number 7200354, 7004222, and 7004474).
CR ALBRECHT AJ, 1983, IEEE T SOFTWARE ENG, V9, P639, DOI 10.1109/TSE.1983.235271
   Alpaydin E, 2014, ADAPT COMPUT MACH LE, P1
   [Anonymous], P 19 INT C EV ASS SO
   [Anonymous], 2002, Applied Statistics for Software Managers
   Azzeh M, 2012, EMPIR SOFTW ENG, V17, P90, DOI 10.1007/s10664-011-9176-6
   BAKER DML, 2007, THESIS
   Bakir A, 2010, SOFTWARE QUAL J, V18, P57, DOI 10.1007/s11219-009-9081-z
   Boehm BW., 1981, Software Engineering Economics
   Bosu MF, 2013, IEEE AUS SOFT ENGR, P97, DOI 10.1109/ASWEC.2013.21
   Brunner E, 2002, J STAT PLAN INFER, V108, P37, DOI 10.1016/S0378-3758(02)00269-0
   CHEN Z, 2005, ACM SIGSOFT SOFTWARE, V30, P1
   Chiu NH, 2007, J SYST SOFTWARE, V80, P628, DOI 10.1016/j.jss.2006.06.006
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   Foss T, 2003, IEEE T SOFTWARE ENG, V29, P985, DOI 10.1109/TSE.2003.1245300
   Hastie T., 2009, The Elements of Statistical Learning
   Jorgensen M, 2003, J SYST SOFTWARE, V68, P253, DOI 10.1016/S0164-1212(03)00066-9
   KEMERER CF, 1987, COMMUN ACM, V30, P416, DOI 10.1145/22899.22906
   Keung J, 2008, ASWEC 2008: 19TH AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P229
   Keung J, 2013, AUTOMAT SOFTW ENG, V20, P543, DOI 10.1007/s10515-012-0108-5
   Keung J, 2009, IEEE AUS SOFT ENGR, P327, DOI 10.1109/ASWEC.2009.32
   Keung J, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P294
   Keung JW, 2008, IEEE T SOFTWARE ENG, V34, P471, DOI 10.1109/TSE.2008.34
   Kirsopp C, 2003, LECT NOTES ARTIF INT, V2689, P231
   Kitchenham B, 2004, IEEE T SOFTWARE ENG, V30, P1023, DOI 10.1109/TSE.2004.104
   KITCHENHAM B, 1993, PROC INT CONF SOFTW, P477, DOI 10.1109/ICSE.1993.346018
   Kitchenham B, 2002, J SYST SOFTWARE, V64, P57, DOI 10.1016/S0164-1212(02)00021-3
   Kitchenham B, 2009, P 5 INT C PRED MOD S, P1, DOI DOI 10.1145/1540438.1540444
   Kitchenham B, 2015, P 19 INT C EV ASS SO, V1
   Kittler J., 1986, Handbook of Pattern Recognition and Image Processing, P59, DOI DOI 10.1007/978-1-4684-5188-7_8
   Kocaguneli E., 2012, P INT C PRED MOD SOF, P89
   Kocaguneli E, 2010, Proceedings of the IEEE/ACM international conference on Automated software engineering, P321, DOI DOI 10.1145/1858996.1859061
   Kocaguneli E, 2013, J SYST SOFTWARE, V86, P1879, DOI 10.1016/j.jss.2013.02.053
   Kocaguneli E, 2013, EMPIR SOFTW ENG, V18, P1, DOI 10.1007/s10664-011-9189-1
   Kocaguneli E, 2012, IEEE T SOFTWARE ENG, V38, P1403, DOI 10.1109/TSE.2011.111
   Kocaguneli E, 2012, IEEE T SOFTWARE ENG, V38, P425, DOI 10.1109/TSE.2011.27
   Kohavi R., 1995, STUDY CROSS VALIDATI, DOI DOI 10.1067/MOD.2000.109031
   Kosti M.V., 2012, P 8 INT C PREDICTIVE, P59, DOI DOI 10.1145/2365324.2365333
   Li JZ, 2007, EMPIR SOFTW ENG, V12, P65, DOI 10.1007/s10664-006-7552-4
   Li YF, 2009, EMPIR SOFTW ENG, V14, P603, DOI 10.1007/s10664-008-9104-6
   Mendes E, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P100, DOI 10.1109/ISESE.2003.1237969
   Menzies T, 2015, TERA PROMISE ONE LAR
   Menzies T, 2010, AUTOMAT SOFTW ENG, V17, P409, DOI 10.1007/s10515-010-0070-z
   MIYAZAKI Y, 1994, J SYST SOFTWARE, V27, P3, DOI 10.1016/0164-1212(94)90110-4
   Phannachitta P, 2013, IEEE AUS SOFT ENGR, P165, DOI 10.1109/ASWEC.2013.28
   Premraj R, 2005, P 11 IEEE INT S SOFT, P37
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   Shepperd M, 2005, 2005 11th International Symposium on Software Metrics (METRICS), P348
   Shepperd M, 2001, IEEE T SOFTWARE ENG, V27, P1014, DOI 10.1109/32.965341
   Tosun A, 2009, EXPERT SYST APPL, V36, P10325, DOI 10.1016/j.eswa.2009.01.079
   Walkerden F., 1999, Empirical Software Engineering, V4, P135, DOI 10.1023/A:1009872202035
   Wen JF, 2009, ASIA PAC SOFWR ENG, P179, DOI 10.1109/APSEC.2009.40
   Wilcox R., 2011, Modern statistics for the social and behavioral sciences: A practical introduction
   Wilson DR, 1997, J ARTIF INTELL RES, V6, P1, DOI 10.1613/jair.346
   Zimmerman DW, 2000, J GEN PSYCHOL, V127, P354, DOI 10.1080/00221300009598589
NR 54
TC 20
Z9 21
U1 0
U2 7
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2017
VL 22
IS 1
BP 474
EP 504
DI 10.1007/s10664-016-9434-8
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EI3GS
UT WOS:000392378400013
DA 2024-07-18
ER

PT J
AU McIntosh, S
   Nagappan, M
   Adams, B
   Mockus, A
   Hassan, AE
AF McIntosh, Shane
   Nagappan, Meiyappan
   Adams, Bram
   Mockus, Audris
   Hassan, Ahmed E.
TI A Large-Scale Empirical Study of the Relationship between Build
   Technology and Build Maintenance
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Build systems; Software maintenance; Large-scale analysis; Open source
AB Build systems specify how source code is translated into deliverables. They require continual maintenance as the system they build evolves. This build maintenance can become so burdensome that projects switch build technologies, potentially having to rewrite thousands of lines of build code. We aim to understand the prevalence of different build technologies and the relationship between build technology and build maintenance by analyzing version histories in a corpus of 177,039 repositories spread across four software forges, three software ecosystems, and four large-scale projects. We study low-level, abstraction-based, and framework-driven build technologies, as well as tools that automatically manage external dependencies. We find that modern, framework-driven build technologies need to be maintained more often and these build changes are more tightly coupled with the source code than low-level or abstraction-based ones. However, build technology migrations tend to coincide with a shift of build maintenance work to a build-focused team, deferring the cost of build maintenance to them.
C1 [McIntosh, Shane; Nagappan, Meiyappan; Hassan, Ahmed E.] Queens Univ, Software Anal & Intelligence Lab, Kingston, ON, Canada.
   [Adams, Bram] Polytech Montreal, Lab Maintenance Construct & Intelligence Software, Montreal, PQ, Canada.
   [Mockus, Audris] Univ Tennessee, Dept Elect Engn & Comp Sci, Knoxville, TN USA.
   [Mockus, Audris] Avaya Labs Res, Basking Ridge, NJ USA.
C3 Queens University - Canada; Universite de Montreal; Polytechnique
   Montreal; University of Tennessee System; University of Tennessee
   Knoxville; Avaya
RP McIntosh, S (corresponding author), Queens Univ, Software Anal & Intelligence Lab, Kingston, ON, Canada.
EM mcintosh@cs.queensu.ca; mei@cs.queensu.ca; bram.adams@polymtl.ca;
   audris@avaya.com; ahmed@cs.queensu.ca
RI KHALIFA, AHMED khalifa/HKF-2246-2023; Mockus, Audris/AEY-3361-2022; Ali,
   Ahmed/HOF-4672-2023; Hassan, Ahmed/AAB-7241-2019
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; Adams,
   Bram/0000-0001-7213-4006
CR Adams B., 2008, ELECT COMMUN EASST, V8
   Adams B, 2007, PROC IEEE INT CONF S, P214
   Al-Kofahi JM, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P150, DOI 10.1109/ICSM.2012.6405266
   [Anonymous], 1981, SIMULTANEOUS STAT IN
   BAUER DF, 1972, J AM STAT ASSOC, V67, P687, DOI 10.2307/2284469
   Bird C., 2009, P 6 WORK C MIN SOFTW
   Bird C, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P121, DOI 10.1145/1595696.1595716
   Dietrich C., 2012, Em: Proceedings of the 16th International Software Product Line Conference-Volume, V1, P21
   Ebersole S, 2007, MAVEN MIGRATION
   FELDMAN SI, 1979, SOFTWARE PRACT EXPER, V9, P255, DOI 10.1002/spe.4380090402
   Gall H, 1998, PROC IEEE INT CONF S, P190, DOI 10.1109/ICSM.1998.738508
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Grimmer L., 2010, BUILDING MYSQL SERVE
   Herraiz I, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P203
   Hochstein L, 2011, INT SYMP EMP SOFTWAR, P384, DOI 10.1109/ESEM.2011.54
   Humble Jez, 2010, Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation
   Kampstra P., 2008, Journal of Statistical Software, V28, P1, DOI [10.18637/jss.v028.c01, DOI 10.18637/JSS.V028.C01, 10.18637/jss.v028.c01.papers3://publication/uuid/692988CE-7E10-498E-96EC-E7A0CE3620A3]
   Lawrence R, 2004, INFORM SOFTWARE TECH, V46, P753, DOI 10.1016/j.infsof.2004.02.003
   Linden Labs, 2010, CMAKE
   McIntosh S, 2012, EMPIR SOFTW ENG, V17, P578, DOI 10.1007/s10664-011-9169-5
   McIntosh S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P141, DOI 10.1145/1985793.1985813
   Miller P, 1998, AUUGN Journal of AUUG Inc, V19, P14
   Mockus A, 2007, LECT NOTES COMPUT SC, V4336, P91
   Mockus A, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P11, DOI 10.1109/MSR.2009.5069476
   Nadi S., 2011, 2011 18th Working Conference on Reverse Engineering, P315, DOI 10.1109/WCRE.2011.46
   Nadi S, 2012, EUR CON SFTWR MTNCE, P107, DOI 10.1109/CSMR.2012.21
   Neitsch A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P140, DOI 10.1109/ICSM.2012.6405265
   Neundorf A, 2010, WHY KDE PROJECT SWIT
   Neville-Neil GV, 2009, COMMUN ACM, V52, P25, DOI 10.1145/1498765.1498777
   Nguyen T. H. D., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P259, DOI 10.1109/WCRE.2010.37
   Savage B, 2010, BUILD SYSTEMS RELEVA
   Smith P, 2011, Software build systems: principles and experience
   Suvorov R, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P160, DOI 10.1109/ICSM.2012.6405267
   Tamrawi A, 2012, PROC INT CONF SOFTW, P650, DOI 10.1109/ICSE.2012.6227152
   TU Q, 2002, P INT C SOFTW MAINT, P398
   Zadok E, 2002, USENIX ASSOCIATION PROCEEDINGS OF THE FREENIX TRACK, P287
NR 36
TC 27
Z9 31
U1 1
U2 13
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2015
VL 20
IS 6
BP 1587
EP 1633
DI 10.1007/s10664-014-9324-x
PG 47
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CT7YX
UT WOS:000363032900006
DA 2024-07-18
ER

PT J
AU Bjarnason, E
   Runeson, P
   Borg, M
   Unterkalmsteiner, M
   Engström, E
   Regnell, B
   Sabaliauskaite, G
   Loconsole, A
   Gorschek, T
   Feldt, R
AF Bjarnason, Elizabeth
   Runeson, Per
   Borg, Markus
   Unterkalmsteiner, Michael
   Engstrom, Emelie
   Regnell, Bjorn
   Sabaliauskaite, Giedre
   Loconsole, Annabella
   Gorschek, Tony
   Feldt, Robert
TI Challenges and practices in aligning requirements with verification and
   validation: a case study of six companies
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Requirements engineering; Verification; Validation; Testing; Alignment;
   Case study
ID SOFTWARE; TRACEABILITY; TESTS
AB Weak alignment of requirements engineering (RE) with verification and validation (VV) may lead to problems in delivering the required products in time with the right quality. For example, weak communication of requirements changes to testers may result in lack of verification of new requirements and incorrect verification of old invalid requirements, leading to software quality problems, wasted effort and delays. However, despite the serious implications of weak alignment research and practice both tend to focus on one or the other of RE or VV rather than on the alignment of the two. We have performed a multi-unit case study to gain insight into issues around aligning RE and VV by interviewing 30 practitioners from 6 software developing companies, involving 10 researchers in a flexible research process for case studies. The results describe current industry challenges and practices in aligning RE with VV, ranging from quality of the individual RE and VV activities, through tracing and tools, to change control and sharing a common understanding at strategy, goal and design level. The study identified that human aspects are central, i.e. cooperation and communication, and that requirements engineering practices are a critical basis for alignment. Further, the size of an organisation and its motivation for applying alignment practices, e. g. external enforcement of traceability, are variation factors that play a key role in achieving alignment. Our results provide a strategic roadmap for practitioners improvement work to address alignment challenges. Furthermore, the study provides a foundation for continued research to improve the alignment of RE with VV.
C1 [Bjarnason, Elizabeth; Runeson, Per; Borg, Markus; Engstrom, Emelie; Regnell, Bjorn] Lund Univ, Dept Comp Sci, SE-22100 Lund, Sweden.
   [Unterkalmsteiner, Michael; Gorschek, Tony; Feldt, Robert] Blekinge Inst Technol, Sch Comp, SE-37179 Karlskrona, Sweden.
   [Loconsole, Annabella] Malmo Univ, SE-20506 Malmo, Sweden.
   [Feldt, Robert] Chalmers Univ Technol, Dept Comp Sci & Engn, SE-41296 Gothenburg, Sweden.
   [Sabaliauskaite, Giedre] Singapore Univ Technol & Design, Singapore 138682, Singapore.
C3 Lund University; Blekinge Institute Technology; Malmo University;
   Chalmers University of Technology; Singapore University of Technology &
   Design
RP Bjarnason, E (corresponding author), Lund Univ, Dept Comp Sci, Box 118, SE-22100 Lund, Sweden.
EM elizabeth@cs.lth.se; per.runeson@cs.lth.se; markus.borg@cs.lth.se;
   michael.unterkalmsteiner@bth.se; emelie.engstrom@cs.lth.se;
   bjorn.regnell@cs.lth.se; gsabaliauskaite@gmail.com;
   annabella.loconsole@mah.se; tony.gorschek@bth.se;
   robert.feldt@chalmers.se
RI Borg, Markus/F-3609-2010; Sabaliauskaite, Giedre/GYD-8916-2022;
   Loconsole, Annabella/G-4728-2014; Runeson, Per/H-5113-2019; Engström,
   Emelie/AAG-7808-2019
OI Borg, Markus/0000-0001-7879-4371; Sabaliauskaite,
   Giedre/0000-0003-1183-7001; Runeson, Per/0000-0003-2795-4851; Engström,
   Emelie/0000-0001-6736-9425; Regnell, Bjorn/0000-0002-9380-6120;
   Unterkalmsteiner, Michael/0000-0003-4118-0952; Bjarnason,
   Elizabeth/0000-0001-9070-0008
FU EASE Industrial Excellence Center for Embedded Applications Software
   Engineering
FX We want to thank Borje Haugset for acting as interviewer in three of the
   interviews. We would also like to thank all the participating companies
   and anonymous interviewees for their contribution to this project. The
   research was funded by EASE Industrial Excellence Center for Embedded
   Applications Software Engineering (http://ease.cs.lth.se).
CR [Anonymous], INF SOFTW TECHNOL
   [Anonymous], 1998, PROC 4 INT WORKING C
   [Anonymous], COOP HUM ASP SOFTW E
   [Anonymous], 1969, NATO WORKING C SOFTW
   [Anonymous], P IEEE 1 INT S REQ E
   [Anonymous], REAL WORLD RES RESOU
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], 2010, P REFSQ 2010
   [Anonymous], P 30 ANN IEEE NASA S
   [Anonymous], P 2008 INT C SOFTW T
   [Anonymous], IEEE SOFTWARE
   [Anonymous], 2001, TECHNICAL REPORT
   [Anonymous], P 10 WORKSH REQ ENG
   [Anonymous], IEEE T SOFTWARE
   Barmi Z. A., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P476, DOI 10.1109/ICSTW.2011.58
   Cheng BHC, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P285, DOI 10.1109/FOSE.2007.17
   Damian D, 2005, EMPIR SOFTW ENG, V10, P255, DOI 10.1007/s10664-005-1288-4
   Damian D, 2006, IEEE T SOFTWARE ENG, V32, P433, DOI 10.1109/TSE.2006.61
   De Lucia A, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1276933.1276934
   Dias Neto A. C., 2007, P ACM INT WORKSH EMP, P31
   Gorschek T, 2004, SOFTWARE PRACT EXPER, V34, P1311, DOI 10.1002/spe.615
   Gotel O. C. Z., 1994, Proceedings of the First International Conference on Requirements Engineering (Cat. No.94TH0613-0), P94, DOI 10.1109/ICRE.1994.292398
   Graham D, 2002, IEEE SOFTWARE, V19, P15, DOI 10.1109/MS.2002.1032845
   Grieskamp W, 2011, SOFTW TEST VERIF REL, V21, P55, DOI 10.1002/stvr.427
   Hayes JH, 2007, INNOV SYST SOFTW ENG, V3, P193, DOI 10.1007/s11334-007-0024-1
   Höst M, 2010, IEEE T EDUC, V53, P288, DOI 10.1109/TE.2009.2016106
   IEEE, 1990, TECHNICAL REPORT 610
   Jarke M, 1998, COMMUN ACM, V41, P32, DOI 10.1145/290133.290145
   KRAUT RE, 1995, COMMUN ACM, V38, P69, DOI 10.1145/203330.203345
   Kukkanen J, 2009, ASIA PAC SOFWR ENG, P482, DOI 10.1109/APSEC.2009.62
   Lormans M, 2008, EMPIR SOFTW ENG, V13, P727, DOI 10.1007/s10664-008-9078-4
   Martin RC, 2008, IEEE SOFTWARE, V25, P54, DOI 10.1109/MS.2008.24
   Melnik G., 2006, AGILE 2006
   Mohagheghi P, 2008, LECT NOTES COMPUT SC, V5095, P432, DOI 10.1007/978-3-540-69100-6_31
   Nebut C, 2006, IEEE T SOFTWARE ENG, V32, P140, DOI 10.1109/TSE.2006.22
   Paci F., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P834, DOI 10.1109/ICST.2012.184
   Pettersson F, 2008, J SYST SOFTWARE, V81, P972, DOI 10.1016/j.jss.2007.08.032
   Post H, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P295, DOI 10.1109/RE.2009.43
   Ramesh B, 1997, ANN SOFTW ENG, V3, P397, DOI 10.1023/A:1018969401055
   Ramesh B, 1998, COMMUN ACM, V41, P37, DOI 10.1145/290133.290147
   Regnell B, 2000, J SYST SOFTWARE, V50, P117, DOI 10.1016/S0164-1212(99)00084-9
   Ricca F, 2009, INFORM SOFTWARE TECH, V51, P270, DOI 10.1016/j.infsof.2008.01.007
   Runeson P, 2003, J SOFTW MAINT EVOL-R, V15, P41, DOI 10.1002/smr.265
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sikora E, 2012, REQUIR ENG, V17, P57, DOI 10.1007/s00766-011-0144-x
   Uusitalo EJ, 2008, INT REQUIR ENG CONF, P265, DOI 10.1109/RE.2008.30
   WATKINS R, 1994, IEEE SOFTWARE, V11, P104, DOI 10.1109/52.300100
   Yue T, 2011, REQUIR ENG, V16, P75, DOI 10.1007/s00766-010-0111-y
NR 48
TC 52
Z9 58
U1 2
U2 31
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2014
VL 19
IS 6
BP 1809
EP 1855
DI 10.1007/s10664-013-9263-y
PG 47
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AR9QU
UT WOS:000343910700008
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Han, WM
AF Han, Wen-Ming
TI Validating differential relationships between risk categories and
   project performance as perceived by managers
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Risk management; Software project risks; Project performance;
   Prioritization strategy
ID SOFTWARE; COMPONENTS
AB Effectively controlling software risk helps ensure project performance. Although the relationship between risk and software project performance has been continuously examined, project managers who have attempted to apply existing knowledge to mitigate risky areas remain confused. This study presents two distinct risk prioritization strategies to assist practitioners in developing risk mitigation plans when considering the performance aspects that a particular project should pursue. On the basis of data from 139 software projects, this study shows that each aspect related to project performance is influenced by at least two types of software project risks: objective risks and resilience risks. In particular, objective risks negatively influence all aspects of project performance. Finally, the study shows that using either a risk-focused prioritization strategy or a performance-actualized prioritization strategy provides a gradual management foundation for controlling risks without worrying about excess or deficient risk management investments.
C1 Takming Univ Sci & Technol, Dept Informat Management, Taipei, Taiwan.
C3 Takming University Science & Technology
RP Han, WM (corresponding author), Takming Univ Sci & Technol, Dept Informat Management, Taipei, Taiwan.
EM wmhan@takming.edu.tw
FU National Science Council of Taiwan [NSC 99-2410-H-147-007, NSC
   101-3114-C-147-001-ES]
FX The authors would like to thank two anonymous reviewers and the editor
   of Empirical Software Engineering for their valuable feedback and
   suggestions. This work was supported by the National Science Council of
   Taiwan, under operating grants of NSC 99-2410-H-147-007 and NSC
   101-3114-C-147-001-ES.
CR Alberts CJ., 2009, CMUSEI2009TR007
   Armour PG, 2005, COMMUN ACM, V48, P17, DOI 10.1145/1047671.1047690
   ARMSTRONG JS, 1977, J MARKETING RES, V14, P396, DOI 10.2307/3150783
   Barki H., 1993, Journal of Management Information Systems, V10, P203
   BOEHM BW, 1991, IEEE SOFTWARE, V8, P32, DOI 10.1109/52.62930
   Carr Marvin J., 1993, Technical Report CMU/SEI-93-TR-6
   Crawford SD, 2001, SOC SCI COMPUT REV, V19, P146, DOI 10.1177/089443930101900202
   DeMarco T, 2003, IEEE SOFTWARE, V20, P99, DOI 10.1109/MS.2003.1231163
   Dillman D.A., 1998, JOINT STAT M AM STAT
   Han WM, 2007, J SYST SOFTWARE, V80, P42, DOI 10.1016/j.jss.2006.04.030
   Huang SJ, 2008, INFORM MANAGE-AMSTER, V45, P175, DOI 10.1016/j.im.2008.02.001
   Jiang JJ, 1999, INFORM MANAGE, V36, P263, DOI 10.1016/S0378-7206(99)00024-5
   Lim WK, 2011, J ASSOC INF SYST, V12, P414
   Liu J, 2011, INT J PROJ MANAG, V29, P923, DOI 10.1016/j.ijproman.2010.11.002
   Liu Jun, 2009, 2009 1st International Conference on Information Science and Engineering (ICISE 2009), P4390, DOI 10.1109/ICISE.2009.756
   Ropponen J, 2000, IEEE T SOFTWARE ENG, V26, P98, DOI 10.1109/32.841112
   Schmidt R, 2001, J MANAGE INFORM SYST, V17, P5, DOI 10.1080/07421222.2001.11045662
   Takagi Y, 2005, EMPIR SOFTW ENG, V10, P495, DOI 10.1007/s10664-005-3864-z
   Tiwana A, 2004, COMMUN ACM, V47, P73, DOI 10.1145/1029496.1029497
   Wallace L, 2004, DECISION SCI, V35, P289, DOI 10.1111/j.00117315.2004.02059.x
   Wallace L, 2004, COMMUN ACM, V47, P68, DOI 10.1145/975817.975819
   Wu CH, 2008, THIRD 2008 INTERNATIONAL CONFERENCE ON CONVERGENCE AND HYBRID INFORMATION TECHNOLOGY, VOL 2, PROCEEDINGS, P100, DOI 10.1109/ICCIT.2008.252
NR 22
TC 4
Z9 7
U1 1
U2 13
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2014
VL 19
IS 6
BP 1956
EP 1966
DI 10.1007/s10664-013-9270-z
PG 11
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA AR9QU
UT WOS:000343910700012
DA 2024-07-18
ER

PT J
AU Williams, BJ
   Carver, JC
AF Williams, Byron J.
   Carver, Jeffrey C.
TI Examination of the software architecture change characterization scheme
   using three empirical studies
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software architecture; Change characterization; Software changes;
   Software maintenance; Empirical studies
ID IMPACT ANALYSIS; CHANGE MANAGEMENT; EVOLUTION; MODEL; TOOL
AB Software maintenance is one of the most crucial aspects of software development. Software engineering researchers must develop practical solutions to handle the challenges presented in maintaining mature software systems. Research that addresses practical means of mitigating the risks involved when changing software, reducing the complexity of mature software systems, and eliminating the introduction of preventable bugs is paramount to today's software engineering discipline. The Software Architecture Change Characterization Scheme (SACCS) provides software maintainers with a systematic approach to analyzing and characterizing the impact of a change prior to its implementation. SACCS was designed to help novice developers understand change requests, facilitate discussion among developers, and provide a higher-quality change compared with an ad hoc approach. In addition, this paper describes three controlled experiments designed to assess the viability of using SACCS and its ability to fulfill its goals. The successive studies build upon each other to enable progressive insights into the viability of the scheme. The results indicate that SACCS: 1) provides insight into the difficulty of a change request by assisting novice developers to consider various aspects of the request's potential to impact the system, 2) helps to facilitate discussion among developers by providing a common tool for change assessment, and 3) is a useful tool for supporting change implementation. The three experiments provide insight into the usefulness of SACCS, motivate additional research questions, and serve as a baseline for moving forward with research and further development of the approach.
C1 [Williams, Byron J.] Mississippi State Univ, Dept Comp Sci & Engn, Starkville, MS 39759 USA.
   [Carver, Jeffrey C.] Univ Alabama, Dept Comp Sci, Tuscaloosa, AL 35487 USA.
C3 Mississippi State University; University of Alabama System; University
   of Alabama Tuscaloosa
RP Williams, BJ (corresponding author), Mississippi State Univ, Dept Comp Sci & Engn, Starkville, MS 39759 USA.
EM williams@cse.msstate.edu; carver@cs.ua.edu
RI Carver, Jeffrey/AFP-1987-2022; Carver, Jeffrey/AAM-8202-2020
OI Carver, Jeffrey/0000-0002-7824-9151; Carver, Jeffrey/0000-0002-7824-9151
FU NSF [CCF-0438923]
FX The authors thank the Empirical Software Engineering Research group at
   Mississippi State University and the Fraunhofer Center for Experimental
   Software Engineering in College Park, MD for feedback on the research
   and use of the TSAFE program. The authors also thank the study
   participants. This research was funded by NSF Grant CCF-0438923.
CR [Anonymous], 1990, IEEE Std 610.12-1990, V42, P112, DOI [10.1109/IEEESTD.1990.101064, DOI 10.1109/IEEESTD.1990.101064]
   Basili1 Victor R, 1994, Encyclopedia of software engineering, V1994, P528
   Batory D, 2005, P 9 INT C SOFTW PROD
   BELADY LA, 1976, IBM SYST J, V15, P225, DOI 10.1147/sj.153.0225
   Bosch J., 2000, Design and Use of Software Architectures: Adopting and Evolving a Product-Line Approach
   Briand LC, 2006, J SYST SOFTWARE, V79, P339, DOI 10.1016/j.jss.2005.05.001
   Briand LC, 2003, PROC IEEE INT CONF S, P256, DOI 10.1109/ICSM.2003.1235428
   Brooks Fred, 1975, The Mythical Man-Month
   Carver J, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P239
   Chaumun MA, 2002, SCI COMPUT PROGRAM, V45, P155, DOI 10.1016/S0167-6423(02)00058-8
   Chesley OC, 2005, PROC IEEE INT CONF S, P401
   Cook S, 2001, PROC IEEE INT CONF S, P592, DOI 10.1109/ICSM.2001.972776
   Dennis G, 2003, THESIS MIT
   Eick SG, 2001, IEEE T SOFTWARE ENG, V27, P1, DOI 10.1109/32.895984
   Ferzund J, 2009, PROC IEEE INT CONF S, P471, DOI 10.1109/ICSM.2009.5306274
   Fluri B, 2006, INT C PROGRAM COMPRE, P35, DOI 10.1109/ICPC.2006.16
   Garlan David, 2010, SEI Series in Software Engineering, Vsecond
   Giroux O., 2006, P 14 ACM SIGSOFT INT
   Godfrey MW, 2008, 2008 FRONTIERS OF SOFTWARE MAINTENANCE, P129, DOI 10.1109/FOSM.2008.4659256
   Godfrey MW, 2000, PROC IEEE INT CONF S, P131, DOI 10.1109/ICSM.2000.883030
   Graves TL, 1998, FIFTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 1998, PROCEEDINGS, P267, DOI 10.1109/METRIC.1998.731253
   Herraiz I, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P203
   Hochstein L, 2005, INFORM SOFTWARE TECH, V47, P643, DOI 10.1016/j.infsof.2004.11.005
   Kang Kyo C, 1990, Technical Report
   Kim S, 2005, P 2005 INT WORKSH MI
   KUNG D, 1994, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P202, DOI 10.1109/ICSM.1994.336774
   Lehman M. M., 1985, Program Evolution: Processes of Software Change
   Lehman M.M., 1996, P 10 INT PROCESS SUP, P101
   Lehman MM, 1998, PROC IEEE INT CONF S, P208, DOI 10.1109/ICSM.1998.738510
   Lehman MM, 1998, FIFTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 1998, PROCEEDINGS, P84, DOI 10.1109/METRIC.1998.731229
   LEHMAN MM, 1980, P IEEE, V68, P1060, DOI 10.1109/PROC.1980.11805
   Lindvall M, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P77, DOI 10.1109/METRIC.2002.1011327
   Mohagheghi P, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P7
   Nedstam J, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P27
   Nurmuliani N, 2004, 12TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P240
   Ostrand TJ, 2007, P 2007 INT S SOFTW T
   PARNAS DL, 1994, PROC INT CONF SOFTW, P279, DOI 10.1109/ICSE.1994.296790
   Pau Luo Li, 2004, Software Engineering Notes, V29, P263, DOI 10.1145/1041685.1029930
   Raja U, 2005, P 5 WORKSH OP SOURC
   Ren X, 2004, P 19 ANN ACM SIGPLAN
   Ren XX, 2004, ACM SIGPLAN NOTICES, V39, P432, DOI 10.1145/1035292.1029012
   Sommerville I., 2004, Software Engineering
   Van Rysselberghe F., 2004, "International Workshop on Mining Software Repositories (MSR 2004)" W17S Workshop - 26th International Conference on Software Engineering, P48, DOI 10.1049/ic:20040475
   Williams B, 2006, THESIS MISSISSIPPI S
   Williams B, 2009, THESIS MISSISSIPPI S
   Williams Byron J., 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P410
   Williams BJ, 2010, INFORM SOFTWARE TECH, V52, P31, DOI 10.1016/j.infsof.2009.07.002
NR 47
TC 7
Z9 9
U1 0
U2 12
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2014
VL 19
IS 3
BP 419
EP 464
DI 10.1007/s10664-012-9223-y
PG 46
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AF0ZA
UT WOS:000334442700001
DA 2024-07-18
ER

PT J
AU Fucci, D
   Turhan, B
AF Fucci, Davide
   Turhan, Burak
TI On the role of tests in test-driven development: a differentiated and
   partial replication
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Test-driven development; Software quality; Productivity; Software
   testing; Replication
ID STUDENTS
AB Background: Test-Driven Development (TDD) is claimed to have positive effects on external code quality and programmers' productivity. The main driver for these possible improvements is the tests enforced by the test-first nature of TDD as previously investigated in a controlled experiment (i.e. the original study). Aim: Our goal is to examine the nature of the relationship between tests and external code quality as well as programmers' productivity in order to verify/ refute the results of the original study. Method: We conducted a differentiated and partial replication of the original setting and the related analyses, with a focus on the role of tests. Specifically, while the original study compared test-first vs. test-last, our replication employed the test-first treatment only. The replication involved 30 students, working in pairs or as individuals, in the context of a graduate course, and resulted in 16 software artifacts developed. We performed linear regression to test the original study's hypotheses, and analyses of covariance to test the additional hypotheses imposed by the changes in the replication settings. Results: We found significant correlation (Spearman coefficient = 0.66, with p-value = 0.004) between the number of tests and productivity, and a positive regression coefficient (p-value = 0.011). We found no significant correlation (Spearman coefficient = 0.41 with p-value = 0.11) between the number of tests and external code quality (regression coefficient p-value = 0.0513). For both cases we observed no statistically significant interaction caused by the subject units being individuals or pairs. Further, our results are consistent with the original study although there were changes in the timing constraints for finishing the task and the enforced development processes. Conclusions: This replication study confirms the results of the original study concerning the relationship between the number of tests vs. external code quality and programmer productivity. Moreover, this replication allows us to identify additional context variables, for which the original results still hold; namely the subject unit, timing constraint and isolation of test-first process. Based on our findings, we recommend practitioners to implement as many tests as possible in order to achieve higher baselines for quality and productivity.
C1 [Fucci, Davide] Univ Oulu, Dept Informat Proc Sci, M Grp Res Grp, Oulu, Finland.
   [Turhan, Burak] Univ Oulu, Dept Informat Proc Sci, Oulu, Finland.
C3 University of Oulu; University of Oulu
RP Turhan, B (corresponding author), Univ Oulu, Dept Informat Proc Sci, Oulu, Finland.
EM davide.fucci@oulu.fi; burak.turhan@oulu.fi
RI Fucci, Davide/C-1463-2015; Turhan, Burak/G-7400-2011
OI Fucci, Davide/0000-0002-0679-4361; Turhan, Burak/0000-0003-1511-2163
FU Finnish Funding Agency for Technology and Innovation (TEKES) under Cloud
   Software Program; Academy of Finland [260871]; Academy of Finland (AKA)
   [260871] Funding Source: Academy of Finland (AKA)
FX This research is supported in part by the Finnish Funding Agency for
   Technology and Innovation (TEKES) under Cloud Software Program and the
   Academy of Finland with Grant Decision No. 260871. The authors would
   like to thank Hakan Erdogmus, Maurizio Morisio and Marco Torchiano for
   providing valuable insights along with the materials needed to conduct
   this replication. Authors also acknowledge the anonymous reviewers whose
   suggestions have significantly improved the earlier versions of the
   manuscript.
CR [Anonymous], 2010, P 1 INT WORKSH REPL
   [Anonymous], 2008, GUIDE ADV EMPIRICAL, DOI [10.1007/978-1-84800-044-5_14, DOI 10.1007/978-1-84800-044-5_14]
   Astels Dave, 2003, Test-Driven Development: A Practical Guide
   Beck K., 2003, ADDISON WESLEY SIGNA
   BHADAURIA V, 2009, THESIS U TEXAS ARLIN
   BRAMEL D, 1981, AM PSYCHOL, V36, P867, DOI 10.1037/0003-066X.36.8.867
   Cousineau D, 2010, INT J PSYCHOL RES, V3, P58
   DIESTE O, 2010, P 1 INT WORKSH REPL
   Erdogmus H, 2005, IEEE T SOFTWARE ENG, V31, P226, DOI 10.1109/TSE.2005.37
   Flohr T, 2006, LECT NOTES COMPUT SC, V4034, P305
   George B, 2004, INFORM SOFTWARE TECH, V46, P337, DOI 10.1016/j.infsof.2003.09.011
   GEORGE B, 2003, P 2003 ACM S APPL CO, P1135, DOI DOI 10.1145/952532.952753
   HUANG L, 2007, THESIS U SHEFFIELD
   Janzen DS, 2007, PROC INT CONF SOFTW, P719, DOI 10.1109/ICSE.2007.8
   Johnson PM, 2007, AGILE 2007, PROCEEDINGS, P15, DOI 10.1109/AGILE.2007.16
   Juristo N, 2009, INT SYMP EMP SOFTWAR, P357
   KEEFE K, 2006, P 8 AUSTR C COMP ED, V52, P91
   Madeyski L, 2010, TEST-DRIVEN DEVELOPMENT, P1, DOI 10.1007/978-3-642-04288-1
   Marchenko A, 2009, LECT NOTES BUS INF P, V31, P13
   Melnik G, 2005, PROC INT CONF SOFTW, P481
   Müller MM, 2007, EMPIR SOFTW ENG, V12, P593, DOI 10.1007/s10664-007-9048-2
   Pancur M, 2011, INFORM SOFTWARE TECH, V53, P557, DOI 10.1016/j.infsof.2011.02.002
   Pedroso B, 2010, LECT NOTES BUS INF P, V48, P393
   PHILIPP M, 2009, COMP TEST DRIVEN DEV
   Rafique Y, 2013, IEEE T SOFTWARE ENG, V39, P835, DOI 10.1109/TSE.2012.28
   RAUBENHEIMER D, 1992, ENTOMOL EXP APPL, V62, P221, DOI 10.1007/BF00353441
   Sanchez JC, 2007, AGILE 2007, PROCEEDINGS, P5, DOI 10.1109/AGILE.2007.43
   Shull F, 2010, IEEE SOFTWARE, V27, P16, DOI 10.1109/MS.2010.152
   Turhan B., 2010, EFFECTIVE IS TEST DR
   Wohlin C., 2000, EXPT SOFTWARE ENG IN, V6
   Xu SC, 2009, STUD COMPUT INTELL, V253, P229, DOI 10.1007/978-3-642-05441-9_20
   YENDURI S, 2006, P 2006 INT C SOFTW E, V1
NR 32
TC 13
Z9 16
U1 0
U2 10
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2014
VL 19
IS 2
BP 277
EP 302
DI 10.1007/s10664-013-9259-7
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AD1SF
UT WOS:000333013100002
DA 2024-07-18
ER

PT J
AU Canfora, G
   Cerulo, L
   Cimitile, M
   Di Penta, M
AF Canfora, Gerardo
   Cerulo, Luigi
   Cimitile, Marta
   Di Penta, Massimiliano
TI How changes affect software entropy: an empirical study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software entropy; Software complexity; Mining software repositories
AB Context Software systems continuously change for various reasons, such as adding new features, fixing bugs, or refactoring. Changes may either increase the source code complexity and disorganization, or help to reducing it. Aim This paper empirically investigates the relationship of source code complexity and disorganization-measured using source code change entropy-with four factors, namely the presence of refactoring activities, the number of developers working on a source code file, the participation of classes in design patterns, and the different kinds of changes occurring on the system, classified in terms of their topics extracted from commit notes. Method We carried out an exploratory study on an interval of the life-time span of four open source systems, namely ArgoUML, Eclipse-JDT, Mozilla, and Samba, with the aim of analyzing the relationship between the source code change entropy and four factors: refactoring activities, number of contributors for a file, participation of classes in design patterns, and change topics. Results The study shows that (i) the change entropy decreases after refactoring, (ii) files changed by a higher number of developers tend to exhibit a higher change entropy than others, (iii) classes participating in certain design patterns exhibit a higher change entropy than others, and (iv) changes related to different topics exhibit different change entropy, for example bug fixings exhibit a limited change entropy while changes introducing new features exhibit a high change entropy. Conclusions Results provided in this paper indicate that the nature of changes (in particular changes related to refactorings), the software design, and the number of active developers are factors related to change entropy. Our findings contribute to understand the software aging phenomenon and are preliminary to identifying better ways to contrast it.
C1 [Canfora, Gerardo; Di Penta, Massimiliano] Univ Sannio, Dept Engn, RCOST, Benevento, Italy.
   [Cerulo, Luigi] Univ Sannio, Dept Biol & Environm Studies, Benevento, Italy.
   [Cimitile, Marta] Unitelma Sapienza, Dept Jurisprudence, Naples, Italy.
C3 University of Sannio; University of Sannio; Universita degli Studi di
   Roma Unitelma Sapienza
RP Di Penta, M (corresponding author), Univ Sannio, Dept Engn, RCOST, Benevento, Italy.
EM canfora@unisannio.it; lcerulo@unisannio.it; marta.cimitile@unitelma.it;
   dipenta@unisannio.it
RI Di Penta, Massimiliano/AAF-9656-2021; CIMITILE, Marta/F-2083-2018
OI CIMITILE, Marta/0000-0003-2403-8313; Canfora,
   Gerardo/0000-0003-0049-1279; Di Penta, Massimiliano/0000-0002-0340-9747
CR [Anonymous], 2000, HDB PARAMETRIC NONPA
   [Anonymous], 2001, 7 IEEE INT SOFTWARE, DOI [10.1109/metric.2001.915530, DOI 10.1109/METRIC.2001.915530]
   Aversano L, 2009, IET SOFTW, V3, P395, DOI 10.1049/iet-sen.2008.0105
   Aversano Lerina., 2007, PROC THE 6 EUROPEAN, P385, DOI [DOI 10.1145/1287624.1287680, 10.1145/1287624.1287680.]
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Canfora Gerardo, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P134, DOI 10.1109/ICPC.2010.32
   Capiluppi A, 2007, PROC INT CONF SOFTW, P511
   Chapin N, 1995, P 28 HAW INT C SYST, P522
   CHIKOFSKY EJ, 1990, IEEE SOFTWARE, V7, P13, DOI 10.1109/52.43044
   Di Penta M, 2009, WORK CONF REVERSE EN, P11, DOI 10.1109/WCRE.2009.41
   Di Penta Massimiliano, 2010, P 32 ACMIEEE INT C S, P145, DOI [10.1145/1806799.1806824, DOI 10.1145/1806799.1806824]
   Eick SG, 2001, IEEE T SOFTWARE ENG, V27, P1, DOI 10.1109/32.895984
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gall H, 2003, SIXTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P13
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Grissom R. J., 2005, EFFECT SIZES RES BRO
   HARRISON W, 1992, IEEE T SOFTWARE ENG, V18, P1025, DOI 10.1109/32.177371
   Hassan AE, 2003, SIXTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P84, DOI 10.1109/IWPSE.2003.1231214
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   HOLM S, 1979, SCAND J STAT, V6, P65
   Kuhn A, 2007, INFORM SOFTWARE TECH, V49, P230, DOI 10.1016/j.infsof.2006.10.017
   Lehman M.M., 1985, SOFTWARE EVOLUTION P
   LEHMAN MM, 1980, P IEEE, V68, P1060, DOI 10.1109/PROC.1980.11805
   Linstead E, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P99, DOI 10.1109/MSR.2009.5069486
   Nagappan Nachiappan, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P364
   Parnas D. L., 1994, ICSE-16. 16th International Conference on Software Engineering (Cat. No.94CH3409-0), P279, DOI 10.1109/ICSE.1994.296790
   Ratzinger J., 2008, Proceedings of the 2008 international working conference on Mining software repositories, P35, DOI [10.1145/1370750.1370759, DOI 10.1145/1370750.1370759]
   SHANNON CE, 1948, BELL SYST TECH J, V27, P379, DOI 10.1002/j.1538-7305.1948.tb01338.x
   Thomas SW, 2010, IEEE INT WORK C SO, P55, DOI 10.1109/SCAM.2010.13
   Tsantalis N, 2006, IEEE T SOFTWARE ENG, V32, P896, DOI 10.1109/TSE.2006.112
   Van Rijsbergen C. J., 1980, New Models in Probabilistic Information Retrieval, V5587
   Zimmermann T, 2004, PROC INT CONF SOFTW, P563, DOI 10.1109/ICSE.2004.1317478
NR 32
TC 38
Z9 46
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2014
VL 19
IS 1
BP 1
EP 38
DI 10.1007/s10664-012-9214-z
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AA3HQ
UT WOS:000330983900001
DA 2024-07-18
ER

PT J
AU Schulz, T
   Radlinski, L
   Gorges, T
   Rosenstiel, W
AF Schulz, Thomas
   Radlinski, Lukasz
   Gorges, Thomas
   Rosenstiel, Wolfgang
TI Predicting the Flow of Defect Correction Effort using a Bayesian Network
   Model
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Bayesian Network; Correction effort; Decision support; Defect flow;
   Process modeling; Software process
ID PROJECT
AB The number of defects alone does not provide software companies with enough information on the effort required to fix them. Defects have different impacts on the overall defect correction effort - defects introduced in one phase may be found and corrected in the same or later phase. The later they are found, the more effort is required to correct them. The main aim of this paper is to build and validate a model (Bayesian Network) for predicting the defect correction effort at various phases of the software development process. The procedure of building the model covers the following steps: problem analysis, data analysis, model definition and enhancement, simulation runs, and model validation. Developed Defect Cost Flow Model (DCFM), which is an implementation of the V-model of a software project lifecycle, correctly incorporates known qualitative and quantitative relationships. Application of DCFM in a real industrial process revealed its high potential in finding the appropriate amount of review effort for specific development phases to minimize the overall costs. The model may be used in the industry for decision support. It can be extended and calibrated to meet the needs of specific development environment.
C1 [Schulz, Thomas] Robert Bosch GmbH, Car Multimedia CM IS EBM1, D-71226 Leonberg, Germany.
   [Radlinski, Lukasz] Univ Szczecin, Dept Informat Syst Engn, PL-71101 Szczecin, Poland.
   [Gorges, Thomas] Robert Bosch GmbH, CC ESR2, D-71226 Leonberg, Germany.
   [Rosenstiel, Wolfgang] Univ Tubingen, D-72076 Tubingen, Germany.
C3 Bosch; University of Szczecin; Bosch; Eberhard Karls University of
   Tubingen
RP Schulz, T (corresponding author), Robert Bosch GmbH, Car Multimedia CM IS EBM1, Postfach 16 61, D-71226 Leonberg, Germany.
EM t.schulz@de.bosch.com; lukrad@uoo.univ.szczecin.pl;
   Thomas.Gorges@de.bosch.com; rosenstiel@informatik.uni-tuebingen.de
RI Radlinski, Lukasz/A-6146-2016
OI Radlinski, Lukasz/0000-0003-1007-6597
CR Abouelela M., 2010, INT J SOFTWARE ENG A, V1, P1
   AgenaRisk BN, 2009, AG
   [Anonymous], 2005, PROC 16 INT WORKSHOP
   [Anonymous], 1998, RATIONAL UNIFIED PRO
   [Anonymous], 1985, Technical Report, DOI DOI citeulike-article-id:3847802
   Antoniol G, 2011, SOFTW PRACT IN PRESS
   BASILI VR, 1988, IEEE T SOFTWARE ENG, V14, P758, DOI 10.1109/32.6156
   Bibi S., 2004, P INT SOFTW METR S C
   Boetticher G, 2007, PROMISE REPOSITORY E
   CHILLAREGE R, 1992, IEEE T SOFTWARE ENG, V18, P943, DOI 10.1109/32.177364
   CMMI Product Team, 2010, Technical Report CMU/SEI-2010-TR-033
   Dabney J. B., 2006, P 2 INT WORKSH PRED
   Das B, 2004, GENERATING CONDITION
   de Melo ACV, 2008, EXPERT SYST APPL, V34, P908, DOI 10.1016/j.eswa.2006.10.040
   del Salgado Martinez J., 2008, ARTIF INTELL, P106
   Durillo JJ, 2009, 1ST INTERNATIONAL SYMPOSIUM ON SEARCH BASED SOFTWARE ENGINEERING, PROCEEDINGS, P49, DOI 10.1109/SSBSE.2009.21
   Fenton N, 2004, PROC INT CONF SOFTW, P397, DOI 10.1109/ICSE.2004.1317462
   Fenton N., 2008, Amenagement ecosystemique en foret boreale, P1
   Fenton N, 2008, EMPIR SOFTW ENG, V13, P499, DOI 10.1007/s10664-008-9072-x
   Fenton N, 2007, INFORM SOFTWARE TECH, V49, P32, DOI 10.1016/j.infsof.2006.09.001
   Fenton NE, 2007, IEEE T KNOWL DATA EN, V19, P1420, DOI 10.1109/TKDE.2007.1068
   Finkelstein A, 2009, REQUIR ENG, V14, P231, DOI 10.1007/s00766-009-0075-y
   Gueorguiev S., 2009, P 11 ANN C GENETIC E, P1673, DOI DOI 10.1145/1569901.1570125
   Hearty P, 2009, IEEE T SOFTWARE ENG, V35, P124, DOI 10.1109/TSE.2008.76
   Helsper E. M., 2005, P 3 INT C KNOWL CAPT, p121 
   Herbsleb James, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), DOI 10.1109/MSR.2010.5463360
   Jensen F. V., 2007, Bayesian networks and decision graphs, V498, P543, DOI DOI 10.1007/978-0-387-68282-2
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Kjærulff UB, 2008, INFORM SCI STAT, P3
   Klaes M, 2007, 09607D FRAUNH IESE
   Lee Insup., 2007, Handbook of Real-Time and Embedded Systems, V1st
   Mair C, 2000, J SYST SOFTWARE, V53, P23, DOI 10.1016/S0164-1212(00)00005-4
   Marquez D, 2010, RELIAB ENG SYST SAFE, V95, P412, DOI 10.1016/j.ress.2009.11.012
   Mendes E, 2008, IEEE T SOFTWARE ENG, V34, P723, DOI 10.1109/TSE.2008.64
   Nadkarni S, 2004, DECIS SUPPORT SYST, V38, P259, DOI 10.1016/s0167-9236(03)00095-2
   Neil M, 2007, STAT COMPUT, V17, P219, DOI 10.1007/s11222-007-9018-y
   O'Hagan A., 2006, UNCERTAIN JUDGEMENTS, DOI DOI 10.1002/0470033312
   Pearl J., 1988, PROBABILISTIC REASON
   Pendharkar PC, 2005, IEEE T SOFTWARE ENG, V31, P615, DOI 10.1109/TSE.2005.75
   Pfautz J, 2007, P 5 BAY MOD APPL WOR
   Radlinski L., 2007, 11 IASTED INT C SOFT, P13
   Radlinski L., 2008, THESIS QUEEN MARY U
   Radlinski L., 2008, POL J ENVIRON STUD, V17, P359
   Radlinski L, 2010, 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING & KNOWLEDGE ENGINEERING (SEKE 2010), P113
   Radlinski Lukasz, 2010, International Journal of Software Engineering and Computing, V2, P95
   Schulz T, 2011, KNOWLEDGE ENG SOFTWA, P289, DOI DOI 10.4018/978-1-60960-509-4.CH016
   Schulz T., 2010, P 6 INT C PRED MOD S
   SKAANNING C, 2000, P 16 C UNC ART INT S
   Song QB, 2011, IEEE T SOFTWARE ENG, V37, P356, DOI 10.1109/TSE.2010.90
   Stamelos I, 2003, INFORM SOFTWARE TECH, V45, P51, DOI 10.1016/S0950-5849(02)00163-5
   Stewart B, 2002, J SOFTW MAINT EVOL-R, V14, P161, DOI 10.1002/smr.250
   Stolz W, 2004, P 2 BOSCH C SOFTW EN, P25
   Torkar R., 2010, P 21 IEEE INT S SOFT
   van Koten C, 2006, INFORM SOFTWARE TECH, V48, P59, DOI 10.1016/j.infsof.2005.03.002
   Wagner S., 2009, P 5 INT C PRED MOD S
   Wang H, 2006, INT CONF QUAL SOFTW, P209
   Weiss S.M., 1984, PRACTICAL GUIDE DESI
   Wiegmann DA, 2005, AHFD0513NASA054 U IL
   Winkler RL., 2003, INTRO BAYESIAN INFER
   Wooff DA, 2002, IEEE T SOFTWARE ENG, V28, P510, DOI 10.1109/TSE.2002.1000453
   Xiaoxu Wang, 2010, 2010 IEEE International Conference on Advanced Management Science (ICAMS), P26, DOI 10.1109/ICAMS.2010.5552847
   Zhang D, 2003, SOFTWARE QUAL J, V11, P87, DOI 10.1023/A:1023760326768
   Zhou Y, 2008, WORK CONF REVERSE EN, P27, DOI 10.1109/WCRE.2008.39
   Zimmermann K, 2004, TECHNICAL REPORT
NR 64
TC 4
Z9 4
U1 0
U2 15
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2013
VL 18
IS 3
BP 435
EP 477
DI 10.1007/s10664-011-9175-7
PG 43
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 155US
UT WOS:000319774300002
DA 2024-07-18
ER

PT J
AU Binkley, D
   Davis, M
   Lawrie, D
   Maletic, JI
   Morrell, C
   Sharif, B
AF Binkley, Dave
   Davis, Marcia
   Lawrie, Dawn
   Maletic, Jonathan I.
   Morrell, Christopher
   Sharif, Bonita
TI The impact of identifier style on effort and comprehension
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Program comprehension; Text recognition; Coding standards; Identifier
   names; Memory; Identifier styles; Eye-tracking study; Code readability
ID NAMES
AB A family of studies investigating the impact of program identifier style on human comprehension is presented. Two popular identifier styles are examined, namely camel case and underscore. The underlying hypothesis is that identifier style affects the speed and accuracy of comprehending source code. To investigate this hypothesis, five studies were designed and conducted. The first study, which investigates how well humans read identifiers in the two different styles, focuses on low-level readability issues. The remaining four studies build on the first to focus on the semantic implications of identifier style. The studies involve 150 participants with varied demographics from two different universities. A range of experimental methods is used in the studies including timed testing, read aloud, and eye tracking. These methods produce a broad set of measurements and appropriate statistical methods, such as regression models and Generalized Linear Mixed Models (GLMMs), are applied to analyze the results. While unexpected, the results demonstrate that the tasks of reading and comprehending source code is fundamentally different from those of reading and comprehending natural language. Furthermore, as the task becomes similar to reading prose, the results become similar to work on reading natural language text. For more "source focused" tasks, experienced software developers appear to be less affected by identifier style; however, beginners benefit from the use of camel casing with respect to accuracy and effort.
C1 [Binkley, Dave; Lawrie, Dawn] Loyola Univ Maryland, Dept Comp Sci, Baltimore, MD 21210 USA.
   [Morrell, Christopher] Loyola Univ Maryland, Dept Math & Stat, Baltimore, MD 21210 USA.
   [Davis, Marcia] Johns Hopkins Univ, Ctr Social Org Sch, Baltimore, MD 21218 USA.
   [Maletic, Jonathan I.] Kent State Univ, Dept Comp Sci, Kent, OH 44242 USA.
   [Sharif, Bonita] Youngstown State Univ, Dept Comp Sci & Informat Syst, Youngstown, OH 44555 USA.
C3 Loyola University Maryland; Loyola University Maryland; Johns Hopkins
   University; University System of Ohio; Kent State University; Kent State
   University Kent; Kent State University Salem; University System of Ohio;
   Youngstown State University
RP Sharif, B (corresponding author), Youngstown State Univ, Dept Comp Sci & Informat Syst, Youngstown, OH 44555 USA.
EM binkley@cs.loyola.edu; marcy@jhu.edu; lawrie@cs.loyola.edu;
   jmaletic@kent.edu; chm@loyola.edu; bsharif@csis.ysu.edu
RI Morrell, Christopher/AAN-3267-2021; Sharif, Bonita/GXZ-5409-2022
OI Sharif, Bonita/0000-0002-5178-7160; Lawrie, Dawn/0000-0001-7347-7086
FU Direct For Computer & Info Scie & Enginr; Division of Computing and
   Communication Foundations [0916081] Funding Source: National Science
   Foundation
CR [Anonymous], P 28 INT C SOFTW ENG
   [Anonymous], 2002, P 2002 S EYE TRACK R
   [Anonymous], 2007, Eye tracking methodology: Theory and practice, DOI DOI 10.1007/978-3-319-57883-5
   ANQUETIL N, 1998, P 20 INT C SOFTW ENG
   Bednarik R, 2006, P S EYE TRACK RES AP
   Bednarik R, 2008, P S EYE TRACK RES AP
   Beymer D, 2005, P CHI 05 HUM FACT CO
   Binkley D, 2009, 17 IEEE INT C PROGR
   Binkley D, 2011, LOY110720 LOYOL U MA
   Binkley D, 2009, SCI COMPUT PROGRAM, V74, P430, DOI 10.1016/j.scico.2009.02.006
   BOUMA H, 1970, NATURE, V226, P177, DOI 10.1038/226177a0
   BROOKS R, 1983, INT J MAN MACH STUD, V18, P543, DOI 10.1016/S0020-7373(83)80031-5
   Butler S, 2010, P 14 EUR C SOFTW MAI
   Caprile B, 2000, IEEE INT C SOFTW MAI
   CROSBY ME, 1990, COMPUTER, V23, P24, DOI 10.1109/2.48797
   Cutrell E, 2007, P CHI SAN JOS CAL
   De Kock E., 2009, P ANN RES C S AFR I
   DEISSENBOCK F, 2005, P 13 INT WORKSH PROG
   Epelboim J, 1997, VISION RES, V37, P465
   Grant S, 2010, 10 IEEE WORK C SOURC
   Gueheneuc Y-G, 2006, P 16 IBM CTR ADV STU
   HOST E, 2008, INT WORK C SOURC COD
   Jeanmart S., 2009, P 3 INT S EMP SOFTW
   JUST MA, 1980, PSYCHOL REV, V87, P329, DOI 10.1037/0033-295X.87.4.329
   LAWRIE D, 2006, 14 INT C PROGR COMPR
   Lawrie D, 2007, INNOV SYST SOFTW ENG, V3, P303, DOI 10.1007/s11334-007-0031-2
   LIBLIT B, 2006, 8 ANN PSYCH PROGR WO
   MacGinitie W.H., 2000, Gates- MacGinitie reading tests, V4th
   Matsuda Y, 2009, ANAL EYE MOVEMENTS B
   Molenberghs G, 2006, MODELS DISCRETE LONG
   Morrell CH, 1997, AM STAT, V51, P338, DOI 10.2307/2685902
   New B, 2006, PSYCHON B REV, V13, P45, DOI 10.3758/BF03193811
   Ohba M., 2005, P P 2 INT WORKSH MIN
   Porras GC, 2010, EMPIR SOFTW ENG, V15, P493, DOI 10.1007/s10664-009-9125-9
   Rayner K, 1998, VISION RES, V38, P1129, DOI 10.1016/S0042-6989(97)00274-5
   Sami P, 2008, P S EYE TRACK RES AP
   Sharif B, 2010, 18 IEEE INT C PROGR
   Sharif B, 2010, PROC IEEE INT CONF S
   Simonyi C., 1999, Hungarian notation
   Sjoberg D, 1993, IEEE T SOFTWARE ENG, V19, P733
   SOLOWAY E, 1984, IEEE T SOFTWARE ENG, V10, P595, DOI 10.1109/TSE.1984.5010283
   Takang AA, 1996, J PROGRAM LANG, V4, P143
   Uwano H., 2006, P S EYE TRACKING RES
   Uwano H, 2008, P 3 INT C SOFTW ENG
   Verbeke G., 2001, Linear Mixed Models for Longitudinal Data
   WIEDENBECK S, 1991, INT J MAN MACH STUD, V35, P517, DOI 10.1016/S0020-7373(05)80090-2
   Yusuf S, 2007, P 15 IEEE INT C PROG
NR 47
TC 87
Z9 99
U1 0
U2 24
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2013
VL 18
IS 2
BP 219
EP 276
DI 10.1007/s10664-012-9201-4
PG 58
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 077ZD
UT WOS:000314067000003
DA 2024-07-18
ER

PT J
AU Capiluppi, A
   Izquierdo-Cortázar, D
AF Capiluppi, Andrea
   Izquierdo-Cortazar, Daniel
TI Effort estimation of FLOSS projects: a study of the Linux kernel
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Mining software repositories; Open source software; Effort estimation;
   Effort models; Complexity
ID OPEN SOURCE SOFTWARE; EFFORT PREDICTION; MAINTENANCE; COST; EVOLUTION
AB Empirical research on Free/Libre/Open Source Software (FLOSS) has shown that developers tend to cluster around two main roles: "core" contributors differ from "peripheral" developers in terms of a larger number of responsibilities and a higher productivity pattern. A further, cross-cutting characterization of developers could be achieved by associating developers with "time slots", and different patterns of activity and effort could be associated to such slots. Such analysis, if replicated, could be used not only to compare different FLOSS communities, and to evaluate their stability and maturity, but also to determine within projects, how the effort is distributed in a given period, and to estimate future needs with respect to key points in the software life-cycle (e.g., major releases). This study analyses the activity patterns within the Linux kernel project, at first focusing on the overall distribution of effort and activity within weeks and days; then, dividing each day into three 8-hour time slots, and focusing on effort and activity around major releases. Such analyses have the objective of evaluating effort, productivity and types of activity globally and around major releases. They enable a comparison of these releases and patterns of effort and activities with traditional software products and processes, and in turn, the identification of company-driven projects (i.e., working mainly during office hours) among FLOSS endeavors. The results of this research show that, overall, the effort within the Linux kernel community is constant (albeit at different levels) throughout the week, signalling the need of updated estimation models, different from those used in traditional 9am-5pm, Monday to Friday commercial companies. It also becomes evident that the activity before a release is vastly different from after a release, and that the changes show an increase in code complexity in specific time slots (notably in the late night hours), which will later require additional maintenance efforts.
C1 [Capiluppi, Andrea] Univ E London, Sch Architecture Comp & Engn ACE, London E16 2RD, England.
   [Izquierdo-Cortazar, Daniel] Univ Rey Juan Carlos, Libre Software Engn Lab GSyC, Madrid 28943, Spain.
C3 University of East London; Universidad Rey Juan Carlos
RP Capiluppi, A (corresponding author), Univ E London, Sch Architecture Comp & Engn ACE, Docklands Campus,4-6 Univ Way, London E16 2RD, England.
EM a.capiluppi@uel.ac.uk; dizquierdo@gsyc.es
RI Cortazar, Daniel Izquierdo/ABE-2382-2020; Capiluppi,
   Andrea/AGO-2961-2022
OI Cortazar, Daniel Izquierdo/0000-0002-0633-4146; Capiluppi,
   Andrea/0000-0001-9469-6050
FU European Commission, under the ALERT project [ICT-258098]
FX The work of D. Izquierdo-Cortazar has been partially funded by the
   European Commission, under the ALERT project (ICT-258098).
CR Abdel-Hamid T., 1991, SOFTWARE PROJECT DYN
   ABDELHAMID TK, 1993, COMPUTER, V26, P20, DOI 10.1109/2.204681
   Aberdour M, 2007, IEEE SOFTWARE, V24, P58, DOI 10.1109/MS.2007.2
   Abran A., 1993, Proceedings. Conference on Software Maintenance 1993. CSM-93 (Cat. No.93CH3360-5), P80, DOI 10.1109/ICSM.1993.366953
   Adams PJ, 2009, PROC IEEE INT CONF S, P319, DOI 10.1109/ICSM.2009.5306308
   ALBRECHT AJ, 1983, IEEE T SOFTWARE ENG, V9, P639, DOI 10.1109/TSE.1983.235271
   Amor JuanJose., 2006, Proceedings of the 2006 International Workshop on Economics Driven Software Engineering Research, EDSER'06, P3
   [Anonymous], 2000, Software Cost Estimation with COCOMO II
   Antoniol G, 2002, INFORM SOFTWARE TECH, V44, P755, DOI 10.1016/S0950-5849(02)00123-4
   Bandi RK, 2003, IEEE T SOFTWARE ENG, V29, P77, DOI 10.1109/TSE.2003.1166590
   Basili V. R., 1994, Encyclopedia of Software Engineering, V1, P528
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Bird C, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P1, DOI 10.1109/MSR.2009.5069475
   Boehm B.W., 2000, International Conference on Software Engineering. Proceedings of the Conference on The Future of Software Engineering, P319
   Boehm BW., 1981, Software Engineering Economics
   Briand LC, 1992, ICSM 92
   Brooks F. P., 1975, ACM SIGPLAN Notices, DOI DOI 10.1145/390016.808439
   Capiluppi A, 2007, PROC INT CONF SOFTW, P511
   Crowston K., 2003, P ECIS NAPL IT
   Curtis B, 1992, ICSM 92
   DeMarco T, 1986, CONTROLLING SOFTWARE
   FARR L, 1964, FACTORS AFFECT COST, P59
   German DM, 2006, EMPIR SOFTW ENG, V11, P369, DOI 10.1007/s10664-006-9004-6
   Glass R. L., 2002, FACTS FALLACIES SOFT
   Godfrey Michael, 2001, P INT WORKSH PRINC S, P103, DOI [10.1145/602461.602482, DOI 10.1145/602461.602482]
   Godfrey MW, 2000, PROC IEEE INT CONF S, P131, DOI 10.1109/ICSM.2000.883030
   GranjaAlvarez JC, 1997, J SOFTW MAINT-RES PR, V9, P161, DOI 10.1002/(SICI)1096-908X(199705)9:3<161::AID-SMR148>3.0.CO;2-8
   Herraiz I, 2009, EUR CON SFTWR MTNCE, P281, DOI 10.1109/CSMR.2009.43
   Izurieta C, 2006, P 2006 ACM IEEE INT, P211
   JORGENSEN M, 1995, IEEE T SOFTWARE ENG, V21, P674, DOI 10.1109/32.403791
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   KEMERER CF, 1987, COMMUN ACM, V30, P416, DOI 10.1145/22899.22906
   Koch S, 2008, INF ECON POLICY, V20, P345, DOI 10.1016/j.infoecopol.2008.06.004
   LI W, 1993, J SYST SOFTWARE, V23, P111, DOI 10.1016/0164-1212(93)90077-B
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   MCCABE TJ, 1989, COMMUN ACM, V32, P1415, DOI 10.1145/76380.76382
   MICHLMAYR M, 2007, THESIS U CAMBRIDGE
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Molokken K, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P223, DOI 10.1109/ISESE.2003.1237981
   Pfleeger S.L., 2001, SOFTWARE ENG THEORY, V2nd
   Putnam LawrenceH., 1991, Measures for excellence: reliable software on time, within budget
   Robles Gregorio, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P171, DOI 10.1109/MSR.2010.5463348
   Robles Gregorio, 2009, International Journal of Open Source Software & Processes, V1, P24, DOI 10.4018/jossp.2009010102
   Shull FJ, 2008, EMPIR SOFTW ENG, V13, P211, DOI 10.1007/s10664-008-9060-1
   Sneed HM, 1995, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, 1995 PROCEEDINGS, P168, DOI 10.1109/ICSM.1995.526539
   Sneed HM, 2004, PROC IEEE INT CONF S, P264, DOI 10.1109/ICSM.2004.1357810
   Sneed HM, 2003, PROC IEEE INT CONF S, P190, DOI 10.1109/ICSM.2003.1235421
   Sneed HM, 1997, FIRST EUROMICRO CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P119, DOI 10.1109/CSMR.1997.583020
   Sommerville I., 2004, Software Engineering
   WOLVERTO.RW, 1974, IEEE T COMPUT, VC 23, P615, DOI 10.1109/T-C.1974.224002
NR 50
TC 11
Z9 13
U1 0
U2 15
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2013
VL 18
IS 1
BP 60
EP 88
DI 10.1007/s10664-011-9191-7
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 064IW
UT WOS:000313069300003
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Calefato, F
   Damian, D
   Lanubile, F
AF Calefato, Fabio
   Damian, Daniela
   Lanubile, Filippo
TI Computer-mediated communication to support distributed requirements
   elicitations and negotiations tasks
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Global software development; Requirements elicitations; Requirements
   negotiations; Computer-mediated communication; Synchronous media
   selection; Task-technology fit; Empirical study
ID GLOBAL SOFTWARE-DEVELOPMENT; DISTANCE; DESIGN; RICHNESS; SYSTEMS
AB Requirements engineering is one of the most communication-intensive activities in software development, greatly affected by project stakeholder geographical distribution. Despite advances in collaboration technologies, global software teams continue to experience significant challenges in the elicitation and negotiation of requirements. Deciding which communication technologies to deploy to achieve effective communication in distributed requirements engineering activities is not a trivial task. Is face-to-face or text-based communication more appropriate for requirements elicitations and negotiations? In teams that do not have access to face-to-face communication, is text-based communication more useful in requirements elicitations than in requirements negotiations? Here, we report an empirical study that analyzes the effectiveness of synchronous computer-mediated communication in requirements elicitations and negotiations. Our investigation is guided by a theoretical framework that we developed from theories of computer-mediated communication, common ground, and media selection for group tasks; a framework that considers the effectiveness of a communication medium in relation to the information richness needs of requirements elicitation and negotiation tasks. Our findings bring forward empirical evidence about the perceived as well as objective fit between synchronous communication technology and requirements tasks. First, face-to-face is not always the most preferred medium for requirements tasks, and we reveal a number of conditions in which, in contrast to common belief, text-based communication is preferred for requirements communication. Second, we find that in evaluating outcomes of requirements elicitations and negotiations objectively, group performance is not affected by the communication medium. Third, when groups interact only via text-based communication, common ground in requirements negotiations takes longer to achieve than in requirements elicitations, indicating that distributed requirements elicitation is the task where computer-mediated communication tools have most opportunity for successful application.
C1 [Calefato, Fabio; Lanubile, Filippo] Univ Bari, Dipartimento Informat, Bari, Italy.
   [Damian, Daniela] Univ Victoria, Dept Comp Sci, Victoria, BC, Canada.
   [Lanubile, Filippo] Univ Bari, Collaborat Dev Res Grp, Bari, Italy.
C3 Universita degli Studi di Bari Aldo Moro; University of Victoria;
   Universita degli Studi di Bari Aldo Moro
RP Lanubile, F (corresponding author), Univ Bari, Dipartimento Informat, Bari, Italy.
EM calefato@di.uniba.it; danielad@cs.uvic.ca; lanubile@di.uniba.it
RI Lanubile, Filippo/AAF-9132-2020; Calefato, Fabio/H-4177-2014
OI Lanubile, Filippo/0000-0003-3373-7589; Calefato,
   Fabio/0000-0003-2654-1588
CR ALRAWAS A, 1996, P 1 WESTM C PROF AW, P47
   ANDREWS DC, 1991, J SYST MANAGE, V42, P23
   [Anonymous], 1999, Doing Conversation Analysis: A Practical Guide
   [Anonymous], 1997, Requirements engineering: a good practice guide
   Biffl S, 2003, IEEE T SOFTWARE ENG, V29, P385, DOI 10.1109/TSE.2003.1199069
   Birnholtz J., 2005, P CHI 2005, P21, DOI [DOI 10.1145/1054972.1054976, 10.1145/1054972.1054976]
   Calefato F, 2009, SOFTWARE PRACT EXPER, V39, P1293, DOI 10.1002/spe.937
   Campbell CL, 2003, ITRE2003: INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: RESEARCH AND EDUCATION, P133, DOI 10.1109/ITRE.2003.1270588
   Carmel E, 2001, IEEE SOFTWARE, V18, P22, DOI 10.1109/52.914734
   Cheng BHC, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P285, DOI 10.1109/FOSE.2007.17
   CLARK HH, 1991, PERSPECTIVES ON SOCIALLY SHARED COGNITION, P127, DOI 10.1037/10096-006
   Conover W. J., 1998, PRACTICAL NONPARAMET, V3rd
   Coughlan J., 2002, Requirements Engineering, V7, P47, DOI 10.1007/s007660200004
   Cronbach LJ, 1951, PSYCHOMETRIKA, V16, P297
   Cummins RA., 2000, P 2 INT C QUALITY LI, P74
   CURTIS B, 1988, COMMUN ACM, V31, P1268, DOI 10.1145/50087.50089
   DAFT RL, 1986, MANAGE SCI, V32, P554, DOI 10.1287/mnsc.32.5.554
   Damian D. E., 2003, Requirements Engineering, V8, P149, DOI 10.1007/s00766-003-0173-1
   Damian D. E., 2003, Requirements Engineering, V8, P23, DOI 10.1007/s00766-002-0164-7
   Damian D, 2008, IEEE T SOFTWARE ENG, V34, P116, DOI 10.1109/TSE.2007.70758
   Damian D, 2007, IEEE SOFTWARE, V24, P21, DOI 10.1109/MS.2007.55
   Damian DEH, 2000, IEEE SOFTWARE, V17, P28, DOI 10.1109/52.896247
   Dennis A. R, 1998, INFORM SYST RES, V9, P156
   Dennis AR, 2008, MIS QUART, V32, P575
   Dunsmore A, 2003, IEEE T SOFTWARE ENG, V29, P677, DOI 10.1109/TSE.2003.1223643
   Fjermestad J., 1998, Journal of Management Information Systems, V15, P7
   Garland R., 1991, Marketing bulletin, V2, P66
   Gottesdiener E., 2002, Requirements by collaboration
   Gunawardena CN., 1997, American Journal of Distance Education, V11, P8, DOI [DOI 10.1080/08923649709526970, 10.1080/08923649709526970]
   Hatcher L, 2013, A step-by-step approach to using SAS for factor analysis and structural equation modeling
   Herbsleb J.D., 2002, Proceedings of the Conference on Human Factors in Computing Systems, CHI '02, P171
   Herbsleb JD, 2001, PROC INT CONF SOFTW, P81, DOI 10.1109/ICSE.2001.919083
   Laitenberger O, 2001, IEEE T SOFTWARE ENG, V27, P387, DOI 10.1109/32.922713
   Lloyd WJ, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P311, DOI 10.1109/ICRE.2002.1048544
   Macaulay L.A., 1996, Requirements engineering
   Maiden N., 2004, P ACM C DESIGNING IN, P113
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   McGrath J.E., 1984, GROUPS INTERACTION P
   MCGRATH JE, 1991, SMALL GR RES, V22, P147, DOI 10.1177/1046496491222001
   McHoul A., 2001, ANAL TALK I SETTINGS
   Montgomery D.C., 1996, DESIGN ANAL EXPT
   MURTHY US, 2000, P 33 HAW INT C SYST, V2, P1, DOI DOI 10.1109/HICSS.2000.926611
   Nunnally JC, 1978, PSYCHOMETRIC THEORY
   Nuseibeh B., 2000, P C FUTURE SOFTWARE, P35, DOI [10.1145/336512.336523, DOI 10.1145/336512.336523]
   Olson GM, 2000, HUM-COMPUT INTERACT, V15, P139, DOI 10.1207/S15327051HCI1523_4
   Olson J.S., 1995, Proceedings of CHI '95, P362
   Robert LP, 2005, IEEE T PROF COMMUN, V48, P10, DOI 10.1109/TPC.2004.843292
   Sauer C, 2000, IEEE T SOFTWARE ENG, V26, P1, DOI 10.1109/32.825763
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Short J., 1976, The social psychology of telecommunications
   Stemler S., 2001, Practical Assessment, Research Evaluation, V17, DOI [10.7275/Z6FM-2E34, DOI 10.7275/Z6FM-2E34, 10.7275/z6fm-2-34, DOI 10.7275/Z6FM-2-34, 10.7275/z6fm-2e34]
   Sutton D. C., 2000, Requirements Engineering, V5, P114, DOI 10.1007/PL00010344
   Taylor SJ., 1984, INTRO QUALITATIVE RE
   Titscher S, 2000, P INT C COMP HUM INT, DOI DOI 10.1145/302979.303067
   Walther JB, 1996, COMMUN RES, V23, P3, DOI 10.1177/009365096023001001
   WALZ DB, 1993, COMMUN ACM, V36, P63, DOI 10.1145/163430.163447
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Zigurs I, 1998, MIS QUART, V22, P313, DOI 10.2307/249668
NR 58
TC 33
Z9 39
U1 0
U2 45
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2012
VL 17
IS 6
BP 640
EP 674
DI 10.1007/s10664-011-9179-3
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 994VN
UT WOS:000307962100002
DA 2024-07-18
ER

PT J
AU Wermelinger, M
   Yu, YJ
   Lozano, A
   Capiluppi, A
AF Wermelinger, Michel
   Yu, Yijun
   Lozano, Angela
   Capiluppi, Andrea
TI Assessing architectural evolution: a case study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software architecture; Software evolution; Design principles; Structured
   design; Metrics; Eclipse
ID DESIGN; QUALITY
AB This paper proposes to use a historical perspective on generic laws, principles, and guidelines, like Lehman's software evolution laws and Martin's design principles, in order to achieve a multi-faceted process and structural assessment of a system's architectural evolution. We present a simple structural model with associated historical metrics and visualizations that could form part of an architect's dashboard. We perform such an assessment for the Eclipse SDK, as a case study of a large, complex, and long-lived system for which sustained effective architectural evolution is paramount. The twofold aim of checking generic principles on a well-know system is, on the one hand, to see whether there are certain lessons that could be learned for best practice of architectural evolution, and on the other hand to get more insights about the applicability of such principles. We find that while the Eclipse SDK does follow several of the laws and principles, there are some deviations, and we discuss areas of architectural improvement and limitations of the assessment approach.
C1 [Wermelinger, Michel; Yu, Yijun] Open Univ, Dept Comp, Milton Keynes MK7 6AA, Bucks, England.
   [Wermelinger, Michel; Yu, Yijun] Open Univ, Ctr Res Comp, Milton Keynes MK7 6AA, Bucks, England.
   [Lozano, Angela] Catholic Univ Louvain, ICTEAM, B-1348 Louvain, Belgium.
   [Capiluppi, Andrea] Univ E London, Sch Comp Informat Technol & Engn, London E15 4LZ, England.
C3 Open University - UK; Open University - UK; Universite Catholique
   Louvain; University of East London
RP Wermelinger, M (corresponding author), Open Univ, Dept Comp, Milton Keynes MK7 6AA, Bucks, England.
EM m.a.wermelinger@open.ac.uk; y.yu@open.ac.uk; angela.lozano@uclouvain.be;
   a.capiluppi@uel.ac.uk
RI Wermelinger, Michel/AAG-5635-2020; Capiluppi, Andrea/AGO-2961-2022
OI Wermelinger, Michel/0000-0002-6467-3293; Capiluppi,
   Andrea/0000-0001-9469-6050; Yu, Yijun/0000-0002-7154-8570
FU Institute for the encouragement of Scientific Research and Innovation of
   Brussels (ISRIB); Belgian State, Belgian Science Policy
FX The third author has been supported by the ICT Impulse Programme of the
   Institute for the encouragement of Scientific Research and Innovation of
   Brussels (ISRIB), and by the Interuniversity Attraction Poles (IAP)
   Programme of the Belgian State, Belgian Science Policy.
CR [Anonymous], 1962, P AM PHILOS SOC
   [Anonymous], PROBABILISTIC REVOLU
   [Anonymous], 2008, Software Evolution, DOI [10.1007/978-3-540-76440-311, DOI 10.1007/978-3-540-76440-311]
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   BENARI M, 1982, PRINCIPLES CONCURREN
   Beyer D, 2005, IEEE T SOFTWARE ENG, V31, P137, DOI 10.1109/TSE.2005.23
   Beyer D, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P967
   Bloch J., 2001, Effective Java
   Bois B.D., 2008, ELECT COMMUNICATIONS, V8
   Briand LC, 2000, J SYST SOFTWARE, V51, P245, DOI 10.1016/S0164-1212(99)00102-8
   Briand LC, 1997, IEEE T SOFTWARE ENG, V23, P196, DOI 10.1109/TSE.1997.585509
   Briand LC, 1996, IEEE T SOFTWARE ENG, V22, P68, DOI 10.1109/32.481535
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Ciupke O., 1999, Proceedings of Technology of Object-Oriented Languages and Systems - TOOLS 30 (Cat. No.PR00278), P18, DOI 10.1109/TOOLS.1999.787532
   CRESPO Y, 2005, INT WORKSH QUANT APP
   Dagpinar M, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P155, DOI 10.1109/WCRE.2003.1287246
   Eldredge N., 1972, P82
   Emam KE, 2001, IEEE T SOFTWARE ENG, V27, P630, DOI 10.1109/32.935855
   Eysenck H. J., 1976, CASE STUDIES BEHAV T
   Flyvbjerg B, 2006, QUAL INQ, V12, P219, DOI 10.1177/1077800405284363
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Godfrey MW, 2000, PROC IEEE INT CONF S, P131, DOI 10.1109/ICSM.2000.883030
   HANSEN KM, 2009, VHI012009 U IC ENG R
   HOU D, 2007, P OOPSLA WORKSH ECL, P65
   JOHNSON RE, 1988, J OBJECT-ORIENT PROG, V1, P22
   Juergens E, 2009, PROC INT CONF SOFTW, P485, DOI 10.1109/ICSE.2009.5070547
   Lakos J., 1996, LARGE SCALE C SOFTW
   Lehman M. M., 1985, Program Evolution: Processes of Software Change
   Lehman MM, 1997, FOURTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P20, DOI 10.1109/METRIC.1997.637156
   LIEBERHERR K, 1988, SIGPLAN NOTICES, V23, P323, DOI 10.1145/62084.62113
   LISKOV B, 1988, SIGPLAN NOTICES, V23, P17, DOI 10.1145/62139.62141
   Marinescu R, 2001, TOOLS, V39, P173, DOI 10.1109/TOOLS.2001.941671
   Martin R. C., 1996, C++ Report, V8, P57
   Martin R. C., 1997, C++ Report, V9, P54
   Medvidovic N, 2007, INFORM SOFTWARE TECH, V49, P12, DOI 10.1016/j.infsof.2006.08.006
   Melton H., 2006, 21 OOPSLA, P770
   Melton H, 2007, EMPIR SOFTW ENG, V12, P389, DOI 10.1007/s10664-006-9033-1
   Mens T, 2008, PROC IEEE INT CONF S, P386, DOI 10.1109/ICSM.2008.4658087
   MEYER B, 1992, COMPUTER, V25, P40, DOI 10.1109/2.161279
   Meyer B., 1988, Object-Oriented Software Construction
   Mohan N, 2006, IEEE CUST INTEGR CIR, P297
   Munro MatthewJames., 2005, Software Metrics, P15, DOI 10.1109/metrics.2005.38
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   Popper K., 2005, The logic of scientific discovery
   Ratiu D, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P223
   Riel AJ., 1996, Object-Oriented Design Heuristics
   Stevens W., 1979, Structured Design, P205
   Tahvildari L, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P183, DOI 10.1109/CSMR.2003.1192426
   Tourwé T, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P91, DOI 10.1109/CSMR.2003.1192416
   VANBELLE T, 2004, THESIS U NEW MEXICO
   Walter B, 2005, LECT NOTES COMPUT SC, V3556, P154
   Wermelinger M, 2011, LECT NOTES COMPUT SC, V6491, P426, DOI 10.1007/978-3-642-18023-1_13
   Wermelinger M, 2008, PROC IEEE INT CONF S, P396, DOI 10.1109/ICSM.2008.4658088
   Wong K., 1998, The Rigi User's Manual - Version 5.4.4
   Wu JW, 2004, 7TH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, P57, DOI 10.1109/IWPSE.2004.1334769
   Xing ZC, 2004, PROG COMPREHEN, P34, DOI 10.1109/WPC.2004.1311045
NR 57
TC 10
Z9 12
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2011
VL 16
IS 5
SI SI
BP 623
EP 666
DI 10.1007/s10664-011-9164-x
PG 44
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 808LJ
UT WOS:000293978900004
DA 2024-07-18
ER

PT J
AU Poshyvanyk, D
   Marcus, A
   Ferenc, R
   Gyimóthy, T
AF Poshyvanyk, Denys
   Marcus, Andrian
   Ferenc, Rudolf
   Gyimothy, Tibor
TI Using information retrieval based coupling measures for impact analysis
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Impact analysis; Latent semantic indexing; Information retrieval; Change
   prediction; Coupling measurement
ID OBJECT-ORIENTED METRICS; EMPIRICAL VALIDATION; TRACEABILITY LINKS;
   SOFTWARE; LOCATION; SYSTEMS; DESIGN
AB Coupling is an important property of software systems, which directly impacts program comprehension. In addition, the strength of coupling measured between modules in software is often used as a predictor of external software quality attributes such as changeability, ripple effects of changes and fault-proneness. This paper presents a new set of coupling measures for Object-Oriented (OO) software systems measuring conceptual coupling of classes. Conceptual coupling is based on measuring the degree to which the identifiers and comments from different classes relate to each other. This type of relationship, called conceptual coupling, is measured through the use of Information Retrieval (IR) techniques. The proposed measures are different from existing coupling measures and they capture new dimensions of coupling, which are not captured by the existing coupling measures. The paper investigates the use of the conceptual coupling measures during change impact analysis. The paper reports the findings of a case study in the source code of the Mozilla web browser, where the conceptual coupling metrics were compared to nine existing structural coupling metrics and proved to be better predictors for classes impacted by changes.
C1 [Marcus, Andrian] Wayne State Univ, Dept Comp Sci, Detroit, MI 48202 USA.
   [Poshyvanyk, Denys] Coll William & Mary, Dept Comp Sci, Williamsburg, VA 23185 USA.
   [Ferenc, Rudolf; Gyimothy, Tibor] Univ Szeged, Dept Software Engn, Szeged, Hungary.
C3 Wayne State University; William & Mary; Szeged University
RP Marcus, A (corresponding author), Wayne State Univ, Dept Comp Sci, Detroit, MI 48202 USA.
EM dposhyvanyk@wm.edu; amarcus@wayne.edu; ferenc@inf.u-szeged.hu;
   gyimi@inf.u-szeged.hu
RI ; Ferenc, Rudolf/A-1317-2008; Gyimothy, Tibor/M-3705-2018
OI Poshyvanyk, Denys/0000-0002-5626-7586; Ferenc,
   Rudolf/0000-0001-8897-7403; Marcus, Andrian/0000-0001-5450-5598;
   Gyimothy, Tibor/0000-0002-2123-7387
FU U.S. National Science Foundation [CCF-0438970, CCF-0820133]; Hungarian
   national grants [GVOP-3.3.1.-2004-040024/3.0,
   GVOP-3.1.1.-2004-05-0345/3.0]; Hungarian Academy of Sciences; Division
   of Computing and Communication Foundations; Direct For Computer & Info
   Scie & Enginr [0820133] Funding Source: National Science Foundation
FX This research was supported in part by grants from the U.S. National
   Science Foundation (CCF-0438970 and CCF-0820133), by the Hungarian
   national grants GVOP-3.3.1.-2004-040024/3.0 and
   GVOP-3.1.1.-2004-05-0345/3.0 and by the Janos Bolyai Research
   Scholarship of the Hungarian Academy of Sciences. We would like to thank
   the anonymous reviewers for their pertinent and helpful comments.
CR ABREU F, 2000, CSMR, P13
   Allen EB, 2000, SEVENTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 2001, PROCEEDINGS, P124, DOI 10.1109/METRIC.2001.915521
   [Anonymous], 2005, Proc. of the European Software Engineering Conference and the ACM SIGSOFT Symposium on the Foundations of Software Engineering (ESEC/FSE'05)
   [Anonymous], NRCERB1064
   Antoniol G, 1998, FIFTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 1998, PROCEEDINGS, P23, DOI 10.1109/METRIC.1998.731224
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Antoniol G., 2000, Proceedings of the Fourth European Conference on Software Maintenance and Reengineering, P227, DOI 10.1109/CSMR.2000.827331
   Antony B., 2007, Indian Journal of Natural Products, V23, P14
   Arisholm E, 2004, IEEE T SOFTWARE ENG, V30, P491, DOI 10.1109/TSE.2004.41
   Bohner SA, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P42, DOI 10.1109/ICSM.1996.564987
   BOHNER SA, 2003, SOFTWARE ENG WORKSH, P143
   Briand L, 1997, PROC INT CONF SOFTW, P412, DOI 10.1145/253228.253367
   BRIAND L, 1999, IEEE INT C SOFTW MAI, P475, DOI DOI 10.1109/ICSM.1999.792645
   Briand LC, 2000, J SYST SOFTWARE, V51, P245, DOI 10.1016/S0164-1212(99)00102-8
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P91, DOI 10.1109/32.748920
   BRIAND LC, 1998, 5 INT SOFTW METR S M, P43
   CANFORA G, 2005, P 11 IEEE INT S SOFT, P20
   Chen BS, 2000, IEEE T FUZZY SYST, V8, P249, DOI 10.1109/91.855915
   CHIDAMBER SR, 1991, OOPSLA 91 CONFERENCE PROCEEDINGS : OBJECT-ORIENTED PROGRAMMING SYSTEMS, LANGUAGES, AND APPLICATIONS, P197, DOI 10.1145/118014.117970
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Cleland-Huang J, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P135, DOI 10.1109/RE.2005.78
   Cubranic D, 2005, IEEE T SOFTWARE ENG, V31, P446, DOI 10.1109/TSE.2005.71
   De Lucia A, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1276933.1276934
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   Di Lucca GA, 2002, PROC IEEE INT CONF S, P93, DOI 10.1109/ICSM.2002.1167756
   EADDY M, 2008, 17 IEEE INT C PROGR
   Etzkorn L, 2000, TECHNOLOGY OF OBJECT-ORIENTED LANGUAGES AND SYSTEMS - TOOLS 34, PROCEEDINGS, P71, DOI 10.1109/TOOLS.2000.868960
   Etzkorn LH, 2002, J SOFTW MAINT EVOL-R, V14, P293, DOI 10.1002/smr.255
   Etzkorn LH, 1997, COMPUTER, V30, P66, DOI 10.1109/2.625311
   Ferenc R, 2002, PROC IEEE INT CONF S, P172, DOI 10.1109/ICSM.2002.1167764
   Fischer P, 1998, INT CLIN PSYCHOPHARM, V13, P83, DOI 10.1097/00004850-199803000-00005
   Flyvbjerg B, 2006, QUAL INQ, V12, P219, DOI 10.1177/1077800405284363
   Gall H, 2003, SIXTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P13
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Hassoun Y, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P339, DOI 10.1109/CSMR.2004.1281436
   Hayes JH, 2006, IEEE T SOFTWARE ENG, V32, P4, DOI 10.1109/TSE.2006.3
   HELM R, 1991, C P OBJ OR PROGR SYS, P47
   Hill E., 2007, Proceedings of the 22nd International Conference on Automated Software Engineering, P14
   Jolliffe I.T., 1986, Principal component analysis, DOI DOI 10.1016/0169-7439(87)80084-9
   Kawaguchi S, 2006, J SYST SOFTWARE, V79, P939, DOI 10.1016/j.jss.2005.06.044
   Kosara R, 2003, IEEE COMPUT GRAPH, V23, P20, DOI 10.1109/MCG.2003.1210860
   Kramer S, 2004, ACM T SOFTW ENG METH, V13, P332, DOI 10.1145/1027092.1027094
   Kuhn A, 2007, INFORM SOFTWARE TECH, V49, P230, DOI 10.1016/j.infsof.2006.10.017
   Lawrie DJ, 2006, INT C PROGRAM COMPRE, P149, DOI 10.1109/ICPC.2006.34
   Lee JY, 2001, MAT SCI ENG B-SOLID, V79, P86, DOI 10.1016/S0921-5107(00)00555-9
   Lee Y., 1995, INT C SOFTW QUAL MAR
   LI W, 1993, J SYST SOFTWARE, V23, P111, DOI 10.1016/0164-1212(93)90077-B
   Linstead E., 2007, P 4 INT WORKSHOP MIN, P30
   LO KK, 2006, ACM SIGPLAN INT C OB, P383
   Lormans M, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P45
   MAAREK YS, 1991, IEEE T SOFTWARE ENG, V17, P800, DOI 10.1109/32.83915
   Maletic JI, 2001, PROC INT CONF SOFTW, P103, DOI 10.1109/ICSE.2001.919085
   Marcelis C L, 2001, Fam Cancer, V1, P107
   Marcozzi MD, 2008, J SCI COMPUT, V34, P287, DOI 10.1007/s10915-007-9168-2
   Marcus A, 2005, PROC IEEE INT CONF S, P133
   Marcus A, 2005, PROG COMPREHEN, P33, DOI 10.1109/WPC.2005.33
   Marcus A, 2005, INT J SOFTW ENG KNOW, V15, P811, DOI 10.1142/S0218194005002543
   Marcus A, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P214, DOI 10.1109/WCRE.2004.10
   Michail A., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P463, DOI 10.1109/ICSE.1999.841036
   Mitchell A, 2006, SCI COMPUT PROGRAM, V59, P4, DOI 10.1016/j.scico.2005.07.002
   Mockus A, 2000, PROC IEEE INT CONF S, P120, DOI 10.1109/ICSM.2000.883028
   OFFUTT AJ, 1993, J SYST SOFTWARE, V20, P295, DOI 10.1016/0164-1212(93)90072-6
   Olague HM, 2007, IEEE T SOFTWARE ENG, V33, P402, DOI 10.1109/TSE.2007.1015.
   Orme AN, 2006, IEEE SOFTWARE, V23, P102, DOI 10.1109/MS.2006.46
   ORSO A, 2004, IEEE ACM INT C SOFTW, P776
   PAN Y, 2004, 12 ACM SIGSOFT 12 IN, P211
   Patel S., 1992, International Conference on Software Engineering, P38, DOI 10.1109/ICSE.1992.753488
   Ping Yu, 2002, Proceedings of the Sixth European Conference on Software Maintenance and Reengineering, P99, DOI 10.1109/CSMR.2002.995794
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI [10.1109/TSE.2007.1016, 10.1109/TSE.2007.1016.]
   Poshyvanyk D, 2007, INT C PROGRAM COMPRE, P37
   Poshyvanyk D, 2006, PROC IEEE INT CONF S, P469
   QUEILLE JP, 1994, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P234, DOI 10.1109/ICSM.1994.336771
   ROUNTEV A, 2001, C OBJ OR PROGR SYST, P43
   Runeson P, 2007, PROC INT CONF SOFTW, P499
   SALTON G, 1983, INTRO MODERN INFORMA
   Siegel Sidney, 1988, Nonparametric statistics for the behavioral sciences
   STEIN C, 2004, SOFTWARE AUDIT METRI, P49
   WANG X, 2008, 30 INT C SOFTW ENG I, P461
   Wilkie FG, 2000, J SYST SOFTWARE, V52, P157, DOI 10.1016/S0164-1212(99)00142-9
   Yang HY, 2005, 2005 Australian Software Engineering Conference, Proceedings, P212
   Ye Y., 2005, Automated Software Engineering, V12, P199, DOI 10.1007/s10515-005-6206-x
   Yin R.K., 2011, Qualitative research from start to finish
   Yu ZF, 2001, PROG COMPREHEN, P293, DOI 10.1109/WPC.2001.921739
   ZHAO J, 2004, 10 IEEE INT SOFTW ME
   Zhao W, 2006, ACM T SOFTW ENG METH, V15, P195, DOI 10.1145/1131421.1131424
   Zou LJ, 2007, INT C PROGRAM COMPRE, P135
NR 86
TC 123
Z9 147
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2009
VL 14
IS 1
BP 5
EP 32
DI 10.1007/s10664-008-9088-2
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 414UU
UT WOS:000263891500002
DA 2024-07-18
ER

PT J
AU Müller, MM
   Höfer, A
AF Mueller, Matthias M.
   Hoefer, Andreas
TI The effect of experience on the test-driven development process
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE test-driven development; process; quasi-experiment; experts; novices
AB We conducted a quasi-experiment to compare the characteristics of experts' and novices' test-driven development processes. Our novices were 11 computers science students who participated in an Extreme Programming lab course, the expert group consisted of seven professionals who had industrial experience in test-driven development. The novices as well as two of the experts worked in a laboratory environment whereas the remaining five experts worked in their office. The experts complied more to the rules of test-driven development and had shorter test-cycles than the novices. The tests written by the experts were of higher quality in terms of statement and block coverage as well. All reported results are statistically significant on the 5% level. We conclude that the results of studies which evaluate performance of test-driven development using subjects inexperienced in TDD are not easily generalisable.
C1 EnBW AG, Syst Infrastruktur Support GmbH, D-76131 Karlsruhe, Germany.
   Univ Karlsruhe, Fak Informat, D-76131 Karlsruhe, Germany.
C3 Helmholtz Association; Karlsruhe Institute of Technology
RP Müller, MM (corresponding author), EnBW AG, Syst Infrastruktur Support GmbH, Durlacher Allee 93, D-76131 Karlsruhe, Germany.
EM matt.mueller@enbw.com; ahoefer@ira.uka.de
RI Müller, Matthias M/A-1055-2017
CR [Anonymous], EUROCON 2003
   Beck K., 2002, TEST DRIVEN DEV
   Bhat T., 2006, Proceedings of the 2006 ACM/IEEE International Symposium on Empirical Software Engineering (ISESE '06), P356, DOI [DOI 10.1145/1159733.1159787, 10.1145/1159733.1159787]
   Canfora G., 2006, P 2006 ACMIEEE INT S, P364
   Cohen J., 1988, STAT POWER ANAL BEHA
   Erdogmus H, 2005, IEEE T SOFTWARE ENG, V31, P226, DOI 10.1109/TSE.2005.37
   ERDOGMUS H, 2004, P XP AG UN 2004 4 C
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   George B., 2003, Proc. of the ACM SAC 2003. SAC 03, P1135, DOI [DOI 10.1145/952532.952753, 10.1145/952532.952753$, DOI 10.1145/952532.952753$]
   Geras A, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P405, DOI 10.1109/METRIC.2004.1357925
   Hollander M., 2014, Nonparametric Statistical Methods, Solutions Manual, Vthird
   LINK J, 2005, SOFTWATRTEST MIT JUN
   Link J., 2003, Unit Testing in Java: How Tests Drive the Code
   Mackinnon T., 2000, Extrem. Program. Examined, P287
   Malpohl G, 2000, FIFTEENTH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P73, DOI 10.1109/ASE.2000.873652
   MULLER M, 2004, C EXTR PROGR AG PROC, P294
   Muller M. M., 2002, IEE Proceedings-Software, V149, P131, DOI 10.1049/ip-sen:20020540
   Shadish W. R., 2002, EXPT QUASI EXPT DESI
NR 18
TC 32
Z9 35
U1 4
U2 13
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2007
VL 12
IS 6
BP 593
EP 615
DI 10.1007/s10664-007-9048-2
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 226MC
UT WOS:000250592200002
DA 2024-07-18
ER

PT J
AU Carver, JC
   Shull, F
   Basili, V
AF Carver, Jeffrey C.
   Shull, Forrest
   Basili, Victor
TI Can observational techniques help novices overcome the software
   inspection learning curve? An empirical investigation
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE empirical study; requirements inspections; software process;
   experimental process; software quality
AB When learning a new software engineering technique, there is a learning curve that must be overcome. In particular, when studies are conducted in a classroom setting, researchers need a method for quickly accelerating the experience of novice subjects to allow the results to be more applicable in industrial settings. In this paper, we propose and test a method to enable novices to gain process experience to allow them to more quickly overcome the learning curve. The method we evaluate allows an inspector to gain experience with the inspection process by observing an inspection performed by someone else. The results of the study show that the proposed method for gaining experience appears to be useful in some limited cases, that is, for low experienced subjects who were inspecting a requirements document from a domain in which they had low knowledge. Based on the results of this study, we are able to propose some new related hypotheses to be tested in future studies.
C1 Mississippi State Univ, Dept Comp Sci & Engn, Starkville, MS USA.
   Univ Maryland, Fraunhofer Ctr Expt Software Engn, College Pk, MD 20742 USA.
   Univ Maryland, Dept Comp Sci, College Pk, MD 20742 USA.
C3 Mississippi State University; University System of Maryland; University
   of Maryland College Park; University System of Maryland; University of
   Maryland College Park
RP Carver, JC (corresponding author), Mississippi State Univ, Dept Comp Sci & Engn, Starkville, MS USA.
EM carver@cse.msstate.edu; fshull@fc-md.umd.edu; basili@cs.umd.edu
RI Carver, Jeffrey/AFP-1987-2022; Shull, Forrest/GZK-6750-2022; Carver,
   Jeffrey/AAM-8202-2020
OI Carver, Jeffrey/0000-0002-7824-9151; Carver, Jeffrey/0000-0002-7824-9151
CR [Anonymous], ISERN9502
   [Anonymous], 1989, KNOWING
   ARIF T, THESIS NORWEGIAN U S
   Basili V. R., 1996, Empirical Software Engineering, V1, P133, DOI 10.1007/BF00368702
   BASILI VR, 1987, IEEE T SOFTWARE ENG, V13, P1278, DOI 10.1109/TSE.1987.232881
   BISANT DB, 1989, IEEE T SOFTWARE ENG, V15, P1294, DOI 10.1109/TSE.1989.559782
   Campbell DT., 1963, EXPT QUASIEXPERIMENT
   Carver J, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P239
   Carver J, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P72, DOI 10.1109/ISESE.2003.1237966
   Carver Jeffrey C, 2003, THESIS U MARYLAND
   Conradi R, 2003, LECT NOTES COMPUT SC, V2743, P483
   KNIGHT JC, 1993, COMMUN ACM, V36, P51, DOI 10.1145/163359.163366
   Laitenberger O, 2000, J SYST SOFTWARE, V50, P5, DOI 10.1016/S0164-1212(99)00073-4
   MELO W, 2001, ES55601 COPPE
   Müller MM, 2001, PROC INT CONF SOFTW, P537, DOI 10.1109/ICSE.2001.919128
   Münch J, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P18, DOI 10.1109/ISESE.2003.1237961
   PINTRICH PR, 1996, MOTIVATION ED THEORY, pCH5
   Porter A., 1998, Empirical Software Engineering, V3, P355, DOI 10.1023/A:1009776104355
   Shull F, 2000, COMPUTER, V33, P73, DOI 10.1109/2.869376
   SHULL F, 2001, P JOINT 8 EUR SOFTW, P288
   SHULL F, 1998, THESIS U MARYLAND CO
   SINGER J, 1996, P WORKSH EMP STUD SO, P105
   Spinellis D, 2001, COMPUTER, V34, P100, DOI 10.1109/MC.2001.940018
   Williams L, 2001, 14TH CONFERENCE ON SOFTWARE ENGINEERING EDUCATION AND TRAINING, PROCEEDINGS, P27, DOI 10.1109/CSEE.2001.913816
   Wood M, 1997, LECT NOTES COMPUT SC, V1301, P262, DOI 10.1145/267896.267915
   ZHANG Z, 1999, EMPIR SOFTW ENG, V4, P43
NR 26
TC 3
Z9 4
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2006
VL 11
IS 4
BP 523
EP 539
DI 10.1007/s10664-006-9021-5
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 116LS
UT WOS:000242805000002
DA 2024-07-18
ER

PT J
AU Hassan, AE
   Holt, RC
AF Hassan, Ahmed E.
   Holt, Richard C.
TI Replaying development history to assess the effectiveness of change
   propagation tools
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 20th IEEE International Conference on Software Maintenance (ICSM 2004)
CY SEP 11-14, 2004
CL Chicago, IL
SP IEEE Comp Soc
DE change propagation; mining software repositories; historical co-change;
   static dependency; source control systems
AB As developers modify software entities such as functions or variables to introduce new features, enhance old ones, or fix bugs, they must ensure that other entities in the software system are updated to be consistent with these new changes. Many hard to find bugs are introduced by developers who did not notice dependencies between entities, and failed to propagate changes correctly. Most modern development environments offer tools to assist developers in propagating changes. For example, dependency browsers show static code dependencies between source code entities. Other sources of information such as historical co-change or code layout information could be used by tools to support developers in propagating changes. We present the Development Replay (DR) approach which empirically assess and compares the effectiveness of several not-yet-existing change propagation tools by reenacting the changes stored in source control repositories using these tools. We present a case study of five large open source systems with a total of over 40 years of development history. Our empirical results show that historical co-change information recovered from source control repositories along with code layout information can guide developers in propagating changes better than simple static dependency information.
C1 Univ Victoria, Dept Elect & Comp Engn, Victoria, BC, Canada.
   Univ Waterloo, Sch Comp Sci, Waterloo, ON N2L 3G1, Canada.
C3 University of Victoria; University of Waterloo
RP Hassan, AE (corresponding author), Univ Victoria, Dept Elect & Comp Engn, Victoria, BC, Canada.
EM ahmed@ece.uvic.ca; holt@plg.uwaterloo.ca
RI KHALIFA, AHMED khalifa/HKF-2246-2023; Hassan, Ahmed/AAB-7241-2019; Ali,
   Ahmed/HOF-4672-2023
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; 
CR [Anonymous], P 26 INT C SOFTW ENG
   [Anonymous], P TREC 7 7 TEXT RETR
   [Anonymous], 1981, SIMULTANEOUS STAT IN
   [Anonymous], 1949, Human behaviour and the principle of least-effort
   Anquetil N, 1998, PROC INT CONF SOFTW, P84, DOI 10.1109/ICSE.1998.671105
   Arnold R. S., 1993, Proceedings. Conference on Software Maintenance 1993. CSM-93 (Cat. No.93CH3360-5), P292, DOI 10.1109/ICSM.1993.366933
   Atkins D., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P324, DOI 10.1109/ICSE.1999.841023
   Baniassad E.L.A., 2002, 1 INT C ASPECT ORIEN, P120
   BANIASSAD EL, 2003, P 25 INT C SOFTW ENG
   BAUER A, 2003, P 6 IEEE INT WORKSH
   BELKIN NJ, 1977, THTHEORY APPL INFORM, P187
   Bohner S. A., 1996, SOFTWARE CHANGE IMPA
   BOWMAN IT, 1999, P 7 INT WORKSH PROGR
   Briand L. C., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P475, DOI 10.1109/ICSM.1999.792645
   Brooks FP, 1974, The Mythical Man-Month: Essays on Software Engineering
   Chen A, 2001, PROC IEEE INT CONF S, P364, DOI 10.1109/ICSM.2001.972749
   CHEN K, 2000, EMPIR SOFTW ENG, V9, P210
   Cubranic D, 2003, PROC INT CONF SOFTW, P408, DOI 10.1109/ICSE.2003.1201219
   EICK SG, 1992, IEEE T SOFTWARE ENG, V18, P957, DOI 10.1109/32.177365
   FENTON N, 1994, IEEE SOFTWARE, V11, P86, DOI 10.1109/52.300094
   Finnigan PJ, 1997, IBM SYST J, V36, P564, DOI 10.1147/sj.364.0564
   GALL H, 1998, P 14 INT C SOFTW MAI
   GALLAGHER KB, 1991, IEEE T SOFTWARE ENG, V17, P751, DOI 10.1109/32.83912
   Glass RL, 2003, IEEE SOFTWARE, V20, P120, DOI 10.1109/MS.2003.1196338
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Hassan A. E., 2004, C REX EVOLUTIONARY C
   HASSAN AE, 2004, P 20 IT C SOFTW MAIN
   HASSAN AE, 2005, P 12 WORK C REV ENG
   HASSAN AE, 2005, P 21 INT C SOFTW MAI
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   LEE EHS, 2000, THESIS U WATERLOO
   LEHMAN MM, 1985, PROGBRAM EVOLUTION P
   Mitchell Mark, 2000, 4 ANN LIN SHOWC C
   Mockus A, 2000, PROC IEEE INT CONF S, P120, DOI 10.1109/ICSM.2000.883028
   Mockus A., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P263, DOI 10.1109/ICSE.2000.870417
   Parnas D.L., 1972, COMMUN ACM, V15, P12
   PARNAS DL, 1994, PROC INT CONF SOFTW, P279, DOI 10.1109/ICSE.1994.296790
   PENNY DA, 1992, THESIS U TORONTO
   Perry DE., 2000, P C FUT SOFTW ENG, P345, DOI DOI 10.1145/336512.336586
   Rajlich V, 1997, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P84, DOI 10.1109/ICSM.1997.624234
   Robillard M. P., 2002, P 24 INT C SOFTW ENG
   Rumbaugh J., 1991, OBJECT ORIENTED MODE
   SHIRABAD JS, 2003, THESIS U OTTAWA
   Sim SE, 1998, PROG COMPREHEN, P180, DOI 10.1109/WPC.1998.693351
   STEPHEN PS, 2002, IEEE T SOFTWARE ENG, V28, P396
   van Rijsbergen C. J, 1979, Information Retrieval, V2nd
   WEINBERG Z, 2003, MAINTENANCE PROGRAMM
   Whiston S.C., 1993, J CAREER DEV, V19, P175
   XING Z, 2004, P 12 INT WORKSH PROG
   YAU SS, 1988, IEEE T SOFTWARE ENG, V14, P405, DOI 10.1109/32.4662
   Ye YW, 2003, PROC INT CONF SOFTW, P419
   YING AT, 2003, THESIS U BRIT COLOMB
   Ziegel ER, 1995, MATH STAT DATA ANAL, V37, P127
NR 54
TC 20
Z9 24
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2006
VL 11
IS 3
BP 335
EP 367
DI 10.1007/s10664-006-9006-4
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 063MB
UT WOS:000239021200002
DA 2024-07-18
ER

PT J
AU Ellims, M
   Bridges, J
   Ince, DC
AF Ellims, M
   Bridges, J
   Ince, DC
TI The economics of unit testing
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 15th International Symposium on Software Reliability Engineering
CY NOV 02-05, 2004
CL St Malo, FRANCE
SP IEEE Comp Soc, Reliabil Soc, IRISA, cigital, Microsoft, france telecom R&D, Thales, IBM, CNRS, DGA, INRIA, Metropole Rennes, Bretagne Reg, Univ Rennes
DE software testing; unit testing; adequacy criteria; test effectiveness
AB Conventional wisdom and anecdote suggests that testing takes between 30 to 50% of a project's effort. However testing is not a monolithic activity as it consists of a number of different phases such as unit testing, integration testing and finally system and acceptance test.
   Unit testing has received a lot of criticism in terms of the amount of time that it is perceived to take and its perceived costs. However it still remains an important verification activity being an effective means to test individual software components for boundary value behavior and ensure that all code has been exercised adequately. We examine the available data from three safety-related, industrial software projects that have made use of unit testing. Using this information we argue that the perceived costs of unit testing may be exaggerated and that the likely benefits in terms of defect detection are quite high in relation to those costs.
   We also discuss the different issues that have been found applying the technique at different phases of the development and using different methods to generate those tests. We also compare results we have obtained with empirical results from the literature and highlight some possible weakness of research in this area.
C1 Pi Technol, Cambridge, England.
   Open Univ, Milton Keynes MK7 6AA, Bucks, England.
C3 Open University - UK
RP Pi Technol, Cambridge, England.
EM mike.ellims@pitechnology.com
CR AITCHISON K, 2000, P ISATA 2000 AUT EL, P165
   [Anonymous], MYTHICAL MAN MONTH
   [Anonymous], 1992, DO178B RTCA
   BASILI VR, 1987, IEEE T SOFTWARE ENG, V13, P1278, DOI 10.1109/TSE.1987.232881
   BURR K, 1998, P INT C SOFTW TEST A, P26
   Cohen DM, 1997, IEEE T SOFTWARE ENG, V23, P437, DOI 10.1109/32.605761
   Dalal SR, 1998, TECHNOMETRICS, V40, P234, DOI 10.2307/1271179
   DAVIS M, 1988, COMPUT J, V31, P17, DOI 10.1093/comjnl/31.1.17
   Demillo R. A., 1993, ACM Transactions on Software Engineering and Methodology, V2, P109, DOI 10.1145/151257.151258
   Dunietz IS, 1997, PROC INT CONF SOFTW, P205, DOI 10.1145/253228.253271
   Dupuy Arnaud, 2000, 19 DASC 19 DIG AV SY
   ELLIMS M, 2000, P IMECHE S IEE CONTR
   ELLIMS M, 2004, 15 IEEE INT S SOFTW
   ELLIMS M, 1999, SAE TECHNICAL PAPER
   ELLIMS M, 2000, SAE TECHNICAL PAPER
   ELLIMS M, 2005, UNPUB 12 INT C EL SY
   Fenton NE, 2000, IEEE T SOFTWARE ENG, V26, P797, DOI 10.1109/32.879815
   FRANKL PG, 1983, IEEE T SOFTWARE ENG, V3, P202
   FREEDMAN RS, 1991, IEEE T SOFTWARE ENG, V17, P553, DOI 10.1109/32.87281
   GARG P, 1994, P 1 INT C SOFTW TEST, P21
   Green T., 1990, Psychology of Programming
   HAMLET R, 1994, P 5 INT S SOFTW REL, P158
   HAMLET R, 1995, SOFTWARE PRACT EXPER, V4, P347
   INCE DC, 1993, METRICS THEIR DERIVA
   Jones JA, 2003, IEEE T SOFTWARE ENG, V29, P195, DOI 10.1109/TSE.2003.1183927
   Jorgensen PaulC., 1995, Software Testing: A Craftsman's Approach, V1st
   KAMSTIES E, 1995, LECT NOTES COMPUTER, V989, P362
   Kuhn D. R., 2002, P 27 ANN NASA GODD I
   Kuhn DR, 2004, IEEE T SOFTWARE ENG, V30, P418, DOI 10.1109/TSE.2004.24
   LAITENBERGER O, 1998, ISERN9810
   Lyu MR, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P119, DOI 10.1109/ISSRE.2003.1251036
   Maximilien EM, 2003, PROC INT CONF SOFTW, P564, DOI 10.1109/ICSE.2003.1201238
   MCCABE TJA, 1976, IEEE T SOFTWARE ENG, V4, P202
   McDermid J.A., 1991, SOFTWARE ENG REFEREN
   MYERS GJ, 1978, COMMUN ACM, V21, P760, DOI 10.1145/359588.359602
   NATAFOS SA, 1988, IEEE T SOFTWARE ENG, V6, P868
   NGUYEN T, 2003, P 2003 INT C DEP SYS
   PARRISH A, 1991, IEEE T SOFTWARE ENG, V17, P565, DOI 10.1109/32.87282
   Pressman R.S., 2000, SOFTWARE ENG PRACTIT
   RICHARDSON DJ, 1993, IEEE T SOFTWARE ENG, V19, P533, DOI 10.1109/32.232020
   Runeson P, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P3, DOI 10.1109/ISSRE.2003.1251026
   SHOOMAN M, 1988, SOFTWARE ENG
   SNEED HM, 1986, P WORKSH SOFTW TEST, P34
   So SS, 2002, SOFTW TEST VERIF REL, V12, P155, DOI 10.1002/stvr.248
   Sommerville I., 2004, Software Engineering
   TAI KC, 1980, IEEE T SOFTWARE ENG, V6, P531, DOI 10.1109/TSE.1980.234501
   TICHY WF, 1995, J SYST SOFTWARE, V28, P9, DOI 10.1016/0164-1212(94)00111-Y
   Torkar R, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P227, DOI 10.1109/ISSRE.2003.1251045
   Voas J.M., 1998, SOFTWARE FAULT INJEC
   VOAS JM, 1995, IEEE SOFTWARE, V12, P17, DOI 10.1109/52.382180
   Wood M, 1997, LECT NOTES COMPUT SC, V1301, P262, DOI 10.1145/267896.267915
   WOODWARD MR, 1980, IEEE T SOFTWARE ENG, V6, P278, DOI 10.1109/TSE.1980.230473
   Zhu H, 1997, ACM COMPUT SURV, V29, P366, DOI 10.1145/267580.267590
   Zhu H, 1996, IEEE T SOFTWARE ENG, V22, P248, DOI 10.1109/32.491648
NR 54
TC 24
Z9 28
U1 1
U2 13
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2006
VL 11
IS 1
BP 5
EP 31
DI 10.1007/s10664-006-5964-9
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 013XO
UT WOS:000235443500002
DA 2024-07-18
ER

PT J
AU Zettel, J
AF Zettel, J
TI Methodology support in CASE tools and its impact on individual
   acceptance and use: A controlled experiment
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE computer-aided software engineering; methodology support; consistency
   assurance; technology acceptance; process modelling
ID INFORMATION-TECHNOLOGY; PERCEIVED EASE; MODEL; PERCEPTIONS; SYSTEMS;
   USAGE
AB This paper reports the results of a controlled experiment undertaken to investigate whether the methodology support offered by a CASE tool does have an impact on the tools acceptance and actual use by individuals.Subjects used the process modelling tool SPEARMINT to complete a partial process model and remove all inconsistencies. Half the subjects used a variant of SPEARMINT that corrected consistency violations automatically and silently, whilst the other half used a variant of SPEARMINT that told them about inconsistencies both immediately and persistently but without automatic correction. Measurement of acceptance and prediction of actual use was based on the technology acceptance model, supplemented by beliefs about consistency rules. The impact of form of automated consistency assurance applied or hierarchical consistency rules was found to be significant at the 0.05 level with a type I error of 0.027, explaining 71.6% of the variance in CASE tool acceptance. However, intention to use and thus predicted use was of the same size for both variants of SPEARMINT, whereas perceived usefulness and perceived ease of use were affected contrarily.Internal validity of the findings was threatened by validity and reliability issues related to beliefs about consistency rules. Here, further research is needed to develop valid constructs and reliable scales. Following the experiment, a small survey among experienced users of SPEARMINT found that different forms of automated consistency assurance were preferred depending on individual, consistency rule, and task characteristics. Based on these findings, it is recommended that vendors should provide CASE tools with adaptable methodology support, which allow their users to fit automated consistency assurance to the task at hand.
C1 HZD, D-65021 Wiesbaden, Germany.
   Fraunhofer Inst Expt Software Engn, D-67661 Kaiserslautern, Germany.
C3 Fraunhofer Gesellschaft
RP Zettel, J (corresponding author), HZD, Postfach 3164, D-65021 Wiesbaden, Germany.
EM j.zettel@computer.org
CR ADAMS DA, 1992, MIS QUART, V16, P227, DOI 10.2307/249577
   [Anonymous], ACM SIGSOFT SOFTWARE
   [Anonymous], INSEARCH INFORM SYST
   [Anonymous], 1986, THESIS MIT CAMBRIDGE
   BECKERKORNSTAED.U, 1999, P 11 C ADV INF SYST, P119
   Brooks A., 2000, Empirical Software Engineering, V5, P269, DOI 10.1023/A:1026594716872
   Brooks A., 1999, Proceedings Sixth Asia Pacific Software Engineering Conference (ASPEC'99) (Cat. No.PR00509), P614, DOI 10.1109/APSEC.1999.809657
   Brooks A., 2000, Empirical Software Engineering, V5, P69, DOI 10.1023/A:1009849903285
   Brooks A, 2001, 2001 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P285, DOI 10.1109/ASWEC.2001.948522
   BROOKS A, 987 CAESAR
   BROOKS A, 1999, 5 C SMALLT JAV IND E
   CARD DN, 1987, IEEE T SOFTWARE ENG, V13, P845, DOI 10.1109/TSE.1987.233495
   Chau PYK, 1996, INFORM MANAGE-AMSTER, V30, P269, DOI 10.1016/S0378-7206(96)01074-9
   DAVIS FD, 1993, INT J MAN MACH STUD, V38, P475, DOI 10.1006/imms.1993.1022
   DAVIS FD, 1989, MANAGE SCI, V35, P982, DOI 10.1287/mnsc.35.8.982
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   Davis FD, 1996, INT J HUM-COMPUT ST, V45, P19, DOI 10.1006/ijhc.1996.0040
   DAY D, 1997, P 8 AUSTR C INF SYST, P509
   Fichman RG, 1999, INFORM SYST RES, V10, P255, DOI 10.1287/isre.10.3.255
   FISCHER G, 1991, INT J MAN MACH STUD, V35, P695, DOI 10.1016/S0020-7373(05)80184-1
   Fishbein Martin., 1975, Attitude, Intention and Behavior: An Introduction to Theory and Research
   FUGGETTA A, 1993, COMPUTER, V26, P25, DOI 10.1109/2.247645
   Glass RL, 1999, COMMUN ACM, V42, P74, DOI 10.1145/293411.293481
   Goodhue DL, 1995, MANAGE SCI, V41, P1827, DOI 10.1287/mnsc.41.12.1827
   GOODHUE DL, 1995, MIS QUART, V19, P213, DOI 10.2307/249689
   Henderson JC, 1990, INFORM SYST RES, V1, P227, DOI 10.1287/isre.1.3.227
   Henderson R, 1998, INTERACT COMPUT, V10, P385, DOI 10.1016/S0953-5438(98)00037-X
   Iivari J, 1996, COMMUN ACM, V39, P94, DOI 10.1145/236156.236183
   ISO/IEC, 1995, ISO/IEC 12207
   Jankowski D., 1997, Empirical Software Engineering, V2, P11, DOI 10.1023/A:1009790131937
   Jarzabek S, 1998, COMMUN ACM, V41, P93, DOI 10.1145/280324.280338
   JEFFERY DR, 1999, P 1999 CADPRO WORKSH
   Kerlinger F.N., 1986, FDN BEHAV RES, V3rd
   LAITENBERGER O, 1998, ISERN9813
   LAITENBERGER O, 02798E IESE
   Mathieson K, 1991, INFORM SYST RES, V2, P173, DOI 10.1287/isre.2.3.173
   Morris MG, 1997, IEEE SOFTWARE, V14, P58, DOI 10.1109/52.595956
   Riemenschneider CK, 2002, IEEE T SOFTWARE ENG, V28, P1135, DOI 10.1109/TSE.2002.1158287
   ROBBINS JE, 1999, P COSET 99 LOS ANG M, P61
   Roberts P, 2000, INTERACT COMPUT, V12, P427, DOI 10.1016/S0953-5438(98)00068-X
   SEGARS AH, 1993, MIS QUART, V17, P517, DOI 10.2307/249590
   Silverman B. G., 1997, Empirical Software Engineering, V2, P339, DOI 10.1023/A:1009745817837
   SZAJNA B, 1994, MIS QUART, V18, P319, DOI 10.2307/249621
   TAYLOR S, 1995, INFORM SYST RES, V6, P144, DOI 10.1287/isre.6.2.144
   Venkatesh V, 2000, MANAGE SCI, V46, P186, DOI 10.1287/mnsc.46.2.186.11926
   Venkatesh V, 1996, DECISION SCI, V27, P451, DOI 10.1111/j.1540-5915.1996.tb01822.x
   VESSEY I, 1992, COMMUN ACM, V35, P90, DOI 10.1145/129852.129860
   ZETTEL J, 2003, THESIS U KAISERSLAUT, V13
   ZETTEL J, 2001, 01401E IESE
NR 49
TC 3
Z9 3
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2005
VL 10
IS 3
BP 367
EP 394
DI 10.1007/s10664-005-1287-5
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 936ZU
UT WOS:000229895100005
DA 2024-07-18
ER

PT J
AU Molokken-Ostvold, K
   Jorgensen, M
AF Molokken-Ostvold, K
   Jorgensen, M
TI Group processes in software effort estimation
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT Joint Conference of the
   Evaluation-and-Assessment-in-Software-Engineering
   (EASE)/Psychology-of-Programming-Interest-Group (PPIG)
CY APR, 2003
CL Keele Univ, Keele, ENGLAND
SP Evaluat & Assessment Software Engn, Psychol Programming Interest Grp
HO Keele Univ
DE software development; effort estimation; expert judgment; group
   processes; expert bias
ID DECISION-MAKING; PERFORMANCE; RISK
AB The effort required to complete software projects is often estimated, completely or partially, using the judgment of experts, whose assessment may be biased. In general, such bias as there is seems to be towards estimates that are overly optimistic. The degree of bias varies from expert to expert, and seems to depend on both Conscious and unconscious processes. One possible approach to reduce this bias towards over-optimism is to combine the judgments of several experts. This paper describes ail experiment in which experts with different backgrounds combined their estimates in group discussion. First, 20 software professionals were asked to provide individual estimates of the effort required for a software development project. Subsequently, they formed five estimation groups, each consisting of four experts. Each of these groups agreed oil a project effort estimate via the pooling of knowledge in discussion. We found that the groups submitted less optimistic estimates than the individuals. Interestingly, the group discussion-based estimates were closer to the effort expended on the actual project than the average of the individual expert estimates were, i.e., the group discussions led to better estimates than a mechanical averaging of the individual estimates. The groups' ability to identify a greater number of the activities required by the project is among the possible explanations for this reduction of bias.
C1 Simula Res Lab, Software Engn Dept, N-1325 Lysaker, Norway.
RP Simula Res Lab, Software Engn Dept, N-1325 Lysaker, Norway.
EM kjetilmo@simula.no; magnej@simula.no
RI Jorgensen, Magne/H-4402-2016
CR ADAMS S, 2002, DILBERT WAY WEASEL
   Amstrong J.Scott., 2001, PRINCIPLES FORECASTI
   [Anonymous], P 4 WWW10 WORKSH WEB
   [Anonymous], EUR J INF SYST
   Aronson E., 1999, Social psychology, V3rd
   Atkinson R.L., 1996, Hilgard's Introduction to Psychology, V12
   BEM DJ, 1965, J PERS SOC PSYCHOL, V1, P453, DOI 10.1037/h0021803
   BOEHM BW, 1984, IEEE T SOFTWARE ENG, V10, P4, DOI 10.1109/TSE.1984.5010193
   Boehm BW., 2000, SOFTWARE COST ESTIMA, VII
   Boehm BW., 1981, Software Engineering Economics
   BROWN R., 1988, Group processes
   COHEN J., 1969, Statistical power analysis
   CROMWELL PF, 1991, PSYCHOL REP, V69, P579, DOI 10.2466/PR0.69.6.579-588
   DEMARCO T, 1982, CONTROLLING SOFTWARE
   Fairley D, 2002, IEEE SOFTWARE, V19, P61, DOI 10.1109/MS.2002.1049392
   Fenton N., 1995, SOFTWARE METRICS, Vsecond
   FISCHER GW, 1981, ORGAN BEHAV HUM PERF, V28, P96, DOI 10.1016/0030-5073(81)90017-9
   Forsyth D.R., 1999, GROUP DYNAMICS, VThird
   GRAY A, 1999, 6 INT SOFTW METR S I, P216
   Helmer O., 1966, SOCIAL TECHNOLOGY
   Hewstone M., 1996, Introduction to social psychology: a european perspective
   HIHN J, 1991, 13TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P276, DOI 10.1109/ICSE.1991.130653
   Hill J., 2000, International Journal of Project Management, V18, P13, DOI 10.1016/S0263-7863(98)00062-3
   Host M, 1998, PROC INT CONF SOFTW, P332, DOI 10.1109/ICSE.1998.671386
   Hughes RT, 1996, INFORM SOFTWARE TECH, V38, P67, DOI 10.1016/0950-5849(95)01045-9
   Humphrey W.S., 1990, MANAGING SOFTWARE PR
   Jorgensen M, 2004, J SYST SOFTWARE, V70, P37, DOI 10.1016/S0164-1212(02)00156-5
   JORGENSEN M, 1997, NORW INF C VOSS NORW, P7
   Jorgensen M., 2003, Proc. of Conference on Empirical Assessment in Software Engineering, P117
   JORGENSEN M, 2002, 14 IEEE C SOFTW ENG, P425
   KERNAGHAN JA, 1990, IEEE T ENG MANAGE, V37, P109, DOI 10.1109/17.53713
   Kitchenham B, 2002, J SYST SOFTWARE, V64, P57, DOI 10.1016/S0164-1212(02)00021-3
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kitchenham BarbaraA., 1996, Software metrics: measurement for software process improvement
   LEDERER AL, 1993, J INF TECHNOL-UK, V8, P22, DOI 10.1057/jit.1993.4
   Liden RC, 1999, J APPL PSYCHOL, V84, P835, DOI 10.1037/0021-9010.84.6.835
   MOLOKKENOSTVOLD K, 2003, 2003 ACM IEEE INT S, P220
   Moses J, 2000, P INT COMP SOFTW APP, V24, P522, DOI 10.1109/CMPSAC.2000.884776
   PAYNTER J, 1996, INT C SOFTW ENG ED P, P150
   Reifer DJ, 2000, IEEE SOFTWARE, V17, P57, DOI 10.1109/52.895169
   Rowe G, 2001, INT SER OPER RES MAN, V30, P125, DOI 10.1007/978-0-306-47630-3_7
   Shepperd M, 1996, PROC INT CONF SOFTW, P170, DOI 10.1109/ICSE.1996.493413
   Stoner J.A.F., 1961, COMP INDIVIDUAL GROU
   TAFF LM, 1991, IEEE T SOFTWARE ENG, V17, P839, DOI 10.1109/32.83918
   Thomsett R., 1996, American Programmer, V9, P16
   WALLACH MA, 1964, J ABNORM SOC PSYCH, V68, P263, DOI 10.1037/h0042190
   WIEGERS KE, 2000, SOFTWARE DEV MAG FEB
   WINKLER RL, 1989, INT J FORECASTING, V5, P605, DOI 10.1016/0169-2070(89)90018-6
   Wonnacott TH., 1990, INTRO STAT
   ZUBER JA, 1992, J PERS SOC PSYCHOL, V62, P50, DOI 10.1037/0022-3514.62.1.50
NR 50
TC 37
Z9 38
U1 3
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2004
VL 9
IS 4
BP 315
EP 334
DI 10.1023/B:EMSE.0000039882.39206.5a
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 863NR
UT WOS:000224569200004
DA 2024-07-18
ER

PT J
AU Asare, O
   Nagappan, M
   Asokan, N
AF Asare, Owura
   Nagappan, Meiyappan
   Asokan, N.
TI Is GitHub's Copilot as bad as humans at introducing vulnerabilities in
   code?
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE copilot; code security; software engineering; language models
AB Several advances in deep learning have been successfully applied to the software development process. Of recent interest is the use of neural language models to build tools, such as Copilot, that assist in writing code. In this paper we perform a comparative empirical analysis of Copilot-generated code from a security perspective. The aim of this study is to determine if Copilot is as bad as human developers. We investigate whether Copilot is just as likely to introduce the same software vulnerabilities as human developers. Using a dataset of C/C++ vulnerabilities, we prompt Copilot to generate suggestions in scenarios that led to the introduction of vulnerabilities by human developers. The suggestions are inspected and categorized in a 2-stage process based on whether the original vulnerability or fix is reintroduced. We find that Copilot replicates the original vulnerable code about 33% of the time while replicating the fixed code at a 25% rate. However this behaviour is not consistent: Copilot is more likely to introduce some types of vulnerabilities than others and is also more likely to generate vulnerable code in response to prompts that correspond to older vulnerabilities. Overall, given that in a significant number of cases it did not replicate the vulnerabilities previously introduced by human developers, we conclude that Copilot, despite performing differently across various vulnerability types, is not as bad as human developers at introducing vulnerabilities in code.
C1 [Asare, Owura; Nagappan, Meiyappan; Asokan, N.] Univ Waterloo, Cheriton Sch Comp Sci, Waterloo, ON N2L 3G1, Canada.
C3 University of Waterloo
RP Asare, O (corresponding author), Univ Waterloo, Cheriton Sch Comp Sci, Waterloo, ON N2L 3G1, Canada.
EM oasare@uwaterloo.ca; mei.nagappan@uwaterloo.ca; asokan@acm.org
RI Asokan, N./D-3182-2012
CR [Anonymous], 2016, P COLING 2016 26 INT
   [Anonymous], 2016, P 25 INT JOINT C ART
   Asare O., 2022, Is GitHub's Copilot as Bad as Humans at Introducing Vulnerabilities in Code?
   Brown TB, 2020, Arxiv, DOI [arXiv:2005.14165, DOI 10.48550/ARXIV.2005.14165]
   Barke S, 2022, Arxiv, DOI arXiv:2206.15000
   Bengio Y, 2001, ADV NEUR IN, V13, P932
   Bielik P, 2016, PR MACH LEARN RES, V48
   Chakraborty S, 2022, IEEE T SOFTWARE ENG, V48, P3280, DOI 10.1109/TSE.2021.3087402
   Chen D., 2014, P 2014 C EMPIRICAL M, P740, DOI DOI 10.3115/V1/D14-1082
   Chen Mark, 2021, arXiv, DOI DOI 10.48550/ARXIV.2107.03374
   Ciniselli Matteo, 2022, arXiv
   Desai A., 2022, Introducing Amazon CodeWhisperer, the ML-powered Coding Companion | AWS Machine Learning Blog
   Devlin J, 2019, Arxiv, DOI arXiv:1810.04805
   Dohmke Thomas, 2022, Github copilot is generally available to all developers
   Fan JH, 2020, IEEE WORK CONF MIN S, P508, DOI 10.1145/3379597.3387501
   Feng ZY, 2020, Arxiv, DOI [arXiv:2002.08155, 10.48550/arXiv.2002.08155]
   Galassi A, 2021, IEEE T NEUR NET LEAR, V32, P4291, DOI 10.1109/TNNLS.2020.3019893
   GitHub Inc, 2019, CodeQL
   GitHub Inc, 2021, GitHub Copilot Your AI pair programmer
   Hellendoorn VJ, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P763, DOI 10.1145/3106237.3106290
   Hindle A, 2012, PROC INT CONF SOFTW, P837, DOI 10.1109/ICSE.2012.6227135
   Hochreiter S, 1997, NEURAL COMPUT, V9, P1735, DOI [10.1162/neco.1997.9.1.1, 10.1007/978-3-642-24797-2]
   Jiang N, 2021, PROC INT CONF SOFTW, P1161, DOI 10.1109/ICSE43902.2021.00107
   Le THM, 2020, ACM COMPUT SURV, V53, DOI 10.1145/3383458
   Li YJ, 2022, SCIENCE, V378, P1092, DOI 10.1126/science.abq1158
   Lu S, 2021, Arxiv, DOI arXiv:2102.04664
   Dakhel AM, 2022, Arxiv, DOI [arXiv:2206.15331, DOI 10.48550/ARXIV.2206.15331]
   Nguyen N, 2022, IEEE WORK CONF MIN S, P1, DOI 10.1145/3524842.3528470
   Nijkamp E., 2022, ARXIV
   Pearce H, 2023, P IEEE S SECUR PRIV, P2339, DOI 10.1109/SP46215.2023.10179420
   Pearce H, 2022, P IEEE S SECUR PRIV, P754, DOI 10.1109/SP46214.2022.00057
   Prenner JA, 2022, INTERNATIONAL WORKSHOP ON AUTOMATED PROGRAM REPAIR (APR 2022), P69, DOI 10.1145/3524459.3527351
   Raychev V, 2014, ACM SIGPLAN NOTICES, V49, P419, DOI [10.1145/2594291.2594321, 10.1145/2666356.2594321]
   Sobania D, 2022, PROCEEDINGS OF THE 2022 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE (GECCO'22), P1019, DOI 10.1145/3512290.3528700
   Svyatkovskiy A, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1433, DOI 10.1145/3368089.3417058
   Synopsys, 2022, Technical report
   Tabnine, 2022, Code faster with AI completions | TabNine
   Vaithilingam Priyan, 2022, CHI C HUM FACT COMP, P1
   Vaswani A, 2017, ADV NEUR IN, V30
   Xu Frank F., 2022, MAPS 2022: Proceedings of the 6th ACM SIGPLAN International Symposium on Machine Programming, P1, DOI 10.1145/3520312.3534862
   Yan W., 2022, arXiv
   Yin Pengcheng, 2017, arXiv
   Zhang J., 2022, Repairing bugs in Python assignments using large language model
   Zhou J., 2016, T ASS COMPUT LING, V4, P371, DOI [DOI 10.1162/TACL_A_00105, 10.1162/tacl_a_00105]
   Ziegler Albert, 2022, MAPS 2022: Proceedings of the 6th ACM SIGPLAN International Symposium on Machine Programming, P21, DOI 10.1145/3520312.3534864
NR 45
TC 5
Z9 5
U1 4
U2 12
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2023
VL 28
IS 6
AR 129
DI 10.1007/s10664-023-10380-1
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA T2GY4
UT WOS:001076229600001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Wen, M
   Wang, YC
   Xia, YF
   Jin, H
AF Wen, Ming
   Wang, Yongcong
   Xia, Yifan
   Jin, Hai
TI Evaluating seed selection for fuzzing JavaScript engines
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Fuzzing; JavaScript engines; Seed selection; Empirical study
ID CONTINUAL PREDICTION; FORGET
AB JavaScript (JS), as a platform-independent programming language, remains to be the most popular language over the years. However, popular JavaScript engines that have been widely utilized by web browsers to interpret JS code, have become the most common targets for attackers. Thus ensuring the security and reliability of JS engines is significant. Fuzzing is a simple yet effective method to unveil vulnerabilities. However, existing JS fuzzers focus more on the design of effective mutation mechanisms to generate diverse and valid seeds while they often ignore the importance of the initial seed corpus selected to drive the fuzzing process. In this paper, we performed extensive experiments to systematically evaluate the impact of seed selection on fuzzing JavaScript engines. In particular, we investigate seed selections from three main dimensions, their collected sources (e.g., CVE PoCs, Regression tests, etc.), the number and sizes, as well as a set of concerned code properties. Our major findings reveal that seeds collected from different sources can cast a significant impact on the fuzzing effectiveness (i.e., CVE PoC is significantly better than the other types of seeds), and seed files containing those concerned code structures can lead existing fuzzers to achieve superior results in terms of both code coverage and unique crashes identified. Inspired by our observations, we devised a simple heuristic to prioritize JavaScript files when selecting seed corpus. Our experiments show that when driven by our selected seed corpus, the existing state-of-art fuzzer is able to achieve significantly higher code coverage and identify more crashes.
C1 [Wen, Ming; Wang, Yongcong; Jin, Hai] Natl Engn Res Ctr Big Data Technol & Syst, Serv Comp Technol & Syst Lab,Cluster & Grid Comp L, Hubei Key Lab Distributed Syst Secur, Hubei Engn Res Ctr Big Data Secur, Wuhan, Peoples R China.
   [Wen, Ming; Wang, Yongcong] Huazhong Univ Sci & Technol, Sch Cyber Sci & Engn, Wuhan, Peoples R China.
   [Xia, Yifan] Zhejiang Univ, Hangzhou, Peoples R China.
   [Jin, Hai] Huazhong Univ Sci & Technol, Sch Comp Sci & Technol, Wuhan, Peoples R China.
C3 Huazhong University of Science & Technology; Zhejiang University;
   Huazhong University of Science & Technology
RP Wen, M (corresponding author), Natl Engn Res Ctr Big Data Technol & Syst, Serv Comp Technol & Syst Lab,Cluster & Grid Comp L, Hubei Key Lab Distributed Syst Secur, Hubei Engn Res Ctr Big Data Secur, Wuhan, Peoples R China.; Wen, M (corresponding author), Huazhong Univ Sci & Technol, Sch Cyber Sci & Engn, Wuhan, Peoples R China.
EM mwenaa@hust.edu.cn; m202071390@hust.edu.cn; yfxia@zju.edu.cn;
   hjin@hust.edu.cn
RI Wen, Ming/AEJ-8029-2022; Yi Fan, Xia/GLT-9415-2022; Zhang,
   Can/JUU-9511-2023; chen, shuo bing/KHV-7129-2024; zhang,
   can/KHC-5357-2024; Liu, Yining/KHC-6217-2024; wang, jiaqi/KHC-5900-2024
OI Liu, Yining/0000-0002-2218-2349; 
FU We sincerely thank the editor for his/her help in reviewing this paper
   and all anonymous reviewers for their valuable comments. This work was
   supported by the National Natural Science Foundation of China (Grant No.
   62002125) as well as the Young Elite Scie [62002125]; National Natural
   Science Foundation of China [2021QNRC001]; Young Elite Scientists
   Sponsorship Program by CAST
FX We sincerely thank the editor for his/her help in reviewing this paper
   and all anonymous reviewers for their valuable comments. This work was
   supported by the National Natural Science Foundation of China (Grant No.
   62002125) as well as the Young Elite Scientists Sponsorship Program by
   CAST (Grant No. 2021QNRC001)
CR [Anonymous], 1997, Official Ecmascript Conformance Test Suite
   [Anonymous], 2019, A collection of javascript engine cves with pocs
   [Anonymous], 2021, Language Ranking
   Apple Javascriptcore, 2014, The Built-in Javascript Engine for Webkit
   Aschermann C, 2019, 26TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2019), DOI 10.14722/ndss.2019.23412
   Athanasakis M, 2015, 22ND ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2015), DOI 10.14722/ndss.2015.23209
   Böhme M, 2019, IEEE T SOFTWARE ENG, V45, P489, DOI 10.1109/TSE.2017.2785841
   Chen Yongheng, 2021, P 42 IEEE S SEC PRIV
   Cummins C, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P95, DOI 10.1145/3213846.3213848
   Ecma, 2019, standard ecma-262
   Gers FA, 2000, NEURAL COMPUT, V12, P2451, DOI 10.1162/089976600300015015
   Gers FA, 1999, IEE CONF PUBL, P850, DOI [10.1049/cp:19991218, 10.1162/089976600300015015]
   Godefroid P, 2017, IEEE INT CONF AUTOM, P50, DOI 10.1109/ASE.2017.8115618
   Han H, 2019, 26TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2019), DOI 10.14722/ndss.2019.23263
   He XY, 2021, CCS '21: PROCEEDINGS OF THE 2021 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2229, DOI 10.1145/3460120.3484823
   Herrera A, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P230, DOI 10.1145/3460319.3464795
   Hochreiter S, 1997, NEURAL COMPUT, V9, P1735, DOI [10.1162/neco.1997.9.1.1, 10.1007/978-3-642-24797-2]
   Holler Christian, 2012, P 21 USENIX C SEC S, P445
   Klees G, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P2123, DOI 10.1145/3243734.3243804
   Lee S, 2020, PROCEEDINGS OF THE 29TH USENIX SECURITY SYMPOSIUM, P2613
   Lemieux C, 2018, IEEE INT CONF AUTOM, P475, DOI 10.1145/3238147.3238176
   LLVM Project, 2015, Libfuzzer
   Lyu CY, 2019, PROCEEDINGS OF THE 28TH USENIX SECURITY SYMPOSIUM, P1949
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Molinyawe M, 2016, P BLACK HAT US
   Patra J, 2016, LEARNING FUZZ APPL I
   Pham V, 2021, IEEE T SOFTWARE ENG, V47, P1980, DOI 10.1109/TSE.2019.2941681
   Pham VT, 2019, IEEE Trans Softw Eng, V47, P1980
   Radford A., 2019, LANGUAGE MODELS ARE
   Raychev V, 2016, ACM SIGPLAN NOTICES, V51, P761, DOI 10.1145/2914770.2837671
   Reddy S, 2020, PROC INT CONF SOFTW, P1410, DOI 10.1145/3377811.3380399
   Rohlf C, 2011, Attacking clientside JIT compilers
   Romano A, 2021, Wobfuscator: Obfuscating javascript malware via opportunistic translation to webassembly
   Swiecki R., 2016, Honggfuzz
   The React.js Library, 2013, ABOUT US
   Theori INC, 2019, pwn.js
   Veggalam S, 2016, LECT NOTES COMPUT SC, V9878, P581, DOI 10.1007/978-3-319-45744-4_29
   Wang JJ, 2017, P IEEE S SECUR PRIV, P579, DOI 10.1109/SP.2017.23
   Wang JJ, 2019, PROC INT CONF SOFTW, P724, DOI 10.1109/ICSE.2019.00081
   Ye GX, 2021, PROCEEDINGS OF THE 42ND ACM SIGPLAN INTERNATIONAL CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '21), P435, DOI 10.1145/3453483.3454054
NR 40
TC 0
Z9 0
U1 1
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2023
VL 28
IS 6
AR 133
DI 10.1007/s10664-023-10340-9
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA S8MV9
UT WOS:001073664300001
DA 2024-07-18
ER

PT J
AU Zimmermann, T
   Falleri, JR
AF Zimmermann, Theo
   Falleri, Jean-Remy
TI A grounded theory of community package maintenance organizations
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Grounded theory; Package ecosystem; Software maintenance; Collaborative
   maintenance; Open source software; Open source maintainers; Open source
   communities; Software libraries
AB In many programming language ecosystems, developers rely more and more on external open source dependencies, made available through package managers. Key ecosystem packages that go unmaintained create a health risk for the projects that depend on them and for the ecosystem as a whole. Therefore, community initiatives can emerge to alleviate the problem by adopting packages in need of maintenance. The goal of our study is to explore such community initiatives, that we will designate from now on as Community Package Maintenance Organizations (CPMOs) and to build a theory of how and why they emerge, how they function and their impact on the surrounding ecosystems. To achieve this, we use a qualitative methodology called Grounded Theory. We have applied this methodology in two steps. First, on "extant" documents (documentation, discussions on public forums) originating from several CPMOs. From this data, we have built a theory of CPMOs, which we have then refined through interviews and reliability checks with CPMO participants. Our theory can inform developers willing to launch a CPMO in their own ecosystem and help current CPMO participants to better understand the state of the practice and what they could do better. It is a basis on which future research can be done on how to help open source ecosystems improve the maintenance status of their most important packages.
C1 [Zimmermann, Theo] Inst Polytech Paris, LTCI, Telecom Paris, Paris, France.
   [Falleri, Jean-Remy] Univ Bordeaux, CNRS, Inst Univ France, Bordeaux INP,LaBRI,UMR 5800, F-33400 Talence, France.
C3 IMT - Institut Mines-Telecom; Institut Polytechnique de Paris; Telecom
   Paris; Institut Universitaire de France; Universite de Bordeaux; Centre
   National de la Recherche Scientifique (CNRS)
RP Zimmermann, T (corresponding author), Inst Polytech Paris, LTCI, Telecom Paris, Paris, France.
EM theo.zimmermann@telecom-paris.fr; falleri@labri.fr
OI Zimmermann, Theo/0000-0002-3580-8806
CR Avelino G., 2015, WHAT IS TRUCK FACTOR
   Avelino G, 2019, Arxiv, DOI arXiv:1906.08058
   Avelino Guilherme, 2016, Proceedings of IEEE 24th International Conference on Program Comprehension (ICPC), P1
   Baltes S, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962628
   Boender Jaap, 2008, 2008 IEEE 32nd International Computer Software and Applications Conference (COMPSAC), P1240, DOI 10.1109/COMPSAC.2008.226
   Izquierdo JLC, 2018, PROC INT CONF SOFTW, P3, DOI 10.1145/3183428.3183438
   Champion K, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P388, DOI 10.1109/SANER50967.2021.00043
   Charmaz K., 2006, CONSTRUCTING GROUNDE, DOI DOI 10.7748/NR.13.4.84.S4
   Decan A, 2019, EMPIR SOFTW ENG, V24, P381, DOI 10.1007/s10664-017-9589-y
   Dubé L, 2005, J ORGAN CHANGE MANAG, V18, P145, DOI 10.1108/09534810510589570
   Gardler R., 2013, Meritocratic Governance Model
   German D. M., 2003, Software Process Improvement and Practice, V8, P201, DOI 10.1002/spip.189
   Jergensen C., 2011, P 19 ACM SIGSOFT S 1, P70
   Klug D, 2018, OPEN SOURCE IS A CHA
   Kogut B, 2001, OXFORD REV ECON POL, V17, P248, DOI 10.1093/oxrep/17.2.248
   Michlmayr M, 2021, GROWING OPEN SOURC, V67
   Muller MJ, 2012, HUM FACTORS ERGON, P1003
   Pawelzik R, 2014, GOVERNANCE MODELS ON, DOI [10.13140/2.1.3345.1524, DOI 10.13140/2.1.3345.1524]
   Rajlich VT, 2000, COMPUTER, V33, P66, DOI 10.1109/2.869374
   Ralph N, 2014, SAGE OPEN, V4, DOI 10.1177/2158244014552425
   Raymond Eric, 1999, KNOWLEDGE TECHNOLOGY, V12, P23, DOI DOI 10.1007/S12130-999-1026-0
   Riehle D., 2012, Open source systems: Long-term sustainability, P15, DOI DOI 10.1007/978-3-642-33442-9_
   Robles G, 2005, EVOLUTION VOLUNTEE, V8
   Robson N, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P986, DOI 10.1145/3236024.3275441
   Sadowski BM, 2008, INF ECON POLICY, V20, P323, DOI 10.1016/j.infoecopol.2008.05.001
   Singh V, 2022, SOFTWARE QUAL J, V30, P581, DOI 10.1007/s11219-020-09543-w
   Steinmacher I, 2015, PROCEEDINGS OF THE 2015 ACM INTERNATIONAL CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING (CSCW'15), P1379, DOI 10.1145/2675133.2675215
   Stol KJ, 2016, PROC INT CONF SOFTW, P120, DOI 10.1145/2884781.2884833
   Tourani P, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P24, DOI 10.1109/SANER.2017.7884606
   Wenger E., 1998, Communities of practice: learning, meaning, and identity, DOI [10.1017/CBO9780511803932, DOI 10.1017/CBO9780511803932]
   Wiener C., 2007, Making Teams Work in Conducting Grounded Theory, P292, DOI [10.4135/ 9781848607941, DOI 10.4135/9781848607941]
   Zhou SR, 2020, PROC INT CONF SOFTW, P445, DOI 10.1145/3377811.3380412
   Zhou SR, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P350, DOI 10.1145/3338906.3338918
   Zimmermann T, 2020, P IEEE ACM 42 INT C, P711, DOI 10.1145/3387940.3392209
   Zimmermann T, 2019, THESIS U PARIS
   Zimmermann T, 2021, ARXIV
NR 36
TC 0
Z9 0
U1 0
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2023
VL 28
IS 4
AR 101
DI 10.1007/s10664-023-10337-4
PG 40
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA L7KA0
UT WOS:001024999000001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Bhatia, A
   Eghan, EE
   Grichi, M
   Cavanagh, WG
   Jiang, ZM
   Adams, B
AF Bhatia, Aaditya
   Eghan, Ellis E.
   Grichi, Manel
   Cavanagh, William G.
   Jiang, Zhen Ming (Jack)
   Adams, Bram
TI Towards a change taxonomy for machine learning pipelines Empirical study
   of ML pipelines and forks related to academic publications
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Machine learning; Change taxonomy; GitHub collaborations; Contribution
   management
AB Machine Learning (ML) academic publications commonly provide open-source implementations on GitHub, allowing their audience to replicate, validate, or even extend the ML algorithms, data sets and metadata. However, thus far little is known about the degree of collaboration activity happening on such ML research repositories, in particular regarding (1) the degree to which such repositories receive contributions from forks, (2) the nature of such contributions (i.e., the types of changes), and (3) the nature of changes that are not contributed back to forks, which might represent missed opportunities. In this paper, we empirically study contributions to 1,346 ML research repositories and their 67,369 forks, both quantitatively and qualitatively, by building on Hindle et al.'s seminal taxonomy of code changes. We found that while ML research repositories are heavily forked, only 9% of the forks made modifications to the forked repository. 42% of the latter sent changes to the parent repositories, half of which (52%) were accepted by the parent repositories. Our qualitative analysis on 539 contributed and 378 local (fork-only) changes extends Hindle et al.'s taxonomy with two new top-level change categories related to ML (Data and Dependency Management), and 16 new sub-categories, including nine ML-specific ones (input data, parameter tuning, pre-processing, training infrastructure, model structure, pipeline performance, sharing, validation infrastructure, and output data). While the changes that are not contributed back by the forks mostly concern domain-specific features and local experimentation (e.g., parameter tuning), the origin repositories do miss out on a non-trivial 15.4% of Documentation changes, 13.6% of Feature changes and 11.4% of Bug fix changes.
C1 [Bhatia, Aaditya; Adams, Bram] Queens Univ, Kingston, ON, Canada.
   [Eghan, Ellis E.] Univ Cape Coast, Cape Coast, Ghana.
   [Grichi, Manel] VibroSyst Inc, Montreal, PQ, Canada.
   [Cavanagh, William G.] Polytech Montreal, Montreal, PQ, Canada.
   [Jiang, Zhen Ming (Jack)] York Univ, Toronto, ON, Canada.
C3 Queens University - Canada; University of Cape Coast; Universite de
   Montreal; Polytechnique Montreal; York University - Canada
RP Bhatia, A (corresponding author), Queens Univ, Kingston, ON, Canada.
EM aaditya.bhatia@queensu.ca; elliseghan@gmail.com; grichimanel@gmail.com;
   william.glazer-cavanagh@polymtl.ca; zmjiang@cse.yorku.ca;
   bram.adams@queensu.ca
OI Bhatia, Aaditya/0000-0002-3552-9460
CR Amershi S, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P291, DOI 10.1109/ICSE-SEIP.2019.00042
   [Anonymous], 2018, SHARING EXAMPLE
   [Anonymous], 2017, INTERNAL DOCUMENTATI
   [Anonymous], 2017, INPUT DATA EXAMPLE
   [Anonymous], 2014, Proceedings of the 5th International Workshop on Emerging Trends in Software Metrics, WETSoM 2014, DOI [10.1145/2593868.2593875, DOI 10.1145/2593868.2593875]
   [Anonymous], 2017, BUG FIX EXAMPLE 2
   [Anonymous], 2019, BUG FIX EXAMPLE 1
   [Anonymous], 2018, PIPELINE PERFORMANCE
   [Anonymous], 2016, SHARING EXAMPLE
   [Anonymous], 2017, VALIDATION EXAMPLE
   [Anonymous], 2018, PREPROCESSING EXAMPL
   [Anonymous], 2018, ADDING AUTOGENERATED
   [Anonymous], 2018, MODEL STRUCTURE EXAM
   [Anonymous], 2017, TRAINING INFRASTRUCT
   [Anonymous], 2017, CHANGE FILE PERMISSI
   [Anonymous], 2017, PARAMETER TUNING EXA
   [Anonymous], 2017, PROJECT DATA EXAMPLE
   [Anonymous], 2018, OUTPUT DATA EXAMPLE
   [Anonymous], 2019, ADDING REMOVING DEPE
   [Anonymous], 2018, UPDATE DEPENDENCY EX
   [Anonymous], 2017, EXTERNAL DOCUMENTATI
   [Anonymous], 2018, POINTCNN COMMIT
   Arpteg A, 2018, EUROMICRO CONF PROC, P50, DOI 10.1109/SEAA.2018.00018
   Benestad HC, 2009, J SOFTW MAINT EVOL-R, V21, P349, DOI 10.1002/smr.412
   Bird C, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P121, DOI 10.1145/1595696.1595716
   Bissyandé TF, 2013, EUR CON SFTWR MTNCE, P89, DOI 10.1109/CSMR.2013.19
   Bloice MD, 2016, LECT NOTES COMPUT SC, V9605, P435, DOI 10.1007/978-3-319-50478-0_22
   Borges H, 2018, J SYST SOFTWARE, V146, P112, DOI 10.1016/j.jss.2018.09.016
   Brisson S, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P59, DOI [10.1109/SANER48275.2020.9054834, 10.1109/saner48275.2020.9054834]
   Chen Z., 2022, P 30 ACM JOINT EUR S
   Cheng DW, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2018), P313, DOI 10.1109/QRS.2018.00044
   Cheung S.-C., 2011, P 19 ACM SIGSOFT S 1, P15
   Constantino K, 2020, INT CONF GLOBAL SOFT, P55, DOI 10.1145/3372787.3390442
   Decan A, 2019, EMPIR SOFTW ENG, V24, P381, DOI 10.1007/s10664-017-9589-y
   Dey T, 2020, Arxiv, DOI arXiv:2003.01153
   Dwarakanath A, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P118, DOI 10.1145/3213846.3213858
   Fan YR, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09916-6
   Faragó C, 2014, LECT NOTES COMPUT SC, V8583, P353, DOI 10.1007/978-3-319-09156-3_26
   Cortés-Coy LF, 2014, IEEE INT WORK C SO, P275, DOI 10.1109/SCAM.2014.14
   Fogel Karl, 2005, Producing Open Source Software: How to Run a Successful Free Software Project, V1st
   German DM, 2016, EMPIR SOFTW ENG, V21, P260, DOI 10.1007/s10664-014-9356-2
   Ghadhab L, 2021, AUGMENTING COMMIT CL, V135
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   Granger B., 2021, PREPRINT
   Hindle A, 2009, INT C PROGRAM COMPRE, P30, DOI 10.1109/ICPC.2009.5090025
   Hindle Abram, 2008, P 2008 INT WORKING C, P99
   Hu Y, 2016, SPRINGERPLUS, V5, DOI 10.1186/s40064-016-2897-7
   Idowu S, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2021), P51, DOI 10.1109/ICSE-SEIP52600.2021.00014
   Kalliamvakou E., 2014, P 11 WORKING C MININ, P92, DOI DOI 10.1145/2597073.2597074
   Kim M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P151, DOI 10.1145/1985793.1985815
   Krippendorff Klaus, 2011, COMPUTING KRIPPENDOR, DOI DOI 10.1002/9781405186407.WBIECR029
   Li H, 2021, IEEE T SOFTWARE ENG, V47, P2858, DOI 10.1109/TSE.2020.2970422
   Lima A., 2014, 8 INT AAAI C WEBLOGS
   Martínez-Fernandez S, 2021, Arxiv, DOI arXiv:2105.01984
   Mukherjee S, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P439, DOI 10.1145/3460319.3464797
   Nahar N, 2022, PROC INT CONF SOFTW, P413, DOI 10.1145/3510003.3510209
   Ng A., 2021, MLOPS MODEL CENTRIC
   OLeary K., 2020, COMMON PROBLEMS CREA
   Ozkaya I, 2020, IEEE SOFTWARE, V37, P3, DOI 10.1109/MS.2020.2993662
   Pashchenko I, 2020, CCS '20: PROCEEDINGS OF THE 2020 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1513, DOI 10.1145/3372297.3417232
   Polyzotis N, 2018, SIGMOD REC, V47, P17, DOI 10.1145/3299887.3299891
   Rahman M. M, 2014, P 11 WORK C MIN SOFT, P364, DOI DOI 10.1145/2597073.2597121
   Ren LY, 2018, PROC IEEE ACM INT C, P179, DOI 10.1145/3183440.3195085
   Salza P, 2018, INT C PROGRAM COMPRE, P255, DOI 10.1145/3196321.3196341
   Sambasivan Nithya, 2021, CHI '21: Proceedings of the 2021 CHI Conference on Human Factors in Computing Systems, DOI 10.1145/3411764.3445518
   Santos J.A.M., 2015, 12 WORKSHOP EXPT SOF, P488
   Sato D., 2019, Continuous delivery for machine learning: Automating the end-to-end lifecycle of machine learning applications
   Shivaji S, 2013, IEEE T SOFTWARE ENG, V39, P552, DOI 10.1109/TSE.2012.43
   Swanson E. B., 1976, 2nd International Conference on Software Engineering, P492
   Tizpaz-Niari Saeid, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P189, DOI 10.1145/3395363.3404540
   Wang JW, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2020), P53, DOI 10.1145/3377816.3381724
   Washizaki H, 2019, INT WORKSH EMPIR ENG, P49, DOI 10.1109/IWESEP49350.2019.00017
   Yan M, 2016, J SYST SOFTWARE, V113, P296, DOI 10.1016/j.jss.2015.12.019
   Zhang TY, 2019, PROC INT SYMP SOFTW, P104, DOI 10.1109/ISSRE.2019.00020
   Zhang X, 2018, PROC IEEE INT CONF S, P228, DOI 10.1109/ICSME.2018.00032
   Zhao YY, 2017, INFORM SOFTWARE TECH, V86, P37, DOI 10.1016/j.infsof.2017.02.003
   Zhou SR, 2020, PROC INT CONF SOFTW, P445, DOI 10.1145/3377811.3380412
   Zhou SR, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P350, DOI 10.1145/3338906.3338918
NR 78
TC 1
Z9 1
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2023
VL 28
IS 3
AR 60
DI 10.1007/s10664-022-10282-8
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA C4EF5
UT WOS:000961458800001
DA 2024-07-18
ER

PT J
AU Ehsan, O
   Khomh, F
   Zou, Y
   Qiu, D
AF Ehsan, Osama
   Khomh, Foutse
   Zou, Ying
   Qiu, Dong
TI Ranking code clones to support maintenance activities
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Code clones; Clone genealogies; Learning-to-rank; Regression approaches;
   Mixed-effect models; Clone evolutionary patterns
ID CLONING
AB Developers often reuse code fragments by copy-and-paste activities to speed up code delivery. Through this copy-and-paste process, they create duplicated code, also known as code clones. As the software system evolves, the number of clones can increase substantially and impact code quality negatively. Prior studies have shown that inconsistent changes on code clones can introduce bugs in a software system and clones that have experienced some specific evolutionary patterns being more at risk than others. As the number of clone copies increases in a software system. it becomes tedious and time-consuming for developers to track and maintain all code clones. Recent studies have proposed approaches to analyze the clone evolution history for better clone maintenance. However, these approaches do not provide a specified list of code clones at a granular level (i.e., commits) that can help developers prioritize their clone maintenance activities. It is important to track the code clone changes at the commit level, as developers can fix/refactor code clones early. In this paper, we leverage machine learning to develop clone ranking models that can help developers identify the most risky clones early on. Specifically, we detect clones from 52 projects (34 Java and 18 C) that have 534,672 commits and build 469,239 clone genealogies. We extract 28 features capturing the characteristics of code clones at commit level. We then train learning-to-rank (LtR), classification, and regression machine learning models to rank the code clones based on fault occurrence during their evolutionary history. Our comparison of machine learning approaches indicates that classification (for the probability of being faulty) and regression (for the proportion of faulty changes) perform well in ranking code clones. Multiple unique developers who change a code clone and the age of a code clone (in terms of the number of cloned code changes) have a significant effect on the risk of faults in the code clones. Our results can help developers identify the most risky code clones first and prioritize them for refactoring to prevent future faults.
C1 [Ehsan, Osama; Khomh, Foutse] Queens Univ, Dept Elect & Comp Engn, Kingston, ON, Canada.
   [Zou, Ying] Polytech Montreal, Montreal, PQ, Canada.
   [Qiu, Dong] Huawei Technol Co, Foshan, Guangdong, Peoples R China.
C3 Queens University - Canada; Universite de Montreal; Polytechnique
   Montreal; Huawei Technologies
RP Ehsan, O (corresponding author), Queens Univ, Dept Elect & Comp Engn, Kingston, ON, Canada.
EM osama.ehsan@queensu.ca; foutse.khomh@polymtl.ca; ying.zou@queensu.ca;
   qiudong624@huawei.com
RI Zou, Ying/KLC-9380-2024
CR [Anonymous], 2012, Proceedings of_the_21st_ACM_international_conference_on_Information_and_knowledge management
   [Anonymous], 2014, Synthesis_Lectures_on_Human_Language_Technologies
   [Anonymous], 2002, P INT WORKSH PRINC S
   Asaduzzaman M., 2011, IWSC, P77
   Avelino Guilherme, 2019, INT SYMP EMP SOFTWAR, P1, DOI DOI 10.1109/esem.2019.8870181
   Barbour L., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P273, DOI 10.1109/ICSM.2011.6080794
   Barbour L, 2018, SOFTWARE QUAL J, V26, P1187, DOI 10.1007/s11219-017-9375-5
   Bates D., 2011, R PACKAGE VERSION 09
   Berg K, 2018, LUCSEX201804
   Chen TQ, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P785, DOI 10.1145/2939672.2939785
   Cohen J., 2013, APPL MULTIPLE REGRES, DOI DOI 10.2307/2064799
   Cordy JR, 2011, CONF PROC INT SYMP C, P219, DOI 10.1109/ICPC.2011.26
   CS C, 2020, WHATTHEPATCH PYTHONS
   Dhaliwal SS, 2018, INFORMATION, V9, DOI 10.3390/info9070149
   Ehsan O, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3412378
   Fischer M, 2003, PROC IEEE INT CONF S, P23, DOI 10.1109/ICSM.2003.1235403
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Fox J., 2002, Bootstrapping regression models. An R and S-PLUS Companion to Applied Regression: A Web Appendix to the Book
   Garg R, 2014, 2014 RECENT ADVANCES IN ENGINEERING AND COMPUTATIONAL SCIENCES (RAECS)
   Göde N, 2009, EUR CON SFTWR MTNCE, P219, DOI 10.1109/CSMR.2009.20
   Goutte C, 2005, LECT NOTES COMPUT SC, V3408, P345
   HANLEY JA, 1982, RADIOLOGY, V143, P29, DOI 10.1148/radiology.143.1.7063747
   Hassan S, 2018, EMPIR SOFTW ENG, V23, P1275, DOI 10.1007/s10664-017-9538-9
   Herbold S, 2021, Arxiv, DOI arXiv:1911.08938
   Jr FEH, 2019, HARRELL MISCELLANEOU
   Juergens E, 2009, PROC INT CONF SOFTW, P485, DOI 10.1109/ICSE.2009.5070547
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kapser CJ, 2008, EMPIR SOFTW ENG, V13, P645, DOI 10.1007/s10664-008-9076-6
   Ke GL, 2017, ADV NEUR IN, V30
   Kouters E, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P592, DOI 10.1109/ICSM.2012.6405329
   LAFONTAINE F, 1986, ECON LETT, V21, P35, DOI 10.1016/0165-1765(86)90117-5
   Li JY, 2012, PROC INT CONF SOFTW, P310, DOI 10.1109/ICSE.2012.6227183
   Mondal M, 2017, PROC IEEE INT CONF S, P227, DOI 10.1109/ICSME.2017.33
   Mondelli M, 2017, IEEE WIREL COMMUNN
   Pan Q, 2020, J PHYS C SERIES, V1684
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Roy CK, 2009, PROC IEEE INT CONF S, P447, DOI 10.1109/ICSM.2009.5306301
   Saha R. K., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P293, DOI 10.1109/ICSM.2011.6080796
   Saha RK, 2013, IEEE WORK CONF MIN S, P139, DOI 10.1109/MSR.2013.6624021
   Schwarz N, 2012, PROC INT CONF SOFTW, P1289, DOI 10.1109/ICSE.2012.6227097
   Shepperd M, 2014, IEEE T SOFTWARE ENG, V40, P603, DOI 10.1109/TSE.2014.2322358
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Snijders T.A., 1999, J AM STAT ASSOC, V80, P13
   Svajlenko J, 2021, IEEE T SOFTWARE ENG, V47, P1060, DOI 10.1109/TSE.2019.2912962
   Svajlenko J, 2014, PROC IEEE INT CONF S, P321, DOI 10.1109/ICSME.2014.54
   Tang CF, 2020, SYMMETRY-BASEL, V12, DOI 10.3390/sym12091458
   Thongtanunam P, 2019, EMPIR SOFTW ENG, V24, P937, DOI 10.1007/s10664-018-9645-2
   Walthers J, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON DATA MINING WORKSHOP (ICDMW), P1710, DOI 10.1109/ICDMW.2015.246
   Wang S., 2017, IEEE T SERV COMPUT, P1
   Wang SW, 2018, EMPIR SOFTW ENG, V23, P1552, DOI 10.1007/s10664-017-9558-5
   Weisberg S, 2014, APPL LINEAR REGRESSI
   Wiese IS, 2016, PROC IEEE INT CONF S, P345, DOI 10.1109/ICSME.2016.13
   Xie S, 2013, IEEE WORK CONF MIN S, P149, DOI 10.1109/MSR.2013.6624022
   Yang B, 2020, 2020 IEEE 20TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY, AND SECURITY (QRS 2020), P168, DOI 10.1109/QRS51102.2020.00033
   Yang XX, 2015, IEEE T RELIAB, V64, P234, DOI 10.1109/TR.2014.2370891
   Zhang FL, 2017, J SYST SOFTWARE, V134, P105, DOI 10.1016/j.jss.2017.08.045
   Zhao GL, 2019, EMPIR SOFTW ENG, V24, P2140, DOI 10.1007/s10664-019-09696-8
NR 57
TC 2
Z9 2
U1 2
U2 10
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2023
VL 28
IS 3
AR 70
DI 10.1007/s10664-023-10292-0
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA E6LX9
UT WOS:000976646300001
DA 2024-07-18
ER

PT J
AU Falessi, D
   Laureani, SM
   Çarka, J
   Esposito, M
   da Costa, DA
AF Falessi, Davide
   Laureani, Simone Mesiano
   Carka, Jonida
   Esposito, Matteo
   da Costa, Daniel Alencar
TI Enhancing the defectiveness prediction of methods and classes via JIT
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Defect prediction; Accuracy metrics; Effort-aware metrics
ID SOFTWARE DEFECT PREDICTION; MODELS; CLASSIFICATION; VALIDATION; METRICS;
   FAULTS; PERFORMANCE; IMPACT
AB ContextDefect prediction can help at prioritizing testing tasks by, for instance, ranking a list of items (methods and classes) according to their likelihood to be defective. While many studies investigated how to predict the defectiveness of commits, methods, or classes separately, no study investigated how these predictions differ or benefit each other. Specifically, at the end of a release, before the code is shipped to production, testing can be aided by ranking methods or classes, and we do not know which of the two approaches is more accurate. Moreover, every commit touches one or more methods in one or more classes; hence, the likelihood of a method and a class being defective can be associated with the likelihood of the touching commits being defective. Thus, it is reasonable to assume that the accuracy of methods-defectiveness-predictions (MDP) and the class-defectiveness-predictions (CDP) are increased by leveraging commits-defectiveness-predictions (aka JIT).ObjectiveThe contribution of this paper is fourfold: (i) We compare methods and classes in terms of defectiveness and (ii) of accuracy in defectiveness prediction, (iii) we propose and evaluate a first and simple approach that leverages JIT to increase MDP accuracy and (iv) CDP accuracy.MethodWe analyse accuracy using two types of metrics (threshold-independent and effort-aware). We also use feature selection metrics, nine machine learning defect prediction classifiers, more than 2.000 defects related to 38 releases of nine open source projects from the Apache ecosystem. Our results are based on a ground truth with a total of 285,139 data points and 46 features among commits, methods and classes.ResultsOur results show that leveraging JIT by using a simple median approach increases the accuracy of MDP by an average of 17% AUC and 46% PofB10 while it increases the accuracy of CDP by an average of 31% AUC and 38% PofB20.ConclusionsFrom a practitioner's perspective, it is better to predict and rank defective methods than defective classes. From a researcher's perspective, there is a high potential for leveraging statement-defectiveness-prediction (SDP) to aid MDP and CDP.
C1 [Falessi, Davide; Laureani, Simone Mesiano; Carka, Jonida; Esposito, Matteo] Univ Roma Tor Vergata, Rome, Italy.
   [da Costa, Daniel Alencar] Univ Otago, Otago, New Zealand.
C3 University of Rome Tor Vergata; University of Otago
RP Falessi, D (corresponding author), Univ Roma Tor Vergata, Rome, Italy.
EM falessi@ing.uniroma2.it; simone.mesianolaureani@alumni.uniroma2.eu;
   jonida.carka@students.uniroma2.eu; m.esposito@ing.uniroma2.it;
   danielcalencar@otago.ac.nz
RI Esposito, Matteo/GYU-7560-2022
OI Esposito, Matteo/0000-0002-8451-3668; Falessi,
   Davide/0000-0002-6340-0058; Carka, Jonida/0000-0001-9315-3652
CR Agrawal A, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1050, DOI 10.1145/3180155.3180197
   Ahluwalia A, 2019, IEEE WORK CONF MIN S, P63, DOI 10.1109/MSR.2019.00019
   ALTMAN NS, 1992, AM STAT, V46, P175, DOI 10.2307/2685209
   Amasaki S, 2020, EMPIR SOFTW ENG, V25, P1573, DOI 10.1007/s10664-019-09777-8
   [Anonymous], 1998, Ph.D. Thesis
   Bangash AA, 2020, EMPIR SOFTW ENG, V25, P5047, DOI 10.1007/s10664-020-09878-9
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Benni KE, 2018, IEEE T SOFTWARE ENG, V44, P534, DOI 10.1109/TSE.2017.2731766
   Bennin KE, 2019, EMPIR SOFTW ENG, V24, P602, DOI 10.1007/s10664-018-9633-6
   Bird C, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P121, DOI 10.1145/1595696.1595716
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Neto EC, 2019, INT SYMP EMP SOFTWAR, P94
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chen H., 2017, PERSONALIZED DEFECT, V44, P90, DOI [10.11896/j.issn.1002-137X.2017.04.020, DOI 10.11896/J.ISSN.1002-137X.2017.04.020]
   Chen HW, 2021, IEEE T SOFTWARE ENG, V47, P2803, DOI 10.1109/TSE.2020.2968520
   Chen JF, 2022, IEEE T SOFTWARE ENG, V48, P1529, DOI 10.1109/TSE.2020.3023955
   Chen T, 2014, PROCEEDINGS OF THE FIFTH INTERNATIONAL SYMPOSIUM ON TEST AUTOMATION & INSTRUMENTATION, VOLS 1 AND 2, P82
   Cheung S.-C., 2011, P 19 ACM SIGSOFT S 1, P15
   Chi J, 2017, INT WORKSH EMPIR ENG, P7, DOI 10.1109/IWESEP.2017.16
   Cogo FR, 2021, IEEE T SOFTWARE ENG, V47, P2457, DOI 10.1109/TSE.2019.2952130
   Dalla Palma S, 2022, IEEE T SOFTWARE ENG, V48, P2086, DOI 10.1109/TSE.2021.3051492
   Demiroz G, 1997, LECT NOTES ARTIF INT, V1224, P85
   Di Nucci D, 2018, IEEE T SOFTWARE ENG, V44, P5, DOI 10.1109/TSE.2017.2659747
   Falessi D, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3467895
   Falessi D, 2020, EMPIR SOFTW ENG, V25, P4805, DOI 10.1007/s10664-020-09868-x
   Fan YR, 2021, IEEE T SOFTWARE ENG, V47, P1559, DOI 10.1109/TSE.2019.2929761
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Freund Y, 1999, MACH LEARN, V37, P277, DOI 10.1023/A:1007662407062
   Fu W, 2016, INFORM SOFTWARE TECH, V76, P135, DOI 10.1016/j.infsof.2016.04.017
   Fukushima T., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, MSR 2014, P172, DOI DOI 10.1145/2597073.2597075
   Ghotra B, 2017, IEEE WORK CONF MIN S, P146, DOI 10.1109/MSR.2017.18
   Giger E, 2012, INT SYMP EMP SOFTWAR, P171, DOI 10.1145/2372251.2372285
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Herbold S, 2019, ARXIV
   Herbold S, 2020, EMPIR SOFTW ENG, V25, P5333, DOI 10.1007/s10664-020-09885-w
   Herbold S, 2019, IEEE T SOFTWARE ENG, V45, P632, DOI 10.1109/TSE.2018.2790413
   Herbold S, 2018, IEEE T SOFTWARE ENG, V44, P811, DOI 10.1109/TSE.2017.2724538
   Herbold S, 2017, IEEE T SOFTWARE ENG, V43, P1091, DOI 10.1109/TSE.2017.2748129
   Herbold S, 2017, EMPIR SOFTW ENG, V22, P1866, DOI 10.1007/s10664-016-9468-y
   Herzig K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P392, DOI 10.1109/ICSE.2013.6606585
   HOLM S, 1979, SCAND J STAT, V6, P65
   Hosseini S, 2019, IEEE T SOFTWARE ENG, V45, P111, DOI 10.1109/TSE.2017.2770124
   Huang Q, 2019, EMPIR SOFTW ENG, V24, P2823, DOI 10.1007/s10664-018-9661-2
   Jiang Y., 2008, DEFECTS 08 P 2008 WO, P16, DOI [DOI 10.1145/1390817.1390822, 10.1145/1390817.1390822]
   Jiarpakdee J, 2022, IEEE T SOFTWARE ENG, V48, P166, DOI 10.1109/TSE.2020.2982385
   Jing XY, 2017, IEEE T SOFTWARE ENG, V43, P321, DOI 10.1109/TSE.2016.2597849
   Kamei Y, 2010, PROC IEEE INT CONF S
   Kamei Y, 2016, EMPIR SOFTW ENG, V21, P2072, DOI 10.1007/s10664-015-9400-x
   Kamei Y, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 5, P33, DOI 10.1109/SANER.2016.56
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Khomh F, 2012, EMPIR SOFTW ENG, V17, P243, DOI 10.1007/s10664-011-9171-y
   Khoshgoftaar TM, 1996, SEVENTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P364, DOI 10.1109/ISSRE.1996.558896
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kim S, 2007, PROC INT CONF SOFTW, P489
   Kondo M, 2020, EMPIR SOFTW ENG, V25, P890, DOI 10.1007/s10664-019-09736-3
   Kondo M, 2019, EMPIR SOFTW ENG, V24, P1925, DOI 10.1007/s10664-018-9679-5
   Laradji IH, 2015, INFORM SOFTWARE TECH, V58, P388, DOI 10.1016/j.infsof.2014.07.005
   LECESSIE S, 1992, APPL STAT-J ROY ST C, V41, P191
   Lee T, 2016, IEEE T SOFTWARE ENG, V42, P1015, DOI 10.1109/TSE.2016.2550458
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Liu JP, 2017, INT SYMP EMP SOFTWAR, P11, DOI 10.1109/ESEM.2017.8
   McCallum A., 1998, AAAI 1998
   McIntosh S, 2018, IEEE T SOFTWARE ENG, V44, P412, DOI 10.1109/TSE.2017.2693980
   Mende T, 2010, EUR CON SFTWR MTNCE, P107, DOI 10.1109/CSMR.2010.18
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Menzies T, 2010, AUTOMAT SOFTW ENG, V17, P375, DOI 10.1007/s10515-010-0069-5
   Morasca S, 2020, EMPIR SOFTW ENG, V25, P3977, DOI 10.1007/s10664-020-09861-4
   Mori T, 2019, EMPIR SOFTW ENG, V24, P779, DOI 10.1007/s10664-018-9638-1
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Munaiah N, 2017, EMPIR SOFTW ENG, V22, P3219, DOI 10.1007/s10664-017-9512-6
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Nam J, 2018, IEEE T SOFTWARE ENG, V44, P874, DOI 10.1109/TSE.2017.2720603
   Ohlsson N, 1996, IEEE T SOFTWARE ENG, V22, P886, DOI 10.1109/32.553637
   Ostrand T. J., 2004, "International Workshop on Mining Software Repositories (MSR 2004)" W17S Workshop - 26th International Conference on Software Engineering, P85, DOI 10.1049/ic:20040482
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   Palomba F, 2019, IEEE T SOFTWARE ENG, V45, P194, DOI 10.1109/TSE.2017.2770122
   Palomba F, 2018, EMPIR SOFTW ENG, V23, P1188, DOI 10.1007/s10664-017-9535-z
   Pascarella L, 2020, J SYST SOFTWARE, V161, DOI 10.1016/j.jss.2019.110493
   Pascarella L, 2019, J SYST SOFTWARE, V150, P22, DOI 10.1016/j.jss.2018.12.001
   Peters F, 2019, IEEE T SOFTWARE ENG, V45, P615, DOI 10.1109/TSE.2017.2787653
   Petric J, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962610
   Pornprasit C., 2021, arXiv
   Powers DMW, 2020, J MACH LEARN TECHNOL, P37, DOI DOI 10.9735/2229-3981
   Qu Y, 2021, IEEE T SOFTWARE ENG, V47, P348, DOI 10.1109/TSE.2019.2892959
   Quinlan J. R., 1986, Machine Learning, V1, P81, DOI 10.1007/BF00116251
   Rahman Foyzur, 2013, P 2013 9 JOINT M FDN, P147
   Rey D., 2011, Wilcoxon-Signed-Rank Test, P1658, DOI [DOI 10.1007/978-3-642-04898-2616, 10.1007/978-3-642-04898-2616]
   Rodríguez-Pérez G, 2022, IEEE T SOFTWARE ENG, V48, P1400, DOI 10.1109/TSE.2020.3021380
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   Shepperd M, 2018, IEEE T SOFTWARE ENG, V44, P1129, DOI 10.1109/TSE.2017.2731308
   Song QB, 2019, IEEE T SOFTWARE ENG, V45, P1253, DOI 10.1109/TSE.2018.2836442
   Taba SES, 2013, PROC IEEE INT CONF S, P270, DOI 10.1109/ICSM.2013.38
   Tantithamthavorn C, 2020, IEEE T SOFTWARE ENG, V46, P1200, DOI 10.1109/TSE.2018.2876537
   Tantithamthavorn C, 2019, IEEE T SOFTWARE ENG, V45, P683, DOI 10.1109/TSE.2018.2794977
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Tantithamthavorn C, 2016, PROC INT CONF SOFTW, P321, DOI 10.1145/2884781.2884857
   Tantithamthavorn C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P812, DOI 10.1109/ICSE.2015.93
   Tian Y, 2015, EMPIR SOFTW ENG, V20, P1354, DOI 10.1007/s10664-014-9331-y
   Tosun A, 2010, INFORM SOFTWARE TECH, V52, P1242, DOI 10.1016/j.infsof.2010.06.006
   Tosun A, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P318
   Tu H, 2022, IEEE T SOFTWARE ENG, V48, P278, DOI 10.1109/TSE.2020.2986415
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Vandehei B, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3433928
   Wang S, 2020, IEEE T SOFTWARE ENG, V46, P1267, DOI 10.1109/TSE.2018.2877612
   Wang S, 2016, PROC INT CONF SOFTW, P297, DOI 10.1145/2884781.2884804
   Weyuker EJ, 2010, EMPIR SOFTW ENG, V15, P277, DOI 10.1007/s10664-009-9111-2
   Witten IH, 2011, MOR KAUF D, P1
   Xia X, 2016, IEEE T SOFTWARE ENG, V42, P977, DOI 10.1109/TSE.2016.2543218
   Yan M, 2017, INT SYMP EMP SOFTWAR, P344, DOI 10.1109/ESEM.2017.48
   Yang XL, 2017, INFORM SOFTWARE TECH, V87, P206, DOI 10.1016/j.infsof.2017.03.007
   Yu TT, 2019, IEEE T SOFTWARE ENG, V45, P558, DOI 10.1109/TSE.2018.2791521
   Yu Z, 2021, IEEE T SOFTWARE ENG, V47, P2401, DOI 10.1109/TSE.2019.2949275
   Zhang F, 2017, IEEE T SOFTWARE ENG, V43, P476, DOI 10.1109/TSE.2016.2599161
   Zhang F, 2016, EMPIR SOFTW ENG, V21, P2107, DOI 10.1007/s10664-015-9396-2
NR 116
TC 1
Z9 1
U1 1
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2023
VL 28
IS 2
AR 37
DI 10.1007/s10664-022-10261-z
PG 43
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 8J5PA
UT WOS:000922466200001
OA hybrid
DA 2024-07-18
ER

PT J
AU Herbold, S
   Tunkel, S
AF Herbold, Steffen
   Tunkel, Steffen
TI Differential testing for machine learning: an analysis for
   classification algorithms beyond deep learning
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Machine learning; Software testing; Differential testing
AB Differential testing is a useful approach that uses different implementations of the same algorithms and compares the results for software testing. In recent years, this approach was successfully used for test campaigns of deep learning frameworks. There is little knowledge about the application of differential testing beyond deep learning. Within this article, we want to close this gap for classification algorithms. We conduct a case study using Scikit-learn, Weka, Spark MLlib, and Caret in which we identify the potential of differential testing by considering which algorithms are available in multiple frameworks, the feasibility by identifying pairs of algorithms that should exhibit the same behavior, and the effectiveness by executing tests for the identified pairs and analyzing the deviations. While we found a large potential for popular algorithms, the feasibility seems limited because, often, it is not possible to determine configurations that are the same in other frameworks. The execution of the feasible tests revealed that there is a large number of deviations for the scores and classes. Only a lenient approach based on statistical significance of classes does not lead to a huge amount of test failures. The potential of differential testing beyond deep learning seems limited for research into the quality of machine learning libraries. Practitioners may still use the approach if they have deep knowledge about implementations, especially if a coarse oracle that only considers significant differences of classes is sufficient.
C1 [Herbold, Steffen] Univ Passau, Fac Comp Sci & Math, Passau, Germany.
   [Tunkel, Steffen] Univ Goettingen, Inst Comp Sci, Gottingen, Germany.
C3 University of Passau; University of Gottingen
RP Herbold, S (corresponding author), Univ Passau, Fac Comp Sci & Math, Passau, Germany.
EM steffen.herbold@uni-passau.de; steffen.tunkel@stud.uni-goettingen.de
OI Herbold, Steffen/0000-0001-9765-2803
CR Abadi M, 2016, PROCEEDINGS OF OSDI'16: 12TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P265
   Al-Rfou R, 2021, arXiv
   [Anonymous], 2007, SEKE
   Asyrofi MH, 2020, CROSSASR EFFICIENT D
   Barash G, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P1048, DOI 10.1145/3338906.3340442
   Ben Braiek H, 2020, J SYST SOFTWARE, V164, DOI 10.1016/j.jss.2020.110542
   Benavoli A, 2017, Arxiv, DOI arXiv:1606.04316
   Breiman L, 2001, MACH LEARN, V45, P5, DOI 10.1023/A:1010933404324
   Breiman L, 1996, MACH LEARN, V24, P123, DOI 10.1007/bf00058655
   Breiman L, 1998, BIOMETRICS, DOI [10.1201/9781315139470, DOI 10.2307/2530946]
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Cook T. D., 1979, Quasi-experimentation: Design analysis issues for field settings
   Davis M. D., 1981, P ACM 81 C, P254, DOI DOI 10.1145/800175.809889
   Ding JH, 2017, 2017 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON METAMORPHIC TESTING (MET 2017), P28, DOI 10.1109/MET.2017.2
   Frank E, 2016, The WEKA workbench. Online appendix for data mining: practical machine learning tools and techniques
   Freund Y, 1997, J COMPUT SYST SCI, V55, P119, DOI 10.1006/jcss.1997.1504
   Giray G, 2021, J SYST SOFTWARE, V180, DOI 10.1016/j.jss.2021.111031
   Groce A, 2014, IEEE T SOFTWARE ENG, V40, P307, DOI 10.1109/TSE.2013.59
   Gross Philip., 2006, Proceedings of the National Conference on Artificial Intelligence, V21, P1705
   Guo JM, 2021, IEEE T NETW SCI ENG, V8, P933, DOI 10.1109/TNSE.2020.2997359
   Guo QY, 2020, IEEE INT CONF AUTOM, P486, DOI 10.1145/3324884.3416571
   Herbold S, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10073-7
   Pham HV, 2019, PROC INT CONF SOFTW, P1027, DOI 10.1109/ICSE.2019.00107
   ISO/IEC/IEEE International Standard, 2017, Standard ISO/IEC/IEEE 24765, DOI [DOI 10.1109/IEEESTD.2017.8016712, 10.1109/ IEEESTD.2017.8016712, 10.1109/IEEESTD.2017.8016712]
   Karpathy A, 2018, CS231N
   Kuhn M., 2018, CARET CLASSIFICATION
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Marijan D, 2020, AAAI CONF ARTIF INTE, V34, P13576
   Martinez-Fernandez S., 2021, ACM T SOFTW ENG METH
   McCullough BD, 2019, WIRES DATA MIN KNOWL, V9, DOI 10.1002/widm.1279
   Meng XR, 2016, J MACH LEARN RES, V17
   Murphy Christian, 2008, SEKE 2008. The 20th International Conference Proceedings on Software Engineering & Knowledge Engineering, P867
   Paszke A, 2019, ADV NEUR IN, V32
   Patton M. Q., 2002, QUALITATIVE RES EVAL
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Pei KX, 2019, COMMUN ACM, V62, P137, DOI 10.1145/3361566
   Quinlan J. R., 1986, Machine Learning, V1, P81, DOI 10.1007/BF00116251
   Quinlan J.R., 1993, C4 5 PROGRAMS MACHIN
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Tunkel S, 2022, REPLICATION KIT DIFF, DOI [10.5281/zenodo.7341092, DOI 10.5281/ZENODO.7341092]
   Wang Z, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P788, DOI 10.1145/3368089.3409761
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Wohlin C., 2012, Experimentation in software engineering, DOI [10.1007/978-3-642-29044-2, DOI 10.1007/978-3-642-29044-2]
   Xie XY, 2011, J SYST SOFTWARE, V84, P544, DOI 10.1016/j.jss.2010.11.920
   Zaharia M, 2010, P 2 USENIX WORKSHOP
   Zhang JM, 2022, IEEE T SOFTWARE ENG, V48, P1, DOI 10.1109/TSE.2019.2962027
NR 46
TC 0
Z9 0
U1 2
U2 8
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2023
VL 28
IS 2
AR 34
DI 10.1007/s10664-022-10273-9
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 8G0SN
UT WOS:000920062200001
OA hybrid
DA 2024-07-18
ER

PT J
AU Mastropaolo, A
   Aghajani, E
   Pascarella, L
   Bavota, G
AF Mastropaolo, Antonio
   Aghajani, Emad
   Pascarella, Luca
   Bavota, Gabriele
TI Automated variable renaming: are we there yet?
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Code comprehension; Empirical Study; Machine learning on code
ID RECOMMENDATION
AB Identifiers, such as method and variable names, form a large portion of source code. Therefore, low-quality identifiers can substantially hinder code comprehension. To support developers in using meaningful identifiers, several (semi-)automatic techniques have been proposed, mostly being data-driven (e.g., statistical language models, deep learning models) or relying on static code analysis. Still, limited empirical investigations have been performed on the effectiveness of such techniques for recommending developers with meaningful identifiers, possibly resulting in rename refactoring operations. We present a large-scale study investigating the potential of data-driven approaches to support automated variable renaming. We experiment with three state-of-the-art techniques: a statistical language model and two DL-based models. The three approaches have been trained and tested on three datasets we built with the goal of evaluating their ability to recommend meaningful variable identifiers. Our quantitative and qualitative analyses show the potential of such techniques that, under specific conditions, can provide valuable recommendations and are ready to be integrated in rename refactoring tools. Nonetheless, our results also highlight limitations of the experimented approaches that call for further research in this field.
C1 [Mastropaolo, Antonio; Aghajani, Emad; Pascarella, Luca; Bavota, Gabriele] Univ Svizzera italiana, SEART Software Inst, Lugano, Switzerland.
C3 Universita della Svizzera Italiana
RP Mastropaolo, A (corresponding author), Univ Svizzera italiana, SEART Software Inst, Lugano, Switzerland.
EM antonio.mastropaolo@usi.ch; emad.aghajani@usi.ch;
   luca.pascarella@usi.ch; gabriele.bavota@usi.ch
RI Pascarella, Luca/HKO-7228-2023
OI Pascarella, Luca/0000-0001-8289-7736; BAVOTA,
   Gabriele/0000-0002-2216-3148; Mastropaolo, Antonio/0000-0002-7965-7712
FU Universita della Svizzera italiana
FX Open access funding provided by Universita della Svizzera italiana
CR Allamanis M, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P281, DOI 10.1145/2635868.2635883
   Alon U., 2020, INT C MACHINE LEARNI, P245
   Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   Nguyen AT, 2012, PROC INT CONF SOFTW, P69, DOI 10.1109/ICSE.2012.6227205
   [Anonymous], 2021, SEART GITHUB SEARCH
   [Anonymous], 2020, CUGLM MODEL
   [Anonymous], 2022, Replication Package
   [Anonymous], 2008, US
   Brown T., 2020, P ADV NEUR INF PROC, V33, P1877
   Bruch M, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P213, DOI 10.1145/1595696.1595728
   Butler S, 2009, WORK CONF REVERSE EN, P31, DOI 10.1109/WCRE.2009.50
   Butler S, 2010, EUR CON SFTWR MTNCE, P156, DOI 10.1109/CSMR.2010.27
   Caprile B, 2000, PROC IEEE INT CONF S, P97, DOI 10.1109/ICSM.2000.883022
   Carter B., 1982, SIGPLAN Notices, V17, P54, DOI 10.1145/947923.947930
   Chatterjee S, 2009, LECT NOTES COMPUT SC, V5503, P385
   Chen Mark, 2021, arXiv, DOI DOI 10.48550/ARXIV.2107.03374
   Ciniselli M., 2021, IEEE Trans. Softw. Eng.
   Ciniselli M, 2021, IEEE WORK CONF MIN S, P108, DOI 10.1109/MSR52588.2021.00024
   Conover W., 1998, WILEY SERIES PROBABI
   copilot Github, 2021, US
   Corazza A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P233, DOI 10.1109/ICSM.2012.6405277
   Corbo Filippo, 2007, 2007 IEEE International Conference on Software Maintenance, P525, DOI 10.1109/ICSM.2007.4362682
   Dabic O, 2021, IEEE WORK CONF MIN S, P560, DOI 10.1109/MSR52588.2021.00074
   Daka E, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P57, DOI 10.1145/3092703.3092727
   Feldthaus A, 2013, ACM SIGPLAN NOTICES, V48, P323, DOI [10.1145/2544173.2509520, 10.1145/2509136.2509520]
   Foster SR, 2012, PROC INT CONF SOFTW, P222, DOI 10.1109/ICSE.2012.6227191
   Gage P., 1994, C Users Journal, V12, P23
   Grissom R. J., 2005, EFFECT SIZES RES BRO
   Guerrouj L, 2013, J SOFTW-EVOL PROC, V25, P575, DOI 10.1002/smr.539
   Gvero T, 2013, ACM SIGPLAN NOTICES, V48, P27, DOI 10.1145/2499370.2462192
   Haque S, 2020, IMPROVED AUTOMATIC S
   Hellendoorn VJ, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P763, DOI 10.1145/3106237.3106290
   Hill E., 2008, P 2008 INT WORKING C, P79
   HOLM S, 1979, SCAND J STAT, V6, P65
   Host EW, 2009, LECT NOTES COMPUT SC, V5653, P294, DOI 10.1007/978-3-642-03013-0_14
   Howard G. D, 2021, GITHUB COPILOT COPYR
   Jablonski Patricia., 2007, P WORKSHOP ECLIPSE T, P16
   Javaparser, 2019, US
   Jin XH, 2018, IEEE WORK CONF MIN S, P70, DOI 10.1145/3196398.3196474
   Karampatsis RM, 2019, Arxiv, DOI arXiv:1903.05734
   Kim S, 2021, PROC INT CONF SOFTW, P150, DOI 10.1109/ICSE43902.2021.00026
   Lawrie D., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P113, DOI 10.1109/ICSM.2011.6080778
   Lawrie D, 2007, EMPIR SOFTW ENG, V12, P359, DOI 10.1007/s10664-006-9032-2
   Lawrie D, 2006, INT C PROGRAM COMPRE, P3, DOI 10.1109/ICPC.2006.51
   Lin B, 2019, IEEE INT WORK C SO, P204, DOI 10.1109/SCAM.2019.00031
   Lin B, 2017, IEEE INT WORK C SO, P81, DOI 10.1109/SCAM.2017.17
   Liu F., 2020, P 35 IEEEACM INT C A
   Mandelin D, 2005, ACM SIGPLAN NOTICES, V40, P48, DOI 10.1145/1064978.1065018
   Mastropaolo A, 2021, 37 INT C SOFTWARE MA
   Mastropaolo A, 2022, PROC INT CONF SOFTW, P2279, DOI 10.1145/3510003.3511561
   Mastropaolo A, 2021, PROC INT CONF SOFTW, P336, DOI 10.1109/ICSE43902.2021.00041
   Maven, 2004, US
   McNemar Q, 1947, PSYCHOMETRIKA, V12, P153, DOI 10.1007/BF02295996
   Murphy-Hill E, 2012, IEEE T SOFTWARE ENG, V38, P5, DOI 10.1109/TSE.2011.41
   Niu HR, 2017, J SYST SOFTWARE, V129, P127, DOI 10.1016/j.jss.2016.07.026
   Proksch S, 2015, ACM T SOFTW ENG METH, V25, DOI 10.1145/2744200
   Raffel C, 2023, Arxiv, DOI [arXiv:1910.10683, 10.48550/arXiv.1910.10683]
   Reiss S. P, 2007, 22 IEEEACM INT C AUT, P74
   Robbes R, 2010, AUTOMAT SOFTW ENG, V17, P181, DOI 10.1007/s10515-010-0064-x
   Scrml, 2019, US
   Svyatkovskiy A., 2020, Fast and memory-efficient neural code completion
   Svyatkovskiy A, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1433, DOI 10.1145/3368089.3417058
   Svyatkovskiy A, 2019, KDD'19: PROCEEDINGS OF THE 25TH ACM SIGKDD INTERNATIONAL CONFERENCCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P2727, DOI 10.1145/3292500.3330699
   Thies A., 2010, P 2 INT WORKSH REC S, P1, DOI [10.1145/1808920.1808921, DOI 10.1145/1808920.1808921]
   Tsantalis N, 2022, IEEE T SOFTWARE ENG, V48, P930, DOI 10.1109/TSE.2020.3007722
   Tu ZP, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P269, DOI 10.1145/2635868.2635875
   Tufano M, 2021, Arxiv, DOI [arXiv:2009.05617, 10.48550/ARXIV.2009.05617]
   Tufano M, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3340544
   Tufano M, 2019, PROC INT CONF SOFTW, P25, DOI 10.1109/ICSE.2019.00021
   Tufano R, 2022, PROC INT CONF SOFTW, P2291, DOI 10.1145/3510003.3510621
   Tufano R, 2021, PROC INT CONF SOFTW, P163, DOI 10.1109/ICSE43902.2021.00027
   Vaswani A, 2017, ADV NEUR IN, V30
   Wang Yue, 2021, arXiv
   Watson C, 2020, PROC INT CONF SOFTW, P1398, DOI 10.1145/3377811.3380429
   Zhang C, 2012, PROC INT CONF SOFTW, P826, DOI 10.1109/ICSE.2012.6227136
NR 75
TC 1
Z9 1
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2023
VL 28
IS 2
AR 45
DI 10.1007/s10664-022-10274-8
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 9C6PY
UT WOS:000935538100001
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Zhao, KS
   Xu, Z
   Yan, M
   Zhang, T
   Xue, L
   Fan, M
   Keung, J
AF Zhao, Kunsong
   Xu, Zhou
   Yan, Meng
   Zhang, Tao
   Xue, Lei
   Fan, Ming
   Keung, Jacky
TI The impact of class imbalance techniques on crashing fault residence
   prediction models
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Crash localization; Stack trace; Imbalanced learning; Empirical study
ID TIME DEFECT PREDICTION; STACK; LOCALIZATION; SMOTE
AB Software crashes occur when the software program is executed wrongly or interrupted compulsively, which negatively impacts on user experience. Since the stack traces offer the exception-related information about software crashes, researchers used features collected from the stack trace to automatically identify whether the fault residence where the crash occurred is in the stack trace, aiming at accelerating the process of crash localization. A recent work conducted the first large-scale empirical study, which investigated the impact of feature selection methods on the performance of classification models for this task. However, the crash data have the intrinsic class imbalance characteristic, i.e., there exists a large difference between the number of crash instances inside and outside the stack trace, which is ignored by the previous work. To fill this gap, in this work, we conduct a large-scale empirical study to explore how different imbalanced learning techniques impact the performance of crashing fault residence prediction models on a benchmark dataset comprising seven software projects with four evaluation indicators. Our experimental results demonstrate that two imbalanced variants of the bagging classifier perform better than other compared techniques in both the normal and cross-project settings, and can constantly generate excellent prediction performance even though the imbalance level changes.
C1 [Zhao, Kunsong] Hong Kong Polytech Univ, Dept Comp, Hong Kong, Peoples R China.
   [Zhao, Kunsong; Xu, Zhou; Yan, Meng] Chongqing Univ, Key Lab Dependable Serv Comp Cyber Phys Soc, Minist Educ, Chongqing, Peoples R China.
   [Xu, Zhou; Yan, Meng] Chongqing Univ, Sch Big Data & Software Engn, Chongqing, Peoples R China.
   [Zhang, Tao] Macau Univ Sci & Technol, Sch Comp Sci & Engn, Macau, Peoples R China.
   [Xue, Lei] Sun Yat Sen Univ, Sch Cyber Sci & Technol, Shenzhen, Peoples R China.
   [Fan, Ming] Xi An Jiao Tong Univ, Sch Cyber Sci & Engn, Xian, Peoples R China.
   [Keung, Jacky] City Univ Hong Kong, Dept Comp Sci, Hong Kong, Peoples R China.
C3 Hong Kong Polytechnic University; Chongqing University; Chongqing
   University; Macau University of Science & Technology; Sun Yat Sen
   University; Xi'an Jiaotong University; City University of Hong Kong
RP Xu, Z; Yan, M (corresponding author), Chongqing Univ, Key Lab Dependable Serv Comp Cyber Phys Soc, Minist Educ, Chongqing, Peoples R China.; Xu, Z; Yan, M (corresponding author), Chongqing Univ, Sch Big Data & Software Engn, Chongqing, Peoples R China.
EM kszhao@whu.edu.cn; zhouxullx@cqu.edu.cn; mengy@cqu.edu.cn;
   tazhang@must.edu.mo; xuelei3@mail.sysu.edu.cn; mingfan@xjtu.edu.cn;
   Jacky.Keung@cityu.edu.hk
RI Zhang, Tao/E-5634-2012
OI Zhang, Tao/0000-0002-6272-4069; Yan, Meng/0000-0002-9538-9121; Keung,
   Jacky/0000-0002-3803-9600
FU National Key Research and Development Project [2021YFB1714200]; Open
   Foundation of Key Laboratory of Dependable Service Computing in Cyber
   Physical Society, Ministry of Education of China [CPSDSC202004];
   National Natural Science Foundation of China [62002034, 62002306,
   62272377]; Fundamental Research Funds for the Central Universities
   [2022CDJDX-005, xxj022019001, xzy012020009]; Natural Science Foundation
   of Chongqing [cstc2021jcyj-msxmX0538]; Macao Science and Technology
   Development Fund [0047/2020/A1, 0014/2022/A]; Young Talent Fund of
   Association for Science and Technology in Shaanxi, China; CCF-NOFOCUS
   kunpeng Fund; Young Talent Fund of Association for Science and
   Technology in Shaanxi, China
FX This work was supported in part by the National Key Research and
   Development Project (No. 2021YFB1714200), the Open Foundation of Key
   Laboratory of Dependable Service Computing in Cyber Physical Society,
   Ministry of Education of China (No. Grant CPSDSC202004), the National
   Natural Science Foundation of China (No. 62002034, 62002306, and
   62272377), the Fundamental Research Funds for the Central Universities
   (No. 2022CDJDX-005, xxj022019001, and xzy012020009), the Natural Science
   Foundation of Chongqing (No. cstc2021jcyj-msxmX0538), the Macao Science
   and Technology Development Fund under Grant (0047/2020/A1 and
   0014/2022/A), the CCF-NOFOCUS kunpeng Fund, and the Young Talent Fund of
   Association for Science and Technology in Shaanxi, China.
CR Abadi M, 2016, PROCEEDINGS OF OSDI'16: 12TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P265
   Agrawal Amritanshu, 2018, 2018 IEEE/ACM 40th International Conference on Software Engineering (ICSE). Proceedings, P1050, DOI 10.1145/3180155.3180197
   [Anonymous], 2014, P 2014 INT S SOFTWAR, DOI DOI 10.1145/2610384.2610386
   Batista G. E., 2004, ACM SIGKDD EXPL NEWS, V6, P20, DOI DOI 10.1145/1007730.1007735
   Batista GEAPA, 2003, Wob, V3, P10
   Bennin KE, 2019, EMPIR SOFTW ENG, V24, P602, DOI 10.1007/s10664-018-9633-6
   Branco P, 2016, ACM COMPUT SURV, V49, DOI 10.1145/2907070
   Breiman L, 2001, MACH LEARN, V45, P5, DOI 10.1023/A:1010933404324
   Breiman L, 1996, MACH LEARN, V24, P123, DOI 10.1007/bf00058655
   Cabral GG, 2019, PROC INT CONF SOFTW, P666, DOI 10.1109/ICSE.2019.00076
   Catolino Gemma, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P201, DOI 10.1109/MOBILESoft.2017.58
   Catolino G, 2019, 2019 IEEE/ACM 6TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2019), P99, DOI 10.1109/MOBILESoft.2019.00023
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chawla NV, 2003, LECT NOTES ARTIF INT, V2838, P107, DOI 10.1007/978-3-540-39804-2_12
   Chen C., 2004, USING RANDOM FOREST, V110, P24
   Chen N, 2015, IEEE T SOFTWARE ENG, V41, P198, DOI 10.1109/TSE.2014.2363469
   COVER TM, 1967, IEEE T INFORM THEORY, V13, P21, DOI 10.1109/TIT.1967.1053964
   Dhaliwal T., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P333, DOI 10.1109/ICSM.2011.6080800
   Fan W, 1999, MACHINE LEARNING, PROCEEDINGS, P97
   Fan YR, 2020, IEEE T SOFTWARE ENG, V46, P495, DOI 10.1109/TSE.2018.2864217
   Fang C., 2020, P 29 ACM SIGSOFT INT, P516, DOI 10.1145/3395363.3397362
   Freund Y, 1997, J COMPUT SYST SCI, V55, P119, DOI 10.1006/jcss.1997.1504
   Fürnkranz J, 1999, ARTIF INTELL REV, V13, P3, DOI 10.1023/A:1006524209794
   Gong L, 2014, Arxiv, DOI arXiv:1404.4100
   Gu YF, 2019, J SYST SOFTWARE, V148, P88, DOI 10.1016/j.jss.2018.11.004
   Han H, 2005, LECT NOTES COMPUT SC, V3644, P878, DOI 10.1007/11538059_91
   HART PE, 1968, IEEE T INFORM THEORY, V14, P515, DOI 10.1109/TIT.1968.1054155
   He HB, 2009, IEEE T KNOWL DATA EN, V21, P1263, DOI 10.1109/TKDE.2008.239
   He HB, 2008, IEEE IJCNN, P1322, DOI 10.1109/IJCNN.2008.4633969
   Hinton Geoffrey E., 1990, Machine Learning, P555
   Ho TK, 1998, IEEE T PATTERN ANAL, V20, P832, DOI 10.1109/34.709601
   Jing XY, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P496, DOI 10.1145/2786805.2786813
   Kamei Y, 2016, EMPIR SOFTW ENG, V21, P2072, DOI 10.1007/s10664-015-9400-x
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Karakoulas G, 1999, ADV NEUR IN, V11, P253
   Kubat M., 1997, ICML, P179
   Laurikkala J, 2001, LECT NOTES ARTIF INT, V2101, P63, DOI 10.1007/3-540-48229-6_9
   Leisch F, 2006, COMPUT STAT DATA AN, V51, P526, DOI 10.1016/j.csda.2005.10.006
   LERMAN RI, 1984, ECON LETT, V15, P363, DOI 10.1016/0165-1765(84)90126-5
   Li K, 2020, PROC INT CONF SOFTW, P566, DOI 10.1145/3377811.3380360
   Li YH, 2018, IEEE INT C ENG COMP, P104, DOI 10.1109/ICECCS2018.2018.00019
   Liu XY, 2009, IEEE T SYST MAN CY B, V39, P539, DOI 10.1109/TSMCB.2008.2007853
   Liu ZN, 2020, PROC INT CONF DATA, P841, DOI 10.1109/ICDE48307.2020.00078
   Loh WY, 2011, WIRES DATA MIN KNOWL, V1, P14, DOI 10.1002/widm.8
   Louppe Gilles, 2012, Machine Learning and Knowledge Discovery in Databases. Proceedings of the European Conference (ECML PKDD 2012), P346, DOI 10.1007/978-3-642-33460-3_28
   Maclin Richard., 1997, AAAI/IAAI, V1997, P546, DOI 10.1109/ICNN.1997.613999
   Mathur A.P., 2013, FDN SOFTWARE TESTING, V2nd
   McIntosh S, 2018, IEEE T SOFTWARE ENG, V44, P412, DOI 10.1109/TSE.2017.2693980
   Moreno L, 2014, PROC IEEE INT CONF S, P151, DOI 10.1109/ICSME.2014.37
   Nam J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P382, DOI 10.1109/ICSE.2013.6606584
   Nayrolles M, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1789
   Nguyen Hien M., 2011, International Journal of Knowledge Engineering and Soft Data Paradigms, V3, P4, DOI 10.1504/IJKESDP.2011.039875
   Pawlak R, 2016, SOFTWARE PRACT EXPER, V46, P1155, DOI 10.1002/spe.2346
   Platt JC, 2000, ADV NEUR IN, P61
   Ren XX, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3324916
   Schroter Adrian, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P118, DOI 10.1109/MSR.2010.5463280
   Seiffert C, 2010, IEEE T SYST MAN CY A, V40, P185, DOI 10.1109/TSMCA.2009.2029559
   Smith MR, 2014, MACH LEARN, V95, P225, DOI 10.1007/s10994-013-5422-z
   Soltani M, 2020, EMPIR SOFTW ENG, V25, P96, DOI 10.1007/s10664-019-09762-1
   Soltani M, 2017, PROC INT CONF SOFTW, P209, DOI 10.1109/ICSE.2017.27
   Song QB, 2019, IEEE T SOFTWARE ENG, V45, P1253, DOI 10.1109/TSE.2018.2836442
   Tan M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P99, DOI 10.1109/ICSE.2015.139
   Tantithamthavorn C, 2020, IEEE T SOFTWARE ENG, V46, P1200, DOI 10.1109/TSE.2018.2876537
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   TOMEK I, 1976, IEEE T SYST MAN CYB, V6, P769, DOI 10.1109/tsmc.1976.4309452
   TOMEK I, 1976, IEEE T SYST MAN CYB, V6, P448
   Viola P, 2001, ADV NEUR IN, V14
   Wang S, 2013, IEEE T RELIAB, V62, P434, DOI 10.1109/TR.2013.2259203
   Wang S, 2009, 2009 IEEE SYMPOSIUM ON COMPUTATIONAL INTELLIGENCE AND DATA MINING, P324, DOI 10.1109/CIDM.2009.4938667
   Wang X, 2020, IEEE INT CONF AUTOM, P871, DOI 10.1145/3324884.3416583
   WILSON DL, 1972, IEEE T SYST MAN CYB, VSMC2, P408, DOI 10.1109/TSMC.1972.4309137
   Wong CP, 2014, PROC IEEE INT CONF S, P181, DOI 10.1109/ICSME.2014.40
   Wu RX, 2018, EMPIR SOFTW ENG, V23, P2866, DOI 10.1007/s10664-017-9567-4
   Xu Z, 2022, IEEE T RELIAB, V71, P204, DOI 10.1109/TR.2021.3066170
   Xu Z, 2020, J SYST SOFTWARE, V170, DOI 10.1016/j.jss.2020.110763
   Xu Z, 2019, PROC INT SYMP SOFTW, P183, DOI 10.1109/ISSRE.2019.00027
   Xu Z, 2019, J SYST SOFTWARE, V158, DOI 10.1016/j.jss.2019.110402
   Xuan JF, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P910, DOI 10.1145/2786805.2803206
   Yu HF, 2011, MACH LEARN, V85, P41, DOI 10.1007/s10994-010-5221-8
   Zhang JMI, 2003, P ICML 2003 WORKSH L
   Zhao KS, 2021, INFORM SOFTWARE TECH, V139, DOI 10.1016/j.infsof.2021.106652
   Zhao KS, 2021, INT C PROGRAM COMPRE, P242, DOI 10.1109/ICPC52881.2021.00031
   Zhao KS, 2021, IEEE T RELIAB, V70, P848, DOI 10.1109/TR.2021.3060937
NR 83
TC 2
Z9 2
U1 1
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2023
VL 28
IS 2
AR 49
DI 10.1007/s10664-023-10294-y
PG 45
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 9Q2IZ
UT WOS:000944795600001
DA 2024-07-18
ER

PT J
AU Patel, K
   Faccin, J
   Hamou-Lhadj, A
   Nunes, I
AF Patel, Keyur
   Faccin, Joao
   Hamou-Lhadj, Abdelwahab
   Nunes, Ingrid
TI The sense of logging in the Linux kernel
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Linux kernel; Software logging; Empirical studies; Software engineering
ID SOFTWARE; EXECUTION
AB Logging plays a crucial role in software engineering because it is key to perform various tasks including debugging, performance analysis, and detection of anomalies. Despite the importance of log data, the practice of logging still suffers from the lack of common guidelines and best practices. Recent studies investigated logging in C/C++ and Java open-source systems. In this paper, we complement these studies by conducting the first empirical study on logging practices in the Linux kernel, one of the most elaborate open-source development projects in the computer industry. We analyze 22 Linux releases with a focus on three main aspects: the pervasiveness of logging in Linux, the types of changes made to logging statements, and the rationale behind these changes. Our findings show that logging code accounts for 3.73% of the total source code in the Linux kernel, distributed across 72.36% of Linux files. We also found that the distribution of logging statements across Linux subsystems and their components vary significantly with no apparent reasons, suggesting that developers use different criteria when logging. In addition, we observed a slow decrease in the use of logging-reduction of 9.27% between versions v4.3 and v5.3. The majority of changes in logging code are made to fix language issues, modify log levels, and upgrade logging code to use new logging libraries, with the overall goal of improving the precision and consistency of the log output. Many recommendations are derived from our findings such as the use of static analysis tools to detect log-related issues, the adoption of common writing styles to improve the quality of log messages, the development of conventions to guide developers when selecting log levels, the establishment of review sessions to review logging code, and so on. Our recommendations can serve as a basis for developing logging guidelines as well as better logging processes, tools, and techniques.
C1 [Patel, Keyur; Hamou-Lhadj, Abdelwahab] Concordia Univ, Montreal, PQ, Canada.
   [Faccin, Joao; Nunes, Ingrid] Univ Fed Rio Grande do Sul UFRGS, Porto Alegre, RS, Brazil.
C3 Concordia University - Canada; Universidade Federal do Rio Grande do Sul
RP Hamou-Lhadj, A (corresponding author), Concordia Univ, Montreal, PQ, Canada.
EM keyur.patel@concordia.ca; jgfaccin@inf.ufrgs.br;
   wahab.hamou-lhadj@concordia.ca; ingridnunes@inf.ufrgs.br
RI Nunes, Ingrid/A-3715-2014
OI Nunes, Ingrid/0000-0002-6879-5829; Hamou-Lhadj,
   Abdelwahab/0000-0002-3319-5006
FU Ericsson Global Artificial Intelligence Accelerator (GAIA) Group in
   Montreal; MITACS [IT15986]; CNPq [313357/2018-8, 428157/2018-1];
   Coordenacao de Aperfeicoamento de Pessoal de Nivel Superior -Brasil
   (CAPES) [001]; National Council for Scientific and Technological
   Development of Brazil (CNPq) [141840/2016-1]; Government of Canada
   through the Emerging Leaders in the Americas Program (ELAP) program
FX Abdelwahab Hamou-Lhadj and Keyur Patel would like to thank Ericsson
   Global Artificial Intelligence Accelerator (GAIA) Group in Montreal and
   MITACS for supporting this project (Grant Number: IT15986). Ingrid Nunes
   would like to for CNPq grants ref. 313357/2018-8 and ref. 428157/2018-1,
   and the Coordenacao de Aperfeicoamento de Pessoal de Nivel Superior
   -Brasil (CAPES) -Finance Code 001. Joao Faccin would like to acknowledge
   the support of the National Council for Scientific and Technological
   Development of Brazil (CNPq) (grant ref. 141840/2016-1), and the support
   of the Government of Canada through the Emerging Leaders in the Americas
   Program (ELAP) program.
CR An Ran C., 2019, THESIS CONCORDIA U M
   [Anonymous], 2013, P 29 ANN COMP SEC AP, DOI DOI 10.1145/2523649.2523670
   [Anonymous], 2011, THESIS CONCORDIA U
   Bagherzadeh M, 2018, EMPIR SOFTW ENG, V23, P1519, DOI 10.1007/s10664-017-9551-z
   Bertero C, 2017, PROC INT SYMP SOFTW, P351, DOI 10.1109/ISSRE.2017.43
   Bootlin, 2020, EMB LIN KERN DRIV DE
   Boslaugh S., 2012, Statistics in a nutshell: A desktop quick reference
   Chen BY, 2019, EMPIR SOFTW ENG, V24, P2285, DOI 10.1007/s10664-019-09690-0
   Chen BY, 2017, PROC INT CONF SOFTW, P71, DOI 10.1109/ICSE.2017.15
   Chen BY, 2017, EMPIR SOFTW ENG, V22, P330, DOI 10.1007/s10664-016-9429-5
   Cinque M, 2010, I C DEPEND SYS NETWO, P457, DOI 10.1109/DSN.2010.5544279
   Corbet J, 2012, Xfs: the filesystem of the future?
   Corbet J., 2016, DEFENDING ROWHAMMER
   Corbet Jonathan, 2005, Linux device drivers, VThird
   Ding R, 2015, P 2015 USENIX C US A
   Edge J., 2019, LWN NET
   El-Masri D, 2020, INFORM SOFTWARE TECH, V122, DOI 10.1016/j.infsof.2020.106276
   Falleri Jean-Remy, 2014, P 29 ACM IEEE INT C, P313
   Fu Q, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P24, DOI 10.1145/2591062.2591175
   Hamou-Lhadj A, 2002, PROG COMPREHEN, P159, DOI 10.1109/WPC.2002.1021337
   Hamou-Lhadj Abdelwahab., 2004, CASCON, P42
   Hassani M, 2018, EMPIR SOFTW ENG, V23, P3248, DOI 10.1007/s10664-018-9603-z
   He PJ, 2018, IEEE INT CONF AUTOM, P178, DOI 10.1145/3238147.3238193
   Islam MS, 2018, IEEE T RELIAB, V67, P212, DOI 10.1109/TR.2017.2787138
   Israeli A, 2010, J SYST SOFTWARE, V83, P485, DOI 10.1016/j.jss.2009.09.042
   Kc K, 2011, SYM REL DIST SYST, P11, DOI 10.1109/SRDS.2011.11
   Khatuya Subhendu, 2018, IEEE INFOCOM 2018 - IEEE Conference on Computer Communications, P2114, DOI 10.1109/INFOCOM.2018.8486257
   Lal Sangeeta, 2015, International Journal of Open Source Software and Processes, V6, P49, DOI 10.4018/IJOSSP.2015010104
   Li H, 2021, IEEE T SOFTWARE ENG, V47, P2858, DOI 10.1109/TSE.2020.2970422
   Li H, 2018, EMPIR SOFTW ENG, V23, P2655, DOI 10.1007/s10664-018-9595-8
   Li H, 2017, EMPIR SOFTW ENG, V22, P1684, DOI 10.1007/s10664-016-9456-2
   Li SS, 2021, ENVIRON TECHNOL, V42, P366, DOI 10.1080/09593330.2019.1629182
   Li ZH, 2019, PROC INT CONF SOFTW, P152, DOI 10.1109/ICSE.2019.00032
   Liu ZX, 2021, IEEE T SOFTWARE ENG, V47, P2012, DOI 10.1109/TSE.2019.2941943
   Lotufo R, 2010, LECT NOTES COMPUT SC, V6287, P136, DOI 10.1007/978-3-642-15579-6_10
   Lu LY, 2014, ACM T STORAGE, V10, DOI 10.1145/2560012
   Mazuera-Rozo A, 2020, EMPIR SOFTW ENG, V25, P1644, DOI 10.1007/s10664-019-09795-6
   Miranskyy A, 2016, IEEE SOFTWARE, V33, P52, DOI 10.1109/MS.2016.33
   Oliner AJ, 2008, IEEE DATA MINING, P959, DOI 10.1109/ICDM.2008.132
   Panthaplackel S, 2020, LEARNING UPDATE NATU, P12169
   Passos L., 2012, 4 INT WORKSHOP FEATU, P62, DOI [10.1145/2377816.2377825, DOI 10.1145/2377816.2377825]
   Pecchia A, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P169, DOI 10.1109/ICSE.2015.145
   Pi AD, 2018, HPDC '18: PROCEEDINGS OF THE 27TH INTERNATIONAL SYMPOSIUM ON HIGH-PERFORMANCE PARALLEL AND DISTRIBUTED COMPUTING: POSTERS/DOCTORAL CONSORTIUM, P9, DOI 10.1145/3220192.3220197
   Shang WY, 2015, EMPIR SOFTW ENG, V20, P1, DOI 10.1007/s10664-013-9274-8
   Shang WY, 2014, J SOFTW-EVOL PROC, V26, P3, DOI 10.1002/smr.1579
   Sigelman Benjamin H, 2010, Technical Report
   Tian J, 2004, IEEE T SOFTWARE ENG, V30, P754, DOI 10.1109/TSE.2004.87
   Tschudin P S, 2015, BELGIAN NETHERLANDS
   Yang S, 2018, PROCEEDINGS OF THE 2018 USENIX ANNUAL TECHNICAL CONFERENCE, P335
   Yuan D, 2012, PROC INT CONF SOFTW, P102, DOI 10.1109/ICSE.2012.6227202
   Yuan D, 2012, ACM T COMPUT SYST, V30, DOI 10.1145/2110356.2110360
   Zeng Y, 2019, EMPIR SOFTW ENG, V24, P3394, DOI 10.1007/s10664-019-09687-9
   Zhao X, 2017, PROCEEDINGS OF THE 16TH WORKSHOP ON HOT TOPICS IN OPERATING SYSTEMS (HOTOS 2017), P125, DOI 10.1145/3102980.3103001
   Zhou R, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P577, DOI [10.1109/SANER48275.2020.9054831, 10.1109/saner48275.2020.9054831]
   Zhu JM, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P415, DOI 10.1109/ICSE.2015.60
NR 55
TC 4
Z9 4
U1 0
U2 11
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2022
VL 27
IS 6
AR 153
DI 10.1007/s10664-022-10136-3
PG 44
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 3O4IB
UT WOS:000836798500011
DA 2024-07-18
ER

PT J
AU Shetty, M
   Bansal, C
   Kumar, S
   Rao, N
   Nagappan, N
AF Shetty, Manish
   Bansal, Chetan
   Kumar, Sumit
   Rao, Nikitha
   Nagappan, Nachiappan
TI SoftNER: Mining knowledge graphs from cloud incidents
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Cloud services; Service incidents; Knowledge extraction; Knowledge
   graphs; Deep learning; Machine learning
AB The move from boxed products to services and the widespread adoption of cloud computing has had a huge impact on the software development life cycle and DevOps processes. Particularly, incident management has become critical for developing and operating large-scale services. Prior work on incident management has heavily focused on the challenges with incident triaging and de-duplication. In this work, we address the fundamental problem of structured knowledge extraction from service incidents. We have built SoftNER, a framework for mining Knowledge Graphs from incident reports. First, we build a novel multi-task learning based BiLSTM-CRF model which leverages not just the semantic context but also the data-types for extracting factual information in the form of named entities. Next, we present an approach to mine relations between the named entities for automatically constructing knowledge graphs. We have deployed SoftNER at Microsoft, a major cloud service provider and have evaluated it on more than 2 months of cloud incidents. We show that SoftNER's unsupervised pipeline learns the software entity types from unstructured incident data with high precision of 0.96 (at rank 50) and 0.77 (at rank 100). We also evaluate and show that SoftNER's unsupervised pipeline accurately labels data with a precision of 0.94. Further, our multi-task learning based deep learning model also outperforms the state-of-the-art NER models with an average F1 of 0.96. Lastly, using the knowledge extracted by SoftNER, we are able to build accurate models for tasks such as incident triaging and recommending entities based on their relevance to incident titles.
C1 [Shetty, Manish; Rao, Nikitha] Microsoft Res, Vigyan, 9 Lavelle Rd, Bengaluru 560001, Karnataka, India.
   [Bansal, Chetan; Nagappan, Nachiappan] Res Microsoft, Microsoft, One Microsoft Way, Redmond, WA 98052 USA.
   [Kumar, Sumit] Microsoft, One Microsoft Way, Redmond, WA 98052 USA.
C3 Microsoft; Microsoft
RP Shetty, M (corresponding author), Microsoft Res, Vigyan, 9 Lavelle Rd, Bengaluru 560001, Karnataka, India.
EM manish.shetty.m@outlook.com; chetanb@microsoft.com; sumitku@gmail.com;
   nikithar@andrew.cmu.edu; nnagappan@acm.org
CR [Anonymous], 2016, P 2016 C EMP METH NA
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Ardimento P., 2017, Proceedings of the International Conference on Web Intelligence, Mining and Semantics, P1
   Bahdanau D, 2016, Arxiv, DOI [arXiv:1409.0473, 10.48550/arXiv.1409.0473]
   Bansal C, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP), P201, DOI 10.1145/3377813.3381353
   Bettenburg N., 2008, P 2008 INT WORKING C, P27
   Bhargava P, 2019, COMPANION OF THE WORLD WIDE WEB CONFERENCE (WWW 2019 ), P1194, DOI 10.1145/3308560.3316749
   Bortis G, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P342, DOI 10.1109/ICSE.2013.6606580
   Bouma G., 2009, P GSCL POTSD GERM, P31
   Caruana R, 1997, MACH LEARN, V28, P41, DOI 10.1023/A:1007379606734
   Chen JJ, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P364, DOI 10.1109/ASE.2019.00042
   Chen JJ, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P111, DOI 10.1109/ICSE-SEIP.2019.00020
   Chen Peng, 2017, P 2017 C EMP METH NA, P452, DOI [10.18653/v1/D17-1047, DOI 10.18653/V1/D17-1047]
   Chen YJ, 2019, WEB CONFERENCE 2019: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2019), P2659, DOI 10.1145/3308558.3313501
   Chiu J.P., 2016, Named entity recognition with bidirectional lstm-cnns, V4, P357, DOI 10.1162/tacl_a_00104
   CHURCH KW, 1990, 27TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, P76
   Collobert R, 2011, J MACH LEARN RES, V12, P2493
   Dang YN, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P4, DOI 10.1109/ICSE-Companion.2019.00023
   Devlin J., 2018, BERT PRE TRAINING DE
   Ester M., 1996, KDD 96, P226, DOI DOI 10.5555/3001460.3001507
   Fano R.M., 1961, Transmission of information, P793
   Finin Tim., 2010, Proceedings of the NAACL HLT 2010 Workshop on Creating Speech and Language Data with Amazon's Mechanical Turk, P80
   Graves A, 2005, NEURAL NETWORKS, V18, P602, DOI 10.1016/j.neunet.2005.06.042
   Greenberg N, 2018, 2018 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2018), P2824
   Hashimoto K, 2015, ARXIV PREPRINT ARXIV
   Hendrickx I., 2019, ARXIV191110422
   Hochreiter S, 1997, NEURAL COMPUT, V9, P1735, DOI [10.1162/neco.1997.9.1.1, 10.1007/978-3-642-24797-2]
   Huang ZH, 2015, COMPUT INTEL NEUROSC, V2015, DOI 10.1155/2015/685404
   Kim H, 2012, IEEE DATA MINING, P349, DOI 10.1109/ICDM.2012.107
   King DB, 2015, ACS SYM SER, V1214, P1
   Kulkarni C., 2018, ARXIV PREPRINT ARXIV
   Kumar R, 2019, 2019 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON BOTS IN SOFTWARE ENGINEERING (BOTSE 2019), P48, DOI 10.1109/BotSE.2019.00020
   Lafferty J., 2001, ICML 01 P 18 INT C M
   Lample M., 2016, P NAACL HLT, P260, DOI DOI 10.18653/V1/N16-1030
   Limsopatham N, 2016, BIDIRECTIONAL LSTM N
   Liu HT, 2016, INT CONF SEMANT, P1, DOI [10.1109/SKG.2016.11, 10.1109/SKG.2016.009]
   Luo C, 2014, PROCEEDINGS OF THE 20TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'14), P1583, DOI 10.1145/2623330.2623374
   McDonald R, 2005, P 43 ANN M ASS COMP, P491, DOI DOI 10.3115/1219840.1219901
   Mehta S, 2020, PROCEEDINGS OF THE 17TH USENIX SYMPOSIUM ON NETWORKED SYSTEMS DESIGN AND IMPLEMENTATION, P435
   Mikolov T, 2010, 11TH ANNUAL CONFERENCE OF THE INTERNATIONAL SPEECH COMMUNICATION ASSOCIATION 2010 (INTERSPEECH 2010), VOLS 1-2, P1045
   Nadeau D, 2007, LINGUIST INVESTIG, V30, P3
   Nair V, 2015, KDD'15: PROCEEDINGS OF THE 21ST ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P2029, DOI 10.1145/2783258.2788624
   Newman D., 2006, KDD 2006, P680
   Pantel Patrick., 2012, P 50 ANN M ASS COMPU, V1, P563
   Pawar S, 2017, ARXIV PREPRINT ARXIV
   Pennington J., 2014, P 2014 C EMP METH NA, P1532
   Rao N, 2020, ARXIV PREPRINT ARXIV
   Ratner A, 2017, PROC VLDB ENDOW, V11, P269, DOI 10.14778/3157794.3157797
   Ritter A., 2011, P EMNLP, P1524
   Shetty M, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2021), P218, DOI 10.1109/ICSE-SEIP52600.2021.00031
   Solorio, 2019, ARXIV PREPRINT ARXIV
   Thanopoulos A., 2002, Proceedings of the 3rd Language Resources Evaluation Conference, P620
   Vaswani A, 2017, ADV NEUR IN, V30
   Wang SC, 2014, PLANT BIOTECHNOL J, V12, P787, DOI 10.1111/pbi.12183
   Xu Yang, 2008, P 17 ACM C INF KNOWL, P1441
   Ye DH, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P90, DOI 10.1109/SANER.2016.10
   Zelenko D, 2003, J MACH LEARN RES, V3, P1083, DOI 10.1162/153244303322533205
   Zhou Y, 2016, J SOFTW-EVOL PROC, V28, P150, DOI 10.1002/smr.1770
NR 58
TC 2
Z9 2
U1 2
U2 9
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2022
VL 27
IS 4
AR 93
DI 10.1007/s10664-022-10159-w
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0V8JM
UT WOS:000788586200001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Dabrowski, J
   Letier, E
   Perini, A
   Susi, A
AF Dabrowski, Jacek
   Letier, Emmanuel
   Perini, Anna
   Susi, Angelo
TI Analysing app reviews for software engineering: a systematic literature
   review
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Review
DE App store analysis; Mining app reviews; User feedback; Mining software
   repository; Software engineering; Systematic literature review
ID USER REVIEWS; GOOGLE PLAY; STAR RATINGS; REQUIREMENTS; EVOLUTION;
   CONSISTENCY; OPINIONS; FEEDBACK; SUPPORT; MODEL
AB App reviews found in app stores can provide critically valuable information to help software engineers understand user requirements and to design, debug, and evolve software products. Over the last ten years, a vast amount of research has been produced to study what useful information might be found in app reviews, and how to mine and organise such information as efficiently as possible. This paper presents a comprehensive survey of this research, covering 182 papers published between 2012 and 2020. This survey classifies app review analysis not only in terms of mined information and applied data mining techniques but also, and most importantly, in terms of supported software engineering activities. The survey also reports on the quality and results of empirical evaluation of existing techniques and identifies important avenues for further research. This survey can be of interest to researchers and commercial organisations developing app review analysis techniques and to software engineers considering to use app review analysis.
C1 [Dabrowski, Jacek; Letier, Emmanuel] UCL, London, England.
   [Dabrowski, Jacek; Perini, Anna; Susi, Angelo] Fdn Bruno Kessler, Trento, Italy.
C3 University of London; University College London; Fondazione Bruno
   Kessler
RP Dabrowski, J (corresponding author), UCL, London, England.; Dabrowski, J (corresponding author), Fdn Bruno Kessler, Trento, Italy.
EM j.dabrowski@cs.ucl.ac.uk; e.letier@cs.ucl.ac.uk; perini@fbk.eu;
   susi@fbk.eu
RI Dąbrowski, Jacek/ISU-4195-2023
OI Dąbrowski, Jacek/0000-0003-3392-0690
CR Abad ZSH, 2017, 2017 IEEE 25TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW), P132, DOI 10.1109/REW.2017.71
   Al Kilani N, 2019, 2019 SIXTH INTERNATIONAL CONFERENCE ON SOCIAL NETWORKS ANALYSIS, MANAGEMENT AND SECURITY (SNAMS), P541, DOI [10.1109/SNAMS.2019.8931820, 10.1109/snams.2019.8931820]
   Al-Hawari A, 2021, SOFTWARE QUAL J, V29, P667, DOI 10.1007/s11219-020-09529-8
   Al-Subaihin AA, 2021, IEEE T SOFTWARE ENG, V47, P300, DOI 10.1109/TSE.2019.2891715
   Ali Mohamed, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P79, DOI 10.1109/MOBILESoft.2017.3
   Alqahtani F, 2019, ADJUNCT PUBLICATION OF THE 27TH CONFERENCE ON USER MODELING, ADAPTATION AND PERSONALIZATION (ACM UMAP '19 ADJUNCT), P343, DOI 10.1145/3314183.3323676
   Annis, 2005, AM STAT, V59, P276
   [Anonymous], 2013, Proceedings of the 27th International BCS Human Computer Interaction Conference
   [Anonymous], 2004, PROCEDURES PERFORMIN
   App Store, 2021, RAT REV RESP
   Bakiu E, 2017, 2017 IEEE 25TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW), P182, DOI 10.1109/REW.2017.76
   Bauer MW, 2007, BRIT J SOCIOL, V58, P329, DOI 10.1111/j.1468-4446.2007.00153_10.x
   Begel A, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P12, DOI 10.1145/2568225.2568233
   Berry, 2018, JOINT P REFSQ 2018 W
   Berry DM, 2017, 2017 IEEE 25TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW), P284, DOI 10.1109/REW.2017.25
   Bishop Christopher M., 2006, Pattern Recognition and Machine Learning, V4
   Bohland JW, 2006, NEUROIMAGE, V32, P821, DOI 10.1016/j.neuroimage.2006.04.173
   Bourque P, 1999, IEEE SOFTWARE, V16, P35, DOI 10.1109/52.805471
   Bujang M A., 2017, Epidemiol Biostat Public Health, V14, DOI [e12117-1 e12117-9, DOI 10.2427/12267]
   Burge J.E., 2008, Rationale-Based Software Engineering
   Buse RPL, 2012, PROC INT CONF SOFTW, P987, DOI 10.1109/ICSE.2012.6227122
   Cannataro M., 2003, P 1 INT WORKSH SEM P, P113
   Carreño LVG, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P582, DOI 10.1109/ICSE.2013.6606604
   Cen L., 2014, PIR SIGIR
   Chandy R.H. Gu., 2012, P 2 JOINT WICOWAIRWE, P56
   Chen N, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P767, DOI 10.1145/2568225.2568263
   Chen RY, 2019, ELECTRON COMMER R A, V38, DOI 10.1016/j.elerap.2019.100889
   Ciurumelea A, 2018, PROC IEEE ACM INT C, P317, DOI 10.1145/3183440.3194988
   Ciurumelea A, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P91, DOI 10.1109/SANER.2017.7884612
   Cumpston M, 2019, COCHRANE DB SYST REV, DOI 10.1002/14651858.ED000142
   Dalpiaz F, 2019, LECT NOTES COMPUT SC, V11412, P55, DOI 10.1007/978-3-030-15538-4_4
   Debrowski, 2021, SUPPLEMENTARY MAT SY
   DEBROWSKI J, 2020, P SPRINGER LECT NOTE, V2127, P401, DOI DOI 10.1007/978-3-030-49435
   DEBROWSKI J, 2019, REQUIREMENTS ENG FDN, P183
   Deocadez R, 2017, 2017 IEEE 25TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW), P367, DOI 10.1109/REW.2017.58
   Deocadez Roger., 2017, Proceedings of the 21st International Conference on Evaluation and Assessment in Software Engineering, P320
   Deshpande G, 2018, 2018 5TH INTERNATIONAL WORKSHOP ON ARTIFICIAL INTELLIGENCE FOR REQUIREMENTS ENGINEERING (AIRE 2018), P15, DOI 10.1109/AIRE.2018.00008
   Dhinakaran VT, 2018, INT REQUIR ENG CONF, P170, DOI 10.1109/RE.2018.00026
   Di Sorbo A, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2316
   Di Sorbo A, 2017, PROC IEEE ACM INT C, P55, DOI 10.1109/ICSE-C.2017.5
   Di Sorbo A, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P499, DOI 10.1145/2950290.2950299
   diaeresis>tze Hinrich Schu<spacing, 2008, INTRO INFORM RETRIEV, V39
   Durelli VHS, 2018, SBES'18: PROCEEDINGS OF THE XXXII BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING, P132, DOI 10.1145/3266237.3266272
   Explorium, 2020, UND HANDL DAT CONC D
   Franzmann Daniel, 2020, ACM Transactions on Social Computing, V3, DOI 10.1145/3409585
   Fu B, 2013, 19TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'13), P1276
   Gao CY, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P163, DOI 10.1109/ASE.2019.00025
   Gao CY, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P279, DOI 10.1109/ICSE-SEIP.2019.00040
   Gao CY, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P904, DOI 10.1145/3236024.3264595
   Gao CY, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P48, DOI 10.1145/3180155.3180218
   Gao CY, 2015, 9TH IEEE INTERNATIONAL SYMPOSIUM ON SERVICE-ORIENTED SYSTEM ENGINEERING (SOSE 2015), P284, DOI 10.1109/SOSE.2015.13
   Gao CY, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P35, DOI 10.1109/ISSRE.2015.7381797
   Gao SQ, 2020, J SOFTW-EVOL PROC, V32, DOI 10.1002/smr.2257
   Genc-Nayebi N, 2017, J SYST SOFTWARE, V125, P207, DOI 10.1016/j.jss.2016.11.027
   Gómez M, 2015, 2ND ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS MOBILESOFT 2015, P1, DOI 10.1109/MobileSoft.2015.8
   Goul M., 2012, 2012 45th Hawaii International Conference on System Sciences (HICSS), P4168, DOI 10.1109/HICSS.2012.421
   Graham M., 2012, Measuring and promoting inter-rater agreement of teacher and principal performance ratings
   Grano G, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P72, DOI 10.1109/SANER.2018.8330198
   Greenheld G, 2018, 2018 25TH AUSTRALASIAN SOFTWARE ENGINEERING CONFERENCE (ASWEC), P66, DOI 10.1109/ASWEC.2018.00017
   Groen EC, 2017, INT REQUIR ENG CONF, P80, DOI 10.1109/RE.2017.73
   Gu XD, 2015, IEEE INT CONF AUTOM, P760, DOI 10.1109/ASE.2015.57
   Gunaratnam Inthuja, 2020, 2020 2nd International Conference on Advancements in Computing (ICAC), P180, DOI 10.1109/ICAC51239.2020.9357270
   Guo H, 2020, PROC INT CONF SOFTW, P628, DOI 10.1145/3377811.3380924
   Guo T, 2018, 2018 IEEE SMARTWORLD, UBIQUITOUS INTELLIGENCE & COMPUTING, ADVANCED & TRUSTED COMPUTING, SCALABLE COMPUTING & COMMUNICATIONS, CLOUD & BIG DATA COMPUTING, INTERNET OF PEOPLE AND SMART CITY INNOVATION (SMARTWORLD/SCALCOM/UIC/ATC/CBDCOM/IOP/SCI), P841, DOI 10.1109/SmartWorld.2018.00155
   Guzman E, 2019, INT REQUIR ENG CONF, P381, DOI 10.1109/RE.2019.00049
   Guzman E, 2018, PROC INT CONF SOFTW, P13, DOI 10.1145/3183428.3183436
   Guzman E, 2017, INT REQUIR ENG CONF, P11, DOI 10.1109/RE.2017.88
   Guzman E, 2015, INT SYMP EMP SOFTWAR, P21
   Guzman E, 2015, IEEE INT CONF AUTOM, P771, DOI 10.1109/ASE.2015.88
   Guzman E, 2014, 2014 SECOND IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT), P167, DOI 10.1109/VISSOFT.2014.33
   Guzman E, 2014, INT REQUIR ENG CONF, P153, DOI 10.1109/RE.2014.6912257
   Ha E, 2013, 2013 IEEE CONSUMER COMMUNICATIONS AND NETWORKING CONFERENCE (CCNC), P149, DOI 10.1109/CCNC.2013.6488439
   Hadi MA, 2020, PROC IEEE INT CONF S, P593, DOI 10.1109/ICSME46990.2020.00062
   Hassan S, 2018, IEEE T SOFTWARE ENG, P1, DOI DOI 10.18502/KEG.V3I4.2158
   Hassan S, 2018, EMPIR SOFTW ENG, V23, P1275, DOI 10.1007/s10664-017-9538-9
   Hoon L., 2012, AUSTR COMP HUM INT C, P245
   Hoon L, 2016, ADV INTELL SYST, V405, P223, DOI 10.1007/978-3-319-26285-7_19
   Hoon Leonard., 2013, Proceedings of the 25th Australian Computer-Human Interaction Conference: Augmentation, Application, Innovation, Collaboration, P229
   Hu HY, 2019, EMPIR SOFTW ENG, V24, P7, DOI 10.1007/s10664-018-9617-6
   Hu HY, 2018, EMPIR SOFTW ENG, V23, P3442, DOI 10.1007/s10664-018-9604-y
   Huebner J, 2018, 17TH INTERNATIONAL CONFERENCE ON MOBILE AND UBIQUITOUS MULTIMEDIA (MUM 2018), P293, DOI 10.1145/3282894.3282895
   Iacob C, 2013, P 5 INT C MOB COMP A
   Iacob C., 2016, P 8 EAI INT C MOBILE, P42
   Iacob C, 2013, IEEE WORK CONF MIN S, P41, DOI 10.1109/MSR.2013.6624001
   Ide N, 2017, Handbook of Linguistic Annotation, DOI DOI 10.1007/978-94-024-0881-2
   IEEE, 1990, IEEE STANDARD GLOSSA
   ISO/IEC, 2011, ISO/IEC 25010:2011 Systems and software engineering-Systems and Software Quality Requirements and Evaluation (SQuaRE)-System and Software Quality models
   Jha N., 2017, JOINT P REFSQ 2017 W
   Jha N, 2019, EMPIR SOFTW ENG, V24, P3659, DOI 10.1007/s10664-019-09716-7
   Jha N, 2018, EMPIR SOFTW ENG, V23, P3734, DOI 10.1007/s10664-018-9605-x
   Jha N, 2017, LECT NOTES COMPUT SC, V10153, P273, DOI 10.1007/978-3-319-54045-0_20
   Johann T, 2017, INT REQUIR ENG CONF, P21, DOI 10.1109/RE.2017.71
   Joorabchi Mona Erfani, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P15, DOI 10.1109/ESEM.2013.9
   Jurafsky D., 2009, SPEECH LANGUAGE PROC
   Kalaichelavan K, 2020, PROCEDIA COMPUT SCI, V170, P547, DOI 10.1016/j.procs.2020.03.124
   Keertipati S, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2916003
   Khalid H, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P610, DOI 10.1145/2635868.2635909
   Khalid H, 2016, IEEE SOFTWARE, V33, P34, DOI 10.1109/MS.2015.29
   Khalid H, 2015, IEEE SOFTWARE, V32, P70, DOI 10.1109/MS.2014.50
   Khalid H, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1474, DOI 10.1109/ICSE.2013.6606749
   Khalid Mubasher, 2015, International Journal of Information Technology and Computer Science, V7, P35, DOI 10.5815/ijitcs.2015.10.05
   Khalid Mubasher, 2015, International Journal of Information Engineering and Electronic Business, V7, P39, DOI 10.5815/ijieeb.2015.05.06
   Khan J, 2019, ANAL REQUIREMENTS RE, DOI [10.1109/RE.2019.00018, DOI 10.1109/RE.2019.00018]
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Kunaefi A, 2020, 2020 IEEE/ACM INTERNATIONAL CONFERENCE ON BIG DATA COMPUTING, APPLICATIONS AND TECHNOLOGIES (BDCAT 2020), P161, DOI 10.1109/BDCAT50828.2020.00002
   Kurtanovic Z, 2018, REQUIR ENG, V23, P357, DOI 10.1007/s00766-018-0293-2
   Kurtanovic Z, 2017, INT REQUIR ENG CONF, P61, DOI 10.1109/RE.2017.86
   Li SY, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP), P51, DOI 10.1145/3377813.3381355
   Li T, 2018, LECT NOTES COMPUT SC, V10753, P324, DOI 10.1007/978-3-319-77243-1_21
   Li Y., 2017, P IEEE C COMP VIS PA, V1, P1, DOI [10.1145/3130935, DOI 10.1145/3130935]
   Liang TP, 2016, INT J ELECTRON COMM, V20, P236, DOI 10.1080/10864415.2016.1087823
   Licorish S. A., 2017, INT C EV ASS SOFTW E, P108
   Lim S., 2021, SN Computer Science, V2, P1
   Liu YZ, 2020, IET SOFTW, V14, P39, DOI 10.1049/iet-sen.2018.5192
   Liu YZ, 2019, SOFTWARE PRACT EXPER, V49, P1013, DOI 10.1002/spe.2693
   Liu YZ, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.2112
   Lu Mengmeng., 2017, P 21 INT C EVALUATIO, P344, DOI [10.1145/3084226.3084241, DOI 10.1145/3084226.3084241]
   Maalej W, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P289, DOI 10.1109/ICSE-SEIP.2019.00041
   Maalej W, 2016, REQUIR ENG, V21, P311, DOI 10.1007/s00766-016-0251-9
   Maalej W, 2016, IEEE SOFTWARE, V33, P48, DOI 10.1109/MS.2015.153
   Maalej W, 2015, INT REQUIR ENG CONF, P116, DOI 10.1109/RE.2015.7320414
   MALAVOLTA I, 2015, P 2 ACM INT C MOB SO
   Malavolta I, 2015, IEEE INT CONF MO, P25, DOI [10.1109/MobServ.2015.14, 10.1109/MS.2015.14]
   Malgaonkar S, 2020, P COMMUNICATIONS COM, V1266, P120
   Malik H, 2018, FUTURE GENER COMPUTE
   Malika H, 2016, PROCEDIA COMPUT SCI, V94, P168, DOI 10.1016/j.procs.2016.08.026
   Man YC, 2016, PROC INT SYMP SOFTW, P138, DOI 10.1109/ISSRE.2016.27
   Martens D, 2019, EMPIR SOFTW ENG, V24, P3316, DOI 10.1007/s10664-019-09706-9
   Martens D, 2019, IEEE SOFTWARE, V36, P32, DOI 10.1109/MS.2019.2923603
   Martens D, 2017, 2017 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON EMOTION AWARENESS IN SOFTWARE ENGINEERING (SEMOTION 2017), P8, DOI 10.1109/SEmotion.2017.6
   Martin W, 2017, IEEE T SOFTWARE ENG, V43, P817, DOI 10.1109/TSE.2016.2630689
   Martin W, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P123, DOI 10.1109/MSR.2015.19
   Masrury RA, 2019, 2019 7TH INTERNATIONAL CONFERENCE ON INFORMATION AND COMMUNICATION TECHNOLOGY (ICOICT), P75
   Mcilroy S, 2017, COMMUN ACM, V60, P62, DOI 10.1145/3141771
   McIlroy S, 2017, IEEE SOFTWARE, V34, P64, DOI 10.1109/MS.2015.149
   McIlroy S, 2016, EMPIR SOFTW ENG, V21, P1067, DOI 10.1007/s10664-015-9375-7
   Mercado I.T., 2016, P INT WORKSHOP APP M, P43, DOI DOI 10.1145/2993259.2993268
   Miller B, 2020, POLIT ANAL, V28, P532, DOI 10.1017/pan.2020.4
   Miner G, 2012, PRACTICAL TEXT MINING AND STATISTICAL ANALYSIS FOR NON-STRUCTURED TEXT DATA APPLICATIONS, P1
   Moher D, 2009, ANN INTERN MED, V151, P264, DOI [10.7326/0003-4819-151-4-200908180-00135, 10.1136/bmj.b2700, 10.1371/journal.pmed.1000097, 10.1186/2046-4053-4-1, 10.1136/bmj.i4086, 10.1136/bmj.b2535, 10.1016/j.ijsu.2010.02.007, 10.1016/j.ijsu.2010.07.299]
   Mujahid Suhaib, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P96, DOI 10.1109/MOBILESoft.2017.25
   Mujahid S, 2018, EMPIR SOFTW ENG, V23, P3476, DOI 10.1007/s10664-018-9615-8
   Munoz Sergio, 2018, 2018 4th International Conference on Big Data Innovations and Applications (Innovate-Data). Proceedings, P17, DOI 10.1109/Innovate-Data.2018.00010
   Nagappan M, 2016, MOBILE APP STORE ANA
   Nayebi M, 2018, EMPIR SOFTW ENG, V23, P2764, DOI 10.1007/s10664-018-9601-1
   Nayebi M, 2017, PROC IEEE ACM INT C, P152, DOI 10.1109/ICSE-C.2017.77
   Nicolai M, 2019, PROCEEDINGS OF THE 3RD ACM SIGSOFT INTERNATIONAL WORKSHOP ON APP MARKET ANALYTICS (WAMA '19), P33, DOI 10.1145/3340496.3342758
   Noei E., 2019, P 29 ANN INT C COMP, P54
   Noei E, 2021, IEEE T SOFTWARE ENG, V47, P367, DOI 10.1109/TSE.2019.2893171
   Noei E, 2019, EMPIR SOFTW ENG, V24, P1964, DOI 10.1007/s10664-019-09684-y
   Noei E, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P283, DOI 10.1145/3236024.3236044
   Nuseibeh B, 2001, COMPUTER, V34, P115, DOI 10.1109/2.910904
   Nyamawe AS, 2019, INT REQUIR ENG CONF, P187, DOI 10.1109/RE.2019.00029
   Oehri E, 2020, INT REQUIR ENG CONF, P44, DOI 10.1109/RE48521.2020.00017
   Oh Jeungmin, 2013, Proceedings of the ACM SIGCHI Conference on Human Factors in Computing Systems, CHI'13, P1809
   Pagano D, 2013, S VIS LANG HUM CEN C, P125, DOI 10.1109/RE.2013.6636712
   Palomba F, 2018, J SYST SOFTWARE, V137, P143, DOI 10.1016/j.jss.2017.11.043
   Palomba F, 2017, PROC INT CONF SOFTW, P106, DOI 10.1109/ICSE.2017.18
   Palomba F, 2015, PROC IEEE INT CONF S, P291, DOI 10.1109/ICSM.2015.7332475
   Panichella S., 2017, P 2 ACM SIGSOFT INT, P8
   Panichella S, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P1023, DOI 10.1145/2950290.2983938
   Panichella S, 2015, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSM.2015.7332474
   Peihan Wen, 2020, Human-Computer Interaction. Human Values and Quality of Life. Thematic Area, HCI 2020 Held as Part of the 22nd International Conference, HCII 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12183), P188, DOI 10.1007/978-3-030-49065-2_14
   Pelloni L, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P522, DOI 10.1109/SANER.2018.8330252
   Phetrungnapha K, 2019, PROCEEDINGS OF 2019 12TH INTERNATIONAL CONFERENCE ON INFORMATION & COMMUNICATION TECHNOLOGY AND SYSTEM (ICTS), P229, DOI [10.1109/icts.2019.8850962, 10.1109/ICTS.2019.8850962]
   Vu PM, 2015, IEEE INT CONF AUTOM, P789, DOI 10.1109/ASE.2015.101
   Vu PM, 2019, PROCEEDINGS OF THE 2019 ANNUAL ACM SOUTHEAST CONFERENCE (ACMSE 2019), P237, DOI 10.1145/3299815.3314473
   Vu PM, 2016, IEEE INT CONF AUTOM, P726, DOI 10.1145/2970276.2970365
   Vu PM, 2015, IEEE INT CONF AUTOM, P749, DOI 10.1109/ASE.2015.85
   Puspaningrum A, 2018, PROCEEDINGS OF 2018 THE 10TH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY AND ELECTRICAL ENGINEERING (ICITEE), P365, DOI 10.1109/ICITEED.2018.8534785
   Pustejovsky J., 2012, Natural Language Annotation For Machine Learning: A guide to Corpus-Building For Applications
   Qin XL, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON PROGNOSTICS AND HEALTH MANAGEMENT (ICPHM), P1, DOI [10.1109/ATNAC.2017.8215431, 10.1109/ICPHM.2017.7998297]
   Ralph P, 2020, ARXIV201003525
   Sänger M, 2017, LECT NOTES COMPUT SC, V10260, P3, DOI 10.1007/978-3-319-59569-6_1
   Sänger M, 2016, LREC 2016 - TENTH INTERNATIONAL CONFERENCE ON LANGUAGE RESOURCES AND EVALUATION, P1114
   Scalabrino S, 2019, IEEE T SOFTWARE ENG, V45, P68, DOI 10.1109/TSE.2017.2759112
   Scoccia GL, 2018, 2018 IEEE/ACM 5TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT), P45, DOI 10.1145/3197231.3197236
   Shah F.A., 2016, Proceedings of the International Workshop on App Market Analytics, P15, DOI DOI 10.1145/2993259.2993267
   Shah FA, 2018, P INT C SOFTW TECHN, P173
   Shah FA, 2019, ICSOFT: PROCEEDINGS OF THE 14TH INTERNATIONAL CONFERENCE ON SOFTWARE TECHNOLOGIES, P384, DOI 10.5220/0007909703840396
   Shah FA, 2019, PROCEEDINGS OF THE 3RD ACM SIGSOFT INTERNATIONAL WORKSHOP ON APP MARKET ANALYTICS (WAMA '19), P40, DOI 10.1145/3340496.3342756
   Shah FA, 2019, LECT NOTES COMPUT SC, V11412, P21, DOI 10.1007/978-3-030-15538-4_2
   Shams RA, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN SOCIETY (ICSE-SEIS 2021), P53, DOI 10.1145/3377815.3381382
   Sharma Tanusree, 2020, HCI for Cybersecurity, Privacy and Trust. Second International Conference, HCI-CPT 2020 Held as Part of the 22nd HCI International Conference, HCII 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12210), P533, DOI 10.1007/978-3-030-50309-3_35
   Simmons A, 2016, P 28 AUSTR COMP HUM, P416
   Singh, S ASIAN U DEP COMPUT
   Software T, WHAT IS TEXT AN
   Song R, 2020, ASIA PAC SOFWR ENG, P450, DOI 10.1109/APSEC51365.2020.00054
   Srisopha Kamonphop, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P336, DOI 10.1145/3383219.3383258
   Srisopha K, 2019, PROC IEEE INT CONF S, P76, DOI 10.1109/ICSME.2019.00017
   Srisopha K, 2018, 2018 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON SOFTWARE QUALITIES AND THEIR DEPENDENCIES (SQUADE), P1, DOI 10.1145/3194095.3194096
   Srisopha Kamonphop, 2020, P 14 ACM IEEE INT S
   Srisopha Kamonphop, 2020, P IEEE ACM 42 INT C, P494, DOI [10.1145/3387940.3391492, DOI 10.1145/3387940.3391492]
   Stanik C, 2019, 2019 IEEE 27TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW 2019), P220, DOI 10.1109/REW.2019.00046
   Statista, 2020, Number of Apps Available in Leading App Stores 2019
   Sun D, 2015, COMM COM INF SC, V558, P75, DOI 10.1007/978-3-662-48634-4_6
   Sun ZY, 2017, TELEMAT INFORM, V34, P767, DOI 10.1016/j.tele.2017.03.001
   Talia D, 2019, J CLOUD COMPUT-ADV S, V8, DOI 10.1186/s13677-019-0127-x
   Tao CQ, 2020, INFORM SOFTWARE TECH, V122, DOI 10.1016/j.infsof.2020.106290
   Tavakoli M, 2018, EXPERT SYST APPL, V113, P186, DOI 10.1016/j.eswa.2018.05.037
   Tizard J, 2020, INT REQUIR ENG CONF, P55, DOI 10.1109/RE48521.2020.00018
   Uddin MK, 2020, P IEEE I C SERV COMP, P370, DOI 10.1109/SCC49832.2020.00055
   van Lamsweerde A., 2009, REQUIREMENTS ENG SYS
   VANVLIET M, 2020, P REFSQ 2020 WAS POS, V2045, P143
   Vasa R., 2012, AUSTR COMP HUM INT C, P241, DOI DOI 10.1145/2414536.2414577
   Viera AJ, 2005, FAM MED, V37, P360
   Villarroel L, 2016, PROC INT CONF SOFTW, P14, DOI 10.1145/2884781.2884818
   Wang C., 2018, P 12 ACMIEEE INT S E, P1
   Wang HY, 2020, 2020 35TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING WORKSHOPS (ASEW 2020), P79, DOI 10.1145/3417113.3422186
   Wang SC, 2017, LECT NOTES COMPUT SC, V10601, P125, DOI 10.1007/978-3-319-69035-3_9
   Wang TL, 2018, ASIA PAC SOFWR ENG, P494, DOI 10.1109/APSEC.2018.00064
   Wang Y, 2020, 2020 THE 4TH INTERNATIONAL CONFERENCE ON MANAGEMENT ENGINEERING, SOFTWARE ENGINEERING AND SERVICE SCIENCES (ICMSS 2020), P26, DOI 10.1145/3380625.3380665
   Wang Y, 2017, INT CONF DAT MIN WOR, P422, DOI 10.1109/ICDMW.2017.61
   Wei LL, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P672, DOI 10.1145/3106237.3106294
   Weichbroth Pawel, 2019, 2019 Federated Conference on Computer Science and Information Systems (FedCSIS). Proceedings, P747, DOI 10.15439/2019F289
   Williams G, 2020, AUTOMAT SOFTW ENG, V27, P229, DOI 10.1007/s10515-020-00274-7
   Williams G, 2018, INT REQUIR ENG CONF, P64, DOI 10.1109/RE.2018.00-51
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Xiao JM, 2020, LECT NOTES COMPUT SC, V12019, P273, DOI 10.1007/978-3-030-45989-5_23
   Xiao JM, 2020, LECT NOTES COMPUT SC, V12571, P386, DOI 10.1007/978-3-030-65310-1_27
   Yadav A, 2020, PROC INT CONF SOFTW, P308, DOI 10.1145/3377812.3390790
   Yadav A, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P572, DOI [10.1109/saner48275.2020.9054843, 10.1109/SANER48275.2020.9054843]
   Yang H., 2015, INT C SOFTW ENG KNOW, P7
   Zhang JZ, 2019, INFORM SOFTWARE TECH, V108, P30, DOI 10.1016/j.infsof.2018.12.002
   Zhang L, 2017, J COMPUT SCI TECH-CH, V32, P1076, DOI 10.1007/s11390-017-1784-1
   Zhou Y, 2021, IEEE T SOFTWARE ENG, V47, P2755, DOI 10.1109/TSE.2020.2967383
NR 226
TC 24
Z9 24
U1 8
U2 53
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2022
VL 27
IS 2
AR 43
DI 10.1007/s10664-021-10065-7
PG 63
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YK1QP
UT WOS:000744996500001
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Gold, NE
   Krinke, J
AF Gold, Nicolas E.
   Krinke, Jens
TI Ethics in the mining of software repositories
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Research ethics; Mining software repositories
ID ISSUES; CODE
AB Research in Mining Software Repositories (MSR) is research involving human subjects, as the repositories usually contain data about developers' and users' interactions with the repositories and with each other. The ethics issues raised by such research therefore need to be considered before beginning. This paper presents a discussion of ethics issues that can arise in MSR research, using the mining challenges from the years 2006 to 2021 as a case study to identify the kinds of data used. On the basis of contemporary research ethics frameworks we discuss ethics challenges that may be encountered in creating and using repositories and associated datasets. We also report some results from a small community survey of approaches to ethics in MSR research. In addition, we present four case studies illustrating typical ethics issues one encounters in projects and how ethics considerations can shape projects before they commence. Based on our experience, we present some guidelines and practices that can help in considering potential ethics issues and reducing risks.
C1 [Gold, Nicolas E.; Krinke, Jens] UCL, UCL Comp Sci, London, England.
C3 University of London; University College London
RP Gold, NE (corresponding author), UCL, UCL Comp Sci, London, England.
EM n.gold@ucl.ac.uk; j.krinke@ucl.ac.uk
RI ; Krinke, Jens/E-9011-2011
OI Gold, Nicolas/0000-0002-2195-5995; Krinke, Jens/0000-0003-1009-2861
CR Abric Durham, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P230, DOI 10.1109/MSR.2019.00046
   Allamanis M, MINING CHALLENGE
   An L, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P283, DOI 10.1109/SANER.2017.7884629
   Andrews A. A., 2001, Empirical Software Engineering, V6, P105, DOI 10.1023/A:1011442319273
   [Anonymous], 2014, COD HUM RES ETH
   [Anonymous], 2019, OPEN SOURCE GUIDES
   [Anonymous], 1978, The Belmont report: Ethical principles and guidelines for the protection of human subjects of research
   Apache Software Foundation, 2004, APACHE LICENSE VERSI
   Association for Computing Machinery, 2018, ACM COD ETH PROF CON, DOI [10.1145/3274591, DOI 10.1145/3274591]
   Atwood Jeff., 2009, STACK OVERFLOW CREAT
   Bacchelli Alberto., 2013, The 10th Working Conference on Mining Software Repositories
   Badampudi D, 2019, PROCEEDINGS OF EASE 2019 - EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING, P340, DOI 10.1145/3319008.3319354
   Badampudi D, 2017, INT SYMP EMP SOFTWAR, P205, DOI 10.1109/ESEM.2017.32
   Bafatakis Nikolaos, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P210, DOI 10.1109/MSR.2019.00042
   Bailey M, 2012, IEEE SECUR PRIV, V10, P71, DOI 10.1109/MSP.2012.52
   Baltes Sebastian, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P191, DOI 10.1109/MSR.2019.00038
   Baltes S, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962628
   Baltes S, 2019, EMPIR SOFTW ENG, V24, P1259, DOI 10.1007/s10664-018-9650-5
   Baltes S, 2018, IEEE WORK CONF MIN S, P319, DOI 10.1145/3196398.3196430
   Baltes Sebastian, 2019, THESIS U TRIER
   Baltes Sebastian, 2020, SOTORRENT DATASET
   Baysal Olga, 2014, MINING CHALLENGE
   BCS The Chartered Institute for IT, 2021, COD COND BCS MEMB
   Beller M, 2017, MINING CHALLENGE
   Beller M, 2017, IEEE WORK CONF MIN S, P447, DOI 10.1109/MSR.2017.24
   Benbunan-Fich Raquel, 2017, Research Ethics, V13, P200, DOI DOI 10.1177/1747016116680664
   BERA (British Educational Research Organisation), 2018, Ethical Guidelines for Educational Research, V4th
   Berry DM, 2004, INTERNET RES, V14, P323, DOI 10.1108/10662240410555333
   Bird C, 2009, MSR MINING CHALLENGE
   Bosu A, 2019, INT SYMP EMP SOFTWAR, P295
   Broad E, 2017, HELPING ORG NAVIGATE
   Cortazar DI, 2018, GENDER DIVERSITY ANA
   Craver N, 2018, INVALID COLUMN NAME
   Creative Commons, 2009, CC0 1 0 UN
   Debian, 2020, ULT DEB DAT
   Debian, 2020, PRIV POL
   Dench S., 2004, EU CODE ETHICS SOCIO
   Diehl Stephan, 2019, MINING CHALLENGE
   Dittrich D., 2012, The Menlo Report: Ethical principles guiding information and communication technology research
   Dittrich David, 2013, Technical Report
   Dyer R, 2015, ACM T SOFTW ENG METH, V25, DOI 10.1145/2803171
   Dyer R, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P422, DOI 10.1109/ICSE.2013.6606588
   Dyer Robert, 2013, THESIS IOWA STATE U
   Eclipse Foundation, 2019, ECL ORG TERMS US
   Eclipse Foundation, ECL FDN SOFTW US AGR
   Eclipse Foundation, 2017, ECL PUBL LIC V 2 0
   El-Emam K., 2001, Empirical Software Engineering, V6, P291, DOI 10.1023/A:1011962213685
   Empirical Software Engineering, 2020, COMPL ETH STAND
   European Commission, 2016, REGULATION EU 201667
   Franzke A.S., 2020, Internet Research: Ethical Guidelines 3.0
   Free Software Foundation, 2021, VAR LIC COMM THEM
   Fry T, 2020, IEEE WORK CONF MIN S, P518, DOI 10.1145/3379597.3387500
   German D. M., 2004, "International Workshop on Mining Software Repositories (MSR 2004)" W17S Workshop - 26th International Conference on Software Engineering, P17, DOI 10.1049/ic:20040469
   GitHub Inc, 2020, UPD OUR TERMS SERV P
   GitHub Inc, 2021, INF US RESTR
   GitHub Inc, 2020, GITHUB TERMS SERV D
   Gold NE, 2020, ETHICAL MINING CASE
   Gold NE, 2020, IEEE WORK CONF MIN S, P265, DOI 10.1145/3379597.3387462
   Gonzalez-Barahona JM, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P478, DOI 10.1109/MSR.2015.68
   Gonzalez-Barahona JM, 2020, MINING SOFTWARE REPO
   Gotterbarn D, 2001, SCI ENG ETHICS, V7, P231
   Gousios G, 2013, IEEE WORK CONF MIN S, P233, DOI 10.1109/MSR.2013.6624034
   Hall T., 2001, Empirical Software Engineering, V6, P305, DOI 10.1023/A:1011922615502
   Han DG, 2020, IEEE INT WORK C SO, P43, DOI [10.1109/SCAM51674.2020.00010, 10.1109/scam51674.2020.00010]
   Hand DJ, 2018, BIG DATA, V6, P176, DOI 10.1089/big.2018.0083
   Harris PA, 2019, J BIOMED INFORM, V95, DOI 10.1016/j.jbi.2019.103208
   Harris PA, 2009, J BIOMED INFORM, V42, P377, DOI 10.1016/j.jbi.2008.08.010
   Henderson Fergus, 2017, ARXIV170201715
   Hindle Abram, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P82, DOI 10.1109/MSR.2010.5463350
   Hindle Abram, 2010, MSR MINING CHALLENGE
   Horwitz J, 2020, WALL STREET J E EDIT
   Karampatsis RM, 2020, IEEE WORK CONF MIN S, P573, DOI 10.1145/3379597.3387491
   KIM S, 2008, MSR MINING CHALLENGE
   Lin B, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P425, DOI [10.1145/2901739.2901777, 10.1109/MSR.2016.050]
   Locatelli E, 2020, ACADEMY IND PARTNERS
   Markham A.N., 2006, Journal of Information Ethics, V15, P37, DOI [DOI 10.3172/JIE.15.2.37, 10 .3172/JIE.15.2.37]
   Markham Annete, 2012, ETHICAL DECISION MAK
   Markovtsev V, 2018, IEEE WORK CONF MIN S, P34, DOI 10.1145/3196398.3196464
   Matalonga Hugo, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P171, DOI 10.1109/MSR.2019.00034
   Menzies T, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P103, DOI 10.1145/2591062.2594395
   Miller FG, 2002, LANCET, V360, P1326, DOI 10.1016/S0140-6736(02)11346-8
   Morreale F, 2020, NIME PRINCIPLES CODE
   Naughton J, 2020, The Guardian
   Nguyen Hoan, 2016, MINING CHALLENGE
   Nieweler A., 2014, Whistleblower Security
   Oezbek Christopher, 2008, P 4 RES ROOM FOSDEM
   Open Source Initiative, 2019, LIC NAM
   Paixao M, 2021, IEEE T SOFTWARE ENG, V47, P1041, DOI 10.1109/TSE.2019.2912113
   Paixao M, 2020, IEEE WORK CONF MIN S, P125, DOI 10.1145/3379597.3387475
   Paixao M, 2018, IEEE WORK CONF MIN S, P46, DOI 10.1145/3196398.3196466
   Paixao M, 2017, IEEE INT CONF AUTOM, P95, DOI 10.1109/ASE.2017.8115622
   Pietri Antoine, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P138, DOI 10.1109/MSR.2019.00030
   Pietri A, 2020, MINING CHALLENGE
   Pietri Antoine, 2020, MSR 2020 17 INT C MI
   Pinzger M, 2006, MSR MINING CHALLENGE
   Proksch S, 2019, KAVE PROJECT
   Proksch S, 2017, THESIS TU DARMSTADT
   Proksch S, 2018, IEEE WORK CONF MIN S, P62, DOI 10.1145/3196398.3196400
   Proksch Sebastian, 2018, MINING CHALLENGE
   Ragkhitwetsagul C, 2021, IEEE T SOFTWARE ENG, V47, P560, DOI 10.1109/TSE.2019.2900307
   Ralph P, 2021, ARXIV201003525CSSE
   Rao N, 2021, IEEE WORK CONF MIN S, P575, DOI 10.1109/MSR52588.2021.00077
   Robles G., 2014, P 11 WORK C MIN SOFT, P396, DOI DOI 10.1145/2597073.2597129
   Schroter A, 2011, MINING CHALLENGE
   Schroter Adrian., 2011, Proc. of the 8th Working Conference on Mining Software Repositories, P227, DOI [10.1145/1985441.1985478, DOI 10.1145/1985441.1985478]
   Shihab E., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P112, DOI 10.1109/MSR.2012.6224307
   Shihab Emad, 2012, MINING CHALLENGE
   Singer J, 2002, IEEE T SOFTWARE ENG, V28, P1171, DOI 10.1109/TSE.2002.1158289
   Singer J., 2001, Empirical Software Engineering, V6, P287, DOI DOI 10.1023/A:1011998412776
   Singh MP, 2020, COMPUTER, V53, P53, DOI 10.1109/MC.2019.2947372
   Soto-Valero C, 2018, IEEE WORK CONF MIN S, P110, DOI 10.1145/3196398.3196452
   Stahl BC, 2016, ACM COMPUT SURV, V48, DOI 10.1145/2871196
   Sugiura L., 2017, Research Ethics, V13, P184, DOI [10.1177/1747016116650720, DOI 10.1177/1747016116650720]
   The FreeBSD Project, 2012, FREEBSDS PRIV POL
   The Linux Foundation, 2018, SUMM GDPR CONC FREE
   The TestRoots Team, 2020, TRAVISTORRENT FREE O
   Thomas DR, 2017, PROCEEDINGS OF THE 2017 INTERNET MEASUREMENT CONFERENCE (IMC'17), P445, DOI 10.1145/3131365.3131389
   Travis CI, 2019, PRIV POL
   Tuikka AM, 2017, ORBIT J, V1, DOI [10.29297/orbit.v1i2.50, DOI 10.29297/ORBIT.V1I2.50]
   UCL Research Ethics Committee, 2020, RES ETH UCL
   Vasilescu B, 2015, CHI 2015: PROCEEDINGS OF THE 33RD ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P3789, DOI 10.1145/2702123.2702549
   Vinson N., 2001, Empirical Software Engineering, V6, P293, DOI 10.1023/A:1011966430523
   Vinson NG., 2008, PRACTICAL GUIDE ETHI, P229, DOI DOI 10.1007/978-1-84800-044-5
   Wallace C., 2016, Social Media Research: A Guide to Ethics
   Whitney SN., 2016, BALANCED ETHICS REV, DOI [10.1007/978-3-319-20705-6, DOI 10.1007/978-3-319-20705-6]
   Wilkie J, 2018, IEEE WORK CONF MIN S, P90, DOI 10.1145/3196398.3196461
   Yamashita A, 2018, IEEE WORK CONF MIN S, P50, DOI 10.1145/3196398.3196457
   Yamashita A, 2017, IEEE WORK CONF MIN S, P507, DOI 10.1109/MSR.2017.44
   Ying A, 2015, MINING CHALLENGE
   ZIMMERMANN T, 2007, MSR MINING CHALLENGE
NR 130
TC 12
Z9 12
U1 1
U2 14
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN
PY 2022
VL 27
IS 1
AR 17
DI 10.1007/s10664-021-10057-7
PG 49
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WQ1QM
UT WOS:000713596400001
OA hybrid
DA 2024-07-18
ER

PT J
AU Izadi, M
   Heydarnoori, A
   Gousios, G
AF Izadi, Maliheh
   Heydarnoori, Abbas
   Gousios, Georgios
TI Topic recommendation for software repositories using multi-label
   classification algorithms
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Topic tag recommendation; Multi-label classification; Recommender
   systems; Mining software repositories; GitHub
ID TAG RECOMMENDATION; SYSTEM
AB Many platforms exploit collaborative tagging to provide their users with faster and more accurate results while searching or navigating. Tags can communicate different concepts such as the main features, technologies, functionality, and the goal of a software repository. Recently, GitHub has enabled users to annotate repositories with topic tags. It has also provided a set of featured topics, and their possible aliases, carefully curated with the help of the community. This creates the opportunity to use this initial seed of topics to automatically annotate all remaining repositories, by training models that recommend high-quality topic tags to developers. In this work, we study the application of multi-label classification techniques to predict software repositories' topics. First, we map the large-space of user-defined topics to those featured by GitHub. The core idea is to derive more information from projects' available documentation. Our data contains about 152K GitHub repositories and 228 featured topics. Then, we apply supervised models on repositories' textual information such as descriptions, README files, wiki pages, and file names. We assess the performance of our approach both quantitatively and qualitatively. Our proposed model achieves Recall@5 and LRAP scores of 0.890 and 0.805, respectively. Moreover, based on users' assessment, our approach is highly capable of recommending correct and complete set of topics. Finally, we use our models to develop an online tool named Repository Catalogue, that automatically predicts topics for GitHub repositories and is publicly available(1).
C1 [Izadi, Maliheh; Heydarnoori, Abbas] Sharif Univ Technol, Tehran, Iran.
   [Gousios, Georgios] Facebook Inc, Menlo Pk, CA USA.
C3 Sharif University of Technology; Facebook Inc
RP Heydarnoori, A (corresponding author), Sharif Univ Technol, Tehran, Iran.
EM heydarnoori@sharif.edu
RI Heydarnoori, Abbas/ABB-2493-2020
OI Heydarnoori, Abbas/0000-0001-9785-2880; Izadi,
   Maliheh/0000-0001-5093-5523
CR Cai XY, 2016, P INT COMP SOFTW APP, P63, DOI 10.1109/COMPSAC.2016.124
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   Di Sipio Claudio, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P71, DOI 10.1145/3383219.3383227
   Feldt R, 2010, 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING & KNOWLEDGE ENGINEERING (SEKE 2010), P374
   Friedman M, 1940, ANN MATH STAT, V11, P86, DOI 10.1214/aoms/1177731944
   Golder SA, 2006, J INF SCI, V32, P198, DOI 10.1177/0165551506062337
   Held C, 2012, COMPUT HUM BEHAV, V28, P34, DOI 10.1016/j.chb.2011.08.008
   Herbold S., 2020, Journal of Open Source Software, V5, P2173, DOI DOI 10.21105/JOSS.02173
   Izadi M, 2014, P RECSYS C REDD WORK
   Jalili M, 2018, IEEE ACCESS, V6, P74003, DOI 10.1109/ACCESS.2018.2883742
   Joulin A., 2017, P 15 C EUR CHAPT ASS, P427, DOI DOI 10.18653/V1/E17-2068
   Kalliamvakou E, 2016, EMPIR SOFTW ENG, V21, P2035, DOI 10.1007/s10664-015-9393-5
   Kawaguchi S, 2006, J SYST SOFTWARE, V79, P939, DOI 10.1016/j.jss.2005.06.044
   Linares-Vasquez M, 2014, EMPIR SOFTW ENG, V19, P582, DOI 10.1007/s10664-012-9230-z
   Liu J, 2018, AUTOMAT SOFTW ENG, V25, P675, DOI 10.1007/s10515-018-0239-4
   Maity Suman Kalyan, 2019, Advances in Information Retrieval. 41st European Conference on IR Research, ECIR 2019. Proceedings: Lecture Notes in Computer Science (LNCS 11438), P125, DOI 10.1007/978-3-030-15719-7_16
   NEMENYI P, 1962, BIOMETRICS, V18, P263
   Sanh, 2019, P 5 WORKSH EN EFF MA
   Schapire RE, 2000, MACH LEARN, V39, P135, DOI 10.1023/A:1007649029923
   Tian K, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P163, DOI 10.1109/MSR.2009.5069496
   Treude C, 2009, PROC INT CONF SOFTW, P12, DOI 10.1109/ICSE.2009.5070504
   Vargas-Baldrich S, 2015, IEEE INT CONF AUTOM, P289, DOI 10.1109/ASE.2015.38
   Vaswani A, 2017, ADV NEUR IN, V30
   Wang SW, 2018, EMPIR SOFTW ENG, V23, P800, DOI 10.1007/s10664-017-9533-1
   Wang T, 2014, FRONT COMPUT SCI-CHI, V8, P69, DOI 10.1007/s11704-013-2394-x
   Xia X, 2013, IEEE WORK CONF MIN S, P287, DOI 10.1109/MSR.2013.6624040
   Zhou PY, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P272, DOI 10.1109/SANER.2017.7884628
NR 27
TC 18
Z9 19
U1 0
U2 10
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2021
VL 26
IS 5
AR 93
DI 10.1007/s10664-021-09976-2
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UJ9IF
UT WOS:000691590700001
DA 2024-07-18
ER

PT J
AU Qu, Y
   Yin, H
AF Qu, Yu
   Yin, Heng
TI Evaluating network embedding techniques' performances in software bug
   prediction
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software bug; Bug prediction; Network embedding; Network representation
   learning; Effort-aware bug prediction; Empirical study
ID DEFECT; CLASSIFICATION; MODELS
AB Software bug prediction techniques can be very helpful in testing and code inspection. Over the past decade, network measures have been successfully used in bug prediction. Following the same intuition, recently, researchers started using network embedding techniques in bug prediction. However, existing studies only evaluated the Skip-gram and CBOW models with random walk. Considering network embedding is a fast-developing research direction, it is important to evaluate other network embedding techniques' performances in bug prediction. Moreover, existing studies have not investigated the application and performance of network embedding in effort-aware bug prediction, which is thought to be a more realistic scenario that evaluates the cost effectiveness of bug prediction models. In this paper, we conduct an extensive empirical study to evaluate network embedding algorithms in bug prediction by utilizing and extending node2defect, a newly proposed bug prediction model that combines the embedded vectors with traditional software engineering metrics through concatenation. Experiments are conducted based on seven network embedding algorithms, two effort-aware models, and 13 open-source Java systems. Experimental results show that node2defect outperforms traditional metrics by + 14.64% in terms of MCC score, and by + 7.51% to + 16.57% in effort-aware bug prediction. More interestingly, when combined with CBS + , the embedded vectors alone can achieve the best performance. Among different network embedding algorithms, the newly proposed algorithm ProNE has the best performance.
C1 [Qu, Yu; Yin, Heng] Univ Calif Riverside, Dept Comp Sci & Engn, Riverside, CA 92521 USA.
C3 University of California System; University of California Riverside
RP Qu, Y (corresponding author), Univ Calif Riverside, Dept Comp Sci & Engn, Riverside, CA 92521 USA.
EM yuq@ucr.edu; heng@cs.ucr.edu
RI Qu, Yu/AAD-9426-2020
OI Qu, Yu/0000-0002-1400-6740; Yin, Heng/0000-0002-8942-7742
FU National Science Foundation [1719175]; Office of Naval Research
   [N00014-17-1-2893]; National Natural Science Foundation of China
   [61602369]; Direct For Computer & Info Scie & Enginr; Division Of
   Computer and Network Systems [1719175] Funding Source: National Science
   Foundation
FX We would like to thank the anonymous reviewers for their insightful
   comments and valuable suggestions for improving this paper. This work
   was supported in part by National Science Foundation under Grant No.
   1719175, Office of Naval Research under Award No. N00014-17-1-2893, and
   National Natural Science Foundation of China under Grant No. 61602369.
   Any opinions, findings, and conclusions or recommendations expressed in
   this paper are those of the authors and do not necessarily reflect the
   views of the funding agencies.
CR Abu Elkhail A, 2019, 2019 IEEE 5TH INTL CONFERENCE ON BIG DATA SECURITY ON CLOUD (BIGDATASECURITY) / IEEE INTL CONFERENCE ON HIGH PERFORMANCE AND SMART COMPUTING (HPSC) / IEEE INTL CONFERENCE ON INTELLIGENT DATA AND SECURITY (IDS), P7, DOI 10.1109/BigDataSecurity-HPSC-IDS.2019.00013
   Agrawal A, 2019, INF ECON POLICY, V47, P1, DOI 10.1016/j.infoecopol.2019.05.001
   Agrawal A, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1050, DOI 10.1145/3180155.3180197
   Belkin M, 2002, ADV NEUR IN, V14, P585
   Benni KE, 2018, IEEE T SOFTWARE ENG, V44, P534, DOI 10.1109/TSE.2017.2731766
   Bowes David., 2016, Proceedings of the 25th International Symposium on Software Testing and Analysis, P330, DOI DOI 10.1145/2931037.2931039
   Breiman L., 2001, Mach. Learn., V45, P5
   Cai HY, 2018, IEEE T KNOWL DATA EN, V30, P1616, DOI 10.1109/TKDE.2018.2807452
   Cao Shaosheng, 2015, P 24 ACM INT C INF K, P891
   Casanova A, 2018, 6 INT C LEARN REPR
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chen L, 2016, SCI CHINA INFORM SCI, V59, DOI 10.1007/s11432-015-5426-3
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   D'Ambros Marco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P31, DOI 10.1109/MSR.2010.5463279
   Fu W, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P72, DOI 10.1145/3106237.3106257
   Goyal P, 2018, KNOWL-BASED SYST, V151, P78, DOI 10.1016/j.knosys.2018.03.022
   Grover A, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P855, DOI 10.1145/2939672.2939754
   Guo YC, 2018, PROC IEEE ACM INT C, P325, DOI 10.1145/3183440.3194992
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Harris E, 2002, INT S ART INT MATH A, V2, P2002
   He ZM, 2012, AUTOMAT SOFTW ENG, V19, P167, DOI 10.1007/s10515-011-0090-3
   Herbold S, 2018, IEEE T SOFTWARE ENG, V44, P811, DOI 10.1109/TSE.2017.2724538
   Herzig K, 2013, PROC INT SYMP SOFTW, P118, DOI 10.1109/ISSRE.2013.6698911
   Dam HK, 2021, IEEE T SOFTWARE ENG, V47, P67, DOI 10.1109/TSE.2018.2881961
   Hosmer DW, 2013, WILEY SER PROBAB ST, P1, DOI 10.1002/9781118548387
   Huang Q, 2019, EMPIR SOFTW ENG, V24, P2823, DOI 10.1007/s10664-018-9661-2
   Huang Q, 2017, PROC IEEE INT CONF S, P159, DOI 10.1109/ICSME.2017.51
   Jimenez M, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P695, DOI 10.1145/3338906.3338941
   Jureczko M, 2010, P 6 INT C PREDICTIVE, DOI DOI 10.1145/1868328.1868342
   Kamei Y., 2010, Proceedings of the 26th International Conference on Software Maintenance, P1, DOI 10.1109/ICSM.2010.5609530
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kipf T.N., 2017, ICLR 2017
   Kong YX, 2019, PHYS REP, V832, P1, DOI 10.1016/j.physrep.2019.10.004
   Lee JR, 2014, J ACM, V61, DOI 10.1145/2665063
   Lenarduzzi V, 2020, INT C PROGRAM COMPRE, P446, DOI 10.1145/3387904.3389295
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Loyola P, 2017, PROC INT SYMP SOFTW, P361, DOI 10.1109/ISSRE.2017.30
   Loyola P, 2017, PROC IEEE ACM INT C, P265, DOI 10.1109/ICSE-C.2017.68
   Ma WWY, 2016, INFORM SOFTWARE TECH, V69, P50, DOI 10.1016/j.infsof.2015.09.001
   MATTHEWS BW, 1975, BIOCHIM BIOPHYS ACTA, V405, P442, DOI 10.1016/0005-2795(75)90109-9
   Mende T., 2009, P 5 INT C PREDICTOR, P1, DOI [10.1145/1540438.1540448, DOI 10.1145/1540438.1540448]
   Mende T, 2010, EUR CON SFTWR MTNCE, P107, DOI 10.1109/CSMR.2010.18
   Mikolov T, 2013, ICLR WORKSHOP POSTER
   Monden A, 2013, IEEE T SOFTWARE ENG, V39, P1345, DOI 10.1109/TSE.2013.21
   Nguyen T.N. D., 2010, Proceedings of the International Conference on Software Maintenance, P1, DOI DOI 10.1109/ICSM.2010.5609560
   Osman H, 2017, Proceedings of the 13th International Conference on Predictive Models and Data Analytics in Software Engineering, P107
   Palomba F, 2016, PROC IEEE INT CONF S, P245, DOI 10.1109/ICSME.2016.27
   Pascarella L, 2020, J SYST SOFTWARE, V161, DOI 10.1016/j.jss.2019.110493
   Perozzi B., 2017, P 2017 IEEE ACM INT, P258, DOI 10.1145/3110025.3110086
   Perozzi B, 2014, PROCEEDINGS OF THE 20TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'14), P701, DOI 10.1145/2623330.2623732
   Pinzger Martin, 2008, P 16 ACM SIGSOFT INT, P2, DOI DOI 10.1145/1453101.1453105
   Premraj R, 2011, INT SYMP EMP SOFTWAR, P215, DOI 10.1109/ESEM.2011.30
   Qu Y, 2021, IEEE T SOFTWARE ENG, V47, P348, DOI 10.1109/TSE.2019.2892959
   Qu Y, 2018, IEEE INT CONF AUTOM, P844, DOI 10.1145/3238147.3240469
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Subelj L, 2011, PHYSICA A, V390, P2968, DOI 10.1016/j.physa.2011.03.036
   Suykens JAK, 1999, NEURAL PROCESS LETT, V9, P293, DOI 10.1023/A:1018628609742
   Tang J, 2015, PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW 2015), P1067, DOI 10.1145/2736277.2741093
   Tantithamthavorn C, 2019, IEEE T SOFTWARE ENG, V45, P683, DOI 10.1109/TSE.2018.2794977
   Tosun A., 2009, P 5 INT C PRED MOD S, P1, DOI DOI 10.1145/1540438.1540446
   Tu K, 2018, KDD'18: PROCEEDINGS OF THE 24TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY & DATA MINING, P2357, DOI 10.1145/3219819.3220068
   Wang DX, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1225, DOI 10.1145/2939672.2939753
   Wattanakriengkrai S, 2022, IEEE T SOFTWARE ENG, V48, P1480, DOI 10.1109/TSE.2020.3023177
   Witten IH, 2011, MOR KAUF D, P1
   Yang YB, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P157, DOI 10.1145/2950290.2950353
   Yang YB, 2015, IEEE T SOFTWARE ENG, V41, P331, DOI 10.1109/TSE.2014.2370048
   Zhang Jie, 2019, P 28 INT JOINT C ART, P4278, DOI 10.24963/ijcai.2019/594
   Zhao YY, 2017, AUTOMAT SOFTW ENG, V24, P393, DOI 10.1007/s10515-016-0198-6
   Zimmermann T, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P531, DOI 10.1145/1368088.1368161
NR 69
TC 15
Z9 15
U1 1
U2 25
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2021
VL 26
IS 4
AR 60
DI 10.1007/s10664-021-09965-5
PG 44
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RS6YZ
UT WOS:000643923500001
DA 2024-07-18
ER

PT J
AU Timperley, CS
   Herckis, L
   Le Goues, C
   Hilton, M
AF Timperley, Christopher S.
   Herckis, Lauren
   Le Goues, Claire
   Hilton, Michael
TI Understanding and improving artifact sharing in software engineering
   research
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Replication; Artifacts; Reproducibility; Implementation science;
   Replicability; Diffusion
AB In recent years, many software engineering researchers have begun to include artifacts alongside their research papers. Ideally, artifacts, including tools, benchmarks, and data, support the dissemination of ideas, provide evidence for research claims, and serve as a starting point for future research. However, in practice, artifacts suffer from a variety of issues that prevent the realization of their full potential. To help the software engineering community realize the full potential of artifacts, we seek to understand the challenges involved in the creation, sharing, and use of artifacts. To that end, we perform a mixed-methods study including a survey of artifacts in software engineering publications, and an online survey of 153 software engineering researchers. By analyzing the perspectives of artifact creators, users, and reviewers, we identify several high-level challenges that affect the quality of artifacts including mismatched expectations between these groups, and a lack of sufficient reward for both creators and reviewers. Using Diffusion of Innovations (DoI) as an analytical framework, we examine how these challenges relate to one another, and build an understanding of the factors that affect the sharing and success of artifacts. Finally, we make recommendations to improve the quality of artifacts based on our results and existing best practices.
C1 [Timperley, Christopher S.; Le Goues, Claire; Hilton, Michael] Carnegie Mellon Univ, Sch Comp Sci, Pittsburgh, PA 15213 USA.
   [Herckis, Lauren] Carnegie Mellon Univ, Dietrich Coll Humanities & Social Sci, Pittsburgh, PA 15213 USA.
C3 Carnegie Mellon University; Carnegie Mellon University
RP Timperley, CS (corresponding author), Carnegie Mellon Univ, Sch Comp Sci, Pittsburgh, PA 15213 USA.
EM ctimperley@cmu.edu; lrhercki@andrew.cmu.edu; clegoues@cs.cmu.edu;
   mhilton@cmu.edu
OI Herckis, Lauren/0000-0002-3177-2412; Hilton,
   Michael/0000-0001-9195-6902; Le Goues, Claire/0000-0002-3931-060X
CR [Anonymous], 1995, Education
   [Anonymous], 2003, NIH Data Sharing Policy and Implementation Guidance
   Apache, 2004, APACHE LICENSE VERSI
   Association for Computing Machinery, 2018, ART REV BADG
   Association for Computing Machinery, 2020, SOFTW DAT ART ACM DI
   Austin J, 2011, PROCEDIA COMPUT SCI, V4, P768, DOI 10.1016/j.procs.2011.04.081
   Basili VR, 2007, EMPIR SOFTW ENG, V12, P107, DOI 10.1007/s10664-006-9030-4
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Bauer Mark S, 2015, BMC Psychol, V3, P32, DOI 10.1186/s40359-015-0089-9
   Beller Moritz, 2020, WHY I WILL NEVER JOI
   Brammer GR, 2011, PROCEDIA COMPUT SCI, V4, P658, DOI 10.1016/j.procs.2011.04.069
   Brooks A., 2008, REPLICATIONS ROLE SO, P365, DOI DOI 10.1007/978-1-84800-044-5_14
   Carver JC, 2010, P 1 INT WORKSH REPL, P1
   Carver JC, 2014, EMPIR SOFTW ENG, V19, P267, DOI 10.1007/s10664-013-9290-8
   Charmaz K., 2014, CONSTRUCTING GROUNDE, V2nd ed
   Childers BR, 2018, PROC INT CONF DATA, P1664, DOI 10.1109/ICDE.2018.00204
   Childers BR, 2017, P IEEE INT C E-SCI, P488, DOI 10.1109/eScience.2017.79
   Collberg C, 2015, 1404 TR U AR
   Collberg C, 2016, COMMUN ACM, V59, P62, DOI 10.1145/2812803
   Creative Commons, 2013, ATTR 4 0 INT CC BY 4
   Creswell J. W., 2007, DESIGNING CONDUCTING
   Di Cosmo Roberto, 2017, P 14 INT C DIGITAL P
   Docker Inc, 2020, ABOUT US
   El Emam K, 2011, PLOS ONE, V6, DOI 10.1371/journal.pone.0028071
   Engineering and Physical Sciences Research Council, 2011, EPSRC POL FRAM RES D
   European Commission, 2016, H2020 programme: Guidelines on FAIR data management in Horizon 2020
   European Commission, 2020, HOR 2020 OP ACC
   European Organization For Nuclear Research and OpenAIRE, 2013, Zenodo, DOI [DOI 10.25495/7GXK-RD71, 10.25495/7GXK-RD71]
   Flittner M, 2017, PROCEEDINGS OF THE 2017 REPRODUCIBILITY WORKSHOP (REPRODUCIBILITY '17), P14, DOI 10.1145/3097766.3097770
   Frambach RT, 2002, J BUS RES, V55, P163, DOI 10.1016/S0148-2963(00)00152-1
   Free Software Foundation, 2021, GNU MAK
   Fursin G, 2016, DES AUT TEST EUROPE, P864
   Glasgow RE, 1999, AM J PUBLIC HEALTH, V89, P1322, DOI 10.2105/AJPH.89.9.1322
   Gómez C, 2013, IEEE WORK CONF MIN S, P81, DOI 10.1109/MSR.2013.6624011
   Gradle, 2021, GRADL BUILD TOOL
   Green GC, 2000, IEEE SOFTWARE, V17, P96, DOI 10.1109/52.895175
   Hager C, 2016, PDFX
   Herckis L., 2018, CURRENT ISSUES EMERG, V5, P4
   Hermann B, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P469, DOI 10.1145/3368089.3409767
   Heumüller R, 2020, EMPIR SOFTW ENG, V25, P4585, DOI 10.1007/s10664-020-09851-6
   Ji SL, 2014, CCS'14: PROCEEDINGS OF THE 21ST ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1040, DOI 10.1145/2660267.2660278
   Jimenez I, 2017, IEEE SYM PARA DISTR, P1561, DOI 10.1109/IPDPSW.2017.157
   JOHNS G, 1993, PERS PSYCHOL, V46, P569, DOI 10.1111/j.1744-6570.1993.tb00885.x
   Kitchenham B, 2008, EMPIR SOFTW ENG, V13, P219, DOI 10.1007/s10664-008-9061-0
   Kitto SC, 2008, MED J AUSTRALIA, V188, P243, DOI 10.5694/j.1326-5377.2008.tb01595.x
   Kitware, 2021, CMAKE
   Kluyver T, 2016, POSITIONING AND POWER IN ACADEMIC PUBLISHING: PLAYERS, AGENTS AND AGENDAS, P87, DOI 10.3233/978-1-61499-649-1-87
   Kotti Z, 2020, EMPIR SOFTW ENG, V25, P3288, DOI 10.1007/s10664-020-09834-7
   Krishnamurthi Shriram, 2013, Software Engineering Notes, V38, P7, DOI 10.1145/2464526.2464530
   Krishnamurthi S, 2013, REPRODUCIBILITY COMP
   Krishnamurthi S, 2014, GUIDELINES PACKAGING
   Krishnamurthi S, 2015, COMMUN ACM, V58, P34, DOI 10.1145/2658987
   Li-Thiao-Té S, 2012, PROCEDIA COMPUT SCI, V9, P439, DOI 10.1016/j.procs.2012.04.047
   Lindvall M, 2005, INNOV SYST SOFTW ENG, V1, P3, DOI 10.1007/s11334-005-0007-z
   Meng HY, 2016, P IEEE INT C E-SCI, P91, DOI 10.1109/eScience.2016.7870889
   Miranda M, 2014, PROCEEDINGS OF THE 1ST INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2014), P50, DOI 10.1145/2593902.2593915
   Morse J. M., 1991, Qualitative Nursing Research: A Contemporary Dialogue, P14
   Murphy-Hill E, 2019, PROC INT CONF SOFTW, P465, DOI 10.1109/ICSE.2019.00059
   Narayanan A, 2008, P IEEE S SECUR PRIV, P111, DOI 10.1109/SP.2008.33
   NSF, 2011, DISS SHAR RES RES
   O'Neill HM, 1998, ACAD MANAGE REV, V23, P98, DOI 10.2307/259101
   Oracle, 2021, VirtualBox
   Patterson D., 1999, COMPUT RES NEWS
   Premkumar G., 1994, Journal of Management Information Systems, V11, P157
   PyPA, 2021, PIP PYTH PACK INST
   QEMU, 2021, QEMU
   RedHat, 2021, PODM
   Rogers E.M., 2010, DIFFUSION INNOVATION
   Rougier NP, 2017, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.142
   Saldana J, 2015, Sage
   Shull F, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P7, DOI 10.1109/ISESE.2002.1166920
   Shull FJ, 2008, EMPIR SOFTW ENG, V13, P211, DOI 10.1007/s10664-008-9060-1
   Silverman D., 2013, DOING QUALITATIVE RE, DOI DOI 10.3917/DS.293.0349
   Smith AM, 2016, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.86
   Stodden, 2009, INT J COMMUN LAW POL, V13
   Stodden V., 2014, Implementing reproducible research
   Stodden V, 2009, COMPUT SCI ENG, V11, P35, DOI 10.1109/MCSE.2009.19
   Timperley CS, 2018, PROC IEEE ACM INT C, P446, DOI 10.1145/3183440.3195050
   WOLFE RA, 1994, J MANAGE STUD, V31, P405, DOI 10.1111/j.1467-6486.1994.tb00624.x
   Zerhouni E, 2003, SCIENCE, V302, P63, DOI 10.1126/science.1091867
NR 80
TC 6
Z9 6
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2021
VL 26
IS 4
AR 67
DI 10.1007/s10664-021-09973-5
PG 41
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA VM7GC
UT WOS:001030281800001
OA hybrid
DA 2024-07-18
ER

PT J
AU Soto-Valero, C
   Harrand, N
   Monperrus, M
   Baudry, B
AF Soto-Valero, Cesar
   Harrand, Nicolas
   Monperrus, Martin
   Baudry, Benoit
TI A comprehensive study of bloated dependencies in the Maven ecosystem
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Dependency management; Software reuse; Debloating; Program analysis
ID SOFTWARE; REUSE
AB Build automation tools and package managers have a profound influence on software development. They facilitate the reuse of third-party libraries, support a clear separation between the application's code and its external dependencies, and automate several software development tasks. However, the wide adoption of these tools introduces new challenges related to dependency management. In this paper, we propose an original study of one such challenge: the emergence of bloated dependencies. Bloated dependencies are libraries that are packaged with the application's compiled code but that are actually not necessary to build and run the application. They artificially grow the size of the built binary and increase maintenance effort. We propose DepClean, a tool to determine the presence of bloated dependencies in Maven artifacts. We analyze 9,639 Java artifacts hosted on Maven Central, which include a total of 723,444 dependency relationships. Our key result is as follows: 2.7% of the dependencies directly declared are bloated, 15.4% of the inherited dependencies are bloated, and 57% of the transitive dependencies of the studied artifacts are bloated. In other words, it is feasible to reduce the number of dependencies of Maven artifacts to 1/4 of its current count. Our qualitative assessment with 30 notable open-source projects indicates that developers pay attention to their dependencies when they are notified of the problem. They are willing to remove bloated dependencies: 21/26 answered pull requests were accepted and merged by developers, removing 140 dependencies in total: 75 direct and 65 transitive.
C1 [Soto-Valero, Cesar; Harrand, Nicolas] KTH Royal Inst Technol, Software Engn, Stockholm, Sweden.
   [Monperrus, Martin; Baudry, Benoit] KTH Royal Inst Technol, Software Technol, Stockholm, Sweden.
C3 Royal Institute of Technology; Royal Institute of Technology
RP Soto-Valero, C (corresponding author), KTH Royal Inst Technol, Software Engn, Stockholm, Sweden.
EM cesarsv@kth.se
RI Monperrus, Martin/I-3640-2012; Soto-Valero, César/AAB-9333-2019
OI Monperrus, Martin/0000-0003-3505-3383; Soto-Valero,
   César/0000-0003-0541-6411; Harrand, Nicolas Yves
   Maurice/0000-0002-2491-2771; Baudry, Benoit/0000-0002-4015-4640
FU Wallenberg AI, Autonomous Systems and Software Program (WASP) - Knut and
   Alice Wallenberg Foundation
FX This work was partially supported by the Wallenberg AI, Autonomous
   Systems and Software Program (WASP) funded by Knut and Alice Wallenberg
   Foundation.
CR [Anonymous], 2007, GUIDE ADV EMPIRICAL
   [Anonymous], 2014, The Java Virtual Machine Specification, Java SE 8 Edition
   Arias TBC, 2011, EMPIR SOFTW ENG, V16, P544, DOI 10.1007/s10664-011-9158-8
   Azad BA, 2019, PROCEEDINGS OF THE 28TH USENIX SECURITY SYMPOSIUM, P1697
   Baudry B, 2019, ARXIV190809757
   Bauer Veronika, 2014, INT WORKSHOP SOFTWAR, P14, DOI DOI 10.1145/2593850.2593854
   Bavota G, 2015, EMPIR SOFTW ENG, V20, P1275, DOI 10.1007/s10664-014-9325-9
   Benelallam A, 2019, 16 INT C MIN SOFTW R
   Bezemer CP, 2017, EMPIR SOFTW ENG, V22, P3117, DOI 10.1007/s10664-017-9510-8
   Binkley D, 2019, EMPIR SOFTW ENG, V24, P3077, DOI 10.1007/s10664-018-9675-9
   BROOKS FP, 1987, COMPUTER, V20, P10, DOI 10.1109/MC.1987.1663532
   Celik A, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P643, DOI 10.1145/2950290.2950358
   Cox R, 2019, COMMUN ACM, V62, P36, DOI 10.1145/3347446
   De Roover C, 2013, CONF PROC INT SYMP C, P152, DOI 10.1109/ICPC.2013.6613843
   Decan A, 2019, EMPIR SOFTW ENG, V24, P381, DOI 10.1007/s10664-017-9589-y
   Decan A, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P2, DOI 10.1109/SANER.2017.7884604
   Gkortzis A, 2019, LECT NOTES COMPUT SC, V11602, P187, DOI 10.1007/978-3-030-22888-0_13
   Hejderup J, 2018, PR ZI PACKAGE BASED
   Hejderup J, 2015, THESIS DELFT U TECHN
   Holzmann GJ, 2015, IEEE SOFTWARE, V32, P10, DOI 10.1109/MS.2015.40
   HORWITZ S, 1988, SIGPLAN NOTICES, V23, P35
   Jezek K, 2014, EUROMICRO CONF PROC, P166, DOI 10.1109/SEAA.2014.35
   Jiang YF, 2016, P INT COMP SOFTW APP, P12, DOI 10.1109/COMPSAC.2016.146
   KRUEGER CW, 1992, COMPUT SURV, V24, P131, DOI 10.1145/130844.130856
   Kula RG, 2018, EMPIR SOFTW ENG, V23, P384, DOI 10.1007/s10664-017-9521-5
   Lammel R., 2011, Proceedings of the 2011 ACM Symposium on Applied Computing, P1317, DOI 10.1145/1982185.1982471
   Landman D, 2017, PROC INT CONF SOFTW, P507, DOI 10.1109/ICSE.2017.53
   LIM WC, 1994, IEEE SOFTWARE, V11, P23, DOI 10.1109/52.311048
   McIntosh S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P145, DOI 10.1145/2591062.2591181
   McIntosh S, 2012, EMPIR SOFTW ENG, V17, P578, DOI 10.1007/s10664-011-9169-5
   Myers BA, 2016, COMMUN ACM, V59, P62, DOI 10.1145/2896587
   Naik M, 2019, ARXIV190209589
   NAUR P, 1969, NATO SCI COMM GARM G
   Nguyen PT, 2020, J SYST SOFTWARE, V161, DOI 10.1016/j.jss.2019.110460
   Qiu D, 2016, INFORM SOFTWARE TECH, V73, P81, DOI 10.1016/j.infsof.2016.01.011
   Quach A, 2017, FEAST'17: PROCEEDINGS OF THE 2017 WORKSHOP ON FORMING AN ECOSYSTEM AROUND SOFTWARE TRANSFORMATION, P65, DOI 10.1145/3141235.3141242
   Rastogi V, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P476, DOI 10.1145/3106237.3106271
   Salza P, 2020, EMPIR SOFTW ENG, V25, P2341, DOI 10.1007/s10664-019-09754-1
   Seo H, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P724, DOI 10.1145/2568225.2568255
   Sharif H, 2018, IEEE INT CONF AUTOM, P329, DOI 10.1145/3238147.3238160
   Soto-Valero Cesar, 2019, P 16 IEEE WORK C MIN, P1
   Sridharan M, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P112, DOI 10.1145/1250734.1250748
   Nguyen T, 2016, PROC INT CONF SOFTW, P416, DOI 10.1145/2884781.2884873
   Vázquez HC, 2019, INFORM SOFTWARE TECH, V107, P18, DOI 10.1016/j.infsof.2018.10.009
   Wu YH, 2017, EMPIR SOFTW ENG, V22, P1194, DOI 10.1007/s10664-016-9487-8
   Yu Y., 2003, P 1 IND ACAD C ADV S, P343
NR 46
TC 38
Z9 40
U1 3
U2 12
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR 25
PY 2021
VL 26
IS 3
AR 45
DI 10.1007/s10664-020-09914-8
PG 44
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RF4SZ
UT WOS:000634831400002
OA hybrid
DA 2024-07-18
ER

PT J
AU Ramos-Gutiérrez, B
   Varela-Vaca, AJ
   Galindo, JA
   Gómez-López, MT
   Benavides, D
AF Ramos-Gutierrez, Belen
   Jesus Varela-Vaca, Angel
   Galindo, Jose A.
   Teresa Gomez-Lopez, Maria
   Benavides, David
TI Discovering configuration workflows from existing logs using process
   mining
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Variability; Configuration workflow; Process mining; Process discovery;
   Clustering
ID ATTRIBUTE SELECTION; RECOMMENDER SYSTEMS; AUTOMATED-ANALYSIS; BUSINESS
   PROCESSES; PROCESS MODELS; MONTE-CARLO; FRAMEWORK; METHODOLOGY;
   CRITERION; BEHAVIOR
AB Variability models are used to build configurators, for guiding users through the configuration process to reach the desired setting that fulfils user requirements. The same variability model can be used to design different configurators employing different techniques. One of the design options that can change in a configurator is the configuration workflow, i.e., the order and sequence in which the different configuration elements are presented to the configuration stakeholders. When developing a configurator, a challenge is to decide the configuration workflow that better suits stakeholders according to previous configurations. For example, when configuring a Linux distribution the configuration process starts by choosing the network or the graphic card and then, other packages concerning a given sequence. In this paper, we present COnfiguration workfLOw proceSS mIning (COLOSSI), a framework that can automatically assist determining the configuration workflow that better fits the configuration logs generated by user activities given a set of logs of previous configurations and a variability model. COLOSSI is based on process discovery, commonly used in the process mining area, with an adaptation to configuration contexts. Derived from the possible complexity of both logs and the discovered processes, often, it is necessary to divide the traces into small ones. This provides an easier configuration workflow to be understood and followed by the user during the configuration process. In this paper, we apply and compare four different techniques for the traces clustering: greedy, backtracking, genetic and hierarchical algorithms. Our proposal is validated in three different scenarios, to show its feasibility, an ERP configuration, a Smart Farming, and a Computer Configuration. Furthermore, we open the door to new applications of process mining techniques in different areas of software product line engineering along with the necessity to apply clustering techniques for the trace preparation in the context of configuration workflows.
C1 [Ramos-Gutierrez, Belen; Jesus Varela-Vaca, Angel; Galindo, Jose A.; Teresa Gomez-Lopez, Maria; Benavides, David] Univ Seville, Data Centr Comp Res Hub IDEA, Seville, Spain.
C3 University of Sevilla
RP Ramos-Gutiérrez, B (corresponding author), Univ Seville, Data Centr Comp Res Hub IDEA, Seville, Spain.
EM brgutierrez@us.es; ajvarela@us.es; jagalindo@us.es; maytegomez@us.es;
   benavides@us.es
RI Varela-Vaca, Angel Jesus/K-8149-2014; Ramos-Gutiérrez,
   Belén/AAT-5608-2020; Gutierrez, Belen/KQE-0560-2024; Gómez-López, María
   Teresa/L-1845-2014
OI Varela-Vaca, Angel Jesus/0000-0001-9953-6005; Ramos-Gutiérrez,
   Belén/0000-0001-8815-0510; Gómez-López, María Teresa/0000-0002-3562-875X
FU Ministry of Science and Technology of Spain through ECLIPSE project
   [RTI2018-094283-B-C33]; Ministry of Science and Technology of Spain
   through OPHELIA project [RTI2018-101204-B-C22]; TASOVA network [MCIU-AEI
   TIN2017-90644-REDT]
FX This work has been partially by the Ministry of Science and Technology
   of Spain through ECLIPSE (RTI2018-094283-B-C33) and OPHELIA
   (RTI2018-101204-B-C22) projects; the TASOVA network (MCIU-AEI
   TIN2017-90644-REDT); and the Junta de Andalucia via METAMORFOSIS
   projects, the European Regional Development Fund (ERDF/FEDER), and the
   MINECO Juan de la Cierva postdoctoral program.
CR Alférez M, 2019, SOFTWARE QUAL J, V27, P307, DOI 10.1007/s11219-017-9400-8
   [Anonymous], 2014, P 8 ACM IEEE INT S E
   [Anonymous], 2016, 1849-2016, DOI [10.1109/IEEESTD.2016.7740858, DOI 10.1109/IEEESTD.2016.7740858]
   [Anonymous], 2009, P 2009 17 IEEE INT R
   Astromskis S., 2015, INT C SOFTW SYST PRO, P137
   Augusto A, 2019, IEEE T KNOWL DATA EN, V31, P686, DOI 10.1109/TKDE.2018.2841877
   BAKER FB, 1975, J AM STAT ASSOC, V70, P31, DOI 10.2307/2285371
   Ball G H, 1965, ISODATA, a novel method of data analysis and pattern classification
   Bosch J, 2017, ACM INT CONF PR SER, P1, DOI 10.1145/3168365.3168366
   Calinski T., 1974, Communications in Statistics-Simulation and Computation, V3, P1, DOI [10.1080/03610927408827101, DOI 10.1080/03610927408827101]
   CARDOSO J, 2005, 6 INT ENF C T ENF SY, V8, P213
   Cheng HJ, 2015, DECIS SUPPORT SYST, V79, P138, DOI 10.1016/j.dss.2015.08.003
   Conforti R, 2017, IEEE T KNOWL DATA EN, V29, P300, DOI 10.1109/TKDE.2016.2614680
   Dakic D., 2018, P 29 INT DAAAM S, V29, P866, DOI DOI 10.2507/29TH.DAAAM.PROCEEDINGS.125
   DAVIES DL, 1979, IEEE T PATTERN ANAL, V1, P224, DOI 10.1109/TPAMI.1979.4766909
   de Leoni M, 2016, INFORM SYST, V56, P235, DOI 10.1016/j.is.2015.07.003
   de Medeiros AKA, 2008, LECT NOTES COMPUT SC, V4928, P17
   De Weerdt J, 2013, IEEE T KNOWL DATA EN, V25, P2708, DOI 10.1109/TKDE.2013.64
   Derrac J, 2011, SWARM EVOL COMPUT, V1, P3, DOI 10.1016/j.swevo.2011.02.002
   Duda R., 1973, Pattern Classification and Scene Analysis
   Dunn J. C., 1974, Journal of Cybernetics, V4, P95, DOI 10.1080/01969727408546059
   Duran A, 2017, SOFTW SYST MODEL, V16, P1049, DOI 10.1007/s10270-015-0503-z
   Felfernig A, 2018, J INTELL INF SYST, V51, P161, DOI 10.1007/s10844-017-0492-1
   Fernández-Cerero D, 2020, J SUPERCOMPUT, V76, P2449, DOI 10.1007/s11227-019-02996-2
   Ferreira DR, 2012, LECT NOTES BUS INF P, V99, P123
   FREY T, 1972, J ECOL, V60, P873, DOI 10.2307/2258571
   Galindo J.A., 2014, P 2014 INT S SOFTWAR, P293, DOI [10.1145/2610384.2610411, DOI 10.1145/2610384.2610411]
   GALINDO JA, 2014, SOFTW QUAL J, P1, DOI DOI 10.1007/S11219-014-9258-Y
   Galindo JA, 2019, COMPUTING, V101, P387, DOI 10.1007/s00607-018-0646-1
   Galindo JA, 2015, INFORM SOFTWARE TECH, V62, P78, DOI 10.1016/j.infsof.2015.02.002
   Ghionna L, 2008, LECT NOTES ARTIF INT, V4994, P150
   GRABUSTS P, 2011, P 8 INT SCI PRACT C, V11, P70, DOI DOI 10.17770/ETR2011VOL2.973
   Greco G, 2006, IEEE T KNOWL DATA EN, V18, P1010, DOI 10.1109/TKDE.2006.123
   Halkidi M, 2000, LECT NOTES COMPUT<D>, V1910, P265
   Hartigan John A., 1975, Clustering Algorithms
   Hompes BFA, 2017, LECT NOTES BUS INF P, V244, P54, DOI 10.1007/978-3-319-53435-0_3
   Hompes BFA, 2015, LECT NOTES BUS INF P, V237, P32, DOI 10.1007/978-3-319-27243-6_2
   Hubaux A, 2013, SOFTW SYST MODEL, V12, P641, DOI 10.1007/s10270-011-0220-1
   HUBERT L, 1974, J AM STAT ASSOC, V69, P698, DOI 10.2307/2286004
   HUBERT LJ, 1976, PSYCHOL BULL, V83, P1072, DOI 10.1037/0033-2909.83.6.1072
   Jain AK, 1999, ACM COMPUT SURV, V31, P264, DOI 10.1145/331499.331504
   Varela-Vaca AJ, 2019, APPL SCI-BASEL, V9, DOI 10.3390/app9245364
   Varela-Vaca AJ, 2013, INFORM SOFTWARE TECH, V55, P1948, DOI 10.1016/j.infsof.2013.05.007
   Kobren A, 2017, KDD'17: PROCEEDINGS OF THE 23RD ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P255, DOI 10.1145/3097983.3098079
   KRZANOWSKI WJ, 1988, BIOMETRICS, V44, P23, DOI 10.2307/2531893
   KUIPER FK, 1975, BIOMETRICS, V31, P777, DOI 10.2307/2529565
   Lebart L., 2000, STAT EXPLORATOIRE MU
   Leemans Sander J. J., 2014, Application and Theory of Petri Nets and Concurrency. 35th International Conference, PETRI NETS 2014. Proceedings: LNCS 8489, P91, DOI 10.1007/978-3-319-07734-5_6
   Leemans S.J.J., 2015, Enterprise, Business-Process and Information Systems Modeling, P85
   Lettner M, 2019, J COMPUT LANG, V51, P154, DOI 10.1016/j.cola.2019.01.005
   Linh Thao Ly, 2012, Advanced Information Systems Engineering. Proceedings 24th International Conference, CAiSE 2012, P238, DOI 10.1007/978-3-642-31095-9_16
   MacKay D J C, 2002, Information Theory, Inference andLearning Algorithms
   Makanju A, 2008, ANN CONF PRIV SECUR, P99, DOI 10.1109/PST.2008.17
   Makanju A, 2009, KDD-09: 15TH ACM SIGKDD CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1255
   MANS RS, 2009, COMM COM INF SC, P425
   Maruster L, 2002, LECT NOTES COMPUT SC, V2534, P364
   Maruster L, 2006, DATA MIN KNOWL DISC, V13, P67, DOI 10.1007/s10618-005-0029-z
   Maruster L, 2009, KNOWL INF SYST, V21, P267, DOI 10.1007/s10115-009-0224-0
   McClain J.O., 1975, J MARKETING RES, V12, P456
   Mendling J, 2008, LECT NOTES BUS INF P, V6, P103
   Pérez-Alvarez JM, 2018, COMPUT IND, V102, P23, DOI 10.1016/j.compind.2018.08.001
   MILLIGAN GW, 1980, PSYCHOMETRIKA, V45, P325, DOI 10.1007/BF02293907
   MILLIGAN GW, 1981, PSYCHOMETRIKA, V46, P187, DOI 10.1007/BF02293899
   MURTAGH F, 1983, COMPUT J, V26, P354, DOI 10.1093/comjnl/26.4.354
   Pereira JA, 2018, SPLC'18: PROCEEDINGS OF THE 22ND INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL 1, P87, DOI 10.1145/3233027.3233039
   Pereira JA, 2018, COMPUT LANG SYST STR, V54, P451, DOI 10.1016/j.cl.2018.01.003
   Perez J, 2016, 2016 IEEE 8TH INTERNATIONAL CONFERENCE ON INTELLIGENT SYSTEMS (IS), P120, DOI 10.1109/IS.2016.7737409
   Pérez-Castillo R, 2019, J SYST SOFTWARE, V147, P86, DOI 10.1016/j.jss.2018.10.012
   Perimal-Lewis L, 2016, HEALTH INFORM J, V22, P1017, DOI 10.1177/1460458215604348
   Ratkowsky D, 1978, CRITERION DETERMININ, V44, P23
   Rodas-Silva J, 2019, IEEE ACCESS, V7, P69226, DOI 10.1109/ACCESS.2019.2918469
   Rohlf F.J., 1974, Annual Rev Ecol Syst, V5, P101, DOI 10.1146/annurev.es.05.110174.000533
   Rozinat A, 2009, IEEE T SYST MAN CY C, V39, P474, DOI 10.1109/TSMCC.2009.2014169
   Rubin V, 2007, LECT NOTES COMPUT SC, V4470, P169
   Sahiabadi Mahdi, 2014, Journal of Computer Science, V10, P393, DOI 10.3844/jcssp.2014.393.402
   Sani MF, 2018, LECT NOTES BUS INF P, V308, P216, DOI 10.1007/978-3-319-74030-0_16
   Schobbens PY, 2007, COMPUT NETW, V51, P456, DOI 10.1016/j.comnet.2006.08.008
   She S., 2010, VaMoS, P45
   Song M, 2009, LECT NOTES BUS INF P, V17, P109
   Tax N, 2019, J INTELL INF SYST, V52, P107, DOI 10.1007/s10844-018-0507-6
   Thüm T, 2014, ACM COMPUT SURV, V47, DOI 10.1145/2580950
   Valencia-Parra A, 2019, P 40 INT C INF SYST
   Valencia-Parra A, 2019, P IND FOR BPM 2019 C, P166
   van der Aalst W, 2019, PROTOTYPE SELECTION
   van der Aalst W., 2016, Process Mining: Data Science in Action, DOI DOI 10.1007/978-3-662-49851-4
   van der Aalst WMP., 2011, ANAL SPAGHETTI PROCE
   van Dongen BF, 2005, LECT NOTES COMPUT SC, V3536, P444
   VANDENBROUCKE S, 2017, DECIS SUPPORT SYST, V100, P109, DOI DOI 10.1016/J.DSS.2017.04.005
   Varela-Vaca AJ, 2019, P 23 INT SYST SOFTW
   Wang Y, 2014, INT J PROD RES, V52, P6136, DOI 10.1080/00207543.2014.917216
   Wang Y, 2011, AI EDAM, V25, P185, DOI 10.1017/S0890060410000624
   WARD JH, 1963, J AM STAT ASSOC, V58, P236, DOI 10.2307/2282967
   Weijters A. J. M. M., 2011, Proceedings 2011 IEEE Symposium on Computational Intelligence and Data Mining (CIDM 2011), P310, DOI 10.1109/CIDM.2011.5949453
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
NR 94
TC 2
Z9 2
U1 3
U2 18
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN
PY 2021
VL 26
IS 1
AR 11
DI 10.1007/s10664-020-09911-x
PG 41
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA PY3WH
UT WOS:000611977000001
DA 2024-07-18
ER

PT J
AU Yao, KD
   Li, H
   Shang, WY
   Hassan, AE
AF Yao, Kundi
   Li, Heng
   Shang, Weiyi
   Hassan, Ahmed E.
TI A study of the performance of general compressors on log files
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Log compression; Software logging; Log management; Language model
AB Large-scale software systems and cloud services continue to produce a large amount of log data. Such log data is usually preserved for a long time (e.g., for auditing purposes). General compressors, like theLZ77compressor used ingzip, are usually used in practice to compress log data to reduce the cost of long-term storage. However, such general compressors do not consider the unique nature of log data. In this paper, we study the performance of general compressors on compressing log data relative to their performance on compressing natural language data. We used 12 widely used general compressors to compress nine log files that are collected based on surveying prior literature on text compression, log compression and log analysis. We observe that log data is more repetitive than natural language data, and that log data can be compressed and decompressed faster with higher compression ratios. Besides, the compressor with the highest compression ratio for natural language data is rarely the one for log data. Nevertheless, the compressors with the highest compression ratio for log data are rarely adopted in practice by current logging libraries and log management tools. We also observe that the peak compression and decompression speeds of general compressors on log data is often achieved with a small data size, while such size may not be used by log management tools. Finally, we observe that the optimal compression performance (measured by a combined compression performance score) of log data usually requires the compression level to be configured higher than the default level. Our findings call for careful consideration of choosing general compressors and their associated compression levels for log data in practice. In addition, our findings shed lights on the opportunities for future research on compressors that better suit the characteristics of log data.
C1 [Yao, Kundi; Li, Heng; Hassan, Ahmed E.] Queens Univ Kingston, Software Anal & Intelligence Lab, Kingston, ON K7L 3N6, Canada.
   [Shang, Weiyi] Concordia Univ Montreal, Dept Comp Sci & Software Engn, Montreal, PQ H3G 1M8, Canada.
C3 Queens University - Canada
RP Yao, KD (corresponding author), Queens Univ Kingston, Software Anal & Intelligence Lab, Kingston, ON K7L 3N6, Canada.
EM kundi@cs.queensu.ca; hengli@cs.queensu.ca; shang@encs.concordia.ca;
   ahmed@cs.queensu.ca
RI KHALIFA, AHMED khalifa/HKF-2246-2023
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572
CR Aceto G, 2013, IEEE T NETW SERV MAN, V10, P162, DOI 10.1109/TNSM.2013.011713.110215
   Augeri CJ, 2007, P 2007 WORKSH EXP CO, V7
   Awan FS, 2001, INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: CODING AND COMPUTING, PROCEEDINGS, P452, DOI 10.1109/ITCC.2001.918838
   Balakrishnan R, 2006, P 20 IEEE INT PAR DI, P435
   Chen BY, 2017, PROC INT CONF SOFTW, P71, DOI 10.1109/ICSE.2017.15
   Christensen R., 2013, Proceedings of the ACM International Conference on Management of Data SIGMOD, P1283
   Compression, 2019, COMPR PROGR
   Deorowicz Sebastian, 2008, 2008 International Conference on "Modern Problems of Radio Engineering, Telecommunications and Computer Science" (TCSET 2008), P551
   Elastic, 2019, WHAT IS ELK STACK
   Feng B, 2016, IEEE TRUST BIG, P1358, DOI [10.1109/TrustCom.2016.0215, 10.1109/TrustCom.2016.213]
   Fenwick P., 1996, Australian Computer Science Communications, V18, P193
   Fu QA, 2009, IEEE DATA MINING, P149, DOI 10.1109/ICDM.2009.60
   Gupta R, 2012, INT J COMPUTER SCI I
   Hassan AE, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P713, DOI 10.1145/1368088.1379445
   Hätönen K, 2003, LECT NOTES COMPUT SC, V2737, P360
   He PJ, 2018, IEEE INT CONF AUTOM, P178, DOI 10.1145/3238147.3238193
   He SL, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P60, DOI 10.1145/3236024.3236083
   He SL, 2016, PROC INT SYMP SOFTW, P207, DOI 10.1109/ISSRE.2016.21
   Herbold S, 2017, IEEE T SOFTWARE ENG, V43, P1091, DOI 10.1109/TSE.2017.2748129
   Hindle A, 2012, PROC INT CONF SOFTW, P837, DOI 10.1109/ICSE.2012.6227135
   Hutter M, 2019, 50000 PRIZE COMPRESS
   Jelihovschi E.G., 2014, TEMA (São Carlos), V15, P3
   Jian-Guang Lou, 2010, Operating Systems Review, V44, P91, DOI 10.1145/1740390.1740411
   Jiang B, 2008, 2008 ISECS INTERNATIONAL COLLOQUIUM ON COMPUTING, COMMUNICATION, CONTROL, AND MANAGEMENT, VOL 3, PROCEEDINGS, P249, DOI 10.1109/CCCM.2008.368
   Jiang ZM, 2008, PROC IEEE INT CONF S, P307, DOI 10.1109/ICSM.2008.4658079
   Jurafsky D., 2000, Speech and language processing: An introduction to natural language processing, computational linguistics, and speech recognition
   Koehn P., 2009, STAT MACHINE TRANSLA, DOI DOI 10.1017/CBO9780511815829
   Lemoudden M, 2015, 2015 INTERNATIONAL CONFERENCE ON WIRELESS NETWORKS AND MOBILE COMMUNICATIONS (WINCOM), P217
   Li H, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P1, DOI 10.1145/3183519.3183544
   Li H, 2017, EMPIR SOFTW ENG, V22, P1831, DOI 10.1007/s10664-016-9467-z
   Lin H, 2015, IEEE ACM INT SYMP, P21, DOI 10.1109/CCGrid.2015.45
   Lin QW, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P480, DOI 10.1145/3236024.3236060
   logback, 2019, LOGB PROJ
   Lou J, 2010, PROTEIN ENG DES SEL, V23, P311, DOI 10.1093/protein/gzq001
   Mahoney M, 2019, SUMMARY MULTIPLE FIL
   Mahoney M, 2012, DATA COMPRESSION EXP
   Mahoney M, 2019, LARGE TEXT COMPRESSI
   Mahoney Matt, 2011, Large text compression benchmark
   Mahoney Matthew V, 2000, FLAIRS C, P230
   Mariani Leonardo, 2008, 2008 IEEE International Symposium on Software Reliability Engineering, P117, DOI 10.1109/ISSRE.2008.48
   Mell P, 2014, IEEE MILIT COMMUN C, P192, DOI 10.1109/MILCOM.2014.37
   Nagaraj K, 2012, P 9 USENIX C NETW SY, P353
   Navarro G, 2016, COMPACT DATA STRUCTURES: A PRACTICAL APPROACH, P1, DOI 10.1017/CBO9781316588284
   Oliner A, 2007, I C DEPEND SYS NETWO, P575, DOI 10.1109/DSN.2007.103
   Oliner AJ, 2008, IEEE DATA MINING, P959, DOI 10.1109/ICDM.2008.132
   Otten F, 2009, P 2009 ANN RES C S A, P44, DOI DOI 10.1145/1632149.1632157
   Otten FJ, 2008, THESIS
   Pankaj S, 2019, INDIAN J GYNECOL ONC, V17, DOI 10.1007/s40944-019-0257-6
   Rácz B, 2004, IEEE DATA COMPR CONF, P557
   Sarbanes P., 2002, The Public Company Accounting Reform and Investor Protection Act
   Sayood K, 2017, Introduction to data compression
   SCOTT AJ, 1974, BIOMETRICS, V30, P507, DOI 10.2307/2529204
   Shannon C. E., 1948, BELL SYST TECH J, V27, P379, DOI DOI 10.1002/J.1538-7305.1948.TB01338.X
   Skibinski Przemyslaw, 2007, P 11 EASTEUROPEAN C, P330
   Spagnolo J, 2018, BMC PUBLIC HEALTH, V18, DOI 10.1186/s12889-018-6261-4
   Splunk, 2019, SIEM AIOPS APPL MAN
   Sree PK, 2013, ARXIV13121889
   Stearley J, 2008, IEEE ACM INT SYMP, P765, DOI 10.1109/CCGRID.2008.107
   Syer MD, 2013, PROC IEEE INT CONF S, P110, DOI 10.1109/ICSM.2013.22
   Tan J, 2008, WASL
   Tan J., 2009, Mochi: visual log-analysis based tools for debugging hadoop
   Tan JQ, 2010, INT CON DISTR COMP S, DOI 10.1109/ICDCS.2010.63
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Wikipedia, 2019, HUTT PRIZ
   WILLEMS FMJ, 1995, IEEE T INFORM THEORY, V41, P653, DOI 10.1109/18.382012
   Wohlin C, 2014, P 18 INT C EVALUATIO, DOI DOI 10.1145/2601248.2601268
   Xu W, 2009, IEEE DATA MINING, P588, DOI 10.1109/ICDM.2009.19
   Yuan D., 2012, P 2012 USENIX S OP S, P293
   Yuan D, 2012, PROC INT CONF SOFTW, P102, DOI 10.1109/ICSE.2012.6227202
   Yuan D, 2012, ACM T COMPUT SYST, V30, DOI 10.1145/2110356.2110360
   Yuan D, 2010, ASPLOS XV: FIFTEENTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS, P143
   Zhen Ming Jiang, 2010, Proceedings 2010 Fourth IEEE International Conference on Secure Software Integration and Reliability Improvement (SSIRI 2010), P131, DOI 10.1109/SSIRI.2010.15
   Zhu JM, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P121, DOI 10.1109/ICSE-SEIP.2019.00021
   Zhu JM, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P415, DOI 10.1109/ICSE.2015.60
NR 74
TC 13
Z9 13
U1 1
U2 8
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2020
VL 25
IS 5
BP 3043
EP 3085
DI 10.1007/s10664-020-09822-x
EA AUG 2020
PG 43
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NJ1FD
UT WOS:000559350000001
DA 2024-07-18
ER

PT J
AU Oliveira, E
   Fernandes, E
   Steinmacher, I
   Cristo, M
   Conte, T
   Garcia, A
AF Oliveira, Edson
   Fernandes, Eduardo
   Steinmacher, Igor
   Cristo, Marco
   Conte, Tayana
   Garcia, Alessandro
TI Code and commit metrics of developer productivity: a study on team
   leaders perceptions
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Developer productivity; Software metrics; Repository mining; Team
   leaders perceptions; Mixed method
ID SOFTWARE-DEVELOPMENT; IMPACT
AB Context Developer productivity is essential to the success of software development organizations. Team leaders use developer productivity information for managing tasks in a software project. Developer productivity metrics can be computed from software repositories data to support leaders' decisions. We can classify these metrics in code-based metrics, which rely on the amount of produced code, and commit-based metrics, which rely on commit activity. Although metrics can assist a leader, organizations usually neglect their usage and end up sticking to the leaders' subjective perceptions only. Objective We aim to understand whether productivity metrics can complement the leaders' perceptions. We also aim to capture leaders' impressions about relevance and adoption of productivity metrics in practice. Method This paper presents a multi-case empirical study performed in two organizations active for more than 18 years. Eight leaders of nine projects have ranked the developers of their teams by productivity. We quantitatively assessed the correlation of leaders' rankings versus metric-based rankings. As a complement, we interviewed leaders for qualitatively understanding the leaders' impressions about relevance and adoption of productivity metrics given the computed correlations. Results Our quantitative data suggest a greater correlation of the leaders' perceptions with code-based metrics when compared to commit-based metrics. Our qualitative data reveal that leaders have positive impressions of code-based metrics and potentially would adopt them. Conclusions Data triangulation of productivity metrics and leaders' perceptions can strengthen the organization conviction about productive developers and can reveal productive developers not yet perceived by team leaders and probably underestimated in the organization.
C1 [Oliveira, Edson; Cristo, Marco; Conte, Tayana] Fed Univ Amazonas UFAM, Manaus, Amazonas, Brazil.
   [Fernandes, Eduardo; Garcia, Alessandro] Pontifical Catholic Univ Rio de Janeiro PUCRio, Informat, Rio De Janeiro, Brazil.
   [Steinmacher, Igor] Fed Univ Technol Parana UTFPR, Curitiba, Parana, Brazil.
   [Steinmacher, Igor] No Arizona Univ, Sch Informat Comp & Cyber Syst, Flagstaff, AZ 86011 USA.
C3 Universidade Federal de Amazonas; Universidade Tecnologica Federal do
   Parana; Northern Arizona University
RP Oliveira, E (corresponding author), Fed Univ Amazonas UFAM, Manaus, Amazonas, Brazil.
EM edson.cesar@icomp.ufam.edu.br; emfernandes@inf.puc-rio.br;
   igorfs@utfpr.edu.br; marco.cristo@icomp.ufam.edu.br;
   tayana@icomp.ufam.edu.br; afgarcia@inf.puc-rio.br
RI de Oliveira, Edson Cesar Cunha/AAN-2581-2020; Fernandes,
   Eduardo/F-8555-2017; Igor, Steinmacher/B-6414-2012
OI de Oliveira, Edson Cesar Cunha/0000-0001-9168-4388; Fernandes,
   Eduardo/0000-0002-1222-2247; Igor, Steinmacher/0000-0002-0612-5790
FU SEFAZ/AM; UFAM; CNPq [430642/2016-4, 423149/2016-4, 311494/2017-0,
   204081/2018-1/PDE, 465614/2014-0, 308380/2016-9, 434969/2018-4]; CAPES
   [175956/2013, 175956, 117875, 153363/2018-5]; FAPERJ [E-26/200.773/2019,
   102166/2013, 225207/2016, 211033/2019, 202621/2019]; National Science
   Foundation [1815503]; USES Research Group
FX We thank the financial support from SEFAZ/AM, UFAM, CNPq via grants
   430642/2016-4, 423149/2016-4, 311494/2017-0, 204081/2018-1/PDE,
   465614/2014-0, 308380/2016-9 and 434969/2018-4, CAPES via grants
   175956/2013, 175956, 117875 and 153363/2018-5, FAPERJ via grants
   E-26/200.773/2019, 102166/2013, 225207/2016, 211033/2019, 202621/2019,
   National Science Foundation #1815503. Finally, we also thank the
   participating organizations and their employees, and the support of USES
   Research Group members.
CR Amrit C, 2014, INFORM SOFTWARE TECH, V56, P1537, DOI 10.1016/j.infsof.2014.07.006
   [Anonymous], 1994, Object-oriented software metrics: a practical guide
   BASILI VR, 1988, IEEE T SOFTWARE ENG, V14, P758, DOI 10.1109/32.6156
   Bird C., 2011, P 19 ACM SIGSOFT S 1, P4, DOI DOI 10.1145/2025113.2025119
   Boehm B., 1995, Annals of Software Engineering, V1, P57, DOI 10.1007/BF02249046
   Boehm BW., 1981, Software Engineering Economics
   Chand Donald R, 1993, P 1993 ACM C COMP SC, P338
   Chávez A, 2017, XXXI BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2017), P74, DOI 10.1145/3131151.3131171
   Chrissis M., 2011, CMMI DEV GUIDELINES
   Cohen J., 1988, STAT POWER ANAL BEHA
   Croux C, 2010, STAT METHOD APPL-GER, V19, P497, DOI 10.1007/s10260-010-0142-z
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   de Aquino GS, 2009, 2009 FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING ADVANCES (ICSEA 2009), P241, DOI 10.1109/ICSEA.2009.44
   de Silva L, 2012, J SYST SOFTWARE, V85, P132, DOI 10.1016/j.jss.2011.07.036
   Dyer R, 2015, ACM T SOFTW ENG METH, V25, DOI 10.1145/2803171
   Fenton N., 2000, INT C SOFTWARE ENG, P357, DOI DOI 10.1145/336512.336588
   Fernandes E, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2915984
   Fernandez E., 2017, P IB AM C SOFTW ENG, P1
   Ferreira AIF, 2007, PROC INT CONF SOFTW, P642
   Ferreira M, 2017, INT C PROGRAM COMPRE, P207, DOI 10.1109/ICPC.2017.35
   Field A., 2013, DISCOVERING STAT USI
   Fowler Martin., 2003, Cannot measure productivity
   Furey S, 1997, IEEE SOFTWARE, V14, P28, DOI 10.1109/52.582971
   GILPIN AR, 1993, EDUC PSYCHOL MEAS, V53, P87, DOI 10.1177/0013164493053001007
   Gousios G, 2008, P 5 INT WORK C MIN S, P19
   Greiler M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P2, DOI 10.1109/MSR.2015.8
   Halstead M. H., 1977, ELEMENTS SOFTWARE SC
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hernández-López A, 2013, INT J SOFTW ENG KNOW, V23, P387, DOI 10.1142/S0218194013500125
   HUSELID MA, 1995, ACAD MANAGE J, V38, P635, DOI 10.5465/256741
   International Standards Organization, 2015, ISO 9001:2015
   Kendall M. G., 1948, Rank correlation methods.
   LAWRENCE MJ, 1981, J SYST SOFTWARE, V2, P257, DOI 10.1016/0164-1212(81)90023-6
   Levenshtein V. I., 1966, SOV PHYS DOKL, V10, P707
   Lokan C. J., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P200, DOI 10.1109/METRIC.1999.809741
   Melo C., 2011, Proceedings of the 2011 Agile Conference, P57, DOI 10.1109/AGILE.2011.35
   Meyer AN, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P19, DOI 10.1145/2635868.2635892
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Mordal K, 2013, J SOFTW-EVOL PROC, V25, P1117, DOI 10.1002/smr.1558
   Munson JC, 1998, PROC IEEE INT CONF S, P24, DOI 10.1109/ICSM.1998.738486
   Oliveira E, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962626
   Oliveira E, 2017, ICEIS: PROCEEDINGS OF THE 19TH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS - VOL 2, P76, DOI 10.5220/0006314400760087
   Oliveira R, 2020, INFORM SOFTWARE TECH, V120, DOI 10.1016/j.infsof.2019.106242
   Ordonez MJ, 2008, PROCEEDINGS OF THE FIFTH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: NEW GENERATIONS, P453, DOI 10.1109/ITNG.2008.106
   Petersen K, 2011, INFORM SOFTWARE TECH, V53, P317, DOI 10.1016/j.infsof.2010.12.001
   Rahman F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P432, DOI 10.1109/ICSE.2013.6606589
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Runeson Per, 2012, Case study research in software engineering: Guidelines and examples
   Scholtes I, 2016, EMPIR SOFTW ENG, V21, P642, DOI 10.1007/s10664-015-9406-4
   Sheetz SD, 2009, J SYST SOFTWARE, V82, P1540, DOI 10.1016/j.jss.2009.04.038
   Thongtanunam P, 2016, PROC INT CONF SOFTW, P1039, DOI 10.1145/2884781.2884852
   Trendowicz A, 2009, ADV COMPUT, V77, P185, DOI 10.1016/S0065-2458(09)01206-6
   Verner JM, 2014, J SYST SOFTWARE, V92, P115, DOI 10.1016/j.jss.2014.01.008
   Wagner S., 2008, Software Productivity Analysis and Cost Estimation (SPACE 2008), P1
   Weber KC, 2005, LECT NOTES COMPUT SC, V3733, P402
   Wen M, 2016, IEEE INT CONF AUTOM, P262, DOI 10.1145/2970276.2970359
   Wloka J, 2009, PROC INT CONF SOFTW, P507, DOI 10.1109/ICSE.2009.5070549
NR 57
TC 13
Z9 14
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2020
VL 25
IS 4
BP 2519
EP 2549
DI 10.1007/s10664-020-09820-z
EA APR 2020
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MD8CQ
UT WOS:000526196600003
DA 2024-07-18
ER

PT J
AU Vassallo, C
   Panichella, S
   Palomba, F
   Proksch, S
   Gall, HC
   Zaidman, A
AF Vassallo, Carmine
   Panichella, Sebastiano
   Palomba, Fabio
   Proksch, Sebastian
   Gall, Harald C.
   Zaidman, Andy
TI How developers engage with static analysis tools in different contexts
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Static analysis tools; Development context; Continuous integration; Code
   review; Empirical study
AB Automatic static analysis tools (ASATs) are instruments that support code quality assessment by automatically detecting defects and design issues. Despite their popularity, they are characterized by (i) a high false positive rate and (ii) the low comprehensibility of the generated warnings. However, no prior studies have investigated the usage of ASATs in different development contexts (e.g., code reviews, regular development), nor how open source projects integrate ASATs into their workflows. These perspectives are paramount to improve the prioritization of the identified warnings. To shed light on the actual ASATs usage practices, in this paper we first survey 56 developers (66% from industry and 34% from open source projects) and interview 11 industrial experts leveraging ASATs in their workflow with the aim of understanding how they use ASATs in different contexts. Furthermore, to investigate how ASATs are being used in the workflows of open source projects, we manually inspect the contribution guidelines of 176 open-source systems and extract the ASATs' configuration and build files from their corresponding GitHub repositories. Our study highlights that (i) 71% of developers do pay attention to different warning categories depending on the development context; (ii) 63% of our respondents rely on specific factors (e.g., team policies and composition) when prioritizing warnings to fix during their programming; and (iii) 66% of the projects define how to use specific ASATs, but only 37% enforce their usage for new contributions. The perceived relevance of ASATs varies between different projects and domains, which is a sign that ASATs use is still not a common practice. In conclusion, this study confirms previous findings on the unwillingness of developers to configure ASATs and it emphasizes the necessity to improve existing strategies for the selection and prioritization of ASATs warnings that are shown to developers.
C1 [Vassallo, Carmine; Gall, Harald C.] Univ Zurich, Software Engn, Zurich, Switzerland.
   [Palomba, Fabio; Proksch, Sebastian] Univ Zurich, Zurich, Switzerland.
   [Panichella, Sebastiano] Zurich Univ Appl Sci, Zurich, Switzerland.
   [Zaidman, Andy] Delft Univ Technol, Delft, Netherlands.
C3 University of Zurich; University of Zurich; Zurich University of Applied
   Sciences; Delft University of Technology
RP Vassallo, C (corresponding author), Univ Zurich, Software Engn, Zurich, Switzerland.
EM vassallo@ifi.uzh.ch; panc@zhaw.ch; palomba@ifi.uzh.ch;
   proksch@ifi.uzh.ch; gall@ifi.uzh.ch; a.e.zaidman@tudelft.nl
OI Gall, Harald/0000-0002-3874-5628; Panichella,
   Sebastiano/0000-0003-4120-626X; Vassallo, Carmine/0000-0003-0495-6803
CR Al Shalabi L., 2006, Journal of Computer Sciences, V2, P735, DOI 10.3844/jcssp.2006.735.739
   [Anonymous], INT C PROGR COMPR IC
   [Anonymous], STAT AN TOOL CUST
   [Anonymous], STAT AN TOOLS
   [Anonymous], EFF MAN STAT AN VULN
   [Anonymous], REPLICATION PACKAGE
   [Anonymous], INT WORKSH SMALLT TE
   [Anonymous], 2014, 11 WORKING C MINING, DOI [DOI 10.1145/2597073.2597076, DOI 10.1145/2597073]
   [Anonymous], TOP 10 FOR PROGR
   [Anonymous], QUESTIONNAIRE DESIGN
   [Anonymous], 34 IEEE INT C SOFTW
   [Anonymous], STAT AN TOOLS
   [Anonymous], IEEE T SOFTW ENG TSE
   [Anonymous], PHP STAT AN TOOLS
   Ayewah N, 2007, PASTE'07 PROCEEDINGS OF THE 2007 ACM SIGPLAN- SIGSOFT WORKSHOP ON PROGRAM ANALYSIS FOR SOFTWARE TOOLS & ENGINEERING, P1, DOI 10.1145/1251535.1251536
   Ayewah N, 2008, IEEE SOFTWARE, V25, P22, DOI 10.1109/MS.2008.130
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Balachandran V, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P931, DOI 10.1109/ICSE.2013.6606642
   Beller M., 2014, 11 WORK C MIN SOFTW, P202, DOI DOI 10.1145/2597073.2597082
   Beller M, 2017, IEEE WORK CONF MIN S, P356, DOI 10.1109/MSR.2017.62
   Beller M, 2017, IEEE WORK CONF MIN S, P447, DOI 10.1109/MSR.2017.24
   Beller M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P179, DOI 10.1145/2786805.2786843
   Beller M, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P470, DOI 10.1109/SANER.2016.105
   Beller M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P559, DOI 10.1109/ICSE.2015.193
   Bodden E, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS (ICSE-NIER), P45, DOI 10.1145/3183440.3183462
   Buckers T, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P472, DOI 10.1109/SANER.2017.7884656
   Butler S, 2010, EUR CON SFTWR MTNCE, P156, DOI 10.1109/CSMR.2010.27
   Catolino G, 2018, J SYST SOFTWARE, V143, P14, DOI 10.1016/j.jss.2018.05.003
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   D'Silva V, 2008, IEEE T COMPUT AID D, V27, P1165, DOI 10.1109/TCAD.2008.923410
   Di Penta M, 2009, INFORM SOFTWARE TECH, V51, P1469, DOI 10.1016/j.infsof.2009.04.013
   Dillman DA., 2014, INTERNET PHONE MAIL, V4th
   Emanuelsson P, 2008, ELECTRON NOTES THEOR, V217, P5, DOI 10.1016/j.entcs.2008.06.039
   Flanagan C, 2002, ACM SIGPLAN NOTICES, V37, P234, DOI 10.1145/543552.512558
   Fuchs P, 2010, ICSIT 2010: INTERNATIONAL CONFERENCE ON SOCIETY AND INFORMATION TECHNOLOGIES (POST-CONFERENCE EDITION), P418
   Gibbs L, 2007, AUST NZ J PUBL HEAL, V31, P540, DOI 10.1111/j.1753-6405.2007.00140.x
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   Gousios G, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P358, DOI 10.1109/ICSE.2015.55
   Heckman S, 2011, INFORM SOFTWARE TECH, V53, P363, DOI 10.1016/j.infsof.2010.12.007
   Hilton M, 2016, IEEE INT CONF AUTOM, P426, DOI 10.1145/2970276.2970358
   Hovemeyer D, 2004, ACM SIGPLAN NOTICES, V39, P92, DOI 10.1145/1052883.1052895
   Johnson B, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P672, DOI 10.1109/ICSE.2013.6606613
   Johnson Stephen C., 1977, Lint, a C program checker
   Jorgensen M, 2004, J SYST SOFTWARE, V70, P37, DOI 10.1016/S0164-1212(02)00156-5
   Khoshgoftaar T. M., 1998, Empirical Software Engineering, V3, P275, DOI 10.1023/A:1009736205722
   Kim S, 2007, P 6 JOINT M EUR SOFT, P45, DOI DOI 10.1145/1287624.1287633
   Lehman M. M., 1980, Journal of Systems and Software, V1, P213, DOI 10.1016/0164-1212(79)90022-0
   Lianping Chen, 2015, IEEE Software, V32, P50, DOI 10.1109/MS.2015.27
   Mahmood R., 2018, EVALUATION STATIC AN
   Muske T, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P187, DOI 10.1145/3213846.3213850
   Nagappan N, 2005, PROC INT CONF SOFTW, P580, DOI 10.1145/1062455.1062558
   Nanda M. G., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P99, DOI 10.1145/1810295.1810310
   Nurolahzade M, 2009, IWPSE-EVOL 09: ERCIM WORKSHOP ON SOFTWARE EVOLUTION (EVOL) AND INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION (IWPSE), P9
   Palomba F, 2019, IEEE T SOFTWARE ENG, V45, P194, DOI 10.1109/TSE.2017.2770122
   Panichella S, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P161, DOI 10.1109/SANER.2015.7081826
   Parnas DL, 2003, IEEE T SOFTWARE ENG, V29, P674, DOI 10.1109/TSE.2003.1223642
   Proksch S., 2017, INT C SOFTW AN EV RE
   Rahman F, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P424, DOI 10.1145/2568225.2568269
   Rigby P. C., 2006, DCS305IR U VICT
   Rigby PC, 2011, THESIS
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Ruthruff JR, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P341, DOI 10.1145/1368088.1368135
   Sadowski C, 2018, COMMUN ACM, V61, P58, DOI 10.1145/3188720
   Sadowski C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P598, DOI 10.1109/ICSE.2015.76
   SHELLEY M, 1984, J AM STAT ASSOC, V79, P240, DOI 10.2307/2288384
   Spencer D., 2009, CARD SORTING DESIGNI
   Thung F, 2012, IEEE INT CONF AUTOM, P50, DOI 10.1145/2351676.2351685
   Vassallo C, 2018, IEEE INT CONF AUTOM, P790, DOI 10.1145/3238147.3240729
   Vassallo C, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P38, DOI 10.1109/SANER.2018.8330195
   Vassallo C, 2017, PROC IEEE INT CONF S, P183, DOI 10.1109/ICSME.2017.67
   Vassallo C, 2016, PROC IEEE INT CONF S, P519, DOI 10.1109/ICSME.2016.72
   Wagner S, 2005, LECT NOTES COMPUT SC, V3502, P40
   Yu J, 2005, PLOS BIOL, V3, P266, DOI 10.1371/journal.pbio.0030038
   Zampetti F, 2017, IEEE WORK CONF MIN S, P334, DOI 10.1109/MSR.2017.2
   Zheng J, 2006, IEEE T SOFTWARE ENG, V32, P240, DOI 10.1109/TSE.2006.38
NR 75
TC 53
Z9 59
U1 0
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2020
VL 25
IS 2
SI SI
BP 1419
EP 1457
DI 10.1007/s10664-019-09750-5
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KT0VU
UT WOS:000518729800012
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Patil, S
   Ravindran, B
AF Patil, Sangameshwar
   Ravindran, B.
TI Predicting software defect type using concept-based classification
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software defect classification; Software defect management; Natural
   language processing; Explicit semantic analysis; Orthogonal defect
   classification
AB Automatically predicting the defect type of a software defect from its description can significantly speed up and improve the software defect management process. A major challenge for the supervised learning based current approaches for this task is the need for labeled training data. Creating such data is an expensive and effort-intensive task requiring domain-specific expertise. In this paper, we propose to circumvent this problem by carrying out concept-based classification (CBC) of software defect reports with help of the Explicit Semantic Analysis (ESA) framework. We first create the concept-based representations of a software defect report and the defect types in the software defect classification scheme by projecting their textual descriptions into a concept-space spanned by the Wikipedia articles. Then, we compute the "semantic" similarity between these concept-based representations and assign the software defect type that has the highest similarity with the defect report. The proposed approach achieves accuracy comparable to the state-of-the-art semi-supervised and active learning approach for this task without requiring labeled training data. Additional advantages of the CBC approach are: (i) unlike the state-of-the-art, it does not need the source code used to fix a software defect, and (ii) it does not suffer from the class-imbalance problem faced by the supervised learning paradigm.
C1 [Patil, Sangameshwar; Ravindran, B.] IIT Madras, Dept Comp Sci & Engn, Chennai, Tamil Nadu, India.
   [Patil, Sangameshwar] TCS Res, Pune, Maharashtra, India.
   [Ravindran, B.] IIT Madras, Robert Bosch Ctr Data Sci & AI, Chennai, Tamil Nadu, India.
C3 Indian Institute of Technology System (IIT System); Indian Institute of
   Technology (IIT) - Madras; Indian Institute of Technology System (IIT
   System); Indian Institute of Technology (IIT) - Madras
RP Patil, S (corresponding author), IIT Madras, Dept Comp Sci & Engn, Chennai, Tamil Nadu, India.; Patil, S (corresponding author), TCS Res, Pune, Maharashtra, India.
EM sangam@cse.iitm.ac.in; ravi@cse.iitm.ac.in
OI Ravindran, Balaraman/0000-0002-5364-7639
CR Alenezi Mamdouh, 2013, Journal of Software, V8, P2185, DOI 10.4304/jsw.8.9.2185-2190
   [Anonymous], 1908, BIOMETRIKA, V6, P1
   [Anonymous], P 14 INT C MIN SOFTW
   [Anonymous], P 15 C ARG CIENC COM
   [Anonymous], 2009, 10442009 IEEE
   [Anonymous], DATA MINING ANAL FUN
   [Anonymous], ORTH DEF CLASS VERS
   [Anonymous], 2011, TOIS
   [Anonymous], P 26 IEEE ACM INT C
   [Anonymous], HDB SOFTWARE RELIABI
   [Anonymous], 2011, Proceedings of the ACL-HLT 2011 System Demonstrations
   Boser B. E., 1992, Proceedings of the Fifth Annual ACM Workshop on Computational Learning Theory, P144, DOI 10.1145/130385.130401
   Bridge N., 1998, SOFTW QUAL J, V3, P1
   Butcher M, 2002, IBM SYST J, V41, P31, DOI 10.1147/sj.411.0031
   Carrozza G, 2015, J SOFTW-EVOL PROC, V27, P22, DOI 10.1002/smr.1699
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   CORTES C, 1995, MACH LEARN, V20, P273, DOI 10.1007/BF00994018
   Gabrilovich E, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1606
   Gabrilovich E, 2009, J ARTIF INTELL RES, V34, P443, DOI 10.1613/jair.2669
   Hahn R, 2008, DTIP 2008: SYMPOSIUM ON DESIGN, TEST, INTEGRATION AND PACKAGING OF MEMS/MOEMS, P34, DOI 10.1109/DTIP.2008.4752947
   Han J, 2012, MOR KAUF D, P1
   Han JW, 2000, SIGMOD RECORD, V29, P1
   He HB, 2009, IEEE T KNOWL DATA EN, V21, P1263, DOI 10.1109/TKDE.2008.239
   Herzig K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P392, DOI 10.1109/ICSE.2013.6606585
   Huang LG, 2015, AUTOMAT SOFTW ENG, V22, P3, DOI 10.1007/s10515-014-0155-1
   Japkowicz N., 2002, Intelligent Data Analysis, V6, P429
   Jurafsky D., 2000, Speech and language processing: An introduction to natural language processing, computational linguistics, and speech recognition
   Kolcz A., 2004, ACM SIGKDD EXPLORATI, V6, P1, DOI [10.2973/odp.proc.ir.207.2004, DOI 10.1145/1007730.1007733]
   Manning Christopher D., 2008, INTRO INFORM RETRIEV
   Mellegard N., 2012, Proceedings of the 2012 IEEE 23rd International Symposium on Software Reliability Engineering (ISSRE), P261, DOI 10.1109/ISSRE.2012.15
   Menzies T, 2008, PROC IEEE INT CONF S, P346, DOI 10.1109/ICSM.2008.4658083
   Murphy G., 2004, P 16 INT C SOFTW ENG
   Panichella A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P522, DOI 10.1109/ICSE.2013.6606598
   Pedregosa F, 2011, J. Mach. Learn. Res., V12, P2825
   Robertson Stephen, 2009, Foundations and Trends in Information Retrieval, V3, P333, DOI 10.1561/1500000019
   Robertson S. E., 1995, Text REtrieval Conference (TREC-3) (NIST SP 500-225), P109
   Runeson P, 2007, PROC INT CONF SOFTW, P499
   Salton G, 1986, Introduction to Modern Information Retrieval
   Silva N, 2014, PROC INT SYMP SOFTW, P156, DOI 10.1109/ISSRE.2014.25
   Thung F., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P205, DOI 10.1109/WCRE.2012.30
   Thung F, 2015, INT C PROGRAM COMPRE, P60, DOI 10.1109/ICPC.2015.15
   Wang XY, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P461, DOI 10.1145/1368088.1368151
   Xia X, 2014, IEEE INT C ENG COMP, P39, DOI 10.1109/ICECCS.2014.14
   Xian YQ, 2019, IEEE T PATTERN ANAL, V41, P2251, DOI 10.1109/TPAMI.2018.2857768
   Yang Y., 2017, TECH REP
   Zesch T, 2008, SIXTH INTERNATIONAL CONFERENCE ON LANGUAGE RESOURCES AND EVALUATION, LREC 2008, P1646
   Zhou Y, 2016, J SOFTW-EVOL PROC, V28, P150, DOI 10.1002/smr.1770
NR 47
TC 8
Z9 9
U1 2
U2 17
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2020
VL 25
IS 2
SI SI
BP 1341
EP 1378
DI 10.1007/s10664-019-09779-6
EA FEB 2020
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KT0VU
UT WOS:000516040500001
DA 2024-07-18
ER

PT J
AU Sulistya, A
   Prana, GAA
   Sharma, A
   Lo, D
   Treude, C
AF Sulistya, Agus
   Prana, Gede Artha Azriadi
   Sharma, Abhishek
   Lo, David
   Treude, Christoph
TI SIEVE: Helping developers sift wheat from chaff via cross-platform
   analysis
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Word embedding; Transfer representation learning; Software engineering
ID SOFTWARE; RECOMMENDATION; SEARCH
AB Software developers have benefited from various sources of knowledge such as forums, question-and-answer sites, and social media platforms to help them in various tasks. Extracting software-related knowledge from different platforms involves many challenges. In this paper, we propose an approach to improve the effectiveness of knowledge extraction tasks by performing cross-platform analysis. Our approach is based on transfer representation learning and word embedding, leveraging information extracted from a source platform which contains rich domain-related content. The information extracted is then used to solve tasks in another platform (considered as target platform) with less domain-related content. We first build a word embedding model as a representation learned from the source platform, and use the model to improve the performance of knowledge extraction tasks in the target platform. We experiment with Software Engineering Stack Exchange and Stack Overflow as source platforms, and two different target platforms, i.e., Twitter and YouTube. Our experiments show that our approach improves performance of existing work for the tasks of identifying software-related tweets and helpful YouTube comments.
C1 [Sulistya, Agus] PT Telkom Indonesia, Jakarta, Indonesia.
   [Prana, Gede Artha Azriadi] Singapore Management Univ, Sch Informat Syst, Singapore, Singapore.
   [Sharma, Abhishek] Singapore Management Univ, Singapore, Singapore.
   [Lo, David] Singapore Management Univ, Informat Syst, Singapore, Singapore.
   [Treude, Christoph] Univ Adelaide, Sch Comp Sci, Adelaide, SA, Australia.
C3 Singapore Management University; Singapore Management University;
   Singapore Management University; University of Adelaide
RP Sulistya, A (corresponding author), PT Telkom Indonesia, Jakarta, Indonesia.
EM sulistya@telkom.co.id; arthaprana.2016@smu.edu.sg; abhisheks@smu.edu.sg;
   davidlo@smu.edu.sg; christoph.treude@adelaide.edu.au
RI Treude, Christoph/AAZ-6257-2021; Sulistya, Agus/HTN-9187-2023; Lo,
   David/A-2493-2012
OI Lo, David/0000-0002-4367-7201; Treude, Christoph/0000-0002-6919-2149
FU National Research Foundation, Prime Ministers Office, Singapore under
   its International Research Centres in Singapore Funding Initiative
FX This research is supported by the National Research Foundation, Prime
   Ministers Office, Singapore under its International Research Centres in
   Singapore Funding Initiative.
CR Achananuparp P, 2012, IEEE INT CONF AUTOM, P334, DOI 10.1145/2351676.2351740
   Aniche M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P499, DOI 10.1145/3180155.3180180
   [Anonymous], CROWD DOCUMENTATION
   [Anonymous], 2017, YOUTUBE
   [Anonymous], P 21 ACM C COMP SUPP
   [Anonymous], 2017, ARXIV170506273
   [Anonymous], IEEE T SOFTWARE ENG
   [Anonymous], 2018 IEEE 25 INT C S
   [Anonymous], SOFTW ENG STACK EXCH
   [Anonymous], 2016, 2016 IEEE 24th International Conference on Program Comprehension (ICPC)
   [Anonymous], 2016, ICML
   [Anonymous], P 2016 C EMP METH NA
   [Anonymous], 2011, P 2 INT WORKSHOP WEB
   [Anonymous], 2014, Proceedings of the 17th ACM conference on Computer supported cooperative work social computing
   Asaduzzaman M, 2013, IEEE WORK CONF MIN S, P97, DOI 10.1109/MSR.2013.6624015
   Azad S, 2017, ACM T SOFTW ENG METH, V25, DOI 10.1145/2990497
   Bacchelli A., 2012, 2012 Third International Workshop on Recommendation Systems for Software Engineering (RSSE), P26, DOI 10.1109/RSSE.2012.6233404
   Bacchelli A, 2012, PROC INT CONF SOFTW, P375, DOI 10.1109/ICSE.2012.6227177
   Barua A, 2014, EMPIR SOFTW ENG, V19, P619, DOI 10.1007/s10664-012-9231-y
   Begel A, 2013, IEEE SOFTWARE, V30, P52, DOI 10.1109/MS.2013.13
   Bengio Y, 2013, IEEE T PATTERN ANAL, V35, P1798, DOI 10.1109/TPAMI.2013.50
   Bojanowski P., 2017, Transactions of the Association for Computational Linguistics, V5, P135, DOI DOI 10.1162/TACLA00051
   Bougie Gargi, 2011, P 2 INT WORKSHOP WEB, P31, DOI [10.1145/1984701.1984707, DOI 10.1145/1984701.1984707]
   Cai XY, 2016, P INT COMP SOFTW APP, P63, DOI 10.1109/COMPSAC.2016.124
   Calefato F, 2018, EMPIR SOFTW ENG, V23, P1352, DOI 10.1007/s10664-017-9546-9
   Chen CY, 2017, PROC INT CONF SOFTW, P450, DOI 10.1109/ICSE.2017.48
   Chen CY, 2016, IEEE INT CONF AUTOM, P834, DOI 10.1145/2970276.2970290
   Chen CY, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P338, DOI 10.1109/SANER.2016.21
   Chen GB, 2016, IEEE INT CONF AUTOM, P744, DOI 10.1145/2970276.2970317
   Chenail RJ, 2008, QUAL REP, V13, P18
   De Lucia A, 2014, EMPIR SOFTW ENG, V19, P1383, DOI 10.1007/s10664-013-9285-5
   El Mezouar M, 2018, EMPIR SOFTW ENG, V23, P1704, DOI 10.1007/s10664-017-9559-4
   Guo J, 2017, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.2017.9
   Guzman E, 2017, INT REQUIR ENG CONF, P11, DOI 10.1109/RE.2017.88
   Guzman E, 2017, REQUIR ENG, V22, P387, DOI 10.1007/s00766-017-0274-x
   Guzman E, 2016, INT REQUIR ENG CONF, P96, DOI 10.1109/RE.2016.67
   Hindle A, 2019, EMPIR SOFTW ENG, V24, P902, DOI 10.1007/s10664-018-9643-4
   Johnson R., 2016, arXiv: 1602.02373
   Johnson Rie, 2015, Adv Neural Inf Process Syst, V28, P919
   Kenter T, 2015, P 24 ACM INT C INFOR, P1411, DOI 10.1145/2806416.2806475
   Kwak H., WWW'10, DOI DOI 10.1145/1772690.1772751
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Maalej W, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2622669
   MacLeod L, 2017, EMPIR SOFTW ENG, V22, P1478, DOI 10.1007/s10664-017-9501-9
   MacLeod L, 2015, INT C PROGRAM COMPRE, P104, DOI 10.1109/ICPC.2015.19
   Mikolov T., 2013, ADV NEURAL INFORM PR, V26, P3111, DOI DOI 10.5555/2999792.2999959
   Mikolov Tomas, 2013, Preprints
   Pan SJ, 2010, IEEE T KNOWL DATA EN, V22, P1345, DOI 10.1109/TKDE.2009.191
   Parra E, 2018, INT C PROGRAM COMPRE, P222, DOI 10.1145/3196321.3196351
   Pennington J., 2014, P 2014 C EMP METH NA, P1532, DOI [DOI 10.3115/V1/D14-1162, 10.3115/v1/D14-1162]
   Perkins C, 2018, EPIQ'18: PROCEEDINGS OF THE 2018 WORKSHOP ON THE EVOLUTION, PERFORMANCE, AND INTEROPERABILITY OF QUIC, P36, DOI 10.1145/3284850.3284856
   Poché E, 2017, INT C PROGRAM COMPRE, P196, DOI 10.1109/ICPC.2017.26
   Ponzanelli L, 2016, PROC INT CONF SOFTW, P261, DOI 10.1145/2884781.2884824
   Ponzanelli L, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P645, DOI 10.1145/2889160.2889172
   Ponzanelli L, 2014, PROC IEEE INT CONF S, P541, DOI 10.1109/ICSME.2014.90
   Ponzanelli L, 2014, INT CONF QUAL SOFTW, P343, DOI 10.1109/QSIC.2014.27
   Ponzanelli L, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1295, DOI 10.1109/ICSE.2013.6606701
   PORTER MF, 1980, PROGRAM-AUTOM LIBR, V14, P130, DOI 10.1108/eb046814
   Posnett D, 2012, PROCEEDINGS OF THE 2012 ASE INTERNATIONAL CONFERENCE ON SOCIAL INFORMATICS (SOCIALINFORMATICS 2012), P199, DOI 10.1109/SocialInformatics.2012.67
   Prasetyo PK, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P596, DOI 10.1109/ICSM.2012.6405330
   Rahman MM, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P79, DOI 10.1109/SANER.2017.7884611
   Rahman MM, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P426, DOI 10.1109/MSR.2015.55
   Semwal T., 2018, P 2018 SIAM INT C DA, P513, DOI [DOI 10.1137/1.9781611975321.58, 10.1137/1.9781611975321.58]
   Sharma A, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3266426
   Sharma A, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P387, DOI 10.1109/SANER.2017.7884639
   Sharma A, 2015, PROC IEEE INT CONF S, P541, DOI 10.1109/ICSM.2015.7332510
   Sharma A, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P449, DOI 10.1109/SANER.2015.7081855
   Singer L, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P211, DOI 10.1145/2568225.2568305
   Socher R., 2013, P 2013 C EMP METH NA, V2013, P1631, DOI DOI 10.1371/JOURNAL.PONE.0073791
   Stolcke A, 2002, P 7 INT C SPOK LANG
   Storey Margaret-Anne, 2014, FUT SOFTW ENG P, P100, DOI 10.1145/2593882.2593887
   Nguyen TV, 2017, PROC IEEE ACM INT C, P183, DOI 10.1109/ICSE-C.2017.90
   Tian YD, 2012, PROC CVPR IEEE, P246, DOI 10.1109/CVPR.2012.6247682
   Treude C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P804, DOI 10.1145/1985793.1985907
   Uddin G, 2017, IEEE INT CONF AUTOM, P159, DOI 10.1109/ASE.2017.8115629
   Uddin G, 2017, IEEE INT CONF AUTOM, P978, DOI 10.1109/ASE.2017.8115715
   Vasilescu B, 2013, 2013 ASE/IEEE INTERNATIONAL CONFERENCE ON SOCIAL COMPUTING (SOCIALCOM), P188, DOI 10.1109/SocialCom.2013.35
   Wang SW, 2014, PROC IEEE INT CONF S, P291, DOI 10.1109/ICSME.2014.51
   Wang X., 2013, Microblogging in Open Source Software Development: The Case of Drupal Using Twitter
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Williams G, 2017, INT REQUIR ENG CONF, P1, DOI 10.1109/RE.2017.14
   Xia X, 2017, EMPIR SOFTW ENG, V22, P3149, DOI 10.1007/s10664-017-9514-4
   Xu BW, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P413, DOI [10.1109/MSR.2016.049, 10.1145/2901739.2901746]
   Xu CY, 2018, J SYST SOFTWARE, V142, P195, DOI 10.1016/j.jss.2018.04.060
   Yadid S, 2016, ONWARD!'16: PROCEEDINGS OF THE 2016 ACM INTERNATIONAL SYMPOSIUM ON NEW IDEAS, NEW PARADIGMS, AND REFLECTIONS ON PROGRAMMING AND SOFTWARE, P98, DOI 10.1145/2986012.2986021
   Yang XL, 2016, PROC INT SYMP SOFTW, P127, DOI 10.1109/ISSRE.2016.33
   Ye DH, 2017, EMPIR SOFTW ENG, V22, P375, DOI 10.1007/s10664-016-9430-z
   Ye X, 2016, PROC INT CONF SOFTW, P404, DOI 10.1145/2884781.2884862
   Yu JF, 2018, WSDM'18: PROCEEDINGS OF THE ELEVENTH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING, P682, DOI 10.1145/3159652.3159685
   Yuan Tian, 2014, 2014 IEEE 4th Workshop on Mining Unstructured Data (MUD), P1, DOI 10.1109/MUD.2014.14
   Zhang JX, 2018, IEEE ACCESS, V6, P6205, DOI 10.1109/ACCESS.2017.2777845
   Zhao T, 2017, ASIA PAC SOFWR ENG, P81, DOI 10.1109/APSEC.2017.14
   Zhou PY, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P272, DOI 10.1109/SANER.2017.7884628
NR 93
TC 6
Z9 6
U1 0
U2 12
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN
PY 2020
VL 25
IS 1
BP 996
EP 1030
DI 10.1007/s10664-019-09775-w
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KP9LB
UT WOS:000516551300001
DA 2024-07-18
ER

PT J
AU Xu, BW
   An, L
   Thung, F
   Khomh, F
   Lo, DV
AF Xu, Bowen
   An, Le
   Thung, Ferdian
   Khomh, Foutse
   Lo, David
TI Why reinventing the wheels? An empirical study on library reuse and
   re-implementation
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Code reuse; Code re-implementation; Library recommendation systems
ID SOFTWARE REUSE
AB Nowadays, with the rapid growth of open source software (OSS), library reuse becomes more and more popular since a large amount of third- party libraries are available to download and reuse. A deeper understanding on why developers reuse a library (i.e., replacing self-implemented code with an external library) or re-implement a library (i.e., replacing an imported external library with self-implemented code) could help researchers better understand the factors that developers are concerned with when reusing code. This understanding can then be used to improve existing libraries and API recommendation tools for researchers and practitioners by using the developers concerns identified in this study as design criteria. In this work, we investigated the reasons behind library reuse and re-implementation. To achieve this goal, we first crawled data from two popular sources, F-Droid and GitHub. Then, potential instances of library reuse and re-implementation were found automatically based on certain heuristics. Next, for each instance, we further manually identified whether it is valid or not. For library re-implementation, we obtained 82 instances which are distributed in 75 repositories. We then conducted two types of surveys (i.e., individual survey to corresponding developers of the validated instances and another open survey) for library reuse and re-implementation. For library reuse individual survey, we received 36 responses out of 139 contacted developers. For re-implementation individual survey, we received 13 responses out of 71 contacted developers. In addition, we received 56 responses from the open survey. Finally, we perform qualitative and quantitative analysis on the survey responses and commit logs of the validated instances. The results suggest that library reuse occurs mainly because developers were initially unaware of the library or the library had not been introduced. Re-implementation occurs mainly because the used library method is only a small part of the library, the library dependencies are too complicated, or the library method is deprecated. Finally, based on all findings obtained from analyzing the surveys and commit messages, we provided a few suggestions to improve the current library recommendation systems: tailored recommendation according to users' preferences, detection of external code that is similar to a part of the users' code (to avoid duplication or re-implementation), grouping similar recommendations for developers to compare and select the one they prefer, and disrecommendation of poor-quality libraries.
C1 [Xu, Bowen; Thung, Ferdian; Lo, David] Singapore Management Univ, Singapore, Singapore.
   [An, Le; Khomh, Foutse] PolyTech Montreal, Montreal, PQ, Canada.
C3 Singapore Management University; Universite de Montreal; Polytechnique
   Montreal
RP Xu, BW (corresponding author), Singapore Management Univ, Singapore, Singapore.
EM bowenxu.2017@phdis.smu.edu.sg
RI BOWEN, XU/AGF-1611-2022; Xu, Bowen/JRR-9142-2023; Thung,
   Ferdian/AAX-9321-2020; Lo, David/A-2493-2012
OI Lo, David/0000-0002-4367-7201; Xu, Bowen/0000-0002-1006-8493
CR Abdalkareem R, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P385, DOI 10.1145/3106237.3106267
   Nguyen AT, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P511, DOI 10.1145/2950290.2950333
   Basili VR, 1996, COMMUN ACM, V39, P104, DOI 10.1145/236156.236184
   Blog of Jos de Jong, 2017, ART CREAT SIMPL FLEX
   Gao W, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS), P432, DOI 10.1109/ICWS.2015.64
   GNU, 2017, UN DIFF FORM
   GRISS ML, 1993, IBM SYST J, V32, P548, DOI 10.1147/sj.324.0548
   Gu XD, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P631, DOI 10.1145/2950290.2950334
   Heinemann Lars, 2011, Top Productivity through Software Reuse. Proceedings of the 12th International Conference on Software Reuse, ICSR 2011, P207, DOI 10.1007/978-3-642-21347-2_16
   Iivari J, 1996, COMMUN ACM, V39, P94, DOI 10.1145/236156.236183
   Kawrykow D, 2009, IEEE INT CONF AUTOM, P111, DOI 10.1109/ASE.2009.62
   KRUEGER CW, 1992, COMPUT SURV, V24, P131, DOI 10.1145/130844.130856
   Krutz DE, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P522, DOI 10.1109/MSR.2015.79
   Lethbridge TC, 2000, J SYST SOFTWARE, V53, P53, DOI 10.1016/S0164-1212(00)00009-1
   Lv F, 2015, IEEE INT CONF AUTOM, P260, DOI 10.1109/ASE.2015.42
   McMillan C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P111, DOI 10.1145/1985793.1985809
   Mohagheghi P, 2004, PROC INT CONF SOFTW, P282, DOI 10.1109/ICSE.2004.1317450
   Mojica IJ, 2014, IEEE SOFTWARE, V31, P78, DOI 10.1109/MS.2013.142
   Ouni A, 2017, INFORM SOFTWARE TECH, V83, P55, DOI 10.1016/j.infsof.2016.11.007
   Piccioni Marco, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P5, DOI 10.1109/ESEM.2013.14
   PythonModule, 2018, PYTH OFF DOC MOD
   Rahman MM, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P349, DOI 10.1109/SANER.2016.80
   Ruiz I. J. M., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P113
   Singer Janice, 2008, Guide to Advanced Empirical Software Engineering, P9
   Sun C, 2011, 2011 SYMPOSIUM ON PIEZOELECTRICITY, ACOUSTIC WAVES AND DEVICE APPLICATIONS (SPAWDA), P188, DOI 10.1109/SPAWDA.2011.6167223
   Thung F, 2016, IEEE INT CONF AUTOM, P896, DOI 10.1145/2970276.2975940
   Thung F, 2013, IEEE INT CONF AUTOM, P290, DOI 10.1109/ASE.2013.6693088
   Thung F, 2013, WORK CONF REVERSE EN, P182, DOI 10.1109/WCRE.2013.6671293
   Uddin G, 2017, IEEE INT CONF AUTOM, P159, DOI 10.1109/ASE.2017.8115629
   Wei HH, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P3034
   Yin RK, 2002, Applied Social Research Methods Series, V34
   Yongbeom Kim, 1998, Journal of Management Information Systems, V14, P113
   YouTube video, 2004, DES EV REUS COMP
   Zaimi Asimina., 2015, P 7 BALK C INF BCI 1, P4, DOI [DOI 10.1145/2801081.2801087, 10.1145/2801081.2801087]
NR 34
TC 25
Z9 25
U1 1
U2 13
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN
PY 2020
VL 25
IS 1
BP 755
EP 789
DI 10.1007/s10664-019-09771-0
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KP0WS
UT WOS:000515965100019
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Ajami, S
   Woodbridge, Y
   Feitelson, DG
AF Ajami, Shulamyt
   Woodbridge, Yonatan
   Feitelson, Dror G.
TI Syntax, predicates, idioms - what really affects code complexity?
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Code complexity; Program understanding; Gamification
ID PROGRAM COMPREHENSION; CYCLOMATIC COMPLEXITY; SOFTWARE MAINTENANCE;
   COGNITIVE-PROCESSES
AB Program comprehension concerns the ability to understand code written by others. But not all code is the same. We use an experimental platform fashioned as an online game-like environment to measure how quickly and accurately 220 professional programmers can interpret code snippets with similar functionality but different structures; snippets that take longer to understand or produce more errors are considered harder. The results indicate, inter alia, that for loops are significantly harder than ifs, that some but not all negations make a predicate harder, and that loops counting down are slightly harder than loops counting up. This demonstrates how the effect of syntactic structures, different ways to express predicates, and the use of known idioms can be measured empirically, and that syntactic structures are not necessarily the most important factor. We also found that the metrics of time to understanding and errors made are not necessarily equivalent. Thus loops counting down took slightly longer, but loops with unusual bounds caused many more errors. By amassing many more empirical results like these it may be possible to derive better code complexity metrics than we have today, and also to better appreciate their limitations.
C1 [Ajami, Shulamyt; Feitelson, Dror G.] Hebrew Univ Jerusalem, Dept Comp Sci, IL-91904 Jerusalem, Israel.
   [Woodbridge, Yonatan] Hebrew Univ Jerusalem, Dept Stat, IL-91905 Jerusalem, Israel.
C3 Hebrew University of Jerusalem; Hebrew University of Jerusalem
RP Feitelson, DG (corresponding author), Hebrew Univ Jerusalem, Dept Comp Sci, IL-91904 Jerusalem, Israel.
EM shulamyt@gmail.com; yonatan.woodbridge@mail.huji.ac.il;
   feit@cs.huji.ac.il
OI Feitelson, Dror/0000-0002-2733-7709
FU Berthold Badler chair in Computer Science; ISRAEL SCIENCE FOUNDATION
   [407/13]
FX Dror Feitelson holds the Berthold Badler chair in Computer Science. This
   research was supported by the ISRAEL SCIENCE FOUNDATION (grant no.
   407/13).
CR Abrahao S, 2013, IEEE T SOFTWARE ENG, V39, P327, DOI 10.1109/TSE.2012.27
   ADELSON B, 1985, IEEE T SOFTWARE ENG, V11, P1351, DOI 10.1109/TSE.1985.231883
   Ajami S, 2017, INT C PROGRAM COMPRE, P66, DOI 10.1109/ICPC.2017.39
   Ali M, 2013, INT C INFO SCI APPL
   [Anonymous], 2010, GEN LINEAR MODELS, DOI DOI 10.1002/9780470556986
   [Anonymous], 2011, CATEGORICAL DATA ANA
   [Anonymous], 2015, USING STUDENTS EXPT
   [Anonymous], 4 INT C SOFTW ENG
   [Anonymous], 4 S EYE TRACK RES AP
   [Anonymous], ARXIV13045257V2CSSE
   [Anonymous], C BRIT ED RES ASS
   [Anonymous], 1005 AI MIT ART INT
   [Anonymous], 12 IEEE INT WORK C S
   [Anonymous], 2012, 20 IEEE INT C PROGR
   [Anonymous], 28 PSYCH PROGR INT G
   [Anonymous], 2008, P 4 INT WORKSHOP END, DOI DOI 10.1145/1370847.1370860
   [Anonymous], 2014, 22 INT C PROGR COMPR, DOI DOI 10.1145/2597008.2597140
   [Anonymous], 1983, Proceedings of CHI 1983
   [Anonymous], 2011, MAKING SOFTWARE WHAT
   [Anonymous], INT C SOFTW MAINT EV
   Arunachalam V, 1996, J SYST SOFTWARE, V34, P177, DOI 10.1016/0164-1212(95)00074-7
   Avidan E, 2017, INT C PROGRAM COMPRE, P55, DOI 10.1109/ICPC.2017.27
   Ball T, 2000, COMPUTER, V33, P57, DOI 10.1109/2.869371
   Bergersen GR, 2014, IEEE T SOFTWARE ENG, V40, P1163, DOI 10.1109/TSE.2014.2348997
   Bergersen GR, 2011, J INDIVID DIFFER, V32, P201, DOI 10.1027/1614-0001/a000052
   Bishop J, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P398, DOI 10.1109/ICSE.2015.172
   BROOKS FP, 1987, COMPUTER, V20, P10, DOI 10.1109/MC.1987.1663532
   BROOKS R, 1983, INT J MAN MACH STUD, V18, P543, DOI 10.1016/S0020-7373(83)80031-5
   Buse R.P., 2008, Proceedings of the 2008 International Symposium on Software Testing and Analysis, P121
   Butler S, 2010, EUR CON SFTWR MTNCE, P156, DOI 10.1109/CSMR.2010.27
   CURTIS B, 1981, P IEEE, V69, P846, DOI 10.1109/PROC.1981.12088
   Curtis B, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P711, DOI 10.1145/1985793.1985893
   Denaro G, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P241, DOI 10.1109/ICSE.2002.1007972
   Deterding S., 2011, P 15 INT AC MINDTREK, P9, DOI [10.1145/2181037.2181040, DOI 10.1145/2181037.2181040]
   DIJKSTRA EW, 1968, COMMUN ACM, V11, P147, DOI 10.1145/362929.362947
   Feigenspan J, 2011, INT SYMP EMP SOFTWAR, P127, DOI 10.1109/ESEM.2011.21
   Gamma Erich., 1994, DESIGN PATTERNS
   Gil Y, 2017, EMPIR SOFTW ENG, V22, P2585, DOI 10.1007/s10664-017-9513-5
   GILL GK, 1991, IEEE T SOFTWARE ENG, V17, P1284, DOI 10.1109/32.106988
   Gramss D, 2014, 2014 INTERNATIONAL CONFERENCE ON INTERACTIVE COLLABORATIVE LEARNING (ICL), P272, DOI 10.1109/ICL.2014.7017783
   Gruhn V, 2007, PROCEEDINGS OF THE SIXTH IEEE INTERNATIONAL CONFERENCE ON COGNITIVE INFORMATICS, P116, DOI 10.1109/COGINF.2007.4341880
   Hamari J, 2016, COMPUT HUM BEHAV, V54, P170, DOI 10.1016/j.chb.2015.07.045
   Heathcote A, 2000, PSYCHON B REV, V7, P185, DOI 10.3758/BF03212979
   HENRY S, 1981, IEEE T SOFTWARE ENG, V7, P510, DOI 10.1109/TSE.1981.231113
   Huotari K., 2012, P 16 INT AC MINDTREK, P17
   ISELIN ER, 1988, INT J MAN MACH STUD, V28, P45, DOI 10.1016/S0020-7373(88)80052-X
   Jbara A, 2017, EMPIR SOFTW ENG, V22, P1440, DOI 10.1007/s10664-016-9477-x
   Katzmarski Bernhard, 2012, 2012 IEEE 20th International Conference on Program Comprehension, P17
   Kirkpatrick K, 2016, COMMUN ACM, V59, P32, DOI 10.1145/2898967
   KLERER M, 1984, INT J MAN MACH STUD, V20, P445, DOI 10.1016/S0020-7373(84)80021-8
   LETOVSKY S, 1987, J SYST SOFTWARE, V7, P325, DOI 10.1016/0164-1212(87)90032-X
   Lumley T, 2002, ANNU REV PUBL HEALTH, V23, P151, DOI 10.1146/annurev.publhealth.23.100901.140546
   Mair P, 2007, Journal of Statistical Software, V20, DOI DOI 10.18637/JSS.V020.I09
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   MUNSON JC, 1990, J SYST SOFTWARE, V12, P283, DOI 10.1016/0164-1212(90)90051-M
   Myers G. J., 1977, SIGPLAN Notices, V12, P61, DOI 10.1145/954627.954633
   MYNATT BT, 1984, INT J MAN MACH STUD, V21, P91, DOI 10.1016/S0020-7373(84)80060-7
   Newell A., 1981, COGNITIVE SKILLS THE, P1, DOI DOI 10.4324/9780203728178
   Nunez WZ, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P999, DOI 10.1145/3106237.3122824
   Ohlsson N, 1996, IEEE T SOFTWARE ENG, V22, P886, DOI 10.1109/32.553637
   Pink D.H., 2011, Drive: The surprising truth about what motivates us
   Piwowarski P., 1982, SIGPLAN Notices, V17, P44, DOI 10.1145/947955.947960
   Prechelt L, 1999, COMMUN ACM, V42, P109, DOI 10.1145/317665.317683
   Rajlich V, 1997, PROG COMPREHEN, P160, DOI 10.1109/WPC.1997.601284
   Rilling J, 2003, PROG COMPREHEN, P115
   SACKMAN H, 1968, COMMUN ACM, V11, P3, DOI 10.1145/362851.362858
   Schneidewind Norm, 2009, 2009 20th International Symposium on Software Reliability Engineering (ISSRE 2009), P1, DOI 10.1109/ISSRE.2009.10
   Shao JQ, 2003, CAN J ELECT COMPUT E, V28, P69, DOI 10.1109/CJECE.2003.1532511
   SHEPPERD M, 1988, SOFTWARE ENG J, V3, P30, DOI 10.1049/sej.1988.0003
   SHNEIDERMAN B, 1979, INT J COMPUT INF SCI, V8, P219, DOI 10.1007/BF00977789
   Siegmund J, 2015, EMPIR SOFTW ENG, V20, P1159, DOI 10.1007/s10664-014-9318-8
   Siegmund J, 2014, EMPIR SOFTW ENG, V19, P1299, DOI 10.1007/s10664-013-9286-4
   SOLOWAY E, 1984, IEEE T SOFTWARE ENG, V10, P595, DOI 10.1109/TSE.1984.5010283
   Sonnentag S, 1998, J APPL PSYCHOL, V83, P703, DOI 10.1037/0021-9010.83.5.703
   Sonnentag S, 2006, CAMBRIDGE HANDBOOK OF EXPERTISE AND EXPERT PERFORMANCE, P373
   VONMAYRHAUSER A, 1995, COMPUTER, V28, P44, DOI 10.1109/2.402076
   Welch BL, 1938, BIOMETRIKA, V29, P350, DOI 10.1093/biomet/29.3-4.350
   WEYUKER EJ, 1988, IEEE T SOFTWARE ENG, V14, P1357, DOI 10.1109/32.6178
   Yoder Keith J, 2010, J Vis Exp, DOI 10.3791/2320
NR 79
TC 23
Z9 25
U1 1
U2 10
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2019
VL 24
IS 1
BP 287
EP 328
DI 10.1007/s10664-018-9628-3
PG 42
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA HL3RV
UT WOS:000458634400010
DA 2024-07-18
ER

PT J
AU Nayebi, M
   Cho, H
   Ruhe, G
AF Nayebi, Maleknaz
   Cho, Henry
   Ruhe, Guenther
TI App store mining is not enough for app improvement
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE App store mining; Twitter; Mobile apps; Topic modeling; Machine
   learning; Crowdsourcing
AB The rise in popularity of mobile devices has led to a parallel growth in the size of the app store market, intriguing several research studies and commercial platforms on mining app stores. App store reviews are used to analyze different aspects of app development and evolution. However, app users' feedback does not only exist on the app store. In fact, despite the large quantity of posts that are made daily on social media, the importance and value that these discussions provide remain mostly unused in the context of mobile app development. In this paper, we study how Twitter can provide complementary information to support mobile app development. By analyzing a total of 30,793 apps over a period of six weeks, we found strong correlations between the number of reviews and tweets for most apps. Moreover, through applying machine learning classifiers, topic modeling and subsequent crowd-sourcing, we successfully mined 22.4% additional feature requests and 12.89% additional bug reports from Twitter. We also found that 52.1% of all feature requests and bug reports were discussed on both tweets and reviews. In addition to finding common and unique information from Twitter and the app store, sentiment and content analysis were also performed for 70 randomly selected apps. From this, we found that tweets provided more critical and objective views on apps than reviews from the app store. These results show that app store review mining is indeed not enough; other information sources ultimately provide added value and information for app developers.
C1 [Nayebi, Maleknaz; Ruhe, Guenther] Univ Calgary, SEDS Lab, Calgary, AB, Canada.
   [Cho, Henry] Univ Toronto, Dept Engn Sci, Toronto, ON, Canada.
C3 University of Calgary; University of Toronto
RP Nayebi, M (corresponding author), Univ Calgary, SEDS Lab, Calgary, AB, Canada.
EM mnayebi@ucalgary.ca; henry.cho@mail.utoronto.ca; ruhe@ucalgary.ca
FU Natural Sciences and Engineering Research Council of Canada (NSERC)
   [250343-12]
FX We would like to thank Homayoon Farrahi and Ada Lee for their help on
   this study. We thank all the anonymous reviewers and the Associate
   editor for their valuable comments and suggestions. This research was
   partially supported by the Natural Sciences and Engineering Research
   Council of Canada (NSERC) Discovery Grant 250343-12.
CR [Anonymous], 2013, 2 JOINT C LEX COMP S
   Benevenuto Fabricio., 2010, CEAS
   Blackman NJM, 2000, STAT MED, V19, P723, DOI 10.1002/(SICI)1097-0258(20000315)19:5<723::AID-SIM379>3.0.CO;2-A
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Bougie Gargi, 2011, P 2 INT WORKSHOP WEB, P31, DOI [10.1145/1984701.1984707, DOI 10.1145/1984701.1984707]
   Chang J., 2009, Advances in neural information processing systems, P22, DOI DOI 10.5555/2984093.2984126
   Chen N, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P767, DOI 10.1145/2568225.2568263
   Ciurumelea A, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P91, DOI 10.1109/SANER.2017.7884612
   De Smedt T, 2012, J MACH LEARN RES, V13, P2063
   Di Sorbo A, 2017, PROC IEEE ACM INT C, P55, DOI 10.1109/ICSE-C.2017.5
   Di Sorbo A, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P499, DOI 10.1145/2950290.2950299
   El Rahman SA, 2019, 2019 INTERNATIONAL CONFERENCE ON COMPUTER AND INFORMATION SCIENCES (ICCIS), P336, DOI 10.1109/iccisci.2019.8716464
   Gibbons JD., 2020, NONPARAMETRIC STAT I, DOI DOI 10.1201/9781439896129
   Gómez M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P567, DOI 10.1109/ICSE.2015.195
   Gu XD, 2015, IEEE INT CONF AUTOM, P760, DOI 10.1109/ASE.2015.57
   Guzman E, 2017, REQUIR ENG, V22, P387, DOI 10.1007/s00766-017-0274-x
   Guzman E, 2017, PROC IEEE ACM INT C, P283, DOI 10.1109/ICSE-C.2017.65
   Harman M., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P108, DOI 10.1109/MSR.2012.6224306
   Hong L., 2010, P 1 WORKSH SOC MED A, P80, DOI [10.1145/1964858.1964870, DOI 10.1145/1964858.1964870]
   Hutto CJ, 8 INT AAAI C WEBL SO, P50
   Iacob C, 2013, IEEE WORK CONF MIN S, P41, DOI 10.1109/MSR.2013.6624001
   Jivani A.G., 2011, Int. J. Comp. Tech. Appl, V2, P1930
   Jongeling R, 2015, PROC IEEE INT CONF S, P531, DOI 10.1109/ICSM.2015.7332508
   Kittur A, 2008, CHI 2008: 26TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS VOLS 1 AND 2, CONFERENCE PROCEEDINGS, P453
   Kouloumpis E., 2011, TWITTER SENTIMENT AN, P538
   Liu B, 2010, CH CRC MACH LEARN PA, P627
   Loper E, 2002, ETMTNLP 02 P ACL 02, P63, DOI [10.3115/1225403.1225421, DOI 10.3115/1225403.1225421, DOI 10.3115/1118108.1118117]
   Maalej W, 2016, IEEE SOFTWARE, V33, P48, DOI 10.1109/MS.2015.153
   Maalej W, 2015, INT REQUIR ENG CONF, P116, DOI 10.1109/RE.2015.7320414
   Manning CD, 2014, PROCEEDINGS OF 52ND ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: SYSTEM DEMONSTRATIONS, P55, DOI 10.3115/v1/p14-5010
   Martin W., 2016, RN, V16, P02
   Martin W, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P123, DOI 10.1109/MSR.2015.19
   Naaman M, 2010, 2010 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, P189
   Nayebi M., 2015, ART SCI ANAL SOFTWAR, P550
   Nayebi M, 2017, PROC IEEE ACM INT C, P152, DOI 10.1109/ICSE-C.2017.77
   Nayebi M, 2017, PROC INT CONF SOFTW, P57, DOI 10.1109/ICSE-SEIS.2017.8
   Nayebi M, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P552, DOI 10.1109/SANER.2016.116
   Nielsen F. A., 2011, Proceedings of the ESWC2011 workshop on 'making sense of microposts': big things come in small packages, V718, P93
   O'Connor B., 2010, ICWSM
   Palomba F, 2015, PROC IEEE INT CONF S, P291, DOI 10.1109/ICSM.2015.7332475
   Paolacci G, 2010, JUDGM DECIS MAK, V5, P411
   PORTER MF, 1980, PROGRAM-AUTOM LIBR, V14, P130, DOI 10.1108/eb046814
   Prasetyo PK, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P596, DOI 10.1109/ICSM.2012.6405330
   Ramachandran Divya., 2010, Proceedings of the 4th ACM/IEEE international conference on information and communication technologies and development, P1
   Rosenthal S., 2015, P SEMEVAL 2015
   Sebastiani F, 2002, ACM COMPUT SURV, V34, P1, DOI 10.1145/505282.505283
   Thelwall M, 2011, J AM SOC INF SCI TEC, V62, P406, DOI 10.1002/asi.21462
   Villarroel L, 2016, PROC INT CONF SOFTW, P14, DOI 10.1145/2884781.2884818
   Wang X, 2014, MICROBLOGGING OPEN S, P8
   Wiese IS, 2016, PROC IEEE INT CONF S, P345, DOI 10.1109/ICSME.2016.13
   Williams G, 2017, PROC IEEE ACM INT C, P280, DOI 10.1109/ICSE-C.2017.53
   Wohlin C., 2012, Experimentation in Software Engineering
   Yuan Tian, 2014, 2014 IEEE 4th Workshop on Mining Unstructured Data (MUD), P1, DOI 10.1109/MUD.2014.14
NR 53
TC 44
Z9 48
U1 1
U2 20
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2018
VL 23
IS 5
BP 2764
EP 2794
DI 10.1007/s10664-018-9601-1
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GO5AW
UT WOS:000440031100008
DA 2024-07-18
ER

PT J
AU Palomares, C
   Quer, C
   Franch, X
AF Palomares, Cristina
   Quer, Carme
   Franch, Xavier
TI Requirements reuse and requirement patterns: a state of the practice
   survey
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Requirements engineering; Requirements reuse; Requirement patterns;
   Empirical studies; Surveys; Online questionnaire
AB Requirements engineering is a discipline with numerous challenges to overcome. One of these challenges is the implementation of requirements reuse approaches. Although several theoretical proposals exist, little is known about the practices that are currently adopted in industry. Our goal is to contribute to the investigation of the state of the practice in the reuse of requirements, eliciting current practices from practitioners, and their opinions whenever appropriate. Besides reuse in general, we focus on requirement patterns as a particular strategy to reuse. We conducted an exploratory survey based on an online questionnaire. We received 71 responses from requirements engineers with industrial experience in the field, which were analyzed in order to derive observations. Although we found that a high majority of respondents declared some level of reuse in their projects (in particular, non-functional requirements were identified as the most similar and recurrent among projects), it is true that only a minority of them declared such reuse as a regular practice. Larger IT organizations and IT organizations with well-established software processes and methods present higher levels of reuse. Ignorance of reuse techniques and processes is the main reason preventing wider adoption. From the different existing reuse techniques, the simplest ones based on textual copy and subsequent tailoring of former requirements are the most adopted techniques. However, participants who apply reuse more often tend to use more elaborate techniques. Opinions of respondents about the use of requirement patterns show that they can be expected to mitigate problems related to the quality of the resulting requirements, such as lack of uniformity, inconsistency, or ambiguity. The main reasons behind the lack of adoption of requirement patterns by practitioners (in spite of the increasing research approaches proposed in the community) are related to the lack of a well-defined reuse method and involvement of requirement engineers. The results of our paper are interesting for practitioners since we highlight relevant observations from the survey participants' experiences when deciding to implement requirements reuse practices. We also suggest future lines of research based on the needs pointed out in the results.
C1 [Palomares, Cristina] UPC, Grp Software & Serv Engn GESSI, Jordi Girona 1-3,Omega Bldg,Room S206, Barcelona, Catalonia, Spain.
   [Quer, Carme] UPC, Grp Software & Serv Engn GESSI, Jordi Girona 1-3,Omega Bldg,Room 124, Barcelona, Catalonia, Spain.
   [Franch, Xavier] UPC, Grp Software & Serv Engn GESSI, Jordi Girona 1-3,Omega Bldg,Room 122, Barcelona, Catalonia, Spain.
C3 Universitat Politecnica de Catalunya; Universitat Politecnica de
   Catalunya; Universitat Politecnica de Catalunya
RP Franch, X (corresponding author), UPC, Grp Software & Serv Engn GESSI, Jordi Girona 1-3,Omega Bldg,Room 122, Barcelona, Catalonia, Spain.
EM cpalomares@essi.upc.edu; cquer@essi.upc.edu; franch@essi.upc.edu
RI Franch, Xavier/A-8588-2008; Quer, Carme/A-4262-2008
OI Quer, Carme/0000-0002-9000-6371; Palomares, Cristina/0000-0003-4722-5584
FU Spanish project [TIN2013-44641-P]
FX We want to thank Claudia Ayala and Birgit Penzenstadler for their
   comments and suggestions. This work has been partially funded by the
   Spanish project TIN2013-44641-P.
CR [Anonymous], 2013, SOFTWARE REQUIREMENT
   [Anonymous], 1997, Requirements engineering: a good practice guide
   [Anonymous], 2015, Journal of Software Engineering Research and Development, DOI [10.1186/s40411-015-0023-0, DOI 10.1186/S40411-015-0023-0]
   Arnuphaptrairong T., 2011, P INT MULT ENG COMP, V1, P16
   Bakar NH, 2014, INT J SOFTW ENG TECH, V1
   Beecham S, 2003, EMPIR SOFTW ENG, V8, P7, DOI 10.1023/A:1021764731148
   Boehm BW, 2001, J COMPUTER, V34, DOI [10.1109/2.962984, DOI 10.1109/2.962984]
   Boone HN., 2012, J EXT, V50, P1
   Bosch J., 2000, Design and Use of Software Architectures: Adopting and Evolving a Product-Line Approach
   Calleam Consulting, 2015, WHY DO PROJ FAIL 101
   Carrillo-de-Gea JM, 2013, REUSING REQUIREMENTS, DOI [10.1007/978-3-642-34419-0_8, DOI 10.1007/978-3-642-34419-0_8]
   Carvallo JP, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P323
   Chen J, 2016, EMPIR SOFTW ENG, V21, P1397, DOI 10.1007/s10664-015-9390-8
   Chen K, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P31
   Chernak Y., 2012, 2012 IEEE International Conference on Software Science, Technology and Engineering, P46, DOI 10.1109/SWSTE.2012.12
   Chung L, 2006, IRI 2006: PROCEEDINGS OF THE 2006 IEEE INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION, P539
   Cox K, 2009, IET SOFTW, V3, P339, DOI 10.1049/iet-sen.2008.0076
   Daramola O., 2012, 2012 IEEE Second International Workshop on Requirements Patterns (RePa 2012), P54, DOI 10.1109/RePa.2012.6359973
   Dietrich J, 2016, EMPIR SOFTW ENG, V21, P1371, DOI 10.1007/s10664-015-9389-1
   Dillman DA., 2014, INTERNET PHONE MAIL, V4th
   Duggan Maeve., 2015, The Demographics of Social Media Users. Retrieved February 25, 2018
   Dybå T, 2005, IEEE T SOFTWARE ENG, V31, P410, DOI 10.1109/TSE.2005.53
   Dyba T., 2003, Software Engineering Notes, V28, P148, DOI 10.1145/949952.940092
   Eriksson M, 2009, J SYST SOFTWARE, V82, P435, DOI 10.1016/j.jss.2008.07.046
   Evans JR, 2005, INTERNET RES, V15, P195, DOI 10.1108/10662240510590360
   Fernández DM, 2015, INFORM SOFTWARE TECH, V57, P616, DOI 10.1016/j.infsof.2014.05.008
   Filipovikj P, 2014, INT REQUIR ENG CONF, P444, DOI 10.1109/RE.2014.6912296
   Franch X, 2013, CONSTRUCTING USING S, DOI [10.1007/978-3-642-34419-05, DOI 10.1007/978-3-642-34419-05]
   Franch X, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1499, DOI 10.1109/ICSE.2013.6606758
   Galorath D., 2012, Software project failure costs billions - better estimation and planning can help
   Goldin L, 2015, REQUIR ENG, V20, P23, DOI 10.1007/s00766-013-0182-7
   Haeng-Kon K, 2014, INT C SOFTW ENG ART
   Hall T., 2002, IEE Proceedings-Software, V149, P153, DOI 10.1049/ip-sen:20020694
   Hauksdottir D., 2012, 2012 IEEE 20th International Requirements Engineering Conference (RE 2012), P309, DOI 10.1109/RE.2012.6345820
   Hoffmann A., 2012, 2012 IEEE Second International Workshop on Requirements Patterns (RePa 2012), P7, DOI 10.1109/RePa.2012.6359968
   Hoffmann A, 2013, SUCCESS FACTORS REQU
   Hull E, 2011, REQUIREMENTS ENGINEERING, THIRD EDITION, P1, DOI 10.1007/978-1-84996-405-0
   IEEE Computer Society. Software Engineering Standards Committee and IEEE-SA Standards Board, 2009, IEEE REC PRACT SOFTW
   Iqbal J, 2013, IEEE AUS SOFT ENGR, P137, DOI 10.1109/ASWEC.2013.25
   Issa Ayman A., 2010, Proceedings Second International Conference on Computer Research and Development (ICCRD 2010), P307, DOI 10.1109/ICCRD.2010.16
   Jamieson Susan, 2004, Med Educ, V38, P1217, DOI 10.1111/j.1365-2929.2004.02012.x
   Jensen J, 2009, 2009 INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY, AND SECURITY (ARES), VOLS 1 AND 2, P380, DOI 10.1109/ARES.2009.107
   Jones C, 2014, SCORING EVALUATING S
   Karatas EK, 2014, 2014 IEEE International Conference on Data Mining Workshop (ICDMW), P832, DOI 10.1109/ICDMW.2014.57
   Khankaew S, 2014, IEEE INT WORKS EMPIR, P1, DOI 10.1109/EmpiRE.2014.6890109
   Kitchenharn B., 2003, Software Engineering Notes, V28, P24, DOI 10.1145/638750.638758
   Konrad S, 2005, PROC INT CONF SOFTW, P372
   Konrad S, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P127, DOI 10.1109/ICRE.2002.1211541
   Krippendorff K., 2012, Content analysis
   Lam W, 1998, ANN SOFTW ENG, V5, P253, DOI 10.1023/A:1018912105115
   Lam W., 1997, RE 97 P 3 IEEE INT S, V2, P102, DOI DOI 10.1109/ISRE.1997.566834
   Lethbridge TC, 2005, EMPIR SOFTW ENG, V10, P311, DOI 10.1007/s10664-005-1290-x
   Li Y, 2012, PROCEEDINGS 18TH ISSAT INTERNATIONAL CONFERENCE ON RELIABILITY & QUALITY IN DESIGN, P12
   Lo D, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P415, DOI 10.1145/2786805.2786809
   Mannion M, 2008, SYSTEMS ENG, V11, P61, DOI 10.1002/sys.20086
   Massonet P, 1997, RE '97 - PROCEEDINGS OF THE THIRD IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, P26, DOI 10.1109/ISRE.1997.566836
   Matloff N, 2009, ALGORITHM Z SCORES P
   Matulevicius R, 2005, SURVEY REQUIREMENTS, DOI [10.1007/0-387-28809-029, DOI 10.1007/0-387-28809-029]
   Mich L, 2004, REQUIR ENG, V9, P151, DOI 10.1007/s00766-004-0195-3
   Milewski AE, 2007, EMPIR SOFTW ENG, V12, P311, DOI 10.1007/s10664-007-9036-6
   Naish J., 2011, 2011 First International Workshop on Requirements Patterns (RePa'11), P42, DOI 10.1109/RePa.2011.6046721
   Neill CJ, 2003, IEEE SOFTWARE, V20, P40, DOI 10.1109/MS.2003.1241365
   Niazi M., 2012, P 7 INT C SOFTWARE E, P283
   Niazi M, 2008, SOFTWARE QUAL J, V16, P213, DOI 10.1007/s11219-007-9033-4
   Nikula U, 2000, RES REPORT
   Nuseibeh B., 2000, P C FUTURE SOFTWARE, P35, DOI [10.1145/336512.336523, DOI 10.1145/336512.336523]
   Pacheco CL, 2015, J SOFTW-EVOL PROC, V27, P1, DOI 10.1002/smr.1698
   Palomares C, 2014, REQUIREMENTS ENG MAG, V2014
   Palomares C, 2014, P 20 INT WORK C REQ, P301
   Palomares C., 2013, P 28 ANN ACM S APPL, P1260
   Panis MC, 2015, INT REQUIR ENG CONF, P296, DOI 10.1109/RE.2015.7320446
   Pohl K, 2010, REQUIREMENTS ENGINEERING: FUNDAMENTALS, PRINCIPLES, AND TECHNIQUES, P1, DOI 10.1007/978-3-642-12578-2
   Post A, 2011, LECT NOTES COMPUT SC, V6606, P166, DOI 10.1007/978-3-642-19858-8_17
   Procaccino JD, 2002, INFORM SOFTWARE TECH, V44, P53, DOI 10.1016/S0950-5849(01)00217-8
   Renault S., 2009, INT J COMPUT SCI APP, V6, P175
   Rine DC, 2000, INFORM SOFTWARE TECH, V42, P47, DOI 10.1016/S0950-5849(99)00055-5
   Robertson J, 2000, VOLERE REQUIREMENTS
   Sadraei E, 2007, REQUIR ENG, V12, P145, DOI 10.1007/s00766-007-0042-4
   Salini P., 2012, INT J COMPUTER APPL, V49, P21, DOI DOI 10.5120/7671-0953
   Sawyer P., 1997, SOFTWARE PROCESS IMP, V3, P19, DOI [DOI 10.1002/(SICI)1099, 10.1002/(SICI)1099-1670(199703)3:13.0.CO;2-X, DOI 10.1002/(SICI)1099-1670(199703)3:1<19::AID-]
   Schar B, 2015, P INT C ENT SYST ES
   Schirpenbach J, 2014, REUSE REQUIREMENTS V
   Shahrokni A, 2010, LECT NOTES COMPUT SC, V6182, P79, DOI 10.1007/978-3-642-14192-8_9
   Solemon B, 2009, ADV SOFTWARE ENG, DOI [10.1007/978-3-642-10619-49, DOI 10.1007/978-3-642-10619-49]
   Solemon B, 2010, ADV SOFTWARE ENG, DOI [10.1007/978-3-642-17578-715, DOI 10.1007/978-3-642-17578-715]
   Solinski A, 2016, SOFTWARE QUAL J, V24, P447, DOI 10.1007/s11219-014-9253-3
   Sommerville I, 2005, ACM T SOFTW ENG METH, V14, P85, DOI 10.1145/1044834.1044837
   Souag A, 2016, REQUIR ENG, V21, P251, DOI 10.1007/s00766-015-0220-8
   Srivastava S, 2013, INT J COMPUT SCI, V10
   Supakkul S., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P179, DOI 10.1109/RE.2010.31
   SwissQ, 2012, SWISSQ REQ TRENDS BE
   SwissQ, 2012, SWISSQ AG TRENDS BEN
   Tahir A., 2010, IEEE INT C COMPUTATI, P1
   Tiwana A, 2004, INFORM SOFTWARE TECH, V46, P899, DOI 10.1016/j.infsof.2004.03.006
   Toval A., 2001, Requirements Engineering, V6, P205, DOI 10.1007/PL00010360
   Trochim W. M., 2006, RES METHODS KNOWLEDG
   Umarji M, 2013, ARCHETYPAL INTERNET, DOI [10.1007/978-0-387-09684-121, DOI 10.1007/978-0-387-09684-121]
   VersionOne, 2016, 10 AN STAT AGILETM R
   von Knethen A, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P273, DOI 10.1109/ICRE.2002.1048538
   Withall Stephen, 2007, SOFTWARE REQUIREMENT
   Wohlin C., 2012, EXPT SOFTWARE ENG IN
   Wright KB, 2005, J COMPUT-MEDIAT COMM, V10
   Young R, 2015, REQUIREMENTS ENG MAG, V2015
NR 103
TC 35
Z9 35
U1 0
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2017
VL 22
IS 6
BP CP3
EP 2762
DI 10.1007/s10664-016-9485-x
PG 44
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FI3MB
UT WOS:000411865400001
DA 2024-07-18
ER

PT J
AU Gil, Y
   Lalouche, G
AF Gil, Yossi
   Lalouche, Gal
TI On the correlation between size and metric validity
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software engineering; Object-oriented programming
ID OBJECT-ORIENTED METRICS; EMPIRICAL VALIDATION; SOFTWARE; COMPLEXITY
AB Empirical validation of code metrics has a long history of success. Many metrics have been shown to be good predictors of external features, such as correlation to bugs. Our study provides an alternative explanation to such validation, attributing it to the confounding effect of size. In contradiction to received wisdom, we argue that the validity of a metric can be explained by its correlation to the size of the code artifact. In fact, this work came about in view of our failure in the quest of finding a metric that is both valid and free of this confounding effect. Our main discovery is that, with the appropriate (non-parametric) transformations, the validity of a metric can be accurately (with R-squared values being at times as high as 0.97) predicted from its correlation with size. The reported results are with respect to a suite of 26 metrics, that includes the famous Chidamber and Kemerer metrics. Concretely, it is shown that the more a metric is correlated with size, the more able it is to predict external features values, and vice-versa. We consider two methods for controlling for size, by linear transformations. As it turns out, metrics controlled for size, tend to eliminate their predictive capabilities. We also show that the famous Chidamber and Kemerer metrics are no better than other metrics in our suite. Overall, our results suggest code size is the only "unique" valid metric.
C1 [Gil, Yossi; Lalouche, Gal] Technion Israel Inst Technol, Dept Comp Sci, IL-3200003 Haifa, Israel.
C3 Technion Israel Institute of Technology
RP Gil, Y (corresponding author), Technion Israel Inst Technol, Dept Comp Sci, IL-3200003 Haifa, Israel.
EM Yogi@CS.Technion.AC.IL; Lalouche@CS.Technion.AC.IL
FU Israel Science Foundation (ISF) [1803/13]
FX This research was supported by the Israel Science Foundation (ISF),
   grant No. 1803/13.
CR Alan O, 2011, EXPERT SYST APPL, V38, P3440, DOI 10.1016/j.eswa.2010.08.130
   Allamanis M, 2013, IEEE WORK CONF MIN S, P207, DOI 10.1109/MSR.2013.6624029
   [Anonymous], 1994, Object-oriented software metrics: a practical guide
   [Anonymous], 2014, SOFTWARE METRICS RIG, DOI DOI 10.1201/B17461
   [Anonymous], 2014, 22 INT C PROGR COMPR, DOI DOI 10.1145/2597008.2597140
   Arnold K., 1996, THE JAVA SERIES
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Baxter G, 2006, P 21 ANN C OO PROG S
   Bird C, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P121, DOI 10.1145/1595696.1595716
   CALDIERA G, 1991, COMPUTER, V24, P61, DOI 10.1109/2.67210
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   COLEMAN D, 1994, COMPUTER, V27, P44, DOI 10.1109/2.303623
   DEUTSCH LP, 1996, 1952 RFC
   Eastlake D., 2001, US Secure Hash Algorithm, V1
   Emam KE, 2001, IEEE T SOFTWARE ENG, V27, P630, DOI 10.1109/32.935855
   Fayad M.E., 2001, Communications of the ACM, V44, P95
   Gil J, 1998, COMPLEXITY TYPE ANAL, V1445
   Gillies A., 2011, Software quality: Theory and management
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Halstead M. H., 1977, ELEMENTS SOFTWARE SC
   Harrison W. A., 1981, SIGPLAN Notices, V16, P63, DOI 10.1145/947825.947829
   Henderson-Sellers B., 1996, Software Metrics
   Herraiz I., 2007, Proceedings of the International Workshop on Mining Software Repositories, P21
   Hindle A, 2008, INT C PROGRAM COMPRE, P133, DOI 10.1109/ICPC.2008.13
   KHOSHGOFTAAR TM, 1990, IEEE J SEL AREA COMM, V8, P253, DOI 10.1109/49.46879
   LI HF, 1987, IEEE T SOFTWARE ENG, V13, P697, DOI 10.1109/TSE.1987.233475
   LI W, 1993, J SYST SOFTWARE, V23, P111, DOI 10.1016/0164-1212(93)90077-B
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   MEYER B, 1988, INT SERIES COMPUTER
   Mohagheghi P, 2004, PROC INT CONF SOFTW, P282, DOI 10.1109/ICSE.2004.1317450
   Olague HM, 2007, IEEE T SOFTWARE ENG, V33, P402, DOI 10.1109/TSE.2007.1015.
   Piwowarski P., 1982, SIGPLAN Notices, V17, P44, DOI 10.1145/947955.947960
   SHEPPERD M, 1988, SOFTWARE ENG J, V3, P30, DOI 10.1049/sej.1988.0003
   Subramanyam R, 2003, IEEE T SOFTWARE ENG, V29, P297, DOI 10.1109/TSE.2003.1191795
   Zhou YM, 2009, IEEE T SOFTWARE ENG, V35, P607, DOI 10.1109/TSE.2009.32
   ZIV J, 1978, IEEE T INFORM THEORY, V24, P530, DOI 10.1109/TIT.1978.1055934
NR 36
TC 36
Z9 42
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2017
VL 22
IS 5
BP 2585
EP 2611
DI 10.1007/s10664-017-9513-5
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FE0PC
UT WOS:000407921200009
DA 2024-07-18
ER

PT J
AU King, J
   Stallings, J
   Riaz, M
   Williams, L
AF King, Jason
   Stallings, Jon
   Riaz, Maria
   Williams, Laurie
TI To log, or not to log: using heuristics to identify mandatory log events
   - a controlled experiment
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Logging; User activity logs; Security; Controlled experiment; User
   study; Mandatory log events
AB User activity logs should capture evidence to help answer who, what, when, where, why, and how a security or privacy breach occurred. However, software engineers often implement logging mechanisms that inadequately record mandatory log events (MLEs), user activities that must be logged to enable forensics.
   The objective of this study is to support security analysts in performing forensic analysis by evaluating the use of a heuristics-driven method for identifying mandatory log events.
   We conducted a controlled experiment with 103 computer science students enrolled in a graduate-level software security course. All subjects were first asked to identify MLEs described in a set of requirements statements during the pre-period task. In the post-period task, subjects were randomly assigned statements from one type of software artifact (traditional requirements, use-case-based requirements, or user manual), one readability score (simple or complex), and one method (standards-, resource-, or heuristics-driven). We evaluated subject performance using three metrics: statement classification correctness (values from 0 to 1), MLE identification correctness (values from 0 to 1), and response time (seconds). We test the effect of the three factors on the three metrics using generalized linear models.
   Classification correctness for statements that did not contain MLEs increased 0.31 from pre- to post-period task. MLE identification correctness was inconsistent across treatment groups. For simple user manual statements, MLE identification correctness decreased 0.17 and 0.12 for the standards- and heuristics-driven methods, respectively. For simple traditional requirements statements, MLE identification correctness increased 0.16 and 0.17 for the standards- and heuristics-driven methods, respectively. Average response time decreased 41.7 s from the pre- to post-period task.
   We expected the performance of subjects using the heuristics-driven method to improve from pre- to post-task and to consistently demonstrate higher MLE identification correctness than the standards-driven and resource-driven methods across domains and readability levels. However, neither method consistently helped subjects more correctly identify MLEs at a statistically significant level. Our results indicate additional training and enforcement may be necessary to ensure subjects understand and consistently apply the assigned methods for identifying MLEs.
C1 [King, Jason; Riaz, Maria; Williams, Laurie] North Carolina State Univ, Dept Comp Sci, 890 Oval Dr, Raleigh, NC 27695 USA.
   [Stallings, Jon] North Carolina State Univ, Dept Stat, 2311 Stinson Dr, Raleigh, NC 27695 USA.
C3 North Carolina State University; North Carolina State University
RP King, J (corresponding author), North Carolina State Univ, Dept Comp Sci, 890 Oval Dr, Raleigh, NC 27695 USA.
EM jtking@ncsu.edu; jwstalli@ncsu.edu; mriaz@ncsu.edu;
   laurie_williams@ncsu.edu
RI Williams, Jonathan/AAU-6437-2020; Riaz, Maria/JXR-6545-2024
OI Williams, Jonathan/0000-0001-6490-4226; Stallrich,
   Jonathan/0000-0002-0180-9309; King, Jason/0000-0002-5148-7950
FU United States National Security Agency (NSA) Science of Security Lablet
FX This work is funded by the United States National Security Agency (NSA)
   Science of Security Lablet. Any opinions expressed in this report are
   those of the author(s) and do not necessarily reflect the views of the
   NSA. We thank the Realsearch research group for providing helpful
   feedback on this work. This study was approved by the North Carolina
   State University Institutional Review Board (#5354).
CR [Anonymous], 1974, FAMILY ED RIGHTS PRI
   [Anonymous], 1967, AUTOMATED READBILITY
   Carletta J, 1996, COMPUT LINGUIST, V22, P249
   Chuvakin A, 2010, IEEE SECUR PRIV, V8, P82, DOI 10.1109/MSP.2010.127
   Falcao L, 2015, ACM IEEE INT S EMP S
   Fu Q, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P24, DOI 10.1145/2591062.2591175
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   Kincaid J, 1975, NAV TECH TRAIN COMMA
   King DB, 2015, ACS SYM SER, V1214, P1
   King Jason, 2012, International Journal of Computational Models and Algorithms in Medicine, V3, P23, DOI 10.4018/jcmam.2012040102
   King J., 2013, CATALOGING COMPARING
   King J, 2012, IHI 12, DOI [10.1145/2110363.2110399, DOI 10.1145/2110363.2110399]
   McKenney M, 2014, ADDITIONAL CONSIDERA
   MCLAUGHLIN GH, 1969, J READING, V12, P639
   Meneely A., 2012, Software and Systems Traceability
   Payment Card Industry Data Security Standards, 2010, PAYM CARD IND SEC ST
   Read R, 2015, U OREGON UNLAWFULLY
   Riaz M, 2014, INT REQUIR ENG CONF, P183, DOI 10.1109/RE.2014.6912260
   Riaz Maria., 2014, 8th ACM/IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P1
   Roper E, 2013, STARTRIBUNE
   Salman I, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P666, DOI 10.1109/ICSE.2015.82
   Shull F., 2008, Guide to Advanced Empirical Software Engineering, DOI DOI 10.1007/978-1-84800-044-5
   Solingen V, 2002, ENCY SOFTWARE ENG
   Standard Specification for Audit and Disclosure Logs for Use in Health Information Systems, 2013, STAND SPEC AUD DISCL
   United States Department of Health and Human Services, 2013, PHYS DEL TASK SKILL
   Vance A, 2013, J MANAGE INFORM SYST, V29, P263, DOI 10.2753/MIS0742-1222290410
   Yskout K, 2008, CEUR WORKSH P SUN SI, V413
   Yuan D, 2012, PROC INT CONF SOFTW, P102, DOI 10.1109/ICSE.2012.6227202
   Yuan D, 2012, ACM T COMPUT SYST, V30, DOI 10.1145/2110356.2110360
NR 29
TC 11
Z9 12
U1 0
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2017
VL 22
IS 5
BP 2684
EP 2717
DI 10.1007/s10664-016-9449-1
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FE0PC
UT WOS:000407921200012
DA 2024-07-18
ER

PT J
AU Calefato, F
   Lanubile, F
   Conte, T
   Prikladnicki, R
AF Calefato, Fabio
   Lanubile, Filippo
   Conte, Tayana
   Prikladnicki, Rafael
TI Assessing the impact of real-time machine translation on multilingual
   meetings in global software projects
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Global software development; Machine translation; Distributed meetings;
   Computer-mediated communication; Controlled experiment
ID COEFFICIENT; CHALLENGES; AGREEMENT
AB Communication in global software development is hindered by language differences in countries with a lack of English speaking professionals. Machine translation is a technology that uses software to translate from one natural language to another. The progress of machine translation systems has been steady in the last decade. As for now, machine translation technology is particularly appealing because it might be used, in the form of cross-language chat services, in countries that are entering into global software projects. However, despite the recent progress of the technology, we still lack a thorough understanding of how real-time machine translation affects communication. In this paper, we present a set of empirical studies with the goal of assessing to what extent real-time machine translation can be used in distributed, multilingual requirements meetings instead of English. Results suggest that, despite far from 100 % accurate, real-time machine translation is not disruptive of the conversation flow and, therefore, is accepted with favor by participants. However, stronger effects can be expected to emerge when language barriers are more critical. Our findings add to the evidence about the recent advances of machine translation technology and provide some guidance to global software engineering practitioners in regarding the losses and gains of using English as a lingua franca in multilingual group communication, as in the case of computer-mediated requirements meetings.
C1 [Calefato, Fabio; Lanubile, Filippo] Univ Bari, Dipartimento Informat, Bari, Italy.
   [Conte, Tayana] Univ Fed Amazonas, Inst Comp, Manaus, Amazonas, Brazil.
   [Prikladnicki, Rafael] Pontificia Univ Catolica Rio Grande do Sul, Porto Alegre, RS, Brazil.
C3 Universita degli Studi di Bari Aldo Moro; Universidade Federal de
   Amazonas; Pontificia Universidade Catolica Do Rio Grande Do Sul
RP Calefato, F (corresponding author), Univ Bari, Dipartimento Informat, Bari, Italy.
EM fabio.calefato@uniba.it; filippo.lanubile@uniba.it;
   tayana@icomp.ufam.edu.br; rafael.prikladnicki@pucrs.br
RI Conte, Tayana/AAK-2433-2020; Lanubile, Filippo/AAF-9132-2020; Calefato,
   Fabio/H-4177-2014
OI Conte, Tayana/0000-0001-6436-3773; Lanubile,
   Filippo/0000-0003-3373-7589; Calefato, Fabio/0000-0003-2654-1588
FU Rio Grande do Sul State funding agency (FAPERGS) [11/2022-3,
   002061-2551/13]; CNPq [483125/2010-5, 309000/2012-2]
FX This research is partially funded by the Rio Grande do Sul State funding
   agency (FAPERGS) under projects 11/2022-3 and 002061-2551/13, and by
   CNPq (483125/2010-5, and 309000/2012-2). We would like to thank all the
   participants who took part in the experiment and Pasquale Minervini for
   the support he provided with the management of the Apertium service.
CR Altman DG, 1991, PRACTICAL STAT MED R
   [Anonymous], DEADLINE LANGUAGE CH
   [Anonymous], 2003, COMPUTERS TRANSLATIO
   [Anonymous], 1991, PERSPECTIVES SOCIALL, DOI DOI 10.1037/10096-006
   Arnold D.J., 1994, Machine Translation
   Aziz W, 2012, LREC 2012 - EIGHTH INTERNATIONAL CONFERENCE ON LANGUAGE RESOURCES AND EVALUATION, P3982
   Berander P, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P167
   Burchardt A, 2013, STUD COMPUT INTELL, V458, P241, DOI 10.1007/978-3-642-34399-5_13
   Calefato F., 2011, Proceedings of the 2011 6th IEEE International Conference on Global Software Engineering (ICGSE 2011), P94, DOI 10.1109/ICGSE.2011.14
   Calefato F., 2010, Proceedings of the 2010 Fifth IEEE International Conference Global Software Engineering (ICGSE 2010), P257, DOI 10.1109/ICGSE.2010.37
   Calefato F, 2012, INT SYMP EMP SOFTWAR, P251, DOI 10.1145/2372251.2372299
   Calefato F, 2012, EMPIR SOFTW ENG, V17, P640, DOI 10.1007/s10664-011-9179-3
   Calefato F, 2009, SOFTWARE PRACT EXPER, V39, P1293, DOI 10.1002/spe.937
   Carmel E, 2001, IEEE SOFTWARE, V18, P22, DOI 10.1109/52.914734
   COHEN J, 1992, PSYCHOL BULL, V112, P155, DOI 10.1037/0033-2909.112.1.155
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Cohn M., 2005, Agile Estimating and Planning
   Conover W. J., 1998, PRACTICAL NONPARAMET, V3rd
   Cronbach LJ, 1951, PSYCHOMETRIKA, V16, P297
   Damian D. E., 2003, Requirements Engineering, V8, P149, DOI 10.1007/s00766-003-0173-1
   Damian D, 2007, IEEE SOFTWARE, V24, P21, DOI 10.1109/MS.2007.55
   DESANCTIS G, 1987, MANAGE SCI, V33, P589, DOI 10.1287/mnsc.33.5.589
   Fleiss J.L., 1981, Statistical methods for rates and proportions, V2nd, P38
   Gao G, 2013, P SIGCHI C HUM FACT, P449, DOI [10.1145/2470654.2470719, DOI 10.1145/2470654.2470719]
   Garland R., 1991, Marketing bulletin, V2, P66
   Gottesdiener E., 2002, Requirements by collaboration
   Hersleb J.D., 2002, P ACM C COMP HUM INT, P171, DOI DOI 10.1145/503376.503408
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   Hsieh Y, 2006, 2006 IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P101, DOI 10.1109/ICGSE.2006.261221
   Johns R, 2005, J ELECT PUBLIC OPIN, V15, P237, DOI 10.1080/13689880500178849
   Jurafsky D., 2021, SPEECH LANGUAGE PROC
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Lehtola L, 2004, LECT NOTES COMPUT SC, V3009, P497
   Lutz B, 2009, INT CONF GLOBAL SOFT, P249, DOI 10.1109/ICGSE.2009.33
   Macaulay L.A., 1996, Requirements engineering
   Mitkov R., 2003, OXFORD HDB COMPUTATI
   Montgomery D.C., 1996, DESIGN ANAL EXPT
   Nunnally JC, 1978, PSYCHOMETRIC THEORY
   Paulson LD, 2001, COMPUTER, V34, P12, DOI 10.1109/MC.2001.947080
   Prikladnicki R, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P973, DOI 10.1109/ICSE.2013.6606647
   Raybaud S, 2011, MACH TRANSL, V25, P1, DOI 10.1007/s10590-011-9094-9
   Shah Y.H., 2012, International Journal of Advanced Science and Technology, V40, P69
   Stemler S., 2000, PRACTICAL ASSESSMENT, V7
   Wisniewski G, 2013, MACH TRANSL, V27, P213, DOI 10.1007/s10590-013-9141-9
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Yamashita N., 2006, Proc. CSCW, P515, DOI DOI 10.1145/1180875.1180955
   Yamashita N, 2009, CHI2009: PROCEEDINGS OF THE 27TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P679
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 53
TC 3
Z9 3
U1 1
U2 13
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2016
VL 21
IS 3
BP 1002
EP 1034
DI 10.1007/s10664-015-9372-x
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA DQ2VO
UT WOS:000379061700009
DA 2024-07-18
ER

PT J
AU Grigera, J
   Garrido, A
   Panach, JI
   Distante, D
   Rossi, G
AF Grigera, Julian
   Garrido, Alejandra
   Ignacio Panach, Jose
   Distante, Damiano
   Rossi, Gustavo
TI Assessing refactorings for usability in e-commerce applications
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Refactoring; Quality in use; Usability measurement; Web engineering;
   Software maintenance and evolution
ID STATISTICAL POWER; WEB; QUALITY; IMPROVEMENT
AB Refactoring has been reported as a helpful technique to systematically improve nonfunctional attributes of software. This paper evaluates the relevance of refactoring for improving usability on web applications. We conducted an experiment with two replications at different locations, with subjects of different profiles. Objects chosen for the experiment were two e-commerce applications that exhibit common business processes in today's web usage. Through the experiment we found that half of the studied refactorings cause a significant improvement in usability. The rest of the refactorings required a post-hoc analysis in which we considered aspects like user expertise in the interaction with web applications or type of application. We conclude that, when improving quality in use, the success of the refactoring process depends on several factors, including the type of software system, context and users. We have analyzed all these aspects, which developers must consider for a better decision support at the time of prioritizing improvements and outweighing effort.
C1 [Grigera, Julian; Garrido, Alejandra; Rossi, Gustavo] Univ Nacl La Plata, Fac Informat, LIFIA, RA-1900 La Plata, Buenos Aires, Argentina.
   [Ignacio Panach, Jose] Univ Valencia, Dept Informat, Escola Tecn Super Engn, Ave Univ S-N, E-46100 Valencia, Spain.
   [Distante, Damiano] Unitelma Sapienza Univ, Viale Regina Elena 295, I-00161 Rome, Italy.
C3 National University of La Plata; University of Valencia; Universita
   degli Studi di Roma Unitelma Sapienza
RP Grigera, J (corresponding author), Univ Nacl La Plata, Fac Informat, LIFIA, RA-1900 La Plata, Buenos Aires, Argentina.
EM julian.grigera@lifia.info.unlp.edu.ar; garrido@lifia.info.unlp.edu.ar;
   joigpana@uv.es; damiano.distante@unitelma.it;
   gustavo@lifia.info.unlp.edu.ar
RI Rossi, Gustavo/AAE-4736-2020; Panach, Jose Ignacio/ABF-2099-2020;
   Distante, Damiano/ABE-2366-2020; Garrido, Alejandra/GRF-5135-2022
OI Panach, Jose Ignacio/0000-0002-7043-6227; Distante,
   Damiano/0000-0002-8467-535X; Garrido, Alejandra/0000-0002-5052-705X;
   Grigera, Julian/0000-0002-7962-4312
FU Spanish Ministry of Science and Innovation project SMART ADAPT
   [TIN2013-42981-P]; ERDF; Generalitat Valenciana-funded IDEO project
   [PROMETEOII/2014/039]
FX This work was developed with the support of the Spanish Ministry of
   Science and Innovation project SMART ADAPT (TIN2013-42981-P) and was
   co-financed by ERDF. It also has the support of Generalitat
   Valenciana-funded IDEO project (PROMETEOII/2014/039).
CR [Anonymous], 1999, Designing Web Usability: The Practice of Simplicity
   Barnes S., 2000, Proceedings of the 8th European Conference on Information Systems, P298
   Barnes SJ, 2003, IND MANAGE DATA SYST, V103, P297, DOI 10.1108/02635570310477352
   Basili V. R., 1994, Encyclopedia of Software Engineering, V1, P528
   BENJAMINI Y, 1995, J R STAT SOC B, V57, P289, DOI 10.1111/j.2517-6161.1995.tb02031.x
   Blaikie N., 2003, ANAL QUANTITATIVE DA
   Bruun A, 2014, LECT NOTES COMPUT SC, V8742, P1, DOI 10.1007/978-3-662-44811-3_1
   Cohen L., 2007, RES METHODS ED
   Dearden A, 2006, HUM-COMPUT INTERACT, V21, P49, DOI 10.1207/s15327051hci2101_3
   Dig D, 2011, IEEE SOFTWARE, V28, P17, DOI 10.1109/MS.2011.1
   Distante D, 2014, ELECTRON COMMER RES, V14, P1
   Dybå T, 2006, INFORM SOFTWARE TECH, V48, P745, DOI 10.1016/j.infsof.2005.08.009
   Faul F, 2007, BEHAV RES METHODS, V39, P175, DOI 10.3758/BF03193146
   Fernandez A, 2011, INFORM SOFTWARE TECH, V53, P789, DOI 10.1016/j.infsof.2011.02.007
   Fernandez-Ropero M, 2012, INT C BUS INF SYST I, P960
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Garrido A, 2013, IEEE INTERNET COMPUT, V17, P58, DOI 10.1109/MIC.2012.143
   Garrido A, 2011, IEEE SOFTWARE, V28, P60, DOI 10.1109/MS.2010.114
   Garrido A, 2009, J WEB ENG, V8, P371
   Grissom R. J., 2005, EFFECT SIZES RES BRO
   Harold E.R., 2008, Refactoring HTML: Improving the Design of Existing Web Applications
   ISO I, 2011, 25010 ISOIEC
   Jönsson P, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P108, DOI 10.1109/METRIC.2004.1357895
   Juristo N., 2013, BASICS SOFTWARE ENG
   Kim M., 2012, P ACM SIGSOFT 20 INT, P1
   Maruyama K, 2007, ICSOFT 2007: PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON SOFTWARE AND DATA TECHNOLOGIES, VOL SE, P222
   Moody DL, 2003, PROC INT CONF SOFTW, P295
   Murphy-Hill E, 2012, IEEE T SOFTWARE ENG, V38, P5, DOI 10.1109/TSE.2011.41
   Nanard M., 1998, Hypertext 98: Ninth ACM Conference on Hypertext and Hypermedia, P11, DOI 10.1145/276627.276629
   Nielsen Jakob., 2002, Homepage Usability: 50 Websites Deconstructed
   Olsina L, 2008, J WEB ENG, V7, P258
   Rieger M, 2007, P SOFTW EVOL, V2, P9
   Shneiderman S.B., 2005, DESIGNING USER INTER, V4th
   Vakilian M, 2012, PROC INT CONF SOFTW, P233, DOI 10.1109/ICSE.2012.6227190
   Van Duyne Douglas K., 2007, The design of sites: patterns for creating winning websites
   Van Welie M, 2000, 7 PATT LANG PROGR C, V13, P16
   Wnuk K, 2013, INFORM SOFTWARE TECH, V55, P921, DOI 10.1016/j.infsof.2012.12.001
   Wohlin C., 2012, EXPT SOFTWARE ENG IN
   Ying M, 2013, J SYST SOFTWARE, V86, P72, DOI 10.1016/j.jss.2012.07.019
   Zibran MF, 2011, IEEE INT WORK C SO, P105, DOI 10.1109/SCAM.2011.21
   Zou Y, 2007, IEEE T SOFTWARE ENG, V33, P837, DOI [10.1109/TSE.2007.70709, 10.1109/TSE.2007.70708]
NR 41
TC 11
Z9 11
U1 1
U2 9
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2016
VL 21
IS 3
BP 1224
EP 1271
DI 10.1007/s10664-015-9384-6
PG 48
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DQ2VO
UT WOS:000379061700015
OA Green Published
DA 2024-07-18
ER

PT J
AU Scanniello, G
   Marcus, A
   Pascale, D
AF Scanniello, Giuseppe
   Marcus, Andrian
   Pascale, Daniele
TI Link analysis algorithms for static concept location: an empirical
   assessment
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Concept location; Controlled experiments; Information retrieval;
   Experiments; Empirical study
ID IN-SOURCE CODE; INFORMATION-RETRIEVAL; SOFTWARE MAINTENANCE;
   COMPREHENSION; REQUIREMENTS
AB During software evolution, one of the most important comprehension activities is concept location in source code, as it identifies the places in the code where changes are to be made in response to a modification request. Change requests (such as, bug fixing or new feature requests) are usually formulated in natural language, while the source code also includes large amounts of text. In consequence, many of the existing concept location techniques are based on text search or text retrieval. Such approaches reformulate concept location as a document retrieval problem. We refine and improve such solutions by leveraging dependencies between source code elements. Dependency information is used by a link analysis algorithm to rank the document space and to improve concept location based on text retrieval. We implemented our solution to concept location using the PageRank algorithm, used in web document retrieval applications. The results of an empirical evaluation indicate that the new approach leads to better retrieval performance than baseline approaches that use text retrieval and clustering. In addition, we present the results of a controlled experiment and of a differentiated replication to assess whether the new technique supports users in identifying the places in the code where changes are to be made. The results of these experiments revealed that the users exploiting our technique were significantly better supported in the identification of the code to be changed in response to a bug fixing request compared to the users who did not use this technique.
C1 [Scanniello, Giuseppe; Pascale, Daniele] Univ Basilicata, Dipartimento Matemat Informat & Econ, I-85100 Potenza, Italy.
   [Marcus, Andrian] Univ Texas Dallas, Dept Comp Sci, Richardson, TX 75230 USA.
C3 University of Basilicata; University of Texas System; University of
   Texas Dallas
RP Scanniello, G (corresponding author), Univ Basilicata, Dipartimento Matemat Informat & Econ, I-85100 Potenza, Italy.
EM giuseppe.scanniello@unibas.it; amarcus@utdallas.edu;
   daniele041087@msn.com
OI Scanniello, Giuseppe/0000-0003-0024-7508; Marcus,
   Andrian/0000-0001-5450-5598
FU US National Science Foundation [CCF-1017263, CCF-0845706]
FX We would like to thank Michele Brescia, who developed some of the
   software modules of the prototype used in the experimentation presented
   here, and Pasquale Ricciardi for helping us in the execution of the
   replication. We also thank the participants in the controlled
   experiments. Andrian Marcus was supported in part by grants from the US
   National Science Foundation: CCF-1017263 and CCF-0845706.
CR Abadi A, 2008, INT C PROGRAM COMPRE, P103, DOI 10.1109/ICPC.2008.30
   Abrahao S, 2013, IEEE T SOFTWARE ENG, V39, P327, DOI 10.1109/TSE.2012.27
   Ali N., 2012, 2012 12th IEEE Working Conference on Source Code Analysis and Manipulation (SCAM 2012), P174, DOI 10.1109/SCAM.2012.26
   [Anonymous], P INT C AUT SOFTW EN
   [Anonymous], 1983, INTRO MODERN INFORM
   Aranda Jorge., 2007, P INT WORKSHOP MODEL, P7
   Arisholm E, 2006, IEEE T SOFTWARE ENG, V32, P365, DOI 10.1109/TSE.2006.59
   Bajracharya Sushil, 2006, COMPANION 21 ACM SIG, P681
   Basili V., 1994, The Goal Question Metric Approach, P528
   Basili VR, 1999, IEEE T SOFTWARE ENG
   Beard M., 2011, 2011 18th Working Conference on Reverse Engineering, P124, DOI 10.1109/WCRE.2011.23
   Briand LC, 2005, IEEE T SOFTWARE ENG, V31, P833, DOI 10.1109/TSE.2005.105
   Brin S, 1998, COMPUT NETWORKS ISDN, V30, P107, DOI 10.1016/S0169-7552(98)00110-X
   Buckner J, 2005, PROG COMPREHEN, P149, DOI 10.1109/WPC.2005.22
   Carver J, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P239
   Chan W., 2012, PROC ACM SIGSOFT 20, P1, DOI DOI 10.1145/2393596.2393606
   Chen KR, 2000, PROG COMPREHEN, P241, DOI 10.1109/WPC.2000.852498
   Ciolkowski M, 2004, EUROMICRO CONF PROC, P354, DOI 10.1109/EURMIC.2004.1333390
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Cohen J., 1988, STAT POWER ANAL BEHA
   Colosimo M, 2009, INFORM SOFTWARE TECH, V51, P433, DOI 10.1016/j.infsof.2008.05.012
   Conover W. J., 1998, PRACTICAL NONPARAMET, V3rd
   De Lucia A, 2009, EMPIR SOFTW ENG, V14, P57, DOI 10.1007/s10664-008-9090-8
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   Devore J., 1999, APPL STAT ENG SCI
   diaeresis>tze Hinrich Schu<spacing, 2008, INTRO INFORM RETRIEV, V39
   Dit B, 2013, J SOFTW-EVOL PROC, V25, P53, DOI 10.1002/smr.567
   Dit B, 2013, EMPIR SOFTW ENG, V18, P277, DOI 10.1007/s10664-011-9194-4
   DUNN OJ, 1961, J AM STAT ASSOC, V56, P52, DOI 10.2307/2282330
   Eaddy M, 2008, INT C PROGRAM COMPRE, P53, DOI 10.1109/ICPC.2008.39
   Ellis PD, 2010, ESSENTIAL GUIDE TO EFFECT SIZES: STATISTICAL POWER, META-ANALYSIS AND THE INTERPRETATION OF RESEARCH RESULTS, P1
   Gay G, 2009, PROC IEEE INT CONF S, P351, DOI 10.1109/ICSM.2009.5306315
   Gold N, 2006, PROC IEEE INT CONF S, P310
   Grant S, 2008, WORK CONF REVERSE EN, P138, DOI 10.1109/WCRE.2008.49
   Gravino Carmine, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P185, DOI 10.1007/978-3-642-33666-9_13
   Grechanik M, 2010, P INT C SOFTW ENG IC, V1
   Haiduc S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P842, DOI 10.1109/ICSE.2013.6606630
   Hannay JE, 2008, IEEE T SOFTWARE ENG, V34, P242, DOI 10.1109/TSE.2008.13
   Harman M, 2002, NINTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P11, DOI 10.1109/WCRE.2002.1173060
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Inoue K, 2005, IEEE T SOFTWARE ENG, V31, P213, DOI 10.1109/TSE.2005.38
   Jinshui Wang, 2011, 2011 IEEE 27th International Conference on Software Maintenance, P213, DOI 10.1109/ICSM.2011.6080788
   Juristo N., 2013, BASICS SOFTWARE ENG
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Kitchenham B, 2008, EMPIR SOFTW ENG, V13, P97, DOI 10.1007/s10664-007-9053-5
   Ko AJ, 2006, IEEE T SOFTWARE ENG, V32, P971, DOI 10.1109/TSE.2006.116
   Li Z, 2009, PROC IEEE INT CONF S, P457, DOI 10.1109/ICSM.2009.5306275
   Lukins SK, 2010, INFORM SOFTWARE TECH, V52, P972, DOI 10.1016/j.infsof.2010.04.002
   Lukins SK, 2008, WORK CONF REVERSE EN, P155, DOI 10.1109/WCRE.2008.33
   Marcus A, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P214, DOI 10.1109/WCRE.2004.10
   Marcus A, 2003, PROC INT CONF SOFTW, P125, DOI 10.1109/ICSE.2003.1201194
   Marcus A., 2013, Software Engineering: International Summer Schools, ISSSE 2009-2011, Salerno, Italy. Revised Tutorial Lectures, V7171, P126
   McMillan C, 2011, P INT C SOFTW ENG IC
   McMillan C, 2012, IEEE T SOFTWARE ENG, V38, P1069, DOI 10.1109/TSE.2011.84
   Moreno L, 2013, INT C SOFTW MAINT IC
   Ngomo ACN, 2009, THESIS
   O'Brien MP, 2005, PROG COMPREHEN, P125, DOI 10.1109/WPC.2005.24
   Oppenheim A.N., 1992, QUESTIONNAIRE DESIGN
   Panichella A, 2013, EUR CON SFTWR MTNCE, P199, DOI 10.1109/CSMR.2013.29
   Petrenko M, 2013, INFORM SOFTWARE TECH, V55, P651, DOI 10.1016/j.infsof.2012.09.013
   Poshyvanyk D, 2007, INT C PROGRAM COMPRE, P37
   Poshyvanyk D, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2377656.2377660
   Puppin D, 2006, P S APPL COMP
   Rajlich V, 2002, PROG COMPREHEN, P271, DOI 10.1109/WPC.2002.1021348
   Revelle Meghan, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P14, DOI 10.1109/ICPC.2010.10
   Ricca F, 2010, IEEE T SOFTWARE ENG, V36, P96, DOI 10.1109/TSE.2009.69
   Robillard MP, 2008, ACM T SOFTW ENG METH, V17, DOI 10.1145/13487689.13487691
   Romano J, 2006, ANN M FLOR ASS I RES, P1
   Scanniello G., 2010, INT C PROGR COMPR IC, P180
   Scanniello G, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2491912
   Scanniello G, 2011, CONF PROC INT SYMP C, P1, DOI 10.1109/ICPC.2011.13
   Scanniello G, 2010, ICEIS 2010: PROCEEDINGS OF THE 12TH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS, VOL 3: INFORMATION SYSTEMS ANALYSIS AND SPECIFICATION, P141
   Seaman CB, 2002, PROC IEEE INT CONF S, P141, DOI 10.1109/ICSM.2002.1167761
   Shaowei Wang, 2011, 2011 18th Working Conference on Reverse Engineering, P119, DOI 10.1109/WCRE.2011.69
   Shaowei Wang, 2011, 2011 18th Working Conference on Reverse Engineering, P92, DOI 10.1109/WCRE.2011.72
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   Shull FJ, 2008, EMPIR SOFTW ENG, V13, P211, DOI 10.1007/s10664-008-9060-1
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Zhao W, 2004, PROC INT CONF SOFTW, P293, DOI 10.1109/ICSE.2004.1317452
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
NR 80
TC 26
Z9 30
U1 0
U2 11
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2015
VL 20
IS 6
BP 1666
EP 1720
DI 10.1007/s10664-014-9327-7
PG 55
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CT7YX
UT WOS:000363032900008
DA 2024-07-18
ER

PT J
AU Jedlitschka, A
   Juristo, N
   Rombach, D
AF Jedlitschka, Andreas
   Juristo, Natalia
   Rombach, Dieter
TI Reporting experiments to satisfy professionals' information needs
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software manager; Information needs; Technology selection; Experiment;
   Reporting
ID CONSORT STATEMENT; SOFTWARE; TECHNOLOGY; GUIDELINES
AB Although the aim of empirical software engineering is to provide evidence for selecting the appropriate technology, it appears that there is a lack of recognition of this work in industry. Results from empirical research only rarely seem to find their way to company decision makers. If information relevant for software managers is provided in reports on experiments, such reports can be considered as a source of information for them when they are faced with making decisions about the selection of software engineering technologies. To bridge this communication gap between researchers and professionals, we propose characterizing the information needs of software managers in order to show empirical software engineering researchers which information is relevant for decision-making and thus enable them to make this information available. We empirically investigated decision makers' information needs to identify which information they need to judge the appropriateness and impact of a software technology. We empirically developed a model that characterizes these needs. To ensure that researchers provide relevant information when reporting results from experiments, we extended existing reporting guidelines accordingly. We performed an experiment to evaluate our model with regard to its effectiveness. Software managers who read an experiment report according to the proposed model judged the technology's appropriateness significantly better than those reading a report about the same experiment that did not explicitly address their information needs. Our research shows that information regarding a technology, the context in which it is supposed to work, and most importantly, the impact of this technology on development costs and schedule as well as on product quality is crucial for decision makers.
C1 [Jedlitschka, Andreas; Rombach, Dieter] Fraunhofer Inst Expt Software Engn, D-67663 Kaiserslautern, Germany.
   [Juristo, Natalia] Univ Politecn Madrid, E-28660 Madrid, Spain.
   [Rombach, Dieter] Tech Univ Kaiserslautern, D-67653 Kaiserslautern, Germany.
C3 Fraunhofer Gesellschaft; Universidad Politecnica de Madrid; University
   of Kaiserslautern
RP Jedlitschka, A (corresponding author), Fraunhofer Inst Expt Software Engn, Fraunhofer Pl 1, D-67663 Kaiserslautern, Germany.
EM andreas.jedlitschka@iese.fraunhofer.de
RI Jedlitschka, Andreas/AAJ-5524-2020
OI Jedlitschka, Andreas/0000-0003-3590-6331
CR Altman DG, 2001, ANN INTERN MED, V134, P663, DOI 10.7326/0003-4819-134-8-200104170-00012
   Association AP, 2001, PUBL MAN AM PSYCH AS
   Ayari B, 2004, THESIS U KAISERSLAUT
   BASILI VR, 1991, SOFTWARE ENG J, V6, P303, DOI 10.1049/sej.1991.0032
   Basili VR, 2001, ENCY SOFTWARE ENG, V1, P511
   Birk A, 2000, THESIS U KAISERSLAUT
   Chrissis M., 2011, CMMI DEV GUIDELINES
   Ciolkowski M, 2003, IEEE SOFTWARE, V20, P46, DOI 10.1109/MS.2003.1241366
   Dyba T, 2001, THESIS NTNU TRONDHEI
   Glass RL, 2004, COMMUN ACM, V47, P19, DOI 10.1145/986213.986228
   Glass RL, 2006, DAGST SEM EMP SE 27
   Guba E.G., 1994, Handbook of Qualitative Research, V2, P163
   Harris P., 2002, DESIGNING REPORTING
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Henderson-Sellers B, 1998, OPEN SERIES
   Henninger S, 1996, FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE REUSE, PROCEEDINGS, P124, DOI 10.1109/ICSR.1996.496120
   Hinchey MG., 2006, P 2006 INT WORKSH SO, P43, DOI 10.1145/1138046.1138060
   Ivarsson M, 2011, EMPIR SOFTW ENG, V16, P365, DOI 10.1007/s10664-010-9146-4
   Jedlitschka A, 2005, LECT NOTES COMPUT SC, V3547, P502
   Jedlitschka A, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P261
   Jedlitschka Andreas, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P31
   Jedlitschka A, 2009, THESIS U KAISERSLAUT
   Jedlitschka A., 2008, Guide to advanced empirical software engineering, P201, DOI DOI 10.1007/978-1-84800-044-5_8
   Jedlitschka A, 2010, P 2010 ACM IEEE INT
   Jedlitschka A, 2004, P INT C SEKE BANFF C, P513
   Jedlitschka A, 2007, LECT NOTES COMPUT SC, V4336, P130
   Jedlitschka A, 2007, LECT NOTES COMPUT SC, V4336, P58
   Juristo N, 2003, LECT NOTES COMPUT SC, V2765, P208
   Juristo N., 2013, BASICS SOFTWARE ENG
   Kitchenham B, 2004, Procedures for Undertaking Systematic Reviews
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kvale S, 1996, INTERVIEWS INTRO QUA, p326 S
   Lott C. M., 1996, Empirical Software Engineering, V1, P241, DOI 10.1007/BF00127447
   Maiden NAM, 1996, SOFTWARE ENG J, V11, P183, DOI 10.1049/sej.1996.0024
   Marshall G., 1998, DICT SOCIOLOGY
   Moher D, 2001, BMC Med Res Methodol, V1, P2, DOI 10.1186/1471-2288-1-2
   Pfleeger SL, 1999, J SYST SOFTWARE, V47, P111, DOI 10.1016/S0164-1212(99)00031-X
   Pfleeger SL, 2000, IEEE SOFTWARE, V17, P27, DOI 10.1109/52.819965
   Pickard LM, 1998, INFORM SOFTWARE TECH, V40, P811, DOI 10.1016/S0950-5849(98)00101-3
   PRIETODIAZ R, 1985, THESIS U CALIFORNIA
   Rainer A, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P326, DOI 10.1109/ISESE.2003.1237993
   Reifer DJ, 2003, IEEE SOFTWARE, V20, P78, DOI 10.1109/MS.2003.1241370
   Rogers EM, 2003, DIFFUSION INNOVATION
   Rombach D, 2008, ACM SIGSOFT SOFTW EN, V33, P26
   Runeson P, 2003, FUTURE EMPIRICAL STU, P141
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   SEI, 1997, CMUSEI97HB001
   Shaw M, 2003, PROC INT CONF SOFTW, P726, DOI 10.1109/ICSE.2003.1201262
   Shiffman RN, 2003, ANN INTERN MED, V139, P493, DOI 10.7326/0003-4819-139-6-200309160-00013
   Shull F, 2003, LECT NOTES EMPIRICAL, P39
   Singer J, 1999, P WORKSH EMP STUD SO, P71
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Strauss E, 1998, CLIN ORTHOP RELAT R, P2
   Turner R, 2004, CROSSTALK J DEFENSE, P9
   Vegas S, 2002, THESIS U POLITECHNIC
   Vegas S, 2006, J SYST SOFTWARE, V79, P1606, DOI 10.1016/j.jss.2006.02.049
   Venkatesh V, 2003, MIS QUART, V27, P425, DOI 10.2307/30036540
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Wohlin C, 2003, LECT NOTES EMPIRICAL, P85
NR 59
TC 18
Z9 18
U1 0
U2 7
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2014
VL 19
IS 6
BP 1921
EP 1955
DI 10.1007/s10664-013-9268-6
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AR9QU
UT WOS:000343910700011
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Nugroho, A
   Chaudron, MRV
AF Nugroho, Ariadi
   Chaudron, Michel R. V.
TI The impact of UML modeling on defect density and defect resolution time
   in a proprietary system
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Defect resolution time; Defect density; UML; Bugs; Software maintenance;
   Effort; Productivity; Quality
ID OBJECT-ORIENTED DESIGN; SOFTWARE MAINTENANCE; EMPIRICAL-ASSESSMENT;
   COMPREHENSION; STEREOTYPES; DIAGRAMS; QUALITY; METRICS
AB Background: The contribution of modeling in software development has been a subject of debates. The proponents of model-driven development argue that a big upfront modeling requires substantial investment, but it will payoff later in the implementation phase in terms of increased productivity and quality. Other software engineers perceive modeling activity as a waste of time and money without any real contribution to the final software product. Considering present advancement of model-based software development in software industry, we are challenged to investigate the real contribution of modeling in software development. Objective: We analyze the impacts of UML modeling, specifically the production of class and sequence diagrams, on the quality of the code, as measured by defect density, and on defect resolution time. Method: Using data of a proprietary system, we conduct post-mortem analyses to test the difference in defect density between software modules that are modeled and not modeled. Similarly, we test the difference in resolution time between defects that are related to modeled and not modeled functionality. Result: We have found that the production of UML class diagrams and sequence diagrams reduces defect density in the code and the time required to fix defects. These results are obtained after controlling for the effects of co-factors such as code coupling and complexity. Conclusion: The results confirm that not only does the production of UML class diagrams and sequence diagrams possibly help improve the quality of software, but also it possibly help increase the productivity in software maintenance.
C1 [Nugroho, Ariadi] Software Improvement Grp, NL-1090 GX Amsterdam, Netherlands.
   [Chaudron, Michel R. V.] Leiden Univ, NL-2300 RA Leiden, Netherlands.
C3 Leiden University - Excl LUMC; Leiden University
RP Nugroho, A (corresponding author), Software Improvement Grp, POB 94914, NL-1090 GX Amsterdam, Netherlands.
EM a.nugroho@sig.eu; chaudron@chalmers.se
OI Chaudron, Michel/0000-0001-7517-6666
FU STW (Stichting Technische Wetenschappen), the Netherlands [des7015]
FX This work was accomplished under the FINESSE (des7015) project supported
   by the STW (Stichting Technische Wetenschappen), the Netherlands. We
   thank Logica and the project members of the IPS project for the
   discussions and support in providing the project data. Thanks also to
   the anonymous referees for their constructive comments that made a
   valuable contribution to this paper.
CR [Anonymous], 2010, 5 WORKSH COD CENTR M
   Arisholm E, 2006, IEEE T SOFTWARE ENG, V32, P365, DOI 10.1109/TSE.2006.59
   Bijlsma D, 2011, SOFTW QUAL J, V20, P1
   Briand LC, 2005, IEEE T SOFTWARE ENG, V31, P833, DOI 10.1109/TSE.2005.105
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Cruz-Lemus JA, 2011, INFORM SOFTWARE TECH, V53, P1391, DOI 10.1016/j.infsof.2011.07.002
   Cruz-Lemus JA, 2009, EMPIR SOFTW ENG, V14, P685, DOI 10.1007/s10664-009-9106-z
   Dzidek WJ, 2008, IEEE T SOFTWARE ENG, V34, P407, DOI 10.1109/TSE.2008.15
   Fenton NE, 1999, IEEE T SOFTWARE ENG, V25, P675, DOI 10.1109/32.815326
   Fernandez-Saez A, 2011, P EXP EMP STUD SOFTW
   Glezer C, 2005, INFORM SOFTWARE TECH, V47, P675, DOI 10.1016/j.infsof.2005.01.003
   Gravino C., P 2010 ACM S APPL CO, P2365
   Highsmith J, 2001, COMPUTER, V34, P120, DOI 10.1109/2.947100
   Just S., 2008, P 16 ACM SIGSOFT INT, P308
   Khoshgoftaar TM, 2003, SOFTWARE QUAL J, V11, P19, DOI 10.1023/A:1023632027907
   Kim S, 2006, Proceedings of the 2006 international workshop on Mining software repositories, P173
   Koru AG, 2005, SIGSOFT SOFTW ENG NO, V30, P1
   KRUS DJ, 1977, EDUC PSYCHOL MEAS, V37, P257, DOI 10.1177/001316447703700134
   liwerski J, 2005, ACM SIGSOFT SOFTWARE, V30, P1, DOI [10.1145/1082983.1083147, DOI 10.1145/1083142.1083147, DOI 10.1145/1082983.1083147]
   Luijten B, 2010, 2010 7 IEEE WORK C M, P94
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Mohagheghi P, 2004, PROC INT CONF SOFTW, P282, DOI 10.1109/ICSE.2004.1317450
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Nugroho A, 2008, MODEL DRIVEN SOFTWAR, P1
   Nugroho A, 2009, LECT NOTES COMPUT SC, V5795, P181, DOI 10.1007/978-3-642-04425-0_14
   Nugroho A, 2008, LECT NOTES COMPUT SC, V5301, P600, DOI 10.1007/978-3-540-87875-9_42
   Nugroho A, 2009, INFORM SOFTWARE TECH, V51, P1670, DOI 10.1016/j.infsof.2009.04.007
   Nugroho A, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P90
   Otero MC, 2004, INFORM SOFTWARE TECH, V46, P35, DOI 10.1016/S0950-5849(03)00108-3
   Ricca F, 2007, PROC INT CONF SOFTW, P375
   Rutherford A., 2001, INTRO ANOVA ANCOVA G
   Scanniello Giuseppe, 2011, 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), P76, DOI 10.1049/ic.2011.0009
   Staron M, 2006, J SYST SOFTWARE, V79, P727, DOI 10.1016/j.jss.2005.09.014
   Subramanyam R, 2003, IEEE T SOFTWARE ENG, V29, P297, DOI 10.1109/TSE.2003.1191795
   Th?rn C., 2008, P 2008 INT WORKSH MO, P21
   Torchiano M, 2004, PROG COMPREHEN, P226, DOI 10.1109/WPC.2004.1311064
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Wust J., 2005, Sdmetrics: The software design metrics tool for uml
NR 39
TC 9
Z9 12
U1 1
U2 13
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2014
VL 19
IS 4
BP 926
EP 954
DI 10.1007/s10664-013-9243-2
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AH8LE
UT WOS:000336388500005
DA 2024-07-18
ER

PT J
AU Biggers, LR
   Bocovich, C
   Capshaw, R
   Eddy, BP
   Etzkorn, LH
   Kraft, NA
AF Biggers, Lauren R.
   Bocovich, Cecylia
   Capshaw, Riley
   Eddy, Brian P.
   Etzkorn, Letha H.
   Kraft, Nicholas A.
TI Configuring latent Dirichlet allocation based feature location
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software evolution; Program comprehension; Feature location; Static
   analysis; Text retrieval
ID CODE; RETRIEVAL; COHESION
AB Feature location is a program comprehension activity, the goal of which is to identify source code entities that implement a functionality. Recent feature location techniques apply text retrieval models such as latent Dirichlet allocation (LDA) to corpora built from text embedded in source code. These techniques are highly configurable, and the literature offers little insight into how different configurations affect their performance. In this paper we present a study of an LDA based feature location technique (FLT) in which we measure the performance effects of using different configurations to index corpora and to retrieve 618 features from 6 open source Java systems. In particular, we measure the effects of the query, the text extractor configuration, and the LDA parameter values on the accuracy of the LDA based FLT. Our key findings are that exclusion of comments and literals from the corpus lowers accuracy and that heuristics for selecting LDA parameter values in the natural language context are suboptimal in the source code context. Based on the results of our case study, we offer specific recommendations for configuring the LDA based FLT.
C1 [Biggers, Lauren R.; Eddy, Brian P.; Kraft, Nicholas A.] Univ Alabama, Dept Comp Sci, Tuscaloosa, AL 35487 USA.
   [Bocovich, Cecylia] Macalester Coll, Dept Math Stat & Comp Sci, St Paul, MN 55105 USA.
   [Capshaw, Riley] Hendrix Coll, Dept Math & Comp Sci, Conway, AR USA.
   [Etzkorn, Letha H.] Univ Alabama, Dept Comp Sci, Huntsville, AL 35899 USA.
C3 University of Alabama System; University of Alabama Tuscaloosa;
   Macalester College; University of Alabama System; University of Alabama
   Huntsville
RP Kraft, NA (corresponding author), Univ Alabama, Dept Comp Sci, Tuscaloosa, AL 35487 USA.
EM lbiggers@cs.ua.edu; cbocovic@macalester.edu; capshawrf@hendrix.edu;
   bpeddy@ua.edu; etzkorl@uah.edu; nkraft@cs.ua.edu
FU National Science Foundation [0851824, 0915559, 1156563]; U.S. Department
   of Education [P200A100182]; Direct For Computer & Info Scie & Enginr;
   Division of Computing and Communication Foundations [1156563, 0915559]
   Funding Source: National Science Foundation; Division of Computing and
   Communication Foundations; Direct For Computer & Info Scie & Enginr
   [0851824] Funding Source: National Science Foundation
FX We thank the anonymous reviewers for their insightful comments and
   helpful suggestions. This material is based upon work supported by the
   National Science Foundation under Grant Nos. 0851824, 0915559, and
   1156563 and by the U.S. Department of Education under Grant No.
   P200A100182.
CR Abadi A, 2008, INT C PROGRAM COMPRE, P103, DOI 10.1109/ICPC.2008.30
   Abebe SL, 2009, WORK CONF REVERSE EN, P95, DOI 10.1109/WCRE.2009.26
   Abebe SL, 2009, EUR CON SFTWR MTNCE, P189, DOI 10.1109/CSMR.2009.61
   Andrieu C, 2003, MACH LEARN, V50, P5, DOI 10.1023/A:1020281327116
   [Anonymous], 2009, UAI 09, DOI DOI 10.1080/10807030390248483
   [Anonymous], 2010, IEEE INT C SOFTWARE
   [Anonymous], 2009, PARAMETER ESTIMATION
   [Anonymous], 2006, P 2006 INT WORKSHOP
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Asuncion HU, 2010, 2010 ACM IEEE 32 INT, V1, P95
   Baldi PF, 2008, ACM SIGPLAN NOTICES, V43, P543, DOI 10.1145/1449955.1449807
   Basili V., 1994, The Goal Question Metric Approach, P528
   Beard M., 2011, 2011 18th Working Conference on Reverse Engineering, P124, DOI 10.1109/WCRE.2011.23
   BIGGERSTAFF TJ, 1993, PROC INT CONF SOFTW, P482, DOI 10.1109/ICSE.1993.346017
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Chang J, 2010, ANN APPL STAT, V4, P124, DOI 10.1214/09-AOAS309
   Corley C.S., 2011, P 6 INT WORKSHOP TRA, P31
   De Lucia A, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1276933.1276934
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   Dit B, 2013, J SOFTW-EVOL PROC, V25, P53, DOI 10.1002/smr.567
   Dit B, 2011, CONF PROC INT SYMP C, P11, DOI 10.1109/ICPC.2011.47
   Eaddy M, 2008, IEEE T SOFTWARE ENG, V34, P497, DOI 10.1109/TSE.2008.36
   Eisenberg AD, 2005, PROC IEEE INT CONF S, P337
   Fluri B, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P70, DOI 10.1109/WCRE.2007.21
   Fox C., 1992, Information Retrieval: Data Structures and Algorithms
   Gay G, 2009, PROC IEEE INT CONF S, P351, DOI 10.1109/ICSM.2009.5306315
   Griffiths TL, 2004, P NATL ACAD SCI USA, V101, P5228, DOI 10.1073/pnas.0307752101
   Hill E., 2007, Proceedings of the 22nd International Conference on Automated Software Engineering, P14
   Lawrie D., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P113, DOI 10.1109/ICSM.2011.6080778
   Liu Dapeng, 2007, P 22 IEEEACM INT C A, P234, DOI 10.1145/1321631.1321667
   Liu YX, 2009, PROC IEEE INT CONF S, P233, DOI 10.1109/ICSM.2009.5306318
   Lukins SK, 2010, INFORM SOFTWARE TECH, V52, P972, DOI 10.1016/j.infsof.2010.04.002
   Lukins SK, 2008, WORK CONF REVERSE EN, P155, DOI 10.1109/WCRE.2008.33
   Marcus A, 2005, PROC IEEE INT CONF S, P133
   Marcus A, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P214, DOI 10.1109/WCRE.2004.10
   Marcus A., 2010, Proceedings of the FSE/SDP workshop on Future of Software Engineering research, P229, DOI DOI 10.1145/1882362.1882410
   Maskeri Girish, 2008, 1st India Software Engineering Conference. ISEC 2008, P113
   Minka ThomasP., 2009, ESTIMATING DIRICHLET
   Oliveto Rocco, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P68, DOI 10.1109/ICPC.2010.20
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI [10.1109/TSE.2007.1016, 10.1109/TSE.2007.1016.]
   Poshyvanyk D, 2009, EMPIR SOFTW ENG, V14, P5, DOI 10.1007/s10664-008-9088-2
   Rajlich V, 2002, PROG COMPREHEN, P271, DOI 10.1109/WPC.2002.1021348
   Rajlich V, 2006, COMMUN ACM, V49, P67, DOI 10.1145/1145287.1145289
   Rao S., 2011, P 8 WORK C MIN SOFTW, P43
   Ratanotayanon Sukanya, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P206, DOI 10.1109/ICPC.2010.33
   Revelle Meghan, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P14, DOI 10.1109/ICPC.2010.10
   Revelle M, 2009, INT C PROGRAM COMPRE, P218, DOI 10.1109/ICPC.2009.5090045
   SALTON G, 1988, INFORM PROCESS MANAG, V24, P513, DOI 10.1016/0306-4573(88)90021-0
   Salton G., 1989, Automatic Text Processing: The Transformation, Analysis, and Retrieval of Information by Computer
   Savage T, 2010, Proceedings of the 2010 IEEE International Conference on Software Maintenance, ICSM '10, P1, DOI [10.1109/ICSM.2010.5609654, DOI 10.1109/ICSM.2010.5609654]
   Scanniello G, 2011, CONF PROC INT SYMP C, P1, DOI 10.1109/ICPC.2011.13
   Shao P, 2012, INT J COMPUT APPL T, V44, P61, DOI 10.1504/IJCAT.2012.048208
   Thomas SW, 2011, 8 WORK C MIN SOFTW R, P173
   Tian K, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P163, DOI 10.1109/MSR.2009.5069496
   Vinz BL, 2006, INT C PROGRAM COMPRE, P69, DOI 10.1109/ICPC.2006.7
   Xing Wei, 2006, Proceedings of the Twenty-Ninth Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, P178
   Zhao W, 2006, ACM T SOFTW ENG METH, V15, P195, DOI 10.1145/1131421.1131424
NR 57
TC 49
Z9 58
U1 0
U2 15
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2014
VL 19
IS 3
BP 465
EP 500
DI 10.1007/s10664-012-9224-x
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AF0ZA
UT WOS:000334442700002
DA 2024-07-18
ER

PT J
AU Pontes, RP
   Veras, PC
   Ambrosio, AM
   Villani, E
AF Pontes, Rodrigo Pastl
   Veras, Paulo Claudino
   Ambrosio, Ana Maria
   Villani, Emilia
TI Contributions of model checking and CoFI methodology to the development
   of space embedded software
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Verification; Model checking; Model based testing; Embedded software;
   Packet Utilization Standard (PUS); Space application
ID GENERATION; TOOL
AB The role of embedded software in the last space accidents highlights the importance of verification and validation techniques for the development of space embedded software. In this context, this work analyses the contribution of two verification techniques applied to the onboard data handling software of space products. The first technique is model checking. The system is modeled by a set of timed automata and the verification of safety and liveness properties is performed using UPPAAL model checker. The verified model is then used to generate the embedded software. The second technique analyzed in this work is model based approach for the generation of test cases. The Conformance and Fault Injection (CoFI) testing methodology is used to guide the development of a set of Finite State Machine (FSM) models from the software specification. The test suite is automatically generated from the FSM models. The contributions of the two methodologies are analyzed based on the results provided by an experiment. Two software products are used as case study, each one implementing two services of the Packet Utilization Standard (PUS). These services represent the functionalities offered by a satellite onboard data handling computer. One of the products is developed with the aid of model checking, while the other is developed according to the practices currently used at the Instituto Nacional de Pesquisas Espaciais (INPE). Both software products are tested by the CoFI methodology. The experiment highlights the advantages and vulnerable points of model checking. It also demonstrates that the main contribution of CoFI testing methodology is to highlight problems related to situations that have not been considered in the software specification, such as the occurrence of inopportune events. This analysis helps to understand how different techniques can be integrated in the design of critical embedded software.
C1 [Pontes, Rodrigo Pastl; Veras, Paulo Claudino; Villani, Emilia] Inst Tecnol Aeronaut, BR-12228900 Sao Jose Dos Campos, SP, Brazil.
   [Ambrosio, Ana Maria] Inst Nacl Pesquisas Espaciais, BR-12227010 Sao Jose Dos Campos, SP, Brazil.
C3 Comando-Geral de Tecnologia Aeroespacial (CTA); Instituto Tecnologico de
   Aeronautica (ITA); Instituto Nacional de Pesquisas Espaciais (INPE)
RP Villani, E (corresponding author), Inst Tecnol Aeronaut, Praca Marechal Eduardo Gomes,50 Vila Acacias, BR-12228900 Sao Jose Dos Campos, SP, Brazil.
EM rpastl@gmail.com; pauloveras@gmail.com; ana.ambrosio@inpe.br;
   evillani@ita.br
RI Villani, Emilia/AAK-6051-2021
OI Villani, Emilia/0000-0002-6804-1453; Ambrosio, Ana
   Maria/0000-0003-4957-4155
FU project Sistemas Inerciais para Aplicacoes Aeroespaciais (SIA);
   FINEP/CTA/INPE; CNPq [306259/2011-7]
FX The authors would like to thank the collaboration and support of
   Fabricio Kucinskis, Ronaldo Arias and Thiago Pereira of the Aerospace
   Electronics Department (DEA) of INPE. The authors would also like to
   thank the financial support of the project Sistemas Inerciais para
   Aplicacoes Aeroespaciais (SIA), from the FINEP/CTA/INPE, and CNPq under
   grant 306259/2011-7.
CR Agresti A., 2007, INTRO CATEGORICAL DA, V2nd ed
   ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   Ambrosio A., 2006, J AEROS COMP INF COM, V3, P146
   Ambrosio A., 2008, P 9 C SPAC OP SPACEO
   Anjos JMS, 2011, P 5 LAT AM S DEP COM
   [Anonymous], ECSSSST00C
   [Anonymous], 4 IFAC WORKSH DISTCR
   Arias R., 2008, SPACEOPS 2008 C, P3524
   Behrmann G, 2005, LNCS, V3185
   Chan W, 1998, IEEE T SOFTWARE ENG, V24, P498, DOI 10.1109/32.708566
   Cofer D., 2008, P 27 DIG AV SYST C
   Conrad M, 2005, ELECTRON NOTES THEOR, V111, P13, DOI 10.1016/j.entcs.2004.12.005
   Dias-Neto AC, 2009, INFORM SOFTWARE TECH, V51, P1487, DOI 10.1016/j.infsof.2009.06.010
   Dorofeeva R, 2010, INFORM SOFTWARE TECH, V52, P1286, DOI 10.1016/j.infsof.2010.07.001
   *ECSS, 2003, ECSSE7041A
   GARCIA FA, 2006, P 3 INT C EL EL ENG, P1
   Gluck PR, 2001, P AER C, P105
   Gülesir G, 2009, EMPIR SOFTW ENG, V14, P720, DOI 10.1007/s10664-009-9107-y
   Hendriks M., 2006, P 20 INT PAR DISTR P, P8
   JK Microsystems, 2009, ERTOS
   Leveson NG, 2004, J SPACECRAFT ROCKETS, V41, P564, DOI 10.2514/1.11950
   Martins E, 1999, SOFTWARE QUAL J, V8, P303, DOI 10.1023/A:1008930105477
   Morais MHE, 2010, P 10 C SPAC OP SPACE
   Notebaert O, 2006, P 8 C SPAC OP SPACEO
   Ogawa H, 2008, ASIA PAC SOFWR ENG, P377, DOI 10.1109/APSEC.2008.71
   Paradkar A, 2004, INFORM SOFTWARE TECH, V46, P315, DOI 10.1016/j.infsof.2003.09.005
   Parthasarathy G, 2003, EIGHTH IEEE INTERNATIONAL HIGH-LEVEL DESIGN VALIDATION AND TEST WORKSHOP, PROCEEDINGS, P157, DOI 10.1109/HLDVT.2003.1252490
   Pingree P. J., 2002, P 21 DIG AV SYST C
   Pontes RP, 2009, P 20 INT C MECH ENG
   Pontes RP, 2011, THESIS I TECNOLOGICO
   Pontes RP, 2010, P 28 S BRAS RED COMP
   Prenninger W, 2005, ELECTRON NOTES THEOR, V116, P59, DOI 10.1016/j.entcs.2004.02.086
   Romero EL, 2005, 2005 INTERNATIONAL CONFERENCE ON HARDWARE/SOFTWARE CODESIGN AND SYSTEM SYNTHESIS, P327
   Rozier KY, 2011, COMPUT SCI REV, V5, P163, DOI 10.1016/j.cosrev.2010.06.002
   Schuele T, 2004, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, P67, DOI 10.1109/SEFM.2004.1347504
   Segev E, 2004, ICECS 2004: 11th IEEE International Conference on Electronics, Circuits and Systems, P515
   Sreemani T, 1996, COMPASS '96 - PROCEEDINGS OF THE ELEVENTH ANNUAL CONFERENCE ON COMPUTER ASSURANCE, P77, DOI 10.1109/CMPASS.1996.507877
   Tafazoli M, 2009, ACTA ASTRONAUT, V64, P195, DOI 10.1016/j.actaastro.2008.07.019
   Tiwari A., 2003, P 28 ANN NASA GODD S
   Veras PC, 2010, P 29 INT C COMP SAF
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Wong W., 2009, ROLE SOFTWARE RECENT
NR 42
TC 7
Z9 7
U1 0
U2 10
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2014
VL 19
IS 1
BP 39
EP 68
DI 10.1007/s10664-012-9215-y
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AA3HQ
UT WOS:000330983900002
DA 2024-07-18
ER

PT J
AU Callaú, O
   Robbes, R
   Tanter, É
   Röthlisberger, D
AF Callau, Oscar
   Robbes, Romain
   Tanter, Eric
   Roethlisberger, David
TI How (and why) developers use the dynamic features of programming
   languages: the case of smalltalk
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Dynamic languages; Static analysis; Smalltalk; Reflection
ID JAVA
AB The dynamic and reflective features of programming languages are powerful constructs that programmers often mention as extremely useful. However, the ability to modify a program at runtime can be both a boon-in terms of flexibility-, and a curse-in terms of tool support. For instance, usage of these features hampers the design of type systems, the accuracy of static analysis techniques, or the introduction of optimizations by compilers. In this paper, we perform an empirical study of a large Smalltalk codebase-often regarded as the poster-child in terms of availability of these features-, in order to assess how much these features are actually used in practice, whether some are used more than others, and in which kinds of projects. In addition, we performed a qualitative analysis of a representative sample of usages of dynamic features in order to uncover (1) the principal reasons that drive people to use dynamic features, and (2) whether and how these dynamic feature usages can be removed or converted to safer usages. These results are useful to make informed decisions about which features to consider when designing language extensions or tool support.
C1 [Callau, Oscar; Robbes, Romain; Tanter, Eric; Roethlisberger, David] Univ Chile, Comp Sci Dept DCC, PLEIAD Lab, Santiago, Chile.
C3 Universidad de Chile
RP Callaú, O (corresponding author), Univ Chile, Comp Sci Dept DCC, PLEIAD Lab, Santiago, Chile.
EM oalvarez@dcc.uchile.cl; rrobbes@dcc.uchile.cl; etanter@dcc.uchile.cl;
   roethlis@dcc.uchile.cl
RI Robbes, Romain/H-3771-2013; Tanter, Éric/A-7955-2008
OI Tanter, Éric/0000-0002-7359-890X
FU FONDECYT, Chile [11110463, 1110051]; Swiss National Science Foundation,
   SNF Project [PBBEP2_135018]; Swiss National Science Foundation (SNF)
   [PBBEP2_135018] Funding Source: Swiss National Science Foundation (SNF)
FX We thank the anonymous reviewers for their helpful comments. Romain
   Robbes is partially funded by FONDECYT Project 11110463, Chile. Eric
   Tanter is partially funded by FONDECYT Project 1110051, Chile. David
   Rothlisberger is funded by the Swiss National Science Foundation, SNF
   Project No. PBBEP2_135018.
CR Aldrich J., 2009, OOPSLA COMPANION, P1015, DOI DOI 10.1145/1639950
   [Anonymous], 2009, AUSTR COMP SCI C ACS
   [Anonymous], 2010, Proceedings of the IEEE/ACM international conference on Automated software engineering (ASE'10)
   Bodden E, 2010, TECHNICAL REPORT
   Bodden E, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P241, DOI 10.1145/1985793.1985827
   BRACHA G, 1993, SIGPLAN NOTICES, V28, P215, DOI 10.1145/167962.165893
   Erdos K, 1998, PROG COMPREHEN, P98, DOI 10.1109/WPC.1998.693322
   Goldberg A., 1983, Smalltalk 80: The Language and Its Implementation
   Grechanik M., 2010, P 2010 ACM IEEE INT, p[11, 1, 10]
   Knuth D. E., 1971, Software - Practice and Experience, V1, P105, DOI 10.1002/spe.4380010203
   Malayeri D, 2009, LECT NOTES COMPUT SC, V5502, P95, DOI 10.1007/978-3-642-00590-9_8
   Melton H, 2007, EMPIR SOFTW ENG, V12, P389, DOI 10.1007/s10664-006-9033-1
   Mezini M., 2011, LECT NOTES COMPUTER, V6813
   Muschevici R, 2008, ACM SIGPLAN NOTICES, V43, P563, DOI 10.1145/1449955.1449808
   Parnin C., 2011, PROCEEDING 8 WORKING, P3
   Richards G, 2011, LECT NOTES COMPUT SC, V6813, P52, DOI 10.1007/978-3-642-22655-7_4
   Richards G, 2010, ACM SIGPLAN NOTICES, V45, P1, DOI 10.1145/1809028.1806598
   Schärli N, 2004, ACM SIGPLAN NOTICES, V39, P130, DOI 10.1145/1035292.1028988
   Tempero E, 2008, LECT NOTES COMPUT SC, V5142, P667, DOI 10.1007/978-3-540-70592-5_28
   Tempero E, 2009, IEEE AUS SOFT ENGR, P91, DOI 10.1109/ASWEC.2009.19
   Triola M, 2014, Elementary Statistics, V12th
   Van Rysselberghe Filip., 2007, MSR 07, P16
   Wolff R, 2011, LECT NOTES COMPUTER, V6813
NR 23
TC 20
Z9 25
U1 0
U2 25
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2013
VL 18
IS 6
BP 1156
EP 1194
DI 10.1007/s10664-012-9203-2
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 215SC
UT WOS:000324229600005
DA 2024-07-18
ER

PT J
AU Hoda, R
   Noble, J
   Marshall, S
AF Hoda, Rashina
   Noble, James
   Marshall, Stuart
TI Developing a grounded theory to explain the practices of self-organizing
   Agile teams
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Empirical research; Software engineering; Grounded theory; Agile
   software development; Self-organizing
ID SOFTWARE-DEVELOPMENT; IMPACT
AB Software Engineering researchers are constantly looking to improve the quantity and quality of their research findings through the use of an appropriate research methodology. Over the last decade, there has been a sustained increase in the number of researchers exploring the human and social aspects of Software Engineering, many of whom have used Grounded Theory. We have used Grounded Theory as a qualitative research method to study 40 Agile practitioners across 16 software organizations in New Zealand and India and explore how these Agile teams self-organize. We use our study to demonstrate the application of Grounded Theory to Software Engineering. In doing so, we present (a) a detailed description of the Grounded Theory methodology in general and its application in our research in particular; (b) discuss the major challenges we encountered while performing Grounded Theory's various activities and our strategies for overcoming these challenges; and (c) we present a sample of our data and results to illustrate the artifacts and outcomes of Grounded Theory research.
C1 [Hoda, Rashina; Noble, James; Marshall, Stuart] Victoria Univ Wellington, Sch Engn & Comp Sci, Wellington, New Zealand.
   [Marshall, Stuart] Victoria Univ Wellington, Sch Software Engn & Comp Sci, Wellington, New Zealand.
C3 Victoria University Wellington; Victoria University Wellington
RP Hoda, R (corresponding author), Victoria Univ Wellington, Sch Engn & Comp Sci, Wellington, New Zealand.
EM rashina@ecs.vuw.ac.nz; kjx@ecs.vuw.ac.nz; stuart@ecs.vuw.ac.nz
RI Marshall, Stuart R/M-6350-2016
OI Noble, James/0000-0001-9036-5692; Hoda, Rashina/0000-0001-5147-8096
FU Agile Alliance academic grant; BuildIT PhD scholarship (NZ)
FX We thank all the participants of our study. This research is generously
   supported by an Agile Alliance academic grant and a BuildIT PhD
   scholarship (NZ). Thanks to Dr. George Allan for his help.
CR Adolph S., 2008, Conference of the Center for Advanced Studies on Collaborative Research CASCON, P166, DOI DOI 10.1145/1463788.1463806
   Allan G., 2003, ELECT J BUSINESS RES, V2, P1
   [Anonymous], 2003, THESIS U OSLO NORWAY
   [Anonymous], GROUNDED THEORY I ME
   [Anonymous], 2003, 18 ANN ACM SIGPLAN C
   [Anonymous], 1990, Basics of qualitative research
   [Anonymous], P 18 ANN ACM SIGPLAN
   [Anonymous], INT J ORG ANAL
   [Anonymous], 2001, SOFTW DEV MAG
   [Anonymous], 2008, ELECT J BUSINESS RES
   Ashby W.R., 1956, INTRO CYBERNETICS
   Augustine S, 2005, COMMUN ACM, V48, P85, DOI 10.1145/1101779.1101781
   Beck Kent, 1999, Extreme Programming Explained: Embrace Change
   Begel Andrew, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P255
   Carver J, 2004, EMPIR SOFTW ENG, V9, P259, DOI 10.1023/B:EMSE.0000027786.04555.97
   Chau T, 2004, LECT NOTES COMPUT SC, V3075, P173, DOI 10.1007/978-3-540-25967-1_12
   Chow T, 2008, J SYST SOFTWARE, V81, P961, DOI 10.1016/j.jss.2007.08.020
   Cockburn A, 2001, COMPUTER, V34, P131, DOI 10.1109/2.963450
   Cockburn A., 2004, Crystal clear: A human-powered methodology for small teams: A human-powered methodology for small teams
   Coleman G, 2007, INFORM SOFTWARE TECH, V49, P654, DOI 10.1016/j.infsof.2007.02.011
   Crabtree Carlton A., 2009, 2009 3rd International Symposium on Empirical Software Engineering and Measurement (ESEM), P324, DOI 10.1109/ESEM.2009.5315984
   Dagenais B., 2010, Proc. of the ICSE 10, P275, DOI DOI 10.1145/1806799.1806842
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Glaser B.G., 2005, The Grounded Theory Perspective III: Theoretical Coding
   Glaser B. G., 1978, [No title captured]
   Glaser B.G., 1998, DOING GROUNDED THEOR
   Glaser B. G., 1967, DISCOVERY GROUNDED T, DOI 10.1515/9783111660211/html
   Glaser Barney G., 1992, Basic of grounded theory analysis: emergence vs. forcing
   Glaser Barney G., 2004, Forum: Qualitative Social Research, V5, DOI [DOI 10.17169/FQS-5.2.607, 10.17169/fqs-5.2.607]
   Highsmith J. A., 2004, Agile Project Management: Creating Innovative Products
   Highsmith JamesA., 2000, ADAPTIVE SOFTWARE DE
   Hoda R., 2010, Proceedings of the 32nd International Conference on Software Engineering - Volume 1, ICSE '10, V1, P285, DOI [10.1145/1806799.1806843, DOI 10.1145/1806799.1806843]
   HODA R, 2010, COOP HUM ASP SOFTW E
   Hoda R., 2010, P HAOSE 10 HUMAN ASP, DOI [DOI 10.1145/1938595.1938605, 10.1145/1938595.1938605]
   Hoda R, 2010, LECT NOTES BUS INF P, V48, P73
   Hoda R, 2009, LECT NOTES BUS INF P, V31, P186
   Hut J., 1998, TEAM PERFORM MANAG, V4, P53
   Larman C, 2003, COMPUTER, V36, P47, DOI 10.1109/MC.2003.1204375
   LaRossa R, 2005, J MARRIAGE FAM, V67, P837, DOI 10.1111/j.1741-3737.2005.00179.x
   Marshall S., 2010, ACM SIGPLAN NOTICES, P74, DOI DOI 10.1145/1932682.1869467
   Martin R. C., 2002, AGILE SOFTWARE DEV P
   Moe NB, 2008, LECT NOTES BUS INF P, V9, P11
   Moe NB, 2008, ASWEC 2008: 19TH AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P76, DOI 10.1109/ASWEC.2008.28
   Morgan G., 2006, Images of Organization
   Nerur S, 2005, COMMUN ACM, V48, P72, DOI 10.1145/1060710.1060712
   Nerur S, 2007, COMMUN ACM, V50, P79, DOI 10.1145/1226736.1226739
   NONAKA I, 1994, ORGAN SCI, V5, P14, DOI 10.1287/orsc.5.1.14
   Palmer S.R., 2001, A Practical Guide to Feature-Driven Development, V1st
   Parry KW, 1998, LEADERSHIP QUART, V9, P85, DOI 10.1016/S1048-9843(98)90043-1
   Pikkarainen M, 2008, EMPIR SOFTW ENG, V13, P303, DOI 10.1007/s10664-008-9065-9
   Schwaber K., 2002, AGILE SOFTWARE DEV S
   Schwaber Ken., 2009, Scrum guide
   Sharp H, 2004, EMPIR SOFTW ENG, V9, P353, DOI 10.1023/B:EMSE.0000039884.79385.54
   Sharp H, 2008, INT J HUM-COMPUT ST, V66, P506, DOI 10.1016/j.ijhcs.2007.10.004
   Stapleton J., 1997, DYNAMIC SYSTEMS DEV
   Suddaby R, 2006, ACAD MANAGE J, V49, P633, DOI 10.5465/AMJ.2006.22083020
   TAKEUCHI H, 1986, HARVARD BUS REV, V64, P137
   Thomas G, 2006, BRIT EDUC RES J, V32, P767, DOI 10.1080/01411920600989412
   [No title captured]
   [No title captured]
NR 60
TC 111
Z9 131
U1 3
U2 59
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2012
VL 17
IS 6
BP 609
EP 639
DI 10.1007/s10664-011-9161-0
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 994VN
UT WOS:000307962100001
DA 2024-07-18
ER

PT J
AU Lu, HM
   Zhou, YM
   Xu, BW
   Leung, H
   Chen, L
AF Lu, Hongmin
   Zhou, Yuming
   Xu, Baowen
   Leung, Hareton
   Chen, Lin
TI The ability of object-oriented metrics to predict change-proneness: a
   meta-analysis
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Object-oriented; Metrics; Change-proneness; Meta-analysis; Random-effect
   model; Sensitivity analysis
ID COUPLING MEASUREMENT; SOFTWARE; VALUES
AB Many studies have investigated the relationships between object-oriented (OO) metrics and change-proneness and conclude that OO metrics are able to predict the extent of change of a class across the versions of a system. However, there is a need to re-examine this subject for two reasons. First, most studies only analyze a small number of OO metrics and, therefore, it is not clear whether this conclusion is applicable to most, if not all, OO metrics. Second, most studies only uses relatively few systems to investigate the relationships between OO metrics and change-proneness and, therefore, it is not clear whether this conclusion can be generalized to other systems. In this paper, based on 102 Java systems, we employ statistical meta-analysis techniques to investigate the ability of 62 OO metrics to predict change-proneness. In our context, a class which is changed in the next version of a system is called change-prone and not change-prone otherwise. The investigated OO metrics cover four metric dimensions, including 7 size metrics, 18 cohesion metrics, 20 coupling metrics, and 17 inheritance metrics. We use AUC (the area under a relative operating characteristic, ROC) to evaluate the predictive effectiveness of OO metrics. For each OO metric, we first compute AUCs and the corresponding variances for individual systems. Then, we employ a random-effect model to compute the average AUC over all systems. Finally, we perform a sensitivity analysis to investigate whether the AUC result from the random-effect model is robust to the data selection bias in this study. Our results from random-effect models reveal that: (1) size metrics exhibit moderate or almost moderate ability in discriminating between change-prone and not change-prone classes; (2) coupling and cohesion metrics generally have a lower predictive ability compared to size metrics; and (3) inheritance metrics have a poor ability to discriminate between change-prone and not change-prone classes. Our results from sensitivity analyses show that these conclusions reached are not substantially influenced by the data selection bias.
C1 [Lu, Hongmin] Southeast Univ, Sch Comp Sci & Engn, Nanjing, Jiangsu, Peoples R China.
   [Lu, Hongmin; Zhou, Yuming; Xu, Baowen; Chen, Lin] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210008, Peoples R China.
   [Leung, Hareton] Hong Kong Polytech Univ, Dept Comp, Kowloon, Hong Kong, Peoples R China.
C3 Southeast University - China; Nanjing University; Hong Kong Polytechnic
   University
RP Lu, HM (corresponding author), Southeast Univ, Sch Comp Sci & Engn, Nanjing, Jiangsu, Peoples R China.
EM hmlu@seu.edu.cn; cs.zhou.yuming@gmail.com
RI Xu, Baowen/IXW-4882-2023; Leung, Hareton Kam Nang/O-5899-2014
OI Xu, Baowen/0000-0001-7743-1296; Leung, Hareton Kam
   Nang/0000-0002-1766-7667
FU National Natural Science Foundation of China [61073029, 60803008,
   90818027, 91018005, 61021062]; Hong Kong General Research Fund
   [PolyU5225/08E]; Program for New Century Excellent Talents in University
   [NCET-08-0274]; Fundamental Research Funds for the Central Universities
   [1093020202]
FX The authors would like to thank the anonymous reviewers for their very
   insightful comments and helpful suggestions in greatly improving the
   quality of this paper. This research is partly supported by the National
   Natural Science Foundation of China (61073029, 60803008, 90818027,
   91018005, and 61021062), the Hong Kong General Research Fund
   (PolyU5225/08E), the Program for New Century Excellent Talents in
   University (NCET-08-0274), and the Fundamental Research Funds for the
   Central Universities (1093020202).
CR [Anonymous], J INSECT SCI
   [Anonymous], FR ART INT
   [Anonymous], UND JAV US GUID REF
   [Anonymous], 1994, OBJECT ORIENTED SOFT
   [Anonymous], ACM SIGSOFT SOFTWARE
   [Anonymous], 1994, USE FACTOR ANAL DEV
   [Anonymous], 6 ANN C OBJ OR PROGR
   [Anonymous], DECIS SUPPORT SYST
   [Anonymous], 2000, Data Mining: Practical Machine Learning Tools and Techniques with Java Implementations
   Arisholm E, 2004, IEEE T SOFTWARE ENG, V30, P491, DOI 10.1109/TSE.2004.41
   Badri L., 2004, J OBJECT TECHNOL, V3, P145
   Bansiya J, 1999, J OBJECT-ORIENT PROG, V11, P47
   Benlarbi S., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P334, DOI 10.1109/ICSE.1999.841024
   Bieman JM, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P40, DOI 10.1109/METRIC.2003.1232454
   Bieman JM, 2003, PROG COMPREHEN, P44
   Bieman JM, 2001, PROC IEEE INT CONF S, P580, DOI 10.1109/ICSM.2001.972775
   Borenstein M., 2009, INT STAT REV
   Briand L, 1997, PROC INT CONF SOFTW, P412, DOI 10.1145/253228.253367
   Briand L. C., 1998, Empirical Software Engineering, V3, P65, DOI 10.1023/A:1009783721306
   Briand LC, 2000, J SYST SOFTWARE, V51, P245, DOI 10.1016/S0164-1212(99)00102-8
   Briand LC, 2001, IEEE T SOFTWARE ENG, V27, P963, DOI 10.1109/32.965338
   Briand LC, 1996, IEEE T SOFTWARE ENG, V22, P68, DOI 10.1109/32.481535
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P91, DOI 10.1109/32.748920
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Counsell S, 2006, ACM T SOFTW ENG METH, V15, P123, DOI 10.1145/1131421.1131422
   Di Penta M, 2008, PROC IEEE INT CONF S, P217, DOI 10.1109/ICSM.2008.4658070
   Dickinson W, 2001, PROC INT CONF SOFTW, P339, DOI 10.1109/ICSE.2001.919107
   Duval S, 2000, BIOMETRICS, V56, P455, DOI 10.1111/j.0006-341X.2000.00455.x
   Emam KE, 2001, IEEE T SOFTWARE ENG, V27, P630, DOI 10.1109/32.935855
   HANLEY JA, 1982, RADIOLOGY, V143, P29, DOI 10.1148/radiology.143.1.7063747
   Hannay JE, 2009, INFORM SOFTWARE TECH, V51, P1110, DOI 10.1016/j.infsof.2009.02.001
   Hayes W., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P143, DOI 10.1109/METRIC.1999.809735
   Henderson-Sellers B., 1996, Software Metrics
   Higgins JPT, 2003, BMJ-BRIT MED J, V327, P557, DOI 10.1136/bmj.327.7414.557
   Hitz M., 1995, PROC INT S APPL CORP
   Hopkins W. G., 2003, SPORTSCIENCE, V7
   Julious SA, 2004, PHARM STAT, V3, P217, DOI 10.1002/pst.126
   Kim EM, 1996, P INT COMP SOFTW APP, V20, P104, DOI 10.1109/CMPSAC.1996.542433
   Koru AG, 2007, J SYST SOFTWARE, V80, P63, DOI 10.1016/j.jss.2006.05.017
   Koru AG, 2005, IEEE T SOFTWARE ENG, V31, P625, DOI 10.1109/TSE.2005.89
   LEE YS, 1995, P INT C SOFTW QUAL
   LI W, 1993, J SYST SOFTWARE, V23, P111, DOI 10.1016/0164-1212(93)90077-B
   Lindvall M, 1998, SOFTWARE PRACT EXPER, V28, P1551, DOI 10.1002/(SICI)1097-024X(19981225)28:15<1551::AID-SPE212>3.0.CO;2-0
   Lindvall M., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P40, DOI 10.1109/METRIC.1999.809724
   Miller J, 2000, J SYST SOFTWARE, V54, P29, DOI 10.1016/S0164-1212(00)00024-8
   Myers EW, 1986, ALGORITHMICA, V1, P251, DOI 10.1007/BF01840446
   Pickard LM, 1998, INFORM SOFTWARE TECH, V40, P811, DOI 10.1016/S0950-5849(98)00101-3
   Succi G, 2005, EMPIR SOFTW ENG, V10, P81, DOI 10.1023/B:EMSE.0000048324.12188.a2
   SWETS JA, 1988, SCIENCE, V240, P1285, DOI 10.1126/science.3287615
   Zhou YM, 2010, J SYST SOFTWARE, V83, P660, DOI 10.1016/j.jss.2009.11.704
   Zhou YM, 2009, IEEE T SOFTWARE ENG, V35, P607, DOI 10.1109/TSE.2009.32
NR 51
TC 38
Z9 39
U1 0
U2 7
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2012
VL 17
IS 3
BP 200
EP 242
DI 10.1007/s10664-011-9170-z
PG 43
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 893GI
UT WOS:000300343800003
DA 2024-07-18
ER

PT J
AU Lormans, M
   van Deursen, A
   Gross, HG
AF Lormans, Marco
   van Deursen, Arie
   Gross, Hans-Gerhard
TI An industrial case study in reconstructing requirements views
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Requirements management; Requirements traceability reconstruction;
   Information retrieval
ID TRACEABILITY RECOVERY; FRAMEWORK; SYSTEM; CODE; PERSPECTIVES; LINKS
AB Requirements views, such as coverage and status views, are an important asset for monitoring and managing software development projects. We have developed a method that automates the process of reconstructing these views, and we have built a tool, REQANALYST, that supports this method. This paper presents an investigation as to which extent requirements views can be automatically generated in order to monitor requirements in industrial practice. The paper focuses on monitoring the requirements in test categories and test cases. In order to retrieve the necessary data, an information retrieval technique, called Latent Semantic Indexing, was used. The method was applied in an industrial study. A number of requirements views were defined and experiments were carried out with different reconstruction settings for generating these views. Finally, we explored how these views can help the developers during the software development process.
C1 [Lormans, Marco] Delft Univ Technol, Software Engn Dept, Delft, Netherlands.
   [van Deursen, Arie] CWI, Dutch Natl Inst Res Math Comp Sci, Delft, Netherlands.
   [van Deursen, Arie] Delft Univ Technol, Software Engn Res Grp, Delft, Netherlands.
   [Gross, Hans-Gerhard] Fraunhofer Inst Expt Software Engn, Kaiserslautern, Germany.
C3 Delft University of Technology; Delft University of Technology;
   Fraunhofer Gesellschaft
RP Lormans, M (corresponding author), Delft Univ Technol, Software Engn Dept, Delft, Netherlands.
EM M.Lormans@tudelft.nl; Arie.vanDeursen@tudelft.nl; H.G.Gross@tudelft.nl
RI van Deursen, Arie/G-3084-2011
OI van Deursen, Arie/0000-0003-4850-3312
CR Alexander Ian., 2002, Proc of the 1st Int Workshop on Traceability, P26
   [Anonymous], 2000, VOLERE REQUIREMENTS
   [Anonymous], 1999, APPL SOFTWARE ARCHIT
   [Anonymous], 1998, 830 IEEE
   [Anonymous], CTI RES S
   [Anonymous], 2002, REQUIREMENTS ENG
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Baeza-Yates Ricardo, 1999, MODERN INFORM RETRIE, V463
   Bohner S. A., 1996, SOFTWARE CHANGE IMPA
   Cleland-Huang J, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P135, DOI 10.1109/RE.2005.78
   Clements P, 2003, PROC INT CONF SOFTW, P740, DOI 10.1109/ICSE.2003.1201264
   CLEMENTS P, 2002, P 25 INT C SOFTW ENG, P740
   COSTELLO RJ, 1995, J SYST SOFTWARE, V29, P39, DOI 10.1016/0164-1212(94)00127-9
   Dag JNO, 2005, IEEE SOFTWARE, V22, P32, DOI 10.1109/MS.2005.1
   De Lucia A, 2004, PROC IEEE INT CONF S, P306, DOI 10.1109/ICSM.2004.1357816
   De Lucia A, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1276933.1276934
   De Lucia A, 2006, PROC IEEE INT CONF S, P274
   De Lucia A, 2006, INT C PROGRAM COMPRE, P307, DOI 10.1109/ICPC.2006.15
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   Di Penta M, 2002, PROG COMPREHEN, P207, DOI 10.1109/WPC.2002.1021342
   Domges R, 1998, COMMUN ACM, V41, P54, DOI 10.1145/290133.290149
   Easterbrook S., 1995, Proceedings of the Second IEEE International Symposium on Requirements Engineering (Cat. No.95TH8040), P48, DOI 10.1109/ISRE.1995.512545
   FINDEIS M, 2006, VDA VERB AUT WINT M
   FINKELSTEIN A, 1992, INT J SOFTW ENG KNOW, V2, P31, DOI 10.1142/S0218194092000038
   Frakes WB., 1992, Information retrieval: Data structures and algorithms
   Gotel O. C. Z., 1994, Proceedings of the First International Conference on Requirements Engineering (Cat. No.94TH0613-0), P94, DOI 10.1109/ICRE.1994.292398
   Graaf H, 2003, IEEE SOFTWARE, V20, P61, DOI 10.1109/MS.2003.1241368
   Gross HG, 2007, ELECTRON NOTES THEOR, V189, P51, DOI 10.1016/j.entcs.2007.05.047
   GROSS HG, 2007, 2 INT C SOFTW DAT TE, P111
   Hay D.C., 2003, Requirements analysis: From business views to architecture
   Hayes JH, 2006, IEEE T SOFTWARE ENG, V32, P4, DOI 10.1109/TSE.2006.3
   *IEEE, 2000, 1471 IEEE
   IEEE, 1998, 1233 IEEE, pi
   KRUCHTEN PB, 1995, IEEE SOFTWARE, V12, P42, DOI 10.1109/52.469759
   Lin J, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P363
   Lindvall M, 1996, SOFTWARE PRACT EXPER, V26, P1161, DOI 10.1002/(SICI)1097-024X(199610)26:10<1161::AID-SPE58>3.0.CO;2-X
   Lormans M, 2004, 7TH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, P149, DOI 10.1109/IWPSE.2004.1334781
   Lormans M., 2005, Proceedings of the 3rd international workshop on Traceability in emerging forms of software engineering, P37
   LORMANS M, 2009, J SOFTW MAI IN PRESS
   Lormans M, 2006, WORK CONF REVERSE EN, P275
   Lormans M, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P45
   Maletic J.I., 2003, 2nd International Workshop on Traceability in Emerging Forms of Software Engineering (TEFSE'03), P47
   Marcus A, 2003, PROC INT CONF SOFTW, P125, DOI 10.1109/ICSE.2003.1201194
   MARCUS A, 2005, 3 INT WORKSH TRAC EM, P56
   Nissen HW, 1996, IEEE SOFTWARE, V13, P37, DOI 10.1109/52.506461
   NUSEIBEH B, 1994, IEEE T SOFTWARE ENG, V20, P760, DOI 10.1109/32.328995
   Park S, 2000, INFORM SOFTWARE TECH, V42, P429, DOI 10.1016/S0950-5849(99)00102-0
   Ramesh B, 2001, IEEE T SOFTWARE ENG, V27, P58, DOI 10.1109/32.895989
   Ramesh B., 1995, Proceedings of the Second IEEE International Symposium on Requirements Engineering (Cat. No.95TH8040), P89, DOI 10.1109/ISRE.1995.512549
   Salton G, 1986, Introduction to Modern Information Retrieval
   Settimi R, 2004, 7TH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, P49, DOI 10.1109/IWPSE.2004.1334768
   TORANZO M, 1999, P WORKSH OBJ OR TECH, P283
   *US DEP DEF, 1997, 498 MIL US DEP DEF
   van Deursen A, 2006, SCI COMPUT PROGRAM, V60, P205, DOI 10.1016/j.scico.2005.10.006
   van Deursen A, 2004, FOURTH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA 2004), PROCEEDINGS, P122, DOI 10.1109/WICSA.2004.1310696
   van Rijsbergen C. J, 1979, Information Retrieval, V2nd
   von Knethen A, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P273, DOI 10.1109/ICRE.2002.1048538
   VONKNETHEN A, 2001, P 4 INT WORKSH PRINC, P17
   Yin R.K., 2011, Qualitative research from start to finish
   ZACHMAN JA, 1987, IBM SYST J, V26, P276, DOI 10.1147/sj.263.0276
   Zisman A, 2003, SERP'03: PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH AND PRACTICE, VOLS 1 AND 2, P448
NR 61
TC 20
Z9 22
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2008
VL 13
IS 6
BP 727
EP 760
DI 10.1007/s10664-008-9078-4
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 398IL
UT WOS:000262725700005
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Yeh, DM
   Sun, PC
   Chu, W
   Lin, CL
   Yang, HJ
AF Yeh, Dowming
   Sun, Pei-chen
   Chu, William
   Lin, Chien-Lung
   Yang, Hongji
TI An empirical study of a reverse engineering method for the aggregation
   relationship based on operation propagation
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE reverse engineering; aggregation relationship; object-oriented;
   empirical method; software reengineering
ID WHOLE-PART RELATIONSHIP; DESIGN PATTERNS; OBJECT; MAINTAINABILITY;
   INFERENCE
AB One of the major obstacles in reverse engineering legacy object-oriented systems is the identification of aggregation relationships. An aggregation relationship, also called whole - part relationship, is a form of association relationship where an object is considered as a part of another object. This characteristic is mostly of semantic nature; therefore, it is difficult to distinguish aggregation from association relationships by implementation mechanism. Most reverse engineering methods for aggregation relationships are based on the lifetime dependence of an object on another object since many implementations of aggregation relationships result in such dependence. However, research literature shows that lifetime dependence is not really a primary property of the aggregation relationships. A reverse engineering approach is proposed on the basis of a primary characteristic for aggregation relationship - propagation of operations. To compare the propagation-based method with the lifetime-based method, we apply both methods to ten class libraries, collect their output, and perform statistical analysis to determine the effectiveness of the two methods. The analysis results show that the propagation-based method performs significantly better than the lifetime-based method and by combining both methods simultaneously the complete aggregation relationships can be uncovered for the class libraries in our experiment.
C1 Natl Kaohsiung Normal Univ, Kaohsiung, Taiwan.
   Tunghai Univ, Taichung 40704, Taiwan.
   Siliconware Precis Ind, Taichung, Taiwan.
   De Montfort Univ, Leicester LE1 9BH, Leics, England.
C3 National Kaohsiung Normal University; Tunghai University; Siliconware
   Precision Industries; De Montfort University
RP Yeh, DM (corresponding author), Natl Kaohsiung Normal Univ, Kaohsiung, Taiwan.
EM dmyeh@nknucc.nknu.edu.tw
RI Yang, Hongji/AAJ-4079-2020
CR Antoniol G, 2001, J SYST SOFTWARE, V59, P181, DOI 10.1016/S0164-1212(01)00061-9
   Balanyi Z, 2003, PROC IEEE INT CONF S, P305, DOI 10.1109/ICSM.2003.1235436
   Barbier F, 2003, IEEE T SOFTWARE ENG, V29, P459, DOI 10.1109/TSE.2003.1199074
   Barbier F, 2001, INFORM SOFTWARE TECH, V43, P19, DOI 10.1016/S0950-5849(00)00133-6
   Baxter ID, 2000, SCI COMPUT PROGRAM, V36, P131, DOI 10.1016/S0167-6423(99)00034-9
   Booch Grady, 1999, UNIFIED MODELING LAN, DOI DOI 10.1007/3-540-40011-7_10
   Briand LC, 2001, IEEE T SOFTWARE ENG, V27, P513, DOI 10.1109/32.926174
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   CHIKOFSKY EJ, 1990, IEEE SOFTWARE, V7, P13, DOI 10.1109/52.43044
   DALY J, 1996, AN INT J, V1, P109
   Di Lucca GA, 2000, PROC IEEE INT CONF S, P52, DOI 10.1109/ICSM.2000.883005
   Duggan D, 2001, SCI COMPUT PROGRAM, V39, P57, DOI 10.1016/S0167-6423(00)00013-7
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Henderson-Sellers B, 1999, TOOLS, V29, P236, DOI 10.1109/TOOLS.1999.779016
   Juristo N., 2013, BASICS SOFTWARE ENG
   Motschnig-Pitrik R, 1999, IEEE T KNOWL DATA EN, V11, P779, DOI 10.1109/69.806936
   NIEREJ, 2002, P INT C SOFTW ENG, P338
   Object Management Group, 2001, OMG UN MOD LANG SPEC
   Port D., 1999, Proceedings Sixth Asia Pacific Software Engineering Conference (ASPEC'99) (Cat. No.PR00509), P128, DOI 10.1109/APSEC.1999.809593
   Prechelt Lutz., 1998, J UNIVERS COMPUT SCI, V4, P866
   Richner T., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P13, DOI 10.1109/ICSM.1999.792487
   Rugaber S, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P232, DOI 10.1109/ASE.2001.989809
   SAKESENA M, 1998, P OOIS 98, P11
   SEEMANN J., 1998, Proceedings of 5th international symposium on Foundations of Software Engineering, P10, DOI DOI 10.1145/288195.288207
   Sheldon FT, 2002, J SOFTW MAINT EVOL-R, V14, P147, DOI 10.1002/smr.249
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Tonella P, 2001, PROC IEEE INT CONF S, P376, DOI 10.1109/ICSM.2001.972750
   Tonella P, 2001, J SOFTW MAINT EVOL-R, V13, P309, DOI 10.1002/smr.235
   Yeh D, 2002, SIXTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P223, DOI 10.1109/CSMR.2002.995809
NR 29
TC 0
Z9 2
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2007
VL 12
IS 6
BP 575
EP 592
DI 10.1007/s10664-007-9043-7
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 226MC
UT WOS:000250592200001
DA 2024-07-18
ER

PT J
AU Milewski, AE
AF Milewski, Allen E.
TI Global and task effects in information-seeking among software engineers
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE global development; information-seeking; culture; collaboration
ID ACCESSIBILITY; SCIENTISTS; DOCUMENTS; MODEL
AB Information-seeking strategies were explored in software engineers. A complex interaction of task and geographic differences was revealed. There is a general tendency across software engineers to favor non-social sources, such as documentation, for tasks where the goal is to seek factual information. More social sources are preferred when seeking information to diagnostic, problem-solving questions. Within this effect, some geographic variations assert themselves in a way that might partly be interpreted in terms of national cultural differences in Individualism vs. Collectivism. Implications of geographic differences in information-seeking for collaboration within global software development teams are discussed.
C1 Monmouth Univ, Dept Software Engn, W Long Branch, NJ 07764 USA.
C3 Monmouth University
RP Milewski, AE (corresponding author), Monmouth Univ, Dept Software Engn, 400 Cedar Ave, W Long Branch, NJ 07764 USA.
EM amilewsk@monmouth.edu
CR ALLEN TJ, 1988, MANAGING PROFESSIONA
   [Anonymous], ONLINE READINGS PSYC
   [Anonymous], 1995, Information Seeking in Electronic Environments
   [Anonymous], 1990, HIDDEN DIMENSION
   BORCHERS G, 2003, IEEE INT C SOFTW ENG
   CARLIN M, 2004, P 10 AM C INF SYST N
   Carmel E, 2001, IEEE SOFTWARE, V18, P22, DOI 10.1109/52.914734
   Carmel E., 1999, GLOBAL SOFTWARE TEAM
   CHAKRABARTI AK, 1983, IEEE T ENG MANAGE, V30, P83, DOI 10.1109/TEM.1983.6447506
   Cool C, 2000, P ASIS ANN, V37, P462
   DUNCKER E, 2002, JCDL 02 PORTL OR, P13
   EDWARDS HK, 2003, P 36 ANN HAW INT C S
   Ellis D, 1997, J DOC, V53, P384, DOI 10.1108/EUM0000000007204
   Fidel R, 2004, J AM SOC INF SCI TEC, V55, P939, DOI 10.1002/asi.20041
   Fidel R, 2004, INFORM PROCESS MANAG, V40, P563, DOI 10.1016/S0306-4573(03)00003-7
   GILBERT G, 2003, CNET NEWS COM    DEC
   GRINTER RE, 1999, R D WORK P INT ACM S, P306
   Herbsleb JD, 2003, IEEE T SOFTWARE ENG, V29, P481, DOI 10.1109/TSE.2003.1205177
   Hertzum M, 2002, INTERACT COMPUT, V14, P575, DOI 10.1016/S0953-5438(02)00023-1
   Hertzum M, 2000, INFORM PROCESS MANAG, V36, P761, DOI 10.1016/S0306-4573(00)00011-X
   HIRA R, 2004, WASHINGTON POST  MAR
   HOFSTEDE G, 1977, CULTURES ORG SOFTWAR
   HONOLD P, 1999, TECHNICAL COMMUNICAT, P196
   Honold Pia, 2000, INTERKULTURELLES USA
   Iivonen M, 2001, J DOC, V57, P465, DOI 10.1108/EUM0000000007091
   KOMLODI A, 2005, P HUM COMP INT INT H
   KOMLODI A, 2004, P 15 INT C INF RES M, P1169
   Krishna S, 2004, COMMUN ACM, V47, P62, DOI 10.1145/975817.975818
   Leckie GJ, 1996, LIBR QUART, V66, P161
   McSweeney B, 2002, HUM RELAT, V55, P89, DOI 10.1177/0018726702551004
   MILEWSKI A, 2004, NEWSLETTER PSYCH FEB
   OLSON J, 2004, ACM QUEUE, V1
   Perlow L, 2002, J ORGAN BEHAV, V23, P345, DOI 10.1002/job.150
   Pirolli P, 1999, PSYCHOL REV, V106, P643, DOI 10.1037/0033-295X.106.4.643
   Poltrock S., 2003, Proceedings of the 2003 International ACM SIGGROUP Conference on Supporting Group Work, P239
   ROSENBER.V, 1967, INFORM STORAGE RET, V3, P119, DOI 10.1016/0020-0271(67)90005-8
   Tenopir C., 2004, COMMUNICATION PATTER
   WALZ DB, 1993, COMMUN ACM, V36, P63, DOI 10.1145/163430.163447
   Yitzhaki M, 2004, J AM SOC INF SCI TEC, V55, P832, DOI 10.1002/asi.20026
   ZIPPERER L, 1993, SPEC LIBR, V84, P69
   2005, INTER WORLD STATS
NR 41
TC 17
Z9 18
U1 0
U2 10
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2007
VL 12
IS 3
BP 311
EP 326
DI 10.1007/s10664-007-9036-6
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 168JN
UT WOS:000246521000005
DA 2024-07-18
ER

PT J
AU Karlsson, L
   Thelin, T
   Regnell, B
   Berander, P
   Wohlin, C
AF Karlsson, Lena
   Thelin, Thomas
   Regnell, Bjorn
   Berander, Patrik
   Wohlin, Claes
TI Pair-wise comparisons versus planning game partitioning-experiments on
   requirements prioritisation techniques
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE requirements engineering; requirements prioritisation; release planning;
   decision making; controlled experiment
AB The process of selecting the right set of requirements for a product release is dependent on how well the organisation succeeds in prioritising the requirements candidates. This paper describes two consecutive controlled experiments comparing different requirements prioritisation techniques with the objective of understanding differences in time-consumption, ease of use and accuracy. The first experiment evaluates Pair-wise comparisons and a variation of the Planning game. As the Planning game turned out as superior, the second experiment was designed to compare the Planning game to Tool-supported pair-wise comparisons. The results indicate that the manual pair-wise comparisons is the most time-consuming of the techniques, and also the least easy to use. Tool-supported pair-wise comparisons is the fastest technique and it is as easy to use as the Planning game. The techniques do not differ significantly regarding accuracy.
C1 Lund Univ, Dept Commun Syst, S-22100 Lund, Sweden.
   Blekinge Inst Technol, Sch Engn, Dept Syst & Software Engn, Karlskrona, Sweden.
C3 Lund University; Blekinge Institute Technology
RP Karlsson, L (corresponding author), Lund Univ, Dept Commun Syst, S-22100 Lund, Sweden.
EM lena.karlsson@telecom.lth.se; thomas.thelin@telecom.lth.se;
   bjorn.regnell@telecom.lth.se; patrik.berander@bth.se;
   claes.wohlin@bth.se
RI Berander, Patrik/H-9743-2014; Berander, Patrik/P-4536-2019
OI Wohlin, Claes/0000-0003-0460-5253; Regnell, Bjorn/0000-0002-9380-6120
CR [Anonymous], 2003, Proceedings of the 7th International Conference on Empirical Assessment in Software Engineering
   [Anonymous], P 2004 INT S EMP SOF
   [Anonymous], 6 INT WORKSH REQ ENG
   [Anonymous], 9 INT SOFTW METR S
   Beck Kent, 1999, Extreme Programming Explained: Embrace Change
   Berander P., 2005, Engineering and Managing Software Requirements
   Carmone FJ, 1997, EUR J OPER RES, V102, P538, DOI 10.1016/S0377-2217(96)00250-0
   Greer D, 2004, INFORM SOFTWARE TECH, V46, P243, DOI 10.1016/j.infsof.2003.07.002
   HARKER PT, 1987, MATH MODELLING, V9, P837, DOI 10.1016/0270-0255(87)90503-3
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   IEEE, 1998, 8301998 IEEE
   Karlsson J., 1997, Requirements Engineering, V2, P51, DOI 10.1007/BF02802897
   Karlsson J, 1996, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, P110, DOI 10.1109/ICRE.1996.491435
   Karlsson J, 1997, IEEE SOFTWARE, V14, P67, DOI 10.1109/52.605933
   Karlsson J, 1998, INFORM SOFTWARE TECH, V39, P939, DOI 10.1016/S0950-5849(97)00053-0
   KARLSSON L, 2004, P 8 INT C EMP ASS SO, P145
   LAUESEN S, 2002, SOFTWARE REQUIREMENT
   LEFFINGWELL D, 2000, MANAGING SOFTWARE RE
   Lubars M., 1992, Proceedings of IEEE International Symposium on Requirements Engineering (Cat. No.92TH0491-1), P2, DOI 10.1109/ISRE.1993.324842
   Moisiadis F., 2002, PROC SYSTEMS ENG TES, P108
   Newkirk J.W., 2001, Extreme Programming
   Robson C., 1997, REAL WORLD RES
   Ruhe G., 2002, Proceedings of the 14th International Conference on Software Engineering and Knowledge Engineering (SEKE'02), P159
   Saaty TL., 2001, INT SERIES OPERATION
   SHEN YJ, 1992, MATH COMPUT MODEL, V16, P121, DOI 10.1016/0895-7177(92)90124-4
   Siddiqi J, 1996, IEEE SOFTWARE, V13, P15, DOI 10.1109/MS.1996.506458
   Siegel Sidney, 1988, Nonparametric statistics for the behavioral sciences
   Tichy W. F., 2000, Empirical Software Engineering, V5, P309, DOI 10.1023/A:1009844119158
   Wiegers K., 1999, SOFTWARE REQUIREMENT
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Yourdon E., 1999, DEATH MARCH
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 35
TC 52
Z9 58
U1 0
U2 8
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2007
VL 12
IS 1
BP 3
EP 33
DI 10.1007/s10664-006-7240-4
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 130ML
UT WOS:000243803600001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Wessel, M
   Vargovich, J
   Gerosa, MA
   Treude, C
AF Wessel, Mairieli
   Vargovich, Joseph
   Gerosa, Marco A.
   Treude, Christoph
TI GITHUB ACTIONS: The Impact on the Pull Request Process
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE GitHub actions; Bots; Automated workflow; Software repositories;
   Regression discontinuity design
AB Software projects frequently use automation tools to perform repetitive activities in the distributed software development process. Recently, GitHub introduced GitHub Actions, a feature providing automated workflows for software projects. Understanding and anticipating the effects of adopting such technology is important for planning and management. Our research investigates how projects use GitHub Actions, what the developers discuss about them, and how project activity indicators change after their adoption. Our results indicate that 1,489 out of 5,000 most popular repositories (almost 30% of our sample) adopt GitHub Actions and that developers frequently ask for help implementing them. Our findings also suggest that the adoption of GitHub Actions leads to more rejections of pull requests (PRs), more communication in accepted PRs and less communication in rejected PRs, fewer commits in accepted PRs and more commits in rejected PRs, and more time to accept a PR. We found similar results when segmenting our results by categories of GitHub Actions. We suggest practitioners consider these effects when adopting GitHub Actions on their projects.
C1 [Wessel, Mairieli] Radboud Univ Nijmegen, Nijmegen, Netherlands.
   [Vargovich, Joseph; Gerosa, Marco A.] No Arizona Univ, Flagstaff, AZ USA.
   [Treude, Christoph] Univ Melbourne, Melbourne, Vic, Australia.
C3 Radboud University Nijmegen; Northern Arizona University; University of
   Melbourne
RP Wessel, M (corresponding author), Radboud Univ Nijmegen, Nijmegen, Netherlands.
EM mairieli.wessel@ru.nl; jrv233@nau.edu; Marco.Gerosa@nau.edu;
   christoph.treude@unimelb.edu.au
RI Treude, Christoph/AAZ-6257-2021; Wessel, Mairieli/ABA-1455-2021; Gerosa,
   Marco Aurelio/A-6686-2009
OI Gerosa, Marco Aurelio/0000-0003-1399-7535; Wessel,
   Mairieli/0000-0001-8619-726X; Treude, Christoph/0000-0002-6919-2149
FU NSF [1815503, 1900903, 2236198, 2247929, 2303042]; Australian Research
   Council's Discovery Early Career Researcher Award (DECRA) [DE180100153]
FX This work was partially supported by the NSF grants 1815503, 1900903,
   2236198, 2247929, 2303042, and the Australian Research Council's
   Discovery Early Career Researcher Award (DECRA) funding scheme
   (DE180100153). We thank Timothy Kinsman for his participation in the
   initial stage of this study.
CR Abdellatif A, 2022, IEEE WORK CONF MIN S, P6, DOI 10.1145/3524842.3527959
   Aniche Mauricio, 2016, 2016 IEEE International Conference on Software Maintenance and Evolution (ICSME), P233, DOI 10.1109/ICSME.2016.12
   Aniche M, 2016, IEEE INT WORK C SO, P41, DOI 10.1109/SCAM.2016.19
   [Anonymous], 2007, CONTINUOUS INTEGRATI
   Balali S, 2018, COMPUT SUPP COOP W J, V27, P679, DOI 10.1007/s10606-018-9310-8
   BENJAMINI Y, 1995, J R STAT SOC B, V57, P289, DOI 10.1111/j.2517-6161.1995.tb02031.x
   Brown C, 2019, 2019 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON BOTS IN SOFTWARE ENGINEERING (BOTSE 2019), P54, DOI 10.1109/BotSE.2019.00021
   Calefato F, 2022, INT SYMP EMP SOFTWAR, P283, DOI 10.1145/3544902.3546636
   Cassee N, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P423, DOI [10.1109/saner48275.2020.9054818, 10.1109/SANER48275.2020.9054818]
   Chen SK, 2001, IEEE T SOFTWARE ENG, V27, P715, DOI 10.1109/32.940726
   Cook T. D., 1979, QUASIEXPERIMENTATION
   Cordeiro M, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P1281, DOI 10.1109/ASE51524.2021.9678918
   Dabbish L, 2012, P ACM 2012 C COMP SU, P1277, DOI [10.1145/2145204.2145396, DOI 10.1145/2145204.2145396]
   Decan A, 2022, PROC IEEE INT CONF S, P235, DOI 10.1109/ICSME55016.2022.00029
   Dey T, 2020, P 14 ACM IEEE INT S, P1
   Dey T, 2020, IEEE WORK CONF MIN S, P209, DOI 10.1145/3379597.3387478
   dos Santos RM, 2018, INT C PROGRAM COMPRE, P277, DOI 10.1145/3196321.3196342
   Erlenhov L, 2019, 2019 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON BOTS IN SOFTWARE ENGINEERING (BOTSE 2019), P7, DOI 10.1109/BotSE.2019.00009
   Galecki A, 2013, SPRINGER TEXTS STAT, P1, DOI 10.1007/978-1-4614-3900-4
   Golzadeh M, 2020, arXiv
   Golzadeh M, 2022, EUR CON SFTWR MTNCE, P662, DOI 10.1109/SANER53432.2022.00084
   Gousios G, 2016, PROC INT CONF SOFTW, P285, DOI 10.1145/2884781.2884826
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   Hata H, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10058-6
   Healy T, 2012, Nanotechnology: ethical and social Implications, P155
   Hilton M, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P1066, DOI 10.1145/2950290.2983952
   Imbens GW, 2008, J ECONOMETRICS, V142, P615, DOI 10.1016/j.jeconom.2007.05.001
   Kalliamvakou E., 2014, P 11 WORKING C MININ, P92, DOI DOI 10.1145/2597073.2597074
   Kavaler D, 2019, PROC INT CONF SOFTW, P476, DOI 10.1109/ICSE.2019.00060
   Kinsman T, 2021, IEEE WORK CONF MIN S, P420, DOI 10.1109/MSR52588.2021.00054
   Kuznetsova A, 2017, J STAT SOFTW, V82, P1, DOI 10.18637/jss.v082.i13
   Leite LAF, 2013, SERV ORIENTED COMPUT, V7, P199, DOI 10.1007/s11761-012-0125-z
   Lin B, 2016, PROCEEDINGS OF THE 19TH ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING COMPANION, P333, DOI 10.1145/2818052.2869117
   McHugh ML, 2012, BIOCHEM MEDICA, V22, P276, DOI 10.11613/bm.2012.031
   Mirhosseini S, 2017, IEEE INT CONF AUTOM, P84, DOI 10.1109/ASE.2017.8115621
   Monperrus M, 2019, 2019 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON BOTS IN SOFTWARE ENGINEERING (BOTSE 2019), P12, DOI 10.1109/BotSE.2019.00010
   Mulder K, 2013, Impact of new technologies: how to assess the intended and unintended effects of new technologies
   Nakagawa S, 2013, METHODS ECOL EVOL, V4, P133, DOI 10.1111/j.2041-210x.2012.00261.x
   Ouyang C, 2006, ICWS 2006: IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P285
   Pinto G, 2017, CONF SOFTW ENG EDUC, P117, DOI 10.1109/CSEET.2017.27
   Santos I, 2023, P 2023 ACM IEEE 45 I
   Saroar SG, 2023, 27TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING, EASE 2023, P121, DOI 10.1145/3593434.3593475
   Sheather SJ, 2009, SPRINGER TEXTS STAT, P1, DOI 10.1007/978-0-387-09608-7_1
   Steinmacher I, 2015, PROCEEDINGS OF THE 2015 ACM INTERNATIONAL CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING (CSCW'15), P1379, DOI 10.1145/2675133.2675215
   Storey MA, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P928, DOI 10.1145/2950290.2983989
   Subash KM, 2022, IEEE WORK CONF MIN S, P227, DOI 10.1145/3524842.3528018
   THISTLETHWAITE DL, 1960, J EDUC PSYCHOL, V51, P309, DOI 10.1037/h0044319
   Tingting Chen, 2021, 2021 IEEE 21st International Conference on Software Quality, Reliability and Security Companion (QRS-C), P01, DOI 10.1109/QRS-C55045.2021.00163
   Tsay J, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P356, DOI 10.1145/2568225.2568315
   Valenzuela-Toledo P, 2022, EUR CON SFTWR MTNCE, P123, DOI 10.1109/SANER53432.2022.00026
   van Tonder R, 2019, 2019 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON BOTS IN SOFTWARE ENGINEERING (BOTSE 2019), P43, DOI 10.1109/BotSE.2019.00019
   Vasilescu B, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P805, DOI 10.1145/2786805.2786850
   Wessel Mairieli, 2021, Proceedings of the ACM on Human-Computer Interaction, V5, DOI 10.1145/3476042
   Wessel Mairieli, 2018, Proceedings of the ACM on Human-Computer Interaction, V2, DOI 10.1145/3274451
   Wessel M., 2020, Proceedings of the 42nd International Conference on Software Engineering Workshops (ICSEW'20), P51, DOI [10.1145/3387940.3391504, DOI 10.1145/3387940.3391504]
   Wessel M, 2022, PROC INT CONF SOFTW, P274, DOI 10.1145/3510003.3512765
   Wessel M, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10130-9
   Wessel M, 2020, PROC IEEE INT CONF S, P1, DOI 10.1109/ICSME46990.2020.00011
   Wyrich M, 2019, 2019 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON BOTS IN SOFTWARE ENGINEERING (BOTSE 2019), P24, DOI 10.1109/BotSE.2019.00015
   Zhao YY, 2017, IEEE INT CONF AUTOM, P60, DOI 10.1109/ASE.2017.8115619
   Zhewei Hu, 2019, SIGCSE '19: Proceedings of the 50th ACM Technical Symposium on Computer Science Education, P1262, DOI 10.1145/3287324.3293787
NR 61
TC 1
Z9 1
U1 1
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2023
VL 28
IS 6
AR 131
DI 10.1007/s10664-023-10369-w
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LU0W2
UT WOS:001189206400001
OA hybrid, Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Aman, H
   Amasaki, S
   Yokogawa, T
   Kawahara, M
AF Aman, Hirohisa
   Amasaki, Sousuke
   Yokogawa, Tomoyuki
   Kawahara, Minoru
TI An automated detection of confusing variable pairs with highly similar
   compound names in Java and Python programs
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Confusing variable names; Compound names; String similarity; Semantic
   similarity
AB Variable names represent a significant source of information regarding the source code, and a successful naming of variables is key to producing readable code. Programmers often use a compound variable name by concatenating two or more words to make it more informative and enhance the code readability. While each compound variable name is descriptive, a collection of them sometimes produces "confusing" variable pairs if their names are highly similar, e.g., "shippingHeight," vs. "shippingWeight." A confusing variable pair would adversely affect the code readability because it can cause a misreading or mix-up of variables during the programming or code review activities. Toward automated support for enhancing code readability, this paper conducts a large-scale investigation of compound variable names in Java and Python programs. The investigation collects 116,921,127 pairs of compound-named variables from 1,876 open-source Java projects and 106,943,523 pairs of such variables from 2,427 open-source Python projects. Then, this study analyzes those variable pairs from two perspectives of name similarity: string similarity and semantic similarity. Through an evaluation study with 30 human participants, the data analyses show that both string and semantic similarity can help detect confusing variable pairs in Java and Python programs. In order to distill confusing variable pairs automatically, support tools for detecting confusing variable pairs are also developed in this study.
C1 [Aman, Hirohisa; Kawahara, Minoru] Ehime Univ, Matsuyama, Ehime 7908577, Japan.
   [Amasaki, Sousuke; Yokogawa, Tomoyuki] Okayama Prefectural Univ, Soja, Okayama 7191197, Japan.
C3 Ehime University; Okayama Prefectural University
RP Aman, H (corresponding author), Ehime Univ, Matsuyama, Ehime 7908577, Japan.
EM aman@ehime-u.ac.jp; amasaki@cse.oka-pu.ac.jp; t-yokoga@cse.oka-pu.ac.jp;
   kawahara@ehime-u.ac.jp
OI Aman, Hirohisa/0000-0001-7074-5225
FU JSPS KAKENHI [20H04184, 21K11831, 21K11833]
FX AcknowledgementsThis work was supported by JSPS KAKENHI #20H04184,
   #21K11831, and #21K11833
CR Aivaloglou E, 2016, PROCEEDINGS OF THE 2016 ACM CONFERENCE ON INTERNATIONAL COMPUTING EDUCATION RESEARCH (ICER'16), P53, DOI 10.1145/2960310.2960325
   Aman H., 2019, QUASOQ APSEC, P3
   Aman H., 2021, QUALITY INFORM COMMU, P489, DOI 10.1007/978-3-030-85347-1_35
   Aman H, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING WORKSHOPS (ASEW 2021), P133, DOI 10.1109/ASEW52652.2021.00036
   [Anonymous], 2014, The Java Language Specification, Java SE
   [Anonymous], 1997, ACM SIGACT NEWS
   Arnaoudova V, 2016, EMPIR SOFTW ENG, V21, P104, DOI 10.1007/s10664-014-9350-8
   Beniamini G, 2017, INT C PROGRAM COMPRE, P45, DOI 10.1109/ICPC.2017.18
   Binkley D, 2013, EMPIR SOFTW ENG, V18, P219, DOI 10.1007/s10664-012-9201-4
   Binkley D, 2009, SCI COMPUT PROGRAM, V74, P430, DOI 10.1016/j.scico.2009.02.006
   Caprile B, 2000, PROC IEEE INT CONF S, P97, DOI 10.1109/ICSM.2000.883022
   Ceccato M, 2014, EMPIR SOFTW ENG, V19, P1040, DOI 10.1007/s10664-013-9248-x
   Chen K., 2013, EFFICIENT ESTIMATION, P2
   Deissenboeck F, 2006, SOFTWARE QUAL J, V14, P261, DOI 10.1007/s11219-006-9219-1
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   Free Software Foundation, 2018, GNU COD STAND
   Tran H, 2019, PROC INT CONF SOFTW, P1165, DOI 10.1109/ICSE.2019.00119
   Hucka M., 2018, J OPEN SOURCE SOFTWA, V3, P653, DOI [10.21105/joss.00653, DOI 10.21105/JOSS.00653]
   kerneldevelopment community T, 2016, LIN KERN COD STYL
   Kernighan B. W., 1999, The Practice of Programming, V1st
   Knuth D., 2003, CSLI LECT NOTES, V139
   Lacomis Jeremy, 2019, 2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE). Proceedings, P628, DOI 10.1109/ASE.2019.00064
   Lawrie D, 2007, INNOV SYST SOFTW ENG, V3, P303, DOI 10.1007/s11334-007-0031-2
   Le Quoc V., 2014, P INT C MACH LEARN I
   Liblit Ben, 2006, PPIG, P53
   Low D., 1998, CROSSROADS, V4, P21
   Palma SD, 2021, REPOMINER LANGUAGE A, DOI [10.48550/arXiv.2111.11807, DOI 10.48550/ARXIV.2111.11807]
   Pigoski TM., 1996, Practical Software Maintenance: Best Practices for Managing Your Software Investment
   Reimers N, 2019, 2019 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING AND THE 9TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING (EMNLP-IJCNLP 2019), P3982
   Scalabrino S, 2021, IEEE T SOFTWARE ENG, V47, P595, DOI 10.1109/TSE.2019.2901468
   Scanniello G, 2017, ACM T SOFTW ENG METH, V26, DOI 10.1145/3104029
   Schankin A, 2018, INT C PROGRAM COMPRE, P31, DOI 10.1145/3196321.3196332
   Swidan A, 2017, IEEE INT WORK C SO, P51, DOI 10.1109/SCAM.2017.12
   Tashima K, 2018, EUROMICRO CONF PROC, P154, DOI 10.1109/SEAA.2018.00033
NR 34
TC 0
Z9 0
U1 2
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2023
VL 28
IS 5
AR 108
DI 10.1007/s10664-023-10339-2
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA O5RA2
UT WOS:001044367800001
OA hybrid
DA 2024-07-18
ER

PT J
AU Masood, Z
   Blincoe, K
   Damian, D
AF Masood, Zainab
   Blincoe, Kelly
   Damian, Daniela
TI What have we learned? A conceptual framework on New Zealand software
   professionals and companies' response to COVID-19
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE COVID-19 pandemic; Impact; Challenges; Software professionals
AB ContextThe COVID-19 pandemic posed challenges to people from all professions and walks of life, and software professionals were no exceptions.ObjectiveIn this study, we investigated the impact of the COVID-19 pandemic on software professionals and their work practices with a focus on New Zealand. We specifically examined how software professionals and companies responded to different challenges, which is missing in the current literature.MethodWe conducted an exploratory study to learn how COVID-19 challenged software professionals and their responses to these challenges. We interviewed eighteen software professionals working in different New Zealand software companies providing them an opportunity to reflect on how they and their companies faced and dealt with the pandemic. We performed thematic analysis to identify various themes from our data set.ResultsWe found that software professionals faced various personal, financial, and work setup-related challenges. COVID-19 impacted the productivity and workload of software professionals. It also affected the software development practices for teams, specifically for colocated teams. We observed that software professionals tried to workaround some challenges by themselves. We found that software professionals demonstrated empathy to their coworkers and supported each other during tough times. We also found that software companies facilitated software professionals in several various ways. We present a framework of the perceived responses of the software professionals, teams, and companies to various challenges they faced during the pandemic.ConclusionOur results reveal that software professionals with specific demographics, e.g., working and single parents, contractual employees, and employees working for smaller companies, were most impacted by the COVID-19 restrictions. Our findings indicate that, through the COVID-19 pandemic, software companies trusted and empowered their employees and equipped them with the right tools and equipment and a healthy environment.
C1 [Masood, Zainab] Prince Sultan Univ, Dept Software Engn, Riyadh, Saudi Arabia.
   [Masood, Zainab; Damian, Daniela] Univ Auckland, Dept Elect Comp & Software Engn, Auckland, New Zealand.
   [Masood, Zainab; Blincoe, Kelly] Univ Victoria, Dept Comp Sci, Victoria, BC, Canada.
C3 Prince Sultan University; University of Auckland; University of Victoria
RP Masood, Z (corresponding author), Prince Sultan Univ, Dept Software Engn, Riyadh, Saudi Arabia.; Masood, Z (corresponding author), Univ Auckland, Dept Elect Comp & Software Engn, Auckland, New Zealand.; Masood, Z (corresponding author), Univ Victoria, Dept Comp Sci, Victoria, BC, Canada.
EM zmasood@psu.edu.sa; k.blincoe@auckland.ac.nz; danielad@uvic.ca
CR Alon Titan., 2020, National Bureau of Economic Research, P1
   Bao LF, 2021, Arxiv, DOI [arXiv:2005.13167, 10.48550/arXiv.2005.13167]
   Bellmann L, 2021, INT J MANPOWER, V42, P424, DOI 10.1108/IJM-10-2019-0458
   Bezerra Carla I. M., 2020, SBES '20: Proceedings of the 34th Brazilian Symposium on Software Engineering, P606, DOI 10.1145/3422392.3422417
   Braun V, 2012, APA HDB RES METHODS, V2, P57, DOI [DOI 10.1037/13620-004, DOI 10.1037/13620]
   Butler J, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2021), P362, DOI 10.1109/ICSE-SEIP52600.2021.00047
   Butt Shariq Aziz, 2021, Lean and Agile Software Development. 5th International Conference, LASD 2021. Proceedings. Lecture Notes in Business Information Processing (LNBIP 408), P59, DOI 10.1007/978-3-030-67084-9_4
   Cucolas A-A, 2021, PREPRINT
   Denzin N., 2005, HDB QUALITATIVE RES, P1, DOI DOI 10.1177/1474474013487485
   Ford D, 2021, ACM T SOFTW ENG METH
   Kowal M, 2020, APPL PSYCHOL-HLTH WE, V12, P946, DOI 10.1111/aphw.12234
   Krukowski RA, 2021, J WOMENS HEALTH, V30, P341, DOI 10.1089/jwh.2020.8710
   Kurian RM, 2022, THEOR ISS ERGON SCI, V23, P184, DOI 10.1080/1463922X.2021.1901321
   Lewis S, 2015, HEALTH PROMOT PRACT, V16, P473, DOI 10.1177/1524839915580941
   Machado LS, 2020, IEEE SOFT
   Marek Krzysztof, 2021, Lean and Agile Software Development. 5th International Conference, LASD 2021. Proceedings. Lecture Notes in Business Information Processing (LNBIP 408), P24, DOI 10.1007/978-3-030-67084-9_2
   Marinho M, 2021, TECHNOL SOC, V67, DOI 10.1016/j.techsoc.2021.101799
   Masood Z, 2021, IEEE SOFTWARE
   Miller C, 2021, PROC INT CONF SOFTW, P624, DOI 10.1109/ICSE43902.2021.00064
   Neto PADMS, 2021, IEEE T SOFTW ENG TSE
   Neumann Michael, 2021, Lean and Agile Software Development. 5th International Conference, LASD 2021. Proceedings. Lecture Notes in Business Information Processing (LNBIP 408), P40, DOI 10.1007/978-3-030-67084-9_3
   NicCanna C, 2021, PREPRINT
   Nolan A, 2021, COMM COM INF SC, V1442, P14, DOI 10.1007/978-3-030-85521-5_2
   Parlak S, 2021, GENDER WORK ORGAN, V28, P461, DOI 10.1111/gwao.12655
   Ralph P, 2020, EMPIR SOFTW ENG, V25, P4927, DOI 10.1007/s10664-020-09875-y
   Rodeghero P, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2021), P41, DOI 10.1109/ICSE-SEIP52600.2021.00013
   Russo D, 2021, Arxiv, DOI arXiv:2101.04363
   Russo D, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09945-9
   Sharma N, 2020, HEALTH CARE WOMEN IN, V41, P1255, DOI 10.1080/07399332.2020.1825441
   Staniscuaski F., 2020, bioRxiv, DOI DOI 10.1101/2020.07.04.187583
   Waizenegger L, 2020, EUR J INFORM SYST, V29, P429, DOI 10.1080/0960085X.2020.1800417
   Yildirim TM, 2021, GENDER WORK ORGAN, V28, P243, DOI 10.1111/gwao.12529
NR 32
TC 0
Z9 0
U1 3
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2023
VL 28
IS 5
AR 109
DI 10.1007/s10664-023-10309-8
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA P1KE5
UT WOS:001048291200001
DA 2024-07-18
ER

PT J
AU Wang, D
   Xiao, T
   Son, T
   Kula, RG
   Ishio, T
   Kamei, Y
   Matsumoto, K
AF Wang, Dong
   Xiao, Tao
   Son, Teyon
   Kula, Raula Gaikovina
   Ishio, Takashi
   Kamei, Yasutaka
   Matsumoto, Kenichi
TI More than React: Investigating the Role of Emoji Reaction in GitHub Pull
   Requests
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Emoji reaction; Code reviews; Mining software repositories
AB Open source software development has become more social and collaborative, evident GitHub. Since 2016, GitHub started to support more informal methods such as emoji reactions, with the goal to reduce commenting noise when reviewing any code changes to a repository. From a code review context, the extent to which emoji reactions facilitate a more efficient review process is unknown. We conduct an empirical study to mine 1,850 active repositories across seven popular languages to analyze 365,811 Pull Requests (PRs) for their emoji reactions against the review time, first-time contributors, comment intentions, and the consistency of the sentiments. Answering these four research perspectives, we first find that the number of emoji reactions has a significant correlation with the review time. Second, our results show that a PR submitted by a first-time contributor is less likely to receive emoji reactions. Third, the results reveal that the comments with an intention of information giving, are more likely to receive an emoji reaction. Fourth, we observe that only a small proportion of sentiments are not consistent between comments and emoji reactions, i.e., with 11.8% of instances being identified. In these cases, the prevalent reason is when reviewers cheer up authors that admit to a mistake, i.e., acknowledge a mistake. Apart from reducing commenting noise, our work suggests that emoji reactions play a positive role in facilitating collaborative communication during the review process.
C1 [Wang, Dong; Kamei, Yasutaka] Kyushu Univ, Fukuoka, Japan.
   [Xiao, Tao; Son, Teyon; Kula, Raula Gaikovina; Ishio, Takashi; Matsumoto, Kenichi] Nara Inst Sci & Technol, Ikoma, Japan.
C3 Kyushu University; Nara Institute of Science & Technology
RP Wang, D (corresponding author), Kyushu Univ, Fukuoka, Japan.
EM d.wang@ait.kyushu-u.ac.jp; tao.xiao.ts2@is.naist.jp;
   son.teyon.sr7@is.naist.jp; raula-k@is.naist.jp; ishio@is.naist.jp;
   kamei@ait.kyushu-u.ac.jp; matumoto@is.naist.jp
OI Wang, Dong/0000-0002-2004-0902; Xiao, Tao/0000-0003-4070-585X
FU This work is supported by Japanese Society for the Promotion of Science
   (JSPS) KAKENHI Grant Numbers 18H04094 and 20K19774 and 20H05706.
   [18H04094, 20K19774, 20H05706]; Japanese Society for the Promotion of
   Science (JSPS) KAKENHI
FX This work is supported by Japanese Society for the Promotion of Science
   (JSPS) KAKENHI Grant Numbers 18H04094 and 20K19774 and 20H05706.
CR Agrawal R., 1993, SIGMOD Record, V22, P207, DOI 10.1145/170036.170072
   Agrawal Vishakha, 2022, EASE 2022: The International Conference on Evaluation and Assessment in Software Engineering 2022, P249, DOI 10.1145/3530019.3534082
   [Anonymous], 2014, 11 WORKING C MINING, DOI [DOI 10.1145/2597073.2597076, DOI 10.1145/2597073]
   Bai QY, 2019, FRONT PSYCHOL, V10, DOI 10.3389/fpsyg.2019.02221
   Baysal O, 2016, EMPIR SOFTW ENG, V21, P932, DOI 10.1007/s10664-015-9366-8
   Baysal O, 2013, WORK CONF REVERSE EN, P122, DOI 10.1109/WCRE.2013.6671287
   Borges H, 2019, PROCEEDINGS OF THE XXXIII BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING, SBES 2019, P397, DOI 10.1145/3350768.3350788
   Charmaz K., 2014, CONSTRUCTING GROUNDE
   Chen ZP, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3424308
   Chui M., 2012, The social economy: Unlocking value and productivity through social technologies
   Claes M, 2018, P 12 ACM IEEE INT S, P1
   Dabbish L, 2012, P ACM 2012 C COMP SU, P1277, DOI [10.1145/2145204.2145396, DOI 10.1145/2145204.2145396]
   Dey T, 2020, IEEE WORK CONF MIN S, P209, DOI 10.1145/3379597.3387478
   Ebert F, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P49, DOI [10.1109/SANER.2019.8668024, 10.1109/saner.2019.8668024]
   EISENHARDT KM, 1989, ACAD MANAGE REV, V14, P532, DOI 10.2307/258557
   El Asri I, 2019, INFORM SOFTWARE TECH, V114, P37, DOI 10.1016/j.infsof.2019.06.005
   Fu L, 2022, 2022 IEEE ACM 30 INT
   Golzadeh M, 2022, INT WORKSH BOTS SOFT
   Golzadeh M, 2021, J SYST SOFTWARE, V175, DOI 10.1016/j.jss.2021.110911
   Guntuku S.C., 2019, P INT AAAI C WEB SOC, VVolume 13, P226, DOI [DOI 10.48550/ARXIV.1904.02671, DOI 10.1609/ICWSM.V13I01.3224]
   HARRELL FE, 1984, STAT MED, V3, P143, DOI 10.1002/sim.4780030207
   Hastie T., 2009, The Elements of Statistical Learning
   Hata H, 2019, PROC INT CONF SOFTW, P1211, DOI 10.1109/ICSE.2019.00123
   Herring Susan C., 2020, ACM Transactions on Social Computing, V3, DOI 10.1145/3375629
   Hirao T, 2020, IEEE Transactions on Software Engineering, DOI [DOI 10.1109/TSE.2020.2977907, 10.1109/TSE.2020.2977907]
   Hirao T, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P578, DOI 10.1145/3338906.3338949
   Huang Q, 2020, IEEE T SOFTWARE ENG, V46, P1098, DOI 10.1109/TSE.2018.2876340
   Islam MR, 2018, J SYST SOFTWARE, V145, P125, DOI 10.1016/j.jss.2018.08.030
   Jiang YJ, 2013, IEEE WORK CONF MIN S, P101, DOI 10.1109/MSR.2013.6624016
   Kononenko O, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P124, DOI 10.1145/3183519.3183542
   Kononenko O, 2015, PROC IEEE INT CONF S, P111, DOI 10.1109/ICSM.2015.7332457
   Kuramoto H, 2022, INT C PROGRAM COMPRE, P511, DOI 10.1145/3524610.3527882
   Li W, 2021, PROC IEEE ACM INT C, P256, DOI 10.1109/ICSE-Companion52605.2021.00119
   Maddila C, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P874, DOI 10.1145/3338906.3340457
   McIntosh S, 2016, EMPIR SOFTW ENG, V21, P2146, DOI 10.1007/s10664-015-9381-9
   Nayebi M, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2020), P49, DOI 10.1145/3377816.3381723
   Paternoster R, 1998, CRIMINOLOGY, V36, P859, DOI 10.1111/j.1745-9125.1998.tb01268.x
   Pearson K, 1900, PHILOS MAG, V50, P157, DOI 10.1080/14786440009463897
   Prana GAA, 2019, EMPIR SOFTW ENG, V24, P1296, DOI 10.1007/s10664-018-9660-3
   Rigby PC, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P541, DOI 10.1145/1985793.1985867
   Rong SY, 2022, INFORM SOFTWARE TECH, V148, DOI 10.1016/j.infsof.2022.106912
   Saadat S, 2021, 2021 IEEE/ACM THIRD INTERNATIONAL WORKSHOP ON BOTS IN SOFTWARE ENGINEERING (BOTSE 2021), P1, DOI 10.1109/BotSE52550.2021.00008
   Sadowski C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P181, DOI 10.1145/3183519.3183525
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   Tantisuwankul J, 2019, J SYST SOFTWARE, V158, DOI 10.1016/j.jss.2019.110416
   Teyon Son, 2021, arXiv
   Thongtanunam P, 2017, EMPIR SOFTW ENG, V22, P768, DOI 10.1007/s10664-016-9452-6
   Tigwell GW, 2016, PROCEEDINGS OF THE 18TH INTERNATIONAL CONFERENCE ON HUMAN-COMPUTER INTERACTION WITH MOBILE DEVICES AND SERVICES (MOBILEHCI 2016), P859, DOI 10.1145/2957265.2961844
   Venigalla ASM, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1550, DOI 10.1145/3468264.3473119
   Wang D, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09997-x
   Wang D, 2021, J SYST SOFTWARE, V180, DOI 10.1016/j.jss.2021.111009
   Xiao T, 2021, IEEE T SOFTWARE ENG
   Zhang XH, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10143-4
NR 53
TC 0
Z9 0
U1 3
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2023
VL 28
IS 5
AR 123
DI 10.1007/s10664-023-10336-5
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA S2JJ1
UT WOS:001069479400002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Arya, DM
   Guo, JLC
   Robillard, MP
AF Arya, Deeksha M.
   Guo, Jin L. C.
   Robillard, Martin P.
TI How programmers find online learning resources
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software documentation; Information seeking; Online learning resources;
   User study; Diary study; Qualitative analysis; Quantitative analysis
ID SEARCH
AB When learning a new technology, programmers often have to sift through multiple online resources to find information that addresses their questions. Prior work has reported that information seekers use a number of different strategies, including following scents, or indicators, to locate appropriate resources. We present a qualitative and quantitative investigation of how programmers learning a new technology employ these strategies to navigate between online resources and evaluate the pertinence of these resources. We performed a diary and interview study with ten programmers learning a new technology, to study how users navigate from the question they have to the resource that satisfies this need. Based on our observations, we propose a resource-seeking model that represents the online resource seeking behaviour of programmers when learning a new technology. The model is comprised of six components that can be divided into two groups: Need-oriented components, i.e. Questions, Preferences, and Beliefs, and Resource-oriented components, i.e. Resources, Cues, and Impression Factors. We identified nine relations between these components and studied how the components are associated. We report on the characteristics of the components and the relationships between them, and discuss the importance of search customization and other implications of our observations for resource creators and search tools.
C1 [Arya, Deeksha M.; Guo, Jin L. C.; Robillard, Martin P.] McGill Univ, Sch Comp Sci, Montreal, PQ, Canada.
C3 McGill University
RP Arya, DM (corresponding author), McGill Univ, Sch Comp Sci, Montreal, PQ, Canada.
EM deeksha.arya@mail.mcgill.ca; jguo@cs.mcgill.ca; martin@cs.mcgill.ca
OI Arya, Deeksha/0000-0002-3719-5011; Guo, Jin L.C./0000-0003-1782-1545
FU Natural Sciences and Engineering Research Council (NSERC)
FX This work has been funded by the Natural Sciences and Engineering
   Research Council (NSERC) Discovery Grant.
CR Abdi H, 2007, ENCY MEASUREMENT STA, P103, DOI DOI 10.4135/9781412952644
   Arya DM, 2020, EMPIR SOFTW ENG, V25, P4069, DOI 10.1007/s10664-020-09857-0
   Arya DM, 2021, IEEE SOFTWARE
   Bai GR, 2020, INT C PROGRAM COMPRE, P160, DOI 10.1145/3387904.3389274
   Brandt J, 2009, CHI2009: PROCEEDINGS OF THE 27TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P1589
   Carroll J. M., 1990, Proceedings of the Twenty-Third Annual Hawaii International Conference on System Sciences, P210, DOI 10.1109/HICSS.1990.205259
   Chattopadhyay S, 2020, PROC INT CONF SOFTW, P654, DOI 10.1145/3377811.3380330
   Dondio P., 2019, P 2019 11 INT C ED T, P132
   Duala-Ekoko E, 2012, PROC INT CONF SOFTW, P266, DOI 10.1109/ICSE.2012.6227187
   Earle RH, 2015, SIGDOC2015: PROCEEDINGS OF THE 33RD ANNUAL INTERNATIONAL CONFERENCE ON THE DESIGN OF COMMUNICATION, DOI 10.1145/2775441.2775457
   Erdem A, 1998, 13TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P230, DOI 10.1109/ASE.1998.732658
   Erdos K, 1998, PROG COMPREHEN, P98, DOI 10.1109/WPC.1998.693322
   Escobar-Avila J, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING EDUCATION AND TRAINING (ICSE-SEET), P170, DOI 10.1109/ICSE-SEET.2019.00026
   Gallardo-Valencia R.E., 2011, Proceedings of the 2011 ICSE Workshop on Search-Driven Development-Users, Infrastructure, Tools and Evaluation, P41
   Jaaskelainen R., 2010, HDB TRANSLATION STUD, V1, P371
   Ko AJ, 2007, PROC INT CONF SOFTW, P344
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Lawrance J, 2008, CHI 2008: 26TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS VOLS 1 AND 2, CONFERENCE PROCEEDINGS, P1323
   Lazar J, 2017, ANAL QUALITATIVE DAT
   Lazar J, 2017, RESEARCH METHODS IN HUMAN-COMPUTER INTERACTION, 2ND EDITION, P135, DOI 10.1016/B978-0-12-805390-4.00006-6
   Liu MX, 2021, P ACM HUMAN COMPUTER
   Lu YH, 2017, INFORM RETRIEVAL J, V20, P433, DOI 10.1007/s10791-017-9305-y
   MACK RL, 1983, ACM T OFF INF SYST, V1, P254, DOI 10.1145/357436.357440
   Marques A, 2020, PROC IEEE INT CONF S, P476, DOI 10.1109/ICSME46990.2020.00052
   Mehta C.R., 2011, IBM SPSS EXACT TESTS
   Meng Michael, 2019, Communication Design Quarterly Review, V7, P40, DOI 10.1145/3358931.3358937
   Nadi S, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P229, DOI [10.1109/SANER48275.2020.9054828, 10.1109/saner48275.2020.9054828]
   Piorkowski D, 2015, PROC IEEE INT CONF S, P11, DOI 10.1109/ICSM.2015.7332447
   Pirolli P, 1999, PSYCHOL REV, V106, P643, DOI 10.1037/0033-295X.106.4.643
   Pirolli P, 2003, LECT NOTES ARTIF INT, V2702, P45
   Ragavan SS, 2016, 34TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, CHI 2016, P3509, DOI 10.1145/2858036.2858469
   Rao NKT, 2020, Arxiv, DOI arXiv:1912.09519
   Robillard MP, 2017, PROC IEEE INT CONF S, P479, DOI 10.1109/ICSME.2017.17
   Sadowski C, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P191, DOI 10.1145/2786805.2786855
   Sharpe D., 2015, Chi-Square Test is Statistically Significant: Now What?, DOI DOI 10.7275/TBFA-X148
   Sillito J., 2006, QUESTIONS PROGRAMMER, P23
   Sprent P., 2011, International encyclopedia of statistical science, P524, DOI DOI 10.1007/978-3-642-04898-2_253
   TEEVAN J., 2004, CHI
   Treude C, 2018, 2018 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON API USAGE AND EVOLUTION (WAPI), P19, DOI 10.1145/3194793.3194796
   Xia X, 2017, EMPIR SOFTW ENG, V22, P3149, DOI 10.1007/s10664-017-9514-4
   Xie I, 2012, INFORM PROCESS MANAG, V48, P254, DOI 10.1016/j.ipm.2011.08.009
NR 41
TC 2
Z9 2
U1 1
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2023
VL 28
IS 2
AR 23
DI 10.1007/s10664-022-10246-y
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 7I0VV
UT WOS:000903614800003
DA 2024-07-18
ER

PT J
AU Borovits, N
   Kumara, I
   Di Nucci, D
   Krishnan, P
   Dalla Palma, S
   Palomba, F
   Tamburri, DA
   van den Heuvel, WJ
AF Borovits, Nemania
   Kumara, Indika
   Di Nucci, Dario
   Krishnan, Parvathy
   Dalla Palma, Stefano
   Palomba, Fabio
   Tamburri, Damian A.
   van den Heuvel, Willem-Jan
TI FindICI: Using machine learning to detect linguistic inconsistencies
   between code and natural language descriptions in infrastructure-as-code
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Infrastructure as code; Linguistic anti-patterns; Word embedding;
   Machine learning; Deep learning
ID IDENTIFIER NAMES
AB Linguistic anti-patterns are recurring poor practices concerning inconsistencies in the naming, documentation, and implementation of an entity. They impede the readability, understandability, and maintainability of source code. This paper attempts to detect linguistic anti-patterns in Infrastructure-as-Code (IaC) scripts used to provision and manage computing environments. In particular, we consider inconsistencies between the logic/body of IaC code units and their short text names. To this end, we propose FindICI a novel automated approach that employs word embedding and classification algorithms. We build and use the abstract syntax tree of IaC code units to create code embeddings used by machine learning techniques to detect inconsistent IaC code units. We evaluated our approach with two experiments on Ansible tasks systematically extracted from open source repositories for various word embedding models and classification algorithms. Classical machine learning models and novel deep learning models with different word embedding methods showed comparable and satisfactory results in detecting inconsistent Ansible tasks related to the top-10 used Ansible modules.
C1 [Borovits, Nemania; Kumara, Indika; Dalla Palma, Stefano; van den Heuvel, Willem-Jan] Tilburg Univ, Jheronimus Acad Data Sci, Tilburg, Netherlands.
   [Di Nucci, Dario; Palomba, Fabio] Univ Salerno, Salerno, Italy.
   [Krishnan, Parvathy; Tamburri, Damian A.] Tech Univ Eindhoven, Jheronimus Acad Data Sci, Eindhoven, Netherlands.
C3 Tilburg University; University of Salerno; Eindhoven University of
   Technology
RP Borovits, N (corresponding author), Tilburg Univ, Jheronimus Acad Data Sci, Tilburg, Netherlands.
EM n.borovits@tilburguniversity.edu
RI Di Nucci, Dario/Y-9679-2019; Tamburri, Damian Andrew/AAJ-2507-2021
OI Di Nucci, Dario/0000-0002-3861-1902; Tamburri, Damian
   Andrew/0000-0003-1230-8961; kumara, Indika/0000-0003-4355-0494
FU European Commission [825480, 825040]; Swiss National Science Foundation
   [PZ00P2 186090]; EMELIOT national research project - MUR under the PRIN
   2020 program [2020W3A5FY]
FX This work is supported by the European Commission grant no. 825480
   (SODALITE H2020) and no. 825040 (RADON H2020). We thank all members of
   the SODALITE and RADON consortia for their inputs and feedback to the
   development of this paper. Fabio gratefully acknowledges the support of
   the Swiss National Science Foundation through the SNF Projects No.
   PZ00P2 186090. In addition, the work has been partially supported by the
   EMELIOT national research project, which has been funded by the MUR
   under the PRIN 2020 program (Contract 2020W3A5FY).
CR Aghajani E, 2018, PROC IEEE INT CONF S, P25, DOI 10.1109/ICSME.2018.00012
   Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   Arnaoudova V, 2016, EMPIR SOFTW ENG, V21, P104, DOI 10.1007/s10664-014-9350-8
   Arnaoudova V, 2013, EUR CON SFTWR MTNCE, P187, DOI 10.1109/CSMR.2013.28
   Benavoli A, 2016, J MACH LEARN RES, V17
   Borovits Nemania, 2020, MaLTeSQuE 2020: Proceedings of the 4th ACM SIGSOFT International Workshop on Machine-Learning Techniques for Software-Quality Evaluation, P7, DOI 10.1145/3416505.3423564
   Chen TQ, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P785, DOI 10.1145/2939672.2939785
   Cheng J., 2016, LONG SHORT TERM MEMO, DOI DOI 10.18653/V1/D16-1053
   Corazza A, 2018, SOFTWARE QUAL J, V26, P751, DOI 10.1007/s11219-016-9347-1
   CORTES C, 1995, MACH LEARN, V20, P273, DOI 10.1007/BF00994018
   Dalla Palma S, 2022, IEEE T SOFTWARE ENG, V48, P2086, DOI 10.1109/TSE.2021.3051492
   Dalla Palma S, 2020, SOFTWAREX, V12, DOI 10.1016/j.softx.2020.100633
   Dalla Palma S, 2020, J SYST SOFTWARE, V170, DOI 10.1016/j.jss.2020.110726
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   Di Nitto E, 2020, INT SYMP SYMB NUMERI, P133, DOI 10.1109/SYNASC51798.2020.00031
   Dudchenko A, 2019, INT J ENV RES PUB HE, V16, DOI 10.3390/ijerph16224360
   Fakhoury S, 2020, EMPIR SOFTW ENG, V25, P2140, DOI 10.1007/s10664-019-09751-4
   Fakhoury S, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P602, DOI 10.1109/SANER.2018.8330265
   Fawaz HI, 2019, DATA MIN KNOWL DISC, V33, P917, DOI 10.1007/s10618-019-00619-1
   Folwer M, 1999, Refactoring: Improving the design of existing code
   Friedman M, 1940, ANN MATH STAT, V11, P86, DOI 10.1214/aoms/1177731944
   Fu W, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P49, DOI 10.1145/3106237.3106256
   Gisbrecht A, 2015, NEUROCOMPUTING, V147, P71, DOI 10.1016/j.neucom.2013.11.045
   Guerriero M, 2019, PROC IEEE INT CONF S, P580, DOI 10.1109/ICSME.2019.00092
   Guerrouj L, 2017, SOFTWARE QUAL J, V25, P641, DOI 10.1007/s11219-016-9318-6
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Hasan Mohammed Mehedi, 2020, LANGETI 2020: Proceedings of the 1st ACM SIGSOFT International Workshop on Languages and Tools for Next-Generation Testing, P7, DOI 10.1145/3416504.3424334
   Haykin S, 1998, Neural Networks: A Comprehensive Foundation
   HOLM S, 1979, SCAND J STAT, V6, P65
   James G, 2013, SPRINGER TEXTS STAT, V103, P15, DOI 10.1007/978-1-4614-7138-7_2
   Jiang YJ, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P45, DOI 10.1109/MSR.2015.12
   Joulin A, 2016, Arxiv, DOI [arXiv:1607.01759, DOI 10.48550/ARXIV.1607.01759]
   Kokuryo S, 2020, 2020 IEEE 20TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY, AND SECURITY (QRS 2020), P442, DOI 10.1109/QRS51102.2020.00063
   Kumara Indika, 2020, WIMS 2020: Proceedings of the 10th International Conference on Web Intelligence, Mining and Semantics, P63, DOI 10.1145/3405962.3405979
   Kumara I, 2021, J GRID COMPUT, V19, DOI 10.1007/s10723-021-09572-0
   Lau J. H., 2016, arXiv, DOI DOI 10.48550/ARXIV.1607.05368
   Lawrie D, 2007, INNOV SYST SOFTW ENG, V3, P303, DOI 10.1007/s11334-007-0031-2
   Li GJ, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P480, DOI [10.1109/SANER48275.2020.9054826, 10.1109/saner48275.2020.9054826]
   Li N, 2020, INFORM SOFTWARE TECH, V122, DOI 10.1016/j.infsof.2020.106287
   Liu K, 2019, 2019 IEEE ACM 41 IN, P1
   Matsugu M, 2003, NEURAL NETWORKS, V16, P555, DOI 10.1016/S0893-6080(03)00115-1
   Mikolov T., 2013, ADV NEURAL INFORM PR, V26, P3111, DOI DOI 10.5555/2999792.2999959
   Mikolov T, 2013, Arxiv, DOI [arXiv:1301.3781, 10.48550/arXiv.1301.3781]
   Minaee S, 2022, IEEE T PATTERN ANAL, V44, P3523, DOI 10.1109/TPAMI.2021.3059968
   Moore D.S., 2015, BASIC PRACTICE STAT, V7th
   Morris K., 2016, Infrastructure as Code: Managing Servers in the Cloud
   Omri S, 2020, P IEEE ACM 42 INT C, P209, DOI 10.1145/3387940.3391463
   Opdebeeck R, 2020, IEEE INT WORK C SO, P238, DOI 10.1109/SCAM51674.2020.00032
   Palma F, 2017, INT J COOP INF SYST, V26, DOI 10.1142/S0218843017420011
   Pennington J., 2014, P 2014 C EMP METH NA, P1532
   Pradel M, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3276517
   Le Q, 2014, PR MACH LEARN RES, V32, P1188
   Rahman A, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3408897
   Rahman A, 2020, EMPIR SOFTW ENG, V25, P3430, DOI 10.1007/s10664-020-09841-8
   Rahman A, 2019, PROC INT CONF SOFTW, P164, DOI 10.1109/ICSE.2019.00033
   Rahman A, 2019, INFORM SOFTWARE TECH, V112, P148, DOI 10.1016/j.infsof.2019.04.013
   Rahman A, 2019, INFORM SOFTWARE TECH, V108, P65, DOI 10.1016/j.infsof.2018.12.004
   Rahman A, 2018, IEEE INT CONF SOFTW, P34, DOI 10.1109/ICST.2018.00014
   Roberts K., 2016, P CLIN NAT LANG PROC, P54
   Sandobalin J, 2020, IEEE ACCESS, V8, P17734, DOI 10.1109/ACCESS.2020.2966597
   Schermann G, 2018, IEEE WORK CONF MIN S, P26, DOI 10.1145/3196398.3196456
   Schwarz J, 2018, 2018 11TH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY (QUATIC), P220, DOI 10.1109/QUATIC.2018.00040
   Shamim MSI, 2020, 2020 IEEE SECURE DEVELOPMENT (SECDEV 2020), P58, DOI 10.1109/SecDev45635.2020.00025
   Sharma T, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P189, DOI [10.1109/MSR.2016.028, 10.1145/2901739.2901761]
   Sotiropoulos T, 2020, PROC INT CONF SOFTW, P26, DOI 10.1145/3377811.3380384
   Spadini D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P908, DOI 10.1145/3236024.3264598
   Sulistya A, 2020, EMPIR SOFTW ENG, V25, P996, DOI 10.1007/s10664-019-09775-w
   Takang AA, 1996, J PROGRAM LANG, V4, P143
   Tin Kam Ho, 1995, Proceedings of the Third International Conference on Document Analysis and Recognition, P278, DOI 10.1109/ICDAR.1995.598994
   Ting Dai, 2020, SoCC '20: Proceedings of the 11th ACM Symposium on Cloud Computing, P358, DOI 10.1145/3419111.3421303
   van der Maaten L, 2014, J MACH LEARN RES, V15, P3221
   van der Maaten L, 2008, J MACH LEARN RES, V9, P2579
   Wang S, 2016, PROC INT CONF SOFTW, P297, DOI 10.1145/2884781.2884804
   Wattenberg M., 2016, Distill, V1, DOI DOI 10.23915/DISTILL.00002
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
NR 75
TC 6
Z9 6
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2022
VL 27
IS 7
AR 178
DI 10.1007/s10664-022-10215-5
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4V4SY
UT WOS:000859469500016
PM 36159893
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Vidaurre, AC
   López, EC
   Alcocer, JPS
   Bergel, A
AF Cota Vidaurre, Andreina
   Cusi Lopez, Evelyn
   Sandoval Alcocer, Juan Pablo
   Bergel, Alexandre
TI TestEvoViz: visualizing genetically-based test coverage evolution
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Automated test generation; Genetic algorithms; Software visualization;
   Unit testing
AB Genetic algorithms are commonly employed to generate unit tests. Automatically generated unit tests are known to be an important asset to identify software defects and define oracles. However, configuring the test generation is a tedious activity for a practitioner due to the inherent difficulty to adequately tuning the generation process. Furthermore, evolution processes are most of the time compared solely using the final results, while discarding all the details of the iterations that are themselves important for an adequate tuning. This paper presents TestEvoViz, a visual technique to introspect genetic algorithm-based test generation processes. TestEvoViz offers the practitioners a visual support to expose the process and decisions made by the generation algorithm. We first present a number of case studies to illustrate the expressiveness of TestEvoViz. We then conducted a user study involving 22 participants including researchers, students and professional software engineers. Participants use our visual approach to analyze, compare and tune test generation algorithm executions. All participants were able to complete the tasks. Our findings show that participants focus more on the visual components that depict information about the test similarity, individuals coverage increments, and the final generation code coverage.
C1 [Cota Vidaurre, Andreina; Cusi Lopez, Evelyn] SEMANTICS SRL, Cochabamba, Bolivia.
   [Cota Vidaurre, Andreina; Sandoval Alcocer, Juan Pablo] Pontificia Univ Catolica Chile, Sch Engn, Dept Comp Sci, Santiago, Chile.
   [Bergel, Alexandre] Univ Chile, Santiago, Chile.
   [Bergel, Alexandre] RelationalAI, Bern, Switzerland.
C3 Pontificia Universidad Catolica de Chile; Universidad de Chile
RP Alcocer, JPS (corresponding author), Pontificia Univ Catolica Chile, Sch Engn, Dept Comp Sci, Santiago, Chile.
EM andycotvy@gmail.com; cusi.evelyn@gmail.com;
   juanpablo.sandoval@ing.puc.cl; alexandre.bergel@me.com
RI Sandoval Alcocer, Juan Pablo/CAA-0465-2022
OI Sandoval Alcocer, Juan Pablo/0000-0002-8335-4351; Cota Vidaurre,
   Andreina/0000-0002-8699-4522
FU ANID FONDECYT Iniciacion Folio [11220885]; FONDECYT Regular project
   [1200067];  [4800054170];  [4800043946]
FX Juan Pablo Sandoval Alcocer thanks ANID FONDECYT Iniciacion Folio
   11220885 for supporting this article. Alexandre Bergel is grateful to
   the FONDECYT Regular project 1200067 for having partially sponsored the
   work presented in this article. We are deeply grateful to Lam Research
   (4800054170 and 4800043946). We thank Renato Cerro for his help
   reviewing an early draft of the manuscript.
CR Alshahwan N, 2012, PROC INT CONF SOFTW, P1345, DOI 10.1109/ICSE.2012.6227083
   [Anonymous], 2013, P 2013 INT S SOFTW T, DOI DOI 10.1145/2483760.2483774
   Arcuri A, 2014, LECT NOTES COMPUT SC, V8636, P1
   Arcuri A, 2011, LECT NOTES COMPUT SC, V6956, P33, DOI 10.1007/978-3-642-23716-4_6
   Beck F, 2017, COMPUT GRAPH FORUM, V36, P133, DOI 10.1111/cgf.12791
   Beck F, 2012, S VIS LANG HUM CEN C, P185, DOI 10.1109/VLHCC.2012.6344514
   Bergel A, 2010, 2014 EXPT SOFTWARE T, V79, P86
   Bergel A, 2012, SOFTWARE PRACT EXPER, V42, P1165, DOI 10.1002/spe.1120
   Brooke J, 1996, USABILITY EVALUATION, V189, P4
   Campos J, 2018, INFORM SOFTWARE TECH, V104, P207, DOI 10.1016/j.infsof.2018.08.010
   Vidaure AC, 2020, EIGHTH IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT 2020), P1, DOI 10.1109/VISSOFT51673.2020.00005
   Danglot B, 2019, J SYST SOFTWARE, V157, DOI 10.1016/j.jss.2019.110398
   Farooq Humera, 2012, International Journal of Software Science and Computational Intelligence, V4, P34, DOI 10.4018/jssci.2012010102
   Farooq H, 2014, PROCEDIA COMPUT SCI, V32, P45, DOI 10.1016/j.procs.2014.05.396
   Fontes A, 2021, AUTOMATED SUPPORT UN
   Fraser G., 2011, Proceedings of the 11th International Conference on Quality Software (QSIC 2011), P31, DOI 10.1109/QSIC.2011.19
   Fraser G, 2013, IEEE T SOFTWARE ENG, V39, P276, DOI 10.1109/TSE.2012.14
   Fraser G, 2012, IEEE T SOFTWARE ENG, V38, P278, DOI 10.1109/TSE.2011.93
   Fraser G, 2009, INT CONF QUAL SOFTW, P211, DOI 10.1109/QSIC.2009.36
   Hart E, 2001, IEEE T EVOLUT COMPUT, V5, P335, DOI 10.1109/4235.942528
   Holten D, 2006, IEEE T VIS COMPUT GR, V12, P741, DOI 10.1109/TVCG.2006.147
   Ito S, 2008, LECT NOTES COMPUT SC, V4985, P444
   Lanza M, 2003, IEEE T SOFTWARE ENG, V29, P782, DOI 10.1109/TSE.2003.1232284
   Lanza M, 2001, INT WORKSH PRINC SOF, P09
   Luro FL, 2019, ETRA 2019: 2019 ACM SYMPOSIUM ON EYE TRACKING RESEARCH & APPLICATIONS, DOI 10.1145/3317956.3318153
   Murugesan S, 2020, INFORM VISUAL, V19, P96, DOI 10.1177/1473871619882019
   Pacheco C., 2007, OOPSLA 2007 COMPANIO, P815
   Panichella A, 2020, PROC IEEE INT CONF S, P523, DOI 10.1109/ICSME46990.2020.00056
   Panichella A, 2018, IEEE T SOFTWARE ENG, V44, P122, DOI 10.1109/TSE.2017.2663435
   Romero G., 2002, Parallel Problem Solving from Nature - PPSN VII. 7th International Conference. Proceedings (Lecture Notes in Computer Science Vol.2439), P442
   Sandoval Alcocer J.P., 2013, 2013 1 IEEE WORK C S, P1, DOI [DOI 10.1109/VISSOFT.2013.6650523, 10.1109/ICTON.2013.6602680, DOI 10.1109/ICTON.2013.6602680]
   Alcocer JPS, 2019, 2019 SEVENTH IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT), P28, DOI 10.1109/VISSOFT.2019.00012
   Alcocer JPS, 2019, 2019 SEVENTH IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT), P1, DOI 10.1109/VISSOFT.2019.00009
   Shamshiri JMS, 2018, RANDOM EVOLUTIONARY
   Tomida Y, 2019, 2019 SEVENTH IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT), P23, DOI 10.1109/VISSOFT.2019.00011
   Zeller A., 2019, The fuzzing book
NR 36
TC 0
Z9 0
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2022
VL 27
IS 7
AR 184
DI 10.1007/s10664-022-10220-8
PG 47
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4Y3XW
UT WOS:000861462900001
DA 2024-07-18
ER

PT J
AU Höppner, S
   Haas, Y
   Tichy, M
   Juhnke, K
AF Hoeppner, Stefan
   Haas, Yves
   Tichy, Matthias
   Juhnke, Katharina
TI Advantages and disadvantages of (dedicated) model transformation
   languages A qualitative interview study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Interview; Interview Study; Model Transformation Language; DSL; Model
   Transformation; MDSE; advantages; disadvantages; Qualitative Analysis
ID DRIVEN ENGINEERING PRACTICES; EXPERIENCES; INDUSTRY; SUCCESS
AB Context Model driven development envisages the use of model transformations to evolve models. Model transformation languages, developed for this task, are touted with many benefits over general purpose programming languages. However, a large number of these claims have not yet been substantiated. They are also made without the context necessary to be able to critically assess their merit or built meaningful empirical studies around them. Objective The objective of our work is to elicit the reasoning, influences and background knowledge that lead people to assume benefits or drawbacks of model transformation languages. Method We conducted a large-scale interview study involving 56 participants from research and industry. Interviewees were presented with claims about model transformation languages and were asked to provide reasons for their assessment thereof. We qualitatively analysed the responses to find factors that influence the properties of model transformation languages as well as explanations as to how exactly they do so. Results Our interviews show, that general purpose expressiveness of GPLs, domain specific capabilities of MTLs as well as tooling all have strong influences on how people view properties of model transformation languages. Moreover, the Choice of MTL, the Use Case for which a transformation should be developed as well as the Skill s of involved stakeholders have a moderating effect on the influences, by changing the context to consider. Conclusion There is a broad body of experience, that suggests positive and negative influences for properties of MTLs. Our data suggests, that much needs to be done in order to convey the viability of model transformation languages. Efforts to provide more empirical substance need to be undergone and lacklustre language capabilities and tooling need to be improved upon. We suggest several approaches for this that can be based on the results of the presented study.
C1 [Hoeppner, Stefan; Haas, Yves; Tichy, Matthias; Juhnke, Katharina] Ulm Univ, James Franck Ring 1, D-89081 Ulm, Germany.
C3 Ulm University
RP Höppner, S (corresponding author), Ulm Univ, James Franck Ring 1, D-89081 Ulm, Germany.
EM stefan.hoeppner@uni-ulm.de; yves.haas@uni-ulm.de;
   matthias.tichy@uni-ulm.de; katharina.juhnke@uni-ulm.de
OI Hoppner, Stefan/0000-0001-7028-131X
FU Projekt DEAL
FX Open Access funding enabled and organized by Projekt DEAL.
CR Adams W. C., 2015, Handbook of Practical Program Evaluation, P492, DOI DOI 10.1002/9781119171386.CH19
   Akdur D, 2018, J SYST ARCHITECT, V91, P62, DOI 10.1016/j.sysarc.2018.09.007
   Anjorin A, 2017, TRANSFORMATION TOOL, P15
   [Anonymous], MICROSOFT LANGUAGE S
   [Anonymous], 2006, COMP 21 ACM SIGPLAN, DOI DOI 10.1145/1176617.1176691
   [Anonymous], Eclipse Foundation Eclipse Ignite|IoT
   [Anonymous], 2008, Marketing ZFP
   [Anonymous], 2001, Model driven architecture (mda)
   Arendt T, 2010, HENSHIN ADV CONCEPTS, DOI [10.1007/978-3-642-16145-2_9, DOI 10.1007/978-3-642-16145-2_9]
   Balogh A., 2006, Applied Computing 2006. 21st Annual ACM Symposium on Applied Computing, P1280, DOI 10.1145/1141277.1141575
   Brambilla M., 2012, Model-Driven Software Engineering in Practice, DOI [DOI 10.1007/978-3-031-02549-5, 10.2200/S00441ED1V01Y201208SWE001, DOI 10.2200/S00441ED1V01Y201208SWE001]
   Brown AW, 2005, MODEL-DRIVEN SOFTWARE DEVELOPMENT, P1, DOI 10.1007/3-540-28554-7_1
   Burgueño L, 2019, J OBJECT TECHNOL, V18, DOI 10.5381/jot.2019.18.3.a7
   Charmaz K., 2014, CONSTRUCTING GROUNDE
   Cuadrado JS, 2006, RUBYTL PRACTICAL EXT, DOI [10.1007/11787044_13, DOI 10.1007/11787044_13]
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   Demuth Birgit., 2009, Proceedings of the Russian-German Workshop Innovation Information Technologies: theory and practice, P687
   Dieste O, 2017, EMPIR SOFTW ENG, V22, P2457, DOI 10.1007/s10664-016-9471-3
   Dosovitskiy A., 2017, P 1 ANN C ROB LEARN, P1, DOI DOI 10.48550/ARXIV.1711.03938
   Ege F, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2019), P326, DOI 10.1109/MODELS-C.2019.00051
   George Lars, 2012, Theory and Practice of Model Transformations. Proceedings 5th International Conference, ICMT 2012, P160, DOI 10.1007/978-3-642-30476-7_11
   Gerpheide CM, 2016, SOFTWARE QUAL J, V24, P797, DOI 10.1007/s11219-015-9280-8
   Götz S, 2021, PROCEEDINGS OF THE 9TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT (MODELSWARD), P122, DOI 10.5220/0010340801220135
   Götz S, 2021, SOFTW SYST MODEL, V20, P469, DOI 10.1007/s10270-020-00815-4
   Groner R., 2020, PROC 23 ACMIEEE INT, P308
   Hebig R, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P445, DOI 10.1145/3236024.3236046
   Hermans F, 2009, LECT NOTES COMPUT SC, V5795, P423, DOI 10.1007/978-3-642-04425-0_33
   Hibberd M, 2007, LECT NOTES COMPUT SC, V4735, P589
   Hinkel G, 2016, NMF MODELING FRAMEWO
   Hinkel G, 2019, SOFTW SYST MODEL, V18, P249, DOI 10.1007/s10270-017-0617-6
   Hinkel G, 2019, SOFTW SYST MODEL, V18, P129, DOI 10.1007/s10270-017-0578-9
   Höppner S, 2022, SOFTW SYST MODEL, V21, P805, DOI 10.1007/s10270-021-00937-3
   Horn Tassilo, 2013, Theory and Practice of Model Transformations. 6th International Conference, ICMT 2013. Proceedings: LNCS 7909, P56, DOI 10.1007/978-3-642-38883-5_7
   Hove SE, 2005, 2005 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS (METRICS), P201
   Hutchinson J, 2014, SCI COMPUT PROGRAM, V89, P144, DOI 10.1016/j.scico.2013.03.017
   Hutchinson J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P633, DOI 10.1145/1985793.1985882
   Hutchinson J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P471, DOI 10.1145/1985793.1985858
   Johannes J, 2009, LECT NOTES COMPUT SC, V5795, P546, DOI 10.1007/978-3-642-04425-0_41
   Jonkers H, 2006, 6 OOPSLA WORKSH DOM, P10
   Juhnke K, 2020, CHALLENGES TEST CASE, DOI [10.1007/s11219-020-09523-0, DOI 10.1007/S11219-020-09523-0]
   Kahani N, 2019, SOFTW SYST MODEL, V18, P2361, DOI 10.1007/s10270-018-0665-6
   Kallio H, 2016, J ADV NURS, V72, P2954, DOI 10.1111/jan.13031
   Kernighan BW., 1983, UNIX PROGRAMMING ENV
   Kolovos DS, 2008, LECT NOTES COMPUT SC, V5063, P46, DOI 10.1007/978-3-540-69927-9_4
   Kramer ME, 2016, CEUR WORKSHOP P CEUR, V1805, P11
   Krause C, 2014, LECT NOTES COMPUT SC, V8411, P325
   Kuckartz U., 2014, Qualitative text analysis: A guide to methods, practice using software, P65, DOI [10.4135/9781446288719.n4, DOI 10.4135/9781446288719]
   Lawley M, 2007, APPLIED COMPUTING 2007, VOL 1 AND 2, P971, DOI 10.1145/1244002.1244216
   Liebel G, 2018, REQUIR ENG, V23, P145, DOI 10.1007/s00766-016-0261-7
   Liepins R, 2012, P 12 WORKSH OCL TEXT, DOI [10.1145/2428516.2428522, DOI 10.1145/2428516.2428522]
   Malavolta I, 2010, IEEE T SOFTWARE ENG, V36, P119, DOI 10.1109/TSE.2009.51
   Mayring P., 1994, Qualitative Inhaltsanalyse
   Mens T, 2006, ELECTRON NOTES THEOR, V152, P125, DOI 10.1016/j.entcs.2005.10.021
   Metzger A, 2005, MODEL-DRIVEN SOFTWARE DEVELOPMENT, P19
   Meyer MA, 1990, NUREGCR5424
   Mohagheghi P, 2008, LECT NOTES COMPUT SC, V5095, P432, DOI 10.1007/978-3-540-69100-6_31
   Mohagheghi P, 2013, SOFTW SYST MODEL, V12, P619, DOI 10.1007/s10270-011-0219-7
   Mohagheghi P, 2013, EMPIR SOFTW ENG, V18, P89, DOI 10.1007/s10664-012-9196-x
   Object Management Group (OMG), 2016, Meta Object Facility (MOF) 2.0-Query/View/Transformation Specification
   OMG, 2016, MET OBJ FAC MOF
   OMG, 2014, OBJ CONTR LANG
   Pautasso C, 2021, IEEE SOFTWARE, V38, P119, DOI 10.1109/MS.2020.3041522
   Pietron Jakob, 2018, P MODELS 2018 WORKSH, P336
   Raggett D., 1999, W3C recommendation, P24
   Rainer A, 2021, Arxiv, DOI arXiv:2112.14186
   SAEMobilus, 2004, Architecture Analysis and Design Language (AADL)
   Samiee A, 2018, PROCEEDINGS OF THE 2018 18TH INTERNATIONAL CONFERENCE ON MECHATRONICS - MECHATRONIKA (ME), P9
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Selic B, 2003, IEEE SOFTWARE, V20, P19, DOI 10.1109/MS.2003.1231146
   Sendall S, 2003, IEEE SOFTWARE, V20, P42, DOI 10.1109/MS.2003.1231150
   Sprinkle J, 2009, IEEE SOFTWARE, V26, P15, DOI 10.1109/MS.2009.92
   Staron M, 2006, LECT NOTES COMPUT SC, V4199, P57
   Stegmaier M, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2019), P405, DOI 10.1109/MODELS-C.2019.00063
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Stol KJ, 2016, PROC INT CONF SOFTW, P120, DOI 10.1145/2884781.2884833
   Struber D, 2016, HUFAMO MODELS, P27
   Tehrani SY, 2016, LECT NOTES COMPUT SC, V9765, P123, DOI 10.1007/978-3-319-42064-6_9
   Troya J, 2022, ACM COMPUT SURV, DOI [DOI 10.1145/3523056, 10.1145/3523056]
   van Deursen A., 2002, Journal of Computing and Information Technology - CIT, V10, P1, DOI 10.2498/cit.2002.01.01
   Vollstedt M, 2019, ICME-13 MONOGR, P81, DOI 10.1007/978-3-030-15636-7_4
   Weiber R, 2021, Strukturgleichungsmodellierung: Eine anwendungsorientierte Einfuhrung in die Kausalanalyse mit Hilfe von AMOS, SmartPLS und SPSS, V3rd, DOI DOI 10.1007/978-3-658-32660-9
   Whittle J, 2013, LECT NOTES COMPUT SC, V8107, P1, DOI 10.1007/978-3-642-41533-3_1
   Wimmer M, 2009, LECT NOTES COMPUT SC, V5795, P727, DOI 10.1007/978-3-642-04425-0_59
NR 83
TC 8
Z9 8
U1 1
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2022
VL 27
IS 6
AR 159
DI 10.1007/s10664-022-10194-7
PG 71
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 3W0ZK
UT WOS:000842083700002
OA Green Published, hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Michelon, GK
   Obermann, D
   Assunçao, WKG
   Linsbauer, L
   Grünbacher, P
   Fischer, S
   Lopez-Herrejon, RE
   Egyed, A
AF Michelon, Gabriela Karoline
   Obermann, David
   Assuncao, Wesley K. G.
   Linsbauer, Lukas
   Grunbacher, Paul
   Fischer, Stefan
   Lopez-Herrejon, Roberto E.
   Egyed, Alexander
TI Evolving software system families in space and time with feature
   revisions
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Feature location; Feature revisions; Variation control system;
   Repository mining
ID CODE; IMPACT; MODELS
AB Software companies commonly develop and maintain variants of systems, with different feature combinations for different customers. Thus, they must cope with variability in space. Software companies further must cope with variability in time, when updating system variants by revising existing software features. Inevitably, variants evolve orthogonally along these two dimensions, resulting in challenges for software maintenance. Our work addresses this challenge with ECSEST (Extraction and Composition for Systems Evolving in Space and Time), an approach for locating feature revisions and composing variants with different feature revisions. We evaluated ECSEST using feature revisions and variants from six highly configurable open source systems. To assess the correctness of our approach, we compared the artifacts of input variants with the artifacts from the corresponding composed variants based on the implementation of the extracted features. The extracted traces allowed composing variants with 99-100% precision, as well as with 97-99% average recall. Regarding the composition of variants with new configurations, our approach can combine different feature revisions with 99% precision and recall on average. Additionally, our approach retrieves hints when composing new configurations, which are useful to find artifacts that may have to be added or removed for completing a product. The hints help to understand possible feature interactions or dependencies. The average time to locate feature revisions ranged from 25 to 250 seconds, whereas the average time for composing a variant was 18 seconds. Therefore, our experiments demonstrate that ECSEST is feasible and effective.
C1 [Michelon, Gabriela Karoline] Johannes Kepler Univ Linz, LIT Secure & Correct Syst Lab, Inst Software Syst Engn, Linz, Austria.
   [Obermann, David; Assuncao, Wesley K. G.; Grunbacher, Paul; Egyed, Alexander] Johannes Kepler Univ Linz, Inst Software Syst Engn, Linz, Austria.
   [Assuncao, Wesley K. G.] Pontifical Catholic Univ Rio de Janeiro, Rio De Janeiro, Brazil.
   [Linsbauer, Lukas] Tech Univ Carolo Wilhelmina Braunschweig, Inst Software Engn & Automot Informat, Braunschweig, Germany.
   [Fischer, Stefan] Software Competence Ctr Hagenberg GmbH, Hagenberg, Austria.
   [Lopez-Herrejon, Roberto E.] Univ Quebec, Ecole Technol Super ETS, Montreal, PQ H3C 1K3, Canada.
C3 Johannes Kepler University Linz; Johannes Kepler University Linz;
   Pontificia Universidade Catolica do Rio de Janeiro; Braunschweig
   University of Technology; Softwarepark Hagenberg; University of Quebec;
   Ecole de Technologie Superieure - Canada; University of Quebec Montreal
RP Michelon, GK (corresponding author), Johannes Kepler Univ Linz, LIT Secure & Correct Syst Lab, Inst Software Syst Engn, Linz, Austria.
EM gabriela.michelon@jku.at
RI Egyed, Alexander/E-2632-2017; Assuncao, Wesley Klewerton
   Guez/AAA-8331-2020; Fischer, Stefan/JXL-6608-2024
OI Assuncao, Wesley Klewerton Guez/0000-0002-7557-9091; Michelon, Gabriela
   Karoline/0000-0002-9638-8569
FU Johannes Kepler University Linz
FX Open access funding provided by Johannes Kepler University Linz.
CR Ananieva, 2020, INT SYST SOFTW PROD, DOI DOI 10.1145/3382025.3414955
   Angerer F, 2019, AUTOMAT SOFTW ENG, V26, P417, DOI 10.1007/s10515-019-00253-7
   Apel S., 2013, Feature-Oriented Software Development: Concepts and Implementation
   Assuncao W.K.G., 2014, 18 INT SOFTWARE PROD, V2, P52, DOI [/10.1145/2647908.2655967, DOI 10.1145/2647908.2655967]
   BENNETT K, 2000, P C FUT SOFTW ENG
   Berger T, 2020, EMPIR SOFTW ENG, V25, P1755, DOI 10.1007/s10664-019-09787-6
   Berger T, 2013, IEEE T SOFTWARE ENG, V39, P1611, DOI 10.1109/TSE.2013.34
   Berger T, 2010, LECT NOTES COMPUT SC, V6287, P498, DOI 10.1007/978-3-642-15579-6_48
   Berger Thorsten, 2019, DAGSTUHL REPORTS, V9, P1, DOI 10.4230/DagRep.9.5.1
   Clements P., 2002, Software product lines
   Collins-Sussman B., 2004, VERSION CONTROL SUBV
   Conradi R, 1998, ACM COMPUT SURV, V30, P232, DOI 10.1145/280277.280280
   Cruz D, 2019, PROCEEDINGS OF THE 13TH INTERNATIONAL WORKSHOP ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS (VAMOS '19), DOI 10.1145/3302333.3302343
   Deorowicz S, 2014, MAN MACHINE INTERACT
   Dit B, 2013, J SOFTW-EVOL PROC, V25, P53, DOI 10.1002/smr.567
   Estublier J, 2000, C FUT SOFTW ENG ICSE, DOI [10.1145/336512.336576, DOI 10.1145/336512.336576]
   Feichtinger K, 2021, J COMPUT LANG, V63, DOI 10.1016/j.cola.2021.101034
   Fischer S, 2016, IEEE INT WORK C SO, P197, DOI 10.1109/SCAM.2016.16
   Fischer S, 2015, 2015 IEEE/ACM 37th IEEE International Conference on Software Engineering, Vol 2, P665, DOI 10.1109/ICSE.2015.218
   Fischer S, 2014, PROC IEEE INT CONF S, P391, DOI 10.1109/ICSME.2014.61
   Fischer Stefan, 2019, P 23 INT SYST SOFTW, VA, P1
   Gargantini A, 2016, LECT NOTES COMPUT SC, V9962, P49, DOI 10.1007/978-3-319-47106-8_4
   GARNAUT R, 1992, ECONOMIC REFORM AND INTERNATIONALISATION: CHINA AND THE PACIFIC REGION, P1
   Ghabach E., 2018, P 2018 12 INT C RES, P1
   Ha H, 2019, PROC IEEE INT CONF S, P470, DOI 10.1109/ICSME.2019.00080
   Herzig K, 2016, EMPIR SOFTW ENG, V21, P303, DOI 10.1007/s10664-015-9376-6
   Hinterreiter D, 2021, 14 INT C QUALITY INF
   Hinterreiter D, 2020, CONCURRENT ENG-RES A, V28, P265, DOI 10.1177/1063293X20958930
   Hinterreiter D, 2019, PROCEEDINGS OF THE 18TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING: CONCEPTS AND EXPERIENCES (GPCE '19), P115, DOI 10.1145/3357765.3359515
   Jia Liu, 2006, 28th International Conference on Software Engineering Proceedings, P112
   Krüger J, 2019, J SYST SOFTWARE, V152, P239, DOI 10.1016/j.jss.2019.01.057
   Krüger J, 2017, ACM INT CONF PR SER, P105, DOI 10.1145/3168365.3168371
   Linsbauer L, 2013, SPLC
   Linsbauer L, 2021, J SYST SOFTWARE, V171, DOI 10.1016/j.jss.2020.110796
   Linsbauer L, 2017, PROCEEDINGS OF THE 16TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING: CONCEPTS AND EXPERIENCES (GPCE'17), P49, DOI 10.1145/3136040.3136054
   Linsbauer L, 2017, SOFTW SYST MODEL, V16, P1179, DOI 10.1007/s10270-015-0512-y
   Linsbauer L, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P803, DOI 10.1145/2889160.2889262
   Linsbauer L, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL SYMPOSIUM ON SOFTWARE AND SYSTEMS TRACEABILITY, P57, DOI 10.1109/SST.2015.16
   MacKay Stephen A., 1995, ICSE SCM 4 SCM 5 WOR
   Martinez J., 2016, THESIS PIERRE MARIE
   Martinez J, 2018, INFORM SOFTWARE TECH, V104, P46, DOI 10.1016/j.infsof.2018.07.005
   Martinez Jabier, 2015, P 19 INT C SOFTW PRO, P101, DOI DOI 10.1145/2791060.2791086
   McGovern James., 2003, A Practical Guide to Enterprise Architecture
   Medeiros F, 2015, DAGSTUHL ARTIFACTS S, V1, P07, DOI [10.4230/DARTS.1.1.7, DOI 10.4230/DARTS.1.1.7]
   Medeiros F, 2018, IEEE T SOFTWARE ENG, V44, P453, DOI 10.1109/TSE.2017.2688333
   Melo J, 2016, PROC INT CONF SOFTW, P679, DOI 10.1145/2884781.2884831
   Michelon Gabriela K., 2021, GPCE 2021: Proceedings of the 20th ACM SIGPLAN International Conference on Generative Programming: Concepts and Experiences, P2, DOI 10.1145/3486609.3487195
   Michelon Gabriela Karoline, 2020, SPLC '20: Proceedings of the 24th ACM International Systems and Software Product Line Conference - Volume B on ZZZ, P74, DOI 10.1145/3382026.3425776
   Michelon GK, 2021, SPLC '21: PROCEEDINGS OF THE 25TH ACM INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL A, DOI 10.1145/3461001.3473065
   Michelon GK, 2021, SPLC '21: PROCEEDINGS OF THE 25TH ACM INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL A, DOI 10.1145/3461001.3461660
   Michelon GK, 2020, SPLC'19: PROCEEDINGS OF THE 23RD INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL A, P93, DOI 10.1145/3336294.3342360
   Michelon Gabriela Karoline, 2020, PROC INT SYSTEMS SOF
   Nassif M, 2017, PROC IEEE INT CONF S, P261, DOI 10.1109/ICSME.2017.64
   Passos L., 2015, MODULARITY
   Pereira JA, 2020, PROCEEDINGS OF THE ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE'20), P277, DOI 10.1145/3358960.3379137
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Pohl K., 2018, SOFTWARE PRODUCT LIN, P185, DOI [10.1007/978-3-319-73897-0_11, DOI 10.1007/978-3-319-73897-0_11]
   Rabiser R, 2012, IEEE INT CONF AUTOM, P110, DOI 10.1145/2351676.2351693
   Rubin J., 2013, Domain Engineering, P29, DOI DOI 10.1007/978-3-642-36654-3
   Schwäger F, 2019, SOFTW SYST MODEL, V18, P3373, DOI 10.1007/s10270-019-00722-3
   Schwägerl F, 2016, IEEE INT CONF AUTOM, P822, DOI 10.1145/2970276.2970288
   Schwagerl Felix, 2018, Ph.D. Dissertation
   Seidl Christoph., 2014, P 8 INT WORKSHOP VAR, V6, P1, DOI [DOI 10.1145/2556624.2556625, 10.1145/2556624.2556625]
   Seidl Christoph., 2014, MODELLIERUNG 2014, VP-225, P81
   Strüber D, 2020, SPLC'19: PROCEEDINGS OF THE 23RD INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL A, P177, DOI 10.1145/3336294.3336302
   Ting K.M., 2010, ENCY MACHINE LEARNIN, DOI 10.1007/978-0-387-30164-8
   Vale T, 2019, EMPIR SOFTW ENG, V24, P1328, DOI 10.1007/s10664-018-9652-3
   Wohlin C., 2000, Experimentation in Software Engineering: An Introduction, V1, DOI DOI 10.1007/978-1-4615-4625-2
NR 68
TC 5
Z9 5
U1 0
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2022
VL 27
IS 5
AR 112
DI 10.1007/s10664-021-10108-z
PG 54
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 1U7GT
UT WOS:000805577100011
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Bjarnason, E
   Bern, BG
   Svedberg, L
AF Bjarnason, Elizabeth
   Gislason Bern, Baldvin
   Svedberg, Linda
TI Inter-team communication in large-scale co-located software engineering:
   a case study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Communication; Software engineering; Distance; Case study; Agile
ID AGILE DEVELOPMENT; COORDINATION; KNOWLEDGE; DIVERSITY; WORK
AB Large-scale software engineering is a collaborative effort where teams need to communicate to develop software products. Managers face the challenge of how to organise work to facilitate necessary communication between teams and individuals. This includes a range of decisions from distributing work over teams located in multiple buildings and sites, through work processes and tools for coordinating work, to softer issues including ensuring well-functioning teams. In this case study, we focus on inter-team communication by considering geographical, cognitive and psychological distances between teams, and factors and strategies that can affect this communication. Data was collected for ten test teams within a large development organisation, in two main phases: (1) measuring cognitive and psychological distance between teams using interactive posters, and (2) five focus group sessions where the obtained distance measurements were discussed. We present ten factors and five strategies, and how these relate to inter-team communication. We see three types of arenas that facilitate inter-team communication, namely physical, virtual and organisational arenas. Our findings can support managers in assessing and improving communication within large development organisations. In addition, the findings can provide insights into factors that may explain the challenges of scaling development organisations, in particular agile organisations that place a large emphasis on direct communication over written documentation.
C1 [Bjarnason, Elizabeth] Lund Univ, Software Engn, Lund, Sweden.
   [Gislason Bern, Baldvin; Svedberg, Linda] Axis Commun, Lund, Sweden.
C3 Lund University
RP Bjarnason, E (corresponding author), Lund Univ, Software Engn, Lund, Sweden.
EM elizabeth.bjarnason@cs.lth.se; baldvin.gislason.bern@axis.com;
   linda.svedberg@axis.com
OI Bjarnason, Elizabeth/0000-0001-9070-0008
FU VINNOVA; Axis Communications
FX We appreciate and thank the test engineers at Axis who were involved in
   this study, in responding to the interactive posters and participating
   in the focus groups. This work was funded by VINNOVA (ease.cs.lth.se)
   and Axis Communications.
CR AMABILE TM, 1988, RES ORGAN BEHAV, V10, P123
   Nguyen-Duc A, 2014, INT CONF GLOBAL SOFT, P125, DOI 10.1109/ICGSE.2014.27
   Nguyen-Duc A, 2013, 2013 IEEE 8TH INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING (ICGSE 2013), P216, DOI 10.1109/ICGSE.2013.35
   [Anonymous], 1978, INT AUT TEST C AUTOT, DOI DOI 10.1109/AUTEST.1978.764370
   Avritzer A, 2010, J SYST SOFTWARE, V83, P1881, DOI 10.1016/j.jss.2010.05.070
   Bass JM, 2019, LECT NOTES BUS INF P, V364, P75, DOI 10.1007/978-3-030-30126-2_9
   Bass M, 2009, INT CONF GLOBAL SOFT, P31, DOI 10.1109/ICGSE.2009.11
   Begel A, 2009, 2009 ICSE WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING, P1, DOI 10.1109/CHASE.2009.5071401
   Bick S, 2018, IEEE T SOFTWARE ENG, V44, P932, DOI 10.1109/TSE.2017.2730870
   Bjarnason E, 2019, EMPIR SOFTW ENG, V24, P2364, DOI 10.1007/s10664-019-09698-6
   Bjarnason E, 2018, 2018 IEEE/ACM 11TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P1, DOI 10.1145/3195836.3195846
   Bjarnason E, 2017, REQUIR ENG, V22, P1, DOI 10.1007/s00766-015-0233-3
   Bjarnason E, 2016, INFORM SOFTWARE TECH, V70, P204, DOI 10.1016/j.infsof.2015.05.004
   Bjarnason E, 2011, INT REQUIR ENG CONF, P37, DOI 10.1109/RE.2011.6051639
   Bjornson FO, 2018, LECT NOTES BUS INF P, V314, P216, DOI 10.1007/978-3-319-91602-6_15
   BROWN SL, 1995, ACAD MANAGE REV, V20, P343, DOI 10.2307/258850
   Broy M., 2002, SOFTWARE PIONEERS CO, P411, DOI [10.1007/978-3-642-59412-Q26, DOI 10.1007/978-3-642-59412-Q26]
   Cataldo M, 2013, IEEE T SOFTWARE ENG, V39, P343, DOI 10.1109/TSE.2012.32
   Cataldo M, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P2
   Catolino G, 2020, IEEE SOFTWARE, V37, P10, DOI 10.1109/MS.2019.2944594
   CONWAY ME, 1968, DATAMATION, V14, P28
   CURTIS B, 1988, COMMUN ACM, V31, P1268, DOI 10.1145/50087.50089
   Damian D, 2001, APSEC 2001: EIGHTH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P149, DOI 10.1109/APSEC.2001.991471
   Damian D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P442, DOI 10.1109/ICSE.2013.6606590
   de Vaan M, 2015, AM J SOCIOL, V120, P1144, DOI 10.1086/681213
   Diebold P., 2017, P 21 INT C EV ASS SO, P230
   Dingsoyr T, 2018, PROJ MANAG J, V49, P64, DOI 10.1177/8756972818798980
   Gerosa M. A., 2003, Journal of Interactive Learning Research, V14, P315
   Harrison DA, 1998, ACAD MANAGE J, V41, P96, DOI 10.5465/256901
   Herbsleb JD, 1999, IEEE SOFTWARE, V16, P63, DOI 10.1109/52.795103
   Herbsleb JD, 2001, IEEE SOFTWARE, V18, P16, DOI 10.1109/52.914732
   Karlsson L, 2007, INFORM SOFTWARE TECH, V49, P588, DOI 10.1016/j.infsof.2007.02.008
   Kiani ZUR, 2013, 2013 IEEE 8TH INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING (ICGSE 2013), P71, DOI 10.1109/ICGSE.2013.17
   KRAUT RE, 1995, COMMUN ACM, V38, P69, DOI 10.1145/203330.203345
   Mallardo T., 2007, IGSE WORKSH GLOB REQ
   Marczak S, 2008, INT REQUIR ENG CONF, P53, DOI 10.1109/RE.2008.26
   Nundlall Chitra, 2021, International Journal of Information Technology, V13, P321, DOI 10.1007/s41870-020-00543-4
   Nyfjord J, 2014, LECT NOTES BUS INF P, V199, P58
   Paasivaara M, 2014, LECT NOTES BUS INF P, V199, P73
   Paasivaara M, 2012, INT SYMP EMP SOFTWAR, P235, DOI 10.1145/2372251.2372294
   Rahy Scarlet, 2019, Information Systems. 15th European, Mediterranean, and Middle Eastern Conference (EMCIS 2018). Proceedings. Lecture Notes in Business Information Processing (LNBIP 341), P489, DOI 10.1007/978-3-030-11395-7_38
   Runeson Per, 2012, Case study research in software engineering: Guidelines and examples
   Santos V, 2015, EMPIR SOFTW ENG, V20, P1006, DOI 10.1007/s10664-014-9307-y
   Smite D, 2019, IEEE SOFTWARE, V36, P51, DOI 10.1109/MS.2018.2886178
   Smite D, 2017, INFORM SOFTWARE TECH, V86, P71, DOI 10.1016/j.infsof.2017.01.003
   Sosa ME, 2007, HARVARD BUS REV, V85, P133
   Stapel K, 2014, EXPERT SYST, V31, P234, DOI 10.1111/exsy.649
   Tartaglia CM, 2005, AGILE 2005, Proceedings, P173, DOI 10.1109/ADC.2005.49
   Vasilescu B, 2015, CHI 2015: PROCEEDINGS OF THE 33RD ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P3789, DOI 10.1145/2702123.2702549
   Yagüe A, 2016, COMPUT STAND INTER, V48, P184, DOI 10.1016/j.csi.2016.06.002
NR 50
TC 5
Z9 5
U1 7
U2 18
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2022
VL 27
IS 2
AR 36
DI 10.1007/s10664-021-10027-z
PG 43
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA YC0MU
UT WOS:000739395200001
OA hybrid
DA 2024-07-18
ER

PT J
AU Rodrigues, IM
   Khvorov, A
   Aloise, D
   Vasiliev, R
   Koznov, D
   Fernandes, ER
   Chernishev, G
   Luciv, D
   Povarov, N
AF Rodrigues, Irving Muller
   Khvorov, Aleksandr
   Aloise, Daniel
   Vasiliev, Roman
   Koznov, Dmitrij
   Fernandes, Eraldo Rezende
   Chernishev, George
   Luciv, Dmitry
   Povarov, Nikita
TI TraceSim: An Alignment Method for Computing Stack Trace Similarity
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Duplicate crash report; Crash report deduplication; Duplicate crash
   report detection; Automatic crash reporting; Stack trace
AB Software systems can automatically submit crash reports to a repository for investigation when program failures occur. A significant portion of these crash reports are duplicate, i.e., they are caused by the same software issue. Therefore, if the volume of submitted reports is very large, automatic grouping of duplicate crash reports can significantly ease and speed up analysis of software failures. This task is known as crash report deduplication. Given a huge volume of incoming reports, increasing quality of deduplication is an important task. The majority of studies address it via information retrieval or sequence matching methods based on the similarity of stack traces from two crash reports. While information retrieval methods disregard the position of a frame in a stack trace, the existing works based on sequence matching algorithms do not fully consider subroutine global frequency and unmatched frames. Besides, due to data distribution differences among software projects, parameters that are learned using machine learning algorithms are necessary to provide more flexibility to the methods. In this paper, we propose TraceSim - an approach for crash report deduplication which combines TF-IDF, optimum global alignment, and machine learning (ML) in a novel way. Moreover, we propose a new evaluation methodology for this task that is more comprehensive and robust than previously used evaluation approaches. TraceSim significantly outperforms seven baselines and state-of-the-art methods in the majority of the scenarios. It is the only approach that achieves competitive results on all datasets regarding all considered metrics. Moreover, we conduct an extensive ablation study that demonstrates the importance of each TraceSim's element to its final performance and robustness. Finally, we provide the source code for all considered methods and evaluation methodology as well as the created datasets.
C1 [Rodrigues, Irving Muller; Aloise, Daniel] Polytech Montreal, Montreal, PQ, Canada.
   [Khvorov, Aleksandr] HSE Univ, JetBrains, St Petersburg, Russia.
   [Vasiliev, Roman; Povarov, Nikita] JetBrains, St Petersburg, Russia.
   [Koznov, Dmitrij; Chernishev, George; Luciv, Dmitry] St Petersburg State Univ, St Petersburg, Russia.
   [Fernandes, Eraldo Rezende] FACOM UFMS, Campo Grande, MS, Brazil.
C3 Universite de Montreal; Polytechnique Montreal; HSE University (National
   Research University Higher School of Economics); Saint Petersburg State
   University; Universidade Federal de Mato Grosso do Sul
RP Rodrigues, IM (corresponding author), Polytech Montreal, Montreal, PQ, Canada.
EM irving.muller-rodrigues@polymtl.ca; aleksandr.khvorov@jetbrains.com;
   daniel.aloise@polymtl.ca; roman.vasiliev@jetbrains.com;
   d.koznov@spbu.ru; eraldo@facom.ufms.br; g.chernyshev@spbu.ru;
   d.lutsiv@spbu.ru; nikita.povarov@jetbrains.com
RI Luciv, Dmitry V/N-2613-2015; Koznov, Dmitrij/I-4171-2012
OI Luciv, Dmitry V/0000-0002-6332-2360; Muller Rodrigues,
   Irving/0000-0001-5478-4099
FU Natural Sciences and Engineering Research Council of Canada (NSERC);
   Ericsson; Ciena; EffciOS; WestGrid; Compute Canada
FX We would like to gratefully acknowledge the Natural Sciences and
   Engineering Research Council of Canada (NSERC), Ericsson, Ciena, and
   EffciOS for funding this project. Moreover, this research was enabled in
   part by the support provided by WestGrid (https://www.westgrid.ca/) and
   Compute Canada (www.computecanada.ca).
CR Aizawa A., 2017, 29 INT C SOFTWARE EN, P507
   Ali ME, 2014, PROCEEDINGS OF THE 2014 ACM INTERNATIONAL JOINT CONFERENCE ON PERVASIVE AND UBIQUITOUS COMPUTING (UBICOMP'14 ADJUNCT), P1, DOI 10.1145/2638728.2638788
   [Anonymous], 2008, Proceedings of the Third Conference on Tackling Computer Systems Problems with Machine Learning Techniques, SysML'08
   Banerjee S, 2017, INFORM SOFTWARE TECH, V89, P1, DOI 10.1016/j.infsof.2016.09.006
   Berger J, 2014, PHILOS PSYCHOL, V27, P829, DOI 10.1080/09515089.2013.771241
   Brodie M, 2005, ICAC 2005: SECOND INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING, PROCEEDINGS, P101
   Campbell JC, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P269, DOI [10.1145/2901739.2901766, 10.1109/MSR.2016.035]
   Chierichetti F, 2010, PROC APPL MATH, V135, P293
   Dang YN, 2012, PROC INT CONF SOFTW, P1084, DOI 10.1109/ICSE.2012.6227111
   Deza MM, 2009, Encyclopedia of distances, P1, DOI [10.1007/978-3-642-00234-2, DOI 10.1007/978-3-642-00234-2]
   Dhaliwal T., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P333, DOI 10.1109/ICSM.2011.6080800
   Ebrahimi N, 2019, INFORM SOFTWARE TECH, V113, P98, DOI 10.1016/j.infsof.2019.05.007
   GEHAN EA, 1965, BIOMETRIKA, V52, P203, DOI 10.1093/biomet/52.1-2.203
   Glerum K, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P103
   Kampstra P., 2008, Journal of Statistical Software, V28, P1, DOI [10.18637/jss.v028.c01, DOI 10.18637/JSS.V028.C01, 10.18637/jss.v028.c01.papers3://publication/uuid/692988CE-7E10-498E-96EC-E7A0CE3620A3]
   Kim S, 2011, I C DEPEND SYS NETWO, P486, DOI 10.1109/DSN.2011.5958261
   Koopaei N.E., 2015, P 25 ANN INT C COMP, P201
   Lerch J, 2013, EUR CON SFTWR MTNCE, P69, DOI 10.1109/CSMR.2013.17
   Manning C.D., 1999, FDN STAT NATURAL LAN
   Miller FP, 2009, SPELL CHECKER HAMMIN
   Modani N, 2007, I C DATA ENGIN WORKS, P433, DOI 10.1109/ICDEW.2007.4401026
   NEEDLEMAN SB, 1970, J MOL BIOL, V48, P443, DOI 10.1016/0022-2836(70)90057-4
   Putatunda S, 2018, 2018 INTERNATIONAL CONFERENCE ON SIGNAL PROCESSING AND MACHINE LEARNING (SPML 2018), P6, DOI 10.1145/3297067.3297080
   Rakha MS, 2018, IEEE T SOFTWARE ENG, V44, P1245, DOI 10.1109/TSE.2017.2755005
   Sabor KK, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P240, DOI 10.1109/QRS.2017.35
   Schroter Adrian, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P118, DOI 10.1109/MSR.2010.5463280
   SELLERS PH, 1974, SIAM J APPL MATH, V26, P787, DOI 10.1137/0126070
   Sun C, 2011, INT J CHEM ENG, V2011, DOI 10.1155/2011/545234
   Waskom M., 2021, mwaskom/seaborn, DOI [10.5281/zenodo.592845, DOI 10.5281/ZENODO.592845, 110.5281/zenodo.592845]
NR 29
TC 4
Z9 5
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2022
VL 27
IS 2
AR 53
DI 10.1007/s10664-021-10070-w
PG 41
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZK1HN
UT WOS:000762746700001
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Izquierdo, JLC
   Cabot, J
AF Canovas Izquierdo, Javier Luis
   Cabot, Jordi
TI On the analysis of non-coding roles in open source development An
   empirical study of NPM package projects
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Open source; Role analysis; Repository analysis; Collaboration
ID SOURCE SOFTWARE PROJECTS; MODEL
AB The role of non-coding contributors in Open Source Software (OSS) is poorly understood. Most of current research around OSS development focuses on the coding aspects of the project (e.g., commits, pull requests or code reviews) while ignoring the potential of other types of contributions. Often, due to the assumption that these other contributions are not significant in number and that, in any case, they are handled by the same people that are also part of the "coding team". This paper aims to investigate whether this is actually the case by analyzing the frequency and diversity of non-coding contributions in OSS development. As a sample of projects for our study we have taken the 100 most popular projects in the ecosystem of NPM, a package manager for JavaScript. Our results validate the importance of dedicated non-coding contributors in OSS and the diversity of OSS communities as, typically, a contributor specializes in a specific subset of roles. We foresee that projects adopting explicit policies to attract and onboard them could see a positive impact in their long-term sustainability providing they also put in place the right governance strategies to facilitate the migration and collaboration among the different roles. As part of this work, we also provide a replicability package to facilitate further quantitative role-based analysis by other researchers.
C1 [Canovas Izquierdo, Javier Luis] UOC IN3, Barcelona, Spain.
   [Cabot, Jordi] ICREA UOC, Barcelona, Spain.
C3 ICREA
RP Izquierdo, JLC (corresponding author), UOC IN3, Barcelona, Spain.
EM jcanovasi@uoc.edu; jordi.cabot@icrea.cat
RI Cabot, Jordi/P-7723-2015
FU CRUE-CSIC; Springer Nature
FX Open Access funding provided thanks to the CRUE-CSIC agreement with
   Springer Nature.
CR Adewumi A, 2016, SPRINGERPLUS, V5, DOI 10.1186/s40064-016-3612-4
   [Anonymous], 2016, ROADS BRIDGES UNSEEN
   [Anonymous], 2011, P 19 ACM SIGSOFT S 1
   Ashraf U, 2020, IEEE WORK CONF MIN S, P538, DOI 10.1145/3379597.3387492
   Barcellini F, 2014, HUM-COMPUT INTERACT, V29, P205, DOI 10.1080/07370024.2013.812409
   Barcomb A, 2019, PROC INT CONF SOFTW, P948, DOI 10.1109/ICSE.2019.00100
   Bhattacharya P, 2014, PROC IEEE INT CONF S, P11, DOI 10.1109/ICSME.2014.23
   Blincoe K, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P202, DOI 10.1109/MSR.2015.26
   Borges H, 2019, PROCEEDINGS OF THE XXXIII BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING, SBES 2019, P397, DOI 10.1145/3350768.3350788
   Borges H, 2016, PROC IEEE INT CONF S, P334, DOI 10.1109/ICSME.2016.31
   Capra E, 2008, INT FED INFO PROC, V275, P1
   Carillo K, 2017, J STRATEGIC INF SYST, V26, P322, DOI 10.1016/j.jsis.2017.03.001
   Casalnuovo C, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P817, DOI 10.1145/2786805.2786854
   Cheng JH, 2019, 2019 IEEE/ACM 12TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE 2019), P11, DOI 10.1109/CHASE.2019.00011
   Christian J, 2021, R&D MANAGE, V51, P87, DOI 10.1111/radm.12428
   Coelho J, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3240501
   Cosentino V, 2017, IEEE ACCESS, V5, P7173, DOI 10.1109/ACCESS.2017.2682323
   Crowston K, 2006, COMPUTER, V39, P89, DOI 10.1109/MC.2006.152
   Crowston K, 2012, ACM COMPUT SURV, V44, DOI 10.1145/2089125.2089127
   Decan A, 2020, J SYST SOFTWARE, V165, DOI 10.1016/j.jss.2020.110573
   Dias E, 2021, PROC INT CONF SOFTW, P982, DOI 10.1109/ICSE43902.2021.00093
   Elazhary O, 2019, PROC IEEE INT CONF S, P286, DOI 10.1109/ICSME.2019.00043
   Gasparini M, 2020, PROCEEDINGS OF THE 16TH INTERNATIONAL SYMPOSIUM ON OPEN COLLABORATION (OPENSYM), DOI 10.1145/3412569.3412582
   Gasparini M, 2019, PROCEEDINGS OF THE 15TH INTERNATIONAL SYMPOSIUM ON OPEN COLLABORATION (OPENSYM), DOI 10.1145/3306446.3340825
   Golzadeh M, 2020, P 2020 IEEE ACM 42 I, P6, DOI [10.1145/3387940.3391503, DOI 10.1145/3387940.3391503]
   Hata H, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING CHASE 2015, P15, DOI 10.1109/CHASE.2015.9
   Huilian Qiu Sophie, 2019, Proceedings of the ACM on Human-Computer Interaction, V3, DOI 10.1145/3359224
   Jensen C, 2007, PROC INT CONF SOFTW, P364
   Kalliamvakou E, 2016, EMPIR SOFTW ENG, V21, P2035, DOI 10.1007/s10664-015-9393-5
   Lee A, 2017, INT SYMP EMP SOFTWAR, P1, DOI 10.1109/ESEM.2017.7
   Li Y, 2012, INFORM MANAGE-AMSTER, V49, P257, DOI 10.1016/j.im.2012.05.005
   Lima Thaiana, 2016, Journal of Innovation in Digital Ecosystems, V3, P98, DOI 10.1016/j.jides.2016.10.006
   Mockus A, 2020, IEEE WORK CONF MIN S, P513, DOI 10.1145/3379597.3387499
   Nakamaru T, 2020, IEEE WORK CONF MIN S, P93, DOI 10.1145/3379597.3387441
   Onoue S, 2016, IEICE T INF SYST, VE99D, P1304, DOI 10.1587/transinf.2015EDP7363
   Palazzi MJ, 2019, SCI REP-UK, V9, DOI 10.1038/s41598-019-50463-y
   Pinto G, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P112, DOI 10.1109/SANER.2016.68
   Robles G., 2014, P 11 WORKING C MININ, DOI [10.1145/2597073, DOI 10.1145/2597073]
   Rozas D, 2021, FRONT HUM DYNAM, V3, DOI 10.3389/fhumd.2021.618207
   Sack W., 2006, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V15, P229, DOI 10.1007/s10606-006-9020-5
   Samoladas I, 2008, INT FED INFO PROC, V275, P237
   Sarker F, 2019, PROC INT CONF SOFTW, P936, DOI 10.1109/ICSE.2019.00099
   Sawant AA, 2019, EMPIR SOFTW ENG, V24, P3824, DOI 10.1007/s10664-019-09713-w
   Schweik C.M., 2007, 1 MONDAY, V12
   Soto M, 2009, INT SYMP EMP SOFTWAR, P499
   Steinmacher I, 2019, IEEE SOFTWARE, V36, P41, DOI 10.1109/MS.2018.110162131
   Trinkenreich Bianca, 2020, Proceedings of the ACM on Human-Computer Interaction, V4, DOI 10.1145/3415251
   Tsay J, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P356, DOI 10.1145/2568225.2568315
   Tsay J, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P144, DOI 10.1145/2635868.2635882
   Vasilescu B, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING CHASE 2015, P50, DOI 10.1109/CHASE.2015.14
   Wang ZJ, 2015, ASIA PAC SOFWR ENG, P119, DOI 10.1109/APSEC.2015.12
   Yamashita K, 2015, 14TH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION (IWPSE 2015), P46, DOI 10.1145/2804360.2804366
NR 52
TC 6
Z9 6
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN
PY 2022
VL 27
IS 1
AR 18
DI 10.1007/s10664-021-10061-x
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WQ8AA
UT WOS:000714032200001
OA hybrid
DA 2024-07-18
ER

PT J
AU Aleti, A
   Martinez, M
AF Aleti, Aldeida
   Martinez, Matias
TI E-APR: Mapping the effectiveness of automated program repair techniques
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Automated program repair; Software features
ID GENERATION; SUITE
AB Automated Program Repair (APR) is a fast growing area with numerous new techniques being developed to tackle one of the most challenging software engineering problems. APR techniques have shown promising results, giving us hope that one day it will be possible for software to repair itself. In this paper, we focus on the problem of objective performance evaluation of APR techniques. We introduce a new approach, Explaining Automated Program Repair (E-APR), which identifies features of buggy programs that explain why a particular instance is difficult for an APR technique. E-APR is used to examine the diversity and quality of the buggy programs used by most researchers, and analyse the strengths and weaknesses of existing APR techniques. E-APR visualises an instance space of buggy programs, with each buggy program represented as a point in the space. The instance space is constructed to reveal areas of hard and easy buggy programs, and enables the strengths and weaknesses of APR techniques to be identified.
C1 [Aleti, Aldeida] Monash Univ, Fac Informat Technol, Melbourne, Vic, Australia.
   [Martinez, Matias] Univ Polytech Hauts De France, Valenciennes, France.
C3 Monash University; Universite Polytechnique Hauts-de-France
RP Aleti, A (corresponding author), Monash Univ, Fac Informat Technol, Melbourne, Vic, Australia.
EM aldeida.aleti@monash.edu; matias.martinez@uphf.fr
RI Aleti, Aldeida/AAE-8486-2019; Martinez, Matias/ABA-8871-2021
OI Aleti, Aldeida/0000-0002-1716-690X; Martinez, Matias/0000-0002-2945-866X
CR Abreu R, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P89, DOI 10.1109/TAIC.PART.2007.13
   Aleti A, 2014, EVOL COMPUT, V22, P319, DOI 10.1162/EVCO_a_00113
   Anand S, 2013, J SYST SOFTWARE, V86, P1978, DOI 10.1016/j.jss.2013.02.061
   [Anonymous], 2018, IEEE T SOFTWARE ENG
   Appendix, 2020, APPEND APR
   Bengio Y., 2003, Journal of Machine Learning Research, V3, P1209, DOI 10.1162/153244303322753634
   Boser B. E., 1992, Proceedings of the Fifth Annual ACM Workshop on Computational Learning Theory, P144, DOI 10.1145/130385.130401
   Campos J, 2012, IEEE INT CONF AUTOM, P378, DOI 10.1145/2351676.2351752
   Charette RN, 2009, IEEE SPECTRUM, V46, P7, DOI 10.1109/MSPEC.2009.5340234
   Charte F, 2015, KNOWL-BASED SYST, V89, P385, DOI 10.1016/j.knosys.2015.07.019
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Durieux T, 2016, 01272126 U LILL
   Durieux T, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P302, DOI 10.1145/3338906.3338911
   Durieux T, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P349, DOI 10.1109/SANER.2017.7884635
   Durieux T, 2016, 2016 IEEE/ACM 11TH INTERNATIONAL WORKSHOP IN AUTOMATION OF SOFTWARE TEST (AST), P85, DOI [10.1145/2896921.2896931, 10.1109/AST.2016.021]
   Eisenstadt M, 1997, COMMUN ACM, V40, P30, DOI 10.1145/248448.248456
   El-Wakil M, 2004, 2 INT C INF SYAT, P1
   Gazzola L, 2019, IEEE T SOFTWARE ENG, V45, P34, DOI 10.1109/TSE.2017.2755013
   Ginelli D, 2020, COMPR EHENSIVE STUDY, V2012
   Guyon I., 2003, Journal of Machine Learning Research, V3, P1157, DOI 10.1162/153244303322753616
   Harman M, 2018, IEEE INT WORK C SO, P1, DOI 10.1109/SCAM.2018.00009
   Harris M, 2016, GOOGLE REPORTS SELF
   Jiang JJ, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P298, DOI 10.1145/3213846.3213871
   Jolliffe I.T., 1986, Principal component analysis, DOI DOI 10.1016/0169-7439(87)80084-9
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Kaner C, 2008, Lessons learned in software testing
   Kim D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P802, DOI 10.1109/ICSE.2013.6606626
   Koyuncu A, 2020, EMPIR SOFTW ENG, V25, P1980, DOI 10.1007/s10664-019-09780-z
   Le Goues C, 2012, IEEE T SOFTWARE ENG, V38, P54, DOI 10.1109/TSE.2011.104
   Le Goues C, 2015, IEEE T SOFTWARE ENG, V41, P1236, DOI 10.1109/TSE.2015.2454513
   Le Goues C, 2013, SOFTWARE QUAL J, V21, P421, DOI 10.1007/s11219-013-9208-0
   Le Goues C, 2012, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.2012.6227211
   Le XBD, 2019, PROC INT CONF SOFTW, P524, DOI 10.1109/ICSE.2019.00064
   Le XBD, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P427, DOI 10.1109/ISSRE.2015.7381836
   Lin B, 2020, UNDERSTANDING NONREP, P10
   Lin Derrick, 2017, P COMPANION 2017 ACM, P55, DOI [10.1145/3135932, DOI 10.1145/3135932, 10.1145/3135932.3135941]
   Liu K, 2020, PROC INT CONF SOFTW, P615, DOI 10.1145/3377811.3380338
   Liu K, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P31, DOI 10.1145/3293882.3330577
   Liu K, 2019, IEEE INT CONF SOFTW, P102, DOI 10.1109/ICST.2019.00020
   Liu K, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P456, DOI 10.1109/saner.2019.8667970
   Long F, 2016, PROC INT CONF SOFTW, P702, DOI 10.1145/2884781.2884872
   Long F, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P166, DOI 10.1145/2786805.2786811
   Long F, 2016, ACM SIGPLAN NOTICES, V51, P298, DOI 10.1145/2914770.2837617
   Madeiral F, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P468, DOI [10.1109/saner.2019.8667991, 10.1109/SANER.2019.8667991]
   Madjarov G, 2012, PATTERN RECOGN, V45, P3084, DOI 10.1016/j.patcog.2012.03.004
   Martinez M., 2016, P 25 INT S SOFTWARE, P441, DOI 10.1145/2931037
   Martinez M, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P79, DOI 10.1109/ICSE-Companion.2019.00043
   Martinez M, 2018, LECT NOTES COMPUT SC, V11036, P65, DOI 10.1007/978-3-319-99241-9_3
   Martinez M, 2017, EMPIR SOFTW ENG, V22, P1936, DOI 10.1007/s10664-016-9470-4
   Martínez M, 2015, EMPIR SOFTW ENG, V20, P176, DOI 10.1007/s10664-013-9282-8
   Monperrus M, 2019, UBIQUITY, V2019
   Monperrus M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3105906
   Motwani M, 2018, EMPIR SOFTW ENG, V23, P2901, DOI [10.1007/s10664-017-9550-0, 10.1145/3180155.3182533]
   Muñoz MA, 2018, MACH LEARN, V107, P109, DOI 10.1007/s10994-017-5629-5
   Oliveira C, 2019, PROCEEDINGS OF THE 2019 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE (GECCO'19), P1399, DOI 10.1145/3321707.3321880
   Oliveira C, 2018, IEEE T RELIAB, V67, P771, DOI 10.1109/TR.2018.2832072
   Prabhu Y, 2014, PROCEEDINGS OF THE 20TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'14), P263, DOI 10.1145/2623330.2623651
   Qi YH, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P254, DOI 10.1145/2568225.2568254
   Qi Zichao, 2015, P 2015 INT S SOFTW T, P24, DOI DOI 10.1145/2771783.2771791
   Quinlan JR, 1996, ACM COMPUT SURV, V28, P71, DOI 10.1145/234313.234346
   Rice J. R., 1976, Advances in computers, vol.15, P65, DOI 10.1016/S0065-2458(08)60520-3
   Ruck D W, 1990, IEEE Trans Neural Netw, V1, P296, DOI 10.1109/72.80266
   Saha RK, 2018, IEEE WORK CONF MIN S, P10, DOI 10.1145/3196398.3196473
   Smith EK, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P532, DOI 10.1145/2786805.2786825
   Smith-Miles K., 2012, 2012 IEEE C EV COMP, P1
   Smith-Miles K, 2014, COMPUT OPER RES, V45, P12, DOI 10.1016/j.cor.2013.11.015
   Sobreira V, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P130, DOI 10.1109/SANER.2018.8330203
   Software RW, 2013, U CAMBRIDGE STUDY FA
   Tan SH, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P727, DOI 10.1145/2950290.2950295
   Tian H, 2020, P 35 IEEE ACM INT C
   Vapnik V., 1999, NATURE STAT LEARNING
   Wang S, 2019, EMPIRICAL STUDY CORR
   Wang SW, 2020, IEEE INT CONF AUTOM, P968, DOI 10.1145/3324884.3416590
   Wen M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/3180155.3180233
   Xin Q, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P226, DOI 10.1145/3092703.3092718
   Xiong YF, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P789, DOI 10.1145/3180155.3180182
   Xiong YF, 2017, PROC INT CONF SOFTW, P416, DOI 10.1109/ICSE.2017.45
   Xuan JF, 2017, IEEE T SOFTWARE ENG, V43, P34, DOI 10.1109/TSE.2016.2560811
   Ye H, 2019, AUTOMATED CLASSIFICA
   Ye H, 2019, 2019 IEEE 1ST INTERNATIONAL WORKSHOP ON INTELLIGENT BUG FIXING (IBF '19), P1, DOI [10.1109/ibf.2019.8665475, 10.1109/icnsurv.2019.8735415, 10.1109/IBF.2019.8665475]
   Yu Z, 2019, LEARNING RELATION CO, V1907
   Yu ZX, 2019, EMPIR SOFTW ENG, V24, P33, DOI 10.1007/s10664-018-9619-4
NR 82
TC 5
Z9 5
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2021
VL 26
IS 5
AR 99
DI 10.1007/s10664-021-09989-x
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UJ9IK
UT WOS:000691591200002
DA 2024-07-18
ER

PT J
AU Lyu, C
   Wang, RY
   Zhang, HY
   Zhang, HW
   Hu, SL
AF Lyu, Chen
   Wang, Ruyun
   Zhang, Hongyu
   Zhang, Hanwen
   Hu, Songlin
TI Embedding API dependency graph for neural code generation
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Code generation; Program synthesis; API dependency graph; Graph
   embedding; Deep learning
ID NETWORKS
AB The problem of code generation from textual program descriptions has long been viewed as a grand challenge in software engineering. In recent years, many deep learning based approaches have been proposed, which can generate a sequence of code from a sequence of textual program description. However, the existing approaches ignore the global relationships among API methods, which are important for understanding the usage of APIs. In this paper, we propose to model the dependencies among API methods as an API dependency graph (ADG) and incorporate the graph embedding into a sequence-to-sequence (Seq2Seq) model. In addition to the existing encoder-decoder structure, a new module named "embedder" is introduced. In this way, the decoder can utilize both global structural dependencies and textual program description to predict the target code. We conduct extensive code generation experiments on three public datasets and in two programming languages (Python and Java). Our proposed approach, called ADG-Seq2Seq, yields significant improvements over existing state-of-the-art methods and maintains its performance as the length of the target code increases. Extensive ablation tests show that the proposed ADG embedding is effective and outperforms the baselines.
C1 [Lyu, Chen; Wang, Ruyun] Shandong Normal Univ, Sch Informat Sci & Engn, Jinan, Peoples R China.
   [Zhang, Hongyu] Univ Newcastle, Callaghan, NSW, Australia.
   [Zhang, Hanwen] Big Data Ctr Shandong Prov, Jinan, Peoples R China.
   [Hu, Songlin] Chinese Acad Sci, Inst Informat Engn, Beijing, Peoples R China.
   [Hu, Songlin] Univ Chinese Acad Sci, Sch Cyber Secur, Beijing, Peoples R China.
C3 Shandong Normal University; University of Newcastle; Chinese Academy of
   Sciences; Institute of Information Engineering, CAS; Chinese Academy of
   Sciences; University of Chinese Academy of Sciences, CAS
RP Lyu, C (corresponding author), Shandong Normal Univ, Sch Informat Sci & Engn, Jinan, Peoples R China.
EM lvchen@sdnu.edu.cn; ruyunw@outlook.com; hongyu.zhang@newcastle.edu.au;
   zhanghanwen0726@gmail.com; husonglin@iie.ac.cn
RI Zhang, Hanwen/KLD-5748-2024; Lyu, Chen/GSD-2121-2022; zhang,
   hongyu/ABC-3702-2021
OI zhang, hongyu/0000-0002-3063-9425; Hu, Songlin/0000-0002-7170-3809
FU National Natural Science Foundation of China [61602286, 61976127];
   Shandong Key Research and Development Program [2018GGX101003]; Shandong
   Province Higher Educational Science and Technology Program [J16LN09]
FX This work was supported in part by the National Natural Science
   Foundation of China under Grant Nos. 61602286 and 61976127, in part by
   the Shandong Key Research and Development Program under Grant
   2018GGX101003, and in part by the Shandong Province Higher Educational
   Science and Technology Program under Grant J16LN09.
CR AHO AV, 1989, ACM T PROGR LANG SYS, V11, P491, DOI 10.1145/69558.75700
   Phan AV, 2017, PROC INT C TOOLS ART, P45, DOI 10.1109/ICTAI.2017.00019
   [Anonymous], 2006, Proceedings of the Human Language Technology Conference of the NAACL, Main Conference
   [Anonymous], 2018, P INT C LEARNING REP
   [Anonymous], 2015, P 2015 C EMP METH NA, DOI [10.18653/v1/D15-1166, DOI 10.48550/ARXIV.1508.04025]
   Bahdanau Dzmitry, 2015, P 3 INT C LEARN REPR
   Brockschmidt Marc, 2018, ICLR
   Cho K., 2014, PROCS C EMPIRICAL ME, P1724, DOI DOI 10.3115/V1/D14-1179
   Costa-jussà MR, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2016), VOL 2, P357
   Dong L, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P33
   Gehring J, 2017, PR MACH LEARN RES, V70
   Glorot X., 2010, P INT C ART INT STAT, P249
   Grover A, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P855, DOI 10.1145/2939672.2939754
   Gu XD, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P602, DOI 10.1109/ASE.2019.00061
   Hamilton WL, 2017, ADV NEUR IN, V30
   Hayati SA, 2018, 2018 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2018), P925
   Hu X, 2020, EMPIR SOFTW ENG, V25, P2179, DOI [10.1007/s10664-019-09730-9, 10.1007/978-981-13-8203-1_1]
   Hu X, 2018, INT C PROGRAM COMPRE, P200, DOI 10.1145/3196321.3196334
   Huang Po-Yao, 2016, P 1 C MACH TRANSL, DOI DOI 10.18653/V1/W16-2360
   Isozaki H, 2010, P 2010 C EMP METH NA
   Kalchbrenner N., 2015, GRID LONG SHORT TERM
   Kingma DP, 2014, ACS SYM SER
   Kipf TN, 2016, ARXIV
   Li Y, 2015, ARXIV 151105493
   Li YJ, 2019, PR MACH LEARN RES, V97
   Ling W, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P599
   Liu ZX, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P176, DOI 10.1109/ASE.2019.00026
   Luong M.-T., 2015, ARXIV PREPRINT ARXIV
   Mnih V, 2014, ADV NEUR IN, V27
   Mou L, 2015, ARXIV151007211
   Mou LL, 2016, AAAI CONF ARTIF INTE, P1287
   Murali V, 2017, ARXIV170305698
   Neubig G, 2015, IAMTRAM TOOLKIT LANG
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Perozzi B, 2014, PROCEEDINGS OF THE 20TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'14), P701, DOI 10.1145/2623330.2623732
   Quirk C, 2015, PROCEEDINGS OF THE 53RD ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS AND THE 7TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING, VOL 1, P878
   Rabinovich M, 2017, PROCEEDINGS OF THE 55TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2017), VOL 1, P1139, DOI 10.18653/v1/P17-1105
   Satter A, 2017, Companion to the first International Conference on the Art, Science and Engineering of Programming, P1
   Scarselli F, 2009, IEEE T NEURAL NETWOR, V20, P61, DOI 10.1109/TNN.2008.2005605
   Shiv VL, 2019, ADV NEUR IN, V32
   Sim J, 2005, PHYS THER, V85, P257
   Srivastava N, 2014, J MACH LEARN RES, V15, P1929
   Sun ZY, 2020, AAAI CONF ARTIF INTE, V34, P8984
   Sun ZY, 2019, AAAI CONF ARTIF INTE, P7055
   Sutskever I, 2014, ADV NEUR IN, V27
   Vaswani A, 2017, ADV NEUR IN, V30
   Vedantam R, 2015, PROC CVPR IEEE, P4566, DOI 10.1109/CVPR.2015.7299087
   Velickovic Petar, 2017, ARXIV171010903, DOI DOI 10.48550/ARXIV.1710.10903
   Wan Y, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P13, DOI 10.1109/ASE.2019.00012
   Wang Ke, 2017, ARXIV171107163
   Wang WH, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P261, DOI [10.1109/SANER48275.2020.9054857, 10.1109/saner48275.2020.9054857]
   Wei BL, 2019, ADV NEUR IN, V32
   Williams RJ, 1989, NEURAL COMPUT, V1, P270, DOI 10.1162/neco.1989.1.2.270
   Xu K, 2015, PR MACH LEARN RES, V37, P2048
   Yin PC, 2017, PROCEEDINGS OF THE 55TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2017), VOL 1, P440, DOI 10.18653/v1/P17-1041
   Zhang J, 2019, PROC INT CONF SOFTW, P783, DOI 10.1109/ICSE.2019.00086
   Zhang JL, 2020, IEEE ICC, DOI 10.1109/icc40277.2020.9149402
   Zhang JC, 2017, PROCEEDINGS OF THE 55TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2017), VOL 1, P1524, DOI 10.18653/v1/P17-1140
NR 58
TC 5
Z9 6
U1 1
U2 19
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2021
VL 26
IS 4
AR 61
DI 10.1007/s10664-021-09968-2
PG 51
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RS6YZ
UT WOS:000643923500004
DA 2024-07-18
ER

PT J
AU Veizaga, A
   Alferez, M
   Torre, D
   Sabetzadeh, M
   Briand, L
AF Veizaga, Alvaro
   Alferez, Mauricio
   Torre, Damiano
   Sabetzadeh, Mehrdad
   Briand, Lionel
TI On systematically building a controlled natural language for functional
   requirements
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Natural language requirements; Functional requirements; Controlled
   natural language; Qualitative study; Case study research
ID SOFTWARE; CLASSIFICATION
AB Natural language (NL) is pervasive in software requirements specifications (SRSs). However, despite its popularity and widespread use, NL is highly prone to quality issues such as vagueness, ambiguity, and incompleteness. Controlled natural languages (CNLs) have been proposed as a way to prevent quality problems in requirements documents, while maintaining the flexibility to write and communicate requirements in an intuitive and universally understood manner. In collaboration with an industrial partner from the financial domain, we systematically develop and evaluate a CNL, named Rimay, intended at helping analysts write functional requirements. We rely on Grounded Theory for building Rimay and follow well-known guidelines for conducting and reporting industrial case study research. Our main contributions are: (1) a qualitative methodology to systematically define a CNL for functional requirements; this methodology is intended to be general for use across information-system domains, (2) a CNL grammar to represent functional requirements; this grammar is derived from our experience in the financial domain, but should be applicable, possibly with adaptations, to other information-system domains, and (3) an empirical evaluation of our CNL (Rimay) through an industrial case study. Our contributions draw on 15 representative SRSs, collectively containing 3215 NL requirements statements from the financial domain. Our evaluation shows that Rimay is expressive enough to capture, on average, 88% (405 out of 460) of the NL requirements statements in four previously unseen SRSs from the financial domain.
C1 [Veizaga, Alvaro; Alferez, Mauricio; Torre, Damiano; Sabetzadeh, Mehrdad; Briand, Lionel] Univ Luxembourg, SnT Ctr Secur Reliabil & Trust, Luxembourg, Luxembourg.
   [Sabetzadeh, Mehrdad; Briand, Lionel] Univ Ottawa, Sch Elect Engn & Comp Sci, Ottawa, ON, Canada.
C3 University of Luxembourg; University of Ottawa
RP Veizaga, A (corresponding author), Univ Luxembourg, SnT Ctr Secur Reliabil & Trust, Luxembourg, Luxembourg.
EM alvaro.veizaga@uni.lu; mauricio.alferez@uni.lu; damiano.torre@uni.lu;
   m.sabetzadeh@uottawa.ca; lbriand@uottawa.ca
RI Torre, Damiano/KHC-4702-2024
OI Torre, Damiano/0000-0002-1656-3057; Veizaga, Alvaro/0000-0002-4538-1471
FU Clearstream, Escent, FNR of Luxembourg under the BRIDGES program
   [BRIDGES18/IS/13234469/IMoReF]; NSERC of Canada; CRC programs
FX This project has received funding from Clearstream, Escent, FNR of
   Luxembourg under the BRIDGES program (grant
   BRIDGES18/IS/13234469/IMoReF), and NSERC of Canada under the Discovery,
   Discovery Accelerator and CRC programs.
CR Ahonen JJ, 2010, J SYST SOFTWARE, V83, P2175, DOI 10.1016/j.jss.2010.06.023
   Alferez M, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2019), P239, DOI 10.1109/MODELS.2019.00008
   [Anonymous], 2013, Implementing Domain-Specific Languages with Xtext and Xtend
   [Anonymous], 2017, Requirements engineering
   [Anonymous], 2013, CENGAGE LEARNING
   Arora C, 2017, IEEE T SOFTWARE ENG, V43, P918, DOI 10.1109/TSE.2016.2635134
   Arora C, 2015, IEEE T SOFTWARE ENG, V41, P944, DOI 10.1109/TSE.2015.2428709
   Badampudi D, 2016, J SYST SOFTWARE, V121, P105, DOI 10.1016/j.jss.2016.07.027
   Batista-Navarro, 2020, ARXIV200401099
   Boehm B, 2001, COMPUTER, V34, P135, DOI 10.1109/2.962984
   Bolander P, 2013, ORGAN STUD, V34, P285, DOI 10.1177/0170840612464757
   Carvalho G, 2014, SCI COMPUT PROGRAM, V95, P275, DOI 10.1016/j.scico.2014.06.007
   Crapo A, 2017, INT REQUIR ENG CONF, P283, DOI 10.1109/RE.2017.54
   Denger C, 2003, IEEE INTERNATIONAL CONFERENCE ON SOFTWARE - SCIENCE, TECHNOLOGY & ENGINEERING, PROCEEDINGS, P80, DOI 10.1109/SWSTE.2003.1245428
   Dietterich TG, 1998, NEURAL COMPUT, V10, P1895, DOI 10.1162/089976698300017197
   Eckhardt J, 2016, INT REQUIR ENG CONF, P46, DOI 10.1109/RE.2016.24
   Femmer H., 2014, PROC 1 INT WORKSHOP, P10
   Fernández DM, 2017, EMPIR SOFTW ENG, V22, P2298, DOI 10.1007/s10664-016-9451-7
   Fuchs NE, 2008, LECT NOTES COMPUT SC, V5224, P104
   Glaser B. G., 1967, DISCOVERY GROUNDED T, DOI 10.1515/9783111660211/html
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hull E, 2011, REQUIREMENTS ENGINEERING, THIRD EDITION, P1, DOI 10.1007/978-1-84996-405-0
   Jureta IJ, 2009, APPL ONTOL, V4, P169, DOI 10.3233/AO-2009-0069
   Kassab M, 2014, INNOV SYST SOFTW ENG, V10, P235, DOI 10.1007/s11334-014-0232-4
   Kipper K, 2000, SEVENTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-2001) / TWELFTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE (IAAI-2000), P691
   Konrad S, 2005, PROC INT CONF SOFTW, P372
   Konrad S, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P329, DOI 10.1109/RE.2005.29
   Kuhn T, 2014, COMPUT LINGUIST, V40, P121, DOI 10.1162/COLI_a_00168
   Lúcio L, 2017, LECT NOTES COMPUT SC, V10227, P427, DOI 10.1007/978-3-319-57288-8_31
   Mavin A., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P277, DOI 10.1109/RE.2010.39
   Mavin A, 2016, INT REQUIR ENG CONF, P276, DOI 10.1109/RE.2016.38
   Mavin A, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P317, DOI 10.1109/RE.2009.9
   Mich L, 2004, REQUIR ENG, V9, P40, DOI 10.1007/s00766-003-0179-8
   MILLER GA, 1995, COMMUN ACM, V38, P39, DOI 10.1145/219717.219748
   OMG, 2017, UNIFIED MODELING LAN
   Pohl K, 2010, REQUIREMENTS ENGINEERING: FUNDAMENTALS, PRINCIPLES, AND TECHNIQUES, P1, DOI 10.1007/978-3-642-12578-2
   Pohl K., 2011, Requirements Engineering Fundamentals, V1st
   Post A, 2012, LECT NOTES COMPUT SC, V7152, P225, DOI 10.1007/978-3-642-27705-4_18
   Post A, 2011, LECT NOTES COMPUT SC, V6606, P166, DOI 10.1007/978-3-642-19858-8_17
   Riaz M, 2014, INT REQUIR ENG CONF, P183, DOI 10.1109/RE.2014.6912260
   Runeson Per, 2012, Case study research in software engineering: Guidelines and examples
   Sadraei E, 2007, REQUIR ENG, V12, P145, DOI 10.1007/s00766-007-0042-4
   Saldana J., 2015, The coding manual for qualitative researchers
   Solemon B, 2009, COMM COM INF SC, V59, P70
   Sommerville I., 2011, Software engineering
   Standish_Group, 1995, CHAOS REP
   Stevenson A, 2014, SCI COMPUT PROGRAM, V96, P444, DOI 10.1016/j.scico.2014.05.008
   Stol KJ, 2016, PROC INT CONF SOFTW, P120, DOI 10.1145/2884781.2884833
   Veizaga A., 2020, PROC ACMIEEE 23 INT, P218
   Withall Stephen, 2007, SOFTWARE REQUIREMENT
   Young R, 2015, REQUIR ENG MAG, V1
   Yue T, 2011, REQUIR ENG, V16, P75, DOI 10.1007/s00766-010-0111-y
   Zave P., 1997, ACM Transactions on Software Engineering and Methodology, V6, P1, DOI 10.1145/237432.237434
NR 53
TC 11
Z9 12
U1 0
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2021
VL 26
IS 4
AR 79
DI 10.1007/s10664-021-09956-6
PG 53
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZA4FG
UT WOS:000756120800002
PM 34776756
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Wu, D
   Jing, XY
   Zhang, HY
   Li, B
   Xie, Y
   Xu, BW
AF Wu, Di
   Jing, Xiao-Yuan
   Zhang, Hongyu
   Li, Bing
   Xie, Yu
   Xu, Baowen
TI Generating API tags for tutorial fragments from Stack Overflow
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE API tags; Tutorial fragments; Stack Overflow; Document linking
ID KNOWLEDGE; ANSWERS
AB API tutorials are important learning resources as they explain how to use certain APIs in a given programming context. An API tutorial can be split into a number of units. Consecutive units that describe a same topic are often called a tutorial fragment. We consider the API explained by a tutorial fragment as an API tag. Generating API tags for a tutorial fragment can help understand, navigate, and retrieve the fragment. Existing approaches often do not perform well on API tag generation due to high manual effort and low accuracy. Like API tutorials, Stack Overflow (SO) is also an important learning resource that provides the explanations of APIs. Thus, SO posts also contain API tags. Besides, API tags of SO posts are abundant and can be extracted easily. In this paper, we propose a novel approach ATTACK (stands for A PI T ag for T utorial frA gments using C rowd K nowledge), which can automatically generate API tags for tutorial fragments from SO posts. ATTACK first constructs Q&Apair,tagset pairs by extracting API tags of SO posts. Then, it trains a deep neural network with the attention mechanism to learn the semantic relatedness between Q&A pairs and the associated API tags, taking into consideration both textual descriptions and code in a Q&A pair. Finally, the trained model is used to generate API tags for tutorial fragments. We evaluate ATTACK on public Java and Android datasets containing 43,132 Q&Apair,tagset pairs. Experimental results show that ATTACK is effective and outperforms the state-of-the-art approaches in terms of F-Measure. Our user study further confirms the effectiveness of ATTACK in generating API tags for tutorial fragments. We also apply ATTACK to document linking and the results confirm the usefulness of API tags generated by ATTACK.
C1 [Wu, Di; Jing, Xiao-Yuan; Li, Bing; Xie, Yu] Wuhan Univ, Sch Comp, Wuhan, Peoples R China.
   [Jing, Xiao-Yuan] Guangdong Univ Petrochem Technol, Sch Comp, Maoming, Peoples R China.
   [Zhang, Hongyu] Univ Newcastle, Sch Elect Engn & Comp, Callaghan, NSW, Australia.
   [Xu, Baowen] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Peoples R China.
C3 Wuhan University; Guangdong University of Petrochemical Technology;
   University of Newcastle; Nanjing University
RP Jing, XY (corresponding author), Wuhan Univ, Sch Comp, Wuhan, Peoples R China.; Jing, XY (corresponding author), Guangdong Univ Petrochem Technol, Sch Comp, Maoming, Peoples R China.
EM wudidi@whu.edu.cn; jingxy_2000@126.com; hongyu.zhang@newcastle.edu.au;
   bingli@whu.edu.cn; ylxieyu@whu.edu.cn; bwxu@nju.edu.cn
RI He, Chen/JLM-5059-2023; zhang, hongyu/ABC-3702-2021; Li,
   Ye/JBS-2949-2023; Li, bo/IWL-9318-2023; Li, Kun/JLL-6505-2023; Xu,
   Baowen/IXW-4882-2023; wang, qiang/IZW-1751-2023; li, bai/JNE-1502-2023;
   liang, shuang/JOK-5869-2023; li, bing/GWQ-9617-2022; Wu,
   Di/GXG-3795-2022
OI zhang, hongyu/0000-0002-3063-9425; Li, Kun/0000-0002-3638-2974; Xu,
   Baowen/0000-0001-7743-1296; Wu, Di/0000-0003-1096-7074
FU NSFC-Key Project of General Technology Fundamental Research United Fund
   [U1736211, 61933013, 62032016]; Natural Science Foundation of Guangdong
   Province [2019A1515011076]; Innovation Group of Guangdong Education
   Department [2020KCXTD014, 2018KCXTD019]; Key Project of Natural Science
   Foundation of Hubei Province [2018CFA024]
FX The authors would like to thank the anonymous reviewers for their
   constructive comments and suggestions. This work was supported by the
   NSFC-Key Project of General Technology Fundamental Research United Fund
   under Grant No. U1736211, No. 61933013, and No. 62032016, the Natural
   Science Foundation of Guangdong Province under Grant No.
   2019A1515011076, the Innovation Group of Guangdong Education Department
   under Grant No. 2020KCXTD014 and 2018KCXTD019, the Key Project of
   Natural Science Foundation of Hubei Province under Grant No. 2018CFA024.
CR Aghajani E, 2019, PROC INT CONF SOFTW, P1199, DOI 10.1109/ICSE.2019.00122
   Nguyen AT, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P858, DOI 10.1109/ICSE.2015.336
   [Anonymous], CROWD DOCUMENTATION
   [Anonymous], 2011, P 2 INT WORKSHOP WEB
   Asaduzzaman M, 2013, IEEE WORK CONF MIN S, P97, DOI 10.1109/MSR.2013.6624015
   Bahdanau D., 2015, 3 INT C LEARN REPR I
   Bao L, 2020, PSC2CODE DENOISING C, V29
   Bao LF, 2019, IEEE T SOFTWARE ENG, V45, P823, DOI 10.1109/TSE.2018.2802916
   Calefato F, 2018, EMPIR SOFTW ENG, V23, P1352, DOI 10.1007/s10664-017-9546-9
   Chen MS, 2019, PROC INT CONF SOFTW, P536, DOI 10.1109/ICSE.2019.00065
   Cho K., 2014, PROCS C EMPIRICAL ME, P1724, DOI DOI 10.3115/V1/D14-1179
   Chowdhury SA, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P422, DOI 10.1109/MSR.2015.54
   Cliff N., 2014, ORDINAL METHODS BEHA
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Dagenais B, 2012, PROC INT CONF SOFTW, P47, DOI 10.1109/ICSE.2012.6227207
   Dagenais B, 2008, ACM SIGPLAN NOTICES, V43, P313, DOI 10.1145/1449955.1449790
   De Lucia A, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1276933.1276934
   De Souza L. B. L., 2014, P IEEE INT C PROG CO, P72, DOI DOI 10.1145/2597008.2597146
   Duala-Ekoko E, 2012, PROC INT CONF SOFTW, P266, DOI 10.1109/ICSE.2012.6227187
   Fu W, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P72, DOI 10.1145/3106237.3106257
   Gao Z, 2019, ACM T SOFTW ENG METH
   Gao Z, 2020, ARXIV PREPRINT ARXIV
   Gu XD, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P3675
   Gu XD, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P933, DOI 10.1145/3180155.3180167
   Gu XD, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P631, DOI 10.1145/2950290.2950334
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Hata H, 2019, PROC INT CONF SOFTW, P1211, DOI 10.1109/ICSE.2019.00123
   Hochreiter S, 1997, NEURAL COMPUT, V9, P1735, DOI [10.1162/neco.1997.9.1.1, 10.1007/978-3-642-24797-2]
   Hu X, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P2269
   Hu X, 2018, INT C PROGRAM COMPRE, P200, DOI 10.1145/3196321.3196334
   Huang Q, 2018, IEEE INT CONF AUTOM, P293, DOI 10.1145/3238147.3238191
   Huang Q, 2017, PROC IEEE INT CONF S, P159, DOI 10.1109/ICSME.2017.51
   Phan H, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P632, DOI 10.1145/3180155.3180230
   Jiang H, 2017, PROC INT CONF SOFTW, P38, DOI 10.1109/ICSE.2017.12
   Jiang H, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P157, DOI 10.1109/SANER.2016.59
   Jiang SY, 2017, IEEE INT CONF AUTOM, P135, DOI 10.1109/ASE.2017.8115626
   Joorabchi A, 2015, J INF SCI, V41, P570, DOI 10.1177/0165551515586669
   Kim K, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P946, DOI 10.1145/3180155.3180187
   LeClair A, 2019, PROC INT CONF SOFTW, P795, DOI 10.1109/ICSE.2019.00087
   Li HW, 2018, PROC IEEE INT CONF S, P183, DOI 10.1109/ICSME.2018.00028
   Li XC, 2020, IEEE T SOFTWARE ENG, V46, P1081, DOI 10.1109/TSE.2018.2876006
   Lin B, 2019, PROC INT CONF SOFTW, P548, DOI 10.1109/ICSE.2019.00066
   Lin ZQ, 2017, IEEE INT CONF AUTOM, P123, DOI 10.1109/ASE.2017.8115625
   Liu ZX, 2018, IEEE INT CONF AUTOM, P373, DOI 10.1145/3238147.3238190
   Lv F, 2015, IEEE INT CONF AUTOM, P260, DOI 10.1109/ASE.2015.42
   Ma SY, 2021, IEEE T SOFTWARE ENG, V47, P2296, DOI 10.1109/TSE.2019.2946830
   Maalej W, 2013, IEEE T SOFTWARE ENG, V39, P1264, DOI 10.1109/TSE.2013.12
   Manning CD, 2014, PROCEEDINGS OF 52ND ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: SYSTEM DEMONSTRATIONS, P55, DOI 10.3115/v1/p14-5010
   Manning Christopher D., 2008, INTRO INFORM RETRIEV
   Mäntylä MV, 2017, IEEE WORK CONF MIN S, P198, DOI 10.1109/MSR.2017.47
   Meyer AN, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P19, DOI 10.1145/2635868.2635892
   Nassif M, 2020, IEEE T SOFTWARE ENG, V46, P20, DOI 10.1109/TSE.2018.2836450
   Parra E, 2018, INT C PROGRAM COMPRE, P222, DOI 10.1145/3196321.3196351
   Petrosyan G, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P869, DOI 10.1109/ICSE.2015.97
   Pletea D., 2014, 11 WORKING C MSR, P348, DOI [10.1145/2597073.2597117, DOI 10.1145/2597073.2597117]
   Ponzanelli Luca, 2019, IEEE Transactions on Software Engineering, V45, P464, DOI 10.1109/TSE.2017.2779479
   Ponzanelli Luca, 2014, P 11 WORKING C MININ, P102, DOI DOI 10.1145/2597073.2597077
   Rahman MM, 2017, PROC IEEE ACM INT C, P51, DOI 10.1109/ICSE-C.2017.11
   Ren XX, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P151, DOI 10.1109/ASE.2019.00024
   Robillard MP, 2015, EMPIR SOFTW ENG, V20, P1558, DOI 10.1007/s10664-014-9323-y
   Robillard MP, 2011, EMPIR SOFTW ENG, V16, P703, DOI 10.1007/s10664-010-9150-8
   Robillard MP, 2009, IEEE SOFTWARE, V26, P27, DOI 10.1109/MS.2009.193
   Sennrich R., 2016, PROC 1 C MACH TRANSL, P371, DOI DOI 10.18653/V1/W16-2323
   Sirres R, 2018, EMPIR SOFTW ENG, V23, P2622, DOI 10.1007/s10664-017-9544-y
   Subramanian S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P643, DOI 10.1145/2568225.2568313
   Subramanian S, 2013, IEEE WORK CONF MIN S, P85, DOI 10.1109/MSR.2013.6624012
   Sutskever I, 2014, ADV NEUR IN, V27
   Tan CQ, 2018, LECT NOTES COMPUT SC, V11141, P270, DOI 10.1007/978-3-030-01424-7_27
   Nguyen T, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P551, DOI 10.1145/3236024.3236036
   Tian Y, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P568, DOI 10.1145/2591062.2591071
   Treude C, 2017, PROC IEEE INT CONF S, P509, DOI 10.1109/ICSME.2017.24
   Treude C, 2016, PROC INT CONF SOFTW, P392, DOI 10.1145/2884781.2884800
   Treude C, 2015, IEEE T SOFTWARE ENG, V41, P565, DOI 10.1109/TSE.2014.2387172
   Treude C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P804, DOI 10.1145/1985793.1985907
   Treude C, 2012, IEEE T SOFTWARE ENG, V38, P19, DOI 10.1109/TSE.2010.91
   Uddin G, 2021, IEEE T SOFTWARE ENG, V47, P522, DOI 10.1109/TSE.2019.2900245
   Wan Y, 2018, IEEE INT CONF AUTOM, P397, DOI 10.1145/3238147.3238206
   Wan ZY, 2021, IEEE T SOFTWARE ENG, V47, P1331, DOI 10.1109/TSE.2019.2921343
   Wang SW, 2020, IEEE T SOFTWARE ENG, V46, P1024, DOI 10.1109/TSE.2018.2874470
   Wang SW, 2018, EMPIR SOFTW ENG, V23, P1552, DOI 10.1007/s10664-017-9558-5
   Wang SW, 2018, EMPIR SOFTW ENG, V23, P800, DOI 10.1007/s10664-017-9533-1
   Wang SW, 2014, PROC IEEE INT CONF S, P291, DOI 10.1109/ICSME.2014.51
   Wang X, 2019, EMPIR SOFTW ENG, V24, P3514, DOI 10.1007/s10664-019-09702-z
   Wen M, 2019, PROC INT CONF SOFTW, P866, DOI 10.1109/ICSE.2019.00093
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Xia X, 2013, IEEE WORK CONF MIN S, P287, DOI 10.1109/MSR.2013.6624040
   Xu BW, 2017, IEEE INT CONF AUTOM, P706, DOI 10.1109/ASE.2017.8115681
   Xu BW, 2016, IEEE INT CONF AUTOM, P51, DOI 10.1145/2970276.2970357
   Ye X, 2016, PROC INT CONF SOFTW, P404, DOI 10.1145/2884781.2884862
   Zhang F, 2018, IEEE T SOFTWARE ENG, V44, P1070, DOI 10.1109/TSE.2017.2750682
   Zhang HX, 2021, IEEE T SOFTWARE ENG, V47, P850, DOI 10.1109/TSE.2019.2906315
   Zhang HY, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P956, DOI 10.1145/2950290.2983955
   Zhang JX, 2021, IEEE T SOFTWARE ENG, V47, P1299, DOI 10.1109/TSE.2019.2919304
   Zhang TY, 2019, PROC INT CONF SOFTW, P316, DOI 10.1109/ICSE.2019.00046
   Zhang TY, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P886, DOI 10.1145/3180155.3180260
   Zhao DH, 2019, PROC INT CONF SOFTW, P350, DOI 10.1109/ICSE.2019.00049
   Zhong H, 2019, IEEE T SOFTWARE ENG, V45, P319, DOI 10.1109/TSE.2017.2782280
NR 97
TC 9
Z9 10
U1 0
U2 13
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2021
VL 26
IS 4
AR 66
DI 10.1007/s10664-021-09962-8
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RZ1XF
UT WOS:000648390800002
DA 2024-07-18
ER

PT J
AU Olsson, T
   Wnuk, K
   Jansen, S
AF Olsson, Thomas
   Wnuk, Krzysztof
   Jansen, Slinger
TI A validated model for the scoping process of quality requirements: a
   multi-case study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Quality requirements; Non-functional requirements; Case study
AB Quality requirements are vital to developing successful software products. However, there exist evidence that quality requirements are managed mostly in an "ad hoc" manner and down-prioritized. This may result in insecure, unstable, slow products, and unhappy customers. We have developed a conceptual model for the scoping process of quality requirements - QREME - and an assessment model - Q-REPM - for companies to benchmark when evaluating and improving their quality requirements practices. Our model balances an upfront forward-loop with a data-driven feedback-loop. Furthermore, it addresses both strategic and operational decisions. We have evaluated the model in a multi-case study at two companies in Sweden and three companies in The Netherlands. We assessed the scoping process practices for quality requirements and provided improvement recommendations for which practices to improve. The study confirms the existence of the constructs underlying QREME. The companies perform, in the median, 24% of the suggested actions in Q-REPM. None of the companies work data-driven with their quality requirements, even though four out of five companies could technically do so. Furthermore, on the strategic level, quality requirements practices are not systematically performed by any of the companies. The conceptual model and assessment model capture a relevant view of the quality requirements practices and offer relevant improvement proposals. However, we believe there is a need for coupling quality requirements practices to internal and external success factors to motive companies to change their ways of working. We also see improvement potential in the area of business intelligence for QREME in selecting data sources and relevant stakeholders.
C1 [Olsson, Thomas] RISE Reserach Inst Sweden, Scheelevagen 17, S-22370 Lund, Sweden.
   [Wnuk, Krzysztof] Blekinge Inst Technol, Software Engn Res Grp, Karlskrona, Sweden.
   [Jansen, Slinger] Univ Utrecht, Utrecht, Netherlands.
   [Jansen, Slinger] LUT Univ, Sch Engn Sci, Lappeenranta, Finland.
C3 Blekinge Institute Technology; Utrecht University; Lappeenranta-Lahti
   University of Technology LUT
RP Olsson, T (corresponding author), RISE Reserach Inst Sweden, Scheelevagen 17, S-22370 Lund, Sweden.
EM thomas.olsson@ri.se; krzystof.wnuk@bth.se; slinger.jansen@uu.nl
RI Roijackers, Slinger/Y-4244-2019; Olsson, Thomas/AAB-8447-2019
OI Roijackers, Slinger/0000-0003-3752-2868; Olsson,
   Thomas/0000-0002-2933-1925
FU RISE Research Institutes of Sweden
FX Open Access funding provided by RISE Research Institutes of Sweden
CR Alsaqaf W, 2019, INFORM SOFTWARE TECH, V110, P39, DOI 10.1016/j.infsof.2019.01.009
   Ambreen T, 2018, REQUIR ENG, V23, P63, DOI 10.1007/s00766-016-0258-2
   Ameller D., 2012, Proceedings from RE: The 20th International Requirements Engineering Conference, P41, DOI DOI 10.1109/RE.2012.6345838
   Ameller D, 2019, IEEE T SOFTWARE ENG
   Ameller D, 2016, SOFTWARE QUAL J, V24, P271, DOI 10.1007/s11219-015-9268-4
   Ameller D, 2013, IEEE SOFTWARE, V30, P61, DOI 10.1109/MS.2012.176
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   Benslimane Y, 2007, REQUIR ENG, V12, P191, DOI 10.1007/s00766-007-0050-4
   Bosch J, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1961
   Calazans A.T.S., 2019, ACM IEEE INT S EMP S, P1, DOI DOI 10.1109/ESEM.2019.8870151
   Caracciolo A, 2014, LECT NOTES COMPUT SC, V8627, P374, DOI 10.1007/978-3-319-09970-5_32
   Daneva Maya, 2013, Requirements Engineering: Foundation for Software Quality. 19th International Working Conference, REFSQ 2013. Proceedings, P1, DOI 10.1007/978-3-642-37422-7_1
   Daneva M, 2014, P 8 ACM IEEE INT S E, P19, DOI [10.1145/2652524.2652534, DOI 10.1145/2652524.2652534]
   De La Vara Jose Luis, 2011, SEKE, P438
   Eckhardt J, 2016, PROC INT CONF SOFTW, P832, DOI 10.1145/2884781.2884788
   Ernst NA, 2010, LECT NOTES COMPUT SC, V6182, P143, DOI 10.1007/978-3-642-14192-8_15
   Fagerholm F, 2017, J SYST SOFTWARE, V123, P292, DOI 10.1016/j.jss.2016.03.034
   Flyvbjerg B, 2006, QUAL INQ, V12, P219, DOI 10.1177/1077800405284363
   García-Mireles GA, 2016, COMPUT SCI INF SYST, V13, P875, DOI 10.2298/CSIS160809034G
   Glinz M, 2007, INT REQUIR ENG CONF, P21, DOI 10.1109/RE.2007.45
   Glinz M, 2019, 2019 IEEE 27TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW 2019), P172, DOI 10.1109/REW.2019.00036
   Grimshaw DJ, 2001, INFORM SOFTWARE TECH, V43, P629, DOI 10.1016/S0950-5849(01)00171-9
   Groen EC, 2017, INT REQUIR ENG CONF, P80, DOI 10.1109/RE.2017.73
   Ho CW, 2008, INT REQUIR ENG CONF, P135, DOI 10.1109/RE.2008.51
   Huttermann M., 2012, DEVOPS DEV
   ISO, 2011, 250102011E ISOIEC
   Jha N, 2019, EMPIR SOFTW ENG, P1
   Kittlaus H-B, 2017, SOFTWARE PRODUCT MAN
   Lu Mengmeng., 2017, P 21 INT C EVALUATIO, P344, DOI [10.1145/3084226.3084241, DOI 10.1145/3084226.3084241]
   Maalej W, 2016, IEEE SOFTWARE, V33, P48, DOI 10.1109/MS.2015.153
   Olsson T., 2018, INT WORK C REQ ENG F, P173
   Olsson T, 2019, J SYST SOFTWARE, V149, P217, DOI 10.1016/j.jss.2018.12.002
   Pettersson F, 2008, J SYST SOFTWARE, V81, P972, DOI 10.1016/j.jss.2007.08.032
   Regnell B, 2005, ENGINEERING AND MANAGING SOFTWARE REQUIREMENTS, P287, DOI 10.1007/3-540-28244-0_13
   Rissanen O, 2015, 2015 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON RAPID CONTINUOUS SOFTWARE ENGINEERING (RCOSE), P12, DOI 10.1109/RCoSE.2015.10
   Schwaber Ken., 2004, Agile Project Management With Scrum (Developer Best Practices)
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Seddon PB, 2012, EUR J INFORM SYST, V21, P6, DOI 10.1057/ejis.2011.9
   Shahrokni Ali, 2013, 2013 39th Euromicro Conference on Software Engineering and Advanced Applications (SEAA), P78, DOI 10.1109/SEAA.2013.57
   Svahnberg M, 2015, REQUIR ENG, V20, P91, DOI 10.1007/s00766-013-0188-1
   Sveningson R, 2019, LECT NOTES COMPUT SC, V11915, P528, DOI 10.1007/978-3-030-35333-9_37
   Svensson RB, 2013, INFORM SOFTWARE TECH, V55, P1224, DOI 10.1016/j.infsof.2013.01.006
   Svensson RB, 2012, IEEE T SOFTWARE ENG, V38, P923, DOI 10.1109/TSE.2011.47
   Wang TL, 2018, ASIA PAC SOFWR ENG, P494, DOI 10.1109/APSEC.2018.00064
   Wieringa R, 2015, SCI COMPUT PROGRAM, V101, P136, DOI 10.1016/j.scico.2014.11.013
   Wnuk K, 2016, P 20 INT C EV ASS SO, P1
NR 46
TC 1
Z9 1
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR 2
PY 2021
VL 26
IS 2
AR 26
DI 10.1007/s10664-020-09896-7
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QR7CF
UT WOS:000625372100003
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Fan, YR
   Xia, X
   Lo, D
   Hassan, AE
   Li, SP
AF Fan, Yuanrui
   Xia, Xin
   Lo, David
   Hassan, Ahmed E.
   Li, Shanping
TI What makes a popular academic AI repository?
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Academic AI repository; Software popularity; Mining software
   repositories
ID SOFTWARE
AB Many AI researchers are publishing code, data and other resources that accompany their papers in GitHub repositories. In this paper, we refer to these repositories as academic AI repositories. Our preliminary study shows that highly cited papers are more likely to have popular academic AI repositories (and vice versa). Hence, in this study, we perform an empirical study on academic AI repositories to highlight good software engineering practices of popular academic AI repositories for AI researchers. We collect 1,149 academic AI repositories, in which we label the top 20% repositories that have the most number of stars as popular, and we label the bottom 70% repositories as unpopular. The remaining 10% repositories are set as a gap between popular and unpopular academic AI repositories. We propose 21 features to characterize the software engineering practices of academic AI repositories. Our experimental results show that popular and unpopular academic AI repositories are statistically significantly different in 11 of the studied features-indicating that the two groups of repositories have significantly different software engineering practices. Furthermore, we find that the number of links to other GitHub repositories in the README file, the number of images in the README file and the inclusion of a license are the most important features for differentiating the two groups of academic AI repositories. Our dataset and code are made publicly available to share with the community.
C1 [Fan, Yuanrui; Li, Shanping] Zhejiang Univ, Coll Comp Sci & Technol, Hangzhou, Peoples R China.
   [Fan, Yuanrui] PengCheng Lab, Shenzhen, Peoples R China.
   [Xia, Xin] Monash Univ, Fac Informat Technol, Melbourne, Vic, Australia.
   [Lo, David] Singapore Management Univ, Sch Informat Syst, Singapore, Singapore.
   [Hassan, Ahmed E.] Queens Univ, Sch Comp, Kingston, ON, Canada.
C3 Zhejiang University; Monash University; Singapore Management University;
   Queens University - Canada
RP Xia, X (corresponding author), Monash Univ, Fac Informat Technol, Melbourne, Vic, Australia.
EM yrfan@zju.edu.cn; xin.xia@monash.edu; davidlo@smu.edu.sg;
   ahmed@cs.queensu.ca; shan@zju.edu.cn
RI KHALIFA, AHMED khalifa/HKF-2246-2023; Xia, Xin/AAD-6217-2022; Lo,
   David/A-2493-2012
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; Xia,
   Xin/0000-0002-6302-3256; Lo, David/0000-0002-4367-7201
FU National Key R&D Program of China [2018YFB1003904]; Australian Research
   Council's Discovery Early Career Researcher Award (DECRA) [DE200100021];
   Australian Research Council [DE200100021] Funding Source: Australian
   Research Council
FX This research was partially supported by the National Key R&D Program of
   China (No. 2018YFB1003904) and the Australian Research Council's
   Discovery Early Career Researcher Award (DECRA) (DE200100021).
CR Aggarwal K., 2014, P 11 WORKING C MININ, P360, DOI [10.1145/2597073.2597120, DOI 10.1145/2597073.2597120]
   Alves TL, 2010, PROC IEEE INT CONF S
   Balcan M.-F., 2018, P MACHINE LEARNING R, P344
   Bissyandé TF, 2013, P INT COMP SOFTW APP, P303, DOI 10.1109/COMPSAC.2013.55
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Boettiger Carl, 2015, ACM SIGOPS Operating Systems Review, V49, P71
   Borges H, 2016, 12 INT C PREDICTIVE, P9
   Borges H, 2016, PROC IEEE INT CONF S, P334, DOI 10.1109/ICSME.2016.31
   Breiman L, 2001, MACH LEARN, V45, P5, DOI 10.1023/A:1010933404324
   Cliff N., 2014, ORDINAL METHODS BEHA
   Collberg C, 2016, COMMUN ACM, V59, P62, DOI 10.1145/2812803
   Collobert R., 2002, Torch: a modular machine learning software library
   Fan YR, 2021, IEEE T SOFTWARE ENG, V47, P1559, DOI 10.1109/TSE.2019.2929761
   Fan YR, 2020, IEEE T SOFTWARE ENG, V46, P495, DOI 10.1109/TSE.2018.2864217
   Fan YR, 2018, EMPIR SOFTW ENG, V23, P3346, DOI 10.1007/s10664-018-9602-0
   FLEISS JL, 1971, PSYCHOL BULL, V76, P378, DOI 10.1037/h0031619
   Fogel Karl, 2005, Producing Open Source Software: How to Run a Successful Free Software Project, V1st
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   Gundersen OE, 2018, AI MAG, V39, P56, DOI 10.1609/aimag.v39i3.2816
   Han JX, 2019, P INT COMP SOFTW APP, P21, DOI 10.1109/COMPSAC.2019.00013
   Harrell FE, 2015, SPRINGER SER STAT, P1, DOI 10.1007/978-3-319-19425-7_1
   Hosmer DW, 2013, WILEY SER PROBAB ST, P1, DOI 10.1002/9781118548387
   Hu Y, 2016, SPRINGERPLUS, V5, DOI 10.1186/s40064-016-2897-7
   Huang J, 2005, IEEE T KNOWL DATA EN, V17, P299, DOI 10.1109/TKDE.2005.50
   Jiang J, 2017, EMPIR SOFTW ENG, V22, P547, DOI 10.1007/s10664-016-9436-6
   Kim M, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P83
   Kimble J., 1992, Thomas M. Cooley Law Review, V9, P1
   Li ZM, 2006, IEEE T SOFTWARE ENG, V32, P176, DOI 10.1109/TSE.2006.28
   Newman D., 2010, AUTOMATIC EVALUATION
   Nosek BA, 2015, SCIENCE, V348, P1422, DOI 10.1126/science.aab2374
   Paszke A, 2019, ADV NEUR IN, V32
   Phua C, 2004, SIGKDD Explorations, V6, P50, DOI DOI 10.1145/1007730.1007738
   Prana GAA, 2019, EMPIR SOFTW ENG, V24, P1296, DOI 10.1007/s10664-018-9660-3
   Portugal RLQ, 2016, 2016 IEEE 24TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW), P304, DOI [10.1109/REW.2016.29, 10.1109/REW.2016.056]
   Schober P, 2018, ANESTH ANALG, V126, P1763, DOI 10.1213/ANE.0000000000002864
   SCOTT AJ, 1974, BIOMETRICS, V30, P507, DOI 10.2307/2529204
   Sonnenburg S, 2007, J MACH LEARN RES, V8, P2443
   Sutton RS, 2018, ADAPT COMPUT MACH LE, P1
   Tantithamthavorn C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P286, DOI 10.1145/3183519.3183547
   Tantithamthavorn C, 2019, IEEE T SOFTWARE ENG, V45, P683, DOI 10.1109/TSE.2018.2794977
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Tian Y, 2015, PROC IEEE INT CONF S, P301, DOI 10.1109/ICSM.2015.7332476
   UPTON GJG, 1992, J ROY STAT SOC A STA, V155, P395, DOI 10.2307/2982890
   Wan ZY, 2020, IEEE T SOFTWARE ENG, V46, P1241, DOI 10.1109/TSE.2018.2877678
   Wan ZY, 2017, IEEE INT CONF SOFTW, P92, DOI 10.1109/ICST.2017.16
   Wang TZ, 2018, ADV NEUR IN, V31
   Weber S, 2014, 2014 IEEE INTERNATIONAL CONFERENCE ON DATA MINING WORKSHOP (ICDMW), P851, DOI 10.1109/ICDMW.2014.55
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Woodfield S. N., 1981, 5th International Conference on Software Engineering, P215
   Xia X, 2019, PROC INT CONF SOFTW, P924, DOI 10.1109/ICSE.2019.00098
   Yan M, 2019, IEEE T SOFTWARE ENG, V45, P1211, DOI 10.1109/TSE.2018.2831232
   Yan M, 2017, PROC IEEE INT CONF S, P529, DOI 10.1109/ICSME.2017.30
   Yang JW, 2018, LECT NOTES COMPUT SC, V11205, P690, DOI 10.1007/978-3-030-01246-5_41
   Zar JH, 2005, ENCY BIOSTAT, V7, DOI DOI 10.1002/0470011815.B2A15150
   Zhu Jiaxin, 2014, 8 ACMIEEE INT S EMPI, P30
NR 56
TC 10
Z9 10
U1 1
U2 19
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN 5
PY 2021
VL 26
IS 1
AR 2
DI 10.1007/s10664-020-09916-6
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA PW0HA
UT WOS:000610356600001
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Scalabrino, S
   Bavota, G
   Linares-Vásquez, M
   Piantadosi, V
   Lanza, M
   Oliveto, R
AF Scalabrino, Simone
   Bavota, Gabriele
   Linares-Vasquez, Mario
   Piantadosi, Valentina
   Lanza, Michele
   Oliveto, Rocco
TI API compatibility issues in Android: Causes and effectiveness of
   data-driven detection techniques
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Android; API compatibility issues; Empirical study; Taxonomy
AB Android fragmentation is a well-known issue referring to the adoption of different versions in the multitude of devices supporting such an operating system. Each Android version features a set of APIs provided to developers. These APIs are subject to changes and may cause compatibility issues. To support app developers, approaches have been proposed to automatically identify API compatibility issues.CiD, the state-of-the-art approach, is a data-driven solution learning how to detect those issues by analyzing the change history of Android APIs ("API side" learning). In this paper (extension of our MSR 2019 paper), we present an alternative data-driven approach, namedACRyL.ACRyLlearns from changes implemented in apps in response to API changes ("client side" learning). When comparing these two solutions on 668 apps, for a total of 11,863 snapshots, we found that there is no clear winner, since the two techniques are highly complementary, and none of them provides a comprehensive support in detecting API compatibility issues:ACRyLachieves a precision of 7.0% (28.0%, when considering only the severe warnings), whileCiDachieves a precision of 18.4%. This calls for more research in this field, and led us to run a second empirical study in which we manually analyze 500 pull-requests likely related to the fixing of compatibility issues, documenting theroot causebehind the fixed issue. The most common causes are related to changes in the Android APIs (similar to 87%), while about 13% of the issues are related to external causes, such as build and distribution, dependencies, and the app itself. The provided empirical knowledge can inform the building of better tools for the detection of API compatibility issues.
C1 [Scalabrino, Simone; Oliveto, Rocco] Univ Molise, Pesche, IS, Italy.
   [Piantadosi, Valentina] Univ Molise, Dept Bioscences & Terr, Pesche, IS, Italy.
   [Bavota, Gabriele; Lanza, Michele] Univ Svizzera Italiana, REVEAL, Software Inst, Lugano, Switzerland.
   [Linares-Vasquez, Mario] Univ Andes, Bogota, Colombia.
C3 University of Molise; University of Molise; Universita della Svizzera
   Italiana; Universidad de los Andes (Colombia)
RP Scalabrino, S (corresponding author), Univ Molise, Pesche, IS, Italy.
EM simone.scalabrino@unimol.it; gabriele.bavota@usi.ch;
   m.linaresv@uniandes.edu.co; valentina.piantadosi@unimol.it;
   michele.lanza@usi.ch; rocco.oliveto@unimol.it
RI Piantadosi, Valentina/AGP-5398-2022; Lanza, Michele/JNQ-9470-2023
OI Lanza, Michele/0000-0003-4391-0197; Piantadosi,
   Valentina/0000-0003-0666-6121; BAVOTA, Gabriele/0000-0002-2216-3148;
   Linares-Vasquez, Mario/0000-0003-0161-2888; Scalabrino,
   Simone/0000-0003-1764-9685
FU Italian Ministry of Education and Research [PON-ARS01 00860]; Swiss
   National Science Foundation [175513]; Swiss National Science Foundation
   for the SNF-NRP 75 project on "Exploratory Visual Analytics for
   Interaction Graphs"
FX Scalabrino and Oliveto gratefully acknowledge the financial support of
   the Italian Ministry of Education and Research for the PON-ARS01 00860
   project on "Ambient-intelligent Tele-monitoring and Telemetry for
   Incepting and Catering over hUman Sustainability - ATTICUS".; Bavota
   gratefully acknowledges the financial support of the Swiss National
   Science Foundation for the CCQR project (SNF Project No. 175513).; Lanza
   gratefully acknowledges the financial support of the Swiss National
   Science Foundation for the SNF-NRP 75 project on "Exploratory Visual
   Analytics for Interaction Graphs".
CR Amann S, 2019, IEEE T SOFTWARE ENG, V45, P1170, DOI 10.1109/TSE.2018.2827384
   Amann S, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P464, DOI [10.1145/2901739.2903506, 10.1109/MSR.2016.055]
   Backes M, 2016, PROCEEDINGS OF THE 25TH USENIX SECURITY SYMPOSIUM, P1101
   Bartel A, 2012, IEEE INT CONF AUTOM, P274, DOI 10.1145/2351676.2351722
   Bavota G, 2015, IEEE T SOFTWARE ENG, V41, P384, DOI 10.1109/TSE.2014.2367027
   Brito G, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P360, DOI 10.1109/SANER.2016.99
   Choudhary SR, 2015, IEEE INT CONF AUTOM, P429, DOI 10.1109/ASE.2015.89
   Dan Han, 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P83, DOI 10.1109/WCRE.2012.18
   Dilhara M, 2018, 2018 IEEE/ACM 5TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT), P67, DOI 10.1145/3197231.3197255
   Fazzini M, 2017, IEEE INT CONF AUTOM, P308, DOI 10.1109/ASE.2017.8115644
   He DJ, 2018, IEEE INT CONF AUTOM, P167, DOI 10.1145/3238147.3238185
   Joorabchi Mona Erfani, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P15, DOI 10.1109/ESEM.2013.9
   Li L, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P153, DOI 10.1145/3213846.3213857
   Li L, 2018, IEEE WORK CONF MIN S, P254, DOI 10.1145/3196398.3196419
   Li L, 2016, PROC IEEE INT CONF S, P411, DOI 10.1109/ICSME.2016.35
   Linares-Vasquez M., 2014, P 22 INT C PROGR COM, P83, DOI DOI 10.1145/2597008.2597155
   Linares-Vásquez M, 2017, PROC IEEE INT CONF S, P399, DOI 10.1109/ICSME.2017.27
   Linares-Vasquez Mario, 2013, P 2013 9 JOINT M FDN, P477, DOI DOI 10.1145/2491411.2491428
   McDonnell T, 2013, PROC IEEE INT CONF S, P70, DOI 10.1109/ICSM.2013.18
   Mutchler P, 2016, 2016 IEEE SYMPOSIUM ON SECURITY AND PRIVACY WORKSHOPS (SPW 2016), P204, DOI 10.1109/SPW.2016.31
   Robbes R., 2012, P ACM SIGSOFT 20 INT
   Sawant AA, 2016, PROC IEEE INT CONF S, P400, DOI 10.1109/ICSME.2016.64
   Scalabrino Simone, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P288, DOI 10.1109/MSR.2019.00055
   Scalabrino S, 2020, REPLICATION PACKAGE
   Spencer D., 2009, CARD SORTING DESIGNI
   Wang R, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON MECHATRONICS, ROBOTICS AND AUTOMATION (ICMRA), P127, DOI 10.1109/ICMRA.2018.8490554
   Wei LL, 2016, IEEE INT CONF AUTOM, P226, DOI 10.1145/2970276.2970312
   Wu DY, 2017, LECT NOTES COMPUT SC, V10251, P678, DOI 10.1007/978-3-319-60033-8_58
   Zhang ZY, 2019, 2019 IEEE/ACM 6TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2019), P40, DOI 10.1109/MOBILESoft.2019.00016
   Zhou J, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P266, DOI 10.1145/2950290.2950298
   Zhou XY, 2014, P IEEE S SECUR PRIV, P409, DOI 10.1109/SP.2014.33
NR 31
TC 14
Z9 14
U1 1
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2020
VL 25
IS 6
BP 5006
EP 5046
DI 10.1007/s10664-020-09877-w
EA OCT 2020
PG 41
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA OI4BB
UT WOS:000577411600001
DA 2024-07-18
ER

PT J
AU Maipradit, R
   Treude, C
   Hata, H
   Matsumoto, K
AF Maipradit, Rungroj
   Treude, Christoph
   Hata, Hideaki
   Matsumoto, Kenichi
TI Wait for it: identifying "On-Hold" self-admitted technical debt
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Self-admitted technical debt; Qualitative study; Classification
AB Self-admitted technical debt refers to situations where a software developer knows that their current implementation is not optimal and indicates this using a source code comment. In this work, we hypothesize that it is possible to develop automated techniques to understand a subset of these comments in more detail, and to propose tool support that can help developers manage self-admitted technical debt more effectively. Based on a qualitative study of 333 comments indicating self-admitted technical debt, we first identify one particular class of debt amenable to automated management: on-hold self-admitted technical debt (on-hold SATD), i.e., debt which contains a condition to indicate that a developer is waiting for a certain event or an updated functionality having been implemented elsewhere. We then design and evaluate an automated classifier which can identify these on-hold instances with an area under the receiver operating characteristic curve (AUC) of 0.98 as well as detect the specific conditions that developers are waiting for. Our work presents a first step towards automated tool support that is able to indicate when certain instances of self-admitted technical debt are ready to be addressed.
C1 [Maipradit, Rungroj; Hata, Hideaki; Matsumoto, Kenichi] Nara Inst Sci & Technol, Ikoma, Japan.
   [Treude, Christoph] Univ Adelaide, Adelaide, SA, Australia.
C3 Nara Institute of Science & Technology; University of Adelaide
RP Maipradit, R (corresponding author), Nara Inst Sci & Technol, Ikoma, Japan.
EM maipradit.rungroj.mm6@is.naist.jp; christoph.treude@adelaide.edu.au;
   hata@is.naist.jp; matumoto@is.naist.jp
RI Treude, Christoph/AAZ-6257-2021; Maipradit, Rungroj/JXL-2842-2024; Hata,
   Hideaki/N-7103-2019; Hata, Hideaki/GQB-2557-2022
OI Maipradit, Rungroj/0000-0003-4286-9807; Hata,
   Hideaki/0000-0003-0708-5222; Treude, Christoph/0000-0002-6919-2149
CR Abouelhoda M. I., 2004, Journal of Discrete Algorithms, V2, P53, DOI 10.1016/S1570-8667(03)00065-0
   Al Omran FNA, 2017, IEEE WORK CONF MIN S, P187, DOI 10.1109/MSR.2017.42
   [Anonymous], 2016, SBSI 2016
   Bavota G, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P315, DOI [10.1109/MSR.2016.040, 10.1145/2901739.2901742]
   Bazrafshan S, 2013, PROC IEEE INT CONF S, P50, DOI 10.1109/ICSM.2013.16
   de Freitas Farias MA, 2016, INT C ENT INF SYST, P284
   Farias MAD, 2015, 2015 IEEE 7TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD) PROCEEDINGS, P25, DOI 10.1109/MTD.2015.7332621
   Ernst NA, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P50, DOI 10.1145/2786805.2786848
   Feurer M, 2015, ADV NEUR IN, V28
   Flisar J, 2019, IEEE ACCESS, V7, P106475, DOI 10.1109/ACCESS.2019.2933318
   Honnibal Matthew, 2017, spaCy: Industrialstrength natural language processing in Python
   Huang Q, 2018, EMPIR SOFTW ENG, V23, P418, DOI 10.1007/s10664-017-9522-4
   Ichinose T, 2016, 2016 4TH INTL CONF ON APPLIED COMPUTING AND INFORMATION TECHNOLOGY/3RD INTL CONF ON COMPUTATIONAL SCIENCE/INTELLIGENCE AND APPLIED INFORMATICS/1ST INTL CONF ON BIG DATA, CLOUD COMPUTING, DATA SCIENCE & ENGINEERING (ACIT-CSII-BCD), P158, DOI [10.1109/ACIT-CSII-BCD.2016.39, 10.1109/ACIT-CSII-BCD.2016.040]
   Kamei Y, 2016, CEUR WORKSHOP P, V1771, P68
   Kniberg H., 2013, GOOD BAD TECHNICAL D
   Lim E, 2012, IEEE SOFTWARE, V29, P22, DOI 10.1109/MS.2012.130
   Liu ZX, 2018, PROC IEEE ACM INT C, P9, DOI 10.1145/3183440.3183478
   Maldonado ED, 2017, PROC IEEE INT CONF S, P238, DOI 10.1109/ICSME.2017.8
   Maldonado ED, 2015, 2015 IEEE 7TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD) PROCEEDINGS, P9, DOI 10.1109/MTD.2015.7332619
   Maldonado ED, 2017, IEEE T SOFTWARE ENG, V43, P1044, DOI 10.1109/TSE.2017.2654244
   McConnell S., 2007, TECHNICAL DEBT
   Mensah S, 2018, J SYST SOFTWARE, V135, P37, DOI 10.1016/j.jss.2017.09.026
   Mensah Solomon, 2016, PROC CEUR WORKSHOP P, V1771, P72
   Palomba F, 2017, INT C PROGRAM COMPRE, P176, DOI 10.1109/ICPC.2017.38
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Potdar A, 2014, PROC IEEE INT CONF S, P91, DOI 10.1109/ICSME.2014.31
   Prana GAA, 2019, EMPIR SOFTW ENG, V24, P1296, DOI 10.1007/s10664-018-9660-3
   Ren X, 2019, ACM T SOFTWARE ENG M
   SALTON G, 1988, INFORM PROCESS MANAG, V24, P513, DOI 10.1016/0306-4573(88)90021-0
   Shirakawa M, 2017, GITHUB IWNSEW NGWEIG
   Shirakawa M, 2015, PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW 2015), P960, DOI 10.1145/2736277.2741628
   Shirakawa M, 2017, ACM T INFORM SYST, V36, DOI 10.1145/3052775
   Shull FJ, 2008, EMPIR SOFTW ENG, V13, P211, DOI 10.1007/s10664-008-9060-1
   Sierra G, 2019, J SYST SOFTWARE, V152, P70, DOI 10.1016/j.jss.2019.02.056
   Terdchanakul P, 2017, PROC IEEE INT CONF S, P534, DOI 10.1109/ICSME.2017.14
   Viera AJ, 2005, FAM MED, V37, P360
   Wattanakriengkrai S, 2018, INT WORKSH EMPIR ENG, P7, DOI 10.1109/IWESEP.2018.00010
   Wehaibi S, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P179, DOI 10.1109/SANER.2016.72
   Yan M, 2019, IEEE T SOFTWARE ENG, V45, P1211, DOI 10.1109/TSE.2018.2831232
   Zampetti F, 2018, IEEE WORK CONF MIN S, P526, DOI 10.1145/3196398.3196423
   Zampetti F, 2017, PROC IEEE INT CONF S, P216, DOI 10.1109/ICSME.2017.44
NR 41
TC 26
Z9 30
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2020
VL 25
IS 5
BP 3770
EP 3798
DI 10.1007/s10664-020-09854-3
EA AUG 2020
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NJ1FD
UT WOS:000555353200001
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Kondo, M
   German, DM
   Mizuno, O
   Choi, EH
AF Kondo, Masanari
   German, Daniel M.
   Mizuno, Osamu
   Choi, Eun-Hye
TI The impact of context metrics on just-in-time defect prediction
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Just-in-time defect prediction; Defect prediction; Source code changes;
   Context lines; Changed lines; Indentation metrics; Code churn metrics
ID SOFTWARE CHANGES; CODE CHURN; COMPLEXITY; FAULTS
AB Traditional just-in-time defect prediction approaches have been using changed lines of software to predict defective-changes in software development. However, they disregard information around the changed lines. Our main hypothesis is that such information has an impact on the likelihood that the change is defective. To take advantage of this information in defect prediction, we consider n-lines (n = 1,2, horizontal ellipsis ) that precede and follow the changed lines (which we call context lines), and propose metrics that measure them, which we call "Context Metrics." Specifically, these context metrics are defined as the number of words/keywords in the context lines. In a large-scale empirical study using six open source software projects, we compare the performance of using our context metrics, traditional code churn metrics (e.g., the number of modified subsystems), our extended context metrics which measure not only context lines but also changed lines, and combination metrics that use two extended context metrics at a prediction model for defect prediction. The results show that context metrics that consider the context lines of added-lines achieve the best median value in all cases in terms of a statistical test. Moreover, using few number of context lines is suitable for context metric that considers words, and using more number of context lines is suitable for context metric that considers keywords. Finally, the combination metrics of two extended context metrics significantly outperform all studied metrics in all studied projects w. r. t. the area under the receiver operation characteristic curve (AUC) and Matthews correlation coefficient (MCC).
C1 [Kondo, Masanari; Mizuno, Osamu] Kyoto Inst Technol, Software Engn Lab, Kyoto, Japan.
   [German, Daniel M.] Univ Victoria, Dept Comp Sci, Victoria, BC, Canada.
   [Choi, Eun-Hye] Informat Technol Res Inst, Natl Inst Adv Ind Sci, Technol, Sapporo, Japan.
C3 Kyoto Institute of Technology; University of Victoria; National
   Institute of Advanced Industrial Science & Technology (AIST)
RP Kondo, M (corresponding author), Kyoto Inst Technol, Software Engn Lab, Kyoto, Japan.
EM m-kondo@se.is.kit.ac.jp
RI Choi, Eun-Hye/M-7625-2016
OI Mizuno, Osamu/0000-0001-8061-7657
CR [Anonymous], 2012, THESIS
   [Anonymous], 2007, PROMISE 07, DOI DOI 10.1109/PROMISE.2007.10
   Aversano L., 2007, IWPSE 07 9 INT WORKS, P19
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Bettenburg N., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P60, DOI 10.1109/MSR.2012.6224300
   Boughorbel S, 2017, PLOS ONE, V12, DOI 10.1371/journal.pone.0177678
   Bowes D., 2012, Proceedings of the 8th International Conference on Predictive Models in Software Engineering, P109, DOI [10.1145/2365324.2365338, DOI 10.1145/2365324.2365338]
   Chicco D, 2017, BIODATA MIN, V10, DOI 10.1186/s13040-017-0155-3
   Cohen J., 1988, STAT POWER ANAL BEHA
   D'Ambros Marco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P31, DOI 10.1109/MSR.2010.5463279
   FARRAR DE, 1967, REV ECON STAT, V49, P92, DOI 10.2307/1937887
   Fukushima T., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, MSR 2014, P172, DOI DOI 10.1145/2597073.2597075
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Halstead M. H., 1977, ELEMENTS SOFTWARE SC
   Han J, 1995, LECT NOTES COMPUT SC, V930, P195
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Hata H, 2012, PROC INT CONF SOFTW, P200, DOI 10.1109/ICSE.2012.6227193
   Hindle A, 2008, INT C PROGRAM COMPRE, P133, DOI 10.1109/ICPC.2008.13
   Jiang T, 2013, IEEE INT CONF AUTOM, P279, DOI 10.1109/ASE.2013.6693087
   Kamei Y, 2016, EMPIR SOFTW ENG, V21, P2072, DOI 10.1007/s10664-015-9400-x
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Karunanithi N., 1993, Proceedings. Fourth International Symposium on Software Reliability Engineering (Cat. No.93TH0560-3), P310, DOI 10.1109/ISSRE.1993.624301
   KHOSHGOFTAAR TM, 1994, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P58, DOI 10.1109/ICSM.1994.336789
   Khoshgoftaar TM, 1996, SEVENTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P364, DOI 10.1109/ISSRE.1996.558896
   Kim S, 2006, Proceedings of the 2006 international workshop on Mining software repositories, P173
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kim S, 2007, PROC INT CONF SOFTW, P489
   Kim S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P481, DOI 10.1145/1985793.1985859
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Li J, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P318, DOI 10.1109/QRS.2017.42
   liwerski J, 2005, ACM SIGSOFT SOFTWARE, V30, P1, DOI [10.1145/1082983.1083147, DOI 10.1145/1083142.1083147, DOI 10.1145/1082983.1083147]
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   McDonald J.H., 2014, HDB BIOL STAT
   Menzies T, 2010, AUTOMAT SOFTW ENG, V17, P375, DOI 10.1007/s10515-010-0069-5
   Microsoft, 2016, OV C STAT
   Mizuno O., 2007, Proceedings of the 11th Joint Meeting of the European Software Engineering Conference and the 14th ACM SIGSOFT Symposium on Foundations of Software Engineering, P405
   Mockus A, 2000, PROC IEEE INT CONF S, P120, DOI 10.1109/ICSM.2000.883028
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Munson JC, 1998, PROC IEEE INT CONF S, P24, DOI 10.1109/ICSM.1998.738486
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Ohlsson M. C., 1999, 1999 IEEE Aerospace Conference. Proceedings (Cat. No.99TH8403), P69, DOI 10.1109/AERO.1999.790190
   Oram A.Wilson., 2010, Making Software: What Really Works, and Why We Believe It
   Ostrand TJ., 2004, Proceedings of the 2004 ACM SIGSOFT International Symposium on Software Testing and Analysis, ISSTA '04, V29, P86, DOI [DOI 10.1145/1013886.1007524, 10.1145/1013886.1007524]
   Quinlan R., 1993, C4 5 PROGRAMS MACHIN
   Rice ME, 2005, LAW HUMAN BEHAV, V29, P615, DOI 10.1007/s10979-005-6832-7
   Romanski P, 2018, FSELECTOR
   Rosen C, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P966, DOI 10.1145/2786805.2803183
   Shannon C. E., 1948, BELL SYST TECH J, V27, P379, DOI DOI 10.1002/J.1538-7305.1948.TB01338.X
   Shepperd M, 2014, IEEE T SOFTWARE ENG, V40, P603, DOI 10.1109/TSE.2014.2322358
   Shihab E., 2012, P ACM SIGSOFT 20 INT, P1
   Stevenson Angus., 2010, New Oxford American Dictionary, V3rd
   Tan M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P99, DOI 10.1109/ICSE.2015.139
   Tantithamthavorn C, 2018, P 40 INT C SOFTW ENG
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Tantithamthavorn C, 2016, PROC INT CONF SOFTW, P321, DOI 10.1145/2884781.2884857
   Tassey G., 2002, EC IMPACTS INADEQUAT
   Thomas WS, 2015, LSCP LIGHTWEIGHT SOU
   Tin Kam Ho, 1995, Proceedings of the Third International Conference on Document Analysis and Recognition, P278, DOI 10.1109/ICDAR.1995.598994
   Wang S, 2016, PROC INT CONF SOFTW, P297, DOI 10.1145/2884781.2884804
   Yang XL, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P17, DOI 10.1109/QRS.2015.14
   Zhang F, 2016, PROC INT CONF SOFTW, P309, DOI 10.1145/2884781.2884839
   Zwillinger D., 1999, CRC Standard Probability and Statistics Tables and Formulae
NR 64
TC 35
Z9 37
U1 0
U2 8
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN
PY 2020
VL 25
IS 1
BP 890
EP 939
DI 10.1007/s10664-019-09736-3
PG 50
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KP0WS
UT WOS:000515965100023
DA 2024-07-18
ER

PT J
AU Kolesnikov, S
   Siegmund, N
   Kästner, C
   Apel, S
AF Kolesnikov, Sergiy
   Siegmund, Norbert
   Kastner, Christian
   Apel, Sven
TI On the relation of control-flow and performance feature interactions: a
   case study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Highly configurable software system; Feature; Feature interaction;
   Feature-interaction prediction; Control-flow feature interaction;
   Performance feature interaction; Variability
ID PREDICTION
AB Detecting feature interactions is imperative for accurately predicting performance of highly-configurable systems. State-of-the-art performance prediction techniques rely on supervised machine learning for detecting feature interactions, which, in turn, relies on time-consuming performance measurements to obtain training data. By providing information about potentially interacting features, we can reduce the number of required performance measurements and make the overall performance prediction process more time efficient. We expect that information about potentially interacting features can be obtained by analyzing the source code of a highly-configurable system, which is computationally cheaper than performing multiple performance measurements. To this end, we conducted an in-depth qualitative case study on two real-world systems (mbedTLS and SQLite), in which we explored the relation between internal (precisely control-flow) feature interactions, detected through static program analysis, and external (precisely performance) feature interactions, detected by performance-prediction techniques using performance measurements. We found that a relation exists that can potentially be exploited to predict performance interactions.
C1 [Kolesnikov, Sergiy] Univ Passau, Chair Software Engn, Passau, Germany.
   [Siegmund, Norbert] Bauhaus Univ Weimar, Intelligent Software Syst, Weimar, Germany.
   [Kastner, Christian] Carnegie Mellon Univ, Sch Comp Sci, Pittsburgh, PA 15213 USA.
   [Apel, Sven] Saarland Univ, Software Engn, Saarbrucken, Germany.
C3 University of Passau; Bauhaus-Universitat Weimar; Carnegie Mellon
   University; Saarland University
RP Kolesnikov, S (corresponding author), Univ Passau, Chair Software Engn, Passau, Germany.
EM kolesnik@fim.uni-passau.de
OI Apel, Sven/0000-0003-3687-2233
FU German Research Foundation [AP 206/5, AP 206/6, AP 206/7, AP 206/11, SI
   2171/2, SI 2171/3]; Austrian Federal Ministry of Transport, Innovation
   and Technology (BMVIT) [849928]; National Science Foundation [1318808,
   1552944, 1717022]; Science of Security Lablet [H9823014C0140]; AFRL
   [FA8750-16-2-0042]; DARPA [FA8750-16-2-0042]; Division Of Computer and
   Network Systems; Direct For Computer & Info Scie & Enginr [1717022]
   Funding Source: National Science Foundation; Division of Computing and
   Communication Foundations; Direct For Computer & Info Scie & Enginr
   [1552944, 1318808] Funding Source: National Science Foundation
FX Kolesnikov's, and Apel's work has been supported by the German Research
   Foundation (AP 206/5, AP 206/6, AP 206/7, AP 206/11) and by the Austrian
   Federal Ministry of Transport, Innovation and Technology (BMVIT) project
   No. 849928. Siegmund's work has been supported by the German Research
   Foundation under the contracts SI 2171/2 and SI 2171/3. Kastner's work
   has been supported in part by the National Science Foundation (awards
   1318808, 1552944, and 1717022), the Science of Security Lablet
   (H9823014C0140), and AFRL and DARPA (FA8750-16-2-0042).
CR [Anonymous], 2007, GUIDE ADV EMPIRICAL
   [Anonymous], 2012, ACM SIGOPS OPER SYST, DOI [DOI 10.1145/2094091.2094095, 10.1145/2039239.2039242]
   [Anonymous], 2003, QUALITATIVE RES METH
   [Anonymous], 2016, Feature-Oriented Software Product Lines
   Apel Sven., 2013, P 5 INT WORKSHOP FEA, P1, DOI [10.1145/2528265.2528267, DOI 10.1145/2528265.2528267]
   Borgelt C, 2012, WIRES DATA MIN KNOWL, V2, P437, DOI 10.1002/widm.1074
   Bruns G, 2005, FEATURE INTERACTIONS IN TELECOMMUNICATIONS AND SOFTWARE SYSTEMS VIII, P3
   Duong T., 2011, HERE COME NINJAS
   Ferreira G, 2015, P HOTS
   Flyvbjerg B, 2006, QUAL INQ, V12, P219, DOI 10.1177/1077800405284363
   Garvin BJ, 2011, 22ND IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P90, DOI 10.1109/ISSRE.2011.25
   Guo JM, 2018, EMPIR SOFTW ENG, V23, P1826, DOI 10.1007/s10664-017-9573-6
   Guo JM, 2013, IEEE INT CONF AUTOM, P301, DOI 10.1109/ASE.2013.6693089
   Jaccard P., 1912, New Phytologist, V11, P37, DOI [10.1111/j.1469-8137.1912.tb05611.x, DOI 10.1111/J.1469-8137.1912.TB05611.X]
   Kaltenecker C, 2019, P ICSE
   Kang Kyo C, 1990, Technical Report
   Kastner Christian., 2009, Proceedings of the 13th International Software Product Line Conference, P181, DOI DOI 10.1145/1753235.1753261
   Kim JS, 2011, PROCEEDINGS OF THE STLE/ASME INTERNATIONAL JOINT TRIBOLOGY CONFERENCE, 2010, P57
   Kolesnikov S., 2018, SOFTW SYST MODEL, P1
   Lillack M, 2018, IEEE T SOFTWARE ENG, V44, P1269, DOI 10.1109/TSE.2017.2756048
   Maqbool O, 2007, IEEE T SOFTWARE ENG, V33, P759, DOI 10.1109/TSE.2007.70732
   Medeiros F, 2016, PROC INT CONF SOFTW, P643, DOI 10.1145/2884781.2884793
   Meinicke J, 2016, IEEE INT CONF AUTOM, P483, DOI 10.1145/2970276.2970322
   Nair V, 2018, AUTOMAT SOFTW ENG, V25, P247, DOI 10.1007/s10515-017-0225-2
   Nair V, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P257, DOI 10.1145/3106237.3106238
   Passos Leonardo, 2018, IEEE T SOFTWARE ENG
   Qiao Y, 2013, IEEE INT CONF TRUST, P265, DOI 10.1109/TrustCom.2013.36
   Reisner E., 2010, P ACM IEEE INT C SOF, V1, P445, DOI DOI 10.1145/1806799.1806864
   Sarkar A, 2015, IEEE INT CONF AUTOM, P342, DOI 10.1109/ASE.2015.45
   Siegmund N, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P284, DOI 10.1145/2786805.2786845
   Siegmund N, 2014, ACM SIGPLAN NOTICES, V49, P95, DOI [10.1145/2517208.2517209, 10.1145/2637365.2517209]
   Siegmund N, 2013, INFORM SOFTWARE TECH, V55, P491, DOI 10.1016/j.infsof.2012.07.020
   Siegmund N, 2012, PROC INT CONF SOFTW, P167, DOI 10.1109/ICSE.2012.6227196
   Soares LR, 2018, PROCEEDINGS OF THE 17TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING: CONCEPTS AND EXPERIENCES (GPCE'18), P40, DOI 10.1145/3278122.3278127
   Nguyen T, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P655, DOI 10.1145/2950290.2950311
   Thereska E, 2010, PERF E R SI, V38, P1, DOI 10.1145/1811099.1811041
   TU H, 2018, IEEE T SOFTWARE ENG, P19, DOI DOI 10.1109/TSE.2018.2870895
   Von Rhein A, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3280986
   von Rhein A, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P178, DOI 10.1109/ICSE.2015.39
   Westermann D, 2012, IEEE INT CONF AUTOM, P190, DOI 10.1145/2351676.2351703
   Zave P., 2009, SOFTWARE REQUIREMENT, P267
   Zhang Y, 2015, IEEE INT CONF AUTOM, P365, DOI 10.1109/ASE.2015.15
NR 42
TC 4
Z9 5
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2019
VL 24
IS 4
BP 2410
EP 2437
DI 10.1007/s10664-019-09705-w
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IL9CL
UT WOS:000477582700020
DA 2024-07-18
ER

PT J
AU Blincoe, K
   Dehghan, A
   Salaou, AD
   Neal, A
   Linaker, J
   Damian, D
AF Blincoe, Kelly
   Dehghan, Ali
   Salaou, Abdoul-Djawadou
   Neal, Adam
   Linaker, Johan
   Damian, Daniela
TI High-level software requirements and iteration changes: a predictive
   model
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software requirements; Completion prediction; Release planning; Mining
   software repositories; Machine learning
ID STATIC CODE ATTRIBUTES; RESOLUTION TIME; READINESS; ALGORITHM
AB Knowing whether a software feature will be completed in its planned iteration can help with release planning decisions. However, existing research has focused on predictions of only low-level software tasks, like bug fixes. In this paper, we describe a mixed-method empirical study on three large IBM projects. We investigated the types of iteration changes that occur. We show that up to 54% of high-level requirements do not make their planned iteration. Requirements are most often pushed out to the next iteration, but high-level requirements are also commonly moved to the next minor or major release or returned to the product or release backlog. We developed and evaluated a model that uses machine learning to predict if a high-level requirement will be completed within its planned iteration. The model includes 29 features that were engineered based on prior work, interviews with IBM developers, and domain knowledge. Predictions were made at four different stages of the requirement lifetime. Our model is able to achieve up to 100% precision. We ranked the importance of our model features and found that some features are highly dependent on project and prediction stage. However, some features (e.g., the time remaining in the iteration and creator of the requirement) emerge as important across all projects and stages. We conclude with a discussion on future research directions.
C1 [Blincoe, Kelly] Univ Auckland, Dept Elect & Comp Engn, Auckland, New Zealand.
   [Dehghan, Ali; Salaou, Abdoul-Djawadou; Damian, Daniela] Univ Victoria, Victoria, BC V8P 5C2, Canada.
   [Neal, Adam] Persistent Syst, Toronto, ON, Canada.
   [Linaker, Johan] Lund Univ, Lund, Sweden.
C3 University of Auckland; University of Victoria; Lund University
RP Blincoe, K (corresponding author), Univ Auckland, Dept Elect & Comp Engn, Auckland, New Zealand.
EM kblincoe@acm.org; dehghan@uvic.ca; nealadam@ca.ibm.com;
   johan.linaker@cs.lth.se; danielad@uvic.ca
RI Linåker, Johan/AAR-3849-2021; Blincoe, Kelly/AAI-6285-2020
OI Linåker, Johan/0000-0001-9851-1404; Blincoe, Kelly/0000-0003-4092-9706
CR Abdelmoez W, 2012, 2012 22ND INTERNATIONAL CONFERENCE ON COMPUTER THEORY AND APPLICATIONS (ICCTA), P167, DOI 10.1109/ICCTA.2012.6523564
   Alam A, 2017, P 21 INT C EV ASS SO, P374
   Alam A., 2016, P 10 ACM IEEE INT S, P27
   Duc AN, 2011, IFIP ADV INF COMM TE, V365, P1
   [Anonymous], 2013, RAPIDMINER DATA MINI
   Assar S, 2016, EMPIR SOFTW ENG, V21, P1437, DOI 10.1007/s10664-015-9391-7
   Asthana A, 2009, CQR: 2009 IEEE INTERNATIONAL WORKSHOP TECHNICAL COMMITTEE AND COMMUNICATIONS QUALITY AND RELIABILITY, P7
   Azhar Damir, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P173, DOI 10.1109/ESEM.2013.25
   Bhattacharya Pamela., 2011, PROCEEDING 8 WORKING, P207, DOI DOI 10.1145/1985441.1985472
   Breiman L, 2001, MACH LEARN, V45, P5, DOI 10.1023/A:1010933404324
   BRETTSCHNEIDER R, 1989, IEEE SOFTWARE, V6, P100, DOI 10.1109/52.31659
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Dehghan A, 2017, IEEE WORK CONF MIN S, P124, DOI 10.1109/MSR.2017.53
   Dehghan Ali., 2016, P 2 INT WORKSHOP SOF, P22
   Didar Al Alam S. M., 2016, 2016 IEEE/ACM 5th International Workshop on Realizing Artificial Intelligence Synergies in Software Engineering (RAISE). Proceedings, P15, DOI 10.1109/RAISE.2016.011
   Domingos P, 2012, COMMUN ACM, V55, P78, DOI 10.1145/2347736.2347755
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   EFRON B, 1983, J AM STAT ASSOC, V78, P316, DOI 10.2307/2288636
   FERNANDEZDELGAD.M, 1981, J MACH LEARN RES, V15, P3133
   Fortmann-Roe S., 2012, Understanding the Bias-Variance Trade-off
   Franch X, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P894, DOI 10.1145/2889160.2891051
   Giger E., 2010, P 2 INT WORKSH REC S, P52
   Gueorguiev S., 2009, P 11 ANN C GENETIC E, P1673, DOI DOI 10.1145/1569901.1570125
   Guo PJ, 2010, Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering, P495
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   He HB, 2009, IEEE T KNOWL DATA EN, V21, P1263, DOI 10.1109/TKDE.2008.239
   Heikkilä VT, 2015, PROCEEDINGS 41ST EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS SEAA 2015, P199, DOI 10.1109/SEAA.2015.70
   Idri A, 2016, J SYST SOFTWARE, V118, P151, DOI 10.1016/j.jss.2016.05.016
   Jeong G, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P111, DOI 10.1145/1595696.1595715
   Jorgensen M, 2014, IEEE SOFTWARE, V31, P37, DOI 10.1109/MS.2014.49
   Kikas R, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P291, DOI [10.1109/MSR.2016.038, 10.1145/2901739.2901751]
   Kocaguneli E, 2013, J SYST SOFTWARE, V86, P1879, DOI 10.1016/j.jss.2013.02.053
   Kocaguneli E, 2012, IEEE T SOFTWARE ENG, V38, P1403, DOI 10.1109/TSE.2011.111
   Lindstrom L, 2004, INFORM SYST MANAGE, V21, P41, DOI 10.1201/1078/44432.21.3.20040601/82476.7
   Liu H, 1995, PROC INT C TOOLS ART, P388, DOI 10.1109/TAI.1995.479783
   Marks L., 2011, Proceedings of the 7th International Conference on Predictive Models in Software Engineering, P1, DOI [10.1145/2020390.2020401, DOI 10.1145/2020390.2020401]
   McBride M, 2014, MANAGING PROJECTS RE, P171
   McConnell S, 1997, IEEE SOFTWARE, V14, P136, DOI 10.1109/52.589257
   McConnell S., 1998, Software Project Survival Guide: How to Be Sure Your First Important Project Isnt Your Last
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P637, DOI 10.1109/TSE.2007.70721
   Minku LL, 2016, PROG ARTIF INTELL, V5, P307, DOI 10.1007/s13748-016-0092-2
   Panjer LucasD., 2007, Proceedings of the 4th International Workshop on Mining Software Repositories, MSR '07, P29
   Pearse T., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P207, DOI 10.1109/METRIC.1999.809742
   Petersen K, 2009, INT SYMP EMP SOFTWAR, P402
   Pfahl D, 2016, P 20 INT C EV ASS SO, P42
   Price Kenneth, 2006, NAT COMP SER, DOI 10.1007/3-540-31306-0
   Quah TS, 2009, INFORM SCIENCES, V179, P430, DOI 10.1016/j.ins.2008.10.005
   Raja U, 2013, EMPIR SOFTW ENG, V18, P117, DOI 10.1007/s10664-012-9197-9
   Ramarao P, 2016, 2016 International Conference on Information Systems Engineering (ICISE), P57, DOI 10.1109/ICISE.2016.18
   Rothman J, 2014, MEASUREMENTS REDUCE
   Rothman J, 2002, STQE MAGAZINE
   Ruhe G, 2005, HANDBOOK OF SOFTWARE ENGINEERING AND KNOWLEDGE ENGINEERING, VOL 3: RECENT ADVANCES, P365, DOI 10.1142/9789812775245_0013
   Satapathy PR, 2013, EVALUATION SOFTWARE
   Selya AS, 2012, FRONT PSYCHOL, V3, DOI 10.3389/fpsyg.2012.00111
   Seymour J, 1988, PC MAG, V7, P77
   Ting KM, 2002, IEEE T KNOWL DATA EN, V14, P659, DOI 10.1109/TKDE.2002.1000348
   Ware M. P., 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P230, DOI 10.1109/ICST.2008.11
   Weiss C, 2007, P 4 INT WORKSH MIN S, P1, DOI [10.1109/MSR.2007.13, DOI 10.1109/MSR.2007.13]
   Wild R., 2012, 2012 45th Hawaii International Conference on System Sciences (HICSS), P5360, DOI 10.1109/HICSS.2012.206
   Yang F, 2009, BMC BIOINFORMATICS, V10, DOI 10.1186/1471-2105-10-S1-S22
   Zeng H, 2004, P INT COMP SOFTW APP, P20
   Zhang HY, 2007, IEEE T SOFTWARE ENG, V33, P635, DOI 10.1109/TSE.2007.70706
   Zhang QF, 2007, IEEE T EVOLUT COMPUT, V11, P712, DOI 10.1109/TEVC.2007.892759
   Zhou Y., 2016, J SOFTWARE EVOLUTION
NR 64
TC 8
Z9 8
U1 2
U2 8
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2019
VL 24
IS 3
BP 1610
EP 1648
DI 10.1007/s10664-018-9656-z
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ID9YT
UT WOS:000472043800017
DA 2024-07-18
ER

PT J
AU Huang, YH
   da Costa, DA
   Zhang, F
   Zou, Y
AF Huang, Yonghui
   da Costa, Daniel Alencar
   Zhang, Feng
   Zou, Ying
TI An empirical study on the issue reports with questions raised during the
   issue resolving process
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Issue reports; Questions; Bug fixing; Empirical study
ID BUG REPORTS; DUPLICATE; TOPICS
AB An issue report describes a bug or a feature request for a software system. When resolving an issue report, developers may discuss with other developers and/or the reporter to clarify and resolve the reported issue. During this process, questions can be raised by developers in issue reports. Having unnecessary questions raised may impair the efficiency to resolve the reported issues, since developers may have to wait a considerable amount of time before receiving the answers to their questions. In this paper, we perform an empirical study on the questions raised in the issue resolution process to understand the further delay caused by these questions. Our goal is to gain insights on the factors that may trigger questions in issue reports. We build prediction models to capture such issue reports when they are submitted. Our results indicate that it is feasible to give developers an early warning as to whether questions will be raised in an issue report at the issue report filling time. We examine the raised questions in 154,493 issue reports of three large-scale systems (i.e., Linux, Firefox and Eclipse). First, we explore the topics of the raised questions. Then, we investigate four characteristics of issue reports with raised questions: (i) resolving time, (ii) number of developers, (iii) comments, and (iv) reassignments. Finally, we build a prediction model to predict if questions are likely to be raised by a developer in an issue report. We apply the random forest, logistic regression and Naive Bayes models to predict the possibility of raising questions in issue reports. Our prediction models obtain an Area Under Curve (AUC) value of 0.78, 0.65, and 0.70 in the Linux, Firefox, and Eclipse systems, respectively. The most important variables according to our prediction models are the number of Carbon Copies (CC), the issue severity and priority, and the reputation of the issue reporter.
C1 [Huang, Yonghui; da Costa, Daniel Alencar; Zou, Ying] Queens Univ, Dept Elect & Comp Engn, Kingston, ON, Canada.
   [Zhang, Feng] Queens Univ, Sch Comp, Kingston, ON, Canada.
C3 Queens University - Canada; Queens University - Canada
RP da Costa, DA (corresponding author), Queens Univ, Dept Elect & Comp Engn, Kingston, ON, Canada.
EM ckeys.huang@queensu.ca; daniel.alencar@queensu.ca; feng@cs.queensu.ca;
   ying.zou@queensu.ca
RI Zou, Ying/KLC-9380-2024; Zhang, Feng/AAQ-3506-2021
CR Anbalagan P, 2009, PROC IEEE INT CONF S, P523, DOI 10.1109/ICSM.2009.5306337
   Nguyen AT, 2012, IEEE INT CONF AUTOM, P70, DOI 10.1145/2351676.2351687
   [Anonymous], 2007, P 2014 WORKSH ECL TE, DOI 10.1145/1328279.1328284
   [Anonymous], MULT WIK FREE ENC
   [Anonymous], 2007, P 22 IEEE ACM INT C, DOI DOI 10.1145/1321631.1321639
   [Anonymous], 30 INT C AUT SOFTW E
   [Anonymous], 2011, 44 HAW INT C SYST SC
   [Anonymous], EMPIR SOFTW ENG J EM
   [Anonymous], EMPIR SOFTW ENG
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Arun R, 2010, LECT NOTES ARTIF INT, V6118, P391
   Barua A, 2014, EMPIR SOFTW ENG, V19, P619, DOI 10.1007/s10664-012-9231-y
   Baysal O, 2009, INT C PROGRAM COMPRE, P297, DOI 10.1109/ICPC.2009.5090066
   Bettenburg N., 2008, P 16 ACM SIGSOFT INT, P308
   Bettenburg N, 2008, PROC IEEE INT CONF S, P337, DOI 10.1109/ICSM.2008.4658082
   Bhattacharya Pamela., 2011, PROCEEDING 8 WORKING, P207, DOI DOI 10.1145/1985441.1985472
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Breu S, 2010, 2010 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, P301
   Breu Silvia., 2009, Frequently asked questions in bug reports
   BUCKLAND ST, 1993, J APPL ECOL, V30, P478, DOI 10.2307/2404188
   Cao J, 2009, NEUROCOMPUTING, V72, P1775, DOI 10.1016/j.neucom.2008.06.011
   Chen SH, 2011, IEEE C EVOL COMPUTAT, P45, DOI 10.1145/1806799.1806811
   Chengnian Sun, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P253, DOI 10.1109/ASE.2011.6100061
   Choetkiertikul M, 2017, EMPIR SOFTW ENG, V22, P1223, DOI 10.1007/s10664-016-9496-7
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Davis Jesse, 2006, P 23 INT C MACH LEAR, P233, DOI [DOI 10.1145/1143844.1143874, 10.1145/1143844.1143874]
   Dayton C.M., 1992, Logistic regression analysis
   DEVEAUD R, 2014, DOCUMENT NUMERIQUE, V0017
   Domingos P., 1996, Machine Learning. Proceedings of the Thirteenth International Conference (ICML '96), P105
   Erdem A, 1998, 13TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P230, DOI 10.1109/ASE.1998.732658
   Feng Zhang, 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P456, DOI 10.1109/WCRE.2012.55
   Feng Zhang, 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P225, DOI 10.1109/WCRE.2012.32
   Francalanci C, 2008, INT FED INFO PROC, V275, P187
   Giger E., 2010, P 2 INT WORKSH REC S, P52
   Gousios G, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P358, DOI 10.1109/ICSE.2015.55
   Griffiths TL, 2004, P NATL ACAD SCI USA, V101, P5228, DOI 10.1073/pnas.0307752101
   Guo PJ, 2010, Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering, P495
   Herbold S., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P232, DOI 10.1109/ICSTW.2011.66
   HERBSLEB JD, 1993, HUMAN FACTORS IN COMPUTING SYSTEMS, P7
   Herraiz I., 2008, Proceedings of the 2008 International Working Conference on Mining Software Repositories. MSR'08, P145
   Hilbe JM, 2009, CH CRC TEXT STAT SCI, P1
   Jones K.Sparck., 1997, READINGS INFORM RETR
   Joorabchi ME, 2014, P 11 WORK C MIN SOFT, P62, DOI [10.1145/2597073.2597098, DOI 10.1145/2597073.2597098]
   Kamei Y, 2010, PROC IEEE INT CONF S
   Kim S, 2006, Proceedings of the 2006 international workshop on Mining software repositories, P173
   Ko A., 2011, iConference, P106
   Liu HT, 2016, INT CONF SEMANT, P1, DOI [10.1109/SKG.2016.11, 10.1109/SKG.2016.009]
   Lotufo R., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P2, DOI 10.1109/MSR.2012.6224293
   Marks L., 2011, P 7 INT C PRED MOD S, DOI [10.1145/2020390.202040, DOI 10.1145/2020390.202040]
   McCallum D.R., 1982, Proceedings of ACM, P44
   McIntosh S, 2016, EMPIR SOFTW ENG, V21, P2146, DOI 10.1007/s10664-015-9381-9
   Ohira M, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P264, DOI 10.1109/ICSM.2012.6405281
   Panjer LucasD., 2007, Proceedings of the 4th International Workshop on Mining Software Repositories, MSR '07, P29
   Ponweiser M., 2012, Latent Dirichlet Allocation in R
   Powers DMW, 2020, J MACH LEARN TECHNOL, P37, DOI DOI 10.9735/2229-3981
   Rahman F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P432, DOI 10.1109/ICSE.2013.6606589
   Rakha MS, 2018, IEEE T SOFTWARE ENG, V44, P1245, DOI 10.1109/TSE.2017.2755005
   Rakha MS, 2016, EMPIR SOFTW ENG, V21, P1960, DOI 10.1007/s10664-015-9404-6
   Rish I., 2001, IJCAI 2001 WORKSH EM, P41
   Roehm T, 2013, CONF PROC INT SYMP C, P73, DOI 10.1109/ICPC.2013.6613835
   Romano J., 2006, ANN M FLORIDA ASS IN
   Runeson P, 2007, PROC INT CONF SOFTW, P499
   Saha RK, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P144, DOI 10.1109/CSMR-WCRE.2014.6747164
   Sheskin J.D., 2004, Handbook of Parametric and Nonparametric Statistical Procedures, VThird
   Shihab E., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P249, DOI 10.1109/WCRE.2010.36
   Sillito J., 2006, Proc. of the ACM SIGSOFT Int'l Symp. on Foundations of Software Engineering, P23, DOI DOI 10.1145/1181775.1181779
   Strobl C, 2008, BMC BIOINFORMATICS, V9, DOI 10.1186/1471-2105-9-307
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Venkatesh PK, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS), P131, DOI 10.1109/ICWS.2016.25
   Weiss C, 2007, P 4 INT WORKSH MIN S, P1, DOI [10.1109/MSR.2007.13, DOI 10.1109/MSR.2007.13]
   Xia X, 2015, AUTOMAT SOFTW ENG, V22, P75, DOI 10.1007/s10515-014-0162-2
   Yin D.R. K., 2017, Case Study Research and Applications: Design and Methods
   Zhang HY, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1042, DOI 10.1109/ICSE.2013.6606654
   Zimmermann T, 2012, PROC INT CONF SOFTW, P1074, DOI 10.1109/ICSE.2012.6227112
NR 74
TC 9
Z9 11
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2019
VL 24
IS 2
BP 718
EP 750
DI 10.1007/s10664-018-9636-3
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HQ8DM
UT WOS:000462654200006
DA 2024-07-18
ER

PT J
AU Ruangwan, S
   Thongtanunam, P
   Ihara, A
   Matsumoto, K
AF Ruangwan, Shade
   Thongtanunam, Patanamon
   Ihara, Akinori
   Matsumoto, Kenichi
TI The impact of human factors on the participation decision of reviewers
   in modern code review
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Review
DE Modern code review; Reviewer participation; Developer collaboration
ID SOFTWARE; INSPECTIONS; STATISTICS; NETWORKS; DESIGN
AB Modern Code Review (MCR) plays a key role in software quality practices. In MCR process, a new patch (i.e., a set of code changes) is encouraged to be examined by reviewers in order to identify weaknesses in source code prior to an integration into main software repositories. To mitigate the risk of having future defects, prior work suggests that MCR should be performed with sufficient review participation. Indeed, recent work shows that a low number of participated reviewers is associated with poor software quality. However, there is a likely case that a new patch still suffers from poor review participation even though reviewers were invited. Hence, in this paper, we set out to investigate the factors that are associated with the participation decision of an invited reviewer. Through a case study of 230,090 patches spread across the Android, LibreOffice, OpenStack and Qt systems, we find that (1) 16%-66% of patches have at least one invited reviewer who did not respond to the review invitation; (2) human factors play an important role in predicting whether or not an invited reviewer will participate in a review; (3) a review participation rate of an invited reviewers and code authoring experience of an invited reviewer are highly associated with the participation decision of an invited reviewer. These results can help practitioners better understand about how human factors associate with the participation decision of reviewers and serve as guidelines for inviting reviewers, leading to a better inviting decision and a better reviewer participation.
C1 [Ruangwan, Shade] Nara Inst Sci & Technol, Software Engn Lab, Nara, Japan.
   [Matsumoto, Kenichi] Nara Inst Sci & Technol, Grad Sch Sci & Technol, Nara, Japan.
   [Thongtanunam, Patanamon] Univ Melbourne, Sch Comp & Informat Syst, Melbourne, Vic, Australia.
   [Ihara, Akinori] Wakayama Univ, Wakayama, Japan.
   [Ihara, Akinori] Wakayama Univ, Social Software Engn Lab Soc SEL, Wakayama, Japan.
C3 Nara Institute of Science & Technology; Nara Institute of Science &
   Technology; University of Melbourne; Wakayama University; Wakayama
   University
RP Ruangwan, S (corresponding author), Nara Inst Sci & Technol, Software Engn Lab, Nara, Japan.
EM shade.ruangwan.sj1@is.naist.jp; patanamon.thongtanunam@unimelb.edu.au;
   ihara@sys.wakayama-u.ac.jp; matumoto@is.naist.jp
RI MATSUMOTO, KENICHI/AAD-9090-2019
OI MATSUMOTO, KENICHI/0000-0002-7418-9323; Ruangwan,
   Shade/0000-0002-4480-1331
FU JSPS KAKENHI [16J02861, 17H00731]; Support Center for Advanced
   Telecommunications (SCAT) Technology Research, Foundation; Grants-in-Aid
   for Scientific Research [16J02861] Funding Source: KAKEN
FX This research was partially supported by JSPS KAKENHI Grant Number
   16J02861 and 17H00731, and Support Center for Advanced
   Telecommunications (SCAT) Technology Research, Foundation. We would also
   like to thank Dr. Chakkrit Tantithamthavorn for his insightful comments
   and the survey participants for their time.
CR ACKERMAN AF, 1989, IEEE SOFTWARE, V6, P31, DOI 10.1109/52.28121
   [Anonymous], 2014, 11 WORKING C MINING, DOI [DOI 10.1145/2597073.2597076, DOI 10.1145/2597073]
   [Anonymous], 1990, The VARCLUS procedure
   [Anonymous], 2014, Proceedings of the 17th ACM conference on Computer supported cooperative work social computing
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Balachandran V, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P931, DOI 10.1109/ICSE.2013.6606642
   Bavota G, 2015, PROC IEEE INT CONF S, P81, DOI 10.1109/ICSM.2015.7332454
   Baysal O, 2013, WORK CONF REVERSE EN, P122, DOI 10.1109/WCRE.2013.6671287
   Beller M., 2014, 11 WORK C MIN SOFTW, P202, DOI DOI 10.1145/2597073.2597082
   Bettenburg N, 2015, EMPIR SOFTW ENG, V20, P252, DOI 10.1007/s10664-013-9284-6
   Bird C., 2011, P 19 ACM SIGSOFT S 1, P4, DOI DOI 10.1145/2025113.2025119
   Bosu A, 2014, 2014 ACM IEEE INT S, P1, DOI DOI 10.1145/2652524.2652544
   Brier G. W., 1950, MON WEATHER REV, V78, P1, DOI 10.1175/1520-0493(1950)078andlt;0001:VOFEITandgt;2.0.CO;2
   CARR DB, 1987, J AM STAT ASSOC, V82, P424, DOI 10.2307/2289444
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Cliff N, 1996, MULTIVAR BEHAV RES, V31, P331, DOI 10.1207/s15327906mbr3103_4
   Cohen J., 1992, Current Directions in Psychological Science, V1, P98, DOI [DOI 10.1111/1467-8721.EP10768783, 10.1111/1467-8721.ep10768783]
   Croux C, 2010, STAT METHOD APPL-GER, V19, P497, DOI 10.1007/s10260-010-0142-z
   Edmundson Anne, 2013, Engineering Secure Software and Systems. 5th International Symposium, ESSoS 2013. Proceedings, P197, DOI 10.1007/978-3-642-36563-8_14
   EFRON B, 1983, J AM STAT ASSOC, V78, P316, DOI 10.2307/2288636
   Elish KO, 2008, J SYST SOFTWARE, V81, P649, DOI 10.1016/j.jss.2007.07.040
   FAGAN ME, 1986, IEEE T SOFTWARE ENG, V12, P744, DOI 10.1109/TSE.1986.6312976
   FAGAN ME, 1976, IBM SYST J, V15, P182, DOI 10.1147/sj.153.0182
   Fawcett T, 2006, PATTERN RECOGN LETT, V27, P861, DOI 10.1016/j.patrec.2005.10.010
   Foo KC, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P159, DOI 10.1109/ICSE.2015.144
   Foundjem A, 2017, IEEE INT CONF SOFTW, P219, DOI 10.1109/ICST.2017.27
   FREEMAN LC, 1979, SOC NETWORKS, V1, P215, DOI 10.1016/0378-8733(78)90021-7
   Goeminne M., 2011, JOINT PORCEEDINGS 1, P74
   Guzzi A, 2013, IEEE WORK CONF MIN S, P277, DOI 10.1109/MSR.2013.6624039
   Hahn J, 2008, INFORM SYST RES, V19, P369, DOI 10.1287/isre.1080.0192
   Hamasaki K, 2013, IEEE WORK CONF MIN S, P49, DOI 10.1109/MSR.2013.6624003
   HANLEY JA, 1982, RADIOLOGY, V143, P29, DOI 10.1148/radiology.143.1.7063747
   HARDIN G, 1968, SCIENCE, V162, P1243, DOI 10.1126/science.162.3859.1243
   Harrell FE, 2015, SPRINGER SER STAT, DOI 10.1007/978-3-319-19425-7
   Harrell F.E., 2002, Regression modeling strategies
   Hinkle D.E., 1998, Applied Statistics for the Behavioral Sciences, V4th
   Huizinga D., 2007, AUTOMATED DEFECT PRE
   Junwei Liang, 2011, 2011 Proceedings of Joint Conf of 21st Int'l Workshop on Software Measurement and the 6th Int'l Conference on Software Process and Product Measurement (IWSM-MENSURA 2011), P126, DOI 10.1109/IWSM-MENSURA.2011.33
   Kononenko O, 2016, PROC INT CONF SOFTW, P1028, DOI 10.1145/2884781.2884840
   Kononenko O, 2015, PROC IEEE INT CONF S, P111, DOI 10.1109/ICSM.2015.7332457
   Lanubile F, 2010, IEEE SOFTWARE, V27, P52, DOI 10.1109/MS.2010.39
   Lee A, 2017, PROC INT CONF SOFTW, P187, DOI 10.1109/ICSE.2017.25
   MASON CH, 1991, J MARKETING RES, V28, P268, DOI 10.2307/3172863
   McGraw G, 2004, IEEE SECUR PRIV, V2, P80, DOI 10.1109/MSECP.2004.1281254
   McIntosh S, 2016, EMPIR SOFTW ENG, V21, P2146, DOI 10.1007/s10664-015-9381-9
   Menardi G, 2014, DATA MIN KNOWL DISC, V28, P92, DOI 10.1007/s10618-012-0295-5
   Meyer B, 2008, COMMUN ACM, V51, P66, DOI 10.1145/1378727.1378744
   Mishra Rahul, 2014, 2014 IEEE 4th Workshop on Mining Unstructured Data (MUD), P11, DOI 10.1109/MUD.2014.11
   Mukadam M, 2013, IEEE WORK CONF MIN S, P45, DOI 10.1109/MSR.2013.6624002
   Newson R, 2002, STATA J, V2, P45, DOI 10.1177/1536867X0200200103
   RIGBY PC, 2001, METHODOLOGY, V23, p35:1, DOI DOI 10.1145/2594458
   Rigby Peter, 2012, IEEE Software
   Rigby PC, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P541, DOI 10.1145/1985793.1985867
   Rigby PC, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P541
   Shihab E, 2009, PROC IEEE INT CONF S, P147, DOI 10.1109/ICSM.2009.5306333
   Spearman C, 1904, AM J PSYCHOL, V15, P72, DOI 10.2307/1412159
   Steinmacher I, 2015, PROCEEDINGS OF THE 2015 ACM INTERNATIONAL CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING (CSCW'15), P1379, DOI 10.1145/2675133.2675215
   Tantithamthavorn C, 2017, T SOFTWARE ENG TSE
   Tantithamthavorn C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P286, DOI 10.1145/3183519.3183547
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Tantithamthavorn C, 2016, IEEE T SOFTWARE ENG, V42, P1092, DOI 10.1109/TSE.2016.2553030
   Tantithamthavorn C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P812, DOI 10.1109/ICSE.2015.93
   Thongtanunam P, 2016, EMPIR SOFTW ENG, V22, P768
   Thongtanunam P, 2016, PROC INT CONF SOFTW, P1039, DOI 10.1145/2884781.2884852
   Thongtanunam P, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P168, DOI 10.1109/MSR.2015.23
   Thongtanunam P, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P141, DOI 10.1109/SANER.2015.7081824
   van Wesel P, 2017, PROC IEEE INT CONF S, P544, DOI 10.1109/ICSME.2017.25
   Whitehead J, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P214, DOI 10.1109/FOSE.2007.4
   Xia X, 2015, PROC IEEE INT CONF S, P261, DOI 10.1109/ICSM.2015.7332472
   Yang X, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P460, DOI [10.1145/2901739.2903504, 10.1109/MSR.2016.054]
   Yang X, 2016, IEICE T INF SYST, VE99D, P661, DOI 10.1587/transinf.2015EDP7261
   Yu Y., 2014, ICSME, V14, P610
   Zanjani M., 2015, T SOFTWARE ENG, V42, P530, DOI DOI 10.1109/TSE.2015.2500238
   Zimmermann T, 2005, IEEE T SOFTWARE ENG, V31, P429, DOI 10.1109/TSE.2005.72
NR 74
TC 21
Z9 21
U1 1
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2019
VL 24
IS 2
BP 973
EP 1016
DI 10.1007/s10664-018-9646-1
PG 44
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA HQ8DM
UT WOS:000462654200013
DA 2024-07-18
ER

PT J
AU Stevens, R
   Molderez, T
   De Roover, C
AF Stevens, Reinout
   Molderez, Tim
   De Roover, Coen
TI Querying distilled code changes to extract executable transformations
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Change distilling; Change querying; Logic meta-programming
AB Change distilling algorithms compute a sequence of fine-grained changes that, when executed in order, transform a given source AST into a given target AST. The resulting change sequences are used in the field of mining software repositories to study source code evolution. Unfortunately, detecting and specifying source code evolutions in such a change sequence is cumbersome. We therefore introduce a tool-supported approach that identifies minimal executable subsequences in a sequence of distilled changes that implement a particular evolution pattern, specified in terms of intermediate states of the AST that undergoes each change. This enables users to describe the effect of multiple changes, irrespective of their execution order, while ensuring that different change sequences that implement the same code evolution are recalled. Correspondingly, our evaluation is two-fold. We show that our approach is able to recall different implementation variants of the same source code evolution in histories of different software projects. We also evaluate the expressiveness and ease-of-use of our approach in a user study.
C1 [Stevens, Reinout] Maxflow BVBA, Leuven, Belgium.
   [Molderez, Tim; De Roover, Coen] Vrije Univ Brussel, Software Languages Lab, Ixelles, Belgium.
C3 Vrije Universiteit Brussel
RP Molderez, T (corresponding author), Vrije Univ Brussel, Software Languages Lab, Ixelles, Belgium.
EM reinout@reinoutstevens.be; tim.molderez@vub.be; coen.de.roover@vub.be
OI De Roover, Coen/0000-0002-1710-1268; Molderez, Tim/0000-0001-5540-1918
CR Alexandru CV, 2015, P 37 INT C SOFTW ENG
   [Anonymous], 2000, QUESTIONNAIRE DESIGN
   Chawathe S. S., 1996, P INT C MAN DAT SIGM
   Christophe L, 2014, P INT C SOFTW MAINT
   de Moor O., 2002, HIGHER ORDER SYMBOLI, P15
   De Roover C., 2014, P EUR C SOFTW MAINT
   De Roover C, 2014, P 14 INT WORK C SOUR
   De Roover C., 2011, P 9 INT C PRINC PRAC
   Dyer R., 2013, P INT C SOFTW ENG IC
   Ebraert P, 2007, P 2007 INT C DYN LAN
   Falleri Jean-Remy, 2014, P 29 INT C AUT SOFTW
   Fluri B, 2007, T SOFTW ENG, V33
   FRIGGE M, 1989, AM STAT, V43, P50, DOI 10.2307/2685173
   Gómez VU, 2014, SCI COMPUT PROGRAM, V96, P84, DOI 10.1016/j.scico.2014.07.012
   Hajiyev E., 2006, P 20 EUR C OBJ OR PR
   Hayashi S, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P617, DOI 10.1109/ICSM.2012.6405336
   Hindle A., 2005, P 2005 WORK C MIN SO
   Kamiya T., 2002, IEEE T SOFTWARE ENG
   Lin Z., 2015, P 12 WORK C MIN SOFT
   Liu Y. A., 2004, P C PROGR LANG DES I
   Martin M., 2005, P 20 C OBJ OR PROGR
   Martinez M, 2013, PROC IEEE INT CONF S, P388, DOI 10.1109/ICSM.2013.54
   Maruyama K, 2016, IEICE T INF SYST, VE99D, P671, DOI 10.1587/transinf.2015EDP7282
   Meng N., 2013, P 35 INT C SOFTW ENG
   Molderez T, 2017, P 14 INT C MIN SOFTW
   Mougenot A., 2009, P 9 INT C DISTR APPL
   Murphy-Hill E, 2012, IEEE T SOFTWARE ENG, V38, P5, DOI 10.1109/TSE.2011.41
   Negara S., 2014, P 36 INT C SOFTW ENG
   Palix N, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P43, DOI 10.1109/SANER.2015.7081814
   Peled D, 1998, LECT NOTES COMPUT SC, V1427, P17, DOI 10.1007/BFb0028727
   Pérez J, 2013, PROC IEEE INT CONF S, P572, DOI 10.1109/ICSM.2013.98
   Prete K, 2010, PROC IEEE INT CONF S
   SERVANT F, 2012, P ACM SIGSOFT 20 INT
   Stevens R., 2015, P 37 INT C SOFTW ENG
   Stevens R., 2014, P 30 INT C SOFTW MAI
   Stevens R, 2017, P 24 INT C SOFTW AN
   Vallee-Rai R., 1999, Proceedings of the 1999 Conference of the Centre for Advanced Studies on Collaborative Research, CASCON'99, page, P13
   Weissgerber P, 2006, IEEE INT CONF AUTOM, P231
   Yoon Y, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P223, DOI 10.1109/ICSE.2015.43
NR 39
TC 2
Z9 2
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2019
VL 24
IS 1
BP 491
EP 535
DI 10.1007/s10664-018-9644-3
PG 45
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HL3RV
UT WOS:000458634400016
OA Green Published
DA 2024-07-18
ER

PT J
AU Kosar, T
   Gaberc, S
   Carver, JC
   Mernik, M
AF Kosar, Tomaz
   Gaberc, Saso
   Carver, Jeffrey C.
   Mernik, Marjan
TI Program comprehension of domain-specific and general-purpose languages:
   replication of a family of experiments using integrated development
   environments
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Domain-specific languages; General-purpose languages; Program
   comprehension; Controlled experiment; Replication
ID MAINTENANCE; QUALITY
AB Domain-specific languages (DSLs) allow developers to write code at a higher level of abstraction compared with general-purpose languages (GPLs). Developers often use DSLs to reduce the complexity of GPLs. Our previous study found that developers performed program comprehension tasks more accurately and efficiently with DSLs than with corresponding APIs in GPLs. This study replicates our previous study to validate and extend the results when developers use IDEs to perform program comprehension tasks. We performed a dependent replication of a family of experiments. We made two specific changes to the original study: (1) participants used IDEs to perform the program comprehension tasks, to address a threat to validity in the original experiment and (2) each participant performed program comprehension tasks on either DSLs or GPLs, not both as in the original experiment. The results of the replication are consistent with and expanded the results of the original study. Developers are significantly more effective and efficient in tool-based program comprehension when using a DSL than when using a corresponding API in a GPL. The results indicate that, where a DSL is available, developers will perform program comprehension better using the DSL than when using the corresponding API in a GPL.
C1 [Kosar, Tomaz; Gaberc, Saso; Mernik, Marjan] Univ Maribor, Fac Elect Engn & Comp Sci, Koroska Cesta 46, SLO-2000 Maribor, Slovenia.
   [Carver, Jeffrey C.] Univ Alabama, Dept Comp Sci, Tuscaloosa, AL 35487 USA.
C3 University of Maribor; University of Alabama System; University of
   Alabama Tuscaloosa
RP Kosar, T (corresponding author), Univ Maribor, Fac Elect Engn & Comp Sci, Koroska Cesta 46, SLO-2000 Maribor, Slovenia.
EM tomaz.kosar@um.si
RI Carver, Jeffrey/AAM-8202-2020; Mernik, Marjan/A-1147-2008; Carver,
   Jeffrey/AFP-1987-2022
OI Carver, Jeffrey/0000-0002-7824-9151; Mernik, Marjan/0000-0002-2775-0667;
   Carver, Jeffrey/0000-0002-7824-9151; Kosar, Tomaz/0000-0001-8714-9649
FU Slovenian Research Agency [P2-0041]
FX The authors acknowledge the financial support from the Slovenian
   Research Agency (research core funding No. P2-0041).
CR Albuquerque D, 2015, J SYST SOFTWARE, V101, P245, DOI 10.1016/j.jss.2014.11.051
   [Anonymous], 2010, 1 INT WORKSH REPL EM
   Baldassarre M. T., 2014, EASE 2014, P18
   Barisic A., 2017, COMPUTER LANGUAGES S
   BENTLEY J, 1986, COMMUN ACM, V29, P711, DOI 10.1145/6424.315691
   Carver J.C., 2011, 1 WORKSH EXP EMP STU
   Chis A, 2015, COMPUT LANG SYST STR, V44, P89, DOI 10.1016/j.cl.2015.08.005
   Consel C., 1998, LECT NOTES COMPUTER, V1490, P170
   Cornelissen B, 2011, IEEE T SOFTWARE ENG, V37, P341, DOI 10.1109/TSE.2010.47
   Erdweg S., 2012, P 12 WORKSH LANG DES
   Gansner E.R., 2009, DRAWING GRAPHS DOT
   Goulao M, 2016, SOFTWARE QUAL J, V24, P601, DOI 10.1007/s11219-016-9324-8
   Häser F, 2016, INFORM SOFTWARE TECH, V79, P52, DOI 10.1016/j.infsof.2016.07.001
   Hermans F, 2009, LECT NOTES COMPUT SC, V5795, P423, DOI 10.1007/978-3-642-04425-0_33
   Hevner AR, 2005, CMUSEI90TR21
   Hoisl B, 2014, 2014 9TH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY (QUATIC), P95, DOI 10.1109/QUATIC.2014.19
   Hudak P, 1998, FIFTH INTERNATIONAL CONFERENCE ON SOFTWARE REUSE - PROCEEDINGS, P134, DOI 10.1109/ICSR.1998.685738
   Johanson A, 2017, EMPIR SOFTW ENG, V22, P2206, DOI 10.1007/s10664-016-9483-z
   Jung HW, 2004, IEEE SOFTWARE, V21, P88, DOI 10.1109/MS.2004.1331309
   Kitchenham B, 2008, EMPIR SOFTW ENG, V13, P219, DOI 10.1007/s10664-008-9061-0
   Kosar T, 2016, INFORM SOFTWARE TECH, V71, P77, DOI 10.1016/j.infsof.2015.11.001
   Kosar T, 2012, EMPIR SOFTW ENG, V17, P276, DOI 10.1007/s10664-011-9172-x
   Kosar T, 2010, COMPUT SCI INF SYST, V7, P247, DOI 10.2298/CSIS1002247K
   MacVittie L. A., 2006, XAML IN A NUTSHELL
   Mauw S, 2004, INT J SOFTW ENG KNOW, V14, P625, DOI 10.1142/S0218194004001828
   Meliá S, 2016, SOFTWARE QUAL J, V24, P709, DOI 10.1007/s11219-015-9299-x
   Mernik M, 2005, ACM COMPUT SURV, V37, P316, DOI 10.1145/1118890.1118892
   Mernik M, 2013, J SYST SOFTWARE, V86, P2451, DOI 10.1016/j.jss.2013.04.087
   Nugroho A, 2009, INFORM SOFTWARE TECH, V51, P1670, DOI 10.1016/j.infsof.2009.04.007
   Prähofer H, 2013, COMPUT LANG SYST STR, V39, P67, DOI 10.1016/j.cl.2013.02.001
   Reis LVS, 2015, COMPUT LANG SYST STR, V42, P46, DOI 10.1016/j.cl.2015.01.002
   Shull FJ, 2008, EMPIR SOFTW ENG, V13, P211, DOI 10.1007/s10664-008-9060-1
   Sprinkle J, 2009, IEEE SOFTWARE, V26, P15, DOI 10.1109/MS.2009.92
   Storey MA, 2005, PROG COMPREHEN, P181, DOI 10.1109/WPC.2005.38
   Umuhoza Eric, 2015, P 2005 ACM SIGPLAN I, P13
   van Deursen A, 2000, ACM SIGPLAN NOTICES, V35, P26, DOI 10.1145/352029.352035
   van Deursen A., 2002, Journal of Computing and Information Technology - CIT, V10, P1, DOI 10.2498/cit.2002.01.01
   Van Deursen A, 1998, J SOFTW MAINT-RES PR, V10, P75, DOI 10.1002/(SICI)1096-908X(199803/04)10:2<75::AID-SMR168>3.0.CO;2-5
   Pereira MJV, 2016, COMPUT LANG SYST STR, V45, P35, DOI 10.1016/j.cl.2015.12.004
   Wile D. S., 2001, Journal of Computing and Information Technology - CIT, V9, P263, DOI 10.2498/cit.2001.04.01
   Williams M., 2002, Microsoft Visual C# Core Reference
NR 41
TC 20
Z9 21
U1 0
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2018
VL 23
IS 5
BP 2734
EP 2763
DI 10.1007/s10664-017-9593-2
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GO5AW
UT WOS:000440031100007
DA 2024-07-18
ER

PT J
AU Roy, A
   Pham, H
AF Roy, Arunava
   Hoang Pham
TI Toward the development of a conventional time series based web error
   forecasting framework
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Web Software Reliability; Univariate Time Series; Multivariate Time
   Series; Web Server; HTTP logs, Forecasting
ID FUZZY LOGICAL RELATIONSHIPS; SOFTWARE-RELIABILITY; TEMPERATURE
   PREDICTION; NEURAL-NETWORKS; MODEL; ENROLLMENTS; FAILURE; STRATEGIES;
   REGRESSION; ADVANTAGES
AB Web reliability is gaining importance with time due to the exponential increase in the popularity of different social community networks, mailing systems and other online applications. Hence, to enhance the reliability of any existing web system, the web administrators must have the knowledge of various web errors present in the system, influences of various workload characteristics on the manifestation of several web errors and the relations among different workload characteristics. But in reality, often it may not be possible to institute a generalized correspondence among several workload characteristics. Moreover, the issues like the prediction and estimation of the cumulative occurrences of the source content failures and the corresponding time between failures of a web system become less highlighted by the reliability research community. Hence, in this work, the authors have presented a well-defined procedure (a forecasting framework) for the web admins to analyze and enhance the reliability of the web sites under their supervision. Initially, it takes the HTTP access and the error logs to extract all the necessary information related to the workloads, web errors and corresponding time between failures. Next, we have performed the principal component analysis, correlation analysis and the change point analysis to select the number of independent variables. Next, we have developed various time series based forecasting models for foretelling the cumulative occurrences of the source content failures and the corresponding time between failures. In the current work, the multivariate models also include various uncorrelated workloads, the exogeneous and the endogenous noises for forecasting the web errors and the corresponding time between failures. The proposed methodology has been validated with usage statistics collected from the web sites belong of two highly renowned Indian academic institutions.
C1 [Roy, Arunava] Singapore Univ Technol & Design, CorpLab, Informat Syst Technol & Design Pillar, Singapore 487372, Singapore.
   [Hoang Pham] State Univ New Jersey, Dept Ind & Syst Engn, Rutgers, NJ 08855 USA.
C3 Singapore University of Technology & Design; Rutgers University System;
   Rutgers University New Brunswick
RP Roy, A (corresponding author), Singapore Univ Technol & Design, CorpLab, Informat Syst Technol & Design Pillar, Singapore 487372, Singapore.
EM royism.arunava@gmail.com; hopham@rci.rutgers.edu
CR AKAIKE H, 1974, IEEE T AUTOMAT CONTR, VAC19, P716, DOI 10.1109/TAC.1974.1100705
   Amin A, 2013, J SYST SOFTWARE, V86, P1923, DOI 10.1016/j.jss.2013.03.045
   [Anonymous], 1985, Long-range forecasting: from crystal ball to computer
   Anselmo V., 1979, Hydrological Sciences Journal, V24, P353
   Arlitt MF, 1997, IEEE ACM T NETWORK, V5, P631, DOI 10.1109/90.649565
   ARMSTRONG JS, 1992, INT J FORECASTING, V8, P69, DOI 10.1016/0169-2070(92)90008-W
   Bai CG, 2005, J SYST SOFTWARE, V74, P275, DOI 10.1016/j.jss.2004.02.028
   Barghout M., 1998, Software Testing, Verification and Reliability, V8, P113, DOI 10.1002/(SICI)1099-1689(1998090)8:3<113::AID-STVR159>3.0.CO;2-8
   Bishop C, 1991, NEURAL COMPUT, V3, P579, DOI 10.1162/neco.1991.3.4.579
   Bontempi G, 2013, LECT NOTES BUS INF P, V138, P62
   Box GEP, 1976, TIME SERIES ANAL FOR
   Breiman L, 2001, STAT SCI, V16, P199, DOI 10.1214/ss/1009213726
   Broomhead D. S., 1988, Complex Systems, V2, P321
   CATLEDGE LD, 1995, COMPUT NETWORKS ISDN, V27, P1065, DOI 10.1016/0169-7552(95)00043-7
   CHATFIELD C, 1988, INT J FORECASTING, V4, P515, DOI 10.1016/0169-2070(88)90127-6
   Chatterjee S, 1997, INT J SYST SCI, V28, P391, DOI 10.1080/00207729708929399
   Chatterjee S, 2017, NEURAL COMPUT APPL, V28, pS1221, DOI 10.1007/s00521-016-2437-y
   Chatterjee Subhashis, 2011, International Journal of Modelling and Simulation, V31, P120, DOI 10.2316/Journal.205.2011.2.205-5324
   Chatterjee S, 2011, COMPUTING, V92, P33, DOI 10.1007/s00607-010-0128-6
   Chatterjee S, 1997, INT J SYST SCI, V28, P211, DOI 10.1080/00207729708929380
   Chatterjee S, 2014, INT J RELIABILITY QU, V21, P5
   Chatterjee S, 2015, QUAL RELIAB ENG INT, V31, P1517, DOI 10.1002/qre.1687
   Chatterjee S, 2015, INT J SYST SCI, V46, P513, DOI 10.1080/00207721.2013.791001
   Chen SM, 2011, EXPERT SYST APPL, V38, P10594, DOI 10.1016/j.eswa.2011.02.098
   Chen SM, 2006, INT J INTELL SYST, V21, P485, DOI 10.1002/int.20145
   Chen SM, 1996, FUZZY SET SYST, V81, P311, DOI 10.1016/0165-0114(95)00220-0
   CHENG B, 1994, STAT SCI, V9, P2, DOI 10.1214/ss/1177010638
   Csermely P, 2009, WEAK LINKS
   Davari S., 2009, 28 N AM FUZZ INF PRO
   Egrioglu E, 2011, J INTELL FUZZY SYST, V22, P15, DOI 10.3233/IFS-2010-0470
   Egrioglu E, 2010, EXPERT SYST APPL, V37, P5052, DOI 10.1016/j.eswa.2009.12.006
   Espinha T, 2015, J SYST SOFTWARE, V100, P27, DOI 10.1016/j.jss.2014.10.014
   Eubank R.L., 1988, SPLINE SMOOTHING NON, V90
   Falat L, 2016, INFORM SCI TECHNOLOG, V8, P33
   Fenton N., 2008, Proceedings of the Institution of Mechanical Engineers, Part O (Journal of Risk and Reliability), V222, P701, DOI 10.1243/1748006XJRR161
   GOEL AL, 1979, IEEE T RELIAB, V28, P206, DOI 10.1109/TR.1979.5220566
   Goseva-Popstojanova K, 2006, EMPIR SOFTW ENG, V11, P71, DOI 10.1007/s10664-006-5966-7
   Hand DJ, 2000, SOC SCI COMPUT REV, V18, P442, DOI 10.1177/089443930001800407
   Haykin S., 1999, NEURAL NETWORKS COMP, DOI [10.1017/S0269888998214044, DOI 10.1017/S0269888998214044]
   Hsu LY, 2010, EXPERT SYST APPL, V37, P2756, DOI 10.1016/j.eswa.2009.09.015
   Huang YL, 2011, INT J INNOV COMPUT I, V7, P4027
   Huarng K, 2001, FUZZY SET SYST, V123, P387, DOI 10.1016/S0165-0114(00)00057-9
   Huynh T, 2009, EMPIR SOFTW ENG, V14, P371, DOI 10.1007/s10664-008-9084-6
   Jo T, 2013, APPL SOFT COMPUT, V13, P2692, DOI 10.1016/j.asoc.2012.11.018
   Jolliffee I.T., 1986, Principal Component Analysis
   Junhong G, 2005, P INT C MATH METH CO, P362
   Kallepalli C, 2001, IEEE T SOFTWARE ENG, V27, P1023, DOI 10.1109/32.965342
   Karlaftis MG, 2011, TRANSPORT RES C-EMER, V19, P387, DOI 10.1016/j.trc.2010.10.004
   Keivanloo I, 2014, J SYST SOFTWARE, V89, P33, DOI 10.1016/j.jss.2013.08.030
   Kini BV, 2013, APPL SOFT COMPUT, V13, P361, DOI 10.1016/j.asoc.2012.08.027
   Kuo IH, 2010, EXPERT SYST APPL, V37, P1494, DOI 10.1016/j.eswa.2009.06.102
   Kuo IH, 2009, EXPERT SYST APPL, V36, P6108, DOI 10.1016/j.eswa.2008.07.043
   Lai PW, 1979, TRANSFER FUNCTION MO
   Lapedes Alan, 1987, Nonlinear signal processing using neural networks: Prediction and system modelling
   Lee LW, 2008, EXPERT SYST APPL, V34, P328, DOI 10.1016/j.eswa.2006.09.007
   Lee LW, 2007, EXPERT SYST APPL, V33, P539, DOI 10.1016/j.eswa.2006.05.015
   Lund R, 2007, J CLIMATE, V20, P5178, DOI 10.1175/JCLI4291.1
   Lutkepohl H, 2005, NEW INTRO MULTIPLE T, V22, P961, DOI DOI 10.1007/978-3-540-27752-1
   Lyu M., 1996, Handbook of Software Reliability Engineering
   LYU MR, 1992, IEEE SOFTWARE, V9, P43, DOI 10.1109/52.143104
   Ma L, 2007, J SYST SOFTWARE, V80, P795, DOI 10.1016/j.jss.2006.10.017
   Martínez Y, 2014, EMPIR SOFTW ENG, V19, P1887, DOI 10.1007/s10664-013-9269-5
   Maurer C, 2005, J NEUROPHYSIOL, V93, P189, DOI 10.1152/jn.00221.2004
   Moura MD, 2011, RELIAB ENG SYST SAFE, V96, P1527, DOI 10.1016/j.ress.2011.06.006
   Musa J. D., 1987, Software Reliability: Measure-ment, Prediction, Application
   Offutt J, 2002, IEEE SOFTWARE, V19, P25, DOI 10.1109/52.991329
   Offutt J, 2014, EMPIR SOFTW ENG, V19, P69, DOI 10.1007/s10664-012-9216-x
   Park JH, 2013, STAT COMPUT, V23, P201, DOI 10.1007/s11222-011-9302-8
   Park JI, 2010, EXPERT SYST APPL, V37, P959, DOI 10.1016/j.eswa.2009.05.081
   Pearson J.Michael., 2007, MANAGE RES NEWS, V30, P816, DOI DOI 10.1108/01409170710832250
   Pena D, 2007, J TIME SER ANAL, V28, P6
   Pham H, 1995, SOFTWARE RELIABILITY
   Pham H., 2006, SYSTEM SOFTWARE RELI, DOI 10.1007/1-84628-295-0
   Qu LL, 2006, WCICA 2006: SIXTH WORLD CONGRESS ON INTELLIGENT CONTROL AND AUTOMATION, VOLS 1-12, CONFERENCE PROCEEDINGS, P6831
   ROBINSON DG, 1987, IEEE T RELIAB, V36, P411, DOI 10.1109/TR.1987.5222426
   Roy A, 2016, SOFT COMPUT, V20, P1991, DOI 10.1007/s00500-015-1619-3
   Ruggieri E, 2013, INT J CLIMATOL, V33, P520, DOI 10.1002/joc.3447
   Schneidewind N., 2012, COMPUTER NETWORK SOF
   Shao J, 1997, STAT SINICA, V7, P221
   Sharma K, 2010, IEEE T RELIAB, V59, P266, DOI 10.1109/TR.2010.2048657
   Shumway HR, 2008, TIME SERIES ANAL ITS
   SINGPURWALLA ND, 1985, IEEE T SOFTWARE ENG, V11, P1456, DOI 10.1109/TSE.1985.231889
   SINGPURWALLA ND, 1980, NAV RES LOG, V27, P1, DOI 10.1002/nav.3800270102
   SONG Q, 1993, FUZZY SET SYST, V54, P1, DOI 10.1016/0165-0114(93)90355-L
   SONG Q, 1994, FUZZY SET SYST, V62, P1, DOI 10.1016/0165-0114(94)90067-1
   Sosinsky B., 2009, Networking Bible
   Suparta W, 2013, INT CONF SPACE SCI, P243, DOI 10.1109/IconSpace.2013.6599473
   Tanenbaum AS., 2011, Computer Networks, V5
   Tarafdar M, 2005, INF RESOUR MANAG J, V18, P62, DOI 10.4018/irmj.2005100104
   Tian J, 2004, IEEE T SOFTWARE ENG, V30, P754, DOI 10.1109/TSE.2004.87
   Tian J, 2002, IEEE T SOFTWARE ENG, V28, P997, DOI 10.1109/TSE.2002.1041055
   Tu JV, 1996, J CLIN EPIDEMIOL, V49, P1225, DOI 10.1016/S0895-4356(96)00002-9
   WALLS LA, 1987, RELIAB ENG SYST SAFE, V18, P239, DOI 10.1016/0143-8174(87)90030-8
   Werbos P. J., 1974, REGRESSION NEW TOOLS
   Willmott CJ, 2005, CLIMATE RES, V30, P79, DOI 10.3354/cr030079
   Wiper MP, 2012, QUAL TECHNOL QUANT M, V9, P35, DOI 10.1080/16843703.2012.11673276
   Xie M, 1997, QUAL RELIAB ENG INT, V13, P347, DOI 10.1002/(SICI)1099-1638(199711/12)13:6<347::AID-QRE116>3.0.CO;2-O
   Xie M., 1991, SOFTWARE RELIABILITY
   Xie M., 1999, Journal of Quality in Maintenance Engineering, V5, P50
   Yamada S, 2014, SPRINGERBRIEF STAT, P1, DOI 10.1007/978-4-431-54565-1
   Yang B, 2010, RELIAB ENG SYST SAFE, V95, P671, DOI 10.1016/j.ress.2010.02.006
   Yang Y, 2003, BIOMETRIKA, V92, P937, DOI DOI 10.1093/biomet/92.4.937
   Zaidi SJH, 2008, INMIC: 2008 INTERNATIONAL MULTITOPIC CONFERENCE, P409, DOI 10.1109/INMIC.2008.4777772
   Zou H, 2004, INT J FORECASTING, V20, P69, DOI 10.1016/S0169-2070(03)00004-9
NR 104
TC 3
Z9 3
U1 0
U2 17
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2018
VL 23
IS 2
BP 570
EP 644
DI 10.1007/s10664-017-9530-4
PG 75
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA GC1OI
UT WOS:000429551000001
DA 2024-07-18
ER

PT J
AU Bezemer, CP
   McIntosh, S
   Adams, B
   German, DM
   Hassan, AE
AF Bezemer, Cor-Paul
   McIntosh, Shane
   Adams, Bram
   German, Daniel M.
   Hassan, Ahmed E.
TI An empirical study of unspecified dependencies in make-based build
   systems
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Build systems; Unspecified dependencies
AB Software developers rely on a build system to compile their source code changes and produce deliverables for testing and deployment. Since the full build of large software systems can take hours, the incremental build is a cornerstone of modern build systems. Incremental builds should only recompile deliverables whose dependencies have been changed by a developer. However, in many organizations, such dependencies still are identified by build rules that are specified and maintained (mostly) manually, typically using technologies like make. Incomplete rules lead to unspecified dependencies that can prevent certain deliverables from being rebuilt, yielding incomplete results, which leave sources and deliverables out-of-sync. In this paper, we present a case study on unspecified dependencies in the make-based build systems of the glib, openldap, linux and qt open source projects. To uncover unspecified dependencies in make-based build systems, we use an approach that combines a conceptual model of the dependencies specified in the build system with a concrete model of the files and processes that are actually exercised during the build. Our approach provides an overview of the dependencies that are used throughout the build system and reveals unspecified dependencies that are not yet expressed in the build system rules. During our analysis, we find that unspecified dependencies are common. We identify 6 common causes in more than 1.2 million unspecified dependencies.
C1 [Bezemer, Cor-Paul] Queens Univ, SAIL, Kingston, ON, Canada.
   [Hassan, Ahmed E.] Queens Univ, Sch Comp, Kingston, ON, Canada.
   [McIntosh, Shane] McGill Univ, Dept Elect & Comp Engn, Montreal, PQ, Canada.
   [Adams, Bram] Polytech Montreal, Montreal, PQ, Canada.
   [German, Daniel M.] Univ Victoria, Dept Comp Sci, Victoria, BC, Canada.
C3 Queens University - Canada; Queens University - Canada; McGill
   University; Universite de Montreal; Polytechnique Montreal; University
   of Victoria
RP Bezemer, CP (corresponding author), Queens Univ, SAIL, Kingston, ON, Canada.
EM bezemer@cs.queensu.ca; shane.mcintosh@mcgill.ca; bram.adams@polymtl.ca;
   dmg@uvic.ca; ahmed@cs.queensu.ca
RI KHALIFA, AHMED khalifa/HKF-2246-2023; Hassan, Ahmed/AAB-7241-2019; Ali,
   Ahmed/HOF-4672-2023
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; Adams,
   Bram/0000-0001-7213-4006; Bezemer, Cor-Paul/0000-0002-0474-5718
CR Adams B., 2008, ELECTR COMMUN, V8
   Adams B, 2007, PROC IEEE INT CONF S, P214
   Banerjee M, 1999, CAN J STAT, V27, P3, DOI 10.2307/3315487
   Chastain ME, 1999, RECORRUPT MODVERSION
   Coetzee D., 2011, 2011 USENIX ANN TECH
   FELDMAN SI, 1979, SOFTWARE PRACT EXPER, V9, P255, DOI 10.1002/spe.4380090402
   Germaschewski K, 2002, FIXDEP C SOURCE CODE
   Gunter CA, 2000, ACM T SOFTW ENG METH, V9, P94, DOI 10.1145/332740.332743
   Hassan AE, 2006, IEEE INT CONF AUTOM, P189
   Hoyt B, 2009, FABRICATETHE BETTER
   Jorgensen N, 2002, SAFENESS MAKE BASED, V2391, P126
   Leslie B, 2008, MEMOIZE BUILD TOOL F
   McIntosh S., 2014, EMPIR SOFTW ENG, P1
   McIntosh S, 2014, PROC IEEE INT CONF S, P241, DOI 10.1109/ICSME.2014.46
   McIntosh S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P141, DOI 10.1145/1985793.1985813
   Miller P, 1998, AUUGN Journal of AUUG Inc, V19, P14
   Nadi S., 2011, 2011 18th Working Conference on Reverse Engineering, P315, DOI 10.1109/WCRE.2011.46
   Nadi S, 2012, EUR CON SFTWR MTNCE, P107, DOI 10.1109/CSMR.2012.21
   Neitsch A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P140, DOI 10.1109/ICSM.2012.6405265
   OCaml Community, 2013, DEP MISS MAK MANTISB
   Qt Wiki, 2015, QT VERS COMP
   Seo H, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P724, DOI 10.1145/2568225.2568255
   Tamrawi A, 2012, PROC INT CONF SOFTW, P650, DOI 10.1109/ICSE.2012.6227152
   TARSKI A, 1941, J SYMBOLIC LOGIC, V6, P73, DOI DOI 10.2307/2268577
   Tu Q, 2001, PROC IEEE INT CONF S, P398, DOI 10.1109/ICSM.2001.972753
   Xia Xin, 2014, S APPL COMP SAC 2014, P1184, DOI [10.1145/2554850.2555134, DOI 10.1145/2554850.2555134]
   Yamada M, 2015, PATCH V2 ARM ADD BOO
   Zhou B, 2014, P INT COMP SOFTW APP, P53, DOI 10.1109/COMPSAC.2014.12
NR 28
TC 20
Z9 23
U1 0
U2 13
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2017
VL 22
IS 6
BP 3117
EP 3148
DI 10.1007/s10664-017-9510-8
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FI3MB
UT WOS:000411865400011
DA 2024-07-18
ER

PT J
AU Labunets, K
   Massacci, F
   Paci, F
   Marczak, S
   de Oliveira, FM
AF Labunets, Katsiaryna
   Massacci, Fabio
   Paci, Federica
   Marczak, Sabrina
   de Oliveira, Flavio Moreira
TI Model comprehension for security risk assessment: an empirical
   comparison of tabular vs. graphical representations
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Empirical study; Security risk assessment; Risk modeling;
   Comprehensibility; Cognitive fit
ID TROPOS
AB Tabular and graphical representations are used to communicate security risk assessments for IT systems. However, there is no consensus on which type of representation better supports the comprehension of risks (such as the relationships between threats, vulnerabilities and security controls). Cognitive fit theory predicts that spatial relationships should be better captured by graphs. In this paper we report the results of two studies performed in two countries with 69 and 83 participants respectively, in which we assessed the effectiveness of tabular and graphical representations with respect to extraction correct information about security risks. The experimental results show that tabular risk models are more effective than the graphical ones with respect to simple comprehension tasks and in some cases are more effective for complex comprehension tasks. We explain our findings by proposing a simple extension of Vessey's cognitive fit theory as some linear spatial relationships could be also captured by tabular models.
C1 [Labunets, Katsiaryna] Univ Trento, Dept Informat Engn & Comp Sci, Trento, Italy.
   [Massacci, Fabio] Univ Trento, Trento, Italy.
   [Paci, Federica] Univ Southampton, Elect & Comp Sci Dept, Cyber Secur, Southampton, Hants, England.
   [Marczak, Sabrina; de Oliveira, Flavio Moreira] Pontificia Univ Catolica Rio Grande Sul PUCRS, Porto Alegre, RS, Brazil.
C3 University of Trento; University of Trento; University of Southampton;
   Pontificia Universidade Catolica Do Rio Grande Do Sul
RP Labunets, K (corresponding author), Univ Trento, Dept Informat Engn & Comp Sci, Trento, Italy.
EM katsiaryna.labunets@unitn.it; fabio.massacci@unitn.it;
   F.M.Paci@soton.ac.uk; sabrina.marczak@pucrs.br; flavio.oliveira@pucrs.br
RI Labunets, Katsiaryna/ABF-8775-2020; Massacci, Fabio/C-2662-2012;
   Oliveira, Flavio/F-5190-2017
OI Labunets, Katsiaryna/0000-0003-0884-2440; Massacci,
   Fabio/0000-0002-1091-8486; Paci, Federica/0000-0003-3122-0236; Oliveira,
   Flavio/0000-0001-5353-5330
FU SESAR JU WPE [12-120610-C12]
FX This work has been partly supported by the SESAR JU WPE under contract
   12-120610-C12 (EMFASE). We would like to thank B. Solhaug and K. Stolen
   from SINTEF for support in the definition of the CORAS models. L. Allodi
   helped us to organized the first experiment for the second study in
   Cosenza.
CR Abrahao S, 2013, IEEE T SOFTWARE ENG, V39, P327, DOI 10.1109/TSE.2012.27
   Agarwal R, 1999, IEEE T SOFTWARE ENG, V25, P541, DOI 10.1109/32.799953
   BSI, 2012, 1001 BSI INF SEC MAN
   De Gramatica M, 2015, ROLE CATALOGUES THRE
   De Lucia A, 2010, EMPIR SOFTW ENG, V15, P455, DOI 10.1007/s10664-009-9127-7
   Dunning D, 2003, CURR DIR PSYCHOL SCI, V12, P83, DOI 10.1111/1467-8721.01235
   Fabian B, 2010, REQUIR ENG, V15, P7, DOI 10.1007/s00766-009-0092-x
   Fox J., 2018, R COMPANION APPL REG
   Giorgini P, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P167, DOI 10.1109/RE.2005.43
   Grondahl IH, 2011, RISK ANAL, V31, P1813, DOI 10.1111/j.1539-6924.2011.01636.x
   Hadar I, 2013, INFORM SOFTWARE TECH, V55, P1823, DOI 10.1016/j.infsof.2013.05.003
   Heijstek W, 2011, INT SYMP EMP SOFTWAR, P167, DOI 10.1109/ESEM.2011.25
   Hogganvik I, 2005, PROG COMPREHEN, P115, DOI 10.1109/WPC.2005.27
   Hoisl B, 2014, COMPARING 30 NOTATIO, P95
   Hothorn T., 2015, exactRankTests: Exact distributions for rank and permutation tests
   Kabacoff R., 2015, R ACTION DATA ANAL G
   Kaczmarek M, 2015, EXPLANATORY CAPABILI, P128
   Labunets Katsiaryna, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P163, DOI 10.1109/ESEM.2013.29
   Labunets K, 2014, SESAR INNOV DAYS
   Labunets K, 2014, IEEE INT WORKS EMPIR, P28, DOI 10.1109/EmpiRE.2014.6890113
   Landoll D., 2005, SECURITY RISK ASSESS
   Lund MS, 2011, MODEL-DRIVEN RISK ANALYSIS: THE CORAS APPROACH, P3, DOI 10.1007/978-3-642-12323-8
   MacKenzie I. S., 2012, Human-computer interaction: An empirical research perspective
   Massacci Fabio, 2012, Secure IT Systems. 17th Nordic Conference, NordSec 2012. Proceedings, P89, DOI 10.1007/978-3-642-34210-3_7
   Matulevicius R, 2008, LECT NOTES COMPUT SC, V5074, P541
   Mayer N, 2007, DESIGN MODELLING LAN, P121
   Mayer N, 2005, RISK BASED SECURITY, V5
   Mead N., 2004, ADDISON WESLEY PROFE
   Mellado D, 2006, APPL SECURITY REQUIR, P192
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   Mouratidis H, 2007, INT J SOFTW ENG KNOW, V17, P285, DOI 10.1142/S0218194007003240
   Ottensooser A, 2012, J SYST SOFTWARE, V85, P596, DOI 10.1016/j.jss.2011.09.023
   Pournelle G. H., 1953, Journal of Mammalogy, V34, P133, DOI 10.1890/0012-9658(2002)083[1421:SDEOLC]2.0.CO;2
   Purchase HC, 2004, INT J HUM-COMPUT ST, V61, P187, DOI 10.1016/j.ijhcs.2004.01.003
   Ricca F, 2007, PROC INT CONF SOFTW, P375
   Saleh F, 2015, SCI EVALUATION MISUS, V66, P73
   Scanniello G, 2014, EFFECT USING SYSML R, P433
   Scanniello G, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2699696
   Scanniello G, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2491912
   Sharafi Z, 2013, CONF PROC INT SYMP C, P33, DOI 10.1109/ICPC.2013.6613831
   Stalhane T, 2010, COMPARING SAFETY ANA, P165
   Stalhane T, 2012, IDENTIFYING SAFETY H, P378
   Stalhane T, 2008, SAFETY HAZARD IDENTI, P721
   Stålhane T, 2014, INT J INF SYST MODEL, V5, P1, DOI 10.4018/ijismd.2014010101
   Stoneburner G, 2002, 80030 NIST SP
   Svahnberg M, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P288
   VESSEY I, 1991, DECISION SCI, V22, P219, DOI 10.1111/j.1540-5915.1991.tb00344.x
   Wickham H, 2009, USE R, P1, DOI 10.1007/978-0-387-98141-3
   Wickham H., 2016, Gtable: Arrange grobs in tables
   WOOD RE, 1986, ORGAN BEHAV HUM DEC, V37, P60, DOI 10.1016/0749-5978(86)90044-0
NR 50
TC 11
Z9 12
U1 0
U2 10
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2017
VL 22
IS 6
BP 3017
EP 3056
DI 10.1007/s10664-017-9502-8
PG 40
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA FI3MB
UT WOS:000411865400008
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Menzies, T
   Nichols, W
   Shull, F
   Layman, L
AF Menzies, Tim
   Nichols, William
   Shull, Forrest
   Layman, Lucas
TI Are delayed issues harder to resolve? Revisiting cost-to-fix of defects
   throughout the lifecycle
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software economics; Phase delay; Cost to fix
ID SOFTWARE-DEVELOPMENT; QUALITY; DESIGN
AB Many practitioners and academics believe in a delayed issue effect (DIE); i.e. the longer an issue lingers in the system, the more effort it requires to resolve. This belief is often used to justify major investments in new development processes that promise to retire more issues sooner. This paper tests for the delayed issue effect in 171 software projects conducted around the world in the period from 2006-2014. To the best of our knowledge, this is the largest study yet published on this effect. We found no evidence for the delayed issue effect; i.e. the effort to resolve issues in a later phase was not consistently or substantially greater than when issues were resolved soon after their introduction. This paper documents the above study and explores reasons for this mismatch between this common rule of thumb and empirical data. In summary, DIE is not some constant across all projects. Rather, DIE might be an historical relic that occurs intermittently only in certain kinds of projects. This is a significant result since it predicts that new development processes that promise to faster retire more issues will not have a guaranteed return on investment (depending on the context where applied), and that a long-held truth in software engineering should not be considered a global truism.
C1 [Menzies, Tim] North Carolina State Univ, CS, Raleigh, NC 27695 USA.
   [Nichols, William; Shull, Forrest] Carnegie Mellon Univ, Software Engn Inst, Pittsburgh, PA 15213 USA.
   [Layman, Lucas] Fraunhofer CESE, College Pk, MD USA.
C3 North Carolina State University; Software Engineering Institute;
   Carnegie Mellon University
RP Menzies, T (corresponding author), North Carolina State Univ, CS, Raleigh, NC 27695 USA.
EM tim.menzies@gmail.com; wrn@sei.cmu.edu; fjshull@sei.cmu.edu;
   llayman@cese.fraunhofer.org
RI Shull, Forrest/GZK-6750-2022; Menzies, Tim/X-7680-2019
OI Menzies, Tim/0000-0002-5040-3196
FU National Science Foundation grant [NSF-CISE 1302169, CISE 1506586]; TSP
   Licensing [FA8721-05-C-0003]; Carnegie Mellon University; United States
   Department of Defense; Division of Computing and Communication
   Foundations; Direct For Computer & Info Scie & Enginr [1506586] Funding
   Source: National Science Foundation
FX The authors wish to thank David Tuma and Yasutaka Shirai for their work
   on the SEI databases that made this analysis possible. In particular, we
   thank Tuma Solutions for providing the Team Process Data Warehouse
   software. Also, the authors gratefully acknowledge the careful comments
   of anonymous reviewers from the FSE and ICSE conferences. This work was
   partially funded by an National Science Foundation grants NSF-CISE
   1302169 and CISE 1506586.; This material is based upon work funded and
   supported by TSP Licensing under Contract No. FA8721-05-C-0003 with
   Carnegie Mellon University for the operation of the Software Engineering
   Institute, a federally funded research and development center sponsored
   by the United States Department of Defense. This material has been
   approved for public release and unlimited distribution. DM-0003956
CR [Anonymous], MAKING AGILE MANDATO
   [Anonymous], DEFECT PREVENTION RE
   [Anonymous], IEEE1012
   [Anonymous], 33 ANN IEEE SOFTW EN
   [Anonymous], 2002, TECHNICAL REPORT
   [Anonymous], 2000, Software Cost Estimation with COCOMO II
   [Anonymous], CONVINCING PUBLIC AC
   [Anonymous], LOCAL VERSUS GLOBAL
   [Anonymous], TECHNICAL REPORT
   [Anonymous], 1997, Software metrics: A rigorous and practical approach
   [Anonymous], COST REQUIREMENTS ER
   [Anonymous], MAKING SOFTWARE WHAT
   [Anonymous], 2008, GUIDE ADV EMPIRICAL
   [Anonymous], SOFTWARE METRICS ROA
   [Anonymous], TSP PROCESS COSTS BE
   [Anonymous], PROMISE
   [Anonymous], GARTN SAYS WORLDW SO
   [Anonymous], TECHNICAL REPORT
   [Anonymous], IEEE SOFTW
   [Anonymous], EXCLUSIVE BEHIND THE
   [Anonymous], CALCULATING YOUR RET
   [Anonymous], P ASE 11
   [Anonymous], YOUR BRAIN IS PRIMED
   [Anonymous], 14 ANN INCOSE INT S
   [Anonymous], INNOVATIONS SYSTEMS
   [Anonymous], WHAT WINDOWS SERVICE
   [Anonymous], 2002, Applied Statistics for Software Managers
   [Anonymous], P ACM SIGSOFT 22 INT
   [Anonymous], CATCH DEF TEST IS 10
   [Anonymous], 2005, SEI SERIES SOFTWARE
   [Anonymous], GOOD REQUIREMENTS DE
   [Anonymous], MSR 12
   [Anonymous], MAKING SOFTWARE WHAT
   [Anonymous], 2014, IDC STUDY MANY SOFTW
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Bachmann FH, 2013, IEEE SOFTWARE, V30, P9, DOI 10.1109/MS.2013.77
   Baziuk W, 1995, SIXTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P256, DOI 10.1109/ISSRE.1995.497665
   Beck K., 2000, EXTREME PROGRAMMING
   Beck K., 2001, Agile manifesto
   Bettenburg N, 2015, EMPIR SOFTW ENG, V20, P294, DOI 10.1007/s10664-013-9292-6
   Boehm B. W., 1980, Information Processing 80. Proceedings of the IFIP Congress 80, P321
   BOEHM BW, 1988, IEEE T SOFTWARE ENG, V14, P1462, DOI 10.1109/32.6191
   BOEHM BW, 1988, COMPUTER, V21, P61, DOI 10.1145/12944.12948
   BOEHM BW, 1976, IEEE T COMPUT, V25, P1226, DOI 10.1109/TC.1976.1674590
   Boehm BW., 1981, Software Engineering Economics
   Carlson MDA, 2009, J PALLIAT MED, V12, P77, DOI 10.1089/jpm.2008.9690
   Cook T. D., 1979, Quasi-experimentation: Design analysis issues for field settings
   DALY EB, 1977, IEEE T SOFTWARE ENG, V3, P229, DOI 10.1109/TSE.1977.231132
   Deming WE, 1982, Out of the crisis
   Devanbu P, 2016, PROC INT CONF SOFTW, P108, DOI 10.1145/2884781.2884812
   DUNSMORE HE, 1988, IEEE SOFTWARE, V5, P96
   Efron B., 1993, MONO STAT APPL PROBA
   Elssamadisy A, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P617, DOI 10.1109/ICSE.2002.1008006
   Endres A., 2003, A Handbook of Software and Systems Engineering: Empirical Observations, Laws, and Theories
   FAGAN ME, 1976, IBM SYST J, V15, P182, DOI 10.1147/sj.153.0182
   Fenton NE, 2000, IEEE T SOFTWARE ENG, V26, P797, DOI 10.1109/32.879815
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Glass R. L., 2002, FACTS FALLACIES SOFT
   Harter DE, 2012, IEEE T SOFTWARE ENG, V38, P810, DOI 10.1109/TSE.2011.63
   Humphrey W S, 1995, A discipline for software engineering
   Humphrey WattsS., 2000, Introduction to the team software process
   Jacobson Ivar., 1999, AW OBJ TECHNOL S
   Jones C., 2012, EC SOFTWARE QUALITY
   Jones C., 2007, Estimating Software Costs: Bringing Realism To Estimating
   Jorgensen M, 2009, IEEE T SOFTWARE ENG, V35, P368, DOI 10.1109/TSE.2009.2
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Karg LM, 2011, J SYST SOFTWARE, V84, P415, DOI 10.1016/j.jss.2010.11.904
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Kocaguneli E, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P882, DOI 10.1109/ICSE.2013.6606637
   Larman C, 2003, COMPUTER, V36, P47, DOI 10.1109/MC.2003.1204375
   Madigan D, 2014, ANNU REV STAT APPL, V1, P11, DOI 10.1146/annurev-statistics-022513-115645
   McConnell S, 2001, IEEE SOFTWARE, V18, P5, DOI 10.1109/MS.2001.903148
   McConnell S., 1996, SOFTWARE DEV, V4, P38
   Mead N., 2004, ADDISON WESLEY PROFE
   Menzies T., 2011, IEEE ASE'11
   Minku LL, 2013, INFORM SOFTWARE TECH, V55, P1512, DOI 10.1016/j.infsof.2012.09.012
   Mittas N, 2013, IEEE T SOFTWARE ENG, V39, P537, DOI 10.1109/TSE.2012.45
   Päivärinta T, 2015, SCI COMPUT PROGRAM, V101, P124, DOI 10.1016/j.scico.2014.11.012
   Passos C., 2011, ESEM'11
   Popper K., 2005, The logic of scientific discovery
   Prasad V, 2013, MAYO CLIN PROC, V88, P790, DOI 10.1016/j.mayocp.2013.05.012
   Pressman R.S., 2005, Software engineering: a Practitioner's Approach
   Reifer D.J., 2007, Crosstalk: The Journal of Defense Software Engineering, P24
   Royce W.E., 1998, AW OBJ TECHNOL S
   Shepperd M, 2013, IEEE T SOFTWARE ENG, V39, P1208, DOI 10.1109/TSE.2013.11
   Shepperd M, 2012, INFORM SOFTWARE TECH, V54, P820, DOI 10.1016/j.infsof.2011.12.008
   Shirai Y., 2014, Proceedings of the 2014 International Conference on Software and System Process, P25
   Shull F, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P249, DOI 10.1109/METRIC.2002.1011343
   Sjoberg D. I. K., 2008, Guide to Advanced Empirical Software Engineering, P312
   Stephenson W. E., 1976, 2nd International Conference on Software Engineering, P312
   Stol KJ, 2015, SCI COMPUT PROGRAM, V101, P79, DOI 10.1016/j.scico.2014.11.010
   Westland JC, 2002, J SYST SOFTWARE, V62, P1, DOI 10.1016/S0164-1212(01)00130-3
   Wohlin C., 2012, Experimentation in Software Engineering
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Yang Y, 2013, INFORM SOFTWARE TECH, V55, P1496, DOI 10.1016/j.infsof.2013.03.002
NR 95
TC 13
Z9 17
U1 0
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2017
VL 22
IS 4
BP 1903
EP 1935
DI 10.1007/s10664-016-9469-x
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FB6ZI
UT WOS:000406290500009
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Wu, J
   Ali, S
   Yue, T
   Tian, J
   Liu, C
AF Wu, Ji
   Ali, Shaukat
   Yue, Tao
   Tian, Jie
   Liu, Chao
TI Assessing the quality of industrial avionics software: an extensive
   empirical evaluation
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software Quality assessment; Real time operating system; Avionics
   software; Industrial case study
ID FALSE DISCOVERY RATE; FAILURES
AB A real-time operating system for avionics (RTOS4A) provides an operating environment for avionics application software. Since an RTOS4A has safety-critical applications, demonstrating a satisfactory level of its quality to its stakeholders is very important. By assessing the variation in quality across consecutive releases of an industrial RTOS4A based on test data collected over 17 months, we aim to provide a set of guidelines to 1) improve the test effectiveness and thus the quality of subsequent RTOS4A releases and 2) similarly assess the quality of other systems from test data. We carefully defined a set of research questions, for which we defined a number of variables (based on available test data), including release and measures of test effort, test effectiveness, complexity, test efficiency, test strength, and failure density. With these variables, to assess the quality in terms of number of failures found in tests, we applied a combination of analyses, including trend analysis using two-dimensional graphs, correlation analysis using Spearman's test, and difference analysis using the Wilcoxon rank test. Key results include the following: 1) The number of failures and failure density decreased in the latest releases and the test coverage was either high or did not decrease with each release; 2) increased test effort was spent on modules of greater complexity and the number of failures was not high in these modules; and 3) the test coverage for modules without failures was not lower than the test coverage for modules with failures uncovered in all the releases. The overall assessment, based on the evidences, suggests that the quality of the latest RTOS4A release has improved. We conclude that the quality of the RTOS4A studied was improved in the latest release. In addition, our industrial partner found our guidelines useful and we believe that these guidelines can be used to assess the quality of other applications in the future.
C1 [Wu, Ji; Tian, Jie; Liu, Chao] Beihang Univ, Sch Comp Sci & Engn, Beijing, Peoples R China.
   [Ali, Shaukat] Simula Res Lab, Software Engn Dept, Oslo, Norway.
   [Yue, Tao] Simula Res Lab, Oslo, Norway.
   [Yue, Tao] Univ Oslo, Oslo, Norway.
C3 Beihang University; University of Oslo
RP Wu, J (corresponding author), Beihang Univ, Sch Comp Sci & Engn, Beijing, Peoples R China.
EM wuji@buaa.edu.cn; shaukat@simula.no; tao@simula.no;
   tianjie@sei.buaa.edu.cn; liuchao@buaa.edu.cn
RI Tian, Jie/IRZ-5133-2023; yue, tao/H-6783-2013; Liu, Chao/AAA-3493-2022
OI Liu, Chao/0000-0002-5286-6944; Yue, Tao/0000-0003-3262-5577
FU Technology Foundation Program of the National Defense Technology
   Industry Ministry [JSZL2014601B008]; State Key Laboratory of the
   Software Development Environment [SKLSDE-2013ZX-12]; MBT4CPS project -
   Research Council of Norway under the category of Young Research Talents
   of the FRIPO funding scheme [240013/O70]; EU Horizon project U-Test
   [645463]; RFF Hovedstaden [239063]; Research Council of Norway
   [203461/O30, 240024/F20]
FX This research is jointly supported by the Technology Foundation Program
   (JSZL2014601B008) of the National Defense Technology Industry Ministry,
   the State Key Laboratory of the Software Development Environment
   (SKLSDE-2013ZX-12). This work was also supported by the MBT4CPS project
   funded by the Research Council of Norway (grant no. 240013/O70) under
   the category of Young Research Talents of the FRIPO funding scheme. Tao
   Yue and Shaukat Ali are also supported by the EU Horizon 2020 project
   U-Test (http://www.u-test.eu/) (grant no. 645463), the RFF Hovedstaden
   funded MBE-CR (grant no. 239063) project, the Research Council of Norway
   funded Zen-Configurator (grant no. 240024/F20) project, and the Research
   Council of Norway funded Certus SFI (grant no. 203461/O30)
   (http://certus-sfi.no/).
CR [Anonymous], 2006, Data Analysis Multivariate
   [Anonymous], 1992, RTCADO178B
   BASILI VR, 1984, COMMUN ACM, V27, P42, DOI 10.1145/69605.2085
   BENJAMINI Y, 1995, J R STAT SOC B, V57, P289, DOI 10.1111/j.2517-6161.1995.tb02031.x
   BOEHM BW, 1976, P 2 INT C SOFTW ENG, P592
   Cai X., 2005, Proceedings of the 1st International Workshop on Advances in Model-based Testing, P1, DOI DOI 10.1145/1083274.1083288
   Denaro G, 2002, SOFTW ENG 2002 ICSE
   Fenton N., 1996, SOFTWARE METRICS RIG, VSecond
   Fenton NE, 1999, J SYST SOFTWARE, V47, P149, DOI 10.1016/S0164-1212(99)00035-7
   Fenton NE, 2000, IEEE T SOFTWARE ENG, V26, P797, DOI 10.1109/32.879815
   Fujii T, P 33 INT C SOFTW ENG, P41
   HORGAN TR, 1994, COMPUTER, V27, P60, DOI 10.1109/2.312032
   HUTCHINS M, 1994, PROC INT CONF SOFTW, P191, DOI 10.1109/ICSE.1994.296778
   *IEEE, 1998, 8291998 IEEE
   Inozemtseva L, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P435, DOI 10.1145/2568225.2568271
   ISO/IEC, 2001, Technical Report, V1st
   ISO/IEC, 1995, ISO/IEC 12207
   ISO/IEC 25010, 2011, 25010 ISOIEC, V2011, P34
   Kevrekidis K, 2009, REL MAINT S 2009 26, P539, DOI DOI 10.1109/RAMS.2009.4914733
   Khoshgoftaar T., 1999, International Journal of Reliability, Quality and Safety Engineering, V6, P303
   Khoshgoftaar TM, 1996, SEVENTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P364, DOI 10.1109/ISSRE.1996.558896
   Leon D, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P442, DOI 10.1109/ISSRE.2003.1251065
   Lyu MR, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P119, DOI 10.1109/ISSRE.2003.1251036
   Malaiya Y. K., 1994, Proceedings. 5th International Symposium on Software Reliability Engineering (Cat. No.94TH8017), P186, DOI 10.1109/ISSRE.1994.341373
   Malaiya YK, 2002, IEEE T RELIAB, V51, P420, DOI 10.1109/TR.2002.804489
   Marick B, 1991, P PAC NW SOFT QUAL C, P147
   Marick B., 1999, Proceedings of the 16th Interational Conference on Testing Computer Software, P16
   Memon AM, 2005, IEEE T SOFTWARE ENG, V31, P884, DOI 10.1109/TSE.2005.117
   Mockus A, 2009, INT SYMP EMP SOFTWAR, P292
   Moller K.-H., 1993, Proceedings First International Software Metrics Symposium (Cat. No.93TH0518-1), P82, DOI 10.1109/METRIC.1993.263798
   Musa J. D., 1987, Software Reliability: Measure-ment, Prediction, Application
   Nagappan N., 2005, Proceedings of the third workshop on Software quality, P1
   Nagappan N, 2008, EMPIR SOFTW ENG, V13, P289, DOI 10.1007/s10664-008-9062-z
   Nagappan N, 2006, ISSRE 2006:17TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P62
   Ntafos SC, 1998, IEEE T SOFTWARE ENG, V6, P868
   Rice J. A., 2006, MATH STAT DATA ANAL
   Rosenberg L., 1998, P 9 INT S SOFTW REL
   Schneidewind NF, 1999, IEEE T SOFTWARE ENG, V25, P769, DOI 10.1109/32.824387
   Thomas Zimmermann., 2009, P THE 7 JOINT M EURO, P91, DOI DOI 10.1145/1595696.1595713
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Wu J, 2013, PROC INT SYMP SOFTW, P218, DOI 10.1109/ISSRE.2013.6698921
   Yekutieli D, 1999, J STAT PLAN INFER, V82, P171, DOI 10.1016/S0378-3758(99)00041-5
   Zhang XM, 2000, J SYST SOFTWARE, V50, P43, DOI 10.1016/S0164-1212(99)00075-8
   Zimmermann T, 2011, SOFTW TEST VER VAL I, P347
   Zimmermann T, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P531, DOI 10.1145/1368088.1368161
NR 45
TC 1
Z9 1
U1 1
U2 8
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2017
VL 22
IS 4
BP 1634
EP 1683
DI 10.1007/s10664-016-9440-x
PG 50
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FB6ZI
UT WOS:000406290500002
DA 2024-07-18
ER

PT J
AU Falessi, D
   Di Penta, M
   Canfora, G
   Cantone, G
AF Falessi, Davide
   Di Penta, Massimiliano
   Canfora, Gerardo
   Cantone, Giovanni
TI Estimating the number of remaining links in traceability recovery
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Information retrieval; Traceability link recovery; Metrics and
   measurement
ID CAPTURE-RECAPTURE; REQUIREMENTS; CODE
AB Although very important in software engineering, establishing traceability links between software artifacts is extremely tedious, error-prone, and it requires significant effort. Even when approaches for automated traceability recovery exist, these provide the requirements analyst with a, usually very long, ranked list of candidate links that needs to be manually inspected. In this paper we introduce an approach called Estimation of the Number of Remaining Links (ENRL) which aims at estimating, via Machine Learning (ML) classifiers, the number of remaining positive links in a ranked list of candidate traceability links produced by a Natural Language Processing techniques-based recovery approach. We have evaluated the accuracy of the ENRL approach by considering several ML classifiers and NLP techniques on three datasets from industry and academia, and concerning traceability links among different kinds of software artifacts including requirements, use cases, design documents, source code, and test cases. Results from our study indicate that: (i) specific estimation models are able to provide accurate estimates of the number of remaining positive links; (ii) the estimation accuracy depends on the choice of the NLP technique, and (iii) univariate estimation models outperform multivariate ones.
C1 [Falessi, Davide] Calif Polytech State Univ San Luis Obispo, Dept Comp Sci, San Luis Obispo, CA 93407 USA.
   [Di Penta, Massimiliano; Canfora, Gerardo] Univ Sannio, Dept Engn, Benevento, BN, Italy.
   [Cantone, Giovanni] Univ Roma Tor Vergata, Dept Civil Engn & Comp Sci, DICII, Rome, Italy.
C3 California State University System; California Polytechnic State
   University San Luis Obispo; University of Sannio; University of Rome Tor
   Vergata
RP Falessi, D (corresponding author), Calif Polytech State Univ San Luis Obispo, Dept Comp Sci, San Luis Obispo, CA 93407 USA.
EM dfalessi@calpoly.edu; dipenta@unisannio.it; canfora@unisannio.it;
   cantone@uniroma2.it
RI Di Penta, Massimiliano/AAF-9656-2021
OI Canfora, Gerardo/0000-0003-0049-1279
CR Abadi A, 2008, INT C PROGRAM COMPRE, P103, DOI 10.1109/ICPC.2008.30
   ALTMAN NS, 1992, AM STAT, V46, P175, DOI 10.2307/2685209
   [Anonymous], 2015, P 30 IEEE ACM INT C
   [Anonymous], 2013, Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering-ESEC/FSE 2013, page
   [Anonymous], 200908 SIM RES LAB
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Antoniol G., 2000, Proceedings of the Fourth European Conference on Software Maintenance and Reengineering, P227, DOI 10.1109/CSMR.2000.827331
   Asuncion HU, 2010, 2010 ACM IEEE 32 INT, V1, P95
   Athanasiadis IN, 2007, STUD COMP INTELL, V67, P175
   Baeza-Yates R., 1999, Modern information retrieval
   Bai CG, 2008, IEEE T SYST MAN CY A, V38, P1129, DOI 10.1109/TSMCA.2008.2001071
   BAKER R.D., 1995, Modern permutation test software
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Borg M, 2014, EMPIR SOFTW ENG, V19, P1565, DOI 10.1007/s10664-013-9255-y
   Breiman L, 2001, MACH LEARN, V45, P5, DOI 10.1023/A:1010933404324
   Briand LC, 2000, IEEE T SOFTWARE ENG, V26, P518, DOI 10.1109/32.852741
   Briand L, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2559978
   Cai KY, 1998, J SYST SOFTWARE, V40, P93, DOI 10.1016/S0164-1212(97)00003-4
   Capobianco G, 2009, INT C PROGRAM COMPRE, P148, DOI 10.1109/ICPC.2009.5090038
   Chen T., 1999, Proceedings 4th IEEE International Symposium on High-Assurance Systems Engineering, P249, DOI 10.1109/HASE.1999.809500
   Cleland-Huang J, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P135, DOI 10.1109/RE.2005.78
   Colwell D. J., 1982, Math. Gaz, V66, P307, DOI [10.2307/3615525, DOI 10.2307/3615525]
   Cuddeback D, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P860, DOI 10.1145/1985793.1985925
   Czauderna A., 2012, Proceedings of the 2012 IEEE Second Workshop on Requirements Engineering for Systems, Services and Systems-of-Systems (RES4), P1, DOI 10.1109/RES4.2012.6347691
   De Lucia A, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1276933.1276934
   De Lucia A, 2006, PROC IEEE INT CONF S, P299
   De Lucia A, 2011, CONF PROC INT SYMP C, P21, DOI 10.1109/ICPC.2011.34
   De Lucia A, 2009, EMPIR SOFTW ENG, V14, P57, DOI 10.1007/s10664-008-9090-8
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   Dekhtyar A, 2011, INT REQUIR ENG CONF, P111, DOI 10.1109/RE.2011.6051649
   Duan C., 2007, International Conference on Automated Software Engineering, P244
   Falessi D, 2015, 2015 IEEE 7TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD) PROCEEDINGS, P1, DOI 10.1109/MTD.2015.7332618
   Falessi D, 2014, IEEE SOFTWARE, V31, P80, DOI 10.1109/MS.2014.17
   Falessi D, 2013, IEEE T SOFTWARE ENG, V39, P18, DOI 10.1109/TSE.2011.122
   Fellbaum C, 1998, LANG SPEECH & COMMUN, P1
   Foss T, 2003, IEEE T SOFTWARE ENG, V29, P985, DOI 10.1109/TSE.2003.1245300
   Freund Y, 1999, MACHINE LEARNING, PROCEEDINGS, P124
   Friedman J, 2000, ANN STAT, V28, P337, DOI 10.1214/aos/1016218223
   Gethers M., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P133, DOI 10.1109/ICSM.2011.6080780
   Hayes JH, 2006, IEEE T SOFTWARE ENG, V32, P4, DOI 10.1109/TSE.2006.3
   Hayes JH, 2003, 11TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P138
   Kim S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P481, DOI 10.1145/1985793.1985859
   Krishnan S, 2013, INFORM SOFTWARE TECH, V55, P1479, DOI 10.1016/j.infsof.2012.11.008
   Lindvall M, 1996, SOFTWARE PRACT EXPER, V26, P1161, DOI 10.1002/(SICI)1097-024X(199610)26:10<1161::AID-SPE58>3.0.CO;2-X
   Lormans M, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P45
   Lormans M, 2008, EMPIR SOFTW ENG, V13, P727, DOI 10.1007/s10664-008-9078-4
   Malaiya YK, 1998, THIRD IEEE INTERNATIONAL HIGH-ASSURANCE SYSTEMS ENGINEERING SYMPOSIUM, PROCEEDINGS, P98
   Marcus A, 2003, PROC INT CONF SOFTW, P125, DOI 10.1109/ICSE.2003.1201194
   Mirakhorli M, 2012, PROC INT CONF SOFTW, P639, DOI 10.1109/ICSE.2012.6227153
   Mirakhorli M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P908, DOI 10.1145/1985793.1985942
   Myers J. L., 2003, Research design and statistical analysis
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Natt och Dag J., 2002, Requirements Engineering, V7, P20, DOI 10.1007/s007660200002
   Okutan A, 2014, EMPIR SOFTW ENG, V19, P154, DOI 10.1007/s10664-012-9218-8
   OTIS DL, 1978, WILDLIFE MONOGR, P1
   Panichella A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P522, DOI 10.1109/ICSE.2013.6606598
   Petersson H, 2004, J SYST SOFTWARE, V72, P249, DOI 10.1016/S0164-1212(03)00090-6
   Porter MF, 2006, PROGRAM-ELECTRON LIB, V40, P211, DOI [10.1108/00330330610681286, 10.1108/eb046814]
   Rahman Foyzur, 2013, P 2013 9 JOINT M FDN, P147
   Russell S., 2016, Artificial intelligence a modern approach
   Settimi R, 2004, 7TH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, P49, DOI 10.1109/IWPSE.2004.1334768
   STONE M, 1974, J R STAT SOC B, V36, P111, DOI 10.1111/j.2517-6161.1974.tb00994.x
   Thomas T. M.CoverandJ. A., 1991, ELEMENTS INFORM THEO, DOI 10.1002/0471200611
   Witten IH, 2011, MOR KAUF D, P3, DOI 10.1016/B978-0-12-374856-0.00001-8
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Yadla S, 2005, INNOV SYST SOFTW ENG, V1, P116, DOI 10.1007/s11334-005-0011-3
   Zou X, 2007, ACM INT S GRAND CHAL
   Zou XC, 2010, EMPIR SOFTW ENG, V15, P119, DOI 10.1007/s10664-009-9114-z
NR 68
TC 23
Z9 25
U1 0
U2 12
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2017
VL 22
IS 3
BP 996
EP 1027
DI 10.1007/s10664-016-9460-6
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EW4GE
UT WOS:000402459200003
DA 2024-07-18
ER

PT J
AU Li, X
   Mutha, C
   Smidts, CS
AF Li, Xiang
   Mutha, Chetan
   Smidts, Carol S.
TI An automated software reliability prediction system for safety critical
   software
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software reliability; Reliability modeling; Experimental validation;
   Operational profile; Finite state machine
AB Software reliability is one of the most important software quality indicators. It is concerned with the probability that the software can execute without any unintended behavior in a given environment. In previous research we developed the Reliability Prediction System (RePS) methodology to predict the reliability of safety critical software such as those used in the nuclear industry. A RePS methodology relates the software engineering measures to software reliability using various models, and it was found that RePS's using Extended Finite State Machine (EFSM) models and fault data collected through various software engineering measures possess the most satisfying prediction capability. In this research the EFSM-based RePS methodology is improved and implemented into a tool called Automated Reliability Prediction System (ARPS). The features of the ARPS tool are introduced with a simple case study. An experiment using human subjects was also conducted to evaluate the usability of the tool, and the results demonstrate that the ARPS tool can indeed help the analyst apply the EFSM-based RePS methodology with less number of errors and lower error criticality.
C1 [Li, Xiang] Ohio State Univ, Nucl Engn Program, Columbus, OH 43210 USA.
   [Mutha, Chetan] Oblon McClelland Maier & Neustadt LLP, Washingston DC Metro Area, Alexandria, VA USA.
   [Smidts, Carol S.] Ohio State Univ, Dept Mech & Aerosp Engn, Columbus, OH USA.
C3 University System of Ohio; Ohio State University; University System of
   Ohio; Ohio State University
RP Li, X (corresponding author), Ohio State Univ, Nucl Engn Program, Columbus, OH 43210 USA.
EM li.984@buckeyemail.osu.edu; mutha.4@osu.edu; Smidts.1@osu.edu
RI Mutha, Chetan/AAY-8039-2021
OI Smidts, Carol/0000-0001-7867-023X
FU U.S. Government
FX This paper was prepared as an account of work sponsored by an agency of
   the U.S. Government. Neither the U.S. Government nor any agency thereof,
   nor any of their employees, makes any warranty, expressed or implied, or
   assumes any legal liability or responsibility for any third party's use,
   or the results of such use, of any information, apparatus, product, or
   process disclosed in this report, or represents that its use by such
   third party would not infringe privately owned rights. The views
   expressed in this paper are not necessarily those of the U.S. Nuclear
   Regulatory Commission. We are grateful to Kevin Smearsoll and Boyuan Li
   for supporting this research.
CR [Anonymous], 2005, ADDISON WESLEY OBJEC
   [Anonymous], 1998, IEEE RECOMMENDED PRA
   [Anonymous], 1996, HDB SOFTWARE RELIABI
   Boudali H, 2006, IEEE T RELIAB, V55, P86, DOI 10.1109/TR.2005.859228
   Chambers J.M., 1983, Graphical Methods for Data Analysis
   Chen Chien-Chia., 2006, TENCON 2006. 2006 IEEE Region 10 Conference, P1
   Cheung L, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P111, DOI 10.1145/1368088.1368104
   DIXON WJ, 1953, ANN MATH STAT, V24, P467, DOI 10.1214/aoms/1177728986
   Fenton NE, 1999, IEEE T SOFTWARE ENG, V25, P675, DOI 10.1109/32.815326
   Gaffney G, 1990, P 13 MINN BROOK WORK
   Gokhale SS, 2006, IEEE T RELIAB, V55, P578, DOI 10.1109/TR.2006.884587
   Huang CY, 2007, IEEE T RELIAB, V56, P198, DOI 10.1109/TR.2007.895301
   Huang CY, 2005, J SYST SOFTWARE, V76, P181, DOI 10.1016/j.jss.2004.04.024
   Huang F, 2013, J SOFTWARE ENG, V7, P114, DOI DOI 10.3923/JSE.2013
   Huang F., 2015, J SOFTWARE EVOLUTION, DOI 10.1002/smr.1717
   Huang FQ, 2014, SCI COMPUT PROGRAM, V89, P350, DOI 10.1016/j.scico.2014.03.004
   IEEE Computer Society, 1998, 10161998 IEEE COMP S
   IEEE IEEE STD 610, 1990, 610121990 IEEE, p[12, 12]
   ISO, 2001, 912612001 ISO
   Lam M., 2006, COMPILERS PRINCIPLES
   Langseth H, 2007, RELIAB ENG SYST SAFE, V92, P92, DOI 10.1016/j.ress.2005.11.037
   Li B, 2005, RISK ANAL, V26, P4
   Li M, 2003, RANKING SOFTWARE ENG, V29, P24
   Li X, 2013, PSA 2013
   LYU MR, 1992, PROCEEDINGS OF THE FIFTH INTERNATIONAL WORKSHOP ON COMPUTER-AIDED SOFTWARE ENGINEERING, P264, DOI 10.1109/CASE.1992.200165
   Mathworks, 2014, SOLV EQ IN
   MENDENHALL W, 1989, 15 NONPARAMETRIC STA, P674
   Mills HD., 1972, IBM Federal Syst. Div., P72
   Musa J. D., 1975, IEEE Transactions on Software Engineering, VSE-1, P312, DOI 10.1109/TSE.1975.6312856
   Musa J. D., 1987, Software Reliability: Measure-ment, Prediction, Application
   MUSA JD, 1993, IEEE SOFTWARE, V10, P14, DOI 10.1109/52.199724
   Pandey A.K., 2013, Early Software Reliability Prediction. A Fuzzy Logic Approach
   Pham H., 2007, System Software Reliability
   Ramani S, 2000, PERFORM EVALUATION, V39, P37, DOI 10.1016/S0166-5316(99)00057-7
   Siegel S., 1956, Non-parametric statistics for the behavioral sciences, P75
   Smidts C, 2002, SOFTWARE RELIABILITY, V2, P1594
   Smidts C, 2015, P NPIC HMIT 2015
   Smidts C, 2004, NUREGCR6848 OFF NUCL
   Smidts C, 2010, NUREGCR7042 OFF NUCL
   Voas J, 1992, IEEE T SOFTW ENG, V18
   Walia Gursimran Singh, 2008, 2008 IEEE International Symposium on Software Reliability Engineering, P305, DOI 10.1109/ISSRE.2008.61
   Wang CJ, 1993, P 12 IEEE COMP COMM
   Wang W, 2005, FRONT ED 2005 FIE 05, pT4C
   Wolfram, 2014, EQ SOLV
NR 44
TC 6
Z9 9
U1 0
U2 17
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2016
VL 21
IS 6
BP 2413
EP 2455
DI 10.1007/s10664-015-9412-6
PG 43
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ED7XQ
UT WOS:000389085500006
DA 2024-07-18
ER

PT J
AU Kalliamvakou, E
   Gousios, G
   Blincoe, K
   Singer, L
   German, DM
   Damian, D
AF Kalliamvakou, Eirini
   Gousios, Georgios
   Blincoe, Kelly
   Singer, Leif
   German, Daniel M.
   Damian, Daniela
TI An in-depth study of the promises and perils of mining GitHub
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Mining software repositories; git; GitHub; Code reviews
AB With over 10 million git repositories, GitHub is becoming one of the most important sources of software artifacts on the Internet. Researchers mine the information stored in GitHub's event logs to understand how its users employ the site to collaborate on software, but so far there have been no studies describing the quality and properties of the available GitHub data. We document the results of an empirical study aimed at understanding the characteristics of the repositories and users in GitHub; we see how users take advantage of GitHub's main features and how their activity is tracked on GitHub and related datasets to point out misalignment between the real and mined data. Our results indicate that while GitHub is a rich source of data on software development, mining GitHub for research purposes should take various potential perils into consideration. For example, we show that the majority of the projects are personal and inactive, and that almost 40 % of all pull requests do not appear as merged even though they were. Also, approximately half of GitHub's registered users do not have public activity, while the activity of GitHub users in repositories is not always easy to pinpoint. We use our identified perils to see if they can pose validity threats; we review selected papers from the MSR 2014 Mining Challenge and see if there are potential impacts to consider. We provide a set of recommendations for software engineering researchers on how to approach the data in GitHub.
C1 [Kalliamvakou, Eirini] Univ Victoria, Dept Comp Sci, Victoria, BC, Canada.
   [Blincoe, Kelly] Univ Victoria, Software Engn Global interAct Lab, Victoria, BC, Canada.
   [Singer, Leif] Univ Victoria, Victoria, BC, Canada.
   [German, Daniel M.] Univ Victoria, Comp Sci, Victoria, BC, Canada.
   [Damian, Daniela] Univ Victoria, Dept Comp Sci, Software Engn, Victoria, BC, Canada.
   [Damian, Daniela] Univ Victoria, Software Engn Global interAct Lab SEGAL, Victoria, BC, Canada.
   [Gousios, Georgios] Radboud Univ Nijmegen, Nijmegen, Netherlands.
C3 University of Victoria; University of Victoria; University of Victoria;
   University of Victoria; University of Victoria; University of Victoria;
   Radboud University Nijmegen
RP German, DM (corresponding author), Univ Victoria, Comp Sci, Victoria, BC, Canada.
EM ikaliam@uvic.ca; g.gousios@cs.ru.nl; kblincoe@acm.org; lsinger@uvic.ca;
   dmg@uvic.ca; danielad@uvic.ca
RI Blincoe, Kelly/AAI-6285-2020
OI Blincoe, Kelly/0000-0003-4092-9706; Gousios,
   Georgios/0000-0002-8495-7939
CR [Anonymous], 2013, P 16 C COMP SUPP COO
   [Anonymous], 2014, DCS352IR U VICT
   [Anonymous], 2015, P 37 INT C SOFTW ENG
   Aranda J, 2009, PROC INT CONF SOFTW, P298, DOI 10.1109/ICSE.2009.5070530
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Baysal O, 2014, MSR 14 MINING CHALLE
   Begel A, 2013, IEEE SOFTWARE, V30, P52, DOI 10.1109/MS.2013.13
   Bernstein A., 2010, P 18 ACM SIGSOFT INT, P97
   Bird C, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P121, DOI 10.1145/1595696.1595716
   Bird C, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P1, DOI 10.1109/MSR.2009.5069475
   Bissyandé TF, 2013, PROC INT SYMP SOFTW, P188, DOI 10.1109/ISSRE.2013.6698918
   Corbin J., 2008, QUAL RES, DOI DOI 10.4135/9781452230153.N10
   Dabbish L, 2012, P ACM 2012 C COMP SU, P1277, DOI [10.1145/2145204.2145396, DOI 10.1145/2145204.2145396]
   Finley Klint., 2011, GITHUB HAS SURPASSED
   Gousios Georgios, 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P12, DOI 10.1109/MSR.2012.6224294
   Gousios G., 2014, Proceedings of the Conference on Mining Software Repositories (MSR), MSR 2014, P368, DOI 10.1145/2597073.2597122
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   Gousios G, 2013, IEEE WORK CONF MIN S, P233, DOI 10.1109/MSR.2013.6624034
   Grigorik I, 2012, THE GITHUB ARCH
   Howison J., 2004, "International Workshop on Mining Software Repositories (MSR 2004)" W17S Workshop - 26th International Conference on Software Engineering, P7, DOI 10.1049/ic:20040467
   Kalliamvakou E., 2014, P 11 WORKING C MININ, P92, DOI DOI 10.1145/2597073.2597074
   Kochhar PS, 2013, EUR CON SFTWR MTNCE, P353, DOI 10.1109/CSMR.2013.48
   Matragkas N., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, P356, DOI [10.1145/2597073.2597119, DOI 10.1145/2597073.2597119]
   McDonald N., 2013, CHI'13 Extended Abstracts on Human Factors in Computing Systems: ACM, P139
   Neath K, 2012, NOTIFICATIONS AMP ST
   Nguyen T. H. D., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P259, DOI 10.1109/WCRE.2010.37
   Padhye R., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, P332, DOI 10.1145/2597073.2597113
   Pham R, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P112, DOI 10.1109/ICSE.2013.6606557
   Rahman Foyzur, 2013, P 2013 9 JOINT M FDN, P147
   Rahman M. M, 2014, P 11 WORK C MIN SOFT, P364, DOI DOI 10.1145/2597073.2597121
   Rainer A., 2005, PROCEEDING 1 INT C O, P29
   Rigby PC, 2013, P 2013 9 JOINT M FDN, P202, DOI DOI 10.1145/2491411.2491444
   Rigby PC, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P541
   Sheoran Jyoti, 2014, P 11 WORK C MIN SOFT, P336, DOI DOI 10.1145/2597073.2597114
   Takhteyev Y., 2010, Investigating the geography of open source software through GitHub
   Thung F, 2013, EUR CON SFTWR MTNCE, P323, DOI 10.1109/CSMR.2013.41
   Tsay J, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P356, DOI 10.1145/2568225.2568315
   Tsay JasonT., 2012, Proceedings of the ACM 2012 Conference on Computer Supported Cooperative Work Companion - CSCW'12, P223
   Wagstrom P, 2013, IEEE WORK CONF MIN S, P229, DOI 10.1109/MSR.2013.6624033
   Weiss D., 2005, Proc. Int'l Conf. Open Source Systems, P140
NR 40
TC 145
Z9 158
U1 1
U2 24
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2016
VL 21
IS 5
BP 2035
EP 2071
DI 10.1007/s10664-015-9393-5
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DU2BX
UT WOS:000382017100006
DA 2024-07-18
ER

PT J
AU Chen, J
   Xiao, JC
   Wang, Q
   Osterweil, LJ
   Li, MS
AF Chen, Jie
   Xiao, Junchao
   Wang, Qing
   Osterweil, Leon J.
   Li, Mingshu
TI Perspectives on refactoring planning and practice: an empirical study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Refactoring; Project Management; Software Process; Iterative
   Development; Survey
ID AGILE SOFTWARE-DEVELOPMENT; DESIGN; QUALITY
AB Iterative development increasingly seeks to incorporate design modification and continuous refactoring in order to maintain code quality even in highly dynamic environments. However, there does not appear to be consensus on how to do this, especially because research results seem to be inconsistent. This paper presents an empirical study based upon an industry survey of refactoring practices and attitudes. The study explored differences in attitudes about refactoring among participants who played roles in software development, and how these different attitudes affected actual practice. The study found strong agreement among all roles about the importance of refactoring, and agreement about the negative effects upon agility of deferring refactoring. Nevertheless, the survey found that roles had different perspectives on the different kinds of tasks in an agile process. Accordingly, there was no universally agreed-upon strategy for how to plan to carry out refactoring. Analysis of the survey results has raised many interesting questions suggesting the need for a considerable amount of future research.
C1 [Chen, Jie; Xiao, Junchao; Wang, Qing; Li, Mingshu] Chinese Acad Sci, Inst Software, Lab Internet Software Technol, Beijing, Peoples R China.
   [Chen, Jie] Univ Chinese Acad Sci, Beijing, Peoples R China.
   [Xiao, Junchao; Wang, Qing; Li, Mingshu] Chinese Acad Sci, Inst Software, State Key Lab Comp Sci, Beijing, Peoples R China.
   [Osterweil, Leon J.] Univ Massachusetts, Dept Comp Sci, Amherst, MA 01003 USA.
C3 Chinese Academy of Sciences; Institute of Software, CAS; Chinese Academy
   of Sciences; University of Chinese Academy of Sciences, CAS; Chinese
   Academy of Sciences; Institute of Software, CAS; University of
   Massachusetts System; University of Massachusetts Amherst
RP Chen, J (corresponding author), Chinese Acad Sci, Inst Software, Lab Internet Software Technol, Beijing, Peoples R China.; Chen, J (corresponding author), Univ Chinese Acad Sci, Beijing, Peoples R China.
EM chenjie@itechs.iscas.ac.cn; xiaojunchao@itechs.iscas.ac.cn;
   wq@itechs.iscas.ac.cn; ljo@cs.umass.edu; mingshu@iscas.ac.cn
RI wang, qi/ITT-9652-2023
FU Natural Science Foundation of China [91318301, 91218302, 61432001]; US
   National Science Foundation [CCR-0205575, CCR-0427071, IIS-0705772]
FX This research was supported by the Natural Science Foundation of China
   under grant Nos. 91318301, 91218302, 61432001. This work was also
   supported by the US National Science Foundation under Awards No.
   CCR-0205575, CCR-0427071, and IIS-0705772.
CR Brasil MMA, 2012, LECT NOTES BUS INF P, V102, P300
   Alshayeb M, 2005, J SYST SOFTWARE, V74, P269, DOI 10.1016/j.jss.2004.02.002
   [Anonymous], 2003, SURVEY HDB
   [Anonymous], EMP SOFTW ENG MEAS 2
   Beck K., 2000, EXTREME PROGRAMMING
   BELADY LA, 1976, IBM SYST J, V15, P225, DOI 10.1147/sj.153.0225
   Bellomo S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P982, DOI 10.1109/ICSE.2013.6606648
   Buchmann F., 2012, ARCHITECTURAL TACTIC
   Cao L., 2010, ACM Transactions on Management Information Systems TMIS, V1, P5, DOI DOI 10.1145/1877725.1877730.[35]C
   Chen J., 2014, P 2014 INT C SOFTW S, P55
   Chen L, 2014, SOFTW ARCH WICSA 201
   Dig D, 2005, PROC IEEE INT CONF S, P389
   Dong X, 2011, ASIA PAC SOFWR ENG, P397, DOI 10.1109/APSEC.2011.11
   Drury M, 2012, J SYST SOFTWARE, V85, P1239, DOI 10.1016/j.jss.2012.01.058
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Eleni Stroulia R. L., 2003, EDSER 5 5 INT WORKSH, P44
   Elssamadisy A, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P617, DOI 10.1109/ICSE.2002.1008006
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Harman M, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1106
   Jones JA, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P467, DOI 10.1109/ICSE.2002.1007991
   Kataoka Y, 2002, PROC IEEE INT CONF S, P576, DOI 10.1109/ICSM.2002.1167822
   Kim M., 2012, P ACM SIGSOFT 20 INT, P1
   Kolb R, 2006, J SOFTW MAINT EVOL-R, V18, P109, DOI 10.1002/smr.329
   Lingming Zhang, 2011, 2011 IEEE 27th International Conference on Software Maintenance, P23, DOI 10.1109/ICSM.2011.6080769
   Marinescu R, 2005, PROC IEEE INT CONF S, P701
   Moser R, 2008, LECT NOTES COMPUT SC, V5082, P252
   Moser R, 2006, LECT NOTES COMPUT SC, V4039, P287
   Murphy-Hill E, 2012, IEEE T SOFTWARE ENG, V38, P5, DOI 10.1109/TSE.2011.41
   Negara Stas, 2012, USING CONTINUOUS COD USING CONTINUOUS COD
   Nidhra S., 2012, SOFTW ENG CONSEG 201, P1
   Przepiora M, 2012, INT SYMP EMP SOFTWAR, P115, DOI 10.1145/2372251.2372271
   Rachatasumrit N, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P357, DOI 10.1109/ICSM.2012.6405293
   Ratzinger J., 2008, Proceedings of the 2008 international working conference on Mining software repositories, P35, DOI [10.1145/1370750.1370759, DOI 10.1145/1370750.1370759]
   Reddy KR, 2009, ACM SIGSOFT SOFTW EN, V34, P1
   Sahraoui HA, 2000, PROC IEEE INT CONF S, P154, DOI 10.1109/ICSM.2000.883034
   Schwaber K., 2002, AGILE SOFTWARE DEV S
   Schwaber K, 2011, SCRUM GUIDEBOOK
   Simon F, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P30, DOI 10.1109/CSMR.2001.914965
   Soares G, 2010, IEEE SOFTWARE, V27, P52, DOI 10.1109/MS.2010.63
   Venables W.N., 2002, An introduction to R
   Xing Z., 2005, 20 IEEEACM INT C AUT, P54, DOI DOI 10.1145/1101908.1101919
   Yamashita A, 2013, WORK CONF REVERSE EN, P242, DOI 10.1109/WCRE.2013.6671299
NR 42
TC 7
Z9 8
U1 0
U2 9
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2016
VL 21
IS 3
BP 1397
EP 1436
DI 10.1007/s10664-015-9390-8
PG 40
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DQ2VO
UT WOS:000379061700020
DA 2024-07-18
ER

PT J
AU Munir, H
   Wnuk, K
   Runeson, P
AF Munir, Hussan
   Wnuk, Krzysztof
   Runeson, Per
TI Open innovation in software engineering: a systematic mapping study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Open innovation; Collective innovation; Collective invention; User
   innovation; Literature review; Research agenda; Software engineering
ID COMMUNITY; REVIEWS; FIRMS
AB Open innovation (OI) means that innovation is fostered by using both external and internal influences in the innovation process. In software engineering (SE), OI has existed for decades, while we currently see a faster and broader move towards OI in SE. We therefore survey research on how OI takes place and contributes to innovation in SE. This study aims to synthesize the research knowledge on OI in the SE domain. We launched a systematic mapping study and conducted a thematic analysis of the results. Moreover, we analyzed the strength of the evidence in the light of a rigor and relevance assessment of the research. We identified 33 publications, divided into 9 themes related to OI. 17/33 studies fall in the high-rigor/high-relevance category, suggesting the results are highly industry relevant. The research indicates that start-ups have higher tendency to opt for OI compared to incumbents. The evidence also suggests that firms assimilating knowledge into their internal R&D activities, have higher likelihood of gaining financial advantages. We concluded that OI should be adopted as a complementary approach to facilitate internal innovation and not to substitute it. Further research is advised on situated OI strategies and the interplay between OI and agile practices.
C1 [Munir, Hussan; Wnuk, Krzysztof; Runeson, Per] Lund Univ, Dept Comp Sci, Box 118, S-22100 Lund, Sweden.
C3 Lund University
RP Munir, H (corresponding author), Lund Univ, Dept Comp Sci, Box 118, S-22100 Lund, Sweden.
EM hussan.munir@cs.lth.se; Krzysztof.Wnuk@cs.lth.se; Per.Runeson@cs.lth.se
RI Munir, Hussan/HKV-4509-2023; Runeson, Per/H-5113-2019
OI Munir, Hussan/0000-0001-9376-9844; Runeson, Per/0000-0003-2795-4851
FU Swedish National Science Foundation Framework Grant for Strategic
   Research in Information and Communication Technology [621-2012-5354]
FX This work is funded by the Swedish National Science Foundation Framework
   Grant for Strategic Research in Information and Communication
   Technology, project Synergies (Synthesis of a Software Engineering
   Framework for Open Innovation through Empirical Research), grant
   621-2012-5354.
CR ALLEN RC, 1983, J ECON BEHAV ORGAN, V4, P1, DOI 10.1016/0167-2681(83)90023-9
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], MOD RAT PERC QUAL SC
   [Anonymous], J PRODUCT INNOVATION
   [Anonymous], 2004, P R D MAN C LISB POR
   Balka K, 2010, CREAT INNOV MANAG, V19, P248, DOI 10.1111/j.1467-8691.2010.00569.x
   Brad S, 2008, 2008 IEEE INTERNATIONAL CONFERENCE ON AUTOMATION, QUALITY AND TESTING, ROBOTICS (AQTR 2008), THETA 16TH EDITION, VOL III, PROCEEDINGS, P224, DOI 10.1109/AQTR.2008.4588916
   Chesbrough H., 2003, OPEN INNOVATION, DOI [10.1016/j.jengtecman.2004.05.003, DOI 10.1016/J.JENGTECMAN.2004.05.003]
   Chulani Sunita, 2008, WORKSH SOFTW DEV GOV, P3
   Colombo MG., 2013, Research Policy
   Conboy K, 2011, INFORM SOFTWARE TECH, V53, P535, DOI 10.1016/j.infsof.2010.10.007
   Cruzes DS, 2011, INFORM SOFTWARE TECH, V53, P440, DOI 10.1016/j.infsof.2011.01.004
   Dahlander L, 2006, RES POLICY, V35, P1243, DOI 10.1016/j.respol.2006.09.011
   Dahlander L, 2008, LONG RANGE PLANN, V41, P629, DOI 10.1016/j.lrp.2008.09.003
   de Almeida Biolchini JC, 2007, ADV ENG INFORM, V21, P133, DOI 10.1016/j.aei.2006.11.006
   Di Gangi PM, 2009, DECIS SUPPORT SYST, V48, P303, DOI 10.1016/j.dss.2009.04.004
   Dittrich K, 2007, J PROD INNOVAT MANAG, V24, P510, DOI 10.1111/j.1540-5885.2007.00268.x
   Ebner W, 2009, R&D MANAGE, V39, P342, DOI 10.1111/j.1467-9310.2009.00564.x
   Edison H, 2013, J SYST SOFTWARE, V86, P1390, DOI 10.1016/j.jss.2013.01.013
   Enkel E, 2009, R&D MANAGE, V39, P311, DOI 10.1111/j.1467-9310.2009.00570.x
   Gassmann O, 2006, R&D MANAGE, V36, P223, DOI 10.1111/j.1467-9310.2006.00437.x
   Greenhalgh T, 2005, BRIT MED J, V331, P1064, DOI 10.1136/bmj.38636.593461.68
   Grotnes E, 2009, INFORM TECHNOL PEOPL, V22, P367, DOI 10.1108/09593840911002469
   Harison E, 2010, RES POLICY, V39, P351, DOI 10.1016/j.respol.2010.01.008
   HENKEL J, 2013, RES POLICY
   Henkel J, 2006, RES POLICY, V35, P953, DOI 10.1016/j.respol.2006.04.010
   Henkel J, 2009, IND CORP CHANGE, V18, P435, DOI 10.1093/icc/dtn046
   Hüsig S, 2011, COMPUT IND, V62, P407, DOI 10.1016/j.compind.2010.12.003
   Huizingh EKRE, 2011, TECHNOVATION, V31, P2, DOI 10.1016/j.technovation.2010.10.002
   Ivarsson M, 2011, EMPIR SOFTW ENG, V16, P365, DOI 10.1007/s10664-010-9146-4
   Jalali S, 2012, INT SYMP EMP SOFTWAR, P29, DOI 10.1145/2372251.2372257
   Jansen S, 2012, J SYST SOFTWARE, V85, P1495, DOI 10.1016/j.jss.2011.12.007
   Jonsson A., 2007, Educational Research Review, V2, P130, DOI [10.1016/j.edurev.2007.05.002, DOI 10.1016/J.EDUREV.2007.05.002]
   Kitchenham Barbara, 2012, 16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012), P126, DOI 10.1049/ic.2012.0016
   Kitchenham BA, 2011, INFORM SOFTWARE TECH, V53, P638, DOI 10.1016/j.infsof.2010.12.011
   Kundel HL, 2003, RADIOLOGY, V228, P303, DOI 10.1148/radiol.2282011860
   Laine MOJ, 2012, LECT NOTES BUS INF P, V114, P70
   Morgan L, 2010, DATA BASE ADV INF SY, V41, P76
   Moskal B., 2002, SIGCSE Bulletin, V34, P101, DOI 10.1145/563517.563380
   Mowery DC, 2009, IND CORP CHANGE, V18, P1, DOI 10.1093/icc/dtn049
   Oliver G, 2010, R&D MANAGE, V40, P213
   Petersen K, 2008, P INT C EV ASS SOFTW, P1
   Petersen K, 2011, INT SYMP EMP SOFTWAR, P351, DOI 10.1109/ESEM.2011.46
   Rayna T, 2010, INT J TECHNOL MANAGE, V52, P477, DOI 10.1504/IJTM.2010.035986
   Rohrbeck R, 2009, R&D MANAGE, V39, P420, DOI 10.1111/j.1467-9310.2009.00568.x
   SINGER L, 2011, SSE, P00001
   Sjoberg DIK, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P358, DOI 10.1109/FOSE.2007.30
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Stam W, 2009, RES POLICY, V38, P1288, DOI 10.1016/j.respol.2009.06.004
   Stuermer M, 2009, R&D MANAGE, V39, P170, DOI 10.1111/j.1467-9310.2009.00548.x
   Van der Meer H., 2007, CREAT INNOV MANAG, V16, P192
   von Krogh G, 2003, RES POLICY, V32, P1217, DOI 10.1016/S0048-7333(03)00050-7
   von Krogh G, 2007, J STRATEGIC INF SYST, V16, P236, DOI 10.1016/j.jsis.2007.06.001
   West J, 2003, RES POLICY, V32, P1259, DOI 10.1016/S0048-7333(03)00052-0
   West J., 2008, CREATING EVOLVING OP
   West J, 2006, R&D MANAGE, V36, P319, DOI 10.1111/j.1467-9310.2006.00436.x
   Wieringa R, 2006, REQUIR ENG, V11, P102, DOI 10.1007/s00766-005-0021-6
   Wnuk K, 2013, LECT NOTES BUS INF P, V150, P48
   Wnuk K, 2012, INT SYMP EMP SOFTWAR, P271, DOI 10.1145/2372251.2372301
   Wohlin C, 2013, INFORM SOFTWARE TECH, V55, P919, DOI 10.1016/j.infsof.2013.02.002
   Zelkowitz MV, 1998, NASA GODD SOFTW ENG, P52
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 67
TC 40
Z9 41
U1 0
U2 35
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2016
VL 21
IS 2
BP 684
EP 723
DI 10.1007/s10664-015-9380-x
PG 40
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA DI2ST
UT WOS:000373349700012
DA 2024-07-18
ER

PT J
AU Le, TDB
   Lo, D
   Thung, F
AF Le, Tien-Duy B.
   Lo, David
   Thung, Ferdian
TI Should I follow this fault localization tool's output? Automated
   prediction of fault localization effectiveness
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Fault localization; Effectiveness prediction; Classification
AB Debugging is a crucial yet expensive activity to improve the reliability of software systems. To reduce debugging cost, various fault localization tools have been proposed. A spectrum-based fault localization tool often outputs an ordered list of program elements sorted based on their likelihood to be the root cause of a set of failures (i.e., their suspiciousness scores). Despite the many studies on fault localization, unfortunately, however, for many bugs, the root causes are often low in the ordered list. This potentially causes developers to distrust fault localization tools. Recently, Parnin and Orso highlight in their user study that many debuggers do not find fault localization useful if they do not find the root cause early in the list. To alleviate the above issue, we build an oracle that could predict whether the output of a fault localization tool can be trusted or not. If the output is not likely to be trusted, developers do not need to spend time going through the list of most suspicious program elements one by one. Rather, other conventional means of debugging could be performed. To construct the oracle, we extract the values of a number of features that are potentially related to the effectiveness of fault localization. Building upon advances in machine learning, we process these feature values to learn a discriminative model that is able to predict the effectiveness of a fault localization tool output. In this work, we consider an output of a fault localization tool to be effective if the root cause appears in the top 10 most suspicious program elements. We have evaluated our proposed oracle on 200 faulty versions of Space, NanoXML, XML-Security, and the 7 programs in Siemens test suite. Our experiments demonstrate that we could predict the effectiveness of 9 fault localization tools with a precision, recall, and F-measure (harmonic mean of precision and recall) of up to 74.38 %, 90.00 % and 81.45 %, respectively. The numbers indicate that many ineffective fault localization instances are identified correctly, while only few effective ones are identified wrongly.
C1 [Le, Tien-Duy B.; Lo, David; Thung, Ferdian] Singapore Management Univ, Sch Informat Syst, Singapore 178902, Singapore.
C3 Singapore Management University
RP Le, TDB (corresponding author), Singapore Management Univ, Sch Informat Syst, 80 Stamford Rd, Singapore 178902, Singapore.
EM btdle.2012@smu.edu.sg; davidlo@smu.edu.sg; ferdiant.2013@smu.edu.sg
RI Thung, Ferdian/AAX-9321-2020; Lo, David/A-2493-2012
OI Lo, David/0000-0002-4367-7201
CR AHA DW, 1991, MACH LEARN, V6, P37, DOI 10.1023/A:1022689900470
   [Anonymous], ESEC FSE
   [Anonymous], ISSTA
   [Anonymous], 2002, 0232002 NAT I STAND
   [Anonymous], 2000, SOFTWARE TESTING VER
   [Anonymous], ASE
   [Anonymous], 1990, Software testing techniques {
   [Anonymous], ACM COMPUTING SURVEY
   [Anonymous], TAICPART MUTATION
   [Anonymous], ESEC FSE
   [Anonymous], ISSTA
   [Anonymous], 1983, INTRO MODERN INFORM
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Artzi S, 2010, ISSTA
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Chilimbi T.M., 2009, ICSE
   Cleary J. G., 1995, Machine Learning. Proceedings of the Twelfth International Conference on Machine Learning, P108
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Duda R. O., 2000, PATTERN CLASSIFICATI
   Gong L, 2012, IEEE INT CONF AUTOM, P30, DOI 10.1145/2351676.2351682
   Gong L, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P67, DOI 10.1109/ICSM.2012.6405255
   Gu Q., 2011, 27 C UNC ART INT UAI, P266
   Gupta N., 2005, Proceedings of the 20th IEEE/ACM International Conference on Automated Software Engineering, New York, NY, USA: Association for Computing Machinery, ASE'05, P263, DOI 10.1145/1101908.1101948
   Haibo He, 2009, IEEE Transactions on Knowledge and Data Engineering, V21, P1263, DOI 10.1109/TKDE.2008.239
   Han J., 2006, DATA MINING CONCEPTS, DOI 10.1016/C2009-0-61819-5
   Hindle A, 2009, INT C PROGRAM COMPRE, P30, DOI 10.1109/ICPC.2009.5090025
   Huang L, 2011, ASE
   HUTCHINS M, 1994, PROC INT CONF SOFTW, P191, DOI 10.1109/ICSE.1994.296778
   Jalbert N, 2008, I C DEPEND SYS NETWO, P52, DOI 10.1109/DSN.2008.4630070
   Japkowicz N, 2000, IC-AI'2000: PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE, VOL 1-III, P111
   Jing XY, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P414, DOI 10.1145/2568225.2568320
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Le TDB, 2013, ICSM
   Liblit B, 2003, ACM SIGPLAN NOTICES, V38, P141, DOI 10.1145/780822.781148
   Lo D., 2011, Proceedings of the 2011 IEEE 13th International Symposium on High-Assurance Systems Engineering (HASE 2011), P340, DOI 10.1109/HASE.2011.36
   Lucia LD, 2010, ICSM
   Lucia LoD, 2014, J SOFTWARE EVOLUTION
   Maiga A, 2012, ASE
   Parnin C., 2011, P 2011 INT S SOFTWAR, P199, DOI [10.1145/2001420.2001445, DOI 10.1145/2001420.2001445]
   Quinlan J.R., 1993, C4.5 : programs for machine learning
   Renieris M., 2003, Proceedings. 18th IEEE International Conference on Automated Software Engineering (ASE'03), P141
   Santelices R., 2009, ICSE
   Seo HM, 2012, IEEE INT CONF AUTOM, P180, DOI 10.1145/2351676.2351702
   Shihab E., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P249, DOI 10.1109/WCRE.2010.36
   Shihab E., 2012, EMPIRICAL SOFTWARE E
   Sun C., 2010, ICSE
   Thung  F., 2012, WCRE
   Tian Y, 2012, EUR CON SFTWR MTNCE, P385, DOI 10.1109/CSMR.2012.48
   Vapnik VN, 2000, NATURE STAT LEARNING, DOI DOI 10.1007/978-1-4757-3264-1
   Wang S, 2011, ASE
   Wang X., 2009, ACL IJCNLP
   Wong WE, 2014, IEEE T RELIAB, V63, P290, DOI 10.1109/TR.2013.2285319
   Wong WE, 2012, IEEE T SYST MAN CY C, V42, P378, DOI 10.1109/TSMCC.2011.2118751
   Wong WE, 2012, IEEE T RELIAB, V61, P149, DOI 10.1109/TR.2011.2172031
   Xie X, 2013, TOSEM
   Zeller A., 2002, Software Engineering Notes, V27, P1, DOI 10.1145/605466.605468
   Zhang X., 2006, ICSE
   Zhou J., 2012, ICSE
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
NR 59
TC 35
Z9 38
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2015
VL 20
IS 5
BP 1237
EP 1274
DI 10.1007/s10664-014-9349-1
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CQ5UP
UT WOS:000360671500003
DA 2024-07-18
ER

PT J
AU Ihme, T
   Pikkarainen, M
   Teppola, S
   Kääriäinen, J
   Biot, O
AF Ihme, Tuomas
   Pikkarainen, Minna
   Teppola, Susanna
   Kaariainen, Jukka
   Biot, Olivier
TI Challenges and industry practices for managing software variability in
   small and medium sized enterprises
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software variability challenges; Variability practices
ID REUSE
AB Software variability is an ability to change (configure, customize, extend) software artefacts (e.g. code, product, domain requirements, models, design, documentation, test cases) for a specific context. Optimized variability management can lead a software company to 1) shorter development lead time, 2) improved customer and improved user satisfaction, 3) reduced complexity of product management (more variability, same $) and 4) reduced costs (same variability, less $). However, it is not easy for software companies, especially small and medium size of enterprises to deal with variability. In this paper we present variability challenges and used practices collected from five SMEs. Our study indicates that increased product complexity can lead growing SMEs to the time-consuming decision-making. Many of the analyzed medium size of companies also expect improved tool support to help them to boost their productivity when managing increasingly complex products and increasing amount of variants In fact, in many of the analysed SMEs, a high level of automation in design, release management and testing are or become a key factor for market success By introducing the challenges and used practices related to variability the paper deepens understanding of this highly relevant but relatively under-researched phenomenon and contributes to the literature on software product line engineering.
C1 [Ihme, Tuomas; Pikkarainen, Minna; Teppola, Susanna; Kaariainen, Jukka] VTT Tech Res Ctr Finland, Oulu 90571, Finland.
   [Biot, Olivier] Sirris, Collect Ctr Belgian Technol Ind, B-1030 Brussels, Belgium.
C3 VTT Technical Research Center Finland
RP Pikkarainen, M (corresponding author), VTT Tech Res Ctr Finland, POB 1100, Oulu 90571, Finland.
EM tuomas.ihme@vtt.fi; minna.pikkarainen@vtt.fi; susanna.teppola@vtt.fi;
   jukka.kaariainen@vtt.fi; olivier.biot@sirris.be
OI Kaariainen, Jukka/0000-0001-5611-1509
FU ARTEMIS [295397]; Tekes (the Finnish Funding Agency for Technology and
   Innovation); IWT
FX The research leading to these results has received funding from the
   ARTEMIS Joint Undertaking under grant agreement no 295397 and from Tekes
   (the Finnish Funding Agency for Technology and Innovation) and IWT.
CR [Anonymous], APPL SOFTWARE PRODUC
   Asikainen T, 2007, ADV ENG INFORM, V21, P23, DOI 10.1016/j.aei.2006.11.007
   Babar MA, 2010, IEEE SOFTWARE, V27, P89, DOI 10.1109/MS.2010.77
   Bachmann Felix., 2005, Variability in Software Product Lines
   Bosch J, 2002, LECT NOTES COMPUT SC, V2290, P13
   Bosch J, 2006, COMMUN ACM, V49, P41, DOI 10.1145/1183236.1183263
   Chen L, 2010, P SPLC 10 P 14 INT C
   Chen LP, 2011, INFORM SOFTWARE TECH, V53, P344, DOI 10.1016/j.infsof.2010.12.006
   Eisenhardt KM, 2007, ACAD MANAGE J, V50, P25, DOI 10.5465/AMJ.2007.24160888
   EISENHARDT KM, 1989, ACAD MANAGE REV, V14, P532, DOI 10.2307/258557
   Fillis I., 2001, Management Decision, V39, P767, DOI 10.1108/
   Galster M, 2011, 2011 9TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P171, DOI 10.1109/WICSA.2011.30
   Groves L., 2000, Proceedings 2000 Australian Software Engineering Conference, P189, DOI 10.1109/ASWEC.2000.844576
   Hallsteinsen S, 2008, COMPUTER, V41, P93, DOI 10.1109/MC.2008.123
   Halmans Gunter., 2003, SOFTWARE SYSTEM MODE, V2, P15
   Info-Tech, 2004, STRAT IT PLANN GOV
   Kamsties E., 1998, Requirements Engineering, V3, P84, DOI 10.1007/BF02919967
   Karlström D, 2006, EMPIR SOFTW ENG, V11, P203, DOI 10.1007/s10664-006-6402-8
   Kim KS, 2008, EXPERT SYST APPL, V34, P128, DOI 10.1016/j.eswa.2006.08.009
   Kratochvil Milan., 2005, GROWING MODULAR MASS
   Krueger C, 2002, IEEE SOFTWARE, V19, P29, DOI 10.1109/MS.2002.1020284
   Krueger C. W., 2002, Software Product Lines. Second International Conference, SPLC 2. Proceedings (Lecture Notes in Computer Science Vol. 2370), P37
   Laporte CY, 2008, COMM COM INF SC, V16, P129
   Lee J, 2012, COMPUTER, V45, P49, DOI 10.1109/MC.2012.284
   Manolova TatianaS., 2002, International Small Business Journal, V20, P9
   Metha A, 2002, ICSE, P417
   Mohagheghi P, 2007, EMPIR SOFTW ENG, V12, P471, DOI 10.1007/s10664-007-9040-x
   Mtigwe B, 2005, INT J ENTREP BEHAV R, V11, P358, DOI 10.1108/13552550510615006
   Nikula U, 2000, 1 LAPP U TECHN TEL B
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Northrop L, 2010, MAXIMIZING INVESTMEN
   Patton M. Q., 2002, QUALITATIVE RES EVAL
   Pohl K., 2005, PRINCIPLES TECHNIQUE
   Rech J, 2007, IEEE SOFTWARE, V24, P99, DOI 10.1109/MS.2007.183
   Reinhartz-Berger I, 2009, INFORM SOFTWARE TECH, V51, P1275, DOI 10.1016/j.infsof.2009.03.005
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Stallinger F, 2011, P PLEASE 11 MAY 22 2, P20
   Svahnberg M, 2005, SOFTWARE PRACT EXPER, V35, P705, DOI 10.1002/spe.652
   Thörn C, 2010, INFORM SOFTWARE TECH, V52, P411, DOI 10.1016/j.infsof.2009.10.009
   van der Linden F. J., 2007, Software Product Lines in Action: the Best Industrial Practice in Product Line Engineering
   van Gurp J, 2001, WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P45, DOI 10.1109/WICSA.2001.948406
   Verlage M, 2005, PROC INT CONF SOFTW, P534
   Yin R. K., 2017, CASE STUDY RES DESIG
NR 43
TC 6
Z9 7
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2014
VL 19
IS 4
BP 1144
EP 1168
DI 10.1007/s10664-013-9253-0
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AH8LE
UT WOS:000336388500011
DA 2024-07-18
ER

PT J
AU Heule, MJH
   Verwer, S
AF Heule, Marijn J. H.
   Verwer, Sicco
TI Software model synthesis using satisfiability solvers
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software model synthesis; Model inference; Automaton identification;
   Learning; Satisfiability; State machines
ID FINITE; INFERENCE
AB We introduce a novel approach for synthesis of software models based on identifying deterministic finite state automata. Our approach consists of three important contributions. First, we argue that in order to model software, one should focus mainly on observed executions (positive data), and use the randomly generated failures (negative data) only for testing consistency. We present a new greedy heuristic for this purpose, and show how to integrate it in the state-of-the-art evidence-driven state-merging (EDSM) algorithm. Second, we apply the enhanced EDSM algorithm to iteratively reduce the size of the problem. Yet during each iteration, the evidence is divided over states and hence the effectiveness of this algorithm is decreased. We propose-when EDSM becomes too weak-to tackle the reduced identification problem using satisfiability solvers. Third, in case the amount of positive data is small, we solve the identification problem several times by randomizing the greedy heuristic and combine the solutions using a voting scheme. The interaction between these contributions appeared crucial to solve hard software models synthesis benchmarks. Our implementation, called DFASAT, won the StaMinA competition.
C1 [Heule, Marijn J. H.] Johannes Kepler Univ Linz, A-4040 Linz, Austria.
   [Heule, Marijn J. H.] Delft Univ Technol, Delft, Netherlands.
   Radboud Univ Nijmegen, NL-6525 ED Nijmegen, Netherlands.
   [Verwer, Sicco] Katholieke Univ Leuven, Louvain, Belgium.
C3 Johannes Kepler University Linz; Delft University of Technology; Radboud
   University Nijmegen; KU Leuven
RP Verwer, S (corresponding author), Katholieke Univ Leuven, Louvain, Belgium.
EM marijn@heule.nl; s.verwer@cs.ru.nl
OI Heule, Marijn/0000-0002-5587-8801
FU Austrian Science Foundation (FWF) NFN [S11408-N23]; STW project [11763];
   Research Foundation - Flanders (FWO-Vlaanderen) [G.0682.11]
FX The first author is supported by the Austrian Science Foundation (FWF)
   NFN Grant S11408-N23 (RiSE). The second author is supported by STW
   project 11763 (ITALIA) and the Research Foundation - Flanders
   (FWO-Vlaanderen) project G.0682.11 (Declarative experimentation).
CR Aarts F, 2010, LECT NOTES COMPUT SC, V6269, P71, DOI 10.1007/978-3-642-15375-4_6
   Abela J, 2004, LECT NOTES COMPUT SC, V3264, P28
   Ammons G, 2002, ACM SIGPLAN NOTICES, V37, P4, DOI 10.1145/565816.503275
   [Anonymous], 2010, THESIS DELFT U TECHN
   [Anonymous], 2008, J. Satisf. Boolean Model. Comput., DOI 10.3233/sat190039
   [Anonymous], SYSTEMS LEARN
   [Anonymous], 1992, S MACH PERC
   Antunes J., 2011, 2011 18th Working Conference on Reverse Engineering, P169, DOI 10.1109/WCRE.2011.28
   Bertolino A, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P141, DOI 10.1145/1595696.1595719
   Biere A, 1999, LECT NOTES COMPUT SC, V1579, P193
   Biere A, 2009, FRONT ARTIF INTEL AP, V185, P457, DOI 10.3233/978-1-58603-929-5-457
   BIERMANN AW, 1972, IEEE T COMPUT, VC 21, P592, DOI 10.1109/TC.1972.5009015
   Broy M., 2005, Lecture Notes in Computer Science, V3472
   Bugalho M, 2005, PATTERN RECOGN, V38, P1457, DOI 10.1016/j.patcog.2004.03.027
   Castro J, 2008, LECT NOTES ARTIF INT, V5278, P163
   Clark A, 2004, J MACH LEARN RES, V5, P473
   Clarke Edmund M., 1997, P INT C FDN SOFTW TE, P54, DOI DOI 10.1007/BFB0058022
   Cook J. E., 1998, ACM Transactions on Software Engineering and Methodology, V7, P215, DOI 10.1145/287000.287001
   Coste F, 1997, WORKSH GRAMM INF AUT
   Cui W., 2007, P 16 USENIX SECURITY, V1, P14
   Dallmeier V., 2006, P 2006 INT WORKSH DY, P17, DOI DOI 10.1145/1138912.1138918
   de la Higuera C, 2004, THEOR COMPUT SCI, V313, P295, DOI 10.1016/j.tcs.2003.11.009
   De la Higuera Colin, 2010, GRAMMATICAL INFERENC
   Denis F, 2000, LECT NOTES ARTIF INT, V1891, P39
   Dietterich TG, 2000, LECT NOTES COMPUT SC, V1857, P1, DOI 10.1007/3-540-45014-9_1
   Dupont P, 2008, APPL ARTIF INTELL, V22, P77, DOI 10.1080/08839510701853200
   Endrullis J, 2008, J AUTOM REASONING, V40, P195, DOI 10.1007/s10817-007-9087-9
   Garey M.R., 1979, COMPUTERS INTRACTABI
   GOLD EM, 1978, INFORM CONTROL, V37, P302, DOI 10.1016/S0019-9958(78)90562-4
   Grinchtein O, 2006, LECT NOTES ARTIF INT, V4130, P483
   Grinchtein O, 2006, LECT NOTES COMPUT SC, V4137, P435
   Heule MJH, 2010, LECT NOTES ARTIF INT, V6339, P66, DOI 10.1007/978-3-642-15488-1_7
   Jarvisalo M, 2010, LECT NOTES COMPUT SC, V6015, P129, DOI 10.1007/978-3-642-12002-2_10
   Juille H, 1998, FIFTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-98) AND TENTH CONFERENCE ON INNOVATIVE APPLICATIONS OF ARTIFICAL INTELLIGENCE (IAAI-98) - PROCEEDINGS, P776
   Kearns M. J., 1994, An Introduction to Computational Learning Theory
   Kullmann O, 1999, DISCRETE APPL MATH, V97, P149, DOI 10.1016/S0166-218X(99)00037-2
   Lang K. J., 1998, LNCS, V1433
   Lang KevinJ., 1999, Faster Algorithms for Finding Minimal Consistent DFAs
   Mariani L, 2011, IEEE T SOFTWARE ENG, V37, P486, DOI 10.1109/TSE.2010.93
   Marques-Silva J.P., 1999, P DATE 99, P33, DOI DOI 10.1145/307418.307477
   Oliveira A.L., 1998, EFFICIENT SEARCH TEC, P81
   Pitt L., 1989, ANN ACM S THEOR COMP, P421
   Raffelt Harald, 2009, International Journal on Software Tools for Technology Transfer, V11, P393, DOI 10.1007/s10009-009-0111-8
   Sakallah KA, 2009, FRONT ARTIF INTEL AP, V185, P289, DOI 10.3233/978-1-58603-929-5-289
   Sudkamp Thomas., 2006, Languages and Machines: An Introduction to the Theory of Computer Science, VThird
   van der Aalst WMP, 2011, PROCESS MINING: DISCOVERY, CONFORMANCE AND ENHANCEMENT OF BUSINESS PROCESSES, P1, DOI 10.1007/978-3-642-19345-3
   Walkinshaw N., 2010, P 1 INT WORKSH MOD I, P1
   Walkinshaw N, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P209, DOI 10.1109/WCRE.2007.45
   Walsh T., 2000, Principles and Practice of Constraint Programming - CP 2000. 6th International Conference, CP 2000. Proceedings (Lecture Notes in Computer Science Vol.1894), P441
   Yokomori T., 1993, MACH INTELL, P196
NR 50
TC 38
Z9 39
U1 1
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2013
VL 18
IS 4
BP 825
EP 856
DI 10.1007/s10664-012-9222-z
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 174AX
UT WOS:000321126100006
DA 2024-07-18
ER

PT J
AU Ivarsson, M
   Gorschek, T
AF Ivarsson, Martin
   Gorschek, Tony
TI A method for evaluating rigor and industrial relevance of technology
   evaluations
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Systematic review; Requirements engineering; Technology evaluation
ID EMPIRICAL-RESEARCH; REQUIREMENTS; VALIDATION; SYSTEMS; MODELS
AB One of the main goals of an applied research field such as software engineering is the transfer and widespread use of research results in industry. To impact industry, researchers developing technologies in academia need to provide tangible evidence of the advantages of using them. This can be done trough step-wise validation, enabling researchers to gradually test and evaluate technologies to finally try them in real settings with real users and applications. The evidence obtained, together with detailed information on how the validation was conducted, offers rich decision support material for industry practitioners seeking to adopt new technologies and researchers looking for an empirical basis on which to build new or refined technologies. This paper presents model for evaluating the rigor and industrial relevance of technology evaluations in software engineering. The model is applied and validated in a comprehensive systematic literature review of evaluations of requirements engineering technologies published in software engineering journals. The aim is to show the applicability of the model and to characterize how evaluations are carried out and reported to evaluate the state-of-research. The review shows that the model can be applied to characterize evaluations in requirements engineering. The findings from applying the model also show that the majority of technology evaluations in requirements engineering lack both industrial relevance and rigor. In addition, the research field does not show any improvements in terms of industrial relevance over time.
C1 [Ivarsson, Martin] Chalmers Univ Technol, Dept Comp Sci & Engn, SE-41296 Gothenburg, Sweden.
   [Gorschek, Tony] Blekinge Inst Technol, Sch Engn, SE-37225 Ronneby, Sweden.
C3 Chalmers University of Technology; Blekinge Institute Technology
RP Ivarsson, M (corresponding author), Chalmers Univ Technol, Dept Comp Sci & Engn, SE-41296 Gothenburg, Sweden.
EM martin.ivarsson@chalmers.se; tony.gorschek@bth.se
RI Gorschek, Tony/E-3445-2013
CR Afzal W., 2008, 20 INT C SOFTW ENG K
   Afzal W, 2009, INFORM SOFTWARE TECH, V51, P957, DOI 10.1016/j.infsof.2008.12.005
   Anda B, 2006, EMPIR SOFTW ENG, V11, P555, DOI 10.1007/s10664-006-9020-6
   [Anonymous], 1 INT S EMP SOFTW EN
   [Anonymous], CULTURE CONFLICTS SO
   [Anonymous], 8 INT C SOFTW ENG LO
   [Anonymous], 2007, P 1 INT S EMP SOFTW, DOI DOI 10.1109/ESEM.2007.59
   [Anonymous], P 3 INT S EMP SOFTW
   [Anonymous], INT C SOFTW ENG ICSE
   [Anonymous], EXPT SOFTWARE ENG
   [Anonymous], 2002, EMPIRICAL SOFTW ENG
   [Anonymous], 22 C SOFTW ENG ED TR
   [Anonymous], ACM SIGSOFT SOFTWARE
   [Anonymous], EMPIR SOFTW ENG
   [Anonymous], ACM SIGSOFT SOFTWARE
   [Anonymous], PRACT ASSESS RES EVA
   [Anonymous], 2008, PROC 12 INT C EVAL A
   [Anonymous], P 28 INT C SOFTW ENG
   [Anonymous], 18 INT S EMP SOFTW E
   [Anonymous], REQUIR ENG
   Arisholm E, 2004, IEEE T SOFTWARE ENG, V30, P521, DOI 10.1109/TSE.2004.43
   Arisholm E, 2007, IEEE T SOFTWARE ENG, V33, P65, DOI 10.1109/TSE.2007.17
   Arthur JD, 2005, REQUIR ENG, V10, P45, DOI 10.1007/s00766-004-0196-2
   Aurum A, 2006, INT J SOFTW ENG KNOW, V16, P795, DOI 10.1142/S0218194006003002
   BASILI VR, 1986, IEEE T SOFTWARE ENG, V12, P733, DOI 10.1109/TSE.1986.6312975
   Beecham S, 2005, J SYST SOFTWARE, V76, P251, DOI 10.1016/j.jss.2004.06.004
   Benbasat I, 1999, MIS QUART, V23, P3, DOI 10.2307/249403
   Berling T., 2003, IEE Proceedings-Software, V150, P177, DOI 10.1049/ip-sen:20030483
   Carlshamre P., 2002, Requirements Engineering, V7, P139, DOI 10.1007/s007660200010
   Dybå T, 2006, INFORM SOFTWARE TECH, V48, P745, DOI 10.1016/j.infsof.2005.08.009
   DZIDA W, 1978, IEEE T SOFTWARE ENG, V4, P270, DOI 10.1109/TSE.1978.231511
   Glass RL, 2002, INFORM SOFTWARE TECH, V44, P491, DOI 10.1016/S0950-5849(02)00049-6
   Glass RL, 1997, J SYST SOFTWARE, V36, P85, DOI 10.1016/0164-1212(95)00197-2
   GLASS RL, 1994, IEEE SOFTWARE, V11, P42, DOI 10.1109/52.329400
   Gorschek T, 2008, INFORM SOFTWARE TECH, V50, P67, DOI 10.1016/j.infsof.2007.10.003
   Gorschek T, 2007, REQUIR ENG, V12, P163, DOI 10.1007/s00766-007-0047-z
   Gorschek T, 2006, IEEE SOFTWARE, V23, P88, DOI 10.1109/MS.2006.147
   Hall T., 2002, IEE Proceedings-Software, V149, P153, DOI 10.1049/ip-sen:20020694
   Hannay JE, 2007, IEEE T SOFTWARE ENG, V33, P87, DOI 10.1109/TSE.2007.12
   Hirsch JE, 2005, P NATL ACAD SCI USA, V102, P16569, DOI 10.1073/pnas.0507655102
   Höfer A, 2007, LECT NOTES COMPUT SC, V4336, P10
   HSIA P, 1993, IEEE SOFTWARE, V10, P75, DOI 10.1109/52.241974
   IEEE, 1990, IEEE Std 610.1990, P12
   Ivarsson M, 2009, REQUIR ENG, V14, P155, DOI 10.1007/s00766-009-0080-1
   Jiang L, 2008, REQUIR ENG, V13, P117, DOI 10.1007/s00766-007-0060-2
   Juriste N, 2002, IEEE SOFTWARE, V19, P70, DOI 10.1109/MS.2002.1049395
   Kaindia H., 2002, Requirements Engineering, V7, P113, DOI 10.1007/s007660200008
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Karlsson L, 2006, INT J SOFTW ENG KNOW, V16, P885, DOI 10.1142/S0218194006003014
   Keen P., 1991, INFORM SYST RES, P27
   Khurum M, 2009, J SYST SOFTWARE, V82, P1982, DOI 10.1016/j.jss.2009.06.048
   Kitchenham B., 2007, 23 EBSE, DOI DOI 10.1145/1134285.1134500
   Kitchenham B, 2001, ACM SIGSOFT Software Engineering Notes, V26
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Lau F., 1999, Information Technology & People, V12, P148, DOI 10.1108/09593849910267206
   Lauesen S., 2001, Requirements Engineering, V6, P37, DOI 10.1007/PL00010355
   Maiden NAM, 2005, REQUIR ENG, V10, P276, DOI 10.1007/s00766-005-0010-9
   Meyer B, 2009, COMMUN ACM, V52, P31, DOI 10.1145/1498765.1498780
   Mich L, 2005, REQUIR ENG, V10, P262, DOI 10.1007/s00766-005-0008-3
   Neill CJ, 2003, IEEE SOFTWARE, V20, P40, DOI 10.1109/MS.2003.1241365
   Parnas DL, 2007, COMMUN ACM, V50, P19, DOI 10.1145/1297797.1297815
   Pfleeger SL, 1999, J SYST SOFTWARE, V47, P111, DOI 10.1016/S0164-1212(99)00031-X
   Pfleeger SL, 2000, IEEE SOFTWARE, V17, P27, DOI 10.1109/52.819965
   POTTS C, 1993, IEEE SOFTWARE, V10, P19, DOI 10.1109/52.232392
   Regnell B., 2001, Requirements Engineering, V6, P51, DOI 10.1007/s007660170015
   Robson C., 2002, Real world research
   ROSS DT, 1977, IEEE T SOFTWARE ENG, V3, P6, DOI 10.1109/TSE.1977.229899
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sjoberg DagI. K., 2007, Future of Software Engineering 2007
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Smite D, 2010, EMPIR SOFTW ENG, V15, P91, DOI 10.1007/s10664-009-9123-y
   TICHY WF, 1995, J SYST SOFTWARE, V28, P9, DOI 10.1016/0164-1212(94)00111-Y
   Wieringa RJ, 2006, REQUIR ENG, V11, P295, DOI 10.1007/s00766-006-0037-6
   Wohlin C, 2009, SCIENTOMETRICS, V81, P521, DOI 10.1007/s11192-008-2155-z
   Wohlin C, 2009, INFORM SOFTWARE TECH, V51, P2, DOI 10.1016/j.infsof.2008.09.012
   Wong WE, 2009, J SYST SOFTWARE, V82, P1370, DOI 10.1016/j.jss.2009.06.018
   Yin R.K., 2009, CASE STUDIES DESIGN, V4th
   Zelkowitz MV, 2009, J SYST SOFTWARE, V82, P373, DOI 10.1016/j.jss.2008.06.040
   Zelkowitz MV, 1997, INFORM SOFTWARE TECH, V39, P735, DOI 10.1016/S0950-5849(97)00025-6
NR 79
TC 182
Z9 191
U1 2
U2 24
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2011
VL 16
IS 3
BP 365
EP 395
DI 10.1007/s10664-010-9146-4
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 746NS
UT WOS:000289254600003
DA 2024-07-18
ER

PT J
AU Lee, J
   Kang, S
   Kim, CK
AF Lee, Jihyun
   Kang, Sungwon
   Kim, Chang-Ki
TI Software architecture evaluation methods based on cost benefit analysis
   and quantitative decision making
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software architecture evaluation; CBAM; AHP; ANP
AB Since many parts of the architecture evaluation steps of the Cost Benefit Analysis Method (CBAM) depend on the stakeholders' empirical knowledge and intuition, it is very important that such an architecture evaluation method be able to faithfully reflect the knowledge of the experts in determining Architectural Strategy (AS). However, because CBAM requires the stakeholders to make a consensus or vote for collecting data for decision making, it is difficult to accurately reflect the stakeholders' knowledge in the process. In order to overcome this limitation of CBAM, we propose the two new CBAM-based methods for software architecture evaluation, which respectively adopt the Analytic Hierarchy Process (AHP) and the Analytic Network Process (ANP). Since AHP and ANP use pair-wise comparison they are suitable for a cost and benefit analysis technique since its purpose is not to calculate correct values of benefit and cost but to decide AS with highest return on investment. For that, we first define a generic process of CBAM and develop variations from the generic process by applying AHP and ANP to obtain what we call the CBAM+AHP and CBAM+ANP methods. These new methods not only reflect the knowledge of experts more accurately but also reduce misjudgments. A case study comparison of CBAM and the two new methods is conducted using an industry software project. Because the cost benefit analysis process that we present is generic, new cost benefit analysis techniques with capabilities and characteristics different from the three methods we examine here can be derived by adopting various different constituent techniques.
C1 [Lee, Jihyun; Kang, Sungwon] Informat & Commun Univ, Software Technol Inst, Seoul, South Korea.
   [Kim, Chang-Ki] ETRI, Taejon, South Korea.
C3 Electronics & Telecommunications Research Institute - Korea (ETRI)
RP Lee, J (corresponding author), Informat & Commun Univ, Software Technol Inst, Seoul, South Korea.
EM puduli@icu.ac.kr; kangsw@icu.ac.kr; ckkim1@etri.re.kr
RI Kang, Sungwon/C-1765-2011; Kim, Han/AAA-5787-2021
CR Al-Naeem T, 2005, PROC INT CONF SOFTW, P244
   Bratthall L, 2002, IEEE T SOFTWARE ENG, V28, P1181, DOI 10.1109/TSE.2002.1158290
   CLEMENTS P., 2002, EVALUATING SOFTWARE
   *EXPERTCHOICE, 2007, EXP CHOIC 11 5
   KAZMAN R, 2004, P INT C SOFTW ENG RE
   Kazman Rick., 2002, Making Architecture Design Decisions: An Economic Approach
   KIM CK, 2007, ACIS INT C SOFTW ENG, V2, P646
   Lee Jihyun, 2006, [The KIPS Transactions : Part D, 정보처리학회논문지D], V13, P683
   Liu B, 2007, SIXTH INTERNATIONAL CONFERENCE ON GRID AND COOPERATIVE COMPUTING, PROCEEDINGS, P685, DOI 10.1109/GCC.2007.20
   Nord R., 2003, Integrating the architecture tradeoff analaysis method (ATAM) with the cost benefit analysis method (CBAM), V1st
   Raisinghani MS, 2007, IEEE T ENG MANAGE, V54, P673, DOI 10.1109/TEM.2007.906857
   Saaty T.L., 1999, Decision-Making for Leaders: The Analytic Hierarchy Process for Decisions in a Complex World
   Saaty T.L., 1980, ANAL HIERARCHICAL PR
   Saaty T.L., 1994, DECISION MAKING EC P
   Saaty T.L., 2005, THEORY APPL ANALYTIC
   Saaty T.L., 1982, The Logic of Priorities
   SAATY TL, 1990, AHP SERIES
   *SUPERDECISION, 2007, CREAT DEC FDN
   Svahnberg M, 2004, INFORM SOFTWARE TECH, V46, P805, DOI 10.1016/j.infsof.2004.02.001
   Svahnberg M, 2003, INT J SOFTW ENG KNOW, V13, P547, DOI 10.1142/S0218194003001421
   WALLIN P, 2007, P INT WORKSH SOFTW E
   Yi JN, 2005, Proceedings of 2005 International Conference on Machine Learning and Cybernetics, Vols 1-9, P27
   Zhu LM, 2005, SOFTWARE QUAL J, V13, P357, DOI 10.1007/s11219-005-4251-0
NR 23
TC 15
Z9 16
U1 3
U2 18
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2009
VL 14
IS 4
BP 453
EP 475
DI 10.1007/s10664-008-9094-4
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 461TM
UT WOS:000267294400004
DA 2024-07-18
ER

PT J
AU Damian, D
   Chisan, J
   Vaidyanathasamy, L
   Pal, Y
AF Damian, D
   Chisan, J
   Vaidyanathasamy, L
   Pal, Y
TI Requirements engineering and downstream software development: Findings
   from a case study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE empirical studies of software process; industrial experience in process
   improvement; requirements management and practice; software productivity
ID PROCESS IMPROVEMENT
AB Requirements management is being recognized as one of the most important albeit difficult phases in software engineering. The literature repeatedly cites the role of well-defined requirements and requirements management process in problem analysis and project management as benefiting software development throughout the life cycle: during design, coding, testing, maintenance and documentation of software.
   This paper reports on the findings of an investigation into industrial practice of requirements management process improvement and its positive effects on downstream software development. The evidence reveals a strong relationship between a well-defined requirements process and increased developer productivity, improved project planning through better estimations and enhanced ability for stakeholders to negotiate project scope. These results are important since there is little empirical evidence of the actual benefits of sound requirements practice, in spite of the plethora of claims in the literature. An account of these effects not only adds to our understanding of good requirements practice but also provides strong motivation for software organizations to develop programs for improvement of their requirements processes.
C1 Univ Victoria, Dept Comp Sci, Victoria, BC V8W 3P6, Canada.
   Unisys Australia Ltd, Rhodes, NSW 2138, Australia.
C3 University of Victoria
RP Univ Victoria, Dept Comp Sci, POB 3055, Victoria, BC V8W 3P6, Canada.
EM DanielaD@uvic.ca; Chisan@uvic.ca; Lnv.Samy@unisys.com;
   Yogendra.Pal@unisys.com
CR Boehm B.W., 1988, IEEE COMPUTER, V21, P61
   BROADMAN J, 1996, CROSSTALK, V9, P23
   BROOKS FP, 1987, COMPUTER, V20, P10, DOI 10.1109/MC.1987.1663532
   *CMM, 1991, CMUSEI91TR24
   CURTIS B, 1988, COMMUN ACM, V31, P1268, DOI 10.1145/50087.50089
   Damian D, 2004, EMPIR SOFTW ENG, V9, P45, DOI 10.1023/B:EMSE.0000013514.19567.ad
   El Emam K, 2000, IEEE T SOFTWARE ENG, V26, P541, DOI 10.1109/32.852742
   ELMAM K, 1998, SPICE THEROY PRACTIC
   Hall T., 2002, IEE Proceedings-Software, V149, P153, DOI 10.1049/ip-sen:20020694
   HALLIGAN R, 2000, TAAS SE TRAINING COU
   Herbsleb JD, 1996, PROC INT CONF SOFTW, P323, DOI 10.1109/ICSE.1996.493427
   HUMPHREY WS, 1991, IEEE SOFTWARE, V8, P11, DOI 10.1109/52.300031
   *INT ORG STAND, 1987, QUAL STAND QUAL MAN
   Lauesen S., 2001, Requirements Engineering, V6, P37, DOI 10.1007/PL00010355
   Mayo E., 1933, The human problems of an industrial civilization
   PAULK M, 1994, TRCMUSEI94TR12
   PAULK MC, 1993, IEEE SOFTWARE, V10, P18, DOI 10.1109/52.219617
   Robertson S, 2012, Mastering the requirements process: getting requirements right
   *SEI, 1995, SOFTW ENG I CAP MAT
   Sommerville, 1997, REQUIREMENTS ENG GOO
   SOMMERVILLE, 1996, SOFTWARE ENG
   *STAND GROUP, 1997, CHAOS
   WOHLWEND H, 1993, PROC INT CONF SOFTW, P212, DOI 10.1109/ICSE.1993.346042
NR 23
TC 27
Z9 33
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2005
VL 10
IS 3
BP 255
EP 283
DI 10.1007/s10664-005-1288-4
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 936ZU
UT WOS:000229895100001
DA 2024-07-18
ER

PT J
AU Sharp, H
   Woodman, M
   Hovenden, F
AF Sharp, H
   Woodman, M
   Hovenden, F
TI Using metaphor to analyse qualitative data: Vulcans and humans in
   software development
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE qualitative methods; metaphor; software process improvement; software
   quality management systems
AB This paper reports on an experience of using metaphor in qualitative research of software engineering in practice. Our project aimed to uncover non-technical factors affecting the adoption and evolution of Software Quality Management Systems (referred to here as 'the quality process'). Previously we have reported the tensions we uncovered around the quality process in four companies, based on semi-structured interviews. This paper extends this work by applying metaphor to the results. We show how we were able to produce more general statements regarding the tensions and their amelioration, and then introduce results from a fifth company, which we compare against our general statements. We find that these statements are generally supported by results from this fifth company. Finally we present some reflections on our experience of using metaphor in this way.
C1 Open Univ, Dept Comp, Milton Keynes MK7 6AA, Bucks, England.
   Middlesex Univ, Sch Comp Sci, London N14 4YZ, England.
   Pandoras Lab, San Francisco, CA USA.
C3 Open University - UK; Middlesex University
RP Sharp, H (corresponding author), Open Univ, Dept Comp, Walton Hall, Milton Keynes MK7 6AA, Bucks, England.
EM h.c.sharp@open.ac.uk
OI Sharp, Helen/0000-0003-4376-1734
CR ALEXANDER CE, 2002, ETHNOGRAPHIC RES REA
   [Anonymous], 1987, Peopleware: Productive Projects and Teams
   [Anonymous], QUALITATIVE REPORT
   Baddoo N., 2002, Empirical Software Engineering, V7, P93, DOI 10.1023/A:1015203013834
   Baddoo N, 2002, J SYST SOFTWARE, V62, P85, DOI 10.1016/S0164-1212(01)00125-X
   BECK BEF, 1978, CURR ANTHROPOL, V19, P83, DOI 10.1086/202006
   Black M., 1979, Metaphor and Thought, chapter More about Metaphor, P19
   Black SA, 1996, DECISION SCI, V27, P1, DOI 10.1111/j.1540-5915.1996.tb00841.x
   BLACWELL AF, 1998, METAPHOR DIAGRAMS
   Buono A.F. Bowditch., 1989, HUMAN SIDE MERGERS A
   Crosby P. B., 1979, QUALITY IS FREE ART
   CURTIS B, 1988, COMMUN ACM, V31, P1268, DOI 10.1145/50087.50089
   CURTIS B, 2002, PEOPLE CMM GUIDELINE
   Deal T., 1988, Corporate Cultures: The Rites and Rituals of Corporate Life
   Deming WE, 1982, Out of the crisis
   Dyba T., 2000, Empirical Software Engineering, V5, P357, DOI 10.1023/A:1009800404137
   El Emam Khaled, 1997, SPICE THEORY PRACTIC
   Erickson ThomasD., 1990, The Art of Human-Computer Interface Design, P65
   GENTNER D, 1983, COGNITIVE SCI, V7, P155, DOI 10.1207/s15516709cog0702_3
   Gentner D., 1982, METAPHOR, P106
   HALL PAV, 1993, SOFTWARE QUALITY MAN, P225
   Hesse M.B., 1966, MODELS ANALOGIES SCI
   HIRSCHHEIM R, 2001, INFORMATION SYSTEMS, V2, P29
   HOVENDEN FM, 1994, SOFTWARE QUALITY MAN, V2, P557
   Juran J.M., 1988, QUALITY CONTROL HDB, V4th, p26.1
   Lakoff George, 1980, METAPHORS WE LIVE BY
   Martin-Soskice J., 1982, METAPHOR, P89
   Oakland J.S., 1994, Total Quality Management: The Route to Improving Performance, V2nd
   PAULK MC, 1997, SOFTWARE ENG
   PESOT J, 1975, CAN J RES, V3, P5
   PIMM D, 1981, LEARNING MATH, V1, P4
   Preece J., 2015, Interaction Design: Beyond Human Computer Interaction, V4th
   SARAPH JV, 1989, DECISION SCI, V20, P810, DOI 10.1111/j.1540-5915.1989.tb01421.x
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Seaman CB, 1998, IEEE T SOFTWARE ENG, V24, P559, DOI 10.1109/32.708569
   Sharp H, 2004, INT J HUM-COMPUT ST, V61, P219, DOI 10.1016/j.ijhcs.2003.12.011
   SHARP H, 2003, P PPIG EASE 2003, P297
   SHARP HC, 1999, EUROMICRO 99 MIL IT, P170
   Solow Herbert F., 1996, Inside Star Trek: The Real Story
   Williams A., 1993, Changing culture: New organizational approaches, V2nd
   WU J, 2003, STUDY COLLABORATION, P304
   1994, ISO8402
   1987, BS5750
   2000, ISO9000
NR 44
TC 6
Z9 6
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2005
VL 10
IS 3
BP 343
EP 365
DI 10.1007/s10664-005-1451-y
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 936ZU
UT WOS:000229895100004
DA 2024-07-18
ER

PT J
AU Svahnberg, M
   Wohlin, C
AF Svahnberg, M
   Wohlin, C
TI An investigation of a method for identifying a software architecture
   candidate with respect to quality attributes
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE software architectures; quality attributes; analytic hierarchy process
AB To sustain the qualities of a software system during evolution, and to adapt the quality attributes as the requirements evolve, it is necessary to have a clear software architecture that is understood by all developers and to which all changes to the system adheres. This software architecture can be created beforehand, but must also be updated to reflect changes in the domain, and hence the requirements of the software. The choice of which software architecture to use is typically based on informal decisions. There exist, to the best of our knowledge, little factual knowledge of which quality attributes are supported or obstructed by different architecture approaches. In this paper we present ail empirical study of a method that enables quantification of the perceived support different software architectures give for different quality attributes. This in turn enables an informed decision of which architecture candidate best fit the mixture of quality attributes required by a system being designed.
C1 Blekinge Inst Technol, Dept Software Engn & Comp Sci, S-37225 Ronneby, Sweden.
C3 Blekinge Institute Technology
RP Blekinge Inst Technol, Dept Software Engn & Comp Sci, POB 520, S-37225 Ronneby, Sweden.
EM Mikael.Svahnberg@bth.se; Claes.Wohlin@bth.se
OI Wohlin, Claes/0000-0003-0460-5253
CR Anderson D.R., 2000, INTRO MANAGEMENT SCI
   [Anonymous], 1996, Pattern oriented software architecture: a system of patters
   [Anonymous], 91261 ISOIEC
   Bass Len, 2012, SEI S SOFTW
   Bengtsson P, 2002, THESIS BLEKINGE I TE
   Bosch J., 2000, Design and Use of Software Architectures: Adopting and Evolving a Product-Line Approach
   CLEMENTS P., 2002, EVALUATING SOFTWARE
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   HELMER O, 1959, MANAGE SCI, V6, P25, DOI 10.1287/mnsc.6.1.25
   Hofmeister C., 2000, APPL SOFTWARE ARCHIT
   JOHANSSON E, 2001, P HICSS34 MAUI HI JA
   Kachigan S.K., 1986, STAT ANAL INTERDISCI
   Karlsson J, 1998, INFORM SOFTWARE TECH, V39, P939, DOI 10.1016/S0950-5849(97)00053-0
   Lindvall M, 2003, EMPIR SOFTW ENG, V8, P83, DOI 10.1023/A:1021772917036
   Linkman S, 1997, INFORM SOFTWARE TECH, V39, P777, DOI 10.1016/S0950-5849(97)00029-3
   Lundberg L., 1999, Proceedings of the 3rd Annual IASTED International Conference Software Engineering and Applications (SEA'99), P353
   Morisio M., 2002, P 14 INT C SOFTW ENG, P811
   PARNAS DL, 1994, PROC INT CONF SOFTW, P279, DOI 10.1109/ICSE.1994.296790
   Perry D. E., 1992, SIGSOFT Software Engineering Notes, V17, P40, DOI 10.1145/141874.141884
   Saaty T.L., 1980, ANAL HIERARCHY PROCE
   Saaty TL., 2001, INT SERIES OPERATION
   Shaw M., 1996, SOFTWARE ARCHITECTUR
   Svahnberg M., 2002, Proceedings of the 14th international conference on Software engineering and knowledge engineering, P819
   WOHLIN C, 1996, P SOFTW PROC IMPR C, P167
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   [No title captured]
NR 26
TC 13
Z9 15
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2005
VL 10
IS 2
BP 149
EP 181
DI 10.1007/s10664-004-6190-y
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 918OT
UT WOS:000228558200002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Carver, J
AF Carver, J
TI The impact of background and experience on software inspections
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
C1 Univ Maryland, Dept Comp Sci, College Pk, MD 20742 USA.
C3 University System of Maryland; University of Maryland College Park
RP Univ Maryland, Dept Comp Sci, AV Williams Bldg, College Pk, MD 20742 USA.
EM carver@cs.umd.edu
CR Carver J, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P72, DOI 10.1109/ISESE.2003.1237966
   CARVER J, 2004, P 2004 ACM IEEE INT
   CARVER J, 2003, J BRAZILIAN COMP NOV
   CARVER J, 2003, P 2003 INT S SOFTW M
   Shull F, 2004, EMPIR SOFTW ENG, V9, P111, DOI 10.1023/B:EMSE.0000013516.80487.33
NR 5
TC 11
Z9 16
U1 0
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2004
VL 9
IS 3
BP 259
EP 262
DI 10.1023/B:EMSE.0000027786.04555.97
PG 4
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 836LM
UT WOS:000222557200005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Hanebutte, N
   Taylor, CS
   Dumke, RR
AF Hanebutte, N
   Taylor, CS
   Dumke, RR
TI Techniques of successful application of factor analysis in software
   measurement
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE software metrics; software measurement; factor analysis; software design
   prediction
ID METRICS
AB Metrics in a software sense can be roughly divided into two groups, internal metrics and external metrics. Internal metrics can be measured directly, while external metrics are predicted using internal metrics.
   Factor analysis is a statistical technique which can be applied to analyze the structure of internal metrics and form a prediction model for external metrics.
   A prediction model generated by using factor analysis needs further validation since factor analysis has a non-unique solution for the factor-loading matrix.
   The computational methodology to establish a model is presented as well as the validation process. This is illustrated by an empirical study of design metrics and a prediction model for design quality.
C1 Univ Idaho, Dept Comp Sci, Moscow, ID 83844 USA.
   Otto Von Guericke Univ, Sch Comp Sci, Software Engn Grp, D-39016 Magdeburg, Germany.
C3 Idaho; University of Idaho; Otto von Guericke University
RP Univ Idaho, Dept Comp Sci, Moscow, ID 83844 USA.
EM hane@cs.uidaho.edu; ctaylor@cs.uidaho.edu; dumke@ivs.cs.uni-magdeburg.de
CR CODY RP, 1995, SAS PROGRAMMING EXAM
   COUPAL D, 1990, J SYST SOFTWARE, V12, P263, DOI 10.1016/0164-1212(90)90048-Q
   Halstead M. H., 1977, ELEMENTS SOFTWARE SC
   HANEBUTTE N, 1999, THESIS O VONGUERICKE
   JOHNSON DE, 1998, APPL MULTIVARIANT ME
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   MUNSON JC, 1993, J SYST SOFTWARE, V20, P217, DOI 10.1016/0164-1212(93)90065-6
   MUNSON JC, 1990, IEEE J SEL AREA COMM, V2, P253
   MUNSON JC, 1993, IEEE SOFTWARE, V11, P48
   Pfleeger S.L., 1998, SOFTWARE ENG
   ZAGE WM, 1993, IEEE SOFTWARE, V10, P75, DOI 10.1109/52.219620
NR 11
TC 10
Z9 11
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2003
VL 8
IS 1
BP 43
EP 57
DI 10.1023/A:1021716832057
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 803OU
UT WOS:000220241200002
DA 2024-07-18
ER

PT J
AU Yu, L
   Alégroth, E
   Chatzipetrou, P
   Gorschek, T
AF Yu, Liang
   Alegroth, Emil
   Chatzipetrou, Panagiota
   Gorschek, Tony
TI Automated NFR testing in continuous integration environments: a
   multi-case study of Nordic companies
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Non-functional requirements; NFR; Continuous integration; CI; Automated
   testing; Metrics; Case study
ID CHALLENGES; CONTEXT
AB ContextNon-functional requirements (NFRs) (also referred to as system qualities) are essential for developing high-quality software. Notwithstanding its importance, NFR testing remains challenging, especially in terms of automation. Compared to manual verification, automated testing shows the potential to improve the efficiency and effectiveness of quality assurance, especially in the context of Continuous Integration (CI). However, studies on how companies manage automated NFR testing through CI are limited.ObjectiveThis study examines how automated NFR testing can be enabled and supported using CI environments in software development companies.MethodWe performed a multi-case study at four companies by conducting 22 semi-structured interviews with industrial practitioners.ResultsMaintainability, reliability, performance, security and scalability, were found to be evaluated with automated tests in CI environments. Testing practices, quality metrics, and challenges for measuring NFRs were reported.ConclusionsThis study presents an empirically derived model that shows how data produced by CI environments can be used for evaluation and monitoring of implemented NFR quality. Additionally, the manuscript presents explicit metrics, CI components, tools, and challenges that shall be considered while performing NFR testing in practice.
C1 [Yu, Liang; Alegroth, Emil; Gorschek, Tony] Blekinge Inst Technol, Karlskrona, Sweden.
   [Chatzipetrou, Panagiota] Orebro Univ, CERIS, Sch Business, Dept Informat, SE-70182 Orebro, Sweden.
   [Gorschek, Tony] Fortiss GmbH, D-80805 Munich, Germany.
C3 Blekinge Institute Technology; Orebro University; fortiss
RP Yu, L (corresponding author), Blekinge Inst Technol, Karlskrona, Sweden.
EM liang.yu@bth.se; emil.alegroth@bth.se; panagiota.chatzipetrou@oru.se;
   tony.gorschek@bth.se
OI Yu, Liang/0000-0001-5949-1375
FU KKS Foundation through the S.E.R.T. Research Profile Project; KKS PLEng
   2.0 at Blekinge Institute of Technology
FX We acknowledge support from the KKS Foundation through the S.E.R.T.
   Research Profile Project and the KKS PLEng 2.0 at Blekinge Institute of
   Technology.
CR Aljallabi BM, 2015, 2015 International Conference on Computing, Control, Networking, Electronics and Embedded Systems Engineering (ICCNEEE), P428, DOI 10.1109/ICCNEEE.2015.7381407
   Alsaqaf W, 2019, INFORM SOFTWARE TECH, V110, P39, DOI 10.1016/j.infsof.2019.01.009
   [Anonymous], 2016, ISO/IEC-25023
   Boehm B., 2005, Found Empirical Softw. Eng., Legacy Victor R Baxili, V426, P426
   Bougouffa S, 2017, IEEE INTL CONF IND I, P621, DOI 10.1109/INDIN.2017.8104843
   Cajander Å, 2013, LECT NOTES COMPUT SC, V8119, P762
   Cannizzo F, 2008, AGILE 2008, PROCEEDINGS, P501, DOI 10.1109/Agile.2008.31
   Chung L, 2009, LECT NOTES COMPUT SC, V5600, P363, DOI 10.1007/978-3-642-02463-4_19
   Colakoglu FN, 2021, IEEE ACCESS, V9, P44647, DOI 10.1109/ACCESS.2021.3054730
   CORBIN J, 1990, Z SOZIOL, V19, P418, DOI 10.1007/BF00988593
   Costa M, 2020, IEEE INT CONF SOFTW, P421, DOI 10.1109/ICST46399.2020.00053
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Dlugi M, 2015, P 1 INT WORKSH QUAL, P25
   Fitzgerald B, 2017, J SYST SOFTWARE, V123, P176, DOI 10.1016/j.jss.2015.06.063
   Garousi V, 2017, INFORM SOFTWARE TECH, V85, P16, DOI 10.1016/j.infsof.2017.01.001
   Ghaisas S, 2013, IEEE-ACM INT WKSP CO, P37, DOI 10.1109/CESI.2013.6618468
   Gorschek T, 2006, REQUIR ENG, V11, P79, DOI 10.1007/s00766-005-0020-7
   Gregor S, 2006, MIS QUART, V30, P611
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Janus Andre, 2012, 2012 3rd International Workshop on Emerging Trends in Software Metrics (WETSoM), P9, DOI 10.1109/WETSoM.2012.6226998
   Karhapää P, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09903-x
   Khurum M, 2014, J SOFTW-EVOL PROC, V26, P1074, DOI 10.1002/smr.1647
   Knauss E, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962639
   Lianping Chen, 2015, IEEE Software, V32, P50, DOI 10.1109/MS.2015.27
   López L, 2022, J SYST SOFTWARE, V186, DOI 10.1016/j.jss.2021.111187
   Mairiza D., 2010, P 2010 ACM S APPL CO, P311, DOI DOI 10.1145/1774088.1774153
   Miller A, 2008, AGILE 2008, PROCEEDINGS, P289, DOI 10.1109/Agile.2008.8
   Nouacer R, 2016, MICROPROCESS MICROSY, V47, P252, DOI 10.1016/j.micpro.2016.07.020
   Paixao KVR, 2017, IEEE WORK CONF MIN S, P479, DOI 10.1109/MSR.2017.33
   Petersen K, 2009, INT SYMP EMP SOFTWAR, P402
   Rathod N, 2015, PERVASIVE COMPUTING, P1
   Rehmann Kim-Thomas, 2016, ACM SIGMETRICS Performance Evaluation Review, V43, P43, DOI 10.1145/2897356.2897362
   Remlein P, 2021, Journal of telecommunications and information technology
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sas D, 2020, SOFTWARE QUAL J, V28, P505, DOI 10.1007/s11219-019-09478-x
   Shahin M, 2017, IEEE ACCESS, V5, P3909, DOI 10.1109/ACCESS.2017.2685629
   Staron M, 2011, J SOFTW MAINT EVOL-R, V23, P89, DOI 10.1002/smr.470
   Svensson RB, 2011, INT REQUIR ENG CONF, P69, DOI 10.1109/RE.2011.6051652
   Wagner Stefan., 2006, ISESE '06: Proceedings of the 2006 ACM/IEEE international symposium on Empirical software engineering, P194
   Wang YQ, 2022, J SYST SOFTWARE, V188, DOI 10.1016/j.jss.2022.111259
   Werner C, 2021, IEEE T SOFTWARE ENG, V48, P2629, DOI 10.1109/TSE.2021.3066330
   Werner C, 2020, INT REQUIR ENG CONF, P90, DOI 10.1109/RE48521.2020.00021
   Wieringa R, 2015, SCI COMPUT PROGRAM, V101, P136, DOI 10.1016/j.scico.2014.11.013
   Yu L, 2020, INFORM SOFTWARE TECH, V117, DOI 10.1016/j.infsof.2019.106199
NR 44
TC 0
Z9 0
U1 2
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2023
VL 28
IS 6
AR 144
DI 10.1007/s10664-023-10356-1
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA U9KT1
UT WOS:001087927600001
OA hybrid
DA 2024-07-18
ER

PT J
AU Song, HJ
   Wu, GB
   Ma, L
   Pan, YF
   Huang, QG
   Jiang, SY
AF Song, Hengjie
   Wu, Guobin
   Ma, Le
   Pan, Yufei
   Huang, Qingan
   Jiang, Siyu
TI Adversarial domain adaptation for cross-project defect prediction
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Adversarial learning; Cross-project defect prediction; Domain
   adaptation; Software reliability
ID FEATURE-SELECTION; MACHINE; MODEL
AB Cross-Project Defect Prediction (CPDP) is an attractive topic for locating defects in projects with little labeled data (target projects) by using the prediction model from other projects with sufficient data (source projects). However, previous models may not fully capture the semantic features of programs because of inappropriate feature extraction models. Besides, researchers may fail to consider the relationship between the decision boundary and target project data when matching two feature distributions by adopting transfer learning methods, which would lead to the misclassification of target samples that are near boundary. To handle these drawbacks, we propose a novel Adversarial Domain Adaptation (ADA) model for CPDP. Specifically, we leverage a Long Short-Term Memory network with attention mechanism to extract semantic features that better represent programs. Then, we train two classifiers to correctly categorize source samples and distinguish ambiguous target instances that influence prediction accuracy. Next, we treat the classifiers as a discriminator and feature extraction model as a generator, and train them based on adversarial learning methods to depict the desired relationship. As the classifiers know this relationship, they should attain better performance. Extensive experiments on two benchmark datasets are conducted to verify the effectiveness of the proposed ADA methods. Experimental and statistical results show that ADA significantly outperforms other state-of-the-art baseline methods.
C1 [Song, Hengjie; Wu, Guobin; Pan, Yufei; Huang, Qingan] South China Univ Technol, Sch Software Engn, Guangzhou, Peoples R China.
   [Ma, Le] Guangzhou City Univ Technol, Guangzhou, Peoples R China.
   [Jiang, Siyu] Guangdong Univ Foreign Studies, Sch Informat Sci & Technol, Guangzhou Key Lab Multilingual Intelligent Proc, Guangzhou, Peoples R China.
C3 South China University of Technology; Guangdong University of Foreign
   Studies
RP Jiang, SY (corresponding author), Guangdong Univ Foreign Studies, Sch Informat Sci & Technol, Guangzhou Key Lab Multilingual Intelligent Proc, Guangzhou, Peoples R China.
EM sehjsong@scut.edu.cn; wugb2020@163.com; 80796487@qq.com;
   yufpan2021@163.com; huangqa1001@126.com; jiangsiyu@gdufs.edu.cn
RI Pan, Yu/JQO-5094-2023; Jiang, siyu/KJK-9483-2024
FU Science and Technology Planning Project of Guangzhou [202102020637]
FX This work was supported by the Science and Technology Planning Project
   of Guangzhou (Grant No. 202102020637).
CR Almeida Felipe, 2019, Word embeddings: A survey
   Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   [Anonymous], 2017, P 5 INT C LEARN REPR
   Bal PR, 2023, IEEE T SOFTWARE ENG, V49, P1232, DOI 10.1109/TSE.2022.3173678
   Bal PR, 2020, IEEE T RELIAB, V69, P1355, DOI 10.1109/TR.2020.2996261
   Balogun AO, 2021, ENTROPY-SWITZ, V23, DOI 10.3390/e23101274
   Bekkar M., 2013, J Inf Eng Appl, V3, P15, DOI DOI 10.5121/IJDKP.2013.3402
   Borgwardt KM, 2006, BIOINFORMATICS, V22, pE49, DOI 10.1093/bioinformatics/btl242
   Briand LC, 2002, IEEE T SOFTWARE ENG, V28, P706, DOI 10.1109/TSE.2002.1019484
   Casanova Arantxa, 2018, INT C LEARNING REPRE
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chen HW, 2021, IEEE T SOFTWARE ENG, V47, P2803, DOI 10.1109/TSE.2020.2968520
   Chen L, 2020, A survey of adversarial learning on graphs
   Chen L, 2015, INFORM SOFTWARE TECH, V62, P67, DOI 10.1016/j.infsof.2015.01.014
   Chen X, 2016, P 30 INT C NEUR INF, P4581, DOI DOI 10.5555/3157382.3157609
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Compton R, 2020, IEEE WORK CONF MIN S, P243, DOI 10.1145/3379597.3387445
   D'Ambros Marco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P31, DOI 10.1109/MSR.2010.5463279
   Dai Wenyuan, 2007, P 24 INT C MACHINE L, P193
   Deng JH, 2020, IET SOFTW, V14, P443, DOI 10.1049/iet-sen.2019.0149
   Gong LN, 2020, IEEE T RELIAB, V69, P40, DOI 10.1109/TR.2019.2895462
   Goodfellow I, 2020, COMMUN ACM, V63, P139, DOI 10.1145/3422622
   Halstead M. H., 1977, ELEMENTS SOFTWARE SC
   He HB, 2009, IEEE T KNOWL DATA EN, V21, P1263, DOI 10.1109/TKDE.2008.239
   He P, 2015, INFORM SOFTWARE TECH, V59, P170, DOI 10.1016/j.infsof.2014.11.006
   He ZM, 2012, AUTOMAT SOFTW ENG, V19, P167, DOI 10.1007/s10515-011-0090-3
   Herbold S., 2013, P 9 INT C PREDICTIVE, P1
   Herbold S, 2018, IEEE T SOFTWARE ENG, V44, P811, DOI 10.1109/TSE.2017.2724538
   Hochreiter S, 1997, NEURAL COMPUT, V9, P1735, DOI [10.1162/neco.1997.9.1.1, 10.1007/978-3-642-24797-2]
   Hosseini S, 2018, INFORM SOFTWARE TECH, V95, P296, DOI 10.1016/j.infsof.2017.06.004
   Hosseini S, 2019, IEEE T SOFTWARE ENG, V45, P111, DOI 10.1109/TSE.2017.2770124
   Huang QG, 2022, IET SOFTW, V16, P200, DOI 10.1049/sfw2.12053
   Jin C, 2021, EXPERT SYST APPL, V171, DOI 10.1016/j.eswa.2021.114637
   Jing XY, 2017, IEEE T SOFTWARE ENG, V43, P321, DOI 10.1109/TSE.2016.2597849
   Jing XY, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P414, DOI 10.1145/2568225.2568320
   Jing XY, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P496, DOI 10.1145/2786805.2786813
   Jingdong Huang, 2021, 2021 International Conference on Computer Engineering and Application (ICCEA), P338, DOI 10.1109/ICCEA53728.2021.00073
   Jureczko M, 2010, P 6 INT C PREDICTIVE, DOI DOI 10.1145/1868328.1868342
   Khatri Y, 2022, INNOV SYST SOFTW ENG, V18, P263, DOI 10.1007/s11334-020-00380-5
   Kingma D. P., 2014, arXiv
   Kubat M., 1997, ICML, P179
   LeCun Y, 2015, NATURE, V521, P436, DOI 10.1038/nature14539
   Li H, 2019, IEEE IJCNN
   Li J, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P318, DOI 10.1109/QRS.2017.42
   Li YS, 2019, PROC CVPR IEEE, P6929, DOI 10.1109/CVPR.2019.00710
   Li ZQ, 2019, AUTOMAT SOFTW ENG, V26, P599, DOI 10.1007/s10515-019-00259-1
   Li ZQ, 2019, IEEE T SOFTWARE ENG, V45, P391, DOI 10.1109/TSE.2017.2780222
   Li ZQ, 2018, IET SOFTW, V12, P161, DOI 10.1049/iet-sen.2017.0148
   Li ZQ, 2018, AUTOMAT SOFTW ENG, V25, P201, DOI 10.1007/s10515-017-0220-7
   Liang HL, 2019, IEEE ACCESS, V7, P83812, DOI 10.1109/ACCESS.2019.2925313
   Liu C, 2019, INFORM SOFTWARE TECH, V107, P125, DOI 10.1016/j.infsof.2018.11.005
   Ma XR, 2021, IEEE T GEOSCI REMOTE, V59, P4179, DOI 10.1109/TGRS.2020.3015357
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Nam J, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P508, DOI 10.1145/2786805.2786814
   Nam J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P382, DOI 10.1109/ICSE.2013.6606584
   Ni C, 2019, J SYST SOFTWARE, V152, P215, DOI 10.1016/j.jss.2019.03.012
   Özakinci R, 2018, J SYST SOFTWARE, V144, P216, DOI 10.1016/j.jss.2018.06.025
   Pan SJ, 2011, IEEE T NEURAL NETWOR, V22, P199, DOI 10.1109/TNN.2010.2091281
   Pan SJ, 2010, IEEE T KNOWL DATA EN, V22, P1345, DOI 10.1109/TKDE.2009.191
   Pandey SK, 2021, KNOWL-BASED SYST, V233, DOI 10.1016/j.knosys.2021.107541
   Paszke A, 2019, ADV NEUR IN, V32
   Qiu S., 2019, SEKE, P431
   Qiu SJ, 2019, IET SOFTW, V13, P393, DOI 10.1049/iet-sen.2018.5131
   Qiu SJ, 2019, INT J PATTERN RECOGN, V33, DOI 10.1142/S0218001419590377
   Qiu SJ, 2019, APPL SCI-BASEL, V9, DOI 10.3390/app9132660
   Rathore SS, 2021, APPL INTELL, V51, P3615, DOI 10.1007/s10489-020-01935-6
   Ryu D, 2017, SOFTWARE QUAL J, V25, P235, DOI 10.1007/s11219-015-9287-1
   Ryu D, 2016, EMPIR SOFTW ENG, V21, P43, DOI 10.1007/s10664-014-9346-4
   Saito K, 2018, PROC CVPR IEEE, P3723, DOI 10.1109/CVPR.2018.00392
   Shepperd M, 2014, IEEE T SOFTWARE ENG, V40, P603, DOI 10.1109/TSE.2014.2322358
   Song QB, 2019, IEEE T SOFTWARE ENG, V45, P1253, DOI 10.1109/TSE.2018.2836442
   Song SY, 2020, AAAI CONF ARTIF INTE, V34, P12023
   Su JC, 2020, IEEE WINT CONF APPL, P728, DOI [10.1109/wacv45572.2020.9093390, 10.1109/WACV45572.2020.9093390]
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Thota M. K., 2020, Int. J. ApplSci Eng., V17, P331, DOI [DOI 10.6703/IJASE.20201217(4).331, DOI 10.6703/IJASE.202012_17(4).331]
   Tong H, 2019, Transfer-learning oriented class imbalance learning for cross-project defect prediction
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Tzeng E, 2017, PROC CVPR IEEE, P2962, DOI 10.1109/CVPR.2017.316
   Vaswani A, 2017, ADV NEUR IN, V30
   Wang K, 2021, AAAI CONF ARTIF INTE, V35, P13970
   Wang S, 2020, IEEE T SOFTWARE ENG, V46, P1267, DOI 10.1109/TSE.2018.2877612
   Wang S, 2016, PROC INT CONF SOFTW, P297, DOI 10.1145/2884781.2884804
   Watanabe S., 2008, P 4 INT WORKSH PRED, P19
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Wu F, 2018, IEEE T RELIAB, V67, P581, DOI 10.1109/TR.2018.2804922
   Xu Z, 2019, J COMPUT SCI TECH-CH, V34, P1039, DOI 10.1007/s11390-019-1959-z
   Xu Z, 2018, IEEE ACCESS, V6, P57597, DOI 10.1109/ACCESS.2018.2873755
   Yi L, 2021, PROC CVPR IEEE, P15358, DOI 10.1109/CVPR46437.2021.01511
   Yu Q, 2017, J SYST SOFTWARE, V132, P366, DOI 10.1016/j.jss.2017.06.070
   Zeng JL, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P3216
   Zhu K, 2021, J SYST SOFTWARE, V180, DOI 10.1016/j.jss.2021.111026
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
   Zou QY, 2021, INFORM SOFTWARE TECH, V137, DOI 10.1016/j.infsof.2021.106588
NR 93
TC 2
Z9 2
U1 5
U2 7
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2023
VL 28
IS 5
AR 127
DI 10.1007/s10664-023-10371-2
PG 44
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA R9LQ0
UT WOS:001067498100001
DA 2024-07-18
ER

PT J
AU Sultana, S
   Turzo, AK
   Bosu, A
AF Sultana, Sayma
   Turzo, Asif Kamal
   Bosu, Amiangshu
TI Code reviews in open source projects : how do gender biases affect
   participation and outcomes?
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Code review; Diversity and inclusion; Pull requests; Gender bias
ID OPEN-SOURCE SOFTWARE; REGRESSION-MODELS; PREDICTION; DEVELOPERS; PATCHES
AB ContextContemporary software development organizations lack diversity, and the ratios of women in Free and Open-Source Software (FOSS) communities are even lower than the industry average. Although the results of recent studies hint at the existence of biases against women, it is unclear to what extent such biases influence the outcomes of various software development tasks.ObjectiveThis study conceptually replicates two recent studies by Terrell et al. and Bosu and Sultana that investigated gender biases in FOSS communities. We aim to identify whether the outcomes of or participation in code reviews (or pull requests) are influenced by the gender of a developer. In particular, we focus on two outcome aspects (i.e., code acceptance, and review interval) and one participation aspect (i.e., code review participation) of code review processes.MethodWith this goal, this study includes a total of 1010 FOSS projects. Ten out of those projects use Gerrit-based code reviews. The remaining 1000 are randomly selected from the GHTorrent dataset based on a stratified sampling of projects fitting certain criteria. We divided GitHub projects into four groups based on the number of distinct contributors. We developed six regression models for each of the 14 datasets (i.e., 10 Gerrit based and 4 GitHub-based) to identify if code acceptance, review intervals, and code review participation differ based on the gender and gender-neutral profile of a developer.ResultsOur results find significant gender biases during code acceptance among 13 out of the 14 datasets, with seven favoring men and the remaining six favoring women. We found significant differences between men and women in terms of code review intervals, with women encountering longer delays than men in three cases and the opposite in seven. Our results indicate reviewer selection as one of the most gender-biased aspects, with 12 out of 14 datasets exhibiting bias. A total of 11 out of the 14 cases show women having significantly lower code review participation than their men colleagues. Since most of the review assignments are based on invitations, this result suggests possible affinity biases among the developers. We also noticed a significantly higher likelihood of women using gender-neutral profiles. Supporting Terrell et al.'s claim, women with gender-neutral profiles had higher odds of code acceptance than men among three Gerrit-based projects. However, contradicting their results, we found significantly lower odds of code acceptance for women with gender-neutral profiles across all four GitHub project groups.ConclusionsThough gender bias exists among many projects, the direction and amplitude of that bias vary based on project size, community, and culture. Similar bias mitigation strategies may not work across all communities, as the characteristics of biases and their underlying causes differ. As women are less likely to be invited for reviews, FOSS projects should take initiatives to ensure the equitable selection of women as reviewers.
C1 [Sultana, Sayma; Turzo, Asif Kamal; Bosu, Amiangshu] Wayne State Univ, Dept Comp Sci, Detroit, MI 48202 USA.
C3 Wayne State University
RP Bosu, A (corresponding author), Wayne State Univ, Dept Comp Sci, Detroit, MI 48202 USA.
EM sayma@wayne.edu; asifkamal@wayne.edu; abosu@wayne.edu
RI Turzo, Asif Kamal/HMP-3568-2023; Bosu, Amiangshu/AAB-1259-2020
OI Turzo, Asif Kamal/0000-0002-0869-4962; Bosu,
   Amiangshu/0000-0002-3178-6232
FU US National Science Foundation [1850475]
FX Work conducted by for this research is partially supported by the US
   National Science Foundation under Grant No. 1850475. Any opinions,
   findings and conclusions or recommendations expressed in thismaterial
   are those of the author(s) and do not necessarily reflect the views of
   the National Science Foundation.
CR Alba Beatrice, 2018, To achieve gender equality, we must first tackle our unconscious biases
   [Anonymous], 2009, Research on software analysis for error-free computing center Tech-Memo (ROSAEC MEMO 2009-006)
   [Anonymous], 2006, GENDER INTEGRATED RE
   [Anonymous], 2005, Perspectives on free and open source software
   Augustine V, 2018, IEEE SOFTWARE, V35, P72, DOI 10.1109/MS.2017.4541044
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Barnett M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P134, DOI 10.1109/ICSE.2015.35
   Beard Chris, 2018, Diversity and Inclusion at Mozilla
   Beneschott B, 2014, IS OPEN SOURCE OPEN
   Bertagnoli L, 2021, TECH CAN GET MORE WO
   Bird C, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P191, DOI 10.1109/MSR.2015.25
   BostonUniversity SoPH, 2016, CORRELATION REGRESSI
   Bosu A, 2019, INT SYMP EMP SOFTWAR, P295
   Bosu A, 2017, IEEE T SOFTWARE ENG, V43, P56, DOI 10.1109/TSE.2016.2576451
   Bosu A, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P257, DOI 10.1145/2635868.2635880
   Bourke J., 2017, Diversity and inclusion: The reality gap
   Built-in, 2021, DIV INCL IS MEAN DIV
   Burnett M, 2017, S VIS LANG HUM CEN C, P139, DOI 10.1109/VLHCC.2017.8103461
   Burnett M, 2016, INTERACT COMPUT, V28, P760, DOI 10.1093/iwc/iwv046
   Calvo Dafne, 2020, Studies in Communication Sciences, V21, DOI DOI 10.24434/J.SCOMS.2021.01.011
   Canedo Edna Dias, 2021, SBES '21: Brazilian Symposium on Software Engineering, P378, DOI 10.1145/3474624.3474638
   Canedo ED., 2020, P 14 ACM IEEE INT S, DOI [10.1145/3382494.3410682, DOI 10.1145/3382494.3410682]
   Carver J.C., 2014, P 8 ACM IEEE INT S E, pS, DOI [10.1145/2652524.2652544, DOI 10.1145/2652524.2652544]
   Catolino G, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN SOCIETY (ICSE-SEIS 2019), P11, DOI 10.1109/ICSE-SEIS.2019.00010
   Ciceri Francesca, 2021, Diversity Statement
   David PA, 2008, INF ECON POLICY, V20, P364, DOI 10.1016/j.infoecopol.2008.10.001
   DURRLEMAN S, 1989, STAT MED, V8, P551, DOI 10.1002/sim.4780080504
   Eidinger E, 2014, IEEE T INF FOREN SEC, V9, P2170, DOI 10.1109/TIFS.2014.2359646
   Fan YR, 2018, EMPIR SOFTW ENG, V23, P3346, DOI 10.1007/s10664-018-9602-0
   Forte A., 2012, P ACM 2012 C COMPUTE, P33
   Foundation, 2008, Wiki. Geek Feminisom
   Frluckaj H, 2022, PROC ACM HUM COMPUT, V6, P1
   Fulton LV, 2012, J STAT EDUC, V20, DOI 10.1080/10691898.2012.11889647
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   Gousios G, 2013, IEEE WORK CONF MIN S, P233, DOI 10.1109/MSR.2013.6624034
   Goyal K, 2017, 2017 INTERNATIONAL CONFERENCE OF ELECTRONICS, COMMUNICATION AND AEROSPACE TECHNOLOGY (ICECA), VOL 1, P474, DOI 10.1109/ICECA.2017.8203730
   Guerrouj L, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P902, DOI 10.1145/2889160.2891055
   Harrell FE, 2015, SPRINGER SER STAT, DOI 10.1007/978-3-319-19425-7
   HARRELL FE, 1984, STAT MED, V3, P143, DOI 10.1002/sim.4780030207
   HARRELL FE, 1985, CANCER TREAT REP, V69, P1071
   Hasan M, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-10038-w
   Imtiaz N, 2019, PROC INT CONF SOFTW, P700, DOI 10.1109/ICSE.2019.00079
   Jiang YJ, 2013, IEEE WORK CONF MIN S, P101, DOI 10.1109/MSR.2013.6624016
   Kalliamvakou E, 2016, EMPIR SOFTW ENG, V21, P2035, DOI 10.1007/s10664-015-9393-5
   Kononenko O, 2015, PROC IEEE INT CONF S, P111, DOI 10.1109/ICSM.2015.7332457
   LauraSherbin RR, 2017, DIVERSITY DOESNT STI
   Lee A, 2019, PROC INT CONF SOFTW, P677, DOI 10.1109/ICSE.2019.00077
   Lenarduzzi V, 2021, J SYST SOFTWARE, V171, DOI 10.1016/j.jss.2020.110806
   Lin B, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P425, DOI [10.1145/2901739.2901777, 10.1109/MSR.2016.050]
   Lockwood P, 2006, PSYCHOL WOMEN QUART, V30, P36, DOI 10.1111/j.1471-6402.2006.00260.x
   MANSFIELD ER, 1982, AM STAT, V36, P158, DOI 10.2307/2683167
   McIntosh S, 2016, EMPIR SOFTW ENG, V21, P2146, DOI 10.1007/s10664-015-9381-9
   Mendez C, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1004, DOI 10.1145/3180155.3180241
   Mendez C, 2018, 2018 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON GENDER EQUALITY IN SOFTWARE ENGINEERING (GE 2018), P21, DOI 10.1145/3195570.3195572
   Menking A, 2019, CHI 2019: PROCEEDINGS OF THE 2019 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, DOI 10.1145/3290605.3300702
   Mirsaeedi E, 2020, PROC INT CONF SOFTW, P1183, DOI 10.1145/3377811.3380335
   Nadri R, 2022, IEEE T SOFTWARE ENG, V48, P2955, DOI 10.1109/TSE.2021.3073773
   Nafus D, 2012, NEW MEDIA SOC, V14, P669, DOI 10.1177/1461444811422887
   Padala HS, 2022, IEEE T SOFTWARE ENG, V48, P241, DOI 10.1109/TSE.2020.2984173
   Parra E, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P731, DOI 10.1145/2889160.2892651
   Paul R, 2021, PROC INT CONF SOFTW, P1373, DOI 10.1109/ICSE43902.2021.00124
   Paul R, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P26, DOI [10.1109/saner.2019.8667987, 10.1109/SANER.2019.8667987]
   Pourhoseingholi Mohamad Amin, 2012, Gastroenterol Hepatol Bed Bench, V5, P79
   Prana G. A. A., 2021, IEEE T SOFTWARE ENG, P1
   Qiu YX, 2010, IFIP ADV INF COMM TE, V319, P239
   Rigby Peter, 2008, 2008 ACM/IEEE 30th International Conference on Software Engineering. ICSE'08, P541, DOI 10.1145/1368088.1368162
   Robson N, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P986, DOI 10.1145/3236024.3275441
   Santamaría L, 2018, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.156
   Santos A, 2021, IEEE T SOFTWARE ENG, V47, P1742, DOI 10.1109/TSE.2019.2935720
   Shull FJ, 2008, EMPIR SOFTW ENG, V13, P211, DOI 10.1007/s10664-008-9060-1
   Singh V, 2019, 13TH EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE (ECSA 2019), VOL 2, P94, DOI 10.1145/3344948.334968
   Singh V, 2019, IFIP ADV INF COMM TE, V556, P68, DOI 10.1007/978-3-030-20883-7_7
   SinghV Bongiovanni B, 2021, INT J INFORM DIVERSI
   Smith TJ., 2013, Multiple Linear Regres Viewpoints, V39, P17, DOI DOI 10.1201/9780429066665-6
   Squire M, 2015, P ANN HICSS, P5290, DOI 10.1109/HICSS.2015.623
   Sultana S., 2023, ZEONODO, DOI DOI 10.5281/ZENODO.7608539
   Sultana S, 2023, Arxiv, DOI [arXiv:2108.07774, DOI 10.48550/ARXIV.2108.07774]
   Tao YD, 2014, PROC IEEE INT CONF S, P271, DOI 10.1109/ICSME.2014.49
   Team FD, 2019, DIVERSITY INCLUSION
   Terrell J, 2017, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.111
   Thelwall M, 2010, J AM SOC INF SCI TEC, V61, P190, DOI 10.1002/asi.21180
   Thongtanunam P, 2017, EMPIR SOFTW ENG, V22, P768, DOI 10.1007/s10664-016-9452-6
   Thongtanunam P, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P141, DOI 10.1109/SANER.2015.7081824
   Tourani P, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P24, DOI 10.1109/SANER.2017.7884606
   Vasilescu B, 2015, CHI 2015: PROCEEDINGS OF THE 33RD ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P3789, DOI 10.1145/2702123.2702549
   Vasilescu B, 2014, INTERACT COMPUT, V26, P488, DOI 10.1093/iwc/iwt047
   VEALL MR, 1994, QUAL QUANT, V28, P151, DOI 10.1007/BF01102759
   Vedres B, 2019, EPJ DATA SCI, V8, DOI 10.1140/epjds/s13688-019-0202-z
   Wajcman Judy, 2007, Information Communication & Society, V10, P287, DOI 10.1080/13691180701409770
   Wang L, 2020, REASONS LACK DIVERSI
   Xia X, 2015, PROC IEEE INT CONF S, P261, DOI 10.1109/ICSM.2015.7332472
   Yin P, 2001, J EXP EDUC, V69, P203, DOI 10.1080/00220970109600656
   Zafar S, 2019, INT SYMP EMP SOFTWAR, P59, DOI 10.1109/esem.2019.8870174
NR 93
TC 1
Z9 1
U1 6
U2 10
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2023
VL 28
IS 4
AR 92
DI 10.1007/s10664-023-10324-9
PG 43
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA I2AU2
UT WOS:001000870700001
DA 2024-07-18
ER

PT J
AU Basile, D
   ter Beek, MH
   Lazreg, S
   Cordy, M
   Legay, A
AF Basile, Davide
   ter Beek, Maurice H.
   Lazreg, Sami
   Cordy, Maxime
   Legay, Axel
TI Static detection of equivalent mutants in real-time model-based mutation
   testing An Empirical Evaluation
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software product line; mutation-based testing; real-time system
ID STRATEGIES; DESIGN
AB Model-based mutation testing has the potential to effectively drive test generation to reveal faults in software systems. However, it faces a typical efficiency issue since it could produce many mutants that are equivalent to the original system model, making it impossible to generate test cases from them. We consider this problem when model-based mutation testing is applied to real-time system product lines, represented as timed automata. We define novel, time-specific mutation operators and formulate the equivalent mutant problem in the frame of timed refinement relations. Further, we study in which cases a mutation yields an equivalent mutant. Our theoretical results provide guidance to system engineers, allowing them to eliminate mutations from which no test case can be produced. Our empirical evaluation, based on a proof-of-concept implementation and a set of benchmarks from the literature, confirms the validity of our theory and demonstrates that in general our approach can avoid the generation of a significant amount of the equivalent mutants.
C1 [Basile, Davide; ter Beek, Maurice H.] ISTI CNR, Via G Moruzzi 1, I-56124 Pisa, Italy.
   [Lazreg, Sami; Cordy, Maxime] Univ Luxembourg, SnT, Esch Sur Alzette, Luxembourg.
   [Legay, Axel] Catholic Univ Louvain, Ottignies, Belgium.
C3 Consiglio Nazionale delle Ricerche (CNR); Istituto di Scienza e
   Tecnologie dell'Informazione "Alessandro Faedo" (ISTI-CNR); University
   of Luxembourg; Universite Catholique Louvain
RP Basile, D (corresponding author), ISTI CNR, Via G Moruzzi 1, I-56124 Pisa, Italy.
EM davide.basile@isti.cnr.it; maurice.terbeek@isti.cnr.it;
   sami.lazreg@uni.lu; maxime.cordy@uni.lu; axel.legay@uclouvain.be
RI BASILE, Davide/AAX-1112-2020
OI BASILE, Davide/0000-0002-7196-6609
FU national MIUR-PRIN [2020TL3X8X]; FNR Luxembourg
   [INTER/FNRS/20/15077233/Scaling Up Variability/Cordy]
FX We thank the anonymous reviewers for useful comments and suggestions
   that helped us to improve the presentation. Davide Basile and Maurice H.
   ter Beek acknowledge funding from the national MIUR-PRIN 2020TL3X8X
   project T-LADIES (Typeful Language Adaptation for Dynamic, Interacting
   and Evolving Systems). Maxime Cordy and Sami Lazreg are supported by FNR
   Luxembourg (grant INTER/FNRS/20/15077233/Scaling Up Variability/Cordy).
CR Aichernig Bernhard K., 2013, Tests and Proofs. 7th International Conference, TAP 2013. Proceedings: LNCS 7942, P20, DOI 10.1007/978-3-642-38916-0_2
   Aichernig BK, 2015, SOFTW TEST VERIF REL, V25, P716, DOI 10.1002/stvr.1522
   ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   Andre Etienne, 2019, Transactions on Petri Nets and Other Models of Concurrency XIV. Lecture Notes in Computer Science (LNCS 11790), P64, DOI 10.1007/978-3-662-60651-3_3
   André É, 2018, IEEE INT C ENG COMP, P10, DOI 10.1109/ICECCS2018.2018.00010
   Andrews JH, 2006, IEEE T SOFTWARE ENG, V32, P608, DOI 10.1109/TSE.2006.83
   Asarin E, 1998, SYSTEM STRUCTURE AND CONTROL 1998 (SSC'98), VOLS 1 AND 2, P447
   Baker R, 2013, IEEE T SOFTWARE ENG, V39, P787, DOI 10.1109/TSE.2012.56
   Basile D., 2020, P 24 ACM C SYSTEMS S, P252, DOI DOI 10.1145/3382025.3414966
   Basile D, 2020, INNOV SYST SOFTW ENG, V16, P199, DOI 10.1007/s11334-019-00353-3
   Basile D, 2020, SCI COMPUT PROGRAM, V187, DOI 10.1016/j.scico.2019.102344
   Behrmann G, 2007, LECT NOTES COMPUT SC, V4590, P121
   Benes N, 2015, LECT NOTES COMPUT SC, V9135, P69, DOI 10.1007/978-3-662-47666-6_6
   Brillout A, 2010, LECT NOTES COMPUT SC, V6286, P208
   CHOW TS, 1978, IEEE T SOFTWARE ENG, V4, P178, DOI 10.1109/TSE.1978.231496
   Classen A, 2013, IEEE T SOFTWARE ENG, V39, P1069, DOI 10.1109/TSE.2012.86
   Cordy M, 2013, FME WORKS FORM, P64, DOI 10.1109/FormaliSE.2013.6612279
   Cordy M, 2012, PROC INT CONF SOFTW, P672, DOI 10.1109/ICSE.2012.6227150
   Cordy Maxime., 2012, Proceedings of the 16th International Software Product Line Conference (SPLC'12), P66, DOI DOI 10.1145/2362536
   David A, 2015, INT J SOFTW TOOLS TE, V17, P17, DOI 10.1007/s10009-013-0286-x
   David A, 2010, LECT NOTES COMPUT SC, V6252, P365
   David A, 2010, HSSC 10: PROCEEDINGS OF THE 13TH ACM INTERNATIONAL CONFERENCE ON HYBRID SYSTEMS: COMPUTATION AND CONTROL, P91
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   Devroey X, 2016, PROC INT CONF SOFTW, P655, DOI 10.1145/2884781.2884821
   Fabbri S. C. P. F., 1999, Proceedings 10th International Symposium on Software Reliability Engineering (Cat. No.PR00443), P210, DOI 10.1109/ISSRE.1999.809326
   Feo-Arenis S, 2014, LECT NOTES COMPUT SC, V8442, P658, DOI 10.1007/978-3-319-06410-9_44
   Hoxha B., 2015, ARCH14-15. 1st and 2nd International Workshop on Applied veRification for Continuous and Hybrid Systems, V34, P25
   Hune T, 2001, CSIR0102 U NIJM
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   LAMPORT L, 1987, ACM T COMPUT SYST, V5, P1, DOI 10.1145/7351.7352
   Larsen KG, 2017, IEEE ICST WORKSHOP, P319, DOI 10.1109/ICSTW.2017.60
   Lee J, 2020, INFORM SOFTWARE TECH, V122, DOI 10.1016/j.infsof.2020.106272
   Luthmann L, 2019, INT J SOFTW TOOLS TE, V21, P613, DOI 10.1007/s10009-019-00532-4
   Luthmann L, 2017, 21ST INTERNATIONAL SYSTEMS & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 1, P104, DOI 10.1145/3106195.3106204
   Madeyski L, 2014, IEEE T SOFTWARE ENG, V40, P23, DOI 10.1109/TSE.2013.44
   Masri W, 2016, ADV COMPUT, V103, P79, DOI 10.1016/bs.adcom.2016.04.003
   Nyman U, 2007, LECT NOTES COMPUT SC, V4421, P64
   Offutt J, 2011, INFORM SOFTWARE TECH, V53, P1098, DOI 10.1016/j.infsof.2011.03.007
   Papadakis Mike, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P90, DOI 10.1109/ICSTW.2010.50
   Petrovic G, 2021, PROC INT CONF SOFTW, P910, DOI 10.1109/ICSE43902.2021.00087
   ter Beek MH, 2021, LECT NOTES COMPUT SC, V13047, P483, DOI 10.1007/978-3-030-90870-6_26
   ter Beek MH, 2020, LECT NOTES COMPUT SC, V12076, P245, DOI 10.1007/978-3-030-45234-6_12
   ter Beek MH, 2016, J LOG ALGEBR METHODS, V85, P287, DOI 10.1016/j.jlamp.2015.11.006
   ter Beek MH, 2012, THEOR COMPUT SCI, V429, P21, DOI 10.1016/j.tcs.2011.12.020
   Utting M, 2012, SOFTW TEST VERIF REL, V22, P297, DOI 10.1002/stvr.456
   Waga M, 2017, LECT NOTES COMPUT SC, V10419, P224, DOI 10.1007/978-3-319-65765-3_13
   WEYUKER E, 1994, IEEE T SOFTWARE ENG, V20, P353, DOI 10.1109/32.286420
NR 47
TC 7
Z9 7
U1 1
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2022
VL 27
IS 7
AR 160
DI 10.1007/s10664-022-10149-y
PG 55
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4V4SY
UT WOS:000859469500018
OA hybrid
DA 2024-07-18
ER

PT J
AU Lomio, F
   Moreschini, S
   Lenarduzzi, V
AF Lomio, Francesco
   Moreschini, Sergio
   Lenarduzzi, Valentina
TI A machine and deep learning analysis among SonarQube rules, product, and
   process metrics for fault prediction
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE SonarQube; Software metrics; Fault prediction; Machine learning; Deep
   learning
ID SOFTWARE; VALIDATION; COMPLEXITY; NUMBER
AB Background Developers spend more time fixing bugs refactoring the code to increase the maintainability than developing new features. Researchers investigated the code quality impact on fault-proneness, focusing on code smells and code metrics. Objective We aim at advancing fault-inducing commit prediction using different variables, such as SonarQube rules, product, process metrics, and adopting different techniques. Method We designed and conducted an empirical study among 29 Java projects analyzed with SonarQube and SZZ algorithm to identify fault-inducing and fault-fixing commits, computing different product and process metrics. Moreover, we investigated fault-proneness using different Machine and Deep Learning models. Results We analyzed 58,125 commits containing 33,865 faults and infected by more than 174 SonarQube rules violated 1.8M times, on which 48 software product and process metrics were calculated. Results clearly identified a set of features that provided a highly accurate fault prediction (more than 95% AUC). Regarding the performance of the classifiers, Deep Learning provided a higher accuracy compared with Machine Learning models. Conclusion Future works might investigate whether other static analysis tools, such as FindBugs or Checkstyle, can provide similar or different results. Moreover, researchers might consider the adoption of time series analysis and anomaly detection techniques.
C1 [Lomio, Francesco; Moreschini, Sergio] Tampere Univ, Tampere, Finland.
   [Lenarduzzi, Valentina] Univ Oulu, Oulu, Finland.
C3 Tampere University; University of Oulu
RP Lomio, F (corresponding author), Tampere Univ, Tampere, Finland.
EM francesco.lomio@tuni.fi; sergio.moreschini@tuni.fi;
   valentina.lenarduzzi@oulu.fi
OI Lenarduzzi, Valentina/0000-0003-0511-5133; Moreschini,
   Sergio/0000-0002-5582-9487; Lomio, Francesco/0000-0003-3033-3044
CR Abadi M, 2016, PROCEEDINGS OF OSDI'16: 12TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P265
   Abozeed S M, 2020, 2019 INT C ADV EM CO, P1
   Lam AN, 2015, IEEE INT CONF AUTOM, P476, DOI 10.1109/ASE.2015.73
   [Anonymous], 2017, COMMUN ACM, DOI DOI 10.1145/3065386
   Avgeriou P., 2021, IEEE SOFTWARE
   Avgeriou P, 2021, IEEE SOFTWARE, V38, P61, DOI 10.1109/MS.2020.3024958
   Baldassarre MT, 2020, INFORM SOFTWARE TECH, V128, DOI 10.1016/j.infsof.2020.106377
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Beller M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P572, DOI 10.1145/3180155.3180175
   Bettenburg N., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P60, DOI 10.1109/MSR.2012.6224300
   Bird C., 2011, P 19 ACM SIGSOFT S 1, P4, DOI DOI 10.1145/2025113.2025119
   Breiman L, 2001, MACH LEARN, V45, P5, DOI 10.1023/A:1010933404324
   Breiman L, 1996, MACH LEARN, V24, P123, DOI 10.1007/bf00058655
   Carver JC, 2010, P 1 INT WORKSH REPL, P1
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chen TQ, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P785, DOI 10.1145/2939672.2939785
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Chollet F, 2015, KERAS
   Zeiler MD, 2012, Arxiv, DOI [arXiv:1212.5701, DOI 10.48550/ARXIV.1212.5701]
   D'Ambros Marco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P31, DOI 10.1109/MSR.2010.5463279
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   Di Nucci D, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P612, DOI 10.1109/SANER.2018.8330266
   Falessi D, 2017, INT SYMP EMP SOFTWAR, P78, DOI 10.1109/ESEM.2017.14
   Fawaz HI, 2019, DATA MIN KNOWL DISC, V33, P917, DOI 10.1007/s10618-019-00619-1
   Ferenc R, 2020, ARRAY-NY, V6, DOI 10.1016/j.array.2020.100021
   Fontana FA, 2016, EMPIR SOFTW ENG, V21, P1143, DOI 10.1007/s10664-015-9378-4
   Fontana FA, 2017, KNOWL-BASED SYST, V128, P43, DOI 10.1016/j.knosys.2017.04.014
   Fowler M., 1999, Refactoring: Improving the Design of Existing Code
   Freund Y, 1997, J COMPUT SYST SCI, V55, P119, DOI 10.1006/jcss.1997.1504
   Friedman JH, 2001, ANN STAT, V29, P1189, DOI 10.1214/aos/1013203451
   Fu W, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P72, DOI 10.1145/3106237.3106257
   Gatrell M, 2015, SCI COMPUT PROGRAM, V102, P44, DOI 10.1016/j.scico.2014.12.002
   Geurts P, 2006, MACH LEARN, V63, P3, DOI 10.1007/s10994-006-6226-1
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Gu XD, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P933, DOI 10.1145/3180155.3180167
   Gu XD, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P631, DOI 10.1145/2950290.2950334
   Guo J, 2017, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.2017.9
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Hassan AE, 2005, PROC IEEE INT CONF S, P263
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   He KM, 2016, PROC CVPR IEEE, P770, DOI 10.1109/CVPR.2016.90
   Hinton GE, 2006, SCIENCE, V313, P504, DOI 10.1126/science.1127647
   Dam HK, 2021, IEEE T SOFTWARE ENG, V47, P67, DOI 10.1109/TSE.2018.2881961
   Ioffe S, 2015, Arxiv, DOI [arXiv:1502.03167, DOI 10.48550/ARXIV.1502.03167]
   Jing XY, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P414, DOI 10.1145/2568225.2568320
   Kamei Y, 2016, EMPIR SOFTW ENG, V21, P2072, DOI 10.1007/s10664-015-9400-x
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Khomh F, 2009, WORK CONF REVERSE EN, P303, DOI 10.1109/WCRE.2009.22
   Khomh F, 2011, J SYST SOFTWARE, V84, P559, DOI 10.1016/j.jss.2010.11.921
   Kim S, 2007, PROC INT CONF SOFTW, P489
   Kim S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P481, DOI 10.1145/1985793.1985859
   Kondo M, 2020, EMPIR SOFTW ENG, V25, P890, DOI 10.1007/s10664-019-09736-3
   Larus J, 2009, WHY PROGRAMS FAIL: A GUIDE TO SYSTEMATIC DEBUGGING, 2ND EDITION, P1
   Lenarduzzi Valentina, 2020, Proceedings of 6th International Conference in Software Engineering for Defence Applications (SEDA 2018). Advances in Intelligent Systems and Computing (AISC 925), P165, DOI 10.1007/978-3-030-14687-0_15
   Lenarduzzi V, 2021, ARXIV
   Lenarduzzi V, 2021, J SYST SOFTWARE, V171, DOI 10.1016/j.jss.2020.110827
   Lenarduzzi V, 2021, J SYST SOFTWARE, V171, DOI 10.1016/j.jss.2020.110806
   Lenarduzzi V, 2020, J SYST SOFTWARE, V170, DOI 10.1016/j.jss.2020.110750
   Lenarduzzi V, 2020, INT C PROGRAM COMPRE, P446, DOI 10.1145/3387904.3389295
   Lenarduzzi V, 2019, 15TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING (PROMISE'19), P2, DOI 10.1145/3345629.3345630
   Lenarduzzi V, 2019, PROCEEDINGS OF THE 3RD ACM SIGSOFT INTERNATIONAL WORKSHOP ON MACHINE LEARNING TECHNIQUES FOR SOFTWARE QUALITY EVALUATION (MALTESQUE '19), P37, DOI 10.1145/3340482.3342747
   Lenarduzzi V, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P501, DOI [10.1109/SANER48275.2020.9054821, 10.1109/saner48275.2020.9054821]
   Lenarduzzi V, 2017, PROC IEEE ACM INT C, P146, DOI 10.1109/ICSE-C.2017.122
   Li J, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P318, DOI 10.1109/QRS.2017.42
   Li WW, 2020, INFORM SOFTWARE TECH, V126, DOI 10.1016/j.infsof.2020.106364
   Lin M, 2014, Arxiv, DOI [arXiv:1312.4400, DOI 10.48550/ARXIV.1312.4400]
   Lomio F, 2022, MACHINE DEEP LEARNIN
   Lomio F, 2019, WORKSH 27 EUR SIGN P
   Long J., 2015, P IEEE C COMP VIS PA, P3431, DOI DOI 10.48550/ARXIV.1411.4038
   Lujan Savanna, 2020, MaLTeSQuE 2020: Proceedings of the 4th ACM SIGSOFT International Workshop on Machine-Learning Techniques for Software-Quality Evaluation, P1, DOI 10.1145/3416505.3423559
   Maneerat N., 2011, Proceedings of the Eighth International Joint Conference on Computer Science and Software Engineering (JCSSE 2011), P331, DOI 10.1109/JCSSE.2011.5930143
   McIntosh S, 2018, IEEE T SOFTWARE ENG, V44, P412, DOI 10.1109/TSE.2017.2693980
   Menzies T, 2010, AUTOMAT SOFTW ENG, V17, P375, DOI 10.1007/s10515-010-0069-5
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Murphy-Hill E, 2015, IEEE T SOFTWARE ENG, V41, P65, DOI 10.1109/TSE.2014.2357438
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Nair V., 2010, P 27 INT C MACHINE L, P807
   NEMENYI P, 1962, BIOMETRICS, V18, P263
   Nguyen H, 2022, EEE INT C SOFTWARE A
   O'Brien RM, 2007, QUAL QUANT, V41, P673, DOI 10.1007/s11135-006-9018-6
   Osman H, 2017, Proceedings of the 13th International Conference on Predictive Models and Data Analytics in Software Engineering, P107
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   Palomba F, 2019, IEEE T SOFTWARE ENG, V45, P194, DOI 10.1109/TSE.2017.2770122
   Palomba F, 2018, EMPIR SOFTW ENG, V23, P1188, DOI 10.1007/s10664-017-9535-z
   Pan K, 2009, EMPIR SOFTW ENG, V14, P286, DOI 10.1007/s10664-008-9077-5
   Pascarella Luca, 2018, Proceedings of the ACM on Human-Computer Interaction, V2, DOI 10.1145/3274404
   Pascarella L, 2020, J SYST SOFTWARE, V161, DOI 10.1016/j.jss.2019.110493
   Pascarella L, 2019, J SYST SOFTWARE, V150, P22, DOI 10.1016/j.jss.2018.12.001
   Pascarella L, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P592, DOI 10.1109/SANER.2018.8330264
   Patton M. Q., 2002, QUALITATIVE RES EVAL
   Pecorelli F, 2022, EMPIR SOFTW ENG
   Pecorelli F, 2020, IEEE WORK CONF MIN S, P220, DOI 10.1145/3379597.3387457
   Pecorelli F, 2020, J SYST SOFTWARE, V169, DOI 10.1016/j.jss.2020.110693
   Powers DMW, 2020, J MACH LEARN TECHNOL, P37, DOI DOI 10.9735/2229-3981
   PRAAGMAN J, 1985, EUR J OPER RES, V19, P144, DOI 10.1016/0377-2217(85)90321-2
   Prechelt L, 2014, INFORM SOFTWARE TECH, V56, P1377, DOI 10.1016/j.infsof.2014.05.001
   Querel LP, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P892, DOI 10.1145/3236024.3264599
   Rahman F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P432, DOI 10.1109/ICSE.2013.6606589
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Saarimaki N, 2022, ROBUST APPROACH ANAL
   Saarimaki N, 2019, INT C TECHNICAL DEBT
   Saarimäki N, 2019, EUROMICRO CONF PROC, P317, DOI 10.1109/SEAA.2019.00055
   Saboury A, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P294, DOI 10.1109/SANER.2017.7884630
   Sarikaya R, 2014, IEEE-ACM T AUDIO SPE, V22, P778, DOI 10.1109/TASLP.2014.2303296
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Subramanyam R, 2003, IEEE T SOFTWARE ENG, V29, P297, DOI 10.1109/TSE.2003.1191795
   Tan M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P99, DOI 10.1109/ICSE.2015.139
   Tantithamthavorn C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P286, DOI 10.1145/3183519.3183547
   Tantithamthavorn C, 2019, IEEE T SOFTWARE ENG, V45, P683, DOI 10.1109/TSE.2018.2794977
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Thong Hoang, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P34, DOI 10.1109/MSR.2019.00016
   Tollin I., 2017, 21 INT C EV ASS SOFT, P61
   Trautsch A, 2020, PROC IEEE INT CONF S, P127, DOI 10.1109/ICSME46990.2020.00022
   Vassallo C, 2020, EMPIR SOFTW ENG, V25, P1419, DOI 10.1007/s10664-019-09750-5
   Vassallo C, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P38, DOI 10.1109/SANER.2018.8330195
   Wang S, 2020, IEEE T SOFTWARE ENG, V46, P1267, DOI 10.1109/TSE.2018.2877612
   Wang ZG, 2017, IEEE IJCNN, P1578, DOI 10.1109/IJCNN.2017.7966039
   White M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P334, DOI 10.1109/MSR.2015.38
   Yang XL, 2017, INFORM SOFTWARE TECH, V87, P206, DOI 10.1016/j.infsof.2017.03.007
   Yang XL, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P17, DOI 10.1109/QRS.2015.14
   Yang YB, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P157, DOI 10.1145/2950290.2950353
   Yin R. K., 2008, CASE STUDY RES DESIG, DOI DOI 10.1097/FCH.0B013E31822DDA9E
NR 124
TC 2
Z9 3
U1 1
U2 13
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2022
VL 27
IS 7
AR 189
DI 10.1007/s10664-022-10164-z
PG 57
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 5A0CE
UT WOS:000862564000003
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Natella, R
AF Natella, Roberto
TI StateAFL: Greybox fuzzing for stateful network servers
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Security; Fuzzing; Network servers
AB Fuzzing network servers is a technical challenge, since the behavior of the target server depends on its state over a sequence of multiple messages. Existing solutions are costly and difficult to use, as they rely on manually-customized artifacts such as protocol models, protocol parsers, and learning frameworks. The aim of this work is to develop a greybox fuzzer (StateAFL) for network servers that only relies on lightweight analysis of the target program, with no manual customization, in a similar way to what the AFL fuzzer achieved for stateless programs. The proposed fuzzer instruments the target server at compile-time, to insert probes on memory allocations and network I/O operations. At run-time, it infers the current protocol state of the target server by taking snapshots of long-lived memory areas, and by applying a fuzzy hashing algorithm (Locality-Sensitive Hashing) to map memory contents to a unique state identifier. The fuzzer incrementally builds a protocol state machine for guiding fuzzing. We implemented and released StateAFL as open-source software. As a basis for reproducible experimentation, we integrated StateAFL with a large set of network servers for popular protocols, with no manual customization to accomodate for the protocol. The experimental results show that the fuzzer can be applied with no manual customization on a large set of network servers for popular protocols, and that it can achieve comparable, or even better code coverage and bug detection than customized fuzzing. Moreover, our qualitative analysis shows that states inferred from memory better reflect the server behavior than only using response codes from messages.
C1 [Natella, Roberto] Univ Napoli Federico II, Via Claudio 21, I-80125 Naples, Italy.
C3 University of Naples Federico II
RP Natella, R (corresponding author), Univ Napoli Federico II, Via Claudio 21, I-80125 Naples, Italy.
EM roberto.natella@unina.it
RI Natella, Roberto/AAT-7087-2020
OI Natella, Roberto/0000-0003-1084-4824
FU Universita degli Studi di Napoli Federico II within the CRUI-CARE
   Agreement
FX Open access funding provided by Universit`a degli Studi di Napoli
   Federico II within the CRUICARE Agreement.
CR AFLplusplus Project, 2021, PULL REQUEST 1200 RE
   Ali M, 2020, 2020 IEEE INTERNATIONAL CONFERENCE ON INTELLIGENCE AND SECURITY INFORMATICS (ISI), P68, DOI 10.1109/isi49825.2020.9280546
   Alrahem T., 2007, DEFCON, V15, P1
   Andronidis A, 2022, Arxiv, DOI arXiv:2201.04048
   Antunes J, 2011, P 13 EUROPEAN WORKSH, P87
   Ba JS, 2022, Arxiv, DOI arXiv:2204.02545
   Banks G, 2006, LECT NOTES COMPUT SC, V4176, P343
   Beyond Security, 2020, BESTORM BLACK BOX TE
   Böhme M, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P713, DOI 10.1145/3368089.3409729
   Böhme M, 2021, IEEE SOFTWARE, V38, P79, DOI 10.1109/MS.2020.3016773
   Bozkaya T, 1999, ACM T DATABASE SYST, V24, P361, DOI 10.1145/328939.328959
   Bozkaya T., 1997, SIGMOD Record, V26, P357, DOI 10.1145/253262.253345
   Caballero J, 2007, CCS'07: PROCEEDINGS OF THE 14TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P317
   Cady C J., 2017, TREE LOCALITY SENSIT
   Comparetti PM, 2009, P IEEE S SECUR PRIV, P110, DOI 10.1109/SP.2009.14
   de Ruiter J, 2015, PROCEEDINGS OF THE 24TH USENIX SECURITY SYMPOSIUM, P193
   Dinesh S, 2020, P IEEE S SECUR PRIV, P1497, DOI 10.1109/SP40000.2020.00009
   Duchêne J, 2018, J COMPUT VIROL HACKI, V14, P53, DOI 10.1007/s11416-016-0289-8
   Duck GJ, 2020, PROCEEDINGS OF THE 41ST ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '20), P151, DOI 10.1145/3385412.3385972
   Feng XT, 2021, CCS '21: PROCEEDINGS OF THE 2021 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P337, DOI 10.1145/3460120.3484543
   Fiterau-Brostean P, 2020, PROCEEDINGS OF THE 29TH USENIX SECURITY SYMPOSIUM, P2523
   Google Inc, 2021, OSS FUZZ CONT FUZZ O
   Guo MY, 2021, AUTON AGENT MULTI-AG, V35, DOI 10.1007/s10458-021-09522-w
   Harman M, 2018, IEEE INT WORK C SO, P1, DOI 10.1109/SCAM.2018.00009
   Hawkes B., 2019, 0DAY IN WILD
   Holzmann G. J., 1991, Design and Validation of Comp. Protocols, V512
   Jafari O., 2021, arXiv
   Kleber S., 2018, 12 USENIX WORKSHOP O
   Klees G, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P2123, DOI 10.1145/3243734.3243804
   Korczynski D, 2021, FUZZING 100 OPEN SOU
   Li Junqiang, 2022, arXiv
   Liu DG, 2022, Arxiv, DOI arXiv:2112.15498
   Manès VJM, 2021, IEEE T SOFTWARE ENG, V47, P2312, DOI 10.1109/TSE.2019.2946563
   Metzman J, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1393, DOI 10.1145/3468264.3473932
   Natella R, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P662, DOI 10.1145/3460319.3469077
   Nick vs Networking, 2019, KAMAILIO BYTES STATE
   Oliver J, 2014, 2013 FOURTH CYBERCRIME AND TRUSTWORTHY COMPUTING WORKSHOP (CTC 2013), P7, DOI 10.1109/CTC.2013.9
   ONeill P.H., 2021, MIT Technology Review
   Poll E, 2015, 2015 IEEE SECURITY AND PRIVACY WORKSHOPS (SPW), P125, DOI 10.1109/SPW.2015.32
   Rapid7, 2020, MET VULN EXPL DAT
   Serebryany K, 2017, STRUCTURE AWARE FUZZ
   Serebryany Kostya, 2017, OSS-Fuzz-Google's continuous fuzzing service for open source software
   Somorovsky J, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1492, DOI 10.1145/2976749.2978411
   Synopsis Inc, 2020, DEF FUZZ TEST
   Pham VT, 2020, IEEE INT CONF SOFTW, P460, DOI 10.1109/ICST46399.2020.00062
   Wheeler DA., 2020, PREVENT NEXT HEARTBL
   Zalewski Michal, 2021, American Fuzzy Lop
NR 47
TC 10
Z9 12
U1 2
U2 7
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2022
VL 27
IS 7
AR 191
DI 10.1007/s10664-022-10233-3
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 5B8PZ
UT WOS:000863832400001
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Tunkel, S
   Herbold, S
AF Tunkel, Steffen
   Herbold, Steffen
TI Exploring the relationship between performance metrics and cost saving
   potential of defect prediction models
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Defect prediction; Performance metrics; Cost saving potential;
   Exploratory research
ID RESEARCHER BIAS; SOFTWARE; CODE
AB Context: Performance metrics are a core component of the evaluation of any machine learning model and used to compare models and estimate their usefulness. Recent work started to question the validity of many performance metrics for this purpose in the context of software defect prediction. Objective: Within this study, we explore the relationship between performance metrics and the cost saving potential of defect prediction models. We study whether performance metrics are suitable proxies to evaluate the cost saving capabilities and derive a theory for the relationship between performance metrics and cost saving potential. Methods: We measure performance metrics and cost saving potential in defect prediction experiments. We use a multinomial logit model, decision, and random forest to model the relationship between the metrics and the cost savings. Results: We could not find a stable relationship between cost savings and performance metrics. We attribute the lack of the relationship to the inability of performance metrics to account for the property that a small proportion of very large software artifacts are the main driver of the costs. fact that performance metrics are incapable of accurately considering the costs associate with individual artifacts, which is required due to the exponential distribution of artifact sizes. Conclusion: Any defect prediction study interested in finding the best prediction model, must consider cost savings directly, because no reasonable claims regarding the economic benefits of defect prediction can be made otherwise.
C1 [Tunkel, Steffen] Univ Goettingen, Inst Comp Sci, Gottingen, Germany.
   [Herbold, Steffen] Tech Univ Clausthal, Inst Software & Syst Engn, Clausthal Zellerfeld, Germany.
C3 University of Gottingen; TU Clausthal
RP Herbold, S (corresponding author), Tech Univ Clausthal, Inst Software & Syst Engn, Clausthal Zellerfeld, Germany.
EM steffen.tunkel@stud.uni-goettingen.de; steffen.herbold@tu-clausthal.de
OI Herbold, Steffen/0000-0001-9765-2803
FU Projekt DEAL
FX Open Access funding enabled and organized by Projekt DEAL.
CR Agrawal A, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1050, DOI 10.1145/3180155.3180197
   Al Mamun MA, 2019, EMPIR SOFTW ENG, V24, P2764, DOI 10.1007/s10664-019-09714-9
   Amasaki S, 2020, EMPIR SOFTW ENG, V25, P1573, DOI 10.1007/s10664-019-09777-8
   Arisholm E, 2006, P 5 ACM IEEE INT S E
   Bangash AA, 2020, EMPIR SOFTW ENG, V25, P5047, DOI 10.1007/s10664-020-09878-9
   Breiman L, 2001, MACH LEARN, V45, P5, DOI 10.1023/A:1010933404324
   Canfora G, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P252, DOI 10.1109/ICST.2013.38
   Cook T. D., 1979, Quasi-experimentation: Design analysis issues for field settings
   Cruz AEC, 2009, INT SYMP EMP SOFTWAR, P461
   Drummond C, 2006, MACH LEARN, V65, P95, DOI 10.1007/s10994-006-8199-5
   Fernández-Delgado M, 2014, J MACH LEARN RES, V15, P3133
   Feurer M, 2015, ADV NEUR IN, V28
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   He P, 2015, INFORM SOFTWARE TECH, V59, P170, DOI 10.1016/j.infsof.2014.11.006
   Hemmati H, 2015, J SYST SOFTWARE, V103, P412, DOI 10.1016/j.jss.2014.11.040
   Herbold S, 2017, Arxiv, DOI arXiv:1707.09281
   Herbold S, 2017, Arxiv, DOI arXiv:1705.06429
   Herbold S, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10092-4
   Herbold S, 2021, IEEE T SOFTWARE ENG, V47, P2617, DOI 10.1109/TSE.2019.2957794
   Herbold S, 2018, IEEE T SOFTWARE ENG, V44, P811, DOI 10.1109/TSE.2017.2724538
   Herbold S, 2015, 2015 30th IEEE/ACM International Conference on Automated Software Engineering Workshop (ASEW), P90, DOI 10.1109/ASEW.2015.8
   Hosseini S, 2019, IEEE T SOFTWARE ENG, V45, P111, DOI 10.1109/TSE.2017.2770124
   Huang CL, 2007, EXPERT SYST APPL, V33, P847, DOI 10.1016/j.eswa.2006.07.007
   Jiarpakdee J, 2022, IEEE T SOFTWARE ENG, V48, P166, DOI 10.1109/TSE.2020.2982385
   Jureczko M., 2010, P 6 INT C PREDICTIVE
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kawata K, 2015, 3RD INTERNATIONAL CONFERENCE ON APPLIED COMPUTING AND INFORMATION TECHNOLOGY (ACIT 2015) 2ND INTERNATIONAL CONFERENCE ON COMPUTATIONAL SCIENCE AND INTELLIGENCE (CSI 2015), P2, DOI 10.1109/ACIT-CSI.2015.104
   Khoshgoftaar T. M., 1998, Empirical Software Engineering, V3, P275, DOI 10.1023/A:1009736205722
   Lewis C, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P372, DOI 10.1109/ICSE.2013.6606583
   Liu Y, 2010, IEEE T SOFTWARE ENG, V36, P852, DOI 10.1109/TSE.2010.51
   Lockhart R, 2014, ANN STAT, V42, P413, DOI 10.1214/13-AOS1175
   Luque A, 2019, PATTERN RECOGN, V91, P216, DOI 10.1016/j.patcog.2019.02.023
   McFadden D., 1974, Frontiers in econometrics, DOI DOI 10.1108/EB028592
   Morasca S, 2020, EMPIR SOFTW ENG, V25, P3977, DOI 10.1007/s10664-020-09861-4
   Nam J, 2018, IEEE T SOFTWARE ENG, V44, P874, DOI 10.1109/TSE.2017.2720603
   Nam J, 2015, IEEE INT CONF AUTOM, P452, DOI 10.1109/ASE.2015.56
   Ohlsson N, 1996, IEEE T SOFTWARE ENG, V22, P886, DOI 10.1109/32.553637
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Peters F, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P801, DOI 10.1109/ICSE.2015.92
   Peters F, 2013, IEEE T SOFTWARE ENG, V39, P1054, DOI 10.1109/TSE.2013.6
   PRAAGMAN J, 1985, EUR J OPER RES, V19, P144, DOI 10.1016/0377-2217(85)90321-2
   Qing A., 2009, Differential Evolution, DOI DOI 10.1002/9780470823941.CH2
   Rahman F, 2012, P ACM SIGSOFT 20 INT, DOI 10.1145/2393596.2393669
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Shepperd M, 2018, IEEE T SOFTWARE ENG, V44, P1129, DOI 10.1109/TSE.2017.2731308
   Shepperd M, 2014, IEEE T SOFTWARE ENG, V40, P603, DOI 10.1109/TSE.2014.2322358
   Shihab E, 2013, INFORM SOFTWARE TECH, V55, P1981, DOI 10.1016/j.infsof.2013.06.002
   Spearman C, 1904, AM J PSYCHOL, V15, P72, DOI 10.2307/1412159
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Tantithamthavorn C, 2016, PROC INT CONF SOFTW, P321, DOI 10.1145/2884781.2884857
   Tantithamthavorn C, 2016, IEEE T SOFTWARE ENG, V42, P1092, DOI 10.1109/TSE.2016.2553030
   Tunkel S, 2022, Arxiv, DOI arXiv:2104.00566
   Turhan B, 2013, INFORM SOFTWARE TECH, V55, P1101, DOI 10.1016/j.infsof.2012.10.003
   Watanabe S., 2008, P INT C SOFTW ENG, P19, DOI [10.1145/1370788.1370794, DOI 10.1145/1370788.1370794]
   Yao JX, 2021, INFORM SOFTWARE TECH, V139, DOI 10.1016/j.infsof.2021.106664
   Zhang F, 2016, EMPIR SOFTW ENG, V21, P2107, DOI 10.1007/s10664-015-9396-2
   Zhang Y, 2015, P INT COMP SOFTW APP, P264, DOI 10.1109/COMPSAC.2015.58
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
NR 59
TC 2
Z9 2
U1 1
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2022
VL 27
IS 7
AR 182
DI 10.1007/s10664-022-10224-4
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4X1CH
UT WOS:000860587600001
OA Green Published, hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Klotins, E
   Gorschek, T
   Sundelin, K
   Falk, E
AF Klotins, Eriks
   Gorschek, Tony
   Sundelin, Katarina
   Falk, Erik
TI Towards cost-benefit evaluation for continuous software engineering
   activities
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Continuous Integration; Continuous Delivery; Continuous Software
   Engineering; Cost-benefit analysis
ID CONTINUOUS INTEGRATION; CONTINUOUS DELIVERY; CONTINUOUS DEPLOYMENT;
   AGILE PRACTICES; BIG DATA; MANAGEMENT; DEVOPS; MODEL; ARCHITECTURE;
   CHALLENGES
AB Context: Software companies must become better at delivering software to remain relevant in the market. Continuous integration and delivery practices promise to streamline software deliveries to end-users by implementing an automated software development and delivery pipeline. However, implementing or retrofitting an organization with such a pipeline is a substantial investment, while the reporting on benefits and their relevance in specific contexts/domains are vague. Aim: In this study, we explore continuous software engineering practices from an investment-benefit perspective. We identify what benefits can be attained by adopting continuous practices, what the associated investments and risks are, and analyze what parameters determine their relevance. Method: We perform a multiple case study to understand state-of-practice, organizational aims, and challenges in adopting continuous software engineering practices. We compare state-of-practice with state-of-the-art to validate the best practices and identify relevant gaps for further investigation. Results: We found that companies start the CI/CD adoption by automating and streamlining the internal development process with clear and immediate benefits. However, upgrading customers to continuous deliveries is a major obstacle due to existing agreements and customer push-back. Renegotiating existing agreements comes with a risk of losing customers and disrupting the whole organization. Conclusions: We conclude that the benefits of CI/CD are overstated in literature without considering the contextual and domain complexities rendering some benefits infeasible. We identify the need to understand the customer and organizational perspectives further and understand the contextual requirements towards the CI/CD.
C1 [Klotins, Eriks; Gorschek, Tony] Blekinge Inst Technol, Software Engn Res Lab, Karlskrona, Sweden.
   [Gorschek, Tony] Fortiss, Munich, Germany.
   [Sundelin, Katarina] Ericsson AB Karlskrona, Karlskrona, Sweden.
   [Falk, Erik] Telia Co Uppsala, Uppsala, Sweden.
C3 Blekinge Institute Technology; fortiss
RP Klotins, E (corresponding author), Blekinge Inst Technol, Software Engn Res Lab, Karlskrona, Sweden.
EM eriks.klotins@bth.se
FU KKS foundation
FX The authors would like to thank all study participants for their time
   dedicated to this study. We would like to acknowledge that this work was
   supported by the KKS foundation through the S.E.R.T. Research Profile
   project at Blekinge Institute of Technology.
CR Alahyari H, 2019, INFORM SOFTWARE TECH, V105, P78, DOI 10.1016/j.infsof.2018.08.006
   Alahyari H, 2017, J SYST SOFTWARE, V125, P271, DOI 10.1016/j.jss.2016.12.007
   Anderson J, 2019, INFORM SOFTWARE TECH, V113, P110, DOI 10.1016/j.infsof.2019.05.008
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   Balalaie A, 2016, IEEE SOFTWARE, V33, P42, DOI 10.1109/MS.2016.64
   Boehm B., 2003, ACM SIGSOFT SOFTWARE, V28, P4, DOI 10.1145/638750.638776
   Bosch J, 2012, LECT NOTES BUS INF P, V114, P27
   Carriere J., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P149, DOI 10.1145/1810295.1810317
   Chen LP, 2018, 2018 IEEE 15TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P39, DOI 10.1109/ICSA.2018.00013
   Chen LP, 2017, J SYST SOFTWARE, V128, P72, DOI 10.1016/j.jss.2017.02.013
   Chen Lin, 2018, IEEE Engineering Management Review, V46, P16, DOI 10.1109/EMR.2018.2810099
   Claps GG, 2015, INFORM SOFTWARE TECH, V57, P21, DOI 10.1016/j.infsof.2014.07.009
   Cole R., 2002, TOTAL QUAL MANAGE, V13, P1051, DOI DOI 10.1080/09544120200000001
   Dännart S, 2019, LECT NOTES COMPUT SC, V11483, P529, DOI 10.1007/978-3-030-21290-2_33
   Del Rosso C, 2006, J SOFTW MAINT EVOL-R, V18, P351, DOI 10.1002/smr.337
   Dreze J., 1987, HDB PUBLIC EC, VII
   Dubey A., 2007, Delivering Software as a Service
   Dutta S, 2012, PROCEEDINGS OF THE 2012 INTERNATIONAL CONFERENCE ON COMMUNICATIONS, DEVICES AND INTELLIGENT SYSTEMS (CODLS), P1, DOI 10.1109/CODIS.2012.6422121
   Ehlers J., 2011, P 8 ACM INT C AUT CO
   Elazhary O., 2021, IEEE T SOFTW ENG
   Fabijan A, 2017, PROC INT CONF SOFTW, P770, DOI 10.1109/ICSE.2017.76
   Fagerholm F, 2017, J SYST SOFTWARE, V123, P292, DOI 10.1016/j.jss.2016.03.034
   Fatima Anosh, 2017, International Journal of Information Technology and Computer Science, V9, P50, DOI 10.5815/ijitcs.2017.03.06
   Feitelson DG, 2013, IEEE INTERNET COMPUT, V17, P8, DOI 10.1109/MIC.2013.25
   Felidré W, 2019, INT SYMP EMP SOFTWAR, P192, DOI 10.1109/ESEM.2019.8870152
   Fitzgerald Brian, 2013, 2013 35th International Conference on Software Engineering (ICSE), P863, DOI 10.1109/ICSE.2013.6606635
   Fitzgerald B., 2014, P 1 INT WORKSH RAP C, P1, DOI DOI 10.1145/2593812.2593813
   Fitzgerald B, 2017, J SYST SOFTWARE, V123, P176, DOI 10.1016/j.jss.2015.06.063
   Fowler M., 2001, Software Development, V9, P28
   Frank M., 2000, Systems Engineering, V3, P163, DOI [DOI 10.1002/1520-6858(200033)3:3ANDLT;163::AID-SYS5ANDGT;3.0.CO;2-T, DOI 10.1002/1520-6858(200033)3:3<163::AID-SYS5>3.3.CO;2-K, 10.1002/1520-6858(200033)3:3<163::aid-sys5>3.3.co;2-k]
   Frow N, 2010, ACCOUNT ORG SOC, V35, P444, DOI 10.1016/j.aos.2009.10.003
   Gardner SR, 1998, COMMUN ACM, V41, P52, DOI 10.1145/285070.285080
   Garousi V, 2016, IEEE SOFTWARE, V33, P68, DOI 10.1109/MS.2016.30
   Gefen D, 2003, MIS QUART, V27, P51, DOI 10.2307/30036519
   Genc-Nayebi N, 2017, J SYST SOFTWARE, V125, P207, DOI 10.1016/j.jss.2016.11.027
   Giardino C, 2016, IEEE T SOFTWARE ENG, V42, P585, DOI 10.1109/TSE.2015.2509970
   Gustafsson A, 2005, J MARKETING, V69, P210, DOI 10.1509/jmkg.2005.69.4.210
   Guzman Emitza, 2017, 2017 IEEE/ACM 4th International Workshop on CrowdSourcing in Software Engineering (CSI-SE). Proceedings, P21, DOI 10.1109/CSI-SE.2017.4
   Hanelt A, 2021, J MANAGE STUD, V58, P1159, DOI 10.1111/joms.12639
   Hasselbring Wilhelm, 2017, 2017 IEEE International Conference on Software Architecture: Workshops (ICSAW), P243, DOI 10.1109/ICSAW.2017.11
   Hazzan O., 2009, Agile software engineering
   Hilton M, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P197, DOI 10.1145/3106237.3106270
   Hilton M, 2016, IEEE INT CONF AUTOM, P426, DOI 10.1145/2970276.2970358
   Huang X, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1207, DOI 10.1145/3180155.3180235
   Humble J., 2018, ACCELERATE SCI LEAN
   Isaak J, 2018, COMPUTER, V51, P56, DOI 10.1109/MC.2018.3191268
   Jalali S, 2012, J SOFTW-EVOL PROC, V24, P643, DOI 10.1002/smr.561
   Jiang J, 2017, INFORM SOFTWARE TECH, V84, P48, DOI 10.1016/j.infsof.2016.10.006
   Johnson PM, 2005, IEEE SOFTWARE, V22, P76, DOI 10.1109/MS.2005.95
   Kasurinen Jussi, 2010, Advances in Software Engineering, DOI 10.1155/2010/620836
   Khurum M, 2013, J SOFTW-EVOL PROC, V25, P711, DOI 10.1002/smr.1560
   KING JL, 1978, COMPUT SURV, V10, P19, DOI 10.1145/356715.356718
   Kitchenham Barbara, 2004, Joint Technical Report, V2004, P1
   Kumar D, 2016, PROCEDIA COMPUT SCI, V79, P8, DOI 10.1016/j.procs.2016.03.003
   Kuula S., 2017, Service Business Model Innovation in Healthcare and Hospital Management, P249
   Lacoste FJ, 2009, AGILE 2009 CONFERENCE, P387, DOI 10.1109/AGILE.2009.35
   Lam W, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P101, DOI 10.1145/3293882.3330570
   Laukkanen E, 2017, INFORM SOFTWARE TECH, V82, P55, DOI 10.1016/j.infsof.2016.10.001
   Laukkanen E, 2015, 2015 AGILE CONFERENCE, P11, DOI 10.1109/Agile.2015.15
   Lehtola L, 2009, REQUIR ENG, V14, P113, DOI 10.1007/s00766-009-0078-8
   Letier E, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P883, DOI 10.1145/2568225.2568239
   Li YZ, 2010, J SYST SOFTWARE, V83, P1726, DOI 10.1016/j.jss.2010.04.077
   Lianping Chen, 2015, IEEE Software, V32, P50, DOI 10.1109/MS.2015.27
   Loebbecke C, 2015, J STRATEGIC INF SYST, V24, P149, DOI 10.1016/j.jsis.2015.08.002
   Lohan G., 2013, Lean Enterprise Software and Systems, P81
   Mäkinen S, 2016, INFORM SOFTWARE TECH, V80, P175, DOI 10.1016/j.infsof.2016.09.001
   Maresova P, 2017, APPL ECON, V49, P521, DOI 10.1080/00036846.2016.1200188
   Martin R. C., 2002, AGILE SOFTWARE DEV P
   McHugh Martin., 2013, International Conference on Software Process Improvement and Capability Determination, P199, DOI [10.1007/ 978-3-642-38833-0_18, DOI 10.1007/978-3-642-38833-0_18]
   Memon A, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P233, DOI 10.1109/ICSE-SEIP.2017.16
   Meyer M, 2014, IEEE SOFTWARE, V31, P14, DOI 10.1109/MS.2014.58
   Moyon F, 2018, PROCEEDINGS 2018 IEEE/ACM 4TH INTERNATIONAL WORKSHOP ON RAPID CONTINUOUS SOFTWARE ENGINEERING (RCOSE), P31, DOI 10.1145/3194760.3194767
   Neely S, 2013, 2013 AGILE CONFERENCE (AGILE), P121, DOI 10.1109/AGILE.2013.17
   O'Connor RV, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1866
   Olsson HH, 2012, EUROMICRO CONF PROC, P392, DOI 10.1109/SEAA.2012.54
   Olsson T., 2018, INT WORK C REQ ENG F, P173
   Ouriques RAB, 2019, INT J SOFTW ENG KNOW, V29, P345, DOI 10.1142/S0218194019500153
   Petersen K, 2008, 12 INT C EV ASS SOFT, P1, DOI 10.5555/2227115.2227123
   Pinto G, 2018, SOFTWARE PRACT EXPER, V48, P2223, DOI 10.1002/spe.2637
   Poppendieck M., 2011, IT Management Select, V18, P1
   Poppendieck M., 2003, Lean Software Development: An Agile Tollkit
   Provost F, 2013, BIG DATA, V1, P51, DOI 10.1089/big.2013.1508
   Rahm E., 2000, IEEE Data Eng. Bull, V23, P3, DOI [10.1145/1317331.1317341, DOI 10.1145/1317331.1317341]
   Raulamo-Jurvanen P., 2017, P 21 INT C EV ASS SO, P21, DOI DOI 10.1145/3084226.3084252
   Riaz M, 2009, COMM COM INF SC, V59, P119
   Rodriguez Pilar, 2012, Product-Focused Software Process Improvement. Proceedings 13th International Conference (PROFES 2012), P145, DOI 10.1007/978-3-642-31063-8_12
   Rodriguez P, 2017, J SYST SOFTWARE, V123, P263, DOI 10.1016/j.jss.2015.12.015
   Rogers RO, 2004, LECT NOTES COMPUT SC, V3092, P68
   Romano NC, 2010, EUR J INFORM SYST, V19, P117, DOI 10.1057/ejis.2010.17
   Ryals L, 2005, J MARKETING, V69, P252, DOI 10.1509/jmkg.2005.69.4.252
   Sassone Peter G., 1978, Cost-benefit analysis: a handbook, V182
   Senapathi M., 2018, ser. EASE'18, P57
   Seojin Kim, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P423, DOI 10.1109/ASE.2008.64
   Serrat O., 2017, KNOWLEDGE SOLUTIONS, P711, DOI [10.1007/978-981-10-0983-9_77, DOI 10.1007/978-981-10-0983-9_77]
   Shahin M, 2017, INT SYMP EMP SOFTWAR, P111, DOI 10.1109/ESEM.2017.18
   Shahin M, 2019, EMPIR SOFTW ENG, V24, P1061, DOI 10.1007/s10664-018-9651-4
   Shahin M, 2017, IEEE ACCESS, V5, P3909, DOI 10.1109/ACCESS.2017.2685629
   Shamshiri S, 2015, IEEE INT CONF AUTOM, P201, DOI 10.1109/ASE.2015.86
   Sidky A, 2007, INNOV SYST SOFTW ENG, V3, P203, DOI 10.1007/s11334-007-0026-z
   Stolberg S, 2009, AGILE 2009 CONFERENCE, P369, DOI 10.1109/AGILE.2009.16
   Sturtevant D, 2018, IEEE SOFTWARE, V35, P104, DOI 10.1109/MS.2017.4541034
   Sundelin A, 2020, 2020 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT, TECHDEBT, P67, DOI 10.1145/3387906.3388629
   Sundelin A, 2018, LECT NOTES COMPUT SC, V11271, P219, DOI 10.1007/978-3-030-03673-7_16
   Susarla A, 2009, J MANAGE INFORM SYST, V26, P205, DOI 10.2753/MIS0742-1222260209
   Tómasdóttir KF, 2017, IEEE INT CONF AUTOM, P578, DOI 10.1109/ASE.2017.8115668
   van Hoorn A., 2009, Continuous monitoring of software services: Design and application of the Kieker framework
   Vasilescu B, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P805, DOI 10.1145/2786805.2786850
   Wiklund K, 2017, SOFTW TEST VERIF REL, V27, DOI 10.1002/stvr.1639
   Williams L, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P34, DOI 10.1109/ISSRE.2003.1251029
   Williams Laurie, 2009, 2009 20th International Symposium on Software Reliability Engineering (ISSRE 2009), P81, DOI 10.1109/ISSRE.2009.32
   Yaman SG, 2016, LECT NOTES COMPUT SC, V9619, P249, DOI 10.1007/978-3-319-30282-9_18
   Yu L, 2020, INFORM SOFTWARE TECH, V117, DOI 10.1016/j.infsof.2019.106199
   Zhang DP, 2018, ACSR ADV COMPUT, V77, P275
   Zhu LM, 2016, IEEE SOFTWARE, V33, P32, DOI 10.1109/MS.2016.81
NR 114
TC 5
Z9 5
U1 7
U2 17
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2022
VL 27
IS 6
AR 157
DI 10.1007/s10664-022-10191-w
PG 40
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 3U8UM
UT WOS:000841240000001
OA hybrid
DA 2024-07-18
ER

PT J
AU Moreira, RAF
   Assunçao, WKG
   Martinez, J
   Figueiredo, E
AF Ferreira Moreira, Rodrigo Andre
   Assuncao, Wesley K. G.
   Martinez, Jabier
   Figueiredo, Eduardo
TI Open-source software product line extraction processes: the ArgoUML-SPL
   and Phaser cases
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software product lines; Re-engineering; Mining software repositories;
   ArgoUML; Phaser
ID SOURCE CODE; VARIABILITY; EVOLUTION; REUSE
AB Software Product Lines (SPLs) are rarely developed from scratch. Commonly, they emerge from one product when there is a need to create tailored variants, or from existing variants created in an ad-hoc way once their separated maintenance and evolution become challenging. Despite the vast literature about re-engineering systems into SPLs and related technical approaches, there is a lack of detailed analysis of the process itself and the effort involved. In this paper, we provide and analyze empirical data of the extraction processes of two open-source case studies, namely ArgoUML and Phaser. Both cases emerged from the transition of a monolithic system into an SPL. The analysis relies on information mined from the version control history of their respective source-code repositories and the discussion with developers that took part in the process. Unlike previous works that focused mostly on the structural results of the final SPL, the contribution of this study is an in-depth characterization of the processes. With this work, we aimed at providing a deeper understanding of the strategies for SPL extraction and their implications. Our results indicate that the source code changes can range from almost a fourth to over half of the total lines of code. Developers may or may not use branching strategies for feature extraction. Additionally, the problems faced during the extraction process may be due to lack of tool support, complexity on managing feature dependencies and issues with feature constraints. We made publicly available the datasets and the analysis scripts of both case studies to be used as a baseline for extractive SPL adoption research and practice.
C1 [Ferreira Moreira, Rodrigo Andre; Figueiredo, Eduardo] Fed Univ Minas Gerais UFMG, Belo Horizonte, MG, Brazil.
   [Assuncao, Wesley K. G.] Johannes Kepler Univ Linz JKU, Inst Software Syst Engn, Linz, Austria.
   [Assuncao, Wesley K. G.] Pontifical Catholic Univ Rio de Janeiro PUC Rio, Rio De Janeiro, Brazil.
   [Martinez, Jabier] Basque Res & Technol Alliance BRTA, Tecnalia, Derio, Spain.
C3 Universidade Federal de Minas Gerais; Johannes Kepler University Linz;
   Pontificia Universidade Catolica do Rio de Janeiro
RP Assunçao, WKG (corresponding author), Johannes Kepler Univ Linz JKU, Inst Software Syst Engn, Linz, Austria.; Assunçao, WKG (corresponding author), Pontifical Catholic Univ Rio de Janeiro PUC Rio, Rio De Janeiro, Brazil.
EM radro.rs@gmail.com; wesleyklewerton@gmail.com;
   jabier.martinez@tecnalia.com; figueiredo@dcc.ufmg.br
RI Assuncao, Wesley Klewerton Guez/AAA-8331-2020
OI Assuncao, Wesley Klewerton Guez/0000-0002-7557-9091; Martinez,
   Jabier/0000-0001-8742-9640
FU Johannes Kepler University Linz
FX Open access funding provided by Johannes Kepler University Linz.
CR AL-Msie'deen Ra'Fat, 2013, Safe and Secure Software Reuse. 13th International Conference on Software Reuse, ICSR 2013. Proceedings: LNCS 7925, P302, DOI 10.1007/978-3-642-38977-1_22
   Ali MS, 2009, 2009 35TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, PROCEEDINGS, P275, DOI 10.1109/SEAA.2009.89
   Ali N., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P153, DOI 10.1109/ICSM.2011.6080782
   [Anonymous], 2005, ADDISON WESLEY OBJEC
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   Apel S, 2009, PROC INT CONF SOFTW, P221, DOI 10.1109/ICSE.2009.5070523
   Apel Sven., 2013, P 5 INT WORKSHOP FEA, P1, DOI [10.1145/2528265.2528267, DOI 10.1145/2528265.2528267]
   Assunçao WKG, 2020, INFORM SOFTWARE TECH, V117, DOI 10.1016/j.infsof.2019.106198
   Assunçao WKG, 2017, EMPIR SOFTW ENG, V22, P2972, DOI 10.1007/s10664-017-9499-z
   Babar MA, 2010, IEEE SOFTWARE, V27, P89, DOI 10.1109/MS.2010.77
   Batory D, 2004, IEEE T SOFTWARE ENG, V30, P355, DOI 10.1109/TSE.2004.23
   Berger Thorsten, 2013, 7 INT WORKSH VAR MOD, DOI DOI 10.1145/2430502.2430513
   Couto M., 2010, THESIS PONTIFICAL CA
   Couto MV, 2011, EUR CON SFTWR MTNCE, P191, DOI 10.1109/CSMR.2011.25
   Dhungana D, 2011, AUTOMAT SOFTW ENG, V18, P77, DOI 10.1007/s10515-010-0076-6
   Dit B, 2013, J SOFTW-EVOL PROC, V25, P53, DOI 10.1002/smr.567
   Dueñas S, 2018, PROC IEEE ACM INT C, P1, DOI 10.1145/3183440.3183475
   Engström E, 2011, INFORM SOFTWARE TECH, V53, P2, DOI 10.1016/j.infsof.2010.05.011
   Eyal-Salman Hamzeh, 2013, 2013 IEEE 14th International Conference on Information Reuse & Integration (IRI), P209, DOI 10.1109/IRI.2013.6642474
   Eyal-Salman Hamzeh, 2013, 2013 39th Euromicro Conference on Software Engineering and Advanced Applications (SEAA), P57, DOI 10.1109/SEAA.2013.65
   Eyal-Salman H., 2013, 1 INT WORKSHOP REVER, P17
   Eyal-Salman H., 2014, SEKE: Software Engineering and Knowledge Engineering, P426
   Fischer S, 2020, EMPIR SOFTW ENG, V25, P5295, DOI 10.1007/s10664-020-09884-x
   Fischer S, 2014, PROC IEEE INT CONF S, P391, DOI 10.1109/ICSME.2014.61
   Gang Zhang, 2011, 2011 IEEE 27th International Conference on Software Maintenance, P418, DOI 10.1109/ICSM.2011.6080809
   Hariri N, 2013, IEEE T SOFTWARE ENG, V39, P1736, DOI 10.1109/TSE.2013.39
   Hassan AE, 2008, 2008 FRONTIERS OF SOFTWARE MAINTENANCE, P48, DOI 10.1109/FOSM.2008.4659248
   Horcas JM, 2020, SPLC'19: PROCEEDINGS OF THE 23RD INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL A, P164, DOI 10.1145/3336294.3336304
   Hu Y, 2000, PROC IEEE INT CONF S, P196
   Kästner C, 2014, IEEE T SOFTWARE ENG, V40, P67, DOI 10.1109/TSE.2013.45
   Kästner C, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P311, DOI 10.1145/1368088.1368131
   Kang Kyo C, 1990, Technical Report
   Kastner C., 2011, 012011 PHIL U MARB D
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Klatt B., 2014, THESIS KARLSRUHE I T
   Klatt B, 2014, PROC IEEE INT CONF S, P496, DOI 10.1109/ICSME.2014.81
   Knodel J, 2005, 1 INT WORKSH REENG T, P21
   Kolb R, 2006, J SOFTW MAINT EVOL-R, V18, P109, DOI 10.1002/smr.329
   Krueger CW, 2002, LECT NOTES COMPUT SC, V2290, P282
   Laguna MA, 2013, SCI COMPUT PROGRAM, V78, P1010, DOI 10.1016/j.scico.2012.05.003
   Linsbauer L, 2014, LECT NOTES COMPUT SC, V8636, P153
   Linsbauer Lukas., 2013, P 17 INT SOFTW PROD, P131
   Mahdavi-Hezaveh R, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09901-z
   Marques M, 2019, INFORM SOFTWARE TECH, V105, P190, DOI 10.1016/j.infsof.2018.08.014
   Martinez Jabier, 2020, SPLC '20: Proceedings of the 24th ACM Conference on Systems and Software Product Line: Volume A, DOI 10.1145/3382025.3414971
   Martinez J, 2018, SPLC'18: PROCEEDINGS OF THE 22ND INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL 1, P257, DOI 10.1145/3233027.3236402
   Martinez J, 2017, 21ST INTERNATIONAL SYSTEM & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 2, P38, DOI 10.1145/3109729.3109748
   Martinez J, 2015, IEEE INT CONF AUTOM, P396, DOI 10.1109/ASE.2015.44
   Martinez Jabier, 2016, SPLC, P119
   Martinez WKG, 2021, SBQS 2021
   Meinicke J, 2017, MASTERING SOFTWARE V, DOI DOI 10.1007/978-3-319-61443-4
   Michelon Gabriela K., 2021, GPCE 2021: Proceedings of the 20th ACM SIGPLAN International Conference on Generative Programming: Concepts and Experiences, P2, DOI 10.1145/3486609.3487195
   Michelon GK, 2021, SPLC '21: PROCEEDINGS OF THE 25TH ACM INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL A, DOI 10.1145/3461001.3473065
   Michelon GK., 2021, 15 INT WORK C VAR MO
   Northrop L., 2012, FRAMEWORK SOFTWARE P
   Olszak A, 2012, SCI COMPUT PROGRAM, V77, P131, DOI 10.1016/j.scico.2010.10.007
   Otsuka J, 2011, 15 INT SOFTWARE PROD, V2, p20:1
   Photon Storm Ltd, 2021, PHAS DESKT MOB HTML5
   Prehofer C, 2001, CONCURR COMP-PRACT E, V13, P465, DOI 10.1002/cpe.583
   Rubin J., 2013, Domain Engineering, P29, DOI DOI 10.1007/978-3-642-36654-3
   Santos AR, 2016, 20 INT SYST SOFTW PR, P154, DOI [10.1145/2934466.2934486, DOI 10.1145/2934466.2934486]
   Schaefer I, 2010, LECT NOTES COMPUT SC, V6287, P77, DOI 10.1007/978-3-642-15579-6_6
   Schultheiss A, 2021, 24TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2021), P1, DOI 10.1109/MODELS50736.2021.00010
   Strüber D, 2020, SPLC'19: PROCEEDINGS OF THE 23RD INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL A, P177, DOI 10.1145/3336294.3336302
   Van Solingen Rini, 2002, ENCY SOFTWARE ENG, V2002, P528
   Wohlin C., 2012, Experimentation in Software Engineering
   Wolfart D., 2019, P LAT SCI LAT
   Yang YM, 2009, WORK CONF REVERSE EN, P215, DOI 10.1109/WCRE.2009.15
   Ziadi T, 2018, IEEE INT C ENG COMP, P221, DOI 10.1109/ICECCS2018.2018.00037
   Ziadi T, 2012, EUR CON SFTWR MTNCE, P417, DOI 10.1109/CSMR.2012.52
NR 70
TC 3
Z9 3
U1 0
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2022
VL 27
IS 4
AR 85
DI 10.1007/s10664-021-10104-3
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0I7MA
UT WOS:000779599100002
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Shin, D
   Bianculli, D
   Briand, L
AF Shin, Donghwan
   Bianculli, Domenico
   Briand, Lionel
TI PRINS: scalable model inference for component-based system logs
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Logs; Model inference; Component-based system
AB Behavioral software models play a key role in many software engineering tasks; unfortunately, these models either are not available during software development or, if available, quickly become outdated as implementations evolve. Model inference techniques have been proposed as a viable solution to extract finite state models from execution logs. However, existing techniques do not scale well when processing very large logs that can be commonly found in practice. In this paper, we address the scalability problem of inferring the model of a component-based system from large system logs, without requiring any extra information. Our model inference technique, called PRINS, follows a divide-and-conquer approach. The idea is to first infer a model of each system component from the corresponding logs; then, the individual component models are merged together taking into account the flow of events across components, as reflected in the logs. We evaluated PRINS in terms of scalability and accuracy, using nine datasets composed of logs extracted from publicly available benchmarks and a personal computer running desktop business applications. The results show that PRINS can process large logs much faster than a publicly available and well-known state-of-the-art tool, without significantly compromising the accuracy of inferred models.
C1 [Shin, Donghwan; Bianculli, Domenico; Briand, Lionel] Univ Luxembourg, Esch Sur Alzette, Luxembourg.
   [Briand, Lionel] Univ Ottawa, Ottawa, ON, Canada.
C3 University of Luxembourg; University of Ottawa
RP Shin, D (corresponding author), Univ Luxembourg, Esch Sur Alzette, Luxembourg.
EM donghwan.shin@uni.lu; domenico.bianculli@uni.lu; lionel.briand@uni.lu
RI Bianculli, Domenico/AAD-8981-2019; Shin, Donghwan/N-2361-2019
OI Bianculli, Domenico/0000-0002-4854-685X; Shin,
   Donghwan/0000-0002-0840-6449; Briand, Lionel/0000-0002-1393-1010
FU Luxembourg National Research Fund (FNR) [C-PPP17/IS/11602677]; NSERC
FX This work has received funding from the Luxembourg National Research
   Fund (FNR) under grant agreement No C-PPP17/IS/11602677 and from the
   NSERC Discovery and Canada Research Chair programmes.
CR Aghajani E, 2019, PROC INT CONF SOFTW, P1199, DOI 10.1109/ICSE.2019.00122
   BESCHASTNIKH I., 2011, P 19 ACM SIGSOFT S 1, P267, DOI DOI 10.1145/2025113.2025151
   Beschastnikh I, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P468, DOI 10.1145/2568225.2568246
   Beschastnikh I, 2015, IEEE T SOFTWARE ENG, V41, P408, DOI 10.1109/TSE.2014.2369047
   BIERMANN AW, 1972, IEEE T COMPUT, VC 21, P592, DOI 10.1109/TC.1972.5009015
   Busany N, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P887, DOI 10.1109/ASE.2019.00087
   Busany N, 2016, PROC INT CONF SOFTW, P877, DOI 10.1145/2884781.2884805
   CHENG KT, 1993, ACM IEEE D, P86
   Chun-Nan Liu, 2016, 2016 International Symposium on VLSI Technology, Systems and Application (VLSI-TSA), P1, DOI 10.1109/VLSI-TSA.2016.7480474
   Clarke E. M., 2018, MODEL CHECKING
   Cohen H, 2015, IEEE INT CONF AUTOM, P93, DOI 10.1109/ASE.2015.62
   Cook J. E., 1998, ACM Transactions on Software Engineering and Methodology, V7, P215, DOI 10.1145/287000.287001
   Damas C, 2005, IEEE T SOFTWARE ENG, V31, P1056, DOI 10.1109/TSE.2005.138
   Dean J, 2008, COMMUN ACM, V51, P107, DOI 10.1145/1327452.1327492
   El-Masri D, 2020, INFORM SOFTWARE TECH, V122, DOI 10.1016/j.infsof.2020.106276
   Emam SS, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3196883
   Ernst MD, 2007, SCI COMPUT PROGRAM, V69, P35, DOI 10.1016/j.scico.2007.01.015
   Fraser G., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P300, DOI 10.1109/ICST.2012.110
   GOLD EM, 1967, INFORM CONTROL, V10, P447, DOI 10.1016/S0019-9958(67)91165-5
   He PJ, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2017), P33, DOI 10.1109/ICWS.2017.13
   He Shilin, 2020, LOGHUB LARGE COLLECT
   Heule MJH, 2013, EMPIR SOFTW ENG, V18, P825, DOI 10.1007/s10664-012-9222-z
   Hopcroft J. E., 2006, INTRO AUTOMATA THEOR
   Kumar S, 2012, PROC INT CONF SOFTW, P914, DOI 10.1109/ICSE.2012.6227128
   Kumar S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P91, DOI 10.1145/1985793.1985807
   Lang K. J., 1998, Grammatical Inference. 4th International Colloquium, ICGI-98. Proceedings, P1, DOI 10.1007/BFb0054059
   Luo C, 2017, SCI COMPUT PROGRAM, V145, P13, DOI 10.1016/j.scico.2017.04.004
   Mariani L, 2017, IEEE T SOFTWARE ENG, V43, P715, DOI 10.1109/TSE.2016.2623623
   Messaoudi S, 2018, INT C PROGRAM COMPRE, P167, DOI 10.1145/3196321.3196340
   Palmer JD, 2019, SIGDOC'19: PROCEEDINGS OF THE 37TH ACM INTERNATIONAL CONFERENCE ON THE DESIGN OF COMMUNICATION, DOI 10.1145/3328020.3353949
   Polyvyanyy A, 2008, IEEE INT ENTERP DIST, P325, DOI 10.1109/EDOC.2008.17
   Prasad NR, 2009, CMC-COMPUT MATER CON, V14, P1, DOI 10.1145/1541880.1541882
   Rios Nicolli, 2020, Requirements Engineering: Foundation for Software Quality. 26th International Working Conference, REFSQ 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12045), P55, DOI 10.1007/978-3-030-44429-7_4
   Varrette S, 2014, 2014 INTERNATIONAL CONFERENCE ON HIGH PERFORMANCE COMPUTING & SIMULATION (HPCS), P959, DOI 10.1109/HPCSim.2014.6903792
   Walkinshaw N., 2010, P 1 INT WORKSH MOD I, P1
   Walkinshaw N., 2018, MINTFRAMEWORK
   Walkinshaw N, 2016, EMPIR SOFTW ENG, V21, P811, DOI 10.1007/s10664-015-9367-7
   Walkinshaw N, 2013, EMPIR SOFTW ENG, V18, P791, DOI 10.1007/s10664-012-9210-3
   Wang S, 2015, ART SCI ANAL SOFTWAR, P623, DOI [10.1016/B978-0-12-411519-4.00021-5, DOI 10.1016/B978-0-12-411519-4.00021-5]
   Witten IH, 2011, MOR KAUF D, P1
   Zhu JM, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P121, DOI 10.1109/ICSE-SEIP.2019.00021
NR 41
TC 2
Z9 2
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2022
VL 27
IS 4
AR 87
DI 10.1007/s10664-021-10111-4
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0M2LQ
UT WOS:000781992600001
PM 35431614
OA Green Published, Green Accepted, hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Tu, H
   Menzies, T
AF Tu, Huy
   Menzies, Tim
TI DebtFree: minimizing labeling cost in self-admitted technical debt
   identification using semi-supervised learning
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Technical debt; Semi-supervised learning; Unsupervised learning;
   Labeling effort
ID STATIC CODE ATTRIBUTES; SOFTWARE CHANGES
AB Keeping track of and managing Self-Admitted Technical Debts (SATDs) is important for maintaining a healthy software project. Current active-learning SATD recognition tool involves manual inspection of 24% of the test comments on average to reach 90% of the recall. Among all the test comments, about 5% are SATDs. The human experts are then required to read almost a quintuple of the SATD comments which indicates the inefficiency of the tool. Plus, human experts are still prone to error: 95% of the false-positive labels from previous work were actually true positives. To solve the above problems, we propose DebtFree, a two-mode framework based on unsupervised learning for identifying SATDs. In mode1, when the existing training data is unlabeled, DebtFree starts with an unsupervised learner to automatically pseudo-label the programming comments in the training data. In contrast, in mode2 where labels are available with the corresponding training data, DebtFree starts with a pre-processor that identifies the highly prone SATDs from the test dataset. Then, our machine learning model is employed to assist human experts in manually identifying the remaining SATDs. Our experiments on 10 software projects show that both models yield statistically significant improvement in effectiveness over the state-of-the-art automated and semi-automated models. Specifically, DebtFree can reduce the labeling effort by 99% in mode1 (unlabeled training data), and up to 63% in mode2 (labeled training data) while improving the current active learner's F1 relatively to almost 100%.
C1 [Tu, Huy; Menzies, Tim] North Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
C3 North Carolina State University
RP Tu, H (corresponding author), North Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
EM hqtu@ncsu.edu; timm@ieee.org
RI Tu, Huy/IAP-4457-2023; Menzies, Tim/X-7680-2019
OI Tu, Huy/0000-0002-7843-252X; Menzies, Tim/0000-0002-5040-3196
FU NSF CISE Grant [1931425]; Direct For Computer & Info Scie & Enginr;
   Office of Advanced Cyberinfrastructure (OAC) [1931425] Funding Source:
   National Science Foundation
FX This work was partially funded by an NSF CISE Grant #1931425.
CR Agrawal A, 2014, ONTOLOGY TERMS TECHN
   Amershi S, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P291, DOI 10.1109/ICSE-SEIP.2019.00042
   [Anonymous], 2009, Technical report
   [Anonymous], 1987, Cytometry, DOI DOI 10.1002/CYTO.990080516
   [Anonymous], 1995, Empirical methods for artificial intelligence
   Bavota G, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P315, DOI [10.1109/MSR.2016.040, 10.1145/2901739.2901742]
   Breiman L, 2001, MACH LEARN, V45, P5, DOI 10.1023/A:1010933404324
   Catolino Gemma, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P201, DOI 10.1109/MOBILESoft.2017.58
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chen D, 2019, INT C PROGRAM COMPRE, P179, DOI 10.1109/ICPC.2019.00037
   Chicco D, 2020, BMC GENOMICS, V21, DOI 10.1186/s12864-019-6413-7
   COHEN J, 1968, PSYCHOL BULL, V70, P213, DOI 10.1037/h0026256
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   de Freitas Farias MA, 2020, IDENTIFYING SELF ADM
   de Freitas Farias MA, 2016, ICEIS
   Farias MAD, 2015, 2015 IEEE 7TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD) PROCEEDINGS, P25, DOI 10.1109/MTD.2015.7332621
   Feldt R, 2010, 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING & KNOWLEDGE ENGINEERING (SEKE 2010), P374
   Flisar J, 2019, IEEE ACCESS, V7, P106475, DOI 10.1109/ACCESS.2019.2933318
   Fontana F. A., 2012, Proceedings 2012 Third International Workshop on Managing Technical Debt (MTD 2012), P15, DOI 10.1109/MTD.2012.6225993
   Fu W, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P72, DOI 10.1145/3106237.3106257
   Fucci G, 2021, IEEE WORK CONF MIN S, P403, DOI 10.1109/MSR52588.2021.00052
   Graf J, 2010, IEEE INT WORK C SO, P105, DOI 10.1109/SCAM.2010.9
   Guo Z., 2019, MAT SIMPLE YET STRON
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Hata H, 2019, PROC INT CONF SOFTW, P1211, DOI 10.1109/ICSE.2019.00123
   Hindle A, 2008, WHAT LARGE COMMITS T
   Hosmer DW, 2013, WILEY SER PROBAB ST, P1, DOI 10.1002/9781118548387
   Huang Q, 2018, EMPIR SOFTW ENG, V23, P418, DOI 10.1007/s10664-017-9522-4
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kocaguneli E, 2013, IEEE T SOFTWARE ENG, V39, P1040, DOI 10.1109/TSE.2012.88
   Lim E, 2012, IEEE SOFTWARE, V29, P22, DOI 10.1109/MS.2012.130
   Liu ZX, 2018, PROC IEEE ACM INT C, P9, DOI 10.1145/3183440.3183478
   Lutz RR, 2004, IEEE T SOFTWARE ENG, V30, P172, DOI 10.1109/TSE.2004.1271171
   Maldonado ED, 2015, 2015 IEEE 7TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD) PROCEEDINGS, P9, DOI 10.1109/MTD.2015.7332619
   Maldonado ED, 2017, IEEE T SOFTWARE ENG, V43, P1044, DOI 10.1109/TSE.2017.2654244
   Marinescu R, 2004, PROC IEEE INT CONF S, P350, DOI 10.1109/ICSM.2004.1357820
   Marinescu R, 2012, IBM J RES DEV, V56, DOI 10.1147/JRD.2012.2204512
   Marinescu R, 2015, DANGER ARCHITECTURAL
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P637, DOI 10.1109/TSE.2007.70721
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Mockus A, 2000, PROC IEEE INT CONF S, P120, DOI 10.1109/ICSM.2000.883028
   Munaiah N, 2017, EMPIR SOFTW ENG, V22, P3219, DOI 10.1007/s10664-017-9512-6
   Nam J, 2015, IEEE INT CONF AUTOM, P452, DOI 10.1109/ASE.2015.56
   Nayrolles M, 2018, IEEE WORK CONF MIN S, P153, DOI 10.1145/3196398.3196438
   Ni C, 2022, IEEE T SOFTWARE ENG, V48, P786, DOI 10.1109/TSE.2020.3001739
   Nugroho A, 2011, SCIKIT LEARN MACHINE
   Petric J, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2916007
   Potdar A, 2014, PROC IEEE INT CONF S, P91, DOI 10.1109/ICSME.2014.31
   Rahman F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P432, DOI 10.1109/ICSE.2013.6606589
   Ren XX, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3324916
   Rosen C, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P966, DOI 10.1145/2786805.2803183
   Sawilowsky SS, 2009, J MOD APPL STAT METH, V8, P597, DOI 10.22237/jmasm/1257035100
   Shepperd M, 2013, DATA QUALITY SOME CO
   Shin Hwei Tan, 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P260, DOI 10.1109/ICST.2012.106
   Silberman MS, 2018, COMMUN ACM, V61, P39, DOI 10.1145/3180492
   Tan L, 2007, OSR
   Tsantalis N, 2015, ASSESSING REFACTORAB
   Tsantalis N, 2011, J SYST SOFTWARE, V84, P1757, DOI 10.1016/j.jss.2011.05.016
   Tu H, 2021, FRUGAL UNLOCKING SSL
   Tu H, 2020, CHANGING NATURE COMP
   Tu H, 2020, BETTER DATA LABELLIN
   Vasilescu B, 2018, Personnel communication at fse'18
   Vasilescu B, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P805, DOI 10.1145/2786805.2786850
   Wallace BC, 2010, BMC BIOINFORMATICS, V11, DOI 10.1186/1471-2105-11-55
   Wang X, 2020, IEEE INT CONF AUTOM, P871, DOI 10.1145/3324884.3416583
   Wattanakriengkrai S, 2019, ASIA PAC SOFWR ENG, P316, DOI 10.1109/APSEC48747.2019.00050
   Wehaibi S, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P179, DOI 10.1109/SANER.2016.72
   Witten I, 2017, ELSEVIER INC
   Xu Z, 2021, J SYST SOFTWARE, V172, DOI 10.1016/j.jss.2020.110862
   Yan M, 2017, INT SYMP EMP SOFTWAR, P344, DOI 10.1109/ESEM.2017.48
   Yang J, 2016, HPCC SMARTCITY DS
   Yang X, 2017, TLEL 2 LAYER ENSEMBL
   Yang XL, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P17, DOI 10.1109/QRS.2015.14
   Yang YB, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P157, DOI 10.1145/2950290.2950353
   Yu Z, 2019, IMPROVING VULNERABIL
   Yu Z, 2020, IDENTIFYING SELF ADM
   Yu Z., 2018, FINDING BETTER ACTIV
   Yuepu Guo, 2011, 2011 IEEE 27th International Conference on Software Maintenance, P528, DOI 10.1109/ICSM.2011.6080824
   Zampetti F, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P355, DOI [10.1109/SANER48275.2020.9054868, 10.1109/saner48275.2020.9054868]
   Zazworka N., 2013, EASE
   Zhang F, 2016, PROC INT CONF SOFTW, P309, DOI 10.1145/2884781.2884839
   Zhou YM, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3183339
NR 83
TC 2
Z9 2
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2022
VL 27
IS 4
AR 80
DI 10.1007/s10664-022-10121-w
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0I5QL
UT WOS:000779475400002
DA 2024-07-18
ER

PT J
AU Çetin, HA
   Tüzün, E
AF Cetin, H. Alperen
   Tuzun, Eray
TI Analyzing developer contributions using artifact traceability graphs
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Key developers; Social networks; Artifact traceability graphs; Developer
   replacement; Developer turnover; Knowledge distribution
AB Context In a software project, properly analyzing the contributions of developers could provide valuable insights for decision-makers. The contributions of a developer could be in many different forms such as committing and reviewing code, opening and resolving issues. Previous approaches mainly consider the commit-based contributions which provide an incomplete picture of developer contributions. Objective Different from the traditional commit-based approaches for analyzing developer contributions, we aim to provide a more holistic approach to reflect the rich set of software development activities using artifact traceability graphs. Method For analyzing the developer contributions, we propose a novel categorization of developers (Jacks, Mavens and Connectors) in a software project. We introduce a set of algorithms on artifact traceability graphs to identify key developers, recommend replacements for leaving developers and evaluate knowledge distribution among developers. Results We evaluate our proposed algorithms on six open-source projects and demonstrate that the identified key developers match the top commenters up to 98%, recommended replacements are correct up to 91% and identified knowledge distribution labels are compatible 94% on average with the baseline approaches. Conclusions The proposed algorithms using artifact traceability graphs for analyzing developer contributions could be used by software project decision-makers in several scenarios. (1) Identifying different types of key developers. (2) Finding a replacement developer in large teams. (3) Evaluating the overall knowledge distribution amongst developers to take early precautions.
C1 [Cetin, H. Alperen; Tuzun, Eray] Bilkent Univ, Dept Comp Engn, Univ Mah Bilkent Univ EA501, TR-06800 Ankara, Turkey.
C3 Ihsan Dogramaci Bilkent University
RP Çetin, HA (corresponding author), Bilkent Univ, Dept Comp Engn, Univ Mah Bilkent Univ EA501, TR-06800 Ankara, Turkey.
EM alperen.cetin@bilkent.edu.tr; eraytuzun@cs.bilkent.edu.tr
RI Tuzun, Eray/AAD-7282-2021
OI Tuzun, Eray/0000-0002-5550-7816; Cetin, Hamdi
   Alperen/0000-0001-9879-8599
CR Agrawal A, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P245, DOI 10.1145/3183519.3183549
   Allaho Mohammad Y., 2013, 2013 IEEE/ACM International Conference on Advances in Social Networks Analysis and Mining (ASONAM), P56
   Amirfallah A, 2019, ARXIV190207499
   [Anonymous], 2006, TIPPING POINT LITTLE
   Avelino Guilherme, 2019, INT SYMP EMP SOFTWAR, P1, DOI DOI 10.1109/esem.2019.8870181
   Avelino Guilherme, 2016, Proceedings of IEEE 24th International Conference on Program Comprehension (ICPC), P1
   Balachandran V, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P931, DOI 10.1109/ICSE.2013.6606642
   Bird C., 2011, P 19 ACM SIGSOFT S 1, P4, DOI DOI 10.1145/2025113.2025119
   Bird Christian, 2006, P MSR, P137, DOI DOI 10.1145/1137983.1138016
   Brandes U, 2001, J MATH SOCIOL, V25, P163, DOI 10.1080/0022250X.2001.9990249
   Bulmer M. G., 1979, Principles of Statistics
   Çetin HA, 2020, PROCEEDINGS OF THE 16TH ACM INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING, PROMISE 2020, P51, DOI 10.1145/3416508.3417116
   Cetin HA, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P1196, DOI 10.1145/3338906.3342487
   Cheng JH, 2019, 2019 IEEE/ACM 12TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE 2019), P11, DOI 10.1109/CHASE.2019.00011
   Conway ME., 1968, COMMITTEES INVENT DA, V14, P31
   Cosentino V, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P499, DOI 10.1109/SANER.2015.7081864
   Crowston K., 2006, P 39 ANN HAWAII INT, V6, p118a
   di Bella E, 2013, INFORM SCIENCES, V221, P72, DOI 10.1016/j.ins.2012.09.031
   Di Penta Massimiliano, 2012, P ACM SIGSOFT 20 INT, P1
   Ebbinghaus H, 1885, Uber das Gedachtnis. Untersuchungen zur experimentellen Psychologie
   Ferreira M, 2019, SOFTWARE QUAL J, V27, P1583, DOI 10.1007/s11219-019-09457-2
   Fischer M, 2003, PROC IEEE INT CONF S, P23, DOI 10.1109/ICSM.2003.1235403
   Foucault M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P829, DOI 10.1145/2786805.2786870
   FREEMAN LC, 1979, SOC NETWORKS, V1, P215, DOI 10.1016/0378-8733(78)90021-7
   Fritz T, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2512207
   Goeminne M., 2011, JOINT PORCEEDINGS 1, P74
   Hayward MLA, 2006, MANAGE SCI, V52, P160, DOI 10.1287/mnsc.1050.0483
   Huntley CL, 2003, IEEE T ENG MANAGE, V50, P485, DOI 10.1109/TEM.2003.820136
   Joblin M, 2017, PROC INT CONF SOFTW, P164, DOI 10.1109/ICSE.2017.23
   Kakimoto T., 2006, Proceedings of the International Workshop on Supporting Knowledge Collaboration in Software Development KCSD06, P35
   Kosti MV, 2016, EMPIR SOFTW ENG, V21, P1509, DOI 10.1007/s10664-015-9395-3
   Kovalenko V, 2020, IEEE T SOFTWARE ENG, V46, P710, DOI 10.1109/TSE.2018.2868367
   Krüger J, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P764, DOI 10.1145/3180155.3180215
   MASSEY FJ, 1951, J AM STAT ASSOC, V46, P68, DOI 10.2307/2280095
   Milewicz Reed, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P421, DOI 10.1109/MSR.2019.00069
   Mockus A, 2010, Proc. of the 18th Symposium on the Foundations of Software Engineering (FSE), P117
   Narayanan S, 2009, MANAGE SCI, V55, P1861, DOI 10.1287/mnsc.1090.1057
   Nassif M, 2017, PROC IEEE INT CONF S, P261, DOI 10.1109/ICSME.2017.64
   Oliva GA, 2015, COMPUT INFORM, V34, P678
   Ortu M, 2018, PROMISE'18: PROCEEDINGS OF THE 14TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING, P70, DOI 10.1145/3273934.3273943
   Ouni A, 2016, PROC IEEE INT CONF S, P367, DOI 10.1109/ICSME.2016.65
   Padhye R., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, P332, DOI 10.1145/2597073.2597113
   Rath M, 2019, DATA BRIEF, V25, DOI 10.1016/j.dib.2019.104005
   Razali N. M., 2011, J. Stat. Model. and Anal., V2, P21, DOI DOI 10.1515/BILE-2015-0008
   Rigby PC, 2013, P 2013 9 JOINT M FDN, P202, DOI DOI 10.1145/2491411.2491444
   Rigby PC, 2016, PROC INT CONF SOFTW, P1006, DOI 10.1145/2884781.2884851
   Robillard MP, 2018, PROC IEEE INT CONF S, P508, DOI 10.1109/ICSME.2018.00009
   ROYSTON P, 1995, APPL STAT-J ROY ST C, V44, P547, DOI 10.2307/2986146
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sadowski C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P181, DOI 10.1145/3183519.3183525
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   Sülün E, 2021, INFORM SOFTWARE TECH, V130, DOI 10.1016/j.infsof.2020.106455
   Sülün E, 2019, 15TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING (PROMISE'19), P66, DOI 10.1145/3345629.3345637
   Tüzün E, 2019, J SYST SOFTWARE, V149, P63, DOI 10.1016/j.jss.2018.11.021
   Tüzün E, 2015, INFORM SOFTWARE TECH, V59, P136, DOI 10.1016/j.infsof.2014.09.008
   Wang ZD, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3387111
   Wu J., 2009, HICSS, P1
   Xia X, 2013, WORK CONF REVERSE EN, P72, DOI 10.1109/WCRE.2013.6671282
   Yamashita K, 2015, 14TH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION (IWPSE 2015), P46, DOI 10.1145/2804360.2804366
   Zhou MH, 2012, PROC INT CONF SOFTW, P518, DOI 10.1109/ICSE.2012.6227164
   Zwillinger D., 1999, CRC Standard Probability and Statistics Tables and Formulae
NR 61
TC 2
Z9 2
U1 0
U2 7
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAY
PY 2022
VL 27
IS 3
AR 77
DI 10.1007/s10664-022-10129-2
PG 49
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 0A4HV
UT WOS:000773918200001
DA 2024-07-18
ER

PT J
AU Rahman, MR
   Imtiaz, N
   Storey, MA
   Williams, L
AF Rahman, Md Rayhanur
   Imtiaz, Nasif
   Storey, Margaret-Anne
   Williams, Laurie
TI Why secret detection tools are not enough: It's not just about false
   positives-An industrial case study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Secret detection tool; Hardcoded secrets; Secrets in repositories;
   Credentials in repositories
AB Checked-in secrets in version-controlled software projects pose security risks to software and services. Secret detection tools can identify the presence of secrets in the code, commit changesets, and project version control history. As these tools can generate false positives, developers are provided with mechanisms to bypass the warnings generated from these tools. Providing this override mechanism can result in developers sometimes exposing secrets in software repositories. The goal of this article is to aid software security practitioners in understanding why' secrets are checked into repositories, despite being warned by tools, through an industrial case study of analysis of usage data of a secret detection tool and a survey of developers who bypassed the tool alert. In this case study, we analyzed the usage data of a checked-in secret detection tool used widely by a software company and we surveyed developers who bypassed the warnings generated by the tool. From the case study, we found that, despite developers classified 50% of the warning as false positive, developers also bypassed the warning due to time constraints, working with non-shipping projects, technical challenges of eliminating secrets completely from the version control history, technical debts, and perceptions that check-ins are low risk. We advocate practitioners and researchers to investigate the findings of our study further to improve secret detection tools and related development practices. We also advocate that organizations should insert secondary checks, as is done by the company we studied, to capture occasions where developers incorrectly bypass secret detection tools.
C1 [Rahman, Md Rayhanur; Imtiaz, Nasif; Williams, Laurie] North Carolina State Univ, Raleigh, NC 27695 USA.
   [Storey, Margaret-Anne] Univ Victoria, Victoria, BC, Canada.
C3 North Carolina State University; University of Victoria
RP Rahman, MR (corresponding author), North Carolina State Univ, Raleigh, NC 27695 USA.
EM mrahman@ncsu.edu; simtiaz@ncsu.edu; mstorey@uvic.ca; lawilli3@ncsu.edu
OI Rahman, Md Rayhanur/0000-0003-4980-7350
CR Amazon, 2020, AWS KEY MAN SERV
   BOX GEP, 1986, TECHNOMETRICS, V28, P11, DOI 10.2307/1269599
   Bunyakiati P, 2019, 2019 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING WORKSHOPS (ASEW 2019), P77, DOI 10.1109/ASEW.2019.00033
   Ding ZY, 2020, SNIFFING CODEBASE SE
   Ilascu I, 2020, STARBUCKS DEVS LEAVE
   Johnson B, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P73, DOI 10.1145/2950290.2950304
   Kumar V, 2020, JUMPCLOUD API KEY LE
   Meli M, 2019, 26TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2019), DOI 10.14722/ndss.2019.23418
   MITRE, 2020, CWE 798 US HARD COD
   Montalbano E, 2020, MED DATA LEAKED GITH
   Rahman A, 2020, ACM T SOFTW ENG METH
   Rahman A, 2019, PROC INT CONF SOFTW, P164, DOI 10.1109/ICSE.2019.00033
   Rahman MR, 2019, PROC IEEE INT CONF S, P536, DOI 10.1109/ICSME.2019.00087
   Saha Aakanksha, 2020, 2020 International Conference on COMmunication Systems & NETworkS (COMSNETS), P168, DOI 10.1109/COMSNETS48256.2020.9027350
   Sinha VS, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P396, DOI 10.1109/MSR.2015.48
   Viennot N., 2014, 2014 ACM INT C MEAS, P221, DOI DOI 10.1145/2637364.2592003
   Wikipedia, 2021, COV 19 PAND
NR 17
TC 7
Z9 7
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAY
PY 2022
VL 27
IS 3
AR 59
DI 10.1007/s10664-021-10109-y
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZV2BV
UT WOS:000770339500004
PM 35313538
OA Green Published, Bronze
DA 2024-07-18
ER

PT J
AU Traini, L
AF Traini, Luca
TI Exploring Performance Assurance Practices and Challenges in Agile
   Software Development: An Ethnographic Study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software performance engineering; Ethnographic studies; Agile software
   development
ID REQUIREMENTS ENGINEERING PRACTICES
AB Background Agile principles play a pivotal role in modern software development. Unfortunately, the assessment of non-functional software properties, such as performance, can be challenging in Agile Software Development (ASD). Agile mentality tends to favor functional development over non-functional quality assurance. Additionally, frequent code changes and software releases make impractical the use of classical performance assurance approaches. Objective This paper investigates the current practices, problems and challenges of performance assurance in a real context of ASD. To the best of our knowledge, this is the first empirical study that specifically investigate performance assurance in ASD daily work. Method Through a 6-months industry collaboration with a large software organization that adopts ASD, we investigated practical and management problems in handling performance assurance activities. The research was conducted in line with ethnographic research, which guided towards building knowledge from participatory observations, unstructured interviews and reviews of documentations. Results The study shows that the case organization still relies on a waterfall-like approach for performance assurance. Such an approach showed to be inadequate for ASD, thereby leading to a sub-optimal management of performance assessment activities. We distilled three key challenges when trying to improve the performance assurance process: (i) managing performance assessment activities, (ii) continuous performance assessment and (iii) defining the performance assessment effort. Conclusions The assessment of software performance in the context of ASD is still far from being flawless. The lack of guidelines and well-established practices induces the adoption of approaches that can be obsolete and inadequate for ASD. Further research is needed to improve the performance management in this context, and to enable effective continuous performance assessment.
C1 [Traini, Luca] Univ LAquila, Laquila, Italy.
C3 University of L'Aquila
RP Traini, L (corresponding author), Univ LAquila, Laquila, Italy.
EM luca.traini@univaq.it
RI Traini, Luca/AGN-6130-2022; Traini, Luca/IZD-8631-2023
OI Traini, Luca/0000-0003-3676-0645; Traini, Luca/0000-0003-3676-0645
FU project "Software Performance in Agile/DevOps context within Programma
   Operativo'' Nazionale Ricerca e Innovazione 2014- 2020; Territori Aperti
   - Fondo Territori Lavoro e Conoscenza CGIL; Territori Aperti - CSIL;
   Territori Aperti - UIL
FX This work was supported by the project "Software Performance in
   Agile/DevOps context (funded within Programma Operativo'' Nazionale
   Ricerca e Innovazione 2014- 2020) and "Territori Aperti" (a project
   funded by Fondo Territori Lavoro e Conoscenza CGIL, CSIL and UIL). I
   would like to thank Vittorio Cortellessa for making this industry
   collaboration possible. I would also like to thank him for the useful
   suggestions and comments that were helpful in improving the paper.
CR AlGhmadi HM, 2016, PROC IEEE INT CONF S, P279, DOI 10.1109/ICSME.2016.46
   Alsaqaf W, 2019, INFORM SOFTWARE TECH, V110, P39, DOI 10.1016/j.infsof.2019.01.009
   Alsaqaf W, 2017, LECT NOTES COMPUT SC, V10153, P219, DOI 10.1007/978-3-319-54045-0_17
   Anderson Bob., 1997, The Encyclopedia of Microcomputers, P159
   Auer K, 1996, LAZY OPTIMIZATION PA, P19
   Behutiye Woubshet, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P250, DOI 10.1145/3383219.3383245
   Behutiye W, 2020, INFORM SOFTWARE TECH, V123, DOI 10.1016/j.infsof.2019.106225
   Brutlag Jake., 2009, Speed matters
   Cao L, 2008, IEEE SOFTWARE, V25, P60, DOI 10.1109/MS.2008.1
   Chen TH, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P243, DOI 10.1109/ICSE-SEIP.2017.26
   Daly D, 2021, PROCEEDINGS OF THE ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE '21), P33, DOI 10.1145/3427921.3450234
   Daly D, 2020, PROCEEDINGS OF THE ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE'20), P67, DOI 10.1145/3358960.3375791
   Ding ZS, 2020, PROC INT CONF SOFTW, P1435, DOI 10.1145/3377811.3380351
   Dittrich Y, 2002, SOCIAL THINKING-SOFTWARE PRACTICE, P243
   Fagerstrom Mikael, 2016, P 25 INT S SOFTW TES, P225, DOI [10.1145/2931037.2931064, DOI 10.1145/2931037.2931064]
   Fetterman D.M., 2019, Ethnography: Step-by-step, V4th
   Fitzgerald Brian, 2013, 2013 35th International Conference on Software Engineering (ICSE), P863, DOI 10.1109/ICSE.2013.6606635
   Fowler M, 2002, IEEE SOFTWARE, V19, P20, DOI 10.1109/MS.2002.1003448
   Fowler M., 2001, Software Development, V9, P28
   Geertz Clifford., 1988, Works and Lives: The Anthropologist as Author
   Hanssen G K., 2016, Agile processes, in software engineering, and extreme programming: 17th international conference, XP 2016, P367, DOI DOI 10.1007/978-3-319-33515-5_8
   Heikkila Ville T., 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P85, DOI 10.1109/ESEM.2013.27
   Ho C-W, 2006, AGILE 2006 AGILE 06, P52, DOI [10.1109/AGILE.2006.41, DOI 10.1109/AGILE.2006.41]
   Inayat I, 2015, COMPUT HUM BEHAV, V51, P915, DOI 10.1016/j.chb.2014.10.046
   Jiang ZM, 2015, IEEE T SOFTWARE ENG, V41, P1091, DOI 10.1109/TSE.2015.2445340
   Johnson MJ, 2007, IEEE SOFTWARE, V24, P67, DOI 10.1109/MS.2007.77
   Kasauli R, 2021, J SYST SOFTWARE, V172, DOI 10.1016/j.jss.2020.110851
   Knuth DE, 1974, COMPUTER PROGRAMMING, DOI [10.1145/1283920.1283929, DOI 10.1145/1283920.1283929]
   Laaber C, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P989, DOI 10.1145/3368089.3409683
   Laaber C, 2018, IEEE WORK CONF MIN S, P119, DOI 10.1145/3196398.3196407
   McGrath Joseph E, 1995, METHODOLOGY MATTERS, P152
   Meyer H., 2009, MANUFACTURING EXECUT
   Nguyen ThanhHD., 2012, P 3 ACMSPEC INT C PE, P299
   Ramesh B, 2010, INFORM SYST J, V20, P449, DOI 10.1111/j.1365-2575.2007.00259.x
   Rubin Kenneth S., 2012, Essential Scrum: A practical guide to the most popular Agile process, V1st
   Sharp H, 2016, IEEE T SOFTWARE ENG, V42, P786, DOI 10.1109/TSE.2016.2519887
   Smith ConnieU., 2001, PERFORMANCE SOLUTION
   Woodside M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P171, DOI 10.1109/FOSE.2007.32
NR 38
TC 7
Z9 7
U1 3
U2 18
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAY
PY 2022
VL 27
IS 3
AR 74
DI 10.1007/s10664-021-10069-3
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZV2BV
UT WOS:000770339500006
DA 2024-07-18
ER

PT J
AU Hu, LH
   Wong, WE
   Kuhn, DR
   Kacker, RN
   Li, S
AF Hu, Linghuan
   Wong, W. Eric
   Kuhn, D. Richard
   Kacker, Raghu N.
   Li, Shuo
TI CT-IoT: a combinatorial testing-based path selection framework for
   effective IoT testing
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Internet of things; IoT testing; Combinatorial testing; Test case
   generation; Coverage criteria
ID INTERNET; THINGS; GENERATION; SEARCH; SYSTEM
AB Testing Internet of Things (IoT) systems is challenging. This is not only because of the various aspects of IoT systems, such as software, hardware, and network that need to be tested, but also because of the unexpected issues caused by a large number of heterogeneous devices brought together by IoT systems. When an IoT system has hundreds, or even thousands, of heterogeneous devices, which devices should be tested to detect more faults? How can we systematically test an IoT system and its numerous devices in a cost-effective way? Are there any coverage criteria for testers to evaluate the thoroughness of the testing against IoT systems? In this paper, we present a combinatorial testing path selection framework for IoT systems, called CT-IoT, that systematically identifies and recommends testing paths in IoT systems for effective testing. We also propose four coverage criteria that can help testers evaluate the testing thoroughness for IoT systems. We conducted an empirical study of CT-IoT on two real-world IoT systems and evaluated the effectiveness of CT-IoT in terms of coverage achievements. The results show the superiority of CT-IoT over a random approach.
C1 [Hu, Linghuan; Wong, W. Eric; Li, Shuo] Univ Texas Dallas, Dept Comp Sci, 800 Campbell Rd, Richardson, TX 75080 USA.
   [Kuhn, D. Richard; Kacker, Raghu N.] Natl Inst Stand & Technol, Gaithersburg, MD 20899 USA.
C3 University of Texas System; University of Texas Dallas; National
   Institute of Standards & Technology (NIST) - USA
RP Wong, WE (corresponding author), Univ Texas Dallas, Dept Comp Sci, 800 Campbell Rd, Richardson, TX 75080 USA.
EM ewong@utdallas.edu
FU National Institute of Standards and Technology [60NANB17D322]; U.S.
   National Science Foundation [1757828, 1822137]; Direct For Computer &
   Info Scie & Enginr; Division Of Computer and Network Systems [1822137]
   Funding Source: National Science Foundation; Direct For Computer & Info
   Scie & Enginr; Division of Computing and Communication Foundations
   [1757828] Funding Source: National Science Foundation
FX This work was funded by the National Institute of Standards and
   Technology (Grant No. 60NANB17D322) and the U.S. National Science
   Foundation (Grant No. 1757828 and 1822137).
CR Abdullah A, 2018, 2018 25TH AUSTRALASIAN SOFTWARE ENGINEERING CONFERENCE (ASWEC), P91, DOI 10.1109/ASWEC.2018.00020
   Adhikary A, 2016, IEEE VTS VEH TECHNOL
   Ahmad A, 2016, LECT NOTES COMPUT SC, V9953, P727, DOI 10.1007/978-3-319-47169-3_55
   Ahmad Abbas., 2018, MODEL BASED TESTING
   Alam Tanweer., 2019, INT J RECENT TECHNOL, V7
   Alhawi OmarMK., 2019, HDB BIG DATA IOT SEC, P301
   Alhawi OMK, HDB BIG DATA IOT SEC, P301
   [Anonymous], CISCO VISUAL NETWORK
   [Anonymous], 2021, FAST INNOVATION REQU
   [Anonymous], AUTOMATED COMBINATOR
   [Anonymous], EBNF NOTATION DESCRI
   Antao L, 2018, IEEE ICST WORKSHOP, P110, DOI 10.1109/ICSTW.2018.00036
   Atzori L, 2010, COMPUT NETW, V54, P2787, DOI 10.1016/j.comnet.2010.05.010
   Belchior BFSA., 2019, TESTING IOT SYSTEMS
   Bosmans S, 2019, COMPUTING, V101, P857, DOI 10.1007/s00607-018-0650-5
   Bures M, 2020, LECT NOTES COMPUT SC, V12310, P93, DOI 10.1007/978-3-030-58768-0_6
   Bures M, 2017, PROCEEDINGS 2017 INTERNATIONAL CONFERENCE ON COMPUTATIONAL SCIENCE AND COMPUTATIONAL INTELLIGENCE (CSCI), P1838, DOI 10.1109/CSCI.2017.335
   Bures M, 2019, LECT NOTES ELECTR EN, V514, P625, DOI 10.1007/978-981-13-1056-0_61
   Burnstein I., 2006, Practical Software Testing: A Process-Oriented Approach
   Carlos-Mancilla M, 2016, J SENSORS, V2016, DOI 10.1155/2016/2081902
   Celik ZB, 2019, 26TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2019), DOI 10.14722/ndss.2019.23326
   Celik ZB, 2018, PROCEEDINGS OF THE 2018 USENIX ANNUAL TECHNICAL CONFERENCE, P147
   Chandan AbhishekR., 2018, 2018 INT C INVENTIVE, P1431
   Chen CK, 2018, COMPUTER, V51, P82, DOI 10.1109/MC.2018.2141033
   Chen M, 2017, IEEE ACCESS, V5, P20557, DOI 10.1109/ACCESS.2017.2751586
   Chen WK, 2018, ASIA PAC SOFWR ENG, P668, DOI 10.1109/APSEC.2018.00087
   Cohen DM, 1997, IEEE T SOFTWARE ENG, V23, P437, DOI 10.1109/32.605761
   Cohen DM, 1996, IEEE SOFTWARE, V13, P83, DOI 10.1109/52.536462
   Dias JP, 2019, P 24 EUR C PATT, P1, DOI DOI 10.1145/3361149.3361165
   Ding WB, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P832, DOI 10.1145/3243734.3243865
   Esquiagola J, 2017, IOTBDS: PROCEEDINGS OF THE 2ND INTERNATIONAL CONFERENCE ON INTERNET OF THINGS, BIG DATA AND SECURITY, P309, DOI 10.5220/0006304503090314
   Fang L, 2015, 2015 2ND INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING AND INTERNET OF THINGS (DCIT), P40, DOI 10.1109/DCIT.2015.14
   GABRIEL KR, 1969, SYST ZOOL, V18, P259, DOI 10.2307/2412323
   Garvin BJ, 2011, EMPIR SOFTW ENG, V16, P61, DOI 10.1007/s10664-010-9135-7
   Georgiev Iliya., 2019, 2019 INT C INFORM TE, P1
   Giménez P, 2013, IEEE SYS MAN CYBERN, P356, DOI 10.1109/SMC.2013.67
   Gomez AK, 2019, INT CONF KNOWL SYS, P61, DOI 10.1109/kse.2019.8919324
   Grindal M, 2005, SOFTW TEST VERIF REL, V15, P167, DOI 10.1002/stvr.319
   Gubbi J, 2013, FUTURE GENER COMP SY, V29, P1645, DOI 10.1016/j.future.2013.01.010
   Guy C, 2006, PROC SPIE, V6357, DOI 10.1117/12.716964
   Han R, 2018, INT CONF NEW TECHNOL, P1
   Truong HL, 2017, PROCEEDINGS OF THE 14TH EAI INTERNATIONAL CONFERENCE ON MOBILE AND UBIQUITOUS SYSTEMS: COMPUTING, NETWORKING AND SERVICES (MOBIQUITOUS 2017), P96, DOI 10.1145/3144457.3144490
   Hossain M. Z., 2015, Advances in Swarm and Computational Intelligence. 6th International Conference, ICSI 2015 held in conjunction with the Second BRICS Congress, CCI 2015. Proceedings: LNCS 9142, P321, DOI 10.1007/978-3-319-20469-7_34
   Hu LH, 2020, EMPIR SOFTW ENG, V25, P2661, DOI 10.1007/s10664-019-09799-2
   Incki Koray., 2017, INTEROPERABILITY SAF, P60
   Ismail AA, 2018, 2018 IEEE GLOBAL CONFERENCE ON INTERNET OF THINGS (GCIOT), P27
   Jacob PM, 2018, J ENG SCI TECHNOL, V13, P2504
   Jeannotte B, 2019, 2019 26TH INTERNATIONAL CONFERENCE ON TELECOMMUNICATIONS (ICT), P233, DOI [10.1109/ICT.2019.8798846, 10.1109/ict.2019.8798846]
   Jia YHA, 2017, 24TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2017), DOI 10.14722/ndss.2017.23051
   Kalosha H., 2008, P IEEE C COMPUTER CO, P346
   Kanstrén T, 2018, IEEE ICST WORKSHOP, P98, DOI 10.1109/ICSTW.2018.00034
   Krichen M, 2019, PROCEEDINGS OF THE 14TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL APPROACHES TO SOFTWARE ENGINEERING (ENASE), P570, DOI 10.5220/0007830605700577
   Krichen M, 2020, EAI SPRINGER INNOVAT, P629, DOI 10.1007/978-3-030-13705-2_26
   Krichen M, 2023, MOBILE NETW APPL, V28, P732, DOI 10.1007/s11036-019-01369-6
   Kuhn DR, 2004, IEEE T SOFTWARE ENG, V30, P418, DOI 10.1109/TSE.2004.24
   Kuhn R, 2003, 27TH ANNUAL NASA GODDARD/IEEE SOFTWARE ENGINEERING WORKSHOP - PROCEEDINGS, P91, DOI 10.1109/SEW.2002.1199454
   Lally G, 2018, LECT NOTES COMPUT SC, V11263, P88, DOI 10.1007/978-3-030-04372-8_8
   Lei Y, 2008, SOFTW TEST VERIF REL, V18, P125, DOI 10.1002/stvr.381
   Liu XY, 2020, FUTURE GENER COMP SY, V108, P390, DOI 10.1016/j.future.2019.12.032
   Mahmoodi Y, 2018, 2018 21ST EUROMICRO CONFERENCE ON DIGITAL SYSTEM DESIGN (DSD 2018), P177, DOI 10.1109/DSD.2018.00043
   Matheu-García SN, 2019, COMPUT STAND INTER, V62, P64, DOI 10.1016/j.csi.2018.08.003
   Mathur A. P., 2013, FDN SOFTWARE TESTING
   Medhat Noha, 2019, 2019 Ninth International Conference on Intelligent Computing and Information Systems (ICICIS), P394, DOI 10.1109/ICICIS46948.2019.9014711
   Medhat N, 2020, IEEE ACCESS, V8, P215716, DOI 10.1109/ACCESS.2020.3039931
   Murad G, 2018, INT CONF COMP SCI, P17, DOI 10.1109/CSIT.2018.8486149
   Nguyen NMT, 2019, IEEE ICST WORKSHOP, P168, DOI 10.1109/ICSTW.2019.00047
   Orjala L-M., 2019, THESIS U OULU
   Padmanabhan Mani., 2018, 2018 INT C CURRENT T, P1
   Patil AbhinandanH., 2015, J SOFTWARE ENG APPL, V8, P303, DOI DOI 10.4236/JSEA.2015.87031
   Patil AbhinandanH., 2019, DESIGN IMPLEMENTATIO
   Pering T, 2018, COMPUTER, V51, P90, DOI 10.1109/MC.2018.2701633
   Pontes PM, 2018, COMPANION PROCEEDINGS FOR THE ISSTA/ECOOP 2018 WORKSHOPS, P125, DOI 10.1145/3236454.3236511
   Pontes PM, 2018, PROCEEDINGS OF THE 9TH ACM SIGSOFT INTERNATIONAL WORKSHOP ON AUTOMATING TEST CASE DESIGN, SELECTION, AND EVALUATION (A-TEST '18), P63, DOI 10.1145/3278186.3278196
   Popereshnyak S, 2018, INT CONF PERSP TECH, P127, DOI 10.1109/MEMSTECH.2018.8365717
   Rechtberger Vaclav, 2020, WSSE 2020: The 2nd World Symposium on Software Engineering, P141, DOI 10.1145/3425329.3425330
   Reed JL., 2019, THESIS U TEXAS SAN A
   Reetz ES., 2016, THESIS U SURREY
   Sand B, 2016, L N INST COMP SCI SO, V170, P70, DOI 10.1007/978-3-319-47075-7_9
   Satheesh N, 2019, TESTING IOT DEVICES
   Shmatkov Vladislav., 2019, CEUR WORKSHOP PROC
   Sri JMK, 2019, COMM COM INF SC, V1076, P320, DOI 10.1007/978-981-15-0111-1_29
   Tappler M, 2017, IEEE INT CONF SOFTW, P276, DOI 10.1109/ICST.2017.32
   Voas J., 2016, NIST SPECIAL PUBLICA, V800
   Voas J, 2018, IEEE INT SYMP SERV O, P48, DOI 10.1109/SOSE.2018.00015
   Wang Ke., 2009, 2009 5 INT C WIRELES, P1
   Wang WH, 2008, IEEE HI ASS SYS ENGR, P209, DOI 10.1109/HASE.2008.53
   Wu HP, 2019, IEEE I CONF COMP VIS, P9216, DOI 10.1109/ICCV.2019.00931
   Yu LB, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P370, DOI 10.1109/ICST.2013.52
   Yu LB, 2012, IEEE INT C ENG COMP, P220, DOI 10.1109/ICECCS.2012.17
   Zheng YW, 2019, PROCEEDINGS OF THE 28TH USENIX SECURITY SYMPOSIUM, P1099
NR 90
TC 8
Z9 9
U1 1
U2 19
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2022
VL 27
IS 2
AR 32
DI 10.1007/s10664-021-10017-1
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XO4RR
UT WOS:000730174900002
DA 2024-07-18
ER

PT J
AU García, B
   Munoz-Organero, M
   Alario-Hoyos, C
   Kloos, CD
AF Garcia, Boni
   Munoz-Organero, Mario
   Alario-Hoyos, Carlos
   Delgado Kloos, Carlos
TI Automated driver management for selenium WebDriver
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Test automation; Testing tools; Selenium WebDriver
ID COEFFICIENT ALPHA; TEST SUITES; USABILITY; DESIGN; API; NOTATIONS;
   PATTERN
AB Selenium WebDriver is a framework used to control web browsers automatically. It provides a cross-browser Application Programming Interface (API) for different languages (e.g., Java, Python, or JavaScript) that allows automatic navigation, user impersonation, and verification of web applications. Internally, Selenium WebDriver makes use of the native automation support of each browser. Hence, a platform-dependent binary file (the so-called driver) must be placed between the Selenium WebDriver script and the browser to support this native communication. The management (i.e., download, setup, and maintenance) of these drivers is cumbersome for practitioners. This paper provides a complete methodology to automate this management process. Particularly, we present WebDriverManager, the reference tool implementing this methodology. WebDriverManager provides different execution methods: as a Java dependency, as a Command-Line Interface (CLI) tool, as a server, as a Docker container, and as a Java agent. To provide empirical validation of the proposed approach, we surveyed the WebDriverManager users. The aim of this study is twofold. First, we assessed the extent to which WebDriverManager is adopted and used. Second, we evaluated the WebDriverManager API following Clarke's usability dimensions. A total of 148 participants worldwide completed this survey in 2020. The results show a remarkable assessment of the automation capabilities and API usability of WebDriverManager by Java users, but a scarce adoption for other languages.
C1 [Garcia, Boni; Munoz-Organero, Mario; Alario-Hoyos, Carlos; Delgado Kloos, Carlos] Univ Carlos III Madrid, Ave Univ 30, Leganes 28911, Spain.
C3 Universidad Carlos III de Madrid
RP García, B (corresponding author), Univ Carlos III Madrid, Ave Univ 30, Leganes 28911, Spain.
EM bogarcia@it.uc3m.es; munozm@it.uc3m.es; calario@it.uc3m.es;
   cdk@it.uc3m.es
RI Delgado Kloos, Carlos/C-2876-2011; García, Boni/AAB-1990-2020;
   Munoz-Organero, Mario/F-6891-2016
OI Garcia, Boni/0000-0003-1808-8410; Munoz-Organero,
   Mario/0000-0003-4199-2002
FU "Analisis en tiempo Real de sensores sociALes y EStimacion de recursos
   para transporte multimodal basada en aprendizaje profundo" project
   (MaGIST-RALES) - Spanish Agencia Estatal de Investigacion (AEI)
   [PID2019-105221RB-C44]; FEDER/Ministerio de Ciencia, Innovacion y
   Universidades -Agencia Estatal de Investigacion [TIN2017-85179-C3-1-R];
   eMadrid Network - Madrid Regional Government (Comunidad de Madrid)
   [S2018/TCS-4307]
FX This work has been been supported in part by the "Analisis en tiempo
   Real de sensores sociALes y EStimacion de recursos para transporte
   multimodal basada en aprendizaje profundo" project (MaGIST-RALES),
   funded by the Spanish Agencia Estatal de Investigacion (AEI, doi
   10.13039/501100011033) under grant PID2019-105221RB-C44. This work also
   received partial support from FEDER/Ministerio de Ciencia, Innovacion y
   Universidades -Agencia Estatal de Investigacion through project Smartlet
   (TIN2017-85179-C3-1-R), and from the eMadrid Network, which is funded by
   the Madrid Regional Government (Comunidad de Madrid) with grant No.
   S2018/TCS-4307.
CR Afonso L.M., 2012, Proceedings of the Psychology of Programming Interest Group, P8
   Alégroth E, 2016, INFORM SOFTWARE TECH, V73, P66, DOI 10.1016/j.infsof.2016.01.012
   Avasarala Satya., 2014, Selenium WebDriver practical guide
   Belmont J-M, 2018, HANDS ON CONTINUOUS
   Bertoa MF, 2006, J SYST SOFTWARE, V79, P427, DOI 10.1016/j.jss.2005.06.026
   Binder W., 2007, P 5 INT S PRINC PRAC, DOI DOI 10.1145/1294325.1294344
   Blackwell AF, 2001, LECT NOTES ARTIF INT, V2117, P325
   Bloch J., 2006, 21 ACM SIGPLAN S OBJ, P506, DOI DOI 10.1145/1176617.1176622
   Bonett DG, 2015, J ORGAN BEHAV, V36, P3, DOI 10.1002/job.1960
   Bures M., 2016, 2016 6 INT C IT CONV, P1
   Burns D, 2010, SELENIUM 1 0 TESTING
   Cato S, 2011, THEOR DECIS, V71, P503, DOI 10.1007/s11238-011-9261-8
   Cerioli M, 2020, PROCEEDINGS OF THE 35TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING (SAC'20), P1586, DOI 10.1145/3341105.3373961
   Chaulagain RS, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SMART CLOUD (SMARTCLOUD), P138, DOI 10.1109/SmartCloud.2017.28
   Clarke S, 2004, DR DOBBS J, V29, pS6
   Clarke Steven., 2005, Cognitive Dimensions of Notations 10th Anniversary Workshop, page, P131
   Cleve H, 2005, PROC INT CONF SOFTW, P342
   CORTINA JM, 1993, J APPL PSYCHOL, V78, P98, DOI 10.1037/0021-9010.78.1.98
   Croasmun J.T., 2011, J ADULT ED, V40, P19, DOI DOI 10.1007/S10640-011-9463-0
   Daughtry III J M, 2012, PROGRAM INTEREST GRO, P42
   Downing SM, 2003, MED EDUC, V37, P830, DOI 10.1046/j.1365-2923.2003.01594.x
   Dustin E., 2009, IMPLEMENTING AUTOMAT
   Dustin E., 1999, AUTOMATED SOFTWARE T
   Ebert C, 2009, IEEE SOFTWARE, V26, P88, DOI 10.1109/MS.2009.144
   Ellis B, 2007, PROC INT CONF SOFTW, P302
   Farooq U, 2010, 2010 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, P207
   Freeman Eric., 2008, Head first design patterns
   Garcia B., 2017, MASTERING SOFTWARE T
   García B, 2020, ELECTRONICS-SWITZ, V9, DOI 10.3390/electronics9071067
   García B, 2020, ELECTRONICS-SWITZ, V9, DOI 10.3390/electronics9030462
   García B, 2019, ELECTRONICS-SWITZ, V8, DOI 10.3390/electronics8080854
   Gojare S, 2015, PROCEDIA COMPUT SCI, V50, P341, DOI 10.1016/j.procs.2015.04.038
   Green T. R. G., 1989, People and Computers V. Proceedings of the Fifth Conference of the British Computer Society Human-Computer Interaction Specialist Group, P443
   Gundecha U., 2018, SELENIUM WEBDRIVER 3
   Hassan F, 2017, INT SYMP EMP SOFTWAR, P38, DOI 10.1109/ESEM.2017.11
   Henning M., 2007, ACM Queue, V5, P25, DOI 10.1145/1255421.1255422
   Hovemeyer D, 2005, THESIS U MARYLAND THESIS U MARYLAND
   Hui Peng, 2010, 2010 Second Pacific-Asia Conference on Circuits,Communications and System (PACCS 2010), P253, DOI 10.1109/PACCS.2010.5626913
   Islam M. N, 2020, ADV SCI TECHNOL, V5, P226
   Kurose J., 2010, Computer networks: A top down approach featuring the internet
   Leotta M., 2013, P 2013 INT WORKSH JO, P53, DOI DOI 10.1145/2489280.2489284
   Leotta M, 2013, IEEE ICST WORKSHOP, P108, DOI 10.1109/ICSTW.2013.19
   López-Fernández L, 2017, MULTIMED TOOLS APPL, V76, P14247, DOI 10.1007/s11042-016-3729-z
   Memon AM, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1479, DOI 10.1109/ICSE.2013.6606750
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   Piccioni Marco, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P5, DOI 10.1109/ESEM.2013.14
   Presler-Marshall K, 2019, INT WORKSH AUTOMAT, P7, DOI 10.1109/AST.2019.000-1
   Rafi D. M., 2012, 2012 Proceedings of 7th International Workshop on Automation of Software Test (AST 2012), P36, DOI 10.1109/IWAST.2012.6228988
   Ramler R., 2006, P 2006 INT WORKSHOP, P85, DOI DOI 10.1145/1138929.1138946
   Reddy Martin., 2011, API Design for C++
   Reja U., 2003, DEV PPLIED STAT, V33, P160
   Sazoglu FB, 2013, PROCEEDINGS OF THE 22ND ACM INTERNATIONAL CONFERENCE ON INFORMATION & KNOWLEDGE MANAGEMENT (CIKM'13), P1881, DOI 10.1145/2505515.2507886
   Stewart S., 2020, W3C WORKING DRAFT
   Stocco A, 2017, SOFTWARE QUAL J, V25, P1007, DOI 10.1007/s11219-016-9331-9
   Stocco A, 2015, 10TH INTERNATIONAL WORKSHOP ON AUTOMATION OF SOFTWARE TEST AST 2015, P70, DOI 10.1109/AST.2015.26
   Trizano-Hermosilla I, 2016, FRONT PSYCHOL, V7, DOI 10.3389/fpsyg.2016.00769
   Vila E., 2017, 2017 Proceedings of the International Conference on Advances in Image Processing, P144
   Wagner B, 2010, EFFECTIVE C COVERS C
   Wilkinson L, 2006, AM STAT, V60, P332, DOI 10.1198/000313006X152243
   Yang YY, 2011, J PSYCHOEDUC ASSESS, V29, P377, DOI 10.1177/0734282911406668
NR 60
TC 5
Z9 5
U1 2
U2 22
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2021
VL 26
IS 5
AR 107
DI 10.1007/s10664-021-09975-3
PG 51
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TR9UT
UT WOS:000679304300001
DA 2024-07-18
ER

PT J
AU Li, BY
   Diao, XX
   Gao, W
   Smidts, C
AF Li, Boyuan
   Diao, Xiaoxu
   Gao, Wei
   Smidts, Carol
TI A requirements inspection method based on scenarios generated by model
   mutation and the experimental validation
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Requirements inspection; Defects detection; Mutation testing; Scenario
   generation
ID SIZE
AB The requirements phase is the most critical phase of the software development life cycle. The quality of the requirements specification affects the overall quality of the subsequent phases and hence, the software product. An effective and efficient method to qualify the software requirements specification (SRS) is necessary to ensure the reliability and safety of software. In this paper, a requirements inspection method based on scenarios generated by model mutation (RIMSM) is proposed to detect defects in the functional requirements of a safety-critical system. The RIMSM method models software requirements using a High Level Extended Finite State Machine (HLEFSM). A method that executes the HLEFSM model is defined. The method uncovers the behaviors and generates the outputs of the system for a given scenario. To identify an adequate set of scenarios in which the model shall be executed, an analogue to mutation testing is defined which applies to the requirements phase. Twenty-one mutation operators are designed based on a taxonomy of defects defined for the requirements phase. Mutants of the HLEFSM model are generated using these operators. Further, an algorithm is developed to identify scenarios that can kill the mutants. The set of scenarios is considered to be adequate for detecting defects in the model when all mutants generated are killed. The HLEFSM model is then executed for the scenarios generated. The results of execution are used to detect defects in the model. A Requirements Inspection Tool based on Scenarios Generated by Model Mutation (RITSM) is developed to automate the application of the RIMSM method. The performance and usability of the RIMSM method are studied and demonstrated in an experiment by comparing the RIMSM method to the checklist-based reading method.
C1 [Li, Boyuan; Diao, Xiaoxu; Gao, Wei; Smidts, Carol] Ohio State Univ, Dept Mech & Aerosp Engn, Columbus, OH 43210 USA.
C3 University System of Ohio; Ohio State University
RP Li, BY (corresponding author), Ohio State Univ, Dept Mech & Aerosp Engn, Columbus, OH 43210 USA.
EM li.4935@osu.edu; diao.38@osu.edu; gao.1579@osu.edu; smidts.1@osu.edu
RI Diao, Xiaoxu/F-7057-2011
OI Diao, Xiaoxu/0000-0003-4672-6352; Smidts, Carol/0000-0001-7867-023X
FU U.S. Department of Energy, Office of Nuclear Energy, Nuclear Energy
   Enabling Technologies (NEET) program [DE-NE0008434]; DOE Office of
   Nuclear Energy's Nuclear Energy University Program [DE-NE308896];
   Department of Mechanical and Aerospace Engineering, Ohio State
   University
FX This material is based upon work supported by the U.S. Department of
   Energy, Office of Nuclear Energy, Nuclear Energy Enabling Technologies
   (NEET) program under the Award Number DE-NE0008434. This research is
   performed using funding received from the DOE Office of Nuclear Energy's
   Nuclear Energy University Program under the Award Number DE-NE308896.
   This research is also funded by the Department of Mechanical and
   Aerospace Engineering, Ohio State University.
CR Agrawal H., 1989, TECHNICAL REPORT SER
   Ali SW, 2018, 2018 INT C ENG EM TE
   Alshazly AA, 2014, ALEX ENG J, V53, P513, DOI 10.1016/j.aej.2014.06.001
   [Anonymous], 2020, Mann-Whitney U or Wilcoxon Rank-Sum Tests, P503
   Arndt SA, 2017, P 2017 NPIC HMIT
   Budd T. A., 1978, AFIPS Conference Proceedings vol.47. 1978 National Computer Conference, P623
   BUDD TA, 1985, COMPUT LANG, V10, P63, DOI 10.1016/0096-0551(85)90011-6
   Cisneros A, 2018, P 5 INT C SOFTW ENG
   Dalpiaz F, 2019, INFORM SOFTWARE TECH, V110, P3, DOI 10.1016/j.infsof.2018.12.007
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   Derenthal F.E., 2017, Proc. 2017 NPIC-HMIT, P1658
   Fabbri S. C. P. F., 1999, Proceedings 10th International Symposium on Software Reliability Engineering (Cat. No.PR00443), P210, DOI 10.1109/ISSRE.1999.809326
   HAMLET RG, 1977, IEEE T SOFTWARE ENG, V3, P279, DOI 10.1109/TSE.1977.231145
   He Lulu, 2006, 2006 INT S EMP SOFTW, P95
   Hierons RM, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P141, DOI 10.1109/TAIC.PART.2007.20
   Hierons RM, 2009, J SYST SOFTWARE, V82, P1804, DOI 10.1016/j.jss.2009.06.030
   IEEE, 2018, 201829148 ISOIECIEEE
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Kim SW, 1999, P 12 INT C SOFTW SYS, P1
   KING KN, 1991, SOFTWARE PRACT EXPER, V21, P685, DOI 10.1002/spe.4380210704
   Kirby J, 1987, SOFTWARE REQUIREMENT
   Laitenberger O., 2002, HDB SOFTWARE ENG KNO, P517
   Lanubile F, 2000, 0008 INT SOFTW ENG R
   LeBlanc D., 2008, Functional Requirements for Integrated Vehicle-Based Safety System (IVBSS)-Heavy Truck Platform
   LEE SM, 1994, BIOMETRICS, V50, P88, DOI 10.2307/2533199
   Li B, 2018, P 2018 ANN REL MAINT
   Li B, 2017, P 2017 NPIC HMIT
   Li X., 2013, PSA, P22
   Li X, 2016, EMPIR SOFTW ENG, V21, P2413, DOI 10.1007/s10664-015-9412-6
   Lipton R.J., 1971, FAULT DIAGNOSIS COMP
   Lorber F, 2018, IEEE ICST WORKSHOP, P59, DOI 10.1109/ICSTW.2018.00029
   Ma YS, 2005, SOFTW TEST VERIF REL, V15, P97, DOI 10.1002/stvr.308
   McHugh ML, 2012, BIOCHEM MEDICA, V22, P276, DOI 10.11613/bm.2012.031
   Okun V, 2004, THESIS U MARYLAND BA
   Pinto Ferraz Fabbri S. C., 1994, Proceedings. 5th International Symposium on Software Reliability Engineering (Cat. No.94TH8017), P220, DOI 10.1109/ISSRE.1994.341378
   PORTER AA, 1995, IEEE T SOFTWARE ENG, V21, P563, DOI 10.1109/32.391380
   Santoso S, 2019, J PHYS CONF SER, V1198, DOI 10.1088/1742-6596/1198/2/022046
   Sawilowsky SS, 2009, J MOD APPL STAT METH, V8, P597, DOI 10.22237/jmasm/1257035100
   Staron M., 2005, Proc. Int. Conf. Softw. Eng, P63, DOI DOI 10.1145/1083292.1083308
   Strobl F, 1999, SPECICATION ELEVATOR
   Sugeta T, 2004, LECT NOTES COMPUT SC, V2978, P193
   Sullivan Gail M, 2012, J Grad Med Educ, V4, P279, DOI 10.4300/JGME-D-12-00156.1
   Yang XM, 2007, THESIS U SASKATCHEWA
   Zhang HH, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P363, DOI 10.1145/2976767.2976784
   Zhang ZJ, 2018, 2018 IEEE/ACM 26TH INTERNATIONAL SYMPOSIUM ON QUALITY OF SERVICE (IWQOS), DOI 10.1109/IWQoS.2018.8624183
NR 46
TC 1
Z9 1
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2021
VL 26
IS 5
AR 108
DI 10.1007/s10664-021-10001-9
PG 57
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TU2XI
UT WOS:000680904000001
DA 2024-07-18
ER

PT J
AU Ul Haq, F
   Shin, D
   Nejati, S
   Briand, L
AF Ul Haq, Fitash
   Shin, Donghwan
   Nejati, Shiva
   Briand, Lionel
TI Can Offline Testing of Deep Neural Networks Replace Their Online
   Testing? A Case Study of Automated Driving Systems
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Deep Learning; Testing; Self-driving Cars
ID SAFETY
AB We distinguish two general modes of testing for Deep Neural Networks (DNNs): Offline testing where DNNs are tested as individual units based on test datasets obtained without involving the DNNs under test, and online testing where DNNs are embedded into a specific application environment and tested in a closed-loop mode in interaction with the application environment. Typically, DNNs are subjected to both types of testing during their development life cycle where offline testing is applied immediately after DNN training and online testing follows after offline testing and once a DNN is deployed within a specific application environment. In this paper, we study the relationship between offline and online testing. Our goal is to determine how offline testing and online testing differ or complement one another and if offline testing results can be used to help reduce the cost of online testing? Though these questions are generally relevant to all autonomous systems, we study them in the context of automated driving systems where, as study subjects, we use DNNs automating end-to-end controls of steering functions of self-driving vehicles. Our results show that offline testing is less effective than online testing as many safety violations identified by online testing could not be identified by offline testing, while large prediction errors generated by offline testing always led to severe safety violations detectable by online testing. Further, we cannot exploit offline testing results to reduce the cost of online testing in practice since we are not able to identify specific situations where offline testing could be as accurate as online testing in identifying safety requirement violations.
C1 [Ul Haq, Fitash; Shin, Donghwan; Nejati, Shiva; Briand, Lionel] Univ Luxembourg, SnT, Luxembourg, Luxembourg.
   [Nejati, Shiva; Briand, Lionel] Univ Ottawa, Ottawa, ON, Canada.
C3 University of Luxembourg; University of Ottawa
RP Shin, D (corresponding author), Univ Luxembourg, SnT, Luxembourg, Luxembourg.
EM fitash.ulhaq@uni.lu; donghwan.shin@uni.lu; shiva.nejati@uni.lu;
   lionel.briand@uni.lu
RI Shin, Donghwan/N-2361-2019; Nejati, Shiva/KBT-7650-2024
OI Shin, Donghwan/0000-0002-0840-6449; UL HAQ, Fitash/0000-0003-2253-9085;
   Briand, Lionel/0000-0002-1393-1010
FU European Research Council under the European Union [694277];
   Luxembourg's National Research Fund (FNR)
   [BRIDGES2020/IS/14711346/FUNTASY]; IEE S.A. Luxembourg; NSERC of Canada;
   Basic Science Research Program through the National Research Foundation
   of Korea (NRF) - Ministry of Education [2019R1A6A3A03033444]
FX This work has received funding from the European Research Council under
   the European Union's Horizon 2020 research and innovation programme
   (grant agreement No 694277), Luxembourg's National Research Fund (FNR)
   under grant BRIDGES2020/IS/14711346/FUNTASY, IEE S.A. Luxembourg, and
   NSERC of Canada under the Discovery and Canada Research Chair
   programmes. Donghwan Shin was partially supported by Basic Science
   Research Program through the National Research Foundation of Korea (NRF)
   funded by the Ministry of Education (2019R1A6A3A03033444).
CR [Anonymous], 2017, ARXIV170803309
   [Anonymous], 2012, ARXIV12022745
   Archer KJ, 2008, COMPUT STAT DATA AN, V52, P2249, DOI 10.1016/j.csda.2007.08.015
   Autumn T, 2016, AUTUMN MODEL
   Barr ET, 2015, IEEE T SOFTWARE ENG, V41, P507, DOI 10.1109/TSE.2014.2372785
   Chauffeur T, 2016, CHAUFFEUR MODEL
   Codevilla F., 2018, EUR C COMP VIS ECCV
   Cohen W. W., 1995, Machine Learning. Proceedings of the Twelfth International Conference on Machine Learning, P115
   Deng L, 2013, INT CONF ACOUST SPEE, P8599, DOI 10.1109/ICASSP.2013.6639344
   Dosovitskiy A., 2017, P 1 ANN C ROB LEARN, P1, DOI DOI 10.48550/ARXIV.1711.03938
   ESI Group, 2019, ESI PROS 3D SIM ENV
   Gambi A, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P318, DOI 10.1145/3293882.3330566
   Geiger A, 2012, PROC CVPR IEEE, P3354, DOI 10.1109/CVPR.2012.6248074
   Genuer R, 2010, PATTERN RECOGN LETT, V31, P2225, DOI 10.1016/j.patrec.2010.03.014
   Group OM, 2014, OBJECT CONSTRAINT LA
   Haq FU, 2020, SUPPORTING MAT TEMPO
   Haq FU, 2020, 2020 IEEE INT C SOFT
   Huang XY, 2020, 2020 IEEE INTERNATIONAL CONFERENCE ON EDGE COMPUTING (EDGE 2020), P1, DOI 10.1109/EDGE50951.2020.00008
   Kalra N, 2016, TRANSPORT RES A-POL, V94, P182, DOI 10.1016/j.tra.2016.09.010
   Kim J, 2019, PROC INT CONF SOFTW, P1039, DOI 10.1109/ICSE.2019.00108
   Komanda T, 2016, KOMANDA MODEL
   Ma L, 2018, IEEE INT CONF AUTOM, P120, DOI 10.1145/3238147.3238202
   Majumdar R, 2019, ARXIV190201084
   Mcgehee D.V., 2000, P HUMAN FACTORS ERGO, P320, DOI [10.1177/154193120004402026, DOI 10.1177/154193120004402026]
   Pei KX, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P1, DOI 10.1145/3132747.3132785
   Pineau J, 2019, ICSE 2019 KEYNOTE BU
   Pomerleau DA., 1989, ADV NEURAL INFORM PR, V1, P305
   Shah S., 2017, Field and service robotics, DOI 10.1007/978-3-319-67361-5_40
   Sotiropoulos T, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P150, DOI 10.1109/QRS.2017.25
   Sutskever I, 2014, ADV NEUR IN, V27
   TASS International-Siemens Group, 2019, PRESCAN SIM AD ACT S
   Tian YC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P303, DOI 10.1145/3180155.3180220
   Tuncali CE, 2018, IEEE INT VEH SYM, P1555
   Udacity, 2016, UD SELF DRIV CAR CHA
   Udacity, UD SELF DRIV CHALL 2
   Wicker M, 2018, LECT NOTES COMPUT SC, V10805, P408, DOI 10.1007/978-3-319-89960-2_22
   Zhang J.M., 2020, IEEE Trans. Softw. Eng
   Zhang MS, 2018, IEEE INT CONF AUTOM, P132, DOI 10.1145/3238147.3238187
   Zhou H, 2018, ARXIV181210812
   Zhou ZQ, 2019, COMMUN ACM, V62, P61, DOI 10.1145/3241979
NR 40
TC 17
Z9 17
U1 4
U2 8
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2021
VL 26
IS 5
AR 90
DI 10.1007/s10664-021-09982-4
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TE2UQ
UT WOS:000669871400001
PM 35791396
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Chen, XW
   Abdalkareem, R
   Mujahid, S
   Shihab, E
   Xia, X
AF Chen, Xiaowei
   Abdalkareem, Rabe
   Mujahid, Suhaib
   Shihab, Emad
   Xia, Xin
TI Helping or not helping? Why and how trivial packages impact the
   <i>npm</i> ecosystem
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Trivial packages; JavaScript; Node; js; npm; Code reuse; Empirical
   studies
AB Developers often share their code snippets by packaging them and making them available to others through software packages. How much a package does and how big it is can be seen as positive or negative. Recent studies showed that many packages that exist in the npm ecosystem are trivial and may introduce high dependency overhead. Hence, one question that arises is why developers choose to publish these trivial packages. Therefore, in this paper, we perform a developer-centered study to empirically examine why developers choose to publish such trivial packages. Specifically, we ask 1) why developers publish trivial packages, 2) what they believe to be the possible negative impacts of these packages, and 3) how such negative issues can be mitigated. The survey response of 59 JavaScript developers who publish trivial npm packages showed that the main advantages for publishing these trivial packages are to provide reusable components, testing & documentation, and separation of concerns. Even the developers who publish these trivial packages admitted to having issues when they publish such packages, which include the maintenance of multiple packages, dependency hell, finding the right package, and the increase of duplicated packages in the ecosystems. Furthermore, we found that the majority of the developers suggested grouping these trivial packages to cope with the problems associated with publishing them. Then, to quantitatively investigate the impact of these trivial packages on the npm ecosystem and its users, we examine grouping these trivial packages. We found that if trivial packages that are always used together are grouped, the ecosystem can reduce the number of dependencies by approximately 13%. Our findings shed light on the impact of publishing trivial packages and show that ecosystems and developer communities need to rethink their publishing policies since it can negatively impact the developers and the entire ecosystem.
C1 [Chen, Xiaowei; Mujahid, Suhaib; Shihab, Emad] Concordia Univ, Dept Comp Sci & Software Engn, Data Driven Anal Software DAS Lab, Montreal, PQ, Canada.
   [Abdalkareem, Rabe] Software Anal & Intelligence Lab SAIL, Kingston, ON, Canada.
   [Xia, Xin] Monash Univ, Fac Informat Technol, Clayton, Vic, Australia.
C3 Concordia University - Canada; Monash University
RP Chen, XW (corresponding author), Concordia Univ, Dept Comp Sci & Software Engn, Data Driven Anal Software DAS Lab, Montreal, PQ, Canada.
EM c_iaowei@encs.concordia.ca; abdrabe@gmail.com;
   smujahi@encs.concordia.ca; eshihab@encs.concordia.ca; xin.xia@monash.edu
RI Xia, Xin/AAD-6217-2022; Abdalkareem, Rabe/AET-2496-2022; Abdalkareem,
   Rabe/IQV-8842-2023
OI Xia, Xin/0000-0002-6302-3256; Abdalkareem, Rabe/0000-0001-9914-5434;
   Mujahid, Suhaib/0000-0003-2738-1387
CR Abdalkareem R, 2020, EMPIR SOFTW ENG, V25, P1168, DOI 10.1007/s10664-019-09792-9
   Abdalkareem R, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P1062, DOI 10.1145/3106237.3121278
   Abdalkareem R, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P385, DOI 10.1145/3106237.3106267
   Abdalkareem R, 2017, INFORM SOFTWARE TECH, V88, P148, DOI 10.1016/j.infsof.2017.04.005
   Aghajani E, 2018, PROC IEEE INT CONF S, P25, DOI 10.1109/ICSME.2018.00012
   Bavota G, 2015, EMPIR SOFTW ENG, V20, P1275, DOI 10.1007/s10664-014-9325-9
   Bavota G, 2015, IEEE T SOFTWARE ENG, V41, P384, DOI 10.1109/TSE.2014.2367027
   Bogart C, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P109, DOI 10.1145/2950290.2950325
   Chen X, 2019, ZENODO, DOI [10.5281/zenodo.3417393, DOI 10.5281/ZENODO.3417393]
   Cox R, 2019, COMMUN ACM, V62, P36, DOI 10.1145/3347446
   DeBill E, 2019, MODULECOUNTS
   Fard AM, 2017, IEEE INT CONF SOFTW, P230, DOI 10.1109/ICST.2017.28
   Fleiss J.L., 2004, Statistical Methods for Rates and Proportions, VThird, P1, DOI [10.1002/0471445428, DOI 10.1002/0471445428]
   Fuchs T, 2016, WHAT WE HAD GREAT ST
   Gharehyazie M, 2017, IEEE WORK CONF MIN S, P291, DOI 10.1109/MSR.2017.15
   Grosjean P, 2018, EMPIR SOFTW ENG
   Jansen S, 2013, SOFTWARE ECOSYSTEMS: ANALYZING AND MANAGING BUSINESS NETWORKS IN THE SOFTWARE INDUSTRY, P1, DOI 10.4337/9781781955635
   Kula RG, 2018, EMPIR SOFTW ENG, V23, P384, DOI 10.1007/s10664-017-9521-5
   Linares-Vasquez M., 2014, P 22 INT C PROGR COM, P83, DOI DOI 10.1145/2597008.2597155
   Lopes CV, 2017, P ACM PROGR LANG
   MacDonald Fiona., 2018, How a Programmer Nearly Broke The Internet by Deleting Just 11 Lines of Code
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Mirhosseini S, 2017, IEEE INT CONF AUTOM, P84, DOI 10.1109/ASE.2017.8115621
   npm Documentation, 2020, NPM REGISTRY NPM DOC
   Orsila H, 2008, INT FED INFO PROC, V275, P159
   Poshyvanyk D, 2014, **DROPPED REF**, P83
   Pradel M, 2019, P 28 USENIX SEC S US
   Reese C.O., 2000, Design and methods, V3, P101
   Sawant AA, 2018, EMPIR SOFTW ENG, V23, P2158, DOI 10.1007/s10664-017-9554-9
   Scholtz A, 2018, DETECTION MITIGATION, P1
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Serebrenik A, 2015, P 2015 EUR C SOFTW A
   Singer Janice, 2008, Guide to Advanced Empirical Software Engineering, P9
   StackOverflow, 2020, Stack overflow developer survey results 2020
   Trockman A, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P511, DOI 10.1145/3180155.3180209
   Valiev M, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P644, DOI 10.1145/3236024.3236062
   Vasilescu B, 2016, PROC INT CONF SOFTW, P994, DOI 10.1145/2884781.2884875
   Wikipedia, 2018, UNIX PHILOS WIKIPEDI
   Wittern E, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P351, DOI [10.1145/2901739.2901743, 10.1109/MSR.2016.043]
NR 39
TC 17
Z9 21
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR 2
PY 2021
VL 26
IS 2
AR 27
DI 10.1007/s10664-020-09904-w
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QR7CF
UT WOS:000625372100004
DA 2024-07-18
ER

PT J
AU Ghanavati, M
   Costa, D
   Seboek, J
   Lo, DV
   Andrzejak, A
AF Ghanavati, Mohammadreza
   Costa, Diego
   Seboek, Janos
   Lo, David
   Andrzejak, Artur
TI Memory and resource leak defects and their repairs in Java projects
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Empirical study; Memory leak; Resource leak; Leak detection; Root-cause
   analysis; Repair patch
ID AGREEMENT
AB Despite huge software engineering efforts and programming language support, resource and memory leaks are still a troublesome issue, even in memory-managed languages such as Java. Understanding the properties of leak-inducing defects, how the leaks manifest, and how they are repaired is an essential prerequisite for designing better approaches for avoidance, diagnosis, and repair of leak-related bugs. We conduct a detailed empirical study on 491 issues from 15 large open-source Java projects. The study proposes taxonomies for the leak types, for the defects causing them, and for the repair actions. We investigate, under several aspects, the distributions within each taxonomy and the relationships between them. We find that manual code inspection and manual runtime detection are still the main methods for leak detection. We find that most of the errors manifest on error-free execution paths, and developers repair the leak defects in a shorter time than non-leak defects. We also identify 13 recurring code transformations in the repair patches. Based on our findings, we draw a variety of implications on how developers can avoid, detect, isolate and repair leak-related bugs.
C1 [Ghanavati, Mohammadreza; Costa, Diego; Seboek, Janos; Andrzejak, Artur] Heidelberg Univ, Heidelberg, Germany.
   [Lo, David] Singapore Management Univ, Sch Informat Syst, 80 Stamford Rd, Singapore 178902, Singapore.
C3 Ruprecht Karls University Heidelberg; Singapore Management University
RP Ghanavati, M (corresponding author), Heidelberg Univ, Heidelberg, Germany.
EM mohammadreza.ghanavati@informatik.uni-heidelberg.de
RI Costa, Diego/Y-7589-2019; Lo, David/A-2493-2012
OI Costa, Diego Elias/0000-0001-7084-2594; Lo, David/0000-0002-4367-7201
CR [Anonymous], 2010, P ACM IEEE 32 INT C, DOI DOI 10.1145/1806799.1806874
   [Anonymous], 2011, Proceedings of the 19th ACM SIGSOFT symposium and the 13th European conference on Foundations of software engineering (FSE'11), DOI [10.1145/2025113.2025121, DOI 10.1145/2025113.2025121]
   Artstein R, 2008, COMPUT LINGUIST, V34, P555, DOI 10.1162/coli.07-034-R2
   Banerjee A, 2018, IEEE T SOFTWARE ENG, V44, P470, DOI 10.1109/TSE.2017.2689012
   Bond MD, 2006, ACM SIGPLAN NOTICES, V41, P61, DOI 10.1145/1168918.1168866
   Bond MD, 2009, ACM SIGPLAN NOTICES, V44, P277, DOI 10.1145/1508284.1508277
   Bond MD, 2008, OOPSLA 2008 NASHVILLE, CONFERENCE PROCEEDINGS, P109
   Chen TH, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P165, DOI [10.1109/MSR.2016.026, 10.1145/2901739.2901758]
   Cherem S., 2004, INT S MEMORY MANAGEM, P85, DOI DOI 10.1145/1029873.1029884
   Cherem S, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P480, DOI 10.1145/1250734.1250789
   Cheung S.-C., 2011, P 19 ACM SIGSOFT S 1, P15
   Chilimbi TM, 2004, ACM SIGPLAN NOTICES, V39, P156, DOI 10.1145/1037187.1024412
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Dillig I, 2008, ISMM'08: PROCEEDINGS OF THE 2008 INTERNATIONAL SYMPOSIUM ON MEMORY MANAGEMENT, P1
   Fang L., 2015, 29th European Conference on Object-Oriented Programming (ECOOP 2015), volume 37 of Leibniz International Proceedings in Informatics (LIPIcs), P296
   Gao Q, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P459, DOI 10.1109/ICSE.2015.64
   Ghanavati M, 2018, PROC IEEE ACM INT C, P410, DOI 10.1145/3183440.3195032
   Ghanavati M, 2015, IEEE INT WORK C SO, P191, DOI 10.1109/SCAM.2015.7335415
   Guo CR, 2013, IEEE INT CONF AUTOM, P389, DOI 10.1109/ASE.2013.6693097
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Heine DL, 2003, ACM SIGPLAN NOTICES, V38, P168, DOI 10.1145/780822.781150
   Nguyen HDT, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P772, DOI 10.1109/ICSE.2013.6606623
   Huizinga D., 2007, AUTOMATED DEFECT PRE
   Humphrey Watts S., 2000, CMU/SEI Technical Report CMU/SEI-2000-TR-022
   Jin GL, 2012, ACM SIGPLAN NOTICES, V47, P77, DOI 10.1145/2345156.2254075
   Jump M, 2007, CONFERENCE RECORD OF POPL 2007: THE 34TH ACM SIGPLAN SIGACT SYMPOSIUM ON PRINCIPLES OF PROGAMMING LANGUAGES, P31
   Jung C, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P825, DOI 10.1145/2568225.2568311
   Kim D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P802, DOI 10.1109/ICSE.2013.6606626
   Langner F, 2013, 2013 IFIP/IEEE INTERNATIONAL SYMPOSIUM ON INTEGRATED NETWORK MANAGEMENT (IM 2013), P896
   Le Goues C, 2016, IEEE 23 INT C SOFTW
   Liu C, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P282, DOI 10.1109/ICST.2013.24
   Lo D, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P415, DOI 10.1145/2786805.2786809
   Long F, 2016, ACM SIGPLAN NOTICES, V51, P298, DOI 10.1145/2914770.2837617
   Machida F, 2012, PROC INT SYMP SOFTW, P287, DOI 10.1109/ISSREW.2012.97
   Matias R, 2014, SYM REL DIST SYST, P311, DOI 10.1109/SRDS.2014.38
   McConnell S. C., 1993, Code complete: A practical handbook of software construction
   Mechtaev S, 2016, PROC INT CONF SOFTW, P691, DOI 10.1145/2884781.2884807
   Meng N, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P502, DOI 10.1109/ICSE.2013.6606596
   Mitchell N, 2003, LECT NOTES COMPUT SC, V2743, P351
   Nguyen K, 2015, ACM SIGPLAN NOTICES, V50, P675, DOI [10.1145/2694344.2694345, 10.1145/2775054.2694345]
   Nistor A, 2013, IEEE WORK CONF MIN S, P237, DOI 10.1109/MSR.2013.6624035
   Novark G, 2009, PLDI'09 PROCEEDINGS OF THE 2009 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P397, DOI 10.1145/1542476.1542521
   Orlovich M, 2006, LECT NOTES COMPUT SC, V4134, P405
   Pan K, 2009, EMPIR SOFTW ENG, V14, P286, DOI 10.1007/s10664-008-9077-5
   Rayside D., 2007, INT C AUTOMATED SOFT, P194
   Seaman C, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P149
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Selakovic M, 2016, PROC INT CONF SOFTW, P61, DOI 10.1145/2884781.2884829
   Shaham R, 2003, LECT NOTES COMPUT SC, V2694, P483
   Sommerville I., 2010, SOFTWARE ENG
   Song LH, 2014, ACM SIGPLAN NOTICES, V49, P561, DOI [10.1145/2660193.2660234, 10.1145/2714064.2660234]
   Sor V, 2013, PROC IEEE INT CONF S, P544, DOI 10.1109/ICSM.2013.92
   Tan L, 2014, EMPIR SOFTW ENG, V19, P1665, DOI 10.1007/s10664-013-9258-8
   Torlak Emina., 2010, P 32 ACMIEEE INT C S, P535
   van Tonder R, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P151, DOI 10.1145/3180155.3180250
   Weimer W, 2005, LECT NOTES COMPUT SC, V3440, P461
   Weimer W, 2004, ACM SIGPLAN NOTICES, V39, P419, DOI 10.1145/1035292.1029011
   Weimer W, 2009, PROC INT CONF SOFTW, P364, DOI 10.1109/ICSE.2009.5070536
   Xie Y., 2005, Proceedings of the 10th European Software Engineering Conference Held Jointly with 13th ACM SIGSOFT International Symposium on Foundations of Software Engineering, P115, DOI [10.1145/1081706.1081728, DOI 10.1145/1081706.1081728]
   Xu GQ, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2491509.2491511
   Xu GQ, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P270
   Xu GQ, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P151, DOI 10.1145/1368088.1368110
   Xu Guoqing, 2010, P FSE SDP WORKSH FUT, P421
   Yan D., 2014, P ANN IEEE ACM INT S, P87
   Yan H, 2016, APPL COMPUT REV, V16, P38, DOI 10.1145/2851613.2851773
   Zhong H, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P913, DOI 10.1109/ICSE.2015.101
NR 66
TC 19
Z9 25
U1 1
U2 18
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN
PY 2020
VL 25
IS 1
BP 678
EP 718
DI 10.1007/s10664-019-09731-8
PG 41
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KP0WS
UT WOS:000515965100017
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Chekam, TT
   Papadakis, M
   Bissyandé, TF
   Le Traon, Y
   Sen, K
AF Titcheu Chekam, Thierry
   Papadakis, Mike
   Bissyande, Tegawende F.
   Le Traon, Yves
   Sen, Koushik
TI Selecting fault revealing mutants
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Mutation testing; Machine learning; Mutant selection; Mutant
   prioritization
ID ALL-USES; MUTATION; IMPROVEMENT; REDUCTION
AB Mutant selection refers to the problem of choosing, among a large number of mutants, the (few) ones that should be used by the testers. In view of this, we investigate the problem of selecting the fault revealing mutants, i.e., the mutants that are killable and lead to test cases that uncover unknown program faults. We formulate two variants of this problem: the fault revealing mutant selection and the fault revealing mutant prioritization. We argue and show that these problems can be tackled through a set of 'static' program features and propose a machine learning approach, named FaRM, that learns to select and rank killable and fault revealing mutants. Experimental results involving 1,692 real faults show the practical benefits of our approach in both examined problems. Our results show that FaRM achieves a good trade-off between application cost and effectiveness (measured in terms of faults revealed). We also show that FaRM outperforms all the existing mutant selection methods, i.e., the random mutant sampling, the selective mutation and defect prediction (mutating the code areas pointed by defect prediction). In particular, our results show that with respect to mutant selection, our approach reveals 23% to 34% more faults than any of the baseline methods, while, with respect to mutant prioritization, it achieves higher average percentage of revealed faults with a median difference between 4% and 9% (from the random mutant orderings).
C1 [Titcheu Chekam, Thierry; Papadakis, Mike; Bissyande, Tegawende F.; Le Traon, Yves] Univ Luxembourg, SnT Ctr, Luxembourg, Luxembourg.
   [Sen, Koushik] Univ Calif, Berkeley, CA USA.
C3 University of Luxembourg; University of California System; University of
   California Berkeley
RP Chekam, TT (corresponding author), Univ Luxembourg, SnT Ctr, Luxembourg, Luxembourg.
EM thierry.titcheu-chekam@uni.lu; michail.papadakis@uni.lu;
   tegawende.bissyande@uni.lu; yves.letraon@uni.lu; ksen@berkeley.edu
RI LE TRAON, Yves/T-2911-2019
OI Titcheu Chekam, Thierry/0000-0002-5295-1831; Papadakis,
   Mike/0000-0003-1852-2547; LE TRAON, Yves/0000-0002-1045-4861
CR A T Acree, 1979, GITICS7908
   Acree Jr A. T., 1980, On Mutation
   Ammann P, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P21, DOI 10.1109/ICST.2014.13
   Ammann Paul, 2008, Introduction to software testing, V1st
   B_ohme M., 2014, INT S SOFTWARE TESTI, P105
   Barbosa EF, 2001, SOFTW TEST VERIF REL, V11, P113, DOI 10.1002/stvr.226
   Breiman L., 2001, Mach. Learn., V45, P5
   BUDD TA, 1982, ACTA INFORM, V18, P31, DOI 10.1007/BF00625279
   Budd Timothy Alan, 1980, Mutation Analysis of Program Test Data
   Cadar C., 2008, OSDI, V8, P209, DOI DOI 10.5555/1855741.1855756
   Chekam TT, 2017, PROC INT CONF SOFTW, P597, DOI 10.1109/ICSE.2017.61
   Coles H., 2016, P 25 INT S SOFTWARE, P449
   Delamaro ME, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P11, DOI 10.1109/ICST.2014.12
   Delamaro ME, 2001, KLUW INT S ADV DATA, V24, P91
   Delgado-Pérez P, 2018, INFORM SOFTWARE TECH, V104, P130, DOI 10.1016/j.infsof.2018.07.011
   DeMillo R. A., 1988, Proceedings of the Second Workshop on Software Testing, Verification, and Analysis (Cat. No.88TH0225-3), P142, DOI 10.1109/WST.1988.5369
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   DEMILLO RA, 1991, IEEE T SOFTWARE ENG, V17, P900, DOI 10.1109/32.92910
   Deng L, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P84, DOI 10.1109/ICST.2013.20
   Ferrari FC, 2018, IEEE ICST WORKSHOP, P1, DOI 10.1109/ICSTW.2018.00021
   Frankl P. G., 1998, Software Engineering Notes, V23, P153, DOI 10.1145/291252.288298
   Frankl PG, 1997, J SYST SOFTWARE, V38, P235, DOI 10.1016/S0164-1212(96)00154-9
   Fraser G, 2012, IEEE T SOFTWARE ENG, V38, P278, DOI 10.1109/TSE.2011.93
   Friedman JH, 2002, COMPUT STAT DATA AN, V38, P367, DOI 10.1016/S0167-9473(01)00065-2
   Gong DW, 2017, INFORM SOFTWARE TECH, V81, P82, DOI 10.1016/j.infsof.2016.05.001
   Harir F, 2016, PROC INT SYMP SOFTW, P105, DOI 10.1109/ISSRE.2016.51
   Henard C, 2016, PROC INT CONF SOFTW, P523, DOI 10.1145/2884781.2884791
   Jia Y, 2009, INFORM SOFTWARE TECH, V51, P1379, DOI 10.1016/j.infsof.2009.04.016
   Jia Yue, 2016, P 25 INT S SOFTWARE, P354
   Jiang LX, 2007, PROC INT CONF SOFTW, P96
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Just R, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P284, DOI 10.1145/3092703.3092732
   Just R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P654, DOI 10.1145/2635868.2635929
   Kamei Y, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 5, P33, DOI 10.1109/SANER.2016.56
   Keck T, 2016, FASTBDT SPEED OPTIMI
   Kintis M, 2018, IEEE T SOFTWARE ENG, V44, P308, DOI 10.1109/TSE.2017.2684805
   Kintis M, 2010, ASIA PAC SOFWR ENG, P300, DOI 10.1109/APSEC.2010.42
   KNIGHT JC, 1986, IEEE T SOFTWARE ENG, V12, P96, DOI 10.1109/TSE.1986.6312924
   Kurtz B, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P571, DOI 10.1145/2950290.2950322
   Leveson N.G., 1995, Safeware: System Safety and Computers
   Li N, 2009, IEEE ICST WORKSHOP, P220, DOI 10.1109/ICSTW.2009.30
   Mao DY, 2019, IEEE INT CONF SOFTW, P160, DOI 10.1109/ICST.2019.00025
   Mathur A. P., 1991, Proceedings of the Fifteenth Annual International Computer Software and Applications Conference (Cat. No.91CH3023-9), P604, DOI 10.1109/CMPSAC.1991.170248
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Mirshokraie S, 2015, IEEE T SOFTWARE ENG, V41, P429, DOI 10.1109/TSE.2014.2371458
   Mresa E. S., 1999, Software Testing, Verification and Reliability, V9, P205, DOI 10.1002/(SICI)1099-1689(199912)9:4<205::AID-STVR186>3.0.CO;2-X
   Namin AS, 2015, SOFTW TEST VERIF REL, V25, P572, DOI 10.1002/stvr.1542
   Namin AS, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P351, DOI 10.1145/1368088.1368136
   Natekin A, 2013, FRONT NEUROROBOTICS, V7, DOI 10.3389/fnbot.2013.00021
   Natella R, 2013, IEEE T SOFTWARE ENG, V39, P80, DOI 10.1109/TSE.2011.124
   Offutt A. J., 1996, ACM Transactions on Software Engineering and Methodology, V5, P99, DOI 10.1145/227607.227610
   Offutt A. J., 1994, Software Testing, Verification and Reliability, V4, P131, DOI 10.1002/stvr.4370040303
   OFFUTT AJ, 1993, PROC INT CONF SOFTW, P100, DOI 10.1109/ICSE.1993.346062
   Offutt AJ, 1996, SOFTWARE PRACT EXPER, V26, P165, DOI 10.1002/(SICI)1097-024X(199602)26:2<165::AID-SPE5>3.0.CO;2-K
   Palix N, 2011, ACM SIGPLAN NOTICES, V46, P305, DOI 10.1145/1961296.1950401
   Papadakis Mike, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P121, DOI 10.1109/ISSRE.2010.38
   Papadakis Mike, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P90, DOI 10.1109/ICSTW.2010.50
   Papadakis M, 2018, 13 INT WORKSH MUT AN
   Papadakis M, 2018, ADV COMPUTERS
   Papadakis M, 2018, P 40 INT C SOFTW ENG
   Papadakis M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P936, DOI 10.1109/ICSE.2015.103
   Petrovic G, 2018, IEEE ICST WORKSHOP, P47, DOI 10.1109/ICSTW.2018.00027
   Ramler R., 2017, P S APPL COMP ACM NE, P1401, DOI [10.1145/3019612.3019830, DOI 10.1145/3019612.3019830]
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Schuler D, 2013, SOFTW TEST VERIF REL, V23, P353, DOI 10.1002/stvr.1473
   SiR, 2018, SOFTW ART INFR REP
   Sun CA, 2017, INFORM SOFTWARE TECH, V81, P65, DOI 10.1016/j.infsof.2016.02.006
   Tan SH, 2017, PROC IEEE ACM INT C, P180, DOI 10.1109/ICSE-C.2017.76
   Untch R.H., 2009, ACMSE, P1, DOI 10.1145/1566445.1566540
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Wen M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/3180155.3180233
   Wong W.E., 1993, On Mutation and Data Flow
   WONG WE, 1995, J SYST SOFTWARE, V31, P185, DOI 10.1016/0164-1212(94)00098-0
   Yu-Seung Ma, 2006, 28th International Conference on Software Engineering Proceedings, P827
   Zhang J, 2019, IEEE T SOFTWARE ENG, V45, P898, DOI 10.1109/TSE.2018.2809496
   Zhang Jie, 2016, P 25 INT S SOFTWARE, P342, DOI [10.1145/2931037, DOI 10.1145/2931037]
   Zhang L., 2013, P 2013 INT S SOFTW T, P235
   Zheng A., 2015, Evaluating Machine Learning Models A Beginner's Guide to Key Concepts and Pitfalls
   Zheng H, 2010, 2ND IEEE INTERNATIONAL CONFERENCE ON ADVANCED COMPUTER CONTROL (ICACC 2010), VOL. 2, P431, DOI 10.1109/ICACC.2010.5486640
NR 79
TC 42
Z9 46
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN
PY 2020
VL 25
IS 1
BP 434
EP 487
DI 10.1007/s10664-019-09778-7
PG 54
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KP0WS
UT WOS:000515965100011
OA hybrid, Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Vale, G
   Schmid, A
   Santos, AR
   de Almeida, ES
   Apel, S
AF Vale, Gustavo
   Schmid, Angelika
   Santos, Alcemir Rodrigues
   De Almeida, Eduardo Santana
   Apel, Sven
TI On the relation between Github communication activity and merge
   conflicts
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Collaborative software development; Version control systems; Developer
   communication; Merge conflicts
ID PUBLICATION
AB Version control systems assist developers in managing concurrent changes to a common code base by tracking all code contributions over time. A notorious problem is that, when integrating code contributions, merge conflicts may occur and resolving them is a time-consuming and error-prone task. There is a popular belief that communication and collaboration success are mutually dependent. So, it is believed that great communication activity helps to avoid merge conflicts. However, in practice, the role of communication activity for merge conflicts to occur or to be avoided has not been thoroughly investigated. To better understand this relation, we analyzed the history of 30 popular open-source projects involving 19 thousand merge scenarios. Methodologically, we used a bivariate (Spearman's rank correlation) and a multivariate (principal component analysis and partial correlations) analysis to quantify their correlation. In bivariate analysis, we found a weak positive correlation between GitHub communication activity and the number of merge conflicts. However, in the multivariate analysis, the positive correlation disappeared, not supporting the intuition that GitHub communication helps to avoid merge conflicts. Interestingly, we found that the strength of this relationship depends on the merge scenarios' characteristics, such as the number of lines of code changed. Puzzled by these unexpected results, we investigated each covariate, which provided justifications for our findings. The main conclusion from our study is that GitHub communication activity itself does not support the emergence or avoidance of merge conflicts even though such communication is associated only with merge scenario code changes or among developers only.
C1 [Vale, Gustavo; Schmid, Angelika] Univ Passau, Passau, Germany.
   [Santos, Alcemir Rodrigues] Univ Estadual Piaui, Teresina, Brazil.
   [De Almeida, Eduardo Santana] Univ Fed Bahia, Salvador, Brazil.
   [Apel, Sven] Saarland Univ, Saarbrucken, Germany.
C3 University of Passau; Universidade Estadual do Piaui (UESPI);
   Universidade Federal da Bahia; Saarland University
RP Vale, G (corresponding author), Univ Passau, Passau, Germany.
EM vale@fim.uni-passau.de
RI de Almeida, Eduardo/JJC-2493-2023
OI Vale, Gustavo/0000-0002-8879-5797; Apel, Sven/0000-0003-3687-2233;
   Rodrigues Santos, Alcemir/0000-0001-8880-2996
CR Accioly P, 2017, Empirical software engineering, P1
   [Anonymous], 2014, HDB QUANTITATIVE MET
   [Anonymous], 2018, IEEE T SOFTWARE ENG
   Apel S., 2011, P 19 ACM SIGSOFT S 1, P190, DOI DOI 10.1145/2025113.2025141
   Apel S, 2012, P INT C AUT SOFTW EN
   Aranda J, 2009, PROC INT CONF SOFTW, P298, DOI 10.1109/ICSE.2009.5070530
   Begel A., 2010, Software Engineering, 2010 ACM/IEEE 32nd International Conference on, V1, P125
   Biehl JT, 2007, CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1 AND 2, P1313
   Bird C, 2009, PROC INT CONF SOFTW, P518, DOI 10.1109/ICSE.2009.5070550
   Bird Christian, 2008, Proceedings of the 2008 ACM SIGSOFT Symposium on the Foundations of Software Engineering, P24
   Borges H, 2018, J SYST SOFTWARE, V146, P112, DOI 10.1016/j.jss.2018.09.016
   Brun Y., 2011, Proceedings of the 19th ACM SIGSOFT symposium and the 13th European Conference on Foundations of Software Engineering (FSE'11), P168, DOI [10.1145/2025113.2025139, DOI 10.1145/2025113.2025139]
   Dabbish L, 2012, P ACM 2012 C COMP SU, P1277, DOI [10.1145/2145204.2145396, DOI 10.1145/2145204.2145396]
   de Souza C. R. B., 2004, Software Engineering Notes, V29, P221, DOI 10.1145/1041685.1029925
   Dewan P, 2007, ECSCW 2007: PROCEEDINGS OF THE 10TH EUROPEAN CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK, P159, DOI 10.1007/978-1-84800-031-5_9
   DICKERSIN K, 1992, JAMA-J AM MED ASSOC, V267, P374, DOI 10.1001/jama.267.3.374
   Figueiredo E, 2018, SOFTW QUAL J, V27, P1
   Foucault Matthieu, 2014, P 18 INT C EV ASS SO, P1
   Gousios G, 2016, PROC INT CONF SOFTW, P285, DOI 10.1145/2884781.2884826
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   Greiler M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P2, DOI 10.1109/MSR.2015.8
   Grinter RE, 1999, P 1999 ACM INT C SUP, P306, DOI DOI 10.1145/320297.320333
   Guimaraes ML, 2012, PROC INT CONF SOFTW, P342, DOI 10.1109/ICSE.2012.6227180
   Guzzi A, 2013, IEEE WORK CONF MIN S, P277, DOI 10.1109/MSR.2013.6624039
   Joblin M, 2017, EVOLUTIONARY TRENDS, V22
   Joblin M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P563, DOI 10.1109/ICSE.2015.73
   Jolliffe I., 1986, Journel, DOI DOI 10.1007/B98835
   Just S, 2016, PROC INT SYMP SOFTW, P400, DOI 10.1109/ISSRE.2016.38
   Kalliamvakou E., 2014, P 11 WORKING C MININ, P92, DOI DOI 10.1145/2597073.2597074
   Kasi BK, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P732, DOI 10.1109/ICSE.2013.6606619
   Kim S, 2015, COMMUN STAT APPL MET, V22, P665, DOI 10.5351/CSAM.2015.22.6.665
   LaToza T. D., 2006, 28th International Conference on Software Engineering Proceedings, P492, DOI 10.1145/1134285.1134355
   Le<ss>enich O, 2017, AUTOMAT SOFTW ENG, V25, P1
   Liu J, 2016, P INT COMP SOFTW APP, P313, DOI 10.1109/COMPSAC.2016.27
   Mckee S, 2017, PROC IEEE INT CONF S, P467, DOI 10.1109/ICSME.2017.53
   Mens T, 2002, STATE ART SURVEY SOF, V28
   Nelson N. M, 2019, EMPIR SOFTW ENG, P1
   Olson CM, 2002, JAMA-J AM MED ASSOC, V287, P2825, DOI 10.1001/jama.287.21.2825
   Panichella S, 2014, PROC IEEE INT CONF S, P251, DOI 10.1109/ICSME.2014.47
   Reiter E, 2003, ARTIF INTELL, V144, P41, DOI 10.1016/S0004-3702(02)00370-3
   Sarma A, 2012, PALANTIR EARLY DETEC, V38
   Sedano T, 2017, PROC INT CONF SOFTW, P130, DOI 10.1109/ICSE.2017.20
   Siegmund J, 2015, EMPIR SOFTW ENG, V20, P1159, DOI 10.1007/s10664-014-9318-8
   Singhal LK, 2013, ADV MATER RES-SWITZ, V794, P103, DOI 10.4028/www.scientific.net/AMR.794.103
   Storey MA, 2016, SOCIAL COMMUNICATION, V43
   Tsay J, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P356, DOI 10.1145/2568225.2568315
   Vale G, 2019, RELATION COORDINATIO
   WRIGHT SP, 1992, BIOMETRICS, V48, P1005, DOI 10.2307/2532694
   ZAR JH, 1972, J AM STAT ASSOC, V67, P578, DOI 10.2307/2284441
   Zimmermann T, 2004, PROC INT CONF SOFTW, P563, DOI 10.1109/ICSE.2004.1317478
NR 50
TC 8
Z9 8
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN
PY 2020
VL 25
IS 1
BP 402
EP 433
DI 10.1007/s10664-019-09774-x
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KP0WS
UT WOS:000515965100010
DA 2024-07-18
ER

PT J
AU Noei, E
   Zhang, F
   Wang, SH
   Zou, Y
AF Noei, Ehsan
   Zhang, Feng
   Wang, Shaohua
   Zou, Ying
TI Towards prioritizing user-related issue reports of mobile applications
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Mobile application; Issue report prioritization; User-review; Issue
   tracking system
ID MODEL
AB The competitive market of mobile applications (apps) has driven app developers to pay more attention to addressing the issues of mobile apps. Prior studies have shown that addressing the issues that are reported in user-reviews shares a statistically significant relationship with star-ratings. However, despite the prevalence and importance of user-reviews and issue reports prioritization, no prior research has analyzed the relationship between issue reports prioritization and star-ratings. In this paper, we integrate user-reviews into the process of issue reports prioritization. We propose an approach to map issue reports that are recorded in issue tracking systems to user-reviews. Through an empirical study of 326 open-source Android apps, our approach achieves a precision of 79% in matching user-reviews with issue reports. Moreover, we observe that prioritizing the issue reports that are related to user-reviews shares a significant positive relationship with star-ratings. Furthermore, we use the top apps, in terms of star-ratings, to train a model for prioritizing issue reports. It is a good practice to learn from the top apps as there is no well-established approach for prioritizing issue reports. The results show that mobile apps with a similar prioritization approach to our trained model achieve higher star-ratings.
C1 [Noei, Ehsan; Zou, Ying] Queens Univ, Dept Elect & Comp Engn, Kingston, ON, Canada.
   [Zhang, Feng] Queens Univ, Sch Comp, Kingston, ON, Canada.
   [Wang, Shaohua] New Jersey Inst Technol, Dept Informat, Newark, NJ 07102 USA.
C3 Queens University - Canada; Queens University - Canada; New Jersey
   Institute of Technology
RP Noei, E (corresponding author), Queens Univ, Dept Elect & Comp Engn, Kingston, ON, Canada.
EM e.noei@queensu.ca; feng@cs.queensu.ca; davidsw@njit.edu;
   ying.zou@queensu.ca
RI Zhang, Feng/AAQ-3506-2021; Zou, Ying/KLC-9380-2024; Wang,
   Shaohua/AAF-7235-2019
OI wang, shaohua/0000-0001-5777-7759; Noei, Ehsan/0000-0001-7192-4604
CR Alenezi M, 2013, 2013 12TH INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA 2013), VOL 2, P112, DOI 10.1109/ICMLA.2013.114
   Allacronyms, 2017, ACRONYMS ABBREVIATIO
   [Anonymous], 2006, Proceedings of the 2006 Conference on Empirical Methods in Natural Language Processing (EMNLP 2006), DOI DOI 10.3115/1610075.1610135
   [Anonymous], 2017, NUMB APPS AV LEAD AP
   [Anonymous], 2016, NUMB ANDR APPL
   [Anonymous], 1972, GEN LINEAR MODELS EN
   [Anonymous], 2017, LANGUAGE DETECTION L
   [Anonymous], 2017, JAZZY SPELL CHECKER
   Archer KJ, 2008, COMPUT STAT DATA AN, V52, P2249, DOI 10.1016/j.csda.2007.08.015
   Basili Victor R., 1992, TECH REP
   Bavota G, 2015, IEEE T SOFTWARE ENG, V41, P384, DOI 10.1109/TSE.2014.2367027
   Bertram D, 2010, 2010 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, P291
   Bhattacharya P, 2013, EMPIRICAL ANAL BUG R
   Biau G, 2016, TEST-SPAIN, V25, P197, DOI 10.1007/s11749-016-0481-7
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Broder AZ, 1997, COMPUT NETWORKS ISDN, V29, P1157, DOI 10.1016/S0169-7552(97)00031-7
   Calders T, 2010, DATA MIN KNOWL DISC, V21, P277, DOI 10.1007/s10618-010-0190-x
   Carreño LVG, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P582, DOI 10.1109/ICSE.2013.6606604
   Cavalcanti YC, 2013, SOFTWARE QUAL J, V21, P39, DOI 10.1007/s11219-011-9164-5
   Chen N, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P767, DOI 10.1145/2568225.2568263
   Ciurumelea A, 2017, 24 INT C SOFTW AN EV
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Cohen J., 1988, STAT POWER ANAL BEHA
   De Marneffe M.-C., 2006, LREC, V6, P449
   Di Sorbo A, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P499, DOI 10.1145/2950290.2950299
   Ebert C, 2009, IEEE SOFTWARE, V26, P88, DOI 10.1109/MS.2009.144
   Ester M., 1996, KDD 96, P226, DOI DOI 10.5555/3001460.3001507
   Faraway J., 2005, Extending the linear model with R: Generalized linear, mixed effects and nonparametric regression models
   Gousios G, 2013, IEEE WORK CONF MIN S, P233, DOI 10.1109/MSR.2013.6624034
   Guzman E, 2014, INT REQUIR ENG CONF, P153, DOI 10.1109/RE.2014.6912257
   Iacob C, 2013, IEEE WORK CONF MIN S, P41, DOI 10.1109/MSR.2013.6624001
   Islam MR, 2017, IEEE WORK CONF MIN S, P203, DOI 10.1109/MSR.2017.9
   Janak J, 2009, ISSUE TRACKING SYSTE
   Kanwal J, 2012, J COMPUT SCI TECH-CH, V27, P397, DOI 10.1007/s11390-012-1230-3
   Kelley T.L., 1947, Fundamentals of Statistics
   Khalid H, 2014, P 22 ACM SIGSOFT INT, P370
   Khalid H, 2016, IEEE SOFTWARE, V33, P34, DOI 10.1109/MS.2015.29
   Lamkanfi Ahmed, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P1, DOI 10.1109/MSR.2010.5463284
   Linares-Vásquez M, 2015, PROC IEEE INT CONF S, P352, DOI 10.1109/ICSM.2015.7332486
   Lovins JulieB., 1968, Development of a Stemming Algorithm
   Maji AK, 2010, CHARACTERIZING FAILU
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Manning CD, 2014, PROCEEDINGS OF 52ND ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: SYSTEM DEMONSTRATIONS, P55, DOI 10.3115/v1/p14-5010
   Marlow P, 2011, J VISION, V11, DOI 10.1167/11.9.16
   Martin W, 2015, CAUSAL IMPACT ANAL A, V15
   Martin W, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P123, DOI 10.1109/MSR.2015.19
   McDonnell T, 2013, PROC IEEE INT CONF S, P70, DOI 10.1109/ICSM.2013.18
   Menzies T, 2008, PROC IEEE INT CONF S, P346, DOI 10.1109/ICSM.2008.4658083
   MILLER GA, 1995, COMMUN ACM, V38, P39, DOI 10.1145/219717.219748
   Moran K, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P673, DOI 10.1145/2786805.2786857
   Netlingo, 2017, TOP 50 MOST POPULAR
   Nguyen T.N. D., 2010, Proceedings of the International Conference on Software Maintenance, P1, DOI DOI 10.1109/ICSM.2010.5609560
   Noei E, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P283, DOI 10.1145/3236024.3236044
   Noei E, 2017, EMPIR SOFTW ENG, V22, P3088, DOI 10.1007/s10664-017-9507-3
   Noei E, 2016, INFORM SOFTWARE TECH, V75, P135, DOI 10.1016/j.infsof.2016.03.007
   Nord C, 2005, TEXT ANAL TRANSLATIO, V94
   Palomba F, 2015, PROC IEEE INT CONF S, P291, DOI 10.1109/ICSM.2015.7332475
   Panichella S, 2015, 31 INT C SOFTW MAINT
   Rajaraman A., 2012, Mining of massive datasets, V77
   Romero DM, 2011, LECT NOTES ARTIF INT, V6913, P18, DOI 10.1007/978-3-642-23808-6_2
   SALTON G, 1975, COMMUN ACM, V18, P613, DOI 10.1145/361219.361220
   Salton G., 1983, Introduction to modern information retrieval, P24
   Selenium, 2017, SELENIUM WEB BROWSER
   Statista, 2020, Number of Smartphone Users Worldwide 2014-2020
   Steinmacher I., 2012, 2012 Third International Workshop on Recommendation Systems for Software Engineering (RSSE), P63, DOI 10.1109/RSSE.2012.6233413
   Steinmacher I, 2018, LET ME GUIDELINES SU
   Strobl C, 2007, BMC BIOINFORMATICS, V8, DOI 10.1186/1471-2105-8-25
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Tin Kam Ho, 1995, Proceedings of the Third International Conference on Document Analysis and Recognition, P278, DOI 10.1109/ICDAR.1995.598994
   van Solingen R., 2002, Encyclopedia of Software Engineering, DOI [DOI 10.1002/0471028959.SOF142, 10.1002/0471028959.sof142]
   Vasilescu B, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING CHASE 2015, P50, DOI 10.1109/CHASE.2015.14
   Villarroel L, 2016, PROC INT CONF SOFTW, P14, DOI 10.1145/2884781.2884818
   Xuan JF, 2012, PROC INT CONF SOFTW, P25, DOI 10.1109/ICSE.2012.6227209
   Yin R. K., 2017, CASE STUDY RES DESIG
   Yu L, 2010, LECT NOTES ARTIF INT, V6441, P356, DOI 10.1007/978-3-642-17313-4_35
   Yu Y, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P367, DOI 10.1109/MSR.2015.42
   Yuan Tian, 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P215, DOI 10.1109/WCRE.2012.31
   Zanatta AL, 2018, SBES'18: PROCEEDINGS OF THE XXXII BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING, P5, DOI 10.1109/MS.2017.32
   Zhang F, 2016, EMPIR SOFTW ENG, V21, P2107, DOI 10.1007/s10664-015-9396-2
NR 80
TC 21
Z9 21
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2019
VL 24
IS 4
BP 1964
EP 1996
DI 10.1007/s10664-019-09684-y
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IL9CL
UT WOS:000477582700008
DA 2024-07-18
ER

PT J
AU Gao, RZ
   Wang, YB
   Feng, Y
   Chen, ZY
   Wong, WE
AF Gao, Ruizhi
   Wang, Yabin
   Feng, Yang
   Chen, Zhenyu
   Wong, W. Eric
TI Successes, challenges, and rethinking - an industrial investigation on
   crowdsourced mobile application testing
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Crowdsourcing; Crowdsourced mobile application testing; Android
   applications
ID SOFTWARE; CROWD
AB The term crowdsourcing - a compound contraction of crowd and outsourcing - is a new paradigm for utilizing the power of crowds of people to facilitate large-scale tasks that are costly or time consuming with traditional methods. This paradigm offers mobile application companies the possibility to outsource their testing activities to crowdsourced testers (crowdtesters) who have various testing facilities and environments, as well as different levels of skills and expertise. With this so-called Crowdsourced Mobile Application Testing (CMAT), some of the well-recognized issues in testing mobile applications, such as multitude of mobile devices, fragmentation of device models, variety of OS versions, and omnifariousness of testing scenarios, could be mitigated. However, how effective is CMAT in practice? What are the challenges and issues presented by the process of applying CMAT? How can these issues and challenges be overcome and CMAT be improved? Although CMAT has attracted attention from both academia and industry, these questions have not been addressed or researched in depth based on a large-scale and real-life industrial study. Since June 2015, we have worked with Mooctest, Inc., a CMAT intermediary, on testing five real-life Android applications using their CMAT platform - Kikbug. Throughout the process, we have collected 1013 bug reports from 258 crowdtesters and found 247 bugs in total. This paper will present our industrial study thoroughly and give an insightful analysis to investigate the successes and challenges of applying CMAT.
C1 [Gao, Ruizhi; Wong, W. Eric] Univ Texas Dallas, Dept Comp Sci, Richardson, TX 75083 USA.
   [Wang, Yabin; Feng, Yang; Chen, Zhenyu] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210023, Jiangsu, Peoples R China.
   [Feng, Yang] Univ Calif Irvine, Dept Informat, Irvine, CA USA.
C3 University of Texas System; University of Texas Dallas; Nanjing
   University; University of California System; University of California
   Irvine
RP Wong, WE (corresponding author), Univ Texas Dallas, Dept Comp Sci, Richardson, TX 75083 USA.; Chen, ZY (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210023, Jiangsu, Peoples R China.
EM gxr116020@utdallas.edu; wangyabin890512@gmail.com; yang.feng@uci.edu;
   zychen@nju.edu.cn; ewong@utdallas.edu
RI Wang, Yabin/HLG-3966-2023
OI Wang, Yabin/0000-0001-6816-4552
FU National Natural Science Foundation of China [61690201]
FX This work was supported in part by National Natural Science Foundation
   of China (Grant Nos. 61690201).
CR Allahbakhsh M, 2013, IEEE INTERNET COMPUT, V17, P76, DOI 10.1109/MIC.2013.20
   [Anonymous], 2011, Proceedings of the 24th annual ACM symposium on User interface software and technology
   [Anonymous], 2018, AMAZON MECH TURK
   [Anonymous], 2018, ADAPTIVE VEHICLE MAK
   [Anonymous], 2018, CLOUDMUSIC
   [Anonymous], ANDR FRAGM VIS
   Bruun A, 2015, J SYST SOFTWARE, V105, P40, DOI 10.1016/j.jss.2015.03.043
   Capgemini, 2017, WORLD QUAL REP MOB T
   Chen ZY, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P272, DOI 10.1145/2591062.2591153
   Cheng J, 2015, CHI 2015: PROCEEDINGS OF THE 33RD ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P1365, DOI 10.1145/2702123.2702145
   Crowdsourcing.org, 2013, US CROWDS SOFTW TEST
   Dolstra E, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P332, DOI 10.1109/ICST.2013.44
   Feng Y, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P225, DOI 10.1145/2786805.2786862
   Goldau M., 2011, 2011 IEEE Symposium on Biological Data Visualization, P23, DOI 10.1109/BioVis.2011.6094044
   Gómez M, 2016, 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2016), P88, DOI [10.1109/MobileSoft.2016.033, 10.1145/2897073.2897088]
   Guaiani F., 2016, P 2 INT WORKSH CROWD, P32
   Haerem T, 2007, J APPL PSYCHOL, V92, P1320, DOI 10.1037/0021-9010.92.5.1320
   Harman M, 2014, 9TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2014), P1, DOI 10.1145/2593929.2600116
   HOTELLING H, 1932, J R STAT SOC, V15, P193
   Howe J., 2016, WIRED MAGAZINE
   Huang YX, 2013, PR SOUTH BIOMED ENG, P17, DOI 10.1109/SBEC.2013.17
   LaToza TD, 2016, IEEE SOFTWARE, V33, P74, DOI 10.1109/MS.2016.12
   Leicht N., 2016, P EUR C INF SYST IST, P1
   Leicht N, 2017, IEEE SOFTWARE, V34, P62, DOI 10.1109/MS.2017.37
   Liu Di, 2012, Proceedings of the American Society for Information Science and Technology, V49, P1, DOI DOI 10.1002/MEET.14504901100
   Lucas Dargis, 2013, IS UTEST A SCAM
   Man-Ching Yuen, 2011, Proceedings of the 2011 IEEE Third International Conference on Privacy, Security, Risk and Trust and IEEE Third International Conference on Social Computing (PASSAT/SocialCom 2011), P766, DOI 10.1109/PASSAT/SocialCom.2011.203
   Mäntylä MV, 2013, INFORM SOFTWARE TECH, V55, P986, DOI 10.1016/j.infsof.2012.12.004
   Mao K., 2015, SURVEY USE CROWDSOUR
   Mok RKP, 2017, IEEE T MULTIMEDIA, V19, P530, DOI 10.1109/TMM.2016.2619901
   Mujumdar Dhawal, 2011, CHI 11 EXTENDED ABST, P1525, DOI [10.1145/1979742, DOI 10.1145/1979742]
   Nebeling Michael., 2013, Proceedings of the 5th ACM SIGCHI symposium on Engineering interactive computing systems, P255, DOI 10.1145/2494603.2480303
   Pastore F, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P342, DOI 10.1109/ICST.2013.13
   Xue H., 2013, THESIS
   Yan M Z, 2014, Proceedings of the 1st International Workshop on Crowd-based Software Development Methods and Technologies, P19, DOI DOI 10.1145/2666539.2666569
   Zhang XL, 2014, IEEE T PARALL DISTR, V25, P3190, DOI 10.1109/TPDS.2013.2297112
   Zogaj S., 2014, J BUSINESS EC, V84, P375
NR 37
TC 18
Z9 19
U1 1
U2 10
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2019
VL 24
IS 2
BP 537
EP 561
DI 10.1007/s10664-018-9618-5
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HQ8DM
UT WOS:000462654200001
DA 2024-07-18
ER

PT J
AU Sirres, R
   Bissyand, TF
   Kim, D
   Lo, D
   Klein, J
   Kim, K
   Le Traon, Y
AF Sirres, Raphael
   Bissyand, Tegawende F.
   Kim, Dongsun
   Lo, David
   Klein, Jacques
   Kim, Kisub
   Le Traon, Yves
TI Augmenting and structuring user queries to support efficient free-form
   code search
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Code search; GitHub; Free-form search; Query augmentation;
   StackOverflow; Vocabulary mismatch
ID ENGINE
AB Source code terms such as method names and variable types are often different from conceptual words mentioned in a search query. This vocabulary mismatch problem can make code search inefficient. In this paper, we present COde voCABUlary (CoCaBu), an approach to resolving the vocabulary mismatch problem when dealing with free-form code search queries. Our approach leverages common developer questions and the associated expert answers to augment user queries with the relevant, but missing, structural code entities in order to improve the performance of matching relevant code examples within large code repositories. To instantiate this approach, we build GitSearch, a code search engine, on top of GitHub and Stack Overflow Q&A data. We evaluate GitSearch in several dimensions to demonstrate that (1) its code search results are correct with respect to user-accepted answers; (2) the results are qualitatively better than those of existing Internet-scale code search engines; (3) our engine is competitive against web search engines, such as Google, in helping users solve programming tasks; and (4) GitSearch provides code examples that are acceptable or interesting to the community as answers for Stack Overflow questions.
C1 [Sirres, Raphael] Natl Lib Luxembourg, 37 Blvd FD, L-2450 Roosevelt, Luxembourg.
   [Bissyand, Tegawende F.; Kim, Dongsun; Klein, Jacques; Kim, Kisub; Le Traon, Yves] Univ Luxembourg, Interdisciplinary Ctr Secur Reliabil & Trust, 29 Ave JF, L-1855 Kennedy, Luxembourg.
   [Lo, David] Singapore Management Univ, Sch Informat Syst, 80 Stamford Rd, Singapore 178902, Singapore.
C3 University of Luxembourg; Singapore Management University
RP Kim, D (corresponding author), Univ Luxembourg, Interdisciplinary Ctr Secur Reliabil & Trust, 29 Ave JF, L-1855 Kennedy, Luxembourg.
EM bconnectlu@gmail.com; tegawende.bissyande@uni.lu; dongsun.kim@uni.lu;
   davidlo@smu.edu.sg; jacques.klein@uni.lu; kisub.kim@uni.lu;
   yves.letraon@uni.lu
RI Kim, Kisub/GMX-3152-2022; LE TRAON, Yves/T-2911-2019; Lo,
   David/A-2493-2012; Kim, Dongsun/B-4856-2015
OI Klein, Jacques/0000-0003-4052-475X; Lo, David/0000-0002-4367-7201; Kim,
   Dongsun/0000-0003-0272-6860; LE TRAON, Yves/0000-0002-1045-4861
FU Fonds National de la Recherche (FNR), Luxembourg, under project
   RECOMMEND [C15/IS/10449467]; Fonds National de la Recherche (FNR),
   Luxembourg, under project FIXPATTERN [C15/IS/9964569]; Fonds National de
   la Recherche (FNR), Luxembourg, under project FNR-AFR [PhD/11623818];
   Singapore Ministry of Education (MOE) Academic Research Fund (AcRF) Tier
   1 grant [16-C220-SMU-004]
FX The authors would like to thank the anonymous reviewers for their
   helpful comments and suggestions. This work was supported by the Fonds
   National de la Recherche (FNR), Luxembourg, under projects RECOMMEND
   C15/IS/10449467, FIXPATTERN C15/IS/9964569, FNR-AFR PhD/11623818, and by
   the Singapore Ministry of Education (MOE) Academic Research Fund (AcRF)
   Tier 1 grant, under project 16-C220-SMU-004.
CR Anh Tuan Nguyen, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P263, DOI 10.1109/ASE.2011.6100062
   [Anonymous], 2013, Finding Source Code on the Web for Remix and Reuse, DOI DOI 10.1007/978-1-4614-6596-6_15
   [Anonymous], 2010, P 32 ACMIEEE INT C S
   [Anonymous], 2003, P SIGIR
   [Anonymous], 2007, P 22 IEEE ACM INT C
   Bajracharya S., 2006, COMP 21 ACM SIGPLAN, P681, DOI DOI 10.1145/1176617.1176671
   Bajracharya S.K., 2010, P 18 ACM SIGSOFT INT, P157, DOI 10.1145/1882291.1882316
   Bajracharya SK, 2010, THESIS
   Bissyandé TF, 2013, P INT COMP SOFTW APP, P303, DOI 10.1109/COMPSAC.2013.55
   Bissyande TF, 2013, ICECSS
   Carpineto C, 2001, ACM T INFORM SYST, V19, P1, DOI 10.1145/366836.366860
   Chatterjee S, 2009, LECT NOTES COMPUT SC, V5503, P385
   Dagenais B, 2012, PROC INT CONF SOFTW, P47, DOI 10.1109/ICSE.2012.6227207
   diaeresis>tze Hinrich Schu<spacing, 2008, INTRO INFORM RETRIEV, V39
   Eckert K, 2007, K-CAP'07: PROCEEDINGS OF THE FOURTH INTERNATIONAL CONFERENCE ON KNOWLEDGE CAPTURE, P103
   Emenecker J., 2010, P 32 ACM IEEE INT C, V1, P155, DOI DOI 10.1145/1806799.1806825
   FURNAS GW, 1987, COMMUN ACM, V30, P964, DOI 10.1145/32206.32212
   Gallardo-Valencia RE, 2009, P 2009 WORKSH SEARCH
   Gollapudi S., 2011, P 20 ACM INT C INF K, P2417, DOI 10.1145/2063576.2063981
   Gu X, 2016, INT S FDN SOFTW ENG
   Haiduc S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1307, DOI 10.1109/ICSE.2013.6606704
   Haiduc S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P842, DOI 10.1109/ICSE.2013.6606630
   Hill E, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P34, DOI 10.1109/CSMR-WCRE.2014.6747190
   Hoffmann R, 2007, UIST 2007: PROCEEDINGS OF THE 20TH ANNUAL ACM SYMPOSIUM ON USER INTERFACE SOFTWARE AND TECHNOLOGY, P13
   Holmes R, 2005, PROC INT CONF SOFTW, P117
   Kalliamvakou E., 2014, P 11 WORKING C MININ, P92, DOI DOI 10.1145/2597073.2597074
   Keivanloo I, 2014, P ICSE
   Kim S, 2016, EMPIR SOFTW ENG, V21, P565, DOI 10.1007/s10664-015-9369-5
   Lemos O.A. L., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, P212, DOI DOI 10.1145/2597073.2597087
   Liu LM, 1999, DISTRIB PARALLEL DAT, V7, P37, DOI 10.1023/A:1008682210559
   Lozano A., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P384, DOI 10.1109/ASE.2011.6100078
   Lu ML, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P545, DOI 10.1109/SANER.2015.7081874
   Lv F, 2015, IEEE INT CONF AUTOM, P260, DOI 10.1109/ASE.2015.42
   Mamykina L, 2011, 29TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P2857
   Mandelin D, 2005, ACM SIGPLAN NOTICES, V40, P48, DOI 10.1145/1064978.1065018
   Martie L, 2015, IEEE INT CONF AUTOM, P24, DOI 10.1109/ASE.2015.51
   McMillan C, 2011, P ICSE
   McMillan C, 2012, IEEE T SOFTWARE ENG, V38, P1069, DOI 10.1109/TSE.2011.84
   Moreno L, 2015, ICSE
   Nasehi SM, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P25, DOI 10.1109/ICSM.2012.6405249
   Nie LM, 2016, IEEE T SERV COMPUT, V9, P771, DOI 10.1109/TSC.2016.2560165
   Ponzanelli Luca, 2014, P 11 WORKING C MININ, P102, DOI DOI 10.1145/2597073.2597077
   Roldan-Vega M, 2013, P 29 IEEE INT C SOFT
   Sadowski C, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P191, DOI 10.1145/2786805.2786855
   Shepherd David, 2007, P 6 INT C ASP OR SOF, P212
   Sisman B, 2013, IEEE WORK CONF MIN S, P309, DOI 10.1109/MSR.2013.6624044
   Stylos J, 2006, IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P195
   Subramanian S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P643, DOI 10.1145/2568225.2568313
   Thung F, 2013, EUR CON SFTWR MTNCE, P323, DOI 10.1109/CSMR.2013.41
   Treude C, 2016, PROC INT CONF SOFTW, P392, DOI 10.1145/2884781.2884800
   Tse-Hsun Chen, 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P189, DOI 10.1109/MSR.2012.6224280
   Wang S., 2014, ACM/IEEE International Conference on Automated Software Engineering, ASE '14, Vasteras, Sweden - September 15 - 19, 2014, P677
   Xie Tao, 2006, Proc. MSR, P54
   Xu J., 1996, P 19 ANN INT ACM SIG, DOI 10.1145/243199.243202
   Yang JQ, 2014, EMPIR SOFTW ENG, V19, P1856, DOI 10.1007/s10664-013-9264-x
   Zhao L, 2010, P 19 ACM INT C INF K
   Zhao L, 2012, P 35 INT ACM SIGIR C
NR 57
TC 32
Z9 35
U1 0
U2 10
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2018
VL 23
IS 5
BP 2622
EP 2654
DI 10.1007/s10664-017-9544-y
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GO5AW
UT WOS:000440031100004
OA Green Accepted, Green Published
DA 2024-07-18
ER

PT J
AU Gupta, M
   Asadullah, A
   Padmanabhuni, S
   Serebrenik, A
AF Gupta, Monika
   Asadullah, Allahbaksh
   Padmanabhuni, Srinivas
   Serebrenik, Alexander
TI Reducing user input requests to improve IT support ticket resolution
   process
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software process; Machine learning; Process mining; Service level
   agreement; Ticket resolution time
ID MATURITY MODEL; SOFTWARE
AB Management and maintenance of IT infrastructure resources such as hardware, software and network is an integral part of software development and maintenance projects. Service management ensures that the tickets submitted by users, i.e. software developers, are serviced within the agreed resolution times. Failure to meet those times induces penalty on the service provider. To prevent a spurious penalty on the service provider, non-working hours such as waiting for user inputs are not included in the measured resolution time, that is, a service level clock pauses its timing. Nevertheless, the user interactions slow down the resolution process, that is, add to user experienced resolution time and degrade user experience. Therefore, this work is motivated by the need to analyze and reduce user input requests in tickets' life cycle.
   To address this problem, we analyze user input requests and investigate their impact on user experienced resolution time. We distinguish between input requests of two types: real, seeking information from the user to process the ticket and tactical, when no information is asked but the user input request is raised merely to pause the service level clock. Next, we propose a system that preempts a user at the time of ticket submission to provide additional information that the analyst, a person responsible for servicing the ticket, is likely to ask, thus reducing real user input requests. Further, we propose a detection system to identify tactical user input requests. To evaluate the approach, we conducted a case study in a large global IT company. We observed that around 57% of the tickets have user input requests in the life cycle, causing user experienced resolution time to be almost twice as long as the measured service resolution time. The proposed preemptive system preempts the information needs with an average accuracy of 94- 99% across five cross validations while traditional approaches such as logistic regression and naive Bayes have accuracy in the range of 50- 60%. The detection system identifies around 15% of the total user input requests as tactical. Therefore, the proposed solution can efficiently bring down the number of user input requests and, hence, improve the user-experienced resolution time.
C1 [Gupta, Monika] Indraprastha Inst Informat Technol, Delhi, India.
   [Asadullah, Allahbaksh] Infosys Ltd, Corp Technol Unit, Bengaluru, India.
   [Padmanabhuni, Srinivas] Tarah Technol, Bengaluru, India.
   [Serebrenik, Alexander] Eindhoven Univ Technol, Software Evolut, Eindhoven, Netherlands.
C3 Indraprastha Institute of Information Technology Delhi; Infosys Limited;
   Eindhoven University of Technology
RP Gupta, M (corresponding author), Indraprastha Inst Informat Technol, Delhi, India.
EM monikag@iiitd.ac.in; allahbaksh_asadullah@infosys.com;
   spadmanabhuni@gmail.com; a.serebrenik@tue.nl
OI Serebrenik, Alexander/0000-0002-1418-0095
FU SERB; Infosys Limited; CII
FX The work presented in this paper is supported by Prime Minister's
   Fellowship, SERB, CII, and Infosys Limited. The authors are thankful to
   the participants of both the surveys and Charlotte Ramon, an intern at
   Infosys Ltd. for help with conducting the survey. Thanks to Dr. Anush
   Sankaran for help with the preemptive model. We thank Prof. Tom Mens for
   his feedback on the early version of this manuscript. We acknowledge
   Prof. Pankaj Jalote, the PhD adviser of first author, and Dr. Anjaneyulu
   Pasala, the industry mentor of first author for the valuable feedback.
CR Addy R., 2007, EFFECTIVE IT SERVICE
   Akman B, 2009, 2009 35TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, PROCEEDINGS, P195, DOI 10.1109/SEAA.2009.87
   Anderson J, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P49, DOI 10.1109/ICSE.2015.134
   [Anonymous], 2011, PROC ACM INT C COMPA
   [Anonymous], 2010, P 2 INT WORKSH REC S
   [Anonymous], 2006, SOFTW ENG
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   April A, 2005, J SOFTW MAINT EVOL-R, V17, P197, DOI 10.1002/smr.3
   Avazpour I, 2014, Recomm Syst Softw Eng, P245
   Barash G, 2007, Information Technology Management from a Business Perspective, P11, DOI 10.1109/BDIM.2007.375007
   Bartolini C, 2009, 2009 IFIP/IEEE INTERNATIONAL SYMPOSIUM ON INTEGRATED NETWORK MANAGEMENT (IM 2009) VOLS 1 AND 2, P9, DOI 10.1109/INM.2009.5188781
   Bartsch C, 2008, INT C SERV OR COMP, P53
   Bavota G, 2014, EMPIR SOFTW ENG, V19, P1617, DOI 10.1007/s10664-013-9256-x
   Begel A, 2015, US Patent, Patent No. [9, 129, 038, 9129038]
   Bishop Christopher M, 2006, PATTERN RECOGN, V128, P1
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Breu S, 2010, 2010 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, P301
   Caldeira J, 2008, LECT NOTES COMPUT SC, V5089, P330, DOI 10.1007/978-3-540-69566-0_27
   Maita ARC, 2015, BUS PROCESS MANAG J, V21, P1391, DOI 10.1108/BPMJ-02-2015-0017
   Chang CC, 2011, ACM T INTEL SYST TEC, V2, DOI 10.1145/1961189.1961199
   Crowther PS, 2005, LECT NOTES ARTIF INT, V3684, P1
   Daniel F, 2012, LECT NOTES BUSINESS, V99
   De Weerdt J., 2012, 2012 IEEE C EV COMP, P1
   Elish KO, 2008, J SYST SOFTWARE, V81, P649, DOI 10.1016/j.jss.2007.07.040
   Ferreira DR, 2008, 13 ANN UKAIS C, P1
   Gachechiladze D, ICSE NIER, P11
   Garousi V, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2916008
   Gnther CW., 2012, BPM, V940, P40
   Gunther Christian W., 2007, Business Process Management. Proceedings 5th International Conference, BPM 2007. (Lecture Notes in Computer Science vol. 4714), P328
   Guo PJ, 2010, Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering, P495
   Gupta M, 2017, ARTIFACTS ITIS TICKE
   Gupta M, 2014, MSR, P122
   Gupta M, 2014, PROCEEDINGS OF THE 7TH INDIA SOFTWARE ENGINEERING CONFERENCE 2014, ISEC '14, DOI 10.1145/2590748.2590749
   Harrell F.E., 2013, REGRESSION MODELING
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   He HB, 2009, IEEE T KNOWL DATA EN, V21, P1263, DOI 10.1109/TKDE.2008.239
   HERBSLEB JD, 1993, HUMAN FACTORS IN COMPUTING SYSTEMS, P7
   Ho TK, 1998, IEEE T PATTERN ANAL, V20, P832, DOI 10.1109/34.709601
   Hsu C.-W., 2003, PRACTICAL GUIDE SUPP
   Huttermann M., 2012, DevOps for Developers
   Japkowicz N, 2000, IC-AI'2000: PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE, VOL 1-III, P111
   Joachims Thorsten, 1998, EUROPEAN C MACHINE L, P137, DOI 10.1007/
   Jolliffe I.T., 1986, Principal component analysis, DOI DOI 10.1016/0169-7439(87)80084-9
   Just S., 2008, P 16 ACM SIGSOFT INT, P308
   Kang CJ, 2013, BPIC BPM
   Knab P, 2010, LECT NOTES COMPUT SC, V6195, P222, DOI 10.1007/978-3-642-14347-2_20
   Ko AJ, 2006, IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P127
   Kotsiantis S., 2006, GESTS INT T COMPUTER, V30, P25
   Li TH, 2014, 2014 IEEE INTERNATIONAL CONFERENCE ON SERVICES COMPUTING (SCC 2014), P568, DOI 10.1109/SCC.2014.80
   Oliveira DC, 2009, 2009 IFIP/IEEE INTERNATIONAL SYMPOSIUM ON INTEGRATED NETWORK MANAGEMENT - WORKSHOPS, P1, DOI 10.1109/INMW.2009.5195926
   Palshikar G. K., 2010, Proceedings 2010 10th IEEE International Conference on Data Mining Workshops (ICDMW 2010), P959, DOI 10.1109/ICDMW.2010.132
   Palshikar GK, 2012, INT CONF DAT MIN WOR, P309, DOI 10.1109/ICDMW.2012.118
   Paszkiewicz Z, 2013, BPIC BPM
   Phillips Shaun, 2012, P ACM 2012 C COMPUTE, P1371, DOI DOI 10.1145/2145204.2145408
   Pletea D., 2014, 11 WORKING C MSR, P348, DOI [10.1145/2597073.2597117, DOI 10.1145/2597073.2597117]
   Poncin W, 2011, EUR CON SFTWR MTNCE, P5, DOI 10.1109/CSMR.2011.5
   Porter MF, 2006, PROGRAM-ELECTRON LIB, V40, P211, DOI [10.1108/00330330610681286, 10.1108/eb046814]
   Roehm T, 2012, PROC INT CONF SOFTW, P255, DOI 10.1109/ICSE.2012.6227188
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Samalikova J, 2014, J SOFTW-EVOL PROC, V26, P714, DOI 10.1002/smr.1645
   Schroter A, 2008, INT WORKSH REC SYST, P43
   Scott S, 1999, MACHINE LEARNING, PROCEEDINGS, P379
   Shull F., 2008, Guide to advanced empirical software engineering, Band, V93
   Sillito J., 2006, Proc. of the ACM SIGSOFT Int'l Symp. on Foundations of Software Engineering, P23, DOI DOI 10.1145/1181775.1181779
   Sillito J, 2008, IEEE T SOFTWARE ENG, V34, P434, DOI 10.1109/TSE.2008.26
   Sun Chengnian, 2010, P 32 ACMIEEE INT C S, V1, P45, DOI [DOI 10.1145/1806799, 10.1145/1806799.1806811]
   Sunindyo W, 2012, LECT NOTES BUS INF P, V94, P84
   Sureka A, 2010, ASIA PAC SOFWR ENG, P366, DOI 10.1109/APSEC.2010.49
   Tantithamthavorn C, 2016, PROC INT CONF SOFTW, P321, DOI 10.1145/2884781.2884857
   Treeratanaporn T., 2015, Walailak Journal of Science Technology, V12, P739
   Van den Spiegel P, 2013, BPIC BPM
   van der Aalst WMP, 2007, INFORM SYST, V32, P713, DOI 10.1016/j.is.2006.05.003
   van der Aalst WMP, 2011, PROCESS MINING: DISCOVERY, CONFORMANCE AND ENHANCEMENT OF BUSINESS PROCESSES, P1, DOI 10.1007/978-3-642-19345-3
   van der Werf JMEM, 2008, LECT NOTES COMPUT SC, V5062, P368, DOI 10.1007/978-3-540-68746-7_24
   van Dongen B., 2013, BUSINESS PROCESS INT
   Xu QS, 2001, CHEMOMETR INTELL LAB, V56, P1, DOI 10.1016/S0169-7439(00)00122-2
   Xuan JF, 2012, PROC INT CONF SOFTW, P25, DOI 10.1109/ICSE.2012.6227209
   Yusop NSM, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2915995
   Zhang C, 2012, PROC INT CONF SOFTW, P826, DOI 10.1109/ICSE.2012.6227136
   Zhang Y, 2010, INT J MACH LEARN CYB, V1, P43, DOI 10.1007/s13042-010-0001-0
NR 80
TC 8
Z9 8
U1 2
U2 15
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2018
VL 23
IS 3
BP 1664
EP 1703
DI 10.1007/s10664-017-9532-2
PG 40
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GH6DH
UT WOS:000433532300014
OA Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Kuhrmann, M
   Fernández, DM
   Daneva, M
AF Kuhrmann, Marco
   Fernandez, Daniel Mendez
   Daneva, Maya
TI On the pragmatic design of literature studies in software engineering:
   an experience-based guideline
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Systematic literature review; Systematic mapping study; Empirical
   software engineering; Guideline proposal; Lessons learned
AB Systematic literature studies have received much attention in empirical software engineering in recent years. They have become a powerful tool to collect and structure reported knowledge in a systematic and reproducible way. We distinguish systematic literature reviews to systematically analyze reported evidence in depth, and systematic mapping studies to structure a field of interest in a broader, usually quantified manner. Due to the rapidly increasing body of knowledge in software engineering, researchers who want to capture the published work in a domain often face an extensive amount of publications, which need to be screened, rated for relevance, classified, and eventually analyzed. Although there are several guidelines to conduct literature studies, they do not yet help researchers coping with the specific difficulties encountered in the practical application of these guidelines. In this article, we present an experience-based guideline to aid researchers in designing systematic literature studies with special emphasis on the data collection and selection procedures. Our guideline aims at providing a blueprint for a practical and pragmatic path through the plethora of currently available practices and deliverables capturing the dependencies among the single steps. The guideline emerges from various mapping studies and literature reviews conducted by the authors and provides recommendations for the general study design, data collection, and study selection procedures. Finally, we share our experiences and lessons learned in applying the different practices of the proposed guideline.
C1 [Kuhrmann, Marco] Univ Southern Denmark, Sect Software Engn, Maersk Mc Kinney Moller Inst, Campusvej 55, DK-5230 Odense M, Denmark.
   [Fernandez, Daniel Mendez] Tech Univ Munich, Syst Engn, Inst Informat, Software, Boltzmannstr 4, D-85748 Garching, Germany.
   [Daneva, Maya] Univ Twente, Drinerlolaan 5, NL-7522 AE Enschede, Netherlands.
C3 University of Southern Denmark; Technical University of Munich;
   University of Twente
RP Kuhrmann, M (corresponding author), Univ Southern Denmark, Sect Software Engn, Maersk Mc Kinney Moller Inst, Campusvej 55, DK-5230 Odense M, Denmark.
EM kuhrmann@acm.org; daniel.mendez@tum.de; m.daneva@utwente.nl
RI Kuhrmann, Marco/I-6302-2019; Mendez, Daniel/ABA-4579-2021
OI Kuhrmann, Marco/0000-0001-6101-8931; Mendez, Daniel/0000-0003-0619-6027;
   Daneva, Maya/0000-0001-7359-8013
CR Ali NB, 2014, P 8 ACM IEEE INT S E, P1, DOI [10.1145/2652524.2652557, DOI 10.1145/2652524.2652557]
   [Anonymous], 2013, P INT C SOFTW SYST P
   [Anonymous], 2012, Proceedings of the 2nd International Workshop on Evidential Assessment of software technologies
   [Anonymous], 2015, P 19 INT C EV ASS SO, DOI DOI 10.1145/2745802.2745825
   [Anonymous], 2015, P INT C SOFTW SYST P, DOI [10.1145/2785592.2785600, DOI 10.1145/2785592.2785600]
   [Anonymous], P 18 INT C EV ASS SO
   Badampudi D., 2015, P 19 INT C EV ASS SO, P1, DOI [10.1145/2745802.2745818, DOI 10.1145/2745802.2745818]
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Carver Jeffrey C., 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P203, DOI 10.1109/ESEM.2013.28
   Charters S., 2007, GUIDELINES PERFORMIN
   COHEN J, 1968, PSYCHOL BULL, V70, P213, DOI 10.1037/h0026256
   Condori-Fernandez N, 2009, INT SYMP EMP SOFTWAR, P503
   Dyba Tore, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P225
   Fabbri S, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2916013
   Fernandez D Mendez, 2014, P INT S EMP SOFTW EN
   FLEISS JL, 1971, PSYCHOL BULL, V76, P378, DOI 10.1037/h0031619
   Hanneman A.R., 2005, Introduction to social network methods
   Hassler E, 2016, INFORM SOFTWARE TECH, V70, P122, DOI 10.1016/j.infsof.2015.10.011
   Inayat I, 2015, COMPUT HUM BEHAV, V51, P915, DOI 10.1016/j.chb.2014.10.046
   Ingibergsson JTM, 2015, LECT NOTES COMPUT SC, V9459, P335, DOI 10.1007/978-3-319-26844-6_25
   Ivarsson M, 2011, EMPIR SOFTW ENG, V16, P365, DOI 10.1007/s10664-010-9146-4
   Jacobsen JW, 2016, LECT NOTES COMPUT SC, V10027, P327, DOI 10.1007/978-3-319-49094-6_21
   Kalus G., 2013, Proceedings of the 2013 International Conference on Software and System Process, P171
   Kitchenham B., 2015, Evidence-Based Software Engineering and Systematic Reviews
   Kitchenham B., 2004, ARXIV
   Kitchenham B, 2013, INFORM SOFTWARE TECH, V55, P2049, DOI 10.1016/j.infsof.2013.07.010
   Kuhrmann M, 2016, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.62
   Kuhrmann M, 2016, INT CONF GLOBAL SOFT, P89, DOI 10.1109/ICGSE.2016.10
   Kuhrmann M, 2014, J SOFTW-EVOL PROC, V26, P1053, DOI 10.1002/smr.1642
   Kuhrmann M, 2013, 2013 IEEE 8TH INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING (ICGSE 2013), P11, DOI 10.1109/ICGSE.2013.11
   Kuo Byron YL, 2007, P 16 INT C WORLD WID, P1203, DOI [DOI 10.1145/1242572.1242766, 10.1145/1242572.1242766]
   Lopez Jose., 2000, SOCIAL STRUCTURE
   Marshall Christopher, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P296, DOI 10.1109/ESEM.2013.32
   Marshall C., 2015, P INT C EV ASS SOFTW, P26
   Marshall C, 2014, P 18 INT C EV ASS SO, P1, DOI DOI 10.1145/2601248.2601270
   Marshall C, 2015, P INT C EV ASS SOFTW
   Oosterman J., 2010, P 22 C COMP HUM INT, P288, DOI DOI 10.1145/1952222.1952284
   Paternoster N, 2014, INFORM SOFTWARE TECH, V56, P1200, DOI 10.1016/j.infsof.2014.04.014
   Petersen K., 2007, Systematic Mapping Studies in Software Engineering, P1
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Petersen K, 2011, INT SYMP EMP SOFTWAR, P351, DOI 10.1109/ESEM.2011.46
   Fabbri SCPF, 2013, IET SOFTW, V7, P298, DOI 10.1049/iet-sen.2013.0029
   Portillo-Rodríguez J, 2012, INFORM SOFTWARE TECH, V54, P663, DOI 10.1016/j.infsof.2012.02.006
   Racheva Z, 2009, LECT NOTES BUS INF P, V32, P141
   Ramage D., 2010, P INT AAAI C WEB SOC, V4, P130
   Riaz M, 2010, INT C EV ASS SOFTW E, P44
   Rivadeneira AW, 2007, CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1 AND 2, P995
   Schramm J, 2014, EUROMICRO CONF PROC, P127, DOI 10.1109/SEAA.2014.26
   Schrammel J, 2009, CHI2009: PROCEEDINGS OF THE 27TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P2037
   Shaw M, 2003, PROC INT CONF SOFTW, P726, DOI 10.1109/ICSE.2003.1201262
   StanleyWasserman Katherine, 1994, SOCIAL NETWORK ANAL, DOI 10.1017/CBO9780511815478
   Staples M, 2007, J SYST SOFTWARE, V80, P1425, DOI 10.1016/j.jss.2006.09.046
   Tell P, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2916011
   Theocharis G, 2015, IS WATER SCRUM FALL, V9459
   Wieringa R, 2006, REQUIR ENG, V11, P102, DOI 10.1007/s00766-005-0021-6
   Wohlin C., 2012, Experimentation in Software Engineering
   Wohlin C, 2013, J SYST SOFTWARE, V86, P2594, DOI 10.1016/j.jss.2013.04.076
   Zhang H, 2011, INFORM SOFTWARE TECH, V53, P625, DOI 10.1016/j.infsof.2010.12.010
NR 58
TC 79
Z9 86
U1 0
U2 11
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2017
VL 22
IS 6
BP 2852
EP 2891
DI 10.1007/s10664-016-9492-y
PG 40
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FI3MB
UT WOS:000411865400004
DA 2024-07-18
ER

PT J
AU Riaz, M
   King, J
   Slankas, J
   Williams, L
   Massacci, F
   Quesada-López, C
   Jenkins, M
AF Riaz, Maria
   King, Jason
   Slankas, John
   Williams, Laurie
   Massacci, Fabio
   Quesada-Lopez, Christian
   Jenkins, Marcelo
TI Identifying the implied: Findings from three differentiated replications
   on the use of security requirements templates
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Security requirements; Controlled experiment; Replication; Requirements
   engineering; Templates; Patterns; Automation
ID DESIGN
AB Identifying security requirements early on can lay the foundation for secure software development. Security requirements are often implied by existing functional requirements but are mostly left unspecified. The Security Discoverer (SD) process automatically identifies security implications of individual requirements sentences and suggests applicable security requirements templates. The objective of this research is to support requirements analysts in identifying security requirements by automating the suggestion of security requirements templates that are implied by existing functional requirements. We conducted a controlled experiment in a graduate-level security class at North Carolina State University (NCSU) to evaluate the SD process in eliciting implied security requirements in 2014. We have subsequently conducted three differentiated replications to evaluate the generalizability and applicability of the initial findings. The replications were conducted across three countries at the University of Trento, NCSU, and the University of Costa Rica. We evaluated the responses of the 205 total participants in terms of quality, coverage, relevance and efficiency. We also develop shared insights regarding the impact of context factors such as time, motivation and support, on the study outcomes and provide lessons learned in conducting the replications. Treatment group, using the SD process, performed significantly better than the control group (at p-value < 0.05) in terms of the coverage of the identified security requirements and efficiency of the requirements elicitation process in two of the three replications, supporting the findings of the original study. Participants in the treatment group identified 84 % more security requirements in the oracle as compared to the control group on average. Overall, 80 % of the 111 participants in the treatment group were favorable towards the use of templates in identifying security requirements. Our qualitative findings indicate that participants may be able to differentiate between relevant and extraneous templates suggestions and be more inclined to fill in the templates with additional support. Security requirements templates capture the security knowledge of multiple experts and can support the security requirements elicitation process when automatically suggested, making the implied security requirements more evident. However, individual participants may still miss out on identifying a number of security requirements due to empirical constraints as well as potential limitations on knowledge and security expertise.
C1 [Riaz, Maria; King, Jason; Slankas, John; Williams, Laurie] North Carolina State Univ, Dept Comp Sci, 890 Oval Dr,Box 8206,Engn Bldg 2, Raleigh, NC 27695 USA.
   [Massacci, Fabio] Univ Trento, Trento, Italy.
   [Quesada-Lopez, Christian; Jenkins, Marcelo] Univ Costa Rica, San Jose, Costa Rica.
C3 North Carolina State University; University of Trento; Universidad Costa
   Rica
RP Riaz, M (corresponding author), North Carolina State Univ, Dept Comp Sci, 890 Oval Dr,Box 8206,Engn Bldg 2, Raleigh, NC 27695 USA.
EM mriaz@ncsu.edu; jtking@ncsu.edu; john.slankas@ncsu.edu;
   lawilli3@ncsu.edu; fabio.massacci@unitn.it;
   cristian.quesadalopez@ucr.ac.cr; marcelo.jenkins@ucr.ac.cr
RI Massacci, Fabio/C-2662-2012; Riaz, Maria/JXR-6545-2024
OI Massacci, Fabio/0000-0002-1091-8486; King, Jason/0000-0002-5148-7950
FU NSA Science of Security lablet; SESAR Joint Undertaking WP-E EMFASE
   Project; University of Costa Rica [834-B5-A18]; Ministry of Science,
   Technology and Telecommunications (MICITT)
FX This work is partially supported by NSA Science of Security lablet.
   Fabio Massacci is partially supported by the SESAR Joint Undertaking
   WP-E EMFASE Project. Christian Quesada-Lopez and Marcelo Jenkins are
   supported by University of Costa Rica Project No. 834-B5-A18, and
   Ministry of Science, Technology and Telecommunications (MICITT). Special
   thanks to Patrick Francis and Patrick Morrison with their help in
   developing the study oracle. We are thankful to the Realsearch group for
   their collaboration and helpful comments.
CR Alexander I, 2003, IEEE SOFTWARE, V20, P58, DOI 10.1109/MS.2003.1159030
   [Anonymous], 2010, 1 INT WORKSH REPL EM
   Braz FA, 2008, INT WORKSHOP DATABAS, P328, DOI 10.1109/DEXA.2008.101
   Carver JC, 2014, EMPIR SOFTW ENG, V19, P267, DOI 10.1007/s10664-013-9290-8
   Carver JC, 2010, EMPIR SOFTW ENG, V15, P35, DOI 10.1007/s10664-009-9109-9
   de Gramatica M, 2015, LECT NOTES COMPUT SC, V9013, P98, DOI 10.1007/978-3-319-16101-3_7
   Fabian B, 2010, REQUIR ENG, V15, P7, DOI 10.1007/s00766-009-0092-x
   Firesmith D., 2004, J OBJECT TECHNOLOGY, V3, P15
   Gray PH, 2004, MANAGE SCI, V50, P821, DOI 10.1287/mnsc.1030.0192
   Haley CB, 2008, IEEE T SOFTWARE ENG, V34, P133, DOI 10.1109/TSE.2007.70754
   Ito Y, 2015, SYSTEMATIC MAPPING S
   Karpati P, 2015, J SYST SOFTWARE, V104, P90, DOI 10.1016/j.jss.2015.02.040
   LINDSAY RM, 1993, AM STAT, V47, P217, DOI 10.2307/2684982
   McCrum-Gardner E, 2008, BRIT J ORAL MAX SURG, V46, P38, DOI 10.1016/j.bjoms.2007.09.002
   McDermott J., 1999, Proceedings 15th Annual Computer Security Applications Conference (ACSAC'99), P55, DOI 10.1109/CSAC.1999.816013
   Mead N. R., 2005, CMUSEI2005TR009
   Mellado D, 2007, COMPUT STAND INTER, V29, P244, DOI 10.1016/j.csi.2006.04.002
   Mellado D, 2010, COMPUT STAND INTER, V32, P153, DOI 10.1016/j.csi.2010.01.006
   Meneely A., 2012, Software and Systems Traceability, P425
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P637, DOI 10.1109/TSE.2007.70721
   Riaz M., 2016, 3 INT WORKSH EV SEC
   Riaz M., ACM IEEE INT S EMPIR
   Riaz M, 2015, INFORM SOFTWARE TECH, V65, P14, DOI 10.1016/j.infsof.2015.04.002
   Riaz M, 2014, INT REQUIR ENG CONF, P183, DOI 10.1109/RE.2014.6912260
   Schumacher M., 2005, Security Patterns: Integrating Security and Systems Engineering, V1st
   Sindre G, 2005, REQUIR ENG, V10, P34, DOI 10.1007/s00766-004-0194-4
   Staffs Keele, 2007, Tech. Rep.
   Suleiman H, 2013, REQUIR ENG, V18, P251, DOI 10.1007/s00766-012-0153-4
   Taubenberger Stefan, 2013, Information Management & Computer Security, V21, P202, DOI 10.1108/IMCS-09-2012-0054
   Taubenberger S, 2011, PROBLEM ANAL IT SECU, P259
   Toval A., 2001, Requirements Engineering, V6, P205, DOI 10.1007/PL00010360
   Viera AJ, 2005, FAM MED, V37, P360
   Walia GS, 2009, INFORM SOFTWARE TECH, V51, P1087, DOI 10.1016/j.infsof.2009.01.004
   Withall Stephen, 2007, SOFTWARE REQUIREMENT
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Yoshioka Nobukazu, 2008, Progress in Informatics, P35, DOI 10.2201/NiiPi.2008.5.5
   Yskout K, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P292, DOI 10.1109/ICSE.2015.49
   Yuhong Wen, 2011, 2011 First International Workshop on Requirements Patterns (RePa'11), P11, DOI 10.1109/RePa.2011.6046726
   Zhang C, 2012, IEEE T SOFTWARE ENG, V38, P1213, DOI 10.1109/TSE.2011.79
NR 39
TC 12
Z9 13
U1 0
U2 12
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2017
VL 22
IS 4
BP 2127
EP 2178
DI 10.1007/s10664-016-9481-1
PG 52
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FB6ZI
UT WOS:000406290500015
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Ye, DH
   Xing, ZC
   Kapre, N
AF Ye, Deheng
   Xing, Zhenchang
   Kapre, Nachiket
TI The structure and dynamics of knowledge network in domain-specific Q&A
   sites: a case study of stack overflow
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Mining software repositories; Crowdsourced knowledge; Domain-specific
   Q&A; URL sharing; Network analysis; Human factors
ID PATTERNS; SEARCH
AB Programming-specific Q&A sites (e.g., Stack Overflow) are being used extensively by software developers for knowledge sharing and acquisition. Due to the cross-reference of questions and answers (note that users also reference URLs external to the Q&A site. In this paper, URL sharing refers to internal URLs within the Q&A site, unless otherwise stated), knowledge is diffused in the Q&A site, forming a large knowledge network. In Stack Overflow, why do developers share URLs? How is the community feedback to the knowledge being shared? What are the unique topological and semantic properties of the resulting knowledge network in Stack Overflow? Has this knowledge network become stable? If so, how does it reach to stability? Answering these questions can help the software engineering community better understand the knowledge diffusion process in programming-specific Q&A sites like Stack Overflow, thereby enabling more effective knowledge sharing, knowledge use, and knowledge representation and search in the community. Previous work has focused on analyzing user activities in Q&A sites or mining the textual content of these sites. In this article, we present a methodology to analyze URL sharing activities in Stack Overflow. We use open coding method to analyze why users share URLs in Stack Overflow, and develop a set of quantitative analysis methods to study the structural and dynamic properties of the emergent knowledge network in Stack Overflow. We also identify system designs, community norms, and social behavior theories that help explain our empirical findings. Through this study, we obtain an in-depth understanding of the knowledge diffusion process in Stack Overflow and expose the implications of URL sharing behavior for Q&A site design, developers who use crowdsourced knowledge in Stack Overflow, and future research on knowledge representation and search.
C1 [Ye, Deheng; Xing, Zhenchang; Kapre, Nachiket] Nanyang Technol Univ, Sch Comp Sci & Engn, Singapore, Singapore.
C3 Nanyang Technological University
RP Ye, DH (corresponding author), Nanyang Technol Univ, Sch Comp Sci & Engn, Singapore, Singapore.
EM ye0014ng@e.ntu.edu.sg; zcxing@ntu.edu.sg; nachiket@ntu.edu.sg
RI Kapre, Nachiket/G-6086-2014
CR Allamanis M, 2013, IEEE WORK CONF MIN S, P53, DOI 10.1109/MSR.2013.6624004
   Amer-Yahia S, 2014, COMPOSITE RETRIEVAL
   Anderson Ashton, 2012, P 18 ACM SIGKDD INT, DOI DOI 10.1145/2339530.2339665
   [Anonymous], 2007, P 9 WEBKDD 1 SNA KDD, DOI [10.1145/1348549.1348556, DOI 10.1145/1348549.1348556]
   [Anonymous], 2002, P 11 INT C WORLD WID, DOI DOI 10.1145/511446.511513
   [Anonymous], 2014, Proceedings of the 17th ACM conference on Computer supported cooperative work social computing
   Bajaj K, 2014, P 11 WORK C MIN SOFT, P112
   Barabási AL, 1999, SCIENCE, V286, P509, DOI 10.1126/science.286.5439.509
   Barua A, 2014, EMPIR SOFTW ENG, V19, P619, DOI 10.1007/s10664-012-9231-y
   Bastian M., 2009, P INT AAAI C WEBL SO, V3, P361
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Blondel VD, 2008, J STAT MECH-THEORY E, DOI 10.1088/1742-5468/2008/10/P10008
   Bordes A, 2014, PROCEEDINGS OF THE 20TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'14), P1967, DOI 10.1145/2623330.2630803
   Broder A, 2000, COMPUT NETW, V33, P309, DOI 10.1016/S1389-1286(00)00083-9
   Cattuto C, 2007, P NATL ACAD SCI USA, V104, P1461, DOI 10.1073/pnas.0610487104
   Clauset A, 2009, SIAM REV, V51, P661, DOI 10.1137/070710111
   Cucerzan S., 2007, P 2007 JOINT C EMPIR, P708
   diaeresis>tze Hinrich Schu<spacing, 2008, INTRO INFORM RETRIEV, V39
   Ferré S, 2011, LECT NOTES COMPUT SC, V7031, P177, DOI 10.1007/978-3-642-25073-6_12
   Fourney A, 2013, P 7 INT C WEBL SOC M
   Fu WT, 2010, ACM T COMPUT-HUM INT, V17, DOI 10.1145/1806923.1806926
   Fuglestad Paul T, 2012, CSCW Conf Comput Support Coop Work, V2012, P969
   Golder SA, 2006, J INF SCI, V32, P198, DOI 10.1177/0165551506062337
   Gómez C, 2013, IEEE WORK CONF MIN S, P81, DOI 10.1109/MSR.2013.6624011
   Guerrouj L, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P321, DOI 10.1109/SANER.2015.7081842
   Halpin Harry., 2007, INT WORLD WIDE WEB C, P211, DOI DOI 10.1145/1242572.1242602
   Hassan AE, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P278, DOI 10.1109/WCRE.2004.37
   LIN JH, 1991, IEEE T INFORM THEORY, V37, P145, DOI 10.1109/18.61115
   Louridas P, 2008, ACM T SOFTW ENG METH, V18, DOI 10.1145/1391984.1391986
   Mamykina L, 2011, 29TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P2857
   Marchionini G, 2006, COMMUN ACM, V49, P41, DOI 10.1145/1121949.1121979
   Maslov S, 2004, PHYSICA A, V333, P529, DOI 10.1016/j.physa.2003.06.002
   Meusel R, 2014, WWW'14 COMPANION: PROCEEDINGS OF THE 23RD INTERNATIONAL CONFERENCE ON WORLD WIDE WEB, P427, DOI 10.1145/2567948.2576928
   Newman MEJ, 2002, PHYS REV LETT, V89, DOI 10.1103/PhysRevLett.89.208701
   Novielli N, 2015, 7TH INTERNATIONAL WORKSHOP ON SOCIAL SOFTWARE ENGINEERING (SSE 2015), P33, DOI 10.1145/2804381.2804387
   Pal A., 2012, ICWSM
   Pressman R. S., 2010, Software Engineering: A Practitioner's Approach
   Preusse J, 2013, ICWSM
   Rahman MM, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P194, DOI 10.1109/CSMR-WCRE.2014.6747170
   Rosen C, 2015, EMPIR SOFTW ENG, P1
   Squire M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P219, DOI 10.1109/ICSE.2015.150
   Storey Margaret-Anne, 2012, Crowd Documentation: Exploring the Coverage and the Dynamics of API Discussions on Stack Overflow, V11
   Subramanian S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P643, DOI 10.1145/2568225.2568313
   Sunshine J, 2015, P 22 INT C PROGR COM
   Tjong KSE, 2003, P 7 C NAT LANG LEARN, P142, DOI DOI 10.3115/1119176.1119195
   Treude C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P804, DOI 10.1145/1985793.1985907
   Wagner C, 2014, WWW'14: PROCEEDINGS OF THE 23RD INTERNATIONAL CONFERENCE ON WORLD WIDE WEB, P735, DOI 10.1145/2566486.2567979
   Wang S, 2013, EMPIRICAL STUDY DEV
   Wang SW, 2014, PROC IEEE INT CONF S, P291, DOI 10.1109/ICSME.2014.51
   Ye D, 2016, 23 IEEE INT C SOFTW
   Zhang J., 2007, P 16 INT C WORLD WID, P221
NR 51
TC 34
Z9 35
U1 2
U2 17
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2017
VL 22
IS 1
BP 375
EP 406
DI 10.1007/s10664-016-9430-z
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EI3GS
UT WOS:000392378400010
DA 2024-07-18
ER

PT J
AU Misbhauddin, M
   Alshayeb, M
AF Misbhauddin, Mohammed
   Alshayeb, Mohammad
TI UML model refactoring: a systematic literature review
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Model refactoring; Model transformation; Systematic literature review;
   UML
ID TRANSFORMATIONS; QUALITY; DESIGN; UNDERSTANDABILITY; PRESERVATION;
   VERIFICATION; MAINTENANCE; DIAGRAMS; LANGUAGE; IMPACT
AB Model-driven engineering, an emerging trend in software engineering, has enabled the use of refactoring to UML models. Numerous approaches to model refactoring, problem detection, consistency management, and tool support to automate and verify refactoring are discussed and distributed across numerous research literatures. This paper provides a systematic overview of existing research in the field of model refactoring. A total of 3,295 articles, related to the field of UML model refactoring, were extracted from well-known electronic databases. A multi-stage selection process was used to ensure proper inclusion of relevant studies for review and analysis. Ninety-four primary studies were eventually selected and analyzed based on a number of different criteria: UML models considered for refactoring, formalisms used to support refactoring at the model level, important to consider when building refactoring tool support, and the effect of refactoring on model quality. The results of this review indicate that UML model refactoring is a highly active area of research. Quite a few quality techniques and approaches have been proposed in this area, but it still has some important open issues and limitations to be addressed in future work.
C1 [Misbhauddin, Mohammed] King Faisal Univ, Dept Informat Syst, Al Hasa 31982, Saudi Arabia.
   [Alshayeb, Mohammad] King Fahd Univ Petr & Minerals, Informat & Comp Sci Dept, Dhahran 31261, Saudi Arabia.
C3 King Faisal University; King Fahd University of Petroleum & Minerals
RP Alshayeb, M (corresponding author), King Fahd Univ Petr & Minerals, Informat & Comp Sci Dept, POB 1172, Dhahran 31261, Saudi Arabia.
EM mmisbhauddin@kfu.edu.sa; alshayeb@kfupm.edu.sa
RI Alshayeb, Mohammad/B-5941-2015
OI Alshayeb, Mohammad/0000-0001-7950-0099; Misbhauddin,
   Mohammed/0000-0002-4940-575X
FU King Abdul Aziz City for Science & Technology (KACST); Deanship of
   Scientific Research of the king Fahd University of Petroleum and
   Minerals
FX The authors acknowledge the support of King Abdul Aziz City for Science
   & Technology (KACST) and the Deanship of Scientific Research of the king
   Fahd University of Petroleum and Minerals in the development of this
   work.
CR Akiyama M, 2011, LECT NOTES COMPUT SC, V6981, P455, DOI 10.1007/978-3-642-24485-8_33
   Al Dallal J, 2010, INFORM SOFTWARE TECH, V52, P1346, DOI 10.1016/j.infsof.2010.08.006
   Ambler S.W., 2005, ELEMENTS UML 2 0 STY
   Amelunxen C, 2008, IET SOFTW, V2, P204, DOI 10.1049/iet-sen:20070076
   [Anonymous], 2005, SBES
   [Anonymous], INT C COMP ENG SYST
   [Anonymous], 1 WORKSH REF TOOLS E
   [Anonymous], XML MET INT SPEC 2 1
   [Anonymous], 13 AS PAC SOFTW ENG
   [Anonymous], ZOT ROY ROS CTR HIST
   [Anonymous], P 1 INT WORKSH SOFTW
   [Anonymous], P 39 INT C EXH TECHN
   [Anonymous], 2006, COMP 21 ACM SIGPLAN
   [Anonymous], P 8 WSEAS INT C SOFT
   [Anonymous], P WARM WORKSH ACM IE
   [Anonymous], P WORKSH CRIT SYST D
   [Anonymous], P 6 INT WORKSH GRAPH
   [Anonymous], EXT MARK LANG XML VE
   [Anonymous], WORKSH GEN TECHN CON
   [Anonymous], MODEL VALIDATION APP
   [Anonymous], 2011, J SYST SOFTW
   [Anonymous], P 11 AS PAC SOFTW EN
   [Anonymous], XSL TRANSF XSLT VERS
   [Anonymous], ATTR GRAPH GRAMM SYS
   [Anonymous], 6 INT C SOFTW ENG AD
   [Anonymous], MET OBJ FAAC MOF 2 0
   [Anonymous], INT C GRAPH MOD TRAN
   [Anonymous], P 8 BRAZ S FORM METH
   [Anonymous], INT WORKSH OBJ REENG
   [Anonymous], P 5 WORKSH REF TOOLS
   [Anonymous], 1997, The Theory and Practice of Concurrency
   [Anonymous], P 1 INT WORKSH REFAC
   [Anonymous], P AUSTR SOFTW ENG C
   [Anonymous], 2010, Unified Modeling Language (UML)
   [Anonymous], 2001, Undertaking Systematic Reviews of Research Effectiveness CDC's Guidance for Those Carrying Out or Commissioning Reviews
   [Anonymous], 4 IND SOFTW ENG C NE
   [Anonymous], 19 IEEE INT C AUT SO
   [Anonymous], P 2005 ANN RES C S A
   [Anonymous], P 2006 ACM S APPL CO
   [Anonymous], 6 ECOOP WORKSH QUANT
   [Anonymous], UML 2 0 OCL SPEC
   [Anonymous], 2011, P 2011 C CTR ADV STU
   [Anonymous], P 3 INT S SOFTW METR
   [Anonymous], P 2 ACM IEEE INT S E
   [Anonymous], 2007, THESIS U BERGEN BERG
   [Anonymous], P 4 NORD WORKSH UML
   [Anonymous], P 3 INT ERCIM S SOFT
   [Anonymous], 8 INT C QUAL SOFTW
   [Anonymous], P 14 INT SDL C DES M
   [Anonymous], 19 AUSTR C SOFTW ENG
   [Anonymous], 2003, P 25 AUSTR COMP SOC
   [Anonymous], 2009, P 24 ACM SIGPLAN C C
   [Anonymous], FUJ TOOL SUIT
   [Anonymous], 8 INT C ENT INF SYST
   [Anonymous], PROFESSIONAL COMPUTI
   [Anonymous], 17 IEEE INT C SOFTW
   [Anonymous], P 28 INT C SOFTW ENG
   [Anonymous], 10 INT S SYMB NUM AL
   [Anonymous], REV RESP OMG RFP AS
   [Anonymous], P 12 ANNC GEN EV COM
   [Anonymous], 1 INT C INF SCI ENG
   [Anonymous], 20 IEEE ACM INT C AU
   [Anonymous], P 7 INT C FRONT INF
   [Anonymous], 2012, SYNTHESIS LECT SOFTW
   [Anonymous], 35 INT C SOFTW ENG I
   [Anonymous], P 5 EUR C SOFTW MAIN
   [Anonymous], P 6 INT C ENT INF SY
   [Anonymous], P 2006 ACM S APPL CO
   [Anonymous], P 30 EUROMICRO C
   [Anonymous], METAMODELING APPROAC
   [Anonymous], IEEE 8 INT S APPL MA
   [Anonymous], 16 EUR C SOFTW MAINT
   [Anonymous], TRANSFORMING KNOWLED
   [Anonymous], ACM IEEE 9 INT C MOD
   [Anonymous], P 5 WORKSH REF TOOLS
   [Anonymous], P 8 INT WORKSH GRAPH
   [Anonymous], P 9 AFR C RES COMP S
   [Anonymous], P 2 ACM IEEE INT S E
   [Anonymous], P 2008 2 IFIP IEEE I
   Arisholm E, 2006, IEEE T SOFTWARE ENG, V32, P365, DOI 10.1109/TSE.2006.59
   Baader F., 2003, DESCRIPTION LOGIC HD
   Baar T, 2007, LECT NOTES COMPUT SC, V4378, P70
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   Bieman J. M., 1995, SIGSOFT Software Engineering Notes, P259, DOI 10.1145/223427.211856
   Bisztray D, 2008, LECT NOTES COMPUT SC, V4961, P347, DOI 10.1007/978-3-540-78743-3_26
   Bisztray D, 2009, LECT NOTES COMPUT SC, V5835, P308, DOI 10.1007/978-3-642-10248-6_13
   Boger M, 2003, LECT NOTES COMPUT SC, V2591, P366
   Bottoni P, 2003, LECT NOTES COMPUT SC, V3062, P220
   Bouhours C, 2009, J OBJECT TECHNOL, V8, P43, DOI 10.5381/jot.2009.8.3.c5
   BROOKES SD, 1984, J ACM, V31, P560, DOI 10.1145/828.833
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Burmester S., 2004, International Journal on Software Tools for Technology Transfer, V6, P203, DOI 10.1007/s10009-004-0155-8
   Butler G., 2001, Software Engineering Notes, V26, P51, DOI 10.1145/379377.375239
   Chen Junbing, 2009, 2009 1st International Conference on Information Science and Engineering (ICISE 2009), P5439, DOI 10.1109/ICISE.2009.1316
   Christoph A, 2005, LECT NOTES COMPUT SC, V3599, P93
   Correa A, 2004, LECT NOTES COMPUT SC, V3273, P173
   Correa A, 2009, IET SOFTW, V3, P69, DOI 10.1049/iet-sen.2008.0022
   Correa A, 2007, SOFTW SYST MODEL, V6, P113, DOI 10.1007/s10270-006-0023-y
   Correa A, 2007, LECT NOTES COMPUT SC, V4735, P76
   Cruz-Lemus JA, 2005, LECT NOTES COMPUT SC, V3770, P12, DOI 10.1007/11568346_3
   de Moura L., 2004, COMPUTER AIDED VERIF, V3114, P251
   Derrick J, 2006, LECT NOTES COMPUT SC, V4019, P111
   Derrick J, 2010, SCI COMPUT PROGRAM, V75, P192, DOI 10.1016/j.scico.2009.11.004
   Dobrzanski L., 2005, Nordic Journal of Computing, V12, P343
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Dzidek WJ, 2008, IEEE T SOFTWARE ENG, V34, P407, DOI 10.1109/TSE.2008.15
   El-Attar M, 2010, SOFTW SYST MODEL, V9, P141, DOI 10.1007/s10270-009-0112-9
   Estler HC, 2007, ELECTRON NOTES THEOR, V187, P3, DOI 10.1016/j.entcs.2006.08.041
   Estler HC, 2008, ELECTRON NOTES THEOR, V214, P331, DOI 10.1016/j.entcs.2008.06.015
   Evans A, 1999, LECT NOTES COMPUT SC, V1618, P336
   Fernández-Sáez AM, 2013, INFORM SOFTWARE TECH, V55, P1119, DOI 10.1016/j.infsof.2012.12.006
   Fourati R, 2011, STUD COMPUT INTELL, V364, P17
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Garcia J, 2009, LECT NOTES COMPUT SC, V5581, P146, DOI 10.1007/978-3-642-02351-4_10
   Genero M, 2003, LECT NOTES COMPUT SC, V2814, P118
   Genero M, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P195, DOI 10.1109/ISESE.2002.1166940
   Genero M, 2011, J DATABASE MANAGE, V22, P46, DOI 10.4018/jdm.2011070103
   Grunske L, 2005, MODEL-DRIVEN SOFTWARE DEVELOPMENT, P91, DOI 10.1007/3-540-28554-7_5
   Heitz C, 2007, LECT NOTES COMPUT SC, V4473, P172
   Hitz M., 1995, Software Engineering - ESEC '95. 5th European Software Engineering Conference. Proceedings, P124
   Hoare CAR., 1985, Communicating Sequential Processes
   IIVARI J, 1995, INFORM SOFTWARE TECH, V37, P155, DOI 10.1016/0950-5849(95)98926-7
   Issa AA, 2007, LECT NOTES ENG COMP, P523
   Jackson D., 2001, Software Engineering Notes, V26, P62, DOI 10.1145/503271.503219
   Judson Sr, 2004, IEEE INT C ENG COMP, P128, DOI 10.1109/ICECCS.2004.1310911
   Kazato H, 2004, IEICE T INF SYST, VE87D, P855
   Kim DK, 2008, IEEE HI ASS SYS ENGR, P293, DOI 10.1109/HASE.2008.10
   Kim Y, 2007, LECT NOTES COMPUT SC, V4439, P108
   Kitchenham B., 2007, 23 EBSE, DOI DOI 10.1145/1134285.1134500
   Kovse J, 2002, LECT NOTES COMPUT SC, V2425, P192
   Kuster J.M., 2004, ELECTRON NOTES THEOR, V109, P57, DOI DOI 10.1016/J.ENTCS.2004.02.056
   Kuzniarz L., 2007, International Journal of Computers & Applications, V29, P10, DOI 10.2316/Journal.202.2007.1.202-1709
   Lange CFJ, 2007, LECT NOTES COMPUT SC, V4364, P211
   Lange CFJ, 2006, 13TH IEEE INTERNATIONAL WORKSHOP ON SOFTWARE TECHNOLOGY AND ENGINEERING PRACTICE, PROCEEDINGS, P7
   Lano K, 2008, INT CONF QUAL SOFTW, P45, DOI 10.1109/QSIC.2008.38
   Llano MT, 2009, 2009 FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING ADVANCES (ICSEA 2009), P39, DOI 10.1109/ICSEA.2009.15
   Lucas FJ, 2009, INFORM SOFTWARE TECH, V51, P1631, DOI 10.1016/j.infsof.2009.04.009
   Maneerat N., 2011, 8 INT JOINT C COMP S
   Markovic S, 2008, SOFTW SYST MODEL, V7, P25, DOI 10.1007/s10270-007-0056-x
   Massoni T, 2008, LECT NOTES COMPUT SC, V4961, P362, DOI 10.1007/978-3-540-78743-3_27
   Massoni T, 2011, LECT NOTES COMPUT SC, V6527, P96, DOI 10.1007/978-3-642-19829-8_7
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Mens T, 2002, LECT NOTES COMPUT SC, V2505, P286
   Mens T., 2008, MODEL DRIVEN SOFTWAR
   Mens T, 2007, SOFTW SYST MODEL, V6, P269, DOI 10.1007/s10270-006-0044-6
   Mens T, 2006, ELECTRON NOTES THEOR, V152, P125, DOI 10.1016/j.entcs.2005.10.021
   Mens T, 2006, LECT NOTES COMPUT SC, V4143, P219
   Mihancea PF, 2005, NINTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P92, DOI 10.1109/CSMR.2005.53
   Miller I., 2003, MDA GUIDE VERSION 1
   Misbhauddin M., 2012, Towards An Integrated Metamodel Based Approach to Software Refactoring
   Misbhauddin M, 2015, SOFTW SYST MODEL, V14, P813, DOI 10.1007/s10270-013-0333-9
   Moeini A, 2010, 2010 3 INT C ADV COM
   Moha N, 2009, LECT NOTES COMPUT SC, V5795, P628, DOI 10.1007/978-3-642-04425-0_50
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Mohamed M, 2009, J OBJECT TECHNOL, V8, P143, DOI 10.5381/jot.2009.8.6.a3
   Opdyke W. F., 1992, Refactoring object-oriented frameworks
   Porres I, 2003, LECT NOTES COMPUT SC, V2863, P159
   Porres I., 2005, SOFTW SYST MODEL, V4, P368
   Rangel G, 2008, LECT NOTES COMPUT SC, V5214, P242, DOI 10.1007/978-3-540-87405-8_17
   Regnell B., 1999, REQUIREMENTS ENG USE
   Ruhroth T, 2009, 2009 35TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, PROCEEDINGS, P360, DOI 10.1109/SEAA.2009.39
   Smith Graeme., 2000, OBJECT Z SPECIFICATI
   Steimann F, 2015, SOFTW SYST MODEL, V14, P307, DOI 10.1007/s10270-013-0314-z
   Suny? G., 2001, LNCS, P134, DOI DOI 10.1007/3-540-45441-1_11
   Taentzer G, 2003, LECT NOTES COMPUT SC, V3062, P446
   Tsantalis N, 2011, EUR CON SFTWR MTNCE, P25, DOI 10.1109/CSMR.2011.7
   Van Der Straeten R, 2004, LECT NOTES COMPUT SC, V3273, P305
   Van Der Straeten R, 2007, SOFTW SYST MODEL, V6, P139, DOI 10.1007/s10270-006-0025-9
   Van Gorp P, 2003, LECT NOTES COMPUT SC, V2863, P144
   Xue-Bin W., 2007, Computing in the Global Information Technology, P24, DOI [10.7666/d.Y1057065, DOI 10.1109/ICCGI.2007.52]
   Yue T., 2010, A framework for measuring quality of models: experiences from a series of controlled experiments
   Zhang J, 2005, MODEL-DRIVEN SOFTWARE DEVELOPMENT, P199, DOI 10.1007/3-540-28554-7_9
NR 172
TC 60
Z9 66
U1 1
U2 26
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2015
VL 20
IS 1
BP 206
EP 251
DI 10.1007/s10664-013-9283-7
PG 46
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AZ7EN
UT WOS:000348381800007
DA 2024-07-18
ER

PT J
AU Guerrouj, L
   Di Penta, M
   Guéhéneuc, YG
   Antoniol, G
AF Guerrouj, Latifa
   Di Penta, Massimiliano
   Gueheneuc, Yann-Gael
   Antoniol, Giuliano
TI An experimental investigation on the effects of context on source code
   identifiers splitting and expansion
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Program understanding; Identifier splitting and expansion; Task context
ID PROGRAM COMPREHENSION; TRACEABILITY LINKS; NAMES
AB Recent and past studies indicate that source code lexicon plays an important role in program comprehension. Developers often compose source code identifiers with abbreviated words and acronyms, and do not always use consistent mechanisms and explicit separators when creating identifiers. Such choices and inconsistencies impede the work of developers that must understand identifiers by decomposing them into their component terms, and mapping them onto dictionary, application or domain words. When software documentation is scarce, outdated or simply not available, developers must therefore use the available contextual information to understand the source code. This paper aims at investigating how developers split and expand source code identifiers, and, specifically, the extent to which different kinds of contextual information could support such a task. In particular, we consider (i) an internal context consisting of the content of functions and source code files in which the identifiers are located, and (ii) an external context involving external documentation. We conducted a family of two experiments with 63 participants, including bachelor, master, Ph.D. students, and post-docs. We randomly sampled a set of 50 identifiers from a corpus of open source C programs and we asked participants to split and expand them with the availability (or not) of internal and external contexts. We report evidence on the usefulness of contextual information for identifier splitting and acronym/abbreviation expansion. We observe that the source code files are more helpful than just looking at function source code, and that the application-level contextual information does not help any further. The availability of external sources of information only helps in some circumstances. Also, in some cases, we observe that participants better expanded acronyms than abbreviations, although in most cases both exhibit the same level of accuracy. Finally, results indicated that the knowledge of English plays a significant effect in identifier splitting/expansion. The obtained results confirm the conjecture that contextual information is useful in program comprehension, including when developers split and expand identifiers to understand them. We hypothesize that the integration of identifier splitting and expansion tools with IDE could help to improve developers' productivity.
C1 [Guerrouj, Latifa; Gueheneuc, Yann-Gael; Antoniol, Giuliano] Ecole Polytechnique Montreal, DGIGL, SOCCER Lab, Montreal, PQ, Canada.
   [Di Penta, Massimiliano] Univ Sannio, Sannio, Italy.
C3 Universite de Montreal; Polytechnique Montreal; University of Sannio
RP Guerrouj, L (corresponding author), Ecole Polytechnique Montreal, DGIGL, SOCCER Lab, Montreal, PQ, Canada.
EM latifa.guerrouj@polymtl.ca; dipenta@unisannio.it;
   yann-gael.gueheneuc@polymtl.ca; antoniol@ieee.org
RI Di Penta, Massimiliano/AAF-9656-2021; Guéhéneuc, Yann-Gaël/K-9371-2019
OI Di Penta, Massimiliano/0000-0002-0340-9747
CR [Anonymous], 2012, R LANG ENV STAT COMP
   [Anonymous], 2000, HDB PARAMETRIC NONPA
   Anquetil N., 1998, PROC ANN IBM CTR ADV, P213
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Baeza-Yates Ricardo, 1999, MODERN INFORM RETRIE, V463
   Baker R.D., 1995, Randomization Tests
   Basili V., 1994, The Goal Question Metric Approach, P528
   Binkley D, 2013, EMPIR SOFTW ENG, V18, P219, DOI 10.1007/s10664-012-9201-4
   Binkley D, 2009, INT C PROGRAM COMPRE, P158, DOI 10.1109/ICPC.2009.5090039
   Caprile B, 2000, PROC IEEE INT CONF S, P97, DOI 10.1109/ICSM.2000.883022
   Caprile C., 1999, Sixth Working Conference on Reverse Engineering (Cat. No.PR00303), P112, DOI 10.1109/WCRE.1999.806952
   Deissenbock F., 2005, P INT WORKSH PROGR C
   Dit B, 2011, CONF PROC INT SYMP C, P11, DOI 10.1109/ICPC.2011.47
   Eaddy M, 2008, INT C PROGRAM COMPRE, P53, DOI 10.1109/ICPC.2008.39
   Enslen E, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P71, DOI 10.1109/MSR.2009.5069482
   Grissom R. J., 2005, EFFECT SIZES RES BRO
   Guerrouj L, 2013, J SOFTW-EVOL PROC, V25, P575, DOI 10.1002/smr.539
   HOLM S, 1979, SCAND J STAT, V6, P65
   Kersten Mik, 2006, P 14 ACM SIGSOFT INT, P1
   Lawrie D., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P113, DOI 10.1109/ICSM.2011.6080778
   LAWRIE D.J., 2010, Proceedings of the 17th Working Conference on Reverse Engineering, P112
   Lawrie D, 2006, SIXTH IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P139
   Lawrie D, 2006, INT C PROGRAM COMPRE, P3, DOI 10.1109/ICPC.2006.51
   Lawrie D, 2007, INNOV SYST SOFTW ENG, V3, P303, DOI 10.1007/s11334-007-0031-2
   Liu Dapeng, 2007, P 22 IEEEACM INT C A, P234, DOI 10.1145/1321631.1321667
   Madani N, 2010, EUR CON SFTWR MTNCE, P68, DOI 10.1109/CSMR.2010.31
   Maletic JI, 2001, PROC INT CONF SOFTW, P103, DOI 10.1109/ICSE.2001.919085
   Marcus A, 2005, INT J SOFTW ENG KNOW, V15, P811, DOI 10.1142/S0218194005002543
   Merlo E, 2003, J SOFTW MAINT EVOL-R, V15, P205, DOI 10.1002/smr.274
   NEY H, 1984, IEEE T ACOUST SPEECH, V32, P263, DOI 10.1109/TASSP.1984.1164320
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI [10.1109/TSE.2007.1016, 10.1109/TSE.2007.1016.]
   Ricca F, 2010, IEEE T SOFTWARE ENG, V36, P96, DOI 10.1109/TSE.2009.69
   Robillard MP, 2004, IEEE T SOFTWARE ENG, V30, P889, DOI 10.1109/TSE.2004.101
   Sharif Bonita, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P196, DOI 10.1109/ICPC.2010.41
   Sillito J, 2008, IEEE T SOFTWARE ENG, V34, P434, DOI 10.1109/TSE.2008.26
   SOLOWAY E, 1983, COMMUN ACM, V26, P853, DOI 10.1145/182.358436
   STOREY MA, 1998, THESIS S FRASER U
   Takang AA, 1996, J PROGRAM LANG, V4, P143
   VONMAYRHAUSER A, 1995, COMPUTER, V28, P44, DOI 10.1109/2.402076
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
NR 40
TC 9
Z9 9
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2014
VL 19
IS 6
BP 1706
EP 1753
DI 10.1007/s10664-013-9260-1
PG 48
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AR9QU
UT WOS:000343910700005
DA 2024-07-18
ER

PT J
AU Fredericks, EM
   DeVries, B
   Cheng, BHC
AF Fredericks, Erik M.
   DeVries, Byron
   Cheng, Betty H. C.
TI AutoRELAX: automatically RELAXing a goal model to address uncertainty
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Uncertainty; Requirements engineering; Goal models; Genetic algorithms
ID REQUIREMENTS
AB Dynamically adaptive systems (DAS) must cope with system and environmental conditions that may not have been fully understood or anticipated during development. RELAX is a fuzzy logic-based specification language for identifying and assessing sources of environmental uncertainty, thereby making DAS requirements more tolerant of unanticipated conditions. This paper presents AutoRELAX, an approach that automatically generates RELAXed goal models to address environmental uncertainty. Specifically, AutoRELAX identifies goals to RELAX, which RELAX operators to apply, and the shape of the fuzzy logic function that establishes the goal satisfaction criteria. AutoRELAX generates different solutions by making tradeoffs between minimizing the number of RELAXed goals and maximizing delivered functionality by reducing the number of adaptations triggered by minor and adverse environmental conditions. In a recent extension, AutoRELAX uses a stepwise adaptation of weights to balance these two competing concerns and thereby further improve the utility of AutoRELAX. We apply it to two industry-based applications involving network management and a robotic controller, respectively.
C1 [Fredericks, Erik M.; DeVries, Byron; Cheng, Betty H. C.] Dept Comp Sci & Engn, E Lansing, MI 48824 USA.
RP Fredericks, EM (corresponding author), Dept Comp Sci & Engn, 3115 Engn Bldg,428 S Shaw Lane, E Lansing, MI 48824 USA.
EM freder99@cse.msu.edu; devri117@cse.msu.edu; chengb@cse.msu.edu
OI Cheng, Betty HC/0000-0001-9825-5359
FU NSF [CCF-0854931, CCF-0750787, CCF-0820220, DBI-0939454]; Army Research
   Office [W911NF-08-1-0495]; Ford Motor Company
FX This work has been supported in part by NSF grants CCF-0854931,
   CCF-0750787, CCF-0820220, DBI-0939454, Army Research Office grant
   W911NF-08-1-0495, and Ford Motor Company. Any opinions, findings, and
   conclusions or recommendations expressed in this material are those of
   the author(s) and do not necessarily reflect the views of the National
   Science Foundation, Army, Ford, or other research sponsors. The authors
   declare that they have no conflict of interest.
CR [Anonymous], 1999, P INT C SIGN PROC AP
   Baresi L., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P125, DOI 10.1109/RE.2010.25
   Bencomo Nelly, 2013, Requirements Engineering: Foundation for Software Quality. 19th International Working Conference, REFSQ 2013. Proceedings, P221, DOI 10.1007/978-3-642-37422-7_16
   Bencomo N., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P199, DOI 10.1145/1810295.1810329
   Cheng BHC, 2009, LECT NOTES COMPUT SC, V5795, P468, DOI 10.1007/978-3-642-04425-0_36
   Chung L., 2000, Non-functional Requirements in Software Engineering
   Craenen B., 2001, Proceedings of the 3rd Annual Conference on Genetic and Evolutionary Computation, P291
   DARDENNE A, 1993, SCI COMPUT PROGRAM, V20, P3, DOI 10.1016/0167-6423(93)90021-G
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   deGrandis P, 2009, ACM/IEEE SIXTH INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING AND COMMUNICATIONS (ICAC '09), P107
   Eiben AE, 1998, J HEURISTICS, V4, P25, DOI 10.1023/A:1009638304510
   Eiben AE, 1998, LECT NOTES COMPUT SC, V1363, P95, DOI 10.1007/BFb0026593
   Eiben AE, 1997, PROCEEDINGS OF 1997 IEEE INTERNATIONAL CONFERENCE ON EVOLUTIONARY COMPUTATION (ICEC '97), P81, DOI 10.1109/ICEC.1997.592273
   Esfahani N, 2011, P 26 IEEE ACM INT C
   Esfahani Naeem, 2011, SIGSOFT FSE 11 19 AC, P234, DOI DOI 10.1145/2025113.2025147
   Feather MS, 1998, NINTH INTERNATIONAL WORKSHOP ON SOFTWARE SPECIFICATION AND DESIGN, PROCEEDINGS, P50, DOI 10.1109/IWSSD.1998.667919
   Fickas S., 1995, Proceedings of the Second IEEE International Symposium on Requirements Engineering (Cat. No.95TH8040), P140, DOI 10.1109/ISRE.1995.512555
   Filieri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P341, DOI 10.1145/1985793.1985840
   Holland I.H., 1975, ADAPTATION NATURAL A
   JACKSON M, 1995, PROC INT CONF SOFTW, P15, DOI 10.1145/225014.225016
   Ji MW, 2003, USENIX ASSOCIATION PROCEEDINGS OF THE GENERAL TRACK, P253
   Keeton K, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE 3RD USENIX CONFERENCE ON FILE AND STORAGE TECHNOLOGIES, P59
   KRAMER J, 1990, IEEE T SOFTWARE ENG, V16, P1293, DOI 10.1109/32.60317
   Letier E., 2004, Software Engineering Notes, V29, P53, DOI 10.1145/1041685.1029905
   Pasquale L., 2011, 2011 Workshop on Requirements Engineering for Systems, Services and Systems-of-Systems (RES^4), P63, DOI 10.1109/RESS.2011.6043924
   Ramirez Andres J., 2012, Search Based Software Engineering. Proceedings of the 4th International Symposium (SSBSE 2012), P198, DOI 10.1007/978-3-642-33119-0_15
   Ramirez AJ, 2010, CLUST COMPU IN PRESS
   Ramirez AJ, 2009, ACM/IEEE SIXTH INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING AND COMMUNICATIONS (ICAC '09), P97
   Ramirez AndresJ., 2011, P 2011 INT C MODEL D, P501
   Sawyer P., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P95, DOI 10.1109/RE.2010.21
   Souza V. E. S., 2011, 2011 2nd International Workshop on Requirements@Run.Time (RE@RunTime), P9, DOI 10.1109/ReRunTime.2011.6046242
   van der Hauw K, 1996, THESIS LEIDEN U
   van Lamsweerde A, 2000, IEEE T SOFTWARE ENG, V26, P978, DOI 10.1109/32.879820
   van Lamsweerde A., 2009, REQUIREMENTS ENG SYS
   Walsh WE, 2004, INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING, PROCEEDINGS, P70, DOI 10.1109/ICAC.2004.1301349
   Wei O, 2011, INFORM COMPUT, V209, P20, DOI 10.1016/j.ic.2010.08.001
   Welsh K., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P560, DOI 10.1109/ASE.2011.6100125
   Welsh K, 2010, LECT NOTES COMPUT SC, V6182, P2, DOI 10.1007/978-3-642-14192-8_2
   Whittle J, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P79, DOI 10.1109/RE.2009.36
   WITTY R, 2001, FT145021 GARTN RES
NR 40
TC 21
Z9 25
U1 1
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2014
VL 19
IS 5
BP 1466
EP 1501
DI 10.1007/s10664-014-9305-0
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AP9VT
UT WOS:000342429900011
DA 2024-07-18
ER

PT J
AU Feigenspan, J
   Kästner, C
   Apel, S
   Liebig, J
   Schulze, M
   Dachselt, R
   Papendieck, M
   Leich, T
   Saake, G
AF Feigenspan, Janet
   Kaestner, Christian
   Apel, Sven
   Liebig, Joerg
   Schulze, Michael
   Dachselt, Raimund
   Papendieck, Maria
   Leich, Thomas
   Saake, Gunter
TI Do background colors improve program comprehension in the #ifdef hell?
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Empirical software engineering; Software visualization; Program
   comprehension; Software product lines; Preprocessors; FeatureCommander
ID SOFTWARE; BEHAVIOR; TOOL; PLUS
AB Software-product-line engineering aims at the development of variable and reusable software systems. In practice, software product lines are often implemented with preprocessors. Preprocessor directives are easy to use, and many mature tools are available for practitioners. However, preprocessor directives have been heavily criticized in academia and even referred to as "#ifdef hell", because they introduce threats to program comprehension and correctness. There are many voices that suggest to use other implementation techniques instead, but these voices ignore the fact that a transition from preprocessors to other languages and tools is tedious, erroneous, and expensive in practice. Instead, we and others propose to increase the readability of preprocessor directives by using background colors to highlight source code annotated with ifdef directives. In three controlled experiments with over 70 subjects in total, we evaluate whether and how background colors improve program comprehension in preprocessor-based implementations. Our results demonstrate that background colors have the potential to improve program comprehension, independently of size and programming language of the underlying product. Additionally, we found that subjects generally favor background colors. We integrate these and other findings in a tool called FeatureCommander, which facilitates program comprehension in practice and which can serve as a basis for further research.
C1 [Feigenspan, Janet; Dachselt, Raimund; Papendieck, Maria; Saake, Gunter] Univ Magdeburg, Sch Comp Sci, D-39106 Magdeburg, Germany.
   [Kaestner, Christian] Univ Marburg, Programming Languages Grp Klaus Ostermann, Marburg, Germany.
   [Apel, Sven] Univ Passau, D-94032 Passau, Germany.
   [Liebig, Joerg] Univ Passau, Dept Math & Informat, Programming Grp, D-94032 Passau, Germany.
   [Schulze, Michael] Pure Syst, Magdeburg, Germany.
   [Leich, Thomas] Metop Res Inst, Magdeburg, Germany.
C3 Otto von Guericke University; Philipps University Marburg; University of
   Passau; University of Passau
RP Feigenspan, J (corresponding author), Univ Magdeburg, Sch Comp Sci, D-39106 Magdeburg, Germany.
EM feigensp@ovgu.de; christian.kaestner@uni-marburg.de; apel@uni-passau.de;
   joliebig@fim.uni-passau.de; michael.schulze@pure-systems.com;
   dachselt@ovgu.de; maria.papendieck@st.ovgu.de; thomas.leich@metop.de;
   saake@ovgu.de
RI Leich, Thomas/N-8106-2017; Dachselt, Raimund/B-2860-2017
OI Dachselt, Raimund/0000-0002-2176-876X; Apel, Sven/0000-0003-3687-2233;
   Kastner, Christian/0000-0002-4450-4572
FU BMBF project ViERforES [01IM10002B]; ERC [203099]; German Research
   Foundation [DFG-AP 206/2, AP 206/4, LE 912/13]; BMBF [01IS11019]; DGCIS;
   "Stifterverband fur die Deutsche Wissenschaft" from funds of the
   Claussen-Simon-Endowment; European Research Council (ERC) [203099]
   Funding Source: European Research Council (ERC)
FX We are grateful to Mathias Frisch for helpful discussions and to Jana
   Schumann, Veit Koppen, and Thomas Thum for their support with the
   experiments. Also thanks to all the reviewers of this article.
   Feigenspan's and Saake's work is supported by BMBF project ViERforES
   (01IM10002B), Kastner's work partly by ERC (# 203099), and Apel's work
   is supported by the German Research Foundation (DFG-AP 206/2, AP 206/4,
   and LE 912/13). Schulze's work is part of the project SAFE. SAFE is
   funded by BMBF (project ID: 01IS11019) and DGCIS and is in the framework
   of the ITEA2, EUREKA cluster program Sigma! 3674. Dachselt's work is
   funded by the "Stifterverband fur die Deutsche Wissenschaft" from funds
   of the Claussen-Simon-Endowment. The first experiment was conducted as
   part of Feigenspan's master's thesis while she visited the Metop
   Research Center.
CR Adams B, 2009, AOSD'09: 8TH INTERNATIONAL CONFERENCE ON ASPECT-ORIENTED SOFTWARE DEVELOPMENT, P243
   Adams Bram., 2008, LATE'08: Proceedings of the 2008 AOSD workshop on Linking aspect technology and evolution, P1
   Anderson T.W., 1996, NEW STAT ANAL DATA
   [Anonymous], 2000, Information Visualization: Perception for Design
   [Anonymous], 2007, Software Visualization: Visualizing the Structure, Behavior, and Evolution of Software
   [Anonymous], 1994, THINK ALOUD METHOD P
   [Anonymous], THESIS U MAGDEBURG
   Apel S, 2008, IEEE T SOFTWARE ENG, V34, P162, DOI 10.1109/TSE.2007.70770
   Apel Sven, 2009, The Journal of Object Technology, V8, P1
   Atkins DL, 2002, IEEE T SOFTWARE ENG, V28, P625, DOI 10.1109/TSE.2002.1019478
   Aversano L, 2002, SCAM 2002: SECOND IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS MANIPULATION, PROCEEDINGS, P83, DOI 10.1109/SCAM.2002.1134108
   Basili Victor R, 1992, CSTR2956
   Baxter ID, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P281, DOI 10.1109/WCRE.2001.957833
   Boehm BW., 1981, Software Engineering Economics
   Boysen J, 1977, THESIS IOWA STATE U
   Brooks R., 1978, 3rd International Conference on Software Engineering, P196
   Chevalier F, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P683
   Chu-Carroll M. C., 2003, INT C ASP OR SOFTW D, P188
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   COHEN J., 1969, Statistical power analysis
   Coppit D, 2007, PROC INT CONF SOFTW, P754
   Couto MV, 2011, EUR CON SFTWR MTNCE, P191, DOI 10.1109/CSMR.2011.25
   Czarnecki K, 2005, LECT NOTES COMPUT SC, V3676, P422
   Daly J, 1995, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, 1995 PROCEEDINGS, P20, DOI 10.1109/ICSM.1995.526524
   Dunsmore Alastair, 2000, Technical Report EFoCS 35-2000.
   EICK SG, 1992, IEEE T SOFTWARE ENG, V18, P957, DOI 10.1109/32.177365
   Ernst MD, 2002, IEEE T SOFTWARE ENG, V28, P1146, DOI 10.1109/TSE.2002.1158288
   Favre J.-M., 1995, P EUR WORKSH SOFTW M
   Favre JM, 1997, PROG COMPREHEN, P29, DOI 10.1109/WPC.1997.601260
   Feigenspan Janet, 2011, 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), P66, DOI 10.1049/ic.2011.0008
   Feigenspan Janet, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P34, DOI 10.1109/ICPC.2010.15
   Feigenspan J, 2011, SOFTW PROD LIN C SPL, P1
   Feigenspan Janet, 2009, P INT WORKSH FEAT OR, P55
   Figueiredo E, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P261, DOI 10.1145/1368088.1368124
   FISHER DL, 1989, HUM FACTORS, V31, P17, DOI 10.1177/001872088903100102
   Garrido A, 2005, PROC IEEE INT CONF S, P379
   Giventer L., 2008, Statistical analysis: for public administration, V2nd
   Goldstein B., 2002, Sensation and perception, V6th
   Hanenberg S., 2010, P ACM INT C OBJ OR P, p[22, An experiment about static and dynamic type systems], DOI DOI 10.1145/1869459.1869462
   HARRISON W, 1993, SIGPLAN NOTICES, V28, P411, DOI 10.1145/167962.165932
   Heidenreich F, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P943
   Hofer Wanja., 2010, Proceedings of the 2nd International Workshop on Feature-Oriented Software Development, FOSD 2010, Eindhoven, Netherlands, October 10, 2010, P18, DOI DOI 10.1145/1868688.1868692
   Hu Y, 2000, PROC IEEE INT CONF S, P196
   Kästner C, 2009, PROC INT CONF SOFTW, P611, DOI 10.1109/ICSE.2009.5070568
   Kästner C, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P311, DOI 10.1145/1368088.1368131
   Kastner Christian, 2010, THESIS U MAGDEBURG
   Kastner Christian, 2009, P INT C GEN PROGR CO, P157, DOI DOI 10.1145/1621607.1621632
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kitchenham B, 2008, EMPIR SOFTW ENG, V13, P97, DOI 10.1007/s10664-007-9053-5
   Koenemann J., 1991, Human Factors in Computing Systems. Reaching Through Technology. CHI '91. Conference Proceedings, P125, DOI 10.1145/108844.108863
   Krone M., 1994, ICSE-16. 16th International Conference on Software Engineering (Cat. No.94CH3409-0), P49, DOI 10.1109/ICSE.1994.296765
   Kullbach B, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P3, DOI 10.1109/WCRE.2001.957805
   LEVKOWITZ H, 1992, IEEE COMPUT GRAPH, V12, P72, DOI 10.1109/38.135886
   Liebig Jorg, 2011, AOSD 11
   Liebig Jorg, 2010, P 32 ACM IEEE INT C, V1, P105
   Likert R., 1932, TECHNIQUE MEASUREMEN, DOI 1933-01885-001
   Livadas P. E., 1994, Proceedings. IEEE Third Workshop on Program Comprehension (Cat. No.94TH06767), P89, DOI 10.1109/WPC.1994.341255
   Lohmann D., 2006, Operating Systems Review, V40, P191, DOI 10.1145/1218063.1217954
   McCloskey B, 2005, ESEC FSE 13, P21
   MILLER GA, 1956, PSYCHOL REV, V63, P81, DOI 10.1037/h0043158
   Mook D., 1996, MOTIVATION ORG ACTIO, V2nd
   Muthig D, 2003, LECT NOTES COMPUT SC, V2591, P313
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   OBERG B, 1992, IEEE SOFTWARE, V9, P33, DOI 10.1109/52.168856
   Otero MC, 2004, INFORM SOFTWARE TECH, V46, P35, DOI 10.1016/S0950-5849(03)00108-3
   Overbey JL, 2009, GENERATING REWRITABL, P114
   Pearse TT, 1997, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P270, DOI 10.1109/ICSM.1997.624254
   PENNINGTON N, 1987, COGNITIVE PSYCHOL, V19, P295, DOI 10.1016/0010-0285(87)90007-7
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Prechelt L, 2002, IEEE T SOFTWARE ENG, V28, P595, DOI 10.1109/TSE.2002.1010061
   Prehofer C, 1997, LECT NOTES COMPUT SC, V1241, P419
   Rambally G. K., 1986, SIGCSE Bulletin, V18, P173, DOI 10.1145/953055.5702
   Ribeiro M., 2010, ONW 2010 AFF ACM SIG, P11, DOI DOI 10.1145/1869542.1869545
   RICE JF, 1991, IEEE SOFTWARE, V8, P86
   Riggs R., 2003, PROGRAMMING WIRELESS
   SHAFT TM, 1995, INFORM SYST RES, V6, P286, DOI 10.1287/isre.6.3.286
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   SHNEIDERMAN B, 1979, INT J COMPUT INF SCI, V8, P219, DOI 10.1007/BF00977789
   Singh N, 2007, P WORKSH ASP COMP PA
   Singh Nieraj., 2006, OOPSLA'06: Companion to the 21st ACM SIGPLAN symposium on Object-oriented programming systems, languages, and applications, P730
   Smaragdakis Y., 1998, ECOOP'98 - Object-Oriented Programming. 12th European Conference. Proceedings, P550, DOI 10.1007/BFb0054107
   SOLOWAY E, 1984, IEEE T SOFTWARE ENG, V10, P595, DOI 10.1109/TSE.1984.5010283
   SPENCER H, 1992, PROCEEDINGS OF THE SUMMER 1992 USENIX CONFERENCE, P185
   Spinellis D, 2003, IEEE T SOFTWARE ENG, V29, P1019, DOI 10.1109/TSE.2003.1245303
   STANDISH TA, 1984, IEEE T SOFTWARE ENG, V10, P494, DOI 10.1109/TSE.1984.5010272
   Stengel M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1031, DOI 10.1145/1985793.1985987
   Tamborello FP, 2007, COGN SYST RES, V8, P182, DOI 10.1016/j.cogsys.2007.05.003
   Tartler R, 2011, EUROSYS 11: PROCEEDINGS OF THE EUROSYS 2011 CONFERENCE, P47
   Tiarks R., 2011, Softwaretechnik-Trends, V31, P36
   Tichy WF, 1998, COMPUTER, V31, P32, DOI 10.1109/2.675631
   Vidács L, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P75, DOI 10.1109/CSMR.2004.1281408
   von Mayrhauser A., 1993, Proceedings IEEE Second Workshop on Program Comprehension (Cat. No.93TH0551-2), P78, DOI 10.1109/WPC.1993.263903
   vonMayrhauser A, 1997, J SOFTW MAINT-RES PR, V9, P299, DOI 10.1002/(SICI)1096-908X(199709/10)9:5<299::AID-SMR157>3.0.CO;2-S
   VONMAYRHAUSER A, 1995, COMPUTER, V28, P44, DOI 10.1109/2.402076
   Wijffelaars M, 2008, COMPUT GRAPH FORUM, V27, P743, DOI 10.1111/j.1467-8659.2008.01203.x
   YANG W, 1994, J SYST SOFTWARE, V27, P129, DOI 10.1016/0164-1212(94)90026-4
   YELLOTT JI, 1971, J MATH PSYCHOL, V8, P159, DOI 10.1016/0022-2496(71)90011-3
NR 97
TC 49
Z9 56
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2013
VL 18
IS 4
BP 699
EP 745
DI 10.1007/s10664-012-9208-x
PG 47
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 174AX
UT WOS:000321126100003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Arcuri, A
   Fraser, G
AF Arcuri, Andrea
   Fraser, Gordon
TI Parameter tuning or default values? An empirical investigation in
   search-based software engineering
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Search-based software engineering; Test data generation;
   Object-oriented; Unit testing; Tuning; EvoSuite; Java; Response surface;
   Design of experiments
ID EVOLUTIONARY ALGORITHMS; GENERATION
AB Many software engineering problems have been addressed with search algorithms. Search algorithms usually depend on several parameters (e.g., population size and crossover rate in genetic algorithms), and the choice of these parameters can have an impact on the performance of the algorithm. It has been formally proven in the No Free Lunch theorem that it is impossible to tune a search algorithm such that it will have optimal settings for all possible problems. So, how to properly set the parameters of a search algorithm for a given software engineering problem? In this paper, we carry out the largest empirical analysis so far on parameter tuning in search-based software engineering. More than one million experiments were carried out and statistically analyzed in the context of test data generation for object-oriented software using the EvoSuite tool. Results show that tuning does indeed have impact on the performance of a search algorithm. But, at least in the context of test data generation, it does not seem easy to find good settings that significantly outperform the "default" values suggested in the literature. This has very practical value for both researchers (e.g., when different techniques are compared) and practitioners. Using "default" values is a reasonable and justified choice, whereas parameter tuning is a long and expensive process that might or might not pay off in the end.
C1 [Arcuri, Andrea] Simula Res Lab, Certus Software V&V Ctr, Lysaker, Norway.
   [Fraser, Gordon] Univ Sheffield, Dept Comp Sci, Sheffield S1 4DP, S Yorkshire, England.
C3 University of Sheffield
RP Fraser, G (corresponding author), Univ Sheffield, Dept Comp Sci, 211 Portobello, Sheffield S1 4DP, S Yorkshire, England.
EM arcuri@simula.no; gordon.fraser@sheffield.ac.uk
FU Norwegian Research Council; Google Focused Research Award on "Test
   Amplification"
FX Andrea Arcuri is funded by the Norwegian Research Council. This project
   has been funded by a Google Focused Research Award on "Test
   Amplification".
CR Ali S, 2010, IEEE T SOFTWARE ENG, V36, P742, DOI 10.1109/TSE.2009.52
   [Anonymous], R LANG ENV STAT COMP
   ARCURI A, 2011, ACM IEEE INT C SOFTW, P1
   Arcuri A, 2012, IEEE T SOFTWARE ENG, V38, P497, DOI 10.1109/TSE.2011.44
   Arcuri A, 2011, LECT NOTES COMPUT SC, V6956, P33, DOI 10.1007/978-3-642-23716-4_6
   Arcuri A, 2010, LECT NOTES COMPUT SC, V6435, P95, DOI 10.1007/978-3-642-16573-3_8
   Bartz-Beielstein T, 2004, IEEE C EVOL COMPUTAT, P1111, DOI 10.1109/CEC.2004.1330986
   Ribeiro JCB, 2010, STUD COMPUT INTELL, V284, P185
   Chernick M.R., 1999, WILEY SERIES PROBABI
   CONRAD A, 2010, GEN EV COMP C GECCO, P1373
   Da Costa L., 2009, Proceedings of the 11th Annual conference on Genetic and evolutionary computation, P1467
   De Jong K, 2007, STUD COMPUT INTELL, V54, P1
   Eiben AE, 2007, STUD COMPUT INTELL, V54, P19
   Feldt R, 2000, LECT NOTES COMPUT SC, V1802, P271
   Fraser G., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P121, DOI 10.1109/ICST.2012.92
   Fraser G., 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P150, DOI 10.1109/ICST.2011.54
   Fraser G, 2013, IEEE T SOFTWARE ENG, V39, P276, DOI 10.1109/TSE.2012.14
   Fraser G, 2012, IEEE T SOFTWARE ENG, V38, P278, DOI 10.1109/TSE.2011.93
   Fraser G, 2012, PROC INT CONF SOFTW, P178, DOI 10.1109/ICSE.2012.6227195
   Gupta N, 2011, NATURE, V470, P39, DOI 10.1038/470039a
   Harman M., 2009, TR0903 KINGS COLL
   Harrold M. J., 1993, ACM Transactions on Software Engineering and Methodology, V2, P270, DOI 10.1145/152388.152391
   Ioannidis JPA, 2005, PLOS MED, V2, P696, DOI 10.1371/journal.pmed.0020124
   Knight J, 2003, NATURE, V422, P554, DOI 10.1038/422554a
   Lenth RV, 2009, J STAT SOFTW, V32, P1
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   Mitchell T. M., 1997, MACHINE LEARNING
   Myers R.H., 2009, RESPONSE SURFACE MET, V705
   Poulding S., 2011, INT WORKSH SEARCH BA
   RIBEIRO JCB, 2008, GEN EV COMP C GECCO, P1819
   Schooler J, 2011, NATURE, V470, P437, DOI 10.1038/470437a
   SHARMA R, 2011, FUNDAMENTAL APPROACH
   SMART RG, 1965, CAN PSYCHOLOGIST, V5, P225
   Smit SK, 2010, LECT NOTES COMPUT SC, V6024, P542, DOI 10.1007/978-3-642-12239-2_56
   Tonella P., 2004, Software Engineering Notes, V29, P119, DOI 10.1145/1013886.1007528
   Vos Tanja E. J., 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P175, DOI 10.1109/ICST.2010.24
   Wappler S, 2005, GECCO 2005: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOLS 1 AND 2, P1053
   Whitley D, 2001, INFORM SOFTWARE TECH, V43, P817, DOI 10.1016/S0950-5849(01)00188-4
   Wolpert D. H., 1997, IEEE Transactions on Evolutionary Computation, V1, P67, DOI 10.1109/4235.585893
NR 39
TC 238
Z9 250
U1 0
U2 19
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2013
VL 18
IS 3
BP 594
EP 623
DI 10.1007/s10664-013-9249-9
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 155US
UT WOS:000319774300007
DA 2024-07-18
ER

PT J
AU Lämmel, R
   Pek, E
AF Laemmel, Ralf
   Pek, Ekaterina
TI Understanding privacy policies A study in empirical analysis of language
   usage
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Web-based systems; Privacy; Privacy policies; P3P; Language usage;
   Empirical study; Language understanding; Domain-specific languages;
   Software metrics; Clone detection; Software language engineering;
   Software linguistics; Policy compliance; Policy enforcement
ID ESSENCE; MANAGEMENT
AB Their is growing recognition that users of web-based systems want to understand, if not control, what customer's data is stored by whom, for what purpose, for what duration, and with whom it is shared. We inform current language-based privacy efforts with an empirical study of P3P-the W3C domain-specific language for privacy policies. We use methods of software language engineering to study usage profiles, correctness of policies, metrics, cloning, and language extensions. The study supports the conclusion that P3P's approach to policy validation is too weak to ensure correct use of the language. The study also discovers common, dominating policies, which may suggest a simpler approach to web privacy. Further, the study investigates a range of metrics for policies in an attempt to discover particularly interesting or complex policies. Finally, the study also attempts to discover symptoms of the need for extending the P3P language, but the found results are not conclusive here.
C1 [Laemmel, Ralf; Pek, Ekaterina] Univ Koblenz Landau, Software Languages Team, Koblenz, Germany.
   [Laemmel, Ralf; Pek, Ekaterina] Univ Koblenz Landau, ADAPT Lab, Koblenz, Germany.
C3 University of Koblenz & Landau; University of Koblenz & Landau
RP Lämmel, R (corresponding author), Univ Koblenz Landau, Software Languages Team, Koblenz, Germany.
EM rlaemmel@acm.org; pek@uni-koblenz.de
OI Lammel, Ralf/0000-0001-9946-4363
CR Agrawal R, 2005, PROC INT CONF DATA, P1013
   Agrawal R, 2005, COMPUT NETW, V48, P809, DOI 10.1016/j.comnet.2005.01.004
   Agrawal R., 2003, WWW, P629
   [Anonymous], P 4 INT WORKSH PRIV
   [Anonymous], 2006, PLATF PRIV PREF 1 1
   [Anonymous], WEB PRIVACY P3P
   [Anonymous], 1992, 19th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, DOI DOI 10.1145/143165.143169
   Ashley P., 2004, AISM, P11
   Balazinska M, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P98, DOI 10.1109/WCRE.2000.891457
   Baxter G, 2006, ACM SIGPLAN NOTICES, V41, P397, DOI 10.1145/1167515.1167507
   Baxter ID, 1998, PROC IEEE INT CONF S, P368, DOI 10.1109/ICSM.1998.738528
   Bierman G, 2005, LECT NOTES COMPUT SC, V3586, P287
   Chevance R. J., 1978, SIGPLAN Notices, V13, P44, DOI 10.1145/953411.953414
   Collberg C, 2007, SOFTWARE PRACT EXPER, V37, P581, DOI 10.1002/spe.776
   COOK RP, 1982, SOFTWARE PRACT EXPER, V12, P195, DOI 10.1002/spe.4380120209
   Cranor LF, 2011, RE COMMENTS FEDERAL
   Cranor LF, 2008, ELECTRON COMMER R A, V7, P274, DOI 10.1016/j.elerap.2008.04.003
   Egelman S, 2006, 2006 ICEC: EIGHTH INTERNATIONAL CONFERENCE ON ELECTRONIC COMMERCE, PROCEEDINGS, P197
   Falke R, 2008, EMPIR SOFTW ENG, V13, P601, DOI 10.1007/s10664-008-9073-9
   Favre JM, 2011, LECT NOTES COMPUT SC, V6563, P316, DOI 10.1007/978-3-642-19440-5_21
   Fenton N., 1996, SOFTWARE METRICS RIG, VSecond
   Fisler K, 2009, P 5 S US PRIV SEC SO
   Fisler Kathi., 2010, P FSESDP WORKSHOP FU, P109
   Gil J, 2005, ACM SIGPLAN NOTICES, V40, P97, DOI 10.1145/1103845.1094819
   Hayati K, 2005, LECT NOTES COMPUT SC, V3424, P302
   Hogben G, 2002, LECT NOTES COMPUT SC, V2502, P104
   Kapser C, 2003, ELISA 03, P67
   Karjoth G, 2003, LECT NOTES COMPUT SC, V2482, P69
   Kart J, 2009, IBM J RES DEV, V53, P242
   Kaser O., 2007, CoRR
   Kelley Patrick Gage, 2009, P S US PRIV SEC, DOI [10.1145/1572532.1572538., DOI 10.1145/1572532.1572538]
   Knuth D. E., 1971, Software - Practice and Experience, V1, P105, DOI 10.1002/spe.4380010203
   Koschke R., 2008, SOFTWARE EVOLUTION, P15, DOI DOI 10.1007/978-3-540-76440-3_2
   Kwon O, 2010, DECIS SUPPORT SYST, V50, P213, DOI 10.1016/j.dss.2010.08.002
   Lammel Ralf., 2005, C P XML 2005
   Malone P, 2010, GTIP 10, P27
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Mernik M, 2005, ACM COMPUT SURV, V37, P316, DOI 10.1145/1118890.1118892
   Mont MC, 2006, PST 06, p[25, 1, 12]
   Reay I, 2009, ACM T WEB, V3, DOI 10.1145/1513876.1513878
   Reay IK, 2007, IEEE T DEPEND SECURE, V4, P151, DOI [10.1109/TDSC.2007.1004, 10.1109/TDSC2007.1004]
   Ringelstein C, 2011, IEEE INTERNET COMPUT, V15, P49, DOI 10.1109/MIC.2010.128
   ROBINSON SK, 1976, COMPUT J, V19, P56, DOI 10.1093/comjnl/19.1.56
   Roy CK, 2009, SCI COMPUT PROGRAM, V74, P470, DOI 10.1016/j.scico.2009.02.007
   SAAL HJ, 1977, COMPUT LANG, V2, P47, DOI 10.1016/0096-0551(77)90007-8
   Salim F, 2007, LECT NOTES COMPUT SC, V4776, P200
   Schwartz A, 2009, LOOKING BACK P3P
   Siméon J, 2003, ACM SIGPLAN NOTICES, V38, P1, DOI 10.1145/640128.604132
   Steele G. L.  Jr., 1999, Higher-Order and Symbolic Computation, V12, P221, DOI 10.1023/A:1010085415024
   The Center for Information Policy Leadership, 2004, MULT NOT EXPL
   The Center for Information Policy Leadership, 2005, 10 STEPS DEV MULT PR
   Uustalu T, 2005, LECT NOTES COMPUT SC, V3780, P2
   *W3C, 2002, P3P PREF EX IN PRESS
   Wile D, 2004, SCI COMPUT PROGRAM, V51, P265, DOI 10.1016/j.scico.2003.12.006
   Yu Ting., 2004, SWS 04, P1, DOI [10.1145/1111348.1111349, DOI 10.1145/1111348.1111349]
NR 55
TC 7
Z9 8
U1 0
U2 34
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2013
VL 18
IS 2
BP 310
EP 374
DI 10.1007/s10664-012-9204-1
PG 65
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 077ZD
UT WOS:000314067000005
DA 2024-07-18
ER

PT J
AU Bajracharya, SK
   Lopes, CV
AF Bajracharya, Sushil Krishna
   Lopes, Cristina Videira
TI Analyzing and mining a code search engine usage log
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Code search engine; Usage log analysis; Mining topics
ID SOFTWARE DEVELOPERS; QUERY EXPANSION; WEB; INFORMATION; RETRIEVAL;
   SYSTEM
AB This paper presents an analysis of a year long usage log of Koders, the first commercially available Internet-Scale code search engine (http://www.koders.com). The usage log comprises about ten million activities from more than three million users. Analysis of the usage data shows that despite of attracting a large number of visitors, Koders has a very sparse usage and that it lacks regular usage from many of its users. When compared to Web search, search behavior in Koders showed many similar patterns. A topic modeling analysis of the usage data shows what topics users of Koders are looking for. Observations on the prevalence of these topics among the users, and observations on how search and download activities vary across topics, lead to the conclusion that users who find code search engines usable are those who already know to a high level of specificity what to look for. This paper also presents a general categorization of these topics that provides insights on the different ways code search engine users express their queries. It identifies various forms of queries in Koders's log and the kinds of results addressed by the queries. It also provides several suggestions for improvements in code search engines based on the analysis of usage, topics, and query forms. The work presented in this paper is the first of its kind that reveals several insights on the usage of an Internet-Scale code search engine.
C1 [Bajracharya, Sushil Krishna; Lopes, Cristina Videira] Univ Calif Irvine, Dept Informat, Donald Bren Sch Informat & Comp Sci, Irvine, CA 92697 USA.
C3 University of California System; University of California Irvine
RP Bajracharya, SK (corresponding author), 1230 Stanford, Irvine, CA 92612 USA.
EM sbajrach@ics.uci.edu; lopes@ics.uci.edu
FU National Science Foundation [CCF-0347902]
FX We thank Darren Rush (former CEO, Koders) for providing us with the
   Koders usage log without which this work would not have been possible.
   We thank Black Duck Software (current company that owns Koders) for
   granting us the permission to make the Koders usage log accessible to
   the public. We thank Andi Zink (VP of Engineering, Black Duck Software)
   for his efforts in making the Koders usage log public. We thank the
   anonymous reviewers of this paper for their valuable suggestions that
   helped to improve the contents of the paper. The work presented in this
   paper has been supported in part by the National Science Foundation's
   grant CCF-0347902.
CR Andrzejewski D, 2007, LECT NOTES ARTIF INT, V4701, P6
   [Anonymous], 2007, P 22 IEEE ACM INT C
   Asuncion H, 2010, 32 INT C SOFTW ENG
   Aula A, 2006, J AM SOC INF SCI TEC, V57, P1678, DOI 10.1002/asi.20340
   Baeza-Yates Ricardo, 1999, MODERN INFORM RETRIE, V463
   Bajracharya S, 2010, 18 INT S FDN SOFTW E
   Bajracharya S, 2007, UCIISR078
   Bajracharya S., 2006, COMP 21 ACM SIGPLAN, P681, DOI DOI 10.1145/1176617.1176671
   Bajracharya S, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P111, DOI 10.1109/MSR.2009.5069489
   Bajracharya S, 2009, PROC INT CONF SOFTW, P445, DOI 10.1109/ICSE-COMPANION.2009.5071054
   Bajracharya Sushil, 2010, P 2010 ICSE WORKSH S, P5
   Baldi PF, 2008, OOPSLA 2008 NASHVILLE, CONFERENCE PROCEEDINGS, P543, DOI 10.1145/1449955.1449807
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Brandt J, 2009, CHI2009: PROCEEDINGS OF THE 27TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P1589
   Cui H, 2003, IEEE T KNOWL DATA EN, V15, P829, DOI 10.1109/TKDE.2003.1209002
   Dumais ST, 2004, ANNU REV INFORM SCI, V38, P189
   FURNAS GW, 1987, COMMUN ACM, V30, P964, DOI 10.1145/32206.32212
   Griffiths TL, 2004, P NATL ACAD SCI USA, V101, P5228, DOI 10.1073/pnas.0307752101
   Grimes C, 2007, QUERY LOG ANAL SOCIA
   Grossman D.A., 2004, INFORM RETRIEVAL ALG
   Henninger S., 1997, ACM Transactions on Software Engineering and Methodology, V6, P111, DOI 10.1145/248233.248242
   Hoffmann R, 2007, UIST 2007: PROCEEDINGS OF THE 20TH ANNUAL ACM SYMPOSIUM ON USER INTERFACE SOFTWARE AND TECHNOLOGY, P13
   Holmes R, 2005, PROC INT CONF SOFTW, P117
   Hummel O, 2008, IEEE SOFTWARE, V25, P45, DOI 10.1109/MS.2008.110
   Jansen BJ, 2006, INFORM PROCESS MANAG, V42, P248, DOI 10.1016/j.ipm.2004.10.007
   Jinxi Xu, 1996, SIGIR Forum, P4
   Joachims T, 2002, P 8 ACM SIGKDD INT C, P133, DOI [DOI 10.1145/775047.775067, 10.1145/775047.775067]
   Joachims T, 2007, ACM T INFORM SYST, V25, DOI 10.1145/1229179.1229181
   Kawaguchi S, 2006, J SYST SOFTWARE, V79, P939, DOI 10.1016/j.jss.2005.06.044
   Ko AJ, 2007, PROC INT CONF SOFTW, P344
   Ko AJ, 2006, IEEE T SOFTWARE ENG, V32, P971, DOI 10.1109/TSE.2006.116
   Koenemann Jurgen, 1996, Proceedings of the SIGCHI Conference on Human Factors in Computing Systems (CHI '96), P205, DOI DOI 10.1145/238386.238487
   Kuhn A, 2007, INFORM SOFTWARE TECH, V49, P230, DOI 10.1016/j.infsof.2006.10.017
   LEMOS O, 2009, 24 ANN ACM S APPL CO
   Linstead E., 2007, P 22 IEEE ACM INT C, P461, DOI [10.1145/1321631.1321709, DOI 10.1145/1321631.1321709]
   Linstead E., 2007, P 4 INT WORKSHOP MIN, P30
   Linstead E, 2009, DATA MIN KNOWL DISC, V18, P300, DOI 10.1007/s10618-008-0118-x
   Liu H., 2001, P 2001 C CTR ADV STU, P10
   Lopes C, 2010, UCI source code data sets
   Lukins SK, 2008, WORK CONF REVERSE EN, P155, DOI 10.1109/WCRE.2008.33
   Maletic JI, 2001, PROC INT CONF SOFTW, P103, DOI 10.1109/ICSE.2001.919085
   Maletic JI, 2000, PROC INT C TOOLS ART, P46, DOI 10.1109/TAI.2000.889845
   Mandelin David., 2005, Jungloid mining: helping to navigate the API jungle. pages, P48, DOI [10.1145/1065010.1065018, DOI 10.1145/1065010.1065018]
   Marcus A, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P107, DOI 10.1109/ASE.2001.989796
   Marcus A, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P214, DOI 10.1109/WCRE.2004.10
   Maskeri Girish, 2008, 1st India Software Engineering Conference. ISEC 2008, P113
   McCarey F, 2006, LECT NOTES COMPUT SC, V4039, P217
   Murphy GC, 2006, IEEE SOFTWARE, V23, P76, DOI 10.1109/MS.2006.105
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI [10.1109/TSE.2007.1016, 10.1109/TSE.2007.1016.]
   Poshyvanyk D, 2007, INT C PROGRAM COMPRE, P37
   Quan X., 2009, KNOWL INF SYST, P1
   Reiss SP, 2009, PROC INT CONF SOFTW, P243, DOI 10.1109/ICSE.2009.5070525
   Sillito J., 2006, QUESTIONS PROGRAMMER, P23
   Silverstein C., 1999, SIGIR Forum, V33, P6, DOI 10.1145/331403.331405
   Sim SE, 1998, PROG COMPREHEN, P180, DOI 10.1109/WPC.1998.693351
   Singer J, 1997, EXAMINATION SOFTWARE, P21
   Tian K, 2009, 6 IEEE INT WORK C MI
   Umarji M, 2008, INT FED INFO PROC, V275, P257
   Whittle M, 2007, J AM SOC INF SCI TEC, V58, P2382, DOI 10.1002/asi.20733
   Ye YW, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P513, DOI 10.1109/ICSE.2002.1007995
   Zazo NF, 2005, INFORM PROCESS MANAG, V41, P1163, DOI 10.1016/j.ipm.2004.05.006
   Zhou XH, 2007, PROC INT C TOOLS ART, P197, DOI 10.1109/ICTAI.2007.117
   Zhu Y, 2005, LECT NOTES COMPUT SC, V3588, P686
NR 63
TC 60
Z9 66
U1 0
U2 10
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2012
VL 17
IS 4-5
BP 424
EP 466
DI 10.1007/s10664-010-9144-6
PG 43
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 943WF
UT WOS:000304155700004
OA hybrid
DA 2024-07-18
ER

PT J
AU Kosar, T
   Mernik, M
   Carver, JC
AF Kosar, Tomaz
   Mernik, Marjan
   Carver, Jeffrey C.
TI Program comprehension of domain-specific and general-purpose languages:
   comparison using a family of experiments
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Domain-specific languages; General-purpose languages; Program
   understanding; Program comprehension; Controlled experiments; Language
   evaluations
AB Domain-specific languages (DSLs) are often argued to have a simpler notation than general-purpose languages (GPLs), since the notation is adapted to the specific problem domain. Consequently, the impact of domain relevance on the creation of the problem representation is believed to improve programmers' efficiency and accuracy when using DSLs compared with using similar solutions like application libraries in GPLs. Most of the common beliefs have been based upon qualitative conclusions drawn by developers. Rather than implementing the same problem in a DSL and in a GPL and comparing the efficiency and accuracy of each approach, developers often compare the implementation of a new program in a DSL to their previous experiences implementing similar programs in GPLs. Such a conclusion may or may not be valid. This paper takes a more skeptical approach to acceptance of those beliefs. By reporting on a family of three empirical studies comparing DSLs and GPLs in different domains. The results of the studies showed that when using a DSL, developers are more accurate and more efficient in program comprehension than when using a GPL. These results validate some of the long-held beliefs of the DSL community that until now were only supported by anecdotal evidence.
C1 [Kosar, Tomaz; Mernik, Marjan] Univ Maribor, Fac Elect Engn & Comp Sci, Maribor 2000, Slovenia.
   [Carver, Jeffrey C.] Univ Alabama, Dept Comp Sci, Tuscaloosa, AL 35487 USA.
C3 University of Maribor; University of Alabama System; University of
   Alabama Tuscaloosa
RP Kosar, T (corresponding author), Univ Maribor, Fac Elect Engn & Comp Sci, Smetanova Ulica 17, Maribor 2000, Slovenia.
EM tomaz.kosar@uni-mb.si; marjan.mernik@uni-mb.si; carver@cs.ua.edu
RI Carver, Jeffrey/AAM-8202-2020; Mernik, Marjan/A-1147-2008; Carver,
   Jeffrey/AFP-1987-2022
OI Carver, Jeffrey/0000-0002-7824-9151; Mernik, Marjan/0000-0002-2775-0667;
   Carver, Jeffrey/0000-0002-7824-9151; Kosar, Tomaz/0000-0001-8714-9649
FU Program Comprehension for Domain-Specific Languages [BI-PT/08-09-008]
FX This work was partially sponsored by the bilateral project "Program
   Comprehension for Domain-Specific Languages" (code BI-PT/08-09-008)
   between Slovenia and Portugal.
CR [Anonymous], 2006, SIGMOD C
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   BENTLEY J, 1986, COMMUN ACM, V29, P711, DOI 10.1145/6424.315691
   Carver J, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P239
   Carver JC, 2010, EMPIR SOFTW ENG, V15, P35, DOI 10.1007/s10664-009-9109-9
   Collins RW, 2008, INFORM SOFTWARE TECH, V50, P1165, DOI 10.1016/j.infsof.2008.04.001
   Consel C., 1998, LECT NOTES COMPUTER, V1490, P170
   Cruz-Lemus JA, 2009, EMPIR SOFTW ENG, V14, P685, DOI 10.1007/s10664-009-9106-z
   Elliott C, 1999, IEEE T SOFTWARE ENG, V25, P291, DOI 10.1109/32.798320
   Gansner E.R., 2009, DRAWING GRAPHS DOT
   Green TRG, 1996, J VISUAL LANG COMPUT, V7, P131, DOI 10.1006/jvlc.1996.0009
   Hevner AR, 2005, CMUSEI90TR21
   Hudak P, 1998, FIFTH INTERNATIONAL CONFERENCE ON SOFTWARE REUSE - PROCEEDINGS, P134, DOI 10.1109/ICSR.1998.685738
   Jedlitschka A., 2008, Guide to advanced empirical software engineering, P201, DOI DOI 10.1007/978-1-84800-044-5_8
   Jones SP, 2003, ACM SIGPLAN NOTICES, V38, P165, DOI 10.1145/944746.944721
   Kang Kyo C, 1990, Technical Report
   Kieburtz RB, 1996, PROC INT CONF SOFTW, P542, DOI 10.1109/ICSE.1996.493448
   Kosar Tomaz, 2009, Proceedings of the 2009 International Multiconference on Computer Science and Information Technology (IMCSIT), P675, DOI 10.1109/IMCSIT.2009.5352767
   Kosar T, 2008, INFORM SOFTWARE TECH, V50, P390, DOI 10.1016/j.infsof.2007.04.002
   Kosar T, 2010, COMPUT SCI INF SYST, V7, P247, DOI 10.2298/CSIS1002247K
   Likert R., 1932, Arch. Psychol., V22, P44, DOI DOI 10.4135/9781412961288.N454
   MacVittie L.A., 2006, XAML in a Nutshell
   Mauw S, 2004, INT J SOFTW ENG KNOW, V14, P625, DOI 10.1142/S0218194004001828
   Mernik M, 2005, ACM COMPUT SURV, V37, P316, DOI 10.1145/1118890.1118892
   Nugroho A, 2009, INFORM SOFTWARE TECH, V51, P1670, DOI 10.1016/j.infsof.2009.04.007
   Otero MC, 2004, INFORM SOFTWARE TECH, V46, P35, DOI 10.1016/S0950-5849(03)00108-3
   Ricca F., 2010, P 2010 ACM IEEE INT
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Sprinkle J, 2009, IEEE SOFTWARE, V26, P15, DOI 10.1109/MS.2009.92
   Storey MA, 2005, PROG COMPREHEN, P181, DOI 10.1109/WPC.2005.38
   Thibault SA, 1999, IEEE T SOFTWARE ENG, V25, P363, DOI 10.1109/32.798325
   van Deursen A, 2000, ACM SIGPLAN NOTICES, V35, P26, DOI 10.1145/352029.352035
   van Deursen A., 2002, Journal of Computing and Information Technology - CIT, V10, P1, DOI 10.2498/cit.2002.01.01
   Van Deursen A, 1998, J SOFTW MAINT-RES PR, V10, P75, DOI 10.1002/(SICI)1096-908X(199803/04)10:2<75::AID-SMR168>3.0.CO;2-5
   Pereira MJV, 2008, COMPUT SCI INF SYST, V5, P1, DOI 10.2298/CSIS0802001P
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Wile D. S., 2001, Journal of Computing and Information Technology - CIT, V9, P263, DOI 10.2498/cit.2001.04.01
NR 38
TC 83
Z9 91
U1 0
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2012
VL 17
IS 3
BP 276
EP 304
DI 10.1007/s10664-011-9172-x
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 893GI
UT WOS:000300343800005
DA 2024-07-18
ER

PT J
AU Wnuk, K
   Höst, M
   Regnell, B
AF Wnuk, Krzysztof
   Host, Martin
   Regnell, Bjorn
TI Replication of an experiment on linguistic tool support for
   consolidation of requirements from multiple sources
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Requirements engineering; Experiment; Linguistic method; Replication
ID TRACEABILITY LINKS; SOFTWARE; GUIDELINES; KNOWLEDGE; REVERE; CODE
AB Large market-driven software companies continuously receive large numbers of requirements and change requests from multiple sources. The task of analyzing those requests against each other and against already analyzed or implemented functionality then recording similarities between them, also called the requirements consolidation task, may be challenging and time consuming. This paper presents a replicated experiment designed to further investigate the linguistic tool support for the requirements consolidation task. In this replication study, 45 subjects, working in pairs on the same set of requirements as in the original study, were assigned to use two methods for the requirements consolidation: (1) lexical similarity and (2) searching and filtering. The results show that the linguistic method used in this experiment is not more efficient in consolidating requirements than the searching and filtering method, which contradicts the findings of the original study. However, we confirm the previous results that the assisted method (lexical similarity) can deliver more correct links and miss fewer links than the manual method (searching and filtering).
C1 [Wnuk, Krzysztof; Host, Martin; Regnell, Bjorn] Lund Univ, Dept Comp Sci, S-22363 Lund, Sweden.
C3 Lund University
RP Wnuk, K (corresponding author), Lund Univ, Dept Comp Sci, Ole Romers Vag 3, S-22363 Lund, Sweden.
EM Krzysztof.Wnuk@cs.lth.se; Martin.Host@cs.lth.se; Bjorn.Regnell@cs.lth.se
RI Höst, Martin/KDN-4323-2024
OI Höst, Martin/0000-0002-9360-8693; Regnell, Bjorn/0000-0002-9380-6120
FU VINNOVA (Swedish Agency for Innovation Systems); UPITER
FX This work is supported by VINNOVA (Swedish Agency for Innovation
   Systems) within the UPITER project. Special acknowledgments to Richard
   Berntsson-Svensson for participating in the pilot study and reviewing
   the paper. We are also thankful to Lars Nilsson and David Callele for
   reviewing the paper and excellent language comments.
CR AGUILERA C, 1990, J SYST SOFTWARE, V13, P209, DOI 10.1016/0164-1212(90)90097-6
   [Anonymous], 1991, Multivariate statistical analysis: A conceptual introduction
   [Anonymous], 2003, Software requirements
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Baddoo N., 2006, Software Process Improvement and Practice, V11, P219, DOI 10.1002/spip.265
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Begel A, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P120
   Berenbach B., 2009, Practice
   Breaux TD, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P225, DOI 10.1109/RE.2009.46
   Cleland-Huang J, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P135, DOI 10.1109/RE.2005.78
   Cleland-Huang J, 2002, P INT COMP SOFTW APP, P595, DOI 10.1109/CMPSAC.2002.1045069
   Cleland-Huang J, 2007, COMPUTER, V40, P27, DOI 10.1109/MC.2007.195
   Dag JNO, 2006, EMPIR SOFTW ENG, V11, P303, DOI 10.1007/s10664-006-6405-5
   Dag JNO, 2004, 12TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P283
   De Lucia A, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1276933.1276934
   ECTS, 2010, ECTS GRAD SYST DEF E
   Emenecker J., 2010, P 32 ACM IEEE INT C, V1, P155, DOI DOI 10.1145/1806799.1806825
   Fabbrini F, 2001, P 7 INT WORKSHOP REQ, P4
   Fantechi A., 2003, Requirements Engineering, V8, P161, DOI 10.1007/s00766-003-0174-0
   Fricker S, 2010, IEEE SOFTWARE, V27, P72, DOI 10.1109/MS.2010.44
   Gacitua R., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P5, DOI 10.1109/RE.2010.12
   Gervasi V, 2000, 4TH INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P140, DOI 10.1109/ICRE.2000.855601
   Gervasi V, 1999, ENV SUPPORT REQUIREM
   Goldin L., 1997, Automated Software Engineering, V4, P375, DOI 10.1023/A:1008617922496
   Gorschek T, 2007, REQUIR ENG, V12, P163, DOI 10.1007/s00766-007-0047-z
   Gotel O. C. Z., 1994, Proceedings of the First International Conference on Requirements Engineering (Cat. No.94TH0613-0), P94, DOI 10.1109/ICRE.1994.292398
   Hayes JH, 2007, INNOV SYST SOFTW ENG, V3, P193, DOI 10.1007/s11334-007-0024-1
   Hayes JH, 2006, IEEE T SOFTWARE ENG, V32, P4, DOI 10.1109/TSE.2006.3
   Hayes JH, 2003, 11TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P138
   Higgins SA, 2003, IEEE SOFTWARE, V20, P26, DOI 10.1109/MS.2003.1159026
   Höst M, 2005, PROC INT CONF SOFTW, P470
   Hulkko H, 2005, PROC INT CONF SOFTW, P495
   IBM, 2010, RAT DOORS PROD DESCR
   IBM, 2010, RAT DOORS FORM TEL D
   IEEE, 2010, IEEE KEYW TAX WEBP
   Ivarsson M, 2009, REQUIR ENG, V14, P155, DOI 10.1007/s00766-009-0080-1
   Jackson P., 2002, Natural Language Processing for Online Applications: Text Retrieval, Extraction, and Categorization, volume 5 of Natural Language Processing, V5
   Jarke M, 1998, COMMUN ACM, V41, P32, DOI 10.1145/290133.290145
   Kamsties E., 2001, P 1 WORKSH INSP SOFT, P68
   Karlsson Lena, 2002, P 8 INT WORKSH REQ E
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Konrad S, 2008, INT REQUIR ENG CONF, P217, DOI 10.1109/RE.2008.31
   Kotonya G., 1998, Requirements engineering
   LAUESEN S, 2002, SOFTWARE REQUIREMENT
   Leuser J, 2009, 2009 ICSE WORKSHOP ON TRACEABILITY IN EMERGING FORMS OF SOFTWARE ENGINEERING (TEFSE), P31, DOI 10.1109/TEFSE.2009.5069580
   Lin J, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P363
   Lormans M, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P45
   Lund University, 2011, SOFTW DEV LARG SYST
   Lund University, 2011, REQ ENG COURS ETS170
   MACIAS B, 1995, COMPUT J, V38, P310, DOI 10.1093/comjnl/38.4.310
   Manning C., 2002, SGMD
   Marcus A, 2003, PROC INT CONF SOFTW, P125, DOI 10.1109/ICSE.2003.1201194
   Mich L, 2002, IMPROVING QUALITY CO, DOI 10.1.1.62.6397
   Nakagawa S, 2004, BEHAV ECOL, V15, P1044, DOI 10.1093/beheco/arh107
   Natt och Dag J, 2006, THESIS LUND U SWEDEN
   Panis M. C., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P303, DOI 10.1109/RE.2010.43
   Parrish A, 2004, IEEE SOFTWARE, V21, P76, DOI 10.1109/MS.2004.1331306
   Perneger T. V., 1998, WHATS WRONG BONFERRO, V316
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Ramesh B, 2001, IEEE T SOFTWARE ENG, V27, P58, DOI 10.1109/32.895989
   Ramesh B., 1995, Proceedings of the Second IEEE International Symposium on Requirements Engineering (Cat. No.95TH8040), P89, DOI 10.1109/ISRE.1995.512549
   Rayson P, 2001, LECT NOTES COMPUT SC, V1959, P288
   Regnell B, 2005, ENGINEERING AND MANAGING SOFTWARE REQUIREMENTS, P287, DOI 10.1007/3-540-28244-0_13
   Regnell B., 1998, Requirements Engineering, V3, P121, DOI 10.1007/BF02919972
   ROLLAND C, 1992, LECT NOTES COMPUT SC, V593, P257
   Rupp C, 2000, P EUROSPI 2000, P68
   Ryan K, 1993, P IEEE INT S REQ ENG, P240, DOI 10.1109/ISRE.1993.324852
   Samarasinghe R, 2009, 2009 INTERNATIONAL CONFERENCE ON INDUSTRIAL AND INFORMATION SYSTEMS, P74, DOI 10.1109/ICIINFS.2009.5429887
   Sawyer P, 2005, IEEE T SOFTWARE ENG, V31, P969, DOI 10.1109/TSE.2005.129
   Sawyer P, 2002, INFORM SYST FRONT, V4, P343, DOI 10.1023/A:1019918908208
   Sawyer P, 2004, P 10 INT WORKSH REQ, P137
   Shull FJ, 2008, EMPIR SOFTW ENG, V13, P211, DOI 10.1007/s10664-008-9060-1
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Sommerville I, 1997, ANN SOFTW ENG, V3, P101, DOI 10.1023/A:1018946223345
   Strens MR, 1996, IEEE SYMPOSIUM AND WORKSHOP ON ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P278, DOI 10.1109/ECBS.1996.494539
   Wilkinson L, 1999, AM PSYCHOL, V54, P594, DOI 10.1037/0003-066X.54.8.594
   Wilson WM, 1997, PROC INT CONF SOFTW, P161, DOI 10.1145/253228.253258
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Zowghi D, 1997, RE '97 - PROCEEDINGS OF THE THIRD IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, P247, DOI 10.1109/ISRE.1997.566875
NR 80
TC 6
Z9 9
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2012
VL 17
IS 3
BP 305
EP 344
DI 10.1007/s10664-011-9174-8
PG 40
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 893GI
UT WOS:000300343800006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Gülesir, G
   van den Berg, K
   Bergmans, L
   Aksit, M
AF Gulesir, Gurcan
   van den Berg, Klaas
   Bergmans, Lodewijk
   Aksit, Mehmet
TI Experimental evaluation of a tool for the verification and
   transformation of source code in event-driven systems
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Event-driven systems; Source code verification; Source code
   transformation; Formal experiment
AB In event-driven systems, separating the reactive part of software (i.e., event-driven control) from the non-reactive part is a common design practice. The reactive part is typically structured according to the states and transitions of a system, whereas the non-reactive part is typically structured according to the concepts of the application domain (e.g., the services provided by the system). In such systems, the non-reactive part of software stimulates the reactive part with event calls. Whenever the non-reactive part is modified (e.g., during evolution), the existing event calls may become invalid, new event calls may become necessary, and the two parts of software may become incompatible. Manually finding and repairing these types of defects is a time-consuming and error-prone maintenance task. In this article, we present a solution that combines source code model checking and aspect-oriented programming techniques, to reduce the time spent by developers and to automatically find defects, while performing the maintenance task mentioned above. In addition, we present controlled experiments showing that the solution can reduce the time by 75%, and enable the prevention of one defect per 140 lines of source code.
C1 [Gulesir, Gurcan; van den Berg, Klaas; Bergmans, Lodewijk; Aksit, Mehmet] Univ Twente, Dept Comp Sci, NL-7500 AE Enschede, Netherlands.
   [van den Berg, Klaas] Univ Twente, Software Engn Grp, NL-7500 AE Enschede, Netherlands.
C3 University of Twente; University of Twente
RP Gülesir, G (corresponding author), Univ Twente, Dept Comp Sci, POB 217, NL-7500 AE Enschede, Netherlands.
EM g.gulesir@cs.utwente.nl; k.g.vandenberg@cs.utwente.nl;
   bergmans@cs.utwente.nl; aksit@cs.utwente.nl
RI Van den Berg, Klaas/AAU-8601-2021
CR Aho A.V., 1986, COMPILERS PRINCIPLES
   ALDRICH J, 2005, EUR C OBJ OR PROGR
   Allan C, 2005, ACM SIGPLAN NOTICES, V40, P345, DOI 10.1145/1103845.1094839
   [Anonymous], IEEE S SEC PRIV OAKL
   [Anonymous], 2017, An Introduction to Formal Languages and Automata
   [Anonymous], 1999, Concurrency-state models and Java programs
   Ball T., 2002, POPL 02, P1
   BATES PC, 1995, ACM T COMPUT SYST, V13, P1, DOI 10.1145/200912.200913
   Beugnard A, 1999, COMPUTER, V32, P38, DOI 10.1109/2.774917
   Chen H., 2002, MOPS INFRASTRUCTURE
   Clarke EM, 1999, MODEL CHECKING, P1
   Cook T. D., 1979, Quasi-experimentation: Design analysis issues for field settings
   Corbett J. C., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P439, DOI 10.1109/ICSE.2000.870434
   Cordy JR, 2006, SCI COMPUT PROGRAM, V61, P190, DOI 10.1016/j.scico.2006.04.002
   Cormen Thomas H., 2001, INTRO ALGORITHMS
   Das Manuvir., 2002, PLDI, P57, DOI DOI 10.1145/512529.512538
   Dillon L. K., 1994, ACM Transactions on Software Engineering and Methodology, V3, P131, DOI 10.1145/192218.192226
   DILLON LK, 1994, J VISUAL LANG COMPUT, V5, P61, DOI 10.1006/jvlc.1994.1004
   Douence R, 2002, LECT NOTES COMPUT SC, V2487, P173
   DOUENCE R, 2001, REFLECTION 01, P170
   Douence R., 2004, C SPED ORIENTED SOFT, P141
   Douence Remi, 2005, Aspect-Oriented Software Development, P201
   ENGLER D, 2000, P 4 S OP SYST DES IM
   EVANS D, 1994, SIGSOFT S FDN SOFTW, P87
   Faul F, 2007, BEHAV RES METHODS, V39, P175, DOI 10.3758/BF03193146
   Fenton N. E., 1998, Software metrics: a rigorous and practical approach
   FILMAN R, 2005, ASPECT ORIENTED SOFT
   Giannakopoulou D., 2003, Software Engineering Notes, V28, P257, DOI 10.1145/949952.940106
   GOLDSMITH S, 2005, OOPSLA 05 P 20 ACM S, P385
   Griswold W. G., 1993, ACM Transactions on Software Engineering and Methodology, V2, P228, DOI 10.1145/152388.152389
   GULESIR G, 2008, THESIS U TWENTE ENSC
   Harel D., 1996, ACM Transactions on Software Engineering and Methodology, V5, P293, DOI 10.1145/235321.235322
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   HAREL D, 1990, IEEE T SOFTWARE ENG, V16, P403, DOI 10.1109/32.54292
   Harel D., 1985, Logics and Models of Concurrent Systems, VF-13, P477, DOI [DOI 10.1007/978-3-642-82453-1_17, 10.1007/978-3-642-82453-1_17]
   Harel D., 1998, MODELING REACTIVE SY
   HATCLIFF J, 2001, CONCUR 01
   HENDRICKSON SA, 2005, IWPC 05
   Hopcroft J.E., 1990, INTRO AUTOMATA THEOR, V1st
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Letier E., 2005, ESEC/FSE, P70
   LIEBERHERR K, 2005, ASPECT ORIENTED SOFT
   LUCKHAM DC, 1995, IEEE T SOFTWARE ENG, V21, P717, DOI 10.1109/32.464548
   Martinelli N, 2005, CLIN EXP MED, V5, P20, DOI 10.1007/s10238-005-0060-9
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Nicholas D., 1978, LIT BIBLIOMETRICS
   ONGKINGCO N, 2006, AOSD 06, P39
   ROSENBLUM DS, 1991, IEEE SOFTWARE, V8, P52, DOI 10.1109/52.88944
   SCHWARTZ RL, 1983, P 2 ACM S PRINC DIST, P173
   SULLIVAN K, 2005, ESEC FSE 13, P166
   VANENGELEN R, 2007, IDEALS EVOLVABILITY
   Visser W, 2000, FIFTEENTH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P3, DOI 10.1109/ASE.2000.873645
   Wirth N., 1975, IEEE Transactions on Software Engineering, VSE-1, P192, DOI 10.1109/TSE.1975.6312839
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
NR 55
TC 5
Z9 5
U1 0
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2009
VL 14
IS 6
BP 720
EP 777
DI 10.1007/s10664-009-9107-y
PG 58
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 495IG
UT WOS:000269883800004
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Wojcicki, MA
   Strooper, P
AF Wojcicki, Margaret A.
   Strooper, Paul
TI Maximising the information gained from a study of static analysis
   technologies for concurrent software
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE controlled experiment; concurrent Java components; verification and
   validation
ID EXPERIMENTATION; KNOWLEDGE; FRAMEWORK; TOOLS
AB The results of empirical studies in Software Engineering are limited to particular contexts, difficult to generalise and the studies themselves are expensive to perform. Despite these problems, empirical studies can be made effective and they are important to both researchers and practitioners. The key to their effectiveness lies in the maximisation of the information that can be gained by examining and replicating existing studies and using power analyses for an accurate minimum sample size. This approach was applied in a controlled experiment examining the combination of automated static analysis tools and code inspection in the context of the verification and validation (V & V) of concurrent Java components. The paper presents the results of this controlled experiment and shows that the combination of automated static analysis and code inspection is cost-effective. Throughout the experiment a strategy to maximise the information gained from the experiment was used. As a result, despite the size of the study, conclusive results were obtained, contributing to the research on V & V technology evaluation.
C1 Univ Queensland, Sch Informat Technol & Elect Engn, Brisbane, Qld 4072, Australia.
C3 University of Queensland
RP Wojcicki, MA (corresponding author), Univ Queensland, Sch Informat Technol & Elect Engn, Brisbane, Qld 4072, Australia.
EM wojcicki@itee.uq.edu.au; pstroop@itee.uq.edu.au
OI Strooper, Paul/0000-0003-4789-2897
CR Andrews G. R., 1991, Concurrent Programming: Principles and Practice
   [Anonymous], 1999, Concurrency-state models and Java programs
   Artho C., 2001, Finding faults in multi-threaded programs
   BASILI VR, 1987, IEEE T SOFTWARE ENG, V13, P1278, DOI 10.1109/TSE.1987.232881
   BASILI VR, 1986, IEEE T SOFTWARE ENG, V12, P733, DOI 10.1109/TSE.1986.6312975
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Brat G, 2004, FORM METHOD SYST DES, V25, P167, DOI 10.1023/B:FORM.0000040027.28662.a4
   Briand LC, 2004, IEEE T SOFTWARE ENG, V30, P770, DOI 10.1109/TSE.2004.79
   Carver J, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P251
   Carver RH, 1998, IEEE T SOFTWARE ENG, V24, P471, DOI 10.1109/32.689403
   COAKES S.J., 2001, SPSS ANAL ANGUISH
   Cohen J., 1988, STAT POWER ANAL BEHA
   Corbett JC, 1996, IEEE T SOFTWARE ENG, V22, P161, DOI 10.1109/32.489078
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Dybå T, 2006, INFORM SOFTWARE TECH, V48, P745, DOI 10.1016/j.infsof.2005.08.009
   Endres A., 2003, A Handbook of Software and Systems Engineering: Empirical Observations, Laws, and Theories
   Eytani Y, 2007, CONCURR COMP-PRACT E, V19, P267, DOI 10.1002/cpe.1068
   Flanagan Cormac., 2004, POPL 04, P256
   FRANKL PG, 1993, IEEE T SOFTWARE ENG, V19, P774, DOI 10.1109/32.238581
   Girgis M. R., 1986, P WORKSH SOFTW TEST, P64
   Hallal HH, 2004, QSIC 2004: PROCEEDINGS OF THE FOURTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, P258
   Havelund K., 2000, International Journal on Software Tools for Technology Transfer (STTT), V2, P366, DOI [10.1007/s100090050043., DOI 10.1007/S100090050043]
   HETZEL WC, 1976, THESIS U N CAROLINA
   HOVEMEYER D, 2004, P 23 ANN ACM SIGACT
   Howell D.C., 2006, STAT METHODS PSYCHOL, V6th
   Jedlitschka A, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P92, DOI 10.1109/ISESE.2005.1541818
   Jeffery R, 2002, APSEC 2002: NINTH ASIA PACIFIC SOFTWARE ENGINEERING CONFERENCE, P539, DOI 10.1109/APSEC.2002.1183076
   Juristo N, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P161, DOI 10.1109/ISESE.2002.1166935
   Juristo N., 2013, BASICS SOFTWARE ENG
   KAMSTIES E, 1995, P 5 EUR SOFTW ENG C, P1
   KIM S, 2000, P NET OBJECTDAYS
   Kim SW, 2001, SOFTW TEST VERIF REL, V11, P207, DOI 10.1002/stvr.238
   KITCHENHAM B, 1995, IEEE T SOFTWARE ENG, V21, P929, DOI 10.1109/32.489070
   KITCHENHAM B, 2003, P 2 WORKSH WORKSH SE, P7
   Kitchenham B., 2004, ARXIV
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   KITCHENHAM BA, 2001, P EUR SOFTW MEAS C F, P1
   LEA D, 2005, OVERVIEW PACKAGE UTI
   LINDSAY RM, 1993, AM STAT, V47, P217, DOI 10.2307/2684982
   Long B, 2003, IEEE T SOFTWARE ENG, V29, P555, DOI 10.1109/TSE.2003.1205182
   LONG B, 2004, P 2 INT WORKSH PAR D
   Long B, 2007, CONCURR COMP-PRACT E, V19, P281, DOI 10.1002/cpe.1063
   Lott C. M., 1996, Empirical Software Engineering, V1, P241, DOI 10.1007/BF00127447
   LOTT CM, 2005, COMPARING READING TE
   Miller I., 1965, Probability and Statistics for Engineers
   MYERS GJ, 1978, COMMUN ACM, V21, P760, DOI 10.1145/359588.359602
   Ngui J, 2007, 2007 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P223, DOI 10.1109/ASWEC.2007.16
   NOVILLO E, 2003, P 1 INT WORKSH PAR D
   Parnas DL, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P2, DOI 10.1109/ISESE.2003.1237959
   Pickard LM, 1998, INFORM SOFTWARE TECH, V40, P811, DOI 10.1016/S0950-5849(98)00101-3
   REID SC, 1997, P EUROSTAR 97 5 EUR
   ROPER M, 1994, P EUROSTAR 94 OCT, P1
   RUSSELL GW, 1991, IEEE SOFTWARE, V8, P25, DOI 10.1109/52.62929
   SELBY RW, 1986, P WORKSH SOFTW TEST, P82
   Shull F, 2004, EMPIR SOFTW ENG, V9, P111, DOI 10.1023/B:EMSE.0000013516.80487.33
   Shull F, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P7, DOI 10.1109/ISESE.2002.1166920
   So SS, 2002, SOFTW TEST VERIF REL, V12, P155, DOI 10.1002/stvr.248
   Szyperski Clemens., 1998, Component Software-Beyond Object-Oriented Programming
   Tichy WF, 1998, COMPUTER, V31, P32, DOI 10.1109/2.675631
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   WOJCICKI M, 2006, UNPUB EVALUATING VER
   Wojcicki MargaretA., 2006, P 2006 WORKSHOP PARA, P1
   Wood M, 1997, LECT NOTES COMPUT SC, V1301, P262, DOI 10.1145/267896.267915
   ZAR JH, 1972, J AM STAT ASSOC, V67, P578, DOI 10.2307/2284441
NR 64
TC 3
Z9 3
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2007
VL 12
IS 6
BP 617
EP 645
DI 10.1007/s10664-007-9044-6
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 226MC
UT WOS:000250592200003
DA 2024-07-18
ER

PT J
AU McDonald, J
AF McDonald, J
TI The impact of project planning team experience on software project cost
   estimates
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE project management; project planning; project cost estimation; software
   engineering
AB Data from 135 teams that have participated in a software project planning exercise are analyzed to determine the relationship between team experience and each learn's estimate of total project cost. The analysis shows that cost estimates are dependent upon two kinds of learn experience: (I) the average experience for the members of each team and (2) whether or not any members of the team have similar project experience. It is shown that if no members of a planning team have had similar project experience then the estimate of cost is correlated with average team experience, with teams having greater average team experience producing higher total cost estimates. If at least one member of the planning team has had similiar project experience then there is a weaker relationship between average learn experience and cost, and cost estimates produced by those teams with similar project experience are close to those produced by teams with the greatest average team experience. A qualitative examination of the project plans produced by all teams indicates that the primary reasons that teams with less experience of either type produce lower cost estimates are that they have failed to include sonic tasks that are included by more experienced teams, and that they have estimated shorter task durations than have the more experienced teams.
C1 Monmouth Univ, W Long Branch, Monmouth Jct, NJ USA.
C3 Monmouth University
RP Monmouth Univ, W Long Branch, Monmouth Jct, NJ USA.
EM jamesmc@monmouth.edu
CR [Anonymous], 1994, QUALITATIVE ANAL EXP
   [Anonymous], 2000, Software Cost Estimation with COCOMO II
   Boehm BW., 1981, Software Engineering Economics
   DOANE SM, 1990, HUMAN COMPUTER INTER, V5, P263
   ERICSSON KA, 1993, PSYCHOL REV, V100, P363, DOI 10.1037/0033-295X.100.3.363
   Ericsson KA, 1996, ANNU REV PSYCHOL, V47, P273, DOI 10.1146/annurev.psych.47.1.273
   JONES TC, 1996, APPL SOFTWARE MEASUR
   Jorgensen M, 2002, J SOFTW MAINT EVOL-R, V14, P123, DOI 10.1002/smr.248
   KEMERRER CF, 1987, COMMUNICATIONS ACM, V30
   MCDONALD J, 2000, P 13 C SOFTW ENG ED, P151
   MCDONALD J, 2002, P IASTED SOFTW ENG A, P718
   MCKEITHAN KB, 1991, COGNITIVE PSYCHOL, V13, P307
   Neter J., 1996, Applied linear statistical models, V4, P455
   Park R., 1988, CENTRAL EQUATIONS PR
   Putnam L., 1992, MEASURES EXCELLENCE
   SOLOWAY EB, 1998, KNOWLEDGE PROCESS CO
   Weiser M., 1983, Instructional Journal of Man- Machine Studies, V14, P391
NR 17
TC 4
Z9 4
U1 1
U2 8
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2005
VL 10
IS 2
BP 219
EP 234
DI 10.1007/s10664-004-6192-9
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 918OT
UT WOS:000228558200004
DA 2024-07-18
ER

PT J
AU Succi, G
   Pedrycz, W
   Djokic, S
   Zuliani, P
   Russo, B
AF Succi, G
   Pedrycz, W
   Djokic, S
   Zuliani, P
   Russo, B
TI An empirical exploration of the distributions of the chidamber and
   Kemerer object-oriented metrics suite
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE CK metrics; collinearity; object-orientation; software metrics;
   meta-analysis
ID SOFTWARE; PREDICTION
AB The object-oriented metrics suite proposed by Chidamber and Kemerer (CK) is a measurement approach towards improved object-oriented design and development practices. However, existing studies evidence traces of collinearity between some of the metrics and low ranges of other metrics, two facts which may endanger the validity of models based on the CK suite. As high correlation may be an indicator of collinearity, in this paper, we empirically determine to what extent high correlations and low ranges might be expected among CK metrics.
   To draw as much general conclusions as possible, we extract the CK metrics from a large data set (200 public domain projects) and we apply statistical meta-analysis techniques to strengthen the validity of our results. Homogeneously through the projects, we found a moderate (similar to0.50) to high correlation (>0.80) between some of the metrics and low ranges of other metrics.
   Results of this empirical analysis supply researchers and practitioners with three main advises: a) to avoid the use in prediction systems of CK metrics that have correlation more than 0.80 b) to test for collinearity those metrics that present moderate correlations (between 0.50 and 0.60) c) to avoid the use as response in continuous parametric regression analysis of the metrics presenting low variance. This might therefore suggest that a prediction system may not be based on the whole CK metrics suite, but only on a subset consisting of those metrics that do not present either high correlation or low ranges.
C1 Free Univ Bolzano Bozen, Ctr Appl Software Engn, Bolzano, Italy.
   Univ Alberta, Dept Elect & Comp Engn, Edmonton, AB, Canada.
C3 Free University of Bozen-Bolzano; University of Alberta
RP Free Univ Bolzano Bozen, Ctr Appl Software Engn, Bolzano, Italy.
EM giancarlo.succi@unibz.it; pedrycz@ee.ualberta.ca;
   snezana@ee.ualberta.ca; paolo.zuliani@unibz.it; barbara.russo@unibz.it
RI Succi, Giancarlo/AAZ-2354-2020; Russo, Barbara/L-5311-2013; Russo,
   Barbara/AAA-8850-2019
OI Succi, Giancarlo/0000-0001-8847-0186; Russo,
   Barbara/0000-0003-3737-9264; Russo, Barbara/0000-0003-3737-9264
CR Aron A., 1997, STAT BEHAV SOCIAL SC
   BARNSTON AG, 1994, J CLIMATE, V7, P1513, DOI 10.1175/1520-0442(1994)007<1513:LSSTCP>2.0.CO;2
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Belanger SE, 1997, ECOTOX ENVIRON SAFE, V36, P1, DOI 10.1006/eesa.1996.1487
   BELSLEY D.A., 1991, CONDITION DIAGNOSTIC
   Benedicenti L, 1998, WORLD MULTICONFERENCE ON SYSTEMICS, CYBERNETICS AND INFORMATICS, VOL 1, PROCEEDINGS, P411
   Briand L. C., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P345, DOI 10.1109/ICSE.1999.841025
   Briand LC, 2002, IEEE T SOFTWARE ENG, V28, P706, DOI 10.1109/TSE.2002.1019484
   Briand LC, 2001, IEEE T SOFTWARE ENG, V27, P963, DOI 10.1109/32.965338
   Cartwright M, 2000, IEEE T SOFTWARE ENG, V26, P786, DOI 10.1109/32.879814
   CHIDAMBER SR, 1991, OOPSLA 91 CONFERENCE PROCEEDINGS : OBJECT-ORIENTED PROGRAMMING SYSTEMS, LANGUAGES, AND APPLICATIONS, P197, DOI 10.1145/118014.117970
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Chidamber SR, 1998, IEEE T SOFTWARE ENG, V24, P629, DOI 10.1109/32.707698
   CHURCHER NI, 1995, IEEE T SOFTWARE ENG, V21, P263, DOI 10.1109/32.372153
   Cohen J., 1988, STAT POWER ANAL BEHA
   COOK TD, 1994, META ANAL EXPLANTATI
   Cooper H., 2019, The Handbook of research synthesis
   Daly J., 1996, Empirical Software Engineering, V1, P109, DOI 10.1007/BF00368701
   El Emam K, 2001, J SYST SOFTWARE, V56, P63, DOI 10.1016/S0164-1212(00)00086-8
   ELEMAM K, 1999, NRCERB1062
   Fenton NE, 1999, IEEE T SOFTWARE ENG, V25, P675, DOI 10.1109/32.815326
   HARRISON R, 1998, P 5 S SOFTW METR BET
   HAYES W, 2000, P 6 IEEE INT S SOFTW
   Hedges LV., 2014, STAT METHODS META AN
   HendersonSellers B, 1996, OBJECT ORIENTED SYST, V3, P143
   Hitz M, 1996, IEEE T SOFTWARE ENG, V22, P267, DOI 10.1109/32.491650
   Hu Q, 1997, IEEE T SOFTWARE ENG, V23, P379, DOI 10.1109/32.601078
   Hunter J.E., 1990, METHODS METAANALYSIS
   KENDALL MG, 1949, BIOMETRIKA, V36, P177, DOI 10.1093/biomet/36.1-2.177
   KENDALL MG, 1990, RANK CORRELARION MET
   LI W, 1993, J SYST SOFTWARE, V23, P111, DOI 10.1016/0164-1212(93)90077-B
   Liao Y.-K. C., 1998, Journal of Research on Computing in Education, V30, P341
   LLOYD C.J., 1999, STAT ANAL CATEGORICA
   MILLER J, 2000, P 6 IEEE INT S SOFT
   Misic VB, 1998, J SYST SOFTWARE, V41, P133, DOI 10.1016/S0164-1212(97)10014-0
   Nesi P, 1998, J SYST SOFTWARE, V42, P89, DOI 10.1016/S0164-1212(97)10021-8
   PEARSON K, 1907, DRAPERS COMP RES MEM
   Pickard LM, 1998, INFORM SOFTWARE TECH, V40, P811, DOI 10.1016/S0950-5849(98)00101-3
   RONCHETTI M, 1999, UNPUB IEEE T SOFTW E
   Rosenthal R., 1991, METAANALYTIC PROCEDU
   Rupinski MT, 1996, EDUC PSYCHOL MEAS, V56, P419, DOI 10.1177/0013164496056003004
   TANG MH, 1998, P 6 IEEE INT S SOFTW
   Wood M, 1999, J SYST SOFTWARE, V48, P13, DOI 10.1016/S0164-1212(99)00042-4
NR 43
TC 43
Z9 52
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN
PY 2005
VL 10
IS 1
BP 81
EP 103
DI 10.1023/B:EMSE.0000048324.12188.a2
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 895IY
UT WOS:000226855600004
DA 2024-07-18
ER

PT J
AU Berntzen, M
   Stray, V
   Moe, NB
   Hoda, R
AF Berntzen, Marthe
   Stray, Viktoria
   Moe, Nils Brede
   Hoda, Rashina
TI Responding to change over time: A longitudinal case study on changes in
   coordination mechanisms in large-scale agile
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Large-scale agile; Software development; Coordination; Organizational
   change; Continuous improvement; Longitudinal case study
ID SOFTWARE-DEVELOPMENT; PRODUCT OWNER; KNOWLEDGE; SUCCESS
AB Context Responding to change and continuously improving processes, practices, and products are core to agile software development. It is no different in large-scale agile, where multiple software development teams need to respond both to changes in their external environments and to changes within the organization.
   Objective With this study, we aim to advance knowledge on coordination in large-scale agile by developing a model of the types of organizational changes that influence coordination mechanisms.
   Method We conducted a longitudinal case study in a growing large-scale agile organization, focusing on how external and internal changes impact coordination over time. We collected our data through 62 days of fieldwork across one and a half years. We conducted 37 interviews, observed 118 meetings at all organizational levels, collected supplementary material such as chat logs and presentations, and analyzed the data using thematic analysis.
   Results Our findings demonstrate how external events, such as onboarding new clients, and internal events, such as changes in the team organization, influence coordination mechanisms in the large-scale software development program. We find that external and internal change events lead to the introduction of new coordination mechanisms, or the adjustment of existing ones. Further, we find that continuous scaling requires continuous change and adjustment. Finally, we find that having the right mechanisms in place at the right time strengthens resilience and the ability to cope with change in coordination needs in complex large-scale environments.
   Conclusions Our findings are summarized in an empirically based model that provides a practical approach to analyzing change, aimed at supporting both researchers and practitioners dealing with change in coordination mechanisms in large-scale agile development contexts.
C1 [Berntzen, Marthe; Stray, Viktoria] Univ Oslo, Dept Informat, Gaustadalleen 23B, N-0373 Oslo, Norway.
   [Stray, Viktoria; Moe, Nils Brede] SINTEF Digital, Strindveien 4, N-7645 Trondheim, Norway.
   [Hoda, Rashina] Monash Univ, Fac Informat Technol, Melbourne, Vic 3800, Australia.
C3 University of Oslo; SINTEF; Monash University
RP Berntzen, M (corresponding author), Univ Oslo, Dept Informat, Gaustadalleen 23B, N-0373 Oslo, Norway.
EM marthenb@ifi.uio.no; stray@ifi.uio.no; Nils.B.Moe@sintef.no;
   Rashina.hoda@monash.edu
RI Stray, Viktoria/E-9563-2016
OI Stray, Viktoria/0000-0002-6032-2074; Berntzen,
   Marthe/0000-0003-1455-2562
FU We wish to extend our thanks to Entur and the informants for opening
   their workplace to us. This research would not have been possible
   without their willingness to share their experiences. This research was
   partly supported by the Research Council of Norwa; Research Council of
   Norway through the Transformit project;  [321477]
FX We wish to extend our thanks to Entur and the informants for opening
   their workplace to us. This research would not have been possible
   without their willingness to share their experiences. This research was
   partly supported by the Research Council of Norway through the
   Transformit project, Grant Number 321477.
CR Aldave A, 2019, J SYST SOFTWARE, V157, DOI 10.1016/j.jss.2019.110396
   Allison I, 2007, INFORM SOFTWARE TECH, V49, P668, DOI 10.1016/j.infsof.2007.02.003
   Bass JM, 2015, EMPIR SOFTW ENG, V20, P1525, DOI 10.1007/s10664-014-9322-z
   Batra D, 2010, COMMUN ASSOC INF SYS, V27, P379
   Berntzen M, 2023, IEEE T SOFTWARE ENG, V49, P699, DOI 10.1109/TSE.2022.3160873
   Berntzen M, 2021, LECT NOTES BUS INF P, V419, P140, DOI 10.1007/978-3-030-78098-2_9
   Berntzen M, 2019, LECT NOTES BUS INF P, V355, P121, DOI 10.1007/978-3-030-19034-7_8
   Bick S, 2018, IEEE T SOFTWARE ENG, V44, P932, DOI 10.1109/TSE.2017.2730870
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   Brede N, 2018, IJISPM-INT J INF SYS, V6, P45, DOI 10.12821/ijispm060303
   Carroll N, 2023, J INF TECHNOL-UK, DOI 10.1177/02683962231164428
   Castañer X, 2020, J MANAGE, V46, P965, DOI 10.1177/0149206320901565
   Cataldo M, 2013, IEEE T SOFTWARE ENG, V39, P343, DOI 10.1109/TSE.2012.32
   Crang M., 2007, Doing ethnographies, DOI DOI 10.4135/9781849208949
   de Ven AHV, 2005, ORGAN STUD, V26, P1377, DOI 10.1177/0170840605056907
   Dikert K, 2016, J SYST SOFTWARE, V119, P87, DOI 10.1016/j.jss.2016.06.013
   Dingsoyr T, 2018, EMPIR SOFTW ENG, P1
   Dingsoyr T, 2023, EMPIR SOFTW ENG, V28, DOI 10.1007/s10664-022-10230-6
   Dingsoyr T, 2018, PROJ MANAG J, V49, P64, DOI 10.1177/8756972818798980
   Dingsoyr T, 2014, LECT NOTES COMPUT SC, V8892, P273, DOI 10.1007/978-3-319-13835-0_20
   Dingsoyr T, 2012, J SYST SOFTWARE, V85, P1213, DOI 10.1016/j.jss.2012.02.033
   Edison H, 2022, IEEE T SOFTWARE ENG, V48, P2709, DOI 10.1109/TSE.2021.3069039
   Eisenhardt KM, 2007, ACAD MANAGE J, V50, P25, DOI 10.5465/AMJ.2007.24160888
   Espinosa JA, 2007, J MANAGE INFORM SYST, V24, P135, DOI 10.2753/MIS0742-1222240104
   Fitzgerald B, 2017, J SYST SOFTWARE, V123, P176, DOI 10.1016/j.jss.2015.06.063
   Flyvbjerg B, 2006, QUAL INQ, V12, P219, DOI 10.1177/1077800405284363
   Fowler M., 2001, The Agile Manifesto
   Fuchs C., 2018, P 39 INT C INF SYST
   Glisczinski D, 2018, J TRANSFORM EDUC, V16, P175, DOI 10.1177/1541344618777367
   Gregor S, 2006, MIS QUART, V30, P611
   GUBA EG, 1981, ECTJ-EDUC COMMUN TEC, V29, P75
   Gustavsson T, 2019, P 27 EUR C INF SYST
   Gustavsson T, 2022, IJISPM-INT J INF SYS, V10, P29, DOI 10.12821/ijispm100102
   Hoda R, 2018, IEEE SOFTWARE, V35, P58, DOI 10.1109/MS.2018.290111318
   Hoda R, 2017, PROC INT CONF SOFTW, P141, DOI 10.1109/ICSE.2017.21
   Hussain W, 2022, IEEE T SOFTWARE ENG, V48, P1818, DOI 10.1109/TSE.2020.3038802
   Jarzabkowski PA, 2012, ORGAN SCI, V23, P907, DOI 10.1287/orsc.1110.0693
   Kalenda M, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1954
   Kwan I, 2011, IEEE T SOFTWARE ENG, V37, P307, DOI 10.1109/TSE.2011.29
   Langley A, 1999, ACAD MANAGE REV, V24, P691, DOI 10.2307/259349
   LANGLEY A, 1994, J MANAGE STUD, V31, P619, DOI 10.1111/j.1467-6486.1994.tb00632.x
   Langley A, 2013, ACAD MANAGE J, V56, P1, DOI 10.5465/amj.2013.4001
   Larman C., 2016, Large-Scale Scrum: More with LeSS
   Lin B, 2016, PROCEEDINGS OF THE 19TH ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING COMPANION, P333, DOI 10.1145/2818052.2869117
   Madampe K, 2023, IEEE T SOFTWARE ENG, V49, P1171, DOI 10.1109/TSE.2022.3172925
   MALONE TW, 1994, ACM COMPUT SURV, V26, P87, DOI 10.1145/174666.174668
   March J.G., 1966, Organizations
   Mintzberg H., 1989, MINTZBERG MANAGEMENT, DOI DOI 10.1111/j.1468-0432.2009.00465.x
   Moe NB, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09967-3
   Munir H, 2016, EMPIR SOFTW ENG, V21, P684, DOI 10.1007/s10664-015-9380-x
   Murray E, 2010, BMC MED, V8, DOI 10.1186/1741-7015-8-63
   Niven PR., 2016, Objectives and Key Results: Driving Focus, Alignment, and Engagement with OKRs, DOI [10.1002/9781119255543, DOI 10.1002/9781119255543]
   Okhuysen GA, 2009, ACAD MANAG ANN, V3, P463, DOI 10.1080/19416520903047533
   Paasivaara M, 2018, EMPIR SOFTW ENG, V23, P2550, DOI 10.1007/s10664-017-9555-8
   Pettigrew AM, 1990, ORGAN SCI, V1, P267, DOI 10.1287/orsc.1.3.267
   Ralph P, 2019, IEEE T SOFTWARE ENG, V45, P712, DOI 10.1109/TSE.2018.2796554
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Russo D, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3464938
   Sharp H, 2016, IEEE T SOFTWARE ENG, V42, P786, DOI 10.1109/TSE.2016.2519887
   Sjoberg D. I. K., 2008, Guide to Advanced Empirical Software Engineering, P312
   Spiegler SV, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09949-5
   Stol KJ, 2015, SCI COMPUT PROGRAM, V101, P79, DOI 10.1016/j.scico.2014.11.010
   Stray Viktoria, 2022, 2022 IEEE/ACM 15th International Workshop on Cooperative and Human Aspects of Software Engineering (CHASE)., P11, DOI 10.1145/3528579.3529182
   Stray V, USING OBJECTIVES KEY, DOI [10.36227/techrxiv.16892161.v1, DOI 10.36227/TECHRXIV.16892161.V1]
   Stray V, 2020, J SYST SOFTWARE, V170, DOI 10.1016/j.jss.2020.110717
   Stray V, 2016, J SYST SOFTWARE, V114, P101, DOI 10.1016/j.jss.2016.01.004
   Strode DE, 2016, INFORM SYST FRONT, V18, P23, DOI 10.1007/s10796-015-9574-1
   Strode DE, 2012, J SYST SOFTWARE, V85, P1222, DOI 10.1016/j.jss.2012.02.017
   Thompson J., 2017, Organizations in action
   Uludag Ö, 2022, J SYST SOFTWARE, V194, DOI 10.1016/j.jss.2022.111473
   VANDEVEN AH, 1976, AM SOCIOL REV, V41, P322
   Walsham G., 2002, Qualitative Research in Information Systems
   Walsham G, 2006, EUR J INFORM SYST, V15, P320, DOI 10.1057/palgrave.ejis.3000589
   Wohlin C, 2015, EMPIR SOFTW ENG, V20, P1427, DOI 10.1007/s10664-014-9319-7
NR 74
TC 0
Z9 0
U1 4
U2 7
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2023
VL 28
IS 5
AR 114
DI 10.1007/s10664-023-10349-0
PG 40
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA Q4YC6
UT WOS:001057582600001
OA hybrid
DA 2024-07-18
ER

PT J
AU Mindom, PSN
   Nikanjam, A
   Khomh, F
AF Mindom, Paulina Stevia Nouwou
   Nikanjam, Amin
   Khomh, Foutse
TI A comparison of reinforcement learning frameworks for software testing
   tasks
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software testing; Reinforcement learning; Game testing; Test case
   prioritization
AB Software testing activities scrutinize the artifacts and the behavior of a software product to find possible defects and ensure that the product meets its expected requirements. Although various approaches of software testing have shown to be very promising in revealing defects in software, some of them lack automation or are partly automated which increases the testing time, the manpower needed, and overall software testing costs. Recently, Deep Reinforcement Learning (DRL) has been successfully employed in complex testing tasks such as game testing, regression testing, and test case prioritization to automate the process and provide continuous adaptation. Practitioners can employ DRL by implementing from scratch a DRL algorithm or using a DRL framework. DRL frameworks offer well-maintained implemented state-of-the-art DRL algorithms to facilitate and speed up the development of DRL applications. Developers have widely used these frameworks to solve problems in various domains including software testing. However, to the best of our knowledge, there is no study that empirically evaluates the effectiveness and performance of implemented algorithms in DRL frameworks. Moreover, some guidelines are lacking from the literature that would help practitioners choose one DRL framework over another. In this paper, therefore, we empirically investigate the applications of carefully selected DRL algorithms (based on the characteristics of algorithms and environments) on two important software testing tasks: test case prioritization in the context of Continuous Integration (CI) and game testing. For the game testing task, we conduct experiments on a simple game and use DRL algorithms to explore the game to detect bugs. Results show that some of the selected DRL frameworks such as Tensorforce outperform recent approaches in the literature. To prioritize test cases, we run extensive experiments on a CI environment where DRL algorithms from different frameworks are used to rank the test cases. We find some cases where our DRL configurations outperform the implementation of the baseline. Our results show that the performance difference between implemented algorithms in some cases is considerable, motivating further investigation. Moreover, empirical evaluations on some benchmark problems are recommended for researchers looking to select DRL frameworks, to make sure that DRL algorithms perform as intended.
C1 [Mindom, Paulina Stevia Nouwou; Nikanjam, Amin; Khomh, Foutse] Polytech Montreal, Quebec City, PQ H3T 1J4, Canada.
C3 Universite de Montreal; Polytechnique Montreal
RP Mindom, PSN (corresponding author), Polytech Montreal, Quebec City, PQ H3T 1J4, Canada.
EM paulina-stevia.nouwou-mindom@polymtl.ca; amin.nikanjam@polymtl.ca;
   foutse.khomh@polymtl.ca
OI Nikanjam, Amin/0000-0002-0440-6839
CR Abadi M, 2016, PROCEEDINGS OF OSDI'16: 12TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P265
   Adamo D, 2018, PROCEEDINGS OF THE 9TH ACM SIGSOFT INTERNATIONAL WORKSHOP ON AUTOMATING TEST CASE DESIGN, SELECTION, AND EVALUATION (A-TEST '18), P2, DOI 10.1145/3278186.3278187
   Alshahwan N, 2018, LECT NOTES COMPUT SC, V11036, P3, DOI 10.1007/978-3-319-99241-9_1
   [Anonymous], 2018, Mspacman
   [Anonymous], 2022, Replication Package
   [Anonymous], 2016, Cartpole
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Bagherzadeh M, 2021, IEEE T SOFTWARE ENG, DOI DOI 10.1109/TSE.2021.3070549
   Bahrpeyma F, 2015, COMPUTING, V97, P1209, DOI 10.1007/s00607-015-0455-8
   Bergdahl J, 2020, IEEE CONF COMPU INTE, P600, DOI 10.1109/CoG47356.2020.9231552
   Bertolino A, 2020, PROC INT CONF SOFTW, P1, DOI 10.1145/3377811.3380369
   Böttinger K, 2018, 2018 IEEE SYMPOSIUM ON SECURITY AND PRIVACY WORKSHOPS (SPW 2018), P116, DOI 10.1109/SPW.2018.00026
   Brockman G, 2016, Arxiv, DOI arXiv:1606.01540
   Chen JJ, 2020, IEEE INT CONF AUTOM, P78, DOI 10.1145/3324884.3416570
   Dai H, 2019, Advances in Neural Information Processing Systems, V32
   Dhariwal P., 2017, OpenAI Baselines
   Drozd W, 2018, Arxiv, DOI [arXiv:1807.07490, 10.48550/arXiv.1807.07490]
   Dulac-Arnold G, 2019, Arxiv, DOI [arXiv:1904.12901, DOI 10.1007/S10994-021-05961-4, 10.48550/arXiv.1904.12901]
   Fortunato M, 2019, Arxiv, DOI arXiv:1706.10295
   Fraser Gordon, 2011, PROC 19 ACM SIGSOFT, P416, DOI 10.1145/2025113.2025179
   Fujimoto S, 2018, PR MACH LEARN RES, V80
   Games PA., 1976, J. Educ. Stat., V1, P113, DOI [10.3102/10769986001002113, DOI 10.3102/10769986001002113, 10.2307/1164979, DOI 10.2307/1164979]
   Gu SX, 2016, PR MACH LEARN RES, V48
   Haarnoja T, 2018, PR MACH LEARN RES, V80
   Hamlet R., 1994, Random testing, encyclopedia of software engineering, P970
   Harman M., 2015, 2015 IEEE 8 INT C SO, P1
   Hill A, 2019, STABLE BASELINES
   Hill A., 2018, Stable baselines
   Kim J, 2018, PROCEEDINGS 2018 IEEE/ACM 11TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST), P51, DOI 10.1145/3194718.3194720
   Kingma D. P., 2014, arXiv
   Knuth D. E., 1997, ART COMPUTER PROGRAM, V2
   Koroglu Y, 2018, IEEE INT CONF SOFTW, P105, DOI 10.1109/ICST.2018.00020
   Lillicrap T., 2015, arXiv, DOI 10.48550/arXiv.1509.02971
   LohitSingh, 2013, 2013 IEEE CONFERENCE ON INFORMATION AND COMMUNICATION TECHNOLOGIES (ICT 2013), P292
   Malialis K, 2015, CONNECT SCI, V27, P234, DOI 10.1080/09540091.2015.1031082
   MCGRAW KO, 1992, PSYCHOL BULL, V111, P361, DOI 10.1037/0033-2909.111.2.361
   Mnih V, 2013, Arxiv, DOI [arXiv:1312.5602, 10.48550/arxiv.1312.5602]
   Mnih V, 2016, PR MACH LEARN RES, V48
   Moghadam MH, 2022, SOFTWARE QUAL J, V30, P127, DOI 10.1007/s11219-020-09532-z
   Paszke A, 2019, ADV NEUR IN, V32
   Such FP, 2018, Arxiv, DOI arXiv:1712.06567
   Plappert M, 2016, keras-rl
   Raffin A, 2021, J MACH LEARN RES, V22, P1
   Reichstaller A, 2018, INT CONF SELF SELF, P80, DOI 10.1109/SASO.2018.00019
   Romdhana A, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3502868
   Castro PS, 2018, Arxiv, DOI arXiv:1812.06110
   Santos RES, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3268923
   Schaarschmidt M, 2018, Arxiv, DOI arXiv:1808.07903
   Schulman J, 2017, Arxiv, DOI arXiv:1707.06347
   Schulman J, 2015, PR MACH LEARN RES, V37, P1889
   Soualhia M, 2020, IEEE T CLOUD COMPUT, V8, P553, DOI 10.1109/TCC.2018.2805812
   Spieker H, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P12, DOI 10.1145/3092703.3092709
   Sutton RS, 1998, Introduction to reinforcement learning, V135
   Vuong TAT, 2018, PROCEEDINGS OF THE 9TH ACM SIGSOFT INTERNATIONAL WORKSHOP ON AUTOMATING TEST CASE DESIGN, SELECTION, AND EVALUATION (A-TEST '18), P31, DOI 10.1145/3278186.3278191
   Tufano R, 2022, PROC INT CONF SOFTW, P2303, DOI 10.1145/3510003.3510625
   Wang ZY, 2016, PR MACH LEARN RES, V48
   WELCH BL, 1947, BIOMETRIKA, V34, P28, DOI 10.2307/2332510
   Yang TP, 2019, Arxiv, DOI arXiv:1809.04240
   Yang TP, 2019, AAMAS '19: PROCEEDINGS OF THE 18TH INTERNATIONAL CONFERENCE ON AUTONOMOUS AGENTS AND MULTIAGENT SYSTEMS, P2282
   Zhang CS, 2019, NEURAL PROCESS LETT, V50, P957, DOI 10.1007/s11063-019-09999-3
   Zheng Y, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P784, DOI 10.1109/ASE.2019.00077
   Zhu H, 1997, ACM COMPUT SURV, V29, P366, DOI 10.1145/267580.267590
NR 62
TC 2
Z9 2
U1 5
U2 10
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2023
VL 28
IS 5
AR 111
DI 10.1007/s10664-023-10363-2
PG 76
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA Q0MY8
UT WOS:001054553700001
DA 2024-07-18
ER

PT J
AU da Costa, JAS
   Gheyi, R
   Castor, F
   de Oliveira, PRF
   Ribeiro, M
   Fonseca, B
AF da Costa, Jose Aldo Silva
   Gheyi, Rohit
   Castor, Fernando
   de Oliveira, Pablo Roberto Fernandes
   Ribeiro, Marcio
   Fonseca, Baldoino
TI Seeing confusion through a new lens: on the impact of atoms of confusion
   on novices' code comprehension
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Atoms of confusion; Code comprehension; Eye tracking
AB Code comprehension is crucial for software maintenance and evolution, but it can be hindered by tiny code snippets that can confuse the developers, called atoms of confusion. Previous studies investigated how atoms impact code comprehension through the perspectives of time, accuracy, and opinions of developers. However, we need more studies evaluating other perspectives and the combination of these perspectives on a common ground through experiments. In our study, we evaluate how the eye tracking method can be used to gain new insights when we compare programs obfuscated by the atoms with functionally equivalent clarified versions. We conduct a controlled experiment with 32 novices in Python and measure their time, number of attempts, and visual effort with eye tracking through fixation duration, fixations count, and regressions count. We also conduct interviews and investigate the subjects' difficulties with the programs. In our results, the clarified version of the code with Operator Precedence reduced the time spent in the region that contains the atom to the extent of 38.6%, and the number of answer attempts by 28%. Most subjects found the obfuscated version more difficult to solve than the clarified one, and they reported the order of precedence to be difficult to validate. By analyzing their visual effort, in the obfuscated version, we observed an increase of 47.3% in the horizontal regressions count in the atom region, making its reading more difficult. The additional atoms evaluated revealed other interesting nuances. Based on our findings, we encourage researchers to consider eye tracking combined with other perspectives to evaluate atoms of confusion and educators to favor patterns that do not impact the understanding and visual effort of undergraduates.
C1 [da Costa, Jose Aldo Silva; Gheyi, Rohit; de Oliveira, Pablo Roberto Fernandes] Univ Fed Campina Grande, Campina Grande, Brazil.
   [Castor, Fernando] Univ Utrecht, Utrecht, Netherlands.
   [Ribeiro, Marcio; Fonseca, Baldoino] Univ Fed Alagoas, Maceio, Brazil.
C3 Universidade Federal de Campina Grande; Utrecht University; Universidade
   Federal de Alagoas
RP da Costa, JAS (corresponding author), Univ Fed Campina Grande, Campina Grande, Brazil.
EM josealdo@copin.ufcg.edu.br; rohit@dsc.ufcg.edu.br;
   f.j.castordelimafilho@uu.nl; pablo@copin.ufcg.edu.br; marcio@ic.ufal.br;
   baldoino@ic.ufal.br
RI Fonseca, Baldoino/JUV-2819-2023; Castor, Fernando/V-4011-2018
OI Fonseca, Baldoino/0000-0002-0730-0319; Castor,
   Fernando/0000-0002-6389-3630; Silva da Costa, Jose
   Aldo/0000-0001-8918-1749
CR Basili Victor, 1994, ENCY SOFTW ENG, P528
   Bednarik R., 2006, Proceedings. ETRA 2006. Symposium on Eye Tracking Research and Applications, P125, DOI 10.1145/1117309.1117356
   Binkley D, 2013, EMPIR SOFTW ENG, V18, P219, DOI 10.1007/s10664-012-9201-4
   Box G., 2005, Statistics for Experimenters, VSecond
   Busjahn T, 2015, INT C PROGRAM COMPRE, P255, DOI 10.1109/ICPC.2015.36
   Busjahn Teresa, 2011, P 11 KOL CALL INT C, p1s9
   Castor Fernando, 2018, P CBSOFT WORKSH VIS
   Cedrim D, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P465, DOI 10.1145/3106237.3106259
   Crosby Martha E, 2002, 14 WORKSH PSYCH PROG, P58
   da Costa JAS., 2023, SEEING CONFUSION NEW, DOI [10.5281/zenodo.7650076, DOI 10.5281/ZENODO.7650076]
   de Oliveira Benedito, 2020, SBES '20: Proceedings of the 34th Brazilian Symposium on Software Engineering, P243, DOI 10.1145/3422392.3422437
   Galley N., 2015, Advances in visual perception research, P83
   Gopstein D, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P605, DOI 10.1145/3368089.3409714
   Gopstein D, 2018, IEEE WORK CONF MIN S, P281, DOI 10.1145/3196398.3196432
   Gopstein D, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P129, DOI 10.1145/3106237.3106264
   Jadhav A, 2019, APPL ARTIF INTELL, V33, P913, DOI 10.1080/08839514.2019.1637138
   JUST MA, 1980, PSYCHOL REV, V87, P329, DOI 10.1037/0033-295X.87.4.329
   Kenneth HolmqvistMarcus Nystrom., 2011, Eye Tracking: A Comprehensive Guide to Methods and Measures
   Kleinke K, 2017, J EDUC BEHAV STAT, V42, P371, DOI 10.3102/1076998616687084
   Langhout C, 2021, INT C PROGRAM COMPRE, P25, DOI 10.1109/ICPC52881.2021.00012
   Lawrie D, 2007, EMPIR SOFTW ENG, V12, P359, DOI 10.1007/s10664-006-9032-2
   Malaquias R, 2017, INT C PROGRAM COMPRE, P297, DOI 10.1109/ICPC.2017.41
   Medeiros F, 2019, EMPIR SOFTW ENG, V24, P1693, DOI 10.1007/s10664-018-9666-x
   Melo J, 2017, INT C PROGRAM COMPRE, P34, DOI 10.1109/ICPC.2017.34
   Mendes W, 2021, WORKSH VIS EV MAN SO, P41
   Nyström M, 2010, BEHAV RES METHODS, V42, P188, DOI 10.3758/BRM.42.1.188
   Obaidellah U, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3145904
   Oliveira D, 2020, PROC IEEE INT CONF S, P348, DOI 10.1109/ICSME46990.2020.00041
   Rayner K, 1998, PSYCHOL BULL, V124, P372, DOI 10.1037/0033-2909.124.3.372
   Sadun E, 2015, SWIFT PROGRAMMING LA
   Salvucci DD, 2000, 2000 S EYE TRACKING, P71, DOI [10.1145/355017.355028, DOI 10.1145/355017.355028]
   Schröter I, 2017, INT C PROGRAM COMPRE, P308, DOI 10.1109/ICPC.2017.9
   Schulze S, 2014, ACM SIGPLAN NOTICES, V49, P65, DOI [10.1145/2517208.2517215, 10.1145/2637365.2517215]
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   Sharafi Z., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P27
   Sharafi Z, 2020, EMPIR SOFTW ENG, V25, P3128, DOI 10.1007/s10664-020-09829-4
   Sharafi Z, 2015, ASIA PAC SOFWR ENG, P96, DOI 10.1109/APSEC.2015.53
   Shard B., 2012, P S EYE TRACK RES AP, P381
   Sharif Bonita, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P196, DOI 10.1109/ICPC.2010.41
   Sheskin J.D., 2004, Handbook of Parametric and Nonparametric Statistical Procedures, VThird
   da Costa JAS, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-10002-8
   Stefik A, 2013, ACM T COMPUT EDUC, V13, DOI 10.1145/2534973
   Strauss A, 1998, CITESEER
   Yeh MK-C, 2021, BEHAV INF TECHNOL, V41, P1
NR 44
TC 2
Z9 2
U1 1
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2023
VL 28
IS 4
AR 81
DI 10.1007/s10664-023-10311-0
PG 42
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA G5PU9
UT WOS:000989682200001
PM 37220598
OA Bronze, Green Published
DA 2024-07-18
ER

PT J
AU Rahman, A
   Bose, DB
   Shakya, R
   Pandita, R
AF Rahman, Akond
   Bose, Dibyendu Brinto
   Shakya, Raunak
   Pandita, Rahul
TI <i>Come for syntax, stay for speed, understand defects</i>: an empirical
   study of defects in Julia programs
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Categorization; Defects; Empirical study; Julia; Quality
AB Julia has emerged as a popular programming language to develop scientific software, in part due to its flexible syntax akin to scripting languages while retaining the execution speed of a compiled language. Similar to any programming language, Julia programs are susceptible to defects. However, a systematic characterization of defects in Julia programs remains under-explored. A systematic analysis of defects in Julia programs will act as a starting point for researchers and toolsmiths in building developer tools to improve the quality of Julia programs. To this end, we conduct an empirical study with 742 defects that appear in Julia programs by mining 30,494 commits and 3,038 issue reports collected from 112 open-source Julia projects. From our empirical analysis, we identify 9 defect categories and 7 defect symptoms. We observe certain defect categories to be Julia-specific, e.g., type instability and world age defects. We also survey 52 developers to rank the identified categories based on perceived severity. Based on our empirical analysis, we provide specific recommendations for researchers and toolsmiths.
C1 [Rahman, Akond] Auburn Univ, Auburn, AL 36849 USA.
   [Bose, Dibyendu Brinto] Virginia Tech, Dept Comp Sci, Blacksburg, VA USA.
   [Shakya, Raunak] Energy Domain, Ft Worth, TX USA.
   [Pandita, Rahul] GitHub, San Francisco, CA USA.
C3 Auburn University System; Auburn University; Virginia Polytechnic
   Institute & State University
RP Rahman, A (corresponding author), Auburn Univ, Auburn, AL 36849 USA.
EM akond@auburn.edu; brintodibyendu@gmail.com; rkshakya99@gmail.com;
   rahulpandita@github.com
OI Rahman, Akond/0000-0002-5056-757X
FU U.S. National Science Foundation (NSF) Award [2247141, 2310179]; U.S.
   National Security Agency (NSA) Award [H98230-21-1-0175]
FX We thank the PASER group at Auburn University for their valuable
   feedback. This research was partially funded by the U.S. National
   Science Foundation (NSF) Award # 2247141, Award # 2310179, and the U.S.
   National Security Agency (NSA) Award # H98230-21-1-0175.
CR Agrawal A, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P245, DOI 10.1145/3183519.3183549
   amckay, 2016, BUG FIX MARK CHAIN S
   [Anonymous], 2015, ABELSIQUEIRA
   [Anonymous], 2017, MIKEINNES
   [Anonymous], 2011, P ACM 2011 C COMPUTE, DOI DOI 10.1145/1958824.1958904
   [Anonymous], 2021, JULIALANG
   [Anonymous], 2016, YUYICHAO
   [Anonymous], 2015, RANDYZWITCH
   [Anonymous], 2017, JULIALANG
   [Anonymous], 2021, JULIA
   Antinyan V, 2017, EMPIR SOFTW ENG, V22, P3057, DOI 10.1007/s10664-017-9508-2
   Beizer Boris, 1984, Software System Testing and Quality Assurance
   Belyakova J, 2020, P ACM PROGRAM LANG, V4, DOI 10.1145/3428275
   Berkeley CA, 2022, JULIA PROGRAMMING LA
   Berkeley CA, 2020, PROGRAMMING LANGUAGE
   Berkeley CA, 2017, JULIA JOINS PETAFLOP
   Berkeley CA, 2020, BUG TYPES JULIA WHAT
   Berkeley CA, 2020, WHY JULIA IS SLOWLY
   Bezanson J, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3276490
   Carver JC, 2009, COMPUT SCI ENG, V11, P7, DOI 10.1109/MCSE.2009.30
   Catolino G, 2019, J SYST SOFTWARE, V152, P165, DOI 10.1016/j.jss.2019.03.002
   Chen ZP, 2021, PROC INT CONF SOFTW, P674, DOI 10.1109/ICSE43902.2021.00068
   CHILLAREGE R, 1992, IEEE T SOFTWARE ENG, V18, P943, DOI 10.1109/32.177364
   Churavy VVR, 2019, THESIS MIT
   Cinque M, 2014, PROC INT SYMP SOFTW, P212, DOI 10.1109/ISSRE.2014.30
   Devanbu P, 2016, PROC INT CONF SOFTW, P108, DOI 10.1145/2884781.2884812
   Di Franco A, 2017, IEEE INT CONF AUTOM, P509, DOI 10.1109/ASE.2017.8115662
   Drvi, 2020, FIX IN RES SAMPL
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   eulerkochy, 2020, FIX PAR IN RBTREE
   Friess E, 2019, IEEE T PROF COMMUN, V62, P130, DOI 10.1109/TPC.2019.2911461
   Gagniuc PA., 2017, Markov Chains: From Theory to Implementation and Experimentation, DOI DOI 10.1002/9781119387596
   Garcia J, 2020, PROC INT CONF SOFTW, P385, DOI 10.1145/3377811.3380397
   Gibson J., 2017, APS, pL39
   github, 2023, BLOCK COMM LIN PUSH
   Gmys J, 2020, SWARM EVOL COMPUT, V57, DOI 10.1016/j.swevo.2020.100720
   Hickey Gary, 1996, Nurse Res, V4, P81
   Humbatova N, 2020, PROC INT CONF SOFTW, P1110, DOI 10.1145/3377811.3380395
   Islam MJ, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P510, DOI 10.1145/3338906.3338955
   Januszek T., 2018, SILESIAN J PURE APPL, V8
   jayschwa, 2014, FIX INF REC 32 BIT M
   julia, 2021, JUL COMP
   julia vscode, 2022, JUL VSCOD CSTPARS JL
   JuliaLang/IJuliajl, 2017, PKD BUILD IJ FAIL AR
   JuliaSmoothOptimizers, 2019, JUL LIN JL
   JuliaSmoothOptimizers/CUTEstjl, 2015, SEGM FAULT
   Kitchenham B.A., 2008, PERSONAL OPINION SUR, P63, DOI [10.1007/978-1-84800-044-5_3, DOI 10.1007/978-1-84800-044-5_3]
   Krippendorff K., 1978, RELIABILITY BINARY A
   Krippendorff K., 2018, CONTENT ANAL INTRO I
   Krishna R, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P306, DOI 10.1145/3183519.3183548
   Lattner C, 2004, INT SYM CODE GENER, P75, DOI 10.1109/CGO.2004.1281665
   Lombard M., 2010, PRACTICAL RESOURCES
   Makhshari A, 2021, PROC INT CONF SOFTW, P460, DOI 10.1109/ICSE43902.2021.00051
   Mauny M, 2014, OCAML 2014 THE OCAML
   Merchant FA, 2005, HANDBOOK OF IMAGE AND VIDEO PROCESSING, 2ND EDITION, P1311, DOI 10.1016/B978-012119792-6/50136-4
   MOSEK, 2018, FIX 3 NUMB VERS
   Munaiah N, 2017, EMPIR SOFTW ENG, V22, P3219, DOI 10.1007/s10664-017-9512-6
   Murphy J, 2020, P 7 S HOT TOP SCI SE, DOI [10.1145/3384217.3384218, DOI 10.1145/3384217.3384218]
   Nardelli FZ, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3276483
   Peipei Wang, 2020, MSR '20: Proceedings of the 17th International Conference on Mining Software Repositories, P103, DOI 10.1145/3379597.3387464
   Perkel JM, 2019, NATURE, V572, P141, DOI 10.1038/d41586-019-02310-3
   Perkel JM, 2022, JULIA
   Perkel JM, 2022, JULIA LANGUAGE
   pfitzseb, 2017, US
   Poulding S, 2017, IEEE INT CONF SOFTW, P333, DOI 10.1109/ICST.2017.37
   Rahman A, 2020, PROC INT CONF SOFTW, P752, DOI 10.1145/3377811.3380409
   Rahman A, 2018, PROCEEDINGS OF THE 4TH ACM SIGSOFT INTERNATIONAL WORKSHOP ON SOFTWARE ANALYTICS (SWAN'18), P8, DOI 10.1145/3278142.3278149
   Rahman Akond, 2022, VERIFIABILITY PACKAG
   Raulamo-Jurvanen P, 2019, PROCEEDINGS OF EASE 2019 - EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING, P57, DOI 10.1145/3319008.3319018
   Saldana J., 2016, CODING MANUAL QUALIT, DOI DOI 10.1017/CBO9781107415324.004
   Satyanarayan A, 2017, IEEE T VIS COMPUT GR, V23, P341, DOI 10.1109/TVCG.2016.2599030
   Seaman C, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P149
   simonster, 2014, FIX TYP INST READ AR
   Smith E, 2013, 2013 6TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P89, DOI 10.1109/CHASE.2013.6614738
   Sweeney A, 2013, HEALTH EXPECT, V16, pE89, DOI 10.1111/j.1369-7625.2012.00810.x
   Tan L, 2014, EMPIR SOFTW ENG, V19, P1665, DOI 10.1007/s10664-013-9258-8
   tknopp, 2018, FIX SAMPL DENS FUNCT
   VITTER JS, 1985, ACM T MATH SOFTWARE, V11, P37, DOI 10.1145/3147.3165
   WGS-TB, 2021, UPD CALL FUNCT JL
   WGS-TB, 2021, WGS TB MENT
   Zhang YH, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P129, DOI 10.1145/3213846.3213866
NR 81
TC 0
Z9 0
U1 4
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2023
VL 28
IS 4
AR 93
DI 10.1007/s10664-023-10328-5
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA I9SX0
UT WOS:001006117500001
DA 2024-07-18
ER

PT J
AU Karmakar, A
   Allamanis, M
   Robbes, R
AF Karmakar, Anjan
   Allamanis, Miltiadis
   Robbes, Romain
TI JEMMA: An extensible Java dataset for ML4Code applications
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software engineering; Machine learning; Empirical datasets
ID SOFTWARE
AB Machine Learning for Source Code (ML4Code) is an active research field in which extensive experimentation is needed to discover how to best use source code's richly structured information. With this in mind, we introduce JEMMA: An Extensible Java Dataset for ML4Code Applications, which is a large-scale, diverse, and high-quality dataset targeted at ML4Code. Our goal with JEMMA is to lower the barrier to entry in ML4Code by providing the building blocks to experiment with source code models and tasks. JEMMA comes with a considerable amount of pre-processed information such as metadata, representations (e.g., code tokens, ASTs, graphs), and several properties (e.g., metrics, static analysis results) for 50,000 Java projects from the 50K-C dataset, with over 1.2 million classes and over 8 million methods. JEMMA is also extensible allowing users to add new properties and representations to the dataset, and evaluate tasks on them. Thus, JEMMA becomes a workbench that researchers can use to experiment with novel representations and tasks operating on source code. To demonstrate the utility of the dataset, we also report results from two empirical studies on our data, ultimately showing that significant work lies ahead in the design of context-aware source code models that can reason over a broader network of source code entities in a software project-the very task that JEMMA is designed to help with.
C1 [Karmakar, Anjan] Free Univ Bozen Bolzano, Bolzano, Italy.
   [Allamanis, Miltiadis] Microsoft Res, Cambridge, England.
   [Robbes, Romain] Univ Bordeaux, CNRS, Bordeaux, France.
C3 Free University of Bozen-Bolzano; Microsoft; Centre National de la
   Recherche Scientifique (CNRS); Universite de Bordeaux
RP Karmakar, A (corresponding author), Free Univ Bozen Bolzano, Bolzano, Italy.
EM akarmakar@unibz.it; miltiadis.allamanis@microsoft.com; rrobbes@unibz.it
RI Robbes, Romain/H-3771-2013
OI Karmakar, Anjan/0000-0002-3047-2768
FU Libera Universita di Bolzano within the CRUI-CARE Agreement; Free
   University of Bozen-Bolzano
FX Open access funding provided by Libera Universita di Bolzano within the
   CRUI-CARE Agreement. This work was partially funded by the IDEALS and
   ADVERB projects of the Free University of Bozen-Bolzano. The authors
   have no other competing interests to declare that are relevant to the
   content of this article.
CR Ahmad WU, 2021, 2021 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL-HLT 2021), P2655
   Allamams M, 2019, PROCEEDINGS OF THE 2019 ACM SIGPLAN INTERNATIONAL SYMPOSIUM ON NEW IDEAS, NEW PARADIGMS, AND REFLECTIONS ON PROGRAMMING AND SOFTWARE (ONWARD!' 19), P143, DOI 10.1145/3359591.3359735
   Allamanis M, 2018, Arxiv, DOI arXiv:1711.00740
   Allamanis M, 2020, PROCEEDINGS OF THE 41ST ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '20), P91, DOI 10.1145/3385412.3385997
   Allamanis M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3212695
   Allamanis M, 2013, IEEE WORK CONF MIN S, P207, DOI 10.1109/MSR.2013.6624029
   Alon U., 2018, ARXIV
   Alon U, 2021, Arxiv, DOI arXiv:2006.05205
   Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   Brown TB, 2020, Arxiv, DOI [arXiv:2005.14165, DOI 10.48550/ARXIV.2005.14165]
   Bansal A, 2021, Arxiv, DOI arXiv:2103.11599
   Beery S, 2018, LECT NOTES COMPUT SC, V11220, P472, DOI 10.1007/978-3-030-01270-0_28
   Benelallam Amine, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P344, DOI 10.1109/MSR.2019.00060
   Bodden E, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P241, DOI 10.1145/1985793.1985827
   Calcagno C, 2015, LECT NOTES COMPUT SC, V9058, P3, DOI 10.1007/978-3-319-17524-9_1
   Callaú O, 2015, ACM SIGPLAN NOTICES, V50, P135, DOI 10.1145/2661088.2661091
   Chen Mark, 2021, arXiv, DOI DOI 10.48550/ARXIV.2107.03374
   Ciniselli M, 2021, Arxiv, DOI arXiv:2103.07115
   Clement CB, 2021, arXiv
   Cordy JR, 2011, CONF PROC INT SYMP C, P219, DOI 10.1109/ICPC.2011.26
   De Roover C, 2013, CONF PROC INT SYMP C, P152, DOI 10.1109/ICPC.2013.6613843
   DeFreez D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P423, DOI 10.1145/3236024.3236059
   Dietrich J, 2017, J OBJECT TECHNOL
   Dueñas S, 2018, PROC IEEE ACM INT C, P1, DOI 10.1145/3183440.3183475
   Dyer R, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P422, DOI 10.1109/ICSE.2013.6606588
   Feng ZY, 2020, Arxiv, DOI [arXiv:2002.08155, 10.48550/arXiv.2002.08155]
   Geiger FX, 2018, IEEE WORK CONF MIN S, P30, DOI 10.1145/3196398.3196460
   Godfrey MW, 2005, IEEE T SOFTWARE ENG, V31, P166, DOI 10.1109/TSE.2005.28
   Guo DY, 2021, Arxiv, DOI arXiv:2009.08366
   Gururangan S, 2018, Arxiv, DOI arXiv:1803.02324
   Habib A, 2018, IEEE INT CONF AUTOM, P317, DOI 10.1145/3238147.3238213
   Hellendoorn V.J., 2019, INT C LEARN REPR
   Hellendoorn VJ, 2019, PROC INT CONF SOFTW, P960, DOI 10.1109/ICSE.2019.00101
   Hellendoorn VJ, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P763, DOI 10.1145/3106237.3106290
   Hindle A, 2016, COMMUN ACM, V59, P122, DOI 10.1145/2902362
   Hora A, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1102, DOI 10.1145/3180155.3180212
   Hovemeyer D, 2004, ACM SIGPLAN NOTICES, V39, P92, DOI 10.1145/1052883.1052895
   Husain H, 2020, Arxiv, DOI arXiv:1909.09436
   Iyer S, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P2073
   Kanade A, 2020, PR MACH LEARN RES, V119
   Karampatsis RM, 2020, PROC INT CONF SOFTW, P1073, DOI 10.1145/3377811.3380342
   Karampatsis RM, 2020, IEEE WORK CONF MIN S, P573, DOI 10.1145/3379597.3387491
   Kitaev N, 2020, arXiv
   Lammel R, 2011, LARGE SCALE AST BASE, P1317, DOI [10.1145/1982185.1982471, DOI 10.1145/1982185.1982471]
   LeClair A., 2019, arXiv
   LeClair A, 2019, PROC INT CONF SOFTW, P795, DOI 10.1109/ICSE.2019.00087
   Li Y, 2021, PROC INT CONF SOFTW, P574, DOI 10.1109/ICSE43902.2021.00060
   Li Y, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360588
   Liu F, 2022, Arxiv, DOI arXiv:2201.10705
   Lopes CV, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133908
   Lu S, 2022, Arxiv, DOI arXiv:2203.07722
   Lu S, 2021, Arxiv, DOI arXiv:2102.04664
   Ma YX, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09905-9
   Martins P, 2018, IEEE WORK CONF MIN S, P1, DOI 10.1145/3196398.3196450
   Milojkovic N, 2015, INT C PROGRAM COMPRE, P186, DOI 10.1109/ICPC.2015.29
   Mir AM, 2021, Arxiv, DOI arXiv:2104.04706
   Mou LL, 2016, AAAI CONF ARTIF INTE, P1287
   Nijkamp E, 2022, Arxiv, DOI arXiv:2203.13474
   Palsberg J, 2018, COMPANION PROCEEDINGS FOR THE ISSTA/ECOOP 2018 WORKSHOPS, P100, DOI 10.1145/3236454.3236501
   Parr T., 2013, The Definitive ANTLR 4 Reference
   Pietri Antoine, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P138, DOI 10.1109/MSR.2019.00030
   Pradel M, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3276517
   Prenner JA, 2021, Arxiv, DOI [arXiv:2111.03922, DOI 10.48550/ARXIV.2111.03922]
   Puri Ruchir, 2021, arXiv
   Radford A., 2019, LANGUAGE MODELS ARE
   Raemaekers S, 2013, IEEE WORK CONF MIN S, P221, DOI 10.1109/MSR.2013.6624031
   Raychev V, 2016, ACM SIGPLAN NOTICES, V51, P731, DOI 10.1145/3022671.2984041
   Sajnani H, 2016, PROC INT CONF SOFTW, P1157, DOI 10.1145/2884781.2884877
   Sawant AA, 2017, EMPIR SOFTW ENG, V22, P1348, DOI 10.1007/s10664-016-9444-6
   Schwarz N, 2012, PROC INT CONF SOFTW, P1289, DOI 10.1109/ICSE.2012.6227097
   Spinellis D, 2017, EMPIR SOFTW ENG, V22, P1372, DOI 10.1007/s10664-016-9445-5
   Svajlenko J, 2015, PROC IEEE INT CONF S, P131, DOI 10.1109/ICSM.2015.7332459
   Tay Y, 2020, Arxiv, DOI arXiv:2011.04006
   Tay Y, 2022, Arxiv, DOI arXiv:2009.06732
   Tempero E, 2010, ASIA PAC SOFWR ENG, P336, DOI 10.1109/APSEC.2010.46
   Terra R., 2013, SIGSOFT Softw. Eng. Not., V38, P1, DOI [10.1145/2507288.2507314, DOI 10.1145/2507288.2507314]
   McCoy RT, 2019, Arxiv, DOI arXiv:1902.01007
   Tian FW, 2022, Arxiv, DOI arXiv:2208.00203
   Tufano M, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3340544
   Utture A, 2020, NJR 1 DATASET, DOI 10:5281/zenodo4839913
   Barone AVM, 2017, Arxiv, DOI arXiv:1707.02275
   Vasic M, 2019, Arxiv, DOI arXiv:1904.01720
   Vaswani A, 2017, ADV NEUR IN, V30
   Lin XV, 2018, Arxiv, DOI arXiv:1802.08979
   Wang K, 2019, Arxiv, DOI [arXiv:1905.11445, DOI 10.48550/ARXIV.1905.11445]
   Wang Yanlin, 2020, Technical Report
   Wang Y, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P8696
   Wei JY, 2020, Arxiv, DOI arXiv:2005.02161
   Wolf T, 2020, Arxiv, DOI arXiv:1910.03771
   Wolf T, 2020, PROCEEDINGS OF THE 2020 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING: SYSTEM DEMONSTRATIONS, P38
   Yao ZY, 2018, WEB CONFERENCE 2018: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW2018), P1693, DOI 10.1145/3178876.3186081
   Yin PC, 2018, IEEE WORK CONF MIN S, P476, DOI 10.1145/3196398.3196408
   Yu T, 2019, Arxiv, DOI arXiv:1809.08887
   Zavershynskyi M, 2018, Arxiv, DOI arXiv:1807.03168
   Zhou YQ, 2019, Arxiv, DOI arXiv:1909.03496
NR 95
TC 1
Z9 1
U1 0
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2023
VL 28
IS 2
AR 54
DI 10.1007/s10664-022-10275-7
PG 45
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 9V5IZ
UT WOS:000948427400001
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Pinto, FCD
   Murta, LGP
AF Pinto, Felipe Curty do Rego
   Murta, Leonardo Gresta Paulino
TI On the assignment of commits to releases
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Release; Release mining; Commit assignment; Release analysis
ID RAPID RELEASES
AB Release is a ubiquitous concept in software development, referring to grouping multiple independent changes into a deliverable piece of software. Mining releases can help developers understand the software evolution at coarse grain, identify which features were delivered or bugs were fixed, and pinpoint who contributed on a given release. A typical initial step of release mining consists of identifying which commits compose a given release. We could find two main strategies used in the literature to perform this task: time-based and range-based. Some release mining works recognize that those strategies are subject to misclassifications but do not quantify the impact of such a threat. This paper analyzed 13,419 releases and 1,414,997 commits from 100 relevant open-source projects hosted at GitHub to assess both strategies in terms of precision and recall. We observed that, in general, the range-based strategy has superior results than the time-based strategy. Nevertheless, even when the range-based strategy is in place, some releases still show misclassifications. Thus, our paper also discusses some situations in which each strategy degrades, potentially leading to bias on the mining results if not adequately known and avoided.
C1 [Pinto, Felipe Curty do Rego; Murta, Leonardo Gresta Paulino] Univ Fed Fluminense, Inst Computacao, Niteroi, RJ, Brazil.
C3 Universidade Federal Fluminense
RP Pinto, FCD (corresponding author), Univ Fed Fluminense, Inst Computacao, Niteroi, RJ, Brazil.
EM felipecrp@id.uff.br
OI Curty do Rego Pinto, Felipe/0000-0002-2062-4182
FU CNPq [311955/2020-7]; FAPERJ [E26/201.038/2021]
FX AcknowledgementsThe authors would like to thank CNPq (grant
   311955/2020-7) and FAPERJ (grant E26/201.038/2021) for their financial
   support.
CR Abebe SL, 2016, EMPIR SOFTW ENG, V21, P1107, DOI 10.1007/s10664-015-9377-5
   Adams B, 2018, IEEE SOFTWARE, V35, P22, DOI 10.1109/MS.2018.1661327
   [Anonymous], 2011, P 2011 INT C SOFTWAR, DOI DOI 10.1145/1987875.1987911
   AnsFourtyTwo, 2019, STACK OV
   Beck K., 2000, EXTREME PROGRAMMING
   BenMorel, 2015, STACK OV
   Bird C, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P1, DOI 10.1109/MSR.2009.5069475
   Borges H, 2018, J SYST SOFTWARE, V146, P112, DOI 10.1016/j.jss.2018.09.016
   Chacon S., 2014, Pro Git
   Clark S, 2014, CCS'14: PROCEEDINGS OF THE 21ST ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1256, DOI 10.1145/2660267.2660320
   Curty F, 2018, Arxiv, DOI arXiv:1809.10265
   Dhaliwal T, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P202, DOI 10.1109/ICSM.2012.6405273
   diaeresis>tze Hinrich Schu<spacing, 2008, INTRO INFORM RETRIEV, V39
   Pinto FCD, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P142, DOI 10.1109/SANER50967.2021.00022
   GitHub, 2020, COMP REL GITHUB DOCS
   Hammad M, 2015, INT J COMPUT APPL T, V51, P212, DOI 10.1504/IJCAT.2015.069335
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hinkle D.E., 2003, Journal of Educational Studies, V15, P84
   Israel G.D., 1992, Determining Sample Size
   Kalliamvakou E., 2014, P 11 WORKING C MININ, P92, DOI DOI 10.1145/2597073.2597074
   Khomh F., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P179, DOI 10.1109/MSR.2012.6224279
   Khomh F, 2015, EMPIR SOFTW ENG, V20, P336, DOI 10.1007/s10664-014-9308-x
   Le TDB, 2015, INT C PROGRAM COMPRE, P36, DOI 10.1109/ICPC.2015.13
   Mäntylä MV, 2015, EMPIR SOFTW ENG, V20, P1384, DOI 10.1007/s10664-014-9338-4
   Mäntylä MV, 2013, PROC IEEE INT CONF S, P20, DOI 10.1109/ICSM.2013.13
   Martin, 2018, STACK OV
   Mayer P., 2015, Proceedings of the 19th International Conference on Evaluation and Assessment in Software Engineering, P1
   Moreno L, 2017, IEEE T SOFTWARE ENG, V43, P106, DOI 10.1109/TSE.2016.2591536
   Moreno L, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P484, DOI 10.1145/2635868.2635870
   Nguyen A.T., 2012, P ACM SIGSOFT 20 INT, P1
   Nielsen, 1994, USABILITY ENG
   Pimentel JF, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09961-9
   Pinto F, 2021, IMPACT RAPID RELEASE
   Preston-Werner Tom., 2013, Semantic Versioning 2.0.0
   Romano Jeanine, 2006, ANN M FLOR ASS I RES, V177, P34
   Savrige, 2019, STACK OV
   Souza R, 2015, IEEE SOFTWARE, V32, P88, DOI 10.1109/MS.2015.30
   Souza R, 2014, 2014 28TH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2014), P31, DOI 10.1109/SBES.2014.10
   Sun Y, 2017, INFORM SOFTWARE TECH, V84, P33, DOI 10.1016/j.infsof.2016.11.010
   Wohlin C., 2014, INT C EVALUATION ASS, P1
NR 40
TC 1
Z9 1
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2023
VL 28
IS 2
AR 32
DI 10.1007/s10664-022-10263-x
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 7W6MQ
UT WOS:000913626100001
DA 2024-07-18
ER

PT J
AU Liu, D
   Feng, Y
   Yan, YY
   Xu, BW
AF Liu, Di
   Feng, Yang
   Yan, Yanyan
   Xu, Baowen
TI Towards understanding bugs in Python interpreters
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Bugs; Python interpreter; Empirical software engineering
ID CONCURRENCY BUGS; COMPILER BUGS
AB Python has been widely used to develop large-scale software systems such as distributed systems, cloud computing, artificial intelligence, and Web platforms due to its flexibility and versatility. As a kind of complex software, Python interpreter could also suffer from software bugs and thus fundamentally threaten the quality of all Python program applications. Since the first release of Python, more than 30,000 bugs have been discovered. While modern interpreters often consist of many modules, built-in libraries, extensions, etc, they could reach millions of code lines. The large size and high complexity of interpreters bring substantial challenges to their quality assurance. To characterize the interpreter bugs and provide empirical supports, this paper conducts a large-scale empirical study on the two most popular Python interpreters - CPython and PyPy. We have comprehensively investigated the maintenance log information and collected 30,069 fixed bugs and 20,334 confirmed revisions. We further manually characterized and taxonomized 1200 bugs to investigate their representative symptoms and root causes deeply. Finally, we identified nine findings by comprehensively investigating bug locations, symptoms, root causes, and bug revealing & fixing time. The key findings include (for both interpreters): (1) the Library, object model, and interpreter back-end are the most buggy components; (2) unexpected behavior, crash, and performance are the most common symptoms; (3) incorrect algorithm logic, configuration, and internal call are the most common general root causes; incorrect object design is the most common Python-specific root cause; (4) some test-program triggering bugs are tiny (less than ten lines), and most bug fixes only involve slight modifications. Depending on these findings, we discuss the lessons learned and practical implications that can support the research on interpreters' testing, debugging, and improvements.
C1 [Liu, Di; Feng, Yang; Yan, Yanyan; Xu, Baowen] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Peoples R China.
C3 Nanjing University
RP Feng, Y (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Peoples R China.
EM fengyang@nju.edu.cn
RI Li, Jiawei/JOJ-9277-2023; Xu, Baowen/IXW-4882-2023; liu, di/M-5934-2014
OI Xu, Baowen/0000-0001-7743-1296; liu, di/0000-0003-0539-9279
FU National Natural Science Foundation of China [61932012, 62172209];
   Science, Technology and Innovation Commission of Shenzhen Municipality
   [CJGJZD20200617103001003]; Fundamental Research Funds for the Central
   Universities [2022300295]; Cooperation Fund of Huawei-Nanjing University
   Next Generation Programming Innovation Lab [YBN2019105178SW37]
FX This work was partially supported by the National Natural Science
   Foundation of China (No.61932012, No.62172209), the Science, Technology
   and Innovation Commission of Shenzhen Municipality (No.
   CJGJZD20200617103001003), the Fundamental Research Funds for the Central
   Universities (No. 2022300295), and the Cooperation Fund of
   Huawei-Nanjing University Next Generation Programming Innovation Lab
   (No.YBN2019105178SW37).
CR Acuña R, 2015, 2015 IEEE 8TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING, P114, DOI 10.1109/CLOUD.2015.25
   Atwi H, 2021, IEEE INT WORK C SO, P136, DOI 10.1109/SCAM52516.2021.00025
   Biswas Sumon, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P577, DOI 10.1109/MSR.2019.00086
   Cacho N, 2014, PROC IEEE INT CONF S, P31, DOI 10.1109/ICSME.2014.25
   Calmant T, 2012, P 15 ACM SIGSOFT S C, P35
   Cao H., 2015, PERFORMANCE RES OPTI
   Chen JJ, 2020, ACM COMPUT SURV, V53, DOI 10.1145/3363562
   Chen YT, 2019, PROC INT CONF SOFTW, P1257, DOI 10.1109/ICSE.2019.00127
   Chen YT, 2016, ACM SIGPLAN NOTICES, V51, P85, DOI [10.1145/2980983.2908095, 10.1145/2908080.2908095]
   Chen ZF, 2018, SCI CHINA INFORM SCI, V61, DOI 10.1007/s11432-017-9153-3
   Chen ZF, 2016, PROCEEDINGS 2016 THIRD INTERNATIONAL CONFERENCE ON TRUSTWORTHY SYSTEMS AND THEIR APPLICATIONS (TSA), P54, DOI 10.1109/TSA.2016.19
   Chen ZF, 2014, P INT COMP SOFTW APP, P219, DOI 10.1109/COMPSAC.2014.30
   Cummins C, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P95, DOI 10.1145/3213846.3213848
   Dalcin LD, 2011, ADV WATER RESOUR, V34, P1124, DOI 10.1016/j.advwatres.2011.04.013
   Delgado-Perez P., 2017, P S APPL COMP SAC 17, P1387, DOI [10.1145/3019612.3019828, DOI 10.1145/3019612.3019828]
   Di Franco A, 2017, IEEE INT CONF AUTOM, P509, DOI 10.1109/ASE.2017.8115662
   Forcier J, 2008, Python web development with Django
   Gao Y, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P539, DOI 10.1145/3236024.3236030
   Garcia J, 2020, PROC INT CONF SOFTW, P385, DOI 10.1145/3377811.3380397
   Ghanbari A, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P19, DOI 10.1145/3293882.3330559
   Gharibi G, 2018, IEEE INT CONF AUTOM, P880, DOI 10.1145/3238147.3240484
   Guo P.J., 2009, Proceedings of the 2009 USENIX Annual Technical Conference, P285
   Holler Christian, 2012, P 21 USENIX SEC S US, P445
   Islam MJ, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P510, DOI 10.1145/3338906.3338955
   Jin GL, 2012, ACM SIGPLAN NOTICES, V47, P77, DOI 10.1145/2345156.2254075
   Koroglu Y, 2019, INT WORKSH AUTOMAT, P28, DOI 10.1109/AST.2019.00010
   Koyuncu A, 2020, EMPIR SOFTW ENG, V25, P1980, DOI 10.1007/s10664-019-09780-z
   Le Goues C, 2012, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.2012.6227211
   Le V, 2015, ACM SIGPLAN NOTICES, V50, P386, DOI [10.1145/2814270.2814319, 10.1145/2858965.2814319]
   Le Vu, 2015, P 2015 INT S SOFTW T, P327, DOI DOI 10.1145/2771783.2771785
   Leesatapornwongsa T, 2016, ACM SIGPLAN NOTICES, V51, P517, DOI 10.1145/2954679.2872374
   Leo S, 2010, Proceedings of the International Symposium on High Performance Distributed Computing (HPDC '10), P819, DOI DOI 10.1145/1851476.1851594
   Lidbury C, 2015, ACM SIGPLAN NOTICES, V50, P65, DOI [10.1145/2737924.2737986, 10.1145/2813885.2737986]
   Liu K, 2021, IEEE T SOFTWARE ENG, V47, P165, DOI 10.1109/TSE.2018.2884955
   Livinskii V, 2020, P ACM PROGRAM LANG, V4, DOI 10.1145/3428264
   Lu S, 2008, ACM SIGPLAN NOTICES, V43, P329, DOI 10.1145/1353536.1346323
   Lukasczyk S, 2022, Arxiv, DOI arXiv:2111.05003
   Midtgaard J, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3110259
   MILLER BP, 1990, COMMUN ACM, V33, P32, DOI 10.1145/96267.96279
   Motwani M, 2018, EMPIR SOFTW ENG, V23, P2901, DOI [10.1007/s10664-017-9550-0, 10.1145/3180155.3182533]
   Nagai E, 2014, IPSJ T SYSTEM LSI DE, V7, P91, DOI DOI 10.2197/IPSJTSLDM.7.91
   Orru M, 2015, P 11 INT C PREDICTIV, P1
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Pérez F, 2011, COMPUT SCI ENG, V13, P13, DOI 10.1109/MCSE.2010.119
   Raschka S., 2015, Python Machine Learning: Unlock Deeper Insights Into Machine Learning with this Vital Guide to Cutting-edge Predictive Analytics
   Reynolds John C., 1972, ACM 72, V2, P717, DOI DOI 10.1023/A:1010027404223
   Seaman C, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P149
   Selakovic M, 2016, PROC INT CONF SOFTW, P61, DOI 10.1145/2884781.2884829
   Shen QC, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P968, DOI 10.1145/3468264.3468591
   Srinath K. R., 2017, International Research Journal of Engineering and Technology, V4, P354
   Sun CN, 2016, ACM SIGPLAN NOTICES, V51, P849, DOI 10.1145/3022671.2984038
   Sun Chengnian, 2016, P 25 INT S SOFTW TES, P294
   Thung F., 2012, Proceedings of the 2012 IEEE 23rd International Symposium on Software Reliability Engineering (ISSRE), P271, DOI 10.1109/ISSRE.2012.22
   Tian Y, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P752, DOI 10.1145/3106237.3106300
   Vasilescu B, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P805, DOI 10.1145/2786805.2786850
   Veggalam S, 2016, LECT NOTES COMPUT SC, V9878, P581, DOI 10.1007/978-3-319-45744-4_29
   Le V, 2014, ACM SIGPLAN NOTICES, V49, P216, DOI [10.1145/2666356.2594334, 10.1145/2594291.2594334]
   Wan ZY, 2017, IEEE WORK CONF MIN S, P413, DOI 10.1109/MSR.2017.59
   Wang B, 2015, Soc. Sci. Res, P134
   Wang J, 2017, IEEE INT CONF AUTOM, P520, DOI 10.1109/ASE.2017.8115663
   Widyasari R, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1556, DOI 10.1145/3368089.3417943
   Xia X, 2016, PROC IEEE INT CONF S, P268, DOI 10.1109/ICSME.2016.67
   Xiao GP, 2020, IEEE T RELIAB, V69, P558, DOI 10.1109/TR.2019.2902171
   Yang XJ, 2011, ACM SIGPLAN NOTICES, V46, P283, DOI 10.1145/1993316.1993532
   Ye GX, 2021, PROCEEDINGS OF THE 42ND ACM SIGPLAN INTERNATIONAL CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '21), P435, DOI 10.1145/3453483.3454054
   Zhang C, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P176, DOI 10.1145/3338906.3338917
   Zhang QR, 2017, ACM SIGPLAN NOTICES, V52, P347, DOI [10.1145/3062341.3062379, 10.1145/3140587.3062379]
   Zhang YH, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P129, DOI 10.1145/3213846.3213866
   Zhou HC, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P17, DOI 10.1109/ICSE.2015.130
NR 69
TC 2
Z9 2
U1 3
U2 9
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN
PY 2023
VL 28
IS 1
AR 19
DI 10.1007/s10664-022-10239-x
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 7A9QQ
UT WOS:000898782000001
DA 2024-07-18
ER

PT J
AU Schürhoff, C
   Hanenberg, S
   Gruhn, V
AF Schuerhoff, Christian
   Hanenberg, Stefan
   Gruhn, Volker
TI An empirical study on a single company's cost estimations of 338
   software projects
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software development projects; Cost estimation
ID SYSTEMS; MANAGEMENT; ERROR
AB A recurring statement in the literature is that cost estimations in software projects are problematic, but the evidence for such a statement is often unclear. In this paper, we analyze a project repository consisting of 338 software projects from the German software company adesso where for each project the original estimation is available in addition to the actual and estimated remaining costs at different points in time. The results revealed that there is an underestimation of costs in the repository (12.6%), but this underestimation is not significant: the hypothesis mu(estimatedCosts/averageCosts) = 1 (respectively the hypothesis on the log-transformed ratios mu(log(estimatedCosts/averageCosts)) = 0) could not be rejected. However, we found a significant underestimation in the largest 20% of projects. And finally, we found a strong correlation between the estimated costs after 50% project duration and the final costs.
C1 [Schuerhoff, Christian; Hanenberg, Stefan; Gruhn, Volker] Univ Duisburg Essen, Paluno Ruhr Inst Software Technol, Essen, Germany.
C3 University of Duisburg Essen
RP Hanenberg, S (corresponding author), Univ Duisburg Essen, Paluno Ruhr Inst Software Technol, Essen, Germany.
EM christian.schuerhoff@stud.uni-due.de; stefan.hanenberg@uni-due.de;
   volker.gruhn@uni-due.de
OI Hanenberg, Stefan Udo/0000-0001-5936-2143
CR Addison T., 2002, Proceedings of SAICSIT, P128
   Albrech A., 1979, PROC JOINT SHAREGUID, P83
   [Anonymous], 2000, Software Cost Estimation with COCOMO II
   [Anonymous], 2014, SOFTW PROJ MANAG CHA
   [Anonymous], 2004, Agile and Iterative Development
   Aranda J, 2005, ACM SIGSOFT SOFTWARE, P346, DOI [DOI 10.1145/1095430.1081761, 10.1145/1081706.1081761]
   BERGERON F, 1992, INFORM MANAGE, V22, P239, DOI 10.1016/0378-7206(92)90026-C
   Boehm B, 2000, ANN SOFTW ENG, V10, P177, DOI 10.1023/A:1018991717352
   Boehm B., 1981, Software Engineering Economics, ser. Prentice-Hall advances in computing science and technology series
   Boehm BW, 2017, PROC IEEE ACM INT C, P495, DOI 10.1109/ICSE-C.2017.159
   Britto R, 2014, INT CONF GLOBAL SOFT, P135, DOI 10.1109/ICGSE.2014.11
   Brooks F. P, 1995, MYTHICAL MAN MONTH A
   El Emam K, 2008, IEEE SOFTWARE, V25, P84, DOI 10.1109/MS.2008.107
   Garousi V, 2015, J SYST SOFTWARE, V108, P148, DOI 10.1016/j.jss.2015.06.036
   Glass RL, 2006, COMMUN ACM, V49, P15, DOI 10.1145/1145287.1145301
   Grimstad S, 2008, P 12 INT C EVALUATIO, P129
   Grinistad S, 2007, J SYST SOFTWARE, V80, P1770, DOI 10.1016/j.jss.2007.03.001
   Halkjelsvik T, 2012, PSYCHOL BULL, V138, P238, DOI 10.1037/a0025996
   Hill J., 2000, International Journal of Project Management, V18, P13, DOI 10.1016/S0263-7863(98)00062-3
   JENKINS AM, 1984, INFORM MANAGE, V7, P73, DOI 10.1016/0378-7206(84)90012-0
   Jorgensen M, 2004, EMPIR SOFTW ENG, V9, P297, DOI 10.1023/B:EMSE.0000039881.57613.cb
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Jorgensen M, 2012, INT J PROJ MANAG, V30, P839, DOI 10.1016/j.ijproman.2012.01.007
   Jorgensen M, 2010, SIMULA RESEARCH LABORATORY: BY THINKING CONSTANTLY ABOUT IT, P381, DOI 10.1007/978-3-642-01156-6_26
   Kitchenham B, 2002, J SYST SOFTWARE, V64, P57, DOI 10.1016/S0164-1212(02)00021-3
   Kwak YH, 2012, PROJ MANAG J, V43, P77, DOI 10.1002/pmj.20272
   Langdon WB, 2016, INFORM SOFTWARE TECH, V73, P16, DOI 10.1016/j.infsof.2016.01.003
   Larman C, 2003, COMPUTER, V36, P47, DOI 10.1109/MC.2003.1204375
   LEDERER AL, 1990, MIS QUART, V14, P159, DOI 10.2307/248774
   Lo B., 1997, AUSTRALAS J INF SYST, V5, P11
   Molokken K, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P223, DOI 10.1109/ISESE.2003.1237981
   Molokken K, 2003, PROC PPIG, P4
   Molokken-Ostvold K, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P208, DOI 10.1109/METRIC.2004.1357904
   Phan Dien., 1998, COMPUTERWORLD, V22, P95
   PUTNAM LH, 1978, IEEE T SOFTWARE ENG, V4, P345, DOI 10.1109/TSE.1978.231521
   Sarro F, 2016, PROC INT CONF SOFTW, P619, DOI 10.1145/2884781.2884830
   Sauer C., 2003, COMPUTER WEEKLY
   Shepperd M, 1996, PROC INT CONF SOFTW, P170, DOI 10.1109/ICSE.1996.493413
   Shepperd M, 2012, INFORM SOFTWARE TECH, V54, P820, DOI 10.1016/j.infsof.2011.12.008
   Vicinanza SS, 1991, INFORM SYST RES, V2, P243, DOI 10.1287/isre.2.4.243
   Whitfield D., 2007, 3 ESSU
   Wohlin C., 2000, Experimentation in Software Engineering: An Introduction, V1, DOI DOI 10.1007/978-1-4615-4625-2
   Xiaochun Zhu, 2010, Information Technology Journal, V9, P1104, DOI 10.3923/itj.2010.1104.1114
   Yang D, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P253
   Yourdon E., 1997, DEATH MARCH COMPLETE
NR 45
TC 1
Z9 1
U1 2
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN
PY 2023
VL 28
IS 1
AR 11
DI 10.1007/s10664-022-10245-z
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 6M2UA
UT WOS:000888727700002
DA 2024-07-18
ER

PT J
AU Lee, JC
   Chen, CY
AF Lee, Jung-Chieh
   Chen, Chung-Yang
TI Motivating members' involvement to effectually conduct collaborative
   software process tailoring
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software process tailoring (SPT); Psychological empowerment; Power
   distance; SPT performance; empowerment theory
ID POWER DISTANCE VALUES; PSYCHOLOGICAL EMPOWERMENT; SERVANT LEADERSHIP;
   TEAM EFFECTIVENESS; MODERATING ROLE; MEDIATING ROLE; PERFORMANCE;
   SUPPORT; SUCCESS; IMPACT
AB Contemporary business and software environments are highly competitive and rapidly evolving, resulting in software projects that are highly customized and changeable during development. Therefore, software process tailoring (SPT) is important as software teams conduct SPT to adjust shared development processes and evolve the project to better meet unique and dynamic needs. SPT is a special type of teamwork in which members' active participation and critical input are necessary for understanding and synthesizing various business and technical concerns that may be divergent and conflictual and then jointly identifying an integrated tailoring solution. In this context, this study examines members' decisive and critical involvement in SPT and adopts a motivational perspective to explore how motivation can facilitate SPT performance. Specifically, we use empowerment theory to develop a model to theorize and examine how psychological empowerment (PE) in terms of meaningfulness, autonomy, potency, and impact motivates software teams to efficiently and effectively conduct SPT. The model also considers the power distance (PD) to understand how it functions in team-based critical thinking and decisional processes to energize team members' participative effort. The investigation surveyed 102 software development teams and used partial least squares (PLS) to analyze the data. The results show that PE in terms of the four components has various influences on SPT performance and that PD has nonsignificant moderating effects. This study contributes to the software engineering literature by uncovering the contextual mechanism underlying the relationship between PE and PD in SPT. The limitations and possible extensions of this study are also outlined for future research.
C1 [Lee, Jung-Chieh] Beijing Normal Univ Zhuhai, Int Business & Management Res Ctr, Zhuhai City, Peoples R China.
   [Chen, Chung-Yang] Natl Cent Univ, Dept Informat Management, 300 Zhongda Rd, Taoyuan 32001, Taiwan.
C3 Beijing Normal University; Beijing Normal University Zhuhai; National
   Central University
RP Chen, CY (corresponding author), Natl Cent Univ, Dept Informat Management, 300 Zhongda Rd, Taoyuan 32001, Taiwan.
EM jclee@bnu.edu.cn; cychen@mgt.ncu.edu.tw
OI Chen, Chung-Yang/0000-0003-0146-3202
CR Akgün AE, 2015, INFORM MANAGE-AMSTER, V52, P247, DOI 10.1016/j.im.2014.11.004
   Antonakis J, 2002, LEADERSHIP QUART, V13, P673, DOI 10.1016/S1048-9843(02)00155-8
   ARMSTRONG JS, 1977, J MARKETING RES, V14, P396, DOI 10.2307/3150783
   Baltes S, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10072-8
   Bass JM, 2016, INFORM SOFTWARE TECH, V75, P1, DOI 10.1016/j.infsof.2016.03.001
   BRISLIN RW, 1970, J CROSS CULT PSYCHOL, V1, P185, DOI 10.1177/135910457000100301
   Campanelli AS, 2018, J SYST SOFTWARE, V137, P366, DOI 10.1016/j.jss.2017.12.012
   Campanelli AS, 2015, J SYST SOFTWARE, V110, P85, DOI 10.1016/j.jss.2015.08.035
   Cantrill J.A., 1996, INT J PHARM PRACT, V4, P67, DOI DOI 10.1111/J.2042-7174.1996.TB00844.X
   Cao CC, 2020, FRONT PSYCHOL, V11, DOI 10.3389/fpsyg.2020.550204
   Casey Dympna, 2009, Nurse Res, V16, P40
   Chen C, 2014, INT J HUM RESOUR MAN, V25, P1112, DOI 10.1080/09585192.2013.816861
   Chen CY, 2011, J SYST SOFTWARE, V84, P479, DOI 10.1016/j.jss.2010.10.042
   Chen G, 2007, J APPL PSYCHOL, V92, P331, DOI 10.1037/0021-9010.92.2.331
   Chen JY, 2015, J OPER MANAG, V33-34, P83, DOI 10.1016/j.jom.2014.10.001
   Chin WW, 1998, QUANT METH SER, P295
   Clarke P, 2015, IEEE T SOFTWARE ENG, V41, P1169, DOI 10.1109/TSE.2015.2467388
   Clugston M, 2000, J MANAGE, V26, P5, DOI 10.1016/S0149-2063(99)00034-3
   Cole MS, 2013, J APPL PSYCHOL, V98, P962, DOI 10.1037/a0034269
   Conboy K, 2010, ACM T SOFTW ENG METH, V20, DOI 10.1145/1767751.1767753
   Daniels MA, 2014, J MANAGE, V40, P1202, DOI 10.1177/0149206314527131
   DeWall CN, 2011, J PERS SOC PSYCHOL, V100, P47, DOI 10.1037/a0020932
   Diegmann P, 2017, P 2017 INT RES WORKS, V2
   Drach-Zahavy A, 2004, GROUP DYN-THEOR RES, V8, P235, DOI 10.1037/1089-2699.8.4.235
   Dust SB, 2018, LEADERSHIP QUART, V29, P570, DOI 10.1016/j.leaqua.2018.02.002
   Edmondson AC, 2002, ORGAN SCI, V13, P128, DOI 10.1287/orsc.13.2.128.530
   Eva N, 2019, LEADERSHIP QUART, V30, P111, DOI 10.1016/j.leaqua.2018.07.004
   Faul F, 2009, BEHAV RES METHODS, V41, P1149, DOI 10.3758/BRM.41.4.1149
   Fiske S.T., 2007, SOCIAL PSYCHOL HDB B, P678
   Fitzgerald B, 2003, COMMUN ACM, V46, P64, DOI 10.1145/641205.641206
   García J, 2011, INFORM SOFTWARE TECH, V53, P834, DOI 10.1016/j.infsof.2011.03.002
   Goleman D, 2000, HARVARD BUS REV, V78, P78
   Guinote A, 2017, ANNU REV PSYCHOL, V68, P353, DOI 10.1146/annurev-psych-010416-044153
   Hair J, 2017, IND MANAGE DATA SYST, V117, P442, DOI 10.1108/IMDS-04-2016-0130
   Hair JF, 2012, J ACAD MARKET SCI, V40, P414, DOI 10.1007/s11747-011-0261-6
   Hauff S, 2015, CROSS CULT MANAG, V22, P68, DOI 10.1108/CCM-11-2013-0164
   Hempel PS, 2012, J MANAGE, V38, P475, DOI 10.1177/0149206309342891
   Henseler J, 2016, IND MANAGE DATA SYST, V116, P2, DOI 10.1108/IMDS-09-2015-0382
   Hildreth JAD, 2016, J PERS SOC PSYCHOL, V110, P261, DOI 10.1037/pspi0000045
   Hofstede G., 1991, Cultures and organizations, DOI DOI 10.1016/S0005-7967(02)00184-5
   Holtzhausen N, 2018, LEADERSHIP ORG DEV J, V39, P873, DOI 10.1108/LODJ-05-2018-0193
   Hu J, 2018, J APPL PSYCHOL, V103, P313, DOI 10.1037/apl0000277
   Hu J, 2017, J APPL PSYCHOL, V102, P935, DOI 10.1037/apl0000203
   Hudson VF, 2007, IND ENG, V39, P40
   Hussein A., 2009, J COMP SOCIAL WORK, V4, P106, DOI DOI 10.31265/JCSW.V4I1.48
   JAMES LR, 1984, J APPL PSYCHOL, V69, P85, DOI 10.1037/0021-9010.69.1.85
   Janz BD, 1997, PERS PSYCHOL, V50, P877, DOI 10.1111/j.1744-6570.1997.tb01486.x
   Johnston S. P., 2011, INT GROWTH SMALL MED, P191
   Kalus G., 2013, Proceedings of the 2013 International Conference on Software and System Process, P171
   Kassin S., 2010, Social psychology, V8th
   Ketchen DJ, 2013, LONG RANGE PLANN, V46, P184, DOI 10.1016/j.lrp.2013.01.002
   Kirkman BL, 2004, ACAD MANAGE J, V47, P175, DOI 10.5465/20159571
   Kock N, 2015, INT J E-COLLAB, V11, P1, DOI 10.4018/ijec.2015100101
   Koubaa Y, 2014, ASIA PAC J MARKET LO, V26, P315, DOI 10.1108/APJML-10-2013-0113
   Lee A, 2019, J OCCUP ORGAN PSYCH, V92, P736, DOI 10.1111/joop.12262
   Lee A, 2018, J ORGAN BEHAV, V39, P306, DOI 10.1002/job.2220
   Lee G, 2010, MIS QUART, V34, P87
   Lee JC, 2022, INT J BANK MARK, V40, P631, DOI 10.1108/IJBM-08-2021-0394
   Lee JC, 2021, INFORM SYST J, V31, P120, DOI 10.1111/isj.12303
   Lee JC, 2020, J ENTERP INF MANAG, V33, P1537, DOI 10.1108/JEIM-03-2019-0084
   Lee JC, 2020, J SYST SOFTWARE, V164, DOI 10.1016/j.jss.2020.110545
   Lee JC, 2020, J ENTERP INF MANAG, V33, P502, DOI 10.1108/JEIM-07-2019-0202
   Lee JC, 2019, INFORM DEV, V35, P6, DOI 10.1177/0266666917724194
   Lee JC, 2016, COMPUT HUM BEHAV, V54, P462, DOI 10.1016/j.chb.2015.08.030
   Liang TP, 2010, IEEE T ENG MANAGE, V57, P477, DOI 10.1109/TEM.2009.2033049
   Lin R.R., 2021, INT J MOB COMMUN, DOI DOI 10.1504/IJMC.2023.10042841
   Lindenberg S., 2001, HDB SOCIOLOGICAL THE, P635, DOI DOI 10.1007/0-387-36274-6_29
   Mathieu JE, 2006, J APPL PSYCHOL, V91, P97, DOI 10.1037/0021-9010.91.1.97
   Matsuo M, 2021, ASIA PAC J HUM RESOU, V59, P44, DOI 10.1111/1744-7941.12228
   Maynard MT, 2014, J APPL PSYCHOL, V99, P1244, DOI 10.1037/a0037623
   Maynard MT, 2012, J MANAGE, V38, P1231, DOI 10.1177/0149206312438773
   Memon M. A., 2019, Journal of Applied Structural Equation Modeling, V3, P1, DOI [DOI 10.47263/JASEM.3(1)01, 10.47263/JASEM.3, DOI 10.47263/JASEM.3]
   NEDERHOF AJ, 1985, EUR J SOC PSYCHOL, V15, P263, DOI 10.1002/ejsp.2420150303
   Nissan T, 2015, PERS SOC PSYCHOL B, V41, P1425, DOI 10.1177/0146167215598748
   Ozyilmaz A, 2018, J OCCUP ORGAN PSYCH, V91, P181, DOI 10.1111/joop.12189
   Podsakoff PM, 2003, J APPL PSYCHOL, V88, P879, DOI 10.1037/0021-9010.88.5.879
   Ralph P, 2019, IEEE T SOFTWARE ENG, V45, P712, DOI 10.1109/TSE.2018.2796554
   Rao AN, 2016, CROSS CULT STRATEG M, V23, P257, DOI 10.1108/CCSM-03-2014-0035
   Ringle CM., 2015, Smart PLS
   Robinson SL, 1996, ADMIN SCI QUART, V41, P574, DOI 10.2307/2393868
   Romero HL, 2015, INFORM SOFTWARE TECH, V63, P31, DOI 10.1016/j.infsof.2015.03.004
   Rousseau DM, 2018, J ORGAN BEHAV, V39, P1081, DOI 10.1002/job.2284
   Russo D, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3464938
   Russo D, 2021, ACM COMPUT SURV, V54, DOI 10.1145/3447580
   Sawyer S, 2001, INFORM SYST J, V11, P155, DOI 10.1046/j.1365-2575.2001.00100.x
   Schneider B, 2003, J APPL PSYCHOL, V88, P836, DOI 10.1037/0021-9010.88.5.836
   Seibert SE, 2011, J APPL PSYCHOL, V96, P981, DOI 10.1037/a0022676
   Singh M, 2012, J PERS PSYCHOL, V11, P127, DOI 10.1027/1866-5888/a000065
   Söllner M, 2018, J INF TECHNOL-UK, V33, P233, DOI 10.1057/s41265-017-0046-6
   Spreitzer G. M., 2008, Taking Stock: A Review of More Than Twenty Years of Research on Empowerment at Work, V1, P54
   Spreitzer GM, 1996, ACAD MANAGE J, V39, P483, DOI 10.5465/256789
   Srivastava SC, 2015, INFORM SYST J, V25, P355, DOI 10.1111/isj.12067
   Taras V, 2010, J APPL PSYCHOL, V95, P405, DOI 10.1037/a0018938
   To ML, 2015, HUM RELAT, V68, P1601, DOI 10.1177/0018726714562235
   Tripp JF, 2018, J COMPUT INFORM SYST, V58, P170, DOI 10.1080/08874417.2016.1220240
   Tröster C, 2014, ORGAN BEHAV HUM DEC, V124, P245, DOI 10.1016/j.obhdp.2014.04.003
   Tushman ML, 1996, CALIF MANAGE REV, V38, P8, DOI 10.2307/41165852
   van Dierendonck D, 2014, LEADERSHIP QUART, V25, P544, DOI 10.1016/j.leaqua.2013.11.014
   van Dierendonck D, 2011, J MANAGE, V37, P1228, DOI 10.1177/0149206310380462
   von Krogh G, 2012, MIS QUART, V36, P649
   Xu P, 2007, J MANAGE INFORM SYST, V24, P293, DOI [10.2753/MIS0742-1222240211, 10.2753/MIS0742-I22224021I]
   Xu P, 2008, J MANAGE INFORM SYST, V25, P277, DOI 10.2753/MIS0742-1222250308
   Yang JX, 2007, J APPL PSYCHOL, V92, P681, DOI 10.1037/0021-9010.92.3.681
   Yuan FR, 2015, J ORGAN BEHAV, V36, P990, DOI 10.1002/job.2022
   Zhang AY, 2014, J ORGAN BEHAV, V35, P809, DOI 10.1002/job.1929
NR 105
TC 3
Z9 3
U1 3
U2 10
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2022
VL 27
IS 7
AR 183
DI 10.1007/s10664-022-10225-3
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4X1CH
UT WOS:000860587600002
PM 36187154
OA Bronze, Green Published
DA 2024-07-18
ER

PT J
AU Tsay, J
   Braz, A
   Hirzel, M
   Shinnar, A
   Mummert, T
AF Tsay, Jason
   Braz, Alan
   Hirzel, Martin
   Shinnar, Avraham
   Mummert, Todd
TI Extracting enhanced artificial intelligence model metadata from software
   repositories
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Artificial intelligence; Machine learning; Mining software repositories;
   Model mining; Model metadata; Model catalog; Metadata extraction
AB While artificial intelligence (AI) models have improved at understanding large-scale data, understanding AI models themselves at any scale is difficult. For example, even two models that implement the same network architecture may differ in frameworks, datasets, or even domains. Furthermore, attempting to use either model often requires much manual effort to understand it. As software engineering and AI development share many of the same languages and tools, techniques in mining software repositories should enable more scalable insights into AI models and AI development. However, much of the relevant metadata around models are not easily extractable. This paper (an extension of our MSR 2020 paper) presents a library called AIMMX for AI Model Metadata eXtraction from software repositories into enhanced metadata that conforms to a flexible metadata schema. We evaluated AIMMX against 7,998 open-source models from three sources: model zoos, arXiv AI papers, and state-of-the-art AI papers. We also explored how AIMMX can enable studies and tools to advance engineering support for AI development. As preliminary examples, we present an exploratory analysis for data and method reproducibility over the models in the evaluation dataset and a catalog tool for discovering and managing models. We also demonstrate the flexibility of extracted metadata by using the evaluation dataset in an existing natural language processing (NLP) analysis platform to identify trends in the dataset. Overall, we hope AIMMX fosters research towards better AI development.
C1 [Tsay, Jason; Hirzel, Martin; Shinnar, Avraham; Mummert, Todd] IBM Res, Yorktown Hts, NY 10598 USA.
   [Braz, Alan] IBM Res Brazil, Sao Paulo, Brazil.
C3 International Business Machines (IBM); Getulio Vargas Foundation
RP Tsay, J (corresponding author), IBM Res, Yorktown Hts, NY 10598 USA.
EM jason.tsay@ibm.com; alanbraz@br.ibm.com; hirzel@us.ibm.com;
   shinnar@us.ibm.com; mummert@us.ibm.com
CR Ajv, 2018, AJV AN JSON SCH VAL
   Amershi S, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P291, DOI 10.1109/ICSE-SEIP.2019.00042
   [Anonymous], 2017, P AAAI C ARTIFICIAL
   Apache, 2019, AP COUCHDB
   Archive G, 2021, GH ARCH
   arXiv, 1991, ARXIV
   arXiv, 2018, ARXIV
   Augustsson L, 1999, ACM SIGPLAN NOTICES, V34, P239, DOI 10.1145/291251.289451
   Bangash Abdul Ali, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P260, DOI 10.1109/MSR.2019.00052
   Baudart G., 2021, Advances in Neural Information Processing Systems (NeurIPS)
   Ben Braiek H, 2018, IEEE WORK CONF MIN S, P353, DOI 10.1145/3196398.3196445
   Breck Eric, 2019, MLSys
   Chelba C, 2014, Arxiv, DOI arXiv:1312.3005
   Code PW, 2020, PAPERS CODE LATEST M
   Conneau A, 2017, 15TH CONFERENCE OF THE EUROPEAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (EACL 2017), VOL 1: LONG PAPERS, P1107
   Dabbish L, 2012, P ACM 2012 C COMP SU, P1277, DOI [10.1145/2145204.2145396, DOI 10.1145/2145204.2145396]
   Devlin J, 2019, Arxiv, DOI arXiv:1810.04805
   GitHub, 2016, GITHUB API V3 GITHUB
   GitHub, 2020, WORLDS LEAD SOFTW DE
   Gonzalez D, 2020, IEEE WORK CONF MIN S, P431, DOI 10.1145/3379597.3387473
   Gousios G, 2013, IEEE WORK CONF MIN S, P233, DOI 10.1109/MSR.2013.6624034
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Guazzelli A, 2009, R J, V1, P60
   Gundersen OE, 2018, AAAI CONF ARTIF INTE, P1644
   He Kaiming, 2016, P INT C COMP VIS PAT, DOI 10.1109/CVPR.2016.90
   Hill C, 2016, S VIS LANG HUM CEN C, P162, DOI 10.1109/VLHCC.2016.7739680
   Hummer W, 2019, INT CONF CLOUD ENG, P113, DOI 10.1109/IC2E.2019.00025
   IBM, 2020, WATS DISC PROD PAG
   Internet Engineering Task Force, 2018, JSON SCHEM SPEC
   Smith MJ, 2020, Arxiv, DOI arXiv:1905.08942
   Kalliamvakou E., 2014, P 11 WORKING C MININ, P92, DOI DOI 10.1145/2597073.2597074
   Kim M, 2016, PROC INT CONF SOFTW, P96, DOI 10.1145/2884781.2884783
   Lucene A, 2018, US
   Ma YZ, 2018, IEEE WORK CONF MIN S, P414, DOI 10.1145/3196398.3196446
   Menzies T, 2013, IEEE SOFTWARE, V30, P31, DOI 10.1109/MS.2013.86
   Miao H, 2016, Arxiv, DOI arXiv:1611.06224
   Miao Hui, 2017, WORKSHOP DATA MANAGE, V6, P1, DOI [10.1145/3076246.3076252, DOI 10.1145/3076246.3076252]
   MLFlow, 2019, MLFLOW A PLATF MACH
   ONNX, 2017, ONNX
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   Paszke A, 2019, ADV NEUR IN, V32
   Pezoa F, 2016, PROCEEDINGS OF THE 25TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'16), P263, DOI 10.1145/2872427.2883029
   Pimentel Joao Felipe, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P507, DOI 10.1109/MSR.2019.00077
   Pivarski J, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P579, DOI 10.1145/2939672.2939731
   Publio G C, 2018, REPR MACH LEARN WORK
   Rak-amnouykit I, 2021, ICLR WORKSHOP SECURI
   Rodríguez C, 2016, LECT NOTES COMPUT SC, V9671, P21, DOI 10.1007/978-3-319-38791-8_2
   Ronneberger O, 2015, LECT NOTES COMPUT SC, V9351, P234, DOI 10.1007/978-3-319-24574-4_28
   Sculley D, 2015, ADV NEUR IN, V28
   Sethi A, 2018, AAAI CONF ARTIF INTE, P7339
   Shah N, 2019, ARXIV
   Shaikh S., 2017, An end-to-end machine learning pipeline that ensures fairness policies
   Trainer EH, 2015, PROCEEDINGS OF THE 2015 ACM INTERNATIONAL CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING (CSCW'15), P417, DOI 10.1145/2675133.2675172
   Tramèr F, 2016, PROCEEDINGS OF THE 25TH USENIX SECURITY SYMPOSIUM, P601
   Tsay J, 2018, C SYST MACH LEARN SY
   Tsay J, 2020, IEEE WORK CONF MIN S, P81, DOI 10.1145/3379597.3387448
   Vanschoren Joaquin, 2013, SIGKDD Explorations, V15, P49, DOI DOI 10.1145/2641190.2641198
   Vartak M., 2016, P WORKSHOP HUMAN IN, P1, DOI [10.1145/2939502.2939516, DOI 10.1145/2939502.2939516]
   Vaswani A, 2017, ADV NEUR IN, V30
   Vaziri M, 2017, PROCEEDINGS OF THE 2017 ACM SIGPLAN INTERNATIONAL SYMPOSIUM ON NEW IDEAS, NEW PARADIGMS, AND REFLECTIONS ON PROGRAMMING AND SOFTWARE (ONWARD!'17), P44, DOI 10.1145/3133850.3133864
   Wan ZY, 2021, IEEE T SOFTWARE ENG, V47, P1857, DOI 10.1109/TSE.2019.2937083
   Witten IH, 2011, MOR KAUF D, P1
NR 62
TC 0
Z9 0
U1 3
U2 9
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2022
VL 27
IS 7
AR 176
DI 10.1007/s10664-022-10206-6
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4V4SY
UT WOS:000859469500013
DA 2024-07-18
ER

PT J
AU Muse, BA
   Nagy, C
   Cleve, A
   Khomh, F
   Antoniol, G
AF Muse, Biruk Asmare
   Nagy, Csaba
   Cleve, Anthony
   Khomh, Foutse
   Antoniol, Giuliano
TI FIXME: synchronize with database! An empirical study of data access
   self-admitted technical debt
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Data-intensive systems; Database access; Technical debt; Self-admitted
   technical debt
ID CODE SMELLS; IDENTIFICATION; MANAGEMENT
AB Developers sometimes choose design and implementation shortcuts due to the pressure from tight release schedules. However, shortcuts introduce technical debt that increases as the software evolves. The debt needs to be repaid as fast as possible to minimize its impact on software development and software quality. Sometimes, technical debt is admitted by developers in comments and commit messages. Such debt is known as self-admitted technical debt (SATD). In data-intensive systems, where data manipulation is a critical functionality, the presence of SATD in the data access logic could seriously harm performance and maintainability. Understanding the composition and distribution of the SATDs across software systems and their evolution could provide insights into managing technical debt efficiently. We present a large-scale empirical study on the prevalence, composition, and evolution of SATD in data-intensive systems. We analyzed 83 open-source systems relying on relational databases as well as 19 systems relying on NoSQL databases. We detected SATD in source code comments obtained from different snapshots of the subject systems. To understand the evolution dynamics of SATDs, we conducted a survival analysis. Next, we performed a manual analysis of 361 sample data-access SATDs, investigating the composition of data-access SATDs and the reasons behind their introduction and removal. We identified 15 new SATD categories, out of which 11 are specific to database access operations. We found that most of the data-access SATDs are introduced in the later stages of change history rather than at the beginning. We also observed that bug fixing and refactoring are the main reasons behind the introduction of data-access SATDs.
C1 [Muse, Biruk Asmare; Khomh, Foutse; Antoniol, Giuliano] Polytech Montreal, Montreal, PQ, Canada.
   [Nagy, Csaba] Univ Svizzera Italiana, Software Inst, Lugano, Switzerland.
   [Cleve, Anthony] Univ Namur, Namur Digital Inst, Namur, Belgium.
C3 Universite de Montreal; Polytechnique Montreal; Universita della
   Svizzera Italiana; University of Namur
RP Muse, BA (corresponding author), Polytech Montreal, Montreal, PQ, Canada.
EM biruk-asmare.muse@polymtl.ca; csaba.nagy@usi.ch;
   anthony.cleve@unamur.be; foutse.khomh@polymtl.ca; antoniol@ieee.org
RI Nagy, Csaba/B-7109-2014
FU Natural Sciences and Engineering Research Council of Canada (NSERC);
   Fonds de Recherche du Quebec (FRQ); Swiss National Science Foundation
   (SNF); Fonds de la Recherche Scientifique (F.R.S.-FNRS) project
   "INSTINCT" [190113]; F.R.S.-FNRS; FWO EOS project SECO-ASSIST [30446992]
FX This workss is partly funded by the Natural Sciences and Engineering
   Research Council of Canada (NSERC) and the Fonds de Recherche du Quebec
   (FRQ), the Swiss National Science Foundation (SNF) and the Fonds de la
   Recherche Scientifique (F.R.S.-FNRS) project "INSTINCT" (190113), and
   the F.R.S.-FNRS and FWO EOS project SECO-ASSIST (30446992).
CR Al-Barak M, 2016, INT WORKSH MANAG TEC, P17, DOI 10.1109/MTD.2016.9
   Albarak M, 2018, 2018 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT), P31, DOI 10.1145/3194164.3194170
   Alfayez R, 2020, 2020 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT, TECHDEBT, P1, DOI 10.1145/3387906.3388630
   Alves Nicolli S. R., 2014, 2014 Sixth International Workshop on Managing Technical Debt. Proceedings, P1, DOI 10.1109/MTD.2014.9
   Alves NSR, 2016, INFORM SOFTWARE TECH, V70, P100, DOI 10.1016/j.infsof.2015.10.008
   Aniche M, 2018, EMPIR SOFTW ENG, V23, P2121, DOI 10.1007/s10664-017-9540-2
   Asmare MB, 2020, IEEE WORK CONF MIN S, P327, DOI 10.1145/3379597.3387467
   Baekkwan Park, 2021, Next Generation Information Processing System. Proceedings of ICCET 2020. Advances in Intelligent Systems and Computing (AISC 1162), P259, DOI 10.1007/978-981-15-4851-2_28
   Bavota G, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P315, DOI [10.1109/MSR.2016.040, 10.1145/2901739.2901742]
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Chang  J., 2009, ADV NEURAL INFORM PR, P288, DOI DOI 10.5555/2984093.2984126
   Cleve A, 2010, COMPUTER, V43, P110, DOI 10.1109/MC.2010.227
   Cunningham W., 1993, OOPS Messenger, V4, P29
   Farias MAD, 2017, LECT NOTES BUS INF P, V291, P284, DOI 10.1007/978-3-319-62386-3_14
   Farias MAD, 2015, 2015 IEEE 7TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD) PROCEEDINGS, P25, DOI 10.1109/MTD.2015.7332621
   Foidl H, 2019, EUROMICRO CONF PROC, P338, DOI 10.1109/SEAA.2019.00058
   GitHub Inc, 2019, SEARCH API
   Gokhale M, 2008, COMPUTER, V41, P60, DOI 10.1109/MC.2008.125
   Huang Q, 2018, EMPIR SOFTW ENG, V23, P418, DOI 10.1007/s10664-017-9522-4
   Hummel O, 2018, EUROMICRO CONF PROC, P362, DOI 10.1109/SEAA.2018.00066
   Johannes D, 2019, SOFTWARE QUAL J, V27, P1271, DOI 10.1007/s11219-019-09442-9
   Kamei E.d.S., 2016, QUASOQ TDA APSEC, P68
   KAPLAN EL, 1958, J AM STAT ASSOC, V53, P457, DOI 10.2307/2281868
   Kuutila M, 2020, INFORM SOFTWARE TECH, V121, DOI 10.1016/j.infsof.2020.106257
   Li ZY, 2015, J SYST SOFTWARE, V101, P193, DOI 10.1016/j.jss.2014.12.027
   Lim E, 2012, IEEE SOFTWARE, V29, P22, DOI 10.1109/MS.2012.130
   Lin DY, 2009, IWPSE-EVOL 09: ERCIM WORKSHOP ON SOFTWARE EVOLUTION (EVOL) AND INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION (IWPSE), P31
   Liu ZX, 2018, PROC IEEE ACM INT C, P9, DOI 10.1145/3183440.3183478
   Maipradit R, 2020, EMPIR SOFTW ENG, V25, P3770, DOI 10.1007/s10664-020-09854-3
   Maldonado ED, 2017, PROC IEEE INT CONF S, P238, DOI 10.1109/ICSME.2017.8
   Maldonado ED, 2017, IEEE T SOFTWARE ENG, V43, P1044, DOI 10.1109/TSE.2017.2654244
   Menzies T., 2020, ARXIV 200211049
   Meurice L, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2016), P262, DOI 10.1109/QRS.2016.38
   Miller RupertG., 2011, Survival analysis
   Muse BA, 2022, REPLICATION PACKAGE, DOI [10.5281/zenodo.5825671, DOI 10.5281/ZENODO.5825671]
   Nagy C, 2018, PROC IEEE ACM INT C, P93, DOI 10.1145/3183440.3183496
   Papadimitriou CH, 2000, J COMPUT SYST SCI, V61, P217, DOI 10.1006/jcss.2000.1711
   Potdar A, 2014, PROC IEEE INT CONF S, P91, DOI 10.1109/ICSME.2014.31
   Ramasubbu N, 2016, MANAGE SCI, V62, P1487, DOI 10.1287/mnsc.2015.2196
   Rios N, 2018, INFORM SOFTWARE TECH, V102, P117, DOI 10.1016/j.infsof.2018.05.010
   Röder M, 2015, WSDM'15: PROCEEDINGS OF THE EIGHTH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING, P399, DOI 10.1145/2684822.2685324
   Sadalage PJ, 2012, NOSQL DISTILLED BRIE
   Scherzinger S, 2013, P 14 INT S DAT PROGR
   Scherzinger S, 2020, LECT NOTES COMPUT SC, V12400, P441, DOI 10.1007/978-3-030-62522-1_33
   Sierra G, 2019, J SYST SOFTWARE, V152, P70, DOI 10.1016/j.jss.2019.02.056
   Spadini D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P908, DOI 10.1145/3236024.3264598
   Stonebraker Michael, 2017, New England Database Day, P1
   Tufano M, 2017, IEEE T SOFTWARE ENG, V43, P1063, DOI 10.1109/TSE.2017.2653105
   Tufano M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P403, DOI 10.1109/ICSE.2015.59
   Vassiliadis P, 2021, 37 IEEE INT C DATA E, P1
   Weber Jens H., 2014, 2014 Sixth International Workshop on Managing Technical Debt. Proceedings, P43, DOI 10.1109/MTD.2014.17
   Wehaibi S, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P179, DOI 10.1109/SANER.2016.72
   Xavier L, 2020, IEEE WORK CONF MIN S, P137, DOI 10.1145/3379597.3387459
   Yan M, 2019, IEEE T SOFTWARE ENG, V45, P1211, DOI 10.1109/TSE.2018.2831232
   Zampetti F, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P355, DOI [10.1109/SANER48275.2020.9054868, 10.1109/saner48275.2020.9054868]
   Zampetti F, 2018, IEEE WORK CONF MIN S, P526, DOI 10.1145/3196398.3196423
   Zampetti F, 2017, PROC IEEE INT CONF S, P216, DOI 10.1109/ICSME.2017.44
   Zhao WZ, 2015, BMC BIOINFORMATICS, V16, DOI 10.1186/1471-2105-16-S13-S8
NR 58
TC 3
Z9 3
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2022
VL 27
IS 6
AR 130
DI 10.1007/s10664-022-10119-4
PG 42
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 2T3AL
UT WOS:000822348600003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Sánchez, AB
   Delgado-Pérez, P
   Medina-Bulo, I
   Segura, S
AF Sanchez, Ana B.
   Delgado-Perez, Pedro
   Medina-Bulo, Inmaculada
   Segura, Sergio
TI Mutation testing in the wild: findings from GitHub
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Mutation testing; Mutation tools; Data mining; GitHub
ID JAVA; TOOL; INDUSTRY; CODE
AB Mutation testing exploits artificial faults to measure the adequacy of test suites and guide their improvement. It has become an extremely popular testing technique as evidenced by the vast literature, numerous tools, and research events on the topic. Previous survey papers have successfully compiled the state of research, its evolution, problems, and challenges. However, the use of mutation testing in practice is still largely unexplored. In this paper, we report the results of a thorough study on the use of mutation testing in GitHub projects. Specifically, we first performed a search for mutation testing tools, 127 in total, and we automatically searched the GitHub repositories including evidence of their use. Then, we focused on the top ten most widely used tools, based on the previous results, and manually revised and classified over 3.5K GitHub active repositories importing them. Among other findings, we observed a recent upturn in interest and activity, with Infection (PHP), PIT (Java) and Humbug (PHP) being the most widely used mutation tools in recent years. The predominant use of mutation testing is development, followed by teaching and learning, and research projects, although with significant differences among mutation tools found in the literature-less adopted and largely used in teaching and research-and those found in GitHub only-more popular and more widely used in development. Our work provides a new and encouraging perspective on the state of practice of mutation testing.
C1 [Sanchez, Ana B.; Segura, Sergio] Univ Seville, I3US Res Inst, Score Lab, Seville, Spain.
   [Delgado-Perez, Pedro; Medina-Bulo, Inmaculada] Univ Cadiz, Escuela Super Ingn, Cadiz, Spain.
C3 University of Sevilla; Universidad de Cadiz
RP Sánchez, AB (corresponding author), Univ Seville, I3US Res Inst, Score Lab, Seville, Spain.
EM anabsanchez@us.es; pedro.delgado@uca.es; inmaculada.medina@uca.es;
   sergiosegura@us.es
RI Jerez, Ana Belén Sánchez/R-4279-2017; Delgado-Pérez, Pedro/N-4289-2018;
   Medina-Bulo, Inmaculada/L-5523-2014
OI Jerez, Ana Belén Sánchez/0000-0003-1473-0955; Delgado-Pérez,
   Pedro/0000-0003-1568-9288; Medina-Bulo, Inmaculada/0000-0002-7543-2671
FU CRUE-CSIC agreement; Springer Nature
FX Open Access funding provided thanks to the CRUE-CSIC agreement with
   Springer Nature.
CR Acree AT, 1979, GITICS7908
   [Anonymous], 2022, 17 INT WORKSH MUT AN
   [Anonymous], Gradle Build Tool
   [Anonymous], Stryker-NET."
   [Anonymous], APACHE MAVEN PROJECT
   [Anonymous], "StrykerJS.
   [Anonymous], BAMSURGEON
   [Anonymous], Mutant
   [Anonymous], MULL RELEASES
   [Anonymous], WODEL GET STARTED
   [Anonymous], MUJAVA DOWNLOAD
   [Anonymous], 1979, Infotech State of the Art Report, Software Testing
   [Anonymous], PIT INSTALLATION MAV
   [Anonymous], HtmlUnit
   [Anonymous], 2017, DATA MINING, DOI DOI 10.1016/B978-0-12-804291-5.00014-3
   [Anonymous], Pit
   [Anonymous], MutPy
   [Anonymous], muJava
   [Anonymous], MUTER
   [Anonymous], **DATA OBJECT**, DOI 10.5281/zenodo.5713585
   [Anonymous], Humbug
   [Anonymous], GO MUTESTING
   [Anonymous], COSMIC RAY
   [Anonymous], GITHUB GRAPHQL API
   [Anonymous], Mutmut
   [Anonymous], 2001, Infection
   [Anonymous], 2012, MINING TEXT DATA
   Arcuri A, 2018, EMPIR SOFTW ENG, V23, P1959, DOI 10.1007/s10664-017-9570-9
   Bashir Muhammad Bilal, 2019, Intelligent Computing. Proceedings of the 2019 Computing Conference. Advances in Intelligent Systems and Computing (AISC 998), P847, DOI 10.1007/978-3-030-22868-2_58
   Bashir MB, 2018, INT CONF FRONT INFO, P30, DOI 10.1109/FIT.2018.00013
   Beller M, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2021), P268, DOI 10.1109/ICSE-SEIP52600.2021.00036
   Bitbucket, CODE CICD OPTIMIZED
   Borges H, 2016, PROC IEEE INT CONF S, P334, DOI 10.1109/ICSME.2016.31
   Brito G, 2020, IEEE 17TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2020), P81, DOI 10.1109/ICSA47634.2020.00016
   Cañizares PC, 2018, J SYST SOFTWARE, V143, P187, DOI 10.1016/j.jss.2018.05.010
   Chapman P, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON BLOCKCHAIN (BLOCKCHAIN 2019), P319, DOI 10.1109/Blockchain.2019.00050
   Chekam TT, 2020, INT WORKSH AUTOMAT, P97, DOI 10.1145/3387903.3389316
   Chekam TT, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P1080, DOI 10.1145/3338906.3341180
   Coles H., 2016, P 25 INT S SOFTWARE, P449
   Cosentino V, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P137, DOI [10.1109/MSR.2016.023, 10.1145/2901739.2901776]
   Delahaye M, 2015, SOFTWARE PRACT EXPER, V45, P875, DOI 10.1002/spe.2312
   Delamaro ME, 2001, KLUW INT S ADV DATA, V24, P91
   Delgado-Pérez P, 2018, IEEE T RELIAB, V67, P1406, DOI 10.1109/TR.2018.2864678
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   Denisov A, 2018, IEEE ICST WORKSHOP, P25, DOI 10.1109/ICSTW.2018.00024
   Derezinska A, 2014, ADV INTELL SYST, V286, P155, DOI 10.1007/978-3-319-07013-1_15
   Phan DL, 2018, IEEE ICST WORKSHOP, P40, DOI 10.1109/ICSTW.2018.00026
   Efremidis Alexandros, 2019, Functional and Constraint Logic Programming. 26th International Workshop, WFLP 2018. Revised Selected Papers. Lecture Notes in Computer Science (LNCS 11285), P39, DOI 10.1007/978-3-030-16202-3_3
   Escobar-Velásquez C, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1611, DOI 10.1145/3368089.3417942
   Escobar-Velásquez C, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1090, DOI 10.1109/ASE.2019.00109
   Gómez-Abajo P, 2018, SCI COMPUT PROGRAM, V163, P85, DOI 10.1016/j.scico.2018.01.008
   Gonzalez D, 2020, IEEE WORK CONF MIN S, P431, DOI 10.1145/3379597.3387473
   Gousios G, 2017, PROC IEEE ACM INT C, P501, DOI 10.1109/ICSE-C.2017.164
   Gousios G, 2013, IEEE WORK CONF MIN S, P233, DOI 10.1109/MSR.2013.6624034
   Groce A, 2018, PROC IEEE ACM INT C, P25, DOI 10.1145/3183440.3183485
   Gutiérrez-Madroñal L, 2019, EXPERT SYST APPL, V116, P78, DOI 10.1016/j.eswa.2018.09.003
   Hariri F, 2019, IEEE INT CONF SOFTW, P114, DOI 10.1109/ICST.2019.00021
   Hu Q, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1158, DOI 10.1109/ASE.2019.00126
   Irvine SA, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P169, DOI 10.1109/TAIC.PART.2007.38
   Ivanova Y, 2020, PROCEDIA COMPUT SCI, V178, P75, DOI 10.1016/j.procs.2020.11.009
   Jester, JESTER THE JUNIT TES
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Jovanovikj I, 2020, P 1 INT C SYSTEMS MO, DOI [10.1007/978-3-030-58167-1setminus_2, DOI 10.1007/978-3-030-58167-1SETMINUS_2]
   Just R., 2014, P 2014 INT S SOFTW T, P433
   Just R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P654, DOI 10.1145/2635868.2635929
   Kalliamvakou E., 2014, P 11 WORKING C MININ, P92, DOI DOI 10.1145/2597073.2597074
   Kintis M, 2018, EMPIR SOFTW ENG, V23, P2426, DOI 10.1007/s10664-017-9582-5
   Li ZX, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1198, DOI 10.1109/ASE.2019.00136
   Liu MX, 2020, IEEE INT CONF AUTOM, P1260, DOI 10.1145/3324884.3418903
   Luna E, 2018, 2018 6TH INTERNATIONAL CONFERENCE IN SOFTWARE ENGINEERING RESEARCH AND INNOVATION (CONISOFT 2018), P99, DOI [10.1109/CONISOFT.2018.8645883, 10.1109/CONISOFT.2018.00022]
   Ma L, 2018, PROC INT SYMP SOFTW, P100, DOI 10.1109/ISSRE.2018.00021
   Ma YS, 2005, SOFTW TEST VERIF REL, V15, P97, DOI 10.1002/stvr.308
   Marki B., 2017, P S APPL COMP SAC 17, P1364
   Mombach T, 2018, GitHub REST API vs GHTorrent vs GitHub Archive: A comparative study
   Momigliano A, 2019, CILC, P4
   Ngambenchawong C., 2019, P INT MULTICONFERENC
   Offutt AJ, 2001, KLUW INT S ADV DATA, V24, P34
   Papadakis M, 2019, ADV COMPUT, V112, P275, DOI 10.1016/bs.adcom.2018.03.015
   Papadakis M, 2017, INFORM SOFTWARE TECH, V81, P1, DOI 10.1016/j.infsof.2016.08.003
   Petrovic G, 2021, PROC INT CONF SOFTW, P910, DOI 10.1109/ICSE43902.2021.00087
   Pinheiro P, 2020, SCI COMPUT PROGRAM, V191, DOI 10.1016/j.scico.2020.102418
   Pizzoleto AV, 2019, J SYST SOFTWARE, V157, DOI 10.1016/j.jss.2019.07.100
   Usaola MP, 2010, IEEE SOFTWARE, V27, P80, DOI 10.1109/MS.2010.79
   Pujari A.K., 2001, Data Mining Techniques
   Rodrigues E, 2020, PROC INT SYMP SOFTW, P414, DOI 10.1109/ISSRE5003.2020.00046
   Rodríguez-Baquero D, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P372, DOI 10.1145/3213846.3229504
   Sadath L, 2019, PROCEEDINGS 2019 AMITY INTERNATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AICAI), P327, DOI [10.1109/AICAI.2019.8701251, 10.1109/aicai.2019.8701251]
   Siavashi F, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2018), P301, DOI 10.1109/QRS.2018.00043
   Suguna Mallika S., 2019, International Journal of Innovative Technology and Exploring Engineering, V8, P5406, DOI DOI 10.35940/IJITEE.L3789.1081219
   Uzunbayir S, 2019, 2019 4TH INTERNATIONAL CONFERENCE ON COMPUTER SCIENCE AND ENGINEERING (UBMK), P439, DOI [10.1109/ubmk.2019.8907222, 10.1109/UBMK.2019.8907222]
   Van Phol L, 2020, 2020 5 INT C INNOVAT, P1, DOI [10.1109/CITISIA50690.2020.9397490, DOI 10.1109/CITISIA50690.2020.9397490]
   Wang KY, 2018, PROC IEEE ACM INT C, P29, DOI 10.1145/3183440.3183488
   Xiong Y., 2017, 29 INT C SOFTW ENG K, P578, DOI DOI 10.18293/SEKE2017-062
NR 93
TC 10
Z9 10
U1 1
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2022
VL 27
IS 6
AR 132
DI 10.1007/s10664-022-10177-8
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 3A0AB
UT WOS:000826928000001
OA hybrid
DA 2024-07-18
ER

PT J
AU Assunçao, WKG
   Colanzi, TE
   Carvalho, L
   Garcia, A
   Pereira, JA
   de Lima, MJ
   Lucena, C
AF Assuncao, Wesley K. G.
   Colanzi, Thelma Elita
   Carvalho, Luiz
   Garcia, Alessandro
   Pereira, Juliana Alves
   de Lima, Maria Julia
   Lucena, Carlos
TI Analysis of a many-objective optimization approach for identifying
   microservices from legacy systems
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Microservice architecture; Many-criteria optimization; Industrial case
   study; Performance indicators
ID MULTIOBJECTIVE OPTIMIZATION; ALGORITHM; STATISTICS
AB The expensive maintenance of legacy systems leads companies to migrate such systems to modern architectures. Microservice architectural style has become a trend to modernize monolithic legacy systems. A microservice architecture consists of small, autonomous, and highly-independent services communicating by using lightweight network protocols. To support the designing of microservice architectures, recent studies have proposed either single or multi-objective approaches. In order to improve the effectiveness of existing approaches, we introduced toMicroservices that is a many-objective search-based approach to aid the identification of boundaries among services. In previous studies, we have focused on a qualitative evaluation of the applicability and adoption of the proposed approach from a practical point of view, thus the optimization process itself has not been investigated in depth. In this paper, we extend our previous work by performing a more in-depth analysis of our many-objective approach for microservice identification. We compare our approach against a baseline approach based on a random search using a set of performance indicators widely used in the literature of many-objective optimization. Our results are validated through a real-world case study. The study findings reveal that (i) the criteria optimized by our approach are interdependent and conflicting; and (ii) all candidate solutions lead to better performance indicators in comparison to random search. Overall, the proposed many-objective approach for microservice identification yields promising results, which shed light on insights for further improvements.
C1 [Assuncao, Wesley K. G.; Carvalho, Luiz; Garcia, Alessandro; Pereira, Juliana Alves; Lucena, Carlos] Pontifical Catholic Univ Rio de Janeiro PUC Rio, Rio De Janeiro, Brazil.
   [Colanzi, Thelma Elita] State Univ Maringa UEM, Maringa, Parana, Brazil.
   [de Lima, Maria Julia] Pontifical Catholic Univ Rio de Janeiro, Tecgraf Inst, Rio De Janeiro, Brazil.
C3 Pontificia Universidade Catolica do Rio de Janeiro; Universidade
   Estadual de Maringa; Pontificia Universidade Catolica do Rio de Janeiro
RP Assunçao, WKG (corresponding author), Pontifical Catholic Univ Rio de Janeiro PUC Rio, Rio De Janeiro, Brazil.
EM wesleyklewerton@gmail.com
RI Assuncao, Wesley Klewerton Guez/AAA-8331-2020; Lucena,
   Carlos/GQP-2277-2022
OI Assuncao, Wesley Klewerton Guez/0000-0002-7557-9091; Alves Pereira,
   Juliana/0000-0002-0799-2829
FU CNPq [151723/2020-6, 428994/2018-0, 434969/2018-4, 312149/2016-6,
   309844/2018-5, 421306/2018-1, 408356/2018-9]; FAPPR [51152, 51435];
   CAPES [175956, 88887.473590/2020-00]; FAPERJ [22520-7/2016,
   010002285/2019]; PDR-10 Fellowship [202073/2020]
FX This study was partially funded by CNPq grants 151723/2020-6,
   428994/2018-0, 434969/2018-4, 312149/2016-6, 309844/2018-5,
   421306/2018-1, and 408356/2018-9 CAPES grants 175956 and
   88887.473590/2020-00 FAPERJ grants 22520-7/2016, 010002285/2019, and
   PDR-10 Fellowship 202073/2020; FAPPR grants 51152 and 51435.
CR [Anonymous], 1973, Multiple Criteria Decision Making
   [Anonymous], 1999, MULTIOBJECTIVE EVOLU
   Anquetil N., 1999, Sixth Working Conference on Reverse Engineering (Cat. No.PR00303), P235, DOI 10.1109/WCRE.1999.806964
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Assunçao WKG, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P377, DOI 10.1109/SANER50967.2021.00042
   Balalaie A, 2018, SOFTWARE PRACT EXPER, V48, P2019, DOI 10.1002/spe.2608
   Bavota G., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P195, DOI 10.1109/WCRE.2010.29
   Bergmann R, 2000, AM STAT, V54, P72, DOI 10.2307/2685616
   Candela I, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2928268
   Capilla R, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.2217
   Carvalho Luiz, 2020, GECCO'20. Proceedings of the 2020 Genetic and Evolutionary Computation Conference Companion, P305, DOI 10.1145/3377929.3390030
   Carvalho Luiz, 2019, 2019 IEEE/ACM Joint 7th International Workshop on Conducting Empirical Studies in Industry (CESI) and 6th International Workshop on Software Engineering Research and Industrial Practice (SER&IP). Proceedings, P22, DOI 10.1109/CESSER-IP.2019.00012
   Carvalho L, 2020, PROC IEEE INT CONF S, P569, DOI 10.1109/ICSME46990.2020.00060
   Carvalho L, 2020, SPLC'19: PROCEEDINGS OF THE 23RD INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL A, P26, DOI 10.1145/3336294.3336319
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Coello C. A. C., 2007, EVOLUTIONARY ALGORIT
   Colanzi TE, 2020, INFORM SOFTWARE TECH, V127, DOI 10.1016/j.infsof.2020.106372
   Colanzi TE, 2019, LECT NOTES COMPUT SC, V11664, P42, DOI 10.1007/978-3-030-27455-9_4
   Curry DM, 2014, PROCEDIA COMPUT SCI, V36, P185, DOI 10.1016/j.procs.2014.09.077
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Deb K, 2014, IEEE T EVOLUT COMPUT, V18, P577, DOI 10.1109/TEVC.2013.2281535
   Di Francesco P, 2018, 2018 IEEE 15TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P29, DOI 10.1109/ICSA.2018.00012
   Di Francesco P, 2019, J SYST SOFTWARE, V150, P77, DOI 10.1016/j.jss.2019.01.001
   Dragoni N., 2017, MICROSERVICES YESTER
   Durillo JJ, 2011, ADV ENG SOFTW, V42, P760, DOI 10.1016/j.advengsoft.2011.05.014
   Escobar D, 2016, PROC LAT AM COMPUT C
   Eski S, 2018, 19TH INTERNATIONAL CONFERENCE ON AGILE SOFTWARE DEVELOPMENT (XP '18), DOI 10.1145/3234152.3234195
   Fonseca CM, 2006, IEEE C EVOL COMPUTAT, P1142
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Fritzsch J, 2019, LECT NOTES COMPUT SC, V11350, P128, DOI 10.1007/978-3-030-06019-0_10
   Gao M, 2020, IEEE ACCESS, V8, P26385, DOI 10.1109/ACCESS.2020.2971379
   Hall M, 2018, IEEE T SOFTWARE ENG, V44, P613, DOI 10.1109/TSE.2017.2786222
   Harman M, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1106
   Henderson-Sellers B., 2014, Situational method engineering, DOI DOI 10.1007/978-3-642-41467-1
   Hinkle DE., 2002, APPL STAT BEHAV SCI
   Jalali NS, 2019, SOFT COMPUT, V23, P11141, DOI 10.1007/s00500-018-3666-z
   Jamil MA, 2019, 2019 IEEE 6 INT C EN, P1, DOI DOI 10.1109/ICETAS48360.2019.9117500
   Jin W, 2019, IEEE T SOFTWARE ENG, P1
   Jin WX, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES (IEEE ICWS 2018), P211, DOI 10.1109/ICWS.2018.00034
   Lewis J., 2014, MartinFowler. com
   Lin M, 2019, IEEE ACCESS, V7, P83088, DOI 10.1109/ACCESS.2019.2924414
   Luz W, 2018, SBES'18: PROCEEDINGS OF THE XXXII BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING, P32, DOI 10.1145/3266237.3266262
   Ma WB, 2021, COMPLEX INTELL SYST, V7, P1153, DOI 10.1007/s40747-020-00180-1
   Mahouachi R, 2018, J COMPUT SCI TECH-CH, V33, P1320, DOI 10.1007/s11390-018-1892-6
   Mazlami G, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2017), P524, DOI 10.1109/ICWS.2017.61
   Mitchell BS, 2006, IEEE T SOFTWARE ENG, V32, P193, DOI 10.1109/TSE.2006.31
   Mkaouer W, 2014, GECCO'14: PROCEEDINGS OF THE 2014 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1263, DOI 10.1145/2576768.2598366
   Mkaouer W, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2729974
   Newman S., 2015, BUILDING MICROSERVIC
   Nicolodi Luciane Baldo, 2020, SBCARS '20: Proceedings of the 14th Brazilian Symposium on Software Components, Architectures, and Reuse, P31, DOI 10.1145/3425269.3425271
   Palakonda V, 2020, IEEE ACCESS, V8, P82781, DOI 10.1109/ACCESS.2020.2991752
   Ponce F, 2019, P INT C CHIL COMPUT, DOI [10.1109/sccc49216.2019.8966423, 10.1109/SCCC49216.2019.8966423]
   Radiukynienè I, 2008, LECT NOTES ENG COMP, P1155
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   Spearman C, 1904, AM J PSYCHOL, V15, P72, DOI 10.2307/1412159
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   WELCH BL, 1947, BIOMETRIKA, V34, P28, DOI 10.2307/2332510
   Wolfart D, 2021, PROCEEDINGS OF EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING (EASE 2021), P149, DOI 10.1145/3463274.3463334
   Yen GG, 2014, IEEE T EVOLUT COMPUT, V18, P131, DOI 10.1109/TEVC.2013.2240687
   Zanetti M.S., 2014, P 13 INT C MOD MODUL, P73
   Zhang YK, 2020, IEEE 17TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2020), P135, DOI 10.1109/ICSA47634.2020.00021
   Zitzler E, 2003, IEEE T EVOLUT COMPUT, V7, P117, DOI 10.1109/TEVC.2003.810758
   Zitzler E, 1998, LECT NOTES COMPUT SC, V1498, P292, DOI 10.1007/BFb0056872
   Zitzler E., 2001, TIK-Report, V103, P1
NR 64
TC 3
Z9 3
U1 2
U2 13
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2022
VL 27
IS 2
AR 51
DI 10.1007/s10664-021-10049-7
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YS7TF
UT WOS:000750874900003
DA 2024-07-18
ER

PT J
AU Zampetti, F
   Fucci, G
   Serebrenik, A
   Di Penta, M
AF Zampetti, Fiorella
   Fucci, Gianmarco
   Serebrenik, Alexander
   Di Penta, Massimiliano
TI Self-admitted technical debt practices: a comparison between industry
   and open-source
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Technical debt; Self-admitted technical debt; Empirical study; Software
   quality
AB Self-admitted technical debt (SATD) consists of annotations, left by developers as comments in the source code or elsewhere, as a reminder about pieces of software manifesting technical debt (TD), i.e., "not being ready yet". While previous studies have investigated SATD management and its relationship with software quality, there is little understanding of the extent and circumstances to which developers admit TD. This paper reports the results of a study in which we asked developers from industry and open-source about their practices in annotating source code and other artifacts for self-admitting TD. The study consists of two phases. First, we conducted 10 interviews to gather a first understanding of the phenomenon and to prepare a survey questionnaire. Then, we surveyed 52 industrial developers as well as 49 contributors to open-source projects. Results of the study show how the TD annotation practices, as well as the typical content of SATD comments, are very similar between open-source and industry. At the same time, our results highlight how, while open-source code is spread of comments admitting the need for improvements, SATD in industry may be dictated by organizational guidelines but, at the same time, implicitly discouraged by the fear of admitting responsibilities. Results also highlight the need for tools helping developers to achieve a better TD awareness.
C1 [Zampetti, Fiorella; Fucci, Gianmarco; Di Penta, Massimiliano] Univ Sannio, Via Traiano 3, Benevento, Italy.
   [Serebrenik, Alexander] Eindhoven Univ Technol, Eindhoven, Netherlands.
C3 University of Sannio; Eindhoven University of Technology
RP Zampetti, F (corresponding author), Univ Sannio, Via Traiano 3, Benevento, Italy.
EM fiorella.zampetti@unisannio.it; gianmarco.fucci@unisannio.it;
   a.serebrenik@tue.nl; dipenta@unisannio.it
OI Serebrenik, Alexander/0000-0002-1418-0095
CR Aghajani E, 2020, PROC INT CONF SOFTW, P590, DOI 10.1145/3377811.3380405
   Aghajani E, 2019, PROC INT CONF SOFTW, P1199, DOI 10.1109/ICSE.2019.00122
   Alexeeva Z, 2016, LECT NOTES COMPUT SC, V9839, P84, DOI 10.1007/978-3-319-48992-6_6
   Alves Nicolli S. R., 2014, 2014 Sixth International Workshop on Managing Technical Debt. Proceedings, P1, DOI 10.1109/MTD.2014.9
   [Anonymous], 2006, Proc. 2006 20th Anniversary Conf. Computer Supported Coop. Work
   [Anonymous], 2018, EMPIR SOFTW ENG, DOI DOI 10.1007/s10664-017-9522-4
   Aranda J, 2009, PROC INT CONF SOFTW, P298, DOI 10.1109/ICSE.2009.5070530
   Arnaoudova V, 2016, EMPIR SOFTW ENG, V21, P104, DOI 10.1007/s10664-014-9350-8
   Arnaoudova V, 2014, IEEE T SOFTWARE ENG, V40, P502, DOI 10.1109/TSE.2014.2312942
   Avelino G, 2019, 2019 ACM IEEE INT S, P1
   Avelino Guilherme, 2016, Proceedings of IEEE 24th International Conference on Program Comprehension (ICPC), P1
   Baltes S., 2020, ARXIV200207764
   Bavota G, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P315, DOI [10.1109/MSR.2016.040, 10.1145/2901739.2901742]
   Bellomo S, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P327, DOI [10.1145/2901739.2901754, 10.1109/MSR.2016.041]
   BENJAMINI Y, 1995, J R STAT SOC B, V57, P289, DOI 10.1111/j.2517-6161.1995.tb02031.x
   Besker T, 2018, PROC IEEE INT CONF S, P415, DOI 10.1109/ICSME.2018.00051
   Brown Nanette, 2010, P FSE SDP WORKSH FUT, P47
   Celik A, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P643, DOI 10.1145/2950290.2950358
   Chen C, 2012, LECT NOTES COMPUT SC, V7467, P94, DOI 10.1007/978-3-642-32609-7_13
   Cunningham W., 1993, OOPS Messenger, V4, P29
   de Almeida RR, 2019, PROC IEEE INT CONF S, P181, DOI 10.1109/ICSME.2019.00028
   de Almeida RR, 2018, PROC IEEE INT CONF S, P655, DOI 10.1109/ICSME.2018.00075
   Di Nucci D, 2018, IEEE T SOFTWARE ENG, V44, P5, DOI 10.1109/TSE.2017.2659747
   Ebert F, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P49, DOI [10.1109/SANER.2019.8668024, 10.1109/saner.2019.8668024]
   Ernst NA, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P50, DOI 10.1145/2786805.2786848
   Etco J., 2017, TODO AUTOMATICALLY G
   Falessi D, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2491509.2491515
   Fisher RA, 1922, J R STAT SOC, V85, P87, DOI 10.2307/2340521
   Fucci G, 2021, IEEE WORK CONF MIN S, P403, DOI 10.1109/MSR52588.2021.00052
   Fucci G, 2020, PROC IEEE INT CONF S, P672, DOI 10.1109/ICSME46990.2020.00070
   Grissom R. J., 2005, EFFECT SIZES RES BRO
   Guzzi A, 2012, PROC INT CONF SOFTW, P1535, DOI 10.1109/ICSE.2012.6227043
   Iammarino M, 2019, PROC IEEE INT CONF S, P186, DOI 10.1109/ICSME.2019.00029
   Jiang SY, 2017, IEEE INT CONF AUTOM, P135, DOI 10.1109/ASE.2017.8115626
   Kruchten P., 2013, ACM SIGSOFT SOFTW EN
   KRUSKAL WH, 1952, J AM STAT ASSOC, V47, P583, DOI 10.1080/01621459.1952.10483441
   Li ZY, 2015, J SYST SOFTWARE, V101, P193, DOI 10.1016/j.jss.2014.12.027
   Lim E, 2012, IEEE SOFTWARE, V29, P22, DOI 10.1109/MS.2012.130
   Lin B, 2019, PROC INT CONF SOFTW, P548, DOI 10.1109/ICSE.2019.00066
   Maipradit R, 2020, EMPIR SOFTW ENG, V25, P3770, DOI 10.1007/s10664-020-09854-3
   Maldonado ED, 2017, PROC IEEE INT CONF S, P238, DOI 10.1109/ICSME.2017.8
   Maldonado ED, 2015, 2015 IEEE 7TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD) PROCEEDINGS, P9, DOI 10.1109/MTD.2015.7332619
   Maldonado ED, 2017, IEEE T SOFTWARE ENG, V43, P1044, DOI 10.1109/TSE.2017.2654244
   Mensah S, 2018, J SYST SOFTWARE, V135, P37, DOI 10.1016/j.jss.2017.09.026
   Moreno L, 2017, IEEE T SOFTWARE ENG, V43, P106, DOI 10.1109/TSE.2016.2591536
   Newcombe RG, 1998, STAT MED, V17, P873, DOI 10.1002/(SICI)1097-0258(19980430)17:8<873::AID-SIM779>3.0.CO;2-I
   Padioleau Y, 2009, PROC INT CONF SOFTW, P331, DOI 10.1109/ICSE.2009.5070533
   Potdar A, 2014, PROC IEEE INT CONF S, P91, DOI 10.1109/ICSME.2014.31
   Rantala L, 2020, EUROMICRO CONF PROC, P385, DOI 10.1109/SEAA51224.2020.00069
   Rastkar S, 2014, IEEE T SOFTWARE ENG, V40, P366, DOI 10.1109/TSE.2013.2297712
   Ren XX, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3324916
   Seaman C, 2011, ADV COMPUT, V82, P25, DOI 10.1016/B978-0-12-385512-1.00002-5
   Shin Hwei Tan, 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P260, DOI 10.1109/ICST.2012.106
   Spencer D., 2009, CARD SORTING DESIGNI
   STEELE CM, 1995, J PERS SOC PSYCHOL, V69, P797, DOI 10.1037/0022-3514.69.5.797
   Storey MA, 2009, IEEE T SOFTWARE ENG, V35, P470, DOI 10.1109/TSE.2009.15
   Storey MA, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P251, DOI 10.1145/1368088.1368123
   Torchiano Marco, 2011, P 2 INT WORKSH EM TR, P12, DOI [DOI 10.1145/1985374, 10.1145/1985374.1985379., DOI 10.1145/1985374.1985379]
   Uddin G, 2017, IEEE INT CONF AUTOM, P978, DOI 10.1109/ASE.2017.8115715
   Vassallo C, 2019, PROC INT CONF SOFTW, P105, DOI 10.1109/ICSE.2019.00028
   Vassallo C, 2016, PROC IEEE INT CONF S, P519, DOI 10.1109/ICSME.2016.72
   Wehaibi S, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P179, DOI 10.1109/SANER.2016.72
   Wei LL, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P672, DOI 10.1145/3106237.3106294
   Wen FC, 2019, INT C PROGRAM COMPRE, P53, DOI 10.1109/ICPC.2019.00019
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Xavier L, 2020, IEEE WORK CONF MIN S, P137, DOI 10.1145/3379597.3387459
   Zampetti F, 2021, DATASET PAPER SELF A, DOI [10.5281/zenodo.5076096, DOI 10.5281/ZENODO.5076096]
   Zampetti F, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P355, DOI [10.1109/SANER48275.2020.9054868, 10.1109/saner48275.2020.9054868]
   Zampetti F, 2018, IEEE WORK CONF MIN S, P526, DOI 10.1145/3196398.3196423
   Zampetti F, 2017, PROC IEEE INT CONF S, P216, DOI 10.1109/ICSME.2017.44
   Zazworka Nico, 2011, P 2 WORKSH MAN TECHN, P17, DOI 10.1145/1985362.1985366
   Zimmermann T, 2016, PERSPECTIVES ON DATA SCIENCE FOR SOFTWARE ENGINEERING, P137
NR 72
TC 19
Z9 19
U1 1
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2021
VL 26
IS 6
AR 131
DI 10.1007/s10664-021-10031-3
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UW8IN
UT WOS:000700396700001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Vitui, A
   Chen, TH
AF Vitui, Arthur
   Chen, Tse-Hsun (Peter)
TI MLASP: Machine learning assisted capacity planning An industrial
   experience report
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Load testing; Capacity testing; Performance testing; Machine learning;
   Deep learning
AB In industrial environments it is critical to find out the capacity of a system and plan for a deployment layout that meets the production traffic demands. The system capacity is influenced by both the performance of the system's constituting components and the physical environment setup. In a large system, the configuration parameters of individual components give the flexibility to developers and load test engineers to tune system performance without changing the source code. However, due to the large search space, estimating the capacity of the system given different configuration values is a challenging and costly process. In this paper, we propose an approach, called MLASP, that uses machine learning models to predict the system key performance indicators (i.e., KPIs), such as throughput, given a set of features made off configuration parameter values, including server cluster setup, to help engineers in capacity planning for production environments. Under the same load, we evaluate MLASP on two large-scale mission-critical enterprise systems developed by Ericsson and on one open-source system. We find that: 1) MLASP can predict the system throughput with a very high accuracy. The difference between the predicted and the actual throughput is less than 1%; and 2) By using only a small subset of the training data (e.g., 3% of the entire data for the open-source system), MLASP can still predict the throughput accurately. We also document our experience of successfully integrating the approach into an industrial setting. In summary, this paper highlights the benefits and potential of using machine learning models to assist load test engineers in capacity planning.
C1 [Vitui, Arthur; Chen, Tse-Hsun (Peter)] Concordia Univ, Software PErformance Anal & Reliabil SPEAR Lab, Montreal, PQ, Canada.
   [Vitui, Arthur] Ericsson Canada Inc, Mississauga, ON, Canada.
C3 Concordia University - Canada; Ericsson
RP Vitui, A (corresponding author), Concordia Univ, Software PErformance Anal & Reliabil SPEAR Lab, Montreal, PQ, Canada.; Vitui, A (corresponding author), Ericsson Canada Inc, Mississauga, ON, Canada.
EM arthur.vitui@mail.concordia.ca; peterc@encs.concordia.ca
OI Chen, Tse-Hsun/0000-0003-4027-0905; Vitui, Arthur/0000-0002-9669-4603
CR Aggarwal CC, 2010, J COMPUT SCI TECH-CH, V25, P458, DOI 10.1007/s11390-010-9337-x
   ALQahtani AH., 2016, ESTIMATION LIFE CYCL
   [Anonymous], 2019, Apache Kafka, A distributed streaming platform
   Asuero AG, 2006, CRIT REV ANAL CHEM, V36, P41, DOI 10.1080/10408340500526766
   Bao L, 2018, IEEE INT CONF AUTOM, P29, DOI 10.1145/3238147.3238175
   Breiman L., 2001, Mach. Learn., V45, P5
   Chen TH., 2017, ANAL DRIVEN LOAD TES
   Chen TH, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P666, DOI 10.1145/2950290.2950303
   Cloudera Documentation, 2018, CONF AP KAFK PERF RE
   Confluent Blogs, 2017, OPT YOUR AP KAFK DEP
   Ergen T, 2018, IEEE T NEUR NET LEAR, V29, P5159, DOI 10.1109/TNNLS.2017.2770179
   FastCompany, 2016, ON SECOND COULD COST
   Friedman L, 2005, AM STAT, V59, P127, DOI 10.1198/000313005X41337
   Giulli A., 2017, DEEP LEARNING KERAS
   Guo JM, 2018, EMPIR SOFTW ENG, V23, P1826, DOI 10.1007/s10664-017-9573-6
   Guo JM, 2013, IEEE INT CONF AUTOM, P301, DOI 10.1109/ASE.2013.6693089
   Ha H, 2019, PROC INT CONF SOFTW, P1095, DOI 10.1109/ICSE.2019.00113
   Harrell F.E., 2006, REGRESSION MODELING
   Jiang ZM, 2015, IEEE T SOFTWARE ENG, V41, P1091, DOI 10.1109/TSE.2015.2445340
   Lathuiliere S, 2020, IEEE T PATTERN ANAL, V42, P2065, DOI 10.1109/TPAMI.2019.2910523
   Le Noac'h P, 2017, IEEE INT CONF BIG DA, P4803, DOI 10.1109/BigData.2017.8258548
   Li H, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P1, DOI 10.1145/3183519.3183544
   McCallum A, 1999, IJCAI-99: PROCEEDINGS OF THE SIXTEENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, VOLS 1 & 2, P662
   MLASP, 2020, MLASP OP SOURC SYST
   Montero-Manso P, 2020, INT J FORECASTING, V36, P86, DOI 10.1016/j.ijforecast.2019.02.011
   Ng A. Y., 2004, P INT C MACH LEARN, P78
   Pan BY, 2018, IOP C SER EARTH ENV, V113, DOI 10.1088/1755-1315/113/1/012127
   Rabbit MQ, 2020, RABBIT MQ OPEN SOURC
   Sayyad AS, 2013, IEEE INT CONF AUTOM, P465, DOI 10.1109/ASE.2013.6693104
   SciKit-Learn, 2019, SCIKIT LEARN MACHINE
   Singh B. K., 2015, Int. J. Comput. Appl, V116, P11, DOI [10.5120/20443-2793, DOI 10.5120/20443-2793]
   Sola J, 1997, IEEE T NUCL SCI, V44, P1464, DOI 10.1109/23.589532
   Tibshirani R, 2011, J R STAT SOC B, V73, P273, DOI 10.1111/j.1467-9868.2011.00771.x
   Tse-Hsun Chen, 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P189, DOI 10.1109/MSR.2012.6224280
   Wöllmer M, 2009, INTERSPEECH 2009: 10TH ANNUAL CONFERENCE OF THE INTERNATIONAL SPEECH COMMUNICATION ASSOCIATION 2009, VOLS 1-5, P1555
   Xu Y, 2018, J ANAL TEST, V2, P249, DOI 10.1007/s41664-018-0068-2
   Yin ZN, 2011, SOSP 11: PROCEEDINGS OF THE TWENTY-THIRD ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P159
   Zaccone G., 2017, Deep learning with TensorFlow
NR 38
TC 5
Z9 6
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2021
VL 26
IS 5
AR 87
DI 10.1007/s10664-021-09994-0
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SY4FG
UT WOS:000665845000001
DA 2024-07-18
ER

PT J
AU Wang, L
   He, R
   Wang, HY
   Xia, PC
   Li, YC
   Wu, L
   Zhou, YJ
   Luo, XP
   Sui, YL
   Guo, Y
   Xu, GA
AF Wang, Liu
   He, Ren
   Wang, Haoyu
   Xia, Pengcheng
   Li, Yuanchun
   Wu, Lei
   Zhou, Yajin
   Luo, Xiapu
   Sui, Yulei
   Guo, Yao
   Xu, Guoai
TI Beyond the virus: a first look at coronavirus-themed Android malware
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE COVID-19; Coronavirus; Android apps; Malware
AB As the COVID-19 pandemic emerged in early 2020, a number of malicious actors have started capitalizing the topic. Although a few media reports mentioned the existence of coronavirus-themed mobile malware, the research community lacks the understanding of the landscape of the coronavirus-themed mobile malware. In this paper, we present the first systematic study of coronavirus-themed Android malware. We first make efforts to create a daily growing COVID-19 themed mobile app dataset, which contains 4,322 COVID-19 themed apk samples (2,500 unique apps) and 611 potential malware samples (370 unique malicious apps) by the time of mid-November, 2020. We then present an analysis of them from multiple perspectives including trends and statistics, installation methods, malicious behaviors and malicious actors behind them. We observe that the COVID-19 themed apps as well as malicious ones began to flourish almost as soon as the pandemic broke out worldwide. Most malicious apps are camouflaged as benign apps using the same app identifiers (e.g., app name, package name and app icon). Their main purposes are either stealing users' private information or making profit by using tricks like phishing and extortion. Furthermore, only a quarter of the COVID-19 malware creators are habitual developers who have been active for a long time, while 75% of them are newcomers in this pandemic. The malicious developers are mainly located in the US, mostly targeting countries including English-speaking countries, China, Arabic countries and Europe. To facilitate future research, we have publicly released all the well-labelled COVID-19 themed apps (and malware) to the research community. Till now, over 30 research institutes around the world have requested our dataset for COVID-19 themed research.
C1 [Wang, Liu; He, Ren; Wang, Haoyu; Xia, Pengcheng; Xu, Guoai] Beijing Univ Posts & Telecommun, Beijing, Peoples R China.
   [Li, Yuanchun] Microsoft Res Asia, Beijing, Peoples R China.
   [Wu, Lei; Zhou, Yajin] Zhejiang Univ, Hangzhou, Peoples R China.
   [Luo, Xiapu] Hong Kong Polytech Univ, Hong Kong, Peoples R China.
   [Sui, Yulei] Univ Technol Sydney, Ultimo, Australia.
   [Guo, Yao] Peking Univ, Beijing, Peoples R China.
C3 Beijing University of Posts & Telecommunications; Microsoft; Microsoft
   Research Asia; Zhejiang University; Hong Kong Polytechnic University;
   University of Technology Sydney; Peking University
RP Wang, HY (corresponding author), Beijing Univ Posts & Telecommun, Beijing, Peoples R China.
EM haoyuwang@bupt.edu.cn
RI Sui, Yulei/AAL-5915-2020; Li, Yuan/GXV-1310-2022; Wang,
   Haoyu/AAC-8649-2019; Guo, Yao/E-7557-2015
OI Sui, Yulei/0000-0002-9510-6574; Wang, Haoyu/0000-0002-2124-3453; Guo,
   Yao/0000-0001-5064-5286
FU National Natural Science Foundation of China [62072046, 61702045]; Hong
   Kong RGC Projects [152279/16E, CityU C1008-16G]
FX This work was supported by the National Natural Science Foundation of
   China (grant numbers 62072046 and 61702045) and Hong Kong RGC Projects
   (No. 152279/16E, CityU C1008-16G).
CR [Anonymous], 2020, Nature, DOI 10.1038/d41586-020-00154-w
   [Anonymous], 2020, FINDINGS COVID 19 ON
   [Anonymous], 2020, FAKE NETFLIX ANDROID
   [Anonymous], 2020, FRESH COVID 19 PHISH
   [Anonymous], 2020, TOP 5 SOCIAL ENG TEC
   [Anonymous], 2017, MALWARE FAMILY
   [Anonymous], 2020, URLSCAN
   [Anonymous], 2020, Threat Intelligence Report
   [Anonymous], 2020, COVID 19 MALWARE MAK
   [Anonymous], 2020, APPCHINA
   [Anonymous], 2020, KOODOUS
   [Anonymous], 2014, INT C INFORM SECURIT
   [Anonymous], 2020, NEW ANDROID CORONAVI
   [Anonymous], 2020, COVID 19 CLOUD THREA
   [Anonymous], 2020, COVID 19 GOES MOBILE
   [Anonymous], 2020, Apkpure
   [Anonymous], 2020, Google play
   [Anonymous], 2020, UPTODOWN
   [Anonymous], 2020, WEB SCRAPER ANAL COV
   [Anonymous], 2020, HUAWEI MARKET
   [Anonymous], 2020, MYSTORY
   [Anonymous], 2020, COVID 19 EXPLOITED M
   [Anonymous], 2020, VIRUSTOTAL
   [Anonymous], 2020, MALWARE NAMES
   [Anonymous], 2020, VIETNAMESE THREAT AC
   [Anonymous], 2020, MYAPP MARKET
   [Anonymous], 2020, COVID 19 THEMED MALW
   [Anonymous], 2020, COMPUTER MOBILE BASE
   [Anonymous], 2020, SOCIAL ENG
   [Anonymous], 2020, MALWARE CLASSIFICATI
   [Anonymous], 2020, DEV STORY COVID 19 U
   Arp D, 2014, 21ST ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2014), DOI 10.14722/ndss.2014.23247
   Arzt S, 2014, ACM SIGPLAN NOTICES, V49, P259, DOI [10.1145/2666356.2594299, 10.1145/2594291.2594299]
   Bao L, 2020, DOES WORKING HOME AF
   Chen Y, 2020, LANCET INFECT DIS, V20, P515, DOI 10.1016/S1473-3099(20)30235-8
   Corman VM, 2020, EUROSURVEILLANCE, V25, P23, DOI 10.2807/1560-7917.ES.2020.25.3.2000045
   da Mota Silveira Neto PA, 2020, DEEP DIVE IMPACT COV
   Davis B, 2018, NEUROIMAGE, V167, P224, DOI 10.1016/j.neuroimage.2016.06.001
   Diamond RFL, 2016, J EXP ANAL BEHAV, V105, P100, DOI 10.1002/jeab.176
   Farooqi Shehroze, 2020, IMC '20: Proceedings of the ACM Internet Measurement Conference, P696, DOI 10.1145/3419394.3423662
   Feng Y, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P576, DOI 10.1145/2635868.2635869
   Ford Denae, 2020, A Tale of Two Cities: Software Developers Working from Home During the COVID-19 Pandemic
   Gadyatskaya O, 2016, LECT NOTES COMPUT SC, V10014, P135, DOI 10.1007/978-3-319-47560-8_9
   Gennari J., 2011, 2011 IEEE International Conference on Technologies for Homeland Security (HST 2011), P396, DOI 10.1109/THS.2011.6107902
   Grundy QH, 2016, AM J PREV MED, V51, P1051, DOI 10.1016/j.amepre.2016.07.009
   Hu YY, 2020, WEB CONFERENCE 2020: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2020), P1727, DOI 10.1145/3366423.3380243
   Hu YY, 2021, IEEE T DEPEND SECURE, V18, P1033, DOI 10.1109/TDSC.2019.2908939
   Huangxin Wang, 2015, 2015 Sixth International Green and Sustainable Computing Conference (IGSC), P1, DOI 10.1109/IGCC.2015.7393723
   Ikram M, 2016, P 2016 INTERNET MEAS, P349, DOI DOI 10.1145/2987443.2987471
   Iyengar K, 2020, DIABETES METAB SYND, V14, P733, DOI 10.1016/j.dsx.2020.05.033
   Kim B, 2020, CYBERPSYCH BEH SOC N, V23, P519, DOI 10.1089/cyber.2020.0201
   Kwon T, 2014, COMPUT SECUR, V42, P137, DOI 10.1016/j.cose.2013.12.001
   Li L, 2017, IEEE T INF FOREN SEC, V12, P1269, DOI 10.1109/TIFS.2017.2656460
   Li MH, 2017, PROC INT CONF SOFTW, P335, DOI 10.1109/ICSE.2017.38
   Li YC, 2017, PROC IEEE ACM INT C, P23, DOI 10.1109/ICSE-C.2017.8
   Lin YH, 2020, BRAIN BEHAV IMMUN, V87, P30, DOI 10.1016/j.bbi.2020.04.020
   Liu T, 2020, P WEB C 2020 WWW 20
   Ma Z, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P653, DOI 10.1145/2889160.2889178
   Ralph P, 2020, EMPIR SOFTW ENG, V25, P4927, DOI 10.1007/s10664-020-09875-y
   Rasthofer S, 2016, 23RD ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2016), DOI 10.14722/ndss.2016.23066
   Schild L., 2020, ARXIV
   Sebastián M, 2016, LECT NOTES COMPUT SC, V9854, P230, DOI 10.1007/978-3-319-45719-2_11
   Sunyaev A, 2015, J AM MED INFORM ASSN, V22, pE28, DOI 10.1136/amiajnl-2013-002605
   van Velsen L, 2013, BMC MED INFORM DECIS, V13, DOI 10.1186/1472-6947-13-23
   Wang DW, 2020, JAMA-J AM MED ASSOC, V323, P1061, DOI 10.1001/jama.2020.1585
   Wang HY, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P280, DOI 10.1109/ASE.2019.00035
   Wang HY, 2018, IMC'18: PROCEEDINGS OF THE INTERNET MEASUREMENT CONFERENCE, P293, DOI 10.1145/3278532.3278558
   Wang HY, 2019, WEB CONFERENCE 2019: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2019), P1988, DOI 10.1145/3308558.3313611
   Wang HY, 2017, ACM T INFORM SYST, V35, DOI 10.1145/3086677
   Wang HY, 2015, PROCEEDINGS OF THE 2015 ACM INTERNATIONAL JOINT CONFERENCE ON PERVASIVE AND UBIQUITOUS COMPUTING (UBICOMP 2015), P1107, DOI 10.1145/2750858.2805833
   Wang H, 2015, PROCEEDINGS OF THE 2015 FIRST INTERNATIONAL CONFERENCE ON RELIABILITY SYSTEMS ENGINEERING 2015 ICRSE
   Wang S, 2021, EUR RADIOL, V31, P6096, DOI [10.1080/1064119X.2021.1966557, 10.1079/9781789246070.0001, 10.1007/s00330-021-07715-1]
   Wang XL, 2017, ANN COMPUT SECURITY, P350, DOI 10.1145/3134600.3134601
   Wrapp D, 2020, SCIENCE, V367, P1260, DOI [10.1126/science.abb2507, 10.1101/2020.02.11.944462]
   Xu XW, 2020, ENGINEERING-PRC, V6, P1122, DOI 10.1016/j.eng.2020.04.010
   Zhang M, 2014, CCS'14: PROCEEDINGS OF THE 21ST ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1105, DOI 10.1145/2660267.2660359
   Zhou W, 2012, P 2 ACM C DAT APPL S, P317, DOI DOI 10.1145/2133601.2133640
   Zhou YJ, 2012, P IEEE S SECUR PRIV, P95, DOI 10.1109/SP.2012.16
NR 78
TC 11
Z9 14
U1 0
U2 17
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2021
VL 26
IS 4
AR 82
DI 10.1007/s10664-021-09974-4
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SR1DI
UT WOS:000660785100001
PM 34149303
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Liebel, G
   Chakraborty, S
AF Liebel, Grischa
   Chakraborty, Shalini
TI Ethical issues in empirical studies using student subjects: Re-visiting
   practices and perceptions
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Student subjects; Ethics; Research methodology; Mapping study; Survey
AB Context Using student subjects in empirical studies has been discussed extensively from a methodological perspective in Software Engineering (SE), but there is a lack of similar discussion surrounding ethical aspects of doing so. As students are in a subordinate relationship to their instructors, such a discussion is needed. Objective We aim to increase the understanding of practices and perceptions SE researchers have of ethical issues with student participation in empirical studies. Method We conducted a systematic mapping study of 372 empirical SE studies involving students, following up with a survey answered by 100 SE researchers regarding their current practices and opinions regarding student participation. Results The mapping study shows that the majority of studies does not report conditions regarding recruitment, voluntariness, compensation, and ethics approval. In contrast, the majority of survey participants supports reporting these conditions. The survey further reveals that less than half of the participants require ethics approval. Additionally, the majority of participants recruit their own students on a voluntary basis, and use informed consent with withdrawal options. There is disagreement among the participants whether course instructors should be involved in research studies and if they should know who participates in a study. Conclusions It is a positive sign that mandatory participation is rare, and that informed consent and withdrawal options are standard. However, we see immediate need for action, as study conditions are under-reported, and as opinions on ethical practices differ widely. In particular, there is little regard in SE on the power relationship between instructors and students.
C1 [Liebel, Grischa; Chakraborty, Shalini] Reykjav Univ, Sch Technol, Dept Comp Sci, Menntavegur 1, IS-102 Reykjavik, Iceland.
C3 Reykjavik University
RP Liebel, G (corresponding author), Reykjav Univ, Sch Technol, Dept Comp Sci, Menntavegur 1, IS-102 Reykjavik, Iceland.
EM grischal@ru.is; shalini19@ru.is
RI Chakraborty, Shalini/HJG-7709-2022
OI Liebel, Grischa/0000-0002-3884-815X
CR Andrews A. A., 2001, Empirical Software Engineering, V6, P105, DOI 10.1023/A:1011442319273
   [Anonymous], 2003, Proceedings of the 7th International Conference on Empirical Assessment in Software Engineering
   [Anonymous], 2011, INT C FIN CRYPT DAT
   Anvari F, 2017, J SYST SOFTWARE, V134, P324, DOI 10.1016/j.jss.2017.09.020
   Baltes S, 2016, P 10 ACM IEEE INT S, P1
   Barik T, 2017, PROC INT CONF SOFTW, P575, DOI 10.1109/ICSE.2017.59
   Bowser A, 2015, PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW 2015), P151, DOI 10.1145/2736277.2741654
   Buchanan E, 2011, J EMPIR RES HUM RES, V6, P71, DOI 10.1525/jer.2011.6.2.71
   Budgen D, 2011, EMPIR SOFTW ENG, V16, P244, DOI 10.1007/s10664-010-9139-3
   Buse RPL, 2011, OOPSLA 11: PROCEEDINGS OF THE 2011 ACM INTERNATIONAL CONFERENCE ON OBJECT ORIENTED PROGRAMMING SYSTEMS LANGUAGES AND APPLICATIONS, P643
   Carver J, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P239
   Carver JC, 2010, EMPIR SOFTW ENG, V15, P35, DOI 10.1007/s10664-009-9109-9
   Cico O, 2021, J SYST SOFTWARE, V172, DOI 10.1016/j.jss.2020.110736
   Dahan M, 2014, REQUIR ENG, V19, P27, DOI 10.1007/s00766-012-0155-2
   Davidson RN, 2001, CLIN MICROBIOL INFEC, V7, P657, DOI 10.1046/j.1198-743x.2001.00355.x
   Electronic Code of Federal Regulations, 2018, TITLE 45 SUBTITLE SU
   Falessi D, 2018, EMPIR SOFTW ENG, V23, P452, DOI 10.1007/s10664-017-9523-3
   Floyd B, 2017, PROC INT CONF SOFTW, P175, DOI 10.1109/ICSE.2017.24
   Galster Matthias, 2012, 16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012), P146, DOI 10.1049/ic.2012.0018
   Gotterbarn D, 1997, COMMUN ACM, V40, P110, DOI 10.1145/265684.265699
   Grubb AM, 2017, INT REQUIR ENG CONF, P164, DOI 10.1109/RE.2017.19
   Hall T., 2001, Empirical Software Engineering, V6, P305, DOI 10.1023/A:1011922615502
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   Jorgensen M, 2015, PROCEEDINGS 41ST EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS SEAA 2015, P92, DOI 10.1109/SEAA.2015.56
   Kalliamvakou E, 2019, ARXIV1905
   Kitchenham B., 2007, Joint Report
   Kitchenham BA, 2008, Guide to advanced empirical software engineering, P63, DOI [DOI 10.1007/978-1-84800-044-5_3, 10.1007/ 978-1-84800-044-5_3]
   Ko AJ, 2015, EMPIR SOFTW ENG, V20, P110, DOI 10.1007/s10664-013-9279-3
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Lethbridge TC, 2005, EMPIR SOFTW ENG, V10, P311, DOI 10.1007/s10664-005-1290-x
   Liebel G, 2021, **DATA OBJECT**, DOI [10.5281/zenodo.4412263, DOI 10.5281/ZENODO.4412263]
   McNeill PaulM., 1993, ETHICS POLITICS HUMA
   Petersen K, 2008, 12 INT C EV ASS SOFT, P1, DOI 10.5555/2227115.2227123
   Pfleeger Shari Lawrence, 2001, ACM SIGSOFT Software Engineering Notes, V26, P16, DOI DOI 10.1145/505532.505535
   Riaz M, 2017, EMPIR SOFTW ENG, V22, P2127, DOI 10.1007/s10664-016-9481-1
   Riaz Maria., 2014, 8th ACM/IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P1
   Sakhnini V, 2017, EMPIR SOFTW ENG, V22, P2001, DOI 10.1007/s10664-016-9475-z
   Saldana J., 2015, The coding manual for qualitative researchers
   Salman I, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P666, DOI 10.1109/ICSE.2015.82
   Sieber J. E., 2001, Empirical Software Engineering, V6, P329, DOI 10.1023/A:1011978700481
   Singer J, 2002, IEEE T SOFTWARE ENG, V28, P1171, DOI 10.1109/TSE.2002.1158289
   Stol KJ, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3241743
   Storey M. A. D., 2001, Empirical Software Engineering, V6, P343, DOI 10.1023/A:1011930801390
   Sturm A, 2014, INFORM SOFTWARE TECH, V56, P1390, DOI 10.1016/j.infsof.2014.05.003
   Svahnberg M, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P288
   Tu YC, 2016, EMPIR SOFTW ENG, V21, P1035, DOI 10.1007/s10664-015-9374-8
   Vinson NG., 2008, PRACTICAL GUIDE ETHI, P229, DOI DOI 10.1007/978-1-84800-044-5
   Voigt P., 2017, The EU General Data Protection Regulation (GDPR): a practical guide, V1st
NR 48
TC 1
Z9 1
U1 1
U2 10
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR 20
PY 2021
VL 26
IS 3
AR 40
DI 10.1007/s10664-021-09958-4
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RA0BV
UT WOS:000631084500003
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Lindohf, R
   Krüger, J
   Herzog, E
   Berger, T
AF Lindohf, Robert
   Krueger, Jacob
   Herzog, Erik
   Berger, Thorsten
TI Software product-line evaluation in the large
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE software product lines; process maturity; experience report; family
   evaluation framework
ID ADOPTION; MODEL
AB Software product-line engineering is arguably one of the most successful methods for establishing large portfolios of software variants in an application domain. However, despite the benefits, establishing a product line requires substantial upfront investments into a software platform with a proper product-line architecture, into new software-engineering processes (domain engineering and application engineering), into business strategies with commercially successful product-line visions and financial planning, as well as into re-organization of development teams. Moreover, establishing a full-fledged product line is not always possible or desired, and thus organizations often adopt product-line engineering only to an extent that deemed necessary or was possible. However, understanding the current state of adoption, namely, the maturity or performance of product-line engineering in an organization, is challenging, while being crucial to steer investments. To this end, several measurement methods have been proposed in the literature, with the most prominent one being the Family Evaluation Framework (FEF), introduced almost two decades ago. Unfortunately, applying it is not straightforward, and the benefits of using it have not been assessed so far. We present an experience report of applying the FEF to nine medium- to large-scale product lines in the avionics domain. We discuss how we tailored and executed the FEF, together with the relevant adaptations and extensions we needed to perform. Specifically, we elicited the data for the FEF assessment with 27 interviews over a period of 11 months. We discuss experiences and assess the benefits of using the FEF, aiming at helping other organizations assessing their practices for engineering their portfolios of software variants.
C1 [Lindohf, Robert] Saab AB, Technol Management Off, Stockholm, Sweden.
   [Herzog, Erik] Saab AB, Stockholm, Sweden.
   [Krueger, Jacob] Otto von Guericke Univ, Databases & Software Engn Work Grp, Magdeburg, Germany.
   [Krueger, Jacob] Univ Toronto, Toronto, ON, Canada.
   [Berger, Thorsten] Univ Gothenburg, Chalmers, Gothenburg, Sweden.
   [Berger, Thorsten] Ruhr Univ Bochum, Comp Sci, Bochum, Germany.
C3 Saab Group; Saab Group; Otto von Guericke University; University of
   Toronto; University of Gothenburg; Chalmers University of Technology;
   Ruhr University Bochum
RP Krüger, J (corresponding author), Otto von Guericke Univ, Databases & Software Engn Work Grp, Magdeburg, Germany.; Krüger, J (corresponding author), Univ Toronto, Toronto, ON, Canada.
EM robert.lindohf@saabgroup.com; jkrueger@ovgu.de;
   erik.herzog@saabgroup.com; thorsten.berger@rub.de
FU Projekt DEAL
FX Open Access funding enabled and organized by Projekt DEAL.
CR Ahmed F, 2007, J SYST SOFTWARE, V80, P836, DOI 10.1016/j.jss.2006.09.010
   Ahmed F, 2011, INFORM SYST FRONT, V13, P543, DOI 10.1007/s10796-010-9230-8
   Ali MS, 2009, 2009 35TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, PROCEEDINGS, P275, DOI 10.1109/SEAA.2009.89
   America P, 2000, SPRINGER INT SER ENG, V576, P167
   Andersson H, 2012, THESIS U LINKOPING
   [Anonymous], 2012, EXPT SOFTWARE ENG
   [Anonymous], 2015, P 19 INT C SOFTW PRO, DOI DOI 10.1145/2791060.2791108
   Antkiewicz M, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P532, DOI 10.1145/2591062.2591126
   Apel S., 2013, Feature-Oriented Software Development: Concepts and Implementation
   asterbrook S, 2008, SELECTING EMPIRICAL, P285, DOI [10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-5_11]
   Bastos JF, 2017, J SYST SOFTWARE, V131, P112, DOI 10.1016/j.jss.2017.05.052
   Bayer J., 1999, SSR'99. Proceedings of the Fifth Symposium on Software Reusability. Bridging the Gap Between Research and Practice, P122, DOI 10.1145/303008.303063
   Berger T, 2014, INT WORKSH VAR MOD S, DOI [10.1145/2556624.2556641, DOI 10.1145/2556624.2556641]
   Berger T, 2020, EMPIR SOFTW ENG, V25, P1755, DOI 10.1007/s10664-019-09787-6
   Berger T, 2014, LECT NOTES COMPUT SC, V8767, P302, DOI 10.1007/978-3-319-11653-2_19
   Berger T, 2014, INFORM SOFTWARE TECH, V56, P1520, DOI 10.1016/j.infsof.2014.05.005
   Bergin T, 2013, SOLV SOC PROB, P7
   Boehm B, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P156
   BOEHM BW, 1984, IEEE T SOFTWARE ENG, V10, P4, DOI 10.1109/TSE.1984.5010193
   Bosch J., 2002, Software Product Lines. Second International Conference, SPLC 2. Proceedings (Lecture Notes in Computer Science Vol. 2370), P257
   Buhrdorf R, 2003, INT WORKSH SOFTW PRO, V3014, P317, DOI [10.1007/978-3-540-24667-1_24, DOI 10.1007/978-3-540-24667-1_24]
   Clements P, 2002, IEEE SOFTWARE, V19, P28, DOI 10.1109/MS.2002.1020283
   Clements P., 2002, Software product lines
   Clements P., 2001, CONTROL CHANNEL TOOL
   Clements PC, 2005, CMUSEL2005TR003
   Czarnecki Krzysztof., 2012, P 6 INT WORKSHOP VAR, P173, DOI DOI 10.1145/2110147.2110167
   da Silva IF, 2014, J SYST SOFTWARE, V88, P189, DOI 10.1016/j.jss.2013.10.040
   da Silva IF, 2011, SOFTWARE PRACT EXPER, V41, P899, DOI 10.1002/spe.1078
   Dubinsky Y, 2013, EUR CON SFTWR MTNCE, P25, DOI 10.1109/CSMR.2013.13
   El-Sharkawy S, 2019, INFORM SOFTWARE TECH, V106, P1, DOI 10.1016/j.infsof.2018.08.015
   Fogdal T., 2016, P SPLC, P252
   Garcia S, 2019, PROCEEDINGS OF THE 13TH INTERNATIONAL WORKSHOP ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS (VAMOS '19), DOI 10.1145/3302333.3302350
   Ghanam Y, 2012, INFORM SOFTWARE TECH, V54, P968, DOI 10.1016/j.infsof.2012.03.005
   Hetrick W. A., 2006, COMP 21 ACM SIGPLAN, P798, DOI DOI 10.1145/1176617.1176726
   Heumüller R, 2020, EMPIR SOFTW ENG, V25, P4585, DOI 10.1007/s10664-020-09851-6
   Jensen P, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P35, DOI 10.1109/SPLINE.2007.25
   Jorgensen M, 2009, IEEE SOFTWARE, V26, P14, DOI 10.1109/MS.2009.47
   Kalender ME, 2013, PROCEEDINGS OF THE 17TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE CO-LOCATED WORKSHOPS (SPLC'13 WORKSHOPS), P150
   Kang K. C., 1990, Technical Report
   Khurum M, 2008, INT SOFTW PROD LIN C, P277
   Klünder J, 2018, PROCEEDINGS OF THE 2018 INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESS (ICSSP 2018), P1, DOI 10.1145/3202710.3203146
   Knauber P, 2000, IEEE SOFTWARE, V17, P88, DOI 10.1109/52.877873
   Koziolek H, 2016, EMPIR SOFTW ENG, V21, P411, DOI 10.1007/s10664-014-9358-0
   Krueger CW, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P297, DOI 10.1109/SPLC.2008.36
   Kruger J, 2016, THESIS OTTO VON GUER
   Kruger J, 2020, INT WORK C VAR MOD S, DOI [10.1145/3377024.3377044, DOI 10.1145/3377024.3377044]
   Kruger Jacob., 2016, Proceedings of the 20th International Systems and Software Product Line Conference on - SPLC'16, P354, DOI [10.1145/2934466.2962731, DOI 10.1145/2934466.2962731]
   Mahmood W, 2020, INT C SYST SOFTW PRO
   Montagud S, 2012, SOFTWARE QUAL J, V20, P425, DOI 10.1007/s11219-011-9146-7
   Munoz JB, INT C SOFTW PROD LIN, P49, DOI [10.1007/3-540-45652-X_4, DOI 10.1007/3-540-45652-X_4]
   Nazar N., 2016, International Journal of Computer Theory and Engineering, V8, P313, DOI 10.7763/IJCTE.2016.V8.1064
   Nesic D, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P62, DOI 10.1145/3338906.3338974
   Niemelä E, 2004, LECT NOTES COMPUT SC, V3154, P130
   Northrop LM, 2002, IEEE SOFTWARE, V19, P32, DOI 10.1109/MS.2002.1020285
   Olsson HH, 2012, EUROMICRO CONF PROC, P392, DOI 10.1109/SEAA.2012.54
   Pohl K., 2005, Software Product Line Engineering: Foundations, Principles and Techniques, V1, DOI [10.1007/3-540-28901-1, DOI 10.1007/3-540-28901-1]
   Rincon L, 2019, INT SYST SOFTW PROD, P90, DOI [10.1145/3307630.3342418, DOI 10.1145/3307630.3342418]
   Rincón L, 2018, INT CONF RES CHAL
   Rodrigues E, 2019, AN 3 SCOL REG ENG SO, P137
   Rosenmuller M, 2010, INT WORKSH VAR MOD S, P123
   Schmid K, 2005, PROC INT CONF SOFTW, P544
   Schmid K, 2002, IEEE SOFTWARE, V19, P50, DOI 10.1109/MS.2002.1020287
   Schultis KB, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P542, DOI 10.1145/2635868.2635876
   Seidl C, 2017, 21ST INTERNATIONAL SYSTEMS & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 1, P153, DOI 10.1145/3106195.3106203
   Siegmund J, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P9, DOI 10.1109/ICSE.2015.24
   Stanciulescu S, 2015, PROC IEEE INT CONF S, P151, DOI 10.1109/ICSM.2015.7332461
   Thummalapenta S, 2010, EMPIR SOFTW ENG, V15, P1, DOI 10.1007/s10664-009-9108-x
   Thurimella AK, 2014, EC DRIVEN SOFTWARE A, DOI [10.1016/b978-0-12-410464-8.00002-7, DOI 10.1016/B978-0-12-410464-8.00002-7]
   Tüzün E, 2015, INFORM SOFTWARE TECH, V60, P77, DOI 10.1016/j.infsof.2014.12.007
   van der Linden F, 2004, LECT NOTES COMPUT SC, V3154, P110
   van der Linden F, 2002, IEEE SOFTWARE, V19, P41, DOI 10.1109/MS.2002.1020286
   van der Linden Frank, 2007, Software Product Lines in Action: The Best Industrial Practice in Product Line Engineering, DOI [10.1007/978-3-540-71437-8, DOI 10.1007/978-3-540-71437-8]
   vander Linden FJ, 2005, PH050301
   Yin R.K., 2011, Qualitative research from start to finish
NR 74
TC 9
Z9 9
U1 2
U2 9
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR 5
PY 2021
VL 26
IS 2
AR 30
DI 10.1007/s10664-020-09913-9
PG 41
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QT3VE
UT WOS:000626517000002
OA hybrid
DA 2024-07-18
ER

PT J
AU Zerouali, A
   Mens, T
   Decan, A
   Gonzalez-Barahona, J
   Robles, G
AF Zerouali, Ahmed
   Mens, Tom
   Decan, Alexandre
   Gonzalez-Barahona, Jesus
   Robles, Gregorio
TI A multi-dimensional analysis of technical lag in Debian-based Docker
   images
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Technical lag; Container images; Docker; Outdated packages; Security
   vulnerabilities; Bugs; Debian; Empirical analysis
AB Container-based solutions, such as Docker, have become increasingly relevant in the software industry to facilitate deploying and maintaining software systems. Little is known, however, about how outdated such containers are at the moment of their release or when used in production. This article addresses this question, by measuring and comparing five different dimensions of technical lag that Docker container images can face: package lag, time lag, version lag, vulnerability lag, and bug lag. We instantiate the formal technical lag framework from previous work to operationalise these different dimensions of lag on Docker Hub images based on the DebianLinux distribution. We carry out a large-scale empirical study of such technical lag, over a three-year period, in 140,498 Debian images. We compare the differences between official and community images, as well as between images with different Debian distributions: OldStable, Stable or Testing. The analysis shows that the different dimensions of technical lag are complementary, providing multiple insights. OfficialDebian images consistently have a lower lag than community images for all considered lag dimensions. The amount of lag incurred depends on the type of Debian distribution and the considered lag dimension. Our research offers empirical evidence that developers and deployers of Docker images can benefit from identifying to which extent their containers are outdated according to the considered dimensions, and mitigate the risks related to such outdatedness.
C1 [Zerouali, Ahmed] Vrije Univ Brussel, Fac WE DINF SOFT, Software Languages Lab, Pleinlaan 2, B-1050 Brussels, Belgium.
   [Zerouali, Ahmed; Mens, Tom; Decan, Alexandre] Univ Mons, Software Engn Lab, Ave Maistriau 15, B-7000 Mons, Belgium.
   [Gonzalez-Barahona, Jesus; Robles, Gregorio] Univ Rey Juan Carlos, Grp Sistemas & Comunicac, Camino Molino S-N,Campus Fuenlabrada, Madrid, Spain.
C3 Vrije Universiteit Brussel; University of Mons; Universidad Rey Juan
   Carlos
RP Zerouali, A (corresponding author), Vrije Univ Brussel, Fac WE DINF SOFT, Software Languages Lab, Pleinlaan 2, B-1050 Brussels, Belgium.; Zerouali, A (corresponding author), Univ Mons, Software Engn Lab, Ave Maistriau 15, B-7000 Mons, Belgium.
EM ahmed.zerouali@vub.be; tom.mens@umons.ac.be;
   alexandre.decan@umons.ac.be; jgb@gsyc.es; grex@gsyc.urjc.es
RI Zerouali, Ahmed/AAH-4948-2020; Gonzalez-Barahona, Jesus M./L-5646-2017;
   Robles, Gregorio/I-2507-2012; Mens, Tom/B-6518-2013
OI Gonzalez-Barahona, Jesus M./0000-0001-9682-460X; Robles,
   Gregorio/0000-0002-1442-6761; Mens, Tom/0000-0003-3636-5020
FU FWO-Vlaanderen [30446992]; F.R.S.-FNRS [30446992]; Government of Spain
   through project "BugBirth" [RTI2018-101963-B-100]
FX This research is carried out in the context of the Excellence of Science
   project 30446992 SECO-Assist financed by FWO-Vlaanderen and F.R.S.-FNRS.
   We acknowledge the support of the Government of Spain through project
   "BugBirth" (RTI2018-101963-B-100).
CR Abate P, 2014, SCI COMPUT PROGRAM, V90, P93, DOI 10.1016/j.scico.2013.06.007
   Abate P, 2012, J SYST SOFTWARE, V85, P2228, DOI 10.1016/j.jss.2012.02.018
   Abate P, 2009, INT SYMP EMP SOFTWAR, P89, DOI 10.1109/ESEM.2009.5316017
   Anchore.io, 2017, SNAPSHOT CONTAINER E
   [Anonymous], 2017, P 7 ACM C DAT APPL, DOI [DOI 10.1145/3029806.3029832, 10.1145/3029806.3029832]
   [Anonymous], 2011, JOINT EUR SOFTW ENG
   [Anonymous], 2020, DOCKERFILE REFERENCE
   Artho C., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P141, DOI 10.1109/MSR.2012.6224274
   Bernstein D, 2014, IEEE CLOUD COMPUT, V1, P81, DOI 10.1109/MCC.2014.51
   Bettini A, 2015, FLAWCHECK
   Boettiger Carl, 2015, ACM SIGOPS Operating Systems Review, V49, P71
   Cito J, 2017, IEEE WORK CONF MIN S, P323, DOI 10.1109/MSR.2017.67
   Claes M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P212, DOI 10.1109/MSR.2015.27
   Cogo FR, 2021, IEEE T SOFTWARE ENG, V47, P2457, DOI 10.1109/TSE.2019.2952130
   Combe T, 2016, IEEE CLOUD COMPUT, V3, P54, DOI 10.1109/MCC.2016.100
   Cox J, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P109, DOI 10.1109/ICSE.2015.140
   Decan A, 2019, EMPIR SOFTW ENG, V24, P381, DOI 10.1007/s10664-017-9589-y
   Decan A, 2018, IEEE WORK CONF MIN S, P181, DOI 10.1145/3196398.3196401
   Decan A, 2018, PROC IEEE INT CONF S, P404, DOI 10.1109/ICSME.2018.00050
   DeHamer B, 2020, DOCKER HUB TOP 10
   deVisser M, 2017, LOOK OFTEN DOCKER IM
   Docker Inc, 2020, DOCK REG HTTP API V2
   Du Y., 2019, EMPIRICAL CASE STUDY, V34, P69, DOI DOI 10.1109/ACCESS.2019.2905424
   Gonzalez-Barahona J. M., 2017, IFIP Advances in Information and Communication Technology, P182
   Gonzalez-Barahona JM, 2009, EMPIR SOFTW ENG, V14, P262, DOI 10.1007/s10664-008-9100-x
   Henkel J, 2020, INT C SOFTW ENG
   Kula RG, 2018, EMPIR SOFTW ENG, V23, P384, DOI 10.1007/s10664-017-9521-5
   Kula RG, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P520, DOI 10.1109/SANER.2015.7081869
   Kwon S, 2020, DIVDS DOCKER IMAGE V, DOI [10.1109/ACCESS.2020.2976874, DOI 10.1109/ACCESS.2020.2976874]
   Legay D, 2020, INT C SOFTW MAINT EV
   Merkel D., 2014, LINUX J, V2014, P2, DOI DOI 10.5555/2600239.2600241
   Mezzetti G., 2018, P 32 EUROPEAN C OBJE, V109, p7:1
   Mouat A., 2015, Using Docker: Developing and Deploying Software with Containers
   Muller A, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P409, DOI 10.1145/3338906.3338940
   Nussbaum Lucas, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P52, DOI 10.1109/MSR.2010.5463277
   Romano J., 2006, P ANN M SO ASS I RES
   Salza P, 2020, EMPIR SOFTW ENG, V25, P2341, DOI 10.1007/s10664-019-09754-1
   Socchi E, 2019, THESIS U OSLO
   The Debian GNU/Linux FAQ, 2019, DEB PACK MAN TOOLS
   Turnbull J., 2014, The Docker Book: Containerization is the new virtualization
   Vermeer B, 2019, SHIFTING DOCKER SECU
   Wohlin C., 2000, Experimentation in Software Engineering: An Introduction, V1, DOI DOI 10.1007/978-1-4615-4625-2
   Zapata RE, 2018, PROC IEEE INT CONF S, P559, DOI 10.1109/ICSME.2018.00067
   Zerouali Ahmed, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P592, DOI 10.1109/MSR.2019.00089
   Zerouali A, 2020, REPLICATION PACKAGE, DOI [10.5281/zenodo.3765315, DOI 10.5281/ZENODO.3765315]
   Zerouali A, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.2157
   Zerouali A, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P491, DOI [10.1109/saner.2019.8668013, 10.1109/SANER.2019.8668013]
   Zerouali A, 2018, LECT NOTES COMPUT SC, V10826, P95, DOI 10.1007/978-3-319-90421-4_6
   Zerouali J, 2019, THESIS U MONS
   Zhou JH, 2019, LECT NOTES COMPUT SC, V11602, P132, DOI 10.1007/978-3-030-22888-0_10
   Zimmermann M, 2019, USENIX SEC S, P1
NR 51
TC 10
Z9 12
U1 0
U2 10
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB 20
PY 2021
VL 26
IS 2
AR 19
DI 10.1007/s10664-020-09908-6
PG 45
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QK8YW
UT WOS:000620666600001
DA 2024-07-18
ER

PT J
AU Santos, A
   Vegas, S
   Oivo, M
   Juristo, N
AF Santos, Adrian
   Vegas, Sira
   Oivo, Markku
   Juristo, Natalia
TI Comparing the results of replications in software engineering
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Experimentation; Replication; Meta-analysis
ID RANDOMIZED-TRIALS; SAMPLE-SIZE; METAANALYSIS; REPLICABILITY; POWER;
   HETEROGENEITY; KNOWLEDGE; GUIDANCE; FAILURE; CRISIS
AB Context It has been argued that software engineering replications are useful for verifying the results of previous experiments. However, it has not yet been agreed how to check whether the results hold across replications. Besides, some authors suggest that replications that do not verify the results of previous experiments can be used to identify contextual variables causing the discrepancies. Objective Study how to assess the (dis)similarity of the results of SE replications when they are compared to verify the results of previous experiments and understand how to identify whether contextual variables are influencing results. Method We run simulations to learn how different ways of comparing replication results behave when verifying the results of previous experiments. We illustrate how to deal with context-induced changes. To do this, we analyze three groups of replications from our own research on test-driven development and testing techniques. Results The direct comparison of p-values and effect sizes does not appear to be suitable for verifying the results of previous experiments and examining the variables possibly affecting the results in software engineering. Analytical methods such as meta-analysis should be used to assess the similarity of software engineering replication results and identify discrepancies in results. Conclusion The results achieved in baseline experiments should no longer be regarded as a result that needs to be reproduced, but as a small piece of evidence within a larger picture that only emerges after assembling many small pieces to complete the puzzle.
C1 [Santos, Adrian] Univ Oulu, Oulu, Finland.
   [Oivo, Markku] Univ Oulu, M3S Res Unit, Oulu, Finland.
   [Vegas, Sira; Juristo, Natalia] Univ Politecn Madrid, Sch Comp Engn, Software Engn, Madrid, Spain.
C3 University of Oulu; University of Oulu; Universidad Politecnica de
   Madrid
RP Vegas, S (corresponding author), Univ Politecn Madrid, Sch Comp Engn, Software Engn, Madrid, Spain.
EM adrian.santos.parrilla@oulu.fi; svegas@fi.upm.es; markku.oivo@oulu.fi;
   natalia@fi.upm.es
RI VEGAS, SIRA/R-6742-2018
OI VEGAS, SIRA/0000-0001-8535-9386
FU FEDER/Spanish Ministry of Science and Innovation-Research State Agency
   [PGC2018-097265-B-I00]
FX This research was developed with the support of project
   PGC2018-097265-B-I00, funded by: FEDER/Spanish Ministry of Science and
   Innovation-Research State Agency.
CR [Anonymous], 2012, ART SOFTWARE TESTING, DOI DOI 10.1002/9781119202486
   [Anonymous], 2003, TEST DRIVEN DEV EXAM
   [Anonymous], 2014, Applied Mixed Models in Medicine, DOI [10.1002/9781118778210, DOI 10.1002/9781118778210]
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Badampudi D, 2019, PROCEEDINGS OF EASE 2019 - EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING, P306, DOI 10.1145/3319008.3319358
   Baker M, 2016, NATURE, V533, P452, DOI 10.1038/533452a
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Bezerra RMM, 2015, INT SYMP EMP SOFTWAR, P132, DOI 10.1109/ESEM.2015.7321213
   Biondi-Zoccai G, 2016, Umbrella Reviews. Evidence Synthesis with Overviews of Reviews and Meta-Epidemiologic Studies, DOI DOI 10.1007/978-3-319-25655-9
   Borenstein M., 2009, INTRO METAANALYSIS
   Briand L, 2017, IEEE SOFTWARE, V34, P72, DOI 10.1109/MS.2017.3571562
   Brooks Andrew., 2003, Empirical Foundations of Computer Science Technical Report, EfoCS-51-2003
   Button KS, 2013, NAT REV NEUROSCI, V14, P365, DOI 10.1038/nrn3475
   Camerer CF, 2018, NAT HUM BEHAV, V2, P637, DOI 10.1038/s41562-018-0399-z
   Campbell, 2002, EXPT QUASIEXPERIMENT
   Chen D-G., 2013, Applied Meta-analysis using R, DOI [10.1201/b14872, DOI 10.1201/B14872]
   Cohen J., 1988
   Cumming G, 2014, PSYCHOL SCI, V25, P7, DOI 10.1177/0956797613504966
   da Silva FQB, 2014, EMPIR SOFTW ENG, V19, P501, DOI 10.1007/s10664-012-9227-7
   de Magalhaes CVC, 2015, INFORM SOFTWARE TECH, V64, P76, DOI 10.1016/j.infsof.2015.02.001
   Dieste O, 2017, EMPIR SOFTW ENG, V22, P2457, DOI 10.1007/s10664-016-9471-3
   DURAN JW, 1984, IEEE T SOFTWARE ENG, V10, P438, DOI 10.1109/TSE.1984.5010257
   Dybå T, 2006, INFORM SOFTWARE TECH, V48, P745, DOI 10.1016/j.infsof.2005.08.009
   Egger M., 2008, Systematic Reviews in Health Care: Meta-Analysis in Context
   Ellis PD, 2010, ESSENTIAL GUIDE TO EFFECT SIZES: STATISTICAL POWER, META-ANALYSIS AND THE INTERPRETATION OF RESEARCH RESULTS, P1
   Feaster DJ, 2011, AM J DRUG ALCOHOL AB, V37, P383, DOI 10.3109/00952990.2011.600386
   Field A., 2013, Discovering statistics using IBM SPSS statistics, V4th, P591
   Fisher DJ, 2011, J CLIN EPIDEMIOL, V64, P949, DOI 10.1016/j.jclinepi.2010.11.016
   Gagnier JJ, 2012, BMC MED RES METHODOL, V12, DOI 10.1186/1471-2288-12-111
   Gnedenko BV, 2020, THEORY PROBABILITY, V6th
   Gomez O. S., 2010, P 2010 ACM IEEE INT, P3
   Gómez OS, 2014, INFORM SOFTWARE TECH, V56, P1033, DOI 10.1016/j.infsof.2014.04.004
   Groenwold RHH, 2010, BMC MED RES METHODOL, V10, DOI 10.1186/1471-2288-10-43
   Higgins JPT, 2003, BMJ-BRIT MED J, V327, P557, DOI 10.1136/bmj.327.7414.557
   Higgins J, 2012, COCHRANE DB SYST REV, DOI 10.1002/14651858.ED000049
   Höst M, 2005, PROC INT CONF SOFTW, P470
   Ioannidis JPA, 2008, BMJ-BRIT MED J, V336, P1413, DOI 10.1136/bmj.a117
   Ioannidis JPA, 2005, PLOS MED, V2, P696, DOI 10.1371/journal.pmed.0020124
   Jedlitschka A., 2008, Guide to Advanced Empirical Software Engineering
   Jorgensen M, 2016, J SYST SOFTWARE, V116, P133, DOI 10.1016/j.jss.2015.03.065
   Juristo N., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P330, DOI 10.1109/ICST.2012.113
   Juristo N, 2011, EMPIR SOFTW ENG, V16, P295, DOI 10.1007/s10664-010-9141-9
   Juristo N, 2009, INT SYMP EMP SOFTWAR, P357
   Juristo Natalia, 2011, Basics of software engineering experimentation
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Kitchenham B, 2008, EMPIR SOFTW ENG, V13, P219, DOI 10.1007/s10664-008-9061-0
   Kitchenham B, 2017, EMPIR SOFTW ENG, V22, P579, DOI 10.1007/s10664-016-9437-5
   Langan D, 2019, RES SYNTH METHODS, V10, P83, DOI 10.1002/jrsm.1316
   Lau J, 1998, LANCET, V351, P123, DOI 10.1016/S0140-6736(97)08468-7
   Leandro G., 2008, METAANALYSIS MED RES
   Makel MC, 2012, PERSPECT PSYCHOL SCI, V7, P537, DOI 10.1177/1745691612460688
   Maxwell SE, 2015, AM PSYCHOL, V70, P487, DOI 10.1037/a0039400
   McNeish DM, 2016, EDUC PSYCHOL REV, V28, P295, DOI 10.1007/s10648-014-9287-x
   Menzies T, 2016, PERSPECTIVES ON DATA SCIENCE FOR SOFTWARE ENGINEERING, P1
   Menzies T, 2012, EMPIR SOFTW ENG, V17, P1, DOI 10.1007/s10664-011-9193-5
   Miller J, 2005, INFORM SOFTWARE TECH, V47, P233, DOI 10.1016/j.infsof.2004.08.005
   Morris SB, 2002, PSYCHOL METHODS, V7, P105, DOI 10.1037//1082-989X.7.1.105
   Morris TP, 2019, STAT MED, V38, P2074, DOI 10.1002/sim.8086
   Murphy GC, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2019), P73, DOI 10.1109/ICSE-NIER.2019.00027
   de França BBN, 2016, EMPIR SOFTW ENG, V21, P1302, DOI 10.1007/s10664-015-9386-4
   Ntafos S., 1998, Software Engineering Notes, V23, P42, DOI 10.1145/271775.271785
   Pashler H, 2012, PERSPECT PSYCHOL SCI, V7, P528, DOI 10.1177/1745691612465253
   Patil P, 2016, PERSPECT PSYCHOL SCI, V11, P539, DOI 10.1177/1745691616646366
   Petersen K, 2009, INT SYMP EMP SOFTWAR, P402
   Petitti DB, 2000, METAANALYSIS DECISIO, V31
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Ruvuna F, 2004, DRUG INF J, V38, P387, DOI 10.1177/009286150403800409
   Santos A, 2021, IEEE T SOFTWARE ENG, V47, P1742, DOI 10.1109/TSE.2019.2935720
   Santos A, 2020, IEEE T SOFTWARE ENG, V46, P566, DOI 10.1109/TSE.2018.2864633
   Shepperd M, 2018, INFORM SOFTWARE TECH, V99, P120, DOI 10.1016/j.infsof.2018.01.006
   Shull F, 2004, EMPIR SOFTW ENG, V9, P111, DOI 10.1023/B:EMSE.0000013516.80487.33
   Simmonds MC, 2005, CLIN TRIALS, V2, P209, DOI 10.1191/1740774505cn087oa
   Snijders T. A. B., 2011, International encyclopedia of statistical science, P879, DOI [DOI 10.1007/978-3-642-04898-2_387, 10.1007/978-3-642-04898-2_387]
   THOMPSON B, 1994, J PERS, V62, P157, DOI 10.1111/j.1467-6494.1994.tb00289.x
   Tosun A, 2017, EMPIR SOFTW ENG, V22, P2763, DOI 10.1007/s10664-016-9490-0
   Viechtbauer W, 2010, J STAT SOFTW, V36, P1, DOI 10.18637/jss.v036.i03
   Whitehead A., 2002, METAANALYSIS CONTROL, DOI [10.1002/0470854200, DOI 10.1002/0470854200]
   Wohlin C., 2012, Experimentation in Software Engineering
NR 78
TC 10
Z9 10
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB 2
PY 2021
VL 26
IS 2
AR 13
DI 10.1007/s10664-020-09907-7
PG 41
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA QE8AJ
UT WOS:000616428300001
DA 2024-07-18
ER

PT J
AU Liao, LZ
   Chen, JF
   Li, H
   Zeng, Y
   Shang, WY
   Guo, JM
   Sporea, C
   Toma, A
   Sajedi, S
AF Liao, Lizhi
   Chen, Jinfu
   Li, Heng
   Zeng, Yi
   Shang, Weiyi
   Guo, Jianmei
   Sporea, Catalin
   Toma, Andrei
   Sajedi, Sarah
TI Using black-box performance models to detect performance regressions
   under varying workloads: an empirical study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Performance regression; Black-box performance models; Field workloads;
   Performance engineering
AB Performance regressions of large-scale software systems often lead to both financial and reputational losses. In order to detect performance regressions, performance tests are typically conducted in an in-house (non-production) environment using test suites with predefined workloads. Then, performance analysis is performed to check whether a software version has a performance regression against an earlier version. However, the real workloads in the field are constantly changing, making it unrealistic to resemble the field workloads in predefined test suites. More importantly, performance testing is usually very expensive as it requires extensive resources and lasts for an extended period. In this work, we leverage black-box machine learning models to automatically detect performance regressions in the field operations of large-scale software systems. Practitioners can leverage our approaches to complement or replace resource-demanding performance tests that may not even be realistic in a fast-paced environment. Our approaches use black-box models to capture the relationship between the performance of a software system (e.g., CPU usage) under varying workloads and the runtime activities that are recorded in the readily-available logs. Then, our approaches compare the black-box models derived from the current software version with an earlier version to detect performance regressions between these two versions. We performed empirical experiments on two open-source systems and applied our approaches on a large-scale industrial system. Our results show that such black-box models can effectively and timely detect real performance regressions and injected ones under varying workloads that are unseen when training these models. Our approaches have been adopted in practice to detect performance regressions of a large-scale industry system on a daily basis.
C1 [Liao, Lizhi; Chen, Jinfu; Zeng, Yi; Shang, Weiyi] Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ, Canada.
   [Li, Heng] Polytech Montreal, Dept Genie Informat & Genie Logiciel, Montreal, PQ, Canada.
   [Guo, Jianmei] Alibaba Grp, Hangzhou, Zhejiang, Peoples R China.
   [Sporea, Catalin; Toma, Andrei; Sajedi, Sarah] ERA Environm Management Solut, Montreal, PQ, Canada.
C3 Concordia University - Canada; Universite de Montreal; Polytechnique
   Montreal; Alibaba Group
RP Liao, LZ (corresponding author), Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ, Canada.
EM l_lizhi@encs.concordia.ca; fu_chen@encs.concordia.ca;
   heng.li@polymtl.ca; ze_yi@encs.concordia.ca; shang@encs.concordia.ca;
   jianmei.gjm@alibaba-inc.com; steve.sporea@era-ehs.com;
   andrei.toma@era-ehs.com; sarah.sajedi@era-ehs.com
RI Toma, Andrei N/K-2483-2012; sajedi, sarah/ABE-2024-2020; Liao,
   Lizhi/HNB-9278-2023; Sajedi, Sarah/KGL-3269-2024
OI Liao, Lizhi/0000-0001-9920-5855; Sajedi, Sarah/0000-0002-7900-2812
CR [Anonymous], 2018, PACKAGE RANDOMFOREST
   Apache James, 2019, PROJECT APACHE JAMES
   Barclay L, 2019, VIRUSES-BASEL, V11, DOI 10.3390/v11060535
   Barna C., 2011, Proceedings of the 8th ACM International Conference on Autonomic Computing - ICAC'11, P91
   Benesty J, 2009, SPRINGER TOP SIGN PR, V2, P1, DOI 10.1007/978-3-642-00296-0_1
   Chen TH, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P666, DOI 10.1145/2950290.2950303
   Cliff N., 2014, Ordinal Methods for Behavioral Data Analysis
   Cohen AE, 2005, INT CONF ACOUST SPEE, P105
   Cohen I, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDE '04), P231
   Cortez E, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P153, DOI 10.1145/3132747.3132772
   Dacrema MF, 2019, RECSYS 2019: 13TH ACM CONFERENCE ON RECOMMENDER SYSTEMS, P101, DOI 10.1145/3298689.3347058
   de Oliveira AB, 2013, ACM SIGPLAN NOTICES, V48, P207, DOI 10.1145/2499368.2451140
   Didona D., 2015, P 6 ACM SPEC INT C P, P145, DOI DOI 10.1145/2668930.2688047
   Farshchi M, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P24, DOI 10.1109/ISSRE.2015.7381796
   Foo King Chun, 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P32, DOI 10.1109/QSIC.2010.35
   Foo KC, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P159, DOI 10.1109/ICSE.2015.144
   Gao RY, 2016, IEEE INT CONF SOFTW, P22, DOI 10.1109/ICST.2016.9
   Ghaith S, 2016, SOFTW TEST VERIF REL, V26, P4, DOI 10.1002/stvr.1573
   Greenberg A, 2009, ACM SIGCOMM COMP COM, V39, P68, DOI 10.1145/1496091.1496103
   Guo JM, 2018, EMPIR SOFTW ENG, V23, P1826, DOI 10.1007/s10664-017-9573-6
   Guo JM, 2013, IEEE INT CONF AUTOM, P301, DOI 10.1109/ASE.2013.6693089
   He SL, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P60, DOI 10.1145/3236024.3236083
   Ibidunmoye O, 2015, ACM COMPUT SURV, V48, DOI 10.1145/2791120
   Jiang ZM, 2015, IEEE T SOFTWARE ENG, V41, P1091, DOI 10.1109/TSE.2015.2445340
   Jiang ZM, 2009, PROC IEEE INT CONF S, P125, DOI 10.1109/ICSM.2009.5306331
   Krasic C, 2007, PROC SPIE, V6504, DOI 10.1117/12.705735
   Krishnamurthy D, 2006, IEEE T SOFTWARE ENG, V32, P868, DOI 10.1109/TSE.2006.106
   Lazowska Edward D, 1984, Quantitative system performance: computer system analysis using queueing network models
   Lim MH, 2014, IEEE DATA MINING, P320, DOI 10.1109/ICDM.2014.96
   Malik H, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1012, DOI 10.1109/ICSE.2013.6606651
   Malik H, 2010, EUR CON SFTWR MTNCE, P222, DOI 10.1109/CSMR.2010.39
   Nachar N, 2008, TUTOR QUANT METHODS, V4, P13, DOI 10.20982/tqmp.04.1.p013
   Nguyen THD, 2011, ASIA PAC SOFWR ENG, P282, DOI [10.1109/APSC.2011.59, 10.1109/APSEC.2011.59]
   Nguyen ThanhHD., 2012, P 3 ACMSPEC INT C PE, P299
   Petkovich J., 2017, P 8 ACM SPEC INT C P, P39, DOI [10.1145/3030207.3030216, DOI 10.1145/3030207.3030216]
   Pidstat, 2019, REPORT STAT TASKS LI
   Romano J, 2006, ANN M FLOR ASS I RES, P1
   Alcocer JPS, 2016, ACM SIGPLAN NOTICES, V51, P129, DOI [10.1145/2816707.2816718, 10.1145/2936313.2816718]
   Sato D., 2014, CANARY RELEASE
   Shang Weiyi., 2015, P 6 ACMSPEC INT C PE, P15
   Sullivan Gail M, 2012, J Grad Med Educ, V4, P279, DOI 10.4300/JGME-D-12-00156.1
   Syer MD, 2017, AUTOMAT SOFTW ENG, V24, P189, DOI 10.1007/s10515-016-0196-8
   Syer MD, 2013, PROC IEEE INT CONF S, P110, DOI 10.1109/ICSM.2013.22
   Syer MD., 2014, ICPE, V14, P259
   Syncsort, 2018, WHIT PAP ASS FIN IMP
   Tan JQ, 2010, INT CON DISTR COMP S, DOI 10.1109/ICDCS.2010.63
   Weyuker EJ, 2000, IEEE T SOFTWARE ENG, V26, P1147, DOI 10.1109/32.888628
   Xiong ZL, 2013, ULTRA-HIGH PERFORMANCE LIQUID CHROMATOGRAPHY AND ITS APPLICATIONS, P271
   Xu W, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P117
   Xu Y, 2015, KDD'15: PROCEEDINGS OF THE 21ST ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P2227, DOI 10.1145/2783258.2788602
   Yadwadkar NeerajaJ., 2010, 8th USENIX Conference on File and Storage Technologies, San Jose, CA, USA, February 23-26, 2010, P183
   Yao KD, 2018, PROCEEDINGS OF THE 2018 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE '18), P127, DOI 10.1145/3184407.3184416
   Zhenhuan Gong, 2010, 6th International Conference on Network and Service Management (CNSM 2010), P9, DOI 10.1109/CNSM.2010.5691343
   Zhou ML, 2019, ASIA PAC SOFWR ENG, P252, DOI 10.1109/APSEC48747.2019.00042
NR 54
TC 11
Z9 11
U1 0
U2 10
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2020
VL 25
IS 5
BP 4130
EP 4160
DI 10.1007/s10664-020-09866-z
EA AUG 2020
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NJ1FD
UT WOS:000563602900003
DA 2024-07-18
ER

PT J
AU Storey, MA
   Ernst, NA
   Williams, C
   Kalliamvakou, E
AF Storey, Margaret-Anne
   Ernst, Neil A.
   Williams, Courtney
   Kalliamvakou, Eirini
TI The who, what, how of software engineering research: a socio-technical
   framework
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Empirical methods; Human studies; Software engineering; Meta-research;
   Survey
AB Software engineering is a socio-technical endeavor, and while many of our contributions focus on technical aspects, human stakeholders such as software developers are directly affected by and can benefit from our research and tool innovations. In this paper, we question how much of our research addresses human and social issues, and explore how much we study human and social aspects in our research designs. To answer these questions, we developed a socio-technical research framework to capture the main beneficiary of a research study (thewho), the main type of research contribution produced (thewhat), and the research strategies used in the study (howwe methodologically approach delivering relevant results given thewhoandwhatof our studies). We used this Who-What-How framework to analyze 151 papers from two well-cited publishing venues-the main technical track at the International Conference on Software Engineering, and the Empirical Software Engineering Journal by Springer-to assess how much this published research explicitly considers human aspects. We find that although a majority of these papers claim the contained research should benefit human stakeholders, most focus predominantly on technical contributions. Although our analysis is scoped to two venues, our results suggest a need for more diversification and triangulation of research strategies. In particular, there is a need for strategies that aim at a deeper understanding of human and social aspects of software development practice to balance the design and evaluation of technical innovations. We recommend that the framework should be used in the design of future studies in order to steer software engineering research towards explicitly including human and social concerns in their designs, and to improve the relevance of our research for human stakeholders.
C1 [Storey, Margaret-Anne; Ernst, Neil A.; Williams, Courtney; Kalliamvakou, Eirini] Univ Victoria, Victoria, BC, Canada.
C3 University of Victoria
RP Storey, MA (corresponding author), Univ Victoria, Victoria, BC, Canada.
EM mstorey@uvic.ca; nernst@uvic.ca; courtneyelwilliams@gmail.com;
   ikaliam@uvic.ca
RI Ernst, Neil/M-3065-2017
OI Ernst, Neil/0000-0001-5992-2366
FU Natural Sciences and Engineering Research Council of Canada (NSERC)
FX We would like to thank Cassandra Petrachenko, Alexey Zagalsky and
   Soroush Yousefi for their invaluable help with this paper and research.
   We also thank Marian Petre and the anonymous reviewers for their
   insightful suggestions to improve our paper. We also acknowledge the
   support of the Natural Sciences and Engineering Research Council of
   Canada (NSERC).
CR [Anonymous], 1987, Peopleware: Productive Projects and Teams
   [Anonymous], 1995, HUMAN COMPUTER INTER
   [Anonymous], 1980, WINTHROP COMPUTER SY
   Aranda J, 2009, PROC INT CONF SOFTW, P298, DOI 10.1109/ICSE.2009.5070530
   Barik T, 2017, PROC INT CONF SOFTW, P575, DOI 10.1109/ICSE.2017.59
   Bezemer CP, 2017, EMPIR SOFTW ENG, V22, P3117, DOI 10.1007/s10664-017-9510-8
   Bird C, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P1, DOI 10.1109/MSR.2009.5069475
   Brooks Frederick P., 1995, The mythical man-month
   Charpentier A, 2017, EMPIR SOFTW ENG, V22, P235, DOI 10.1007/s10664-015-9419-z
   Christakis M, 2017, PROC INT CONF SOFTW, P586, DOI 10.1109/ICSE.2017.60
   Cruz Armando, 2012, Collaboration and Technology. Proceedings of the 18th International Conference, CRIWG 2012, P41, DOI 10.1007/978-3-642-33284-5_4
   Denzin N.K., 1978, RES ACT THEORETICAL
   Dittrich Y, 2007, QUALITATIVE SOFTWARE, V49
   Dyba T, 2011, QUALITATIVE RES SOFT
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Engstrom E, 2019, ARXIVABS190412742
   Faitelson D, 2017, PROC INT CONF SOFTW, P735, DOI 10.1109/ICSE.2017.73
   Felderer M, 2019, EVOLUTION EMPIRICAL
   Feldt R., 2008, INT WORKSHOP COOPERA, P49, DOI DOI 10.1145/1370114.1370127
   Fernández DM, 2017, EMPIR SOFTW ENG, V22, P2298, DOI 10.1007/s10664-016-9451-7
   Gueheneuc Y.G., 2019, HDB SOFTWARE ENG, P285
   Hassan AE, 2008, 2008 FRONTIERS OF SOFTWARE MAINTENANCE, P48, DOI 10.1109/FOSM.2008.4659248
   Heikkilä VT, 2017, EMPIR SOFTW ENG, V22, P2892, DOI 10.1007/s10664-016-9491-z
   Hoda R, 2017, PROC INT CONF SOFTW, P141, DOI 10.1109/ICSE.2017.21
   Jiang H, 2017, PROC INT CONF SOFTW, P712, DOI 10.1109/ICSE.2017.71
   Joblin M, 2017, PROC INT CONF SOFTW, P164, DOI 10.1109/ICSE.2017.23
   Kafali ÖO, 2017, PROC INT CONF SOFTW, P530, DOI 10.1109/ICSE.2017.55
   Kalliamvakou E, 2014, INT WORK C MIN SOFTW, DOI 10.1145/2597073.2597074
   Kirk J. L., 1986, Reliability and validity in qualitative research
   Kitchenham BA, 2008, Guide to advanced empirical software engineering, P63, DOI [DOI 10.1007/978-1-84800-044-5_3, 10.1007/ 978-1-84800-044-5_3]
   Kitchenham B, 2017, EMPIR SOFTW ENG, V22, P579, DOI 10.1007/s10664-016-9437-5
   Kontio J., 2008, Guide to Advanced Empirical Software Engineering, P93, DOI [DOI 10.1007/978-1-84800-044-5_4, 10.1007/978-1-84800-044-54, DOI 10.1007/978-1-84800-044-54]
   Lanza M, 2016, IEEE SOFTWARE, V33, P102, DOI 10.1109/MS.2016.156
   Lenberg P., 2017, ARXIV171208341
   Lenberg P, 2014, P 7 INT WORKSH COOP, P48, DOI DOI 10.1145/2593702.2593711
   Lenberg P, 2017, EMPIR SOFTW ENG, V22, P2179, DOI 10.1007/s10664-016-9482-0
   Lex A, 2014, IEEE T VIS COMPUT GR, V20, P1983, DOI 10.1109/TVCG.2014.2346248
   Li MH, 2017, PROC INT CONF SOFTW, P335, DOI 10.1109/ICSE.2017.38
   Lin Y, 2017, PROC INT CONF SOFTW, P393, DOI 10.1109/ICSE.2017.43
   McGrath J. E., 1995, Readings in Human-Computer Interaction, P152, DOI [10.1016/B978-0-08-051574-8.50019-4, DOI 10.1016/B978-0-08-051574-8.50019-4]
   Miles M. B., 1984, Qualitative data analysis: An expanded sourcebook
   Mkaouer MW, 2017, EMPIR SOFTW ENG, V22, P894, DOI 10.1007/s10664-016-9426-8
   Onwuegbuzie AJ, 2007, QUAL QUANT, V41, P105, DOI 10.1007/s11135-005-1098-1
   Rojas JM, 2017, PROC INT CONF SOFTW, P677, DOI 10.1109/ICSE.2017.68
   Roller M.R., 2015, APPL QUALITATIVE RES
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Runkel P. J., 1972, RES HUMAN BEHAV
   Seaman C.B., 2008, Guide to Advanced Empirical Software Engineering, P35, DOI [10.1007/978-1-84800-044-52, DOI 10.1007/978-1-84800-044-52]
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Sharp H, 2016, IEEE T SOFTWARE ENG, V42, P786, DOI 10.1109/TSE.2016.2519887
   Shaw M, 2003, PROC INT CONF SOFTW, P726, DOI 10.1109/ICSE.2003.1201262
   Singer J, 2002, IEEE T SOFTWARE ENG, V28, P1171, DOI 10.1109/TSE.2002.1158289
   Singer Janice, 2008, Guide to Advanced Empirical Software Engineering, P9
   Stol KJ, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3241743
   Stol KJ, 2016, PROC INT CONF SOFTW, P120, DOI 10.1145/2884781.2884833
   Stol KJ, 2015, IEEE-ACM INT WKSP CO, P47, DOI 10.1109/CESI.2015.15
   Theisen C, 2017, PROC IEEE ACM INT C, P402, DOI 10.1109/ICSE-C.2017.51
   Weinberg G.M, 1985, The Psychology of Computer Programming
   Whitaker K., 2019, ARXIV190702565
   Whitworth Brian., 2009, HDB RES SOCIOTECHNIC, P2, DOI [DOI 10.4018/978-1-60566-264-0, 10.4018/978-1-60566-264-0]
   Williams C, 2019, THESIS
   Zelkowitz MV, 2007, LECT NOTES COMPUT SC, V4336, P4
NR 62
TC 39
Z9 40
U1 1
U2 9
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2020
VL 25
IS 5
BP 4097
EP 4129
DI 10.1007/s10664-020-09858-z
EA AUG 2020
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NJ1FD
UT WOS:000563602900002
DA 2024-07-18
ER

PT J
AU Aktas, EU
   Yilmaz, C
AF Aktas, Ethem Utku
   Yilmaz, Cemal
TI Automated issue assignment: results and insights from an industrial case
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Bug triaging; Issue report assignment; Text classification; Accountable
   machine learning; Change point detection
ID BUG; ACCURATE
AB We automate the process of assigning issue reports to development teams by using data mining approaches and share our experience gained by deploying the resulting system, calledIssueTAG, atSofttech. Being a subsidiary of the largest private bank in Turkey, Softtech on average receives 350 issue reports daily from the field, which need to be handled with utmost importance and urgency. IssueTAG has been making all the issue assignments at Softtech since its deployment on Jan 12, 2018. Deploying IssueTAG presented us not only with an unprecedented opportunity to observe the practical effects of automated issue assignment, but also with an opportunity to carry out user studies, both of which (to the best of our knowledge) have not been done before in this context. We first empirically determine the data mining approach to be used in IssueTAG. We then deploy IssueTAG and make a number of valuable observations. First, it is not just about deploying a system for automated issue assignment, but also about designing/changing the assignment process around the system. Second, the accuracy of the assignments does not have to be higher than that of manual assignments in order for the system to be useful. Third, deploying such a system requires the development of additional functionalities, such as creating human-readable explanations for the assignments and detecting deteriorations in assignment accuracies, for both of which we have developed and empirically evaluated different approaches. Last but not least, stakeholders do not necessarily resist change and gradual transition helps build confidence.
C1 [Aktas, Ethem Utku] Softtech Inc, Ctr Res & Dev, TR-34947 Istanbul, Turkey.
   [Yilmaz, Cemal] Sabanci Univ, Fac Engn & Nat Sci, TR-34956 Istanbul, Turkey.
C3 Sabanci University
RP Aktas, EU (corresponding author), Softtech Inc, Ctr Res & Dev, TR-34947 Istanbul, Turkey.
EM utku.aktas@softtech.com.tr; cyilmaz@sabanciuniv.edu
RI Aktas, Ethem Utku/AAM-5377-2021; Yilmaz, Cemal/AAY-4500-2020
OI Aktas, Ethem Utku/0000-0001-9522-5357; Yilmaz, Cemal/0000-0003-4124-2295
CR Ahsan SN, 2009, 2009 FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING ADVANCES (ICSEA 2009), P216, DOI 10.1109/ICSEA.2009.92
   Alenezi Mamdouh, 2013, Journal of Software, V8, P2185, DOI 10.4304/jsw.8.9.2185-2190
   Antoniol G, 2008, P 2008 C CTR ADV STU, P304
   Anvik J, 2007, THESIS
   Anvik J, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000794
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Baysal O, 2009, INT C PROGRAM COMPRE, P297, DOI 10.1109/ICPC.2009.5090066
   Bettenburg N, 2008, PROC IEEE INT CONF S, P337, DOI 10.1109/ICSM.2008.4658082
   Bhattacharya P, 2012, J SYST SOFTWARE, V85, P2275, DOI 10.1016/j.jss.2012.04.053
   Bishop Christopher M, 2006, PATTERN RECOGN, V128, P1
   Blewitt ME, 2008, NAT GENET, V40, P663, DOI 10.1038/ng.142
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   CANFORA G, 2006, P 2006 ACM S APPL CO, P1767, DOI DOI 10.1145/1141277.1141693
   Dedik V, 2016, 2016 42ND EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P363, DOI 10.1109/SEAA.2016.20
   Giger E., 2010, P 2 INT WORKSH REC S, P52
   Helming J, 2010, INT C EV NOV APPR SO, P236
   Hocking TD, 2013, BMC BIOINFORMATICS, V14, DOI 10.1186/1471-2105-14-164
   Jalbert N, 2008, I C DEPEND SYS NETWO, P52, DOI 10.1109/DSN.2008.4630070
   Jeong G, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P111, DOI 10.1145/1595696.1595715
   Joachims Thorsten, 1998, EUROPEAN C MACHINE L, P137, DOI 10.1007/
   Jonsson L, 2016, EMPIR SOFTW ENG, V21, P1533, DOI 10.1007/s10664-015-9401-9
   Just S., 2008, P 16 ACM SIGSOFT INT, P308
   Kagdi H, 2012, J SOFTW-EVOL PROC, V24, P3, DOI 10.1002/smr.530
   Killick R, 2012, J AM STAT ASSOC, V107, P1590, DOI 10.1080/01621459.2012.737745
   Lamkanfi A, 2010, 2010 7 IEEE WORK C M, P1
   Lavielle M., 2007, Long Memory in Economics
   Liguo Chen, 2011, Journal of Software, V6, P421, DOI 10.4304/jsw.6.3.421-427
   Lin ZP, 2009, INT SYMP EMP SOFTWAR, P452
   Linares-Vásquez M, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P451, DOI 10.1109/ICSM.2012.6405306
   Manning C. D., 2010, NAT LANG ENG, V16, P100, DOI DOI 10.1017/S1351324909005129
   Matter D, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P131, DOI 10.1109/MSR.2009.5069491
   Menzies T, 2008, PROC IEEE INT CONF S, P346, DOI 10.1109/ICSM.2008.4658083
   Murphy G., 2004, P 16 INT C SOFTW ENG, P1
   Nagwani N. K., 2011, 2011 Proceedings of 9th International Conference on ICT and Knowledge Engineering (ICT & Knowledge Engineering 2011) - Conference postponed to 2012, P113, DOI 10.1109/ICTKE.2012.6152388
   Pandey N, 2017, INNOV SYST SOFTW ENG, V13, P279, DOI 10.1007/s11334-017-0294-1
   Park J.-w., 2011, Costriage: a cost-aware triage algorithm for bug reporting systems, V25, P139, DOI DOI 10.1609/AAAI.V25I1.7839
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Podgurski A, 2003, PROC INT CONF SOFTW, P465, DOI 10.1109/ICSE.2003.1201224
   Pressman R.S., 2005, Software engineering: a Practitioner's Approach
   Raschka S., 2018, J. Open Source Softw., V3, P638, DOI DOI 10.21105/JOSS.00638
   Ribeiro MT, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1135, DOI 10.1145/2939672.2939778
   Shokripour R, 2012, INT CONF ADV COMPUT, P144, DOI 10.1109/ACSAT.2012.56
   Tamrawi A, 2011, P 19 ACM SIGSOFT S 1, P365, DOI [DOI 10.1145/2025113.2025163, 10.31274/etd-180810-1814, DOI 10.31274/ETD-180810-1814]
   Ting KM, 1999, J ARTIF INTELL RES, V10, P271, DOI 10.1613/jair.594
   Truong C., 2018, ARXIV180100718
   Truong Charles, 2018, ARXIV180100826
   Wang XY, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P461, DOI 10.1145/1368088.1368151
   Weiss C, 2007, P 4 INT WORKSH MIN S, P1, DOI [10.1109/MSR.2007.13, DOI 10.1109/MSR.2007.13]
   WOLPERT DH, 1992, NEURAL NETWORKS, V5, P241, DOI 10.1016/S0893-6080(05)80023-1
   Wu WJ, 2011, ASIA PAC SOFWR ENG, P389, DOI 10.1109/APSEC.2011.15
   Xia X, 2013, WORK CONF REVERSE EN, P72, DOI 10.1109/WCRE.2013.6671282
   Xie X, 2012, P 8 INT C PRED MOD S, P19, DOI [DOI 10.1145/2365324.2365329, 10.1145/2365324.2365329]
   Zhang HY, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1042, DOI 10.1109/ICSE.2013.6606654
NR 53
TC 10
Z9 11
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2020
VL 25
IS 5
BP 3544
EP 3589
DI 10.1007/s10664-020-09846-3
EA JUL 2020
PG 46
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NJ1FD
UT WOS:000546871000001
DA 2024-07-18
ER

PT J
AU Higo, Y
   Hayashi, S
   Hata, H
   Nagappan, M
AF Higo, Yoshiki
   Hayashi, Shinpei
   Hata, Hideaki
   Nagappan, Meiyappan
TI Ammonia: an approach for deriving project-specific bug patterns
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Pattern mining; Change patterns; Project-specific bug patterns; Fix
   recommendation
AB Finding and fixing buggy code is an important and cost-intensive maintenance task, and static analysis (SA) is one of the methods developers use to perform it. SA tools warn developers about potential bugs by scanning their source code for commonly occurring bug patterns, thus giving those developers opportunities to fix the warnings (potential bugs) before they release the software. Typically, SA tools scan for general bug patterns that are common to any software project (such as null pointer dereference), and not for project specific patterns. However, past research has pointed to this lack of customizability as a severe limiting issue in SA. Accordingly, in this paper, we propose an approach called Ammonia, which is based on statically analyzing changes across the development history of a project, as a means to identify project-specific bug patterns. Furthermore, the bug patterns identified by our tool do not relate to just one developer or one specific commit, they reflect the project as a whole and compliment the warnings from other SA tools that identify general bug patterns. Herein, we report on the application of our implemented tool and approach to four Java projects: Ant, Camel, POI, and Wicket. The results obtained show that our tool could detect 19 project specific bug patterns across those four projects. Next, through manual analysis, we determined that six of those change patterns were actual bugs and submitted pull requests based on those bug patterns. As a result, five of the pull requests were merged.
C1 [Higo, Yoshiki] Osaka Univ, Grad Sch Informat Sci & Technol, 1-5 Yamadaoka, Suita, Osaka 5650871, Japan.
   [Hayashi, Shinpei] Tokyo Inst Technol, Sch Comp, Meguro Ku, Ookayama 2-12-1-W8-71, Tokyo 1528550, Japan.
   [Hata, Hideaki] Nara Inst Sci & Technol, Grad Sch Sci & Technol, 8916-5 Takayama Cho, Ikoma, Nara 6300192, Japan.
   [Nagappan, Meiyappan] Univ Waterloo, Cheriton Sch Comp Sci, 200 Univ Ave West, Waterloo, ON, Canada.
C3 Osaka University; Tokyo Institute of Technology; Nara Institute of
   Science & Technology; University of Waterloo
RP Higo, Y (corresponding author), Osaka Univ, Grad Sch Informat Sci & Technol, 1-5 Yamadaoka, Suita, Osaka 5650871, Japan.
EM higo@ist.osaka-u.ac.jp; hayashi@c.titech.ac.jp; hata@is.naist.jp;
   mei.nagappan@uwaterloo.ca
RI Hata, Hideaki/GQB-2557-2022; Hata, Hideaki/N-7103-2019
OI Hata, Hideaki/0000-0003-0708-5222; Hayashi, Shinpei/0000-0001-7988-7772;
   Higo, Yoshiki/0000-0002-8278-8975
CR [Anonymous], 2006, Proceedings of the 14th ACM SIGSOFT international symposium on Foundations of software engineering (SIGSOFT '06/FSE-14), DOI 10.1145/1181775.1181781
   [Anonymous], 2011, Proceedings of the 19th ACM SIGSOFT Symposium and the 13th European Conference on Foundations of Software Engineering, DOI [DOI 10.1145/2025113.2025185, 10.1145/2025113.2025185]
   Avgustinov P, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P437, DOI 10.1109/ICSE.2015.62
   Ayewah N., 2010, Proceedings of the 19th international symposium on Software testing and analysis, P241
   Barr ET, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P306, DOI 10.1145/2635868.2635898
   Carlson B, 2019, IFIP ADV INF COMM TE, V556, P12, DOI 10.1007/978-3-030-20883-7_2
   Dang YN, 2012, 28TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2012), P369
   Falleri Jean-Remy, 2014, P 29 ACM IEEE INT C, P313
   Fluri Beat, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P463, DOI 10.1109/ASE.2008.74
   Fluri B, 2007, IEEE T SOFTWARE ENG, V33, P725, DOI 10.1109/TSE.2007.70731
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Hanam Q, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P144, DOI 10.1145/2950290.2950308
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Higo Y, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P222, DOI 10.1109/ICSM.2012.6405275
   Nguyen HDT, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P772, DOI 10.1109/ICSE.2013.6606623
   Hoare T, 2009, QCON C
   Inexpensive Program Analysis Group at University of Virginia Department of Computer Science, 2010, SPLINT SEC PROGR LIN
   Inoue K, 2012, INT CONF ACOUST SPEE, P949, DOI 10.1109/ICASSP.2012.6288042
   Johnson B, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P672, DOI 10.1109/ICSE.2013.6606613
   Kagdi H., 2006, P 2006 INT WORKSH MI, P47, DOI [DOI 10.1145/1137983.1137996, 10.1145/1137983.1137996]
   Ke YL, 2015, IEEE INT CONF AUTOM, P295, DOI 10.1109/ASE.2015.60
   Kim D, 2011, IEEE T SOFTWARE ENG, V37, P430, DOI 10.1109/TSE.2011.20
   Kim M, 2009, PROC INT CONF SOFTW, P309, DOI 10.1109/ICSE.2009.5070531
   Kim S, 2005, WCRE: 12TH WORKING CONFERENCE ON REVERSE ENGINEERING 2005, PROCEEDINGS, P143
   Le Goues C, 2012, IEEE T SOFTWARE ENG, V38, P54, DOI 10.1109/TSE.2011.104
   Le Goues C, 2015, IEEE T SOFTWARE ENG, V41, P1236, DOI 10.1109/TSE.2015.2454513
   Li Zhenmin, 2005, P ACM SIGSOFT SOFTW, P306, DOI DOI 10.1145/1081706.1081755
   Li ZM, 2006, IEEE T SOFTWARE ENG, V32, P176, DOI 10.1109/TSE.2006.28
   Liang B, 2016, PROC INT CONF SOFTW, P333, DOI 10.1145/2884781.2884870
   Liang G., 2013, Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering, P565
   Liu K, 2021, IEEE T SOFTWARE ENG, V47, P165, DOI 10.1109/TSE.2018.2884955
   Livshits V.B., 2005, ESEC SIGSOFT FSE, P296, DOI [DOI 10.1145/1095430.1081754, DOI 10.1145/1081706.1081754]
   Loh A., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P263, DOI 10.1145/1810295.1810348
   Long F, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P166, DOI 10.1145/2786805.2786811
   Mahouachi R., 2013, P 15 ANN C COMPANION, P205, DOI [10.1145/2464576.2464680, DOI 10.1145/2464576.2464680]
   Mechtaev S, 2016, PROC INT CONF SOFTW, P691, DOI 10.1145/2884781.2884807
   Meng N, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P502, DOI 10.1109/ICSE.2013.6606596
   Murakami H, 2013, CONF PROC INT SYMP C, P93, DOI 10.1109/ICPC.2013.6613837
   Nguyen Tien N, 2010, Proceedings of the 32Nd ACM/IEEE International Conference on Software Engineering-Volume 1, ICSE '10, P315
   Rahman F, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P424, DOI 10.1145/2568225.2568269
   Ray B, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P34, DOI 10.1109/MSR.2015.11
   Ray B, 2013, IEEE INT CONF AUTOM, P367, DOI 10.1109/ASE.2013.6693095
   Rigby PC, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P541
   Roy CK, 2008, INT C PROGRAM COMPRE, P172, DOI 10.1109/ICPC.2008.41
   Sadowski C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P598, DOI 10.1109/ICSE.2015.76
   Shang WY, 2015, EMPIR SOFTW ENG, V20, P1, DOI 10.1007/s10664-013-9274-8
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Xie T, 2016, SOFTWARE TESTING RES
   Xing ZC, 2006, WORK CONF REVERSE EN, P263
   Zhivich M, 2009, IEEE SECUR PRIV, V7, P87, DOI 10.1109/MSP.2009.56
   Zhong H, 2009, LECT NOTES COMPUT SC, V5653, P318, DOI 10.1007/978-3-642-03013-0_15
   Zimmermann T, 2005, IEEE T SOFTWARE ENG, V31, P429, DOI 10.1109/TSE.2005.72
   2010, NANOWIRES, P1
NR 53
TC 4
Z9 4
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAY
PY 2020
VL 25
IS 3
SI SI
BP 1951
EP 1979
DI 10.1007/s10664-020-09807-w
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LL7FD
UT WOS:000531720100007
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Agrawal, A
   Menzies, T
   Minku, LL
   Wagner, M
   Yu, Z
AF Agrawal, Amritanshu
   Menzies, Tim
   Minku, Leandro L.
   Wagner, Markus
   Yu, Zhe
TI Better software analytics via "DUO": Data mining algorithms
   using/used-by optimizers
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software analytics; Data mining; Optimization; Evolutionary algorithms
ID GENETIC ALGORITHM; EVOLUTIONARY ALGORITHM; DEFECT PREDICTION; MODELS;
   OPTIMIZATION; SELECTION; FRAMEWORK; MACHINE
AB This paper claims that a new field of empirical software engineering research and practice is emerging: data mining using/used-by optimizers for empirical studies, or DUO. For example, data miners can generate models that are explored by optimizers. Also, optimizers can advise how to best adjust the control parameters of a data miner. This combined approach acts like an agent leaning over the shoulder of an analyst that advises "ask this question next" or "ignore that problem, it is not relevant to your goals". Further, those agents can help us build "better" predictive models, where "better" can be either greater predictive accuracy or faster modeling time (which, in turn, enables the exploration of a wider range of options). We also caution that the era of papers that just use data miners is coming to an end. Results obtained from an unoptimized data miner can be quickly refuted, just by applying an optimizer to produce a different (and better performing) model. Our conclusion, hence, is that for software analytics it is possible, useful and necessary to combine data mining and optimization using DUO.
C1 [Agrawal, Amritanshu; Menzies, Tim; Yu, Zhe] North Carolina State Univ, Dept Comp Sci, Raleigh, NC USA.
   [Minku, Leandro L.] Univ Birmingham, Sch Comp Sci, Birmingham, W Midlands, England.
   [Wagner, Markus] Univ Adelaide, Sch Comp Sci, Adelaide, SA, Australia.
C3 North Carolina State University; University of Birmingham; University of
   Adelaide
RP Minku, LL (corresponding author), Univ Birmingham, Sch Comp Sci, Birmingham, W Midlands, England.
EM l.l.minku@cs.bham.ac.uk; markus.wagner@adelaide.edu.au; zyu9@ncsu.edu
RI Wagner, Markus/HZM-6101-2023; Agrawal, Amritanshu/R-7093-2019; Menzies,
   Tim/X-7680-2019
OI Agrawal, Amritanshu/0000-0002-1220-8533; Menzies,
   Tim/0000-0002-5040-3196; Minku, Leandro/0000-0002-2639-0671; Wagner,
   Markus/0000-0002-3124-0061; Yu, Zhe/0000-0002-6841-1725
FU NSF [1703487]; EPSRC [EP/R006660/1, EP/R006660/2]; ARC [DE160100850];
   EPSRC [EP/R006660/2, EP/R006660/1] Funding Source: UKRI
FX Earlier work ultimately leading to the present one was inspired by the
   NII Shonan Meeting on Data-Driven Search-based Software Engineering
   (goo.gl/f8D3EC), December 11-14, 2017. We thank the organizers of that
   workshop (Markus Wagner, Leandro L. Minku, Ahmed E. Hassan, and John
   Clark) for their academic leadership and inspiration. Dr Menzies' work
   was partially supported by NSF grant No. 1703487. Dr Minku's work was
   partially supported by EPSRC grant Nos. EP/R006660/1 and EP/R006660/2.
   Dr Wagner's work was partially supported by the ARC grant DE160100850.
CR Afzal W, 2011, EXPERT SYST APPL, V38, P11984, DOI 10.1016/j.eswa.2011.03.041
   Agrawal Amritanshu, 2018, 2018 IEEE/ACM 40th International Conference on Software Engineering (ICSE). Proceedings, P1050, DOI 10.1145/3180155.3180197
   Agrawal A, 2018, INFORM SOFTWARE TECH, V98, P74, DOI 10.1016/j.infsof.2018.02.005
   Ali MH, 2018, IEEE ACCESS, V6, P20255, DOI 10.1109/ACCESS.2018.2820092
   Allamanis M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3212695
   Anderson-Cook C.M., 2005, Practical genetic algorithms
   [Anonymous], 1957, THESIS
   [Anonymous], INFORM SOFTWARE TECH
   [Anonymous], ANN SOFTWARE ENG
   [Anonymous], ARXIV180102175
   [Anonymous], 1993, Proceedings of the 13th International Joint Conference on Artificial Intelligence
   [Anonymous], 2017, Information and Software Technology
   [Anonymous], IEEE Transactions on Software Engineering
   Banzhaf W., 1998, GENETIC PROGRAMMING
   Barua A, 2014, EMPIR SOFTW ENG, V19, P619, DOI 10.1007/s10664-012-9231-y
   Ben Abdessalem R, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1016, DOI 10.1145/3180155.3180160
   Bird C., 2015, The Art and Science of Analyzing Software Data
   Bishop Christopher M, 2006, PATTERN RECOGNITION, DOI DOI 10.1117/1.2819119
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   BOYD SP, 2004, SECTION 4 1 OPTIMIZA
   Breiman L, 2001, MACH LEARN, V45, P5, DOI 10.1023/A:1010933404324
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Catal C, 2009, INFORM SCIENCES, V179, P1040, DOI 10.1016/j.ins.2008.12.001
   Chand S., 2015, Surv. Oper. Res. Manag. Sci., V20, P35, DOI [10.1016/j.sorms.2015.08.001, DOI 10.1016/J.SORMS.2015.08.001, DOI 10.1016/J.S0RMS.2015.08.001]
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   CHEN D, 2018, ESEC SIGSOFT FSE
   Chen JF, 2018, INFORM SOFTWARE TECH, V95, P281, DOI 10.1016/j.infsof.2017.08.007
   Chiu NH, 2007, J SYST SOFTWARE, V80, P628, DOI 10.1016/j.jss.2006.06.006
   Clarke J., 2003, IEE Proceedings-Software, V150, P161, DOI 10.1049/ip-sen:20030559
   Cohen W.W., 1995, P 12 INT C MACH LEAR, P115, DOI [DOI 10.1016/B978-1-55860-377-6.50023-2, 10.1016/B978-1-55860-377-6.50023-2]
   de Carvalho AB, 2010, J SYST SOFTWARE, V83, P868, DOI 10.1016/j.jss.2009.12.023
   Rainville FM, 2012, PROCEEDINGS OF THE FOURTEENTH INTERNATIONAL CONFERENCE ON GENETIC AND EVOLUTIONARY COMPUTATION COMPANION (GECCO'12), P85
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   del Sagrado J, 2011, GECCO 11, P241, DOI 10.1145/2001858.2001994
   Deng L, 2013, FOUND TRENDS SIGNAL, V7, pI, DOI 10.1561/2000000039
   Du X, 2015, IEEE C EVOL COMPUTAT, P2129, DOI 10.1109/CEC.2015.7257147
   Durillo JJ, 2011, ADV ENG SOFTW, V42, P760, DOI 10.1016/j.advengsoft.2011.05.014
   Feather MS, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P263, DOI 10.1109/ICRE.2002.1048537
   FISHBURN PC, 1991, J RISK UNCERTAINTY, V4, P113, DOI 10.1007/BF00056121
   Frank E, 2000, MACH LEARN, V41, P5, DOI 10.1023/A:1007670802811
   Freund Y., 1996, INT C MACHINE LEARNI, P148
   Friedrich T, 2018, GECCO'18: PROCEEDINGS OF THE 2018 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P293, DOI 10.1145/3205455.3205515
   Friedrich T, 2018, LECT NOTES COMPUT SC, V11101, P134, DOI 10.1007/978-3-319-99253-2_11
   FU W, 2018, ARXIV180304608
   Fu W., 2016, ARXIV160902613
   Fu W, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P49, DOI 10.1145/3106237.3106256
   Fu W, 2016, INFORM SOFTWARE TECH, V76, P135, DOI 10.1016/j.infsof.2016.04.017
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Glover F, 1998, Handbook of combinatorial optimization, P2093, DOI [DOI 10.1007/978-1-4613-0303-9_33, DOI 10.1007/978-1-4613-0303-933]
   Gondra I, 2008, J SYST SOFTWARE, V81, P186, DOI 10.1016/j.jss.2007.05.035
   Hall M., 2009, SIGKDD EXPLORATIONS, V11, P10, DOI [10.1145/1656274.1656278, DOI 10.1145/1656274.1656278]
   Hall MA, 2003, IEEE T KNOWL DATA EN, V15, P1437, DOI 10.1109/TKDE.2003.1245283
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Hellendoorn VJ, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P724, DOI 10.1145/3236024.3264832
   Henard C, 2015, IEEE ICST WORKSHOP
   Huang SJ, 2008, EUR J OPER RES, V188, P898, DOI 10.1016/j.ejor.2007.07.002
   Huang SJ, 2006, INFORM SOFTWARE TECH, V48, P1034, DOI 10.1016/j.infsof.2005.12.020
   Huang V.L., 2005, Multiobjective differential evolution with external archive and harmonic distance-based diversity measure
   Hutter Frank, 2011, Learning and Intelligent Optimization. 5th International Conference, LION 5. Selected Papers, P507, DOI 10.1007/978-3-642-25566-3_40
   JENSEN IH, 2019, NATURALNESS SOFTWARE
   Jolliffe I., 2011, International Encyclopedia of Statistical Science, P1094, DOI [DOI 10.1007/978-3-642-04898-2_455, 10.1007/978-3-642-04898-2_455]
   Kamei Y, 2016, EMPIR SOFTW ENG, V21, P2072, DOI 10.1007/s10664-015-9400-x
   Kennedy J, 1995, 1995 IEEE INTERNATIONAL CONFERENCE ON NEURAL NETWORKS PROCEEDINGS, VOLS 1-6, P1942, DOI 10.1109/icnn.1995.488968
   Kessentini M, 2016, EMPIR SOFTW ENG, V21, P2456, DOI 10.1007/s10664-016-9474-0
   Kotthoff L, 2016, LECT NOTES COMPUT SC, V10101, P149, DOI 10.1007/978-3-319-50137-6_7
   KOZA JR, 1994, STAT COMPUT, V4, P87, DOI 10.1007/BF00175355
   Krall J, 2015, IEEE T SOFTWARE ENG, V41, P1001, DOI 10.1109/TSE.2015.2432024
   Krishna R, 2019, IEEE T SOFTWARE ENG, V45, P1081, DOI 10.1109/TSE.2018.2821670
   Kuhn M, 2008, J STAT SOFTW, V28, P1, DOI 10.18637/jss.v028.i05
   Kumar KV, 2008, J SYST SOFTWARE, V81, P1853, DOI 10.1016/j.jss.2007.12.793
   Kwiatkowska Marta, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P585, DOI 10.1007/978-3-642-22110-1_47
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Liu Y, 2010, IEEE T SOFTWARE ENG, V36, P852, DOI 10.1109/TSE.2010.51
   Machiwal D, 2006, BIOSYST ENG, V95, P569, DOI 10.1016/j.biosystemseng.2006.08.007
   MAJUMDER S, 2018, ARXIV180205319
   Menzies T, 2016, PERSPECTIVES ON DATA SCIENCE FOR SOFTWARE ENGINEERING, P1
   Menzies T., 2007, P 22 IEEE ACM INT C, P303, DOI [10.1145/1321631.1321676, DOI 10.1145/1321631.1321676]
   MENZIES T, 2013, DATA SCI SOFTWARE EN
   Menzies T, 2019, INFORM SOFTWARE TECH, V112, P35, DOI 10.1016/j.infsof.2019.04.005
   Menzies T, 2018, IEEE SOFTWARE, V35, P64, DOI 10.1109/MS.2018.290111035
   Menzies T, 2013, IEEE SOFTWARE, V30, P31, DOI 10.1109/MS.2013.86
   Minku LL, 2017, AUTOMAT SOFTW ENG, V24, P499, DOI 10.1007/s10515-016-0209-7
   Minku LL, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P446, DOI 10.1145/2568225.2568228
   Minku LL, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2522920.2522928
   Minku LL., 2013, P 9 INT C PRED MOD S, P8, DOI [10.1145/2499393.2499396, DOI 10.1145/2499393.2499396]
   Montañez GD, 2013, 2013 IEEE CONGRESS ON EVOLUTIONARY COMPUTATION (CEC), P3019
   Mori T, 2019, EMPIR SOFTW ENG, V24, P779, DOI 10.1007/s10664-018-9638-1
   NAIR V, 2018, ARXIV180303900
   NAIR V, 2017, ARXIV170205701
   Nair V, 2018, IEEE WORK CONF MIN S, P341, DOI 10.1145/3196398.3196442
   Neshat M, 2018, GECCO'18: PROCEEDINGS OF THE 2018 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1318, DOI 10.1145/3205455.3205492
   Oliveira ALI, 2010, INFORM SOFTWARE TECH, V52, P1155, DOI 10.1016/j.infsof.2010.05.009
   Panichella A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P522, DOI 10.1109/ICSE.2013.6606598
   Pareto V., 1906, MANUALE EC POLITICA, V13
   Pedregosa F, 2011, LEARN RES, V12
   Peters F, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P801, DOI 10.1109/ICSE.2015.92
   Pohl Richard, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P313, DOI 10.1109/ASE.2011.6100068
   Polikar R., 2006, IEEE Circuits and Systems Magazine, V6, P21, DOI 10.1109/MCAS.2006.1688199
   PRAAGMAN J, 1985, EUR J OPER RES, V19, P144, DOI 10.1016/0377-2217(85)90321-2
   Roweis ST, 2000, SCIENCE, V290, P2323, DOI 10.1126/science.290.5500.2323
   Ryu D, 2016, EMPIR SOFTW ENG, V21, P43, DOI 10.1007/s10664-014-9346-4
   Sadiq AS, 2018, IEEE ACCESS, V6, P29041, DOI 10.1109/ACCESS.2018.2835166
   Sarro F., 2012, Proceedings of the 27th Annual ACM Symposium on Applied Computing, SAC '12, P1215, DOI DOI 10.1145/2245276.2231967
   Sarro F, 2012, P 27 ANN ACM S APPL, P1221, DOI DOI 10.1145/2245276.2231968
   Sarro F, 2016, PROC INT CONF SOFTW, P619, DOI 10.1145/2884781.2884830
   Sayyad AS, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P492, DOI 10.1109/ICSE.2013.6606595
   Sayyad AS, 2013, IEEE INT CONF AUTOM, P465, DOI 10.1109/ASE.2013.6693104
   Shen XN, 2018, INFORM SCIENCES, V428, P1, DOI 10.1016/j.ins.2017.10.041
   Steinwart Ingo, 2008, SUPPORT VECTOR MACHI
   Storn R, 1997, J GLOBAL OPTIM, V11, P341, DOI 10.1023/A:1008202821328
   Tantithamthavorn C, 2016, PROC INT CONF SOFTW, P321, DOI 10.1145/2884781.2884857
   Treude Christoph, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P84, DOI 10.1109/MSR.2019.00022
   TU H, 2018, SWAN 2018, P19
   van Gerven M., 2018, ARTIFICIAL NEURAL NE
   Vandecruys O, 2008, J SYST SOFTWARE, V81, P823, DOI 10.1016/j.jss.2007.07.034
   Veerappa V, 2011, INT REQUIR ENG CONF, P89, DOI 10.1109/RE.2011.6051654
   WAGNER M, 2017, NII SHON M 2017 19 D
   Wang Tiantian, 2013, P 2013 9 JOINT M FDN, P455
   WEISE T, 2019, ARXIV180608984
   Wolpert D. H., 1997, IEEE Transactions on Evolutionary Computation, V1, P67, DOI 10.1109/4235.585893
   Wolpert DH, 1996, NEURAL COMPUT, V8, P1341, DOI 10.1162/neco.1996.8.7.1341
   Wu Xinwei, 2016, Shengwu Jiagong Guocheng, V14, P37, DOI 10.3969/j.issn.1672-3678.2016.05.008
   Xia T., 2018, ARXIV180500336
   Xu BW, 2016, IEEE INT CONF AUTOM, P51, DOI 10.1145/2970276.2970357
   Xu TY, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P307, DOI 10.1145/2786805.2786852
   Yu Z, 2018, EMPIR SOFTW ENG, V23, P3161, DOI 10.1007/s10664-017-9587-0
   Zhang F, 2016, PROC INT CONF SOFTW, P309, DOI 10.1145/2884781.2884839
   Zhang QF, 2007, IEEE T EVOLUT COMPUT, V11, P712, DOI 10.1109/TEVC.2007.892759
   Zhong S, 2004, IEEE INTELL SYST, V19, P20, DOI 10.1109/MIS.2004.1274907
   Zitzler E, 2004, LECT NOTES COMPUT SC, V3242, P832
   Zuluaga M., 2013, INT C MACH LEARN, V28, P462
NR 133
TC 12
Z9 13
U1 0
U2 7
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAY
PY 2020
VL 25
IS 3
SI SI
BP 2099
EP 2136
DI 10.1007/s10664-020-09808-9
EA APR 2020
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LL7FD
UT WOS:000528073100001
DA 2024-07-18
ER

PT J
AU Brindescu, C
   Ahmed, I
   Jensen, C
   Sarma, A
AF Brindescu, Caius
   Ahmed, Iftekhar
   Jensen, Carlos
   Sarma, Anita
TI An empirical investigation into merge conflicts and their effect on
   software quality
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Version control; Software merging; Merge conflicts; Software quality;
   Empirical study; Mining software repositories
ID DEFAULTS
AB Merge conflicts are known to cause extra effort for developers, but little is known about their effect on software. While some research has been done, many questions remain. To better understand merge conflicts and their impact we performed an empirical study about the types, frequency, and impact of merge conflicts, where impact is measured in terms of bug fixing commits associated with conflicts. We analyzed 143 open source projects and found that almost 1 in 5 merges cause conflicts. In 75.23% of these cases, a developer needed to reflect on the program logic to resolve it. We also found that the code associated with a merge conflict is twice as likely to have a bug. When the code associated with merge conflicts require manual intervention, the code is 26x more likely to have a bug.
C1 [Brindescu, Caius; Jensen, Carlos; Sarma, Anita] Oregon State Univ, Corvallis, OR 97331 USA.
   [Ahmed, Iftekhar] Univ Calif Irvine, Irvine, CA 92697 USA.
C3 Oregon State University; University of California System; University of
   California Irvine
RP Brindescu, C (corresponding author), Oregon State Univ, Corvallis, OR 97331 USA.
EM brindesc@oregonstate.edu
OI Sarma, Anita/0000-0002-1859-1692; Ahmed, Iftekhar/0000-0001-8221-5352
CR Accioly P, 2018, EMPIR SOFTW ENG, V23, P2051, DOI 10.1007/s10664-017-9586-1
   Ahmed I, 2017, INT SYMP EMP SOFTWAR, P58, DOI 10.1109/ESEM.2017.12
   Ahmed I, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P547, DOI 10.1145/2950290.2950324
   [Anonymous], 1999, CATHEDRAL BAZAAR
   [Anonymous], STATIC CODE ANAL TOO
   [Anonymous], THESIS
   [Anonymous], MAV
   [Anonymous], COMPANION WEBSITE
   [Anonymous], TECH REP
   [Anonymous], 1979, BEHAV TRAVEL MODELLI
   Apel S., 2011, P 19 ACM SIGSOFT S 1, P190, DOI DOI 10.1145/2025113.2025141
   Apel S, 2012, IEEE INT CONF AUTOM, P120, DOI 10.1145/2351676.2351694
   Biehl JT, 2007, CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1 AND 2, P1313
   Bird C, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P121, DOI 10.1145/1595696.1595716
   Boehm B. W., 1976, 2nd International Conference on Software Engineering, P592
   Brun Y., 2011, Proceedings of the 19th ACM SIGSOFT symposium and the 13th European Conference on Foundations of Software Engineering (FSE'11), P168, DOI [10.1145/2025113.2025139, DOI 10.1145/2025113.2025139]
   Brun Y, 2013, IEEE T SOFTWARE ENG, V39, P1358, DOI 10.1109/TSE.2013.28
   Buckley J, 2005, J SOFTW MAINT EVOL-R, V17, P309, DOI 10.1002/smr.319
   Canfora G., 2007, Proceedings of the 4th International Work- shop on Mining Software Repositories, MSR 2007, P14
   Cataldo M, 2013, IEEE T SOFTWARE ENG, V39, P343, DOI 10.1109/TSE.2012.32
   Cavalcanti G, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133883
   Cohen J., 2013, APPL MULTIPLE REGRES, DOI DOI 10.2307/2064799
   Costa C, 2014, INT J SOFTW ENG KNOW, V24, P1489, DOI 10.1142/S0218194014400166
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Da Silva I.A., 2006, Proc. OOPSLA Workshop on Eclipse Technology eXchange (ETX 07), P11, DOI DOI 10.1145/1188835.1188838
   de Souza Cleidson R. B., 2003, P 2003 INT ACM SIGGR, P105, DOI DOI 10.1145/958160.958177
   de Souza LBL, 2013, IEEE WORK CONF MIN S, P217, DOI 10.1109/MSR.2013.6624030
   Dewan P, 2007, ECSCW 2007: PROCEEDINGS OF THE 10TH EUROPEAN CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK, P159, DOI 10.1007/978-1-84800-031-5_9
   Emam KE, 2001, IEEE T SOFTWARE ENG, V27, P630, DOI 10.1109/32.935855
   Falleri Jean-Remy, 2014, P 29 ACM IEEE INT C, P313
   Godfrey MW, 2005, IEEE T SOFTWARE ENG, V31, P166, DOI 10.1109/TSE.2005.28
   Gorton I, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P555, DOI 10.1109/ICSE.2002.1007999
   Grinter R. E., 1995, Conference on Organizational Computing Systems, P168, DOI 10.1145/224019.224036
   Groce A., 2012, P INT S SOFTW TEST A, P78, DOI DOI 10.1145/2338965.2336763
   Guimaraes ML, 2012, PROC INT CONF SOFTW, P342, DOI 10.1109/ICSE.2012.6227180
   Holzmann GJ, 2011, IEEE T SOFTWARE ENG, V37, P845, DOI 10.1109/TSE.2010.110
   Johnson EJ, 2003, SCIENCE, V302, P1338, DOI 10.1126/science.1091721
   Johnson EJ, 2002, MARKET LETT, V13, P5, DOI 10.1023/A:1015044207315
   Kalliamvakou E., 2014, P 11 WORKING C MININ, P92, DOI DOI 10.1145/2597073.2597074
   Kasi BK, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P732, DOI 10.1109/ICSE.2013.6606619
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kim S, 2006, IEEE INT CONF AUTOM, P81
   Lippe E., 1992, SIGSOFT Software Engineering Notes, V17, P78, DOI 10.1145/142882.143753
   Marinescu R, 2004, PROC IEEE INT CONF S, P350, DOI 10.1109/ICSM.2004.1357820
   Marinescu R, 2001, TOOLS, V39, P173, DOI 10.1109/TOOLS.2001.941671
   Mckee S, 2017, PROC IEEE INT CONF S, P467, DOI 10.1109/ICSME.2017.53
   Mens T, 2002, IEEE T SOFTWARE ENG, V28, P449, DOI 10.1109/TSE.2002.1000449
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Mockus A, 2000, BELL LABS TECH J, V5, P169, DOI 10.1002/bltj.2229
   Nieminen A, 2012, COLLABORATECOM, P540, DOI 10.4108/icst.collaboratecom.2012.250435
   Parsons J, 2004, IEEE T SOFTWARE ENG, V30, P873, DOI 10.1109/TSE.2004.94
   Pedregosa F, 2011, LEARN RES, V12
   Perry DE, 2001, ACM T SOFTW ENG METH, V10, P308, DOI 10.1145/383876.383878
   Ripley R., 2004, P 2004 OOPSLA WORKSH, P17
   Samuelson W., 1988, Journal of Risk and Uncertainty, V1, P7, DOI [10.1007/BF00055564, DOI 10.1007/BF00055564]
   Sarma A, 2003, PROC INT CONF SOFTW, P444, DOI 10.1109/ICSE.2003.1201222
   Servant F, 2010, 2010 ICSE WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE 2010), P39
   Shihab E, 2012, INT SYMP EMP SOFTWAR, P301, DOI 10.1145/2372251.2372305
   Sun ZB, 2012, IEEE T SYST MAN CY C, V42, P1806, DOI 10.1109/TSMCC.2012.2226152
   Sunstein CR, 2003, U CHICAGO LAW REV, V70, P1159, DOI 10.2307/1600573
   Tian Y, 2012, PROC INT CONF SOFTW, P386, DOI 10.1109/ICSE.2012.6227176
   Weyuker EJ, 2008, EMPIR SOFTW ENG, V13, P539, DOI 10.1007/s10664-008-9082-8
   Zimmermann T., 2006, P 2006 INT WORKSHOP, P72, DOI DOI 10.1145/1137983.1138001
NR 63
TC 13
Z9 15
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN
PY 2020
VL 25
IS 1
BP 562
EP 590
DI 10.1007/s10664-019-09735-4
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KP0WS
UT WOS:000515965100014
DA 2024-07-18
ER

PT J
AU Krüger, J
   Lausberger, C
   von Nostitz-Wallwitz, I
   Saake, G
   Leich, T
AF Krueger, Jacob
   Lausberger, Christian
   von Nostitz-Wallwitz, Ivonne
   Saake, Gunter
   Leich, Thomas
TI Search. Review. Repeat? An empirical study of threats to replicating SLR
   searches
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Tertiary study; Systematic literature review; Software engineering;
   Threats to validity; Replication; Digital library
ID SYSTEMATIC LITERATURE-REVIEWS; SOFTWARE; STRENGTHS; LESSONS
AB A systematic literature review (SLR) is an empirical method used to provide an overview of existing knowledge and to aggregate evidence within a domain. For computer science, several threats to the completeness of such reviews have been identified, leading to recommendations and guidelines on how to improve their quality. However, few studies address to what extent researchers can replicate an SLR. To conduct a replication, researchers have to first understand how the set of primary studies has been identified in the original study, and can ideally retrieve the same set when following the reported protocol. In this article, we focus on this initial step of a replication and report a two-fold empirical study: Initially, we performed a tertiary study using a sample of SLRs in computer science and identified what information that is needed to replicate the searches is reported. Based on the results, we conducted a descriptive, multi-case study on digital libraries to investigate to what extent these allow replications. The results reveal two threats to replications of SLRs: First, while researchers have improved the quality of their reports, relevant details are still missing-we refer to a reporting threat. Second, we found that some digital libraries are inconsistent in their query results-we refer to a searching threat. While researchers conducting a review can only overcome the first threat and the second may not be an issue for all kinds of replications, researchers should be aware of both threats when conducting, reviewing, and building on SLRs.
C1 [Krueger, Jacob; Lausberger, Christian; von Nostitz-Wallwitz, Ivonne; Saake, Gunter] Otto von Guericke Univ, Magdeburg, Germany.
   [Krueger, Jacob; Leich, Thomas] Harz Univ Appl Sci, Wernigerode, Germany.
   [Lausberger, Christian; von Nostitz-Wallwitz, Ivonne; Leich, Thomas] METOP GmbH, Magdeburg, Germany.
C3 Otto von Guericke University
RP Krüger, J (corresponding author), Otto von Guericke Univ, Magdeburg, Germany.; Krüger, J (corresponding author), Harz Univ Appl Sci, Wernigerode, Germany.
EM jkrueger@ovgu.de; Christian.Lausberger@metop.de;
   Ivonne.Nostitz@metop.de; saake@ovgu.de; tleich@hs-harz.de
OI Kruger, Jacob/0000-0002-0283-248X
CR Abdelmaboud Abdelzahir, 2015, Journal of Theoretical and Applied Information Technology, V79, P395
   Afzal W, 2016, J SYST SOFTWARE, V111, P1, DOI 10.1016/j.jss.2015.08.048
   [Anonymous], 2010, SPROUTS WORKING PAPE, DOI DOI 10.2139/SSRN.1954824
   [Anonymous], 2015, DESIGN SCI RES
   Babar MA, 2009, INT SYMP EMP SOFTWAR, P347
   Badampudi D., 2015, P 19 INT C EV ASS SO, P1, DOI [10.1145/2745802.2745818, DOI 10.1145/2745802.2745818]
   Bailey J, 2007, 2 INT WORKSH REAL EV, P2, DOI [10.1109/REBSE.2007.4, DOI 10.1109/REBSE.2007.4]
   Bandara W., 2011, ECIS 2011 Proceedings [19th European Conference on Information Systems], P1
   BIOLCHINI J, 2005, TECHNICAL REPORT
   Boell SK, 2015, J INF TECHNOL, V30, P188, DOI 10.1057/jit.2015.15
   Booth A., 2012, SYSTEMATIC APPROACHE
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Budgen D., 2006, 28th International Conference on Software Engineering Proceedings, P1051, DOI 10.1145/1134285.1134500
   Budgen D, 2018, INFORM SOFTWARE TECH, V95, P62, DOI 10.1016/j.infsof.2017.10.017
   Budgen D, 2018, INFORM SOFTWARE TECH, V94, P234, DOI 10.1016/j.infsof.2017.10.012
   Carver JC, 2010, P 1 INT WORKSH REPL, P1
   Collins JA, 2005, HUM REPROD UPDATE, V11, P103, DOI 10.1093/humupd/dmh058
   da Silva FQB, 2011, INFORM SOFTWARE TECH, V53, P899, DOI 10.1016/j.infsof.2011.04.004
   Dyba T, 2005, IEEE SOFTWARE, V22, P58, DOI 10.1109/MS.2005.6
   Dyba Tore, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P225
   Dybå T, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P178
   Falagas ME, 2008, FASEB J, V22, P338, DOI 10.1096/fj.07-9492LSF
   Felizardo KR, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962630
   Fuhr N, 2007, INT J DIGIT LIBRARIE, V8, P21, DOI 10.1007/s00799-007-0011-z
   Galvan Jose, 2016, WRITING LIT REV
   Giles C. Lee, 2006, LECT NOTES COMPUTER, P2
   Gómez OS, 2014, INFORM SOFTWARE TECH, V56, P1033, DOI 10.1016/j.infsof.2014.04.004
   Harzing AW, 2017, SCIENTOMETRICS, V110, P371, DOI 10.1007/s11192-016-2185-x
   Hassler E, 2016, INFORM SOFTWARE TECH, V70, P122, DOI 10.1016/j.infsof.2015.10.011
   Imtiaz Salma, 2013, P 17 INT C EV ASS SO, P177
   Jalali S, 2012, INT SYMP EMP SOFTWAR, P29, DOI 10.1145/2372251.2372257
   Khan KS, 2003, J ROY SOC MED, V96, P118, DOI 10.1258/jrsm.96.3.118
   Kitchenham Barbara, 2011, 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), P46, DOI 10.1049/ic.2011.0006
   Kitchenham B., 2007, EBSE200701 KEEL U U
   Kitchenham B., 2016, Evidence-Based Software Engineering and Systematic Reviews
   Kitchenham B, 2013, INFORM SOFTWARE TECH, V55, P2049, DOI 10.1016/j.infsof.2013.07.010
   Kitchenham B, 2010, INFORM SOFTWARE TECH, V52, P792, DOI 10.1016/j.infsof.2010.03.006
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Levy Y., 2006, Informing Science, V9, P181
   Lex A, 2014, IEEE T VIS COMPUT GR, V20, P1983, DOI 10.1109/TVCG.2014.2346248
   LINDSAY RM, 1993, AM STAT, V47, P217, DOI 10.2307/2684982
   M Ilyas, 2015, PROC IEEEACIS 16 INT, P1, DOI 10.1109/SNPD.2015.7176187
   MacDonell S, 2010, IEEE T SOFTWARE ENG, V36, P676, DOI 10.1109/TSE.2010.28
   Mbiydzenyuy G, 2015, IEEE INT C INTELL TR, P2631, DOI 10.1109/ITSC.2015.423
   Moher D, 2009, ANN INTERN MED, V151, P264, DOI [10.7326/0003-4819-151-4-200908180-00135, 10.1136/bmj.b2700, 10.1371/journal.pmed.1000097, 10.1186/2046-4053-4-1, 10.1136/bmj.i4086, 10.1136/bmj.b2535, 10.1016/j.ijsu.2010.02.007, 10.1016/j.ijsu.2010.07.299]
   Orduña-Malea E, 2014, ONLINE INFORM REV, V38, P936, DOI 10.1108/OIR-07-2014-0169
   Petersen K, 2008, 12 INT C EV ASS SOFT, P1, DOI 10.5555/2227115.2227123
   Riaz M, 2010, INT C EV ASS SOFTW E, P44
   Riedl R, 2007, ECIS 2007 P, P1515
   Sackett DL., 1997, Evidence-Based Medicine: How to Practice and Teach EBM, V1st
   Shakeel Y, 2018, 2018 IEEE/ACM 13TH INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR SCIENCE (SE4SCIENCE), P20, DOI 10.1145/3194747.3194748
   Shaw M, 2003, PROC INT CONF SOFTW, P726, DOI 10.1109/ICSE.2003.1201262
   Soni G, 2011, BUS PROCESS MANAG J, V17, P238, DOI 10.1108/14637151111122338
   Tranfield D, 2003, BRIT J MANAGE, V14, P207, DOI 10.1111/1467-8551.00375
   vom Brocke J, 2015, COMMUN ASSOC INF SYS, V37, P205
   von Nostitz-Wallwitz Ivonne, 2018, 2018 IEEE/ACM 40th International Conference on Software Engineering: Companion (ICSE-Companion). Proceedings, P300, DOI 10.1145/3183440.3194980
   Webster J, 2002, MIS QUART, V26, pXIII
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Wolfswinkel JF, 2013, EUR J INFORM SYST, V22, P45, DOI 10.1057/ejis.2011.51
   Yin K., 2018, Case study research and applications: Design and methods
   Zhang H, 2013, INFORM SOFTWARE TECH, V55, P1341, DOI 10.1016/j.infsof.2012.09.008
   Zhang H, 2011, INFORM SOFTWARE TECH, V53, P625, DOI 10.1016/j.infsof.2010.12.010
   Zhang HF, 2010, PROCEEDINGS OF THE SECOND INTERNATIONAL POSTGRADUATE CONFERENCE ON INFRASTRUCTURE AND ENVIRONMENT, VOL 2, P111, DOI 10.1109/SOLI.2010.5551598
NR 63
TC 18
Z9 18
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN
PY 2020
VL 25
IS 1
BP 627
EP 677
DI 10.1007/s10664-019-09763-0
PG 51
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KP0WS
UT WOS:000515965100016
DA 2024-07-18
ER

PT J
AU An, L
   Castelluccio, M
   Khomh, F
AF An, Le
   Castelluccio, Marco
   Khomh, Foutse
TI An empirical study of DLL injection bugs in the Firefox ecosystem
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE DLL injection; Software ecosystem; Mining software repositories
ID SOFTWARE; EVOLUTION
AB DLL injection is a technique used for executing code within the address space of another process by forcing the load of a dynamic-link library. In a software ecosystem, the interactions between the host and third-party software increase the maintenance challenges of the system and may lead to bugs. In this work, we empirically investigate bugs that were caused by third-party DLL injections into the Mozilla Firefox browser. Among the 103 studied DLL injection bugs, we found that 93 bugs (90.3%) led to crashes and 57 bugs (55.3%) were caused by antivirus software. Through a survey with third-party software vendors, we observed that some vendors did not perform any QA with pre-release versions nor intend to use a public API (WebExtensions) but insist on using DLL injection. To reduce DLL injection bugs, host software vendors may strengthen the collaboration with third-party vendors, e.g., build a publicly accessible validation test framework. Host software vendors may also use a whitelist approach to only allow vetted DLLs to inject.
C1 [An, Le; Khomh, Foutse] Polytech Montreal, Montreal, PQ, Canada.
   [Castelluccio, Marco] Mozilla Corp, York, N Yorkshire, England.
   [Castelluccio, Marco] Univ Napoli Federico Ii, Naples, Italy.
C3 Universite de Montreal; Polytechnique Montreal; University of Naples
   Federico II
RP An, L (corresponding author), Polytech Montreal, Montreal, PQ, Canada.
EM le.an@polymtl.ca; mcastelluccio@mozilla.com; foutse.khomh@polymtl.ca
OI Castelluccio, Marco/0000-0002-3285-5121
FU Natural Sciences and Engineering Research Council of Canada (NSERC)
FX The authors would like to thank the anonymous reviewers for their
   detailed feedback and useful suggestions that greatly contributed to
   improving this paper. This work has been partially supported by the
   Natural Sciences and Engineering Research Council of Canada (NSERC).
CR Andersson S., 2005, Computer Security Applications Conference, 21st Annual, P10
   [Anonymous], 2013, NONPARAMETRIC STAT M
   [Anonymous], 2017, CHROMIUM BLOG
   AppInitDLLs, 2018, APPINIT DLLS WIND 7
   Berdajs J, 2010, SOFTWARE PRACT EXPER, V40, P567, DOI 10.1002/spe.973
   Bosch Jan, 2009, 2009 13 INT SOFTW PR, V9, P111, DOI DOI 10.1145/1753235.1753251
   Businge J., 2010, EVOL IWPSE 10, P63, DOI [10.1145/1862372.1862389, DOI 10.1145/1862372.1862389]
   Castelluccio M, 2018, EUROPES CRISES, P1
   CreateRemoteThread, 2018, CREATEREMOTETHREAD F
   Fewer Stephen, 2008, Reflective DLL injection
   German DM, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P140, DOI 10.1109/WCRE.2007.5
   German DM, 2013, EUR CON SFTWR MTNCE, P243, DOI 10.1109/CSMR.2013.33
   Godfrey MW, 2000, PROC IEEE INT CONF S, P131, DOI 10.1109/ICSM.2000.883030
   Gonzalez-Barahona JM, 2009, EMPIR SOFTW ENG, V14, P262, DOI 10.1007/s10664-008-9100-x
   Hanssen GK, 2012, J SYST SOFTWARE, V85, P1455, DOI 10.1016/j.jss.2011.04.020
   InfoSec Institute, 2014, API HOOK
   Jansen S, 2009, PROC INT CONF SOFTW, P187, DOI 10.1109/ICSE-COMPANION.2009.5070978
   Karim R, 2012, LECT NOTES COMPUT SC, V7313, P333, DOI 10.1007/978-3-642-31057-7_16
   Lam LC, 2006, LISA 06: USENIX ASSOCIATION PROCEEDINGS OF THE 20TH LARGE INSTALLATION SYSTEM ADMINISTRATION CONFERENCE, P53
   Liu L., 2012, NDSS
   LoadLibrary, 2018, LOADLIBRARY FUNCT
   Moonsu Jang, 2007, 2007 International Conference on Convergence Information Technology - ICCIT '07, P1059, DOI 10.1109/ICCIT.2007.320
   Mozilla Add-ons Blog, 2018, FUT DEV FIR ADD ONS
   Mozilla Add-ons Blog, 2018, PREV ADD ONS 3 PART
   Mozilla Add-ons Blog, 2018, ADV WEBEXTENSIONS DE
   SetWindowsHookEx, 2018, SETWINDOWSHOOKEX FUN
   SetWinEventHook, 2018, SETWINEVENTHOOK FUNC
   Singer Janice, 2008, Guide to Advanced Empirical Software Engineering, P9
   van den Berk Ivo., 2010, Proceedings of the Fourth European Conference on Software Architecture: Companion Volume, P127, DOI DOI 10.1145/1842752.1842781
   WebExtensions, 2017, WEBEXTENSIONS
   Wermelinger Michel., 2008, MSR '08, P133, DOI 10.1145/1370750.1370783
   WindowsDataTypes, 2018, WINDOWS DATA TYPES
NR 32
TC 4
Z9 6
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2019
VL 24
IS 4
BP 1799
EP 1822
DI 10.1007/s10664-018-9677-7
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IL9CL
UT WOS:000477582700004
DA 2024-07-18
ER

PT J
AU Hindle, A
   Onuczko, C
AF Hindle, Abram
   Onuczko, Curtis
TI Preventing duplicate bug reports by continuously querying bug reports
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Duplicate bug reports; Issue reports; Deduplication; Information
   retrieval; Just in time; Continuously querying bug reports; Continuous
   query
ID RETRIEVAL; LANGUAGE
AB Bug deduplication or duplicate bug report detection is a hot topic in software engineering information retrieval research, but it is often not deployed. Typically to de-duplicate bug reports developers rely upon the search capabilities of the bug report software they employ, such as Bugzilla, Jira, or Github Issues. These search capabilities range from simple SQL string search to IR-based word indexing methods employed by search engines. Yet too often these searches do very little to stop the creation of duplicate bug reports. Some bug trackers have more than 10% of their bug reports marked as duplicate. Perhaps these bug tracker search engines are not enough? In this paper we propose a method of attempting to prevent duplicate bug reports before they start: continuously querying. That is as the bug reporter types in their bug report their text is used to query the bug database to find duplicate or related bug reports. This continuously querying bug reports allows the reporter to be alerted to duplicate bug reports as they report the bug, rather than formulating queries to find the duplicate bug report. Thus this work ushers in a new way of evaluating bug report deduplication techniques, as well as a new kind of bug deduplication task. We show that simple IR measures can address this problem but also that further research is needed to refine this novel process that is integrate-able into modern bug report systems.
C1 [Hindle, Abram] Univ Alberta, Dept Comp Sci, Edmonton, AB, Canada.
   [Onuczko, Curtis] BioWare ULC, Edmonton, AB, Canada.
C3 University of Alberta
RP Hindle, A (corresponding author), Univ Alberta, Dept Comp Sci, Edmonton, AB, Canada.
EM hindle@ualberta.ca; curtiso@bioware.com
OI Hindle, Abram/0000-0002-4373-4958
FU NSERC Discovery Grant; NSERC Engage Grant; MITACS Accelerate Cluster
   Grant; Bioware ULC
FX This work was funded by an NSERC Discovery Grant, NSERC Engage Grant,
   and a MITACS Accelerate Cluster Grant in conjunction with Bioware ULC.
   We would also like to thank prior reviewers and Ahmed Hassan.
CR Aggarwal K, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1821
   Aggarwal K, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P211, DOI 10.1109/SANER.2015.7081831
   Alipour A, 2013, IEEE WORK CONF MIN S, P183, DOI 10.1109/MSR.2013.6624026
   Nguyen AT, 2012, IEEE INT CONF AUTOM, P70, DOI 10.1145/2351676.2351687
   [Anonymous], THESIS
   Arasu A, 2006, VLDB J, V15, P121, DOI 10.1007/s00778-004-0147-z
   Asaduzzaman M, 2014, PROC IEEE INT CONF S, P71, DOI 10.1109/ICSME.2014.29
   Bettenburg N, 2008, PROC IEEE INT CONF S, P337, DOI 10.1109/ICSM.2008.4658082
   Campbell JC, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P269, DOI [10.1145/2901739.2901766, 10.1109/MSR.2016.035]
   Chandrasekaran S., 2002, Proceedings of the Twenty-eighth International Conference on Very Large Data Bases, P203
   Chandrasekaran S., 2003, SIGMOD 03, P668, DOI DOI 10.1145/872757.872857
   Chengnian Sun, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P253, DOI 10.1109/ASE.2011.6100061
   Deshmukh J, 2017, PROC IEEE INT CONF S, P115, DOI 10.1109/ICSME.2017.69
   Google, 2016, GOOGL SUGG SERV
   Haiduc S, 2014, PROC IEEE INT CONF S, P657, DOI 10.1109/ICSME.2014.117
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Jalbert N, 2008, I C DEPEND SYS NETWO, P52, DOI 10.1109/DSN.2008.4630070
   Kao B., 1994, Real Time Computing. Proceedings of the NATO Advanced Study Institute, P261
   Klein N., 2014, P 11 WORKING C MININ, P324, DOI DOI 10.1145/2597073.2597090
   Lazar A., 2014, P 11 WORKING C MININ, P308
   Lukins SK, 2008, WORK CONF REVERSE EN, P155, DOI 10.1109/WCRE.2008.33
   Manning C.D., 1999, FDN STAT NATURAL LAN
   Panichella A, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P314, DOI 10.1109/SANER.2016.97
   Ponzanelli L, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1295, DOI 10.1109/ICSE.2013.6606701
   Ponzanelli Luca, 2014, P 11 WORKING C MININ, P102, DOI DOI 10.1145/2597073.2597077
   PORTER MF, 1980, PROGRAM-AUTOM LIBR, V14, P130, DOI 10.1108/eb046814
   Rakha MS, 2016, EMPIR SOFTW ENG, V21, P1960, DOI 10.1007/s10664-015-9404-6
   Rakha MS, 2018, EMPIRICAL SOFTWARE E
   Rakha MS, 2017, IEEE T SOFTWARE ENG, VPP, P1
   Rehuek R, 2018, MODELS TFIDFMODEL TF
   Rehurek R., 2010, LREC, DOI DOI 10.13140/2.1.2393.1847
   Robertson S. E., 1995, Text REtrieval Conference (TREC-3) (NIST SP 500-225), P109
   Rocha H., 2015, J SOFTW ENG RES DEV, V3, P3, DOI DOI 10.1186/s40411-015-0018-x
   Runeson P, 2007, PROC INT CONF SOFTW, P499
   Sabor KK, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P240, DOI 10.1109/QRS.2017.35
   Shah MA, 2003, PROC INT CONF DATA, P25, DOI 10.1109/ICDE.2003.1260779
   Sun Chengnian, 2010, P 32 ACMIEEE INT C S, V1, P45, DOI [DOI 10.1145/1806799, 10.1145/1806799.1806811]
   Sureka A, 2010, ASIA PAC SOFWR ENG, P366, DOI 10.1109/APSEC.2010.49
   Tange O., 2011, GNU Parallel: The Command-Line Power Tool, V36, P42, DOI DOI 10.5281/ZEN0D0.16303
   Thung F., 2014, P 29 ACM IEEE INT C, P871
   Wang SW, 2014, PROC IEEE INT CONF S, P171, DOI 10.1109/ICSME.2014.39
   Wang XY, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P461, DOI 10.1145/1368088.1368151
   White RW, 2007, INFORM PROCESS MANAG, V43, P685, DOI 10.1016/j.ipm.2006.06.005
   Zhang Y, 2015, J COMPUT SCI TECH-CH, V30, P981, DOI 10.1007/s11390-015-1576-4
NR 44
TC 27
Z9 30
U1 0
U2 9
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2019
VL 24
IS 2
BP 902
EP 936
DI 10.1007/s10664-018-9643-4
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HQ8DM
UT WOS:000462654200011
DA 2024-07-18
ER

PT J
AU Ye, DH
   Bao, LF
   Xing, ZC
   Lin, SW
AF Ye, Deheng
   Bao, Lingfeng
   Xing, Zhenchang
   Lin, Shang-Wei
TI APIReal: an API recognition and linking approach for online developer
   forums
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Mining software repositories; API recognition; API linking;
   Semi-supervised learning; Natural language processing
ID TRACEABILITY LINKS; CODE
AB When discussing programming issues on social platforms (e.g, Stack Overflow, Twitter), developers often mention APIs in natural language texts. Extracting API mentions from natural language texts serves as the prerequisite to effective indexing and searching for API-related information in software engineering social content. The task of extracting API mentions from natural language texts involves two steps: 1) distinguishing API mentions from other English words (i.e., API recognition), 2) disambiguating a recognized API mention to its unique fully qualified name (i.e., API linking). Software engineering social content lacks consistent API mentions and sentence writing format. As a result, API recognition and linking have to deal with the inherent ambiguity of API mentions in informal text, for example, due to the ambiguity between the API sense of a common word and the normal sense of the word (e.g., append, apply and merge), the simple name of an API can map to several APIs of the same library or of different libraries, or different writing forms of an API should be linked to the same API. In this paper, we propose a semi-supervised machine learning approach that exploits name synonyms and rich semantic context of API mentions for API recognition in informal text. Based on the results of our API recognition approach, we further propose an API linking approach leveraging a set of domain-specific heuristics, including mention-mention similarity, scope filtering, and mention-entry similarity, to determine which API in the knowledge base a recognized API actually refers to. To evaluate our API recognition approach, we use 1205 API mentions of three libraries (Pandas, Numpy, and Matplotlib) from Stack Overflow text. We also evaluate our API linking approach with 120 recognized API mentions of these three libraries.
C1 [Ye, Deheng; Lin, Shang-Wei] Nanyang Technol Univ, Sch Comp Sci & Engn, 50 Nanyang Ave, Singapore, Singapore.
   [Ye, Deheng] Tencent AI Lab, Shenzhen, Peoples R China.
   [Bao, Lingfeng] Zhejiang Univ, Coll Comp Sci, Hangzhou, Zhejiang, Peoples R China.
   [Xing, Zhenchang] Australian Natl Univ, Res Sch Comp Sci, Canberra, ACT, Australia.
C3 Nanyang Technological University; Tencent; Zhejiang University;
   Australian National University
RP Bao, LF (corresponding author), Zhejiang Univ, Coll Comp Sci, Hangzhou, Zhejiang, Peoples R China.
EM ydyl1991@gmail.com; lingfengbao@zju.edu.cn; zhenchang.xing@anu.edu.au;
   shang-wei.lin@ntu.edu.sg
RI bao, lingfeng/AEG-8299-2022; Lin, Shang-Wei/D-9749-2017
OI Lin, Shang-Wei/0000-0002-9726-3434
CR Abdalkareem R, 2017, INFORM SOFTWARE TECH, V88, P148, DOI 10.1016/j.infsof.2017.04.005
   [Anonymous], 2014, Proceedings of the 2014 conference on empirical methods in natural language processing (EMNLP)
   [Anonymous], 2014, P 2014 C EMPIRICAL M, DOI DOI 10.3115/V1/D14-1110
   [Anonymous], 2011, P 49 ANN M ASS COMP
   [Anonymous], 2013, P 6 INT JOINT C NATU
   [Anonymous], 2001, PROC 18 INT C MACH L
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Bacchelli A., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P476, DOI 10.1109/ASE.2011.6100103
   Bacchelli A., 2010, Proceedings of the 32nd International Conference on Software Engineering, P375
   Bacchelli A, 2009, WORK CONF REVERSE EN, P205, DOI 10.1109/WCRE.2009.44
   Brown P. F., 1992, Computational Linguistics, V18, P467
   Chen FX, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P320, DOI 10.1145/2786805.2786819
   Dagenais B, 2012, PROC INT CONF SOFTW, P47, DOI 10.1109/ICSE.2012.6227207
   FLEISS JL, 1971, PSYCHOL BULL, V76, P378, DOI 10.1037/h0031619
   Gao Q, 2015, IEEE INT CONF AUTOM, P307, DOI 10.1109/ASE.2015.81
   Hsin-Yi Jiang, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P59, DOI 10.1109/ASE.2008.16
   Ji ZC, 2016, PROCEEDINGS OF THE 25TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'16), P1271, DOI 10.1145/2872427.2883067
   Li CL, 2014, SIGIR'14: PROCEEDINGS OF THE 37TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P43, DOI 10.1145/2600428.2609582
   Liang P., 2005, THESIS MIT
   Liao W., 2009, PROC NAACL HLT WORKS, P58
   Linares-Vasquez M, 2014, P 22 INT C PROGR C, P83
   Liu X., 2013, Long Papers, V1, P1304
   Marcus A, 2003, PROC INT CONF SOFTW, P125, DOI 10.1109/ICSE.2003.1201194
   Mihalcea R., 2004, P 8 C COMP NAT LANG, P33
   Mihalcea Rada, 2007, P 16 ACM C C INF KNO
   Mikolov T., 2013, ADV NEURAL INFORM PR, V26, P3111, DOI DOI 10.5555/2999792.2999959
   Mikolov T, 2013, ICLR WORKSHOP POSTER
   Milne D, 2008, P 17 ACM C INF KNOWL, P509, DOI DOI 10.1145/1458082.1458150
   Moonen L, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P13, DOI 10.1109/WCRE.2001.957806
   Navigli R, 2009, ACM COMPUT SURV, V41, DOI 10.1145/1459352.1459355
   Parnin C, 2012, 11 GEORG I TECHN
   Rahman MM, 2016, SANER
   Rigby PC, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P832, DOI 10.1109/ICSE.2013.6606629
   Shen Wei, 2012, KDD, P1424, DOI [10.1145/2339530.2339753, DOI 10.1145/2339530.2339753]
   Subramanian S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P643, DOI 10.1145/2568225.2568313
   Turian J, 2010, ACL 2010: 48TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, P384
   Wu Dan., 2009, Proceedings of the 2009 Conference on Empirical Methods in Natural Language Processing, P1523, DOI [10.3115/1699648.1699699, DOI 10.3115/1699648.1699699]
   Wu N., 2016, P 3 INT WORKSH CROWD, P22
   Yao Yang., 2015, WORLD WIDE WEB, P1
   Yarowsky D., 1995, 33 ANN M ASS COMPUTA, P189, DOI DOI 10.3115/981658.981684
   Ye D, 2016, P 23 IEEE INT C SOFT
   Ye Deheng., 2016, Proceedings of the 31st Annual ACM Symposium on Applied Computing, P1378
   Yu Mo., 2013, Proceedings of the 2013 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies, P563
   Zheng W., 2011, P 19 ACM SIGSOFT S 1, P480
NR 44
TC 10
Z9 10
U1 0
U2 13
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2018
VL 23
IS 6
BP 3129
EP 3160
DI 10.1007/s10664-018-9608-7
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HC1WE
UT WOS:000451593200002
DA 2024-07-18
ER

PT J
AU Wu, RX
   Wen, M
   Cheung, SC
   Zhang, HY
AF Wu, Rongxin
   Wen, Ming
   Cheung, Shing-Chi
   Zhang, Hongyu
TI ChangeLocator: locate crash-inducing changes based on crash reports
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Crash-inducing change; Software crash; Crash stack; Bug localization
ID BUG; LOCALIZATION; CODE
AB Software crashes are severe manifestations of software bugs. Debugging crashing bugs is tedious and time-consuming. Understanding software changes that induce a crashing bug can provide useful contextual information for bug fixing and is highly demanded by developers. Locating the bug inducing changes is also useful for automatic program repair, since it narrows down the root causes and reduces the search space of bug fix location. However, currently there are no systematic studies on locating the software changes to a source code repository that induce a crashing bug reflected by a bucket of crash reports. To tackle this problem, we first conducted an empirical study on characterizing the bug inducing changes for crashing bugs (denoted as crash-inducing changes). We also propose ChangeLocator, a method to automatically locate crash-inducing changes for a given bucket of crash reports. We base our approach on a learning model that uses features originated from our empirical study and train the model using the data from the historical fixed crashes. We evaluated ChangeLocator with six release versions of Netbeans project. The results show that it can locate the crash-inducing changes for 44.7%, 68.5%, and 74.5% of the bugs by examining only top 1, 5 and 10 changes in the recommended list, respectively. It significantly outperforms the existing state-of-the-art approach.
C1 [Wu, Rongxin; Wen, Ming; Cheung, Shing-Chi] Hong Kong Univ Sci & Technol, Dept Comp Sci & Engn, Hong Kong, Peoples R China.
   [Zhang, Hongyu] Univ Newcastle, Sch Elect Engn & Comp, Newcastle, NSW, Australia.
C3 Hong Kong University of Science & Technology; University of Newcastle
RP Wu, RX (corresponding author), Hong Kong Univ Sci & Technol, Dept Comp Sci & Engn, Hong Kong, Peoples R China.
EM wurongxin@cse.ust.hk; mwenaa@cse.ust.hk; scc@cse.ust.hk;
   hongyu.zhang@newcastle.edu.au
RI Liu, Chenyu/KBQ-8899-2024; zhang, hongyu/ABC-3702-2021; wu,
   rongxin/F-3999-2016; Cheung, Shing Chi/U-5882-2018
OI zhang, hongyu/0000-0002-3063-9425; Cheung, Shing
   Chi/0000-0002-3508-7172; Wu, Rongxin/0000-0002-4648-3795
FU Hong Kong SAR RGC/GRF grant [16202917]; NSFC [61272089]; 2016 Microsoft
   Research Asia Collaborative Research Program
FX We thank anonymous reviewers for their insightful comments. This
   research is supported by Hong Kong SAR RGC/GRF grant 16202917, NSFC
   grant 61272089, and 2016 Microsoft Research Asia Collaborative Research
   Program.
CR Abreu R, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P89, DOI 10.1109/TAIC.PART.2007.13
   Al Shalabi L., 2006, Journal of Computer Sciences, V2, P735, DOI 10.3844/jcssp.2006.735.739
   An L., 2015, Proceedings of the 11th International Conference on Predictive Models and Data Analytics in Software Engineering, P5
   [Anonymous], 1947, ANN MATH STAT
   [Anonymous], SOFTW QUAL J
   [Anonymous], 2014, P 2014 INT S SOFTWAR, DOI DOI 10.1145/2610384.2610386
   [Anonymous], 2016, DATA MINING PRACTICA, DOI DOI 10.1016/C2009-0-19715-5
   [Anonymous], MOZILLA CRASH REPORT
   [Anonymous], TECHNICAL NOTE TN212
   [Anonymous], REGRESSION RANGE
   [Anonymous], 2016, P 31 IEEE ACM INT C
   [Anonymous], BUG REPORT LIST
   [Anonymous], 2003, P WORKSH LEARN IMB D
   [Anonymous], NETBEANS REPORT EXCE
   [Anonymous], NETBEANS BUGZILLA
   [Anonymous], 2008, INTRO INFORM RETRIEV, DOI DOI 10.1017/CBO9780511809071
   [Anonymous], NETBEANS EXCEPTION R
   [Anonymous], NETBEANS SOURCE CODE
   [Anonymous], 2016, WEKA
   Arcuri A, 2008, IEEE C EVOL COMPUTAT, P162, DOI 10.1109/CEC.2008.4630793
   Artzi S, 2008, LECT NOTES COMPUT SC, V5142, P542, DOI 10.1007/978-3-540-70592-5_23
   Batista G. E., 2004, ACM SIGKDD EXPL NEWS, V6, P20, DOI DOI 10.1145/1007730.1007735
   Bell J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P362, DOI 10.1109/ICSE.2013.6606582
   Cao Y., 2014, Proceedings of the ACM/IEEE International Conference on Automated Software Engineering ASE, P791
   Cheung S.-C., 2011, P 19 ACM SIGSOFT S 1, P15
   da Costa DA, 2017, IEEE T SOFTWARE ENG, V43, P641, DOI 10.1109/TSE.2016.2616306
   Dang YN, 2012, PROC INT CONF SOFTW, P1084, DOI 10.1109/ICSE.2012.6227111
   Dit B, 2013, J SOFTW-EVOL PROC, V25, P53, DOI 10.1002/smr.567
   Glerum K, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P103
   Jiang Y, 2015, 2015 INTERNATIONAL SYMPOSIUM ON BIOELECTRONICS AND BIOINFORMATICS (ISBB), P1, DOI 10.1109/ISBB.2015.7344908
   Jin W, 2012, PROC INT CONF SOFTW, P474, DOI 10.1109/ICSE.2012.6227168
   Jones JA, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P467, DOI 10.1109/ICSE.2002.1007991
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kim D, 2011, IEEE T SOFTWARE ENG, V37, P430, DOI 10.1109/TSE.2011.20
   Kim S., 2006, Proceedings of the 2006 International Workshop on Mining Software Repositories, P40
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kim S, 2007, PROC INT CONF SOFTW, P489
   Kim S, 2006, IEEE INT CONF AUTOM, P81
   Kim S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P481, DOI 10.1145/1985793.1985859
   Kim S, 2011, I C DEPEND SYS NETWO, P486, DOI 10.1109/DSN.2011.5958261
   Kotsiantis S., 2006, International Journal of Computer Science, V1, P111
   Le Goues C, 2012, IEEE T SOFTWARE ENG, V38, P54, DOI 10.1109/TSE.2011.104
   Liblit B, 2005, ACM SIGPLAN NOTICES, V40, P15, DOI 10.1145/1064978.1065014
   Liblit B, 2003, ACM SIGPLAN NOTICES, V38, P141, DOI 10.1145/780822.781148
   Moran K, 2016, IEEE INT CONF SOFTW, P33, DOI 10.1109/ICST.2016.34
   Moreno L, 2014, PROC IEEE INT CONF S, P151, DOI 10.1109/ICSME.2014.37
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Nallapati R., 2004, Proceedings of Sheffield SIGIR 2004. The Twenty-Seventh Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, P64, DOI 10.1145/1008992.1009006
   Parnin C., 2011, P 2011 INT S SOFTWAR, P199, DOI [10.1145/2001420.2001445, DOI 10.1145/2001420.2001445]
   Prati RC, 2004, LECT NOTES COMPUT SC, V2972, P312
   Rao S., 2011, P 8 WORK C MIN SOFTW, P43
   ROBERTSON SE, 1976, J AM SOC INFORM SCI, V27, P129, DOI 10.1002/asi.4630270302
   Saha RK, 2013, IEEE INT CONF AUTOM, P345, DOI 10.1109/ASE.2013.6693093
   Schroter Adrian, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P118, DOI 10.1109/MSR.2010.5463280
   Seo HM, 2012, IEEE INT CONF AUTOM, P180, DOI 10.1145/2351676.2351702
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Turpin A., 2006, Proceedings of the Twenty-Ninth Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, P11, DOI 10.1145/1148170.1148176
   VENKATESH GA, 1991, SIGPLAN NOTICES, V26, P107, DOI 10.1145/113446.113455
   Wang SH, 2016, EMPIR SOFTW ENG, V21, P337, DOI [10.1007/s11356-014-3525-0, 10.1007/s10664-014-9333-9]
   Weimer W, 2010, COMMUN ACM, V53, P109, DOI 10.1145/1735223.1735249
   White M, 2015, INT C PROGRAM COMPRE, P48, DOI 10.1109/ICPC.2015.14
   Wong CP, 2014, PROC IEEE INT CONF S, P181, DOI 10.1109/ICSME.2014.40
   Ye X, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P689, DOI 10.1145/2635868.2635874
   Zeller A, 1999, LECT NOTES COMPUT SC, V1687, P253, DOI 10.1145/318774.318946
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
NR 66
TC 34
Z9 38
U1 0
U2 11
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2018
VL 23
IS 5
BP 2866
EP 2900
DI 10.1007/s10664-017-9567-4
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GO5AW
UT WOS:000440031100012
DA 2024-07-18
ER

PT J
AU Madeyski, L
   Kitchenham, B
AF Madeyski, Lech
   Kitchenham, Barbara
TI Effect sizes and their variance for AB/BA crossover design studies
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Empirical software engineering; Crossover designs; Effect size
   estimation; Effect size variance estimation; Meta-analysis
ID METAANALYSIS; PREDICTION; MODEL
AB Vegas et al. IEEE Trans Softw Eng 42(2):120:135 (2016) raised concerns about the use of AB/BA crossover designs in empirical software engineering studies. This paper addresses issues related to calculating standardized effect sizes and their variances that were not addressed by the Vegas et al.'s paper. In a repeated measures design such as an AB/BA crossover design each participant uses each method. There are two major implication of this that have not been discussed in the software engineering literature. Firstly, there are potentially two different standardized mean difference effect sizes that can be calculated, depending on whether the mean difference is standardized by the pooled within groups variance or the within-participants variance. Secondly, as for any estimated parameters and also for the purposes of undertaking meta-analysis, it is necessary to calculate the variance of the standardized mean difference effect sizes (which is not the same as the variance of the study). We present the model underlying the AB/BA crossover design and provide two examples to demonstrate how to construct the two standardized mean difference effect sizes and their variances, both from standard descriptive statistics and from the outputs of statistical software. Finally, we discuss the implication of these issues for reporting and planning software engineering experiments. In particular we consider how researchers should choose between a crossover design or a between groups design.
C1 [Madeyski, Lech] Wroclaw Univ Sci & Technol, Fac Comp Sci & Management, Wyb Wyspianskiego 27, PL-50370 Wroclaw, Poland.
   [Kitchenham, Barbara] Keele Univ, Sch Comp & Math, Keele ST5 5BG, Staffs, England.
C3 Wroclaw University of Science & Technology; Keele University
RP Madeyski, L (corresponding author), Wroclaw Univ Sci & Technol, Fac Comp Sci & Management, Wyb Wyspianskiego 27, PL-50370 Wroclaw, Poland.
EM Lech.Madeyski@pwr.edu.pl; b.a.kitchenham@keele.ac.uk
RI Kitchenham, Barbara/AAL-4311-2020; Madeyski, Lech/D-4986-2012
OI Kitchenham, Barbara/0000-0002-6134-8460; Madeyski,
   Lech/0000-0003-3907-3357
CR Abrahao S, 2013, IEEE T SOFTWARE ENG, V39, P327, DOI 10.1109/TSE.2012.27
   [Anonymous], 2022, Introduction to robust estimation and hypothesis testing
   [Anonymous], 2016, STRESS AM IMPACT DIS
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Bates D, 2015, J STAT SOFTW, V67, P1, DOI 10.18637/jss.v067.i01
   BECKER BJ, 1988, BRIT J MATH STAT PSY, V41, P257, DOI 10.1111/j.2044-8317.1988.tb00901.x
   Borenstein M., 2009, INTRO METAANALYSIS
   Budgen D, 2013, P ACM IEEE INT S EMP
   Ciolkowski M, 1999, THESIS
   Ciolkowski M, 2009, INT SYMP EMP SOFTWAR, P133, DOI 10.1109/ESEM.2009.5316026
   Cumming G, 2001, EDUC PSYCHOL MEAS, V61, P532, DOI 10.1177/0013164401614002
   Cumming G, 2012, Understanding the new statistics effect sizes, confidence intervals, and meta-analysis, V1
   Curtin F, 2002, STAT MED, V21, P2131, DOI 10.1002/sim.1205
   Dieste O, 2011, INT SYMP EMP SOFTWAR, P68, DOI 10.1109/ESEM.2011.15
   Dunlap WP, 1996, PSYCHOL METHODS, V1, P170, DOI 10.1037/1082-989X.1.2.170
   Foss T, 2003, IEEE T SOFTWARE ENG, V29, P985, DOI 10.1109/TSE.2003.1245300
   FREEMAN PR, 1989, STAT MED, V8, P1421, DOI 10.1002/sim.4780081202
   Hedges L. V., 1984, STAT METHODS METAANA, V24, P25, DOI [DOI 10.1002/EV.1376, 10.1016/C2009-0-03396-0, DOI 10.1016/C2009-0-03396-0, 10.1002/ev.1376]
   JOHNSON N. L., 1939, BIOMETRIKA, V31, P362
   Jureczko M, 2015, E-INFORMATICA, V9, P21, DOI 10.5277/e-Inf150102
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Kitchenham BA, 2016, EVIDENCE BASED SOFTW, P133
   Kitchenham B, 2018, STAT MED, V37, P320, DOI 10.1002/sim.7379
   Kitchenham B, 2017, EMPIR SOFTW ENG, V22, P579, DOI 10.1007/s10664-016-9437-5
   Laitenberger O, 2001, IEEE T SOFTWARE ENG, V27, P387, DOI 10.1109/32.922713
   Lakens D, 2013, FRONT PSYCHOL, V4, DOI 10.3389/fpsyg.2013.00863
   Madeyski L, 2010, TEST-DRIVEN DEVELOPMENT, P1, DOI 10.1007/978-3-642-04288-1
   Madeyski L, 2015, SOFTWARE QUAL J, V23, P393, DOI 10.1007/s11219-014-9241-7
   Madeyski L, 2014, IEEE T SOFTWARE ENG, V40, P23, DOI 10.1109/TSE.2013.44
   Morris SB, 2000, BRIT J MATH STAT PSY, V53, P17, DOI 10.1348/000711000159150
   Morris SB, 2002, PSYCHOL METHODS, V7, P105, DOI 10.1037//1082-989X.7.1.105
   Pournelle G. H., 1953, Journal of Mammalogy, V34, P133, DOI 10.1890/0012-9658(2002)083[1421:SDEOLC]2.0.CO;2
   Scanniello G, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2491912
   Senn S., 2002, CROSS OVER TRIALS CL, V156, P512, DOI DOI 10.1002/0470854596
   Shepperd M, 2001, IEEE T SOFTWARE ENG, V27, P1014, DOI 10.1109/32.965341
   Stout D.E., 1995, Journal of Accounting Education, V13, P281, DOI DOI 10.1016/0748-5751(95)00010-J
   Urdan T.C., 2005, Statistics in plain English, V2nd
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Vegas S, 2016, IEEE T SOFTWARE ENG, V42, P120, DOI 10.1109/TSE.2015.2467378
NR 39
TC 21
Z9 23
U1 1
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2018
VL 23
IS 4
BP 1982
EP 2017
DI 10.1007/s10664-017-9574-5
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA GK0MK
UT WOS:000435804100005
OA hybrid
DA 2024-07-18
ER

PT J
AU Bao, LF
   Xing, ZC
   Xia, X
   Lo, D
   Hassan, AE
AF Bao, Lingfeng
   Xing, Zhenchang
   Xia, Xin
   Lo, David
   Hassan, Ahmed E.
TI Inference of development activities from interaction with uninstrumented
   applications
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software development; Developers' interaction data; Condition Random
   Field
AB Studying developers' behavior in software development tasks is crucial for designing effective techniques and tools to support developers' daily work. In modern software development, developers frequently use different applications including IDEs, Web Browsers, documentation software (such as Office Word, Excel, and PDF applications), and other tools to complete their tasks. This creates significant challenges in collecting and analyzing developers' behavior data. Researchers usually instrument the software tools to log developers' behavior for further studies. This is feasible for studies on development activities using specific software tools. However, instrumenting all software tools commonly used in real work settings is difficult and requires significant human effort. Furthermore, the collected behavior data consist of low-level and fine-grained event sequences, which must be abstracted into high-level development activities for further analysis. This abstraction is often performed manually or based on simple heuristics. In this paper, we propose an approach to address the above two challenges in collecting and analyzing developers' behavior data. First, we use our ActivitySpace framework to improve the generalizability of the data collection. ActivitySpace uses operating-system level instrumentation to track developer interactions with a wide range of applications in real work settings. Secondly, we use a machine learning approach to reduce the human effort to abstract low-level behavior data. Specifically, considering the sequential nature of the interaction data, we propose a Condition Random Field (CRF) based approach to segment and label the developers' low-level actions into a set of basic, yet meaningful development activities. To validate the generalizability of the proposed data collection approach, we deploy the ActivitySpace framework in an industry partner's company and collect the real working data from ten professional developers' one-week work in three actual software projects. The experiment with the collected data confirms that with initial human-labeled training data, the CRF model can be trained to infer development activities from low-level actions with reasonable accuracy within and across developers and software projects. This suggests that the machine learning approach is promising in reducing the human efforts required for behavior data analysis.
C1 [Bao, Lingfeng; Xia, Xin] Zhejiang Univ, Coll Comp Sci & Technol, Hangzhou, Zhejiang, Peoples R China.
   [Xing, Zhenchang] Australian Natl Univ, Res Sch Comp Sci, Canberra, ACT, Australia.
   [Xia, Xin] Monash Univ, Fac Informat Technol, Melbourne, Vic, Australia.
   [Lo, David] Singapore Management Univ, Sch Informat Syst, Singapore, Singapore.
   [Hassan, Ahmed E.] Queens Univ, Sch Comp, Kingston, ON, Canada.
C3 Zhejiang University; Australian National University; Monash University;
   Singapore Management University; Queens University - Canada
RP Xia, X (corresponding author), Zhejiang Univ, Coll Comp Sci & Technol, Hangzhou, Zhejiang, Peoples R China.; Xia, X (corresponding author), Monash Univ, Fac Informat Technol, Melbourne, Vic, Australia.
EM lingfengbao@zju.edu.cn; zhenchang.xing@anu.edu.au; xxia@zju.edu.cn;
   davidlo@smu.edu.sg; ahmed@cs.queensu.ca
RI bao, lingfeng/AEG-8299-2022; Xia, Xin/AAD-6217-2022; Ali,
   Ahmed/HOF-4672-2023; KHALIFA, AHMED khalifa/HKF-2246-2023; Hassan,
   Ahmed/AAB-7241-2019; Lo, David/A-2493-2012
OI Xia, Xin/0000-0002-6302-3256; KHALIFA, AHMED
   khalifa/0000-0002-2918-7572; Lo, David/0000-0002-4367-7201
FU NSFC [61602403, 61572426]
FX The authors thank to all the developers in Hengtian who participated in
   this study. This work was partially supported by NSFC Program (No.
   61602403 and 61572426).
CR [Anonymous], 1998, Biological Sequence Analysis: Probabilistic Models of Proteins and Nucleic Acids
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Bao LF, 2015, IEEE INT CONF AUTOM, P864, DOI 10.1109/ASE.2015.90
   Bao LF, 2017, EMPIR SOFTW ENG, V22, P134, DOI 10.1007/s10664-015-9417-1
   Bao LF, 2015, IEEE INT CONF AUTOM, P277, DOI 10.1109/ASE.2015.43
   Beller M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P179, DOI 10.1145/2786805.2786843
   Berger AL, 1996, COMPUT LINGUIST, V22, P39
   Chang T.-H., 2011, P 24 ANN ACM S USER, P245
   Cheung S.-C., 2011, P 19 ACM SIGSOFT S 1, P15
   Coman I. D., 2009, International Journal of Computers & Applications, V31, P159, DOI 10.2316/Journal.202.2009.3.202-2963
   Corritore CL, 2001, INT J HUM-COMPUT ST, V54, P1, DOI 10.1006/ijhc.2000.0423
   Dekel U, 2009, INT C PROGRAM COMPRE, P168, DOI 10.1109/ICPC.2009.5090040
   Dereszynski EW, 2011, AAAI C ART INT INT D
   Dewan P, 2009, 2009 ICSE WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING, P48, DOI 10.1109/CHASE.2009.5071410
   Duala-Ekoko E, 2012, PROC INT CONF SOFTW, P266, DOI 10.1109/ICSE.2012.6227187
   Fisher C, 1991, THESIS
   FLEISS JL, 1971, PSYCHOL BULL, V76, P378, DOI 10.1037/h0031619
   Fritz T, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P7, DOI 10.1145/2635868.2635905
   Gunes Koru A., 2005, P 2005 WORKSHOP PRED, P1
   Hundhausen Christopher D., 2006, Proceedings of the second international workshop on Computing education research, P59, DOI DOI 10.1145/1151588.1151599
   Hurst A, 2010, IUI 2010, P11
   Jinshui Wang, 2011, 2011 IEEE 27th International Conference on Software Maintenance, P213, DOI 10.1109/ICSM.2011.6080788
   Ko AJ, 2005, J VISUAL LANG COMPUT, V16, P41, DOI 10.1016/j.jvlc.2004.08.003
   Ko AJ, 2006, IEEE T SOFTWARE ENG, V32, P971, DOI 10.1109/TSE.2006.116
   Lafferty John, 2001, INT C MACH LEARN ICM
   Lawrance J, 2013, IEEE T SOFTWARE ENG, V39, P197, DOI 10.1109/TSE.2010.111
   Lawrance J, 2008, CHI 2008: 26TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS VOLS 1 AND 2, CONFERENCE PROCEEDINGS, P1323
   Lawrence R., 2008, FUNDAMENTALS SPEECH
   Le Tien-Duy B, 2013, PROC IEEE INT CONF S, P310, DOI 10.1109/ICSM.2013.42
   Li HW, 2013, WORK CONF REVERSE EN, P142, DOI 10.1109/WCRE.2013.6671289
   Maiga A, 2012, IEEE INT CONF AUTOM, P278, DOI 10.1145/2351676.2351723
   McCallum A., 2000, P 17 INT C MACH LEAR, V17, P591
   Minelli R, 2015, INT C PROGRAM COMPRE, P25, DOI 10.1109/ICPC.2015.12
   Nguyen A. T., 2012, P ACM SIGSOFT 20 INT, P63
   Piorkowski D, 2011, S VIS LANG HUM CEN C, P109, DOI 10.1109/VLHCC.2011.6070387
   RABINER LR, 1989, P IEEE, V77, P257, DOI 10.1109/5.18626
   Robillard MP, 2004, IEEE T SOFTWARE ENG, V30, P889, DOI 10.1109/TSE.2004.101
   Sackett G. P., 1978, OBSERVING BEHAV THEO
   Safer Izzet, 2007, P 2007 C CTR ADV STU, P229, DOI 10.1145/1321211.1321235
   SANDERSON PM, 1994, HUM-COMPUT INTERACT, V9, P251, DOI 10.1207/s15327051hci0903&4_2
   Sillito J, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P23, DOI 10.1109/ISESE.2005.1541811
   Siochi A.C., 1991, P CHI 91 C HUMAN FAC, P301, DOI DOI 10.1145/108844.108926
   Sun Chengnian, 2010, P 32 ACMIEEE INT C S, V1, P45, DOI [DOI 10.1145/1806799, 10.1145/1806799.1806811]
   Thung F., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P205, DOI 10.1109/WCRE.2012.30
   Tian Y, 2012, EUR CON SFTWR MTNCE, P385, DOI 10.1109/CSMR.2012.48
   Vakilian M, 2012, PROC INT CONF SOFTW, P233, DOI 10.1109/ICSE.2012.6227190
   von Mayrhauser A., 1997, Empirical Studies of Programmers: Seventh Workshop. Papers presented at the Seventh Workshop on Empirical Studies of Programmers, P157, DOI 10.1145/266399.266414
   Wei Gong, 2012, 2012 IEEE Conference on Computational Intelligence and Games (CIG 2012), P147, DOI 10.1109/CIG.2012.6374150
   Wei X., 2003, P 26 ANN INT ACM SIG, P235, DOI DOI 10.1145/860435.860479
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Xia X, 2013, P 17 EUR C SOFTW MAI
NR 51
TC 20
Z9 21
U1 1
U2 8
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2018
VL 23
IS 3
BP 1313
EP 1351
DI 10.1007/s10664-017-9547-8
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GH6DH
UT WOS:000433532300005
DA 2024-07-18
ER

PT J
AU Wang, SW
   Chen, TH
   Hassan, AE
AF Wang, Shaowei
   Chen, Tse-Hsun
   Hassan, Ahmed E.
TI Understanding the factors for fast answers in technical Q&A websites An
   empirical study of four stack exchange websites
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Logistic regression modeling; Factor importance analysis; Q&A websites;
   Response time
AB Technical questions and answers (Q&A) websites accumulate a significant amount of knowledge from users. Developers are especially active on these Q&A websites, since developers are constantly facing new development challenges that require help from other experts. Over the years, Q&A website designers have derived several incentive systems (e.g., gamification) to encourage users to answer questions that are posted by others. However, the current incentive systems primarily focus on the quantity and quality of the answers instead of encouraging the rapid answering of questions. Improving the speed of getting an answer can significantly improve the user experience and increase user engagement on such Q&A websites. In this paper, we explore how one may improve the current incentive systems to motivate fast answering of questions. We use a logistic regression model to analyze 46 factors along four dimensions (i.e., question, asker, answer, and answerer dimension) in order to understand the relationship between the studied factors and the needed time to get an accepted answer. We conduct our study on the four most popular (i.e., with the most questions) Q&A Stack Exchange websites: Stack Overflow, Mathematics, Ask Ubuntu, and Superuser. We find that i) factors in the answerer dimension have the strongest effect on the needed time to get an accepted answer, after controlling for other factors; ii) the current incentive system does not recognize non-frequent answerers who often answer questions which frequent answerers are not able to answer. Such questions that are answered by non-frequent answerers are as important (i.e., have similar range of scores) as those that are answered by frequent answerers; iii) the current incentive system motivates frequent answerers well, but such frequent answerers tend to answer short questions. Our findings suggest that Q&A website designers should improve their incentive systems to motivate non-frequent answerers to be more active and to answer questions fast, in order to shorten the waiting time to receive an answer (especially for questions that require specific knowledge that frequent answerers might not possess). In addition, the question answering incentive system needs to factor in the value and difficulty of answering the questions (e.g., providing more rewards to harder questions or questions that remain unanswered for a long period of time).
C1 [Wang, Shaowei; Hassan, Ahmed E.] Queens Univ, Sch Comp, SAIL, Kingston, ON, Canada.
   [Chen, Tse-Hsun] Concordia Univ, Dept Comp Sci & Engn, Montreal, PQ, Canada.
C3 Queens University - Canada; Concordia University - Canada
RP Wang, SW (corresponding author), Queens Univ, Sch Comp, SAIL, Kingston, ON, Canada.
EM shaowei@cs.queensu.ca; peterc@encs.concordia.ca; ahmed@cs.queensu.ca
RI Ali, Ahmed/HOF-4672-2023; Gerring, Kristen/JJG-2352-2023; KHALIFA, AHMED
   khalifa/HKF-2246-2023; Hassan, Ahmed/AAB-7241-2019
OI Gerring, Kristen/0000-0003-4090-4584; KHALIFA, AHMED
   khalifa/0000-0002-2918-7572; Chen, Tse-Hsun/0000-0003-4027-0905
CR Adamic LA, 2008, P 17 INT C WORLD WID, P665, DOI DOI 10.1145/1367497.1367587
   Aizawa A, 2003, INFORM PROCESS MANAG, V39, P45, DOI 10.1016/S0306-4573(02)00021-3
   Anderson A, 2013, P 22 INT C WORLD WID, DOI DOI 10.1145/2488388.2488398
   Anderson Ashton, 2012, P 18 ACM SIGKDD INT, DOI DOI 10.1145/2339530.2339665
   [Anonymous], 2009, Introduction to the Practice of Statistics
   [Anonymous], 2013, ARXIV13116876
   [Anonymous], 2014, Proceedings of the 17th ACM conference on Computer supported cooperative work social computing
   Antin J., 2011, Proceedings of CHI 2011 Gamification Workshop, P1
   Asaduzzaman M, 2013, IEEE WORK CONF MIN S, P97, DOI 10.1109/MSR.2013.6624015
   Bird C., 2011, P 19 ACM SIGSOFT S 1, P4, DOI DOI 10.1145/2025113.2025119
   Briggs A, 2003, HEALTH ECON, V12, P377, DOI 10.1002/hec.766
   Bulmer M, 1979, DOVER BOOKMATH SER
   Cavusoglu H., 2015, P ACM C COMPUTER SUP, V2015, P171, DOI DOI 10.1145/2685553.2698999
   Chambers J.M., 1991, Statistical Models in S
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Cornea R, 2014, US Patent, Patent No. [8,645,825, 8645825]
   DUNN OJ, 1961, J AM STAT ASSOC, V56, P52, DOI 10.2307/2282330
   EFRON B, 1986, J AM STAT ASSOC, V81, P461, DOI 10.2307/2289236
   Freedman D., 2005, Statistical Models: Theory and Practice, DOI 10.1017/cbo9781139165495
   Han J., 2005, DATA MINING CONCEPTS
   Harrell F.E., 2006, REGRESSION MODELING
   Linares-Vasquez M., 2014, P 22 INT C PROGR COM, P83, DOI DOI 10.1145/2597008.2597155
   McIntosh S, 2016, EMPIR SOFTW ENG, V21, P2146, DOI 10.1007/s10664-015-9381-9
   Miller H., 2001, GEOGRAPHIC DATA MINI
   Mockus A., 2008, MISSING DATA SOFTWAR, P185
   Ponzanelli L, 2014, PROC IEEE INT CONF S, P541, DOI 10.1109/ICSME.2014.90
   Ponzanelli L, 2014, INT CONF QUAL SOFTW, P343, DOI 10.1109/QSIC.2014.27
   Ponzanelli Luca, 2014, P 11 WORKING C MININ, P102, DOI DOI 10.1145/2597073.2597077
   Rahman MM, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P426, DOI 10.1109/MSR.2015.55
   San Pedro J, 2014, PROCEEDINGS OF THE 8TH ACM CONFERENCE ON RECOMMENDER SYSTEMS (RECSYS'14), P193, DOI 10.1145/2645710.2645736
   Squire M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P219, DOI 10.1109/ICSE.2015.150
   Stackoverflow, 2016, DEV SURV RES 2016
   Thongtanunam P, 2016, PROC INT CONF SOFTW, P1039, DOI 10.1145/2884781.2884852
   Treude C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P804, DOI 10.1145/1985793.1985907
   Tse-Hsun Chen, 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P189, DOI 10.1109/MSR.2012.6224280
   Wang SW, 2014, PROC IEEE INT CONF S, P291, DOI 10.1109/ICSME.2014.51
   Wang Shaowei, 2013, SAC '13 Proceedings of the 28th Annual ACM Symposium on Applied Computing, P1019
   Xia X, 2013, IEEE WORK CONF MIN S, P287, DOI 10.1109/MSR.2013.6624040
   Yang L., 2011, Proceedings of the 25th AAAI Conference on Artificial Intelligence, P1273
   Zhou MH, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P271, DOI 10.1145/1985793.1985831
NR 40
TC 34
Z9 35
U1 1
U2 21
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2018
VL 23
IS 3
BP 1552
EP 1593
DI 10.1007/s10664-017-9558-5
PG 42
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GH6DH
UT WOS:000433532300012
DA 2024-07-18
ER

PT J
AU Scavuzzo, M
   Di Nitto, E
   Ardagna, D
AF Scavuzzo, Marco
   Di Nitto, Elisabetta
   Ardagna, Danilo
TI Experiences and challenges in building a data intensive system for data
   migration
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Data intensive applications; Experiment-driven action research; Big
   data; Data migration
AB Data Intensive (DI) applications are becoming more and more important in several fields of science, economy, and even in our normal life. Unfortunately, even if some technological frameworks are available for their development, we still lack solid software engineering approaches to support their development and, in particular, to ensure that they offer the required properties in terms of availability, throughput, data loss, etc.. In this paper we report our action research experience in developing-testing-reengineering a specific DI application, Hegira4Cloud, that migrates data between widely used NoSQL databases. We highlight the issues we have faced during our experience and we show how cumbersome, expensive and time-consuming the developing-testing-reengineering approach can be in this specific case. Also, we analyse the state of the art in the light of our experience and identify weaknesses and open challenges that could generate new research in the areas of software design and verification.
C1 [Scavuzzo, Marco; Di Nitto, Elisabetta; Ardagna, Danilo] Politecn Milan, Dipartimento Elettron Informaz & Bioingn, Piazza Leonardo da Vinci 32, I-20133 Milan, Italy.
C3 Polytechnic University of Milan
RP Scavuzzo, M (corresponding author), Politecn Milan, Dipartimento Elettron Informaz & Bioingn, Piazza Leonardo da Vinci 32, I-20133 Milan, Italy.
EM marco.scavuzzo@polimi.it; elisabetta.dinitto@polimi.it;
   danilo.ardagna@polimi.it
OI Ardagna, Danilo/0000-0003-4224-927X
FU European Commission [FP7-ICT-2011-8- 318484]; Windows Azure Research
   Pass; Amazon
FX The authors would like to thank Stefano Ceri, Alfonso Fuggetta and
   Damian Andrew Tamburri for their advices and for reviewing preliminary
   versions of this paper. This work has been supported by the European
   Commission grant no. FP7-ICT-2011-8- 318484 (MODAClouds), by the Windows
   Azure Research Pass 2013 and by various Amazon grants for supporting
   research activities.
CR Abadi D, 2012, IEEE COMPUTER, V45
   Abdelzaher Tarek., 2008, PERFORMANCE MODELING, P185
   [Anonymous], 2008, P 2008 ACM SIGMOD IN, DOI [10.1145/1376616.1376713, DOI 10.1145/1376616.1376713]
   [Anonymous], 2013, 10 INT C AUTONOMIC C
   [Anonymous], 2007, VLDB
   [Anonymous], 2015, P 7 INT WORKSH MOD S
   [Anonymous], P 7 USENIX S OP SYST
   ArchiveTeam, 2012, TWITT STREAM
   Ardagna D, 2014, J INTERNET SERVICES
   Armbrust M, 2010, COMMUN ACM, V53, P50, DOI 10.1145/1721654.1721672
   Atzeni P, 2012, RUNTIME APPROACH MOD
   Baskerville R, 2004, MIS QUART, V28, P329
   Becker S, 2009, J SYST SOFTWARE, V82, P3, DOI 10.1016/j.jss.2008.03.066
   Bernardi S, 2016, P I MECH ENG
   Brewer E, 2012, COMPUTER, V45, P23, DOI 10.1109/MC.2012.37
   Ceri S., 1993, 19th International Conference on Very Large Data Bases Proceedings, P108
   Chauhan A, 2012, SIZE ENTITY IS CACLU
   Chen CLP, 2014, INFORM SCIENCES, V275, P314, DOI 10.1016/j.ins.2014.01.015
   Cluet S, 1998, P 6 INT WORKSH DAT P, P35
   Das, 2012, P 3 ACM S CLOUD COMP
   Das S, 2013, P VLDB ENDOWMENT, V7, P12
   Didona D., 2015, PROC 6 ACMSPEC INT C, P341, DOI DOI 10.1145/2668930.2688823
   Duggan J., 2014, P 14 INT C EXT DAT T, P109
   Ferry N, 2015, MODACLOUDS EVALUATIO
   Godfrey R, 2014, INFORM TECHNOLOGY AD
   Gorton I, 2015, IEEE SOFTWARE, V32, P78, DOI 10.1109/MS.2014.51
   Herodotou H., 2011, Proceedings of the 2nd ACM Symposium on Cloud Computing; ACM, DOI [DOI 10.1145/2038916.2038934, 10.1145/2038916.2038934]
   Hill Z., 2010, Proceedings of the 19th ACM International Symposium on High Performance Distributed Computing, P367, DOI DOI 10.1145/1851476.1851532
   Hunt Patrick, 2010, P 2010 USENIX ANN TE, P11, DOI DOI 10.5555/1855840.1855851
   Kambatla K, 2014, J PARALLEL DISTR COM, V74, P2561, DOI 10.1016/j.jpdc.2014.01.003
   KENT W, 1983, COMMUN ACM, V26, P120, DOI 10.1145/358024.358054
   Kross J, 2015, SOFTWARETECHNIK TREN, V3, P35
   Li M, 2014, PROCEEDINGS OF THE 10TH EURO-ASIA CONFERENCE ON ENVIRONMENT AND CORPORATE SOCIAL RESPONSIBILITY: TOURISM, SOCIETY AND EDUCATION SESSION, PT III, P165
   Lightstone SS, 2007, I C DATA ENGIN WORKS, P395, DOI 10.1109/ICDEW.2007.4401022
   Manyika J., 2012, Big Data: The Next Frontier for Innovation, Competition, and Productivity
   Marr Bernard, 2015, Big Data: 20 Mind-Boggling Facts Everyone Must Read
   Menascé DA, 2000, IEEE T SOFTWARE ENG, V26, P1066, DOI 10.1109/32.881718
   MG, 2009, UML PROF MART MOD AN
   NIST Big Data Interoperability Framework, 2015, BIG DAT INT FRAM, V6, DOI [10.6028/NIST.SP.1500-6, DOI 10.6028/NIST.SP.1500-6]
   O'Brien R., 1998, OVERVIEW METHODOLOGI
   Picioroaga F, 2014, MODELLING SMART CITY
   Popescu A, 2010, NOSQL CODEMASHAN INT
   Rolia J, 2009, P 4 INT ICST C PERF
   Sadalage PJ, 2012, NOSQL DISTILLED BRIE
   Scavuzzo M., 2013, THESIS
   Scavuzzo M, 2016, P 2 INT WORKSH BIG D
   Scavuzzo M, 2014, IEEE INT ENTERP, P154, DOI 10.1109/EDOCW.2014.32
   Scoffield B, 2010, CODEMASH C SAND OH
   Shivam P., 2007, P 2007 ACM SIGMOD IN, P1079
   Shivam Piyush., 2006, P 32 INT C VERY LARG, P535
   Stonebraker M, 2005, PROC INT CONF DATA, P2
   Szyperski C, 2016, IEEE SOFTWARE, V33, P68, DOI 10.1109/MS.2016.58
   Tanelli M, 2011, IEEE T CONTR SYST T, V19, P93, DOI 10.1109/TCST.2010.2063250
   Terry DB, 2013, SOSP'13: PROCEEDINGS OF THE TWENTY-FOURTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P309, DOI 10.1145/2517349.2522731
   Wong L, 2009, PROC INT CONF DATA, P1363, DOI 10.1109/ICDE.2009.121
   Wu WT, 2013, PROC INT CONF DATA, P1081, DOI 10.1109/ICDE.2013.6544899
NR 56
TC 2
Z9 2
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2018
VL 23
IS 1
BP 52
EP 86
DI 10.1007/s10664-017-9503-7
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FU9TG
UT WOS:000424199400002
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Caneill, M
   Germán, DM
   Zacchiroli, S
AF Caneill, Matthieu
   German, Daniel M.
   Zacchiroli, Stefano
TI The Debsources Dataset: two decades of free and open source software
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software evolution; Source code; Free software; Open source; Debian;
   Dataset
AB We present the Debsources Dataset: source code and related metadata spanning two decades of Free and Open Source Software (FOSS) history, seen through the lens of the Debian distribution. The dataset spans more than 3 billion lines of source code as well as metadata about them such as: size metrics (lines of code, disk usage), developer-defined symbols (ctags), file-level checksums (SHA1, SHA256, TLSH), file media types (MIME), release information (which version of which package containing which source code files has been released when), and license information (GPL, BSD, etc). The Debsources Dataset comes as a set of tarballs containing deduplicated unique source code files organized by their SHA1 checksums (the source code), plus a portable PostgreSQL database dump (the metadata). A case study is run to show how the Debsources Dataset can be used to easily and efficiently instrument very long-term analyses of the evolution of Debian from various angles (size, granularity, licensing, etc.), getting a grasp of major FOSS trends of the past two decades. The Debsources Dataset is Open Data, released under the terms of the CC BY-SA 4.0 license, and available for download from Zenodo with DOI reference 10.5281/zenodo.61089.
C1 [Caneill, Matthieu] Univ Grenoble Alpes, Grenoble, France.
   [German, Daniel M.] Univ Victoria, Dept Comp Sci, Victoria, BC, Canada.
   [Zacchiroli, Stefano] Univ Paris Diderot, CNRS, UMR 8243, Sorbonne Paris Cite,IRIF, F-75205 Paris, France.
   [Zacchiroli, Stefano] Inria, Paris, France.
C3 Communaute Universite Grenoble Alpes; Universite Grenoble Alpes (UGA);
   University of Victoria; Universite Paris Cite; Centre National de la
   Recherche Scientifique (CNRS); Inria
RP Zacchiroli, S (corresponding author), Univ Paris Diderot, CNRS, UMR 8243, Sorbonne Paris Cite,IRIF, F-75205 Paris, France.; Zacchiroli, S (corresponding author), Inria, Paris, France.
EM caneill@imag.fr; dmg@uvic.ca; zack@pps.univ-paris-diderot.fr
OI Zacchiroli, Stefano/0000-0002-4576-136X
CR Abate P, 2009, INT SYMP EMP SOFTWAR, P89, DOI 10.1109/ESEM.2009.5316017
   Adams B, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1545
   [Anonymous], 1999, THESIS
   [Anonymous], UPGRADE
   Brooks Frederick P., 1995, The mythical man-month
   Caneill M, 2014, ESEM 2014
   Demeyer S, 2013, IEEE WORK CONF MIN S, P353, DOI 10.1109/MSR.2013.6624049
   Dyer R, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P422, DOI 10.1109/ICSE.2013.6606588
   German Daniel M., 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P84, DOI 10.1109/ICPC.2010.48
   German Daniel M., 2010, P 25 IEEE ACM INT C, P437, DOI [10.1145/1858996.1859088, DOI 10.1145/1858996.1859088]
   Gobeille R, 2008, P 2008 INT WORK C MI, P47, DOI DOI 10.1145/1370750.1370763
   Gonzalez-Barahona JM, 2009, EMPIR SOFTW ENG, V14, P262, DOI 10.1007/s10664-008-9100-x
   Howison J, 2006, INT J INF TECHNOL WE, V1, P17, DOI 10.4018/jitwe.2006070102
   Jackson I., 1996, DEBIAN POLICY MANUAL
   Kerrisk M, 2013, SURVEYING OPEN SOURC
   La A., 2015, LANGUAGE TRENDS GITH
   LEHMAN MM, 1980, P IEEE, V68, P1060, DOI 10.1109/PROC.1980.11805
   Nussbaum Lucas, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P52, DOI 10.1109/MSR.2010.5463277
   Olivier JP, 2013, CAMBR CLASS STUD, P7
   Robles G., 2005, P 1 INT C OPEN SOURC, P100
   Sowe S, 2006, INFORM SOFTWARE TECH, V48, P1025, DOI 10.1016/j.infsof.2005.12.019
   Stewart K, 2011, INT FREE OPEN SOURCE, V2, P191
   Wheeler D.A., 2001, More than a gigabuck: Estimating GNU/Linux's size
   Whitehead J, 2010, MINING SOFTWARE REPO
   Wu YH, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P324, DOI 10.1109/MSR.2015.37
   Zacchiroli S, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P466, DOI 10.1109/MSR.2015.65
NR 26
TC 14
Z9 16
U1 0
U2 10
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2017
VL 22
IS 3
BP 1405
EP 1437
DI 10.1007/s10664-016-9461-5
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EW4GE
UT WOS:000402459200015
DA 2024-07-18
ER

PT J
AU Coelho, R
   Almeida, L
   Gousios, G
   van Deursen, A
   Treude, C
AF Coelho, Roberta
   Almeida, Lucas
   Gousios, Georgios
   van Deursen, Arie
   Treude, Christoph
TI Exception handling bug hazards in Android
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Exception handling; Android development; Repository mining; Exploratory
   survey
ID ROBUSTNESS; TESTS
AB Adequate handling of exceptions has proven difficult for many software engineers. Mobile app developers in particular, have to cope with compatibility, middleware, memory constraints, and battery restrictions. The goal of this paper is to obtain a thorough understanding of common exception handling bug hazards that app developers face. To that end, we first provide a detailed empirical study of over 6,000 Java exception stack traces we extracted from over 600 open source Android projects. Key insights from this study include common causes for system crashes, and common chains of wrappings between checked and unchecked exceptions. Furthermore, we provide a survey with 71 developers involved in at least one of the projects analyzed. The results corroborate the stack trace findings, and indicate that developers are unaware of frequently occurring undocumented exception handling behavior. Overall, the findings of our study call for tool support to help developers understand their own and third party exception handling and wrapping logic.
C1 [Coelho, Roberta; Almeida, Lucas] Univ Fed Rio Grande do Norte, CIVT UFRN, Av Senador Salgado Filho 3000, BR-59078970 Natal, RN, Brazil.
   [Almeida, Lucas] Fed Inst Educ Sci & Technol Rio Grande do Norte, Campus Sao Goncalo do Amarante, BR-59290000 Sao Goncalo Do Amarante, RN, Brazil.
   [Gousios, Georgios; van Deursen, Arie] Delft Univ Technol, Mekelweg 4, NL-2628 CD Delft, Netherlands.
   [Treude, Christoph] Univ Adelaide, Sch Comp Sci, Ingkarni Wardli 4-48, Adelaide, SA 5005, Australia.
C3 Universidade Federal do Rio Grande do Norte; Instituto Federal do Rio
   Grande do Norte; Delft University of Technology; University of Adelaide
RP Coelho, R (corresponding author), Univ Fed Rio Grande do Norte, CIVT UFRN, Av Senador Salgado Filho 3000, BR-59078970 Natal, RN, Brazil.
EM roberta@dimap.ufrn.br; lucas.almeida@ifrn.edu.br; g.gousios@tudelft.nl;
   arie.vandeursen@tudelft.nl; christoph.treude@adelaide.edu.au
RI Treude, Christoph/AAZ-6257-2021; van Deursen, Arie/G-3084-2011
OI Coelho, Roberta/0000-0003-0001-435X; Treude,
   Christoph/0000-0002-6919-2149; Gousios, Georgios/0000-0002-8495-7939
FU National Institute of Science and Technology for Software Engineering
   (INES); CNPq [484209/2013-2]; FACEPE [573964/2008-4, 552645/2011-7,
   APQ-1037-1.03/08]; CAPES/PROAP
FX This work is partially supported by the National Institute of Science
   and Technology for Software Engineering (INES), CNPq and FACEPE, grants
   573964/2008-4, 552645/2011-7, and APQ-1037-1.03/08, CNPq Universal grant
   484209/2013-2, and CAPES/PROAP.
CR Amalfitano D, 2012, IEEE INT CONF AUTOM, P258, DOI 10.1145/2351676.2351717
   [Anonymous], 2011, USENIX SEC S
   Bacchelli A, 2012, PROC INT CONF SOFTW, P375, DOI 10.1109/ICSE.2012.6227177
   Bavota G, 2015, IEEE T SOFTWARE ENG, V41, P384, DOI 10.1109/TSE.2014.2367027
   Bettenburg N., 2008, P 16 ACM SIGSOFT INT, P308
   Bettenburg N., 2008, P 2008 INT WORKING C, P27
   Binder R.V., 2000, AW OBJ TECHNOL S
   Bloch J., 2016, Effective Java
   Brunet J, 2009, PROC INT CONF SOFTW, P255, DOI 10.1109/ICSE-COMPANION.2009.5070995
   Burt R. S., 2005, BROKERAGE CLOSURE IN
   Cabral B, 2007, LECT NOTES COMPUT SC, V4609, P151
   Coelho R, 2008, LECT NOTES COMPUT SC, V5142, P207, DOI 10.1007/978-3-540-70592-5_10
   Coelho R, 2011, INFORM SCIENCES, V181, P2700, DOI 10.1016/j.ins.2010.06.002
   Csallner C, 2004, SOFTWARE PRACT EXPER, V34, P1025, DOI 10.1002/spe.602
   Dhaliwal T., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P333, DOI 10.1109/ICSM.2011.6080800
   Filho Fernando Castor, 2007, 2007 IEEE International Conference on Software Maintenance, P134, DOI 10.1109/ICSM.2007.4362626
   Fraser G, 2013, EMPIR SOFTW ENG, P1
   Garcia AF, 2001, J SYST SOFTWARE, V59, P197, DOI 10.1016/S0164-1212(01)00062-0
   GOODENOUGH JB, 1975, COMMUN ACM, V18, P683, DOI 10.1145/361227.361230
   Gosling J., 2000, The Java Language Specification
   Gousios G, 2015, TECH REP
   Gousios G, 2013, IEEE WORK CONF MIN S, P233, DOI 10.1109/MSR.2013.6624034
   Hindle A, 2015, EMPIR SOFTW ENG, V20, P479, DOI 10.1007/s10664-014-9312-1
   Jenkov Tutorials, 2014, CHECK UNCH EXC
   Jo JW, 2004, J SYST SOFTWARE, V72, P59, DOI 10.1016/S0164-1212(03)00057-8
   Joorabchi Mona Erfani, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P15, DOI 10.1109/ESEM.2013.9
   Kechagia M., 2014, Proceedings of the 11th ACM Working Conference on Mining Software Repositories, P312
   Kim SS, 2013, BMJ OPEN, V3, DOI 10.1136/bmjopen-2013-002680
   Kim S, 2011, I C DEPEND SYS NETWO, P486, DOI 10.1109/DSN.2011.5958261
   Ko AJ, 2007, PROC INT CONF SOFTW, P344
   Kochhar P. S., 2015, ICST'15, P1
   Linares-Vásquez M, 2015, PROC IEEE INT CONF S, P352, DOI 10.1109/ICSM.2015.7332486
   Linares-Vasquez Mario, 2013, P 2013 9 JOINT M FDN, P477, DOI DOI 10.1145/2491411.2491428
   Maji AK., 2012, 2012 42nd Annual IEEE/IFIP International Conference on, P1
   Mandrioli Dino., 1992, Advances in Object-Oriented Software Engineering
   McDonnell T, 2013, PROC IEEE INT CONF S, P70, DOI 10.1109/ICSM.2013.18
   Meyer AN, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P19, DOI 10.1145/2635868.2635892
   Miller R, 1997, LECT NOTES COMPUT SC, V1241, P85
   Nanda MG, 2009, PROC INT CONF SOFTW, P133, DOI 10.1109/ICSE.2009.5070515
   Pathak A., 2011, P 10 ACM WORKSH HOT, P1
   Pham R, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P112, DOI 10.1109/ICSE.2013.6606557
   Robillard M. P., 2000, Software Engineering Notes, V25, P2, DOI 10.1145/357474.355046
   Ruiz I. J. M., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P113
   Sacramento P., 2006, P 2 INT C INN VIEWS
   Schroter Adrian, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P118, DOI 10.1109/MSR.2010.5463280
   Shah HB, 2010, IEEE T SOFTWARE ENG, V36, P150, DOI 10.1109/TSE.2010.7
   Singer L, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P211, DOI 10.1145/2568225.2568305
   Sinha S, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P153
   Stackoverflow Q&A, 2014, JAV CHECK VS UNCH EX
   The Java tutorial, 2014, JAVA TUTORIAL UNCHEC
   van Dooren M, 2005, ACM SIGPLAN NOTICES, V40, P455, DOI 10.1145/1103845.1094847
   Wadler P., 1995, Advanced Functional Programming. First International Spring School on Advanced Functional Programming Techniques. Tutorial Text, P24
   Wang SH, 2013, IEEE WORK CONF MIN S, P247, DOI 10.1109/MSR.2013.6624036
   Wasserman A.I., 2010, Proceedings of the FSE/SDP Workshop on Future of Software Engineering Research, P397, DOI [DOI 10.1145/1882362.1882443, 10.1145/1882362.1882443]
   Wirfs-Brock RJ, 2006, IEEE SOFTWARE, V23, P11, DOI 10.1109/MS.2006.144
   Yuan Ding, 2014, 11 USENIX S OPERATIN, P249
   Zhang PY, 2012, PROC INT CONF SOFTW, P595, DOI 10.1109/ICSE.2012.6227157
NR 57
TC 25
Z9 25
U1 0
U2 13
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2017
VL 22
IS 3
BP 1264
EP 1304
DI 10.1007/s10664-016-9443-7
PG 41
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EW4GE
UT WOS:000402459200011
OA Green Published
DA 2024-07-18
ER

PT J
AU Li, Y
   Yue, T
   Ali, S
   Zhang, L
AF Li, Yan
   Yue, Tao
   Ali, Shaukat
   Zhang, Li
TI Zen-ReqOptimizer: a search-based approach for requirements assignment
   optimization
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Search based software engineering; Requirements assignment; Optimization
   and empirical evaluation
ID COST; EVOLUTIONARY
AB At early phases of a product development lifecycle of large scale Cyber-Physical Systems (CPSs), a large number of requirements need to be assigned to stakeholders from different organizations or departments of the same organization for review, clarification and checking their conformance to standards and regulations. These requirements have various characteristics such as extents of importance to the organization, complexity, and dependencies between each other, thereby requiring different effort (workload) to review and clarify. While working with our industrial partners in the domain of CPSs, we discovered an optimization problem, where an optimal solution is required for assigning requirements to various stakeholders by maximizing their familiarity to assigned requirements, meanwhile balancing the overall workload of each stakeholder. In this direction, we propose a fitness function that takes into account all the above-mentioned factors to guide a search algorithm to find an optimal solution. As a pilot experiment, we first investigated four commonly applied search algorithms (i.e., GA, (1 + 1) EA, AVM, RS) together with the proposed fitness function and results show that (1 + 1) EA performs significantly better than the other algorithms. Since our optimization problem is multi-objective, we further empirically evaluated the performance of the fitness function with six multi-objective search algorithms (CellDE, MOCell, NSGA-II, PAES, SMPSO, SPEA2) together with (1 + 1) EA (the best in the pilot study) and RS (as the baseline) in terms of finding an optimal solution using an real-world case study and 120 artificial problems of varying complexity. Results show that both for the real-world case study and the artificial problems (1 + 1) EA achieved the best performance for each single objective and NSGA-II achieved the best performance for the overall fitness. NSGA-II has the ability to solve a wide range of problems without having their performance degraded significantly and (1 + 1) EA is not fit for problems with less than 250 requirements Therefore we recommend that, if a project manager is interested in a particular objective then (1 + 1) EA should be used; otherwise, NSGA-II should be applied to obtain optimal solutions when putting the overall fitness as the first priority.
C1 [Li, Yan; Zhang, Li] Beihang Univ, Dept Comp Sci & Engn, Beijing, Peoples R China.
   [Yue, Tao] Simula Res Lab, Fornebu, Norway.
   [Ali, Shaukat] Simula Res Lab, Software Engn Dept, Fornebu, Norway.
   [Yue, Tao] Univ Oslo, Dept Informat, Oslo, Norway.
C3 Beihang University; University of Oslo
RP Yue, T (corresponding author), Simula Res Lab, Fornebu, Norway.; Yue, T (corresponding author), Univ Oslo, Dept Informat, Oslo, Norway.
EM YanLL@buaa.edu.cn; tao@simula.no; shaukat@simula.no; lily@buaa.edu.cn
RI yue, tao/H-6783-2013; Zhang, Li/AAA-9787-2020
OI Yue, Tao/0000-0003-3262-5577
FU Research Council of Norway under the category of Young Research Talents
   of the FRIPO funding scheme [240024, 240013]; EU Horizon 2020 project
   U-Test; MBE-CR [239063]; Certus SFI; National Natural Science Foundation
   of China [61370058, 61170087]
FX This work was supported by the Zen-Configurator project (No. 240024) and
   the MBT4CPS project (No. 240013) funded by the Research Council of
   Norway under the category of Young Research Talents of the FRIPO funding
   scheme. Tao Yue and Shaukat Ali are also supported by the EU Horizon
   2020 project U-Test (http://www.u-test.eu/), the MBE-CR (An Innovative
   Approach for Longstanding Development and Maintenance of the Automated
   Cancer Registry System, No. 239063) and the Certus SFI
   (http://certus-sfi.no/). It was also supported in part by a grant from
   the National Natural Science Foundation of China (No. 61370058, No.
   61170087).
CR Ali S, 2010, IEEE T SOFTWARE ENG, V36, P742, DOI 10.1109/TSE.2009.52
   [Anonymous], 33 INT C SOFTW ENG I
   [Anonymous], 2009, RATIONAL DOORS
   [Anonymous], 2013, 20131001 OMG
   [Anonymous], 2010, 12 ANN C GEN EV COMP
   Arcuri A, 2013, SOFTW TEST VERIF REL, V23, P119, DOI 10.1002/stvr.457
   Arcuri A, 2011, LECT NOTES COMPUT SC, V6956, P33, DOI 10.1007/978-3-642-23716-4_6
   Bagnall AJ, 2001, INFORM SOFTWARE TECH, V43, P883, DOI 10.1016/S0950-5849(01)00194-X
   Bai Y, 2012, SUBSEA ENGINEERING HANDBOOK, P1
   Baker P, 2006, 22 IEEE INT C SOFTW
   Barros Mrciode Oliveira., 2011, RELATE DIA, V5
   Bradner S., 1997, Key words for use in RFCs to Indicate Requirement Levels
   Brown J, 2012, CHANCE AND INTENT: MANAGING THE RISKS OF INNOVATION AND ENTREPRENEURSHIP, P1
   Cortellessa V, 2008, J UNIVERS COMPUT SCI, V14, P1228
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Droste S, 2002, THEOR COMPUT SCI, V276, P51, DOI 10.1016/S0304-3975(01)00182-7
   Durillo J. J., 2008, Parallel Problem Solving from Nature - PPSN X. 10th International Conference, P661, DOI 10.1007/978-3-540-87700-4_66
   Durillo JJ, 2011, ADV ENG SOFTW, V42, P760, DOI 10.1016/j.advengsoft.2011.05.014
   Durillo JJ, 2011, EMPIR SOFTW ENG, V16, P29, DOI 10.1007/s10664-010-9147-3
   Feather MS, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P263, DOI 10.1109/ICRE.2002.1048537
   Finkelstein A, 2009, REQUIR ENG, V14, P231, DOI 10.1007/s00766-009-0075-y
   Finkelstein A, 2008, INT REQUIR ENG CONF, P115, DOI 10.1109/RE.2008.61
   Greer D, 2004, INFORM SOFTWARE TECH, V46, P243, DOI 10.1016/j.infsof.2003.07.002
   Harman M, 2009, TR0903 DEP COMP SCI
   Herrmann A, 2008, INT REQUIR ENG CONF, P125, DOI 10.1109/RE.2008.48
   Hickey AM, 2003, 11TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P169
   Karlsson J, 1997, IEEE SOFTWARE, V14, P67, DOI 10.1109/52.605933
   Karlsson J, 1998, INFORM SOFTWARE TECH, V39, P939, DOI 10.1016/S0950-5849(97)00053-0
   Knowles JD, 2000, EVOL COMPUT, V8, P149, DOI 10.1162/106365600568167
   Konak A, 2006, RELIAB ENG SYST SAFE, V91, P992, DOI 10.1016/j.ress.2005.11.018
   KOREL B, 1990, IEEE T SOFTWARE ENG, V16, P870, DOI 10.1109/32.57624
   Kotonya G., 1998, Requirements engineering: processes and techniques
   Lehtola L, 2004, LECT NOTES COMPUT SC, V3009, P497
   Nebro AJ, 2009, MCDM: 2009 IEEE SYMPOSIUM ON COMPUTATIONAL INTELLIGENCE IN MULTI-CRITERIA DECISION-MAKING, P66
   Nebro AJ, 2007, LECT NOTES COMPUT SC, V4403, P126
   SAATY RW, 1987, MATH MODELLING, V9, P161, DOI 10.1016/0270-0255(87)90473-8
   Saliu M.O., 2007, P 6 JOINT M EUROPEAN, P105, DOI DOI 10.1145/1287624.1287641
   Sheskin DJ., 2003, HDB PARAMETRIC NONPA, DOI [10.1201/9781420036268, DOI 10.1201/9781420036268]
   Wohlin Claes., 2005, Engineering and managing software requirements
   Yuanyuan Zhang, 2010, 2010 Proceedings of Second International Symposium on Search Based Software Engineering (SSBSE), P47, DOI 10.1109/SSBSE.2010.16
   Yue T, 2014, P 2014 C GEN EV COMP
   Zhang YY, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1129
   Zhang Y, 2008, LECT NOTES COMPUT SC, V5025, P88, DOI 10.1007/978-3-540-69062-7_8
   Zhang YY, 2013, INFORM SOFTWARE TECH, V55, P126, DOI 10.1016/j.infsof.2012.03.007
   Zitzler E, 2001, EUROGEN 2001 EV METH
NR 45
TC 9
Z9 9
U1 0
U2 18
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2017
VL 22
IS 1
BP 175
EP 234
DI 10.1007/s10664-015-9418-0
PG 60
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EI3GS
UT WOS:000392378400005
DA 2024-07-18
ER

PT J
AU Asadi, M
   Soltani, S
   Gasevic, D
   Hatala, M
AF Asadi, Mohsen
   Soltani, Samaneh
   Gasevic, Dragan
   Hatala, Marek
TI The effects of visualization and interaction techniques on feature model
   configuration
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software product line engineering; Controlled experiment; Tools
ID TECHNOLOGY ACCEPTANCE MODEL; SOFTWARE
AB A Software Product Line is a set of software systems of a domain, which share some common features but also have significant variability. A feature model is a variability modeling artifact which represents differences among software products with respect to variability relationships among their features. Having a feature model along with a reference model developed in the domain engineering lifecycle, a concrete product of the family is derived by selecting features in the feature model (referred to as the configuration process) and by instantiating the reference model. However, feature model configuration can be a cumbersome task because: 1) feature models may consist of a large number of features, which are hard to comprehend and maintain; and 2) many factors including technical limitations, implementation costs, stakeholders' requirements and expectations must be considered in the configuration process. Recognizing these issues, a significant amount of research efforts has been dedicated to different aspects of feature model configuration such as automating the configuration process. Several approaches have been proposed to alleviate the feature model configuration challenges through applying visualization and interaction techniques. However, there have been limited empirical insights available into the impact of visualization and interaction techniques on the feature model configuration process. In this paper, we present a set of visualization and interaction interventions for representing and configuring feature models, which are then empirically validated to measure the impact of the proposed interventions. An empirical study was conducted by following the principles of control experiments in software engineering and by applying the well-known software quality standard ISO 9126 to operationalize the variables investigated in the experiment. The results of the empirical study revealed that the employed visualization and interaction interventions significantly improved completion time of comprehension and changing of the feature model configuration. Additionally, according to results, the proposed interventions are easy-to-use and easy-to-learn for the participants.
C1 [Asadi, Mohsen; Soltani, Samaneh; Hatala, Marek] Simon Fraser Univ, Burnaby, BC, Canada.
   [Gasevic, Dragan] Athabasca Univ, Athabasca, AB, Canada.
C3 Simon Fraser University; Athabasca University
RP Asadi, M (corresponding author), Simon Fraser Univ, Burnaby, BC, Canada.
EM mohsen.asadi62@gmail.com
RI Gasevic, Dragan/AAT-3909-2020; asadi, mohsen/B-1939-2019
OI Gasevic, Dragan/0000-0001-9265-1908; Hatala, Marek/0000-0001-7418-9529
CR [Anonymous], ANN M SW ED RES ASS
   [Anonymous], 14598 ISOIEC
   [Anonymous], 1999, Using Vision to Think
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   [Anonymous], 2005, INT WORKSH SOFTW FAC
   [Anonymous], 2001, StandardISO/IEC9126
   [Anonymous], 1994, ACM SIGCHI B, DOI [DOI 10.1145/191642.191652, 10.1145/191642.191652]
   Apel S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P421, DOI 10.1145/1985793.1985851
   Apel S, 2009, J OBJECT TECHNOL, V8, P49, DOI 10.5381/jot.2009.8.5.c5
   Asadi M, 2011, P 26 ACM S IN PRESS
   Bagheri E, 2010, SOFTWARE QU IN PRESS
   Bagheri E, 2010, LECT NOTES COMPUT SC, V6287, P300, DOI 10.1007/978-3-642-15579-6_21
   Bangor A, 2008, INT J HUM-COMPUT INT, V24, P574, DOI 10.1080/10447310802205776
   Basili Victor R, 1992, TECHNICAL REPORT
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Batory D, 2005, LECT NOTES COMPUT SC, V3714, P7
   Behkamal B, 2009, INFORM SOFTWARE TECH, V51, P599, DOI 10.1016/j.infsof.2008.08.001
   Benavides D, 2005, LECT NOTES COMPUT SC, V3520, P491
   BENAVIDES D, 2007, P 1 INT WORKSH VAR M
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Bosch J., 2000, Design and Use of Software Architectures: Adopting and Evolving a Product-Line Approach
   Botterweck G, 2008, P 12 INT SOFTW PROD
   Botterweck G, 2009, P 3 INT WORKSH VAR M
   Bowman DA, 2001, PRESENCE-TELEOP VIRT, V10, P96, DOI 10.1162/105474601750182342
   Brewer, 1999, P SECT STAT GRAPH
   Briand L. C., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P345, DOI 10.1109/ICSE.1999.841025
   Byelas H, 2009, J VISUAL LANG COMPUT, V20, P110, DOI 10.1016/j.jvlc.2008.09.001
   Cawley C, 2009, LECT NOTES COMPUT SC, V5876, P857, DOI 10.1007/978-3-642-10520-3_82
   Chin DN, 2001, USER MODEL USER-ADAP, V11, P181, DOI 10.1023/A:1011127315884
   Chua B B., 2004, Beyond the comfort zone: Proceedings of the 21st ASCILITE Conference, P184
   Chuah M. C., 1995, Eighth Annual Symposium on User Interface Software and Technology. UIST '95. Proceedings of the ACM Symposium on User Interface Software and Technology, P61, DOI 10.1145/215585.215654
   COHEN J, 1992, PSYCHOL BULL, V112, P155, DOI 10.1037/0033-2909.112.1.155
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   De Lucia A, 2010, EMPIR SOFTW ENG, V15, P455, DOI 10.1007/s10664-009-9127-7
   Dhungana D, 2011, AUTOMAT SOFTW ENG, V18, P77, DOI 10.1007/s10515-010-0076-6
   Easterbrook S., Proceedings of the Twenty-second IEEE/ACM International Conference on Automated Software Engineering, ser. ASE '07. New York, NY, USA: ACM, P574, DOI [10.1145/1321631.1321749, DOI 10.1145/1321631.1321749]
   El Dammagh M, 2011, LECT NOTES COMPUT SC, V6999, P120, DOI 10.1007/978-3-642-24574-9_17
   Fernandez R, 20091 GIRO U VALL DE
   Few S, 2008, PRACTICAL RULES USIN
   Genero M., 2001, Advanced Information Systems Engineering. 13th International Conference, CAiSE 2001. Proceedings (Lecture Notes in Computer Science Vol.2068), P388
   Guo JM, 2011, J SYST SOFTWARE, V84, P2208, DOI 10.1016/j.jss.2011.06.026
   Heidenreich F., 2008, P 2 INT WORKSH VIS S
   Heidenreich F, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P943
   Johnson B., 1991, Proceedings Visualization '91 (Cat. No.91CH3046-0), P284, DOI 10.1109/VISUAL.1991.175815
   Keim DA, 2008, LECT NOTES COMPUT SC, V4404, P76, DOI 10.1007/978-3-540-71080-6_6
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   KORSON T, 1990, COMMUN ACM, V33, P40, DOI 10.1145/83880.84459
   Lange CFJ, 2007, INT C PROGRAM COMPRE, P221
   Langelier G., 2005, Proc. IEEE/ACM Automated Software Engineering, P214
   Lisboa LB, 2010, INFORM SOFTWARE TECH, V52, P1, DOI 10.1016/j.infsof.2009.05.001
   Liu ZC, 2008, IEEE T VIS COMPUT GR, V14, P1173, DOI 10.1109/TVCG.2008.121
   Losavio F., 2002, J OBJECT TECHNOL, V1, P165, DOI [10.5381/jot.2002.1.1.c, DOI 10.5381/JOT.2002.1.1.C]
   Lozano Luis M., 2008, Methodology, P73, DOI [10.1027/1614-2241.4.2.73, DOI 10.1027/1614-2241.4.2.73]
   Mendonca M, 2008, GPCE'08: PROCEEDINGS OF THE ACM SIGPLAN SEVENTH INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING AND COMPONENT ENGINEERING, P13
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   Nestor D, 2007, P 2007 C CTR ADV STU, P315
   Paas F, 2004, INSTR SCI, V32, P1, DOI 10.1023/B:TRUC.0000021806.17516.d0
   Pasetti A, 2005, XFEATURE FEATURE MOD
   Plaisant C, 2002, INFOVIS 2002: IEEE SYMPOSIUM ON INFORMATION VISUALIZATION 2002, P57, DOI 10.1109/INFVIS.2002.1173148
   Pleuss Andreas, 2011, P 15 INT SOFTW PROD, V2, DOI [10.1145/2019136.2019161, DOI 10.1145/2019136.2019161]
   prefuse, 2010, INT INF VIS TOOLK
   *PUR SYST GMBH, 2003, VAR MAN PUR VAR
   Purchase H., 1997, Graph Drawing. 5th International Symposium, GD '97. Proceedings, P248, DOI 10.1007/3-540-63938-1_67
   Reddivari S, 2013, S VIS LANG HUM CEN C, P389, DOI 10.1109/RE.2013.6636762
   Robertson G. G., 1991, Human Factors in Computing Systems. Reaching Through Technology. CHI '91. Conference Proceedings, P189, DOI 10.1145/108844.108883
   SCHNEIDERMAN B, 2009, ENG USER INTERFACE
   Sellier D., 2007, 2 INT WORKSHOP REQUI, P7, DOI [10.1109/REV.2007.8, DOI 10.1109/REV.2007.8]
   Shneiderman B, 1996, IEEE SYMPOSIUM ON VISUAL LANGUAGES, PROCEEDINGS, P336, DOI 10.1109/VL.1996.545307
   Shneiderman B, 2007, COMMUN ACM, V50, P20
   Siegmund J., 2014, P 36 INT C SOFTW ENG
   Siegmund N., 2011, SOFTWARE QUALITY J
   Soltani S., 2012, P 16 INT SOFTW PROD
   Stasko J, 2000, IEEE SYMPOSIUM ON INFORMATION VISUALIZATION 2000, P57, DOI 10.1109/INFVIS.2000.885091
   Stone Maureen., 2006, Choosing colors for data visualization
   Teyseyre AR, 2009, IEEE T VIS COMPUT GR, V15, P87, DOI 10.1109/TVCG.2008.86
   Thüma T, 2014, SCI COMPUT PROGRAM, V79, P70, DOI 10.1016/j.scico.2012.06.002
   Trinidad Pablo, 2008, 12 INT C SOFTW PROD, V2, P295
   van der Linden F. J., 2007, Software Product Lines in Action: the Best Industrial Practice in Product Line Engineering
   Venkatesh V, 2000, MANAGE SCI, V46, P186, DOI 10.1287/mnsc.46.2.186.11926
   Venkatesh V, 2008, DECISION SCI, V39, P273, DOI 10.1111/j.1540-5915.2008.00192.x
NR 80
TC 7
Z9 9
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2016
VL 21
IS 4
BP 1706
EP 1743
DI 10.1007/s10664-014-9353-5
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DQ2VF
UT WOS:000379060700009
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Bavota, G
   Qusef, A
   Oliveto, R
   De Lucia, A
   Binkley, D
AF Bavota, Gabriele
   Qusef, Abdallah
   Oliveto, Rocco
   De Lucia, Andrea
   Binkley, Dave
TI Are test smells really harmful? An empirical study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Test smells; Unit testing; Mining software repositories; Controlled
   experiments
ID CODE SMELLS
AB Bad code smells have been defined as indicators of potential problems in source code. Techniques to identify and mitigate bad code smells have been proposed and studied. Recently bad test code smells (test smells for short) have been put forward as a kind of bad code smell specific to tests such a unit tests. What has been missing is empirical investigation into the prevalence and impact of bad test code smells. Two studies aimed at providing this missing empirical data are presented. The first study finds that there is a high diffusion of test smells in both open source and industrial software systems with 86 % of JUnit tests exhibiting at least one test smell and six tests having six distinct test smells. The second study provides evidence that test smells have a strong negative impact on program comprehension and maintenance. Highlights from this second study include the finding that comprehension is 30 % better in the absence of test smells.
C1 [Bavota, Gabriele] Univ Sannio, Benevento, BN, Italy.
   [Qusef, Abdallah] Princess Sumaya Univ Technol, Amman, Jordan.
   [Oliveto, Rocco] Univ Molise, Pesche, IS, Italy.
   [De Lucia, Andrea] Univ Salerno, Fisciano, SA, Italy.
   [Binkley, Dave] Loyola Univ Maryland, Baltimore, MD USA.
C3 University of Sannio; Princess Sumaya University for Technology;
   University of Molise; University of Salerno; Loyola University Maryland
RP Oliveto, R (corresponding author), Univ Molise, Pesche, IS, Italy.
EM gbavota@unisannio.it; a.qusef@psut.edu.jo; rocco.oliveto@unimol.it;
   adelucia@unisa.it; binkley@cs.loyola.edu
RI De Lucia, Andrea/AAG-6781-2020
OI BAVOTA, Gabriele/0000-0002-2216-3148; De Lucia,
   Andrea/0000-0002-4238-1425; Qusef, Abdallah/0000-0003-4769-6992
CR Abbes M, 2011, EUR CON SFTWR MTNCE, P181, DOI 10.1109/CSMR.2011.24
   [Anonymous], P 9 WORK C REV ENG W
   [Anonymous], 2010, 2010 IEEE International Conference on Software Maintenance, DOI [10.1109/ICSM.2010.5609564, DOI 10.1109/ICSM.2010.5609564]
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Arcoverde R., 2011, WORKSH REF TOOLS, P33
   Baeza-Yates Ricardo, 1999, MODERN INFORM RETRIE, V463
   Baker P, 2006, TAIC PART - TESTING: ACADEMIC & INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P90, DOI 10.1109/TAIC-PART.2006.35
   Bavota G, 2013, ARE TEST SMELLS REAL
   Bavota G, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P56, DOI 10.1109/ICSM.2012.6405253
   Breugelmans M, 2008, P 1 INT WORKSH ADV S
   Chatzigeorgiou A, 2010, QUATIC
   Cohen J., 1988, STAT POWER ANAL BEHA
   Conover W. J., 1998, PRACTICAL NONPARAMET, V3rd
   Deligiannis I, 2003, J SYST SOFTWARE, V65, P127, DOI 10.1016/S0164-1212(02)00054-7
   Devore J., 1999, APPL STAT ENG SCI
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Greiler M, 2013, MSR
   Greiler M, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P322, DOI 10.1109/ICST.2013.45
   Grissom R. J., 2005, EFFECT SIZES RES BRO
   Hindle A., 2007, 4 INT WORKSH MIN SOF
   Khomh F, 2009, P 2009 16 WORK C REV
   Khomh F, 2012, EMPIR SOFTW ENG, V17, P243, DOI 10.1007/s10664-011-9171-y
   Khomh F, 2009, INT CONF QUAL SOFTW, P305, DOI 10.1109/QSIC.2009.47
   KRUSKAL WH, 1952, J AM STAT ASSOC, V47, P583, DOI 10.1080/01621459.1952.10483441
   Lanza Michele, 2006, Objectoriented metrics in practice: using software metrics to characterize, evaluate, and improve the design of object-oriented systems
   Li W, 2007, J SYST SOFTWARE, V80, P1120, DOI 10.1016/j.jss.2006.10.018
   Marinescu R, 2004, PROC IEEE INT CONF S, P350, DOI 10.1109/ICSM.2004.1357820
   Meszaros G., 2007, Xunit test patterns: refactoring test code
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Munro M.J, 2005, P 11 INT SOFTW METR
   Neukirchen H, 2007, LECT NOTES COMPUT SC, V4581, P228
   Oppenheim A.N., 1992, QUESTIONNAIRE DESIGN
   Palomba F, 2013, IEEE INT CONF AUTOM, P268, DOI 10.1109/ASE.2013.6693086
   Peters R, 2012, EUR CON SFTWR MTNCE, P411, DOI 10.1109/CSMR.2012.79
   Pinto L.S., 2012, P ACM SIGSOFT 20 INT, P1
   Qusef A., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P63, DOI 10.1109/ICSM.2011.6080773
   Ratiu D, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P223
   Reichhart S, 2007, J OBJECT TECHNOL, V6, P231, DOI 10.5381/jot.2007.6.9.a12
   Ricca F, 2007, PROC INT CONF SOFTW, P375
   Ricca F, 2010, IEEE T SOFTWARE ENG, V36, P96, DOI 10.1109/TSE.2009.69
   Simon F, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P30, DOI 10.1109/CSMR.2001.914965
   Tsantalis N, 2009, IEEE T SOFTWARE ENG, V35, P347, DOI 10.1109/TSE.2009.1
   Van Deursen A., 2002, PROC 3 INT C EXTREME, P71
   Van Deursen Arie., 2001, Refactoring Test Code
   Van Rompaey B, 2007, IEEE T SOFTWARE ENG, V33, P800, DOI 10.1109/TSE.2007.70745
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Yamashita A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P682, DOI 10.1109/ICSE.2013.6606614
   Zaidman A, 2011, EMPIR SOFTW ENG, V16, P325, DOI 10.1007/s10664-010-9143-7
NR 48
TC 106
Z9 114
U1 0
U2 14
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2015
VL 20
IS 4
BP 1052
EP 1094
DI 10.1007/s10664-014-9313-0
PG 43
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CJ8MB
UT WOS:000355754500005
DA 2024-07-18
ER

PT J
AU Siegmund, J
   Kastner, C
   Liebig, J
   Apel, S
   Hanenberg, S
AF Siegmund, Janet
   Kaestner, Christian
   Liebig, Joerg
   Apel, Sven
   Hanenberg, Stefan
TI Measuring and modeling programming experience
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Programming experience; Questionnaire; Controlled experiments
ID FIT INDEXES; COMPREHENSION
AB Programming experience is an important confounding parameter in controlled experiments regarding program comprehension. In literature, ways to measure or control programming experience vary. Often, researchers neglect it or do not specify how they controlled for it. We set out to find a well-defined understanding of programming experience and a way to measure it. From published comprehension experiments, we extracted questions that assess programming experience. In a controlled experiment, we compare the answers of computer-science students to these questions with their performance in solving program-comprehension tasks. We found that self estimation seems to be a reliable way to measure programming experience. Furthermore, we applied exploratory and confirmatory factor analyses to extract and evaluate a model of programming experience. With our analysis, we initiate a path toward validly and reliably measuring and describing programming experience to better understand and control its influence in program-comprehension experiments.
C1 [Siegmund, Janet] Univ Passau, Software Productline Grp Sven Apel, D-94032 Passau, Germany.
   [Liebig, Joerg] Univ Passau, Chair Programming, D-94032 Passau, Germany.
   [Liebig, Joerg; Apel, Sven] Univ Passau, Chair Software Prod Lines, D-94032 Passau, Germany.
   [Kaestner, Christian] Carnegie Mellon Univ, Pittsburgh, PA 15213 USA.
   [Hanenberg, Stefan] Univ Duisburg Essen, Inst Comp Sci & Business Informat Syst, Essen, Germany.
C3 University of Passau; University of Passau; University of Passau;
   Carnegie Mellon University; University of Duisburg Essen
RP Siegmund, J (corresponding author), Univ Passau, Software Productline Grp Sven Apel, D-94032 Passau, Germany.
EM siegmunj@fim.uni-passau.de; kaestner@cs.cmu.edu;
   joliebig@fim.uni-passau.de; apel@uni-passau.de;
   stefan.hanenberg@icb.uni-due.de
OI Kastner, Christian/0000-0002-4450-4572; Apel, Sven/0000-0003-3687-2233
FU BMBF [01IM10002B]; ERC [203099]; DFG [AP 206/2, AP 206/4, AP 206/5];
   European Research Council (ERC) [203099] Funding Source: European
   Research Council (ERC)
FX We thank all the reviewers for their constructive feedback. We thank
   Jana Schumann for her support in the literature study and all
   experimenters for their support in setting up and conducting the
   experiment. Thanks to Veit Koppen for his support in the analysis of
   data. Siegmund's work is supported by BMBF project 01IM10002B, Kastner's
   work by ERC grant #203099, and Apel's work by DFG projects AP 206/2, AP
   206/4, and AP 206/5.
CR Anderson T.W., 1996, NEW STAT ANAL DATA
   Anderson TW, 1956, P 3 BERK S MATH STAT, P1954
   [Anonymous], 2003, APPL MULTIPLE REGRES
   [Anonymous], 1980, ANN M PSYCH SOC
   [Anonymous], 2012, INT WORKSHOP FEATURE
   [Anonymous], 2000, CONSTRUCTING EFFECTI
   [Anonymous], 1988, Statistical Power Analysis for the Behavioral Sciences
   Arisholm E, 2007, IEEE T SOFTWARE ENG, V33, P65, DOI 10.1109/TSE.2007.17
   Askar P, 2009, TURK ONLINE J EDUC T, V8, P26
   Bagozzi RP, 2012, J ACAD MARKET SCI, V40, P8, DOI 10.1007/s11747-011-0278-x
   Bartholomew D, 2011, WILEY SER PROBAB ST, P1, DOI 10.1002/9781119970583
   Biffl S, 2001, PROC INT CONF SOFTW, P145, DOI 10.1109/ICSE.2001.919089
   Bornat R., 2008, P 10 C AUSTR COMP ED, V78, P53
   Bunse C, 2006, EMPIR SOFTW ENG, V11, P227, DOI 10.1007/s10664-006-6403-7
   Costello A.B., 2005, Research and Evaluation, V10, P173
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Erdogmus H, 2005, IEEE T SOFTWARE ENG, V31, P226, DOI 10.1109/TSE.2005.37
   Feigenspan J., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P73
   Feigenspan J., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P244
   Feigenspan Janet, 2011, 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), P66, DOI 10.1049/ic.2011.0008
   Feigenspan J, 2011, PAPER 3, P1
   Feigenspan J, 2013, EMPIR SOFTW ENG, V18, P699, DOI 10.1007/s10664-012-9208-x
   Figueiredo E, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P261, DOI 10.1145/1368088.1368124
   Goodwin J., 1999, Research in psychology: Methods and design, V2nd
   Hanenberg S, 2009, INT SYMP EMP SOFTWAR, P156, DOI 10.1109/ESEM.2009.5316028
   Hannay JE, 2010, IEEE T SOFTWARE ENG, V36, P61, DOI 10.1109/TSE.2009.41
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   Hu LT, 1999, STRUCT EQU MODELING, V6, P1, DOI 10.1080/10705519909540118
   Hu LT, 1998, PSYCHOL METHODS, V3, P424, DOI 10.1037/1082-989X.3.4.424
   Jedlitschka A., 2008, Guide to advanced empirical software engineering, P201, DOI DOI 10.1007/978-1-84800-044-5_8
   Kitchenham B., 2007, Joint Report
   Kleinschmager S., 2011, Proceedings of the 3rd ACM SIGPLAN Workshop on Evaluation and Usability of Programming Languages and Tools, P15, DOI [10.1145/2089155, DOI 10.1145/2089155]
   Lewis-Beck C., 2015, Applied Regression: an Introduction, V22
   Müller MM, 2004, EMPIR SOFTW ENG, V9, P335, DOI 10.1023/B:EMSE.0000039883.47173.39
   Ricca F, 2007, PROC INT CONF SOFTW, P375
   Sillito J, 2008, IEEE T SOFTWARE ENG, V34, P434, DOI 10.1109/TSE.2008.26
   Tichy W. F., 2000, Empirical Software Engineering, V5, P309, DOI 10.1023/A:1009844119158
   VONMAYRHAUSER A, 1995, COMPUTER, V28, P44, DOI 10.1109/2.402076
   Westland JC, 2010, ELECTRON COMMER R A, V9, P476, DOI 10.1016/j.elerap.2010.07.003
NR 39
TC 76
Z9 82
U1 0
U2 11
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2014
VL 19
IS 5
BP 1299
EP 1334
DI 10.1007/s10664-013-9286-4
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AP9VT
UT WOS:000342429900006
DA 2024-07-18
ER

PT J
AU Thomas, SW
   Hemmati, H
   Hassan, AE
   Blostein, D
AF Thomas, Stephen W.
   Hemmati, Hadi
   Hassan, Ahmed E.
   Blostein, Dorothea
TI Static test case prioritization using topic models
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Testing and debugging; Test case prioritization; Topic models
AB Software development teams use test suites to test changes to their source code. In many situations, the test suites are so large that executing every test for every source code change is infeasible, due to time and resource constraints. Development teams need to prioritize their test suite so that as many distinct faults as possible are detected early in the execution of the test suite. We consider the problem of static black-box test case prioritization (TCP), where test suites are prioritized without the availability of the source code of the system under test (SUT). We propose a new static black-box TCP technique that represents test cases using a previously unused data source in the test suite: the linguistic data of the test cases, i.e., their identifier names, comments, and string literals. Our technique applies a text analysis algorithm called topic modeling to the linguistic data to approximate the functionality of each test case, allowing our technique to give high priority to test cases that test different functionalities of the SUT. We compare our proposed technique with existing static black-box TCP techniques in a case study of multiple real-world open source systems: several versions of Apache Ant and Apache Derby. We find that our static black-box TCP technique outperforms existing static black-box TCP techniques, and has comparable or better performance than two existing execution-based TCP techniques. Static black-box TCP methods are widely applicable because the only input they require is the source code of the test cases themselves. This contrasts with other TCP techniques which require access to the SUT runtime behavior, to the SUT specification models, or to the SUT source code.
C1 [Thomas, Stephen W.; Hemmati, Hadi; Hassan, Ahmed E.; Blostein, Dorothea] Queens Univ, Sch Comp, Kingston, ON, Canada.
C3 Queens University - Canada
RP Thomas, SW (corresponding author), Queens Univ, Sch Comp, 156 Barrie St, Kingston, ON, Canada.
EM sthomas@cs.queensu.ca; hemmati@cs.queensu.ca; ahmed@cs.queensu.ca;
   blostein@cs.queensu.ca
RI Ali, Ahmed/HOF-4672-2023; Hassan, Ahmed/AAB-7241-2019; KHALIFA, AHMED
   khalifa/HKF-2246-2023
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572
CR Ali S, 2010, IEEE T SOFTWARE ENG, V36, P742, DOI 10.1109/TSE.2009.52
   [Anonymous], 2012586 QUEENS U SCH
   [Anonymous], 2010, IEEE INT C SOFTWARE
   [Anonymous], 2009, TEXT MINING CLASSIFI, DOI [DOI 10.1145/1141844.1143859, DOI 10.1201/9781420059458.CH4]
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Asuncion HU, 2010, 2010 ACM IEEE 32 INT, V1, P95
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Chang J, 2011, IDA COLLAPSED GIBBS
   Cordy JR, 2006, SCI COMPUT PROGRAM, V61, P190, DOI 10.1016/j.scico.2006.04.002
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Elbaum S, 2002, IEEE T SOFTWARE ENG, V28, P159, DOI 10.1109/32.988497
   Gethers M., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P133, DOI 10.1109/ICSM.2011.6080780
   Grant S, 2010, IEEE INT WORK C SO, P65, DOI 10.1109/SCAM.2010.22
   Griffiths TL, 2007, PSYCHOL REV, V114, P211, DOI 10.1037/0033-295X.114.2.211
   Griffiths TL, 2004, P NATL ACAD SCI USA, V101, P5228, DOI 10.1073/pnas.0307752101
   Hemmati H., 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P327, DOI 10.1109/ICST.2011.12
   Hemmati H., 2010, P 18 ACM SIGSOFT INT, P267
   Hemmati H, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2430536.2430540
   Hemmati H, 2010, LECT NOTES COMPUT SC, V6435, P63, DOI 10.1007/978-3-642-16573-3_6
   Hofmann T, 1999, SIGIR'99: PROCEEDINGS OF 22ND INTERNATIONAL CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P50, DOI 10.1145/312624.312649
   Ihaka R., 1996, J COMPUTATIONAL GRAP, V5, P299, DOI [DOI 10.1080/10618600.1996.10474713, 10.2307/1390807, DOI 10.2307/1390807]
   Jiang B, 2009, IEEE INT CONF AUTOM, P233, DOI 10.1109/ASE.2009.77
   Jones JA, 2003, IEEE T SOFTWARE ENG, V29, P195, DOI 10.1109/TSE.2003.1183927
   Korel Bogdan., 2007, Proceedings of the 3rd International Workshop on Advances in Model-Based Testing, P34
   Kuhn A, 2007, INFORM SOFTWARE TECH, V49, P230, DOI 10.1016/j.infsof.2006.10.017
   KULLBACK S, 1951, ANN MATH STAT, V22, P79, DOI 10.1214/aoms/1177729694
   Kumar A, 2010, QCON 2010 SAN FRANC
   Ledru Y, 2012, AUTOMAT SOFTW ENG, V19, P65, DOI 10.1007/s10515-011-0093-0
   Ledru Y, 2009, IEEE INT CONF AUTOM, P510, DOI 10.1109/ASE.2009.23
   Leon D, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P442, DOI 10.1109/ISSRE.2003.1251065
   Liang Z, 2009, WISM: 2009 INTERNATIONAL CONFERENCE ON WEB INFORMATION SYSTEMS AND MINING, PROCEEDINGS, P19, DOI 10.1109/WISM.2009.12
   Linstead E, 2008, SEVENTH INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS, PROCEEDINGS, P813, DOI 10.1109/ICMLA.2008.47
   Liu YX, 2009, PROC IEEE INT CONF S, P233, DOI 10.1109/ICSM.2009.5306318
   Lukins SK, 2010, INFORM SOFTWARE TECH, V52, P972, DOI 10.1016/j.infsof.2010.04.002
   Marcus A, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P214, DOI 10.1109/WCRE.2004.10
   Maskeri Girish, 2008, 1st India Software Engineering Conference. ISEC 2008, P113
   Masri W, 2007, IEEE T SOFTWARE ENG, V33, P454, DOI 10.1109/TSE.2007.1020
   McMaster S, 2006, IEEE T SOFTWARE ENG, V34, P99
   Mei H, 2012, IEEE T SOFTWARE ENG, V38, P1258, DOI 10.1109/TSE.2011.106
   Oliveto R, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P820, DOI 10.1145/1985793.1985913
   Porteous I., 2008, P 14 ACM SIGKDD INT, P569, DOI DOI 10.1145/1401890.1401960
   Ramanathan MK, 2008, APPLIED COMPUTING 2008, VOLS 1-3, P667
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Rothermel G, 2002, SOFTW TEST VERIF REL, V12, P219, DOI 10.1002/stvr.256
   Sampath Sreedevi, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P141, DOI 10.1109/ICST.2008.42
   Savage T, 2010, Proceedings of the 2010 IEEE International Conference on Software Maintenance, ICSM '10, P1, DOI [10.1109/ICSM.2010.5609654, DOI 10.1109/ICSM.2010.5609654]
   Shaowei Wang, 2011, 2011 18th Working Conference on Reverse Engineering, P92, DOI 10.1109/WCRE.2011.72
   Simao AD, 2006, P INT COMP SOFTW APP, P93
   Smite D, 2008, 2008 3RD IEEE INTERNATIONAL CONFERENCE GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P173, DOI 10.1109/ICGSE.2008.22
   Songyu Chen, 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P1, DOI 10.1109/ICST.2011.38
   Thomas SW, 2010, IEEE INT WORK C SO, P55, DOI 10.1109/SCAM.2010.13
   Thomas SW, 2011, 8 WORK C MIN SOFTW R, P173
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Wallach H.M., 2009, P 26 ANN INT C MACH, P1105, DOI DOI 10.1145/1553374.1553515
   Wang WE, 1997, EIGHTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P264, DOI 10.1109/ISSRE.1997.630875
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Yoo S, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P201
NR 57
TC 95
Z9 102
U1 1
U2 15
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2014
VL 19
IS 1
BP 182
EP 212
DI 10.1007/s10664-012-9219-7
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AA3HQ
UT WOS:000330983900006
DA 2024-07-18
ER

PT J
AU Bannerman, S
   Martin, A
AF Bannerman, Steve
   Martin, Andrew
TI A multiple comparative study of test-with development product changes
   and their effects on team speed and product quality
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Multiple comparative study; Test-with development; Team speed; Product
   quality
ID TEST-DRIVEN DEVELOPMENT; SOFTWARE
AB Researchers have typically studied the effects of Test-First Development (TFD), compared to Test-Last Development (TLD), across groups or projects, and for relatively short durations. We defined Test-With Development (TWD) as more general than the fine-grained step of TFD, but also in contrast to the large-grained phase of TLD. With our definition, we performed a multiple comparative study to explore and describe TWD product changes, and the effects of those changes on two attributes related to team speed and two attributes related to product quality, within six long-term open-source projects. Our results indicate that when developers exercised some of their changes with automated tests, on average they made significantly larger changes over time while significantly reducing their product's complexity. And, when they exercised all of their changes with tests, on average they made significantly smaller changes over time. We interpret these results to indicate that practicing TWD supports faster simplification of a product. Therefore, we conclude that teams that need to reduce their product's complexity can benefit from practicing TWD.
C1 [Bannerman, Steve; Martin, Andrew] Univ Oxford, Comp Lab, Oxford OX1 3QD, England.
C3 University of Oxford
RP Bannerman, S (corresponding author), Univ Oxford, Comp Lab, Wolfson Bldg,Parks Rd, Oxford OX1 3QD, England.
EM steve.bannerman@comlab.ox.ac.uk; andrew.martin@comlab.ox.ac.uk
RI Martin, Andrew/GZL-3234-2022
OI Martin, Andrew/0000-0001-5804-2295; Martin, Andrew/0000-0002-8236-980X;
   Bannerman, Steve/0000-0001-9297-5566
CR [Anonymous], SAC 03
   [Anonymous], IFIP 2005
   [Anonymous], 2000, Software Cost Estimation with COCOMO II
   [Anonymous], SIGSOFT SOFTW ENG NO
   [Anonymous], 2007, ESEM 07 INT S EMP SO
   [Anonymous], SIGSOFT SOFTW ENG NO
   [Anonymous], 1997, Software metrics: A rigorous and practical approach
   [Anonymous], ESEM 07
   [Anonymous], METRICS 04
   [Anonymous], EUROCON 2003
   [Anonymous], CATHEDRAL BAZAAR
   [Anonymous], ICSE 06
   [Anonymous], RR1003 U OXF
   [Anonymous], INT S EMP SOFTW ENG
   [Anonymous], ISESE 06
   Auer K., 2002, Extreme programming applied
   Ayewah N, 2008, IEEE SOFTWARE, V25, P22, DOI 10.1109/MS.2008.130
   BASILI VR, 1986, IEEE T SOFTWARE ENG, V12, P733, DOI 10.1109/TSE.1986.6312975
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Beck K, 1999, COMPUTER, V32, P70, DOI 10.1109/2.796139
   Beck Kent, 1999, Extreme Programming Explained: Embrace Change
   Beck Kent., 2003, TEST DRIVEN DEV
   BENBASAT I, 1987, MIS QUART, V11, P369, DOI 10.2307/248684
   CARD DN, 1987, IEEE T SOFTWARE ENG, V13, P845, DOI 10.1109/TSE.1987.233495
   Cook JE, 1998, IEEE T SOFTWARE ENG, V24, P650, DOI 10.1109/32.707700
   Damm LO, 2006, J SYST SOFTWARE, V79, P1001, DOI 10.1016/j.jss.2005.10.015
   Erdogmus H, 2005, IEEE T SOFTWARE ENG, V31, P226, DOI 10.1109/TSE.2005.37
   Gall H, 2007, PROC INT CONF SOFTW, P107, DOI 10.1109/ICSECOMPANION.2007.8
   Hannay JE, 2007, IEEE T SOFTWARE ENG, V33, P87, DOI 10.1109/TSE.2007.12
   Janzen DS, 2006, CONF SOFTW ENG EDUC, P141, DOI 10.1109/CSEET.2006.25
   Jeffries R., 2001, EXTREME PROGRAMMING
   KITCHENHAM B, 1995, IEEE SOFTWARE, V12, P52, DOI 10.1109/52.391832
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Lanza M, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P1037
   Lethbridge TC, 2005, EMPIR SOFTW ENG, V10, P311, DOI 10.1007/s10664-005-1290-x
   Madeyski L, 2005, FRONT ARTIF INTEL AP, V130, P113
   Maximilien EM, 2003, PROC INT CONF SOFTW, P564, DOI 10.1109/ICSE.2003.1201238
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Muller M. M., 2002, IEE Proceedings-Software, V149, P131, DOI 10.1049/ip-sen:20020540
   Nagappan N, 2008, EMPIR SOFTW ENG, V13, P289, DOI 10.1007/s10664-008-9062-z
   Pinsonneault A., 1993, Journal of Management Information Systems, V10, P75
   Robson C., 2002, Real world research
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sanchez JC, 2007, AGILE 2007, PROCEEDINGS, P5, DOI 10.1109/AGILE.2007.43
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Williams L, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P34, DOI 10.1109/ISSRE.2003.1251029
   Zaidman A., 2008, 2008 1st international conference on software testing, verification, and validation, P220
NR 47
TC 4
Z9 5
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2011
VL 16
IS 2
BP 177
EP 210
DI 10.1007/s10664-010-9137-5
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 732VM
UT WOS:000288217800001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Sfetsos, P
   Stamelos, I
   Angelis, L
   Deligiannis, I
AF Sfetsos, Panagiotis
   Stamelos, Ioannis
   Angelis, Lefteris
   Deligiannis, Ignatios
TI An experimental investigation of personality types impact on pair
   effectiveness in pair programming
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Pair programming; Personality/temperament type; Pair performance; Pair
   effectiveness; Pair communication; Pair collaboration-viability;
   Controlled experiment; KTS-test
ID SOFTWARE; PROJECT; SYSTEM; WORK
AB In this paper, pair programming is empirically investigated from the perspective of developer personalities and temperaments and how they affect pair effectiveness. A controlled experiment was conducted to investigate the impact of developer personalities and temperaments on communication, pair performance and pair viability-collaboration. The experiment involved 70 undergraduate students and the objective was to compare pairs of heterogeneous developer personalities and temperaments with pairs of homogeneous personalities and temperaments, in terms of pair effectiveness. Pair effectiveness is expressed in terms of pair performance, measured by communication, velocity, design correctness and passed acceptance tests, and pair collaboration-viability measured by developers' satisfaction, knowledge acquisition and participation. The results have shown that there is important difference between the two groups, indicating better communication, pair performance and pair collaboration-viability for the pairs with heterogeneous personalities and temperaments. In order to provide an objective assessment of the differences between the two groups of pairs, a number of statistical tests and stepwise Discriminant Analysis were used.
C1 [Sfetsos, Panagiotis; Stamelos, Ioannis; Angelis, Lefteris] Aristotle Univ Thessaloniki, Dept Informat, Thessaloniki 54124, Greece.
   [Deligiannis, Ignatios] Alexander Technol Educ Inst, Dept Informat Technol, GR-57400 Thessaloniki, Greece.
C3 Aristotle University of Thessaloniki
RP Sfetsos, P (corresponding author), Aristotle Univ Thessaloniki, Dept Informat, Thessaloniki 54124, Greece.
EM sfetsos@it.teithe.gr; stamelos@csd.auth.gr; lef@csd.auth.gr;
   igndel@it.teithe.gr
RI Stamelos, Ioannis/AAK-7207-2020
CR AHMAD K, 2004, P 1 INT C CONC MAPP
   [Anonymous], 2002, Agile software development
   [Anonymous], 2006, AG 2006 P
   [Anonymous], 1998, PLEASE UNDERSTAND ME
   [Anonymous], EMPIR SOFTW ENG
   Arisholm E, 2007, IEEE T SOFTWARE ENG, V33, P65, DOI 10.1109/TSE.2007.17
   BASILI VR, 1984, IEEE T SOFTWARE ENG, V10, P728, DOI 10.1109/TSE.1984.5010301
   BASILI VR, 1988, IEEE T SOFTWARE ENG, V14, P758, DOI 10.1109/32.6156
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Beck K., 2000, EXTREME PROGRAMMING
   Berens L.V., 1998, Understanding yourself and others - an introduction to temperament
   Bradley J.H., 1997, J MANAG DEV, V16, P337, DOI DOI 10.1108/02621719710174525
   Briand L., 1999, EMPIR SOFTW ENG, V4, P387
   Campos HM, 1996, WATER SCI TECHNOL, V34, P71, DOI 10.1016/0273-1223(96)00558-6
   Canfora G, 2004, PROG COMPREHEN, P62, DOI 10.1109/WPC.2004.1311048
   CAPTEZ LF, 2003, INT J HUM-COMPUT ST, V58, P207, DOI DOI 10.1016/S1071-5819(02)00137-4
   Chao J, 2006, AGILE 2006, PROCEEDINGS, P89, DOI 10.1109/AGILE.2006.20
   Chong J, 2007, PROC INT CONF SOFTW, P354
   COCKBURN A, 2000, 1 INT C EXTR PROGR F
   COCKBURN A, 1998, COFFEE MACHINE DES 1
   COCKBURN A, 1998, COFFEE MACHINE DES 2
   Coleman James S, 1994, FDN SOCIAL THEORY
   Cook T. D., 1979, Quasi-experimentation: Design analysis issues for field settings
   *CTR APPL PSYCH TY, 2006, MBTI COD ETH
   CURTIS B, 1988, COMMUN ACM, V31, P1268, DOI 10.1145/50087.50089
   Dutoit AH, 1998, IEEE T SOFTWARE ENG, V24, P615, DOI 10.1109/32.707697
   Fenton NE., 1991, Software Metrics: A Rigorous Approach
   Ferdinandi PL, 1998, IEEE SOFTWARE, V15, P92, DOI 10.1109/52.714835
   Forsyth D.R., 2006, Group Dynamics, V5th
   Gallis H, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P132, DOI 10.1109/ISESE.2003.1237972
   Gallis H., 2002, Proceedings of Pair programming workshop in 17th annual ACM conference on Object-Oriented Programming, Systems, Languages, and Applications, P1
   Gorla N, 2004, COMMUN ACM, V47, P79, DOI 10.1145/990680.990684
   Halfhill T, 2005, SMALL GR RES, V36, P83, DOI 10.1177/1046496404268538
   Highsmith J., 2002, Agile software development ecosystems
   HULKKO H, 2005, MULTIPLE CASE STUDY, P495
   Humphrey WattsS., 1997, Managing technical people: Innovation, teamwork, and the software process
   Humphrey WS, 1996, IEEE SOFTWARE, V13, P77, DOI 10.1109/52.493023
   Jensen R., 2003, J DEF SOFTW ENG, V16, P22
   Johnson PM, 2003, PROC INT CONF SOFTW, P641, DOI 10.1109/ICSE.2003.1201249
   Judd C.M., 1991, Research methods in social relations, V6th
   Katira N, 2005, PROC INT CONF SOFTW, P625
   KATIRA N, 2004, ACM TECHN S COMP SCI, P7
   KEEFER G, 2005, CUTTER IT J
   Keirsey D., 1984, PLEASE UNDERSTAND ME
   Khamesan A, 2004, P 1 INT C CONC MAPP
   Kirkman BL, 2001, PERS PSYCHOL, V54, P645, DOI 10.1111/j.1744-6570.2001.tb00226.x
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Langley A, 1999, ACAD MANAGE REV, V24, P691, DOI 10.2307/259349
   Laplante P. A., 2006, ANTIPATTERNS IDENTIF
   Leana CR, 1999, ACAD MANAGE REV, V24, P538, DOI 10.2307/259141
   Lui K. M., 2003, LNCS, P225
   Lui KM, 2006, INT J HUM-COMPUT ST, V64, P915, DOI 10.1016/j.ijhcs.2006.04.010
   MACIAS F, 2004, THESIS U SHEFFIELD
   McDonald S., 2007, Communications of the ACM, V50, P66, DOI 10.1145/1188913.1188919
   McDowell C., 2002, EFFECTS PAIR PROGRAM, P38, DOI [10.1145/563517.563353, DOI 10.1145/563517.563353]
   Melnik G, 2004, PROCEEDINGS OF THE AGILE DEVELOPMENT CONFERENCE, P21
   MELNIK G, 2002, PERCEPTIONS AGILE PR, P241
   MULLER M, 2003, 7 INT C EMP ASS SOFT, V9, P335
   Müller MM, 2005, J SYST SOFTWARE, V78, P166, DOI 10.1016/j.jss.2004.12.019
   Müller MM, 2001, PROC INT CONF SOFTW, P537, DOI 10.1109/ICSE.2001.919128
   Myers I. B., 1962, MANUAL MYERS BRIGGS
   Nawrocki J., 2001, 12 EUR SOFTW CONTR M
   Nielsen T.M., 2005, The Handbook of Group Research and Practice, P285, DOI DOI 10.4135/9781412990165.D21
   Nosek JT, 1998, COMMUN ACM, V41, P105, DOI 10.1145/272287.272333
   OHIRA M, 2004, 1 INT WORKSH MIN SOF, P141
   SAEKI M, 1995, AS PAC SOFTW ENG C B, P12
   Seaman CB, 1997, PROC INT CONF SOFTW, P96, DOI 10.1145/253228.253248
   Sfetsos P, 2006, EMPIR SOFTW ENG, V11, P269, DOI 10.1007/s10664-006-6404-6
   Sillitti A, 2003, EUROMICRO CONF PROC, P336
   STEVENS T, 1998, THESIS VIRGINIA POLY
   Stoyanova N., 2002, Journal of Interactive Learning Research, V13, P111
   SUNDSTROM E, 1990, AM PSYCHOL, V45, P120, DOI 10.1037/0003-066X.45.2.120
   Thoma I, 2003, PLANT J, V34, P363, DOI 10.1046/j.1365-313X.2003.01730.x
   Tomayko J.E., 2002, J COMPUTER SCI ED, V12, P213, DOI DOI 10.1076/CSED.12.3.213.8614
   Trochim W.M. K., 1999, RES METHODS KNOWLEDG
   Williams L, 2000, IEEE SOFTWARE, V17, P19, DOI 10.1109/52.854064
   Williams L, 2004, PROCEEDINGS OF THE AGILE DEVELOPMENT CONFERENCE, P11
   Williams L, 2001, 14TH CONFERENCE ON SOFTWARE ENGINEERING EDUCATION AND TRAINING, PROCEEDINGS, P27, DOI 10.1109/CSEE.2001.913816
   Williams Laurie A., 2003, Pair programming illuminated
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
NR 80
TC 46
Z9 51
U1 4
U2 28
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2009
VL 14
IS 2
BP 187
EP 226
DI 10.1007/s10664-008-9093-5
PG 40
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 414VA
UT WOS:000263892100003
DA 2024-07-18
ER

PT J
AU Crespo, AN
   Jino, M
   Pasquini, A
   Maldonado, JC
AF Crespo, Adalberto Nobiato
   Jino, Mario
   Pasquini, Alberto
   Maldonado, Jose Carlos
TI A binomial software reliability model based on coverage of structural
   testing criteria
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE software reliability models; structural testing criteria; test coverage
AB A new approach to software reliability modeling is discussed where variables indirectly related with software reliability are used to provide additional information for the modeling process. Previous studies, empirical and theoretical evidences, and results from experiments indicate that there is a strong relationship between software reliability and coverage of program elements required to be exercised by structural testing criteria. This paper develops a binomial type coverage-based software reliability model through the definition of a coverage-based failure rate function. The Binomial software reliability Model Based on Coverage-BMBC-is proposed and discussed. In the BMBC test data between failures is used instead of time as independent variable; the model was assessed with test data from a real application, making use of the following structural testing criteria: all-nodes, all-edges, and potential-uses-a data-flow based family of testing criteria. The results from our experiments have shown that our modeling approach has some advantages over some traditional reliability models and points to a very promising research direction in software reliability.
C1 [Crespo, Adalberto Nobiato] Univ Sao Francisco, Ctr Pesquisas Renato Archer CenPRA, Campinas, SP, Brazil.
   [Jino, Mario] Univ Estadual Campinas, Dept Comp Engn, Sch Elect & Comp Engn, Fac Elect Engn & Comp Unicamp, Campinas, SP, Brazil.
   [Pasquini, Alberto] DeepBlue, Rome, Italy.
   [Maldonado, Jose Carlos] ICMC USP, Dept Comp Sci, Sao Carlos, SP, Brazil.
   [Pasquini, Alberto] Italian Agcy Environm Energy & New Technol, Rome, Italy.
C3 Universidade Sao Francisco; Universidade Estadual de Campinas
RP Crespo, AN (corresponding author), Univ Sao Francisco, Ctr Pesquisas Renato Archer CenPRA, Campinas, SP, Brazil.
EM crespo@cenpra.gov.br; jino@dca.fee.unicamp.br;
   alberto.pasquini@dblue.it; jcmaldon@icmc.usp.br
RI Maldonado, José Carlos/E-9290-2011; Isec, Inct/I-2409-2013
CR ADAMS EN, 1980, 8228 IBM RC
   [Anonymous], 1996, HDB SOFTWARE RELIABI
   [Anonymous], 1990, Software testing techniques {
   [Anonymous], 1991, 9126 ISOIEC
   [Anonymous], 12 INT C CHIL SCI CO
   [Anonymous], 2014, Software engineering: a practitioner's approach
   Bastani F.B., 1986, Reliability Theory, P321
   BISHOP P, 1990, PREDICTION MEASUREME, V3
   BUTLER RW, 1991, P C SOFTW CRIT SYST, P66
   CHAIM ML, 1991, THESIS DCA FEE UNICA
   Chen M., 1997, P S REL DISTR SYST D
   CHEN M, 1994, THESIS PURDUE U W LA
   Chen M., 1996, P 3 INT SOFTW METR S
   CHEN MH, 1995, IEEE T RELIAB, V44, P97, DOI 10.1109/24.376528
   Chen MH, 2001, IEEE T RELIAB, V50, P165, DOI 10.1109/24.963124
   Crespo A. N., 1997, AN 11 S BRAS ENG SOF
   Crespo AN, 1996, SEVENTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P35, DOI 10.1109/ISSRE.1996.558688
   CRESPO AN, 1997, THESIS DCA FEEC UNIC
   DelFrate F, 1995, SIXTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P124, DOI 10.1109/ISSRE.1995.497650
   FARR WH, 1993, STAT MODELING ESTIMA
   FRANKL PG, 1988, IEEE T SOFTWARE ENG, V14, P1483, DOI 10.1109/32.6194
   Frate F. D., 1995, SERCTR162P PURD U, P47907
   GARG P, 1994, INVESTIGATING COVERA
   GOEL AL, 1979, IEEE T RELIAB, V28, P206, DOI 10.1109/TR.1979.5220566
   Gokhale SS, 1996, SEVENTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P299, DOI 10.1109/ISSRE.1996.558886
   Grottke Michael, 2002, P 13 INT S SOFTW REL
   HAMLET D, 1992, IEEE SOFTW, V9
   HORGAN JR, 1995, SERCTR160P PURD U
   Hudson A., 1967, SP3011 SYST DEV CORP
   Jalote P., 1994, First International Conference on Software Testing, Reliability and Quality Assurance. Conference Proceedings (Cat. No.94TH8063), P6, DOI 10.1109/STRQA.1994.526377
   Jelinski Z., 1972, Statistical Computer Performance Evaluation, P465, DOI DOI 10.1016/B978-0-12-266950-7.50028-1
   KRISHNAMURTHY S, 1996, P C CTR ADV STUD COL, P1
   Li M, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P66, DOI 10.1109/ISSRE.2004.47
   Malaiya Y. K., 1994, Proceedings. 5th International Symposium on Software Reliability Engineering (Cat. No.94TH8017), P186, DOI 10.1109/ISSRE.1994.341373
   Malaiya YK, 2002, IEEE T RELIAB, V51, P420, DOI 10.1109/TR.2002.804489
   MALAIYA YK, 1996, CS96128 COL STAT U
   MALDONADO JC, 1992, 5 INT C SOFTW ENG IT, P613
   Mood A.M., 1974, Introduction to the theory of statistics
   Musa J., 1999, SOFTWARE RELIABILITY
   Musa J. D., 1987, Software Reliability: Measure-ment, Prediction, Application
   Myers Glenford J., 2011, The Art of Software Testing
   NELSON E, 1978, MICROELECTRON RELIAB, V17, P67, DOI 10.1016/0026-2714(78)91139-3
   Pham H, 2003, EUR J OPER RES, V145, P443, DOI 10.1016/S0377-2217(02)00181-9
   Ramsey J., 1985, Proceedings of the 8th International Conference on Software Engineering (Cat. No.85CH2139-4), P306
   RAPPS S, 1985, IEEE T SOFTWARE ENG, V11, P367, DOI 10.1109/TSE.1985.232226
   Shooman ML., 1972, Statistical Computer Performance Evaluation, P485, DOI [10.1016/B978-0-12-266950-7.50029-3, DOI 10.1016/B978-0-12-266950-7.50029-3]
   Siegel S., 1956, Nonparametric statistics for the behavioral sciences
   Strigini L., 1993, COMMUNICATIONS ACM, V36
   VARADAN GS, 1995, IEEE SOFTW, V10
   Veevers A., 1994, Software Testing, Verification and Reliability, V4, P3, DOI 10.1002/stvr.4370040103
   Xie M., 1993, Software Testing, Verification and Reliability, V3, P3, DOI 10.1002/stvr.4370030103
   Ye R., 2002, P 13 INT S SOFTW REL
NR 52
TC 5
Z9 6
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2008
VL 13
IS 2
BP 185
EP 209
DI 10.1007/s10664-007-9055-3
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 284YB
UT WOS:000254743000004
DA 2024-07-18
ER

PT J
AU Zhang, XY
   Gupta, N
   Gupta, R
AF Zhang, Xiangyu
   Gupta, Neelam
   Gupta, Rajiv
TI A study of effectiveness of dynamic slicing in locating real faults
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE dynamic program slicing; fault location; data slicing; full slicing;
   exploring slices
AB Dynamic slicing algorithms have been considered to aid in debugging for many years. However, as far as we know, no detailed studies on evaluating the benefits of using dynamic slicing for locating real faults present in programs have been carried out. In this paper we study the effectiveness of fault location using dynamic slicing for a set of real bugs reported in some widely used software programs. Our results show that of the 19 faults studied, 12 faults were captured by data slices, 7 required the use of full slices, and none of them required the use of relevant slices. Moreover, it was observed that dynamic slicing considerably reduced the subset of program statements that needed to be examined to locate faulty statements. Interestingly, we observed that all of the memory bugs in the faulty versions were captured by data slices. The dynamic slices that captured faulty code included 0.45 to 63.18% of statements that were executed at least once.
C1 Univ Arizona, Dept Comp Sci, Tucson, AZ 85721 USA.
C3 University of Arizona
RP Gupta, R (corresponding author), Univ Arizona, Dept Comp Sci, Tucson, AZ 85721 USA.
EM xyzhang@cs.arizona.edu; gupta@cs.arizona.edu; ngupta@cs.arizona.edu
RI Zhang, Xiangyu/H-9255-2013
OI Zhang, Xiangyu/0000-0003-0876-6783; Gupta, Rajiv/0000-0002-9348-3974
FU Division Of Computer and Network Systems; Direct For Computer & Info
   Scie & Enginr [0810906] Funding Source: National Science Foundation
CR AGRAWAL H, 1993, SOFTWARE PRACT EXPER, V23, P589, DOI 10.1002/spe.4380230603
   Agrawal H, 1995, SIXTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P143, DOI 10.1109/ISSRE.1995.497652
   Agrawal H., 1993, Proceedings. Conference on Software Maintenance 1993. CSM-93 (Cat. No.93CH3360-5), P348, DOI 10.1109/ICSM.1993.366927
   AGRAWAL H, 1990, ACM SIGPLAN C PROGR, P246
   Antoniol G, 1997, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P72, DOI 10.1109/ICSM.1997.624233
   BALL T, 1994, IEEE S VIS LANG, P288
   Beszédes A, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P105, DOI 10.1109/CSMR.2001.914974
   Cleve H, 2005, PROC INT CONF SOFTW, P342
   GYIMOTHY T, 1999, 7 ACM SIGSOFT INT S, P303
   HILDEBRANDT R, 2000, INT S SOFTW TEST AN, P135
   HUTCHINS M, 1994, PROC INT CONF SOFTW, P191, DOI 10.1109/ICSE.1994.296778
   Jones JA, 2004, PROC INT CONF SOFTW, P54, DOI 10.1109/ICSE.2004.1317420
   KAMKAR M, 1993, THESIS LINKOPING U
   KOREL B, 1988, INFORM PROCESS LETT, V29, P155, DOI 10.1016/0020-0190(88)90054-3
   KOREL B, 1997, 3 INT WORKSH AUT DEB, P43
   Krinke J, 2004, PROC IEEE INT CONF S, P168, DOI 10.1109/ICSM.2004.1357801
   LINNIELSEN J, BUDDY BINARY DECISIO
   PAN H, 1992, SERCTR116P PURD U
   REINIERIS M, 2003, IEEE INT C AUT SOFTW, P30
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
   ZELLER A, 2002, 10 INT S FDN SOFTW E, P1
   ZHANG X, 2004, ACM SIGPLAN C PROGR, P94
   ZHANG X, 2005, SIGSOFT SIGPLAN 6 IN, P33
   Zhang XG, 2004, PROC INT CONF SOFTW, P502, DOI 10.1109/ICSE.2004.1317472
   Zhang ZG, 2003, PROC INT CONF SOFTW, P319
   Zhou XM, 2004, J MOL CELL CARDIOL, V37, P280
NR 26
TC 30
Z9 45
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2007
VL 12
IS 2
BP 143
EP 160
DI 10.1007/s10664-006-9007-3
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 142YU
UT WOS:000244688000003
DA 2024-07-18
ER

PT J
AU Khairunnesa, SS
   Ahmed, S
   Imtiaz, SM
   Rajan, H
   Leavens, GT
AF Khairunnesa, Samantha Syeda
   Ahmed, Shibbir
   Imtiaz, Sayem Mohammad
   Rajan, Hridesh
   Leavens, Gary T.
TI What kinds of contracts do ML APIs need?
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Machine Learning; API contracts; Empirical software engineering;
   Software engineering for machine learning
AB Recent work has shown that Machine Learning (ML) programs are error-prone and called for contracts for ML code. Contracts, as in the design by contract methodology, help document APIs and aid API users in writing correct code. The question is: what kinds of contracts would provide the most help to API users? We are especially interested in what kinds of contracts help API users catch errors at earlier stages in the ML pipeline. We describe an empirical study of posts on Stack Overflow of the four most often-discussed ML libraries: TensorFlow, Scikit-learn, Keras, and PyTorch. For these libraries, our study extracted 413 informal (English) API specifications. We used these specifications to understand the following questions. What are the root causes and effects behind ML contract violations? Are there common patterns of ML contract violations? When does understanding ML contracts require an advanced level of ML software expertise? Could checking contracts at the API level help detect the violations in early ML pipeline stages? Our key findings are that the most commonly needed contracts for ML APIs are either checking constraints on single arguments of an API or on the order of API calls. The software engineering community could employ existing contract mining approaches to mine these contracts to promote an increased understanding of ML APIs. We also noted a need to combine behavioral and temporal contract mining approaches. We report on categories of required ML contracts, which may help designers of contract languages.
C1 [Khairunnesa, Samantha Syeda] Bradley Univ, Dept Comp Sci & Informat Syst, Peoria, IL 61625 USA.
   [Ahmed, Shibbir; Imtiaz, Sayem Mohammad; Rajan, Hridesh] Iowa State Univ, Dept Comp Sci, Ames, IA USA.
   [Leavens, Gary T.] Univ Cent Florida, Dept Comp Sci, Orlando, FL USA.
C3 Bradley University; Iowa State University; State University System of
   Florida; University of Central Florida
RP Khairunnesa, SS (corresponding author), Bradley Univ, Dept Comp Sci & Informat Syst, Peoria, IL 61625 USA.
EM skhairunnesa@fsmail.bradley.edu
CR Aghajani E, 2019, PROC INT CONF SOFTW, P1199, DOI 10.1109/ICSE.2019.00122
   [Anonymous], 2010, P 19 INT S SOFTW TES, DOI [10.1145/1831708.1831723, DOI 10.1145/1831708.1831723]
   Barua A, 2014, EMPIR SOFTW ENG, V19, P619, DOI 10.1007/s10664-012-9231-y
   Beyer S, 2014, PROC IEEE INT CONF S, P531, DOI 10.1109/ICSME.2014.88
   Cai L, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P1134, DOI 10.1145/3338906.3341186
   Chatterjee P, 2020, J SYST SOFTWARE, V159, DOI 10.1016/j.jss.2019.110454
   CORBIN J, 1990, Z SOZIOL, V19, P418, DOI 10.1007/BF00988593
   Corbin J, 2008, Techniques and procedures for developing grounded theory, V3rd
   Cousot P, 2013, P 14 C VERIFICATION
   Cummaudo A, 2020, Arxiv, DOI arXiv:2001.10130
   Dvijotham K.D., 2019, P 35 C UNC ART INT U, P164
   Ellmann M, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P1030, DOI 10.1145/3106237.3119875
   Endres DM, 2003, IEEE T INFORM THEORY, V49, P1858, DOI 10.1109/TIT.2003.813506
   Glaser B.G., 1978, Sociology Pr
   Graham Brett, 2010, PyContracts
   Guo Y, 2017, 7 Steps of ML
   HOARE CAR, 1969, COMMUN ACM, V12, P576, DOI 10.1145/363235.363259
   Höst M, 2005, PROC INT CONF SOFTW, P470
   Humbatova N, 2020, PROC INT CONF SOFTW, P1110, DOI 10.1145/3377811.3380395
   Islam MJ, 2020, PROC INT CONF SOFTW, P1135, DOI 10.1145/3377811.3380378
   Islam MJ, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P510, DOI 10.1145/3338906.3338955
   Jia L, 2020, LECT NOTES COMPUT SC, V12112, P604, DOI 10.1007/978-3-030-59410-7_40
   Jothimurugan Kishor, 2019, ADV NEURAL INFORM PR, V32, P13021
   Khairunnesa SS, 2017, OOPSLA 17 ACM SIGPLA
   Le Goues C, 2012, IEEE T SOFTWARE ENG, V38, P54, DOI 10.1109/TSE.2011.104
   Le TDB, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P106, DOI 10.1145/3213846.3213876
   Leavens Gary T., 2022, The Logic of Software. A Tasting Menu of Formal Methods: Essays Dedicated to Reiner Hahnle on the Occasion of His 60th Birthday. Lecture Notes in Computer Science (13360), P313, DOI 10.1007/978-3-031-08166-8_15
   Leavens Gary T, 2006, SIGSOFT Softw. Eng. Notes, V31, P1, DOI [10.1145/1127878.1127884, DOI 10.1145/1127878.1127884]
   Lehtosalo J, 2012, mypy
   Lemieux C, 2015, IEEE INT CONF AUTOM, P81, DOI 10.1109/ASE.2015.71
   Lemieux C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P751, DOI 10.1109/ICSE.2015.238
   Li Y, 2020, PROC INT CONF SOFTW, P602, DOI 10.1145/3377811.3380345
   Long F, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P166, DOI 10.1145/2786805.2786811
   Manna Z., 1992, The temporal logic of reactive and concurrent systems-specification, DOI DOI 10.1007/978-1-4612-0931-7
   Mechtaev S, 2016, PROC INT CONF SOFTW, P691, DOI 10.1145/2884781.2884807
   Mendoza H, 2019, SPRING SER CHALLENGE, P135, DOI 10.1007/978-3-030-05318-5_7
   MEYER B, 1992, COMPUTER, V25, P40, DOI 10.1109/2.161279
   Meyer B., 1988, Object-Oriented Software Construction
   Murali V, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P151, DOI 10.1145/3106237.3106284
   Murphy KP, 2012, MACHINE LEARNING: A PROBABILISTIC PERSPECTIVE, P1
   Nasehi SM, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P25, DOI 10.1109/ICSM.2012.6405249
   Nguyen HA, 2014, FSE 14 22 INT S FDN
   Nguyen TT, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P383, DOI 10.1145/1595696.1595767
   Pandita R, 2012, PROC INT CONF SOFTW, P815, DOI 10.1109/ICSE.2012.6227137
   Pasareanu Corina S., 2010, P 25 IEEE ACM INT C, P179, DOI [10.1145/1858996.1859035, DOI 10.1145/1858996.1859035]
   Pei Y, 2014, IEEE T SOFTWARE ENG, V40, P427, DOI 10.1109/TSE.2014.2312918
   Pradel M, 2009, IEEE INT CONF AUTOM, P371, DOI 10.1109/ASE.2009.60
   Reger G, 2013, IEEE INT CONF AUTOM, P658, DOI 10.1109/ASE.2013.6693129
   Rosen C, 2016, EMPIR SOFTW ENG, V21, P1192, DOI 10.1007/s10664-015-9379-3
   Sankaran A, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS TRACK (ICSE-NIER), P47, DOI 10.1109/ICSE-NIER.2017.13
   Sarker S, 2000, P 33 ANN HAWAII INT, V2
   Seshia SA, 2018, LECT NOTES COMPUT SC, V11138, P20, DOI 10.1007/978-3-030-01090-4_2
   Sim J, 2005, PHYS THER, V85, P257
   StackOverflow Reputation, 2023, StackOverflow reputation and moderation
   StackOverflow Survey, 2017, Survey
   Sun XB, 2017, ASIA PAC SOFWR ENG, P348, DOI 10.1109/APSEC.2017.41
   Thung F., 2012, Proceedings of the 2012 IEEE 23rd International Symposium on Software Reliability Engineering (ISSRE), P271, DOI 10.1109/ISSRE.2012.22
   Treude C, 2016, PROC INT CONF SOFTW, P392, DOI 10.1145/2884781.2884800
   Viera AJ, 2005, FAM MED, V37, P360
   Wang S, 2016, IEEE INT CONF AUTOM, P708, DOI 10.1145/2970276.2970341
   Wasylkowski Andrzej, 2007, P 6 JOINT M EUROPEAN, P35, DOI [10.1145/1287624.1287632, DOI 10.1145/1287624.1287632]
   Xie DN, 2022, PROCEEDINGS OF THE 31ST ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2022, P176, DOI 10.1145/3533767.3534220
   Zhang TY, 2019, PROC INT SYMP SOFTW, P104, DOI 10.1109/ISSRE.2019.00020
   Zhang TY, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P886, DOI 10.1145/3180155.3180260
   Zhang YH, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P129, DOI 10.1145/3213846.3213866
   Zhong H, 2020, PROC INT CONF SOFTW, P899, DOI 10.1145/3377811.3380922
NR 66
TC 1
Z9 1
U1 2
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2023
VL 28
IS 6
AR 142
DI 10.1007/s10664-023-10320-z
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FL0Q9
UT WOS:001145829100001
DA 2024-07-18
ER

PT J
AU Bernardo, JH
   da Costa, DA
   Kulesza, U
   Treude, C
AF Bernardo, Joao Helis
   da Costa, Daniel Alencar
   Kulesza, Uira
   Treude, Christoph
TI The impact of a continuous integration service on the delivery time of
   merged pull requests
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Continuous integration; Pull request; Delivery time; Code review
AB Continuous Integration (CI) is a software development practice that builds and tests software frequently (e.g., at every push). One main motivator to adopt CI is the potential to deliver software functionalities more quickly than not using CI. However, there is little empirical evidence to support that CI helps projects deliver software functionalities more quickly. Through the analysis of 162,653 pull requests (PRs) of 87 GitHub projects, we empirically study whether adopting a CI service (TravisCI) can quicken the time to deliver merged PRs. We complement our quantitative study by analyzing 450 survey responses from participants of 73 software projects. Our results reveal that adopting a CI service may not necessarily quicken the delivery of merge PRs. Instead, the pivotal benefit of a CI service is to improve the decision making on PR submissions, without compromising the quality or overloading the project's reviewers and maintainers. The automation provided by CI and the boost in developers' confidence are key advantages of adopting a CI service. Furthermore, open-source projects planning to attract and retain developers should consider the use of a CI service in their project, since CI is perceived to lower the contribution barrier while making contributors feel more confident and engaged in the project.
C1 [Bernardo, Joao Helis] Fed Inst Rio Grande Do Norte IFRN, Macau, Brazil.
   [Bernardo, Joao Helis; Kulesza, Uira] Fed Univ Rio Grande Do Norte UFRN, Natal, Brazil.
   [da Costa, Daniel Alencar] Univ Otago, Dunedin, New Zealand.
   [Treude, Christoph] Univ Melbourne, Melbourne, Australia.
C3 Instituto Federal do Rio Grande do Norte; Universidade Federal do Rio
   Grande do Norte; University of Otago; University of Melbourne
RP Bernardo, JH (corresponding author), Fed Inst Rio Grande Do Norte IFRN, Macau, Brazil.; Bernardo, JH (corresponding author), Fed Univ Rio Grande Do Norte UFRN, Natal, Brazil.
EM joao.helis@ifrn.edu.br; danielcalencar@otago.ac.nz; uira@dimap.ufrn.br;
   christoph.treude@unimelb.edu.au
RI Treude, Christoph/AAZ-6257-2021
OI Bernardo, Joao Helis/0000-0001-7359-4039; Treude,
   Christoph/0000-0002-6919-2149
FU INES; CNPq [465614/2014-0, 425211/2018-5]; CAPES [88887.136410/2017-00];
   FACEPE [APQ-0399-1.03/17]; PRONEX [APQ/0388-1.03/14]
FX This work is partially supported by INES (www.ines.org.br), CNPq grants
   465614/2014-0 and 425211/2018-5, CAPES grant 88887.136410/2017-00,
   FACEPE grants APQ-0399-1.03/17, and PRONEX APQ/0388-1.03/14.
CR [Anonymous], 2007, CONTINUOUS INTEGRATI
   [Anonymous], 2008, Proceedings of the 2008 international working conference on Mining software repositories
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Bavota G, 2015, PROC IEEE INT CONF S, P81, DOI 10.1109/ICSM.2015.7332454
   Beck K., 2000, EXTREME PROGRAMMING
   Bernardo JH, 2018, IEEE WORK CONF MIN S, P131, DOI 10.1145/3196398.3196421
   Best D. J., 1975, Applied Statistics, V24, P377, DOI 10.2307/2347111
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   Cassee N, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P423, DOI [10.1109/saner48275.2020.9054818, 10.1109/SANER48275.2020.9054818]
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Coelho J, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P186, DOI 10.1145/3106237.3106246
   da Costa DA, 2018, EMPIR SOFTW ENG, V23, P835, DOI 10.1007/s10664-017-9548-7
   da Costa DA, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P374, DOI [10.1109/MSR.2016.045, 10.1145/2901739.2901764]
   da Costa DA, 2014, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSME.2014.50
   Debbiche A, 2014, LECT NOTES COMPUT SC, V8892, P17, DOI 10.1007/978-3-319-13835-0_2
   Felidré W, 2019, INT SYMP EMP SOFTWAR, P192, DOI 10.1109/ESEM.2019.8870152
   Fitzgerald B, 2017, J SYST SOFTWARE, V123, P176, DOI 10.1016/j.jss.2015.06.063
   Fowler Martin., 2006, Thought-Works, V122, P14
   Gallaba K, 2020, IEEE T SOFTWARE ENG, V46, P33, DOI 10.1109/TSE.2018.2838131
   Giger E., 2010, P 2 INT WORKSH REC S, P52
   da Silva ACB, 2016, PROCEEDINGS 2016 10TH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY (QUATIC), P107, DOI [10.1109/QUATIC.2016.029, 10.1109/QUATIC.2016.56]
   Goodman D, 2008, AGILE 2008, PROCEEDINGS, P112, DOI 10.1109/Agile.2008.87
   Gousios G, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P358, DOI 10.1109/ICSE.2015.55
   Guo YF, 2019, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.245
   Harrell FE, 2015, SPRINGER SER STAT, DOI 10.1007/978-3-319-19425-7
   Hars A, 2002, INT J ELECTRON COMM, V6, P25
   Hilton M, 2016, IEEE INT CONF AUTOM, P426, DOI 10.1145/2970276.2970358
   Humble Jez, 2010, Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation
   Jiang YJ, 2013, IEEE WORK CONF MIN S, P101, DOI 10.1109/MSR.2013.6624016
   Karvonen T, 2017, INFORM SOFTWARE TECH, V86, P87, DOI 10.1016/j.infsof.2017.01.009
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Laukkanen E, 2015, 2015 AGILE CONFERENCE, P11, DOI 10.1109/Agile.2015.15
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Michlmayr Martin, 2015, IEEE Software, V32, P55, DOI 10.1109/MS.2015.55
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Neely S, 2013, 2013 AGILE CONFERENCE (AGILE), P121, DOI 10.1109/AGILE.2013.17
   Nowell LS, 2017, INT J QUAL METH, V16, DOI 10.1177/1609406917733847
   Perry DE., 2000, P C FUT SOFTW ENG, P345, DOI DOI 10.1145/336512.336586
   Rahman MM, 2017, IEEE WORK CONF MIN S, P499, DOI 10.1109/MSR.2017.39
   Romano J, 2006, ANN M FLOR ASS I RES, P1
   Santos J, 2022, P 16 ACMIEEE INT S E, P137
   Schroter Adrian, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P118, DOI 10.1109/MSR.2010.5463280
   Shahin M, 2017, IEEE ACCESS, V5, P3909, DOI 10.1109/ACCESS.2017.2685629
   Sharma PN, 2021, PROCEEDINGS OF EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING (EASE 2021), P50, DOI 10.1145/3463274.3463326
   Shihab E., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P249, DOI 10.1109/WCRE.2010.36
   Sizílio G, 2019, PROC IEEE INT CONF S, P426, DOI 10.1109/ICSME.2019.00075
   Soares DM, 2018, INFORM SOFTWARE TECH, V98, P32, DOI 10.1016/j.infsof.2018.01.015
   Soares E, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10114-1
   Ståhl D, 2014, J SYST SOFTWARE, V87, P48, DOI 10.1016/j.jss.2013.08.032
   Ur Rahman AA, 2015, 2015 AGILE CONFERENCE, P1, DOI 10.1109/Agile.2015.12
   Vasilescu B, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P805, DOI 10.1145/2786805.2786850
   Vasilescu B, 2014, PROC IEEE INT CONF S, P401, DOI 10.1109/ICSME.2014.62
   Wilks D. S, 2011, International Geophysics Series, V100, DOI DOI 10.1002/MET.16
   WILLIAMSON DF, 1989, ANN INTERN MED, V110, P916, DOI 10.7326/0003-4819-110-11-916
   Yu Y, 2016, SCI CHINA INFORM SCI, V59
   Zampetti F, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P38, DOI [10.1109/SANER.2019.8667996, 10.1109/saner.2019.8667996]
   Zhang XH, 2023, IEEE T SOFTWARE ENG, V49, P849, DOI 10.1109/TSE.2022.3165056
   Zhang XH, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10143-4
   Zhao YY, 2017, IEEE INT CONF AUTOM, P60, DOI 10.1109/ASE.2017.8115619
NR 59
TC 0
Z9 0
U1 3
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2023
VL 28
IS 4
AR 97
DI 10.1007/s10664-023-10327-6
PG 57
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA L1JK2
UT WOS:001020886100001
DA 2024-07-18
ER

PT J
AU Nurwidyantoro, A
   Shahin, M
   Chaudron, M
   Hussain, W
   Perera, H
   Shams, RA
   Whittle, J
AF Nurwidyantoro, Arif
   Shahin, Mojtaba
   Chaudron, Michel
   Hussain, Waqar
   Perera, Harsha
   Shams, Rifat Ara
   Whittle, Jon
TI Integrating human values in software development using a human values
   dashboard
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Human values; GitHub; Issue discussion; Dashboard
ID IMBALANCE; GITHUB; IMPACT
AB There is a growing awareness of the importance of human values in software systems. However, limited tools are available to support the integration of human values during software development. Most of these tools are focused on concepts related to specific, well-known human values (e.g., privacy, security) in software engineering. This paper aims to (partially) address this gap by developing a human values dashboard. We conducted a multi-stage study to design, implement and evaluate a human values dashboard. First, an exploratory study was conducted by interviewing 15 software practitioners to investigate the possibility of using a human values dashboard to help address human values in software development, its potential benefits, and required features. Second, we experimented with four Machine Learning approaches to detect the presence of human values in issue discussions. We used the best approach to develop a human values dashboard for software development. The dashboard displays whether any human values are present in each issue discussion. Finally, we interviewed ten different practitioners to investigate the usefulness of the dashboard in practice. This study found that the human values dashboard could help raise awareness, focus attention, and prioritise issues based on the presence of values. This study also identified two potential challenges to the adoption of the dashboard. First, the possible incorrect issues description that can mislead the automated values identification in the dashboard. Second, the lack of willingness of a company to adopt the dashboard.
C1 [Nurwidyantoro, Arif; Hussain, Waqar] Monash Univ, Fac IT, Dept Software Syst & Cybersecur, Clayton 3800, Australia.
   [Nurwidyantoro, Arif] Univ Gadjah Mada, Dept Comp Sci & Elect, Yogyakarta 55281, Indonesia.
   [Shahin, Mojtaba] RMIT Univ, Sch Comp Technol, Melbourne 3000, Australia.
   [Chaudron, Michel] Eindhoven Univ Technol, Dept Math & Comp Sci, NL-5600 Eindhoven, Netherlands.
   [Hussain, Waqar; Perera, Harsha; Shams, Rifat Ara; Whittle, Jon] CSIROs Data61, Clayton 3168, Australia.
C3 Monash University; Gadjah Mada University; Royal Melbourne Institute of
   Technology (RMIT); Eindhoven University of Technology; Commonwealth
   Scientific & Industrial Research Organisation (CSIRO)
RP Nurwidyantoro, A (corresponding author), Monash Univ, Fac IT, Dept Software Syst & Cybersecur, Clayton 3800, Australia.; Nurwidyantoro, A (corresponding author), Univ Gadjah Mada, Dept Comp Sci & Elect, Yogyakarta 55281, Indonesia.
EM arif.nurwidyantoro@monash.edu; mojtaba.shahin@rmit.edu.au;
   m.r.v.chaudron@tue.nl; waqar.hussain@monash.edu;
   harsha.perera@data61.csiro.au; rifat.shams@csiro.au;
   jon.whittle@data61.csiro.au
FU CAUL and its Member Institutions
FX Open Access funding enabled and organized by CAUL and its Member
   Institutions
CR Al-Stouhi S, 2016, KNOWL INF SYST, V48, P201, DOI 10.1007/s10115-015-0870-3
   Alqahtani SS, 2017, INT SYMP EMP SOFTWAR, P169, DOI 10.1109/ESEM.2017.25
   Arya D, 2019, PROC INT CONF SOFTW, P454, DOI 10.1109/ICSE.2019.00058
   Bao LF, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P37, DOI [10.1145/2901739.2901748, 10.1109/MSR.2016.014]
   Barn BS, 2016, LECT NOTES COMPUT SC, V9856, P151, DOI 10.1007/978-3-319-44902-9_10
   Baysal O, 2013, IEEE SOFTWARE, V30, P46, DOI 10.1109/MS.2013.66
   Beitin B., 2012, SAGE HDB INTERVIEW R, DOI DOI 10.4135/9781452218403.N17
   Best S, 2021, WHATSAPP LOSES MILLI
   Beyer S, 2020, EMPIR SOFTW ENG, V25, P2258, DOI 10.1007/s10664-019-09758-x
   BIRD F, 1987, J BUS ETHICS, V6, P1, DOI 10.1007/BF00382943
   Bird S, 2021, NATURAL LANGUAGE PRO
   Biswas Eeshita, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P68, DOI 10.1109/MSR.2019.00020
   Braun V, 2012, APA HDB RES METHODS, V2, P57, DOI [DOI 10.1037/13620-004, DOI 10.1037/13620]
   Canedo ED., 2020, P 14 ACM IEEE INT S, DOI [10.1145/3382494.3410682, DOI 10.1145/3382494.3410682]
   Catolino G, 2019, J SYST SOFTWARE, V152, P165, DOI 10.1016/j.jss.2019.03.002
   Cauldron, 2021, LEV SOFTW DEV ANAL
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Cheng A. -S., 2010, P 43 HAW INT C SYST
   Confessore N., 2018, NEW YORK TIMES
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Ding J, 2018, 2018 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON EMOTION AWARENESS IN SOFTWARE ENGINEERING (SEMOTION), P7, DOI [10.1145/3194932.3194935, 10.1109/GLOCOM.2018.8647613]
   Eluri Vijaya Kumar, 2019, EPiC Series in Computing, V64, P148
   Fan Q, 2017, INT SYMP EMP SOFTWAR, P121, DOI 10.1109/ESEM.2017.19
   Fischer F, 2017, P IEEE S SECUR PRIV, P121, DOI 10.1109/SP.2017.31
   Friedman B., 2008, The handbook of information and computer ethics, P69, DOI DOI 10.1145/242485.242493
   Friedman B, 2013, PHILOS ENG TECHNOL, V16, P55, DOI 10.1007/978-94-007-7844-3_4
   Fu B, 2013, 19TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'13), P1276
   Gibler C., 2012, P 5 INT C TRUST TRUS, V7344, P291, DOI DOI 10.1007/978-3-642-30921-2
   GitHub, 2021, GITH ISS PROJ PLANN
   GitHub, 2021, YOUR PERS DASHB
   GitHub, 2021, MENT PEOPL TEAMS
   GitHub, 2021, AUT REF URLS
   GitHub, 2021, YOUR ORG DASHB
   Glinz M, 2007, INT REQUIR ENG CONF, P21, DOI 10.1109/RE.2007.45
   Golzadeh M, 2021, J SYST SOFTWARE, V175, DOI 10.1016/j.jss.2021.110911
   GUBA EG, 1981, ECTJ-EDUC COMMUN TEC, V29, P75
   Harris MA, 2016, INT J INFORM MANAGE, V36, P441, DOI 10.1016/j.ijinfomgt.2016.02.004
   Holmes T, 2011, COMMON CAUSE HDB PUB
   Hussain W, 2022, IEEE T SOFTWARE ENG, V48, P5158, DOI 10.1109/TSE.2022.3140230
   Ishita Emi, 2019, Information in Contemporary Society. 14th International Conference, iConference 2019. Proceedings: Lecture Notes in Computer Science (LNCS 11420), P188, DOI 10.1007/978-3-030-15742-5_18
   Ishita E., 2010, P 73 ASIST ANN M NAV
   Ivanov Vladimir, 2018, 2018 IEEE/ACM 40th International Conference on Software Engineering: Companion (ICSE-Companion). Proceedings, P402, DOI 10.1145/3183440.3195028
   Ivanov V, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P821, DOI 10.1145/3236024.3275530
   Janes A., 2013, Cut. IT J, V26, P17
   Jha N, 2019, EMPIR SOFTW ENG, V24, P3659, DOI 10.1007/s10664-019-09716-7
   Jingxiu Yao, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P120, DOI 10.1145/3383219.3383232
   Kikas R, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P291, DOI [10.1109/MSR.2016.038, 10.1145/2901739.2901751]
   Kim S, 2012, COMPUTER SCI CONVERG, P529
   Kujala S., 2009, Journal of Information Technology Theory and Application (JITTA), V9, P4
   Kuznetsov K., 2016, Proceedings of the International Workshop on App Market Analytics, P1, DOI [DOI 10.1145/2993259.2993265, 10.1145/2993259, DOI 10.1145/2993259]
   Leite L, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P978, DOI 10.1145/2786805.2803184
   Lemaître G, 2017, J MACH LEARN RES, V18
   Li L, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P280, DOI 10.1109/ICSE.2015.48
   Liu B., 2020, Sentiment Analysis: Mining Opinions, Sentiments, and Emotions, V2nd
   López L, 2021, SCI COMPUT PROGRAM, V202, DOI 10.1016/j.scico.2020.102568
   Ma YZ, 2018, IEEE WORK CONF MIN S, P414, DOI 10.1145/3196398.3196446
   Mairiza D., 2010, P 2010 ACM S APPL CO, P311, DOI DOI 10.1145/1774088.1774153
   Manning Christopher D., 2008, INTRO INFORM RETRIEV
   Mautic, 2022, MAUT COMM DASHB
   Mohammed R, 2020, INT CONF INFORM COMM, P243, DOI 10.1109/ICICS49469.2020.239556
   Mougouei D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P780, DOI 10.1145/3236024.3264843
   Munaiah N, 2017, EMPIR SOFTW ENG, V22, P3219, DOI 10.1007/s10664-017-9512-6
   Nasab AR, 2021, J SYST SOFTWARE, V181, DOI 10.1016/j.jss.2021.111046
   Naseri Mohammad, 2019, Proceedings on Privacy Enhancing Technologies, V2019, P291, DOI 10.2478/popets-2019-0031
   Nurwidyantoro A, 2022, HUMAN VALUES DASHBOA, DOI [10.6084/m9.figshare.21256467.v1, DOI 10.6084/M9.FIGSHARE.21256467.V1]
   Nurwidyantoro A, 2022, HUMAN VALUES DASHBOA, DOI [10.6084/m9.figshare.19601938.v1, DOI 10.6084/M9.FIGSHARE.19601938.V1]
   Nurwidyantoro A, 2022, THESIS
   Nurwidyantoro Arif, 2021, P 15 ACMIEEE INT S E, P1
   Ortu M, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P480, DOI [10.1145/2901739.2903505, 10.1109/MSR.2016.059]
   Ournani Zakaria, 2020, Proceedings of the 14th ACM/IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), DOI 10.1145/3382494.3410678
   Padurariu C, 2019, PROCEDIA COMPUT SCI, V159, P736, DOI 10.1016/j.procs.2019.09.229
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Pereira R, 2017, PROC IEEE ACM INT C, P238, DOI 10.1109/ICSE-C.2017.80
   Perera H, 2020, PROC INT CONF SOFTW, P409, DOI 10.1145/3377811.3380393
   Perera H, 2020, INT REQUIR ENG CONF, P192, DOI 10.1109/RE48521.2020.00030
   Pletea D., 2014, 11 WORKING C MSR, P348, DOI [10.1145/2597073.2597117, DOI 10.1145/2597073.2597117]
   Prana GAA, 2019, EMPIR SOFTW ENG, V24, P1296, DOI 10.1007/s10664-018-9660-3
   Rokeach M., 1973, NATURE HUMAN VALUES
   Samrose S, 2021, C HUM FACT COMP SYST, DOI [10.1145/3411764.3445615, DOI 10.1145/3411764.3445615]
   Schapiro AA, 2020, US PROTESTS FUEL CAL
   Schwartz S. H., 2017, VALUES BEHAV TAKING, P51, DOI [DOI 10.1007/978-3-319-56352-7_3, 10.1007/978-3-319-56352-7_3]
   Schwartz S.H., 2012, OVERVIEW SCHWARTZ TH, V2, DOI [10.9707/2307-0919.1116, DOI 10.9707/2307-0919.1116]
   SCHWARTZ SH, 1994, J SOC ISSUES, V50, P19, DOI 10.1111/j.1540-4560.1994.tb01196.x
   Sharma Vibhu Saujanya, 2014, 4 INT WORKSHOP TWIN, DOI [DOI 10.1145/2593861.2593862, 10.1145/2593861.2593862]
   Slavin R, 2016, PROC INT CONF SOFTW, P25, DOI 10.1145/2884781.2884855
   Song Y, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1551, DOI 10.1145/3368089.3417928
   Stol KJ, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2533685
   Takayama Y., 2015, INF ENG EXPR, V1, P107, DOI [10.52731/iee.v1.i4.34, DOI 10.52731/IEE.V1.I4.34]
   Takayama Y, 2013, P C PAC ASS COMP LIN
   Takayama Y., 2014, CIKM 14, p1489. 1498, DOI [10.1145/2661829.2661966, DOI 10.1145/2661829.2661966]
   Takayama Y, 2015, 2015 IIAI 4TH INTERNATIONAL CONGRESS ON ADVANCED APPLIED INFORMATICS (IIAI-AAI), P177, DOI 10.1109/IIAI-AAI.2015.268
   Thelwall M, 2010, J AM SOC INF SCI TEC, V61, P2544, DOI 10.1002/asi.21416
   Thew S, 2018, REQUIR ENG, V23, P443, DOI 10.1007/s00766-017-0273-y
   Thiruvathukal GK, 2018, METRICS DASHBOARD HO
   Tómasdóttir KF, 2020, IEEE T SOFTWARE ENG, V46, P863, DOI 10.1109/TSE.2018.2871058
   Tómasdóttir KF, 2017, IEEE INT CONF AUTOM, P578, DOI 10.1109/ASE.2017.8115668
   Treude C., 2011, 2010 32nd International Conference on Software Engineering (ICSE), P365, DOI 10.1145/1806799.1806854
   Treude C, 2009, PROC INT CONF SOFTW, P575, DOI 10.1109/ICSE.2009.5070559
   Trockman Asher, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P181, DOI 10.1109/MSR.2019.00036
   Viega J., 2002, ACM Transactions on Information and Systems Security, V5, P238, DOI 10.1145/545186.545188
   Vivian R, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P380, DOI 10.1109/ICSE.2015.170
   Wang H. Y., 2013, International Journal of Marketing Studies, V5, P11, DOI [10.5539/ijms.v5n2p11, DOI 10.5539/IJMS.V5N2P11]
   Wang J., 2021, KNOWL-BASED SYST, V107476, P232
   Wexler S., 2017, BIG BOOK DASHBOARDS
   Winter E, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3267427
   Wolford B., What is GDPR, the EU's New Data Protection Law?
   Yao JX, 2021, INFORM SOFTWARE TECH, V139, DOI 10.1016/j.infsof.2021.106664
NR 107
TC 1
Z9 1
U1 2
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2023
VL 28
IS 3
AR 67
DI 10.1007/s10664-023-10305-y
PG 40
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA E3WV9
UT WOS:000974891700002
OA hybrid
DA 2024-07-18
ER

PT J
AU Kargén, U
   Mauthe, N
   Shahmehri, N
AF Kargen, Ulf
   Mauthe, Noah
   Shahmehri, Nahid
TI Android decompiler performance on benign and malicious apps: an
   empirical study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Android; Mobile apps; Decompilation; Obfuscation; Reverse engineering;
   Malware
ID CONTROL FLOW OBFUSCATION; JAVA
AB Decompilers are indispensable tools in Android malware analysis and app security auditing. Numerous academic works also employ an Android decompiler as the first step in a program analysis pipeline. In such settings, decompilation is frequently regarded as a "solved" problem, in that it is simply expected that source code can be accurately recovered from an app. On the other hand, it is known that, e.g, obfuscation can negatively impact a decompiler's effectiveness. Therefore, in order to better understand potential failure modes of, e.g., automated analysis pipelines involving decompilation, it is important to characterize the performance of decompilers on both benign and malicious apps. To this end, we have performed what is, to the best of our knowledge, the first large-scale study of Android decompilation failure rates, using three sets of apps; namely, 3,018 open-source apps, 13,601 apps crawled from Google Play, and an existing collection of 24,553 malware samples. In addition to the state-of-the-art Dalvik bytecode decompiler Jadx, we also studied the performance of three popular Java decompilers. Furthermore, this paper also presents the findings from a follow-up study on 54,945 malware apps, where we additionally performed an analysis of the reasons for decompilation failures. Our study revealed that decompilers generally have very low failure rates, and that few failures on benign apps appear to be related to obfuscation. On malware, however, obfuscation appears to be a more prominent cause of failures, although the vast majority of malicious apps could still be fully decompiled by an ensemble of decompilers.
C1 [Kargen, Ulf; Shahmehri, Nahid] Linkoping Univ, Linkoping, Sweden.
   [Mauthe, Noah] CISPA, Saarbrucken, Germany.
C3 Linkoping University
RP Kargén, U (corresponding author), Linkoping Univ, Linkoping, Sweden.
EM ulf.kargen@liu.se; noah.mauthe@cispa.de; nahid.shahmehri@liu.se
RI Kargén, Ulf/HTT-4309-2023
OI Kargén, Ulf/0000-0002-3009-4314; Mauthe, Noah/0009-0006-9443-6455
FU Swedish Graduate School in Computer Science (CUGS); Excellence Center at
   Linkoeping - Lund in Information Technology (ELLIIT)
FX This work was partially supported by the Swedish Graduate School in
   Computer Science (CUGS) and the Excellence Center at Linkoeping - Lund
   in Information Technology (ELLIIT).
CR Allix K, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P468, DOI [10.1145/2901739.2903508, 10.1109/MSR.2016.056]
   Andriesse D, 2016, PROCEEDINGS OF THE 25TH USENIX SECURITY SYMPOSIUM, P583
   Backes M, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P356, DOI 10.1145/2976749.2978333
   Balachandran V, 2016, COMPUT SECUR, V61, P72, DOI 10.1016/j.cose.2016.05.003
   Cen L, 2015, IEEE T DEPEND SECURE, V12, P400, DOI 10.1109/TDSC.2014.2355839
   Chan JT, 2004, J SYST SOFTWARE, V71, P1, DOI 10.1016/S0164-1212(02)00066-3
   Chen S, 2019, PROC INT CONF SOFTW, P596, DOI 10.1109/ICSE.2019.00070
   Chengbin Pang, 2021, 2021 IEEE Symposium on Security and Privacy (SP), P833, DOI 10.1109/SP40001.2021.00012
   Collberg C., 1997, TAXONOMY OBFUSCATING
   Dong SK, 2018, L N INST COMP SCI SO, V254, P172, DOI 10.1007/978-3-030-01701-9_10
   Duan Y, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23296
   Enck W, 2011, P 20 USENIX C SEC SE, P2
   Fengguo Wei, 2017, Detection of Intrusions and Malware, and Vulnerability Assessment. 14th International Conference, DIMVA 2017. Proceedings: LNCS 10327, P252, DOI 10.1007/978-3-319-60876-1_12
   Gamba J, 2020, P IEEE S SECUR PRIV, P1039, DOI 10.1109/SP40000.2020.00013
   Gibler C., 2012, P 5 INT C TRUST TRUS, V7344, P291, DOI DOI 10.1007/978-3-642-30921-2
   Gusarovs K, 2018, APPL COMPUT SYST, V23, P109, DOI 10.2478/acss-2018-0014
   Hamilton J, 2009, IEEE INT WORK C SO, P129, DOI 10.1109/SCAM.2009.24
   Hammad M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P421, DOI 10.1145/3180155.3180228
   Harrand N, 2020, J SYST SOFTWARE, V168, DOI 10.1016/j.jss.2020.110645
   Harrand N, 2019, IEEE INT WORK C SO, P92, DOI 10.1109/SCAM.2019.00019
   Hou TW, 2006, IEE P-SOFTW, V153, P80, DOI 10.1049/ip-sen:20050010
   Jang H, 2019, PROCEEDINGS OF THE 2019 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'19), P2557, DOI 10.1145/3319535.3363255
   Junod P, 2015, 2015 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON SOFTWARE PROTECTION (SPRO), P3, DOI 10.1109/SPRO.2015.10
   Kostelansky J, 2017, 2017 COMMUNICATION AND INFORMATION TECHNOLOGIES (KIT), P72
   Li MH, 2017, PROC INT CONF SOFTW, P335, DOI 10.1109/ICSE.2017.38
   Linn Cullen, 2003, Obfuscation of Executable Code to Improve Resistance to Static Disassembly, P290, DOI [10.1145/948109.948149, DOI 10.1145/948109.948149]
   Martín A, 2017, SOFT COMPUT, V21, P7405, DOI 10.1007/s00500-016-2283-y
   Mauthe N, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P400, DOI 10.1109/SANER50967.2021.00044
   Ming J, 2015, CCS'15: PROCEEDINGS OF THE 22ND ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P757, DOI 10.1145/2810103.2813617
   Muhui Jiang, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P401, DOI 10.1145/3395363.3397377
   Naeem NA, 2007, INT C PROGRAM COMPRE, P253
   Pauck F, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P331, DOI 10.1145/3236024.3236029
   Roundy KA, 2013, ACM COMPUT SURV, V46, DOI 10.1145/2522968.2522972
   Shan ZY, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P728, DOI 10.1145/3180155.3180214
   Tian D, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P273
   Wang H., 2015, PROC ISSTA, P71, DOI [10.1145/2771783.2771795, DOI 10.1145/2771783.2771795]
   Wenbo Yang, 2015, Research in Attacks, Intrusions and Defenses. 18th International Symposium, RAID 2015. Proceedings: LNCS 9404, P359, DOI 10.1007/978-3-319-26362-5_17
   Xue L, 2017, PROC INT CONF SOFTW, P358, DOI 10.1109/ICSE.2017.40
   Zhang YQ, 2015, LECT NOTES COMPUT SC, V9327, P293, DOI 10.1007/978-3-319-24177-7_15
NR 39
TC 0
Z9 0
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2023
VL 28
IS 2
AR 48
DI 10.1007/s10664-022-10281-9
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 9C1KM
UT WOS:000935184700001
OA hybrid
DA 2024-07-18
ER

PT J
AU Wu, D
   Jing, XY
   Zhang, HY
   Zhou, YM
   Xu, BW
AF Wu, Di
   Jing, Xiao-Yuan
   Zhang, Hongyu
   Zhou, Yuming
   Xu, Baowen
TI Leveraging Stack Overflow to detect relevant tutorial fragments of APIs
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE API tutorials; Stack overflow; Semi-supervised; Transfer learning
ID DOMAIN ADAPTATION; KNOWLEDGE
AB Developers often use learning resources such as API tutorials and Stack Overflow (SO) to learn how to use an unfamiliar API. An API tutorial can be divided into a number of consecutive units that describe the same topic, denoted as tutorial fragments. We consider a tutorial fragment explaining the API usage knowledge as a relevant fragment of the API. Discovering relevant tutorial fragments of APIs can facilitate API understanding, learning, and application. However, existing approaches, based on supervised or unsupervised approaches, often suffer from either high manual efforts or lack of consideration of the relevance information. In this paper, we propose a novel approach, called SO2RT, to detect relevant tutorial fragments of APIs based on SO posts. SO2RT first automatically extracts relevant and irrelevant (API, QA) pairs (QA stands for question and answer) and (API, FRA) pairs (FRA stands for tutorial fragment). It then trains a semi-supervised transfer learning based detection model, which can transfer the API usage knowledge in SO Q&A pairs to tutorial fragments by utilizing the easy-to-extract (API, QA) pairs. Finally, relevant fragments of APIs can be discovered by consulting the trained model. In this way, the effort for labeling the relevance between tutorial fragments and APIs can be reduced. We evaluate SO2RT on Java and Android datasets containing 21,008 (API, QA) pairs. Experimental results show that SO2RT improves the state-of-the-art approaches in terms of F-Measure on both datasets. Our user study further confirms the effectiveness of SO2RT in practice. We also show a successful application of the relevant fragments to API recommendation.
C1 [Wu, Di; Jing, Xiao-Yuan; Zhou, Yuming; Xu, Baowen] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Peoples R China.
   [Jing, Xiao-Yuan] Wuhan Univ, Sch Comp, Wuhan, Peoples R China.
   [Jing, Xiao-Yuan] Guangdong Univ Petrochem Technol, Maoming, Peoples R China.
   [Zhang, Hongyu] Univ Newcastle, Sch Informat & Phys Sci, Callaghan, NSW, Australia.
C3 Nanjing University; Wuhan University; Guangdong University of
   Petrochemical Technology; University of Newcastle
RP Jing, XY (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Peoples R China.; Jing, XY (corresponding author), Wuhan Univ, Sch Comp, Wuhan, Peoples R China.; Jing, XY (corresponding author), Guangdong Univ Petrochem Technol, Maoming, Peoples R China.
EM wudidi@nju.edu.cn; jingxy_2000@126.com; hongyu.zhang@newcastle.edu.au;
   zhouyuming@nju.edu.cn; bwxu@nju.edu.cn
RI Xu, Baowen/IXW-4882-2023; zhang, hongyu/ABC-3702-2021; He,
   Chen/JLM-5059-2023; YE, Chen/KFR-3858-2024; Wu, Di/GXG-3795-2022
OI Xu, Baowen/0000-0001-7743-1296; zhang, hongyu/0000-0002-3063-9425; Wu,
   Di/0000-0003-1096-7074
FU NSFC Project [62176069, 61933013]; Innovation Group of Guangdong
   Education Department [2020KCXTD014]; 2019 Key Discipline project of
   Guangdong Province; Jiangsu Funding Program for Excellent Postdoctoral
   Talent [20220ZB43]; Australian Research Council (ARC) [DP220103044]
FX The authors would like to thank the anonymous reviewers for their
   constructive comments and suggestions. This work was supported by the
   NSFC Project under Grant No. 62176069 and 61933013, the Innovation Group
   of Guangdong Education Department under Grant No. 2020KCXTD014, the 2019
   Key Discipline project of Guangdong Province, and Jiangsu Funding
   Program for Excellent Postdoctoral Talent No. 20220ZB43. Hongyu Zhang is
   supported by Australian Research Council (ARC) Discovery Project
   DP220103044.
CR Ahasanuzzaman M, 2020, EMPIR SOFTW ENG, V25, P1493, DOI 10.1007/s10664-019-09743-4
   [Anonymous], 2018, JODATIME TUTORIAL CO
   [Anonymous], 2018, JODA TIME ADD WEEKDA
   [Anonymous], 2018, ADD ONE DAY DATE
   Asaduzzaman M, 2013, IEEE WORK CONF MIN S, P97, DOI 10.1109/MSR.2013.6624015
   Bao LF, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3392093
   Belkin M, 2006, J MACH LEARN RES, V7, P2399
   Bulmer M. G., 1979, Principles of Statistics
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chowdhury SA, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P422, DOI 10.1109/MSR.2015.54
   Cliff N., 2014, Ordinal methods for behavioral data analysis, DOI DOI 10.4324/9781315806730
   diaeresis>tze Hinrich Schu<spacing, 2008, INTRO INFORM RETRIEV, V39
   Fan RE, 2008, J MACH LEARN RES, V9, P1871
   Gao ZP, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3412845
   Gretton A, 2005, LECT NOTES ARTIF INT, V3734, P63
   Gu XD, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P933, DOI 10.1145/3180155.3180167
   Gu XD, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P631, DOI 10.1145/2950290.2950334
   Huang Q, 2018, IEEE INT CONF AUTOM, P293, DOI 10.1145/3238147.3238191
   Huang Q, 2017, PROC IEEE INT CONF S, P159, DOI 10.1109/ICSME.2017.51
   Jiang H, 2017, PROC INT CONF SOFTW, P38, DOI 10.1109/ICSE.2017.12
   Jiang H, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P157, DOI 10.1109/SANER.2016.59
   Jiang M, 2017, IEEE T CYBERNETICS, V47, P38, DOI 10.1109/TCYB.2015.2502483
   Jing XY, 2017, IEEE T SOFTWARE ENG, V43, P321, DOI 10.1109/TSE.2016.2597849
   Joachims T, 1999, MACHINE LEARNING, PROCEEDINGS, P200
   Kittler J., 1996, Proceedings of the 13th International Conference on Pattern Recognition, P897, DOI 10.1109/ICPR.1996.547205
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Li J, 2021, IEEE T SERV COMPUT, V14, P472, DOI 10.1109/TSC.2018.2812729
   Li X, 2017, SIGNAL PROCESS, V131, P27, DOI 10.1016/j.sigpro.2016.07.018
   Li XC, 2020, IEEE T SOFTWARE ENG, V46, P1081, DOI 10.1109/TSE.2018.2876006
   Li YY, 2020, APPL ENERG, V277, DOI 10.1016/j.apenergy.2020.115504
   Lin B, 2019, PROC INT CONF SOFTW, P548, DOI 10.1109/ICSE.2019.00066
   Lin ZQ, 2017, IEEE INT CONF AUTOM, P123, DOI 10.1109/ASE.2017.8115625
   Ma SY, 2021, IEEE T SOFTWARE ENG, V47, P2296, DOI 10.1109/TSE.2019.2946830
   Maalej W, 2013, IEEE T SOFTWARE ENG, V39, P1264, DOI 10.1109/TSE.2013.12
   McCallum A, 1999, IJCAI-99: PROCEEDINGS OF THE SIXTEENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, VOLS 1 & 2, P662
   Mikolov T., 2013, ADV NEURAL INFORM PR, V26, P3111, DOI DOI 10.5555/2999792.2999959
   Pan SJ, 2011, IEEE T NEURAL NETWOR, V22, P199, DOI 10.1109/TNN.2010.2091281
   Pan SJ, 2009, 21ST INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-09), PROCEEDINGS, P1187
   Petrosyan G, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P869, DOI 10.1109/ICSE.2015.97
   Ponzanelli Luca, 2019, IEEE Transactions on Software Engineering, V45, P464, DOI 10.1109/TSE.2017.2779479
   Le Q, 2014, PR MACH LEARN RES, V32, P1188
   Raghothaman M, 2016, PROC INT CONF SOFTW, P357, DOI 10.1145/2884781.2884808
   Rahman MM, 2017, PROC IEEE ACM INT C, P51, DOI 10.1109/ICSE-C.2017.11
   Rahman MM, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P426, DOI 10.1109/MSR.2015.55
   Rahman MM, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P349, DOI 10.1109/SANER.2016.80
   Rehurek Radim, 2010, PROC WORKSHOP NEW CH, P45
   Robillard MP, 2015, EMPIR SOFTW ENG, V20, P1558, DOI 10.1007/s10664-014-9323-y
   Robillard MP, 2011, EMPIR SOFTW ENG, V16, P703, DOI 10.1007/s10664-010-9150-8
   Robillard MP, 2009, IEEE SOFTWARE, V26, P27, DOI 10.1109/MS.2009.193
   Rubei R, 2020, INFORM SOFTWARE TECH, V127, DOI 10.1016/j.infsof.2020.106367
   Smola A, 2007, LECT NOTES ARTIF INT, V4754, P13
   Storey Margaret-Anne, 2012, Crowd Documentation: Exploring the Coverage and the Dynamics of API Discussions on Stack Overflow, V11
   Subramanian S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P643, DOI 10.1145/2568225.2568313
   Tan CQ, 2018, LECT NOTES COMPUT SC, V11141, P270, DOI 10.1007/978-3-030-01424-7_27
   Nguyen T, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P551, DOI 10.1145/3236024.3236036
   Thung F, 2013, IEEE INT CONF AUTOM, P290, DOI 10.1109/ASE.2013.6693088
   Ting KM, 2002, IEEE T KNOWL DATA EN, V14, P659, DOI 10.1109/TKDE.2002.1000348
   Treude C, 2016, PROC INT CONF SOFTW, P392, DOI 10.1145/2884781.2884800
   Treude C, 2015, IEEE T SOFTWARE ENG, V41, P565, DOI 10.1109/TSE.2014.2387172
   Treude C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P804, DOI 10.1145/1985793.1985907
   Nguyen TD, 2017, PROC INT CONF SOFTW, P438, DOI 10.1109/ICSE.2017.47
   Uddin G, 2020, INFORM SOFTWARE TECH, V122, DOI 10.1016/j.infsof.2020.106277
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Wu D, 2021, INT C SOFTWARE ANAL, P35
   Wu D, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09962-8
   Wu D, 2020, WIRES DATA MIN KNOWL, V10, DOI 10.1002/widm.1369
   Wu D, 2018, PROC IEEE ACM INT C, P270, DOI 10.1145/3183440.3194965
   Xie WK, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1015, DOI 10.1145/3368089.3409731
   Xu BW, 2017, IEEE INT CONF AUTOM, P706, DOI 10.1109/ASE.2017.8115681
   Xu BW, 2016, IEEE INT CONF AUTOM, P51, DOI 10.1145/2970276.2970357
   Ye X, 2016, PROC INT CONF SOFTW, P404, DOI 10.1145/2884781.2884862
   Zhang F, 2018, IEEE T SOFTWARE ENG, V44, P1070, DOI 10.1109/TSE.2017.2750682
   Zhang JX, 2021, IEEE T SOFTWARE ENG, V47, P1299, DOI 10.1109/TSE.2019.2919304
   Zhang N, 2022, IEEE T SOFTWARE ENG, V48, P1185, DOI 10.1109/TSE.2020.3016006
   Zhao DH, 2019, PROC INT CONF SOFTW, P350, DOI 10.1109/ICSE.2019.00049
NR 75
TC 5
Z9 6
U1 4
U2 17
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN
PY 2023
VL 28
IS 1
AR 12
DI 10.1007/s10664-022-10235-1
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 6M2UA
UT WOS:000888727700001
DA 2024-07-18
ER

PT J
AU Widyasari, R
   Prana, GAA
   Haryono, SA
   Wang, SW
   Lo, D
AF Widyasari, Ratnadira
   Prana, Gede Artha Azriadi
   Haryono, Stefanus Agus
   Wang, Shaowei
   Lo, David
TI Real world projects, real faults: evaluating spectrum based fault
   localization techniques on Python projects
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Spectrum-based fault localization; Python; testing and debugging;
   empirical study
ID REPLICATIONS; REPAIR; TESTS; USER
AB Spectrum Based Fault Localization (SBFL) is a statistical approach to identify faulty code within a program given a program spectra (i.e., records of program elements executed by passing and failing test cases). Several SBFL techniques have been proposed over the years, but most evaluations of those techniques were done only on Java and C programs, and frequently involve artificial faults. Considering the current popularity of Python, indicated by the results of the Stack Overflow survey among developers in 2020, it becomes increasingly important to understand how SBFL techniques perform on Python projects. However, this remains an understudied topic. In this work, our objective is to analyze the effectiveness of popular SBFL techniques in real-world Python projects. We also aim to compare our observed performance on Python to previously-reported performance on Java. Using the recently-built bug benchmark BugsInPy as our fault dataset, we apply five popular SBFL techniques (Tarantula, Ochiai, O-P, Barinel, and DStar) and analyze their performances. We subsequently compare our results with results from Java and C projects reported in earlier related works. We find that 1) the real faults in BugsInPy are harder to identify using SBFL techniques compared to the real faults in Defects4J, indicated by the lower performance of the evaluated SBFL techniques on BugsInPy; 2) older techniques such as Tarantula, Barinel, and Ochiai consistently outperform newer techniques (i.e., O-P and DStar) in a variety of metrics and debugging scenarios; 3) claims in preceding studies done on artificial faults in C and Java (such as "O-P outperforms Tarantula") do not hold on Python real faults; 4) lower-performing techniques can outperform higher-performing techniques in some cases, emphasizing the potential benefit of combining SBFL techniques. Our results yield insight into how popular SBFL techniques perform in real Python faults and emphasize the importance of conducting SBFL evaluations on real faults.
C1 [Widyasari, Ratnadira; Prana, Gede Artha Azriadi; Haryono, Stefanus Agus; Lo, David] Singapore Management Univ, Sch Comp & Informat Syst, 80 Stamford Rd, Stamford 178902, Singapore.
   [Wang, Shaowei] Univ Manitoba, Dept Comp Sci, Winnipeg, MB, Canada.
C3 Singapore Management University; University of Manitoba
RP Widyasari, R (corresponding author), Singapore Management Univ, Sch Comp & Informat Syst, 80 Stamford Rd, Stamford 178902, Singapore.
EM ratnadiraw.2020@smu.edu.sg; arthaprana.2016@smu.edu.sg;
   stefanusah@smu.edu.sg; shaowei.wang@umanitoba.ca; davidlo@smu.edu.sg
RI Lo, David/A-2493-2012
OI Lo, David/0000-0002-4367-7201
CR Abreu R., 2009, SARA, V9, P2
   Abreu R, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P89, DOI 10.1109/TAIC.PART.2007.13
   Abreu R, 2006, 12TH PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P39
   Abreu R, 2009, IEEE INT CONF AUTOM, P88, DOI 10.1109/ASE.2009.25
   Abreu R, 2009, J SYST SOFTWARE, V82, P1780, DOI 10.1016/j.jss.2009.06.035
   Ali S, 2009, IEEE INT CONF AUTOM, P76, DOI 10.1109/ASE.2009.89
   [Anonymous], 2013, P 2013 INT S SOFTW T, DOI DOI 10.1145/2483760.2483767
   [Anonymous], 1992, Springer Series in Statistics, DOI DOI 10.1007/978-1-4612-4380-9_16
   Baah GK, 2010, IEEE T SOFTWARE ENG, V36, P528, DOI 10.1109/TSE.2009.87
   Bouillon P, 2007, LECT NOTES COMPUT SC, V4536, P101
   Briand LC, 2007, ISSRE 2007: 18TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P137, DOI 10.1109/ISSRE.2007.31
   Cantor AB, 1996, PSYCHOL METHODS, V1, P150, DOI 10.1037/1082-989X.1.2.150
   Chaki S., 2004, Software Engineering Notes, V29, P73, DOI 10.1145/1041685.1029908
   Chen D, 2019, INT C PROGRAM COMPRE, P179, DOI 10.1109/ICPC.2019.00037
   Cifuentes Cristina, 2009, P 2 INT WORKSHOP DEF, P16, DOI DOI 10.1145/1555860.1555866
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   DAGOSTIN.R, 1973, BIOMETRIKA, V60, P613, DOI 10.1093/biomet/60.3.613
   Debroy V., 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P13, DOI 10.1109/QSIC.2010.80
   DeVellis R., 2005, INTERRATER RELIABILI
   DIAgostino R., 1971, BIOMETRIKA, V58, P1
   Durieux T, 2019, ARXIV
   Ghanbari A, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P19, DOI 10.1145/3293882.3330559
   Gouveia Carlos, 2013, 2013 1 IEEE WORK C S, P1
   Hao D, 2009, PROC INT CONF SOFTW, P583, DOI 10.1109/ICSE.2009.5070561
   He HD, 2020, IEEE ACCESS, V8, P18497, DOI 10.1109/ACCESS.2020.2965139
   Horvath F, 2020, PROC IEEE INT CONF S, P290, DOI 10.1109/ICSME46990.2020.00036
   HUTCHINS M, 1994, PROC INT CONF SOFTW, P191, DOI 10.1109/ICSE.1994.296778
   Jiang JJ, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P298, DOI 10.1145/3213846.3213871
   Jones J.A., 2005, P 20 IEEE ACM INT C, P273, DOI [10.1145/1101908.1101949, DOI 10.1145/1101908.1101949]
   Jones J. A., 2001, P INT C SOFTW ENG WO
   Ju XL, 2014, J SYST SOFTWARE, V90, P3, DOI 10.1016/j.jss.2013.11.1109
   Just R., 2014, P 2014 INT S SOFTW T, P433
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Just R, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P287, DOI 10.1145/3213846.3213870
   Kim J, 2014, 2014 INTERNATIONAL CONFERENCE ON INFORMATION NETWORKING (ICOIN 2014), P346, DOI 10.1109/ICOIN.2014.6799702
   Kitchenham B, 2008, EMPIR SOFTW ENG, V13, P219, DOI 10.1007/s10664-008-9061-0
   Koca Feyzullah, 2013, Testing Software and Systems. 25th IFIP WG 6.1 International Conference, ICTSS 2013. Proceedings: LNCS 8254, P239, DOI 10.1007/978-3-642-41707-8_16
   Kochhar Pavneet Singh, 2016, 25 INT S SOFTWARE TE, P165, DOI 10.1145/2931037.2931051
   Konighofer R., 2011, 2011 Formal Methods in Computer-Aided Design (FMCAD), P91
   Le Goues C, 2015, IEEE T SOFTWARE ENG, V41, P1236, DOI 10.1109/TSE.2015.2454513
   Le Tien-Duy B., 2013, 2013 IEEE International Conference on Software Maintenance (ICSM), P380, DOI 10.1109/ICSM.2013.52
   Le TDB, 2015, PROC IEEE INT CONF S, P501
   Le TDB, 2015, EMPIR SOFTW ENG, V20, P1237, DOI 10.1007/s10664-014-9349-1
   LINDSAY RM, 1993, AM STAT, V47, P217, DOI 10.2307/2684982
   Lo D., 2014, P 29 ACM IEEE INT C, P127
   Lo D., 2010, Software Maintenance (ICSM), 2010 IEEE International Confer- ence on, P1, DOI DOI 10.1109/ICSM.2010.5609542
   Long F, 2016, PROC INT CONF SOFTW, P702, DOI 10.1145/2884781.2884872
   Lu Shan, 2005, WORKSHOP EVALUATION, P1, DOI 10.1.1.134.8941
   Martínez M, 2015, EMPIR SOFTW ENG, V20, P176, DOI 10.1007/s10664-013-9282-8
   Moon S, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P153, DOI 10.1109/ICST.2014.28
   Naish L, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000795
   Pan K, 2009, EMPIR SOFTW ENG, V14, P286, DOI 10.1007/s10664-008-9077-5
   Parnin C., 2011, P 2011 INT S SOFTWAR, P199, DOI [10.1145/2001420.2001445, DOI 10.1145/2001420.2001445]
   Patra J, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P906, DOI 10.1145/3468264.3468623
   Pearson S, 2017, PROC INT CONF SOFTW, P609, DOI 10.1109/ICSE.2017.62
   Planning S, 2002, The economic impacts of inadequate infrastructure for software testing
   Rayson P., 2004, P 7 INT C STAT ANAL, V2, P926
   Ren Leiming., 2020, International Conference of Pioneering Computer Scientists, Engineers and Educators, P258
   Renieris M, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P30, DOI 10.1109/ASE.2003.1240292
   Romano J, 2006, ANN M FLOR ASS I RES, P1
   Ruthruff JR, 2005, PROC INT CONF SOFTW, P352
   Saha RK, 2018, IEEE WORK CONF MIN S, P10, DOI 10.1145/3196398.3196473
   Santos A, 2020, ARXIV
   Shull FJ, 2008, EMPIR SOFTW ENG, V13, P211, DOI 10.1007/s10664-008-9060-1
   Sobreira V, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P130, DOI 10.1109/SANER.2018.8330203
   Sohn J, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P273, DOI 10.1145/3092703.3092717
   Tallarida RJ, 1987, MANUAL PHARMACOLOGIC, DOI DOI 10.1007/978-1-4612-4974-0_43
   Tomassi DA, 2019, PROC INT CONF SOFTW, P339, DOI 10.1109/ICSE.2019.00048
   Tufano M, 2020, PROC INT CONF SOFTW, P29, DOI 10.1145/3377812.3382146
   Vancsics B, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P308, DOI [10.1109/SANER48275.2020.9054803, 10.1109/saner48275.2020.9054803]
   VESSEY I, 1985, INT J MAN MACH STUD, V23, P459, DOI 10.1016/S0020-7373(85)80054-7
   Wen M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/3180155.3180233
   Widyasari R, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1556, DOI 10.1145/3368089.3417943
   Wong W. Eric, 2010, Proceedings 2010 Fourth IEEE International Conference on Secure Software Integration and Reliability Improvement (SSIRI 2010), P14, DOI 10.1109/SSIRI.2010.38
   Wong W. Eric, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P42
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Wong WE, 2014, IEEE T RELIAB, V63, P290, DOI 10.1109/TR.2013.2285319
   Wong WE, 2012, IEEE T RELIAB, V61, P149, DOI 10.1109/TR.2011.2172031
   Wright CS, 2011, LECT NOTES COMPUT SC, V6694, P198, DOI 10.1007/978-3-642-21323-6_25
   Xia X, 2016, PROC IEEE INT CONF S, P268, DOI 10.1109/ICSME.2016.67
   Xie XY, 2016, PROC INT CONF SOFTW, P808, DOI 10.1145/2884781.2884834
   Xie XY, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2522920.2522924
   Xuan JF, 2014, PROC IEEE INT CONF S, P191, DOI 10.1109/ICSME.2014.41
   Xuan JF, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P52, DOI 10.1145/2635868.2635906
   Zhang MX, 2017, LECT NOTES COMPUT SC, V10538, P261, DOI [10.1007/978-3-319-68155-9_20, 10.1145/3092703.3092731]
   Zou DM, 2021, IEEE T SOFTWARE ENG, V47, P332, DOI 10.1109/TSE.2019.2892102
NR 86
TC 4
Z9 4
U1 0
U2 7
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2022
VL 27
IS 6
AR 147
DI 10.1007/s10664-022-10189-4
PG 50
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 3O4IB
UT WOS:000836798500014
DA 2024-07-18
ER

PT J
AU Wu, JH
   Arcaini, P
   Yue, T
   Ali, S
   Zhang, HH
AF Wu, Jiahui
   Arcaini, Paolo
   Yue, Tao
   Ali, Shaukat
   Zhang, Huihui
TI On the preferences of quality indicators for multi-objective search
   algorithms in search-based software engineering
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Search-based software engineering; Quality indicator; Multi-objective
   search algorithm
ID EVOLUTIONARY ALGORITHMS; GENETIC ALGORITHM; GENERATION; OPTIMIZERS
AB Multi-Objective Search Algorithms (MOSAs) have been applied to solve diverse Search-Based Software Engineering (SBSE) problems. In most cases, SBSE users select one or more commonly used MOSAs (for instance, Nondominated Sorting Genetic Algorithm II (NSGA-II)) to solve their search problems, without any justification (i.e., not supported by any evidence) on why those particular MOSAs are selected. However, when working with a specific multi-objective SBSE problem, users typically know what kind(s) of qualities they are looking for in solutions. Such qualities are represented by one or more Quality Indicators (QIs), which are often employed to assess various MOSAs to select the best MOSA. However, users usually have limited time budgets, which prevents them from executing multiple MOSAs and consequently selecting the best MOSA in the end. Therefore, for such users, it is highly preferred to select only one MOSA since the beginning. To this end, in this paper, we aim to assist SBSE users in finding appropriate MOSAs for their experiments, given their choices of QIs or quality aspects (e.g., Convergence, Uniformity). To achieve this aim, we conduct an extensive empirical evaluation with 18 search problems from a set of real-world, industrial, and open-source case studies, to study preferences among commonly used QIs and MOSAs in SBSE. We observe that each QI has its own specific most-preferred MOSA and vice versa; NSGA-II and Strength Pareto Evolutionary Algorithm 2 (SPEA2) are the most preferred MOSAs by QIs; no QI is the most preferred by all the MOSAs; the preferences between QIs and MOSAs vary across the search problems; QIs covering the same quality aspect(s) do not necessarily have the same preference for MOSAs. Based on our results, we provide discussions and guidelines for SBSE users to select appropriate MOSAs based on experimental evidence.
C1 [Wu, Jiahui; Yue, Tao] Nanjing Univ Aeronaut & Astronaut, Nanjing, Peoples R China.
   [Arcaini, Paolo] Natl Inst Informat, Tokyo, Japan.
   [Yue, Tao; Ali, Shaukat] Simula Res Lab, Oslo, Norway.
   [Zhang, Huihui] Qilu Univ Technol, Shandong Acad Sci, Sch Comp Sci & Technol, Jinan, Peoples R China.
   [Zhang, Huihui] Weifang Univ, Sch Comp Engn, Weifang, Peoples R China.
C3 Nanjing University of Aeronautics & Astronautics; Research Organization
   of Information & Systems (ROIS); National Institute of Informatics (NII)
   - Japan; Qilu University of Technology; Weifang University
RP Yue, T (corresponding author), Nanjing Univ Aeronaut & Astronaut, Nanjing, Peoples R China.; Yue, T (corresponding author), Simula Res Lab, Oslo, Norway.
EM wjh_sx2016068@nuaa.edu.cn; arcaini@nii.ac.jp; taoyue@ieee.org;
   shaukat@simula.no; huihui@wfu.edu.cn
RI yue, tao/H-6783-2013; Arcaini, Paolo/J-3616-2017
OI Arcaini, Paolo/0000-0002-6253-4062; Yue, Tao/0000-0003-3262-5577
FU National Natural Science Foundation of China [61872182]; Co-evolver
   project - Research Council of Norway [286898/F20]; ERATO HASUO
   Metamathematics for Systems Design Project, JST [JPMJER1603]; Shandong
   Provincial Natural Science Foundation [ZR2021MF026]
FX This work is supported by the National Natural Science Foundation of
   China under Grant No. 61872182. It is also partially supported by the
   Co-evolver project (No. 286898/F20) funded by the Research Council of
   Norway. Paolo Arcaini is supported by ERATO HASUO Metamathematics for
   Systems Design Project (No. JPMJER1603), JST. Funding Reference number:
   10.13039/501100009024 ERATO. Huihui Zhang is supported by the project
   (grant No. ZR2021MF026) funded by the Shandong Provincial Natural
   Science Foundation.
CR Achimugu P, 2014, INFORM SOFTWARE TECH, V56, P568, DOI 10.1016/j.infsof.2014.02.001
   Ali Shaukat, 2020, Search-Based Software Engineering. 12th International Symposium, SSBSE 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12420), P25, DOI 10.1007/978-3-030-59762-7_3
   Ali S, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3375636
   Ali S, 2010, IEEE T SOFTWARE ENG, V36, P742, DOI 10.1109/TSE.2009.52
   [Anonymous], 2002, P EUROGEN C
   [Anonymous], 1992, Springer Series in Statistics, DOI DOI 10.1007/978-1-4612-4380-9_16
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Barros Mrciode Oliveira., 2011, RELATE DIA, V5
   Coello CAC, 2004, LECT NOTES COMPUT SC, V2972, P688
   Dantas Altino, 2015, Search-Based Software Engineering. 7th International Symposium, SSBSE 2015. Proceedings: LNCS 9275, P341, DOI 10.1007/978-3-319-22183-0_32
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Durillo J. J., 2008, Parallel Problem Solving from Nature - PPSN X. 10th International Conference, P661, DOI 10.1007/978-3-540-87700-4_66
   Durillo JJ, 2009, 1ST INTERNATIONAL SYMPOSIUM ON SEARCH BASED SOFTWARE ENGINEERING, PROCEEDINGS, P49, DOI 10.1109/SSBSE.2009.21
   Durillo JJ, 2011, ADV ENG SOFTW, V42, P760, DOI 10.1016/j.advengsoft.2011.05.014
   Durillo JJ, 2009, LECT NOTES COMPUT SC, V5467, P495, DOI 10.1007/978-3-642-01020-0_39
   Fieldsend JE, 2003, IEEE T EVOLUT COMPUT, V7, P305, DOI 10.1109/TEVC.2003.810733
   Goh CK, 2009, STUD COMPUT INTELL, V186, P1
   Greer D, 2004, INFORM SOFTWARE TECH, V46, P243, DOI 10.1016/j.infsof.2003.07.002
   Guizzo G, 2017, APPL SOFT COMPUT, V56, P331, DOI 10.1016/j.asoc.2017.03.012
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Karim MR, 2014, LECT NOTES COMPUT SC, V8636, P123
   Kitchenham B, 2017, EMPIR SOFTW ENG, V22, P579, DOI 10.1007/s10664-016-9437-5
   Knowles J, 2002, IEEE C EVOL COMPUTAT, P711, DOI 10.1109/CEC.2002.1007013
   Knowles J., 2006, A Tutorial on the Performance Assessment of Stochastic Multiobjective Optimizers
   Knowles JD, 2000, EVOL COMPUT, V8, P149, DOI 10.1162/106365600568167
   Li M., 2020, IEEE Transactions on Software Engineering, P1
   Li MQ, 2019, ACM COMPUT SURV, V52, DOI 10.1145/3300148
   Li MQ, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS (ICSE-NIER), P17, DOI 10.1145/3183399.3183405
   Lim S.L., 2011, THESIS U NEW S WALES
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   McMinn P., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P153, DOI 10.1109/ICSTW.2011.100
   Nebro AJ, 2009, MCDM: 2009 IEEE SYMPOSIUM ON COMPUTATIONAL INTELLIGENCE IN MULTI-CRITERIA DECISION-MAKING, P66
   Nebro AJ, 2009, INT J INTELL SYST, V24, P726, DOI 10.1002/int.20358
   Pitangueira AM, 2016, LECT NOTES COMPUT SC, V9619, P3, DOI 10.1007/978-3-319-30282-9_1
   Pradhan D, 2021, IEEE T SOFTWARE ENG, V47, P86, DOI 10.1109/TSE.2018.2882176
   Pradhan D, 2018, IEEE INT CONF SOFTW, P46, DOI 10.1109/ICST.2018.00015
   Pradhan D, 2016, LECT NOTES COMPUT SC, V9976, P172, DOI 10.1007/978-3-319-47443-4_11
   Pradhan D, 2016, GECCO'16: PROCEEDINGS OF THE 2016 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1085, DOI 10.1145/2908812.2908850
   Ramírez A, 2014, GECCO'14: PROCEEDINGS OF THE 2014 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1287, DOI 10.1145/2576768.2598310
   Ravber M, 2017, APPL SOFT COMPUT, V55, P265, DOI 10.1016/j.asoc.2017.01.038
   Safdar SA, 2017, PROCEEDINGS OF THE 2017 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE (GECCO'17), P1319, DOI 10.1145/3071178.3071261
   Sayyad AS, 2013, INT WORK REAL ARTIF, P21, DOI 10.1109/RAISE.2013.6615200
   Shang K, 2021, IEEE T EVOLUT COMPUT, V25, P1, DOI 10.1109/TEVC.2020.3013290
   Sheskin David, 2011, Handbook of Parametric and Nonparametric Statistical Procedures
   Spieker H, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P12, DOI 10.1145/3092703.3092709
   Van Veldhuizen D. A., 1998, GEN PROGR C, P221
   Van Veldhuizen DA, 1999, Multiobjective evolutionary algorithms: classifications, analyses, and new innovations
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Vecek N, 2014, INFORM SCIENCES, V277, P656, DOI 10.1016/j.ins.2014.02.154
   Wang S, 2016, PROC INT CONF SOFTW, P631, DOI 10.1145/2884781.2884880
   Wang S, 2015, J SYST SOFTWARE, V103, P370, DOI 10.1016/j.jss.2014.08.024
   Wang Z, 2008, IEEE C EVOL COMPUTAT, P1148, DOI 10.1109/CEC.2008.4630941
   Wohlin C., 2012, Experimentation in Software Engineering
   Wu J, 2021, REPOSITORY PAPER PRE
   Yue T, 2014, GECCO'14: PROCEEDINGS OF THE 2014 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1295, DOI 10.1145/2576768.2598309
   Zeleny M., 1973, Multiple criteria decision making
   Zhang HH, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3408301
   Zhang M, 2019, J SYST SOFTWARE, V153, P1, DOI 10.1016/j.jss.2019.03.011
   Zhou AM, 2006, IEEE C EVOL COMPUTAT, P892
   Zitzler E, 2003, IEEE T EVOLUT COMPUT, V7, P117, DOI 10.1109/TEVC.2003.810758
   Zitzler E, 1998, LECT NOTES COMPUT SC, V1498, P292, DOI 10.1007/BFb0056872
NR 61
TC 3
Z9 3
U1 1
U2 8
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2022
VL 27
IS 6
AR 144
DI 10.1007/s10664-022-10127-4
PG 46
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 3O4IB
UT WOS:000836798500015
DA 2024-07-18
ER

PT J
AU Florez, JM
   Moreno, L
   Zhang, ZO
   Wei, SY
   Marcus, A
AF Florez, Juan Manuel
   Moreno, Laura
   Zhang, Zenong
   Wei, Shiyi
   Marcus, Andrian
TI An empirical study of data constraint implementations in Java
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Business rule; Data constraint; Empirical study; Code pattern; Discourse
   analysis
ID INFORMATION-RETRIEVAL; TRACEABILITY; REQUIREMENTS; EXTRACTION; RULES;
   CODE
AB Software systems are designed according to guidelines and constraints defined by business rules. Some of these constraints define the allowable or required values for data handled by the systems. These data constraints usually originate from the problem domain (e.g., regulations), and developers must write code that enforces them. Understanding how data constraints are implemented is essential for testing, debugging, and software change. Unfortunately, there are no widely-accepted guidelines or best practices on how to implement data constraints. This paper presents an empirical study that investigates how data constraints are implemented in Java. We study the implementation of 187 data constraints extracted from the documentation of eight real-world Java software systems. First, we perform a qualitative analysis of the textual description of data constraints and identify four data constraint types. Second, we manually identify the implementations of these data constraints and reveal that they can be grouped into 31 implementation patterns. The analysis of these implementation patterns indicates that developers prefer a handful of patterns when implementing data constraints. We also found evidence suggesting that deviations from these patterns are associated with unusual implementation decisions or code smells. Third, we develop a tool-assisted protocol that allows us to identify 256 additional trace links for the data constraints implemented using the 13 most common patterns. We find that almost half of these data constraints have multiple enforcing statements, which are code clones of different types. Finally, a study with 16 professional developers indicates that the patterns we describe can be easily and accurately recognized in Java code.
C1 [Florez, Juan Manuel; Zhang, Zenong; Wei, Shiyi; Marcus, Andrian] Univ Texas Dallas, Dept Comp Sci, Richardson, TX 75080 USA.
   [Moreno, Laura] CQSE Amer, Sunnyvale, CA USA.
C3 University of Texas System; University of Texas Dallas
RP Florez, JM (corresponding author), Univ Texas Dallas, Dept Comp Sci, Richardson, TX 75080 USA.
EM jflorez@utdallas.edu; moreno@cqse-america.com; zenong@utdallas.edu;
   swei@utdallas.edu; amarcus@utdallas.edu
RI ZHANG, ZENONG/JFL-1629-2023; Wei, Shiyi/AAR-1561-2020
OI Florez, Juan Manuel/0000-0001-7468-0043
FU National Science Foundation [CCF1848608, CCF-1910976, CCF-1955837]
FX This research was supported in part by grants from the National Science
   Foundation: CCF1848608, CCF-1910976, CCF-1955837.
CR Ali N, 2013, IEEE T SOFTWARE ENG, V39, P725, DOI 10.1109/TSE.2012.71
   Ali N, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P191, DOI 10.1109/ICSM.2012.6405271
   Ali N, 2011, CONF PROC INT SYMP C, P111, DOI 10.1109/ICPC.2011.42
   Alspaugh TA, 2013, S VIS LANG HUM CEN C, P165, DOI 10.1109/RE.2013.6636716
   [Anonymous], APACHE ANT 2021 TARG
   [Anonymous], 2004, Applying UML and Patterns: An Introduction to Object-Oriented Analysis and Design and Iterative Development
   [Anonymous], 2007, P 3 INT WORKSHOP PRE, DOI DOI 10.1109/PROMISE.2007.6
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   BAKER BS, 1995, SECOND WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P86, DOI 10.1109/WCRE.1995.514697
   Bellon S, 2007, IEEE T SOFTWARE ENG, V33, P577, DOI 10.1109/TSE.2007.70725
   Blasco D, 2020, INFORM SOFTWARE TECH, V119, DOI 10.1016/j.infsof.2019.106235
   Borg M, 2014, EMPIR SOFTW ENG, V19, P1565, DOI 10.1007/s10664-013-9255-y
   Breaux TD, 2008, IEEE T SOFTWARE ENG, V34, P5, DOI 10.1109/TSE.2007.70746
   Business Rules Group, 2003, BUS RUL MAN
   Cemus K., 2015, P 2015 INT C RES AD, P324, DOI DOI 10.1145/2811411.2811476
   Cerny T., 2011, 2011 Proceedings of IEEE International Conference on Computer Science and Automation Engineering (CSAE), P77, DOI 10.1109/CSAE.2011.5953174
   Chaparro O., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P479, DOI 10.1109/WCRE.2012.57
   Cleland-Huang J., 2014, FOSE P FUTURE SOFTWA, P55
   Cleland-Huang J, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P849, DOI 10.1145/2635868.2666612
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Cosentino Valerio, 2012, Rules on the Web: Research and Applications. Proceedings of the 6th International Symposium, RuleML 2012, P17, DOI 10.1007/978-3-642-32689-9_3
   Cosentino V, 2013, WORK CONF REVERSE EN, P409, DOI 10.1109/WCRE.2013.6671316
   De Lucia A., 2012, SOFTWARE SYSTEMS TRA, P71, DOI [10.1007/978-1-4471- 2239-5_4, DOI 10.1007/978-1-4471-2239-5_4]
   Domges R, 1998, COMMUN ACM, V41, P54, DOI 10.1145/290133.290149
   Eaddy M, 2008, IEEE T SOFTWARE ENG, V34, P497, DOI 10.1109/TSE.2008.36
   Eaddy M, 2008, INT C PROGRAM COMPRE, P53, DOI 10.1109/ICPC.2008.39
   Fard AM, 2013, IEEE INT WORK C SO, P116, DOI 10.1109/SCAM.2013.6648192
   Florez JM, 2022, EMPIRICAL STUDY DATA, DOI [10.5281/zenodo.6624695, DOI 10.5281/ZENODO.6624695]
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gabel M, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P321, DOI 10.1145/1368088.1368132
   Gamma Erich, 1995, DESIGN PATTERNS ELEM
   Google, GUAV GOOGL LIB JAV
   Google, 2021, GUAV PREC
   Guéhéneuc YG, 2008, IEEE T SOFTWARE ENG, V34, P667, DOI 10.1109/TSE.2008.48
   Guéhéneuc YG, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P172, DOI 10.1109/WCRE.2004.21
   Guo J, 2017, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.2017.9
   Guo J, 2008, WORK CONF REVERSE EN, P91, DOI 10.1109/WCRE.2008.12
   Hatano T, 2016, IEICE T INF SYST, VE99D, P1117, DOI 10.1587/transinf.2015EDP7202
   Hay D., 2000, Defining Business Rules: What Are They Really?
   HTTP Working Group, 2021, HYPERTEXT TRANSFER P
   Huang H, 1996, P INT COMP SOFTW APP, V20, P162, DOI 10.1109/CMPSAC.1996.544158
   iTrust, 2021, CHRON DIS RISK SEE R
   iTrust, 2021, UC51 ENT ED BAS HLTH
   JavaParser, 2021, JAVAPARSER
   jEdit, CLOS EX
   Joda-Time, 2021, GREOG JUL GJ CAL SYS
   Kaczor O, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P173
   Kapser C, 2006, WORK CONF REVERSE EN, P19
   Komondoor R, 2001, LECT NOTES COMPUT SC, V2126, P40
   Kuang HY, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P68, DOI 10.1109/SANER.2017.7884610
   Livshits B, 2015, COMMUN ACM, V58, P44, DOI 10.1145/2644805
   Mäder P, 2013, IEEE SOFTWARE, V30, P58, DOI 10.1109/MS.2013.60
   McMillan C, 2009, 2009 ICSE WORKSHOP ON TRACEABILITY IN EMERGING FORMS OF SOFTWARE ENGINEERING (TEFSE), P41, DOI 10.1109/TEFSE.2009.5069582
   Miles M.B., 2014, Qualitative data analysis: A methods sourcebook, V3rd
   Mirakhorli M, 2016, IEEE T SOFTWARE ENG, V42, P206, DOI 10.1109/TSE.2015.2479217
   Oualline S., 1997, Practical C ++ Programming, V3rd
   Pandita R, 2012, PROC INT CONF SOFTW, P815, DOI 10.1109/ICSE.2012.6227137
   Park C, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P300
   Rahimi R, 2016, 2016 IEEE 17TH INTERNATIONAL CONFERENCE ON HIGH PERFORMANCE SWITCHING AND ROUTING (HPSR), P93, DOI 10.1109/HPSR.2016.7525645
   Razzaq A, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3280988
   Rempel P, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P943, DOI 10.1145/2568225.2568290
   Rhino, 2021, ECMASCRIPT LANG SPEC
   Roy CK, 2009, SCI COMPUT PROGRAM, V74, P470, DOI 10.1016/j.scico.2009.02.007
   Saied MA, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P33, DOI 10.1109/SANER.2015.7081813
   SHELLEY M, 1984, J AM STAT ASSOC, V79, P240, DOI 10.2307/2288384
   Shi N, 2006, IEEE INT CONF AUTOM, P123
   Shin Hwei Tan, 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P260, DOI 10.1109/ICST.2012.106
   Sneed HM, 1996, FOURTH WORKSHOP ON PROGRAM COMPREHENSION, PROCEEDINGS, P240, DOI 10.1109/WPC.1996.501138
   Sneed HM, 2001, PROG COMPREHEN, P167, DOI 10.1109/WPC.2001.921728
   Sultanov H, 2011, REQUIR ENG, V16, P209, DOI 10.1007/s00766-011-0121-4
   Syed M, 2015, EMERG ADULTHOOD, V3, P375, DOI 10.1177/2167696815587648
   The GUDHI Project, 2021, GUDHI USER REFERENCE, P2021
   Thummalapenta S, 2010, EMPIR SOFTW ENG, V15, P1, DOI 10.1007/s10664-009-9108-x
   Tip F, 1994, SURVEY PROGRAM SLICI
   Tsantalis N, 2006, IEEE T SOFTWARE ENG, V32, P896, DOI 10.1109/TSE.2006.112
   Ul Ain Q, 2019, IEEE ACCESS, V7, P86121, DOI 10.1109/ACCESS.2019.2918202
   WALA, 2021, T. J Watson Libraries for Analysis (WALA)
   Wan-Kadir WMN, 2004, J SYST ARCHITECT, V50, P367, DOI 10.1016/j.sysarc.2003.09.006
   Wang XY, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P249, DOI 10.1109/CSMR.2004.1281426
   Wiegers Karl, 2013, Software Requirements
   Witt GC., 2012, WRITING EFFECTIVE BU
   Xiao X., 2012, P ACM SIGSOFT 20 INT, P1
   Yang JW, 2020, PROC INT CONF SOFTW, P1098, DOI 10.1145/3377811.3380375
   Zhou Y, 2017, PROC INT CONF SOFTW, P27, DOI 10.1109/ICSE.2017.11
   Zogaan W, 2017, INT REQUIR ENG CONF, P110, DOI 10.1109/RE.2017.80
NR 85
TC 3
Z9 4
U1 3
U2 12
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2022
VL 27
IS 5
AR 119
DI 10.1007/s10664-022-10175-w
PG 46
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 2D7VK
UT WOS:000811749400001
DA 2024-07-18
ER

PT J
AU Mahmood, W
   Strüber, D
   Anjorin, A
   Berger, T
AF Mahmood, Wardah
   Strueber, Daniel
   Anjorin, Anthony
   Berger, Thorsten
TI Effects of variability in models: a family of experiments
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Variability mechanisms; Model-driven engineering; Software product line
   engineering; Empirical study
ID CODE GENERATION; LANGUAGE; COMPREHENSION
AB The ever-growing need for customization creates a need to maintain software systems in many different variants. To avoid having to maintain different copies of the same model, developers of modeling languages and tools have recently started to provide implementation techniques for such variant-rich systems, notably variability mechanisms, which support implementing the differences between model variants. Available mechanisms either follow the annotative or the compositional paradigm, each of which have dedicated benefits and drawbacks. Currently, language and tool designers select the used variability mechanism often solely based on intuition. A better empirical understanding of the comprehension of variability mechanisms would help them in improving support for effective modeling. In this article, we present an empirical assessment of annotative and compositional variability mechanisms for three popular types of models. We report and discuss findings from a family of three experiments with 164 participants in total, in which we studied the impact of different variability mechanisms during model comprehension tasks. We experimented with three model types commonly found in modeling languages: class diagrams, state machine diagrams, and activity diagrams. We find that, in two out of three experiments, annotative technique lead to better developer performance. Use of the compositional mechanism correlated with impaired performance. For all three considered tasks, the annotative mechanism was preferred over the compositional one in all experiments. We present actionable recommendations concerning support of flexible, tasks-specific solutions, and the transfer of established best practices from the code domain to models.
C1 [Mahmood, Wardah; Berger, Thorsten] Chalmers Univ Gothenburg, Gothenburg, Sweden.
   [Strueber, Daniel] Radboud Univ Nijmegen, Nijmegen, Netherlands.
   [Anjorin, Anthony] IAV Automot Engn, Berlin, Germany.
   [Berger, Thorsten] Ruhr Univ Bochum, Bochum, Germany.
C3 Chalmers University of Technology; Radboud University Nijmegen; Ruhr
   University Bochum
RP Mahmood, W (corresponding author), Chalmers Univ Gothenburg, Gothenburg, Sweden.
EM wardah@chalmers.se; d.strueber@cs.ru.nl; anthony.anjorin@iay.de;
   thorsten.berger@rub.de
OI Mahmood, Wardah/0000-0002-4902-6143
FU University of Gothenburg
FX Open access funding provided by University of Gothenburg.
CR Abdi H, 2007, ENCY MEASUREMENT STA, P103, DOI DOI 10.4135/9781412952644
   Abrahao S, 2017, 2017 ACM/IEEE 20TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2017), P229, DOI 10.1109/MODELS.2017.5
   Acretoaie V, 2018, SOFTW SYST MODEL, V17, P1139, DOI 10.1007/s10270-016-0546-9
   Aleixo F. A., 2012, 2012 26th Brazilian Symposium on Software Engineering (SBES), P51, DOI 10.1109/SBES.2012.11
   Alférez M, 2019, SOFTWARE QUAL J, V27, P307, DOI 10.1007/s11219-017-9400-8
   Ali S, 2007, INFORM SOFTWARE TECH, V49, P1087, DOI 10.1016/j.infsof.2006.11.002
   Alwidian S, 2019, LECT NOTES COMPUT SC, V11753, P200, DOI 10.1007/978-3-030-30690-8_12
   Anjorin A, 2014, LECT NOTES COMPUT SC, V8411, P340
   [Anonymous], 1997, Design and Analysis of Experiments
   [Anonymous], 2012, 16 INT SOFTWARE PROD
   [Anonymous], 2013, JOINT M EUR SOFTW EN, DOI DOI 10.1145/2491411.2491446
   [Anonymous], 2016, Feature-Oriented Software Product Lines
   [Anonymous], 2007, SOFTWARE PRODUCT LIN
   Apel S, 2009, J OBJECT TECHNOL, V8, P49, DOI 10.5381/jot.2009.8.5.c5
   Apel S, 2009, LECT NOTES COMPUT SC, V5563, P4, DOI 10.1007/978-3-642-02408-5_2
   Assunçao WKG, 2020, INFORM SOFTWARE TECH, V117, DOI 10.1016/j.infsof.2019.106198
   Assunçao WKG, 2017, LECT NOTES COMPUT SC, V10221, P95, DOI 10.1007/978-3-319-56856-0_7
   Behringer B, 2017, PROC INT CONF SOFTW, P563, DOI 10.1109/ICSE.2017.58
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Berger T, 2020, EMPIR SOFTW ENG, V25, P1755, DOI 10.1007/s10664-019-09787-6
   Berger T, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P330, DOI 10.1145/2648511.2648549
   Berger T, 2014, INFORM SOFTWARE TECH, V56, P1520, DOI 10.1016/j.infsof.2014.05.005
   Bergman MM, 2011, J MIX METHOD RES, V5, P271, DOI 10.1177/1558689811433236
   Bruneliere Hugo., 2010, P IEEEACM INT C AUTO, P173, DOI DOI 10.1145/1858996.1859032
   Chan X.B. V., 2014, ASIA PACIFIC FAMILY, V13, P1, DOI DOI 10.1186/S12930-014-0010-3
   Chauvel F, 2005, LECT NOTES COMPUT SC, V3713, P54, DOI 10.1007/11557432_5
   Chechik M, 2016, LECT NOTES COMPUT SC, V9681, P28, DOI 10.1007/978-3-319-33693-0_3
   Clarke D, 2011, ACM SIGPLAN NOTICES, V46, P13, DOI 10.1145/1942788.1868298
   Classen A., 2010, ICSE 10, V1, P335, DOI DOI 10.1145/1806799.1806850
   Czarnecki K., 2005, Software Process Improvement and Practice, V10, P143, DOI 10.1002/spip.225
   Czarnecki K, 2005, LECT NOTES COMPUT SC, V3676, P422
   Czarnecki K., 2006, GPCE, P211
   Czarnecki K, 2009, LECT NOTES COMPUT SC, V5563, P260, DOI 10.1007/978-3-642-02408-5_19
   de Winter J. F. C., 2010, PRACT ASSESS RES EVA, V15, P11, DOI DOI 10.7275/BJ1P-TS64
   Domínguez E, 2012, INFORM SOFTWARE TECH, V54, P1045, DOI 10.1016/j.infsof.2012.04.008
   Fahrenberg U, 2014, LECT NOTES COMPUT SC, V8411, P63
   Faitelson D, 2017, PROC INT CONF SOFTW, P735, DOI 10.1109/ICSE.2017.73
   Famelis M, 2015, LECT NOTES COMPUT SC, V9152, P82, DOI 10.1007/978-3-319-21155-8_7
   Feigenspan J, 2013, EMPIR SOFTW ENG, V18, P699, DOI 10.1007/s10664-012-9208-x
   Fenske W, 2017, PROCEEDINGS OF THE 16TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING: CONCEPTS AND EXPERIENCES (GPCE'17), P77, DOI 10.1145/3136040.3136059
   Flores R, 2012, P SPLC
   Garcia S, 2019, PROCEEDINGS OF THE 13TH INTERNATIONAL WORKSHOP ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS (VAMOS '19), DOI 10.1145/3302333.3302350
   Gessenharter D, 2011, ECMFA
   GOPHER D, 1984, HUM FACTORS, V26, P519, DOI 10.1177/001872088402600504
   Hartness Ken., 2004, J. Comput. Small Coll, V19, P287
   Heidenreich F, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P943
   Jones B, 2003, DESIGN ANAL CROSS OV
   Karris Steven T., 2006, Introduction to Simulink with engineering applications
   Kastner C, 2011, SPLC COMP, P5
   Kaufmann T, 2014, SE, P77
   Kruger J, 2019, EFFECTS EXPLICIT FEA
   Kuhn Thomas, 2016, P 20 INT SOFTWARE PR, P50
   Labunets K, 2017, EMPIR SOFTW ENG, V22, P3017, DOI 10.1007/s10664-017-9502-8
   Langer P, 2014, MODELLIERUNG
   Mahmood W, 2021, ONLINE APPENDIX EFFE
   Martinez J, 2018, SPLC'18: PROCEEDINGS OF THE 22ND INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL 1, P132, DOI 10.1145/3233027.3233038
   Martinez J, 2015, IEEE INT CONF AUTOM, P396, DOI 10.1109/ASE.2015.44
   Melo J, 2016, PROC INT CONF SOFTW, P679, DOI 10.1145/2884781.2884831
   Moreno N, 2007, IET SOFTW, V1, P67, DOI 10.1049/iet-sen:20060067
   Mussbacher G, 2012, SOFTWARE QUAL J, V20, P645, DOI 10.1007/s11219-011-9153-8
   Nugroho A, 2009, INFORM SOFTWARE TECH, V51, P1670, DOI 10.1016/j.infsof.2009.04.007
   Peldszus S, 2018, PROCEEDINGS OF THE 17TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING: CONCEPTS AND EXPERIENCES (GPCE'18), P93, DOI 10.1145/3278122.3278126
   Petre M, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P722, DOI 10.1109/ICSE.2013.6606618
   Pietsch C, 2015, IEEE INT CONF AUTOM, P852, DOI 10.1109/ASE.2015.106
   Pin-Shan Chen P., 1976, ACM Transactions on Database Systems, V1, P9, DOI 10.1145/320434.320440
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Ramadan Q, 2020, SOFTW SYST MODEL, V19, P1191, DOI 10.1007/s10270-020-00781-x
   Reuys A., 2006, Software Product Lines, P479
   Salman I, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P666, DOI 10.1109/ICSE.2015.82
   Santos AR, 2019, EMPIR SOFTW ENG, V24, P1226, DOI 10.1007/s10664-018-9658-x
   Schaefer I., 2010, VaMoS, P85
   Schlie A, 2017, 21ST INTERNATIONAL SYSTEMS & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 1, P215, DOI 10.1145/3106195.3106225
   Schwagerl Felix, 2015, 10 INT JOINT C SOFTW, V2, P1
   Seidl C, 2014, MOD 2014
   SPENCER H, 1992, PROCEEDINGS OF THE SUMMER 1992 USENIX CONFERENCE, P185
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Struber D, 2016, HUFAMO MODELS, P27
   Struber D, 2020, P 23 ACMIEEE INT C M, P240
   Struber D, 2019, SPLC
   Strüber D, 2016, LECT NOTES COMPUT SC, V9761, P89, DOI 10.1007/978-3-319-40530-8_6
   Taentzer G, 2017, 2017 ACM/IEEE 20TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2017), P101, DOI 10.1109/MODELS.2017.22
   Tolvanen J-P, 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), DOI 10.1109/SPLC.2011.9
   Tolvanen JP, 2019, P 23 INT SYST SOFTW, P329
   Tolvanen JP, 2019, SPLC
   van Gurp J, 2001, WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P45, DOI 10.1109/WICSA.2001.948406
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Vaupel S, 2014, LECT NOTES COMPUT SC, V8767, P1, DOI 10.1007/978-3-319-11653-2_1
   VESSEY I, 1991, DECISION SCI, V22, P219, DOI 10.1111/j.1540-5915.1991.tb00344.x
   Vinay Kulkarni, 2002, Advances in Object-Oriented Information Systems. OOIS 2002 Workshops. Proceedings (Lecture Notes in Computer Science Vol.2426), P270
   White J, 2009, IEEE SOFTWARE, V26, P47, DOI 10.1109/MS.2009.95
   Whitney D, 2011, TRENDS COGN SCI, V15, P160, DOI 10.1016/j.tics.2011.02.005
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Wille David., 2017, Proceedings of the Eleventh International Workshop on Variability Modelling of Software-intensive Systems, VaMoS 2017, Eindhoven, Netherlands, February 1-3, 2017, P36, DOI DOI 10.1145/3023956.3023957
   Wohlin C., 2012, Experimentation in Software Engineering
   Ziadi Tewfik., 2006, SOFTWARE PRODUCT LIN, P557, DOI DOI 10.1007/978-3-540-33253-4_15
   Zschaler S, 2010, LECT NOTES COMPUT SC, V5969, P82
NR 96
TC 1
Z9 1
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAY
PY 2022
VL 27
IS 3
AR 72
DI 10.1007/s10664-021-10112-3
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZV2BV
UT WOS:000770339500011
OA hybrid
DA 2024-07-18
ER

PT J
AU Marques, H
   Laranjeiro, N
   Bernardino, J
AF Marques, Henrique
   Laranjeiro, Nuno
   Bernardino, Jorge
TI Injecting software faults in Python applications The OpenStack case
   study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software faults; Bug reports; Orthogonal defect classification; Fault
   injection; Mutation testing; Dependability evaluation
ID AGREEMENT
AB Software fault injection techniques have been largely used as means for evaluating the dependability of systems in presence of certain types of faults. Despite the large diversity of tools offering the possibility of emulating the presence of software faults, there is little practical support for emulating the presence of software faults in Python applications, which are increasingly being used to support business critical cloud services. In this paper, we present FIT4Python, a tool for injecting software faults in Python code and then use it, in a mutation testing campaign, to analyse the effectiveness of OpenStack's test suite against new probable software faults. We begin by analysing the types of faults affecting Nova Compute, the core component of OpenStack. We use our tool to emulate the presence of new faults in Nova Compute API to understand how well OpenStack's battery of unit, functional, and integration tests cover these new, but probable, situations. Results show clear limitations in the effectiveness of OpenStack developers' test suites, with many cases of injected faults passing undetected through all three types of tests and that nearly half of the analysed problems could be detected with trivial changes or additions to the unit tests.
C1 [Marques, Henrique; Bernardino, Jorge] Polytech Coimbra, Coimbra Inst Engn ISEC, Coimbra, Portugal.
   [Laranjeiro, Nuno; Bernardino, Jorge] Univ Coimbra, Ctr Informat & Syst, Dept Informat Engn, Coimbra, Portugal.
C3 Instituto Politecnico de Coimbra (IPC); Universidade de Coimbra
RP Laranjeiro, N (corresponding author), Univ Coimbra, Ctr Informat & Syst, Dept Informat Engn, Coimbra, Portugal.
EM a21230656@isec.pt; cnl@dei.uc.pt; jorge@isec.pt
RI Bernardino, Jorge/K-6437-2014
OI Bernardino, Jorge/0000-0001-9660-2011; Laranjeiro,
   Nuno/0000-0003-0011-9901
FU FCT - Foundation for Science and Technology, I.P. [CISUC -
   UID/CEC/00326/2020]; European Social Fund, through the Regional
   Operational Program Centro 2020 [H2020-EU.2.1.1.7. - ECSEL, 876852];
   project AIDA: Adaptive, Intelligent and Distributed Assurance Platform
   project; Portuguese Foundation for Science and Technology under CMU
   Portugal Program; European Regional Development Fund (ERDF) through the
   Operational Program for Competitiveness and Internationalization -
   COMPETE 2020 [POCI-01-0247-FEDER-045907]
FX This work has been supported by national funds through the FCT -
   Foundation for Science and Technology, I.P., within the scope of the
   project CISUC - UID/CEC/00326/2020 and by European Social Fund, through
   the Regional Operational Program Centro 2020; by project VALU3S -
   Verification and Validation of Automated Systems' Safety and Security,
   H2020-EU.2.1.1.7. - ECSEL, Grant agreement ID: 876852; and by project
   AIDA: Adaptive, Intelligent and Distributed Assurance Platform project,
   co-financed by the European Regional Development Fund (ERDF) through the
   Operational Program for Competitiveness and Internationalization -
   COMPETE 2020 (POCI-01-0247-FEDER-045907) and by the Portuguese
   Foundation for Science and Technology under CMU Portugal Program. We
   also would like to acknowledge the National Distributed Computing
   Infrastructure (INCD) for providing access to computing resources.
CR Agnelo J, 2020, J SYST SOFTWARE, V159, DOI 10.1016/j.jss.2019.110451
   [Anonymous], 2010, 1152009 IEEE, P1, DOI [DOI 10.1109/IEEESTD.2010.5439063, 10.1109/IEEESTD.2010.5439063]
   [Anonymous], 1984, DIG AV SYST C, DOI DOI 10.2514/6.1984-2726
   Arlat J, 2003, IEEE T COMPUT, V52, P1115, DOI 10.1109/TC.2003.1228509
   AS SN, 2021, COSM RAY
   BARTON JH, 1990, IEEE T COMPUT, V39, P575, DOI 10.1109/12.54853
   Chillarege R, 1996, HDB SOFTWARE RELIABI
   CHOI BJ, 1993, J SYST SOFTWARE, V20, P135, DOI 10.1016/0164-1212(93)90005-I
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Cotroneo D, 2020, I C DEPEND SYS NETWO, P364, DOI 10.1109/DSN48063.2020.00052
   Cotroneo D, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P200, DOI 10.1145/3338906.3338916
   Delgado-Pérez P, 2017, SOFTW TEST VERIF REL, V27, DOI 10.1002/stvr.1630
   Denisov A, 2018, IEEE ICST WORKSHOP, P25, DOI 10.1109/ICSTW.2018.00024
   Derezinska A, 2013, ADV INTELL SYST, V224, P119, DOI 10.1007/978-3-319-00945-2_11
   Duraes JA, 2006, IEEE T SOFTWARE ENG, V32, P849, DOI 10.1109/TSE.2006.113
   Efron B, 2004, ANN STAT, V32, P407, DOI 10.1214/009053604000000067
   Fonseca J, 2014, IEEE T DEPEND SECURE, V11, P440, DOI 10.1109/TDSC.2013.45
   Fraser G, 2015, EMPIR SOFTW ENG, V20, P783, DOI 10.1007/s10664-013-9299-z
   Grady RB., 1992, PRACTICAL SOFTWARE M
   Hajdu A, 2020, IEEE ACCESS, V8, P190760, DOI 10.1109/ACCESS.2020.3032239
   Halas, 2021, MUTPY MUTATION TESTI
   Hovmoller, 2021, MUTMUT MUTATION TEST
   Hsueh MC, 1997, COMPUTER, V30, P75, DOI 10.1109/2.585157
   HUDAK J, 1993, IEEE T RELIAB, V42, P190, DOI 10.1109/24.229487
   IBM, 2013, ORTH DEF CLASS 5 2 S
   Just R, 2015, SOFTW TEST VERIF REL, V25, P490, DOI 10.1002/stvr.1561
   KANOUN K., 2008, DEPENDABILITY BENCHM, DOI DOI 10.1002/9780470370506
   Kao W., 1994, Proc. of IEEE Workshop on Fault-Tolerant Parallel and Distributed Systems, P252, DOI DOI 10.1109/FTPDS.1994.494497
   KAO WL, 1993, IEEE T SOFTWARE ENG, V19, P1105, DOI 10.1109/32.256857
   Kepner, 2021, MUTATEST
   Kintis M, 2018, IEEE T SOFTWARE ENG, V44, P308, DOI 10.1109/TSE.2017.2684805
   Koopman P, 2000, IEEE T SOFTWARE ENG, V26, P837, DOI 10.1109/32.877845
   Kropp NP, 1998, DIG PAP INT SYMP FAU, P230, DOI 10.1109/FTCS.1998.689474
   Kurtz B, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P571, DOI 10.1145/2950290.2950322
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Laranjeiro N, 2021, ACM COMPUT SURV, V54, DOI 10.1145/3448977
   Lima Jackson A. Prado, 2018, P 3 BRAZ S SYST AUT, P87, DOI [10.1145/3266003.3266013, DOI 10.1145/3266003.3266013]
   Martins E, 2002, INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P483, DOI 10.1109/DSN.2002.1028934
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Miller B.P., 1995, Fuzz Revisited: A Re-examination of the Reliability of Unix Utilities and Services
   Namin AS, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P351, DOI 10.1145/1368088.1368136
   Nan Li, 2015, 2015 IEEE Power & Energy Society General Meeting, P1, DOI 10.1109/PESGM.2015.7286139
   Natella, 2011, THESIS U STUDI NAPOL, DOI [10.6092/UNINA/FEDOA/8833, DOI 10.6092/UNINA/FEDOA/8833]
   Natella R, 2015, ACM COMPUT SURV, V48, DOI 10.1145/2841425
   Ng WT, 2001, IEEE T COMPUT, V50, P322, DOI 10.1109/12.919278
   OpenStack, 2021, CONC ARCH
   Petrovic G, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P163, DOI 10.1145/3183519.3183521
   Pizzoleto AV, 2019, J SYST SOFTWARE, V157, DOI 10.1016/j.jss.2019.07.100
   Praphamontripong U, 2017, IEEE ICST WORKSHOP, P134, DOI 10.1109/ICSTW.2017.30
   Sanches B. P., 2011, 2011 Proceedings of 5th Latin-American Symposium on Dependable Computing (LADC 2011), P106, DOI 10.1109/LADC.2011.20
   Tiobe, 2021, TIOBE IND
   Wang B, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P295, DOI 10.1145/3092703.3092714
   Wilson P.F., 1993, ROOT CAUSE ANAL TOOL
   Wood A, 1996, 961 TAND COMP
   WOODWARD MR, 1993, INFORM SOFTWARE TECH, V35, P163, DOI 10.1016/0950-5849(93)90053-6
   Zhang L., 2013, P 2013 INT S SOFTW T, P235
   Zhang LM, 2013, IEEE INT CONF AUTOM, P92, DOI 10.1109/ASE.2013.6693070
NR 57
TC 2
Z9 3
U1 1
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN
PY 2022
VL 27
IS 1
AR 20
DI 10.1007/s10664-021-10047-9
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WR6AF
UT WOS:000714579400001
DA 2024-07-18
ER

PT J
AU Peruma, A
   Simmons, S
   AlOmar, EA
   Newman, CD
   Mkaouer, MW
   Ouni, A
AF Peruma, Anthony
   Simmons, Steven
   AlOmar, Eman Abdullah
   Newman, Christian D.
   Mkaouer, Mohamed Wiem
   Ouni, Ali
TI How do i refactor this? An empirical study on refactoring trends and
   topics in Stack Overflow
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Empirical study; Software maintenance and evolution; Stack Overflow;
   Refactoring
ID LARGE-SCALE
AB An essential part of software maintenance and evolution, refactoring is performed by developers, regardless of technology or domain, to improve the internal quality of the system, and reduce its technical debt. However, choosing the appropriate refactoring strategy is not always straightforward, resulting in developers seeking assistance. Although research in refactoring is well-established, with several studies altering between the detection of refactoring opportunities and the recommendation of appropriate code changes, little is known about their adoption in practice. Analyzing the perception of developers is critical to understand better what developers consider to be problematic in their code and how they handle it. Additionally, there is a need for bridging the gap between refactoring, as research, and its adoption in practice, by extracting common refactoring intents that are more suitable for what developers face in reality. In this study, we analyze refactoring discussions on Stack Overflow through a series of quantitative and qualitative experiments. Our results show that Stack Overflow is utilized by a diverse set of developers for refactoring assistance for a variety of technologies. Our observations show five areas that developers typically require help with refactoring- Code Optimization, Tools and IDEs, Architecture and Design Patterns, Unit Testing, and Database. We envision our findings better bridge the support between traditional (or academic) aspects of refactoring and their real-world applicability, including better tool support.
C1 [Peruma, Anthony; Simmons, Steven; AlOmar, Eman Abdullah; Newman, Christian D.; Mkaouer, Mohamed Wiem] Rochester Inst Technol, Rochester, NY 14623 USA.
   [Ouni, Ali] Univ Quebec, ETS Montreal, Montreal, PQ, Canada.
C3 Rochester Institute of Technology; University of Quebec; University of
   Quebec Montreal; Ecole de Technologie Superieure - Canada
RP Peruma, A (corresponding author), Rochester Inst Technol, Rochester, NY 14623 USA.
EM axp6201@rit.edu; sds9278@rit.edu; eman.alomar@mail.rit.edu;
   cnewman@se.rit.edu; mwmvse@rit.edu; ali.ouni@etsmtl.ca
RI AlOmar, Eman Abdullah/ABW-2622-2022; Mkaouer, Mohamed Wiem/N-7476-2017;
   Ouni, Ali/Y-8280-2019
OI AlOmar, Eman Abdullah/0000-0003-1800-9268; Mkaouer, Mohamed
   Wiem/0000-0001-6010-7561; Ouni, Ali/0000-0003-4708-0362; Newman,
   Christian/0000-0002-8838-4074; Simmons, Steven/0000-0003-3081-8500;
   Peruma, Anthony/0000-0003-2585-657X
CR Abdellatif A, 2020, IEEE WORK CONF MIN S, P174, DOI 10.1145/3379597.3387472
   Ahmed S, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3239524
   Aljedaani W, 2021, PROCEEDINGS OF EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING (EASE 2021), P170, DOI 10.1145/3463274.3463335
   Allamanis M, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P281, DOI 10.1145/2635868.2635883
   Allamanis M, 2013, IEEE WORK CONF MIN S, P53, DOI 10.1109/MSR.2013.6624004
   AlOmar EA, 2021, EXPERT SYST APPL, V167, DOI 10.1016/j.eswa.2020.114176
   AlOmar EA, 2020, LECT NOTES COMPUT SC, V12541, P261, DOI 10.1007/978-3-030-64694-3_16
   AlOmar EA, 2021, J SYST SOFTWARE, V171, DOI 10.1016/j.jss.2020.110821
   AlOmar EA, 2019, INT SYMP EMP SOFTWAR, P42
   AlOmar EA, 2019, 2019 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON REFACTORING (IWOR 2019), P51, DOI 10.1109/IWoR.2019.00017
   Alrubaye H, 2020, LECT NOTES COMPUT SC, V12541, P245, DOI 10.1007/978-3-030-64694-3_15
   Alshangiti Moayad, 2019, INT SYMP EMP SOFTWAR, P117, DOI DOI 10.1109/esem.2019.8870187
   Ambler SW, 2006, ADD-WES SIGNAT SER, P1
   [Anonymous], 2012, EXPT SOFTWARE ENG
   [Anonymous], 2018, REFACTORING IMPROVIN
   Arcelli Fontana F., 2015, Scientific Workshop Proceedings of the XP2015 Conference, DOI [10.1145/2764979.2764986, DOI 10.1145/2764979.2764986]
   Arnaoudova V, 2016, EMPIR SOFTW ENG, V21, P104, DOI 10.1007/s10664-014-9350-8
   Arnaoudova V, 2014, IEEE T SOFTWARE ENG, V40, P502, DOI 10.1109/TSE.2014.2312942
   Bagherzadeh M, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P432, DOI 10.1145/3338906.3338939
   Baltes S, 2018, IEEE WORK CONF MIN S, P319, DOI 10.1145/3196398.3196430
   Bandeira Alan, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P255, DOI 10.1109/MSR.2019.00051
   Bangash Abdul Ali, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P260, DOI 10.1109/MSR.2019.00052
   Barua A, 2014, EMPIR SOFTW ENG, V19, P619, DOI 10.1007/s10664-012-9231-y
   Bavota G., 2014, Recommendation Systems in Software Engineering, P387
   Bavota G, 2015, J SYST SOFTWARE, V107, P1, DOI 10.1016/j.jss.2015.05.024
   Bird S., 2004, P ACL INTERACTIVE PO, P214
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Buse RPL, 2010, IEEE T SOFTWARE ENG, V36, P546, DOI 10.1109/TSE.2009.70
   Cedrim D, 2016, THIRTIETH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2016), P73, DOI 10.1145/2973839.2973848
   Chávez A, 2017, XXXI BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2017), P74, DOI 10.1145/3131151.3131171
   Choi E, 2015, INT WORKS SOFTW CLON, P49, DOI 10.1109/IWSC.2015.7069890
   Dorn J., 2012, GEN SOFTWARE READABI, V5, P11
   Du Bois B, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P144, DOI 10.1109/WCRE.2004.33
   Eilertsen AM, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P237, DOI 10.1109/SANER50967.2021.00030
   Fakhoury S, 2019, INT C PROGRAM COMPRE, P2, DOI 10.1109/ICPC.2019.00014
   Fontana FA, 2012, J OBJECT TECHNOL, V11, DOI 10.5381/jot.2012.11.2.a5
   Jones A., 2018, WORKING GUIDES ESTIM
   Jurafsky D., 2009, SPEECH LANGUAGE PROC
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kim M., 2010, PROC 18 ACM SIGSOFT, P371, DOI [10.1145/1882291.1882353, DOI 10.1145/1882291.1882353]
   Kim M, 2014, IEEE T SOFTWARE ENG, V40, P633, DOI 10.1109/TSE.2014.2318734
   Kruger Christopher, 2019, APPL UNSUPERVISED LE
   Lambiase S, 2020, INT C PROGRAM COMPRE, P441, DOI 10.1145/3387904.3389296
   Lane H., 2019, Natural Language Processing in Action: Understanding, Analyzing, and Generating Text With Python
   Liu H, 2015, IEEE T SOFTWARE ENG, V41, P887, DOI 10.1109/TSE.2015.2427831
   Mazinanian D, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P613, DOI 10.1145/2889160.2889168
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Mkaouer W, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2729974
   Moghadam IH, 2021, REFDETECT MULTILANGU
   Moser R, 2006, LECT NOTES COMPUT SC, V4039, P287
   Murphy-Hill E, 2012, IEEE T SOFTWARE ENG, V38, P5, DOI 10.1109/TSE.2011.41
   Openja M, 2020, PROC IEEE INT CONF S, P104, DOI 10.1109/ICSME46990.2020.00020
   Ouni A, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2932631
   Palomba F, 2013, IEEE INT CONF AUTOM, P268, DOI 10.1109/ASE.2013.6693086
   Pantiuchina J, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3408302
   Pantiuchina J, 2018, PROC IEEE INT CONF S, P80, DOI 10.1109/ICSME.2018.00017
   Peruma A, 2021, PROC IEEE INT CONF S, P599, DOI 10.1109/ICSME52107.2021.00064
   Peruma A, 2021, INT C PROGRAM COMPRE, P335, DOI 10.1109/ICPC52881.2021.00039
   Peruma A, 2020, J SYST SOFTWARE, V169, DOI 10.1016/j.jss.2020.110704
   Peruma A, 2019, 2019 IEEE/ACM 6TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2019), P148, DOI 10.1109/MOBILESoft.2019.00030
   Peruma Anthony, 2018, P 2 INT W REF MONTP, P26, DOI DOI 10.1145/3242163.3242169
   Pinto G. H., 2013, What programmers say about refactoring tools? An empirical investigation of stack overflow, P33
   Posnett D, 2011, P 8 WORKING C MINING, P73
   Roberts D., 1997, Theory and Practice of Object Systems, V3, P253, DOI 10.1002/(SICI)1096-9942(1997)3:4<253::AID-TAPO3>3.0.CO;2-T
   Röder M, 2015, WSDM'15: PROCEEDINGS OF THE EIGHTH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING, P399, DOI 10.1145/2684822.2685324
   Rosen C, 2016, EMPIR SOFTW ENG, V21, P1192, DOI 10.1007/s10664-015-9379-3
   Roy CK, 2009, SCI COMPUT PROGRAM, V74, P470, DOI 10.1016/j.scico.2009.02.007
   Samarthyam G., 2016, Proceedings of the 1st International Workshop on Software Refactoring, P1
   Scalabrino S, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1958
   Sievert C., 2014, P WORKSH INT LANG LE, P63, DOI [10.3115/v1/W14-3110, DOI 10.3115/V1/W14-3110]
   Silva D., 2020, IEEE T SOFTW ENG
   Silva D, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P858, DOI 10.1145/2950290.2950305
   Spectrum I, 2020, TOP PROGR LANG 2016
   Stack Overflow, 2020, COMPL REF VERS CONTR
   Stack Overflow, 2020, PHP REFACT TOO MAN
   Stack Overflow, 2020, REF CSS GRID IE11 CO
   Stack Overflow, 2020, TOP IDE IND
   Stack Overflow, 2020, REM NONPROJECT FIL R
   Stack Overflow, 2020, TDD REF SYST UND TES
   Stack Overflow, 2020, CAN REF THIS PYTH CO
   Stack Overflow, 2020, MAK THREAD UNS DLL C
   Stack Overflow, 2020, SCALA REF
   Stack Overflow, 2020, REFACT SWITCH STAT D
   Stack Overflow, 2020, POP PROGR LANG IND
   Stack Overflow, 2020, CAN THIS MVC COD BE
   Stack Overflow, 2020, ADD REM ADD DOC ROSL
   Stack Overflow, 2020, AUT REF MYN MYV TOST
   Stack Overflow, 2020, WHAT REF TOOLS DO YO
   Stack Overflow, 2020, IN PRESS
   Stack Overflow, 2020, NEW QUEST STACK OV
   Stack Overflow, 2020, RUB RAILS CAN KNOW W
   Stack Overflow, 2020, REN REF DAT EL SCRIP
   Stack Overflow, 2020, PERF ISS REF SEL SUB
   Taeger D, 2014, STATISTICAL HYPOTHESIS TESTING WITH SAS AND R, P1, DOI 10.1002/9781118762585
   Tahir A, 2020, INFORM SOFTWARE TECH, V125, DOI 10.1016/j.infsof.2020.106333
   Tahir Amjed, 2018, Proceedings of the 22nd International Conference on Evaluation and Assessment in Software Engineering 2018, P68
   Tang YM, 2018, PROC IEEE ACM INT C, P206, DOI 10.1145/3183440.3195098
   Tashakkori A., 1989, Mixed Methodology: Combining Qualitative and Quantitative Approaches
   Tian FC, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P91, DOI 10.1109/ICSA.2019.00018
   Tsantalis N, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P483, DOI 10.1145/3180155.3180206
   Villanes IK, 2017, XXXI BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2017), P104, DOI 10.1145/3131151.3131157
   Wang Shaowei, 2013, SAC '13 Proceedings of the 28th Annual ACM Symposium on Applied Computing, P1019
   Wilking D., 2007, E-INFORMATICA, V1, P27
   Yang XL, 2016, J COMPUT SCI TECH-CH, V31, P910, DOI 10.1007/s11390-016-1672-0
NR 104
TC 23
Z9 31
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN
PY 2022
VL 27
IS 1
AR 11
DI 10.1007/s10664-021-10045-x
PG 43
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WL2BB
UT WOS:000710216100003
DA 2024-07-18
ER

PT J
AU Yang, N
   Cuijpers, P
   Schiffelers, R
   Lukkien, J
   Serebrenik, A
AF Yang, Nan
   Cuijpers, Pieter
   Schiffelers, Ramon
   Lukkien, Johan
   Serebrenik, Alexander
TI Single-state state machines in model-driven software engineering: an
   exploratory study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Model-driven engineering; Single-state state machines; modeling practice
ID DESIGN PATTERNS; INDUSTRY
AB Context Models, as the main artifact in model-driven engineering, have been extensively used in the area of embedded systems for code generation and verification. One of the most popular behavioral modeling techniques is the state machine. Many state machine modeling guidelines recommend that a state machine should have more than one state in order to be meaningful. However, single-state state machines (SSSMs) violating this recommendation have been used in modeling cases reported in the literature. Objective We aim for understanding the phenomenon of using SSSMs in practice as understanding why developers violate the modeling guidelines is the first step towards improvement of modeling tools and practice. Method To study the phenomenon, we conducted an exploratory study which consists of two complementary studies. The first study investigated the prevalence and role of SSSMs in the domain of embedded systems, as well as the reasons why developers use them and their perceived advantages and disadvantages. We employed the sequential explanatory strategy, including repository mining and interview, to study 1500 state machines from 26 components at ASML, a leading company in manufacturing lithography machines from the semiconductor industry. In the second study, we investigated the evolutionary aspects of SSSMs, exploring when SSSMs are introduced to the systems and how developers modify them by mining the largest state-machine-based component from the company. Results We observe that 25 out of 26 components contain SSSMs. Our interviews suggest that SSSMs are used to interface with the existing code, to deal with tool limitations, to facilitate maintenance and to ease verification. Our study on the evolutionary aspects of SSSMs reveals that the need for SSSMs to deal with tool limitations grew continuously over the years. Moreover, only a minority of SSSMs have been changed between SSSM and multiple-state state machine (MSSM) during their evolution. The most frequent modifications developers made to SSSMs is inserting events with constraints on the execution of the events. Conclusions Based on our results, we provide implications for developers and tool builders. Furthermore, we formulate hypotheses about the effectiveness of SSSMs, the impacts of SSSMs on development, maintenance and verification as well as the evolution of SSSMs.
C1 [Lukkien, Johan] Eindhoven Univ Technol, Eindhoven, Netherlands.
   [Yang, Nan] Eindhoven Univ Technol, Interconnected Resource Aware Intelligent Syst IR, Eindhoven, Netherlands.
   [Cuijpers, Pieter] Eindhoven Univ Technol, Quantitat Formal Modelling & Anal Cyber Phys Syst, Eindhoven, Netherlands.
   [Schiffelers, Ramon] Eindhoven Univ Technol, Model Driven Software Engn, Eindhoven, Netherlands.
   [Serebrenik, Alexander] Eindhoven Univ Technol, Social Software Engn, Eindhoven, Netherlands.
   [Schiffelers, Ramon] ASML, Veldhoven, Netherlands.
C3 Eindhoven University of Technology; Eindhoven University of Technology;
   Eindhoven University of Technology; Eindhoven University of Technology;
   Eindhoven University of Technology; ASML Holding
RP Yang, N (corresponding author), Eindhoven Univ Technol, Interconnected Resource Aware Intelligent Syst IR, Eindhoven, Netherlands.
EM n.yang1@tue.nl; p.j.l.cuijpers@tue.nl; R.R.H.Schiffelers@tue.nl;
   j.j.lukkien@tue.nl; a.serebrenik@tue.nl
OI Cuijpers, Pieter/0000-0002-5487-4972; Serebrenik,
   Alexander/0000-0002-1418-0095
CR Ambler S.W., 2005, ELEMENTS UML 2 0 STY
   Ampatzoglou A, 2015, IEEE T SOFTWARE ENG, V41, P781, DOI 10.1109/TSE.2015.2414917
   Ampatzoglou A, 2011, J SYST SOFTWARE, V84, P2265, DOI 10.1016/j.jss.2011.06.047
   [Anonymous], 2005, SOFTWARE EVOLUTION U
   [Anonymous], 2016, P 10 WORKSHOP MODELS
   Antoniol G, 1998, PROG COMPREHEN, P153, DOI 10.1109/WPC.1998.693342
   Aslam K., 2018, MODELS WORKSH, P6
   Babur Ö, 2018, PROCEEDINGS OF THE 6TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, P411, DOI 10.5220/0006604604110419
   Baldoni R, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3182657
   Beazley DM, 1996, PROCEEDINGS OF THE FOURTH ANNUAL TCL/TK WORKSHOP, P129
   Behrmann G, 2006, INT CONF QUANT EVAL, P125
   Bird C, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P1, DOI 10.1109/MSR.2009.5069475
   Brito A, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P507, DOI 10.1109/SANER.2018.8330249
   Buchbinder E, 2011, QUAL SOC WORK, V10, P106, DOI 10.1177/1473325010370189
   Businge J, 2015, SOFTWARE QUAL J, V23, P107, DOI 10.1007/s11219-013-9221-3
   Businge J, 2013, EUR CON SFTWR MTNCE, P37, DOI 10.1109/CSMR.2013.14
   Capilla R, 2014, J SYST SOFTWARE, V91, P3, DOI 10.1016/j.jss.2013.12.038
   Chaudron MRV, 2012, SOFTW SYST MODEL, V11, P571, DOI 10.1007/s10270-012-0278-4
   Chen YL, 1995, PROCEEDINGS OF THE 34TH IEEE CONFERENCE ON DECISION AND CONTROL, VOLS 1-4, P409
   Clarke E, 2001, LECT NOTES COMPUT SC, V2000, P176
   Corcoran D, 2010, LECT NOTES COMPUT SC, V6138, P2
   de San Pedro J., 2016, P 31 ANN ACM S APPL, P839
   Dennis Alan, 2009, SYSTEMS ANAL DESIGN
   Dong J, 2007, ECBS 2007: 14TH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P371
   Doornbos R., 2012, 2012 International Conference on Innovations in Information Technology (IIT), P60, DOI 10.1109/INNOVATIONS.2012.6207775
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Etzlstorfer J, 2017, MODELSWARD: PROCEEDINGS OF THE 5TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, P90, DOI 10.5220/0006167900900099
   Farias K, 2013, LECT NOTES COMPUT SC, V8107, P639, DOI 10.1007/978-3-642-41533-3_39
   Favre JM, 2005, Eighth International Workshop on Principles of Software Evolution, Proceedings, P33, DOI 10.1109/IWPSE.2005.22
   Fisher RA, 1922, J R STAT SOC, V85, P87, DOI 10.2307/2340521
   Gamma E., 1993, ECOOP '93 - Object-Oriented Programming. 7th European Conference Proceedings, P406
   Garcia J, 2013, IEEE INT CONF AUTOM, P486, DOI 10.1109/ASE.2013.6693106
   Greifenberg T, 2015, COMM COM INF SC, V580, P112, DOI 10.1007/978-3-319-27869-8_7
   Gruschko Boris., 2007, INT WORKSH MOD DRIV, P3
   Gupta M, 2018, LECT NOTES COMPUT SC, V11236, P812, DOI 10.1007/978-3-030-03596-9_58
   He X, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P162, DOI 10.1145/2976767.2976806
   Hebig R, 2017, IEEE T SOFTWARE ENG, V43, P396, DOI 10.1109/TSE.2016.2610424
   Hebig R, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P173, DOI 10.1145/2976767.2976778
   Hutchinson J, 2014, SCI COMPUT PROGRAM, V89, P144, DOI 10.1016/j.scico.2013.03.017
   Hutchinson J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P471, DOI 10.1145/1985793.1985858
   Jezequel JM, P ACM IEEE 42 INT C, P1496
   Jiansheng Xing, 2010, 2010 Tenth International Conference on Application of Concurrency to System Design (ACSD 2010), P47, DOI 10.1109/ACSD.2010.21
   Jolak R, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P213, DOI 10.1145/3239372.3239404
   Jongeling R., 2020, Proc. ACM/IEEE 23rd International Conference on Model Driven Engineering Languages and Systems (MoDELS), P263, DOI DOI 10.1145/3365438.3410989
   Khelladi DE, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2020), P85, DOI 10.1145/3377816.3381727
   Kim Y. G., 1999, IEE Proceedings-Software, V146, P187, DOI 10.1049/ip-sen:19990602
   Kronlid F, 2006, LECT NOTES COMPUT SC, V4149, P81
   Kuhn A, 2007, INFORM SOFTWARE TECH, V49, P230, DOI 10.1016/j.infsof.2006.10.017
   La Rosa M, 2015, INFORM SYST, V49, P102, DOI 10.1016/j.is.2014.11.010
   Lange C., 2004, "8th Internation Conference on Empirical Assessment in Software Engineering (EASE 2004)" Workshop - 26th International Conference on Software Engineering, P111, DOI 10.1049/ic:20040404
   Lange CFJ, 2006, IEEE SOFTWARE, V23, P40, DOI 10.1109/MS.2006.50
   Lange CFJ, 2006, LECT NOTES COMPUT SC, V4199, P27
   Lehman M. M., 1980, Journal of Systems and Software, V1, P213, DOI 10.1016/0164-1212(79)90022-0
   Lemieux C, 2015, IEEE INT CONF AUTOM, P81, DOI 10.1109/ASE.2015.71
   Liebel G, 2018, SOFTW SYST MODEL, V17, P91, DOI 10.1007/s10270-016-0523-3
   Liebel G, 2014, LECT NOTES COMPUT SC, V8767, P166, DOI 10.1007/978-3-319-11653-2_11
   Lo D, 2011, CH CRC DATA MIN KNOW, P1
   MacDonald A, 2005, 2005 Australian Software Engineering Conference, Proceedings, P14, DOI 10.1109/ASWEC.2005.32
   Mengerink JGM., 2017, IWSM MENSURA, P116, DOI [10.1145/3143434.3143442, DOI 10.1145/3143434.3143442]
   Mengerink JGM, 2018, PROCEEDINGS OF THE 6TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, P446, DOI 10.5220/0006605804460453
   Mens T, 2007, 6 BELGIAN NETHERLAND, P1
   Mohagheghi P, 2008, LECT NOTES COMPUT SC, V5095, P432, DOI 10.1007/978-3-540-69100-6_31
   Mohagheghi P, 2013, EMPIR SOFTW ENG, V18, P89, DOI 10.1007/s10664-012-9196-x
   Mostafa S, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P215, DOI 10.1145/3092703.3092721
   Nurwidyantoro A, 2019, PROCEEDINGS OF EASE 2019 - EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING, P79, DOI 10.1145/3319008.3319016
   Osman MH, 2018, EUROMICRO CONF PROC, P396, DOI 10.1109/SEAA.2018.00070
   Palomba F, 2021, IEEE T SOFTWARE ENG, V47, P108, DOI 10.1109/TSE.2018.2883603
   Petrenko A, 2004, IEEE T SOFTWARE ENG, V30, P29, DOI 10.1109/TSE.2004.1265734
   Piantadosi V, 2020, EMPIR SOFTW ENG, V25, P5374, DOI 10.1007/s10664-020-09886-9
   Pourali P, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P224, DOI 10.1145/3239372.3239400
   Prochnow Steffen, 2008, THESIS CHRISTIAN ALB
   Raghuraman Adithya, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P101, DOI 10.1109/MSR.2019.00024
   Rahad K, 2021, SOFTWARE PRACT EXPER, V51, P1308, DOI 10.1002/spe.2957
   Robles G, 2017, IEEE WORK CONF MIN S, P519, DOI 10.1109/MSR.2017.48
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Schaefer Gunnar, 2006, THESIS CHRISTIAN ALB
   Serebrenik A., 2019, ANN IEEE SYST CONF, P1
   Sprinkle J., 2009, TR0908311 U AR
   Staron M, 2006, LECT NOTES COMPUT SC, V4199, P57
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Stephan M, 2019, MODEL MANAGEMENT ANA, P37
   Stephan M, 2015, 2015 IEEE/ACM 7TH INTERNATIONAL WORKSHOP ON MODELING IN SOFTWARE ENGINEERING, P48, DOI 10.1109/MiSE.2015.16
   Stol KJ, 2016, PROC INT CONF SOFTW, P120, DOI 10.1145/2884781.2884833
   Thomas SW, 2014, EMPIR SOFTW ENG, V19, P182, DOI 10.1007/s10664-012-9219-7
   Tolvanen Juha-Pekka, 2010, P 10 WORKSHOP DOMAIN, P10
   Tufano M, 2017, IEEE T SOFTWARE ENG, V43, P1063, DOI 10.1109/TSE.2017.2653105
   Tufano M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P403, DOI 10.1109/ICSE.2015.59
   van der Aalst WMP, 2011, PROCESS MINING: DISCOVERY, CONFORMANCE AND ENHANCEMENT OF BUSINESS PROCESSES, P1, DOI 10.1007/978-3-642-19345-3
   Van Der Straeten R, 2009, LECT NOTES COMPUT SC, V5421, P35, DOI 10.1007/978-3-642-01648-6_4
   van der Werf JMEM, 2009, FUND INFORM, V94, P387, DOI 10.3233/FI-2009-136
   van Deursen A, 2000, ACM SIGPLAN NOTICES, V35, P26, DOI 10.1145/352029.352035
   Whittle J, 2014, IEEE SOFTWARE, V31, P79, DOI 10.1109/MS.2013.65
   Whittle J, 2013, LECT NOTES COMPUT SC, V8107, P1, DOI 10.1007/978-3-642-41533-3_1
   Wieman R, 2017, PROC IEEE INT CONF S, P564, DOI 10.1109/ICSME.2017.71
   Wiese A., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P496, DOI 10.1109/ICSM.2011.6080817
   Wilson E.O., 1975, P1
   Yang N, 2020, 17 INT C MIN SOFTW R
   Yang N, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P253, DOI [10.1109/SANER.2019.8668007, 10.1109/saner.2019.8668007]
   Yin R., 1994, APPL SOCIAL RES METH, V5
   Zhang C, 2012, IEEE T SOFTWARE ENG, V38, P1213, DOI 10.1109/TSE.2011.79
NR 100
TC 2
Z9 2
U1 0
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2021
VL 26
IS 6
AR 124
DI 10.1007/s10664-021-10015-3
PG 46
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UO7PL
UT WOS:000694884900003
OA Green Published, Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Gote, C
   Scholtes, I
   Schweitzer, F
AF Gote, Christoph
   Scholtes, Ingo
   Schweitzer, Frank
TI Analysing Time-Stamped Co-Editing Networks in Software Development Teams
   using git2net
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Repository mining; Collaboration networks; Developer productivity
ID LARGE-SCALE ANALYSIS; PRODUCTIVITY
AB Data from software repositories have become an important foundation for the empirical study of software engineering processes. A recurring theme in the repository mining literature is the inference of developer networks capturing e.g. collaboration, coordination, or communication from the commit history of projects. Many works in this area studied networks of co-authorship of software artefacts, neglecting detailed information on code changes and code ownership available in software repositories. To address this issue, we introduce git2net, a scalable python software that facilitates the extraction of fine-grained co-editing networks in large git repositories. It uses text mining techniques to analyse the detailed history of textual modifications within files. We apply our tool in two case studies using GitHub repositories of multiple Open Source as well as a proprietary software project. Specifically, we use data on more than 1.2 million commits and more than 25,000 developers to test a hypothesis on the relation between developer productivity and co-editing patterns in software teams. We argue that git2net opens up an important new source of high-resolution data on human collaboration patterns that can be used to advance theory in empirical software engineering, computational social science, and organisational studies.
C1 [Gote, Christoph; Schweitzer, Frank] Swiss Fed Inst Technol, Chair Syst Design, Zurich, Switzerland.
   [Scholtes, Ingo] Berg Univ Wuppertal, Data Analyt Grp, Wuppertal, Germany.
C3 Swiss Federal Institutes of Technology Domain; ETH Zurich; University of
   Wuppertal
RP Gote, C (corresponding author), Swiss Fed Inst Technol, Chair Syst Design, Zurich, Switzerland.
EM cgote@ethz.ch; scholtes@uni-wuppertal.de; fschweitzer@ethz.ch
RI Scholtes, Ingo/A-8251-2012
OI Gote, Christoph/0000-0002-0382-1336
FU ETH Zurich
FX Open Access funding provided by ETH Zurich
CR Adams PJ, 2009, PROC IEEE INT CONF S, P319, DOI 10.1109/ICSM.2009.5306308
   AKAIKE H, 1974, IEEE T AUTOMAT CONTR, VAC19, P716, DOI 10.1109/TAC.1974.1100705
   Alliger GM, 2015, ORGAN DYN, V44, P176, DOI 10.1016/j.orgdyn.2015.05.003
   Amreen S, 2020, EMPIR SOFTW ENG, P1
   Bacchelli A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1025, DOI 10.1145/1985793.1985984
   Bastian M., 2009, P INT AAAI C WEBL SO, V3, P361
   Bates D., 2014, J STAT SOFTW, DOI DOI 10.18637/JSS.V067.I01
   Beller M., 2014, 11 WORK C MIN SOFTW, P202, DOI DOI 10.1145/2597073.2597082
   Berger-Wolf Tanya Y, 2006, P 12 ACM SIGKDD INT, P523, DOI [DOI 10.1145/1150402.1150462, 10.1145/1150402.1150462]
   Bird Christian, 2006, P MSR, P137, DOI DOI 10.1145/1137983.1138016
   Bird Christian., 2011, P 19 ACM SIGSOFT S 1, P4
   Blincoe K., 2013, Proc. 9th Joint Meeting on Foundations of Software Engineering (ESEC/FSE 13), P213, DOI DOI 10.1145/2491411.2491440
   Brooks FP, 1975, MYTHICAL MAN MONTH
   Carley K.M., 2001, Encyclopedia of Operations Research and Management Science, P126, DOI DOI 10.1007/1-4020-0611-X
   Carley K. M., 2012, ADV DESIGN CROSS CUL, P265
   Cataldo M., 2006, P 2006 20 06 ANN C C, P353, DOI DOI 10.1145/1180875.1180929
   Cataldo M, 2014, ADV COMPLEX SYST, V17, DOI 10.1142/S0219525914300011
   Cataldo M, 2008, CSCW: 2008 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, CONFERENCE PROCEEDINGS, P579
   Cohen E, 2018, IEEE WORK CONF MIN S, P426, DOI 10.1145/3196398.3196436
   Costello S. H., 1984, SIGSOFT Software Engineering Notes, V9, P15, DOI 10.1145/1010941.1010947
   Csardi G., 2006, InterJournal, (Complex Systems), V1695, P1
   di Bella E, 2013, INFORM SCIENCES, V221, P72, DOI 10.1016/j.ins.2012.09.031
   FREEMAN LC, 1979, SOC NETWORKS, V1, P215, DOI 10.1016/0378-8733(78)90021-7
   Fry T, 2020, DATASET APPROACH IDE
   Garcia D, 2013, 2013 IEEE THIRD INTERNATIONAL CONFERENCE ON CLOUD AND GREEN COMPUTING (CGC 2013), P410, DOI 10.1109/CGC.2013.71
   Geipel MM, 2014, ADV COMPLEX SYST, V17, DOI 10.1142/S021952591550006X
   Geipel MM, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P269, DOI 10.1145/1595696.1595739
   Geipel MM, 2012, ADV COMPLEX SYST, V15, DOI 10.1142/S021952591250083X
   Germans DM, 2019, EMPIR SOFTW ENG, V24, P2725, DOI 10.1007/s10664-019-09704-x
   Gote Christoph, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P433, DOI 10.1109/MSR.2019.00070
   Gote C, 2019, **DATA OBJECT**, DOI [10.5281/zenodo.2587483, DOI 10.5281/ZENODO.2587483]
   Gousios Georgios, 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P12, DOI 10.1109/MSR.2012.6224294
   Gousios G, 2017, PROC IEEE ACM INT C, P501, DOI 10.1109/ICSE-C.2017.164
   Greiler M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P2, DOI 10.1109/MSR.2015.8
   Guzzi A, 2013, IEEE WORK CONF MIN S, P277, DOI 10.1109/MSR.2013.6624039
   Hagberg A., 2008, EXPLORING NETWORK ST
   Halstead M. H., 1977, ELEMENTS SOFTWARE SC
   Hill E, 2007, P THE 6 JOINT M EURO, P341
   Holme P, 2015, EUR PHYS J B, V88, DOI 10.1140/epjb/e2015-60657-4
   Howison J, 2006, INT FED INFO PROC, V203, P319
   Huang S.-K., 2005, SIGSOFT SOFTWARE ENG, P1
   Joblin M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P563, DOI 10.1109/ICSE.2015.73
   Kalliamvakou E, 2016, EMPIR SOFTW ENG, V21, P2035, DOI 10.1007/s10664-015-9393-5
   KRAVITZ DA, 1986, J PERS SOC PSYCHOL, V50, P936, DOI 10.1037/0022-3514.50.5.936
   LATANE B, 1979, J PERS SOC PSYCHOL, V37, P822, DOI 10.1037//0022-3514.37.6.822
   Levenshtein V. I., 1966, SOV PHYS DOKL, V10, P707
   Lin ZP, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P68, DOI 10.1109/MSR.2015.14
   Long Y, 2007, J DATABASE MANAGE, V18, P25, DOI 10.4018/jdm.2007040102
   Lopez-Fernandez L., 2004, "International Workshop on Mining Software Repositories (MSR 2004)" W17S Workshop - 26th International Conference on Software Engineering, P101, DOI 10.1049/ic:20040485
   MacLean AC, 2013, IEEE WORK CONF MIN S, P135, DOI 10.1109/MSR.2013.6624020
   Madey G., 2002, AMCIS 2002 Proceedings, P247
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Meneely A., 2008, P 16 ACM SIGSOFT INT, P13, DOI DOI 10.1145/1453101.1453106
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Muric Goran, 2019, Proceedings of the ACM on Human-Computer Interaction, V3, DOI 10.1145/3359176
   Newman M., 2018, NETWORKS, DOI 10.1093/oso/9780198805090.001.0001
   Ogawa M, 2010, SOFTVIS 2010: PROCEEDINGS OF THE 2010 INTERNATIONAL SYMPOSIUM ON SOFTWARE VISUALIZATION, P35
   Paiva E, 2010, INNOVATIONS IN COMPUTING SCIENCES AND SOFTWARE ENGINEERING, P99, DOI 10.1007/978-90-481-9112-3_17
   Peixoto Tiago P., 2014, GRAPH TOOL PYTHON LI, DOI [DOI 10.6084/M9.FIGSHARE.1164194, 10.6084/m9.figshare.1164194]
   Pohl M., 2008, Proceedings of the 2008 international workshop on Cooperative and human aspects of software engineering, P81
   Posnett D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P452, DOI 10.1109/ICSE.2013.6606591
   Qiaona Hong, 2011, 2011 IEEE 27th International Conference on Software Maintenance, P323, DOI 10.1109/ICSM.2011.6080799
   Ringelmann M., 1913, Annales de l'Institut National Agronomique, V12, P1
   Scholtes I., 2017, SOFTWARE PACKAGE PAT
   Scholtes I, 2019, NAT PHYS, V1
   Scholtes I, 2017, KDD'17: PROCEEDINGS OF THE 23RD ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1037, DOI 10.1145/3097983.3098145
   Scholtes I, 2016, EMPIR SOFTW ENG, V21, P642, DOI 10.1007/s10664-015-9406-4
   Scholtes I, 2014, NAT COMMUN, V5, DOI 10.1038/ncomms6024
   Schweitzer F, 2014, ADV COMPLEX SYST, V17, DOI 10.1142/S0219525915500083
   SHANNON CE, 1948, BELL SYST TECH J, V27, P379, DOI 10.1002/j.1538-7305.1948.tb01338.x
   Sornette D, 2014, PLOS ONE, V9, DOI 10.1371/journal.pone.0103023
   Spadini D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P908, DOI 10.1145/3236024.3264598
   Sureka A., 2011, P IND SOFTW ENG C IS, P195
   Tangen S, 2005, INT J PRODUCT PERFOR, V54, P34, DOI 10.1108/17410400510571437
   Vasilescu B, 2013, 2013 ASE/IEEE INTERNATIONAL CONFERENCE ON SOCIAL COMPUTING (SOCIALCOM), P188, DOI 10.1109/SocialCom.2013.35
   Vijayaraghavan VS, 2015, SCI REP-UK, V5, DOI 10.1038/srep15142
   von Krogh G, 2006, MANAGE SCI, V52, P975, DOI 10.1287/mnsc.1060.0560
   Wolf T, 2009, PROC INT CONF SOFTW, P1, DOI 10.1109/ICSE.2009.5070503
   Wolf T, 2009, IEEE SOFTWARE, V26, P58, DOI 10.1109/MS.2009.16
   Xie T, 2009, COMPUTER, V42, P55, DOI 10.1109/MC.2009.256
   Xuan Q, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P222, DOI 10.1145/2568225.2568238
   Yuxing Ma, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P143, DOI 10.1109/MSR.2019.00031
   Zanetti MS, 2013, 2013 6TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P49, DOI 10.1109/CHASE.2013.6614731
   Zanetti MS, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1032, DOI 10.1109/ICSE.2013.6606653
NR 84
TC 6
Z9 6
U1 4
U2 11
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2021
VL 26
IS 4
AR 75
DI 10.1007/s10664-020-09928-2
PG 41
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA SI8PU
UT WOS:000655093700001
PM 34720670
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Chinthanet, B
   Kula, RG
   McIntosh, S
   Ishio, T
   Ihara, A
   Matsumoto, K
AF Chinthanet, Bodin
   Kula, Raula Gaikovina
   McIntosh, Shane
   Ishio, Takashi
   Ihara, Akinori
   Matsumoto, Kenichi
TI Lags in the release, adoption, and propagation of npm vulnerability
   fixes
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE JavaScript; Node; js; npm; Software library vulnerabilities
ID CRITERION
AB Security vulnerability in third-party dependencies is a growing concern not only for developers of the affected software, but for the risks it poses to an entire software ecosystem, e.g., Heartbleed vulnerability. Recent studies show that developers are slow to respond to the threat of vulnerability, sometimes taking four to eleven months to act. To ensure quick adoption and propagation of a release that contains the fix (fixing release), we conduct an empirical investigation to identify lags that may occur between the vulnerable release and its fixing release (package-side fixing release). Through a preliminary study of 231 package-side fixing release of npm projects on GitHub, we observe that a fixing release is rarely released on its own, with up to 85.72% of the bundled commits being unrelated to a fix. We then compare the package-side fixing release with changes on a client-side (client-side fixing release). Through an empirical study of the adoption and propagation tendencies of 1,290 package-side fixing releases that impact throughout a network of 1,553,325 releases of npm packages, we find that stale clients require additional migration effort, even if the package-side fixing release was quick (i.e., package-side fixing releasetypeSpatch). Furthermore, we show the influence of factors such as the branch that the package-side fixing release lands on and the severity of vulnerability on its propagation. In addition to these lags we identify and characterize, this paper lays the groundwork for future research on how to mitigate propagation lags in an ecosystem.
C1 [Chinthanet, Bodin; Kula, Raula Gaikovina; Ishio, Takashi] Nara Inst Sci & Technol, Nara, Japan.
   [Matsumoto, Kenichi] Nara Inst Sci & Technol, Grad Sch Sci & Technol, Nara, Japan.
   [McIntosh, Shane] Univ Waterloo, Waterloo, ON, Canada.
   [Ihara, Akinori] Wakayama Univ, Wakayama, Japan.
C3 Nara Institute of Science & Technology; Nara Institute of Science &
   Technology; University of Waterloo; Wakayama University
RP Chinthanet, B (corresponding author), Nara Inst Sci & Technol, Nara, Japan.
EM bodin.chinthanet.ay1@is.naist.jp; raula-k@is.naist.jp;
   shane.mcintosh@uwaterloo.ca; ishio@is.naist.jp; ihara@wakayama-u.ac.jp;
   matumoto@is.naist.jp
RI Kula, Raula/AAD-6079-2019
OI Kula, Raula/0000-0003-2324-0608; Ishio, Takashi/0000-0003-4106-699X;
   Chinthanet, Bodin/0000-0003-4439-1608
FU Japan Society for Promotion of Science (JSPS) KAKENHI [JP18H04094,
   JP18H03221, 20K19774, 20H05706]; Grants-in-Aid for Scientific Research
   [20H05706, 20K19774] Funding Source: KAKEN
FX This work was supported by the Japan Society for Promotion of Science
   (JSPS) KAKENHI Grant Numbers JP18H04094, JP18H03221, 20K19774, 20H05706.
CR Abdalkareem R, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P385, DOI 10.1145/3106237.3106267
   Alhazmi OH, 2007, COMPUT SECUR, V26, P219, DOI 10.1016/j.cose.2006.10.002
   [Anonymous], P ACM SIGSOFT 20 INT
   Bavota G, 2015, EMPIR SOFTW ENG, V20, P1275, DOI 10.1007/s10664-014-9325-9
   Bennett J, 2014, TIME MAGAZINE   0826
   Bogart C, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P109, DOI 10.1145/2950290.2950325
   Cadariu M, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P516, DOI 10.1109/SANER.2015.7081868
   Chowdhury I, 2011, J SYST ARCHITECT, V57, P294, DOI 10.1016/j.sysarc.2010.06.003
   Cox J, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P109, DOI 10.1109/ICSE.2015.140
   Cramer H., 1946, Methods of Mathematical Statistics
   Decan A, 2018, IEEE WORK CONF MIN S, P181, DOI 10.1145/3196398.3196401
   Decan A, 2018, PROC IEEE INT CONF S, P404, DOI 10.1109/ICSME.2018.00050
   Decan A, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P2, DOI 10.1109/SANER.2017.7884604
   Devine L, 2006, P ANN M FLORIDA ASS
   Durumeric Z, 2014, PROCEEDINGS OF THE 2014 ACM INTERNET MEASUREMENT CONFERENCE (IMC'14), P475, DOI 10.1145/2663716.2663755
   GitHub, 2020, COV LINEAGES PANGOLI
   GitHub, 2018, SECURITY ALERTS ARE
   GitHub, 2017, SECURITY ALERTS VULN
   Hejderup J, 2015, THESIS
   Hora A, 2015, PROC IEEE INT CONF S, P251, DOI 10.1109/ICSM.2015.7332471
   Howard M, 2001, WRITING SECURE CODE
   Ihara A., 2017, P 13 INT C OP SOURC, V496, P128, DOI 10.1007/978- 3-319- 57735-7 13
   Kikas R, 2017, IEEE WORK CONF MIN S, P102, DOI 10.1109/MSR.2017.55
   KRUSKAL WH, 1952, J AM STAT ASSOC, V47, P583, DOI 10.1080/01621459.1952.10483441
   Kula RG, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P288, DOI 10.1109/SANER.2018.8330217
   Kula RG, 2018, EMPIR SOFTW ENG, V23, P384, DOI 10.1007/s10664-017-9521-5
   Lauinger T, 2017, 24TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2017), DOI 10.14722/ndss.2017.23414
   Li F, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2201, DOI 10.1145/3133956.3134072
   Linares-Vásquez M, 2017, IEEE WORK CONF MIN S, P2, DOI 10.1109/MSR.2017.60
   Mirhosseini S, 2017, IEEE INT CONF AUTOM, P84, DOI 10.1109/ASE.2017.8115621
   Mitre Corporation, 2018, CVE COMMON VULNERABI
   Munaiah N, 2017, EMPIR SOFTW ENG, V22, P1305, DOI 10.1007/s10664-016-9447-3
   Nguyen VH, 2016, EMPIR SOFTW ENG, V21, P2268, DOI 10.1007/s10664-015-9408-2
   NPM, 2018, AUDITING PACKAGE DEP
   NPM, 2010, NPM
   NPM, 2016, RESPONDING SECURITY
   Pashchenko I, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3268920
   Pearson K, 1900, PHILOS MAG, V50, P157, DOI 10.1080/14786440009463897
   Piantadosi V, 2019, IEEE INT CONF SOFTW, P68, DOI 10.1109/ICST.2019.00017
   Ponta SE, 2018, PROC IEEE INT CONF S, P449, DOI 10.1109/ICSME.2018.00054
   Preston-Werner T, 2009, SEMANTIC VERSIONING
   Raemaekers S, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P378, DOI 10.1109/ICSM.2012.6405296
   Sawant AA, 2016, PROC IEEE INT CONF S, P400, DOI 10.1109/ICSME.2016.64
   Shin Y, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P315
   Snyk, 2015, VULNERABILITY DB
   Snyk, 2017, DENIAL SERVICE DOS N
   Synopsys, 2014, THE HEARTBLEED BUG
   Teyton C., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P289, DOI 10.1109/WCRE.2012.38
   WASSERTHEIL S, 1970, BIOMETRICS, V26, P588, DOI 10.2307/2529115
   Williams L, 2018, IEEE SOFTWARE, V35, P76, DOI 10.1109/MS.2018.290110854
   Wittern E, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P351, DOI [10.1145/2901739.2901743, 10.1109/MSR.2016.043]
   Zerouali A, 2018, LECT NOTES COMPUT SC, V10826, P95, DOI 10.1007/978-3-319-90421-4_6
NR 52
TC 27
Z9 31
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAY
PY 2021
VL 26
IS 3
AR 47
DI 10.1007/s10664-021-09951-x
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RF8YU
UT WOS:000635125400001
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Gharibi, G
   Walunj, V
   Nekadi, R
   Marri, R
   Lee, Y
AF Gharibi, Gharib
   Walunj, Vijay
   Nekadi, Raju
   Marri, Raj
   Lee, Yugyung
TI Automated end-to-end management of the modeling lifecycle in deep
   learning
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Data management; Deep learning; Software automation
AB Deep learning has improved the state-of-the-art results in an ever-growing number of domains. This success heavily relies on the development and training of deep learning models-an experimental, iterative process that produces tens to hundreds of models before arriving at a satisfactory result. While there has been a surge in the number of tools and frameworks that aim at facilitating deep learning, the process of managing the models and their artifacts is still surprisingly challenging and time-consuming. Existing model-management solutions are either tailored for commercial platforms or require significant code changes. Moreover, most of the existing solutions address a single phase of the modeling lifecycle, such as experiment monitoring, while ignoring other essential tasks, such as model deployment. In this paper, we present a software system to facilitate and accelerate the deep learning lifecycle, named ModelKB. ModelKB can automatically manage the modeling lifecycle end-to-end, including (1) monitoring and tracking experiments; (2) visualizing, searching for, and comparing models and experiments; (3) deploying models locally and on the cloud; and (4) sharing and publishing trained models. Moreover, our system provides a stepping-stone for enhanced reproducibility. ModelKB currently supports TensorFlow 2.0, Keras, and PyTorch, and it can be extended to other deep learning frameworks easily.
C1 [Gharibi, Gharib; Walunj, Vijay; Nekadi, Raju; Marri, Raj; Lee, Yugyung] Univ Missouri, Sch Comp & Engn, 5000 Holmes St, Kansas City, MO 64110 USA.
C3 University of Missouri System; University of Missouri Kansas City
RP Gharibi, G (corresponding author), Univ Missouri, Sch Comp & Engn, 5000 Holmes St, Kansas City, MO 64110 USA.
EM ggk89@mail.umkc.edu; vijay.walunj@mail.umkc.edu; rn8mh@mail.umkc.edu;
   rmwwc@mail.umkc.edu; LeeYu@umkc.edu
FU NSF [1747751]
FX We would like to thank Sirisha Rella and Duy Ho for their help in some
   implementation parts in early versions of ModelKB. We would like to
   thank the Ph.D. students and the industry participants who helped in
   conducting the user study and evaluate the software system. We also
   thank the anonymous reviewers for their time and effort in reviewing
   this work. The first author thanks Yasmin Hussein for her help and
   support throughout this work. The coauthor, Yugyung Lee, would like to
   acknowledge the partial support of the NSF Grant No. 1747751
CR Abadi M., 2015, TENSORFLOW LARGE SCA
   Abadi M, 2016, PROCEEDINGS OF OSDI'16: 12TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P265
   Albishri AA, 2019, ARXIV191107515
   [Anonymous], 2015, NATURE, DOI [DOI 10.1038/NATURE14539, 10.1038/nature14539]
   [Anonymous], 2019, Dive into deep learning
   [Anonymous], 2018, SAGEMAKER
   Bergstra J., 2010, Proc. Python Sci. Comput. Conf., V1, P3
   Castelvecchi D, 2016, NATURE, V537, P20, DOI 10.1038/538020a
   Chandraker M, 2018, US Patent App, Patent No. [15/803,318, 15803318]
   Chen Xi, 2016, Advances in Neural Information Processing Systems (NIPS), V29
   Chollet F, 2015, KERAS
   Das S, 2017, CIDR
   DeepCognition, 2019, ONE STOP DEEP LEARNI
   Devito Z., 2017, NEURIPS WORKSHOPS, P1
   Documentation P, 2019, ABSTRACT SYNTAX TREE
   Facebook, 2019, INTRO FBLEARNER FLOW
   Gharibi G, 2019, INT WORK REAL ARTIF, P28, DOI 10.1109/RAISE.2019.00013
   Gharibi Gharib, 2019, P 3 INT WORKSH DAT M, DOI 10.1145/3329486.3329495
   Ghezzi C, 2002, Fundamentals of Software Engineering
   Goodfellow I. J., 2015, 3 INT C LEARNING REP
   Goodfellow I, 2018, COMMUN ACM, V61, P56, DOI 10.1145/3134599
   Goodfellow I, 2016, ADAPT COMPUT MACH LE, P1
   Google, 2019, TENSORBOARD VISUALIZ
   Grinberg M, 2018, FLASK WEB DEV DEVELO
   Hall M.A., 1999, P 17 INT C MACHINE L, P359
   Hannun Awni, 2014, ARXIV
   He KM, 2016, PROC CVPR IEEE, P770, DOI 10.1109/CVPR.2016.90
   Hellerstein JM, 2018, KDD CMI WORKSH, V114
   Hines ML, 2004, J COMPUT NEUROSCI, V17, P7, DOI 10.1023/B:JCNS.0000023869.22017.2e
   Jia YQ, 2014, PROCEEDINGS OF THE 2014 ACM CONFERENCE ON MULTIMEDIA (MM'14), P675, DOI 10.1145/2647868.2654889
   Jinja, 2019, PYTHON TEMPLATE LANG
   Karpathy A, 2014, PROC CVPR IEEE, P1725, DOI 10.1109/CVPR.2014.223
   Krizhevsky A, 2017, COMMUN ACM, V60, P84, DOI 10.1145/3065386
   Kumar A, 2017, SIGMOD'17: PROCEEDINGS OF THE 2017 ACM INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P1717, DOI 10.1145/3035918.3054775
   Kumar A, 2015, SIGMOD REC, V44, P17, DOI 10.1145/2935694.2935698
   Lawrence S, 1997, IEEE T NEURAL NETWOR, V8, P98, DOI 10.1109/72.554195
   Lecun Y, 1998, P IEEE, V86, P2278, DOI 10.1109/5.726791
   LeCun Y., 1990, ADV NEURAL INFORM PR, P396
   Lee Y, 2020, ARXIV200506632
   Miao H., 2018, IEEE Data Eng. Bull, V41, P26
   Miao H, 2017, PROC INT CONF DATA, P1393, DOI 10.1109/ICDE.2017.192
   Miao H, 2017, PROC INT CONF DATA, P571, DOI 10.1109/ICDE.2017.112
   Microsoft, 2017, MACH LEARN STU
   ModelHubAI, 2019, COLLECTION DEEP LEAR
   ModelZoo, 2019, SET PRETRAINED MODEL
   Montavon G, 2018, DIGIT SIGNAL PROCESS, V73, P1, DOI 10.1016/j.dsp.2017.10.011
   Nvidia, 2019, DIGITS GRAPHICAL WEB
   PyTorch, 2019, SET PRETRAINED PYTOR
   Roeder L, 2019, NETRON VISUALIZING D
   Russakovsky O, 2015, INT J COMPUT VISION, V115, P211, DOI 10.1007/s11263-015-0816-y
   Schelter S., 2017, NIPS
   Schelter S, 2018, Declarative metadata management: A missing piece in end-to-end machine learning
   Schelter Sebastian, 2018, IEEE Data Engineering Bulletin
   Sculley D, 2015, ADV NEUR IN, V28
   Seedbank G, 2019, SET MODELS SHARED VI
   Seide F, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P2135, DOI 10.1145/2939672.2945397
   Silver D, 2016, NATURE, V529, P484, DOI 10.1038/nature16961
   Simonyan K, 2015, Arxiv, DOI arXiv:1409.1556
   SQL, 2019, C LANGUAGE LIB RUN S
   Szegedy C, 2017, AAAI CONF ARTIF INTE, P4278
   Tantithamthavorn C, 2020, IEEE T SOFTWARE ENG, V46, P1200, DOI 10.1109/TSE.2018.2876537
   Uber, 2019, IMEET MICHELANGELO U
   van Rijn Jan N., 2013, Machine Learning and Knowledge Discovery in Databases. European Conference, ECML PKDD 2013. Proceedings: LNCS 8190, P645, DOI 10.1007/978-3-642-40994-3_46
   Vartak M., 2016, P WORKSHOP HUMAN IN, P1, DOI [10.1145/2939502.2939516, DOI 10.1145/2939502.2939516]
   Vartak M, 2018, THESIS MIT
   Vartak Manasi, 2018, IEEE Data Eng. Bull., V41, P16
   Velazquez M, 2019, IEEE INT C BIOINFORM, P1665, DOI 10.1109/BIBM47256.2019.8983391
   Zaharia M, 2018, DATA ENG, V39
NR 68
TC 13
Z9 15
U1 0
U2 8
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2021
VL 26
IS 2
AR 17
DI 10.1007/s10664-020-09894-9
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QJ6UW
UT WOS:000619824500001
DA 2024-07-18
ER

PT J
AU Nassif, M
   Robillard, MP
AF Nassif, Mathieu
   Robillard, Martin P.
TI Wikifying software artifacts
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Wikipedia; Wikification; Comparative evaluation; Stack overflow;
   Knowledge-driven software engineering
ID LINKING
AB Context The computational linguistics community has developed tools, called wikifiers, to identify links to Wikipedia articles from free-form text. Software engineering research can leverage wikifiers to add semantic information to software artifacts. However, no empirically-grounded basis exists to choose an effective wikifier and to configure it for the software domain, on which wikifiers were not specifically trained. Objective We conducted a study to guide the selection of a wikifier and its configuration for applications in the software domain, and to measure what performance can be expected of wikifiers. Method We applied six wikifiers, with multiple configurations, to a sample of 500 Stack Overflow posts. We manually annotated the 41 124 articles identified by the wikifiers as correct or not to compare their precision and recall. Results Each wikifier, in turn, achieved the highest precision, between 13% and 82%, for different thresholds of recall, from 60% to 5%. However, filtering the wikifiers' output with a whitelist can considerably improve the precision above 79% for recall up to 30%, and above 47% for recall up to 60%. Conclusions Results reported in each wikifier's original article cannot be generalized to software-specific documents. Given that no wikifier performs universally better than all others, we provide empirically grounded insights to select a wikifier for different scenarios, and suggest ways to further improve their performance for the software domain.
C1 [Nassif, Mathieu; Robillard, Martin P.] McGill Univ, Sch Comp Sci, Montreal, PQ, Canada.
C3 McGill University
RP Nassif, M (corresponding author), McGill Univ, Sch Comp Sci, Montreal, PQ, Canada.
EM mnassif@cs.mcgill.ca; martin@cs.mcgill.ca
RI Nassif, Mathieu/GXF-5254-2022
FU Natural Sciences and Engineering Research Council of Canada (NSERC)
FX We are grateful to the external annotators for helping with the manual
   annotation of the wikifiers output. This work is funded by the Natural
   Sciences and Engineering Research Council of Canada (NSERC).
CR Barua A, 2014, EMPIR SOFTW ENG, V19, P619, DOI 10.1007/s10664-012-9231-y
   Bourque Pierre, 2014, SWEBOK: Guide to the Software Engineering Body of Knowledge, V3rd
   Brank J, 2017, P SOLV C DAT MIN DAT, P4
   Carvalho NR, 2015, J SYST SOFTWARE, V100, P117, DOI 10.1016/j.jss.2014.10.013
   Cassidy T., 2012, Proc. of the 24th Int. Conf. on Comput. Linguist, P441
   Chen CY, 2019, EMPIR SOFTW ENG, V24, P1155, DOI 10.1007/s10664-018-9657-y
   Chen CY, 2017, PROC INT CONF SOFTW, P450, DOI 10.1109/ICSE.2017.48
   Cheng X, 2013, P 2013 C EMP METH NA, P1787
   Cleland-Huang J., 2014, FOSE P FUTURE SOFTWA, P55
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Cornolti Marco., 2013, Proceedings of the 22nd international conference on World Wide Web, P249, DOI [10.1145/2488388.2488411, DOI 10.1145/2488388.2488411]
   Daiber J., 2013, P 9 INT C SEM SYST, P121, DOI [10.1145/2506182.2506198, DOI 10.1145/2506182.2506198]
   Fellbaum C., 1998, WORDNET ELECT LEXICA, DOI DOI 10.7551/MITPRESS/7287.001.0001
   Ferragina P., 2014, P 1 INT WORKSH ENT R, P55, DOI [DOI 10.1145/2633211.2634350, 10.1145/2633211.2634350]
   Ferragina P, 2010, INT C INF KNOWL MAN, P1625, DOI [10.1145/1871437 .1871689. (Ver, DOI 10.1145/1871437.1871689.(VER, DOI 10.1145/1871437.1871689]
   Hoffart J., 2011, P 2011 C EMPIRICAL M, P782, DOI DOI 10.3115/V1/D11-1072
   ISO/IEC/IEEE, 2017, 247652017 ISOIECIEEE
   Kendall MG, 1938, BIOMETRIKA, V30, P81, DOI 10.2307/2332226
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Lehmann J, 2015, SEMANT WEB, V6, P167, DOI 10.3233/SW-140134
   Ma S, 2019, IEEE T SOFTW ENG
   Meij E, 2012, P 5 ACM INT C WEB SE, P563, DOI DOI 10.1145/2124295.2124364
   Mendes Pablo N, 2011, P 7 INT C SEM SYST, P1, DOI [DOI 10.1145/2063518.2063519, 10.1145/2063518.2063519]
   Mihalcea R., 2004, SENSEVAL 3, P25
   Milne D, 2008, P 17 ACM C INF KNOWL, P509, DOI DOI 10.1145/1458082.1458150
   Milne D, 2013, ARTIF INTELL, V194, P222, DOI 10.1016/j.artint.2012.06.007
   Moro A., 2014, Trans. Assoc. Computat. Ling., V2, P231, DOI [10.1162/tacl_a_00179, DOI 10.1162/TACL_A_00179]
   Nassif M, 2020, IEEE T SOFTWARE ENG, V46, P20, DOI 10.1109/TSE.2018.2836450
   Navigli R, 2012, ARTIF INTELL, V193, P217, DOI 10.1016/j.artint.2012.07.001
   Navigli Roberto, 2013, P 7 INT WORKSHOP SEM, P222
   Page L., 1999, PAGERANK CITATION RA
   Patil S, 2017, IEEE WORK CONF MIN S, P182, DOI 10.1109/MSR.2017.20
   Ponzanelli L, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1295, DOI 10.1109/ICSE.2013.6606701
   Ratinov L., 2011, P 49 ANN M ASS COMP, P1375
   Rebele T, 2016, LECT NOTES COMPUT SC, V9982, P177, DOI 10.1007/978-3-319-46547-0_19
   Rigby PC, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P832, DOI 10.1109/ICSE.2013.6606629
   Schindler M, 2015, INT WORK REAL ARTIF, P13, DOI 10.1109/RAISE.2015.10
   Seyler D, 2018, PROCEEDINGS OF THE 56TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 2, P241
   Shen W, 2015, IEEE T KNOWL DATA EN, V27, P443, DOI 10.1109/TKDE.2014.2327028
   Sundheim Beth M., 1995, 6 MESS UND C MUC 6 P, DOI DOI 10.1145/1072399.1072402
   Szymanski J, 2019, AI COMMUN, V32, P235, DOI 10.3233/AIC-190581
   Tjong KSE, 2003, P 7 C NAT LANG LEARN, P142, DOI DOI 10.3115/1119176.1119195
   Treude C, 2016, PROC INT CONF SOFTW, P392, DOI 10.1145/2884781.2884800
   Usbeck R, 2015, PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW 2015), P1133, DOI 10.1145/2736277.2741626
   Vincent N, 2018, PROCEEDINGS OF THE 2018 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2018), DOI 10.1145/3173574.3174140
   Wang C, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P97, DOI 10.1145/3338906.3338963
   Xun GX, 2017, IEEE T KNOWL DATA EN, V29, P38, DOI 10.1109/TKDE.2016.2614508
   Ye DH, 2018, EMPIR SOFTW ENG, V23, P3129, DOI 10.1007/s10664-018-9608-7
   Ye DH, 2016, PROC IEEE INT CONF S, P389, DOI 10.1109/ICSME.2016.11
   Ye DH, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P90, DOI 10.1109/SANER.2016.10
   Ye X, 2016, PROC INT CONF SOFTW, P404, DOI 10.1145/2884781.2884862
   Zhao XJ, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P56, DOI 10.1109/SANER.2017.7884609
NR 52
TC 4
Z9 4
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2021
VL 26
IS 2
AR 31
DI 10.1007/s10664-020-09918-4
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QV2FK
UT WOS:000627792300001
DA 2024-07-18
ER

PT J
AU Wu, DY
   Gao, DB
   Lo, D
AF Wu, Daoyuan
   Gao, Debin
   Lo, David
TI Scalable online vetting of Android apps for measuring declared SDK
   versions and their consistency with API calls
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE SDK version; API call; Android fragmentation; App analysis
AB Android has been the most popular smartphone system with multiple platform versions active in the market. To manage the application's compatibility with one or more platform versions, Android allows apps to declare the supported platform SDK versions in their manifest files. In this paper, we conduct a systematic study of this modern software mechanism. Our objective is to measure the current practice of declared SDK versions (which we term as DSDK versions afterwards) in real apps, and the (in)consistency between DSDK versions and their host apps' API calls. To successfully analyze a modern dataset of 22,687 popular apps (with an average app size of 25MB), we design a scalable approach that operates on the Android bytecode level and employs a lightweight bytecode search for app analysis. This approach achieves a good performance suitable for online vetting in app markets, requiring only around 5 seconds to process an app on average. Besides shedding light on the characteristics of DSDK in the wild, our study quantitatively measures two side effects of inappropriate DSDK versions: (i) around 35% apps under-set the minimum DSDK versions and could incur runtime crashes, but fortunately, only 11.3% apps could crash on Android 6.0 and above; (ii) around 2% apps, due to under-claiming the targeted DSDK versions, are potentially exploitable by remote code execution, and half of them invoke the vulnerable API via embedded third-party libraries. These results indicate the importance and difficulty of declaring correct DSDK, and our work can help developers fulfill this goal.
C1 [Wu, Daoyuan] Chinese Univ Hong Kong, Dept Informat Engn, Hong Kong, Peoples R China.
   [Gao, Debin; Lo, David] Singapore Management Univ, Sch Informat Syst, Singapore, Singapore.
C3 Chinese University of Hong Kong; Singapore Management University
RP Wu, DY (corresponding author), Chinese Univ Hong Kong, Dept Informat Engn, Hong Kong, Peoples R China.
EM dywu@ie.cuhk.edu.hk; dbgao@smu.edu.sg; davidlo@smu.edu.sg
RI GAO, Debin/E-8551-2012; Lo, David/A-2493-2012
OI Lo, David/0000-0002-4367-7201; Wu, Daoyuan/0000-0002-3752-0718; Gao,
   Debin/0000-0001-9412-9961
FU Singapore National Research Foundation under the National Satellite of
   Excellence in Mobile Systems Security and Cloud Security
   [NRF2018NCRNSOE004- 0001]; Chinese University of Hong Kong [4055127]
FX We thank editors and all the reviewers for their valuable comments and
   helpful suggestions. This research/project is supported by the Singapore
   National Research Foundation under the National Satellite of Excellence
   in Mobile Systems Security and Cloud Security (NRF2018NCRNSOE004- 0001)
   and partially supported by a direct grant (ref. no. 4055127) from The
   Chinese University of Hong Kong.
CR Allix K, 2016, P MSR
   [Anonymous], INTEGRATE FLURRY SDK
   [Anonymous], 2020, AAPT ANDROID ASSET P
   [Anonymous], 2020, ENABLE MULTIDEX APPS
   [Anonymous], 2020, ANDROID DISTRIBUTION
   [Anonymous], OPENFEINT IS LARGEST
   [Anonymous], 2020, Apktool"
   [Anonymous], 2020, USES SDK MANIFEST EL
   [Anonymous], MULTIPLE APK SUPPORT
   [Anonymous], API COMPATIBILITY IS
   [Anonymous], IDC - Smartphone Market Share - OS
   [Anonymous], 2020, ANDROIDMANIFEST XML
   [Anonymous], 2020, ANDROID PLATFORM COD
   Arzt S, 2014, ACM SIGPLAN NOTICES, V49, P259, DOI [10.1145/2666356.2594299, 10.1145/2594291.2594299]
   Au K, 2012, P ACM CCS
   Avdiienko V, 2015, P ACM ICSE
   Backes M, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P356, DOI 10.1145/2976749.2978333
   Brito G, 2016, P IEEE SANER
   Calzavara S, 2016, P IEEE EUROSANDP
   Enck W., 2015, P ACM ICSE
   Felt AP, 2011, PROCEEDINGS OF THE 18TH ACM CONFERENCE ON COMPUTER & COMMUNICATIONS SECURITY (CCS 11), P627
   Gao D., 2017, P USENIX ANN TECHN C
   He DJ, 2018, IEEE INT CONF AUTOM, P167, DOI 10.1145/3238147.3238185
   Jia Y, 2017, P IEEE EUROSANDP
   Jiang X., 2012, P ISOC NDSS
   Klein J., 2018, P ACM ISSTA
   Li MH, 2017, PROC INT CONF SOFTW, P335, DOI 10.1109/ICSE.2017.38
   Linares-Vasquez M, 2013, P ACM FSE
   McDaniel P., 2012, P ACM FSE
   McDonnell T, 2013, PROC IEEE INT CONF S, P70, DOI 10.1109/ICSM.2013.18
   McIlroy S, 2016, EMPIR SOFTW ENG, V21, P1346, DOI 10.1007/s10664-015-9388-2
   Mutchler P, 2016, P IEEE MOB SEC TECHN
   Nadkarni A, 2018, P USENIX SEC
   Octeau D, 2016
   Oliveto R, 2019, P MSR
   Papagiannaki K, 2016, P SPRING PAM
   Rinard M., 2015, P ISOC NDSS
   Shao Yuru, 2016, CCS
   Stringhini G, 2017, P ISOC NDSS
   Tiwari A, 2020, J SYST SOFTW, P170
   Wagner P, 2016, INT SYMP INTEGR CIRC
   Wei F, 2014, P ACM CCS
   Wei LL, 2016, IEEE INT CONF AUTOM, P226, DOI 10.1145/2970276.2970312
   Wei T, 2014, BLACK HAT US
   Weng J., 2017, P ACM CCS
   Wu D., 2014, ARXIV14056282
   Wu D, 2018, P ACM C DAT APPL SEC
   Wu Daoyuan, 2019, P ISOC NDSS
   Wu Daoyuan, 2014, P SPRING INF SEC C I
   Wu Daoyuan, 2015, P IEEE MOB SEC TECHN
   Yin H, 2017, P ISOC NDSS
   Zhou Yajin, 2013, P ISOC NDSS
NR 52
TC 2
Z9 2
U1 0
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN 12
PY 2021
VL 26
IS 1
AR 7
DI 10.1007/s10664-020-09897-6
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA PV7VA
UT WOS:000610190100003
DA 2024-07-18
ER

PT J
AU Ebert, F
   Castor, F
   Novielli, N
   Serebrenik, A
AF Ebert, Felipe
   Castor, Fernando
   Novielli, Nicole
   Serebrenik, Alexander
TI An exploratory study on confusion in code reviews
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Code reviews; Confusion; Card sorting; Survey; Systematic mapping study
ID DYNAMICS; MODELS
AB Context Code review is a widely used technique of systematic examination of code changes which aims at increasing software quality. Code reviews provide several benefits for the project, including finding bugs, knowledge transfer, and assurance of adherence to project guidelines and coding style. However, code reviews have a major cost: they can delay the merge of the code change, and thus, impact the overall development process. This cost can be even higher if developers do not understand something, i.e., when developers face confusion during the code review. Objective This paper studies the phenomenon of confusion in code reviews. Understanding confusion is an important starting point to help reducing the cost of code reviews and enhance the effectiveness of this practice, and hence, improve the development process. Method We conducted two complementary studies. The first one aimed at identifying the reasons for confusion in code reviews, its impacts, and the coping strategies developers use to deal with it. Then, we surveyed developers to identify the most frequently experienced reasons for confusion, and conducted a systematic mapping study of solutions proposed for those reasons in the scientific literature. Results From the first study, we build a framework with 30 reasons for confusion, 14 impacts, and 13 coping strategies. The results of the systematic mapping study shows 38 articles addressing the most frequent reasons for confusion. From those articles, we found 13 different solutions for confusion proposed in the literature, and five impacts were established related to the most frequent reasons for confusion. Conclusions Based on the solutions identified in the mapping study, or the lack of them, we propose an actionable guideline for developers on how to cope with confusion during code reviews; we also make several suggestions how tool builders can support code reviews. Additionally, we propose a research agenda for researchers studying code reviews.
C1 [Ebert, Felipe; Serebrenik, Alexander] Eindhoven Univ Technol, Eindhoven, Netherlands.
   Eindhoven Univ Technol, Social Software Engn, Eindhoven, Netherlands.
   [Castor, Fernando] Univ Fed Pernambuco, Informat Ctr, Recife, PE, Brazil.
   [Novielli, Nicole] Univ Bari, Bari, Italy.
C3 Eindhoven University of Technology; Eindhoven University of Technology;
   Universidade Federal de Pernambuco; Universita degli Studi di Bari Aldo
   Moro
RP Ebert, F (corresponding author), Eindhoven Univ Technol, Eindhoven, Netherlands.
EM f.ebert@tue.nl
RI Novielli, Nicole/Y-9583-2019; Castor, Fernando/V-4011-2018
OI Novielli, Nicole/0000-0003-1160-2608; Serebrenik,
   Alexander/0000-0002-1418-0095; Castor, Fernando/0000-0002-6389-3630
CR An L, 2018, ASIA PAC SOFWR ENG, P396, DOI 10.1109/APSEC.2018.00054
   Anderson MJ, 2001, AUSTRAL ECOL, V26, P32, DOI 10.1046/j.1442-9993.2001.01070.x
   [Anonymous], 2006, BEST KEPT SECRETS PE
   [Anonymous], 2003, ALAN APT SERIES
   [Anonymous], 2012, P ACM SIGSOFT 20 INT, DOI DOI 10.1145/2393596.2393656
   [Anonymous], 1993, Constructing Questions for Interviews and Questionnaires. Constructing Questions for Interviews and Questionnaires: Theory and Practice in Social Research, DOI [DOI 10.1017/CBO9780511518201, 10.1017/CBO9780511518201]
   Armour PG, 2000, COMMUN ACM, V43, P17, DOI 10.1145/352183.352194
   Bacchelli A, 2018, IEEE T SOFTWARE ENG, P1, DOI DOI 10.1109/TSE.2018
   Bacchelli A, 2018, P ACM C COMP SUPP CO
   Bacchelli A, 2018, 26 ACM JOINT EUR SOF
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Barik T, 2017, PROC INT CONF SOFTW, P575, DOI 10.1109/ICSE.2017.59
   Barnett M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P134, DOI 10.1109/ICSE.2015.35
   Baum T, 2019, EMPIR SOFTW ENG, V24, P1762, DOI 10.1007/s10664-018-9676-8
   Baum T, 2017, PROC IEEE INT CONF S, P329, DOI 10.1109/ICSME.2017.28
   Baum T, 2016, 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESSES (ICSSP), P26, DOI [10.1145/2904354.2904362, 10.1109/ICSSP.2016.012]
   Bavota G, 2015, PROC IEEE INT CONF S, P81, DOI 10.1109/ICSM.2015.7332454
   Baysal O, 2016, EMPIR SOFTW ENG, V21, P932, DOI 10.1007/s10664-015-9366-8
   Baysal O, 2013, WORK CONF REVERSE EN, P122, DOI 10.1109/WCRE.2013.6671287
   Begel A, 2018, EYE MOVEMENTS IN PROGRAMMING (EMIP 2018), DOI 10.1145/3216723.3216727
   Begel A, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P12, DOI 10.1145/2568225.2568233
   Boehm B, 2001, COMPUTER, V34, P135, DOI 10.1109/2.962984
   Bosu A, 2017, IEEE T SOFTWARE ENG, V43, P56, DOI 10.1109/TSE.2016.2576451
   Bosu A, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P257, DOI 10.1145/2635868.2635880
   Calefato F, 2019, EMPIR SOFTW ENG, V24, P854, DOI 10.1007/s10664-018-9642-5
   Catolino G, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.2156
   CLARKE KR, 1993, AUST J ECOL, V18, P117, DOI 10.1111/j.1442-9993.1993.tb00438.x
   Coelho F, 2019, 2019 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON REFACTORING (IWOR 2019), P63, DOI 10.1109/IWoR.2019.00019
   D'Mello S, 2014, ACTA PSYCHOL, V151, P106, DOI 10.1016/j.actpsy.2014.06.005
   D'Mello S, 2014, LEARN INSTR, V29, P153, DOI 10.1016/j.learninstruc.2012.05.003
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Ebert F., 2018, ICSME
   Ebert F, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P49, DOI [10.1109/SANER.2019.8668024, 10.1109/saner.2019.8668024]
   Ebert F, 2017, PROC IEEE INT CONF S, P549, DOI 10.1109/ICSME.2017.40
   El Zanaty F, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3239525
   FAGAN ME, 1976, IBM SYST J, V15, P182, DOI 10.1147/sj.153.0182
   Faragó C, 2015, ACTA CYBERN, V22, P35, DOI 10.14232/actacyb.22.1.2015.4
   Feng Zhang, 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P225, DOI 10.1109/WCRE.2012.32
   Finfgeld-Connett D, 2014, QUAL RES, V14, P341, DOI 10.1177/1468794113481790
   Gerede ÇE, 2018, TURK J ELECTR ENG CO, V26, P1343, DOI 10.3906/elk-1707-173
   German DM, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P523, DOI 10.1145/3180155.3180217
   Glaser B. G., 1967, DISCOVERY GROUNDED T, DOI 10.1515/9783111660211/html
   Gopstein D, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P129, DOI 10.1145/3106237.3106264
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   Graziotin D, 2017, ARXIV17120834 CORR
   Greiler M, 2016, 10 INT C QUAL INF CO
   Groves Robert., 2009, SURV METHODOL, V2nd, P217
   Guo B, 2019, J COMPUT SCI TECH-CH, V34, P416, DOI 10.1007/s11390-019-1917-9
   Guo B, 2017, P INT COMP SOFTW APP, P118, DOI 10.1109/COMPSAC.2017.153
   Hamasaki K, 2013, IEEE WORK CONF MIN S, P49, DOI 10.1109/MSR.2013.6624003
   Hellendoorn VJ, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P157, DOI 10.1109/MSR.2015.22
   Hentschel M, 2016, LECT NOTES COMPUT SC, V9681, P3, DOI 10.1007/978-3-319-33693-0_1
   Huang Y, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P770, DOI 10.1145/3236024.3264841
   Huang Y, 2018, PROC IEEE ACM INT C, P260, DOI 10.1145/3183440.3194960
   Izquierdo-Cortazar D., 2017, P 21 INT C EV ASS SO, P214, DOI DOI 10.1145/3084226.3084247
   Jean P. -A., 2016, INT C WEB INT MIN SE
   Jordan ME, 2012, DISCOURSE PROCESS, V49, P660, DOI 10.1080/0163853X.2012.722851
   Kitchenham B., 2007, 23 EBSE, DOI DOI 10.1145/1134285.1134500
   Kitchenham BA, 2008, Guide to advanced empirical software engineering, P63, DOI [DOI 10.1007/978-1-84800-044-5_3, 10.1007/ 978-1-84800-044-5_3]
   Kononenko O, 2015, PROC IEEE INT CONF S, P111, DOI 10.1109/ICSM.2015.7332457
   Konopka M, 2015, 2015 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON CONTEXT FOR SOFTWARE DEVELOPMENT, P13, DOI 10.1109/CSD.2015.10
   LaToza T. D., 2006, 28th International Conference on Software Engineering Proceedings, P492, DOI 10.1145/1134285.1134355
   Lee A, 2017, PROC INT CONF SOFTW, P187, DOI 10.1109/ICSE.2017.25
   Freire VDL, 2018, LECT NOTES COMPUT SC, V10706, P255, DOI 10.1007/978-3-319-73117-9_18
   MacLeod L, 2018, IEEE SOFTWARE, V35, P34, DOI 10.1109/MS.2017.265100500
   Maia PH, 2019, 2019 IEEE 19 INT WOR
   Mäntylä MV, 2009, IEEE T SOFTWARE ENG, V35, P430, DOI 10.1109/TSE.2008.71
   McArdle BH, 2001, ECOLOGY, V82, P290, DOI 10.1890/0012-9658(2001)082[0290:FMMTCD]2.0.CO;2
   McIntosh S, 2016, EMPIR SOFTW ENG, V21, P2146, DOI 10.1007/s10664-015-9381-9
   Mishra Rahul, 2014, 2014 IEEE 4th Workshop on Mining Unstructured Data (MUD), P11, DOI 10.1109/MUD.2014.11
   Mohamed A, 2018, ASIA PAC SOFWR ENG, P375, DOI 10.1109/APSEC.2018.00052
   Morales R, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P171, DOI 10.1109/SANER.2015.7081827
   Mukadam M, 2013, IEEE WORK CONF MIN S, P45, DOI 10.1109/MSR.2013.6624002
   Norikane T, 2018, 2018 IEEE/ACIS 3RD INTERNATIONAL CONFERENCE ON BIG DATA, CLOUD COMPUTING, DATA SCIENCE & ENGINEERING (BCD 2018), P109, DOI 10.1109/BCD2018.2018.00028
   Norikane T, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P571, DOI 10.1109/SANER.2017.7884682
   Palomba F, 2018, PROC IEEE ACM INT C, P240, DOI 10.1145/3183440.3194950
   Palomba F, 2015, IEEE T SOFTWARE ENG, V41, P462, DOI 10.1109/TSE.2014.2372760
   Pangsakulyanont T, 2014, INT WORKSH EMPIR ENG, P49, DOI 10.1109/IWESEP.2014.11
   Pascarella L, 2019, J SYST SOFTWARE, V150, P22, DOI 10.1016/j.jss.2018.12.001
   Petersen K, 2008, 12 INT C EV ASS SOFT, P1, DOI 10.5555/2227115.2227123
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Qiu HS, 2019, PROC INT CONF SOFTW, P688, DOI 10.1109/ICSE.2019.00078
   Rigby PC, 2013, P 2013 9 JOINT M FDN, P202, DOI DOI 10.1145/2491411.2491444
   Rigby PC, 2011, THESIS U VICTORIA VI
   Rigby PC, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P541, DOI 10.1145/1985793.1985867
   Rigby PC, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P541
   Rose T, 2018, ICSE SEIP 18 ACM NEW, P124, DOI [10.1145/3183519.3183542, DOI 10.1145/3183519.3183542]
   Sadowski C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P181, DOI 10.1145/3183519.3183525
   Schettino VJ, 2019, P 21 IB C SOFTW ENG, P558
   SCOTT AJ, 1974, BIOMETRICS, V30, P507, DOI 10.2307/2529204
   Singer J, 2002, IEEE T SOFTWARE ENG, V28, P1171, DOI 10.1109/TSE.2002.1158289
   STEELE CM, 1995, J PERS SOC PSYCHOL, V69, P797, DOI 10.1037/0022-3514.69.5.797
   Stol KJ, 2016, PROC INT CONF SOFTW, P120, DOI 10.1145/2884781.2884833
   Sutherland A, 2009, PROC INT CONF SOFTW, P259, DOI 10.1109/ICSE-COMPANION.2009.5070996
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Tao Y, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P180, DOI 10.1109/MSR.2015.24
   Thompson Christopher, 2017, P 13 INT C PREDICTIV, P83
   Thongtanunam P, 2014, PROC IEEE INT CONF S, P605, DOI 10.1109/ICSME.2014.106
   TICHY WF, 1985, SOFTWARE PRACT EXPER, V15, P637, DOI 10.1002/spe.4380150703
   Uwano Hidetake, 2006, Eye tracking research applications, P133, DOI DOI 10.1145/1117309.1117357
   van Wesel P, 2017, PROC IEEE INT CONF S, P544, DOI 10.1109/ICSME.2017.25
   Vasilescu B, 2015, CHI 2015: PROCEEDINGS OF THE 33RD ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P3789, DOI 10.1145/2702123.2702549
   Vasilescu B, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING CHASE 2015, P50, DOI 10.1109/CHASE.2015.14
   Wang C, 2017, ASIA PAC SOFWR ENG, P564, DOI 10.1109/APSEC.2017.66
   Wang J, 2015, INFORM SOFTWARE TECH, V67, P1, DOI 10.1016/j.infsof.2015.06.002
   Wiegers Karl Eugene, 2002, Peer reviews in software: A practical guide
   Yang D., 2015, P 2 2015 ACM C LEARN, P121, DOI DOI 10.1145/2724660.2724677
   Yang LM, 2017, IEEE GLOB COMM CONF
   Yang X, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P460, DOI [10.1145/2901739.2903504, 10.1109/MSR.2016.054]
   Zhang TY, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P111, DOI 10.1109/ICSE.2015.33
   Zimmermann T, 2016, CARD SORTING TEXT TH, P137, DOI [10.1016/B978-0-12-804206-9.00027-1, DOI 10.1016/B978-0-12-804206-9.00027-1]
NR 111
TC 18
Z9 18
U1 1
U2 13
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN
PY 2021
VL 26
IS 1
AR 12
DI 10.1007/s10664-020-09909-5
PG 48
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA PY9LG
UT WOS:000612361500001
OA hybrid
DA 2024-07-18
ER

PT J
AU Biorn-Hansen, A
   Rieger, C
   Gronli, TM
   Majchrzak, TA
   Ghinea, G
AF Biorn-Hansen, Andreas
   Rieger, Christoph
   Gronli, Tor-Morten
   Majchrzak, Tim A.
   Ghinea, Gheorghita
TI An empirical investigation of performance overhead in cross-platform
   mobile development frameworks
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Cross-platform development; Mobile app; Performance benchmark;
   Development approaches
ID APP DEVELOPMENT
AB The heterogeneity of the leading mobile platforms in terms of user interfaces, user experience, programming language, and ecosystem have made cross-platform development frameworks popular. These aid the creation of mobile applications -apps- that can be executed across the target platforms (typically Android and iOS) with minimal to no platform-specific code. Due to the cost- and time-saving possibilities introduced through adopting such a framework, researchers and practitioners alike have taken an interest in the underlying technologies. Examining the body of knowledge, we, nonetheless, frequently encounter discussions on the drawbacks of these frameworks, especially with regard to the performance of the apps they generate. Motivated by the ongoing discourse and a lack of empirical evidence, we scrutinised the essential piece of the cross-platform frameworks: the bridge enabling cross-platform code to communicate with the underlying operating system and device hardware APIs. The study we present in the article benchmarks and measures the performance of this bridge to reveal its associated overhead in Android apps. The development of the artifacts for this experiment was conducted using five cross-platform development frameworks to generate Android apps, in addition to a baseline native Android app implementation. Our results indicate that - for Android apps - the use of cross-platform frameworks for the development of mobile apps may lead to decreased performance compared to the native development approach. Nevertheless, certain cross-platform frameworks can perform equally well or even better than native on certain metrics which highlights the importance of well-defined technical requirements and specifications for deliberate selection of a cross-platform framework or overall development approach.
C1 [Biorn-Hansen, Andreas; Gronli, Tor-Morten; Ghinea, Gheorghita] Kristiania Univ Coll, Mobile Technol Lab, Oslo, Norway.
   [Biorn-Hansen, Andreas] Brunel Univ, Dept Comp Sci, London, England.
   [Ghinea, Gheorghita] Brunel Univ, Dept Comp Sci, Mulsemedia Comp, London, England.
   [Rieger, Christoph] Univ Munster, Munster, Germany.
   [Majchrzak, Tim A.] Univ Agder, Kristiansand, Norway.
C3 Kristiania University College; Brunel University; Brunel University;
   University of Munster; University of Agder
RP Biorn-Hansen, A (corresponding author), Kristiania Univ Coll, Mobile Technol Lab, Oslo, Norway.; Biorn-Hansen, A (corresponding author), Brunel Univ, Dept Comp Sci, London, England.
EM andreas.biorn-hansen@kristiania.no; christoph.rieger@uni-muenster.de;
   tor-morten.gronli@kristiania.no; timam@uia.no;
   george.ghinea@brunel.ac.uk
RI Ghinea, Gheorghita/AAG-6770-2020
OI Ghinea, Gheorghita/0000-0003-2578-5580
CR Abousaleh M, 2014, INT CON ADV INFO NET, P202, DOI 10.1109/AINA.2014.29
   Ahti V, 2016, COMPUTER SYSTEMS AND TECHNOLOGIES, COMPSYSTECH'16, P41, DOI 10.1145/2983468.2983484
   *ANDR, 2019, FREE ANDR MARK DAT H
   ANGULO E, 2014, P 15 INT C HUM COMP
   Angulo Esteban., 2014, Proceedings of the XV International Conference on Human Computer Interaction, page, P27
   [Anonymous], 2015, OPEN J INF SYST
   [Anonymous], NUMB SMARTPH US WORL
   ANTEBI O, 2012, MOBILE COMPUTING APP, V95, P283
   *APPBRAIN, 2019, ANDR APP FRAM
   ARCHIBALD J, 2016, INSTANT LOADING BUIL
   Bai JY, 2019, IEEE T INF FOREN SEC, V14, P677, DOI 10.1109/TIFS.2018.2855650
   Biorn-Hansen Andreas, 2018, Web Information Systems and Technologies. 13th International Conference, WEBIST 2017. Revised Selected Papers.Lecture Notes in Business Information Processing (LNBIP 322), P64, DOI 10.1007/978-3-319-93527-0_4
   Biorn-Hansen A, 2019, WIREL COMMUN MOB COM, DOI 10.1155/2019/5743892
   Biorn-Hansen A, 2018, PROCEEDINGS OF THE 51ST ANNUAL HAWAII INTERNATIONAL CONFERENCE ON SYSTEM SCIENCES (HICSS), P5717
   Biorn-Hansen A, 2019, ACM COMPUT SURV, V51, DOI 10.1145/3241739
   Biorn-Hansen A, 2017, WEBIST: PROCEEDINGS OF THE 13TH INTERNATIONAL CONFERENCE ON WEB INFORMATION SYSTEMS AND TECHNOLOGIES, P344, DOI 10.5220/0006353703440351
   *BIZN APPS, 2019, MOB APP MAK BIZN APP
   Botella F, 2016, PROCEEDINGS OF THE XVII INTERNATIONAL CONFERENCE ON HUMAN COMPUTER INTERACTION INTERACCION 2016, DOI 10.1145/2998626.2998648
   *BUBBL GROUP, 2019, BUBBL VIS PROGR
   Ciman Matteo, 2014, 10th International Conference on Web Information Systems and Technologies (WEBIST 2014). Proceedings, P423
   CIMAN M, 2014, P ACM S APPL COMP
   Ciman M, 2017, PERVASIVE MOB COMPUT, V39, P214, DOI 10.1016/j.pmcj.2016.10.004
   Ciman M, 2015, LECT NOTES BUS INF P, V226, P331, DOI 10.1007/978-3-319-27030-2_21
   Corbalan L., 2019, P C CLOUD COMPUTING, P125
   Corbalan L, 2018, 2018 IEEE/ACM 5TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT), P191, DOI 10.1145/3197231.3197242
   Corral L, 2012, PROCEDIA COMPUT SCI, V10, P736, DOI 10.1016/j.procs.2012.06.094
   CRUZ L, 2019, IEEE T SOFTWARE ENG, V12
   Dalmasso I, 2013, INT WIREL COMMUN, P323, DOI 10.1109/IWCMC.2013.6583580
   Delia L, 2017, 2017 COMPUTING CONFERENCE, P652, DOI 10.1109/SAI.2017.8252165
   Dhillon S, 2015, SOFTWARE PRACT EXPER, V45, P1331, DOI 10.1002/spe.2286
   El-Kassas WS, 2017, AIN SHAMS ENG J, V8, P163, DOI 10.1016/j.asej.2015.08.004
   El-Kassas WS, 2016, IEEE T SOFTWARE ENG, V42, P1036, DOI 10.1109/TSE.2016.2543223
   *FAC INC, 2019, GETT START REACT NAT
   Ferreira CMS, 2018, IEEE LAT AM T, V16, P1206, DOI 10.1109/TLA.2018.8362158
   *FLUTT DEV, 2019, FLUTT FAQ
   Golovin D., 2017, Outsystems as a rapid application development platform for mobile and web applications
   *GOOGL LLC, 2018, DISTR DASHB
   *GOOGL LLC, 2019, BUILD NEXT BILL US
   *GOOGL LLC, 2019, BENCHM APP COD
   *GOOGL LLC, 2019, DATETIME CLASS DART
   *GOOGL LLC, 2019, PROF DEB PREB APKS
   Gronli TM, 2014, INT CON ADV INFO NET, P635, DOI 10.1109/AINA.2014.78
   Heitkötter H, 2013, LECT NOTES COMPUT SC, V7939, P405
   Heitkötter H, 2013, LECT NOTES BUS INF P, V140, P120
   Heitkotter Henning, 2012, Proceedings of the 8th International Conference on Web Information Systems and Technologies. WEBIST 2012, P299
   Heitkotter Henning, 2013, P 28 ANN ACM S APPL, P526
   HUDLI A, 2015, P 3 MOBILEDELI
   Humayoun Shah Rukh, 2013, Human-Computer Interaction. Human-Centred Design Approaches, Methods, Tools, and Environments. 15th International Conference, HCI International 2013. Proceedings. LNCS 8004, P371, DOI 10.1007/978-3-642-39232-0_41
   Jansen S, 2013, LECT NOTES BUS INF P, V150, P195
   Jia XP, 2018, 2018 IEEE/ACM 5TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT), P92, DOI 10.1145/3197231.3197252
   Joorabchi Mona Erfani, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P15, DOI 10.1109/ESEM.2013.9
   Katevas K, 2016, INT CONF INTEL ENVIR, P222, DOI 10.1109/IE.2016.50
   Kirk RE, 1996, EDUC PSYCHOL MEAS, V56, P746, DOI 10.1177/0013164496056005002
   KROMER L, 2016, CEUR WORKSHOP P, V1734, P47
   Lachgar M, 2017, INT J ADV COMPUT SC, V8, P110
   Latif M., 2016, 2016 International Conference on Information Technology for Organizations Development (IT4OD), P1, DOI [DOI 10.1109/IT4OD.2016.7479278, 10.1109/IT4OD.2016.7479278]
   Latif M.Y., 2017, 2017 INT SMART CITIE, P1, DOI [10.1109/ISC2.2017.8090870, DOI 10.1109/ISC2.2017.8090870]
   Latif M, 2016, 2016 INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY FOR ORGANIZATIONS DEVELOPMENT (IT4OD)
   Li L, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P153, DOI 10.1145/3213846.3213857
   LYNCH M, 2018, TESTING GEOLOCATION
   Macedonia M, 2007, COMPUTER, V40, P94, DOI 10.1109/MC.2007.212
   Majchrzak TA, 2014, LECT NOTES BUS INF P, V189, P189, DOI 10.1007/978-3-662-44300-2_12
   Malavolta Ivano, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P35, DOI 10.1109/MOBILESoft.2017.7
   MCPHERSON D, 2019, TOWNSKE APP REACT NA
   MERCADO IT, 2016, WAMA 2016
   Mutti Simone., 2015, Proceedings of the 31st Annual Computer Security Applications Conference, P71
   NELSON R, 2018, GLOBAL APP REVENUE G
   Noei E, 2017, EMPIR SOFTW ENG, V22, P3088, DOI 10.1007/s10664-017-9507-3
   Ohrt J, 2012, COMPUTER, V45, P72, DOI 10.1109/MC.2012.121
   *OPENSIGNAL, 2015, TECH REP
   Palmieri Manuel, 2012, 2012 16th International Conference on Intelligence in Next Generation Networks (ICIN 2012): Realising the Power of the Network, P179, DOI 10.1109/ICIN.2012.6376023
   PERCHAT J, 2014, J COMPUT SCI, V10, P2164
   Que PX, 2016, 2016 8TH INTERNATIONAL CONFERENCE ON COMPUTATIONAL INTELLIGENCE AND COMMUNICATION NETWORKS (CICN), P611, DOI 10.1109/CICN.2016.125
   Ribeiro A, 2012, 2012 EIGHTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY (QUATIC 2012), P255, DOI 10.1109/QUATIC.2012.56
   Rieger Christoph, 2018, Web Information Systems and Technologies. 13th International Conference, WEBIST 2017. Revised Selected Papers.Lecture Notes in Business Information Processing (LNBIP 322), P202, DOI 10.1007/978-3-319-93527-0_10
   Rieger C, 2019, J SYST SOFTWARE, V153, P175, DOI 10.1016/j.jss.2019.04.001
   Rieger C, 2018, COMPUT LANG SYST STR, V53, P43, DOI 10.1016/j.cl.2018.01.001
   Rieger C, 2016, LECT NOTES BUS INF P, V264, P18, DOI 10.1007/978-3-319-46642-2_2
   ROSLER F, 2014, RESEARCHGATE
   Scalabrino Simone, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P288, DOI 10.1109/MSR.2019.00055
   SEIDEL E, 2018, HOT UPDATE OUT BAND
   Singh G., 2017, Android App Performance Optimization
   SOMMER A, 2013, LNI P, V215
   *STACK EXCH INC, 2019, STACK OV TRENDS
   Stahl T., 2006, Model-driven software development: technology, engineering, management
   *STAT INC, 2018, GLOB APP EC SIZ 2021
   *STAT INC, 2018, GLOB MOB OS MARK SHA
   Tang W, 2011, PROCEDIA ENVIRON SCI, V11, P499, DOI 10.1016/j.proenv.2011.12.079
   THEROX O, 2019, REACT NATIVE ARTSY 3
   Viennot N., 2014, 2014 ACM INT C MEAS, P221, DOI DOI 10.1145/2637364.2592003
   *W3C, 2018, HIGH RES TIM LEV 2
   Wei LL, 2016, IEEE INT CONF AUTOM, P226, DOI 10.1145/2970276.2970312
   Willocx M, 2016, 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2016), P38, DOI [10.1145/2897073.2897092, 10.1109/MobileSoft.2016.028]
   Willocx M, 2015, IEEE INT CONF MO, P454, DOI [10.1109/MobServ.2015.68, 10.1109/MS.2015.68]
   WITZ K, 1990, J EDUC STAT, V15, P84
   2015, APPLAUSE
NR 96
TC 15
Z9 17
U1 3
U2 19
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2020
VL 25
IS 4
BP 2997
EP 3040
DI 10.1007/s10664-020-09827-6
EA JUN 2020
PG 44
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MD8CQ
UT WOS:000539663100001
OA hybrid
DA 2024-07-18
ER

PT J
AU Vegas, S
   Riofrío, P
   Marcos, E
   Juristo, N
AF Vegas, Sira
   Riofrio, Patricia
   Marcos, Esperanza
   Juristo, Natalia
TI On (Mis)perceptions of testing effectiveness: an empirical study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Developers perceptions; Testing technique effectiveness; Software
   testing
ID SOFTWARE; SELECTION; PERSONALITY; AGREEMENT
AB A recurring problem in software development is incorrect decision making on the techniques, methods and tools to be used. Mostly, these decisions are based on developers' perceptions about them. A factor influencing people's perceptions is past experience, but it is not the only one. In this research, we aim to discover how well the perceptions of the defect detection effectiveness of different techniques match their real effectiveness in the absence of prior experience. To do this, we conduct an empirical study plus a replication. During the original study, we conduct a controlled experiment with students applying two testing techniques and a code review technique. At the end of the experiment, they take a survey to find out which technique they perceive to be most effective. The results show that participants' perceptions are wrong and that this mismatch is costly in terms of quality. In order to gain further insight into the results, we replicate the controlled experiment and extend the survey to include questions about participants' opinions on the techniques and programs. The results of the replicated study confirm the findings of the original study and suggest that participants' perceptions might be based not on their opinions about complexity or preferences for techniques but on how well they think that they have applied the techniques.
C1 [Vegas, Sira; Riofrio, Patricia; Juristo, Natalia] Univ Politecn Madrid, Madrid, Spain.
   [Marcos, Esperanza] Univ Rey Juan Carlos, Madrid, Spain.
C3 Universidad Politecnica de Madrid; Universidad Rey Juan Carlos
RP Vegas, S (corresponding author), Univ Politecn Madrid, Madrid, Spain.
EM svegas@fi.upm.es
RI Martinez, Esperanza Marcos/JCE-5935-2023; Martinez, Esperanza
   Marcos/AAS-8564-2021; VEGAS, SIRA/R-6742-2018
OI VEGAS, SIRA/0000-0001-8535-9386; Marcos, Esperanza/0000-0003-2666-9995
FU Spanish Ministry of Science, Innovation and Universities
   [PGC2018-097265-B-I00]; Regional Government of Madrid, under the
   FORTE-CM project [S2018/TCS-4314]; Spanish Ministry of Economy and
   Business, under the MADRID project [TIN2017-88557-R]
FX This research was funded by Spanish Ministry of Science, Innovation and
   Universities research grant PGC2018-097265-B-I00, the Regional
   Government of Madrid, under the FORTE-CM project (S2018/TCS-4314) and
   the Spanish Ministry of Economy and Business, under the MADRID project
   (TIN2017-88557-R).
CR Altman D, 1991, PRACTIAL STAT MED RE
   [Anonymous], 1990, Software testing techniques {
   AURUM A, 2002, P REQ ENG SOFTW QUAL
   Banerjee M, 1999, CAN J STAT, V27, P3, DOI 10.2307/3315487
   Basili V. R., 1996, Empirical Software Engineering, V1, P133, DOI 10.1007/BF00368702
   BASILI VR, 1987, IEEE T SOFTWARE ENG, V13, P1278, DOI 10.1109/TSE.1987.232881
   Bhattacharya P., 2012, THESIS
   BIEMAN JM, 1992, SOFTWARE ENG J, V7, P43, DOI 10.1049/sej.1992.0005
   Biffl S, 2000, SEVENTH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P136, DOI 10.1109/APSEC.2000.896692
   Briand LC, 2004, IEEE T SOFTWARE ENG, V30, P770, DOI 10.1109/TSE.2004.79
   Capretz LF, 2015, COMPUT HUM BEHAV, V52, P373, DOI 10.1016/j.chb.2015.05.050
   Cotroneo D, 2013, J SYST SOFTWARE, V86, P1613, DOI 10.1016/j.jss.2013.02.020
   Deak A, 2012, P INT COMP SOFTW APP, P438, DOI 10.1109/COMPSAC.2012.103
   Devanbu P, 2016, PROC INT CONF SOFTW, P108, DOI 10.1145/2884781.2884812
   Dias-Neto A, 2016, SOFTW QUAL J, P1
   Dias-Neto AC, 2014, IEEE T SOFTWARE ENG, V40, P1025, DOI 10.1109/TSE.2014.2312915
   Dieste O, 2017, EMPIR SOFTW ENG, V22, P2457, DOI 10.1007/s10664-016-9471-3
   Dunsmore A, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P47, DOI 10.1109/ICSE.2002.1007955
   Dyba T, 2005, IEEE SOFTWARE, V22, P58, DOI 10.1109/MS.2005.6
   EVERITT BS, 2000, MONOGRAPHS STAT APPL, V45
   Falessi D, 2018, EMPIR SOFTW ENG, V23, P452, DOI 10.1007/s10664-017-9523-3
   Fleiss J.L., 2013, Statistical Methods for Rates and Proportions
   Garousi V., 2017, P 21 INT C EV ASS SO, P65
   Goncalves W. F., 2017, P 2017 12 IB C INF S, P1, DOI DOI 10.23919/CISTI.2017.7975873
   Guaiani F, 2015, SECOND INTERNATIONAL WORKSHOP ON CROWDSOURCING IN SOFTWARE ENGINEERING CSI-SE 2015, P32, DOI 10.1109/CSI-SE.2015.14
   Hayes AF, 2007, COMMUN METHODS MEAS, V1, P77, DOI 10.1080/19312450709336664
   Hutchins M., 1994, ICSE-16. 16th International Conference on Software Engineering (Cat. No.94CH3409-0), P191, DOI 10.1109/ICSE.1994.296778
   Jedlitschka A, 2014, EMPIR SOFTW ENG, V19, P1921, DOI 10.1007/s10664-013-9268-6
   Kamsties E, 1995, P 5 EUR SOFTW ENG C, P84
   Kanij T, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING CHASE 2015, P1, DOI 10.1109/CHASE.2015.7
   Khan T, 2010, EUR MED MIDDL E C IN
   Kocaguneli Ekrem, 2009, Proceedings 21st International Conference on Software Engineering & Knowledge Engineering (SEKE 2009), P637
   Kosti MV, 2014, INFORM SOFTWARE TECH, V56, P973, DOI 10.1016/j.infsof.2014.03.004
   Kuehl R.O., 2000, Design of experiments: statistical principles of research designand analysis, V2nd
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Linger R.C., 1979, SYSTEMS PROGRAMMING
   Maldonado JC, 2006, EMPIR SOFTW ENG, V11, P119, DOI 10.1007/s10664-006-5967-6
   Massey AK, 2015, IEEE T SOFTWARE ENG, V41, P545, DOI 10.1109/TSE.2014.2383374
   Myers G J., 2004, The Art of Software Testing, V2nd ed.
   MYERS GJ, 1978, COMMUN ACM, V21, P760, DOI 10.1145/359588.359602
   Octaviano FR, 2015, EMPIR SOFTW ENG, V20, P1898, DOI 10.1007/s10664-014-9342-8
   Offutt A. J., 1996, ACM Transactions on Software Engineering and Methodology, V5, P99, DOI 10.1145/227607.227610
   OFFUTT AJ, 1994, IEEE T SOFTWARE ENG, V20, P337, DOI 10.1109/32.286422
   Perez Renteria y Hernandez Tabata, 2014, Proceedings of the 9th International Conference on Software Engineering and Applications ICSOFT-EA 2014, P305
   PORTER AA, 1995, IEEE T SOFTWARE ENG, V21, P563, DOI 10.1109/32.391380
   Roper M, 1997, INFORM SOFTWARE TECH, V39, P763, DOI 10.1016/S0950-5849(97)00028-1
   Shull FJ, 2008, EMPIR SOFTW ENG, V13, P211, DOI 10.1007/s10664-008-9060-1
   Thelin T, 2004, EMPIR SOFTW ENG, V9, P77, DOI 10.1023/B:EMSE.0000013515.86806.d4
   Vegas S, 2005, EMPIR SOFTW ENG, V10, P437, DOI 10.1007/s10664-005-3862-1
   Vegas S, 2009, IEEE T SOFTWARE ENG, V35, P551, DOI 10.1109/TSE.2009.13
   WEYUKER EJ, 1984, INFORM PROCESS LETT, V19, P103, DOI 10.1016/0020-0190(84)90106-6
   Wohlin C., 2014, EXPT SOFTWARE ENG IN
   WONG WE, 1995, SOFTWARE QUAL J, V4, P69, DOI 10.1007/BF00404650
   Zapf A, 2016, BMC MED RES METHODOL, V16, DOI 10.1186/s12874-016-0200-9
   Zelkowitz M.V., 2003, Lecture Notes on Empirical Software Engineering, P229
NR 55
TC 1
Z9 1
U1 0
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2020
VL 25
IS 4
BP 2844
EP 2896
DI 10.1007/s10664-020-09805-y
EA MAY 2020
PG 53
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MD8CQ
UT WOS:000530972900001
DA 2024-07-18
ER

PT J
AU Robert, C
   Sotiropoulos, T
   Waeselynck, H
   Guiochet, J
   Vernhes, S
AF Robert, Clement
   Sotiropoulos, Thierry
   Waeselynck, Helene
   Guiochet, Jeremie
   Vernhes, Simon
TI The virtual lands of Oz: testing an agribot in simulation
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Testing; Software in the loop (SIL) simulation; World generation;
   Autonomous robot; Agriculture robot; Industrial case study
AB Testing autonomous robots typically requires expensive test campaigns in the field. To alleviate them, a promising approach is to perform intensive tests in virtual environments. This paper presents an industrial case study on the feasibility and effectiveness of such an approach. The subject system is Oz, an agriculture robot for autonomous weeding. Its software was tested with weeding missions in virtual crop fields, using a 3D simulator based on Gazebo. The case study faced several challenges: the randomized generation of complex 3D environments, the automated checking of the robot behavior (test oracle), and the imperfect fidelity of simulation with respect to real-world behavior. We describe the test approach we developed, and compare the results with the ones of the industrial field tests. Despite the low-fidelity physics of the robot, the virtual tests revealed most software issues found in the field, including a major one that caused the majority of failures; they also revealed a new issue missed in the field. On the downside, the simulation could introduce spurious failures that would not occur in the real world.
C1 [Robert, Clement; Sotiropoulos, Thierry; Waeselynck, Helene; Guiochet, Jeremie] Univ Toulouse, UPS, CNRS, LAAS, Toulouse, France.
   [Vernhes, Simon] Naio Technol, Toulouse, France.
C3 Universite de Toulouse; Universite Toulouse III - Paul Sabatier; Centre
   National de la Recherche Scientifique (CNRS)
RP Waeselynck, H (corresponding author), Univ Toulouse, UPS, CNRS, LAAS, Toulouse, France.
EM clement.robert@laas.fr; thierry.sotiropoulos@gmail.com;
   Helene.Waeselynck@laas.fr; jeremie.guiochet@laas.fr;
   simon@naio-technologies.com
RI GUIOCHET, Jeremie/AAE-3333-2020
OI GUIOCHET, Jeremie/0000-0002-1285-8974; Waeselynck,
   Helene/0009-0007-3103-9329
FU European Union [644400]
FX This work has received funding from the European Union's Horizon 2020
   research and innovation programme under grant agreement No 644400 (CPSE
   Labs project). The authors want to acknowledge the help of colleagues at
   Naio during the study: Gaetan Severac, Pascal Schmidt, Marc Jambert.
CR Andrews A, 2016, PROCEEDINGS OF THE 4TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT (MODELSWARD 2016), P663
   [Anonymous], 2018, PRESCAN SIMULATION P
   [Anonymous], 2018, UNREAL GAME ENGINE
   [Anonymous], 2018, VIRTUAL TEST DRIVE
   Bach J, 2017, INT ICE CONF ENG, P203, DOI 10.1109/ICE.2017.8279890
   Ben Abdessalem R, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1016, DOI 10.1145/3180155.3180160
   Ben Abdessalem R, 2016, IEEE INT CONF AUTOM, P63, DOI 10.1145/2970276.2970311
   Chen TY, 2015, 10TH INTERNATIONAL WORKSHOP ON AUTOMATION OF SOFTWARE TEST AST 2015, P53, DOI 10.1109/AST.2015.18
   Echeverria G, 2011, IEEE INT CONF ROBOT
   Geyer S, 2014, IET INTELL TRANSP SY, V8, P183, DOI 10.1049/iet-its.2012.0188
   Hallerbach Sven, 2018, SAE International Journal of Connected and Automated Vehicles, P93, DOI 10.4271/2018-01-1066
   Klück F, 2018, IEEE INT SYMP SOFTW, P118, DOI 10.1109/ISSREW.2018.00-20
   Koenig N., 2004, 2004 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS) (IEEE Cat. No.04CH37566), P2149
   Lamprecht A, 2010, ADVANCED MICROSYSTEMS FOR AUTOMOTIVE APPLICATIONS 2010: SMART SYSTEMS FOR GREEN CARS AND SAFE MOBILITY, P377, DOI 10.1007/978-3-642-16362-3_36
   Lindvall M, 2017, 2017 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON METAMORPHIC TESTING (MET 2017), P35, DOI 10.1109/MET.2017.6
   Menghi C, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P27, DOI 10.1145/3338906.3338920
   Micskei Zoltan, 2012, Agent and Multi-Agent Systems. Technologies and Applications. Proceedings 6th KES International Conference, KES-AMSTA 2012, P504, DOI 10.1007/978-3-642-30947-2_55
   Nentwig M., 2010, 2010 13th International IEEE Conference on Intelligent Transportation Systems (ITSC 2010), P1307, DOI 10.1109/ITSC.2010.5625005
   Nguyen Cu D., 2009, Proceedings of The 8th International Conference on Autonomous Agents and Multiagent Systems - Volume 1, P521
   Roehm D, 2013, HIGH PERFORMANCE COMPUTING IN SCIENCE AND ENGINEERING'13: TRANSACTIONS OF THE HIGH PERFORMANCE COMPUTING CENTER, STUTTGART (HLRS) 2013, P33, DOI 10.1007/978-3-319-02165-2_3
   Sotiropoulos T, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P150, DOI 10.1109/QRS.2017.25
   Sotiropoulos T, 2016, 2016 12TH EUROPEAN DEPENDABLE COMPUTING CONFERENCE (EDCC 2016), P153, DOI 10.1109/EDCC.2016.14
   Tian YC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P303, DOI 10.1145/3180155.3180220
   Timperley CS, 2018, IEEE INT CONF SOFTW, P331, DOI 10.1109/ICST.2018.00040
   Togelius J, 2011, IEEE T COMP INTEL AI, V3, P172, DOI 10.1109/TCIAIG.2011.2148116
   Tractica, 2016, RES REPORT
   Ulbrich S, 2015, IEEE INT C INTELL TR, P982, DOI 10.1109/ITSC.2015.164
   Zendel O, 2013, IEEE INT S ROB ISR 2, P1
   Zendel O, 2017, INT J COMPUT VISION, V125, P95, DOI 10.1007/s11263-017-1020-z
   Zhao XT, 2018, DISABIL SOC, V33, P132, DOI 10.1080/09687599.2017.1375246
   Zofka MR, 2015, 2015 18TH INTERNATIONAL CONFERENCE ON INFORMATION FUSION (FUSION), P1422
   Zou XY, 2014, LECT NOTES COMPUT SC, V8666, P33, DOI 10.1007/978-3-319-10506-2_3
NR 32
TC 9
Z9 9
U1 5
U2 11
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAY
PY 2020
VL 25
IS 3
SI SI
BP 2025
EP 2054
DI 10.1007/s10664-020-09800-3
EA FEB 2020
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LL7FD
UT WOS:000516385900001
DA 2024-07-18
ER

PT J
AU Zolfagharinia, M
   Adams, B
   Gueheneuc, YG
AF Zolfagharinia, Mahdis
   Adams, Bram
   Gueheneuc, Yann-Gael
TI A study of build inflation in 30 million CPAN builds on 13 Perl versions
   and 10 operating systems
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Continuous integration; Build inflation and failure; Perl; CPAN
ID CONTINUOUS INTEGRATION; SOFTWARE
AB Continuous Integration (CI) is a cornerstone of modern quality assurance, providing on-demand builds (compilation and tests) of code changes or software releases. Yet the many existing CI systems do not help developers in interpreting build results, in particular when facing build inflation. Build inflation arises when each code change has to be built on dozens of combinations (configurations) of runtime environments (REs), operating systems (OSes), and hardware architectures (HAs). A code change C1 sent to the CI system may introduce programming faults that result in all these builds to fail, while a change C2 introducing a new library dependency might only lead one particular build configuration to fail. Consequently, the one build failure due to C2 will be "hidden" among the dozens of build failures due to C1 when the CI system reports the results of the builds. We have named this phenomenon build inflation, because it may bias the interpretation of build results by developers by "hiding" certain types of faults. In this paper, we study build inflation through a large-scale study of the relationship between REs and OSes and build failures on 30 million builds of the CPAN repository on the CPAN Testers package-level CI system. We show that the builds of Perl packages may fail differently on different REs and OSes and any combination thereof . Thus, we show that the results provided by CPAN Testers require filtering and selection to identify real trends of build failures among the many failures. Manual analysis of 791 build failures shows that dependency faults (missing modules) and programming faults (undefined values) are the main reasons for failures, with dependency faults being easier to fix. We conclude with recommendations for practitioners and researchers in interpreting build results as well as for tool builders who should improve he scheduling of builds and the reporting of build failures.
C1 [Zolfagharinia, Mahdis] Polytech Montreal, MCIS & Ptidej Labs, Montreal, PQ, Canada.
   [Adams, Bram] Polytech Montreal, MCIS Lab, Montreal, PQ, Canada.
   [Gueheneuc, Yann-Gael] Concordia Univ, Ptidej Lab, Montreal, PQ, Canada.
C3 Universite de Montreal; Polytechnique Montreal; Universite de Montreal;
   Polytechnique Montreal; Concordia University - Canada
RP Zolfagharinia, M (corresponding author), Polytech Montreal, MCIS & Ptidej Labs, Montreal, PQ, Canada.
EM mahdis.zolfagharinia@polymtl.ca; bram.adams@polymtl.ca;
   yann-gael.gueheneuc@concordia.ca
OI Adams, Bram/0000-0001-7213-4006
CR Adams B., 2016, P 23 IEEE INT C SOFT
   Adams B, 2008, EVOLUTION LINUX BUIL, V8
   Adams B, 2007, PROC IEEE INT CONF S, P214
   Allende E, 2014, ACM SIGPLAN NOTICES, V49, P251, DOI [10.1145/2660193.2660222, 10.1145/2714064.2660222]
   Amlekar R, 2018, IEEE WORK CONF MIN S, P86, DOI 10.1145/3196398.3196471
   Anderson C, 2005, LECT NOTES COMPUT SC, V3586, P428
   [Anonymous], 2007, CONTINUOUS INTEGRATI
   [Anonymous], 2016, METACPAN API
   [Anonymous], 2014, OPENSTACK ZUUL CI DA
   Atlee C, 2017, WHAT HAPPENS YOU PUS
   Bass Len, 2015, DevOps: A Software Architect's Perspective
   Bell J, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P433, DOI 10.1145/3180155.3180164
   Beller M, 2017, IEEE WORK CONF MIN S, P356, DOI 10.1109/MSR.2017.62
   Booch G., 2007, Object-Oriented Analysis and Design with Applications, Vthird
   Bouckaert R. R., 2010, WEKA MANUAL VERSION, V327
   BRACHA G, 1993, SIGPLAN NOTICES, V28, P215, DOI 10.1145/167962.165893
   Campbell JL, 2013, SOCIOL METHOD RES, V42, P294, DOI 10.1177/0049124113500475
   Carrez T, 2015, PRESENTATION FOSDEM
   Chaudhuri A, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133872
   Denny Paul, 2012, P 17 ACM ANN C INN T, P75, DOI [10.1145/2325296.2325318, DOI 10.1145/2325296.2325318]
   DeRemer F., 1975, SIGPLAN Notices, V10, P114, DOI 10.1145/390016.808431
   Dyke G, 2011, SIGCSE 11: PROCEEDINGS OF THE 42ND ACM TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION, P505
   FELDMAN SI, 1979, SOFTWARE PRACT EXPER, V9, P255, DOI 10.1002/spe.4380090402
   Fowler M., 2006, Continuous integration
   Gao Z, 2017, PROC INT CONF SOFTW, P758, DOI 10.1109/ICSE.2017.75
   Glatard T, 2015, FRONT NEUROINFORM, V9, DOI 10.3389/fninf.2015.00012
   Hassan AE, 2006, IEEE INT CONF AUTOM, P189
   Hassan F, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1078, DOI 10.1145/3180155.3180181
   Hilton M, 2016, IEEE INT CONF AUTOM, P426, DOI 10.1145/2970276.2970358
   Humble Jez, 2010, Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation
   Kerzazi N, 2014, PROC IEEE INT CONF S, P41, DOI 10.1109/ICSME.2014.26
   KRUCHTEN PB, 1995, IEEE SOFTWARE, V12, P42, DOI 10.1109/52.469759
   Labuschagne A, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P821, DOI 10.1145/3106237.3106288
   Laukkanen E, 2015, 2015 AGILE CONFERENCE, P11, DOI 10.1109/Agile.2015.15
   Lehman M. M., 1996, Software Process Technology. 5th European Workshop, EWSPT '96 Proceedings, P108, DOI 10.1007/BFb0017737
   Leppanen Marko, 2015, IEEE Software, V32, P64, DOI 10.1109/MS.2015.50
   Luo QZ, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P643, DOI 10.1145/2635868.2635920
   Calle ML, 2011, HUM HERED, V72, P121, DOI 10.1159/000330778
   Macho C., 2018, INT C SOFTW AN EV RE
   McIntosh S., 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P42, DOI 10.1109/MSR.2010.5463341
   McIntosh S, 2015, EMPIR SOFTW ENG, V20, P1587, DOI 10.1007/s10664-014-9324-x
   McIntosh S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P141, DOI 10.1145/1985793.1985813
   Micco J, 2016, CONTINUOUS INTEGRATI
   Miller A, 2008, AGILE 2008, PROCEEDINGS, P289, DOI 10.1109/Agile.2008.8
   Mirhosseini S, 2017, IEEE INT CONF AUTOM, P84, DOI 10.1109/ASE.2017.8115621
   O'Duinn J, 2013, FINANCIAL COST CHE 2
   Palomba F, 2017, PROC IEEE INT CONF S, P1, DOI 10.1109/ICSME.2017.12
   Raemaekers S, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P378, DOI 10.1109/ICSM.2012.6405296
   Rausch T, 2017, IEEE WORK CONF MIN S, P345, DOI 10.1109/MSR.2017.54
   Rogers RO, 2004, LECT NOTES COMPUT SC, V3092, P68
   Seo H, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P724, DOI 10.1145/2568225.2568255
   Ståhl D, 2014, J SYST SOFTWARE, V87, P48, DOI 10.1016/j.jss.2013.08.032
   Suvorov R, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P160, DOI 10.1109/ICSM.2012.6405267
   Tu Q, 2001, PROC IEEE INT CONF S, P398, DOI 10.1109/ICSM.2001.972753
   Vasilescu B, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P805, DOI 10.1145/2786805.2786850
   Vassallo C, 2017, PROC IEEE INT CONF S, P183, DOI 10.1109/ICSME.2017.67
   Wikipedia, 2008, LIST BUILD AUT SOFTW
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Zhao YY, 2017, IEEE INT CONF AUTOM, P60, DOI 10.1109/ASE.2017.8115619
   Ziftci C, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P113, DOI 10.1109/ICSE-SEIP.2017.13
   Zoltagharinia M, 2017, IEEE WORK CONF MIN S, P312, DOI 10.1109/MSR.2017.7
NR 62
TC 4
Z9 4
U1 0
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2019
VL 24
IS 6
BP 3933
EP 3971
DI 10.1007/s10664-019-09709-6
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JT6XW
UT WOS:000501131100022
DA 2024-07-18
ER

PT J
AU Yan, M
   Xia, X
   Lo, D
   Hassan, AE
   Li, SP
AF Yan, Meng
   Xia, Xin
   Lo, David
   Hassan, Ahmed E.
   Li, Shanping
TI Characterizing and identifying reverted commits
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Reverted commits; Identification model; Feature engineering; Empirical
   study
ID CLASSIFYING SOFTWARE CHANGES; CLASSIFICATION; PREDICTION; FRAMEWORK
AB In practice, a popular and coarse-grained approach for recovering from a problematic commit is to revert it (i.e., undoing the change). However, reverted commits could induce some issues for software development, such as impeding the development progress and increasing the difficulty for maintenance. In order to mitigate these issues, we set out to explore the following central question: can we characterize and identify which commits will be reverted? In this paper, we characterize commits using 27 commit features and build an identification model to identify commits that will be reverted. We first identify reverted commits by analyzing commit messages and comparing the changed content, and extract 27 commit features that can be divided into three dimensions, namely change, developer and message, respectively. Then, we build an identification model (e.g., random forest) based on the extracted features. To evaluate the effectiveness of our proposed model, we perform an empirical study on ten open source projects including a total of 125,241 commits. Our experimental results show that our model outperforms two baselines in terms of AUC-ROC and cost-effectiveness (i.e., percentage of detected reverted commits when inspecting 20% of total changed LOC). In terms of the average performance across the ten studied projects, our model achieves an AUC-ROC of 0.756 and a cost-effectiveness of 0.746, significantly improving the baselines by substantial margins. In addition, we found that developer is the most discriminative dimension among the three dimensions of features for the identification of reverted commits. However, using all the three dimensions of commit features leads to better performance.
C1 [Yan, Meng; Li, Shanping] Zhejiang Univ, Coll Comp Sci & Technol, Hangzhou, Zhejiang, Peoples R China.
   [Yan, Meng] Alibaba Zhejiang Univ Joint Inst Frontier Technol, Hangzhou, Zhejiang, Peoples R China.
   [Xia, Xin] Monash Univ, Fac Informat Technol, Melbourne, Vic, Australia.
   [Lo, David] Singapore Management Univ, Sch Informat Syst, Singapore, Singapore.
   [Hassan, Ahmed E.] Queens Univ, SAIL, Kingston, ON, Canada.
C3 Zhejiang University; Monash University; Singapore Management University;
   Queens University - Canada
RP Xia, X (corresponding author), Monash Univ, Fac Informat Technol, Melbourne, Vic, Australia.
EM mengy@zju.edu.cn; xin.xia@monash.edu; davidlo@smu.edu.sg;
   ahmed@cs.queensu.ca; shan@zju.edu.cn
RI Hassan, Ahmed/AAB-7241-2019; Yan, Meng/AAH-6762-2019; Xia,
   Xin/AAD-6217-2022; KHALIFA, AHMED khalifa/HKF-2246-2023; Ali,
   Ahmed/HOF-4672-2023; Lo, David/A-2493-2012
OI Xia, Xin/0000-0002-6302-3256; KHALIFA, AHMED
   khalifa/0000-0002-2918-7572; Yan, Meng/0000-0002-9538-9121; Lo,
   David/0000-0002-4367-7201
FU National Key Research and Development Program of China [2018YFB1003904];
   NSFC Program [61602403]; China Postdoctoral Science Foundation
   [2017M621931]
FX This research was partially supported by the National Key Research and
   Development Program of China (2018YFB1003904), NSFC Program (No.
   61602403) and China Postdoctoral Science Foundation (No. 2017M621931).
CR Abdi H, 2007, ENCY MEASUREMENT STA, P103, DOI DOI 10.4135/9781412952644
   Beller M., 2014, 11 WORK C MIN SOFTW, P202, DOI DOI 10.1145/2597073.2597082
   Bird C., 2011, P 19 ACM SIGSOFT S 1, P4, DOI DOI 10.1145/2025113.2025119
   Boyd Kendrick., 2012, Proceedings of the 29th international conference on machine learning, P639
   Bradley AP, 1997, PATTERN RECOGN, V30, P1145, DOI 10.1016/S0031-3203(96)00142-2
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Breunig M. M., 2000, SIGMOD Record, V29, P93, DOI 10.1145/335191.335388
   Codoban M, 2015, PROC IEEE INT CONF S, P1, DOI 10.1109/ICSM.2015.7332446
   da Costa DA, 2017, IEEE T SOFTWARE ENG, V43, P641, DOI 10.1109/TSE.2016.2616306
   Davis JJ., 2006, PROC INT C MACHINE L, DOI DOI 10.1145/1143844.1143874
   Fan Y., 2018, EMPIR SOFTW ENG, V2018, P1
   Fan YR, 2020, IEEE T SOFTWARE ENG, V46, P495, DOI 10.1109/TSE.2018.2864217
   Fluri B, 2007, IEEE T SOFTWARE ENG, V33, P725, DOI 10.1109/TSE.2007.70731
   Fluri B, 2006, INT C PROGRAM COMPRE, P35, DOI 10.1109/ICPC.2006.16
   Fu Y, 2015, INFORM SOFTWARE TECH, V57, P369, DOI 10.1016/j.infsof.2014.05.017
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Han J, 2012, MOR KAUF D, P1
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Hassan AE, 2008, APPLIED COMPUTING 2008, VOLS 1-3, P837
   Herzig K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P392, DOI 10.1109/ICSE.2013.6606585
   Hindle Abram, 2008, P 2008 INT WORKING C, P99
   Huang J, 2005, IEEE T KNOWL DATA EN, V17, P299, DOI 10.1109/TKDE.2005.50
   Huang Q., 2017, Empirical Software Engineering, P1
   Jiang T, 2013, IEEE INT CONF AUTOM, P279, DOI 10.1109/ASE.2013.6693087
   Kabinna S, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P326, DOI 10.1109/SANER.2016.29
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Lampert TA, 2014, MACH LEARN, V97, P5, DOI 10.1007/s10994-013-5432-x
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Li H, 2017, EMPIR SOFTW ENG, V22, P1831, DOI 10.1007/s10664-016-9467-z
   Li H, 2018, SCAND ACTUAR J, P605, DOI 10.1080/03461238.2017.1418420
   liwerski J, 2005, ACM SIGSOFT SOFTWARE, V30, P1, DOI [10.1145/1082983.1083147, DOI 10.1145/1083142.1083147, DOI 10.1145/1082983.1083147]
   Long J.D., 2003, Handbook of psychology
   Macho C, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P541, DOI 10.1109/SANER.2016.22
   Mäntylä MV, 2009, IEEE T SOFTWARE ENG, V35, P430, DOI 10.1109/TSE.2008.71
   McCallum A., 1998, AAAI 98 WORKSH LEARN, V752, P41, DOI DOI 10.1109/TSMC.1985.6313426
   McIntosh S, 2014, PROC IEEE INT CONF S, P241, DOI 10.1109/ICSME.2014.46
   Mockus A, 2000, PROC IEEE INT CONF S, P120, DOI 10.1109/ICSM.2000.883028
   Mockus A, 2000, BELL LABS TECH J, V5, P169, DOI 10.1002/bltj.2229
   Nam J, 2015, IEEE INT CONF AUTOM, P452, DOI 10.1109/ASE.2015.56
   Romano J, 2006, ANN M SO ASS I RES C, P1
   Rosen C, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P966, DOI 10.1145/2786805.2803183
   SCOTT AJ, 1974, BIOMETRICS, V30, P507, DOI 10.2307/2529204
   Shimagaki J, 2016, PROC IEEE INT CONF S, P301, DOI 10.1109/ICSME.2016.83
   Souza R, 2015, IEEE SOFTWARE, V32, P88, DOI 10.1109/MS.2015.30
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Tantithamthavorn C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P812, DOI 10.1109/ICSE.2015.93
   Tao YD, 2014, PROC IEEE INT CONF S, P271, DOI 10.1109/ICSME.2014.49
   Tian Y, 2015, PROC IEEE INT CONF S, P301, DOI 10.1109/ICSM.2015.7332476
   Valdivia-Garcia Harold., 2014, P 11 WORKING C MININ, P72
   Wang HX, 2016, SCI CHINA INFORM SCI, V59, DOI 10.1007/s11432-016-5525-9
   Wilcoxon Frank, 1992, BREAKTHROUGHS STAT, P196, DOI [DOI 10.1007/978-1-4612-4380-9_16, 10.1007/978-1-4612-4380-9_16, DOI 10.1007/978-1-4612-4380-9]
   Wolpert DH, 1999, MACH LEARN, V35, P41, DOI 10.1023/A:1007519102914
   Xia X., 2017, EMPIR SOFTW ENG, P1
   Xia X, 2016, IEEE T SOFTWARE ENG, V42, P977, DOI 10.1109/TSE.2016.2543218
   Xia X, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P311, DOI 10.1109/SANER.2015.7081841
   Xia X, 2015, INFORM SOFTWARE TECH, V61, P93, DOI 10.1016/j.infsof.2014.12.006
   Xie X, 2014, P INT COMP SOFTW APP, P107, DOI 10.1109/COMPSAC.2014.17
   Yan M, 2018, IEEE T SOFTW ENG
   Yan M, 2017, INT SYMP EMP SOFTWAR, P344, DOI 10.1109/ESEM.2017.48
   Yan M, 2016, J SYST SOFTWARE, V113, P296, DOI 10.1016/j.jss.2015.12.019
   Yang XL, 2016, P INT COMP SOFTW APP, P22, DOI 10.1109/COMPSAC.2016.83
   Yang YB, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P157, DOI 10.1145/2950290.2950353
   Young Seok Yoon, 2012, 2012 5th International Workshop on Cooperative and Human Aspects of Software Engineering, P138, DOI 10.1109/CHASE.2012.6223012
NR 64
TC 20
Z9 22
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2019
VL 24
IS 4
BP 2171
EP 2208
DI 10.1007/s10664-019-09688-8
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IL9CL
UT WOS:000477582700014
OA Green Published
DA 2024-07-18
ER

PT J
AU Nielebock, S
   Heumüller, R
   Ortmeier, F
AF Nielebock, Sebastian
   Heumueller, Robert
   Ortmeier, Frank
TI Programmers do not favor lambda expressions for concurrent
   object-oriented code
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Lambda expression; Concurrency; Object-orientation; Programming language
AB Lambda expressions have long been state-of-the-art in the functional programming paradigm. Especially with regard to the use of higher-order functions, they provide developers with a means of defining predicate or projection functions locally, which greatly increases the comprehensibility of the resulting source code. This benefit has motivated language designers to also incorporate lambda expressions into object-oriented (OO) programming languages. In particular, they are claimed to facilitate concurrent programming. One likely reason for this assumption is their purity: pure lambda expressions are free of side effects, and therefore cannot cause, e.g., race conditions. In this paper, we present the first empirical analysis of whether or not this claim is true for OO projects. For this purpose, we investigated the application of lambda expressions in 2923 open-source projects, implemented in one of the most common OO programming languages: C#, C++, and Java. We present three major findings. First, the majority of lambda expressions are not applied in concurrent code and most concurrent code does not make use of lambda expressions. Second, for all three of the languages, we observed that developers compromise their code by applying a significantly higher number of impure, capturing lambda expressions, which are capable of causing race conditions. Finally, we explored further use cases of lambda expressions and found out that testing, algorithmic implementation, and UI are far more common use-cases for the application of lambda expressions. Our results encourage to investigate in more detail the reasons that hinder programmers to apply lambda expressions in concurrent programming and to support developers, e.g., by providing automatic refactorings.
C1 [Nielebock, Sebastian; Heumueller, Robert; Ortmeier, Frank] Otto von Guericke Univ, Chair Software Engn, Fac Comp Sci, Magdeburg, Germany.
C3 Otto von Guericke University
RP Nielebock, S (corresponding author), Otto von Guericke Univ, Chair Software Engn, Fac Comp Sci, Magdeburg, Germany.
EM sebastian.nielebock@ovgu.de; robert.heumueller@ovgu.de;
   frank.ortmeier@ovgu.de
RI Nielebock, Sebastian/HSE-7136-2023
OI Nielebock, Sebastian/0000-0002-0147-3526
CR [Anonymous], 2006, Principles of Concurrent and Distributed Programming
   Barr M., 1999, PROGRAMMING EMBEDDED
   Bavota G, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2559935
   Borges H, 2016, PROC IEEE INT CONF S, P334, DOI 10.1109/ICSME.2016.31
   Coblenz M, 2017, PROC INT CONF SOFTW, P496, DOI 10.1109/ICSE.2017.52
   Coblenz M, 2016, PROC INT CONF SOFTW, P736, DOI 10.1145/2884781.2884798
   Costa D., 2017, P 8 ACM SPEC INT C P, P389, DOI [10.1145/3030207.3030221, DOI 10.1145/3030207.3030221]
   De Wael M., 2014, PPPJ '14, P39
   Dekker AH, 2006, ACM SIGPLAN NOTICES, V41, P30, DOI 10.1145/1140543.1140549
   Dyer R, 2013, TECH REP
   Dyer R, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P779, DOI 10.1145/2568225.2568295
   Dyer R, 2015, ACM T SOFTW ENG METH, V25, DOI 10.1145/2803171
   Franklin L, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1287, DOI 10.1109/ICSE.2013.6606699
   Garcia R, 2003, ACM SIGPLAN NOTICES, V38, P115, DOI 10.1145/949343.949317
   Gu R, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P426, DOI 10.1145/2786805.2786815
   Gyori A., 2013, CROSSING GAP IMPERAT, P543
   Hill E, 2009, PROC INT CONF SOFTW, P232, DOI 10.1109/ICSE.2009.5070524
   Jarczyk O, 2014, LECT NOTES COMPUT SC, V8851, P80, DOI 10.1007/978-3-319-13734-6_6
   Järvi J, 2010, SCI COMPUT PROGRAM, V75, P762, DOI 10.1016/j.scico.2009.04.003
   Kim D, 2013, J OBJECT TECHNOL, V12, DOI 10.5381/jot.2013.12.4.a1
   Kuhn A, 2007, INFORM SOFTWARE TECH, V49, P230, DOI 10.1016/j.infsof.2006.10.017
   Lin Y, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P341, DOI 10.1145/2635868.2635903
   Lin Y, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P164, DOI 10.1109/ICST.2013.41
   Marinagi C., 2014, 18 INT C EV ASS SOFT, DOI [10.1145/2645791.2645852, DOI 10.1145/2601248.2601298]
   Martelli A, 2005, PYTHON COOKBOOK, V2
   Mazinanian D, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133909
   Meijer Erik, 2001, ELECTRON NOTES THEOR, V41, P119, DOI [10.1016/S1571-0661(05)80549-3, DOI 10.1016/S1571-0661(05)80549-3]
   MILLER W, 1985, SOFTWARE PRACT EXPER, V15, P1025, DOI 10.1002/spe.4380151102
   Myers EW, 1986, ALGORITHMICA, V1, P251, DOI 10.1007/BF01840446
   Odersky M, 2014, COMMUN ACM, V57, P76, DOI 10.1145/2591013
   Okur S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1117, DOI 10.1145/2568225.2568309
   Okur Semih., 2012, Proceedings of FSE'12, P1, DOI 10.1145/2393596.2393660
   Pankratius V, 2012, PROC INT CONF SOFTW, P123, DOI 10.1109/ICSE.2012.6227200
   Parnin C., 2011, PROCEEDING 8 WORKING, P3
   Parnin C, 2013, EMPIR SOFTW ENG, V18, P1047, DOI 10.1007/s10664-012-9236-6
   Parr T., 2013, The Definitive ANTLR 4 Reference
   Pinto G, 2015, J SYST SOFTWARE, V106, P59, DOI 10.1016/j.jss.2015.04.064
   Radoi C., 2013, Proceedings of the 2013 International Symposium on Software Testing and Analysis, ser. ISSTA '13, P178
   Stefik A., 2014, P 2014 ACM INT S NEW, P283
   Tempero E, 2013, LECT NOTES COMPUT SC, V7920, P577, DOI 10.1007/978-3-642-39038-8_24
   Torres W., 2011, Proceedings of the compilation of the co-located workshops on DSM'11, TMC'11, AGERE!'11, AOOPES'11, NEAT'11, VMIL'11, P123, DOI DOI 10.1145/2095050.2095072
   Tsantalis N, 2017, PROC INT CONF SOFTW, P60, DOI 10.1109/ICSE.2017.14
   Uesbeck PM, 2016, PROC INT CONF SOFTW, P760, DOI 10.1145/2884781.2884849
   UKKONEN E, 1985, INFORM CONTROL, V64, P100, DOI 10.1016/S0019-9958(85)80046-2
   Wang XR, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P205, DOI 10.1109/SANER.2017.7884622
   Wu D, 2016, INFORM SOFTWARE TECH, V76, P1, DOI 10.1016/j.infsof.2016.04.004
NR 46
TC 15
Z9 16
U1 0
U2 8
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2019
VL 24
IS 1
BP 103
EP 138
DI 10.1007/s10664-018-9622-9
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HL3RV
UT WOS:000458634400004
DA 2024-07-18
ER

PT J
AU Fernández-Sáez, AM
   Chaudron, MRV
   Genero, M
AF Fernandez-Saez, Ana M.
   Chaudron, Michel R. V.
   Genero, Marcela
TI An industrial case study on the use of UML in software maintenance and
   its perceived benefits and hurdles
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE UML; Software maintenance; Modelling languages; Industrial case study
ID DOCUMENTATION; DIAGRAMS; USAGE; CODE
AB UML is a commonly-used graphical language for the modelling of software. Works regarding UML's effectiveness have studied projects that develop software systems from scratch. Yet the maintenance of software consumes a large share of the overall time and effort required to develop software systems. This study, therefore, focuses on the use of UML in software maintenance. We wish to elicit the practices of the software modelling used during maintenance in industry and understand what are perceived as hurdles and benefits when using modelling. In order to achieve a high level of realism, we performed a case study in a multinational company's ICT department. The analysis is based on 31 interviews with employees who work on software maintenance projects. The interviewees played different roles and provided complementary views about the use, hurdles and benefits of software modelling and the use of UML. Our study uncovered a broad range of modelling-related practices, which are presented in a theoretical framework that illustrates how these practices are linked to the specific goals and context of software engineering projects. We present a list of recommended practices that contribute to the increased effectiveness of software modelling. The use of software modelling notations (like UML) is considered beneficial for software maintenance, but needs to be tailored to its context. Various practices that contribute to the effective use of modelling are commonly overlooked, suggesting that a more conscious holistic approach with which to integrate modelling practices into the overall software engineering approach is required.
C1 [Fernandez-Saez, Ana M.; Genero, Marcela] Univ Castilla La Mancha, ALARCOS Res Grp, Inst Tecnol & Sistemas Informac, Ciudad Real, Spain.
   [Chaudron, Michel R. V.] Chalmers Univ Technol, Joint Comp Sci & Engn Dept, Gothenburg, Sweden.
   [Chaudron, Michel R. V.] Univ Gothenburg, Gothenburg, Sweden.
C3 Universidad de Castilla-La Mancha; Chalmers University of Technology;
   University of Gothenburg
RP Fernández-Sáez, AM (corresponding author), Univ Castilla La Mancha, ALARCOS Res Grp, Inst Tecnol & Sistemas Informac, Ciudad Real, Spain.
EM anamaria.fernandezsaez@gmail.com; chaudron@chalmers.se;
   Marcela.Genero@uclm.es
RI Fernández-Sáez, Ana Maria/AAS-8299-2021; GENERO, MARCELA/L-6480-2014
OI Fernández-Sáez, Ana Maria/0000-0001-5768-1650; GENERO,
   MARCELA/0000-0002-6868-7465
FU SEQUOIA project (Ministerio de Economia y Competitividad); Fondo Europeo
   de Desarrollo Regional FEDER [TIN2012-37493-C03-01]
FX This research has been funded by the SEQUOIA project (Ministerio de
   Economia y Competitividad), and by the Fondo Europeo de Desarrollo
   Regional FEDER, TIN2012-37493-C03-01.
CR Anda B, 2006, EMPIR SOFTW ENG, V11, P555, DOI 10.1007/s10664-006-9020-6
   [Anonymous], 2014, EMPIRICAL SOFTWARE E
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], 2 EXP EMP STUD SOFTW
   [Anonymous], 2011, REAL WORLD RES
   [Anonymous], SON DIG VOIC ED VERS
   [Anonymous], 17 INT C EV ASS SOFT
   [Anonymous], SWEBOK PROJECT SOFTW
   [Anonymous], 147641999 ISOIEC
   [Anonymous], 2015, HUFAMO MODELS
   Arisholm E, 2006, IEEE T SOFTWARE ENG, V32, P365, DOI 10.1109/TSE.2006.59
   Aseniero BA, 2015, CHI 2015: PROCEEDINGS OF THE 33RD ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P1479, DOI 10.1145/2702123.2702426
   BASILI VR, 1984, IEEE T SOFTWARE ENG, V10, P728, DOI 10.1109/TSE.1984.5010301
   Blaha M. R., 2004, OBJECT ORIENTED MODE
   Bruegge Bernd., 2010, Object-Oriented Software Engineering: Using UML, Patterns and Java, VThird
   Burge J.E., 2008, Rationale-Based Software Engineering
   Cook T., 2001, Experimental and Quasi-Experimental Designs for Generalized Causal Inference
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P343, DOI 10.1109/ESEM.2011.44
   de Souza S.C.B., 2005, P 23 ANN INT C DES C, P68, DOI [10.1145/1085313, 10.1145/1085313.1085331]
   Dekel U, 2007, OOPSLA: 22ND INTERNATIONAL CONFERENCE ON OBJECT-ORIENTED PROGRAMMING, SYSTEMS, LANGUAGES, AND APPLICATIONS, PROCEEDINGS, P261
   Dobing B, 2006, COMMUN ACM, V49, P109, DOI 10.1145/1125944.1125949
   Dzidek WJ, 2008, IEEE T SOFTWARE ENG, V34, P407, DOI 10.1109/TSE.2008.15
   Fernández-Sáez AM, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P292, DOI 10.1109/MODELS.2015.7338260
   Fernández-Sáez AM, 2015, INFORM SOFTWARE TECH, V57, P644, DOI 10.1016/j.infsof.2014.05.014
   Fernández-Sáez AM, 2013, INFORM SOFTWARE TECH, V55, P1119, DOI 10.1016/j.infsof.2012.12.006
   Forward A., 2002, Proceedings of the 2002 ACM symposium on Document engineering, P26, DOI 10.1145/585058.585065
   Garousi G, 2015, INFORM SOFTWARE TECH, V57, P664, DOI 10.1016/j.infsof.2014.08.003
   Glaser B. G., 1967, DISCOVERY GROUNDED T, DOI 10.1515/9783111660211/html
   Host Martin, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P479
   Hutchinson J, 2014, SCI COMPUT PROGRAM, V89, P144, DOI 10.1016/j.scico.2013.03.017
   Jacobson Ivar., 1999, AW OBJ TECHNOL S
   Johnson P., 2012, IEEE Software, V29, P94, DOI 10.1109/MS.2012.127
   Kruchten P, 2009, IEEE SOFTWARE, V26, P36, DOI 10.1109/MS.2009.52
   Leotta M, 2013, PROC IEEE INT CONF S, P428, DOI 10.1109/ICSM.2013.64
   Liebel G, 2018, SOFTW SYST MODEL, V17, P91, DOI 10.1007/s10270-016-0523-3
   Locke K., 2001, GROUNDED THEORY MANA
   Lutters WG, 2007, INFORM SOFTWARE TECH, V49, P576, DOI 10.1016/j.infsof.2007.02.013
   McNamara C., 1999, GEN GUIDELINES CONDU
   Mellegard Niklas., 2010, ECSA Companion Volume, ACM International Conference Proceeding Series, P245
   Nugroho A, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P90
   Petre M, 1999, INT J HUM-COMPUT ST, V51, P7, DOI 10.1006/ijhc.1999.0267
   Petre M, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P722, DOI 10.1109/ICSE.2013.6606618
   Pressman R.S., 2005, Software engineering: a Practitioner's Approach
   Punch K., 2005, INTRO SOCIAL RES QUA, V2nd
   Ricca F., 2012, 2012 Proceedings of 4th International Workshop Modeling in Software Engineering (MiSE 2012), P77, DOI 10.1109/MISE.2012.6226018
   Richards L., 1999, Using NVivo in Qualitative Research
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Scanniello G, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2491912
   Scanniello G, 2010, ICEIS 2010: PROCEEDINGS OF THE 12TH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS, VOL 3: INFORMATION SYSTEMS ANALYSIS AND SPECIFICATION, P141
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Sjoberg D. I. K., 2008, Guide to Advanced Empirical Software Engineering, P312
   Strauss A., 1990, BASICS QUALITATIVE R
   Swanson E. B., 1976, 2nd International Conference on Software Engineering, P492
   Torchiano M, 2013, J SYST SOFTWARE, V86, P2110, DOI 10.1016/j.jss.2013.03.084
   Whittle J, 2013, LECT NOTES COMPUT SC, V8107, P1, DOI 10.1007/978-3-642-41533-3_1
   Wieringa R, 2015, SCI COMPUT PROGRAM, V101, P136, DOI 10.1016/j.scico.2014.11.013
   Wohlin C., 1999, EXPT SOFTWARE ENG IN
   Yamashita A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P306, DOI 10.1109/ICSM.2012.6405287
   Yin RK, 2002, Applied Social Research Methods Series, V34
NR 59
TC 29
Z9 33
U1 1
U2 10
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2018
VL 23
IS 6
BP 3281
EP 3345
DI 10.1007/s10664-018-9599-4
PG 65
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HC1WE
UT WOS:000451593200007
DA 2024-07-18
ER

PT J
AU Moonen, L
   Rolfsnes, T
   Binkley, D
   Di Alesio, S
AF Moonen, Leon
   Rolfsnes, Thomas
   Binkley, Dave
   Di Alesio, Stefano
TI What are the effects of history length and age on mining software change
   impact?
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Change impact analysis; Evolutionary coupling; Association rule mining;
   Parameter tuning
ID REPOSITORIES
AB The goal of Software Change Impact Analysis is to identify artifacts (typically source-code files or individual methods therein) potentially affected by a change. Recently, there has been increased interest in mining software change impact based on evolutionary coupling. A particularly promising approach uses association rule mining to uncover potentially affected artifacts from patterns in the system's change history. Two main considerations when using this approach are the history length, the number of transactions from the change history used to identify the impact of a change, and history age, the number of transactions that have occurred since patterns were last mined from the history. Although history length and age can significantly affect the quality of mining results, few guidelines exist on how to best select appropriate values for these two parameters. In this paper, we empirically investigate the effects of history length and age on the quality of change impact analysis using mined evolutionary coupling. Specifically, we report on a series of systematic experiments using three state-of-the-art mining algorithms that involve the change histories of two large industrial systems and 17 large open source systems. In these experiments, we vary the length and age of the history used to mine software change impact, and assess how this affects precision and applicability. Results from the study are used to derive practical guidelines for choosing history length and age when applying association rule mining to conduct software change impact analysis.
C1 [Moonen, Leon] Simula Res Lab, Software Engn Dept, Oslo, Norway.
   [Rolfsnes, Thomas; Di Alesio, Stefano] Simula Res Lab, Oslo, Norway.
   [Binkley, Dave] Loyola Univ Maryland, Comp Sci, Baltimore, MD USA.
C3 Loyola University Maryland
RP Moonen, L (corresponding author), Simula Res Lab, Software Engn Dept, Oslo, Norway.
EM leon.moonen@computer.org; thomgrol@simula.no; binkley@cs.loyola.edu;
   stefano@simula.no
RI Moonen, Leon/M-8790-2015
OI Moonen, Leon/0000-0002-1761-6771
FU Research Council of Norway through the EvolveIT project [221751/F20];
   Certus SFI [203461/030]; NSF [IIA-1360707]; J. William Fulbright award
FX This work is supported by the Research Council of Norway through the
   EvolveIT project (#221751/F20) and the Certus SFI (#203461/030). Dr.
   Binkley was supported by NSF grant IIA-1360707 and a J. William
   Fulbright award.
CR Agrawal R., 1993, SIGMOD Record, V22, P207, DOI 10.1145/170036.170072
   Alali A, 2008, EMPIRICAL CHARACTERI, P53
   Alali A, 2008, INT C PROGRAM COMPRE, P182, DOI 10.1109/ICPC.2008.24
   [Anonymous], BIOMETRICS
   Baeza-Yates R., 1999, MODERN INFORM RETRIE, P513
   Bohner S. A., 1996, SOFTWARE CHANGE IMPA
   Canfora G., 2005, P 11 IEEE INT SOFTWA, P29, DOI [DOI 10.1109/METRICS2005.18, DOI 10.1109/METRICS.2005.28]
   Eick SG, 2001, IEEE T SOFTWARE ENG, V27, P1, DOI 10.1109/32.895984
   Gall H, 1998, PROC IEEE INT CONF S, P190, DOI 10.1109/ICSM.1998.738508
   German DM, 2006, EMPIR SOFTW ENG, V11, P369, DOI 10.1007/s10664-006-9004-6
   Gethers M., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P540, DOI 10.1109/ASE.2011.6100120
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Hassan AE, 2004, PROC IEEE INT CONF S, P284, DOI 10.1109/ICSM.2004.1357812
   Hassan AE, 2008, 2008 FRONTIERS OF SOFTWARE MAINTENANCE, P48, DOI 10.1109/FOSM.2008.4659248
   Jaafar F, 2014, J SOFTW-EVOL PROC, V26, P77, DOI 10.1002/smr.1635
   Jashki M.-A., 2008, P 8 ACM SIGPLAN SIGS, P84
   Jiang N, 2006, SIGMOD REC, V35, P14, DOI 10.1145/1121995.1121998
   Kagdi H., 2006, P 2006 INT WORKSH MI, P47, DOI [DOI 10.1145/1137983.1137996, 10.1145/1137983.1137996]
   Kagdi H, 2013, EMPIR SOFTW ENG, V18, P933, DOI 10.1007/s10664-012-9233-9
   Kolassa Carsten, 2013, P 9 INT S OPEN COLLA, P1
   Law J, 2003, PROC INT CONF SOFTW, P308, DOI 10.1109/ICSE.2003.1201210
   Lin WY, 2002, DATA MIN KNOWL DISC, V6, P83, DOI 10.1023/A:1013284820704
   Maimon O, 1383, DATA MINING KNOWLEDG
   Moonen L, 2016, IEEE INT WORK C SO, P207, DOI 10.1109/SCAM.2016.9
   Moonen L, 2016, IEEE INT CONF AUTOM, P732, DOI 10.1145/2970276.2970327
   PODGURSKI A, 1990, IEEE T SOFTWARE ENG, V16, P965, DOI 10.1109/32.58784
   Ren XX, 2004, ACM SIGPLAN NOTICES, V39, P432, DOI 10.1145/1035292.1029012
   Robbes R, 2008, WORK CONF REVERSE EN, P42, DOI 10.1109/WCRE.2008.47
   Rolfsnes T, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P73, DOI [10.1109/MSR.2016.017, 10.1145/2901739.2901756]
   Rolfsnes T, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P201, DOI 10.1109/SANER.2016.101
   Srikant R., 1997, Proceedings of the Third International Conference on Knowledge Discovery and Data Mining, P67
   WESTLAKE WJ, 1981, BIOMETRICS, V37, P591
   Yazdanshenas A.R., 2011, 2011 27 IEEE INT C S, P193
   Ying ATT, 2004, IEEE T SOFTWARE ENG, V30, P574, DOI 10.1109/TSE.2004.52
   Zanjani Motahareh Bahrami, 2014, P 11 WORK C MIN SOFT, P162, DOI [10.1145/2597073.2597096, DOI 10.1145/2597073.2597096]
   Zijian Zheng, 2001, KDD-2001. Proceedings of the Seventh ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, P401, DOI 10.1145/502512.502572
   Zimmermann T, 2005, IEEE T SOFTWARE ENG, V31, P429, DOI 10.1109/TSE.2005.72
NR 37
TC 5
Z9 5
U1 0
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2018
VL 23
IS 4
BP 2362
EP 2397
DI 10.1007/s10664-017-9588-z
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GK0MK
UT WOS:000435804100017
DA 2024-07-18
ER

PT J
AU Guo, JM
   Yang, DY
   Siegmund, N
   Apel, S
   Sarkar, A
   Valov, P
   Czarnecki, K
   Wasowski, A
   Yu, HQ
AF Guo, Jianmei
   Yang, Dingyu
   Siegmund, Norbert
   Apel, Sven
   Sarkar, Atrisha
   Valov, Pavel
   Czarnecki, Krzysztof
   Wasowski, Andrzej
   Yu, Huiqun
TI Data-efficient performance learning for configurable systems
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Performance prediction; Configurable systems; Regression; Model
   selection; Parameter tuning
ID PREDICTION
AB Many software systems today are configurable, offering customization of functionality by feature selection. Understanding how performance varies in terms of feature selection is key for selecting appropriate configurations that meet a set of given requirements. Due to a huge configuration space and the possibly high cost of performance measurement, it is usually not feasible to explore the entire configuration space of a configurable system exhaustively. It is thus a major challenge to accurately predict performance based on a small sample of measured system variants. To address this challenge, we propose a data-efficient learning approach, called DECART, that combines several techniques of machine learning and statistics for performance prediction of configurable systems. DECART builds, validates, and determines a prediction model based on an available sample of measured system variants. Empirical results on 10 real-world configurable systems demonstrate the effectiveness and practicality of DECART. In particular, DECART achieves a prediction accuracy of 90% or higher based on a small sample, whose size is linear in the number of features. In addition, we propose a sample quality metric and introduce a quantitative analysis of the quality of a sample for performance prediction.
C1 [Guo, Jianmei] Alibaba Grp, Hangzhou, Zhejiang, Peoples R China.
   [Yang, Dingyu] Shanghai Dianji Univ, Shanghai, Peoples R China.
   [Siegmund, Norbert] Bauhaus Univ Weimar, Weimar, Germany.
   [Apel, Sven] Univ Passau, Software Engn, Passau, Germany.
   [Sarkar, Atrisha] Univ Waterloo, David R Cheriton Sch Comp, Waterloo, ON, Canada.
   [Sarkar, Atrisha] Univ Waterloo, Autonomoose Self Driving Car Project, Waterloo, ON, Canada.
   [Valov, Pavel] Univ Waterloo, Waterloo, ON, Canada.
   [Czarnecki, Krzysztof] Univ Waterloo, Elect & Comp Engn, Waterloo, ON, Canada.
   [Wasowski, Andrzej] IT Univ Copenhagen, Copenhagen, Denmark.
   [Yu, Huiqun] East China Univ Sci & Technol, Shanghai, Peoples R China.
C3 Alibaba Group; Shanghai Dianji University; Bauhaus-Universitat Weimar;
   University of Passau; University of Waterloo; University of Waterloo;
   University of Waterloo; University of Waterloo; IT University
   Copenhagen; East China University of Science & Technology
RP Guo, JM (corresponding author), Alibaba Grp, Hangzhou, Zhejiang, Peoples R China.; Yang, DY (corresponding author), Shanghai Dianji Univ, Shanghai, Peoples R China.
EM jianmei.gjm@alibaba-inc.com; yangdy@sdju.edu.cn
RI Siegmund, Norbert/U-1325-2019
OI Siegmund, Norbert/0000-0001-7741-7777; Apel, Sven/0000-0003-3687-2233;
   Wasowski, Andrzej/0000-0003-0532-2685; Guo, Jianmei/0000-0001-5787-6781
FU National Natural Science Foundation of China [61772200, 61702320];
   Shanghai Pujiang Talent Program [17PJ1401900]; Shanghai Municipal
   Natural Science Foundation [17ZR1406900]; Shanghai Municipal Education
   Commission Funds of Young Teacher Training Program [ZZSDJ17021];
   Specialized Fund of Shanghai Municipal Commission of Economy and
   Informatization [201602008]; Specialized Research Fund for Doctoral
   Program of Higher Education [20130074110015]; DFG [AP 206/4, AP 206/5,
   AP 206/7, SI 2171/2, SI 2171/3]; Natural Sciences and Engineering
   Research Council of Canada; Pratt Whitney Canada
FX We would like to thank anonymous reviewers for their insightful
   comments. This research was partially supported by National Natural
   Science Foundation of China (No. 61772200, 61702320), Shanghai Pujiang
   Talent Program (No. 17PJ1401900), Shanghai Municipal Natural Science
   Foundation (No. 17ZR1406900), Shanghai Municipal Education Commission
   Funds of Young Teacher Training Program (No. ZZSDJ17021), Specialized
   Fund of Shanghai Municipal Commission of Economy and Informatization
   (No. 201602008), Specialized Research Fund for Doctoral Program of
   Higher Education (No. 20130074110015), the DFG grants (AP 206/4, AP
   206/5, AP 206/7, SI 2171/2, and SI 2171/3), Natural Sciences and
   Engineering Research Council of Canada, and Pratt & Whitney Canada.
CR Abdelaziz A, 2011, IJCA, V23, P15
   [Anonymous], 2001, ADAP COMP MACH LEARN
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   Apel S, 2009, J OBJECT TECHNOL, V8, P49, DOI 10.5381/jot.2009.8.5.c5
   Balsamo S, 2004, IEEE T SOFTWARE ENG, V30, P295, DOI 10.1109/TSE.2004.9
   Bergstra J, 2012, J MACH LEARN RES, V13, P281
   Berk RA, 2008, SPRINGER SER STAT, P1, DOI 10.1007/978-0-387-77501-2_1
   Breiman L., 1984, CLASSICATION REGRESS
   Bu XP, 2009, INT CON DISTR COMP S, P2, DOI 10.1109/ICDCS.2009.76
   Chen SP, 2005, J SYST SOFTWARE, V74, P35, DOI 10.1016/j.jss.2003.05.005
   Courtois M., 2000, Proceedings Second International Workshop on Software and Performance. WOSP2000, P105, DOI 10.1145/350391.350416
   Deisenroth M, 2016, ICML WORKSH DAT EFF
   Domhan T, 2015, PROCEEDINGS OF THE TWENTY-FOURTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI), P3460
   Efron B., 1993, INTRO BOOTSTRAP, VVolume 914, DOI DOI 10.1007/978-1-4899-4541-9
   Grechanik M, 2012, PROC INT CONF SOFTW, P156, DOI 10.1109/ICSE.2012.6227197
   Guo JM, 2013, IEEE INT CONF AUTOM, P301, DOI 10.1109/ASE.2013.6693089
   Happe J, 2011, IEEE SOFTWARE, V28, P27, DOI 10.1109/MS.2011.25
   Hastie T., 2009, Inference and Prediction, V2nd
   Hsu C.-W., 2003, Department of Computer Science and Information Engineering
   Huang P, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P60, DOI 10.1145/2568225.2568232
   Hutter Frank, 2011, Learning and Intelligent Optimization. 5th International Conference, LION 5. Selected Papers, P507, DOI 10.1007/978-3-642-25566-3_40
   Hutter F, 2014, ARTIF INTELL-AMST, V206, P79, DOI 10.1016/j.artint.2013.10.003
   Jamshidi P, 2016, I S MOD ANAL SIM COM, P39, DOI 10.1109/MASCOTS.2016.17
   Jovic M, 2011, OOPSLA 11: PROCEEDINGS OF THE 2011 ACM INTERNATIONAL CONFERENCE ON OBJECT ORIENTED PROGRAMMING SYSTEMS LANGUAGES AND APPLICATIONS, P155
   Kohavi R., 1995, IJCAI-95. Proceedings of the Fourteenth International Joint Conference on Artificial Intelligence, P1137
   Kwon Yongin., 2013, P 2013 USENIX C ANN, P297
   Lee BC, 2007, PROCEEDINGS OF THE 2007 ACM SIGPLAN SYMPOSIUM ON PRINCIPLES AND PRACTICE OF PARALLEL PROGRAMMING PPOPP'07, P249, DOI 10.1145/1229428.1229479
   Nadi S, 2015, IEEE T SOFTWARE ENG, V41, P820, DOI 10.1109/TSE.2015.2415793
   Osogami T, 2007, PERF E R SI, V35, P145
   Petkovich J., 2017, P 8 ACM SPEC INT C P, P39, DOI [10.1145/3030207.3030216, DOI 10.1145/3030207.3030216]
   Provost FJ, 1999, P ACM SIGKDD INT C K, P23, DOI DOI 10.1145/312129.312188
   Ramirez A, 2011, P INT C MOD DRIV ENG
   Salkind N., 2003, EXPLORING RES, V5th
   Sarkar A, 2015, IEEE INT CONF AUTOM, P342, DOI 10.1109/ASE.2015.45
   She S, 2014, INFORM SOFTWARE TECH, V56, P1122, DOI 10.1016/j.infsof.2014.01.012
   Siegmund N, 2012, P INT C SOFTW ENG
   Siegmund N, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P268, DOI 10.1145/3106237.3106251
   Siegmund N, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P284, DOI 10.1145/2786805.2786845
   Siegmund N, 2012, SOFTWARE QUAL J, V20, P487, DOI 10.1007/s11219-011-9152-9
   Sincero J, 2010, P AS PAC SOFTW ENG C
   Snoek J., 2012, ADV NEURAL INFORM PR, V25, P2960
   Tawhid R., 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P80, DOI 10.1109/SPLC.2011.27
   Thereska E, 2010, PERF E R SI, V38, P1, DOI 10.1145/1811099.1811041
   Valov P, 2015, P 19 INT C SOFTW PRO, P186, DOI [10.1145/2791060.2791069, DOI 10.1145/2791060.2791069]
   Westermann D, 2012, P INT C AUT SOFTW EN
   Williams G, 2011, USE R, P3, DOI 10.1007/978-1-4419-9890-3
   Xi B., 2004, P P 13 INT C WORLD W, P287, DOI DOI 10.1145/988672.988711
   Zhang Y., 2016, SOC PETROLEUM ENG, P2, DOI [DOI 10.2118/182285-MS, 10.1145/2934466.2934469, DOI 10.1145/2934466.2934469]
   Zhang Y, 2015, IEEE INT CONF AUTOM, P365, DOI 10.1109/ASE.2015.15
NR 49
TC 56
Z9 57
U1 0
U2 7
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2018
VL 23
IS 3
BP 1826
EP 1867
DI 10.1007/s10664-017-9573-6
PG 42
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GH6DH
UT WOS:000433532300018
DA 2024-07-18
ER

PT J
AU Murgia, A
   Ortu, M
   Tourani, P
   Adams, B
   Demeyer, S
AF Murgia, Alessandro
   Ortu, Marco
   Tourani, Parastou
   Adams, Bram
   Demeyer, Serge
TI An exploratory qualitative and quantitative analysis of emotions in
   issue report comments of open source systems
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Emotion mining; Issue report; Text analysis; Parrott's framework
ID SENTIMENT
AB Software development-just like any other human collaboration-inevitably evokes emotions like joy or sadness, which are known to affect the group dynamics within a team. Today, little is known about those individual emotions and whether they can be discerned at all in the development artifacts produced during a project. This paper analyzes (a) whether issue reports-a common development artifact, rich in content-convey emotional information and (b) whether humans agree on the presence of these emotions. From the analysis of the issue comments of 117 projects of the Apache Software Foundation, we find that developers express emotions (in particular gratitude, joy and sadness). However, the more context is provided about an issue report, the more human raters start to doubt and nuance their interpretation. Based on these results, we demonstrate the feasibility of a machine learning classifier for identifying issue comments containing gratitude, joy and sadness. Such a classifier, using emotion-driving words and technical terms, obtains a good precision and recall for identifying the emotion love, while for joy and sadness a lower recall is obtained.
C1 [Murgia, Alessandro; Demeyer, Serge] Univ Antwerp, Antwerp, Belgium.
   [Ortu, Marco] Univ Cagliari, Dept Elect & Elect Engn, Cagliari, Italy.
   [Tourani, Parastou; Adams, Bram] Polytech Montreal, MCIS, Montreal, PQ, Canada.
   [Murgia, Alessandro] Middelheimlaan 1, B-2020 Antwerp, Belgium.
C3 University of Antwerp; University of Cagliari; Universite de Montreal;
   Polytechnique Montreal
RP Murgia, A (corresponding author), Univ Antwerp, Antwerp, Belgium.; Murgia, A (corresponding author), Middelheimlaan 1, B-2020 Antwerp, Belgium.
EM alessandro.murgia@uantwerpen.be; marco.ortu@diee.unica.it;
   parastou.tourani@polymtl.ca; bram.adams@polymtl.ca;
   serge.demeyer@uantwerpen.be
RI Demeyer, Serge/JMQ-7341-2023
OI Demeyer, Serge/0000-0002-4463-2945; ORTU, MARCO/0000-0003-4191-5058;
   Adams, Bram/0000-0001-7213-4006
FU Institute for the Promotion of Innovation through Science and Technology
   in Flanders by project Change-centric Quality Assurance (CHAQ) [120028];
   Regione Autonoma della Sardegna (RAS), Regional Law, project "LEAN 2.0"
   [7-2007, CRP-17938]
FX This work was sponsored by (a) the Institute for the Promotion of
   Innovation through Science and Technology in Flanders by means of a
   project entitled Change-centric Quality Assurance (CHAQ) with number
   120028, as well as (b) the Regione Autonoma della Sardegna (RAS),
   Regional Law No. 7-2007, project CRP-17938, "LEAN 2.0".
CR Ahmed T, 2017, HUM-CENT COMPUT INFO, V7, DOI 10.1186/s13673-017-0091-8
   Amabile TM, 2005, ADMIN SCI QUART, V50, P367, DOI 10.2189/asqu.2005.50.3.367
   Aman S, 2007, LECT NOTES ARTIF INT, V4629, P196
   Ambler Scott, 2002, Agile modeling: effective practices for extreme programming and the unified process
   [Anonymous], 2012, COMPUT SCI ENG APPL
   [Anonymous], 2001, EMOTIONS SOCIAL PSYC
   [Anonymous], SANER
   [Anonymous], 2010, P 7 INT C LANG RES E
   [Anonymous], 2016, INT C AG SOFTW DEV C
   [Anonymous], 2007, 7 IEEE INT C DAT MIN
   [Anonymous], 2011, J COMPUT SCI-NETH, DOI DOI 10.1016/j.jocs.2010.12.007
   Bacchelli A., 2010, Proceedings of the 32nd International Conference on Software Engineering, P375
   Bacchelli A, 2012, PROC INT CONF SOFTW, P375, DOI 10.1109/ICSE.2012.6227177
   Balabantaray RC., 2012, IJAIS, V4, P48, DOI DOI 10.5120/IJAIS12-450651
   Bazelli B, 2013, PROC IEEE INT CONF S, P460, DOI 10.1109/ICSM.2013.72
   Bo Pang, 2008, Foundations and Trends in Information Retrieval, V2, P1, DOI 10.1561/1500000001
   Brodkin J, 2013, LINUS TORVALDS DEFEN
   BROOKS FP, 1987, COMPUTER, V20, P10, DOI 10.1109/MC.1987.1663532
   Campbell DT., 1963, EXPT QUASIEXPERIMENT
   Cataldi M, 2013, SOC NETW ANAL MIN, V3, P1149, DOI 10.1007/s13278-013-0119-7
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Das SR, 2007, MANAGE SCI, V53, P1375, DOI 10.1287/mnsc.1070.0704
   De Choudhury M., 2013, P 2013 C COMPUTER SU, P303, DOI [10.1145/2441776.2441812, DOI 10.1145/2441776.2441812]
   DeMarco T, 1999, PEOPLEWARE PRODUCTIV
   Destefanis G, 2016, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.73
   Dictionary American Heritage., 2005, The American heritage science dictionary
   Elfenbein HA, 2002, PSYCHOL BULL, V128, P203, DOI 10.1037//0033-2909.128.2.203
   Feldman R, 2013, COMMUN ACM, V56, P82, DOI 10.1145/2436256.2436274
   FLEISS JL, 1971, PSYCHOL BULL, V76, P378, DOI 10.1037/h0031619
   Fowler JH, 2008, BMJ-BRIT MED J, V337, DOI 10.1136/bmj.a2338
   Fredrickson BL, 2001, AM PSYCHOL, V56, P218, DOI 10.1037/0003-066X.56.3.218
   Fritz T, 2016, INT C SOFTW AN EV RE
   Gold J, 2015, PROMINENT LINUX KERN
   Graziotin D, 2014, PEERJ, V2, DOI 10.7717/peerj.289
   Guillory J, 2011, 29TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P745
   Guzman E., 2014, Association for Computing Machinery, P352
   Guzman E, 2013, P 2013 9 JOINT M FDN, P671, DOI 10.1145/2491411.2494578
   Guzzi A, 2013, IEEE WORK CONF MIN S, P277, DOI 10.1109/MSR.2013.6624039
   Hancock JT, 2008, CSCW: 2008 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, CONFERENCE PROCEEDINGS, P295
   Hu M., 2004, P 10 ACM SIGKDD INT, P168, DOI DOI 10.1145/1014052.1014073
   Jongeling R, 2015, IEEE INT C SOFTW MAI
   Mäntylä M, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P247, DOI [10.1109/MSR.2016.033, 10.1145/2901739.2901752]
   Mitchell T. M., 1997, MACHINE LEARNING
   Murgia A., 2014, Proceedings of the 11th working conference on mining software repositories, Ved, P262
   Nagappan M, 2013, 2013 9 JOINT M EUR S, P466, DOI [DOI 10.1145/2491411.2491415, 10.1145/2491411.2491415]
   Ortu M, 2015, INT C AG SOFTW DEV, P129
   Ortu M, 2015, P WORK C MIN SOFTW R
   Ortu M, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P480, DOI [10.1145/2901739.2903505, 10.1109/MSR.2016.059]
   Piller C., 1999, LOS ANGELES TIMES
   PLUTCHIK R, 1989, PROG NEURO-PSYCHOPH, V13, pS23, DOI 10.1016/0278-5846(89)90107-3
   Plutchik R, 2001, AM SCI, V89, P344, DOI 10.1511/2001.4.344
   Rigby P. C., 2007, Proceedings of the 4th International Workshop on Mining Software Repositories (MSR '07), P23, DOI [10.1109/MSR.2007.35, DOI 10.1109/MSR.2007.35]
   Robinson MD, 2004, CURR DIR PSYCHOL SCI, V13, P127, DOI 10.1111/j.0963-7214.2004.00290.x
   semotion, 2016, 1 INT WORKSH EM AW S
   Strapparava C., 2004, Lrec, Volume, V4, P1083
   Tepperman J, 2006, INTERSPEECH 2006 AND 9TH INTERNATIONAL CONFERENCE ON SPOKEN LANGUAGE PROCESSING, VOLS 1-5, P1838
   Tourani P., 2014, CASCON, P34
   Witten IH, 2011, MOR KAUF D, P1
NR 58
TC 32
Z9 32
U1 1
U2 8
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2018
VL 23
IS 1
BP 521
EP 564
DI 10.1007/s10664-017-9526-0
PG 44
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA FU9TG
UT WOS:000424199400014
DA 2024-07-18
ER

PT J
AU Hassan, S
   Shang, WY
   Hassan, AE
AF Hassan, Safwat
   Shang, Weiyi
   Hassan, Ahmed E.
TI An empirical study of emergency updates for top android mobile apps
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Android mobile apps; Emergency updates; Patterns; SDK version;
   Permissions; Empirical study; Software engineering
AB The mobile app market continues to grow at a tremendous rate. The market provides a convenient and efficient distribution mechanism for updating apps. App developers continuously leverage such mechanism to update their apps at a rapid pace. The mechanism is ideal for publishing emergency updates (i.e., updates that are published soon after the previous update). In this paper, we study such emergency updates in the Google Play Store. Examining more than 44,000 updates of over 10,000 mobile apps in the Google Play Store, we identify 1,000 emergency updates. By studying the characteristics of such emergency updates, we find that the emergency updates often have a long lifetime (i.e., they are rarely followed by another emergency update). Updates preceding emergency updates often receive a higher ratio of negative reviews than the emergency updates. However, the release notes of emergency updates rarely indicate the rationale for such updates. Hence, we manually investigate the binary changes of several of these emergency updates. We find eight patterns of emergency updates. We categorize these eight patterns along two categories "Updates due to deployment issues" and "Updates due to source code changes". We find that these identified patterns of emergency updates are often associated with simple mistakes, such as using a wrong resource folder (e.g., images or sounds) for an app. We manually examine each pattern and document its causes and impact on the user experience. App developers should carefully avoid these patterns in order to improve the user experience.
C1 [Hassan, Safwat; Hassan, Ahmed E.] Queens Univ, Sch Comp, SAIL, Kingston, ON, Canada.
   [Shang, Weiyi] Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ, Canada.
C3 Queens University - Canada; Concordia University - Canada
RP Hassan, S (corresponding author), Queens Univ, Sch Comp, SAIL, Kingston, ON, Canada.
EM shassan@cs.queensu.ca; shang@encs.concordia.ca; ahmed@cs.queensu.ca
RI Hassan, Ahmed/AAB-7241-2019; Ali, Ahmed/HOF-4672-2023; KHALIFA, AHMED
   khalifa/HKF-2246-2023
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572
CR [Anonymous], 2011, P 10 ACM WORKSH HOT
   [Anonymous], ROBOTIUM
   [Anonymous], STOR LIM RAW ASS FOL
   [Anonymous], GLOB MOB STAT 2013 S
   [Anonymous], CHECK ANDR PERM IS A
   [Anonymous], EMPIR SOFTW ENG
   [Anonymous], APKT TOOL REV ENG AN
   [Anonymous], SMALI2JAVA
   [Anonymous], 77 WILL NOT DOWNLOAD
   [Anonymous], FREE VERS PAID ANDR
   [Anonymous], COBL COL BLINDN SIM
   [Anonymous], DIFF RES ASS DIR
   [Anonymous], GUIDE COLOR UX CONVE
   [Anonymous], USE PSYCHOL COLOR IN
   [Anonymous], EXTR ANDR PERM ALW S
   [Anonymous], WHICH COLOR IS RIGHT
   [Anonymous], FINDBUGS FIND BUGS J
   [Anonymous], WHAT API LEVEL SHOUL
   [Anonymous], INFORM COMMISSIONERS
   [Anonymous], REM EXTR UNW PERM MA
   [Anonymous], IEEE SOFT
   [Anonymous], MAN PROJ OV ANDR DEV
   [Anonymous], IOS HUM INT GUID COL
   [Anonymous], THESIS
   [Anonymous], STRUCT ANDR APP
   [Anonymous], 37 INT C SOFTW ENG I
   [Anonymous], COL OR DES COL IMP
   [Anonymous], CLEAN UN ANDR PERM
   [Anonymous], STORE USE FILES ASSE
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Banerjee A, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P588, DOI 10.1145/2635868.2635871
   Bavota G, 2015, IEEE T SOFTWARE ENG, V41, P384, DOI 10.1109/TSE.2014.2367027
   Dan Han, 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P83, DOI 10.1109/WCRE.2012.18
   Felt AP, 2011, PROCEEDINGS OF THE 18TH ACM CONFERENCE ON COMPUTER & COMMUNICATIONS SECURITY (CCS 11), P627
   GEHAN EA, 1965, BIOMETRIKA, V52, P203, DOI 10.1093/biomet/52.1-2.203
   Gorla A, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1025, DOI 10.1145/2568225.2568276
   Guana Victor, 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P124, DOI 10.1109/MSR.2012.6224269
   Guzman E, 2014, INT REQUIR ENG CONF, P153, DOI 10.1109/RE.2014.6912257
   Harman M., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P108, DOI 10.1109/MSR.2012.6224306
   Hassan AE, 2004, PROC IEEE INT CONF S, P284, DOI 10.1109/ICSM.2004.1357812
   Hecht Geoffrey., 2015, 30th IEEE/ACM International Conference on Automated Software Engineering. IEEE, Lincoln, Nebraska, United States, P12
   Hemmati H, 2015, 8 IEEE INT C SOFTWAR, P1
   Joorabchi Mona Erfani, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P15, DOI 10.1109/ESEM.2013.9
   Khalid H, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P610, DOI 10.1145/2635868.2635909
   Khalid H, 2015, IEEE SOFTWARE, V32, P70, DOI 10.1109/MS.2014.50
   Khomh F., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P179, DOI 10.1109/MSR.2012.6224279
   Khomh F, 2015, EMPIR SOFTW ENG, V20, P336, DOI 10.1007/s10664-014-9308-x
   Linares-Vasquez Mario, 2013, P 2013 9 JOINT M FDN, P477, DOI DOI 10.1145/2491411.2491428
   Maalej W, 2015, INT REQUIR ENG CONF, P116, DOI 10.1109/RE.2015.7320414
   Mäntylä MV, 2013, PROC IEEE INT CONF S, P20, DOI 10.1109/ICSM.2013.13
   Martin W, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P123, DOI 10.1109/MSR.2015.19
   McIlroy S., 2015, Empirical Software Engineering, P1
   Mojica IJ, 2014, IEEE SOFTWARE, V31, P78, DOI 10.1109/MS.2013.142
   Pandita Rahul, 2013, USENIX SECURITY 13, P527
   Pathak A., 2012, Mobisys, DOI DOI 10.1145/2307636.2307661
   Ravindranath L, 2012, P 10 USENIX C OP SYS, P107, DOI [DOI 10.5555/2387880.2387891, 10.5555/2387880.2387891]
   Ruiz I. J. M., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P113
   Souza R, 2015, IEEE SOFTWARE, V32, P88, DOI 10.1109/MS.2015.30
   Souza R, 2014, 2014 28TH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2014), P31, DOI 10.1109/SBES.2014.10
   Statista, 2016, NUMB APPS AV LEAD AP
   Syer MD, 2015, SOFTWARE QUAL J, V23, P485, DOI 10.1007/s11219-014-9238-2
   Syer MarkD., 2013, Proceedings of the 2013 Conference of the Center for Advanced Studies on Collaborative Research, CASCON '13, P283
   Wan M, 2015, IEEE ICST WORKSHOP
   Xu W, 2013, PROC INT SYMP SOFTW, P400, DOI 10.1109/ISSRE.2013.6698893
   Zimmermann T, 2004, PROC INT CONF SOFTW, P563, DOI 10.1109/ICSE.2004.1317478
NR 65
TC 23
Z9 28
U1 2
U2 26
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2017
VL 22
IS 1
BP 505
EP 546
DI 10.1007/s10664-016-9435-7
PG 42
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EI3GS
UT WOS:000392378400014
DA 2024-07-18
ER

PT J
AU Chatterji, D
   Carver, JC
   Kraft, NA
AF Chatterji, Debarshi
   Carver, Jeffrey C.
   Kraft, Nicholas A.
TI Code clones and developer behavior: results of two surveys of the clone
   research community
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Code clones; Clone evolution; Clone management; Software maintenance;
   Developer behavior; Community survey
ID EVOLUTION
AB The literature presents conflicting claims regarding the effects of clones on software maintainability. For a community to progress, it is important to identify and address those areas of disagreement. Many claims, such as those related to developer behavior, either lack human-based empirical validation or are contradicted by other studies. This paper describes the results of two surveys to evaluate the level of agreement among clone researchers regarding claims that have not yet been validated through human-based empirical study. The surveys covered three key clone-related research topics: general information, developer behavior, and evolution. Survey 1 focused on high-level information about all three topics, whereas Survey 2 focused specifically on developer behavior. Approximately 20 clone researchers responded to each survey. The survey responses showed a lack of agreement on some major clone-related topics. First, the respondents disagree about the definitions of clone types, with some indicating the need for a taxonomy based upon developer intent. Second, the respondents were uncertain whether the ratio of cloned to non-cloned code affected system quality. Finally, the respondents disagree about the usefulness of various detection, analysis, evolution, and visualization tools for clone management tasks such as tracking and refactoring of clones. The overall results indicate the need for more focused, human-based empirical research regarding the effects of clones during maintenance. The paper proposes a strategy for future research regarding developer behavior and code clones in order to bridge the gap between clone research and the application of that research in clone maintenance.
C1 [Chatterji, Debarshi] Univ Alabama, Tuscaloosa, AL USA.
   [Carver, Jeffrey C.] Univ Alabama, Dept Comp Sci, Tuscaloosa, AL 35487 USA.
   [Kraft, Nicholas A.] ABB Corp Res, Raleigh, NC USA.
C3 University of Alabama System; University of Alabama Tuscaloosa;
   University of Alabama System; University of Alabama Tuscaloosa; ABB
RP Carver, JC (corresponding author), Univ Alabama, Dept Comp Sci, Tuscaloosa, AL 35487 USA.
EM dchatterji@ua.edu; carver@cs.ua.edu; nicholas.a.kraft@us.abb.com
RI Carver, Jeffrey/AFP-1987-2022; Carver, Jeffrey/AAM-8202-2020
OI Carver, Jeffrey/0000-0002-7824-9151; Carver, Jeffrey/0000-0002-7824-9151
FU NSF [CCF-0915559]
FX We thank the survey respondents. We acknowledge support from NSF grant
   CCF-0915559.
CR Barbour L, 2013, J SOFTW-EVOL PROC, V25, P1139, DOI 10.1002/smr.1597
   Baxter ID, 1998, PROC IEEE INT CONF S, P368, DOI 10.1109/ICSM.1998.738528
   Bellon S, 2007, IEEE T SOFTWARE ENG, V33, P577, DOI 10.1109/TSE.2007.70725
   Cai DX, 2011, LECT NOTES COMPUT SC, V6603, P432, DOI 10.1007/978-3-642-19811-3_30
   Chatterji D., 2012, 2012 Proceedings of the 6th International Workshop on Software Clones (IWSC 2012), P15, DOI 10.1109/IWSC.2012.6227860
   Chatterji D, 2013, WORK CONF REVERSE EN, P112, DOI 10.1109/WCRE.2013.6671286
   Chatterji D, 2011, INT SYMP EMP SOFTWAR, P20, DOI 10.1109/ESEM.2011.10
   de Wit M, 2009, PROC IEEE INT CONF S, P169, DOI 10.1109/ICSM.2009.5306336
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   GLASER BG, 1965, SOC PROBL, V12, P436, DOI 10.1525/sp.1965.12.4.03a00070
   Göde N, 2013, J SOFTW-EVOL PROC, V25, P165, DOI 10.1002/smr.520
   Harder Jan, 2013, Journal of Software: Evolution and Process, V25, P1063, DOI 10.1002/smr.1551
   Jablonski Patricia, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P170, DOI 10.1109/ICPC.2010.22
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kapser CJ, 2008, EMPIR SOFTW ENG, V13, P645, DOI 10.1007/s10664-008-9076-6
   Kim M, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P83
   Kim Miryung, 2005, ESEC/FSE- 13), P187, DOI [10.1145/1081706.1081737, DOI 10.1145/1081706.1081737]
   Koschke R., 2012, Dagstuhl Reports, V2, P21
   Lozano A., 2007, PROC 4 INT WORKSHOP, P18, DOI DOI 10.1109/MSR.2007.8
   Pate JR, 2013, J SOFTW-EVOL PROC, V25, P261, DOI 10.1002/smr.579
   Rahman Foyzur, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P72, DOI 10.1109/MSR.2010.5463343
   Roy CK, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P18, DOI 10.1109/CSMR-WCRE.2014.6747168
   Roy CK, 2009, SCI COMPUT PROGRAM, V74, P470, DOI 10.1016/j.scico.2009.02.007
   Thummalapenta S, 2010, EMPIR SOFTW ENG, V15, P1, DOI 10.1007/s10664-009-9108-x
   Zhang G, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P285, DOI 10.1109/ICSM.2012.6405284
NR 25
TC 8
Z9 9
U1 1
U2 13
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2016
VL 21
IS 4
BP 1476
EP 1508
DI 10.1007/s10664-015-9394-4
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DQ2VF
UT WOS:000379060700002
DA 2024-07-18
ER

PT J
AU Tu, YC
   Tempero, E
   Thomborson, C
AF Tu, Yu-Cheng
   Tempero, Ewan
   Thomborson, Clark
TI An experiment on the impact of transparency on the effectiveness of
   requirements documents
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Controlled experiments; Functional requirements; Requirements
   specification; Use case models; Transparency; Communication
ID SOFTWARE; COMMUNICATION
AB Effective communication is important to successful software development, but it is difficult to achieve. We believe transparency - the visibility of information to stakeholders - is an important factor in the effectiveness of communication in software projects. We theorise that more effective communication results from more transparent requirements documents. To test our theory, we conducted an experiment. We developed an operational definition of transparency with three attributes: accessibility, understandability, and relevance. We had students and software practitioners use requirements documents of differing levels of transparency based on these attributes to answer questions. We found that participants with the more transparent document spent less time, answered more questions correctly, and were more confident about their answers, than participants with the less transparent document. The results of our experiment provide evidence that our view of transparency may help evaluate the effectiveness of documents as a form of communication. Further work is needed to reproduce our results, and to determine whether they are generalizable to other types of stakeholders and forms of communication.
C1 [Tu, Yu-Cheng; Tempero, Ewan; Thomborson, Clark] Univ Auckland, Dept Comp Sci, Auckland, New Zealand.
C3 University of Auckland
RP Tu, YC (corresponding author), Univ Auckland, Dept Comp Sci, Auckland, New Zealand.
EM ytu001@aucklanduni.ac.nz; e.tempero@cs.auckland.ac.nz;
   c.thomborson@auckland.ac.nz
RI Tempero, Ewan/D-2621-2009; Thomborson, Clark/A-1055-2009
OI Tu, Yu-Cheng/0000-0001-7284-7081; Thomborson, Clark/0000-0002-4147-7898
CR Allaby M., 2008, DICT EARTH SCI
   ALRAWAS A, 1996, P 1 WESTM C PROF AW, P47
   Anda B., 2001, ECOOP 2001 - Object-Oriented Programming. 15th European Conference. Proceedings (Lecture Notes in Computer Science Vol.2072), P402
   Awad NF, 2006, MIS QUART, V30, P13
   Bevan N, 1997, THIRD IEEE INTERNATIONAL SOFTWARE ENGINEERING STANDARDS SYMPOSIUM AND FORUM (ISESS 97) - EMERGING INTERNATIONAL STANDARDS, PROCEEDINGS, P169, DOI 10.1109/SESS.1997.595963
   Bickerstaff K., 2002, Journal of Transport Geography, V10, P61, DOI [DOI 10.1016/S0966-6923(01)00027-8, 10.1016/S0966-6923(01)00027-8]
   Bird C, 2005, INF PROF, V2, P33
   Cerri S, 2000, EMS - 2000: PROCEEDINGS OF THE 2000 IEEE ENGINEERING MANAGEMENT SOCIETY, P625, DOI 10.1109/EMS.2000.872578
   Clarke R, 1999, COMMUN ACM, V42, P60, DOI 10.1145/293411.293475
   Coughlan J., 2002, Requirements Engineering, V7, P47, DOI 10.1007/s007660200004
   CURTIS B, 1988, COMMUN ACM, V31, P1268, DOI 10.1145/50087.50089
   Damian DEH, 2000, IEEE SOFTWARE, V17, P28, DOI 10.1109/52.896247
   Fleischmann KR, 2009, COMMUN ACM, V52, P131, DOI 10.1145/1467247.1467278
   Fleischmann KR, 2005, COMMUN ACM, V48, P93, DOI 10.1145/1060710.1060715
   Forward A., 2002, Proceedings of the 2002 ACM symposium on Document engineering, P26, DOI 10.1145/585058.585065
   Fowler M, 2004, UML distilled: A brief guide to the standard object modeling language
   Hartwick J, 2001, IEEE T PROF COMMUN, V44, P21, DOI 10.1109/47.911130
   Heijstek W, 2011, INT SYMP EMP SOFTWAR, P167, DOI 10.1109/ESEM.2011.25
   Hertzum M, 2000, INFORM PROCESS MANAG, V36, P761, DOI 10.1016/S0306-4573(00)00011-X
   Ingalls P, 2009, AGILE 2009 CONFERENCE, P119, DOI 10.1109/AGILE.2009.42
   Jedlitschka A., 2008, Guide to advanced empirical software engineering, P201, DOI DOI 10.1007/978-1-84800-044-5_8
   LEFFINGWELL D, 2000, MANAGING SOFTWARE RE
   LYYTINEN K, 1987, OXFORD SURV INF TECH, V4, P257
   Norman G, 2010, ADV HEALTH SCI EDUC, V15, P625, DOI 10.1007/s10459-010-9222-y
   Oliver RW., 2004, WHAT IS TRANSPARENCY
   Poole WG, 2003, 16TH CONFERENCE ON SOFTWARE ENGINEERING EDUCATION AND TRAINING, PROCEEDINGS, P14, DOI 10.1109/CSEE.2003.1191341
   Rowe G, 2000, SCI TECHNOL HUM VAL, V25, P3, DOI 10.1177/016224390002500101
   Saiedian H, 2000, INFORM SOFTWARE TECH, V42, P419, DOI 10.1016/S0950-5849(99)00101-9
   Santana A, 2009, ETHICS INF TECHNOL, V11, P133, DOI 10.1007/s10676-009-9193-y
   Schwaber K, 2012, SCRUM GUIDE
   Tan BCY, 2003, IEEE T ENG MANAGE, V50, P64, DOI 10.1109/TEM.2002.808292
   Trochim W.M., 2001, Research Methods Knowledge Base, V2
   Tu Y.-C., 2014, COMMUN COMPUT PHYS, P120
   Tu Y. C., 2014, THESIS
   Verner JM, 1999, INFORM SOFTWARE TECH, V41, P1021, DOI 10.1016/S0950-5849(99)00077-4
   WALZ DB, 1993, COMMUN ACM, V36, P63, DOI 10.1145/163430.163447
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
NR 37
TC 14
Z9 17
U1 0
U2 9
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2016
VL 21
IS 3
BP 1035
EP 1066
DI 10.1007/s10664-015-9374-8
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DQ2VO
UT WOS:000379061700010
DA 2024-07-18
ER

PT J
AU Corazza, A
   Di Martino, S
   Maggio, V
   Scanniello, G
AF Corazza, Anna
   Di Martino, Sergio
   Maggio, Valerio
   Scanniello, Giuseppe
TI Weighing lexical information for software clustering in the context of
   architecture recovery
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software understanding; Reengineering; Software clustering;
   Probabilistic model; Software maintenance
ID ALGORITHMS; COHESION
AB In this paper, we present a software clustering approach that leverages the information conveyed by the zone in which each lexeme appears in the classes of object oriented systems. We define six zones in the source code: Class Name, Attribute Name, Method Name, Parameter Name, Comment, and Source Code Statement. These zones may convey information with different levels of relevance, and so their contribution should be differently weighed according to the software system under study. To this aim, we define a proba-bilistic model of the lexemes distribution whose parameters are automatically estimated by the Expectation-Maximization algorithm. The weights of the zones are then exploited to compute similarities among source code classes, which are then grouped by a k-Medoid clustering algorithm. To assess the validity of our solution in the software architecture recovery field, we applied our approach to 19 software systems from different application domains. We observed that the use of our probabilistic model and the defined zones improves the quality of clustering results so that they are close to a theoretical upper bound we have proved.
C1 [Corazza, Anna; Di Martino, Sergio] Univ Naples Federico II, Dept Elect Engn & Informat Technol, Naples, Italy.
   [Maggio, Valerio] Univ Salerno, Dept Informat & Elect Engn & Appl Math, I-84100 Salerno, Italy.
   [Scanniello, Giuseppe] Univ Basilicata, Dipartimento Matemat Informat & Econ, I-85100 Potenza, Italy.
C3 University of Naples Federico II; University of Salerno; University of
   Basilicata
RP Maggio, V (corresponding author), Univ Salerno, Dept Informat & Elect Engn & Appl Math, I-84100 Salerno, Italy.
EM anna.corazza@unina.it; sergio.dimartino@unina.it; vmaggio@unisa.it;
   giuseppe.scanniello@unibas.it
RI Di Martino, Sergio/F-2602-2012
OI Di Martino, Sergio/0000-0002-1019-9004; Maggio,
   Valerio/0000-0003-4824-893X; Scanniello, Giuseppe/0000-0003-0024-7508;
   CORAZZA, Anna/0000-0002-9156-5079
CR Ali N., 2011, 2011 18th Working Conference on Reverse Engineering, P45, DOI 10.1109/WCRE.2011.16
   Andritsos P, 2005, IEEE T SOFTWARE ENG, V31, P150, DOI 10.1109/TSE.2005.25
   [Anonymous], PRACTICAL NONPARAMET
   [Anonymous], JOINT P 2 INT SOFTW
   [Anonymous], EM ALGORITHM EXTENSI
   [Anonymous], BUS WEEK
   [Anonymous], THESIS U STUTTGART
   [Anonymous], 1997, An Algorithm for Suffix Stripping, page
   [Anonymous], 2005, THESIS BRUNEL U
   [Anonymous], 1998, LEARNING TEXT CATEGO
   [Anonymous], ETERNAL SYSTEMS COMM
   [Anonymous], ACM T SOFTW ENG METH
   Anquetil N., 1999, Sixth Working Conference on Reverse Engineering (Cat. No.PR00303), P235, DOI 10.1109/WCRE.1999.806964
   Basili V. R., 1996, Empirical Software Engineering, V1, P133, DOI 10.1007/BF00368702
   Bavota G., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P195, DOI 10.1109/WCRE.2010.29
   Bavota G, 2014, IEEE T SOFTWARE ENG, V40, P671, DOI 10.1109/TSE.2013.60
   Bavota G, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P692, DOI 10.1109/ICSE.2013.6606615
   Bavota G, 2013, EMPIR SOFTW ENG, V18, P901, DOI 10.1007/s10664-012-9226-8
   Binkley D, 2007, FoSE 2007: Future of Software Engineering, P104, DOI 10.1109/FOSE.2007.27
   Bishop Christopher M, 2006, PATTERN RECOGN, V128, P1
   Bittencourt RA, 2009, EUR CON SFTWR MTNCE, P251, DOI 10.1109/CSMR.2009.28
   Corazza A, 2011, EUR CON SFTWR MTNCE, P35, DOI 10.1109/CSMR.2011.8
   Corazza A, 2010, EUR CON SFTWR MTNCE, P88, DOI 10.1109/CSMR.2010.36
   De Lucia A., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P193
   De Lucia A, 2011, IEEE T SOFTWARE ENG, V37, P205, DOI 10.1109/TSE.2010.89
   De Lucia A, 2009, J WEB ENG, V8, P346
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   DEMPSTER AP, 1977, J ROY STAT SOC B MET, V39, P1, DOI 10.1111/j.2517-6161.1977.tb01600.x
   Ducasse S, 2009, IEEE T SOFTWARE ENG, V35, P573, DOI 10.1109/TSE.2009.19
   Dybå T, 2006, INFORM SOFTWARE TECH, V48, P745, DOI 10.1016/j.infsof.2005.08.009
   Eastwood A., 1993, Computing Canada, V19, P17
   Erlikh L., 2000, IT Professional, V2, P17, DOI 10.1109/6294.846201
   Flach P., 2012, Model ensembles,'' inMachine Learning: The Art and Scienceof Algorithms That Make Sense of Data
   Freedman KB, 1999, J BONE JOINT SURG AM, V81A, P1454, DOI 10.2106/00004623-199910000-00011
   Freund R.J., 2003, STAT METHODS
   Grubb P., 2003, Software Maintenance: Concepts and Practice, V2.
   Jarzabek S, 2007, Effective software maintenance and evolution: A reuse-based approach
   Kaufman L., 2009, FINDING GROUPS DATA
   Kitchenham B, 2008, EMPIR SOFTW ENG, V13, P97, DOI 10.1007/s10664-007-9053-5
   Kuhn A, 2005, WCRE: 12TH WORKING CONFERENCE ON REVERSE ENGINEERING 2005, PROCEEDINGS, P133
   Kuhn A, 2007, INFORM SOFTWARE TECH, V49, P230, DOI 10.1016/j.infsof.2006.10.017
   Liu YX, 2009, PROC IEEE INT CONF S, P233, DOI 10.1109/ICSM.2009.5306318
   Maletic JI, 2001, PROC INT CONF SOFTW, P103, DOI 10.1109/ICSE.2001.919085
   Manning Christopher D., 2008, INTRO INFORM RETRIEV
   Maqbool O, 2007, IEEE T SOFTWARE ENG, V33, P759, DOI 10.1109/TSE.2007.70732
   Marcus A, 2005, PROC IEEE INT CONF S, P133
   Mashiko Y, 1997, J SYST SOFTWARE, V36, P17, DOI 10.1016/0164-1212(95)00194-8
   Mitchell T. M., 1997, MACHINE LEARNING
   Pfleeger SL, 2000, IEEE SOFTWARE, V17, P27, DOI 10.1109/52.819965
   Poshyvanyk D, 2006, PROC IEEE INT CONF S, P469
   Press W. H., 2002, Numerical Recipes in C: the Art of Scientific Computing, V2nd ed., DOI DOI 10.1119/1.14981
   Reggio G, 2011, LECT NOTES COMPUT SC, V6981, P138, DOI 10.1007/978-3-642-24485-8_11
   Revelle M, 2011, EMPIR SOFTW ENG, V16, P773, DOI 10.1007/s10664-011-9159-7
   Risi M, 2012, FORM ASP COMPUT, V24, P307, DOI 10.1007/s00165-011-0199-y
   Romano S., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P500, DOI 10.1109/ICSM.2011.6080818
   Romesburg C., 2004, CLUSTER ANAL RES
   SALTON G, 1975, COMMUN ACM, V18, P613, DOI 10.1145/361219.361220
   SAW JG, 1984, AM STAT, V38, P130, DOI 10.2307/2683249
   Scanniello Giuseppe, 2010, Proceedings of the 2010 8th IEEE International Conference on Software Engineering and Formal Methods (SEFM 2010), P103, DOI 10.1109/SEFM.2010.19
   Scanniello Giuseppe, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P180, DOI 10.1109/ICPC.2010.17
   Scanniello G, 2015, EMPIR SOFTW ENG, V20, P1666, DOI 10.1007/s10664-014-9327-7
   Scanniello G, 2013, IEEE INT CONF AUTOM, P640, DOI 10.1109/ASE.2013.6693126
   Scanniello G, 2011, CONF PROC INT SYMP C, P1, DOI 10.1109/ICPC.2011.13
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   Shtern M., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P353, DOI 10.1109/ICSM.2011.6080802
   Tonella P, 2001, IEEE T SOFTWARE ENG, V27, P351, DOI 10.1109/32.917524
   Tzerpos V., 1999, Sixth Working Conference on Reverse Engineering (Cat. No.PR00303), P187, DOI 10.1109/WCRE.1999.806959
   van Deursen A, 2004, FOURTH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA 2004), PROCEEDINGS, P122, DOI 10.1109/WICSA.2004.1310696
   Wen Z, 2004, PROG COMPREHEN, P194, DOI 10.1109/WPC.2004.1311061
   Wiggerts TA, 1997, PROCEEDINGS OF THE FOURTH WORKING CONFERENCE ON REVERSE ENGINEERING, P33, DOI 10.1109/WCRE.1997.624574
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Wu JW, 2005, PROC IEEE INT CONF S, P525
NR 72
TC 28
Z9 32
U1 0
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2016
VL 21
IS 1
BP 72
EP 103
DI 10.1007/s10664-014-9347-3
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DI2SQ
UT WOS:000373349300004
DA 2024-07-18
ER

PT J
AU McBurney, PW
   McMillan, C
AF McBurney, Paul W.
   McMillan, Collin
TI An empirical study of the textual similarity between source code and
   source code summaries
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Source code summarization; Documentation; Textual similarity; Automatic
   documentation generation
ID SOFTWARE MAINTENANCE; DOCUMENTATION; INFORMATION
AB Source code documentation often contains summaries of source code written by authors. Recently, automatic source code summarization tools have emerged that generate summaries without requiring author intervention. These summaries are designed for readers to be able to understand the high-level concepts of the source code. Unfortunately, there is no agreed upon understanding of what makes up a "good summary." This paper presents an empirical study examining summaries of source code written by authors, readers, and automatic source code summarization tools. This empirical study examines the textual similarity between source code and summaries of source code using Short Text Semantic Similarity metrics. We found that readers use source code in their summaries more than authors do. Additionally, this study finds that accuracy of a human written summary can be estimated by the textual similarity of that summary to the source code.
C1 [McBurney, Paul W.; McMillan, Collin] Univ Notre Dame, Dept Comp Sci & Engn, Notre Dame, IN 46556 USA.
C3 University of Notre Dame
RP McMillan, C (corresponding author), Univ Notre Dame, Dept Comp Sci & Engn, Notre Dame, IN 46556 USA.
EM pmcburne@nd.edu; cmc@nd.edu
CR [Anonymous], 2010, P IEEE ACM INT C AUT
   BIGGERSTAFF TJ, 1993, PROC INT CONF SOFTW, P482, DOI 10.1109/ICSE.1993.346017
   Brandt J, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P513
   Burden H., 2011, Proceedings of the 8th International Workshop on Model-Driven Engineering, Verification and Validation, MoDeVVa, p8:1, DOI DOI 10.1145/2095654.2095665
   Buse R.P., 2008, Proceedings of the 2008 International Symposium on Software Testing and Analysis, ISSTA '08, P273
   Croft D, 2013, 2013 13TH UK WORKSHOP ON COMPUTATIONAL INTELLIGENCE (UKCI), P221, DOI 10.1109/UKCI.2013.6651309
   Davison JW, 2000, BELL LABS TECH J, V5, P44, DOI 10.1002/bltj.2221
   de Souza S.C.B., 2005, P 23 ANN INT C DES C, P68, DOI [10.1145/1085313, 10.1145/1085313.1085331]
   Eddy B., 2013, P 21 INT C PROGR COM
   Fluri B, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P70, DOI 10.1109/WCRE.2007.21
   Forward A., 2002, Proceedings of the 2002 ACM symposium on Document engineering, P26, DOI 10.1145/585058.585065
   Guzzi A, 2012, PROC INT CONF SOFTW, P1535, DOI 10.1109/ICSE.2012.6227043
   Haiduc S., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P35, DOI 10.1109/WCRE.2010.13
   Holmes R, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2377656.2377657
   Ibrahim WM, 2012, J SYST SOFTWARE, V85, P2293, DOI 10.1016/j.jss.2011.09.019
   Kajko-Mattsson M, 2005, EMPIR SOFTW ENG, V10, P31, DOI 10.1023/B:LIDA.0000048322.42751.ca
   Khamis N, 2010, LECT NOTES COMPUT SC, V6177, P68, DOI 10.1007/978-3-642-13881-2_7
   Ko AJ, 2005, J VISUAL LANG COMPUT, V16, P41, DOI 10.1016/j.jvlc.2004.08.003
   Ko AJ, 2006, IEEE T SOFTWARE ENG, V32, P971, DOI 10.1109/TSE.2006.116
   Kotonya G, 2008, LECT NOTES COMPUT SC, V5282, P302, DOI 10.1007/978-3-540-87891-9_20
   Kramer D., 1999, Seventeenth Annual International Conference on Computer Documentation. Conference Proceedings, P147, DOI 10.1145/318372.318577
   LAKHOTIA A, 1993, J SYST SOFTWARE, V23, P269, DOI 10.1016/0164-1212(93)90101-3
   Lethbridge TC, 2003, IEEE SOFTWARE, V20, P35, DOI 10.1109/MS.2003.1241364
   Li YH, 2003, IEEE T KNOWL DATA EN, V15, P871, DOI 10.1109/TKDE.2003.1209005
   Li YH, 2006, IEEE T KNOWL DATA EN, V18, P1138, DOI 10.1109/TKDE.2006.130
   Liblit Ben, 2006, P 18 ANN WORKSHOP PS, P11
   LITTMAN DC, 1987, J SYST SOFTWARE, V7, P341, DOI 10.1016/0164-1212(87)90033-1
   Mani S., 2012, P ACM SIGSOFT 20 INT, P1, DOI DOI 10.1145/2393596.2393607
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   McBurney PW, 2014, P 22 INT C IN PRESS, P1
   MILLER GA, 1995, COMMUN ACM, V38, P39, DOI 10.1145/219717.219748
   Moreno L, 2013, P 21 INT C PROGR COM
   Roehm T, 2012, PROC INT CONF SOFTW, P255, DOI 10.1109/ICSE.2012.6227188
   Singer Janice, 1997, Proceedings of the 1997 Conference of the Centre for Advanced Studies on Collaborative Research. CASCON '97, P21
   Sridhara G, 2011, CONF PROC INT SYMP C, P71, DOI 10.1109/ICPC.2011.28
   Sridhara G, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P101, DOI 10.1145/1985793.1985808
   Sridhara Giriprasad, 2010, 25 IEEEACM INT C AUT, P43
   Steidl D, 2013, P 21 INT C PROGR COM
   Stylos J, 2006, IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P195
NR 39
TC 25
Z9 29
U1 0
U2 11
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2016
VL 21
IS 1
BP 17
EP 42
DI 10.1007/s10664-014-9344-6
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DI2SQ
UT WOS:000373349300002
DA 2024-07-18
ER

PT J
AU Santos, V
   Goldman, A
   de Souza, CRB
AF Santos, Viviane
   Goldman, Alfredo
   de Souza, Cleidson R. B.
TI Fostering effective inter-team knowledge sharing in agile software
   development
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Agile methods; Inter-team knowledge sharing effectiveness; Practices;
   Organizational conditions; Stimuli; Conceptual model
ID TACIT KNOWLEDGE; MANAGEMENT; ORGANIZATIONS; BA; SUPPORT
AB Agile methods have different practices that ultimately foster intra-team knowledge sharing (KS). However, they do not provide recommendations about coping with inter-team KS. Supporting inter-team KS is fundamental in scaling agility across the entire organization, and is regarded as the new horizon for agile software development. This study seeks to understand inter-team knowledge sharing effectiveness in agile software development organizations. Using grounded theory, we analyzed data from four Brazilian organizations and also from an expert in agile methods implementation. We observed that the companies employ different work practices that allow knowledge sharing to occur across team boundaries. Our main contribution is a conceptual model that explains how effective knowledge sharing across agile teams depends on applying purposeful practices, along with organizational conditions and stimuli. This understanding represents an innovative focus within the context of agile methods and suggests what one needs to take into account when striving on this path. Yet, it yields opportunities for further studies in refining and extending the model to other organizational contexts. Inter-team knowledge sharing reflects the way agile software development organizations are coping with enterprise agility and the way they consider knowledge as a resource for competitiveness.
C1 [Santos, Viviane; Goldman, Alfredo] Univ Sao Paulo, Dept Comp Sci, BR-05508090 Sao Paulo, SP, Brazil.
   [de Souza, Cleidson R. B.] Vale Inst Technol, BR-66035090 Belem, Para, Brazil.
   [de Souza, Cleidson R. B.] Fed Univ Para, BR-66035090 Belem, Para, Brazil.
C3 Universidade de Sao Paulo; Instituto Tecnologico Vale Desenvolvimento
   Sustentavel; Universidade Federal do Para
RP Santos, V (corresponding author), Univ Sao Paulo, Dept Comp Sci, Rua Matao 1010, BR-05508090 Sao Paulo, SP, Brazil.
EM vsantos@ime.usp.br; gold@ime.usp.br; cleidson.desouza@acm.org
RI de Souza, Cleidson R B/J-4409-2014; Goldman, Alfredo/J-3739-2017
OI de Souza, Cleidson R B/0000-0003-3240-3122; Goldman,
   Alfredo/0000-0001-5746-4154
FU FAPESP [2009/16354-0]; CNPQ [476661/2010-2]; Fundacao de Amparo a
   Pesquisa do Estado de Sao Paulo (FAPESP) [09/16354-0] Funding Source:
   FAPESP
FX This work was supported by FAPESP project no. 2009/16354-0 and CNPQ
   project no. 476661/2010-2. We are grateful to all organizations and
   members participating in the study.
CR Altheide D., 1994, Handbook of Qualitative Research pp, P485
   Aniche M. F., 2011, Proceedings of the 2011 Agile Conference, P289, DOI 10.1109/AGILE.2011.13
   [Anonymous], 2002, Pair Programming Illuminated
   Argyris C., 1999, On organizational learning, V2nd
   Baxter G, 2011, INTERACT COMPUT, V23, P4, DOI 10.1016/j.intcom.2010.07.003
   Beck K., 2000, EXTREME PROGRAMMING
   Beck Kent L., 2003, Test Driven Development By Example
   Berger Peter., 1966, SOCIAL CONSTRUCTION
   Bjornson FO, 2008, INFORM SOFTWARE TECH, V50, P1055, DOI 10.1016/j.infsof.2008.03.006
   Boden A, 2009, INT CONF GLOBAL SOFT, P18, DOI 10.1109/ICGSE.2009.10
   Brossler P, 1999, P WORKSH LEARN SOFTW, P77
   Brown J.S., 1991, ORG SCI, V2
   Cabral AY, 2009, LECT NOTES BUS INF P, V24, P627
   Chau T, 2004, LECT NOTES COMPUT SC, V3075, P173, DOI 10.1007/978-3-540-25967-1_12
   Chau T, 2003, TWELFTH IEEE INTERNATIONAL WORKSHOPS ON ENABLING TECHNOLOGIES: INFRASTRUCTURE FOR COLLABORATIVE ENTERPRISES, PROCEEDINGS, P302
   Chau T, 2010, LOGIC APPROX, V3075, P173
   Chau T, 2005, THESIS U CALGARY CAN
   Choo CW, 2010, J KNOWL MANAG, V14, P592, DOI 10.1108/13673271011059545
   Cockburn A, 2001, COMPUTER, V34, P131, DOI 10.1109/2.963450
   Cockburn A., 2006, AGILE SOFTWARE DEV C
   Conboy K, 2010, ACM T SOFTW ENG METH, V20, DOI 10.1145/1767751.1767753
   Conboy K, 2009, INFORM SYST RES, V20, P329, DOI 10.1287/isre.1090.0236
   Coplien JO, 2004, ORG PATTERNS AGILE S
   Corbin J, 2008, Techniques and procedures for developing grounded theory, V3rd
   Corbucci H., 2011, Proceedings of the 2011 25th Brazilian Symposium on Software Engineering (SBES 2011), P98, DOI 10.1109/SBES.2011.26
   Cummings JN, 2004, MANAGE SCI, V50, P352, DOI 10.1287/mnsc.1030.0134
   Derby Esther., 2006, AGILE RETROSPECTIVES
   Desouza KC, 2003, COMMUN ACM, V46, P85, DOI 10.1145/777313.777317
   Dierkes M., 2003, HDB ORG LEARNING KNO
   Dingsoyr T, 2002, LECT NOTES COMPUT SC, V2640, P4
   Dingsoyr T, 2012, J SYST SOFTWARE, V85, P1213, DOI 10.1016/j.jss.2012.02.033
   Donate MJ, 2012, J KNOWL MANAG, V16, P22, DOI 10.1108/13673271211198927
   Doran HD, 2004, LECT NOTES COMPUT SC, V3096, P137
   du Plessis M., 2007, Journal of Knowledge Management, V11, P91
   Easterby-Smith M., 2011, Handbook of Organizational Learning and Knowledge Management
   Eckstein J., 2004, Agile Software Development in Large . Diving into the Deep
   Faegri TE, 2009, AGILE 2009 CONFERENCE, P49, DOI 10.1109/AGILE.2009.69
   Fægri TE, 2010, INFORM SOFTWARE TECH, V52, P1118, DOI 10.1016/j.infsof.2010.06.002
   Fraser S, 2006, P C OBJ OR PROGR SYS, P937
   Glaser B. G., 1967, DISCOV GROUNDED THEO
   Guba E.G., 1994, Handbook of Qualitative Research, V2, P163
   Guba E. G., 1989, 4 GENERATION EVALUAT
   Hannay JE, 2009, INFORM SOFTWARE TECH, V51, P1110, DOI 10.1016/j.infsof.2009.02.001
   Hansen MT, 1999, HARVARD BUS REV, V77, P106
   Holz H, 2004, LECT NOTES COMPUT SC, V3096, P1
   Holz H, 2002, LECT NOTES COMPUT SC, V2640, P60
   Holz H, 2003, TWELFTH IEEE INTERNATIONAL WORKSHOPS ON ENABLING TECHNOLOGIES: INFRASTRUCTURE FOR COLLABORATIVE ENTERPRISES, PROCEEDINGS, P320
   Holz H, 2003, TWELFTH IEEE INTERNATIONAL WORKSHOPS ON ENABLING TECHNOLOGIES: INFRASTRUCTURE FOR COLLABORATIVE ENTERPRISES, PROCEEDINGS, P291
   Holz H., 2003, Advances in Learning Software Organizations. 4th International Workshop, LSO 2002. Revised Papers. (Lecture Notes in Comput. Sci. Vol.2640), P60
   Iivari J, 2010, AGILE SOFTWARE DEVELOPMENT: CURRENT RESEARCH AND FUTURE DIRECTIONS, P203, DOI 10.1007/978-3-642-12575-1_10
   Ilgen DR, 2005, ANNU REV PSYCHOL, V56, P517, DOI 10.1146/annurev.psych.56.091103.070250
   Donate MJ, 2011, J KNOWL MANAG, V15, P890, DOI 10.1108/13673271111179271
   Joia LA, 2010, J KNOWL MANAG, V14, P410, DOI 10.1108/13673271011050139
   Kähkönen T, 2004, PROCEEDINGS OF THE AGILE DEVELOPMENT CONFERENCE, P2
   Karlsen Jan Terje, 2011, Journal of Systems and Information Technology, V13, P66, DOI 10.1108/13287261111118359
   Kavitha R., 2011, 2011 INT C PROCESS A, DOI [10.1109/PACC.2011.5978877, DOI 10.1109/PACC.2011.5978877]
   Keplinger W, 2007, ISCHANNEL INFORM SYS, V2, P25
   Kettunen O, 2010, THESIS HELSINKI U TE
   Kettunen P., 2008, SOFTWARE PROCESS IMP, V13, P183, DOI [10.1002/, DOI 10.1002/SPIP.354]
   Levy M, 2009, 2009 ICSE WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING, P60, DOI 10.1109/CHASE.2009.5071412
   Lincoln Y. S., 1985, NATURALISTIC INQUIRY
   Lindvall M, 2002, P 2 XP UN 1 AG UN C
   Lyytinen K, 2006, EUR J INFORM SYST, V15, P183, DOI 10.1057/palgrave.ejis.3000604
   Maalej W, 2008, LECT NOTES ARTIF INT, V5345, P14, DOI 10.1007/978-3-540-89447-6_4
   Maranzato RP, 2011, P ACM INT C COMP OBJ, P125
   Merriam S.B., 2002, Qualitative research in practice, P18
   Mestad A., 2007, P 40 HAW INT C SYST
   Nerur S, 2005, COMMUN ACM, V48, P72, DOI 10.1145/1060710.1060712
   Neves FT, 2011, 6 C IB SIST TECN INF
   Nonaka I, 1998, CALIF MANAGE REV, V40, P40, DOI 10.2307/41165942
   Nonaka I, 2000, LONG RANGE PLANN, V33, P5, DOI 10.1016/S0024-6301(99)00115-6
   NONAKA I, 1988, CALIF MANAGE REV, V30, P57, DOI 10.2307/41166514
   Nonaka I., 1995, The Knowledge-Creating Company How Japanese Companies Create the Dynamics of Information, DOI DOI 10.1016/0024-6301(96)81509-3
   Nonaka I, 2007, IND CORP CHANGE, V16, P371, DOI 10.1093/icc/dtm014
   Nonaka I, 2009, ORGAN SCI, V20, P635, DOI 10.1287/orsc.1080.0412
   Pettersen R, 2012, PRACTICAL KNOWLEDGE
   Pettigrew A., 1979, ADMIN SCI QUART, V24, P570
   Pikkarainen M, 2008, EMPIR SOFTW ENG, V13, P303, DOI 10.1007/s10664-008-9065-9
   Pikkarainen M, 2005, LECT NOTES COMPUT SC, V3792, P16
   Plonka Laura, 2012, 2012 5th International Workshop on Cooperative and Human Aspects of Software Engineering, P123, DOI 10.1109/CHASE.2012.6223006
   Qureshi MRJ, 2009, INT CONF EMERG TECHN, P389, DOI 10.1109/ICET.2009.5353140
   Rech J, 2010, INT J KNOWL MANAG, V6, P66, DOI 10.4018/jkm.2010040104
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Salo O., 2007, Software Process Improvement and Practice, V12, P81, DOI 10.1002/spip.305
   Salo O, 2005, LECT NOTES ARTIF INT, V3782, P106
   Santos V, 2012, CLEI ELECT J, V15, P1
   Santos V., 2011, P 23 INT C SOFTW ENG, P583
   Sato D, 2008, AGILE 2008, PROCEEDINGS, P459, DOI 10.1109/Agile.2008.11
   Schwaber K., 2002, AGILE SOFTWARE DEV S
   Schwaber Ken., 2004, Agile Project Management With Scrum (Developer Best Practices)
   Schwandt T.A., 2007, DICT QUALITATIVE INQ, V3rd
   Shalloway A, 2009, TROTT JR LEAN AGILE
   Sherehiy B, 2007, INT J IND ERGONOM, V37, P445, DOI 10.1016/j.ergon.2007.01.007
   Silva MAC, 2010, P C OPT FIB COMM COL, P1
   Sommerville I., 2010, SOFTWARE ENG
   Srinivasan J, 2009, 6 INT C INF TECHN NE
   Stettina Christoph Johann, 2012, Proceedings of the 2012 Agile Conference, P31, DOI 10.1109/Agile.2012.7
   Sveiby KE, 2004, PEOPLE FOCUSED KNOWL
   Takeuchi H., 2004, Hitotsubashi on Knowledge Management
   van Bennekum A., 2001, Principles behind the Agile Manifesto
   Von Krogh G., 2000, ENABLING KNOWLEDGE C
   Wang S, 2010, HUM RESOUR MANAGE R, V20, P115, DOI 10.1016/j.hrmr.2009.10.001
   Wang X, 2010, AGILITY ACROSS TIME AND SPACE: IMPLEMENTING AGILE METHODS IN GLOBAL SOFTWARE PROJECTS, P183, DOI 10.1007/978-3-642-12442-6_13
   Wenger E., 2002, Cultivating Communities of Practice: A Guide to Managing Knowledge
   Whitworth E, 2006, THESIS CARLETON U OT
   Whitworth E, 2007, AGILE 2007, PROCEEDINGS, P26, DOI 10.1109/AGILE.2007.60
NR 106
TC 44
Z9 58
U1 2
U2 78
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2015
VL 20
IS 4
BP 1006
EP 1051
DI 10.1007/s10664-014-9307-y
PG 46
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CJ8MB
UT WOS:000355754500004
DA 2024-07-18
ER

PT J
AU Bettenburg, N
   Nagappan, M
   Hassan, AE
AF Bettenburg, Nicolas
   Nagappan, Meiyappan
   Hassan, Ahmed E.
TI Towards improving statistical modeling of software engineering data:
   think locally, act globally!
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software metrics; Statistical modeling; Clustering
AB Much research in software engineering (SE) is focused on modeling data collected from software repositories. Insights gained over the last decade suggests that such datasets contain a high amount of variability in the data. Such variability has a detrimental effect on model quality, as suggested by recent research. In this paper, we propose to split the data into smaller homogeneous subsets and learn sets of individual statistical models, one for each subset, as a way around the high variability in such data. Our case study on a variety of SE datasets demonstrates that such local models can significantly outperform traditional models with respect to model fit and predictive performance. However, we find that analysts need to be aware of potential pitfalls when building local models: firstly, the choice of clustering algorithm and its parameters can have a substantial impact on model quality. Secondly, the data being modeled needs to have enough variability to take full advantage of local modeling. For example, our case study on social data shows no advantage of local over global modeling, as clustering fails to derive appropriate subsets. Lastly, the interpretation of local models can become very complex when there is a large number of variables or data subsets. Overall, we find that a hybrid approach between local and traditional global modeling, such as Multivariate Adaptive Regression Splines (MARS) combines the best of both worlds. MARS models are non-parametric and thus do not require prior calibration of parameters, are easily interpretable by analysts and outperform local, as well as traditional models out of the box in four out of five datasets in our case study.
C1 [Bettenburg, Nicolas; Nagappan, Meiyappan; Hassan, Ahmed E.] Queens Univ, Sch Comp, SAIL, Kingston, ON K1N 3L6, Canada.
C3 Queens University - Canada
RP Bettenburg, N (corresponding author), Queens Univ, Sch Comp, SAIL, Kingston, ON K1N 3L6, Canada.
EM nicbet@cs.queensu.ca; mei@cs.queensu.ca; ahmed@cs.queensu.ca
RI Hassan, Ahmed/AAB-7241-2019; KHALIFA, AHMED khalifa/HKF-2246-2023; Ali,
   Ahmed/HOF-4672-2023
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; 
CR AKAIKE H, 1974, IEEE T AUTOMAT CONTR, VAC19, P716, DOI 10.1109/TAC.1974.1100705
   Andreou Andreas S., 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P371, DOI 10.1109/ASE.2008.51
   [Anonymous], 2009, Journal of Machine Learning Research-Proceedings Track
   [Anonymous], 504 U WASH DEP STAT
   [Anonymous], 2007, PROMISE 07, DOI DOI 10.1109/PROMISE.2007.10
   Attoh-okine N, 2001, STRATEGY
   Barkmann H, 2009, 2009 INTERNATIONAL CONFERENCE ON ADVANCED INFORMATION NETWORKING AND APPLICATIONS WORKSHOPS: WAINA, VOLS 1 AND 2, P1067, DOI 10.1109/WAINA.2009.190
   Bettenburg N., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P60, DOI 10.1109/MSR.2012.6224300
   Bettenburg Nicolas, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P124, DOI 10.1109/ICPC.2010.46
   Di Penta M, 2011, P 7 INT C PRED MOD S
   Elish KO, 2008, J SYST SOFTWARE, V81, P649, DOI 10.1016/j.jss.2007.07.040
   Fraley C, 2007, J CLASSIF, V24, P155, DOI [10.1007/s00357-007-0004-5, 10.1007/s00357-007-0004-z]
   FRIEDMAN JH, 1991, ANN STAT, V19, P1, DOI 10.1214/aos/1176347963
   Harrell F.E., 2001, Regression modeling strategies: with applications to linear models, logistic regression, and survival analysis
   Hartigan J. A., 1979, Applied Statistics, V28, P100, DOI 10.2307/2346830
   Kamei Y., 2010, Proceedings of the 26th International Conference on Software Maintenance, P1, DOI 10.1109/ICSM.2010.5609530
   Li M, 2012, AUTOMAT SOFTW ENG, V19, P201, DOI 10.1007/s10515-011-0092-1
   MCQUITTY LL, 1966, EDUC PSYCHOL MEAS, V26, P825, DOI 10.1177/001316446602600402
   Menzies T, 2011, P 26 IEEE ACM INT C
   Menzies T, 2013, IEEE T SOFT IN PRESS
   Menzies T., 2012, The PROMISE Repository of empirical software engineering data
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Mockus A, 2005, PROC INT CONF SOFTW, P225
   Mockus A, 2003, PROC INT CONF SOFTW, P274, DOI 10.1109/ICSE.2003.1201207
   Mockus A, 2000, BELL LABS TECH J, V5, P169, DOI 10.1002/bltj.2229
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   NELDER JA, 1972, J R STAT SOC SER A-G, V135, P370, DOI 10.2307/2344614
   Nguyen T.N. D., 2010, Proceedings of the International Conference on Software Maintenance, P1, DOI DOI 10.1109/ICSM.2010.5609560
   Osei-Bryson KM, 2004, INFORM MANAGE-AMSTER, V42, P1, DOI 10.1016/j.im.2003.09.002
   Posnett D., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P362, DOI 10.1109/ASE.2011.6100074
   Raftery AE, 2007, SOC RES, V25, P111
   Rahman F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P432, DOI 10.1109/ICSE.2013.6606589
   Rice JA, 2001, WADSWORTH STAT PROBA
   SCHWARZ G, 1978, ANN STAT, V6, P461, DOI 10.1214/aos/1176344136
   SHEPPERD M, 1988, SOFTWARE ENG J, V3, P30, DOI 10.1049/sej.1988.0003
   Shihab E, 2012, INT SYMP EMP SOFTWAR, P301, DOI 10.1145/2372251.2372305
   Witten I. H., 2016, Data mining: Practical machine learning tools and techniques, DOI [DOI 10.1016/C2009-0-19715-5, 10.1016/c2009-0-19715-5]
   York TP, 2001, GENET EPIDEMIOL, V21, pS649, DOI 10.1002/gepi.2001.21.s1.s649
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
NR 40
TC 24
Z9 27
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2015
VL 20
IS 2
BP 294
EP 335
DI 10.1007/s10664-013-9292-6
PG 42
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CH2AB
UT WOS:000353824000002
DA 2024-07-18
ER

PT J
AU Martínez, Y
   Cachero, C
   Meliá, S
AF Martinez, Yulkeidi
   Cachero, Cristina
   Melia, Santiago
TI Empirical study on the maintainability of Web applications: Model-driven
   Engineering vs Code-centric
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Maintainability; Satisfaction; Quasi-experiment; MDE
ID SOFTWARE EVOLUTION
AB Model-driven Engineering (MDE) approaches are often acknowledged to improve the maintainability of the resulting applications. However, there is a scarcity of empirical evidence that backs their claimed benefits and limitations with respect to code-centric approaches. The purpose of this paper is to compare the performance and satisfaction of junior software maintainers while executing maintainability tasks on Web applications with two different development approaches, one being OOH4RIA, a model-driven approach, and the other being a code-centric approach based on Visual Studio. NET and the Agile Unified Process. We have conducted a quasi-experiment with 27 graduated students from the University of Alicante. They were randomly divided into two groups, and each group was assigned to a different Web application on which they performed a set of maintainability tasks. The results show that maintaining Web applications with OOH4RIA clearly improves the performance of subjects. It also tips the satisfaction balance in favor of OOH4RIA, although not significantly. Model-driven development methods seem to improve both the developers' objective performance and subjective opinions on ease of use of the method. This notwithstanding, further experimentation is needed to be able to generalize the results to different populations, methods, languages and tools, different domains and different application sizes.
C1 [Martinez, Yulkeidi] Univ Maximo Gomez Baez Ciego de Avila, Ciego De Avila, Cuba.
   [Cachero, Cristina; Melia, Santiago] Univ Alicante, DLSI, E-03080 Alicante, Spain.
C3 University of Ciego de Avila; Universitat d'Alacant
RP Meliá, S (corresponding author), Univ Alicante, DLSI, E-03080 Alicante, Spain.
EM yulkeidi@gmail.com; ccachero@dlsi.ua.es; santi@ua.es
RI Martínez Espinosa, Yulkeidi/AIC-7269-2022; Meliá,
   Santiago/AAT-3532-2021; Castro, Cristina Cachero/AAC-2213-2019
OI Martínez Espinosa, Yulkeidi/0000-0003-2221-0650; Meliá,
   Santiago/0000-0003-3782-6626; Castro, Cristina
   Cachero/0000-0001-6281-8287
FU DLSI; Spanish Ministry of Education; University of Alicante
   [TIN2010-15789, GRE10-23]
FX This paper has been co-supported by the DLSI, the Spanish Ministry of
   Education, and the University of Alicante under contracts TIN2010-15789
   (SONRIA) and GRE10-23 (DISEMRIA). The authors wish to thank their
   students for taking the time to participate in this empirical study. In
   addition, we would also like to thank Jose Javier Martinez and Juan
   Antonio Osuna who contributed to the development of the OOH4RIA Tool.
   Special thanks to Dania Suarez and Milton Garcia for their help.
CR Ameller D, 2010, DEALING NONFUNCTIONA
   [Anonymous], 2001, 912612001 ISOIEC
   [Anonymous], 2011, 25010 ISOIEC FCD
   Banker RD, 1998, MANAGE SCI, V44, P433, DOI 10.1287/mnsc.44.4.433
   Budinsky F., 2004, Eclipse modeling framework: a developer's guide
   Cachero C, 2007, P 12 INT WORKSH EXPL, P7
   Ceri S, 2002, IEEE INTERNET COMPUT, V6, P20, DOI 10.1109/MIC.2002.1020321
   Chapin N, 2001, J SOFTW MAINT EVOL-R, V13, P3, DOI 10.1002/smr.220
   Chen JC, 2009, J SYST SOFTWARE, V82, P981, DOI 10.1016/j.jss.2008.12.036
   Cohen J., 1988, STAT POWER ANAL BEHA
   Comrey A.L., 1973, 1 COURSE FACTOR ANAL
   Cook T. D., 1979, QUASIEXPERIMENTATION
   Dagpinar M, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P155, DOI 10.1109/WCRE.2003.1287246
   Dyba T, 2005, IEEE SOFTWARE, V22, P58, DOI 10.1109/MS.2005.6
   Faul F, 2007, BEHAV RES METHODS, V39, P175, DOI 10.3758/BF03193146
   Fu X, 2001, P 3 C USENIX S INT T, V3, P12
   Glitho RH, 2003, IEEE T SYST MAN CY C, V33, P446, DOI 10.1109/TSMCC.2003.818499
   Gronback R. C., 2009, ECLIPSE MODELING PRO
   Gustavsson H, 2007, PROC IEEE INT CONF S, P469
   Hanselman S, 2011, MSDN MAGAZINE
   Heijstek W, 2009, 2009 35TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, PROCEEDINGS, P113, DOI 10.1109/SEAA.2009.70
   Hutchinson J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P471, DOI 10.1145/1985793.1985858
   *IEEE, 1998, 12191998 IEEE
   Kampenes VB, 2009, INFORM SOFTWARE TECH, V51, P71, DOI 10.1016/j.infsof.2008.04.006
   Kitchenham B, 2007, IET SOFTW, V1, P161, DOI 10.1049/iet-sen:20060052
   Kitchenham B, 2008, EMPIR SOFTW ENG, V13, P97, DOI 10.1007/s10664-007-9053-5
   Linaje M, 2007, LECT NOTES COMPUT SC, V4607, P226
   Lopez E, 2006, REV IBEROAMERICANA S, V3, P6
   Martinez Y, 2012, SOFTW TECHNOL, DOI [10.1016/j.infsoft.2012.07.004, DOI 10.1016/J.INFSOFT.2012.07.004]
   Martinez Y, 2011, EVIDENCIA EMPIRICA M
   Martinez Y, 2012, EXPT REPLICATION PAC
   Martínez Y, 2011, LECT NOTES COMPUT SC, V6998, P233, DOI 10.1007/978-3-642-24606-7_18
   Melia Santiago, 2008, 2008 8th International Conference on Web Engineering (ICWE), P13, DOI 10.1109/ICWE.2008.36
   Meliá S, 2010, LECT NOTES COMPUT SC, V6189, P514, DOI 10.1007/978-3-642-13911-6_41
   Mellegård N, 2010, LECT NOTES COMPUT SC, V6156, P336, DOI 10.1007/978-3-642-13792-1_26
   Mellor SJ, 2003, IEEE SOFTWARE, V20, P14, DOI 10.1109/MS.2003.1231145
   Mens T, 2006, ELECTRON NOTES THEOR, V152, P125, DOI 10.1016/j.entcs.2005.10.021
   Mens T, 2010, IEEE SOFTWARE, V27, P22, DOI 10.1109/MS.2010.100
   Modelio, 2011, MOD OP SOURC MOD ENV
   Mohagheghi P, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P7
   Mohagheghi P, 2008, LECT NOTES COMPUT SC, V5095, P432, DOI 10.1007/978-3-540-69100-6_31
   Moody D.L., 2003, P 11 EUR C INF SYST, P1327
   MOODY DL, 2001, THESIS U MELBOURNE M
   Moore GC, 1991, INFORM SYST RES, V2, P192, DOI 10.1287/isre.2.3.192
   Munoz J, 2005, ACT 2 TALL DES SOFTW, P1
   Norman G, 2010, ADV HEALTH SCI EDUC, V15, P625, DOI 10.1007/s10459-010-9222-y
   Norusis M.J., 2010, PASW statistics 18 guide to data analysis
   Perry DE., 2000, P C FUT SOFTW ENG, P345, DOI DOI 10.1145/336512.336586
   Preciado Juan Carlos, 2008, 2008 8th International Conference on Web Engineering (ICWE), P148, DOI 10.1109/ICWE.2008.26
   Qualtrics, 2012, QUALTR ONL SURV SOFT
   SUN Microsystems, 2010, JAV PET STOR SAMPL A
   Turtschi A, 2002, C NET WEB DEV GUIDE
   Urbieta M, 2007, LA-WEB 2007: 5TH LATIN AMERICAN WEB CONGRESS, PROCEEDINGS, P144, DOI 10.1109/LA-Web.2007.14
   Vallecillo A, 2007, WORKSH P 7 INT C WEB
   Valverde F, 2009, LECT NOTES COMPUT SC, V5802, P131, DOI 10.1007/978-3-642-04409-0_18
   Visual Paradigm, 2005, VIS PAR UML 8 0 COMM
   Walderhaug S, 2008, COD CTR MOD CTR SOFT
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Zelkowitz MV, 2009, J SYST SOFTWARE, V82, P373, DOI 10.1016/j.jss.2008.06.040
NR 59
TC 18
Z9 18
U1 1
U2 11
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2014
VL 19
IS 6
BP 1887
EP 1920
DI 10.1007/s10664-013-9269-5
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AR9QU
UT WOS:000343910700010
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Estler, HC
   Nordio, M
   Furia, CA
   Meyer, B
   Schneider, J
AF Estler, Hans-Christian
   Nordio, Martin
   Furia, Carlo A.
   Meyer, Bertrand
   Schneider, Johannes
TI Agile vs. structured distributed software development: A case study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Distributed software development; Outsourcing; Agile; Empirical study
ID COMMUNICATION
AB In globally distributed software development, does it matter being agile rather than structured? To answer this question, this paper presents an extensive case study that compares agile (Scrum, XP, etc.) vs. structured (RUP, waterfall) processes to determine if the choice of process impacts aspects such as the overall success and economic savings of distributed projects, the motivation of the development teams, the amount of communication required during development, and the emergence of critical issues. The case study includes data from 66 projects developed in Europe, Asia, and the Americas. The results show no significant difference between the outcome of projects following agile processes and structured processes, suggesting that agile and structured processes can be equally effective for globally distributed development. The paper also discusses several qualitative aspects of distributed software development such as the advantages of nearshore vs. offshore, the preferred communication patterns, and the effects on project quality.
C1 [Estler, Hans-Christian; Nordio, Martin; Furia, Carlo A.; Meyer, Bertrand] Swiss Fed Inst Technol, Chair Software Engn, Zurich, Switzerland.
   [Schneider, Johannes] IBM Res, Zurich, Switzerland.
C3 Swiss Federal Institutes of Technology Domain; ETH Zurich; International
   Business Machines (IBM)
RP Estler, HC (corresponding author), Swiss Fed Inst Technol, Chair Software Engn, Zurich, Switzerland.
EM christian.estler@inf.ethz.ch; martin.nordio@inf.ethz.ch;
   carlo.furia@inf.ethz.ch; bertrand.meyer@inf.ethz.ch; joh@zurich.ibm.com
OI Furia, Carlo A./0000-0003-1040-3201
FU Gebert-Ruf Stiftung
FX The authors thank all the participants to the study; the ICGSE 2012
   attendees-where a preliminary version of this work was presented-for
   their lively and interesting comments and remarks about our work; the
   anonymous reviewers of the conference and journal papers; and the guest
   editors Erran Carmel, Rini van Solingen, Rafael Prickladnicki, and
   Filippo Lanubile for organizing and managing this special issue of EMSE.
   This research has been partially funded by the Gebert-Ruf Stiftung.
CR Allen T. J., 1977, Managing the flow of technology: technology transfer and the dissemination of technical information within RD organizations
   [Anonymous], P COLL TEACH GLOB DI
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Beck K., 2011, MANIFESTO AGILE SOFT
   Begel A, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P120
   Bhat T., 2006, Proceedings of the 2006 ACM/IEEE International Symposium on Empirical Software Engineering (ISESE '06), P356, DOI [DOI 10.1145/1159733.1159787, 10.1145/1159733.1159787]
   Bird C, 2009, COMMUN ACM, V52, P85, DOI 10.1145/1536616.1536639
   Boehm B.W., 2004, Balancing Agility and Discipline: A Guide for the Perplexed
   Carmel E., 1999, GLOBAL SOFTWARE TEAM
   Cataldo M, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P101, DOI 10.1145/1595696.1595714
   Cohen D, 2004, ADV COMPUT, V62, P1, DOI 10.1016/S0065-2458(03)62001-2
   Espinosa JA, 2007, SECOND IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P12
   Estler H-C, 2012, 2012 7th IEEE International Conference on Global Software Engineering (ICGSE 2012), P11, DOI 10.1109/ICGSE.2012.22
   Estler HC, 2013, IEEE AUS SOFT ENGR, P201, DOI 10.1109/ASWEC.2013.32
   Fowler F.J., 1989, STANDARDIZED SURVEY, V1st
   Ghezzi C, 2002, Fundamentals of Software Engineering
   Herbsleb J. D., 2000, CSCW 2000. ACM 2000 Conference on Computer Supported Cooperative Work, P319, DOI 10.1145/358916.359003
   Herbsleb JD, 2003, IEEE T SOFTWARE ENG, V29, P481, DOI 10.1109/TSE.2003.1205177
   Hulkko H, 2005, PROC INT CONF SOFTW, P495
   Layman L, 2006, INFORM SOFTWARE TECH, V48, P781, DOI 10.1016/j.infsof.2006.01.004
   Müller MM, 2001, PROC INT CONF SOFTW, P537, DOI 10.1109/ICSE.2001.919128
   Nawrocki JR, 2002, LECT NOTES COMPUT SC, V2349, P288
   Nordio M, 2010, P 32 ACM IEEE INT C, V1, P555
   Nordio M, 2009, LECT NOTES BUS INF P, V35, P117
   Nordio Martin, 2011, 6 IEEE INT C GLOB SO
   Paasivaara M., 2010, PRACTICAL GUIDE MANA
   Paasivaara M, 2009, INT CONF GLOBAL SOFT, P195, DOI 10.1109/ICGSE.2009.27
   Pfleeger ShariLawrence., 2005, Software engineering: theory and practice ", V3rd
   Pressman R., 2009, Software Engineering: A Practitioner's Approach, V7th
   Ramasubbu N, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P261, DOI 10.1145/1985793.1985830
   Ramasubbu Narayan., 2007, Proceedings of the the 6th joint meeting of the European software engineering conference and the ACM SIGSOFT symposium on The foundations of software engineering, P125
   Spinellis D., 2006, GSD 06, P73
   Sprent P., 2007, TEXTS STAT SCI
   Sureshchandra K, 2008, 2008 3RD IEEE INTERNATIONAL CONFERENCE GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P217, DOI 10.1109/ICGSE.2008.25
NR 34
TC 22
Z9 31
U1 10
U2 97
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2014
VL 19
IS 5
BP 1197
EP 1224
DI 10.1007/s10664-013-9271-y
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AP9VT
UT WOS:000342429900002
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Apa, C
   Dieste, O
   Espinosa, EG
   Fonseca, ER
AF Apa, Cecilia
   Dieste, Oscar
   Espinosa G, Edison G.
   Fonseca C, Efrain R.
TI Effectiveness for detecting faults within and outside the scope of
   testing techniques: an independent replication
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Replication; Experiment; Unit testing; Reporting guidelines
AB The verification and validation activity plays a fundamental role in improving software quality. Determining which the most effective techniques for carrying out this activity are has been an aspiration of experimental software engineering researchers for years. This paper reports a controlled experiment evaluating the effectiveness of two unit testing techniques (the functional testing technique known as equivalence partitioning (EP) and the control-flow structural testing technique known as branch testing (BT)). This experiment is a literal replication of Juristo et al. (2013). Both experiments serve the purpose of determining whether the effectiveness of BT and EP varies depending on whether or not the faults are visible for the technique (InScope or OutScope, respectively). We have used the materials, design and procedures of the original experiment, but in order to adapt the experiment to the context we have: (1) reduced the number of studied techniques from 3 to 2; (2) assigned subjects to experimental groups by means of stratified randomization to balance the influence of programming experience; (3) localized the experimental materials and (4) adapted the training duration. We ran the replication at the Escuela Polit,cnica del Ej,rcito Sede Latacunga (ESPEL) as part of a software verification & validation course. The experimental subjects were 23 master's degree students. EP is more effective than BT at detecting InScope faults. The session/program and group variables are found to have significant effects. BT is more effective than EP at detecting OutScope faults. The session/program and group variables have no effect in this case. The results of the replication and the original experiment are similar with respect to testing techniques. There are some inconsistencies with respect to the group factor. They can be explained by small sample effects. The results for the session/program factor are inconsistent for InScope faults. We believe that these differences are due to a combination of the fatigue effect and a technique x program interaction. Although we were able to reproduce the main effects, the changes to the design of the original experiment make it impossible to identify the causes of the discrepancies for sure. We believe that further replications closely resembling the original experiment should be conducted to improve our understanding of the phenomena under study.
C1 [Apa, Cecilia] Univ Republica, Montevideo, Uruguay.
   [Dieste, Oscar] Univ Politecn Madrid, E-28660 Madrid, Spain.
   [Espinosa G, Edison G.] Escuela Politecn Ejercito Sede Latacunga, Latacunga, Ecuador.
   [Fonseca C, Efrain R.] Escuela Politecn Ejercito, Sangolqui, Ecuador.
C3 Universidad de la Republica, Uruguay; Universidad Politecnica de Madrid;
   Escuela Politecnica Superior del Ejercito; Escuela Politecnica Superior
   del Ejercito
RP Fonseca, ER (corresponding author), Escuela Politecn Ejercito, Sangolqui, Ecuador.
EM ceapa@fing.edu.uy; odieste@fi.upm.es; egespinosa1@espe.edu.ec;
   erfonseca@espe.edu.ec
RI GUTIERREZ ESPINOSA, Enrique/KEI-1923-2024; Dieste, Oscar/K-6193-2014
OI Dieste, Oscar/0000-0002-3060-7853
FU Armed Forces Technical School (ESPE), Republic of Ecuador National
   Higher Education, Science, Technology and Innovation Secretary's Office
   (SENESCYT); Spanish Ministry of Economics and Competitiveness project
   [TIN2011-23216]
FX This research has been funded by a grant from the Armed Forces Technical
   School (ESPE), Republic of Ecuador National Higher Education, Science,
   Technology and Innovation Secretary's Office (SENESCYT) and partially
   funded by the Spanish Ministry of Economics and Competitiveness project
   TIN2011-23216.
CR [Anonymous], 2002, J WILEY
   [Anonymous], 2010, P 1 INT WORKSH REPL
   Basili V.R., 1985, TR1501 U MAR DEP COM
   BASILI VR, 1987, IEEE T SOFTWARE ENG, V13, P1278, DOI 10.1109/TSE.1987.232881
   Basili VR, 1992, TR9296 UMIACS DEP CO
   BROWN BW, 1980, BIOMETRICS, V36, P69, DOI 10.2307/2530496
   Gomez O.S., 2010, International Symposium on Empirical Software Engineering and Measurement, P1, DOI [DOI 10.1145/1852786.1852790, 10.1145/1852786.1852790]
   Gomez OS, 2012, THESIS U POLITECNICA
   Graham J.W., 1999, STAT STRATEGIES SMAL, P1
   Juristo N, 2003, LECT NOTES COMPUT SC, V2765, P208
   Juristo N, 2013, EFFECTIVENESS DETECT
   Kamsties E., 1995, Software Engineering - ESEC '95. 5th European Software Engineering Conference. Proceedings, P362
   Kernan WN, 1999, J CLIN EPIDEMIOL, V52, P19, DOI 10.1016/S0895-4356(98)00138-3
   Kitchenham B, 2004, ELEVENTH ANNUAL INTERNATIONAL WORKSHOP ON SOFTWARE TECHNOLOGY AND ENGINEERING PRACTICE, PROCEEDINGS, P65
   Meyers L., 2006, APPL MULTIVARIATE RE
   MYERS GJ, 1978, COMMUN ACM, V21, P760, DOI 10.1145/359588.359602
   Richy F, 2004, INTERNET J EPIDEMIOL, V1, P1
   Roper M, 1997, INFORM SOFTWARE TECH, V39, P763, DOI 10.1016/S0950-5849(97)00028-1
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Wood M, 1997, LECT NOTES COMPUT SC, V1301, P262, DOI 10.1145/267896.267915
NR 20
TC 7
Z9 10
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2014
VL 19
IS 2
BP 378
EP 417
DI 10.1007/s10664-013-9267-7
PG 40
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AD1SF
UT WOS:000333013100005
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Shihab, E
   Ihara, A
   Kamei, Y
   Ibrahim, WM
   Ohira, M
   Adams, B
   Hassan, AE
   Matsumoto, K
AF Shihab, Emad
   Ihara, Akinori
   Kamei, Yasutaka
   Ibrahim, Walid M.
   Ohira, Masao
   Adams, Bram
   Hassan, Ahmed E.
   Matsumoto, Ken-ichi
TI Studying re-opened bugs in open source software
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Bug reports; Re-opened bugs; Open source software
ID COMPLEXITY
AB Bug fixing accounts for a large amount of the software maintenance resources. Generally, bugs are reported, fixed, verified and closed. However, in some cases bugs have to be re-opened. Re-opened bugs increase maintenance costs, degrade the overall user-perceived quality of the software and lead to unnecessary rework by busy practitioners. In this paper, we study and predict re-opened bugs through a case study on three large open source projects-namely Eclipse, Apache and OpenOffice. We structure our study along four dimensions: (1) the work habits dimension (e.g., the weekday on which the bug was initially closed), (2) the bug report dimension (e.g., the component in which the bug was found) (3) the bug fix dimension (e.g., the amount of time it took to perform the initial fix) and (4) the team dimension (e.g., the experience of the bug fixer). We build decision trees using the aforementioned factors that aim to predict re-opened bugs. We perform top node analysis to determine which factors are the most important indicators of whether or not a bug will be re-opened. Our study shows that the comment text and last status of the bug when it is initially closed are the most important factors related to whether or not a bug will be re-opened. Using a combination of these dimensions, we can build explainable prediction models that can achieve a precision between 52.1-78.6 % and a recall in the range of 70.5-94.1 % when predicting whether a bug will be re-opened. We find that the factors that best indicate which bugs might be re-opened vary based on the project. The comment text is the most important factor for the Eclipse and OpenOffice projects, while the last status is the most important one for Apache. These factors should be closely examined in order to reduce maintenance cost due to re-opened bugs.
C1 [Shihab, Emad] Rochester Inst Technol, Dept Software Engn, Rochester, NY 14623 USA.
   [Ihara, Akinori; Ohira, Masao; Matsumoto, Ken-ichi] Nara Inst Sci & Technol, Grad Sch Informat Sci, Nara 6300101, Japan.
   [Kamei, Yasutaka] Kyushu Univ, Grad Sch, Nishi Ku, Fukuoka 812, Japan.
   [Kamei, Yasutaka] Kyushu Univ, Fac Informat Sci & Elect Engn, Nishi Ku, Fukuoka 812, Japan.
   [Ibrahim, Walid M.; Hassan, Ahmed E.] Queens Univ, Software Anal & Intelligence Lab, Kingston, ON, Canada.
   [Adams, Bram] Ecole Polytech, Lab Maintenance Construct & Intelligence Software, Montreal, PQ H3C 3A7, Canada.
C3 Rochester Institute of Technology; Nara Institute of Science &
   Technology; Kyushu University; Kyushu University; Queens University -
   Canada; Universite de Montreal; Polytechnique Montreal
RP Shihab, E (corresponding author), Rochester Inst Technol, Dept Software Engn, Rochester, NY 14623 USA.
EM emad@se.rit.edu; akinori-i@is.naist.jp; kamei@ait.kyushu-u.ac.jp;
   walid@cs.queensu.ca; masao@is.naist.jp; bram.adams@polymtl.ca;
   ahmed@cs.queensu.ca; matumoto@is.naist.jp
RI Hassan, Ahmed/AAB-7241-2019; Ali, Ahmed/HOF-4672-2023; KHALIFA, AHMED
   khalifa/HKF-2246-2023
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; Adams,
   Bram/0000-0001-7213-4006
FU Ministry of Education, Culture, Sports, Science and Technology, Japan
   [22700033]; Natural Science and Engineering Research Council of Canada;
   Grants-in-Aid for Scientific Research [23300009, 24500041, 22700033]
   Funding Source: KAKEN
FX This research is being conducted as a part of the Next Generation IT
   Program and Grant-in-aid for Young Scientists (B), 22700033, 2010 by the
   Ministry of Education, Culture, Sports, Science and Technology, Japan.
   In addition, it is supported in part by research grants from the Natural
   Science and Engineering Research Council of Canada.
CR Anbalagan P., 2009, DEFECTS 09 P 2 INT W, P29
   Androutsopoulos I., 2000, SIGIR Forum, V34, P160
   [Anonymous], 2007, P 22 IEEE ACM INT C, DOI DOI 10.1145/1321631.1321639
   [Anonymous], 2006, ISESE '06: Proceedings of the 5th International Symposium on Empirical Software Engineering. Volume II: Short Papers and Posters, DOI DOI 10.1145/1159733.1159739.
   [Anonymous], 2007, P 4 INT WORKSH MIN S
   Antoniol G, 2008, P 2008 C CTR ADV STU, P304
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Aranda J, 2009, PROC INT CONF SOFTW, P298, DOI 10.1109/ICSE.2009.5070530
   Barandela R, 2003, PATTERN RECOGN, V36, P849, DOI 10.1016/S0031-3203(02)00257-1
   Bettenburg N., 2008, P 16 ACM SIGSOFT INT, P308
   Bettenburg N, 2008, PROC IEEE INT CONF S, P337, DOI 10.1109/ICSM.2008.4658082
   Bird C, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P121, DOI 10.1145/1595696.1595716
   Bird C, 2009, PROC INT CONF SOFTW, P518, DOI 10.1109/ICSE.2009.5070550
   Cataldo M, 2009, IEEE T SOFTWARE ENG, V35, P864, DOI 10.1109/TSE.2009.42
   Chan P. K., 1998, Proceedings Fourth International Conference on Knowledge Discovery and Data Mining, P164
   D'Ambros M, 2009, WORK CONF REVERSE EN, P135, DOI 10.1109/WCRE.2009.19
   EFRON B, 1983, J AM STAT ASSOC, V78, P316, DOI 10.2307/2288636
   Erlikh L., 2000, IT Professional, V2, P17, DOI 10.1109/6294.846201
   Estabrooks A., 2001, Advances in Intelligent Data Analysis. 4th International Conference, IDA 2001. Proceedings (Lecture Notes in Computer Science Vol.2189), P34
   Eyolfson J, 2008, MSR 11, P153
   Fischer M, 2003, PROC IEEE INT CONF S, P23, DOI 10.1109/ICSM.2003.1235403
   Freund Y, 1997, J COMPUT SYST SCI, V55, P119, DOI 10.1006/jcss.1997.1504
   GRAHAM P, PLAN SPAM
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Guo PJ, 2010, Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering, P495
   Hassan AE, 2006, IEEE INT CONF AUTOM, P189
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Herraiz I., 2008, Proceedings of the 2008 International Working Conference on Mining Software Repositories. MSR'08, P145
   Hewett R, 2009, EMPIR SOFTW ENG, V14, P165, DOI 10.1007/s10664-008-9064-x
   Ibrahim WM, 2010, MSR 10
   Jeong G, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P111, DOI 10.1145/1595696.1595715
   Kim S, 2006, Proceedings of the 2006 international workshop on Mining software repositories, P173
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Lamkanfi Ahmed, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P1, DOI 10.1109/MSR.2010.5463284
   Lee T., 2011, Proceedings of the 19th ACM SIGSOFT symposium and the 13th European conference on Foundations of software engineering, P311
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P637, DOI 10.1109/TSE.2007.70721
   MEYER T, 2004, P 1 C EM ANT
   Michelakis E., 2004, P 1 C EM ANT MOUNT
   Mizuno O, 2010, LECT NOTES COMPUT SC, V6059, P457, DOI 10.1007/978-3-642-13577-4_41
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Mockus A, 2010, Proc. of the 18th Symposium on the Foundations of Software Engineering (FSE), P117
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Nagappan N, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P521, DOI 10.1145/1368088.1368160
   Panjer LucasD., 2007, Proceedings of the 4th International Workshop on Mining Software Repositories, MSR '07, P29
   Quinlan J. R., 1993, PROGRAMS MACHINE LEA
   Shang Weiyi., 2009, MSR '09: Proceedings of the Fourth International Workshop on Mining Software Repositories, P10
   Shihab E., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P249, DOI 10.1109/WCRE.2010.36
   Shihab E., 2011, Proceedings of the ACM SIGSOFT symposium and the European Conference on Foundations of Software Engineering, P300
   Shirabad JS, 2001, PROC IEEE INT CONF S, P22, DOI 10.1109/ICSM.2001.972708
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Weiss C, 2007, P 4 INT WORKSH MIN S, P1, DOI [10.1109/MSR.2007.13, DOI 10.1109/MSR.2007.13]
   Witten I. H., 2005, DATA MINING PRACTICA
   Zimmermann T, 2012, ICSE 12, P495
   Zimmermann T., 2007, PROMISE 07
NR 54
TC 79
Z9 93
U1 1
U2 21
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2013
VL 18
IS 5
BP 1005
EP 1042
DI 10.1007/s10664-012-9228-6
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 192CP
UT WOS:000322462000006
DA 2024-07-18
ER

PT J
AU Walkinshaw, N
   Lambeau, B
   Damas, C
   Bogdanov, K
   Dupont, P
AF Walkinshaw, Neil
   Lambeau, Bernard
   Damas, Christophe
   Bogdanov, Kirill
   Dupont, Pierre
TI STAMINA: a competition to encourage the development and assessment of
   software model inference techniques
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Model inference; Software specification; Competition; State machines
ID FINITE-STATE MACHINES
AB Models play a crucial role in the development and maintenance of software systems, but are often neglected during the development process due to the considerable manual effort required to produce them. In response to this problem, numerous techniques have been developed that seek to automate the model generation task with the aid of increasingly accurate algorithms from the domain of Machine Learning. From an empirical perspective, these are extremely challenging to compare; there are many factors that are difficult to control (e.g. the richness of the input and the complexity of subject systems), and numerous practical issues that are just as troublesome (e.g. tool availability). This paper describes the StaMinA (State Machine Inference Approaches) competiton, that was designed to address these problems. The competition attracted numerous submissions, many of which were improved or adapted versions of techniques that had not been subjected to extensive empirical evaluations, and had not been evaluated with respect to their ability to infer models of software systems. This paper shows how many of these techniques substantially improve on the state of the art, providing insights into some of the factors that could underpin the success of the best techniques. In a more general sense it demonstrates the potential for competitions to act as a useful basis for empirical software engineering by (a) spurring the development of new techniques and (b) facilitating their comparative evaluation to an extent that would usually be prohibitively challenging without the active participation of the developers.
C1 [Walkinshaw, Neil] Univ Leicester, Dept Comp Sci, Leicester, Leics, England.
   [Lambeau, Bernard; Damas, Christophe; Dupont, Pierre] Catholic Univ Louvain, ICTEAM Inst, B-1348 Louvain, Belgium.
   [Bogdanov, Kirill] Univ Sheffield, Dept Comp Sci, Sheffield S10 2TN, S Yorkshire, England.
C3 University of Leicester; Universite Catholique Louvain; University of
   Sheffield
RP Walkinshaw, N (corresponding author), Univ Leicester, Dept Comp Sci, Leicester, Leics, England.
EM nw91@leicester.ac.uk; bernard.lambeau@uclouvain.be;
   christophe.damas@uclouvain.be; k.bogdanov@dcs.shef.ac.uk;
   pierre.dupont@uclouvain.be
RI Walkinshaw, Neil/AHA-2966-2022; Bogdanov, Kirill/JXW-7081-2024
OI Walkinshaw, Neil/0000-0003-2134-6548; Bogdanov,
   Kirill/0000-0003-3156-0695
FU EPSRC STAMINA project [EP/H002456/1]; EPSRC REGI project [EP/F065825/1];
   Regional Government of Wallonia (GISELE project) [RW Conv. 616425];
   MoVES project (PAI program of the Belgian government); EPSRC
   [EP/H002456/1, EP/F065825/1] Funding Source: UKRI
FX This work is supported by the EPSRC STAMINA project (EP/H002456/1), the
   EPSRC REGI project (EP/F065825/1), the Regional Government of Wallonia
   (GISELE project, RW Conv. 616425) and the MoVES project (PAI program of
   the Belgian government).
CR Adriaans P, 2006, LECT NOTES ARTIF INT, V4201, P293
   Ammons G, 2002, ACM SIGPLAN NOTICES, V37, P4, DOI 10.1145/565816.503275
   ANGLUIN D, 1978, INFORM CONTROL, V39, P337, DOI 10.1016/S0019-9958(78)90683-6
   [Anonymous], INT C AUT SOFTW ENG
   [Anonymous], INT WORK C REV ENG W
   [Anonymous], INT C GRAMM INF ALG
   [Anonymous], EMPIR SOFTWARE UNPUB
   [Anonymous], 1992, S MACH PERC
   [Anonymous], 1999, Concurrency-state models and Java programs
   Biermann A. W., 1976, IEEE Transactions on Software Engineering, VSE-2, P141, DOI 10.1109/TSE.1976.233812
   BIERMANN AW, 1972, IEEE T COMPUT, VC 21, P592, DOI 10.1109/TC.1972.5009015
   Combe D, 2010, LECT NOTES ARTIF INT, V6062, P139, DOI 10.1007/978-3-642-14684-8_15
   Cook J. E., 1998, ACM Transactions on Software Engineering and Methodology, V7, P215, DOI 10.1145/287000.287001
   Coste Francois, 1997, WORKSH GRAMM INF AUT, P9
   Damas C, 2005, IEEE T SOFTWARE ENG, V31, P1056, DOI 10.1109/TSE.2005.138
   Dupont P., 1994, Grammatical Inference and Applications. Second International Colloquium, ICGI-94 Proceedings, P25
   Dupont P, 2008, APPL ARTIF INTELL, V22, P77, DOI 10.1080/08839510701853200
   GOLD EM, 1978, INFORM CONTROL, V37, P302, DOI 10.1016/S0019-9958(78)90562-4
   Heule MJH, 2010, LECT NOTES ARTIF INT, V6339, P66, DOI 10.1007/978-3-642-15488-1_7
   Hopcroft John E., 2007, INTRO AUTOMATA THEOR, V3rd
   KELLER RM, 1976, COMMUN ACM, V19, P371, DOI 10.1145/360248.360251
   Kleinberg JM, 1999, J ACM, V46, P604, DOI 10.1145/324133.324140
   Lambeau B, 2008, LECT NOTES ARTIF INT, V5278, P139
   Lang K. J., 1998, Grammatical Inference. 4th International Colloquium, ICGI-98. Proceedings, P1, DOI 10.1007/BFb0054059
   Lang K. J., 1992, Proceedings of the Fifth Annual ACM Workshop on Computational Learning Theory, P45, DOI 10.1145/130385.130390
   Lee D, 1996, P IEEE, V84, P1090, DOI 10.1109/5.533956
   Leskovec J., 2007, ACM Transactions on Knowledge Discovery from Data, V1
   Lo D., 2006, SIGSOFT FSE, P265
   Lo D, 2009, KDD-09: 15TH ACM SIGKDD CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P557
   Lorenzoli D, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P501, DOI 10.1145/1368088.1368157
   Raffelt Harald, 2009, International Journal on Software Tools for Technology Transfer, V11, P393, DOI 10.1007/s10009-009-0111-8
   Reiss SP, 2001, PROC INT CONF SOFTW, P221, DOI 10.1109/ICSE.2001.919096
   RISSANEN J, 1983, ANN STAT, V11, P416, DOI 10.1214/aos/1176346150
   Rousseeuw PJ, 1999, AM STAT, V53, P382, DOI 10.2307/2686061
   Shahbaz M, 2009, LECT NOTES COMPUT SC, V5850, P207, DOI 10.1007/978-3-642-05089-3_14
   Sim SE, 2003, PROC INT CONF SOFTW, P74, DOI 10.1109/ICSE.2003.1201189
   Tukey JW., 1975, P INT C MATH, P523
   van Lamsweerde A., 2009, REQUIREMENTS ENG SYS
   Van Nieuwpoort RV, 2010, ACM T PROGR LANG SYS, V32, DOI 10.1145/1709093.1709096
   Walkinshaw N, 2008, LECT NOTES ARTIF INT, V5278, P252
   Walkinshaw N, 2008, J SOFTW MAINT EVOL-R, V20, P269, DOI 10.1002/smr.373
NR 41
TC 26
Z9 27
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2013
VL 18
IS 4
BP 791
EP 824
DI 10.1007/s10664-012-9210-3
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 174AX
UT WOS:000321126100005
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Corazza, A
   Di Martino, S
   Ferrucci, F
   Gravino, C
   Sarro, F
   Mendes, E
AF Corazza, A.
   Di Martino, S.
   Ferrucci, F.
   Gravino, C.
   Sarro, F.
   Mendes, E.
TI Using tabu search to configure support vector regression for effort
   estimation
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Effort estimation; Search based techniques; Support vector regression;
   Tabu search
ID SOFTWARE EFFORT ESTIMATION; COST ESTIMATION; PROJECT EFFORT; MODELS;
   CROSS; PREDICTION; SELECTION; MACHINES; NOISE
AB Recent studies have reported that Support Vector Regression (SVR) has the potential as a technique for software development effort estimation. However, its prediction accuracy is heavily influenced by the setting of parameters that needs to be done when employing it. No general guidelines are available to select these parameters, whose choice also depends on the characteristics of the dataset being used. This motivated the work described in (Corazza et al. 2010), extended herein. In order to automatically select suitable SVR parameters we proposed an approach based on the use of the meta-heuristics Tabu Search (TS). We designed TS to search for the parameters of both the support vector algorithm and of the employed kernel function, namely RBF. We empirically assessed the effectiveness of the approach using different types of datasets (single and cross-company datasets, Web and not Web projects) from the PROMISE repository and from the Tukutuku database. A total of 21 datasets were employed to perform a 10-fold or a leave-one-out cross-validation, depending on the size of the dataset. Several benchmarks were taken into account to assess both the effectiveness of TS to set SVR parameters and the prediction accuracy of the proposed approach with respect to widely used effort estimation techniques. The use of TS allowed us to automatically obtain suitable parameters' choices required to run SVR. Moreover, the combination of TS and SVR significantly outperformed all the other techniques. The proposed approach represents a suitable technique for software development effort estimation.
C1 [Corazza, A.; Di Martino, S.] Univ Naples Federico II, I-80126 Naples, Italy.
   [Ferrucci, F.; Gravino, C.; Sarro, F.] Univ Salerno, I-84084 Fisciano, SA, Italy.
   [Mendes, E.] Zayed Univ, Dubai, U Arab Emirates.
C3 University of Naples Federico II; University of Salerno; Zayed
   University
RP Ferrucci, F (corresponding author), Univ Salerno, Via Ponte Don Melillo, I-84084 Fisciano, SA, Italy.
EM corazza@na.infn.it; dimartino@na.infn.it; fferrucci@unisa.it;
   gravino@unisa.it; fsarro@unisa.it; Emilia.Mendes@zu.ac.ae
RI Mendes, Maria E/B-4207-2015; Di Martino, Sergio/F-2602-2012; Ferrucci,
   Filomena/AAG-6799-2020
OI Di Martino, Sergio/0000-0002-1019-9004; Ferrucci,
   Filomena/0000-0002-0975-8972; CORAZZA, Anna/0000-0002-9156-5079; Sarro,
   Federica/0000-0002-9146-442X; Mendes, Emilia/0000-0003-0449-5322;
   Gravino, Carmine/0000-0002-4394-9035
FU University of Salerno's Finanziamento Medie e Grandi Attrezzature
FX Authors would like to thank the anonymous reviewers for their valuable
   comments and suggestions and all companies that volunteered data to the
   Tukutuku database and to the PROMISE repository. The research has been
   carried out also exploiting the computer systems funded by University of
   Salerno's Finanziamento Medie e Grandi Attrezzature (2005).
CR ALBRECHT AJ, 1983, IEEE T SOFTWARE ENG, V9, P639, DOI 10.1109/TSE.1983.235271
   [Anonymous], 1986, Software Engineering Metrics and Models
   [Anonymous], P 7 INT SOFTW METR S
   BAILEY JW, 1981, P 5 INT C SOFTW ENG, P107
   Braga PL, 2007, PROC INT C TOOLS ART, P181, DOI 10.1109/ICTAI.2007.172
   Briand L, 1999, P INT C SOFTW ENG
   Briand L. C., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P377, DOI 10.1109/ICSE.2000.870428
   Briand L. C., 2002, Encyclopedia of software engineering, P1160, DOI DOI 10.1002/0471028959.SOF282
   Burgess CJ, 2001, INFORM SOFTWARE TECH, V43, P863, DOI 10.1016/S0950-5849(01)00192-6
   Chang CC, 2011, ACM T INTEL SYST TEC, V2, DOI 10.1145/1961189.1961199
   Cherkassky V, 2004, NEURAL NETWORKS, V17, P113, DOI 10.1016/S0893-6080(03)00169-2
   Cherkassky V, 1997, IEEE Trans Neural Netw, V8, P1564, DOI 10.1109/TNN.1997.641482
   Chiu NH, 2007, J SYST SOFTWARE, V80, P628, DOI 10.1016/j.jss.2006.06.006
   Conover W. J., 1998, PRACTICAL NONPARAMET, V3rd
   COOK RD, 1977, TECHNOMETRICS, V19, P15, DOI 10.2307/1268249
   Corazza A, 2009, INT SYMP EMP SOFTWAR, P191, DOI 10.1109/ESEM.2009.5315991
   Corazza A, 2010, P INT C PRED MOD SOF, P4
   Corazza A, 2011, EMPIR SOFTW ENG, V16, P211, DOI 10.1007/s10664-010-9138-4
   Corinna C., 1995, MACH LEARN, V20, P273, DOI [DOI 10.1007/BF00994018, 10.1007/BF00994018. S2CID 206787478]
   Costagliola G., 2006, 6 INT C WEB ENG ICWE, P9
   Cristianini N., 2000, INTRO SUPPORT VECTOR
   Desharnais J. M., 1989, Analyse statistique de la productivitie des projects informatique a partie de la technique des point des function
   Di Martino Sergio, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P324
   Ferrucci F, 2010, EUROMICRO CONF PROC, P350, DOI 10.1109/SEAA.2010.59
   Ferrucci F, 2009, LECT NOTES COMPUT SC, V5891, P307, DOI 10.1007/978-3-642-05415-0_22
   Glover F., 1998, Tabu Search
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Hofmann T, 2008, ANN STAT, V36, P1171, DOI 10.1214/009053607000000677
   Hsu Chin-Wei, 2010, Technical Report
   Jeffery R, 2000, INFORM SOFTWARE TECH, V42, P1009, DOI 10.1016/S0950-5849(00)00153-1
   Keerthi SS, 2003, NEURAL COMPUT, V15, P1667, DOI 10.1162/089976603321891855
   Keerthi SS, 2002, IEEE T NEURAL NETWOR, V13, P1225, DOI 10.1109/TNN.2002.1031955
   KEMERER CF, 1987, COMMUN ACM, V30, P416, DOI 10.1145/22899.22906
   KITCHENHAM B, 1995, IEEE SOFTWARE, V12, P52, DOI 10.1109/52.391832
   Kitchenham B, 1998, IEEE T SOFTWARE ENG, V24, P278, DOI 10.1109/32.677185
   Kitchenham B. A., 2001, IEE Proceedings-Software, V148, P81, DOI 10.1049/ip-sen:20010506
   Kitchenham BA, 2009, P INT C PRED MOD SOF
   Kitchenham BA, 2004, EMPIRICAL ASSESSMENT, P47
   Kitchenham BA, 2007, IEEE T SOFTWARE ENG, V33, P316, DOI 10.1109/TSE.2007.1101
   Kocaguneli E, 2010, Proceedings of the IEEE/ACM international conference on Automated software engineering, P321, DOI DOI 10.1145/1858996.1859061
   Kwok JT, 2003, IEEE T NEURAL NETWOR, V14, P544, DOI 10.1109/TNN.2003.810604
   Lefley M, 2003, LECT NOTES COMPUT SC, V2724, P2477
   Li YF, 2009, J SYST SOFTWARE, V82, P241, DOI 10.1016/j.jss.2008.06.001
   Mair C, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P491, DOI 10.1109/ISESE.2005.1541858
   Mattera D, 1999, ADVANCES IN KERNEL METHODS, P211
   Maxwell, 2002, APPL STAT SOFTWARE M
   Maxwell K, 1999, MANAGE SCI, V45, P787, DOI 10.1287/mnsc.45.6.787
   Mendes E, 2005, J SYST SOFTWARE, V77, P157, DOI 10.1016/j.jss.2004.08.034
   Mendes E, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P348, DOI 10.1109/METRIC.2004.1357920
   Mendes E, 2003, EMPIR SOFTW ENG, V8, P163, DOI 10.1023/A:1023062629183
   Mendes Emilia, 2009, Software Engineering. International Summer Schools ISSSE 2006-2008. Revised Tutorial Lectures, P194, DOI 10.1007/978-3-540-95888-8_8
   Mendes Emilia, 2008, 2008 8th International Conference on Web Engineering (ICWE), P203, DOI 10.1109/ICWE.2008.16
   Mendes E, 2009, BAYES NETW P EASE C, P1
   Mendes E, 2005, NEED WEB ENG INTRO W, P1
   Mendes E, 2008, J SYST SOFTWARE, V81, P673, DOI 10.1016/j.jss.2007.07.044
   Mendieta E., 2003, PHILOSOPHY, P1
   MIYAZAKI Y, 1994, J SYST SOFTWARE, V27, P3, DOI 10.1016/0164-1212(94)90110-4
   Moser R, 2007, P 19 INT C SOFTW ENG, P519
   Oliveira ALI, 2006, NEUROCOMPUTING, V69, P1749, DOI 10.1016/j.neucom.2005.12.119
   PROMISE, 2011, REP EMP SOFTW ENG DA
   Scholkopf B, 1997, IEEE T SIGNAL PROCES, V45, P2758, DOI 10.1109/78.650102
   Scholkopf B., 2002, Learning with Kernels
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   Shepperd M, 1996, PROC INT CONF SOFTW, P170, DOI 10.1109/ICSE.1996.493413
   Shin M, 2000, IEEE T SOFTWARE ENG, V26, P567, DOI 10.1109/32.852743
   Shukla KK, 2000, INFORM SOFTWARE TECH, V42, P701, DOI 10.1016/S0950-5849(00)00114-2
   Smola AJ, 2004, STAT COMPUT, V14, P199, DOI 10.1023/B:STCO.0000035301.49549.88
   Vapnik V, 1964, AUTOMATICS REMOTE CO, V25
   Vapnik V. N., 1974, Theory of Pattern Recognition
   Wieczorek I, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P237, DOI 10.1109/METRIC.2002.1011342
NR 70
TC 51
Z9 53
U1 0
U2 9
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2013
VL 18
IS 3
BP 506
EP 546
DI 10.1007/s10664-011-9187-3
PG 41
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 155US
UT WOS:000319774300004
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Turhan, B
AF Turhan, Burak
TI On the dataset shift problem in software engineering prediction models
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Dataset shift; Prediction models; Effort estimation; Defect prediction
ID COVARIATE SHIFT; COST ESTIMATION; INFERENCE
AB A core assumption of any prediction model is that test data distribution does not differ from training data distribution. Prediction models used in software engineering are no exception. In reality, this assumption can be violated in many ways resulting in inconsistent and non-transferrable observations across different cases. The goal of this paper is to explain the phenomena of conclusion instability through the dataset shift concept from software effort and fault prediction perspective. Different types of dataset shift are explained with examples from software engineering, and techniques for addressing associated problems are discussed. While dataset shifts in the form of sample selection bias and imbalanced data are well-known in software engineering research, understanding other types is relevant for possible interpretations of the non-transferable results across different sites and studies. Software engineering community should be aware of and account for the dataset shift related issues when evaluating the validity of research outcomes.
C1 Univ Oulu, Dept Informat Proc Sci, Oulu 90014, Finland.
C3 University of Oulu
RP Turhan, B (corresponding author), Univ Oulu, Dept Informat Proc Sci, POB 3000, Oulu 90014, Finland.
EM turhanb@computer.org
RI Turhan, Burak/G-7400-2011
OI Turhan, Burak/0000-0003-1511-2163
FU Finnish Funding Agency for Technology and Innovation (TEKES)
FX This research is partly funded by the Finnish Funding Agency for
   Technology and Innovation (TEKES) under Cloud Software Program. The
   author would like to thank the anonymous reviewers for their suggestions
   which greatly improved the paper.
CR Alpaydin E., 2010, Introduction to Machine Learning
   [Anonymous], 2000, Software Cost Estimation with COCOMO II
   [Anonymous], 2008, Proceedings of the 4th International Workshop on Predictor Models in Software Engineering, PROMISE '08
   Bakir A, 2010, SOFTWARE QUAL J, V18, P57, DOI 10.1007/s11219-009-9081-z
   Bickel S, 2009, J MACH LEARN RES, V10, P2137
   Briand LC, 2002, ADV COMPUT, V56, P97, DOI 10.1016/S0065-2458(02)80005-5
   Briand LC, 2002, IEEE T SOFTWARE ENG, V28, P706, DOI 10.1109/TSE.2002.1019484
   Demirors O, 2009, IEEE SOFTWARE, V26, P71, DOI 10.1109/MS.2009.60
   Drummond C, 2006, MACH LEARN, V65, P95, DOI 10.1007/s10994-006-8199-5
   Guo P, 2000, FIRST ASIA-PACIFIC CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P69, DOI 10.1109/APAQ.2000.883780
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Hand DJ, 2006, STAT SCI, V21, P1, DOI 10.1214/088342306000000060
   Jiang Y, 2008, EMPIR SOFTW ENG, V13, P561, DOI 10.1007/s10664-008-9079-3
   Keung JW, 2008, IEEE T SOFTWARE ENG, V34, P471, DOI 10.1109/TSE.2008.34
   Kitchenham BA, 2007, IEEE T SOFTWARE ENG, V33, P316, DOI 10.1109/TSE.2007.1101
   Kocaguneli E, 2011, P 5 ACM IEEE INT S E
   Kocaguneli E, 2010, Proceedings of the IEEE/ACM international conference on Automated software engineering, P321, DOI DOI 10.1145/1858996.1859061
   Lin J., 2004, SIGKDD, P460, DOI DOI 10.1145/1014052.1014104
   Lokan C, 2001, IEEE SOFTWARE, V18, P26, DOI 10.1109/52.951491
   Meagher M, 2007, IEEE INT CONF INF VI, P601
   Menzies T, 2010, AUTOMAT SOFTW ENG, V17, P409, DOI 10.1007/s10515-010-0070-z
   Myrtveit I, 2005, IEEE T SOFTWARE ENG, V31, P380, DOI 10.1109/TSE.2005.58
   Prasad NR, 2009, CMC-COMPUT MATER CON, V14, P1, DOI 10.1145/1541880.1541882
   Premraj Rahul, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P393
   Quinonero Candela J., 2009, Dataset shift in machine learning
   Shepperd M, 2001, IEEE T SOFTWARE ENG, V27, P1014, DOI 10.1109/32.965341
   Shimodaira H, 2000, J STAT PLAN INFER, V90, P227, DOI 10.1016/S0378-3758(00)00115-4
   Storkey A, 2009, NEURAL INF PROCESS S, P3
   Sugiyama M, 2008, ANN I STAT MATH, V60, P699, DOI 10.1007/s10463-008-0197-x
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Wieczorek I, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P237, DOI 10.1109/METRIC.2002.1011342
   Yue Jiang, 2008, 2008 IEEE International Symposium on Software Reliability Engineering, P197, DOI 10.1109/ISSRE.2008.54
   Zhang H, 2004, FOURTH IEEE INTERNATIONAL CONFERENCE ON DATA MINING, PROCEEDINGS, P567, DOI 10.1109/ICDM.2004.10030
   Zimmermann T, 2009, P 7 JOINT M EUR SOFT
NR 34
TC 77
Z9 91
U1 1
U2 21
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2012
VL 17
IS 1-2
SI SI
BP 62
EP 74
DI 10.1007/s10664-011-9182-8
PG 13
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 893GG
UT WOS:000300343600005
DA 2024-07-18
ER

PT J
AU Gonzales, CK
   Leroy, G
AF Gonzales, Carol K.
   Leroy, Gondy
TI Eliciting user requirements using Appreciative inquiry
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Appreciative Inquiry; Requirements elicitation; Action research;
   Participatory research; Case study
ID INFORMATION-SYSTEMS
AB For decades and still today, software development projects have failed because they do not meet the needs of users, are over-budget, and abandoned. To help address this problem, the user requirements elicitation process was modified based on principles of Appreciative Inquiry. Appreciative Inquiry, commonly used in organizational development, aims to build organizations, processes, or systems based on success stories using a hopeful vision for an ideal future. In four studies, Appreciative Inquiry was evaluated for its effectiveness with eliciting user requirements in different circumstances. In the first two studies, it was compared with brainstorming, a traditional approach, with end-users (study 1) and proxy-users (study 2). The third study was a quasi-experiment comparing the use of Appreciative Inquiry in different phases in the software development cycle (study 3). The final (fourth) study combined all lessons learned using Appreciative Inquiry in a cross-case comparison study of 3 cases to gain additional understanding of the requirements gathered during various project phases. In each of the four studies, the requirements gathered, developer and user attitudes, and the Appreciative Inquiry process itself were evaluated. Requirements were evaluated for their quantity and type regardless of whether they were implemented or not. Attitudes were evaluated for commitment to the requirements and project using process feedback. The Appreciative Inquiry process was evaluated with differing groups, projects, and project phases to determine how and when it is best applied. Potentially interceding factors were also evaluated including: team effectiveness, Emotional Intelligence, and perceived stress. Appreciative Inquiry produced positive results for the participants, the requirements obtained, and the general requirements eliciting-process. Appreciative Inquiry demonstrated benefits to the requirements gathered by increasing the number of unique requirements as well as identifying more quality-based (non-functional) and forward-looking requirements. It worked best when there was time for participants to reflect on the thought-provoking questions and when the facilitator was knowledgeable of the subject-matter and had extra time to extract and translate the requirements. The participants (end-users and developers) expressed improved project understanding. End-users participated consistently with immediate buy-in and enthusiasm, especially those users who were technically-inhibited. We conclude that Appreciative Inquiry can augment existing methods by presenting a positive and future aspect for a proposed system resulting in improved user requirements.
C1 [Gonzales, Carol K.; Leroy, Gondy] Claremont Grad Univ, Sch Informat Syst & Technol, Claremont, CA 91711 USA.
C3 Claremont Colleges; Claremont Graduate School
RP Gonzales, CK (corresponding author), Claremont Grad Univ, Sch Informat Syst & Technol, Claremont, CA 91711 USA.
EM carolhg@csupomona.edu; gondy.leroy@cgu.edu
CR AVITAL M, 2004, P EUR C INF SYST FIN
   Avital M., 2008, Designing Information and Organizations with a Positive Lens, V2
   Avital M, 2005, COMMUN ASSOC INF SYS, V15, P289
   Avital M, 2009, INFORM ORGAN-UK, V19, P153, DOI 10.1016/j.infoandorg.2009.04.002
   AZUMA M, 2004, P 3 INT WORKSH REQ H
   Baegh J, 2008, IEEE SOFTWARE, V25, P57, DOI 10.1109/MS.2008.30
   Barney S, 2008, J SYST ARCHITECT, V54, P576, DOI 10.1016/j.sysarc.2007.12.004
   BAROUDI JJ, 1986, COMMUN ACM, V29, P232, DOI 10.1145/5666.5669
   Baskerville R, 2004, MIS QUART, V28, P329
   BASKERVILLE R, 1999, COMM ASS INFORM SYST, V2
   BERGVALLKAREBOR.B, 2008, DESIGNING INFORM POS, V2, P75
   Browne GJ, 2002, INFORM MANAGE-AMSTER, V39, P625, DOI 10.1016/S0378-7206(02)00014-9
   Bushe G., 1995, The Journal of Applied Behavioral Science, V31, P17
   Cameron K.S., 2003, Positive Organizational Scholarship
   COHEN S, 1983, J HEALTH SOC BEHAV, V24, P385, DOI 10.2307/2136404
   COOPERRIDER, 1987, RES ORGAN CHANGE DEV, V1, P129
   COOPERRIDER, 2008, APPRECIATIVE INQUIRY
   Davies R., 2004, P 6 INT ACM SIGACCES
   Dieste O, 2008, IEEE SOFTWARE, V25, P11, DOI 10.1109/MS.2008.53
   FARZAN R, 2008, P 26 ANN SIGCHI C HU
   Gallegos F., 2004, INFORM TECHNOLOGY CO
   *GARTN, 2009, REQ FDN SOFTW QUAL
   Glinz M, 2008, IEEE SOFTWARE, V25, P34, DOI 10.1109/MS.2008.31
   GONZALES C, 2009, P ACM S APPL COMP HO
   GONZALES C, 2009, HDB RES DEV E HLTH T
   GUINAN PJ, 1986, DATA BASE, V17, P3, DOI 10.1145/15830.15831
   Hammond S., 1998, THIN BOOK APPRECIATI, V2nd
   HARTWICK J, 1994, MANAGE SCI, V40, P440, DOI 10.1287/mnsc.40.4.440
   Herrmann A, 2009, EMPIR SOFTW ENG, V14, P644, DOI 10.1007/s10664-009-9105-0
   Hickey AM, 2004, J MANAGE INFORM SYST, V20, P65, DOI 10.1080/07421222.2004.11045786
   Hsu JSC, 2008, INFORM MANAGE-AMSTER, V45, P203, DOI 10.1016/j.im.2008.01.006
   Hunt SD, 2008, ORGAN STUD, V29, P1469, DOI 10.1177/0170840608099521
   *ISO IEC, 2007, SOFTW ENG SOFTW PROD
   Kauppinen M, 2004, INFORM SOFTWARE TECH, V46, P937, DOI 10.1016/j.infsof.2004.04.002
   Kirk R.E., 1995, EXPT DESIGN PROCEDUR
   Kollock P., 1999, The Economies of Online Cooperation: Gifts and Public Goods in Cyberspace, P220
   Lenaghan J., 2007, Journal of Managerial Issues, V19, P20
   LEROY G, 2008, POS DES TECHN DES MA
   McConnell S., 1996, Rapid Development: Taming Wild Software Schedules
   Miles M. B., 1984, Qualitative data analysis: An expanded sourcebook
   Moynihan T, 2000, EUR J INFORM SYST, V9, P82, DOI 10.1057/palgrave.ejis.3000357
   OLFMAN L, 1992, DATA BASE, V23, P7, DOI 10.1145/141342.141347
   Procaccino JD, 2002, INFORM SOFTWARE TECH, V44, P53, DOI 10.1016/S0950-5849(01)00217-8
   Reason P., 2001, HDB ACTION RES PARTI
   Schneider G. M., 1992, ACM Transactions on Software Engineering and Methodology, V1, P188, DOI 10.1145/128894.128897
   Schutte NS, 1998, PERS INDIV DIFFER, V25, P167, DOI 10.1016/S0191-8869(98)00001-4
   Siau K, 2006, J COMPUT INFORM SYST, V46, P59, DOI 10.1080/08874417.2006.11645924
   Yin R. K., 2008, CASE STUDY RES DESIG, DOI DOI 10.1097/FCH.0B013E31822DDA9E
NR 48
TC 23
Z9 23
U1 1
U2 29
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2011
VL 16
IS 6
BP 733
EP 772
DI 10.1007/s10664-011-9156-x
PG 40
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 819IX
UT WOS:000294819700002
OA Green Published
DA 2024-07-18
ER

PT J
AU Falessi, D
   Babar, MA
   Cantone, G
   Kruchten, P
AF Falessi, Davide
   Babar, Muhammad Ali
   Cantone, Giovanni
   Kruchten, Philippe
TI Applying empirical software engineering to software architecture:
   challenges and lessons learned
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software architecture; Empirical software engineering
ID DESIGN
AB In the last 15 years, software architecture has emerged as an important software engineering field for managing the development and maintenance of large, software-intensive systems. Software architecture community has developed numerous methods, techniques, and tools to support the architecture process (analysis, design, and review). Historically, most advances in software architecture have been driven by talented people and industrial experience, but there is now a growing need to systematically gather empirical evidence about the advantages or otherwise of tools and methods rather than just rely on promotional anecdotes or rhetoric. The aim of this paper is to promote and facilitate the application of the empirical paradigm to software architecture. To this end, we describe the challenges and lessons learned when assessing software architecture research that used controlled experiments, replications, expert opinion, systematic literature reviews, observational studies, and surveys. Our research will support the emergence of a body of knowledge consisting of the more widely-accepted and well-formed software architecture theories.
C1 [Falessi, Davide; Cantone, Giovanni] Univ Roma Tor Vergata, DISP, I-00133 Rome, Italy.
   [Babar, Muhammad Ali] IT Univ Copenhagen, Software Dev Grp, DK-2300 Copenhagen, Denmark.
   [Kruchten, Philippe] Univ British Columbia ECE, Vancouver, BC, Canada.
C3 University of Rome Tor Vergata; IT University Copenhagen; University of
   British Columbia
RP Falessi, D (corresponding author), Univ Roma Tor Vergata, DISP, Viale Politecn 1, I-00133 Rome, Italy.
EM falessi@ing.uniroma2.it; malibaba@itu.dk; cantone@uniroma2.it;
   pbk@ece.ubc.ca
RI Falessi, Davide/AAA-4587-2021; Kruchten, Philippe/B-2484-2012
OI Kruchten, Philippe/0000-0003-1359-4867
FU Science Foundation Ireland [03/CE2/I303-1]
FX The authors wish to thank the colleagues involved in the empirical
   studies from which the reported challenges and lessons were drawn,
   Professor June Verner for helping in the preparation of the proof
   version, and the anonymous reviewers for their very insightful comments
   and helpful suggestions. When working on this article, Dr. Ali Babar was
   with Lero, which is funded by Science Foundation Ireland under grant
   number 03/CE2/I303-1.
CR ALIBABAR M, 2007, 11 INT C EV ASS SOFT
   ALIBABAR M, 2007, P 1 INT S EMP SOFTW
   ALIBABAR M, 2004, P AUSTR SOFTW ENG C
   ALIBABAR M, 2008, EMPIR SOFTW ENG, V13, P39
   ALIBABAR M, 2007, FACTORS INFLUENCING
   ALIBABAR M, 2008, 12 INT C EV ASS SOFT
   [Anonymous], P 2003 INT S EMP SOF
   [Anonymous], 2004, The rational unified process: an introduction
   [Anonymous], 2002, REPORT SOFTWARE ARCH
   [Anonymous], P 2 GRON WORKSH SOFT
   [Anonymous], 2003, QUAL ATTR WORKSH QAW
   [Anonymous], P 5 ACM IEEE INT S E
   [Anonymous], P 7 WORK IEEE IFIP C
   [Anonymous], 2004, P 26 INT C SOFTW ENG
   [Anonymous], 2008, GUIDE ADV EMPIRICAL, DOI DOI 10.1007/978-1-84800-044-511
   [Anonymous], GUIDE ADV EMPIRICAL
   Arisholm E, 2007, IEEE T SOFTWARE ENG, V33, P65, DOI 10.1109/TSE.2007.17
   BASILI V, 1986, IEEE T SOFTWARE ENG, V12, P11
   Basili V. R., 1994, Encyclopedia of Software Engineering, V1, P528
   BASILI VR, 1996, P 18 INT C SOFTW ENG
   Bass L., 2013, SOFTWARE ARCHITECTUR
   Bengtsson P, 2004, J SYST SOFTWARE, V69, P129, DOI 10.1016/S0164-1212(03)00080-3
   BIFFL S, 2001, P 7 INT S SOFTW METR
   Biffl S., 2005, Value-Based Software Engineering
   BOEHM BW, 1981, PRENTICE HALL PTR AD
   Booch B, 2007, IEEE SOFTWARE, V24, P10
   Booch G, 2006, IEEE SOFTWARE, V23, P9, DOI 10.1109/MS.2006.86
   Booch G, 2007, IEEE SOFTWARE, V24, P18, DOI 10.1109/MS.2007.146
   Booch G, 2006, IEEE SOFTWARE, V23, P14, DOI 10.1109/MS.2006.102
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   BROOKS A, 2008, GUIDE ADV EMPIRICAL
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   CANTONE G, 2008, 0977 U ROM TORVERGAT
   Carver J., 2003, P 9 INT S SOFTW METR
   Chen L., 2009, 13 INT C EV ASS SOFT
   CLEMENTS P., 2002, EVALUATING SOFTWARE
   Clements P., 2002, DOCUMENTING SOFTWARE
   Dehnadi S., 2006, CAMEL HAS 2 HUMPS
   DeMarco T, 1986, CONTROLLING SOFTWARE
   DESOUZA K, 2005, P P 38 ANN HAW INT C
   Dobrica L, 2002, IEEE T SOFTWARE ENG, V28, P638, DOI 10.1109/TSE.2002.1019479
   Dyba T, 2005, IEEE SOFTWARE, V22, P58, DOI 10.1109/MS.2005.6
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Dzidek WJ, 2008, IEEE T SOFTWARE ENG, V34, P407, DOI 10.1109/TSE.2008.15
   EDEN A, 2003, P 25 INT C SOFTW ENG
   Eeles P., 2005, Capturing Architectural Requirements
   Eguiluz HernanR., 2003, Interactions among techniques addressing quality attributes
   ELLIS G, 2006, P 2006 AVI WORKSH BE
   ENGSTROM E, 2008, P 2 ACM IEEE INT S E
   Erdogmus H, 2008, IEEE SOFTWARE, V25, P4, DOI 10.1109/MS.2008.81
   FALESSI D, 2007, 1 EUR C SOFTW ARCH S
   FALESSI D, 2008, P 3 INT WORKSH SHAR
   FALESSI D, 2006, 00506E BELAML
   FALESSI D, 2007, 6 WORK IEEE IFIP C S
   GLASS RL, 1994, IEEE SOFTWARE, V11, P42, DOI 10.1109/52.329400
   Glass RL, 2008, IEEE SOFTWARE, V25, P96, DOI 10.1109/MS.2008.102
   Hannay JE, 2008, IEEE T SOFTWARE ENG, V34, P242, DOI 10.1109/TSE.2008.13
   HARRISON W, 1998, EMPIR SOFTW ENG, V3, P7
   Hofmeister C, 2007, J SYST SOFTWARE, V80, P106, DOI 10.1016/j.jss.2006.05.024
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   Houdek F., 2003, Lecture Notes on Empirical Software Engineering
   *ISO IEC, 2008, 42010 ISOIEC
   JANSEN A, 2005, 5 WORK IEEE IFIP C S
   JEFFERY R, 2002, P 9 AS PAC SOFTW ENG
   JI J, 2008, P 2 ACM IEEE INT S E
   Jones C., 1994, Assessment and control of software risks
   JURISTO N., 2006, BASICS SOFTWARE ENG
   KAZMAN R, 2004, ATAM METHOD ARCHITEC
   Kitchenham B., 2004, ARXIV
   KITCHENHAM BA, 1996, EVALUATING SOFTWAR 1
   Kitchenham B, 2008, EMPIR SOFTW ENG, V13, P219, DOI 10.1007/s10664-008-9061-0
   Kruchten P., 2006, IEEE SOFTWARE, V23, P2
   KRUCHTEN P, 2001, COMMON MISCONCEPTION
   LAITENBERGER O, 2003, LECT NOTES EMPIRICAL
   Liu Y, 2005, IEEE T SOFTWARE ENG, V31, P928, DOI 10.1109/TSE.2005.127
   LUNG J, 2008, P 30 INT C SOFTW ENG
   Maranzano JF, 2005, IEEE SOFTWARE, V22, P34, DOI 10.1109/MS.2005.28
   Murphy GC, 1999, IEEE T SOFTWARE ENG, V25, P438, DOI 10.1109/32.799936
   OATES BJ, 2003, P 11 ANN INT WORKSH
   PERRY DE, 2000, P C FUT SOFTW ENG AC
   POTTS C, 1993, IEEE SOFTWARE, V10, P19, DOI 10.1109/52.232392
   PRECHELT L, 2007, EMPIRICAL SOFTWARE E
   Reeves J., 1992, C J, V2
   Shaw M, 2006, IEEE SOFTWARE, V23, P31, DOI 10.1109/MS.2006.58
   Shaw M., 1996, SOFTWARE ARCHITECTUR
   Shull F, 2006, IEEE SOFTWARE, V23, P16, DOI 10.1109/MS.2006.33
   SHULL F, 2005, INT S EMP SOFTW ENG
   SHULL F, 2002, P 2002 INT S EMP SOF
   Simon H.A., 1996, The Sciences of the Artificial, V3rd ed
   SJOBERG D, 2003, EMPIRICAL METHODS ST
   SJOBERG DIK, 2001, P 4 INT WORKSH PRINC
   SJOBERG DIK, 2007, P 29 INT C SOFTW ENG
   SJOBERG DIK, 2002, P 2002 INT S EMP SOF
   SMOLANDER K, 2002, INT S EMP SOFTW ENG
   Staples M, 2007, J SYST SOFTWARE, V80, P1425, DOI 10.1016/j.jss.2006.09.046
   SVAHNBERG M., 2008, P 2 ACM IEEE INT S E
   Tang A, 2006, J SYST SOFTWARE, V79, P1792, DOI 10.1016/j.jss.2006.04.029
   Tonella P, 2007, EMPIR SOFTW ENG, V12, P551, DOI 10.1007/s10664-007-9037-5
   Tyree J, 2005, IEEE SOFTWARE, V22, P19, DOI 10.1109/MS.2005.27
   Vegas S, 2005, EMPIR SOFTW ENG, V10, P437, DOI 10.1007/s10664-005-3862-1
   VEGAS S, 2006, P 2006 ACM IEEE INT
   Vokác M, 2004, EMPIR SOFTW ENG, V9, P149, DOI 10.1023/B:EMSE.0000027778.69251.1f
   WILLIAMS L, 2001, P 32 SIGCSE TECHN S
   WOHLIN C, 2000, EXPERIMENTATION SOFT
   Zelkowitz MV, 1998, COMPUTER, V31, P23, DOI 10.1109/2.675630
NR 105
TC 25
Z9 26
U1 1
U2 22
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2010
VL 15
IS 3
BP 250
EP 276
DI 10.1007/s10664-009-9121-0
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 580WD
UT WOS:000276480300002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Smith, BH
   Williams, L
AF Smith, Ben H.
   Williams, Laurie
TI On guiding the augmentation of an automated test suite via mutation
   analysis
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Mutation testing; Line coverage; Fault injection; Empirical
   effectiveness; Test case augmentation; Mutation analysis; Mutation
   testing tool; Statement coverage; Test adequacy; Web application; Open
   source; Unit testing
ID COVERAGE
AB Mutation testing has traditionally been used as a defect injection technique to assess the effectiveness of a test suite as represented by a "mutation score." Recently, mutation testing tools have become more efficient, and industrial usage of mutation analysis is experiencing growth. Mutation analysis entails adding or modifying test cases until the test suite is sufficient to detect as many mutants as possible and the mutation score is satisfactory. The augmented test suite resulting from mutation analysis may reveal latent faults and provides a stronger test suite to detect future errors which might be injected. Software engineers often look for guidance on how to augment their test suite using information provided by line and/or branch coverage tools. As the use of mutation analysis grows, software engineers will want to know how the emerging technique compares with and/or complements coverage analysis for guiding the augmentation of an automated test suite. Additionally, software engineers can benefit from an enhanced understanding of efficient mutation analysis techniques. To address these needs for additional information about mutation analysis, we conducted an empirical study of the use of mutation analysis on two open source projects. Our results indicate that a focused effort on increasing mutation score leads to a corresponding increase in line and branch coverage to the point that line coverage, branch coverage and mutation score reach a maximum but leave some types of code structures uncovered. Mutation analysis guides the creation of additional "common programmer error" tests beyond those written to increase line and branch coverage. We also found that 74% of our chosen set of mutation operators is useful, on average, for producing new tests. The remaining 26% of mutation operators did not produce new test cases because their mutants were immediately detected by the initial test suite, indirectly detected by test suites we added to detect other mutants, or were not able to be detected by any test.
C1 [Smith, Ben H.; Williams, Laurie] N Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
C3 North Carolina State University
RP Smith, BH (corresponding author), N Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
EM ben_smith@ncsu.edu; williams@csc.ncsu.edu
FU IBM Faculty Award; National Science Foundation [0346903]; Division of
   Computing and Communication Foundations; Direct For Computer & Info Scie
   & Enginr [0346903] Funding Source: National Science Foundation
FX We would like to thank the North Carolina State University RealSearch
   group for their helpful comments on the paper. Funding for this research
   was provided in part by an IBM Faculty Award. This work is also
   supported by the National Science Foundation under CAREER Grant No.
   0346903. Any opinions expressed in this material are those of the
   author(s) and do not necessarily reflect the views of the National
   Science Foundation.
CR Alexander RT, 2002, 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P341, DOI 10.1109/ISSRE.2002.1173285
   Andrews JH, 2006, IEEE T SOFTWARE ENG, V32, P608, DOI 10.1109/TSE.2006.83
   [Anonymous], 1990, IEEE Std 610.12-1990, V42, P112, DOI [10.1109/IEEESTD.1990.101064, DOI 10.1109/IEEESTD.1990.101064]
   DeMillo R. A., 1988, Proceedings of the Second Workshop on Software Testing, Verification, and Analysis (Cat. No.88TH0225-3), P142, DOI 10.1109/WST.1988.5369
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   Frankl PG, 1997, J SYST SOFTWARE, V38, P235, DOI 10.1016/S0164-1212(96)00154-9
   Gamma Erich, 1995, DESIGN PATTERNS ELEM
   Hierons R., 1999, Software Testing, Verification and Reliability, V9, P233, DOI 10.1002/(SICI)1099-1689(199912)9:4<233::AID-STVR191>3.0.CO;2-3
   Hovemeyer D, 2004, ACM SIGPLAN NOTICES, V39, P92, DOI 10.1145/1052883.1052895
   Irvine SA, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P169, DOI 10.1109/TAIC.PART.2007.38
   KANER C, 1996, P STAR ORL FL, P1
   KRISHNAMURTHY S, 1996, P C CTR ADV STUD COL, P1
   MA YS, 2005, DESCRIPTION CLASS MU
   MA YS, 2006, 28 INT C SOFTW ENG S, P869
   Ma Yu-Seung., 2005, Description of method-level mutation operators for java
   Murnane T, 2001, 2001 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P12, DOI 10.1109/ASWEC.2001.948492
   Namin AkbarSiami., 2006, P 2 WORKSHOP MUTATIO, P5
   Offutt A. J., 1996, ACM Transactions on Software Engineering and Methodology, V5, P99, DOI 10.1145/227607.227610
   Offutt AJ, 1996, SOFTWARE PRACT EXPER, V26, P165, DOI 10.1002/(SICI)1097-024X(199602)26:2<165::AID-SPE5>3.0.CO;2-K
   OFFUTT J, 2004, ACM SIGSOFT SOFTWARE, V29, P1
   Offutt Jeff., 2006, Proceedings of the 2006 International Workshop on Automation of Software Test, P78, DOI DOI 10.1145/1138929.1138945
   Smith BH, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P193, DOI 10.1109/TAIC.PART.2007.12
   VOAS J, 1995, 2 IEEE INT SOFTW ENG, P318
   Zhu H, 1997, ACM COMPUT SURV, V29, P366, DOI 10.1145/267580.267590
NR 24
TC 41
Z9 43
U1 0
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2009
VL 14
IS 3
BP 341
EP 369
DI 10.1007/s10664-008-9083-7
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 461TN
UT WOS:000267294500005
DA 2024-07-18
ER

PT J
AU Dittrich, Y
   Rönkkö, K
   Eriksson, J
   Hansson, C
   Lindeberg, O
AF Dittrich, Yvonne
   Ronkko, Kari
   Eriksson, Jeanette
   Hansson, Christina
   Lindeberg, Olle
TI Cooperative method development -: Combining qualitative empirical
   research with method, technique and process improvement
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE empirical research; research methodology; cooperative method
   development; human factors; software engineering
ID SOFTWARE-DEVELOPMENT; WORK
AB The development of methods tools and process improvements is best to be based on the understanding of the development practice to be supported. Qualitative research has been proposed as a method for understanding the social and cooperative aspects of software development. However, qualitative research is not easily combined with the improvement orientation of an engineering discipline. During the last 6 years, we have applied an approach we call 'cooperative method development', which combines qualitative social science fieldwork, with problem-oriented method, technique and process improvement. The action research based approach focusing on shop floor software development practices allows an understanding of how contextual contingencies influence the deployment and applicability of methods, processes and techniques. This article summarizes the experiences and discusses the further development of this approach based on several research projects in cooperation with industrial partners.
C1 [Dittrich, Yvonne] IT Univ Copenhagen, Software Dev Grp, DK-2300 Copenhagen S, Denmark.
   [Ronkko, Kari; Eriksson, Jeanette; Hansson, Christina; Lindeberg, Olle] Blekinge Inst Technol, Sch Engn, S-37225 Ronneby, Sweden.
C3 IT University Copenhagen; Blekinge Institute Technology
RP Dittrich, Y (corresponding author), IT Univ Copenhagen, Software Dev Grp, Rued Langgaards Vej 7, DK-2300 Copenhagen S, Denmark.
EM ydi@itu.dk; kari.ronkko@bth.se; jeanette.eriksson@bth.se;
   christina.hansson@bth.se; olle.lindeberg@bth.se
RI Eriksson, Jeanette/G-6927-2014
OI Dittrich, Yvonne/0000-0003-4757-3394
CR Anderson Bob., 1997, The Encyclopedia of Microcomputers, P159
   BASILI V, 1994, IEEE SOFTWARE, V11, P58, DOI 10.1109/52.300090
   Basili VR, 1996, PROC INT CONF SOFTW, P442, DOI 10.1109/ICSE.1996.493439
   Basili1 Victor R, 1994, Encyclopedia of software engineering, V1994, P528
   Blomberg J, 1996, HUM-COMPUT INTERACT, V11, P237, DOI 10.1207/s15327051hci1103_3
   Bodker K., 2004, PARTICIPATORY IT DES
   BROOKS FP, 1987, COMPUTER, V20, P10, DOI 10.1109/MC.1987.1663532
   Checkland P, 1998, SYST PRACT ACT RES, V11, P9, DOI 10.1023/A:1022908820784
   CHRISTENSEN M, 1998, LNCS, V1445, P13
   Cockbum A., 2002, Agile Software Development
   Cooper A., 1999, The inmates are running the asylum
   COULON A, 1995, SAGE SERIES QUALITAT, V36
   CURTIS B, 1988, COMMUN ACM, V31, P1268, DOI 10.1145/50087.50089
   DIESTELKAMP W, 2000, INT J COMPUT APPL, V7, P122
   Dittrich Y, 2002, SOCIAL THINKING-SOFTWARE PRACTICE, P243
   Dittrich Y, 2004, INFORM SOFTWARE TECH, V46, P603, DOI 10.1016/j.infsof.2003.11.002
   DITTRICH Y, 2002, EVOLUTIONARY ADAPTIV, P152
   DITTRICH Y, 2001, P 24 INF SYST RES SE
   Dittrich Y, 2007, INFORM SOFTWARE TECH, V49, P531, DOI 10.1016/j.infsof.2007.02.009
   Ehn P., 1990, Work-Oriented Design of Computer Artifacts (Subsequent.)
   Eriksson J., 2007, Journal of Organizational and End User Computing, V19, P47, DOI 10.4018/joeuc.2007040103
   FLOYD C, 1989, LECT NOTES COMPUT SC, V387, P48
   Floyd Christiane, 1992, SOFTWARE DEV REALITY
   Frederiksen HD, 2005, IEEE T ENG MANAGE, V52, P350, DOI 10.1109/TEM.2005.850737
   FUGGETTA A, 2000, FUTURE SOFTWARE ENG, P25
   GRONBAEK K, 1997, INT J COMP-SUPP COLL, V6, P275
   HANSSON C, 2004, P 5 INT C EXTR PROGR
   Hansson C, 2006, J SYST SOFTWARE, V79, P1295, DOI 10.1016/j.jss.2005.12.020
   Harper R. H. R., 2000, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V9, P239, DOI 10.1023/A:1008793124669
   HASTRUP K, 1995, ETHNOGRAPHIC PRESENT, P1
   Iversen J, 2003, INFORM SYST J, V13, P3, DOI 10.1046/j.1365-2575.2003.00136.x
   IVERSEN JK, 1998, INFORM SYSTEMS CURRE
   JOHN M, 2005, P 27 INT C SOFTW ENG
   LANZARA GF, 1985, INFORM MANAGE, V8, P3, DOI 10.1016/0378-7206(85)90065-5
   Lewin K, 1947, HUM RELAT, V1, P143, DOI 10.1177/001872674700100201
   LINDEBERG O, 2001, P 5 IASTED, P7
   Mathiassen L., 2002, Information Technology & People, V15, P321, DOI 10.1108/09593840210453115
   Mathiassen L., 1998, Scandinavian Journal of Information Systems, V10, P67
   MATHIASSEN L, 1997, THESIS AALBORG U
   Mathiassen L., 2002, IMPROVING SOFTWARE O
   Mumford E., 2001, Information Technology & People, V14, P12, DOI 10.1108/09593840110384753
   NAUR P, 1985, MICROPROC MICROPROG, V15, P253, DOI 10.1016/0165-6074(85)90032-8
   Nunamaker J. F.  Jr., 1990, Journal of Management Information Systems, V7, P89
   Nygaard K., 1986, INFORM PROCESSING 86, P189
   Pruitt John, 2003, P 2003 C DES US EXP, P1, DOI 10.1145/997078.997089
   Robson C., 2002, Real world research
   Rönkkö K, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P204, DOI 10.1109/ISESE.2002.1166941
   RONKKO K, 2005, J COMPUT SUPPORT COO, V5, P433
   Ronkko K., 2005, P 38 ANN HAW INT C S, V08, DOI [10.1109/HICSS.2005.85, DOI 10.1109/HICSS.2005.85]
   RONKKO K, 2005, THESIS BLEKINGE I TE
   Ronkko K., 2004, Proc. 8th Conf. Participatory Des.: Artful Integr.: Interweaving Media, V1, P112, DOI DOI 10.1145/1011870.1011884
   Rönkkö K, 2007, INFORM SOFTWARE TECH, V49, P682, DOI 10.1016/j.infsof.2007.02.014
   Schon D. A., 1983, The reflective practitioner: How professionals think in action
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Seaman CB, 1997, PROC INT CONF SOFTW, P96, DOI 10.1145/253228.253248
   Seaman CB, 1998, IEEE T SOFTWARE ENG, V24, P559, DOI 10.1109/32.708569
   SIM S, 2000, WORKSH P W05 ICSE 20
   Singer J, 2002, IEEE T SOFTWARE ENG, V28, P1171, DOI 10.1109/TSE.2002.1158289
   SUCHMAN L, 1995, COMMUN ACM, V38, P56, DOI 10.1145/223248.223263
   SUCHMAN LA, 1983, ACM T OFF INF SYST, V1, P320, DOI 10.1145/357442.357445
   UNPHON H, 2008, IASTED INT IN PRESS
   Wenger E., 1998, Communities of practice: learning, meaning, and identity, DOI [10.1017/CBO9780511803932, DOI 10.1017/CBO9780511803932]
NR 62
TC 42
Z9 46
U1 1
U2 12
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2008
VL 13
IS 3
BP 231
EP 260
DI 10.1007/s10664-007-9057-1
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 316RE
UT WOS:000256966600001
DA 2024-07-18
ER

PT J
AU Li, JZ
   Ruhe, G
   Al-Emran, A
   Richter, MM
AF Li, Jingzhou
   Ruhe, Guenther
   Al-Emran, Ahmed
   Richter, Michael M.
TI A flexible method for software effort estimation by analogy
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE software development effort; analogy-based effort estimation; learning;
   comparative analysis; non-quantitative attributes; missing values
AB Effort estimation by analogy uses information from former similar projects to predict the effort for a new project. Existing analogy-based methods are limited by their inability to handle non-quantitative data and missing values. The accuracy of predictions needs improvement as well. In this paper, we propose a new flexible method called AQUA that is able to overcome the limitations of former methods. AQUA combines ideas from two known analogy-based estimation techniques: case-based reasoning and collaborative filtering. The method is applicable to predict effort related to any object at the requirement, feature, or project levels. Which are the main contributions of AQUA when compared to other methods? First, AQUA supports non-quantitative data by defining similarity measures for different data types. Second, it is able to tolerate missing values. Third, the results from an explorative study in this paper shows that the prediction accuracy is sensitive to both the number N of analogies (similar objects) taken for adaptation and the threshold T for the degree of similarity, which is true especially for larger data sets. A fixed and small number of analogies, as assumed in existing analogy-based methods, may not produce the best accuracy of prediction. Fourth, a flexible mechanism based on learning of existing data is proposed for determining the appropriate values of N and T likely to offer the best accuracy of prediction. New criteria to measure the quality of prediction are proposed. AQUA was validated against two internal and one public domain data sets with non-quantitative attributes and missing values. The obtained results are encouraging. In addition, acomparative analysis with existing analogy-based estimation methods was conducted using three publicly available data sets that were used by these methods. Intwo of the three cases, AQUA outperformed all other methods.
C1 Univ Calgary, Software Engn Decis Support Lab, Calgary, AB T2N 1N4, Canada.
   TU Kaiserslautern, FB Informat, D-67653 Kaiserslautern, Germany.
C3 University of Calgary; University of Kaiserslautern
RP Li, JZ (corresponding author), Univ Calgary, Software Engn Decis Support Lab, Calgary, AB T2N 1N4, Canada.
EM jingli@ucalgary.ca; ruhe@ucalgary.ca; aalemran@ucalgary.ca;
   richter@infromatik.uni-kl.de
CR Angelis L., 2000, Empirical Software Engineering, V5, P35, DOI 10.1023/A:1009897800559
   ANGELIS L, 2001, METRICS 01 P IEEE 7, P4
   [Anonymous], 1986, Software Engineering Metrics and Models
   [Anonymous], 1997, APPL CASE BASED REAS
   [Anonymous], 1997, Software metrics: A rigorous and practical approach
   [Anonymous], ROUGH SET THEORETICA
   Basili V.R., 1994, Encyclopedia of Software Engineering, P528532
   Boehm B., 1995, Annals of Software Engineering, V1, P57, DOI 10.1007/BF02249046
   BRIAND LC, 2001, ENCY SOFTWARE ENG
   BURKHARD H, 2000, SOFT COMPUTING CASE
   EFRON B, 1983, AM STAT, V37, P36, DOI 10.2307/2685844
   FRIGGE M, 1989, AM STAT, V43, P50, DOI 10.2307/2685173
   Herlocker JL, 1999, SIGIR 99 P 22 ANN IN
   Idri A, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P21, DOI 10.1109/METRIC.2002.1011322
   IDRI A, 2001, METRICS 01 P IEEE 7, P85
   KADODA G, 2000, EASE 2000 4 INT C EM
   KEMERER CF, 1987, COMMUN ACM, V30, P416, DOI 10.1145/22899.22906
   Leung H. K. N., 2002, Empirical Software Engineering, V7, P157, DOI 10.1023/A:1015202115651
   Mendes E, 2003, EMPIR SOFTW ENG, V8, P163, DOI 10.1023/A:1023062629183
   MUKHOPADHYAY T, 1992, MIS QUART, V16, P155, DOI 10.2307/249573
   Myrtveit I, 2005, IEEE T SOFTWARE ENG, V31, P380, DOI 10.1109/TSE.2005.58
   OHSUGI N, 2004, PROFES 04 5 INT C PR, V3009
   RICHTER MM, 1995, MATH STAT METHODS AR
   Ruhe M, 2003, PROC INT CONF SOFTW, P285, DOI 10.1109/ICSE.2003.1201208
   Sarwar B., 2001, P 10 INT C WORLD WID, P285, DOI 10.1145/371920.372071
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   SONG Q, 2005, METRICS 05 P 11 IEEE, P35
   TAUTZ C, 2000, 17 NAT C ART INT AAA
   Turner CR, 1999, J SYST SOFTWARE, V49, P3, DOI 10.1016/S0164-1212(99)00062-X
   Walkerden F., 1999, Empirical Software Engineering, V4, P135, DOI 10.1023/A:1009872202035
   WANGENHEIM CG, 2000, LECT NOTES COMPUTER, V1756
NR 31
TC 101
Z9 108
U1 0
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2007
VL 12
IS 1
BP 65
EP 106
DI 10.1007/s10664-006-7552-4
PG 42
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 130ML
UT WOS:000243803600003
DA 2024-07-18
ER

PT J
AU Abnane, I
   Idri, A
   Chlioui, I
   Abran, A
AF Abnane, Ibtissam
   Idri, Ali
   Chlioui, Imane
   Abran, Alain
TI Evaluating ensemble imputation in software effort estimation
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Missing data; Imputation; Ensemble; Software development effort
   estimation
ID MISSING DATA TECHNIQUES; INCOMPLETE DATA; COST ESTIMATION; FUZZY
   ANALOGY; PREDICTION; REGRESSION; ALGORITHM; VALUES
AB Choosing the appropriate missing data (MD) imputation technique for a given software development effort estimation (SDEE) technique is not a trivial task. In fact, the impact of MD imputation on the estimation output depends on the dataset and the SDEE technique used, and there is no best imputation technique in all contexts. Thus, an attractive solution is to use more than one imputation technique and combine their results to obtain a final imputation outcome. This concept is called ensemble imputation and can significantly improve the effort estimation accuracy. This study proposes and constructs 11 heterogeneous ensemble imputation techniques, whose members are two, three, or four of the following single imputation techniques: K-nearest neighbors, expectation maximization, support vector regression (SVR) and decision trees (DTs). The effects of single/ensemble imputation techniques on SDEE performance were evaluated over six SDEE datasets: COCOMO81, ISBSG, Desharnais, China, Kemerer, and Miyazaki. Five SDEE performance measures were used: standardized accuracy (SA), predictor at 25% (Pred (0.25)), mean balanced relative error (MBRE), mean inverted balanced relative error (MIBRE), and logarithmic standard deviation (LSD). Moreover, we used: (1) the Skott-Knott (SK) statistical test to cluster and compare the results, and (2) the Borda count method to rank the SDEE techniques belonging to the best SK cluster.The results showed that ensemble imputers significantly improved the performance of SDEE techniques compared to single imputation techniques. We also found that adding one or more imputers to the ensemble imputers generally led to a significant improvement in the SDEE performance. When the performance improvement is not significant, it is better to use the ensemble imputer with the minimum number of members because it is less complex. For ensemble imputers, the results suggest that no particular ensemble imputer gave the best results in all contexts. Overall, SVR imputation was the best imputation technique used to construct ensemble imputers for the SDEE. For the SDEE techniques, the best results were obtained by the DTs and SVR variants using ensemble imputation.
C1 [Abnane, Ibtissam; Idri, Ali; Chlioui, Imane] Mohammed V Univ, Software Project Management Res Team, ENSIAS, Rabat, Morocco.
   [Idri, Ali] Mohammed VI Polytech Univ, MSDA, Ben Guerir, Morocco.
   [Abran, Alain] Univ Quebec, Dept Software Engn & Informat Technol, ETS, Montreal, PQ, Canada.
C3 Mohammed V University in Rabat; Mohammed VI Polytechnic University;
   University of Quebec; Ecole de Technologie Superieure - Canada;
   University of Quebec Montreal
RP Abnane, I (corresponding author), Mohammed V Univ, Software Project Management Res Team, ENSIAS, Rabat, Morocco.
EM Ibtissam.abnane@ensias.um5.ac.ma; ali.idri@ensias.um5.ac.ma;
   Alain.abran@etsmtl.ca
RI Abran, Alain/I-2493-2016
OI Abran, Alain/0000-0003-2670-9061
CR Abnane I, 2017, 2016 IEEE S SERIES C
   Abnane I, 2021, PROCEEDINGS OF THE 17TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING (PROMISE '21), P1, DOI 10.1145/3475960.3475984
   Abnane I, 2016, PROCEEDINGS OF 2016 IEEE SYMPOSIUM SERIES ON COMPUTATIONAL INTELLIGENCE (SSCI)
   Abnane I, 2020, J SOFTW-EVOL PROC, V32, DOI 10.1002/smr.2260
   Abnane I, 2019, EUROMICRO CONF PROC, P228, DOI 10.1109/SEAA.2019.00044
   Abnane I, 2018, FED CONF COMPUT SCI, P1015, DOI 10.15439/2018F95
   ALBRECHT AJ, 1983, IEEE T SOFTWARE ENG, V9, P639, DOI 10.1109/TSE.1983.235271
   Amazal Fatima-Azzahra, 2014, 2014 Joint Conference of the International Workshop on Software Measurement and the International Conference on Software Process and Product Measurement. (IWSM-MENSURA). Proceedings, P252, DOI 10.1109/IWSM.Mensura.2014.31
   [Anonymous], 2008, Guide to Advanced Empirical Software Engineering
   [Anonymous], 2019, Ensemble Learning: Pattern Classification Using Ensemble Methods, DOI DOI 10.1142/9789814271073_0003
   [Anonymous], 2006, J. Math. Model. Algorithms
   Aydilek IB, 2013, INFORM SCIENCES, V233, P25, DOI 10.1016/j.ins.2013.01.021
   Azzeh M, 2015, J SYST SOFTWARE, V103, P36, DOI 10.1016/j.jss.2015.01.028
   BOEHM BW, 1984, IEEE T SOFTWARE ENG, V10, P4, DOI 10.1109/TSE.1984.5010193
   Cara FJ, 2012, MECH SYST SIGNAL PR, V31, P109, DOI 10.1016/j.ymssp.2012.04.004
   Chlioui I, 2021, J INF SCI ENG, V37, P1039, DOI 10.6688/JISE.202109_37(5).0004
   CORTES C, 1995, MACH LEARN, V20, P273, DOI 10.1007/BF00994018
   Cristianini N., 1999, INTRO SUPPORT VECTOR
   DEMPSTER AP, 1977, J ROY STAT SOC B MET, V39, P1, DOI 10.1111/j.2517-6161.1977.tb01600.x
   Dempster AP, 1983, THEORY ANNOTATED BIB, VII
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   Dong YR, 2013, SPRINGERPLUS, V2, DOI 10.1186/2193-1801-2-222
   Dwyer K, 2007, LECT NOTES ARTIF INT, V4701, P128
   Flake GW, 2002, MACH LEARN, V46, P271, DOI 10.1023/A:1012474916001
   Folguera L, 2015, CHEMOMETR INTELL LAB, V143, P146, DOI 10.1016/j.chemolab.2015.03.002
   Foss T, 2003, IEEE T SOFTWARE ENG, V29, P985, DOI 10.1109/TSE.2003.1245300
   Foss T., 2001, PROC ESCOM, P157
   Gholami R, 2017, HANDBOOK OF NEURAL COMPUTATION, P515, DOI 10.1016/B978-0-12-811318-9.00027-2
   Gudivada VN, 2016, HANDB STAT, V35, P169, DOI 10.1016/bs.host.2016.07.010
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Hosni M, 2016, INT CONF SOFT COMP, P174, DOI 10.1109/ISCMI.2016.15
   Hosni M, 2018, SOFT COMPUT, V22, P5977, DOI 10.1007/s00500-017-2945-4
   Idri A., 2016, INT J INTELL SYST, V0, P1, DOI [10.1142/S1469026814500138, DOI 10.1142/S1469026814500138]
   Idri A., 2015, INT C SOFTW ENG ART, P1, DOI [DOI 10.1109/ICTA.2015, DOI 10.1109/SNPD.2015.7176280, 10.1109/SNPD.2015.7176280]
   Idri A, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.2114
   Idri A, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1925
   Idri A, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON COMPUTER AND INFORMATION TECHNOLOGY (CIT), P114, DOI 10.1109/CIT.2017.29
   Idri A, 2016, APPL SOFT COMPUT, V49, P990, DOI 10.1016/j.asoc.2016.08.012
   Idri A, 2016, J SYST SOFTWARE, V118, P151, DOI 10.1016/j.jss.2016.05.016
   Idri A, 2016, J SYST SOFTWARE, V117, P595, DOI 10.1016/j.jss.2016.04.058
   Idri A, 2015, INFORM SOFTWARE TECH, V58, P206, DOI 10.1016/j.infsof.2014.07.013
   Idri A, 2012, WD SCI P COMP ENG, V7, P863
   Idri A, 2013, 2013 IEEE SYMPOSIUM ON COMPUTATIONAL INTELLIGENCE AND DATA MINING (CIDM), P207, DOI 10.1109/CIDM.2013.6597238
   Jerez JM, 2010, ARTIF INTELL MED, V50, P105, DOI 10.1016/j.artmed.2010.05.002
   KEMERER CF, 1987, COMMUN ACM, V30, P416, DOI 10.1145/22899.22906
   Kennedy J, 1995, 1995 IEEE INTERNATIONAL CONFERENCE ON NEURAL NETWORKS PROCEEDINGS, VOLS 1-6, P1942, DOI 10.1109/icnn.1995.488968
   Kitchenham B. A., 2001, IEE Proceedings-Software, V148, P81, DOI 10.1049/ip-sen:20010506
   Kocaguneli E, 2013, J SYST SOFTWARE, V86, P1879, DOI 10.1016/j.jss.2013.02.053
   Kocaguneli E, 2012, IEEE T SOFTWARE ENG, V38, P1403, DOI 10.1109/TSE.2011.111
   Korte M., 2008, P 4 INT WORKSH PRED, P63
   Kuncheva LI, 2003, MACH LEARN, V51, P181, DOI 10.1023/A:1022859003006
   Li R.H., 2002, P 8 ACM SIGKDD INT C, P570, DOI 10.1145/775047.775131
   LITTLE RJA, 1989, SOCIOL METHOD RES, V18, P292, DOI 10.1177/0049124189018002004
   Little RJA., 1987, STAT ANAL MISSING DA
   Liu YZ, 2017, DATA, V2, DOI 10.3390/data2010008
   Lokan C, 2001, IEEE SOFTWARE, V18, P26, DOI 10.1109/52.951491
   Madley-Dowd P, 2019, J CLIN EPIDEMIOL, V110, P63, DOI 10.1016/j.jclinepi.2019.02.016
   Menzies T, 2017, THE SEACRAFT REPOSIT
   Menzies T., 2015, The promise repository of empirical software engineering data
   Menzies Tim, 2014, Sharing data and models in software engineering
   Minku LL, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2522920.2522928
   Minku LL, 2013, INFORM SOFTWARE TECH, V55, P1512, DOI 10.1016/j.infsof.2012.09.012
   Mittas N, 2013, IEEE T SOFTWARE ENG, V39, P537, DOI 10.1109/TSE.2012.45
   MIYAZAKI Y, 1991, INFORM SOFTWARE TECH, V33, P239, DOI 10.1016/0950-5849(91)90139-3
   Molenberghs G., 2014, Handbook of Missing Data Methodology
   Monte-Serrat DM., 2021, INT J COGN COMPUT EN, V2, P30, DOI [10.1016/J.IJCCE.2021.01.002, DOI 10.1016/J.IJCCE.2021.01.002]
   Müller KR, 2001, IEEE T NEURAL NETWOR, V12, P181, DOI 10.1109/72.914517
   Myrtveit I, 2005, IEEE T SOFTWARE ENG, V31, P380, DOI 10.1109/TSE.2005.58
   Polikar R, 2012, ENSEMBLE MACHINE LEARNING: METHODS AND APPLICATIONS, P1, DOI 10.1007/978-1-4419-9326-7_1
   Qi FM, 2017, INFORM SOFTWARE TECH, V92, P145, DOI 10.1016/j.infsof.2017.07.015
   Quinlan JR, 1996, ACM COMPUT SURV, V28, P71, DOI 10.1145/234313.234346
   Rahman Geaur., 2011, P 9 AUSTRALASIAN DAT, V121, P41
   Rokach L, 2005, DATA MINING AND KNOWLEDGE DISCOVERY HANDBOOK, P321, DOI 10.1007/0-387-25465-X_15
   Rubin D. B., 1987, Wiley Series in Probability and Statistics, V29, P1, DOI 10.1002/9780470316696.fmatter
   Sagi O, 2018, WIRES DATA MIN KNOWL, V8, DOI 10.1002/widm.1249
   Sammaknejad N, 2019, J PROCESS CONTR, V73, P123, DOI 10.1016/j.jprocont.2018.12.010
   Schneider P., 2022, Anom. Detect. Complex Event Process. IoT Data Streams, P149, DOI [10.1016/B978-0-12-823818-9.00019-5, DOI 10.1016/B978-0-12-823818-9.00019-5]
   SCOTT AJ, 1974, BIOMETRICS, V30, P507, DOI 10.2307/2529204
   Sehra SK, 2017, INFORM SOFTWARE TECH, V91, P1, DOI 10.1016/j.infsof.2017.06.002
   Shepperd M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P304, DOI 10.1109/FOSE.2007.23
   Shepperd M, 2012, INFORM SOFTWARE TECH, V54, P820, DOI 10.1016/j.infsof.2011.12.008
   Shi YH, 1998, IEEE C EVOL COMPUTAT, P69, DOI 10.1109/ICEC.1998.699146
   Stensrud E, 2003, EMPIR SOFTW ENG, V8, P139, DOI 10.1023/A:1023010612345
   Trendowicz A., 2014, SOFTWARE PROJECT EFF, DOI DOI 10.1007/978-3-319-03629-8
   Twala B., 2006, 28th International Conference on Software Engineering Proceedings, P909, DOI 10.1145/1134285.1134449
   Twala B., 2005, PROC INT SOFTW METRI, V2005, P271, DOI [10.1109/METRICS.2005.21, DOI 10.1109/METRICS.2005.21]
   Twala B, 2010, INTELL DATA ANAL, V14, P299, DOI 10.3233/IDA-2010-0423
   Valdiviezo HC, 2015, INFORM SCIENCES, V311, P163, DOI 10.1016/j.ins.2015.03.018
   Van Hulse J, 2006, ICMLA 2006: 5TH INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS, PROCEEDINGS, P135
   Van Hulse J, 2014, INFORM SCIENCES, V259, P596, DOI 10.1016/j.ins.2010.12.017
   Vateekul P, 2009, INT CONF DAT MIN WOR, P70, DOI 10.1109/ICDMW.2009.92
   Wen JF, 2012, INFORM SOFTWARE TECH, V54, P41, DOI 10.1016/j.infsof.2011.09.002
   Xia YL, 2020, PROG MOL BIOL TRANSL, V171, P309, DOI 10.1016/bs.pmbts.2020.04.003
   Xueying Zhang, 2009, Proceedings of the 2009 Fifth International Conference on Natural Computation (ICNC 2009), P536, DOI 10.1109/ICNC.2009.257
   Zhang W, 2015, INFORM SOFTWARE TECH, V58, P58, DOI 10.1016/j.infsof.2014.10.005
   Zhao YH, 2008, ADV SPACE RES, V41, P1955, DOI 10.1016/j.asr.2007.07.020
   Zhou Z.-H., 2012, ENSEMBLE METHODS FDN, DOI DOI 10.1201/B12207
   Zhou ZH, 2002, KNOWL-BASED SYST, V15, P515, DOI 10.1016/S0950-7051(02)00038-2
NR 98
TC 2
Z9 2
U1 4
U2 14
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2023
VL 28
IS 2
AR 56
DI 10.1007/s10664-022-10260-0
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 9Z0KK
UT WOS:000950839400001
DA 2024-07-18
ER

PT J
AU Weir, C
   Becker, I
   Blair, L
AF Weir, Charles
   Becker, Ingolf
   Blair, Lynne
TI Incorporating software security: using developer workshops to engage
   product managers
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Developer centered security; Software security; Software developer;
   Cybersecurity; Software development; SDLC; Product management; Product
   manager; Design based research
ID DESIGN-BASED RESEARCH
AB Evidence from data breach reports shows that many competent software development teams still do not implement secure, privacy-preserving software, even though techniques to do so are now well-known. A major factor causing this is simply a lack of priority and resources for security, as decided by product managers. So, how can we help developers and product managers to work together to achieve appropriate decisions on security and privacy issues? This paper explores using structured workshops to support teams of developers in engaging product managers with software security and privacy, even in the absence of security professionals. The research used the Design Based Research methodology. This paper describes and justifies our workshop design and implementation, and describes our thematic coding of both participant interviews and workshop discussions to quantify and explore the workshops' effectiveness. Based on trials in eight organizations, involving 88 developers, we found the workshops effective in helping development teams to identify, promote, and prioritize security issues with product managers. Comparisons between organizations suggested that such workshops are most effective with groups with limited security expertise, and when led by the development team leaders. We also found workshop participants needed minimal guidance to identify security threats, and a wide range of ways to promote possible security improvements. Empowering developers and product managers in this way offers a powerful grassroots approach to improve software security worldwide.
C1 [Weir, Charles; Blair, Lynne] Univ Lancaster, Comp & Commun, Lancaster, England.
   [Becker, Ingolf] UCL, Secur & Crime Sci, London, England.
C3 Lancaster University; University of London; University College London
RP Weir, C (corresponding author), Univ Lancaster, Comp & Commun, Lancaster, England.
EM c.weir1@lancaster.ac.uk; i.becker@ucl.ac.uk; l.blair@lancaster.ac.uk
OI Weir, Charles/0000-0003-3051-4195
FU PETRAS National Centre of Excellence for IoT Systems Cybersecurity - UK
   EPSRC;  [EP/S035362/1]
FX AcknowledgementsWe thank all the teams of developers and companies who
   contributed to this research. We also thank the editors and reviewers
   who helped us present the work effectively in this paper.This work has
   been supported by the PETRAS National Centre of Excellence for IoT
   Systems Cybersecurity, which has been funded by the UK EPSRC under grant
   number EP/S035362/1.
CR Ambreen T, 2018, REQUIR ENG, V23, P63, DOI 10.1007/s00766-016-0258-2
   Ashenden D, 2013, PROCEEDINGS OF THE 2013 NEW SECURITY PARADIGMS WORKSHOP (NSPW'13), P87, DOI 10.1145/2535813.2535823
   Assal H, 2019, CHI 2019: PROCEEDINGS OF THE 2019 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, DOI 10.1145/3290605.3300519
   Bakker A., 2018, Design research in education: A practical guide for early career researchers, DOI [10.4324/9780203701010, DOI 10.4324/9780203701010]
   Barab S, 2004, J LEARN SCI, V13, P1, DOI 10.1207/s15327809jls1301_1
   Barbacci MR, 2000, QUALITY ATTRIBUTE WO
   Beck K., 2001, Planning extreme programming
   Becker I., 2017, P EUROUSEC, DOI 10.14722/eurousec.2017.23007
   Beecham S, 2008, INFORM SOFTWARE TECH, V50, P860, DOI 10.1016/j.infsof.2007.09.004
   Bell L., 2017, Agile Application Security: Enabling Securityin a Continuous Delivery Pipeline
   Beyer M., 2015, Awareness is Only The First Step: AFramework for Progressive Engagement of Staff in Cyber Security
   Brown A.L., 1992, J LEARN SCI, V2, P137, DOI [10.1207/s15327809jls0202_2, DOI 10.1207/S15327809JLS0202_2]
   Bukhsh FA, 2020, COMPUT STAND INTER, V69, DOI 10.1016/j.csi.2019.103389
   Caputo DD, 2016, IEEE SECUR PRIV, V14, P22, DOI 10.1109/MSP.2016.95
   Clarke V, 2017, J POSIT PSYCHOL, V12, P297, DOI 10.1080/17439760.2016.1262613
   Collins A., 1992, New Directions in Educational Technology. Proceedings of the NATO Advanced Research Workshop, P15
   Conradi R., 2001, Software Engineering Notes, V26, P268, DOI 10.1145/503271.503246
   Dabbagh M, 2016, SOFT COMPUT, V20, P4497, DOI 10.1007/s00500-015-1760-z
   Davison R, 2004, INFORM SYST J, V14, P65, DOI 10.1111/j.1365-2575.2004.00162.x
   De Win B, 2009, INFORM SOFTWARE TECH, V51, P1152, DOI 10.1016/j.infsof.2008.01.010
   Denzin N. K., 2018, SAGE HDB QUALITATIVE
   Design-Based Research (DBR) Collective, 2003, ED RES, V32, P5, DOI [DOI 10.3102/0013189X032001005, 10.3102/%200013189X032001005]
   Dybå T, 2005, IEEE T SOFTWARE ENG, V31, P410, DOI 10.1109/TSE.2005.53
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Ejersbo L.R., 2008, Handbook of design research methods in education: Innovations in science, technology, engineering, and mathematics learning and teaching, P149
   Fisher R., 2011, GETTING YES NEGOTIAT
   Fogg Brian J, 2009, P 4 INT C PERS TECHN, P1, DOI [10.1145/1541948.1541999, DOI 10.1145/1541948.1541999]
   Franqueira VNL, 2015, SMART INNOV SYST TEC, V41, P57, DOI 10.1007/978-3-319-19875-0_6
   Frey S, 2019, IEEE T SOFTWARE ENG, V45, P521, DOI 10.1109/TSE.2017.2782813
   Gwet KL., 2014, Handbook of inter-rater reliability: The definitive guide to measuring the extent of agreement among raters, V4th ed.
   Haines S., 2014, The product manager's desk reference, V2nd
   Hall T, 2008, IEEE SOFTWARE, V25, P92, DOI 10.1109/MS.2008.105
   Herzberg F., 2017, MOTIVATION WORK
   Hubbard DW., 2016, How To Measure Anything In Cybersecurity Risk, DOI [10.1002/9781119162315, DOI 10.1002/9781119162315]
   ISO/IEC, 2008, 218272008 ISOIEC
   Kelly A.E., 2008, Handbook of design research methods in education: Innovations in science, technology, engineering, and mathematics learning and teaching
   Kirlappos I, 2013, LECT NOTES COMPUT SC, V7862, P70, DOI 10.1007/978-3-642-41320-9_5
   Kluyver T, 2016, POSITIONING AND POWER IN ACADEMIC PUBLISHING: PLAYERS, AGENTS AND AGENDAS, P87, DOI 10.3233/978-1-61499-649-1-87
   Lopez T, 2019, WORKSHOP CONDUCTING
   Lopez T, 2019, 2019 IEEE/ACM 12TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE 2019), P61, DOI 10.1109/CHASE.2019.00023
   McSweeney B, 1999, SECURITY IDENTITY IN, DOI [10.1109/CESSER-IP.2019.00014, DOI 10.1109/CESSER-IP.2019.00014]
   Mead N.R., 2005, Software Engineering for Secure Systems (SESS), P1, DOI 10.1145/1082983.1083214
   Mellado D, 2006, LECT NOTES COMPUT SC, V4189, P192
   Microsoft, 2018, MICR SEC INT REP, V23
   Oxford Languages, 2011, CONCISE OXFORD ENGLI
   Pfleeger SL, 2014, J HOMEL SECUR EMERG, V11, P489, DOI 10.1515/jhsem-2014-0035
   Poller A, 2017, CSCW'17: PROCEEDINGS OF THE 2017 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING, P2489, DOI 10.1145/2998181.2998191
   Rauf I, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3471930
   RiskBased Security, 2020, 2020 MIDYEAR DAT BRE
   Shostack A., 2014, Threat Modeling: Designing for Security
   Shreeve B, 2022, IEEE T SOFTWARE ENG, V48, P1515, DOI 10.1109/TSE.2020.3023735
   Springer O, 2018, FED CONF COMPUT SCI, P985, DOI 10.15439/2018F100
   Stack Overflow, 2016, Annual Developer Survey
   Stenfors T, 2020, CLIN TEACH, V17, P596, DOI 10.1111/tct.13242
   Such JM, 2016, COMPUT SECUR, V60, P117, DOI 10.1016/j.cose.2016.03.009
   Tietjen M., 1998, Management Decision, V36, P226, DOI [DOI 10.1108/00251749810211027, 10.1108/00251749810211027]
   Turpe S, 2016, WORKSHOP SECURITY IN
   van der Linden D, 2020, PROC INT CONF SOFTW, P149, DOI 10.1145/3377811.3380394
   Veracode, 2018, STAT SOFTW SEC REP, V9
   Viera AJ, 2005, FAM MED, V37, P360
   Wang F, 2005, ETR&D-EDUC TECH RES, V53, P5, DOI 10.1007/BF02504682
   Weir C, 2021, DEV SECURITY ESSENTI
   Weir C, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2021), P21, DOI 10.1109/ICSE-SEIP52600.2021.00011
   Weir C, 2020, PROCEEDINGS OF THE 29TH USENIX SECURITY SYMPOSIUM, P289
   Weir C, 2020, J CYBERSECURITY, V6, P1, DOI 10.1093/cybsec/tyaa007
   Weir C, 2020, SOFTWARE PRACT EXPER, V50, P275, DOI 10.1002/spe.2774
   WHO, 2012, WORLD MALARIA REPORT 2012, P1
   Xie J, 2011, S VIS LANG HUM CEN C, P161, DOI 10.1109/VLHCC.2011.6070393
   Yskout K, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P292, DOI 10.1109/ICSE.2015.49
NR 69
TC 1
Z9 1
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2023
VL 28
IS 2
AR 21
DI 10.1007/s10664-022-10252-0
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 7I0VV
UT WOS:000903614800002
OA hybrid
DA 2024-07-18
ER

PT J
AU Robles, G
   Capiluppi, A
   Gonzalez-Barahona, JM
   Lundell, B
   Gamalielsson, J
AF Robles, Gregorio
   Capiluppi, Andrea
   Gonzalez-Barahona, Jesus M.
   Lundell, Bjorn
   Gamalielsson, Jonas
TI Development effort estimation in free/open source software from activity
   in version control systems
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Effort estimation; Open source; Free software; Mining software
   repositories; Versioning system; Commits
ID GOVERNANCE; PROJECTS
AB Effort estimation models are a fundamental tool in software management, and used as a forecast for resources, constraints and costs associated to software development. For Free/Open Source Software (FOSS) projects, effort estimation is especially complex: professional developers work alongside occasional, volunteer developers, so the overall effort (in person-months) becomes non-trivial to determine. The objective of this work it to develop a simple effort estimation model for FOSS projects, based on the historic data of developers' effort. The model is fed with direct developer feedback to ensure its accuracy. After extracting the personal development profiles of several thousands of developers from 6 large FOSS projects, we asked them to fill in a questionnaire to determine if they should be considered as full-time developers in the project that they work in. Their feedback was used to fine-tune the value of an effort threshold, above which developers can be considered as full-time. With the help of the over 1,000 questionnaires received, we were able to determine, for every project in our sample, the threshold of commits that separates full-time from non-full-time developers. We finally offer guidelines and a tool to apply our model to FOSS projects that use a version control system.
C1 [Robles, Gregorio; Gonzalez-Barahona, Jesus M.] Univ Rey Juan Carlos, Dept Telemat & Computat Syst Engn, Madrid, Spain.
   [Capiluppi, Andrea] Univ Groningen, Dept Comp Sci, Groningen, Netherlands.
   [Lundell, Bjorn; Gamalielsson, Jonas] Univ Skovde, Sch Informat, Skovde, Sweden.
C3 Universidad Rey Juan Carlos; University of Groningen; University of
   Skovde
RP Capiluppi, A (corresponding author), Univ Groningen, Dept Comp Sci, Groningen, Netherlands.
EM gregorio.robles@urjc.es; a.capiluppi@rug.nl;
   jesus.gonzalez.barahona@urjc.es; bjorn.lundell@his.se;
   jonas.gamalielsson@his.se
RI Robles, Gregorio/I-2507-2012; Gonzalez-Barahona, Jesus M./L-5646-2017;
   Capiluppi, Andrea/AGO-2961-2022
OI Robles, Gregorio/0000-0002-1442-6761; Gonzalez-Barahona, Jesus
   M./0000-0001-9682-460X; Capiluppi, Andrea/0000-0001-9469-6050
FU Government of Spain through the "BugBirth" project
   [RTI2018-101963-B-100]
FX We want to express our gratitude to Bitergia14 for the support they have
   provided when questions have arisen. We acknowledge the support of the
   Government of Spain through the "BugBirth" project
   (RTI2018-101963-B-100). We also acknowledge the work by Carlos Cervig '
   on on an earlier version of the manuscript.
CR Abdelmoez W, 2012, 2012 22ND INTERNATIONAL CONFERENCE ON COMPUTER THEORY AND APPLICATIONS (ICCTA), P167, DOI 10.1109/ICCTA.2012.6523564
   Abran A., 2016, COSMIC FUNCTION POIN, P214
   Agrawal A, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P245, DOI 10.1145/3183519.3183549
   Ahsan Syed Nadeem, 2009, Proceedings 21st International Conference on Software Engineering & Knowledge Engineering (SEKE 2009), P129
   Alomari H., 2015, INT J ADV COMPUT ENG, V3, P1
   Amor JuanJose., 2006, Proceedings of the 2006 International Workshop on Economics Driven Software Engineering Research, EDSER'06, P3
   Anbalagan P, 2009, PROC IEEE INT CONF S, P523, DOI 10.1109/ICSM.2009.5306337
   [Anonymous], 2005, 1 MONDAY, DOI DOI 10.5210/FM.V10I2.1207
   [Anonymous], 2000, Software Cost Estimation with COCOMO II
   [Anonymous], 2007, P INT C SOFTWARE MAI
   Asundi J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083260
   Boehm B, 1981, IEEE T SOFTWARE ENG
   Capiluppi A, 2007, INT FED INFO PROC, V234, P31
   Capiluppi A, 2013, EMPIR SOFTW ENG, V18, P60, DOI 10.1007/s10664-011-9191-7
   Capra E, 2010, ADV SOFTWARE ENG
   Capra E, 2008, IEEE T SOFTWARE ENG, V34, P765, DOI 10.1109/TSE.2008.68
   Dueñas S, 2018, PROC IEEE ACM INT C, P1, DOI 10.1145/3183440.3183475
   Dumke R., 2016, COSMIC FUNCTION POIN, V1fFdhxO8mnIC
   Fernandez-Ramil J, 2009, INT FED INFO PROC, V299, P170
   Fitzgerald B, 2006, MIS QUART, V30, P587
   González-Barahona JM, 2012, EMPIR SOFTW ENG, V17, P75, DOI 10.1007/s10664-011-9181-9
   Hönel S, 2018, PROC IEEE ACM INT C, P220, DOI 10.1145/3183440.3195105
   Hou Q., 2014, PROC SW ENGG KNOW EN, P132
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Kalliamvakou E., 2014, P 11 WORKING C MININ, P92, DOI DOI 10.1145/2597073.2597074
   Kalliamvakou E, 2009, MCIS 20094TH
   Koch S., 2004, Electronic Markets, V14, P77, DOI 10.1080/10196780410001675031
   Koch S, 2002, INFORM SYST J, V12, P27, DOI 10.1046/j.1365-2575.2002.00110.x
   Koch S, 2008, INF ECON POLICY, V20, P345, DOI 10.1016/j.infoecopol.2008.06.004
   Kolassa C, 2013, LECT NOTES COMPUT SC, V7741, P52
   Kolassa Carsten, 2013, P 9 INT S OPEN COLLA, P1
   Kononenko O, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P124, DOI 10.1145/3183519.3183542
   Kouters E, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P592, DOI 10.1109/ICSM.2012.6405329
   Lerner J, 2002, J IND ECON, V50, P197, DOI 10.1111/1467-6451.00174
   Ma Y., 2014, P 29 ANN ACM S APPL, P1171
   Malhotra R, 2020, INT J RELIAB QUAL SA, V27, DOI 10.1142/S0218539320400112
   Mi Q, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2915986
   Michlmayr M, 2015, IEEE SOFTWARE, V32, P54
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Mockus A, 2000, PROC IEEE INT CONF S, P120, DOI 10.1109/ICSM.2000.883028
   Moulla Donatien Koulla, 2014, 2014 Joint Conference of the International Workshop on Software Measurement and the International Conference on Software Process and Product Measurement. (IWSM-MENSURA). Proceedings, P191, DOI 10.1109/IWSM.Mensura.2014.15
   Porru S., 2016, PROC 12 INT C PREDIC, P1
   Riehle D, 2014, P ANN HICSS, P3286, DOI 10.1109/HICSS.2014.407
   Robles G., 2004, "Second International Workshop on Remote Analysis and Measurement of Software Systems (RAMSS 04)" - W15S Workshop - 26th International Conference on Software Engineering, P51, DOI 10.1049/ic:20040351
   Robles G., 2005, INT C SOFTW ENG P 20, P1, DOI DOI 10.1145/1082983.1083162
   Robles Gregorio., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, P222
   Shah SK, 2006, MANAGE SCI, V52, P1000, DOI 10.1287/mnsc.1060.0553
   Sowe SK, 2008, J SYST SOFTWARE, V81, P431, DOI 10.1016/j.jss.2007.03.086
   Steinmacher I, 2015, PROCEEDINGS OF THE 2015 ACM INTERNATIONAL CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING (CSCW'15), P1379, DOI 10.1145/2675133.2675215
   Thung Ferdian., 2016, P 5 INT WORKSHOP SOF, P18
   von Krogh G, 2003, RES POLICY, V32, P1217, DOI 10.1016/S0048-7333(03)00050-7
   Wiese IS, 2016, PROC IEEE INT CONF S, P345, DOI 10.1109/ICSME.2016.13
   Wu H, 2016, PROC IEEE INT CONF S, P32, DOI 10.1109/ICSME.2016.87
   Yang YB, 2016, IEEE INT CONF AUTOM, P296, DOI 10.1145/2970276.2970353
   Yu LG, 2006, J SOFTW MAINT EVOL-R, V18, P311, DOI 10.1002/smr.335
   Zhao Y, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962591
NR 56
TC 2
Z9 3
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2022
VL 27
IS 6
AR 135
DI 10.1007/s10664-022-10166-x
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 3B9IK
UT WOS:000828248300001
OA Green Published, Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Zhang, XH
   Yu, Y
   Wang, T
   Rastogi, A
   Wang, HM
AF Zhang, Xunhui
   Yu, Yue
   Wang, Tao
   Rastogi, Ayushi
   Wang, Huaimin
TI Pull request latency explained: an empirical overview
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Pull-based development; Pull request latency; Distributed software
   development; GitHub
AB Pull request latency evaluation is an essential application of effort evaluation in the pull-based development scenario. It can help the reviewers sort the pull request queue, remind developers about the review processing time, speed up the review process and accelerate software development. There is a lack of work that systematically organizes the factors that affect pull request latency. Also, there is no related work discussing the differences and variations in characteristics in different scenarios and contexts. In this paper, we collected relevant factors through a literature review approach. Then we assessed their relative importance in five scenarios and six different contexts using the mixed-effects linear regression model. The most important factors differ in different scenarios. The length of the description is most important when pull requests are submitted. The existence of comments is most important when closing pull requests, using CI tools, and when the contributor and the integrator are different. When there exist comments, the latency of the first comment is the most important. Meanwhile, the influence of factors may change in different contexts. For example, the number of commits in a pull request has a more significant impact on pull request latency when closing than submitting due to changes in contributions brought about by the review process. Both human and bot comments are positively correlated with pull request latency. In contrast, the bot's first comments are more strongly correlated with latency, but the number of comments is less correlated. Future research and tool implementation needs to consider the impact of different contexts. Researchers can conduct related studies based on our publicly available datasets and replication scripts.
C1 [Zhang, Xunhui; Yu, Yue; Wang, Tao; Wang, Huaimin] Natl Univ Def Technol, Changsha, Peoples R China.
   [Rastogi, Ayushi] Univ Groningen, Groningen, Netherlands.
C3 National University of Defense Technology - China; University of
   Groningen
RP Yu, Y (corresponding author), Natl Univ Def Technol, Changsha, Peoples R China.
EM zhangxunhui@nudt.edu.cn; yuyue@nudt.edu.cn; taowang2005@nudt.edu.cn;
   a.rastogi@rug.nl; whm_w@163.com
RI Zhang, Xunhui/AAW-7324-2021
OI Zhang, Xunhui/0000-0002-4027-9443; Yu, Yue/0000-0002-9865-2212
FU National Grand RD Plan [2020AAA0103504]
FX This work is supported by National Grand R&D Plan (Grant
   No.2020AAA0103504).
CR Altaleb A, 2020, 2020 9TH INTERNATIONAL CONFERENCE ON INDUSTRIAL TECHNOLOGY AND MANAGEMENT (ICITM 2020), P291, DOI [10.1109/ICITM48982.2020.9080362, 10.1109/icitm48982.2020.9080362]
   [Anonymous], 2007, GUIDELINES PERFORMIN
   [Anonymous], 2014, 11 WORKING C MINING, DOI [DOI 10.1145/2597073.2597076, DOI 10.1145/2597073]
   [Anonymous], 2011, P 7 INT C PRED MOD S
   [Anonymous], 2011, NATL ACAD PR
   Atkins M, 2012, GERRIT CODE REV GITH
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Baysal O., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P447, DOI 10.1109/WCRE.2012.54
   Baysal O, 2016, EMPIR SOFTW ENG, V21, P932, DOI 10.1007/s10664-015-9366-8
   Bernardo JH, 2018, IEEE WORK CONF MIN S, P131, DOI 10.1145/3196398.3196421
   Bernhart Mario, 2010, Proceedings of the 2010 Agile Conference (AGILE 2010), P44, DOI 10.1109/AGILE.2010.18
   Bosu A, 2014, 2014 ACM IEEE INT S, P1, DOI DOI 10.1145/2652524.2652544
   Cassee N, 2021, 2021 IEEE INT C SOFT, P654, DOI DOI 10.1109/ICSME52107.2021.00075
   Cohen J., 2013, APPL MULTIPLE REGRES, DOI DOI 10.2307/2064799
   Dey Tapajit, 2020, P IEEEACM 42 INT C S, P209, DOI DOI 10.1145/3387940.3391502
   Fan Q, 2017, INT SYMP EMP SOFTWAR, P121, DOI 10.1109/ESEM.2017.19
   Gerrit, 2013, GERR BLOG GIT GERR C
   Gerrit, 2021, Gerrit Code Review
   Golzadeh M, 2021, ARXIV 210311779
   Golzadeh M, 2021, J SYST SOFTWARE, V175, DOI 10.1016/j.jss.2021.110911
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   Gousios G, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P358, DOI 10.1109/ICSE.2015.55
   Hall DB., 2009, J AM STAT ASSOC
   Hechtl C., 2020, INFLUENCE DEV CORENE
   Hilton M, 2016, IEEE INT CONF AUTOM, P426, DOI 10.1145/2970276.2970358
   Hu DY, 2018, 2018 INTERNATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND BIG DATA (ICAIBD), P250, DOI 10.1109/ICAIBD.2018.8396204
   Imtiaz N, 2019, PROC INT CONF SOFTW, P700, DOI 10.1109/ICSE.2019.00079
   Jalali S, 2012, INT SYMP EMP SOFTWAR, P29, DOI 10.1145/2372251.2372257
   Jiang J, 2019, IEEE ACCESS, V7, P102751, DOI 10.1109/ACCESS.2019.2928566
   Jiang J, 2017, INFORM SOFTWARE TECH, V84, P48, DOI 10.1016/j.infsof.2016.10.006
   Jiang YJ, 2013, IEEE WORK CONF MIN S, P101, DOI 10.1109/MSR.2013.6624016
   Jones J. S., 2014, Learn to use the eta coefficient test in r with data from the NIOSH quality of worklife survey
   Jorgensen M, 2011, INFORM SOFTWARE TECH, V53, P1382, DOI 10.1016/j.infsof.2011.07.001
   Kocaguneli E, 2011, EUROMICRO CONF PROC, P419, DOI 10.1109/SEAA.2011.71
   Kononenko O, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P124, DOI 10.1145/3183519.3183542
   Langsrud Y, 2003, STAT COMPUT, V13, P163, DOI 10.1023/A:1023260610025
   Lee A, 2017, INT SYMP EMP SOFTWAR, P1, DOI 10.1109/ESEM.2017.7
   Lenarduzzi V, 2015, 7TH INTERNATIONAL WORKSHOP ON SOCIAL SOFTWARE ENGINEERING (SSE 2015), P21, DOI 10.1145/2804381.2804385
   Li Z., 2021, IEEE T NEUR NET LEAR, DOI [10.1109/TNNLS.2021.3055147, DOI 10.1109/TNNLS.2021.3055147]
   Liu ZX, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P176, DOI 10.1109/ASE.2019.00026
   Maddila C, 2020, ARXIV 201112468
   Maddila C, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P874, DOI 10.1145/3338906.3340457
   Nakagawa S, 2013, METHODS ECOL EVOL, V4, P133, DOI 10.1111/j.2041-210x.2012.00261.x
   Overney C, 2020, PROC INT CONF SOFTW, P1209, DOI 10.1145/3377811.3380410
   Pinto G, 2018, 2018 IEEE/ACM 11TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P110, DOI 10.1145/3195836.3195858
   Sadowski C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P181, DOI 10.1145/3183519.3183525
   Sehra SK, 2017, INFORM SOFTWARE TECH, V91, P1, DOI 10.1016/j.infsof.2017.06.002
   Singh D, 2017, S VIS LANG HUM CEN C, P101, DOI 10.1109/VLHCC.2017.8103456
   Soares DM, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P1541, DOI 10.1145/2695664.2695856
   Soares DM, 2015, 2015 IEEE 14TH INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA), P960, DOI 10.1109/ICMLA.2015.41
   Trendowicz A., 2014, SOFTWARE PROJECT EFF, P277
   Tsay J, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P356, DOI 10.1145/2568225.2568315
   van der Veen E, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P357, DOI 10.1109/MSR.2015.40
   Vogel L., 2020, GERRIT CODE REV TUTO
   Wang F., 2009, P INT C COMP INT SOF, P1, DOI 10.1109/cise.2009.5364706
   Wang QY, 2019, 11TH ASIA-PACIFIC SYMPOSIUM ON INTERNETWARE (INTERNETWARE 2019), DOI [10.1007/s11104-019-04156-0, 10.1145/3361242.3361254]
   WASSERTHEIL S, 1970, BIOMETRICS, V26, P588, DOI 10.2307/2529115
   Wessel Mairieli, 2018, Proceedings of the ACM on Human-Computer Interaction, V2, DOI 10.1145/3274451
   Xue DS, 2012, PROCEEDINGS OF THE 2012 WORLD CONGRESS ON INFORMATION AND COMMUNICATION TECHNOLOGIES, P1177, DOI 10.1109/WICT.2012.6409253
   Yang Zhang, 2014, 2014 21st Asia-Pacific Software Engineering Conference (APSEC), P343, DOI 10.1109/APSEC.2014.58
   Yu Y, 2018, IEEE WORK CONF MIN S, P22, DOI 10.1145/3196398.3196455
   Yu Y, 2016, SCI CHINA INFORM SCI, V59, DOI 10.1007/s11432-016-5595-8
   Yu Y, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P367, DOI 10.1109/MSR.2015.42
   Yue Yu, 2014, 2014 21st Asia-Pacific Software Engineering Conference (APSEC), P335, DOI 10.1109/APSEC.2014.57
   Zampetti F, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P38, DOI [10.1109/SANER.2019.8667996, 10.1109/saner.2019.8667996]
   Zhang TY, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P755, DOI 10.1145/2635868.2661675
   Zhang X, 2021, PULL REQUEST LATENCY, DOI 10.5281/zenodo.5105117
   Zhang X, 2021, PULL REQUEST DECISIO
   Zhang XH, 2020, IEEE WORK CONF MIN S, P543, DOI 10.1145/3379597.3387489
   Zhang Z, 2020, TECHNICAL REPORT
   Zhao YY, 2017, IEEE INT CONF AUTOM, P60, DOI 10.1109/ASE.2017.8115619
NR 71
TC 6
Z9 7
U1 1
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2022
VL 27
IS 6
AR 126
DI 10.1007/s10664-022-10143-4
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 2Q7WO
UT WOS:000820630300002
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Callan, J
   Krauss, O
   Petke, J
   Sarro, F
AF Callan, James
   Krauss, Oliver
   Petke, Justyna
   Sarro, Federica
TI How do Android developers improve non-functional properties of software?
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Non-Functional property optimisation; Android optimisation; Mining
   android; Execution time; Bandwidth; Framerate; Memory
AB Nowadays there is an increased pressure on mobile app developers to take non-functional properties into account. An app that is too slow or uses much bandwidth will decrease user satisfaction, and thus can lead to users simply abandoning the app. Although automated software improvement techniques exist for traditional software, these are not as prevalent in the mobile domain. Moreover, it is yet unknown if the same software changes would be as effective. With that in mind, we mined overall 100 Android repositories to find out how developers improve execution time, memory consumption, bandwidth usage and frame rate of mobile apps. We categorised non-functional property (NFP) improving commits related to performance to see how existing automated software improvement techniques can be improved. Our results show that although NFP improving commits related to performance are rare, such improvements appear throughout the development lifecycle. We found altogether 560 NFP commits out of a total of 74,408 commits analysed. Memory consumption is sacrificed most often when improving execution time or bandwidth usage, although similar types of changes can improve multiple non-functional properties at once. Code deletion is the most frequently utilised strategy except for frame rate, where increase in concurrency is the dominant strategy. We find that automated software improvement techniques for mobile domain can benefit from addition of SQL query improvement, caching and asset manipulation. Moreover, we provide a classifier which can drastically reduce manual effort to analyse NFP improving commits.
C1 [Callan, James] UCL, London, England.
   [Petke, Justyna] UCL, Ctr Res Evolut Search & Testing CREST, London, England.
   [Petke, Justyna] UCL, Software Optimisat Learning & Analyt Res SOLAR Gr, London, England.
   [Sarro, Federica] UCL, Software Engn, London, England.
   [Krauss, Oliver] Univ Appl Sci Upper Austria, Res Grp Adv Informat Syst & Technol, Wels, Austria.
C3 University of London; University College London; University of London;
   University College London; University of London; University College
   London; University of London; University College London
RP Callan, J (corresponding author), UCL, London, England.
EM james.callan.19@ucl.ac.uk; Oliver.Krauss@fh-hagenberg.at;
   j.petke@ucl.ac.uk; f.sarro@ucl.ac.uk
OI Petke, Justyna/0000-0002-7833-6044; Sarro, Federica/0000-0002-9146-442X
FU ERC [741278]; EPSRC [EP/P023991/1]
FX This research is funded by the ERC advanced fellowship grant no. 741278
   (EPIC: Evolutionary Program Improvement Collaborators) and by the EPSRC
   Fellowship grant no. EP/P023991/1 (Automated Software Specialisation
   Using Genetic Improvement).
CR Bader J, 2019, P ACM PROGR LANG ACM
   Banerjee A, 2017, 2017 IEEEACM 4 INT C, P112, DOI [10.1109/MOBILESoft.2017.1, DOI 10.1109/MOBILESOFT.2017.1]
   Banerjee A, 2016, 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2016), P139, DOI [10.1109/MobileSoft.2016.038, 10.1145/2897073.2897086]
   Basios M, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P118, DOI 10.1145/3236024.3236043
   Bokhari MA, 2017, PROCEEDINGS OF THE 2017 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE COMPANION (GECCO'17 COMPANION), P1501, DOI 10.1145/3067695.3082519
   Brownlee AEI, 2019, PROCEEDINGS OF THE 2019 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE (GECCO'19), P985, DOI 10.1145/3321707.3321841
   Bruce BR, 2019, IEEE T SOFTWARE ENG, V45, P1150, DOI 10.1109/TSE.2018.2827066
   Burles Nathan, 2015, Search-Based Software Engineering. 7th International Symposium, SSBSE 2015. Proceedings: LNCS 9275, P255, DOI 10.1007/978-3-319-22183-0_20
   Chen YQ, 2019, PROC INT SYMP SOFTW, P70, DOI 10.1109/ISSRE.2019.00017
   Das T, 2016, PROC IEEE INT CONF S, P443, DOI 10.1109/ICSME.2016.49
   Ferrucci F, 2015, LECT NOTES COMPUT SC, V9459, P271, DOI 10.1007/978-3-319-26844-6_20
   Gao C, 2018, P 1 INT WORKSHOP ADV, P1318
   Gao CY, 2021, INFORM SOFTWARE TECH, V132, DOI 10.1016/j.infsof.2020.106471
   Haraldsson SO, 2017, PROCEEDINGS OF THE 2017 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE COMPANION (GECCO'17 COMPANION), P1513, DOI 10.1145/3067695.3082517
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Harman M, 2012, LECT NOTES COMPUT SC, V7007, P1
   Hort M, 2022, IEEE T SOFTWARE ENG, V48, P2879, DOI 10.1109/TSE.2021.3071193
   Inukollu V. N., 2014, ARXIV14104537
   Jin GL, 2012, ACM SIGPLAN NOTICES, V47, P77, DOI 10.1145/2345156.2254075
   Khalid H, 2015, IEEE SOFTWARE, V32, P70, DOI 10.1109/MS.2014.50
   Kim D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P802, DOI 10.1109/ICSE.2013.6606626
   Kim H, 2015, IEEE MICRO, V35, P15, DOI 10.1109/MM.2015.9
   Le Goues C, 2012, IEEE T SOFTWARE ENG, V38, P54, DOI 10.1109/TSE.2011.104
   Le Goues C, 2012, PROCEEDINGS OF THE FOURTEENTH INTERNATIONAL CONFERENCE ON GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P959, DOI 10.1145/2330163.2330296
   Lim SL, 2015, IEEE T SOFTWARE ENG, V41, P40, DOI 10.1109/TSE.2014.2360674
   Linares-Vásquez M, 2015, PROC IEEE INT CONF S, P352, DOI 10.1109/ICSM.2015.7332486
   Liu YP, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1013, DOI 10.1145/2568225.2568229
   Long F, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P727, DOI 10.1145/3106237.3106253
   Martinez M, 2018, LECT NOTES COMPUT SC, V11036, P65, DOI 10.1007/978-3-319-99241-9_3
   Martins A L N, 2018, P 2018 INT C MACHINE, P5862
   Mazuera-Rozo A, 2020, EMPIR SOFTW ENG, V25, P1644, DOI 10.1007/s10664-019-09795-6
   Moura I, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P56, DOI 10.1109/MSR.2015.13
   Pearson K., 1895, Proceedings of the Royal Society London, Vlviii, P240
   Petke J, 2017, PROCEEDINGS OF THE 2017 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE COMPANION (GECCO'17 COMPANION), P1541, DOI 10.1145/3067695.3082520
   Petke J, 2018, IEEE T EVOLUT COMPUT, V22, P415, DOI 10.1109/TEVC.2017.2693219
   Schulte E, 2014, GENET PROGRAM EVOL M, V15, P281, DOI 10.1007/s10710-013-9195-8
   Sitthi-amorn P, 2011, ACM T GRAPHIC, V30, DOI 10.1145/2024156.2024186
   Wu F, 2015, GECCO'15: PROCEEDINGS OF THE 2015 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1375, DOI 10.1145/2739480.2754648
   Yamauchi K, 2014, PROC IEEE INT CONF S, P406, DOI 10.1109/ICSME.2014.63
NR 39
TC 4
Z9 4
U1 3
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2022
VL 27
IS 5
AR 113
DI 10.1007/s10664-022-10137-2
PG 42
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 1S3GQ
UT WOS:000803943100001
PM 35663289
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Zerouali, A
   Mens, T
   Decan, A
   De Roover, C
AF Zerouali, Ahmed
   Mens, Tom
   Decan, Alexandre
   De Roover, Coen
TI On the impact of security vulnerabilities in the npm and RubyGems
   dependency networks
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Security vulnerabilities; npm; RubyGems; Vulnerable packages
AB The increasing interest in open source software has led to the emergence of large language-specific package distributions of reusable software libraries, such as npm and RubyGems. These software packages can be subject to vulnerabilities that may expose dependent packages through explicitly declared dependencies. Using Snyk's vulnerability database, this article empirically studies vulnerabilities affecting npm and RubyGems packages. We analyse how and when these vulnerabilities are disclosed and fixed, and how their prevalence changes over time. We also analyse how vulnerable packages expose their direct and indirect dependents to vulnerabilities. We distinguish between two types of dependents: packages distributed via the package manager, and external GitHub projects depending on npm packages. We observe that the number of vulnerabilities in npm is increasing and being disclosed faster than vulnerabilities in RubyGems. For both package distributions, the time required to disclose vulnerabilities is increasing over time. Vulnerabilities in npm packages affect a median of 30 package releases, while this is 59 releases in RubyGems packages. A large proportion of external GitHub projects is exposed to vulnerabilities coming from direct or indirect dependencies. 33% and 40% of dependency vulnerabilities to which projects and packages are exposed, respectively, have their fixes in more recent releases within the same major release range of the used dependency. Our findings reveal that more effort is needed to better secure open source package distributions.
C1 [Zerouali, Ahmed; De Roover, Coen] Vrije Univ Brussel, Brussels, Belgium.
   [Mens, Tom; Decan, Alexandre] Univ Mons, Mons, Belgium.
C3 Vrije Universiteit Brussel; University of Mons
RP Zerouali, A (corresponding author), Vrije Univ Brussel, Brussels, Belgium.
EM ahmed.zerouali@vub.be; tom.mens@umons.ac.be;
   alexandre.decan@umons.ac.be; coen.de.roover@vub.be
RI Zerouali, Ahmed/AAH-4948-2020
OI De Roover, Coen/0000-0002-1710-1268
FU Excellence of Science project - F.R.S.-FNRS [30446992 SECO];
   FWO-Vlaanderen; FNRS [J015120, T001718]
FX This research was partially funded by the Excellence of Science project
   30446992 SECO-Assist financed by F.R.S.-FNRS and FWO-Vlaanderen, as well
   as FNRS Research Credit J015120 and FNRS Research Project T001718. We
   express our gratitude to the security team of Snyk for granting us
   permission to use their dataset of vulnerability reports for research
   purposes.
CR Agresti A, 1998, AM STAT, V52, P119, DOI 10.2307/2685469
   Alfadel M, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P446, DOI 10.1109/SANER50967.2021.00048
   Aranovich R, 2021, NEW SECURITY PARADIG, P59
   Birsan A., Dependency confusion: How I hacked into Apple
   Bogart C, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3447245
   Bogart C, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P109, DOI 10.1145/2950290.2950325
   Chinthanet B, 2020, INT C AUTOMATED SOFT
   Cox J, 2015, INT C SOFTWARE ENG
   Cox J, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P109, DOI 10.1109/ICSE.2015.140
   Dashevskyi S, 2019, IEEE T SOFTWARE ENG, V45, P945, DOI 10.1109/TSE.2018.2816033
   Decan A., 2021, IEEE Transactions on Software Engineering, P1
   Decan A, 2021, IEEE T SOFTWARE ENG, V47, P1226, DOI 10.1109/TSE.2019.2918315
   Decan A, 2019, EMPIR SOFTW ENG, V24, P381, DOI 10.1007/s10664-017-9589-y
   Decan A, 2018, IEEE WORK CONF MIN S, P181, DOI 10.1145/3196398.3196401
   Decan A, 2018, PROC IEEE INT CONF S, P404, DOI 10.1109/ICSME.2018.00050
   Decan A, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P2, DOI 10.1109/SANER.2017.7884604
   Nguyen DC, 2020, ANN COMPUT SECURITY, P263, DOI 10.1145/3427228.3427658
   Gkortzis A, 2021, J SYST SOFTWARE, V172, DOI 10.1016/j.jss.2020.110653
   Gonzalez-Barahona JM, 2017, IFIP INT C OP SOURC
   Imtiaz N, 2021, PREPRINTS
   Katz J, 2020, LIBRARIESIO OPEN SOU
   Kikas R, 2017, IEEE WORK CONF MIN S, P102, DOI 10.1109/MSR.2017.55
   Klein J, 2013, SURVIVAL ANAL TECHNI
   Lauinger T, 2017, 24TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2017), DOI 10.14722/ndss.2017.23414
   Maillart T, 2017, J CYBERSECURITY, V3, P81, DOI 10.1093/cybsec/tyx008
   Massacci F, 2021, 2021 IEEEACM 43 INT
   Meneely Andrew, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P65, DOI 10.1109/ESEM.2013.19
   Mujahid S, 2021, PREPRINTS
   Nguyen VH, 2016, EMPIR SOFTW ENG, V21, P2268, DOI 10.1007/s10664-015-9408-2
   Ohm M, 2020, INT C DET INTR MALW, P2343
   OWASP, 2017, OW TOP 10 WEB APPL S
   Ozment A., 2006, USENIX SECURITY S, V6, P10
   Pashchenko I, 2020, CCS '20: PROCEEDINGS OF THE 2020 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1513, DOI 10.1145/3372297.3417232
   Pashchenko I, 2022, IEEE T SOFTWARE ENG, V48, P1592, DOI 10.1109/TSE.2020.3025443
   Pashchenko I, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3268920
   Pham N. H., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P227, DOI 10.1145/1810295.1810336
   Ponta SE, 2020, EMPIR SOFTW ENG, V25, P3175, DOI 10.1007/s10664-020-09830-x
   Prana GAA, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09959-3
   Preston-Werner Tom., 2013, Semantic Versioning 2.0.0
   Romano J., 2006, P ANN M SO ASS I RES
   Ruohonen J, 2018, INT WORKSH EMPIR ENG, P25, DOI 10.1109/IWESEP.2018.00013
   Shin Y, 2011, IEEE T SOFTWARE ENG, V37, P772, DOI 10.1109/TSE.2010.81
   Snyk, 2017, STAT OP SOURC SEC
   Soto-Valero C, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09914-8
   Wittern E, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P351, DOI [10.1145/2901739.2901743, 10.1109/MSR.2016.043]
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Zapata RE, 2018, PROC IEEE INT CONF S, P559, DOI 10.1109/ICSME.2018.00067
   Zerouali A, 2021, SCI COMPUT PROGRAM, V207, DOI 10.1016/j.scico.2021.102653
   Zerouali A, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09908-6
   Zerouali A, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P491, DOI [10.1109/saner.2019.8668013, 10.1109/SANER.2019.8668013]
   Zerouali A, 2018, LECT NOTES COMPUT SC, V10826, P95, DOI 10.1007/978-3-319-90421-4_6
   Zerouali J, 2019, THESIS U MONS
   Zimmermann M, 2019, PROCEEDINGS OF THE 28TH USENIX SECURITY SYMPOSIUM, P995
NR 53
TC 14
Z9 16
U1 1
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2022
VL 27
IS 5
AR 107
DI 10.1007/s10664-022-10154-1
PG 45
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 1U7GT
UT WOS:000805577100004
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Ali, S
   Abbasi, IA
   Mustafa, EE
   Wahid, F
   Huang, JW
AF Ali, Sikandar
   Abbasi, Irshad Ahmed
   Mustafa, Elfatih Elmubarak
   Wahid, Fazli
   Huang, Jiwei
TI Practitioner's view of the success factors for software outsourcing
   partnership formation: an empirical exploration
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Empirical study; Success factors; Client-vendor relationship; Software
   outsourcing partnership
ID SYSTEMATIC LITERATURE; PROCESS IMPROVEMENT; CLIENT; MODEL;
   COLLABORATION; PERFORMANCE; CHALLENGES; DECISION; INDUSTRY; VENDORS
AB Software Outsourcing Partnership (SOP) is a client-vendor relationship focused solely on mutual trust and dedication that achieves mutually beneficial objectives. Often, a well-established outsourcing relationship may be converted into outsourcing partnerships. The development of SOP depends on various success factors. The research method attempts to solve the problem following a two-step process of Systematic Literature Review (SLR) and industrial survey with 70 experts. The results obtained are disseminated and analysed based on 'expert level of experience', 'company affiliation', and 'expert outsourcing role'. Moreover, from a client-vendor perspective, factors are classified according to their criticality. Based on Spearman's correlation test (rs =0.406 and rho = 0.040), we argue that the survey results regarding the factors are consistent with the previously published findings of the SLR. The results of this study suggest that, in rode to successfully renew or promote outgoing outsourcing ventures, outsourcing companies should address all the identified factors especially the most critical one.
C1 [Ali, Sikandar; Huang, Jiwei] China Univ Petr, Dept Comp Sci & Technol, Beijing 102249, Peoples R China.
   [Ali, Sikandar; Wahid, Fazli] Univ Haripur, Dept Informat Technol, Haripur 22621, Pakistan.
   [Abbasi, Irshad Ahmed; Mustafa, Elfatih Elmubarak] Univ Bisha, Fac Sci & Arts Belqarn, Dept Comp Sci, Sabt Al Alaya 61985, Saudi Arabia.
   [Huang, Jiwei] China Univ Petr, Beijing Key Lab Petr Data Min, Beijing 102249, Peoples R China.
C3 China University of Petroleum; University of Bisha; China University of
   Petroleum
RP Ali, S; Huang, JW (corresponding author), China Univ Petr, Dept Comp Sci & Technol, Beijing 102249, Peoples R China.; Ali, S (corresponding author), Univ Haripur, Dept Informat Technol, Haripur 22621, Pakistan.; Huang, JW (corresponding author), China Univ Petr, Beijing Key Lab Petr Data Min, Beijing 102249, Peoples R China.
EM sikandar@cup.edu.cn; aabasy@ub.edu.sa; fatih200041@yahoo.com;
   fazli.wahid@uoh.edu.pk; huangjw@cup.edu.cn
RI Abbasi, Dr. Irshad Ahmed/A-8587-2018; Mustafa, Elfatih
   Elmubarak/GXV-5800-2022; Ali, Sikandar/AAE-6488-2019; Huang,
   Jiwei/ABE-6485-2022; Irshad, Azeem/E-7400-2010
OI Abbasi, Dr. Irshad Ahmed/0000-0003-1813-1415; Ali,
   Sikandar/0000-0002-2753-8615; Huang, Jiwei/0000-0001-5220-6703; Irshad,
   Azeem/0000-0002-1366-2834; Elmubarak Mustafa,
   Elfatih/0000-0002-5085-9783
FU Beijing Natural Science Foundation [4202066]; National Natural Science
   Foundation of China [61972414]; Beijing Nova Program [Z201100006820082];
   Fundamental Research Funds for Central Universities [2462020YJRC001]
FX We would like to thanks the participants of the survey. This work is
   supported by Beijing Natural Science Foundation (No. 4202066), National
   Natural Science Foundation of China (No. 61972414), Beijing Nova Program
   (No. Z201100006820082), and Fundamental Research Funds for Central
   Universities (No. 2462020YJRC001).
CR Abd Hamid A., 2016, INT J ADV SCI ENG IN, V6, P820
   Ahimbisibwe A., 2015, CRITICAL SUCCESS FAC
   Alexandrova M, 2012, MANAG-J CONTEMP MANA, V17, P31
   Ali S., 2020, J SOFTW EVOL PROCESS, V32
   Ali Syed Munvar, 2014, International Conference on Recent Advances and Innovations in Engineering (ICRAIE-2014), DOI 10.1109/ICRAIE.2014.6909170
   Ali S, 2019, IEEE ACCESS, V7, P164556, DOI 10.1109/ACCESS.2019.2949919
   Ali S, 2018, IEEE ACCESS, V6, P55431, DOI 10.1109/ACCESS.2018.2871710
   Ali S, 2017, IEEE ACCESS, V5, P23589, DOI 10.1109/ACCESS.2017.2764946
   Ali S, 2016, J SYST SOFTWARE, V117, P402, DOI 10.1016/j.jss.2016.03.069
   Ali S, 2014, INT CONF GLOBAL SOFT, P153, DOI 10.1109/ICGSE.2014.12
   ANDERSON JC, 1990, J MARKETING, V54, P42, DOI 10.2307/1252172
   Nguyen-Duc A, 2015, INFORM SOFTWARE TECH, V57, P277, DOI 10.1016/j.infsof.2014.06.002
   [Anonymous], 2016, DESIGN RATING SCALES
   [Anonymous], 1990, BASICS GROUNDED THEO
   [Anonymous], 2006, ANAL RATER AGREEMENT
   [Anonymous], 2018, RES METHODS STAT PSY
   [Anonymous], 2013, INT J U E SERVICE SC
   Assmann D, 2004, COMPUT IND, V54, P137, DOI 10.1016/j.compind.2003.09.005
   Azeem M. I., 2011, IEEE 5 MAL SOFTW ENG
   Baliyan N, 2014, IETE TECH REV, V31, P452, DOI 10.1080/02564602.2014.967317
   Bamford J, 2004, HARVARD BUS REV, V82, P90
   Bashir I, 2020, J ENG SCI TECHNOL, V15, P2781
   Becht M, 2003, HANDB ECON, V21, P1
   Berger H, 2011, INT J INFORM MANAGE, V31, P480, DOI 10.1016/j.ijinfomgt.2011.06.001
   Beulen E., 2002, Proceedings of the 35th Annual Hawaii International Conference on System Sciences, P3122, DOI 10.1109/HICSS.2002.994314
   Bhatnagar SC, 1997, J INFORM TECHNOL, V12, P277, DOI 10.1080/026839697345008
   Blijleven V., 2019, CRITICAL SUCCESS FAC
   Blomqvist K., 2002, PARTNERING DYNAMIC E
   Bocij Paul., 2008, BUSINESS INFORM SYST
   Bowersox D.J., 2003, SUPPLY CHAIN MANAGEM, V7, P18
   Brinkerhoff JM, 2002, EVAL PROGRAM PLANN, V25, P215, DOI 10.1016/S0149-7189(02)00017-4
   BRUCE M, 1995, TECHNOVATION, V15, P535, DOI 10.1016/0166-4972(95)96584-G
   Cha KJ, 2018, ENTERP INF SYST-UK, V12, P76, DOI 10.1080/17517575.2016.1196734
   Ciolkowski M, 2003, LECT NOTES COMPUT SC, V2765, P104
   dos Santos JC, 2015, INT J ENTERP INF SYS, V11, P62, DOI 10.4018/ijeis.2015010105
   Cox K, 2009, IET SOFTW, V3, P339, DOI 10.1049/iet-sen.2008.0076
   Creswell J. W., 2014, RES DESIGN QUALITATI, V4th, DOI DOI 10.1007/S13398-014-0173-7.2
   Delen GPAJ, 2016, SCI COMPUT PROGRAM, V130, P37, DOI 10.1016/j.scico.2016.04.001
   Dominguez L.R., 2006, The manager's step-by-step guide to outsourcing
   DWYER FR, 1987, J MARKETING, V51, P11, DOI 10.2307/1251126
   Ee O, 2013, SERV BUS, V7, P227, DOI 10.1007/s11628-012-0152-z
   Ellram L.M., 1996, International Journal of Purchasing Materials Management, V32, P20
   Embleton P., 1998, EMPOWERMENT ORG, V6, P94, DOI DOI 10.1108/14634449810210832
   Fahimullah M, 2019, IEEE ACCESS, V7, P42859, DOI 10.1109/ACCESS.2019.2908459
   Fleming R, 2007, AUSTRALAS J INF SYST, V14, P95
   FORREST JE, 1992, R&D MANAGE, V22, P41, DOI 10.1111/j.1467-9310.1992.tb00787.x
   Garousi V, 2016, INFORM SOFTWARE TECH, V79, P106, DOI 10.1016/j.infsof.2016.07.006
   Gong H., 2007, 40 ANN HAW INT C SYS, pc239
   Gonzalez R, 2015, IND MANAGE DATA SYST, V115, P1067, DOI 10.1108/IMDS-01-2015-0030
   Gonzalez-Ramirez R., 2019, IS OUTSOURCING SATIS
   Goo J, 2010, INFORM SYST FRONT, V12, P185, DOI 10.1007/s10796-008-9067-6
   Gopal A, 2011, IEEE T ENG MANAGE, V58, P772, DOI 10.1109/TEM.2010.2096821
   Gopalakrishnan S., 2017, S ASIAN J BUS STUD
   Greiner C, 2013, POPUL ENVIRON, V34, P524, DOI 10.1007/s11111-012-0178-0
   Hagel J., 2005, ONLY SUSTAINABLE EDG
   Halinen A., 2012, Relationship marketing in professional services: a study of agencyclient dynamics in the advertising sector
   HENDERSON JC, 1990, SLOAN MANAGE REV, V31, P7
   de Carvalho VDH, 2018, EXPERT SYST, V35, DOI 10.1111/exsy.12198
   Ikediashi D., 2015, PROP MANAG
   Johnson JP, 2006, J INT BUS STUD, V37, P525, DOI 10.1057/palgrave.jibs.8400205
   Katato T., 2019, JABS, V5, P281
   Kedia BL, 2007, J INT MANAG, V13, P22, DOI 10.1016/j.intman.2006.09.006
   Kern T, 2000, J STRATEGIC INF SYST, V9, P321, DOI 10.1016/S0963-8687(00)00048-2
   Khan AA, 2018, IET SOFTW, V12, P333, DOI 10.1049/iet-sen.2018.0010
   Khan AA, 2017, INFORM SOFTWARE TECH, V87, P180, DOI 10.1016/j.infsof.2017.03.006
   Khan RA, 2019, IEEE ACCESS, V7, P112879, DOI 10.1109/ACCESS.2019.2924404
   Khan SU, 2012, IET SOFTW, V6, P1, DOI 10.1049/iet-sen.2010.0038
   Khan S. U., 2015, Proc. Pakistan Acad. Sci. J., V52, P315
   Khan SU, 2017, IET SOFTW, V11, P1, DOI 10.1049/iet-sen.2015.0080
   Khan SU, 2014, IET SOFTW, V8, P161, DOI 10.1049/iet-sen.2013.0012
   Khan SU, 2009, INT CONF GLOBAL SOFT, P207, DOI 10.1109/ICGSE.2009.28
   Khan SU., 2012, INT IASTED C SOFTW E, P370
   Khan SU., 2012, SOFTWARE ENG
   Kinnula M., 2007, Proceedings of the 40th Annual Hawaii International Conference on System Sciences
   Kinnula M., 2007, 40 ANN HAW INT C SYS, pb240
   Kinnula M., 2006, FORMATION MANAGEMENT
   Kishore R, 2003, COMMUN ACM, V46, P86, DOI 10.1145/953460.953464
   Klepper R., 1998, Outsourcing information technology, systems, and services
   Könning M, 2019, INFORM SYST MANAGE, V36, P78, DOI 10.1080/10580530.2018.1553650
   Kotabe M, 2008, MANAGE INT REV, V48, P65, DOI 10.1007/s11575-008-0004-1
   Krosnick J.A., 2018, The Palgrave Handbook of Survey Research, P439, DOI [10.1007/978-3-319-54395-653, DOI 10.1007/978-3-319-54395-6_53]
   Krosnick JA, 1997, WILEY SER PROB STAT, P141
   Kumar K, 1996, MIS QUART, V20, P279, DOI 10.2307/249657
   Lacity M.C., 2012, SLOAN MANAGE REV, V34
   Lacity MC, 2010, J INF TECHNOL-UK, V25, P395, DOI 10.1057/jit.2010.21
   Lahiri S, 2009, J INT MANAG, V15, P209, DOI 10.1016/j.intman.2008.09.002
   Lee JN, 2005, IEEE T ENG MANAGE, V52, P43, DOI 10.1109/TEM.2004.839958
   Lee JN., 2000, P 33 ANN HICSS
   Lee S, 2005, INFORM MANAGE-AMSTER, V42, P503, DOI [10.1016/S0378-7206(03)00153-8, 10.1016/j.im.2003.03.001]
   Lethbridge TC, 2005, EMPIR SOFTW ENG, V10, P311, DOI 10.1007/s10664-005-1290-x
   Li Y., 2008, 2008 4th International Conference on Wireless Communications., P1
   Liu S, 2017, EUR J OPER RES, V260, P1115, DOI 10.1016/j.ejor.2017.01.020
   Maitland A, 2013, SURVEY PRACTICE, V2
   Mathew SK, 2013, J STRATEGIC INF SYST, V22, P298, DOI 10.1016/j.jsis.2013.03.001
   MCFARLAN FW, 1995, SLOAN MANAGE REV, V36, P9
   McIvor Ronan, 2008, European Management Journal, V26, P24, DOI 10.1016/j.emj.2007.08.008
   Mehta A, 2017, J GLOB INF TECH MAN, V20, P171, DOI 10.1080/1097198X.2017.1354596
   Menold N, 2014, FIELD METHOD, V26, P21, DOI 10.1177/1525822X13508270
   Millson MR, 1996, RES TECHNOL MANAGE, V39, P41, DOI 10.1080/08956308.1996.11671063
   Mingay S, 2002, TG15A3491 GARTN GROU
   Moe NB, 2014, EMPIR SOFTW ENG, V19, P1225, DOI 10.1007/s10664-013-9272-x
   MOHR J, 1994, STRATEGIC MANAGE J, V15, P135, DOI 10.1002/smj.4250150205
   Nauman AB, 2004, INMIC 2004: 8th International Multitopic Conference, Proceedings, P403
   Newell WJ, 2019, J BUS IND MARK, V34, P389, DOI 10.1108/JBIM-02-2017-0035
   Nguyen P. T., 2006, P 28 INT C SOFTW ENG
   Niazi M., 2005, The 17th International Conference on Software Engineering and Knowledge Engineering, July 14-16, 2005, P396
   Niazi M, 2013, IET SOFTW, V7, P283, DOI 10.1049/iet-sen.2012.0136
   Nunez-Sanchez Yeison, 2019, 2019 International Conference on Information Systems and Computer Science (INCISCOS). Proceedings, P7, DOI 10.1109/INCISCOS49368.2019.00011
   Peachey JW, 2018, SPORT MANAG REV, V21, P160, DOI 10.1016/j.smr.2017.06.002
   Piltan M, 2016, EXPERT SYST APPL, V64, P605, DOI 10.1016/j.eswa.2016.08.006
   Prikladnicki R, 2004, INT FED INFO PROC, V149, P369
   Rahman HU, 2021, IEEE ACCESS, V9, P58589, DOI 10.1109/ACCESS.2021.3073315
   Rahman HU, 2020, IEEE ACCESS, V8, P183913, DOI 10.1109/ACCESS.2020.3029501
   Rave O, 2019, THESIS
   Rave O, 2019, WAY OUTSOURCING SUCC
   Razali R, 2015, J TEKNOL, V77
   Rhodes J, 2016, SERV BUS, V10, P59, DOI 10.1007/s11628-014-0256-8
   RING PS, 1994, ACAD MANAGE REV, V19, P90, DOI 10.2307/258836
   Roses Luís Kalb, 2013, JISTEM J.Inf.Syst. Technol. Manag., V10, P61
   Roy V., 2002, Data Base for Advances in Information Systems, V33, P29
   Samantra C, 2014, EXPERT SYST APPL, V41, P4010, DOI 10.1016/j.eswa.2013.12.024
   Sanchez OP, 2017, INT J PROJ MANAG, V35, P1608, DOI 10.1016/j.ijproman.2017.09.007
   Sangaiah AK, 2013, OPEN ENG, V3, P419, DOI 10.2478/s13531-012-0070-9
   Saris WE, 2014, WILEY SER SURV METH, P1, DOI 10.1002/9781118634646
   SLOWINSKI G, 1993, RES TECHNOL MANAGE, V36, P22, DOI 10.1080/08956308.1993.11670898
   Soderberg AM, 2013, J INT MANAG, V19, P347, DOI 10.1016/j.intman.2013.04.004
   Srinivasan R, 2006, ORGAN SCI, V17, P436, DOI 10.1287/orsc.1060.0194
   Sun S-Y., 2002, 35 HAW INT C SYST SC, P10
   Szu-Yuan Sun, 2002, Proceedings of the 35th Annual Hawaii International Conference on System Sciences, P2810, DOI 10.1109/HICSS.2002.994342
   Terdiman R., 2009, GOING OFFSHORE GLOBA
   Torre A, 2005, REG STUD, V39, P47, DOI 10.1080/0034340052000320842
   Tuten TL, 2001, IND MARKET MANAG, V30, P149, DOI 10.1016/S0019-8501(00)00140-1
   Verner JM, 2014, INFORM SOFTWARE TECH, V56, P54, DOI 10.1016/j.infsof.2013.06.005
   Virolainen V., 1998, Motives, circumstances and success factors in partnership sourcing
   Wang Yanhong, 2011, Proceedings 2011 International Conference on Management Science and Industrial Engineering (MSIE 2011), P995, DOI 10.1109/MSIE.2011.5707581
   Webb L, 2005, BUS PROCESS MANAG J, V11, P437, DOI 10.1108/14637150510619812
   Wei ZL, 2018, IEEE T ENG MANAGE, V65, P128, DOI 10.1109/TEM.2017.2755664
   Yang B, 2005, SEVENTH INTERNATIONAL CONFERENCE ON ELECTRONIC COMMERCE, VOLS 1 AND 2, SELECTED PROCEEDINGS, P801
   Ylitalo J, 2004, BUILDING MUTUALITY T
   Zahedi M, 2016, INT J INFORM MANAGE, V36, P995, DOI 10.1016/j.ijinfomgt.2016.06.007
   Zhang SH, 2009, IN C IND ENG ENG MAN, P950, DOI 10.1109/IEEM.2009.5373540
   Zhu Z., 2001, MANAGE DECIS, V39, P373, DOI 10.1108/EUM0000000005473
NR 142
TC 8
Z9 9
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2022
VL 27
IS 2
AR 52
DI 10.1007/s10664-021-10044-y
PG 63
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA YV7HO
UT WOS:000752897800001
DA 2024-07-18
ER

PT J
AU Almulla, H
   Gay, G
AF Almulla, Hussein
   Gay, Gregory
TI Learning how to search: generating effective test cases through adaptive
   fitness function selection
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Automated test generation; Search-based test generation; Reinforcement
   learning; Hyperheuristic search
ID STRATEGY
AB Search-based test generation is guided by feedback from one or more fitness functions-scoring functions that judge solution optimality. Choosing informative fitness functions is crucial to meeting the goals of a tester. Unfortunately, many goals-such as forcing the class-under-test to throw exceptions, increasing test suite diversity, and attaining Strong Mutation Coverage-do not have effective fitness function formulations. We propose that meeting such goals requires treating fitness function identification as a secondary optimization step. An adaptive algorithm that can vary the selection of fitness functions could adjust its selection throughout the generation process to maximize goal attainment, based on the current population of test suites. To test this hypothesis, we have implemented two reinforcement learning algorithms in the EvoSuite unit test generation framework, and used these algorithms to dynamically set the fitness functions used during generation for the three goals identified above. We have evaluated our framework, EvoSuiteFIT, on a set of Java case examples. EvoSuiteFIT techniques attain significant improvements for two of the three goals, and show limited improvements on the third when the number of generations of evolution is fixed. Additionally, for two of the three goals, EvoSuiteFIT detects faults missed by the other techniques. The ability to adjust fitness functions allows strategic choices that efficiently produce more effective test suites, and examining these choices offers insight into how to attain our testing goals. We find that adaptive fitness function selection is a powerful technique to apply when an effective fitness function does not already exist for achieving a testing goal.
C1 [Almulla, Hussein] Univ South Carolina, Columbia, SC 29208 USA.
   [Gay, Gregory] Chalmers, Gothenburg, Sweden.
   [Gay, Gregory] Univ Gothenburg, Gothenburg, Sweden.
C3 University of South Carolina System; University of South Carolina
   Columbia; Chalmers University of Technology; University of Gothenburg
RP Gay, G (corresponding author), Chalmers, Gothenburg, Sweden.; Gay, G (corresponding author), Univ Gothenburg, Gothenburg, Sweden.
EM halmulla@email.sc.edu; ggay@chalmers.se
OI Almulla, Hussein/0000-0003-3877-096X; Gay, Gregory/0000-0001-6794-9585
FU Chalmers University of Technology; Vetenskapsradet grant [2019-05275];
   Swedish Research Council [2019-05275] Funding Source: Swedish Research
   Council; Vinnova [2019-05275] Funding Source: Vinnova
FX Open access funding provided by Chalmers University of Technology. This
   research was supported by Vetenskapsradet grant 2019-05275.
CR Ahmed BS, 2020, SOFT COMPUT, V24, P13929, DOI 10.1007/s00500-020-04769-z
   Albunian NM, 2017, DIVERSITY SEARCH BAS
   Ali S, 2010, IEEE T SOFTWARE ENG, V36, P742, DOI 10.1109/TSE.2009.52
   Almasi MM, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P263, DOI 10.1109/ICSE-SEIP.2017.27
   Almulla H., 2020, INT S SEARCH BASED S, V12420 LNCS, P246, DOI DOI 10.1007/978-3-030-59762-7_18
   Almulla H, 2020, IEEE INT CONF SOFTW, P63, DOI 10.1109/ICST46399.2020.00017
   Alshahwan N., 2014, Proceedings of the 2014 International Symposium on Software Testing and Analysis, P181
   Anand S, 2013, J SYST SOFTWARE, V86, P1978, DOI 10.1016/j.jss.2013.02.061
   [Anonymous], 2011, P 8 EUR SOFTW ENG C, DOI DOI 10.1145/2025113.2025144
   [Anonymous], 2013, P 2013 INT S SOFTW T, DOI DOI 10.1145/2483760.2483774
   Arcuri A, 2013, SOFTW TEST VERIF REL, V23, P119, DOI 10.1002/stvr.457
   Balera JM, 2019, INFORM SOFTWARE TECH, V114, P176, DOI 10.1016/j.infsof.2019.06.012
   Barr ET, 2015, IEEE T SOFTWARE ENG, V41, P507, DOI 10.1109/TSE.2014.2372785
   Bauersfeld S., 2012, Fast abstracts of the 4th symposium on search-based software engineering (SSBSE 2012), P7
   Bauersfeld S, 2012, IEEE INT CONF AUTOM, P330, DOI 10.1145/2351676.2351739
   Bianchi Leonora, 2009, Natural Computing, V8, P239, DOI 10.1007/s11047-008-9098-4
   Blasi A, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P242, DOI 10.1145/3213846.3213872
   Burke E.K., 2019, A Classification of Hyper-Heuristic Approaches: Revisited, P453
   Busoniu L., 2011, Proceedings of the 2011 IEEE SSCI Symposium on Adaptive Dynamic Programming and Reinforcement Learning (ADPRL 2011), P1, DOI 10.1109/ADPRL.2011.5967353
   Crawford B, 2013, EXPERT SYST APPL, V40, P1690, DOI 10.1016/j.eswa.2012.09.013
   Din F, 2018, ADV SCI LETT, V24, P7333, DOI 10.1166/asl.2018.12938
   Din F, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY COMPANION (QRS-C), P85, DOI 10.1109/QRS-C.2017.22
   Dorigo M., 1997, IEEE Transactions on Evolutionary Computation, V1, P53, DOI 10.1109/4235.585892
   Drake JH, 2020, EUR J OPER RES, V285, P405, DOI 10.1016/j.ejor.2019.07.073
   Feldt R, 2016, IEEE INT CONF SOFTW, P223, DOI 10.1109/ICST.2016.33
   Feldt R, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST), P1, DOI 10.1109/SBST.2015.8
   Ferreira TD, 2016, IEEE C EVOL COMPUTAT, P4135, DOI 10.1109/CEC.2016.7744315
   Ferreira TN, 2017, IEEE COMPUT INTELL M, V12, P34, DOI 10.1109/MCI.2017.2670461
   Fraser G, 2018, LECT NOTES COMPUT SC, V11036, P106, DOI 10.1007/978-3-319-99241-9_5
   Fraser G, 2017, 2017 IEEE/ACM 10TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST), P39, DOI 10.1109/SBST.2017.6
   Fraser G, 2015, EMPIR SOFTW ENG, V20, P783, DOI 10.1007/s10664-013-9299-z
   Gay G, 2014, RISKS COVERAGE DIREC
   Gay G, 2018, J SOFTW TEST VERIF R, VX, P1
   Gay G, 2017, LECT NOTES COMPUT SC, V10452, P65, DOI 10.1007/978-3-319-66299-2_5
   Gay G, 2018, PROCEEDINGS 2018 IEEE/ACM 11TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST), P43, DOI 10.1145/3194718.3194719
   Gay G, 2017, IEEE INT CONF SOFTW, P345, DOI 10.1109/ICST.2017.38
   Gay G, 2015, IEEE T SOFTWARE ENG, V41, P803, DOI 10.1109/TSE.2015.2421011
   Goffi A., 2016, P 25 INT S SOFTW TES, P213, DOI DOI 10.1145/2931037.2931061
   Grechanik M, 2012, PROC INT CONF SOFTW, P156, DOI 10.1109/ICSE.2012.6227197
   Guizzo G, 2020, NAT COMPUT, V19, P481, DOI 10.1007/s11047-018-9677-y
   Guizzo G, 2017, LECT NOTES COMPUT SC, V10452, P168, DOI 10.1007/978-3-319-66299-2_15
   Guizzo G, 2015, 2015 BRAZILIAN CONFERENCE ON INTELLIGENT SYSTEMS (BRACIS 2015), P1, DOI 10.1109/BRACIS.2015.11
   Guizzo G, 2015, GECCO'15: PROCEEDINGS OF THE 2015 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1343, DOI 10.1145/2739480.2754725
   Guizzo G, 2017, APPL SOFT COMPUT, V56, P331, DOI 10.1016/j.asoc.2017.03.012
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Holland JH., 1975, Ann Arbor
   Iqbal MS, 2019, PROCEEDINGS OF THE 2019 USENIX CONFERENCE ON OPERATIONAL MACHINE LEARNING, P43
   Jakubovski HL, 2017, XXXI BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2017), P114, DOI 10.1145/3131151.3131152
   Jakubovski HL, 2018, SBES'18: PROCEEDINGS OF THE XXXII BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING, P162, DOI 10.1145/3266237.3266275
   Jakubovski HL, 2018, IEEE C EVOL COMPUTAT, P2283, DOI 10.1109/CEC.2018.8477803
   Jia Y, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P540, DOI 10.1109/ICSE.2015.71
   Jia Y, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST), P15, DOI 10.1109/SBST.2015.10
   Joffe L., 2019, DIRECTING SEARCH EXE, DOI [10.1109/ICST.2019.00029, DOI 10.1109/ICST.2019.00029]
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   KATEHAKIS MN, 1987, MATH OPER RES, V12, P262, DOI 10.1287/moor.12.2.262
   Kumari AC, 2016, J SYST SOFTWARE, V117, P384, DOI 10.1016/j.jss.2016.04.007
   Lindström B, 2016, IEEE ICST WORKSHOP, P112, DOI 10.1109/ICSTW.2016.28
   Ma LH, 2018, INFORM SOFTWARE TECH, V103, P162, DOI 10.1016/j.infsof.2018.07.001
   Malburg J., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P436, DOI 10.1109/ASE.2011.6100092
   Mariani T, 2016, GECCO'16: PROCEEDINGS OF THE 2016 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1069, DOI 10.1145/2908812.2908816
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   Moghadam MH, 2019, IEEE ICST WORKSHOP, P164, DOI 10.1109/ICSTW.2019.00046
   Navarro G, 2001, ACM COMPUT SURV, V33, P31, DOI 10.1145/375360.375365
   Neto FGD, 2018, ASIA PAC SOFWR ENG, P149, DOI 10.1109/APSEC.2018.00029
   Ochoa G, 2009, IEEE C EVOL COMPUTAT, P1873, DOI 10.1109/CEC.2009.4983169
   Orso A., 2014, P FUTURE SOFTWARE EN, P117, DOI [10.1145/2593882.2593885, DOI 10.1145/2593882.2593885]
   Papadakis M, 2013, SPRINGERPLUS, V2, DOI 10.1186/2193-1801-2-121
   Pezze M., 2006, Software Test and Analysis: Process, Principles, and Techniques
   Robillard M. P., 2000, Software Engineering Notes, V25, P2, DOI 10.1145/357474.355046
   Rojas Jose Miguel, 2015, Search-Based Software Engineering. 7th International Symposium, SSBSE 2015. Proceedings: LNCS 9275, P93, DOI 10.1007/978-3-319-22183-0_7
   Rojas JM, 2017, EMPIR SOFTW ENG, V22, P852, DOI 10.1007/s10664-015-9424-2
   Romano Daniele, 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P160, DOI 10.1109/ICST.2011.49
   Salahirad A, 2019, SOFTW TEST VERIF REL, V29, DOI 10.1002/stvr.1701
   Shahbazi A, 2015, THESIS U ALBERTA
   Shamshiri S, 2015, IEEE INT CONF AUTOM, P201, DOI 10.1109/ASE.2015.86
   Souza FCM, 2016, 2016 IEEE/ACM 9TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST), P45, DOI [10.1145/2897010.2897012, 10.1109/SBST.2016.018]
   Strickler A, 2016, APPL SOFT COMPUT, V49, P1232, DOI 10.1016/j.asoc.2016.07.059
   Sutton RS, 2018, ADAPT COMPUT MACH LE, P1
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Vogel T, 2019, LECT NOTES COMPUT SC, V11664, P58, DOI 10.1007/978-3-030-27455-9_5
   Xu DX, 2020, SACMAT'20: PROCEEDINGS OF THE 25TH ACM SYMPOSIUM ON ACCESS CONTROL MODELS AND TECHNOLOGIES, P105, DOI 10.1145/3381991.3395599
   Zamli KZ, 2017, INFORM SCIENCES, V399, P121, DOI 10.1016/j.ins.2017.03.007
   Zamli KZ, 2016, APPL SOFT COMPUT, V44, P57, DOI 10.1016/j.asoc.2016.03.021
NR 83
TC 7
Z9 7
U1 1
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2022
VL 27
IS 2
AR 38
DI 10.1007/s10664-021-10048-8
PG 62
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YE8TK
UT WOS:000741391800002
OA Green Submitted, hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Abid, S
   Shamail, S
   Basit, HA
   Nadi, S
AF Abid, Shamsa
   Shamail, Shafay
   Basit, Hamid Abdul
   Nadi, Sarah
TI FACER: An API usage-based code-example recommender for opportunistic
   reuse
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Code recommendation; Code search engine; Software features; API usage;
   Code clones
ID STRUCTURAL CONTEXT; SEARCH; AGREEMENT; EFFICIENT
AB To save time, developers often search for code examples that implement their desired software features. Existing code search techniques typically focus on finding code snippets for a single given query, which means that developers need to perform a separate search for each desired functionality. In this paper, we propose FACER (F eature-driven A PI usage-based C ode E xamples R ecommender), a technique that avoids repeated searches through opportunistic reuse. Specifically, given the selected code snippet that matches the initial search query, FACER finds and suggests related code snippets that represent features that the developer may want to implement next. FACER first constructs a code fact repository by parsing the source code of open-source Java projects to obtain methods' textual information, call graphs, and Application Programming Interface (API) usages. It then detects unique features by clustering methods based on similar API usages, where each cluster represents a feature or functionality. Finally, it detects frequently co-occurring features across projects using frequent pattern mining and recommends related methods from the mined patterns. To evaluate FACER, we run it on 120 Java Android apps from GitHub. We first manually validate that the detected method clusters represent methods with similar functionality. We then perform an automated evaluation to determine the best parameters (e.g., similarity threshold) for FACER. We recruit 10 professional developers along with 39 experienced students to judge FACER's recommendation of related methods. Our results show that, on average, FACER's recommendations are 80% precise. We also survey a total of 20 professional Android and Java developers to understand their code search and reuse experiences, and also to obtain their feedback on the usability and usefulness of FACER. The survey results show that 95% of our surveyed professional developers find the idea of related method recommendations useful during code reuse.
C1 [Abid, Shamsa; Shamail, Shafay] Lahore Univ Management Sci, Lahore, Pakistan.
   [Basit, Hamid Abdul] Prince Sultan Univ, Riyadh, Saudi Arabia.
   [Nadi, Sarah] Univ Alberta, Edmonton, AB, Canada.
C3 Lahore University of Management Sciences; Prince Sultan University;
   University of Alberta
RP Abid, S (corresponding author), Lahore Univ Management Sci, Lahore, Pakistan.
EM shamsa.abid@lums.edu.pk; sshamail@lums.edu.pk; hbasit@psu.edu.sa;
   nadi@ualberta.ca
RI Basit, Hamid/AAG-3806-2020
OI Basit, Hamid/0000-0002-1684-4262; Shamail, Shafay/0000-0003-4153-7827
FU Lahore University of Management Sciences (LUMS); Ignite National
   Technology Fund Pakistan [SRG-257]; Prince Sultan University; Canada
   Research Chairs Program
FX The authors are thankful to the Lahore University of Management Sciences
   (LUMS), Ignite National Technology Fund Pakistan (SRG-257), and Prince
   Sultan University for funding our research. The last author's research
   is funded by the Canada Research Chairs Program. The authors would also
   like to thank the professional developers and students who participated
   in the user survey and evaluation.
CR Abdalkareem R, 2017, INFORM SOFTWARE TECH, V88, P148, DOI 10.1016/j.infsof.2017.04.005
   Abid S, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P1193, DOI 10.1145/3338906.3342486
   Nguyen AT, 2012, PROC INT CONF SOFTW, P69, DOI 10.1109/ICSE.2012.6227205
   [Anonymous], 2019, HEIRARCHICAL CLUSTER
   [Anonymous], 2019, MARKET BASKET ANAL
   [Anonymous], 2019, SPARSE MATRIX CLUSTE
   [Anonymous], 2020, SCORE BOOSTING
   [Anonymous], 2010, TF IDF, P986, DOI [10.1007/978-0-387-30164-8_832, DOI 10.1007/978-0-387-30164-8_832]
   [Anonymous], 2021, FIVERR FREELANCE SER
   [Anonymous], 2020, STACK OVERFLOW QUEST
   [Anonymous], 2007, P 22 IEEE ACM INT C
   [Anonymous], 2008, Proceedings of the 4th International Workshop on End-user Software Engineering, DOI [DOI 10.1145/1370847.1370848, 10.1145/1370847.1370848]
   Apel Sven, 2013, Feature-Oriented Software Product Lines-Concepts and Implementation, DOI DOI 10.1007/978-3-642-37521-7
   Asaduzzaman M, 2016, J SOFTW-EVOL PROC, V28, P512, DOI 10.1002/smr.1791
   Bajracharya S.K., 2010, P 18 ACM SIGSOFT INT, P157, DOI 10.1145/1882291.1882316
   Baker B. S., 1993, Proceedings of the Twenty-Fifth Annual ACM Symposium on the Theory of Computing, P71, DOI 10.1145/167088.167115
   Bavota G., 2014, Recommendation Systems in Software Engineering, P387
   Bielik P, 2015, LIPICS LEIBNIZ INT P, V32
   Brandt J, 2009, CHI2009: PROCEEDINGS OF THE 27TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P1589
   Bruch M, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P213, DOI 10.1145/1595696.1595728
   Cambronero J, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P964, DOI 10.1145/3338906.3340458
   Chatterjee S, 2009, LECT NOTES COMPUT SC, V5503, P385
   Chen L, 2019, CF '19 - PROCEEDINGS OF THE 16TH ACM INTERNATIONAL CONFERENCE ON COMPUTING FRONTIERS, P174, DOI 10.1145/3310273.3321560
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   DEFAYS D, 1977, COMPUT J, V20, P364, DOI 10.1093/comjnl/20.4.364
   Dumitru H, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P181, DOI 10.1145/1985793.1985819
   Grahne G, 2005, IEEE T KNOWL DATA EN, V17, P1347, DOI 10.1109/TKDE.2005.166
   Gu XD, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P933, DOI 10.1145/3180155.3180167
   Gu XD, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P631, DOI 10.1145/2950290.2950334
   Han J, 2012, MOR KAUF D, P1
   Han J, 2012, 9 CLASSIFICATION ADV, V3rd
   Hartmann B, 2008, IEEE PERVAS COMPUT, V7, P46, DOI 10.1109/MPRV.2008.54
   Higo Y, 2017, 2017 IEEE 11 INT WOR, P1
   Hill R, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P228, DOI 10.1109/ASE.2004.1342740
   Holmes R, 2005, PROC INT CONF SOFTW, P117
   Holmes R, 2006, IEEE T SOFTWARE ENG, V32, P952, DOI 10.1109/TSE.2006.117
   Holmes Reid, 2005, P 10 EUR SOFTW ENG C, V30, P237, DOI DOI 10.1145/1095430.1081744
   Hong Yu, 2016, Advanced Data Mining and Applications. 12th International Conference, ADMA 2016. Proceedings: LNAI 10086, P361, DOI 10.1007/978-3-319-49586-6_24
   Hsu SK, 2011, EXPERT SYST APPL, V38, P7291, DOI 10.1016/j.eswa.2010.12.021
   Ichii M, 2009, 2009 ICSE WORKSHOP ON SEARCH-DRIVEN DEVELOPMENT-USERS, INFRASTRUCTURE, TOOLS AND EVALUATION, P17, DOI 10.1109/SUITE.2009.5070014
   Inoue K, 2005, IEEE T SOFTWARE ENG, V31, P213, DOI 10.1109/TSE.2005.38
   Ishihara T., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P387, DOI 10.1109/WCRE.2012.48
   Ishihara T, 2013, WORK CONF REVERSE EN, P457, DOI 10.1109/WCRE.2013.6671322
   Jaccard P., 1901, B SOCIT VAUDOISE SCI, V37, P547, DOI [10.5169/seals-266440, DOI 10.5169/SEALS-266440]
   Janson S, 2008, IEEE SOFTWARE, V25, P42, DOI 10.1109/MS.2008.155
   Jiang H, 2016, IEEE T SERV COMPUT
   Jiang H, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3344158
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kanwal J, 2019, IEEE ACCESS, V7, P58720, DOI 10.1109/ACCESS.2019.2913043
   Keivanloo I, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P664, DOI 10.1145/2568225.2568292
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Lijie Wang, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P592, DOI 10.1109/ASE.2011.6100133
   Linstead E, 2009, DATA MIN KNOWL DISC, V18, P300, DOI 10.1007/s10618-008-0118-x
   Luan S, 2018, ARXIV181201158
   Luan SF, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360578
   Lv C, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P596, DOI 10.1145/2591062.2591133
   Lv F, 2015, IEEE INT CONF AUTOM, P260, DOI 10.1109/ASE.2015.42
   Mandelin D, 2005, ACM SIGPLAN NOTICES, V40, P48, DOI 10.1145/1064978.1065018
   McCarey F, 2005, ARTIF INTELL REV, V24, P253, DOI 10.1007/s10462-005-9012-8
   McIlroy S, 2016, EMPIR SOFTW ENG, V21, P1346, DOI 10.1007/s10664-015-9388-2
   McMillan C, 2012, PROC INT CONF SOFTW, P848, DOI 10.1109/ICSE.2012.6227134
   McMillan C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P111, DOI 10.1145/1985793.1985809
   Mens Kim., 2014, Recommendation Systems in Software Engineering, P93
   Mishne A, 2012, ACM SIGPLAN NOTICES, V47, P997, DOI 10.1145/2398857.2384689
   Mojica IJ, 2014, IEEE SOFTWARE, V31, P78, DOI 10.1109/MS.2013.142
   Moreno L, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P880, DOI 10.1109/ICSE.2015.98
   Nguyen PT, 2019, PROC INT CONF SOFTW, P1050, DOI 10.1109/ICSE.2019.00109
   Niu HR, 2017, J SYST SOFTWARE, V129, P127, DOI 10.1016/j.jss.2016.07.026
   Ohtani A, 2015, INT WORKS SOFTW CLON, P26, DOI 10.1109/IWSC.2015.7069886
   Pascarella L, 2018, 2018 IEEE/ACM 5TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT), P144, DOI 10.1145/3197231.3197251
   Rahman MM, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P349, DOI 10.1109/SANER.2016.80
   Raychev V, 2014, ACM SIGPLAN NOTICES, V49, P419, DOI [10.1145/2594291.2594321, 10.1145/2666356.2594321]
   Robertson S. E., 1995, Text REtrieval Conference (TREC-3) (NIST SP 500-225), P109
   Sachdev S, 2018, MAPL'18: PROCEEDINGS OF THE 2ND ACM SIGPLAN INTERNATIONAL WORKSHOP ON MACHINE LEARNING AND PROGRAMMING LANGUAGES, P31, DOI 10.1145/3211346.3211353
   Sadowski C, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P191, DOI 10.1145/2786805.2786855
   Shimada R, 2009, PROC INT CONF SOFTW, P439, DOI 10.1109/ICSE-COMPANION.2009.5071051
   Stack Overflow developer survey, 2020, MOST LOV DREAD WANT
   Subramanian S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P643, DOI 10.1145/2568225.2568313
   Svajlenko J, 2013, INT WORKS SOFTW CLON, P16, DOI 10.1109/IWSC.2013.6613037
   Takuya Watanabe, 2011, P 3 INT WORKSH SEARC, P17, DOI [DOI 10.1145/1985429.1985434, 10.1145/1985429.1985434]
   Thung F, 2017, IEEE TETCI, V1, P145, DOI 10.1109/TETCI.2017.2699222
   Thung F, 2013, WORK CONF REVERSE EN, P182, DOI 10.1109/WCRE.2013.6671293
   Tsunoda M., 2005, 17 INT C SOFTW ENG K, P491
   Umarji M, 2008, INT FED INFO PROC, V275, P257
   Vechev M, 2016, FOUND TRENDS PROGRAM, V3, P231, DOI 10.1561/2500000028
   Venkatasubramanyam RD, 2013, INT WORKS SOFTW CLON, P30, DOI 10.1109/IWSC.2013.6613039
   Wan Y, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P13, DOI 10.1109/ASE.2019.00012
   Wang J, 2013, IEEE WORK CONF MIN S, P319, DOI 10.1109/MSR.2013.6624045
   Xia X, 2017, EMPIR SOFTW ENG, V22, P3149, DOI 10.1007/s10664-017-9514-4
   Xiangping Chen, 2019, Requirements Engineering, V24, P545, DOI 10.1007/s00766-018-0303-4
   Xie Tao, 2006, Proc. MSR, P54
   Yan SH, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P344, DOI [10.1109/SANER48275.2020.9054840, 10.1109/saner48275.2020.9054840]
   Yang PL, 2017, SIGIR'17: PROCEEDINGS OF THE 40TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P1253, DOI 10.1145/3077136.3080721
   Yao ZY, 2019, WEB CONFERENCE 2019: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2019), P2203, DOI 10.1145/3308558.3313632
   Ye YW, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P513, DOI 10.1109/ICSE.2002.1007995
   Yu Y, 2013, P 5 AS PAC S INT, P9
   Yun U, 2005, LECT NOTES ARTIF INT, V3518, P555
   Zhang JX, 2018, IEEE ACCESS, V6, P6205, DOI 10.1109/ACCESS.2017.2777845
   Zhao JT, 2017, LECT NOTES COMPUT SC, V10410, P41, DOI 10.1007/978-3-319-66808-6_4
   Zhou SF, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1202, DOI 10.1109/ASE.2019.00137
NR 100
TC 8
Z9 8
U1 0
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2021
VL 26
IS 6
AR 110
DI 10.1007/s10664-021-10000-w
PG 58
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UC6WX
UT WOS:000686665100002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Cheers, H
   Lin, YQ
   Smith, SP
AF Cheers, Hayden
   Lin, Yuqing
   Smith, Shamus P.
TI Evaluating the robustness of source code plagiarism detection tools to
   pervasive plagiarism-hiding modifications
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Source code plagiarism detection; Source code similarity; Source code
   modification; Plagiarism hiding modification
ID PROGRAM SIMILARITY; SOFTWARE
AB Source code plagiarism is a common occurrence in undergraduate computer science education. In order to identify such cases, many source code plagiarism detection tools have been proposed. A source code plagiarism detection tool evaluates pairs of assignment submissions to detect indications of plagiarism. However, a plagiarising student will commonly apply plagiarism-hiding modifications to source code in an attempt to evade detection. Subsequently, prior work has implied that currently available source code plagiarism detection tools are not robust to the application of pervasive plagiarism-hiding modifications. In this article, 11 source code plagiarism detection tools are evaluated for robustness against plagiarism-hiding modifications. The tools are evaluated with data sets of simulated undergraduate plagiarism, constructed with source code modifications representative of undergraduate students. The results of the performed evaluations indicate that currently available source code plagiarism detection tools are not robust against modifications which apply fine-grained transformations to the source code structure. Of the evaluated tools, JPlag and Plaggie demonstrates the greatest robustness to different types of plagiarism-hiding modifications. However, the results also indicate that graph-based tools, specifically those that compare programs as program dependence graphs, show potentially greater robustness to pervasive plagiarism-hiding modifications.
C1 [Cheers, Hayden; Lin, Yuqing; Smith, Shamus P.] Univ Newcastle, Sch Elect Engn & Comp, Callaghan, NSW 2308, Australia.
C3 University of Newcastle
RP Cheers, H (corresponding author), Univ Newcastle, Sch Elect Engn & Comp, Callaghan, NSW 2308, Australia.
EM hayden.cheers@newcastle.edu.au; yuqing.lin@newcastle.edu.au;
   shamus.smith@newcastle.edu.au
RI Smith, Shamus/HCI-0648-2022
OI Smith, Shamus/0000-0001-9135-1356; Cheers, Hayden/0000-0002-3004-5563
CR Ahadi A, 2019, PROCEEDINGS OF THE 21ST AUSTRALASIAN COMPUTING EDUCATION CONFERENCE (ACE 2019), P112, DOI 10.1145/3286960.3286974
   Allyson FB, 2019, IEEE T COMPUT, V68, P740, DOI 10.1109/TC.2018.2881449
   Anjali V, 2015, PROCEDIA COMPUT SCI, V46, P749, DOI 10.1016/j.procs.2015.02.143
   Anzai K, 2019, 2019 IEEE 13TH INTERNATIONAL SYMPOSIUM ON EMBEDDED MULTICORE/MANY-CORE SYSTEMS-ON-CHIP (MCSOC 2019), P180, DOI 10.1109/MCSoC.2019.00033
   Baxter ID, 1998, PROC IEEE INT CONF S, P368, DOI 10.1109/ICSM.1998.738528
   Bellon S, 2007, IEEE T SOFTWARE ENG, V33, P577, DOI 10.1109/TSE.2007.70725
   Burd E, 2002, SCAM 2002: SECOND IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS MANIPULATION, PROCEEDINGS, P36, DOI 10.1109/SCAM.2002.1134103
   Cebrián M, 2009, IEEE T EVOLUT COMPUT, V13, P477, DOI 10.1109/TEVC.2008.2008797
   Chae DK, 2013, PROCEEDINGS OF THE 22ND ACM INTERNATIONAL CONFERENCE ON INFORMATION & KNOWLEDGE MANAGEMENT (CIKM'13), P1577, DOI 10.1145/2505515.2507848
   Cheers H, 2019, INT CONF SOFTW ENG, P617, DOI [10.1109/icsess47205.2019.9040853, 10.1109/ICSESS47205.2019.9040853]
   Cheers H, 2020, PROCEEDINGS OF THE TWENTY-SECOND AUSTRALASIAN COMPUTING EDUCATION CONFERENCE, ACE'20, P21, DOI 10.1145/3373165.3373168
   Chen X, 2004, IEEE T INFORM THEORY, V50, P1545, DOI 10.1109/TIT.2004.830793
   Cosma G, 2008, IEEE T EDUC, V51, P195, DOI 10.1109/TE.2007.906776
   Cosma G, 2012, IEEE T COMPUT, V61, P379, DOI 10.1109/TC.2011.223
   Curtis GJ, 2011, INT J EDUC INTEGR, V7, P30
   FAIDHI JAW, 1987, COMPUT EDUC, V11, P11, DOI 10.1016/0360-1315(87)90042-X
   FERRANTE J, 1987, ACM T PROGR LANG SYS, V9, P319, DOI 10.1145/24039.24041
   Flores E., 2015, Proceedings of the Forum for Information Retrieval Evaluation, FIRE'14, P21
   Freire M, 2007, ARXIV CS0703136
   Gitchell D., 1999, SIGCSE Bulletin, V31, P266, DOI 10.1145/384266.299783
   Gitchell D, 1999, PROCEEDINGS OF THE THIRTIETH SIGCSE TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION, P266, DOI 10.1145/299649.299783
   Granzer W., 2013, J SYSTEMICS CYBERNET, V11, P22
   Grune D., 1989, Informatie, V31, P864
   Halstead M. H., 1977, ELEMENTS SOFTWARE SC
   Jadalla Ameera, 2008, International Journal of Business Intelligence and Data Mining, V3, P121, DOI 10.1504/IJBIDM.2008.020514
   Jhi YC, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P756, DOI 10.1145/1985793.1985899
   Jones E., 2001, J COMPUTING SCI COLL, V16, P253
   Joy M, 1999, IEEE T EDUC, V42, P129, DOI 10.1109/13.762946
   Kapser C, 2003, ELISA 03, P67
   Karnalim O, 2016, INT CONF INFORM COMM, P63, DOI 10.1109/ICTS.2016.7910274
   Ko S, 2017, PROCEEDINGS 2017 INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND ASSURANCE (ICSSA), P32, DOI 10.1109/ICSSA.2017.29
   Kolmogorov AN, 1998, THEOR COMPUT SCI, V207, P387, DOI 10.1016/S0304-3975(98)00075-9
   Kustanto C, 2009, SNPD 2009: 10TH ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, ARTIFICIAL INTELLIGENCES, NETWORKING AND PARALLEL DISTRIBUTED COMPUTING, PROCEEDINGS, P481, DOI 10.1109/SNPD.2009.62
   Lancaster T, 2005, DOES AUTOMATED ANTIP
   Liu Chao, 2006, Proc. 12th ACMSIGKDD Int'l Con. on Knowledge Discovery and Data Mining (KDD 06), P872, DOI DOI 10.1145/1150402.1150522
   Luo LN, 2017, IEEE T SOFTWARE ENG, V43, P1157, DOI 10.1109/TSE.2017.2655046
   Martins V.T., 2014, P 3 S LANG APPL TECH, VVolume 38, P143, DOI [DOI 10.4230/OASICS.SLATE.2014.143, 10.4230/OASIcs.SLATE.2014.143]
   Mozgovoy M, 2006, INFORM EDUC, V5, P97
   Novak M, 2019, ACM T COMPUT EDUC, V19, DOI 10.1145/3313290
   Novak M, 2016, 2016 39TH INTERNATIONAL CONVENTION ON INFORMATION AND COMMUNICATION TECHNOLOGY, ELECTRONICS AND MICROELECTRONICS (MIPRO), P796, DOI 10.1109/MIPRO.2016.7522248
   Ottenstein K. J., 1976, ACM SIGCSE Bulletin, V8, P30, DOI [DOI 10.1145/382222.382462, 10.1145/382222.382462]
   PARKER A, 1989, IEEE T EDUC, V32, P94, DOI 10.1109/13.28038
   Pawlik M, 2016, INFORM SYST, V56, P157, DOI 10.1016/j.is.2015.08.004
   Pawlik M, 2015, ACM T DATABASE SYST, V40, DOI 10.1145/2699485
   Pierce J, 2017, PROCEEDINGS OF THE 2017 ACM SIGCSE TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION (SIGCSE'17), P471, DOI 10.1145/3017680.3017797
   Pike R., SHERLOCK PLAGIARISM
   Prechelt L, 2002, J UNIVERS COMPUT SCI, V8, P1016
   Ragkhitwetsagul C, 2018, EMPIR SOFTW ENG, V23, P2464, DOI 10.1007/s10664-017-9564-7
   Rahikainen M., 2006, P 6 BALT SEA C COMP, P141, DOI DOI 10.1145/1315803.1315831
   Rani S., 2018, COMPUTING ANALYTICS, P72
   Rong Chen, 2010, IEEE 34th Annual Computer Software and Applications Conference Workshops (COMPSACW 2010), P281, DOI 10.1109/COMPSACW.2010.56
   Roy C, 2007, SCH COMPUTING T, P2007
   Roy CK, 2009, SCI COMPUT PROGRAM, V74, P470, DOI 10.1016/j.scico.2009.02.007
   Schleimer Saul, 2003, P 2003 ACM SIGMOD IN, P76, DOI [10.1145/872757.872770, DOI 10.1145/872757.872770]
   Schulze S, 2013, INT WORKS SOFTW CLON, P62, DOI 10.1109/IWSC.2013.6613045
   Shan SQ, 2014, APPL MECH MATER, V667, P32, DOI 10.4028/www.scientific.net/AMM.667.32
   Sheard J., 2003, Higher Education Research Development, V22, P91, DOI DOI 10.1080/0729436032000056526
   Sraka D, 2009, ITI, P461, DOI 10.1109/ITI.2009.5196127
   Svajlenko J, 2015, PROC IEEE INT CONF S, P131, DOI 10.1109/ICSM.2015.7332459
   Svajlenko J, 2013, IEEE INT WORK C SO, P37, DOI 10.1109/SCAM.2013.6648182
   Verco KL, 1996, COMPUT J, V39, P741, DOI 10.1093/comjnl/39.9.741
   Walker A, 2019, APPL COMPUT REV, V19, P28, DOI [10.1145/3338840.3355654, 10.1145/3381307.3381310]
   WHALE G, 1990, COMPUT J, V33, P140, DOI 10.1093/comjnl/33.2.140
   WHALE G, 1990, J SYST SOFTWARE, V13, P131, DOI 10.1016/0164-1212(90)90118-6
   Wise M. J., 1996, SIGCSE Bulletin, V28, P130, DOI 10.1145/236462.236525
   Xiao Li, 2010, Proceedings 2010 International Symposium on Intelligence Information Processing and Trusted Computing (IPTC 2010), P406, DOI 10.1109/IPTC.2010.90
   Yeo S., 2007, High Educ.Res. Dev, V26, P199, DOI [DOI 10.1080/072943607013, 10.1080/07294360701310813, DOI 10.1080/07294360701310813, 10 .1080/07294360701310813]
   Zhang FF, 2014, PROC INT SYMP SOFTW, P66, DOI 10.1109/ISSRE.2014.18
   Zhao JL, 2015, 2015 10TH INTERNATIONAL CONFERENCE ON BROADBAND AND WIRELESS COMPUTING, COMMUNICATION AND APPLICATIONS (BWCCA 2015), P178, DOI 10.1109/BWCCA.2015.52
NR 69
TC 4
Z9 4
U1 5
U2 27
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2021
VL 26
IS 5
AR 83
DI 10.1007/s10664-021-09990-4
PG 62
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SU7QU
UT WOS:000663327900001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Sleimi, A
   Sannier, N
   Sabetzadeh, M
   Briand, L
   Ceci, M
   Dann, J
AF Sleimi, Amin
   Sannier, Nicolas
   Sabetzadeh, Mehrdad
   Briand, Lionel
   Ceci, Marcello
   Dann, John
TI An automated framework for the extraction of semantic legal metadata
   from legal texts
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Legal requirements; Semantic legal metadata; Natural language processing
   (NLP)
ID INFORMATION; KNOWLEDGE; RELEVANT; SECURITY; PRIVACY
AB Semantic legal metadata provides information that helps with understanding and interpreting legal provisions. Such metadata is therefore important for the systematic analysis of legal requirements. However, manually enhancing a large legal corpus with semantic metadata is prohibitively expensive. Our work is motivated by two observations: (1) the existing requirements engineering (RE) literature does not provide a harmonized view on the semantic metadata types that are useful for legal requirements analysis; (2) automated support for the extraction of semantic legal metadata is scarce, and it does not exploit the full potential of artificial intelligence technologies, notably natural language processing (NLP) and machine learning (ML). Our objective is to take steps toward overcoming these limitations. To do so, we review and reconcile the semantic legal metadata types proposed in the RE literature. Subsequently, we devise an automated extraction approach for the identified metadata types using NLP and ML. We evaluate our approach through two case studies over the Luxembourgish legislation. Our results indicate a high accuracy in the generation of metadata annotations. In particular, in the two case studies, we were able to obtain precision scores of 97,2% and 82,4%, and recall scores of 94,9% and 92,4%.
C1 [Sleimi, Amin; Sannier, Nicolas; Sabetzadeh, Mehrdad; Briand, Lionel; Ceci, Marcello] Univ Luxembourg, SnT, Luxembourg, Luxembourg.
   [Sabetzadeh, Mehrdad; Briand, Lionel] Univ Ottawa, Sch EECS, Ottawa, ON, Canada.
   [Dann, John] Govt Luxembourg, Cent Legislat Serv SCL, Luxembourg, Luxembourg.
C3 University of Luxembourg; University of Ottawa
RP Sleimi, A (corresponding author), Univ Luxembourg, SnT, Luxembourg, Luxembourg.
EM amin.sleimi@uni.lu; nicolas.sannier@uni.lu; M.Sabetzadeh@uottawa.ca;
   lionel.briand@uni.lu; marcello.ceci@uni.lu; john.dann@scl.etat.lu
OI Ceci, Marcello/0000-0003-3800-0906; SLEIMI, Amin/0000-0002-9534-8805
FU Luxembourg National Research Fund (FNR) [PUBLIC2-17/IS/11801776,
   PoC16/11554296]; NSERC of Canada under the Discovery, Discovery
   Accelerator program; NSERC of Canada under CRC program
FX Supported by the Luxembourg National Research Fund (FNR) under grants
   PUBLIC2-17/IS/11801776 and PoC16/11554296, and by NSERC of Canada under
   the Discovery, Discovery Accelerator and CRC programs.
CR [Anonymous], 2010, About WordNet
   Arora C, 2015, IEEE T SOFTWARE ENG, V41, P944, DOI 10.1109/TSE.2015.2428709
   Athan T., 2013, 14 INT C ART INT LAW, V13, P3
   Bhatia J, 2016, 2016 IEEE 24TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW), P19, DOI [10.1109/REW.2016.018, 10.1109/REW.2016.22]
   Bhatia J, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2907942
   Boella G, 2016, ARTIF INTELL LAW, V24, P245, DOI 10.1007/s10506-016-9184-3
   BOER A, 2007, FRONT ARTIF INTEL AP, P19
   BREAUX TD, 2009, THESIS N CAROLINA ST
   Breaux TD, 2008, IEEE T SOFTWARE ENG, V34, P5, DOI 10.1109/TSE.2007.70746
   Breaux TD, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P49
   Breuker J, 2006, FRONT ARTIF INTEL AP, V152, P169
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Elrakaiby Y, 2017, INT REQUIR ENG CONF, P51, DOI 10.1109/RE.2017.27
   Evans MC, 2017, INT REQUIR ENG CONF, P312, DOI 10.1109/RE.2017.87
   Ghanavati, 2013, THESIS U OTTAWA OTTA
   Ghanavati S., 2014, Proceedings of the 6th International Workshop on Modeling in Software Engineering, P1, DOI [10.1145/2593770.2593780, DOI 10.1145/2593770.2593780]
   Gildea D, 2000, 38TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P512
   Gordon D. G., 2012, 2012 IEEE 20th International Requirements Engineering Conference (RE 2012), P91, DOI 10.1109/RE.2012.6345843
   Grossi D., 2008, Journal of Applied Logic, V6, P192, DOI [DOI 10.1016/J.JAL.2007.06.008, 10.1016/j.jal.2007.06, DOI 10.1016/J.JAL.2007.06]
   Hirschberg J, 2015, SCIENCE, V349, P261, DOI 10.1126/science.aaa8685
   Hoekstra R., 2007, P WORKSH LEG ONT ART, V07, P43
   Hohfeld WN, 1917, YALE LAW J, V26, P710, DOI 10.2307/786270
   Horty JF., 2001, Agency and deontic logic, DOI DOI 10.1093/0195134613.001.0001
   Ingolfo S, 2014, LECT NOTES COMPUT SC, V8824, P275, DOI 10.1007/978-3-319-12206-9_22
   James G, 2013, SPRINGER TEXTS STAT, V103, P1, DOI [10.1007/978-1-4614-7138-7, 10.1007/978-1-4614-7138-7_1]
   Jurafsky D., 2000, Speech and language processing: An introduction to natural language processing, computational linguistics, and speech recognition
   KIYAVITSKAYA N, 2006, LECT NOTES ARTIF INT, P143
   Kiyavitskaya N, 2008, LECT NOTES COMPUT SC, V5231, P154, DOI 10.1007/978-3-540-87877-3_13
   Kummerfeld Jonathan K., 2012, P 2012 JOINT C EMP M, P1048
   Lam HP, 2016, LECT NOTES COMPUT SC, V9718, P241, DOI 10.1007/978-3-319-42019-6_16
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Levy R., 2006, P LREC GEN IT, P2231
   Lucassen G, 2017, REQUIR ENG, V22, P339, DOI 10.1007/s00766-017-0270-1
   Massey A, 2012, THESIS N CAROLINA ST
   Massey AK, 2010, REQUIR ENG, V15, P119, DOI 10.1007/s00766-009-0089-5
   Maxwell JC, 2012, REQUIR ENG, V17, P99, DOI 10.1007/s00766-012-0152-5
   Maxwell JeremyC., 2010, Proceedings of the 1st ACM International Health Informatics Symposium, IHI '10, P629
   McDonald R., 2007, P 2007 JOINT C EMPIR, P122
   Nivre J., 2007, Natural Language Engineering, V13, P95, DOI 10.1017/S1351324906004505
   Peters W, 2007, ARTIF INTELL LAW, V15, P117, DOI 10.1007/s10506-007-9034-4
   Petrov S, 2006, COLING/ACL 2006, VOLS 1 AND 2, PROCEEDINGS OF THE CONFERENCE, P433
   Pradet Q, 2014, LREC 2014 - NINTH INTERNATIONAL CONFERENCE ON LANGUAGE RESOURCES AND EVALUATION, P1122
   Quirchmayr T, 2018, EMPIR SOFTW ENG, V23, P3630, DOI 10.1007/s10664-018-9597-6
   Rosadini B, 2017, LECT NOTES COMPUT SC, V10153, P344, DOI 10.1007/978-3-319-54045-0_24
   RuleML, 2015, SPEC RULEML 1 02
   Sagot, 2010, P INT C LANG RES EV, P2745
   Saldana J., 2016, CODING MANUAL QUALIT, DOI DOI 10.1017/CBO9781107415324.004
   Sannier N, 2017, REQUIR ENG, V22, P215, DOI 10.1007/s00766-015-0241-3
   Sannier N, 2016, LECT NOTES COMPUT SC, V9619, P119, DOI 10.1007/978-3-319-30282-9_8
   Sartor G., 2013, APPROACHES LEGAL ONT
   Siena Alberto, 2012, Conceptual Modeling. Proceedings 31st International Conference, ER 2012, P383, DOI 10.1007/978-3-642-34002-4_30
   Siena A, 2009, LECT NOTES COMPUT SC, V5829, P472, DOI 10.1007/978-3-642-04840-1_35
   Sleimi, 2019, P 27 IEEE INT REQ EN
   Sleimi A, 2018, INT REQUIR ENG CONF, P124, DOI 10.1109/RE.2018.00022
   Thornton C, 2013, 19TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'13), P847, DOI 10.1145/2487575.2487629
   Venturi G, 2012, P SPLET 12, P42
   Wiki, 2004, WIKT
   Witten IH, 2011, MOR KAUF D, P1
   Zeni N, 2016, LECT NOTES COMPUT SC, V9974, P233, DOI 10.1007/978-3-319-46397-1_18
   Zeni N, 2015, REQUIR ENG, V20, P1, DOI 10.1007/s00766-013-0181-8
   2005, 13 IEEE INT C REQUIR, P167
NR 61
TC 7
Z9 7
U1 2
U2 31
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAY
PY 2021
VL 26
IS 3
AR 43
DI 10.1007/s10664-020-09933-5
PG 50
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RB8WB
UT WOS:000632385400001
DA 2024-07-18
ER

PT J
AU Ye, H
   Martinez, M
   Monperrus, M
AF Ye, He
   Martinez, Matias
   Monperrus, Martin
TI Automated patch assessment for program repair at scale
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Automatic program repair; Automatic patch assessment
AB In this paper, we do automatic correctness assessment for patches generated by program repair systems. We consider the human-written patch as ground truth oracle and randomly generate tests based on it, a technique proposed by Shamshiri et al., called Random testing with Ground Truth (RGT) in this paper. We build a curated dataset of 638 patches for Defects4J generated by 14 state-of-the-art repair systems, we evaluate automated patch assessment on this dataset. The results of this study are novel and significant: First, we improve the state of the art performance of automatic patch assessment with RGT by 190% by improving the oracle; Second, we show that RGT is reliable enough to help scientists to do overfitting analysis when they evaluate program repair systems; Third, we improve the external validity of the program repair knowledge with the largest study ever.
C1 [Ye, He; Monperrus, Martin] KTH Royal Inst Technol, Stockholm, Sweden.
   [Martinez, Matias] Univ Valenciennes, Valenciennes, France.
C3 Royal Institute of Technology; Universite Polytechnique Hauts-de-France
RP Ye, H (corresponding author), KTH Royal Inst Technol, Stockholm, Sweden.
EM heye@kth.se; matias.martinez@univ-valenciennes.fr;
   martin.monperrus@kth.csc.se
RI Monperrus, Martin/I-3640-2012; Ye, He/GNP-2906-2022; Martinez,
   Matias/ABA-8871-2021
OI Monperrus, Martin/0000-0003-3505-3383; Martinez,
   Matias/0000-0002-2945-866X
FU Royal Institute of Technology
FX Open Access funding provided by Royal Institute of Technology
CR [Anonymous], 2018, ISSTA
   [Anonymous], 2011, Proceedings of the 19th ACM SIGSOFT symposium and the 13th European conference on Foundations of software engineering (FSE'11), DOI [10.1145/2025113.2025121, DOI 10.1145/2025113.2025121]
   [Anonymous], 2018, EMPIRICAL SOFTWARE E
   Arcuri A., 2011, P 33 INT C SOFTW ENG
   Baresi L., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P281, DOI 10.1145/1810295.1810353
   Barr ET, 2015, IEEE T SOFTWARE ENG, V41, P507, DOI 10.1109/TSE.2014.2372785
   Benton S, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P47, DOI 10.1109/ICSE-Companion.2019.00035
   Binkley D, 1995, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, 1995 PROCEEDINGS, P251, DOI 10.1109/ICSM.1995.526547
   Braione P, 2018, PROC IEEE ACM INT C, P21, DOI 10.1145/3183440.3183472
   Chen L, 2017, 2017 32 IEEE ACM INT
   Chen ZM, 2021, IEEE T SOFTWARE ENG, V47, P1943, DOI 10.1109/TSE.2019.2940179
   Cheng H, 2020, 2020 IEEE 2 INT WORK
   D'Antoni L, 2016, LECT NOTES COMPUT SC, V9780, P383, DOI 10.1007/978-3-319-41540-6_21
   Durieux T, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P302, DOI 10.1145/3338906.3338911
   Ernst MD, 2001, IEEE T SOFTWARE ENG, V27, P99, DOI 10.1109/32.908957
   Ernst MD, 2007, SCI COMPUT PROGRAM, V69, P35, DOI 10.1016/j.scico.2007.01.015
   Experiment, EXP REP IS AV GIT
   Fraser G, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P362, DOI 10.1109/ICST.2013.51
   Fraser Gordon, 2011, PROC 19 ACM SIGSOFT, P416, DOI 10.1145/2025113.2025179
   Gao X, 2019, P 28 ACM SIGSOFT INT
   Gazzola L, 2019, IEEE T SOFTWARE ENG, V45, P34, DOI 10.1109/TSE.2017.2755013
   Ghanbari A, ARXIV191200117
   Goues CL., 2018, P 40 INT C SOFTW ENG
   Gu Z, 2010, P 32 ACM IEEE INT C, V1
   Harrold M, 2000, Software Testing, Verification and Reliability
   Harrold M J., 2004, SIGSOFT 04 FSE 12
   Hsu HY, 2009, PROC INT CONF SOFTW, P419, DOI 10.1109/ICSE.2009.5070541
   Hua JR, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P12, DOI 10.1145/3180155.3180245
   Jeffrey D, 2005, PROC IEEE INT CONF S, P549
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Kifetew F, 2019, P 12 INT WORKSH SEAR
   Lau MF, 2005, ACM T SOFTW ENG METH, V14, P247, DOI 10.1145/1072997.1072998
   Le XBD, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P593, DOI 10.1145/3106237.3106309
   Le XBD, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P213, DOI 10.1109/SANER.2016.76
   Li S., 2019, P 41 ACM IEEE INT C
   Liu XL, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P118, DOI 10.1109/SANER.2018.8330202
   Long F, 2016, PROC INT CONF SOFTW, P702, DOI 10.1145/2884781.2884872
   Madeiral F, 2019, P 26 IEEE INT C SOFT
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Marinescu P D, 2013, EUR SOFTW ENG C ACM, P8
   Marinescu PD, 2012, PROC INT CONF SOFTW, P716, DOI 10.1109/ICSE.2012.6227146
   Martinez M, 2018, LECT NOTES COMPUT SC, V11036, P65, DOI 10.1007/978-3-319-99241-9_3
   MILLER BP, 1990, COMMUN ACM, V33, P32, DOI 10.1145/96267.96279
   Monperrus M, 2016, AUTOMATIC REPAIR REA
   Monperrus M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3105906
   Pacheco C., 2007, OOPSLA 2007 COMPANIO, P815
   Person S, 2008, P 16 ACM SIGSOFT INT
   Prasetya I S W B., 2015, P 2015 10 JOINT M FD
   Qi Z, 2015, P 2015 INT S SOFTW S
   Reps T, 1999, SOFTW ENG NOTES, V22, P432
   Saha RK, 2017, IEEE INT CONF AUTOM, P648, DOI 10.1109/ASE.2017.8115675
   Shamshiri S, 2015, IEEE INT CONF AUTOM, P201, DOI 10.1109/ASE.2015.86
   Sherriff M, 2007, ISSRE 2007: 18TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P81, DOI 10.1109/ISSRE.2007.25
   Shriver D, 2017, 2017 IEEE ACM 39 INT
   Smith E K, 2015, P 2015 10 JOINT M FD
   Tan SH, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P727, DOI 10.1145/2950290.2950295
   Tonella P., 2004, SIGSOFT SOFTW ENG NO
   Wang S, 2019, INT S EMP SOFTW ENG
   Wen M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/3180155.3180233
   White M, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P479, DOI [10.1109/saner.2019.8668043, 10.1109/SANER.2019.8668043]
   Wloka J, 2011, P 10 ACM SIGPLAN SIG
   Xie T, 2004, PROC IEEE INT CONF S, P28
   Xie T, 2006, ECOOP 2006 OBJECT OR
   Xie T, 2016, IEEE T SOFTW ENG, V42
   Xin Q, 2017, IEEE INT CONF AUTOM, P660, DOI 10.1109/ASE.2017.8115676
   Xin Qi, 2017, P 26 ACM SIGSOFT INT
   Xiong YF, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P789, DOI 10.1145/3180155.3180182
   Xiong YF, 2017, PROC INT CONF SOFTW, P416, DOI 10.1109/ICSE.2017.45
   Xu GQ, 2007, PROC INT CONF SOFTW, P65
   Yang JQ, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P831, DOI 10.1145/3106237.3106274
   Ye H, 2019, 2019 IEEE 1ST INTERNATIONAL WORKSHOP ON INTELLIGENT BUG FIXING (IBF '19), P1, DOI [10.1109/ibf.2019.8665475, 10.1109/icnsurv.2019.8735415, 10.1109/IBF.2019.8665475]
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Yoo S., 2007, Proceedings of the 2007 international symposium on Software testing and analysis, P140, DOI 10.1145/1273463.1273483
   Yuan Y, 2020, IEEE T SOFTWARE ENG, V46, P1040, DOI 10.1109/TSE.2018.2874648
   Zeller A, 2002, IEEE T SOFTWARE ENG, V28, P183, DOI 10.1109/32.988498
   Zhang LM, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P199, DOI 10.1145/3180155.3180198
NR 76
TC 34
Z9 34
U1 0
U2 12
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2021
VL 26
IS 2
AR 20
DI 10.1007/s10664-020-09920-w
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QL2VJ
UT WOS:000620938900001
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Temple, P
   Perrouin, G
   Acher, M
   Biggio, B
   Jézéquel, JM
   Roli, F
AF Temple, Paul
   Perrouin, Gilles
   Acher, Mathieu
   Biggio, Battista
   Jezequel, Jean-Marc
   Roli, Fabio
TI Empirical assessment of generating adversarial configurations for
   software product lines
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software product line; Configurable system; Software variability;
   Software testing; Machine learning; Quality assurance
ID VARIABILITY; CONSTRAINTS; SYSTEMS
AB Software product line (SPL) engineering allows the derivation of products tailored to stakeholders' needs through the setting of a large number of configuration options. Unfortunately, options and their interactions create a huge configuration space which is either intractable or too costly to explore exhaustively. Instead of covering all products, machine learning (ML) approximates the set of acceptable products (e.g., successful builds, passing tests) out of a training set (a sample of configurations). However, ML techniques can make prediction errors yielding non-acceptable products wasting time, energy and other resources. We apply adversarial machine learning techniques to the world of SPLs and craft new configurations faking to be acceptable configurations but that are not and vice-versa. It allows to diagnose prediction errors and take appropriate actions. We develop two adversarial configuration generators on top of state-of-the-art attack algorithms and capable of synthesizing configurations that are both adversarial and conform to logical constraints. We empirically assess our generators within two case studies: an industrial video synthesizer (MOTIV) and an industry-strength, open-source Web-app configurator (JHipster). For the two cases, our attacks yield (up to) a 100% misclassification rate without sacrificing the logical validity of adversarial configurations. This work lays the foundations of a quality assurance framework for ML-based SPLs.
C1 [Temple, Paul; Perrouin, Gilles] Univ Namur, Fac Comp Sci, PReCISE, NaDI, Namur, Belgium.
   [Acher, Mathieu; Jezequel, Jean-Marc] Univ Rennes, IRISA, INRIA, CNRS, Rennes, France.
   [Biggio, Battista; Roli, Fabio] Univ Cagliari, Cagliari, Italy.
C3 University of Namur; Centre National de la Recherche Scientifique
   (CNRS); Inria; Universite de Rennes; University of Cagliari
RP Temple, P (corresponding author), Univ Namur, Fac Comp Sci, PReCISE, NaDI, Namur, Belgium.
EM paul.temple@unamur.be; gilles.perrouin@unamur.be;
   mathieu.acher@irisa.fr; battista.biggio@unica.it; jezequel@irisa.fr;
   fabio.roli@unica.it
RI Jezequel, Jean-Marc/AAF-3854-2019; Biggio, Battista/HCI-4766-2022;
   Perrouin, Gilles/I-1621-2019
OI Jezequel, Jean-Marc/0000-0002-0582-9745; Biggio,
   Battista/0000-0001-7752-509X; Perrouin, Gilles/0000-0002-8431-0377;
   ROLI, FABIO/0000-0003-4103-9190; Temple, Paul/0000-0002-8276-0593
FU EOS Verilearn project [O05518F-RG03]; VaryVary project
   [ANR-17-CE25-0010-01]
FX Gilles Perrouin is an FNRS Research Associate. This research was partly
   supported by EOS Verilearn project grant no. O05518F-RG03. This research
   was also funded by the ANR-17-CE25-0010-01 VaryVary project.
CR ACHER M., 2012, P 6 INT WORKSH VAR M, P45, DOI DOI 10.1145/2110147.2110153
   Acher M, 2017, ACM INT CONF PR SER, P83, DOI 10.1145/3168365.3168372
   Al-Hajjaji M, 2016, TENTH INTERNATIONAL WORKSHOP ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS (VAMOS 2016), P81, DOI 10.1145/2866614.2866626
   Alférez M, 2019, SOFTWARE QUAL J, V27, P307, DOI 10.1007/s11219-017-9400-8
   Amand B, 2019, PROCEEDINGS OF THE 13TH INTERNATIONAL WORKSHOP ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS (VAMOS '19), DOI 10.1145/3302333.3302338
   [Anonymous], ASE 15
   [Anonymous], ISSTA 14
   [Anonymous], 2006, Programming in lua
   [Anonymous], 4 INT WORKSH VAR MOD
   Barreno M., 2006, P 2006 ACM S INF COM, P16
   Batory D, 2005, LECT NOTES COMPUT SC, V3714, P7
   BECAN G, 2015, SPLC 15
   BELLMAN R, 1966, SCIENCE, V153, P34, DOI 10.1126/science.153.3731.34
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Berger Thorsten, 2013, 7 INT WORKSH VAR MOD, DOI DOI 10.1145/2430502.2430513
   Biggio B., 2012, ARXIV12066389, P1467
   Biggio B., 2013, MACHINE LEARNING KNO, P387, DOI [10.1007/978-3-642-40994-3_25, DOI 10.1007/978-3-642-40994-3_25]
   Biggio B, 2013, INT CONF BIOMETR
   Biggio B, 2018, PATTERN RECOGN, V84, P317, DOI 10.1016/j.patcog.2018.07.023
   Biggio B, 2014, INT J PATTERN RECOGN, V28, DOI 10.1142/S0218001414600027
   Biggio B, 2014, IEEE T KNOWL DATA EN, V26, P984, DOI 10.1109/TKDE.2013.57
   Bodden E, 2013, ACM SIGPLAN NOTICES, V48, P355, DOI 10.1145/2499370.2491976
   Brown, 2017, ADVERSARIAL PATCH
   Carvalho L, 2017, ACM INT CONF PR SER, P11, DOI 10.1145/3168365.3168379
   Chakraborty Supratik, 2015, Tools and Algorithms for the Construction and Analysis of Systems. 21st International Conference, TACAS 2015, held as part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2015. Proceedings: LNCS 9035, P304, DOI 10.1007/978-3-662-46681-0_25
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Classen A, 2011, SCI COMPUT PROGRAM, V76, P1130, DOI 10.1016/j.scico.2010.10.005
   Cohen MB, 2008, IEEE T SOFTWARE ENG, V34, P633, DOI 10.1109/TSE.2008.50
   DAVRIL JM, 2015, 17 INT CONF WORKSH V
   DEMONTIS A, 2018, ARXIV180902861 CORR
   Demontis A, 2019, PROCEEDINGS OF THE 28TH USENIX SECURITY SYMPOSIUM, P321
   Dhillon GS, 2018, ARXIV PREPRINT ARXIV
   DOSSELMAN RW, 2012, TECH REP
   Elsayed GF, 2018, ADV NEUR IN, V31
   Evtimov I., 2017, Robust physical-world attacks on machine learning models. arXiv
   Galindo J.A., 2014, P 2014 INT S SOFTWAR, P293, DOI [10.1145/2610384.2610411, DOI 10.1145/2610384.2610411]
   Gargantini A, 2017, IEEE ICST WORKSHOP, P239, DOI 10.1109/ICSTW.2017.44
   Goodfellow I, 2020, COMMUN ACM, V63, P139, DOI 10.1145/3422622
   Guo Chuan, 2017, INT C LEARN REPR
   GUO J, 2013, ASE, V55, P491
   HALIN A, 2018, EMPIR SOFTW ENG EMPI
   Halin A, 2019, EMPIR SOFTW ENG, V24, P674, DOI 10.1007/s10664-018-9635-4
   JOHANSEN MF, 2012, ALGORITHM GENERATING
   Kaltenecker C, 2019, PROC INT CONF SOFTW, P1084, DOI 10.1109/ICSE.2019.00112
   KAner C., 2001, LESSONS LEARNED SOFT
   Kang K, 1990, TECH REP
   Knüppel A, 2018, ELECTRON P THEOR COM, P53, DOI 10.4204/EPTCS.284.5
   Krismayer T, 2017, IEEE INT CONF AUTOM, P826, DOI 10.1109/ASE.2017.8115693
   Kurakin A., 2016, WORKSHOP TRACK P
   Legarra A., 2017, Proceedings of the 22nd conference association for the advancement of animal breeding and genetics. p, P2, DOI DOI 10.1145/3023956.3023970
   Lopez-Herrejon Roberto Erick, 2012, Search Based Software Engineering. Proceedings of the 4th International Symposium (SSBSE 2012), P168, DOI 10.1007/978-3-642-33119-0_13
   Duc LH, 2015, STOCH DYNAM, V15, DOI 10.1142/S0219493715500185
   Madry A., 2018, ARXIV
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Medeiros F, 2016, PROC INT CONF SOFTW, P643, DOI 10.1145/2884781.2884793
   Nadi S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P140, DOI 10.1145/2568225.2568283
   Nelson B., 2008, P 1 US WORKSH LARG S, P1
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Oh J, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P61, DOI 10.1145/3106237.3106273
   Papernot N, 2016, 1ST IEEE EUROPEAN SYMPOSIUM ON SECURITY AND PRIVACY, P372, DOI 10.1109/EuroSP.2016.36
   Pascual GG, 2015, J SYST SOFTWARE, V103, P392, DOI 10.1016/j.jss.2014.12.041
   Pei KX, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P1, DOI 10.1145/3132747.3132785
   Pereira J. A., 2019, Learning software configuration spaces: A systematic literature review
   PEREIRA JA, 2020, 11 INT C PERF ENG IC
   Plazar Q, 2019, IEEE INT CONF SOFTW, P240, DOI 10.1109/ICST.2019.00032
   Pohl K., 2005, Software Product Line Engineering: Foundations, Principles and Techniques, V1, DOI [10.1007/3-540-28901-1, DOI 10.1007/3-540-28901-1]
   Pournelle G. H., 1953, Journal of Mammalogy, V34, P133, DOI 10.1890/0012-9658(2002)083[1421:SDEOLC]2.0.CO;2
   Raible M., 2015, JHIPSTER MINI BOOK
   Schobbens PY, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P139
   Schobbens PY, 2007, COMPUT NETW, V51, P456, DOI 10.1016/j.comnet.2006.08.008
   Sharif M, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1528, DOI 10.1145/2976749.2978392
   SHE S, 2014, INF SOFTW TECHNOL, V56, P106
   She S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P461, DOI 10.1145/1985793.1985856
   Siegmund N, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P268, DOI 10.1145/3106237.3106251
   Siegmund N, 2013, INFORM SOFTWARE TECH, V55, P491, DOI 10.1016/j.infsof.2012.07.020
   Strüber D, 2018, FORM ASP COMPUT, V30, P133, DOI 10.1007/s00165-017-0441-3
   Temple P, 2020, SPLC'19: PROCEEDINGS OF THE 23RD INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL A, P277, DOI 10.1145/3336294.3336309
   Temple P, 2017, IEEE SOFTWARE, V34, P64, DOI 10.1109/MS.2017.4121211
   Temple Paul, 2016, P 20 INT SYST SOFTW, P209
   ter Beek MH, 2019, PROCEEDINGS OF THE 13TH INTERNATIONAL WORKSHOP ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS (VAMOS '19), DOI 10.1145/3302333.3302349
   ter Beek MH, 2016, LECT NOTES COMPUT SC, V9953, P465, DOI 10.1007/978-3-319-47169-3_38
   ter Beek MH, 2016, J LOG ALGEBR METHODS, V85, P287, DOI 10.1016/j.jlamp.2015.11.006
   Thüm T, 2014, ACM COMPUT SURV, V47, DOI 10.1145/2580950
   Tian YC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P303, DOI 10.1145/3180155.3180220
   Varshosaz M, 2018, SPLC'18: PROCEEDINGS OF THE 22ND INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL 1, P1, DOI 10.1145/3233027.3233035
   XIONG Y, 2012, 34 INT C SOFTW ENG
   Yilmaz C, 2006, IEEE T SOFTWARE ENG, V32, P20, DOI 10.1109/TSE.2006.8
   Zhang MS, 2018, IEEE INT CONF AUTOM, P132, DOI 10.1145/3238147.3238187
NR 88
TC 3
Z9 4
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN 12
PY 2021
VL 26
IS 1
AR 6
DI 10.1007/s10664-020-09915-7
PG 49
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA PV7VA
UT WOS:000610190100002
DA 2024-07-18
ER

PT J
AU Falessi, D
   Huang, J
   Narayana, L
   Thai, JF
   Turhan, B
AF Falessi, Davide
   Huang, Jacky
   Narayana, Likhita
   Thai, Jennifer Fong
   Turhan, Burak
TI On the need of preserving order of data when validating within-project
   defect classifiers
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Defect classifiers; Classifiers; Model validation techniques
ID SOFTWARE; CLASSIFICATION; PREDICTION
AB We are in the shoes of a practitioner who uses previous project releases' data to predict which classes of the current release are defect-prone. In this scenario, the practitioner would like to use the most accurate classifier among the many available ones. A validation technique, hereinafter "technique", defines how to measure the prediction accuracy of a classifier. Several previous research efforts analyzed several techniques. However, no previous study compared validation techniques in the within-project across-release class-level context or considered techniques that preserve the order of data. In this paper, we investigate which technique recommends the most accurate classifier. We use the last release of a project as the ground truth to evaluate the classifier's accuracy and hence the ability of a technique to recommend an accurate classifier. We consider nine classifiers, two industry and 13 open projects, and three validation techniques: namely 10-fold cross-validation (i.e., the most used technique), bootstrap (i.e., the recommended technique), and walk-forward (i.e., a technique preserving the order of data). Our results show that: 1) classifiers differ in accuracy in all datasets regardless of their entity per value, 2) walk-forward outperforms both 10-fold cross-validation and bootstrap statistically in all three accuracy metrics: AUC of the selected classifier, bias and absolute bias, 3) surprisingly, all techniques resulted to be more prone to overestimate than to underestimate the performances of classifiers, and 3) the defect rate resulted in changing between the second and first half in both industry projects and 83% of open-source datasets. This study recommends the use of techniques that preserve the order of data such as walk-forward over 10-fold cross-validation and bootstrap in the within-project across-release class-level context given the above empirical results and that walk-forward is by nature more simple, inexpensive, and stable than the other two techniques.
C1 [Falessi, Davide] Univ Roma Tor Vergata, Rome, Italy.
   [Huang, Jacky; Narayana, Likhita; Thai, Jennifer Fong] Calif Polytech State Univ San Luis Obispo, San Luis Obispo, CA 93407 USA.
   [Turhan, Burak] Monash Univ, Melbourne, Vic, Australia.
   [Turhan, Burak] Univ Oulu, Oulu, Finland.
C3 University of Rome Tor Vergata; California State University System;
   California Polytechnic State University San Luis Obispo; Monash
   University; University of Oulu
RP Falessi, D (corresponding author), Univ Roma Tor Vergata, Rome, Italy.
EM falessi@ing.uinorma2.it; jhuang81@calpoly.edu; lnarayan@calpoly.edu;
   jfthai@calpoly.edu; burak.turhan@monash.edu
RI Falessi, Davide/AAA-4587-2021; Turhan, Burak/G-7400-2011
OI Turhan, Burak/0000-0003-1511-2163; Falessi, Davide/0000-0002-6340-0058
CR Agrawal Amritanshu, 2018, 2018 IEEE/ACM 40th International Conference on Software Engineering (ICSE). Proceedings, P1050, DOI 10.1145/3180155.3180197
   ALTMAN NS, 1992, AM STAT, V46, P175, DOI 10.2307/2685209
   [Anonymous], 1908, BIOMETRIKA, V6, P1
   Austin PC, 2017, STAT METHODS MED RES, V26, P796, DOI 10.1177/0962280214558972
   Bayley S, 2018, ARXIV180107194
   Bergmeir C, 2012, INFORM SCIENCES, V191, P192, DOI 10.1016/j.ins.2011.12.028
   Borg M., 2019, ARXIV190301742
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Brier G. W., 1950, MON WEATHER REV, V78, P1, DOI 10.1175/1520-0493(1950)078andlt;0001:VOFEITandgt;2.0.CO;2
   BROOKS FP, 1987, COMPUTER, V20, P10, DOI 10.1109/MC.1987.1663532
   Cao LJ, 2003, IEEE T NEURAL NETWOR, V14, P1506, DOI 10.1109/TNN.2003.820556
   Dantas ACH, 2005, SPRING COMP SCI, P421, DOI 10.1007/3-211-27389-1_101
   Demiroz G, 1997, LECT NOTES ARTIF INT, V1224, P85
   Efron B., 1993, INTRO BOOTSTRAP, DOI 10.1007/978-1-4899-4541-9
   Falessi D, 2017, INT SYMP EMP SOFTWAR, P151, DOI 10.1109/ESEM.2017.22
   Falessi D, 2017, INT SYMP EMP SOFTWAR, P78, DOI 10.1109/ESEM.2017.14
   Falessi D, 2014, IEEE SOFTWARE, V31, P80, DOI 10.1109/MS.2014.17
   Fisher RA, 1922, J R STAT SOC, V85, P87, DOI 10.2307/2340521
   Freund Y, 1999, MACH LEARN, V37, P277, DOI 10.1023/A:1007662407062
   Fu W, 2016, INFORM SOFTWARE TECH, V76, P135, DOI 10.1016/j.infsof.2016.04.017
   Gao KH, 2011, SOFTWARE PRACT EXPER, V41, P579, DOI 10.1002/spe.1043
   Grove CC, 1930, AM MATH MON, V37, P10
   Guo L, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P417
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Hassan AE, 2017, IEEE T SOFTWARE ENG, V45, P7
   Herzig K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P392, DOI 10.1109/ICSE.2013.6606585
   Highsmith J, 2001, COMPUTER
   Hosseini S, 2019, IEEE T SOFTWARE ENG, V45, P111, DOI 10.1109/TSE.2017.2770124
   Jonsson L, 2016, EMPIR SOFTW ENG, V21, P1533, DOI 10.1007/s10664-015-9401-9
   Kim D, 2013, IEEE T SOFTWARE ENG, V39, P11
   Kim JH, 2009, COMPUT STAT DATA AN, V53, P3735, DOI 10.1016/j.csda.2009.04.009
   Kim S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P481, DOI 10.1145/1985793.1985859
   Kocaguneli E, 2013, J SYST SOFTWARE, V86, P1879, DOI 10.1016/j.jss.2013.02.053
   Kohavi R., 1995, STUDY CROSS VALIDATI, DOI DOI 10.1067/MOD.2000.109031
   Kohzadi N, 1996, NEUROCOMPUTING, V10, P169, DOI 10.1016/0925-2312(95)00020-8
   Kumari M, 2018, INTRO ECONOMETRICS
   Landman D, 2017, PROC INT CONF SOFTW, P507, DOI 10.1109/ICSE.2017.53
   LECESSIE S, 1992, APPL STAT-J ROY ST C, V41, P191
   Lokan C, 2017, EMPIR SOFTW ENG, V22, P716, DOI 10.1007/s10664-016-9446-4
   McCallum A., 1998, AAAI 98 WORKSH LEARN, V752, P41, DOI DOI 10.1109/TSMC.1985.6313426
   McIntosh S, 2018, IEEE T SOFTWARE ENG, V44, P412, DOI 10.1109/TSE.2017.2693980
   MEHTA CR, 1984, BIOMETRICS, V40, P819, DOI 10.2307/2530927
   Mittas N, 2013, IEEE T SOFTWARE ENG, V39, P537, DOI 10.1109/TSE.2012.45
   Myrtveit I, 2005, IEEE T SOFTWARE ENG, V31, P380, DOI 10.1109/TSE.2005.58
   Nguyen A. T., 2012, 2012 27 IEEE ACM INT
   Orr DB, 1996, BIOMETRICS, V52, P2
   Peduzzi P, 1996, J CLIN EPIDEMIOL, V49, P1373, DOI 10.1016/S0895-4356(96)00236-3
   Quinlan J. R., 1986, Machine Learning, V1, P81, DOI 10.1007/BF00116251
   Quinlan J. R., 1993, PROGRAMS MACHINE LEA
   Rahman Foyzur, 2013, P 2013 9 JOINT M FDN, P147
   Sigweni B, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2916005
   Tan M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P99, DOI 10.1109/ICSE.2015.139
   Tantithamthavorn C, 2020, IEEE T SOFTWARE ENG, V46, P1200, DOI 10.1109/TSE.2018.2876537
   Tantithamthavorn C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P286, DOI 10.1145/3183519.3183547
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Tantithamthavorn C, 2016, PROC INT CONF SOFTW, P321, DOI 10.1145/2884781.2884857
   Terrell C, PREDICTIONS TIME SER
   Tian Y, 2013, PROC IEEE INT CONF S, P200, DOI 10.1109/ICSM.2013.31
   Urquhart C., 2013, Grounded Theory for Qualitative Research: A PracticalGuide
   Viera AJ, 2005, FAM MED, V37, P360
   Wilcoxon F, 2006, BIOMETRICS B, V1, P6
   Witten I., 2002, ACM Sigmod Rec., V31, P76, DOI [10.1145/507338.507355, DOI 10.1145/507338.507355]
   Wohlin C., 2012, Experimentation in Software Engineering
   Xiao Y., 2018, P AS PAC SOFTW ENG C
   Zbikowski K, 2015, EXPERT SYST APPL, V42, P4
NR 65
TC 23
Z9 24
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2020
VL 25
IS 6
BP 4805
EP 4830
DI 10.1007/s10664-020-09868-x
EA AUG 2020
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA OI4BB
UT WOS:000564492700001
OA Green Submitted, Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Sharma, T
   Singh, P
   Spinellis, D
AF Sharma, Tushar
   Singh, Paramvir
   Spinellis, Diomidis
TI An empirical investigation on the relationship between design and
   architecture smells
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Maintainability; Code quality; Code smells; Architecture smells; Design
   smells; Inter-smell relationships; Collocation; Correlation; Causality;
   Refactoring
ID CODE ANOMALIES; SOFTWARE; IMPACT
AB Context: Architecture of a software system represents the key design decisions and therefore its quality plays an important role to keep the software maintainable. Code smells are indicators of quality issues in a software system and are classified based on their granularity, scope, and impact. Despite a plethora of existing work on smells, a detailed exploration of architecture smells, their characteristics, and their relationships with smells in other granularities is missing. Objective: The paper aims to study architecture smells characteristics, investigate correlation, collocation, and causation relationships between architecture and design smells. Method: We implement smell detection support for seven architecture smells. We mine 3 073 open-source repositories containing more than 118 million lines of C# code and empirically investigate the relationships between seven architecture and 19 design smells. Results: We find that smell density does not depend on repository size. Cumulatively, architecture smells are highly correlated with design smells. Our collocation analysis finds that the majority of design and architecture smell pairs do not exhibit collocation. Finally, our causality analysis reveals that design smells cause architecture smells.
C1 [Sharma, Tushar] Siemens Corp Technol, Charlotte, NC USA.
   [Singh, Paramvir] Univ Auckland, Sch Comp Sci, Auckland, New Zealand.
   [Spinellis, Diomidis] Athens Univ Econ & Business, Athens, Greece.
C3 Siemens AG; University of Auckland; Athens University of Economics &
   Business
RP Sharma, T (corresponding author), Siemens Corp Technol, Charlotte, NC USA.
EM tusharsharma@ieee.org; p.singh@auckland.ac.nz; dds@aueb.gr
RI Sharma, Tushar/ABI-5681-2020; Spinellis, Diomidis/E-3600-2010
OI Spinellis, Diomidis/0000-0003-4231-1897; Sharma,
   Tushar/0000-0002-0538-052X
FU seneca project, Marie Skodowska-Curie Innovative Training Networks
   (itn-eid) [642954]; Marie Curie Actions (MSCA) [642954] Funding Source:
   Marie Curie Actions (MSCA)
FX The authors would like to thank Panos Louridas and Vasiliki Efstathiou
   from the Athens University of Economics and Business for providing
   useful improvement suggestions. We also like to thank Rohit Tiwari and
   Amit Dogra for putting numerous hours validating Designite.; This work
   was partially funded by the seneca project, which is part of the Marie
   Skodowska-Curie Innovative Training Networks (itn-eid). Grant agreement
   number 642954.
CR Abbes M, 2011, EUR CON SFTWR MTNCE, P181, DOI 10.1109/CSMR.2011.24
   [Anonymous], 2012, P 11 ANN INT C ASP O
   [Anonymous], 2016, P INT C CHIL COMP SC
   Bass L., 1997, SOFTWARE ARCHITECTUR
   Bavota G, 2015, J SYST SOFTWARE, V107, P1, DOI 10.1016/j.jss.2015.05.024
   Behnamghader P, 2017, EMPIR SOFTW ENG, V22, P1146, DOI 10.1007/s10664-016-9466-0
   Besker T, 2018, J SYST SOFTWARE, V135, P1, DOI 10.1016/j.jss.2017.09.025
   Bloch Joshua., 2008, The Java Series, V2nd
   Booch Grady, 1999, UNIFIED MODELING LAN, DOI DOI 10.1007/3-540-40011-7_10
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Couto C, 2013, Bugmaps-granger: A tool for causality analysis between source code metrics and bugs
   Couto C, 2014, J SYST SOFTWARE, V93, P24, DOI 10.1016/j.jss.2014.01.033
   Cox D. R., 1965, THEORY STOCHASTIC PR
   Cramer H, 1999, Mathematical Methods of Statistics
   Cui D, 2019, PROC INT CONF SOFTW, P584, DOI 10.1109/ICSE.2019.00069
   de Andrade Hugo Sica, 2014, WICSA COMPANION, V12, P1
   Le DM, 2018, 2018 IEEE 15TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P176, DOI 10.1109/ICSA.2018.00027
   Le DM, 2016, 2016 13TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P178, DOI 10.1109/WICSA.2016.15
   Ferreira KAM, 2012, J SYST SOFTWARE, V85, P244, DOI 10.1016/j.jss.2011.05.044
   Filo TGS, 2015, CATALOGUE THRESHOLDS
   Fontana FA, 2019, J SYST SOFTWARE, V154, P139, DOI 10.1016/j.jss.2019.04.066
   Fontana FA, 2016, EMPIR SOFTW ENG, V21, P1143, DOI 10.1007/s10664-015-9378-4
   Fontana FA, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE WORKSHOPS (ICSAW), P282, DOI 10.1109/ICSAW.2017.16
   Fontana FA, 2016, PROC IEEE INT CONF S, P433, DOI 10.1109/ICSME.2016.33
   Fontana FA, 2015, 2015 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON SOFTWARE ARCHITECTURE AND METRICS (SAM), P1, DOI 10.1109/SAM.2015.8
   Fontana FA, 2013, PROC IEEE INT CONF S, P260, DOI 10.1109/ICSM.2013.37
   Fourati R, 2011, STUD COMPUT INTELL, V364, P17
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Fuller WA., 2009, INTRO STAT TIME SERI
   Garcia J, 2014, TECHNICAL REPORT ARC
   Garcia J, 2009, LECT NOTES COMPUT SC, V5581, P146, DOI 10.1007/978-3-642-02351-4_10
   GRANGER CWJ, 1969, ECONOMETRICA, V37, P424, DOI 10.2307/1912791
   Guimaraes E, 2018, SOFTWARE PRACT EXPER, V48, P1077, DOI 10.1002/spe.2563
   Guimaraes E, 2014, P INT COMP SOFTW APP, P344, DOI 10.1109/COMPSAC.2014.57
   Herbold S, 2011, EMPIR SOFTW ENG, V16, P812, DOI 10.1007/s10664-011-9162-z
   Hochstein L, 2004, 28TH ANNUAL NASA GODDARD SOFTWARE ENGINEERING WORKSHOP, PROCEEDINGS, P137
   Kessentini W, 2014, IEEE T SOFTWARE ENG, V40, P841, DOI 10.1109/TSE.2014.2331057
   Khomh F, 2009, INT CONF QUAL SOFTW, P305, DOI 10.1109/QSIC.2009.47
   Koschke R., 2007, P DUPLICATION REDUND
   Koziolek H, 2013, IEEE SOFTWARE, V30, P54, DOI 10.1109/MS.2013.101
   Kruchten P, 2012, IEEE SOFTWARE, V29, P18, DOI 10.1109/MS.2012.167
   KWIATKOWSKI D, 1992, J ECONOMETRICS, V54, P159, DOI 10.1016/0304-4076(92)90104-Y
   Lanza Michele., 2005, Object-Oriented Metrics in Practice
   Li ZY, 2015, 2015 12TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P65, DOI 10.1109/WICSA.2015.19
   Lippert M., 2006, Refactoring in large software projects: performing complex restructurings successfully
   Liu H, 2012, IEEE T SOFTWARE ENG, V38, P220, DOI 10.1109/TSE.2011.9
   Lozano A, 2015, 2015 IEEE 2ND INTERNATIONAL WORKSHOP ON PATTERNS PROMOTION AND ANTI-PATTERNS PREVENTION (PPAP), P1, DOI 10.1109/PPAP.2015.7076847
   Lutellier T, 2018, IEEE T SOFTWARE ENG, V44, P159, DOI 10.1109/TSE.2017.2671865
   Ma WWY, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P242, DOI 10.1109/QRS.2015.43
   Macia I, 2012, EUR CON SFTWR MTNCE, P277, DOI 10.1109/CSMR.2012.35
   Mäntylä M, 2003, PROC IEEE INT CONF S, P381, DOI 10.1109/ICSM.2003.1235447
   Marinescu R, 2004, PROC IEEE INT CONF S, P350, DOI 10.1109/ICSM.2004.1357820
   Martin R. C., 2002, AGILE SOFTWARE DEV P
   Martini A, 2018, 12 EUR C SOFTW ARCH, DOI [10.1109/ICSA.2018.00027, DOI 10.1109/ICSA.2018.00027]
   MILLER GA, 1956, PSYCHOL REV, V63, P81, DOI 10.1037/h0043158
   Mo R, 2021, IEEE T SOFTWARE ENG, V47, P1008, DOI 10.1109/TSE.2019.2910856
   Mo R, 2015, 2015 12TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P51, DOI 10.1109/WICSA.2015.12
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Moonen Leon, 2001, P 2 INT C EXTR PROGR
   Munaiah N, 2017, EMPIR SOFTW ENG, V22, P3219, DOI 10.1007/s10664-017-9512-6
   Nam D, 2018, PROC IEEE ACM INT C, P53
   Oizumi W, 2016, PROC INT CONF SOFTW, P440, DOI 10.1145/2884781.2884868
   Oizumi W, 2014, 2014 28TH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2014), P91, DOI 10.1109/SBES.2014.18
   Oizumi WN., 2015, J. Softw. Eng. Res. Dev, V3, P11, DOI [10.1186/s40411-015-0025-y, DOI 10.1186/S40411-015-0025-Y]
   Palomba F, 2018, INFORM SOFTWARE TECH, V99, P1, DOI 10.1016/j.infsof.2018.02.004
   Palomba F, 2015, IEEE T SOFTWARE ENG, V41, P462, DOI 10.1109/TSE.2014.2372760
   Palomba F, 2013, IEEE INT CONF AUTOM, P268, DOI 10.1109/ASE.2013.6693086
   Pietrzak B, 2006, LECT NOTES COMPUT SC, V4044, P75
   Samarthyam G., 2016, Proceedings of the 1st International Workshop on Software Refactoring, P1
   Sharma T, 2019, DESIGNITE VALIDATION, DOI [10.5281/zenodo.2538655, DOI 10.5281/ZENODO.2538655]
   Sharma T, 2018, DESIGNITE SOFTWARE D
   Sharma T, 2018, J SYST SOFTWARE, V138, P158, DOI 10.1016/j.jss.2017.12.034
   Sharma T, 2017, INT SYMP EMP SOFTWAR, P424, DOI 10.1109/ESEM.2017.57
   Sharma T, 2016, 2016 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON BRINGING ARCHITECTURAL DESIGN THINKING INTO DEVELOPERS DAILY ACTIVITIES (BRIDGE), P1, DOI [10.1145/2896935.2896938, 10.1109/Bridge.2016.009]
   Sharma T, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P189, DOI [10.1109/MSR.2016.028, 10.1145/2901739.2901761]
   Suryanarayana G., 2014, Refactoring for Software Design Smells: Managing Technical Debt
   Tamburri D., 2019, P 52 HAW INT C SYST, DOI [10.24251/HICSS.2019.843, DOI 10.24251/HICSS.2019.843]
   Tran JB, 2000, PROG COMPREHEN, P48, DOI 10.1109/WPC.2000.852479
   Vanderweele TJ, 2013, ANN STAT, V41, P196, DOI 10.1214/12-AOS1058
   Verdecchia R, 2018, 2018 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT), P11, DOI 10.1145/3194164.3194176
   Vidal SA, 2016, AUTOMAT SOFTW ENG, V23, P501, DOI 10.1007/s10515-014-0175-x
   Walter B, 2018, J SYST SOFTWARE, V144, P1, DOI 10.1016/j.jss.2018.05.057
   Xiao L, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P763, DOI 10.1145/2635868.2661677
   Yamashita A, 2015, PROC IEEE INT CONF S, P121, DOI 10.1109/ICSM.2015.7332458
   Yamashita A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P682, DOI 10.1109/ICSE.2013.6606614
   Yamashita A, 2013, INFORM SOFTWARE TECH, V55, P2223, DOI 10.1016/j.infsof.2013.08.002
NR 87
TC 25
Z9 25
U1 4
U2 14
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2020
VL 25
IS 5
BP 4020
EP 4068
DI 10.1007/s10664-020-09847-2
EA AUG 2020
PG 49
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NJ1FD
UT WOS:000564958400001
DA 2024-07-18
ER

PT J
AU Lee, D
   Rajbahadur, GK
   Lin, DY
   Sayagh, M
   Bezemer, CP
   Hassan, AE
AF Lee, Daniel
   Rajbahadur, Gopi Krishnan
   Lin, Dayi
   Sayagh, Mohammed
   Bezemer, Cor-Paul
   Hassan, Ahmed E.
TI An empirical study of the characteristics of popular Minecraft mods
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Mods; Mod development; CurseForge; Minecraft
ID NOMOGRAMS; NETWORKS; GAMES
AB It is becoming increasingly difficult for game developers to manage the cost of developing a game, while meeting the high expectations of gamers. One way to balance the increasing gamer expectation and development stress is to build an active modding community around the game. There exist several examples of games with an extremely active and successful modding community, with the Minecraft game being one of the most notable ones. This paper reports on an empirical study of 1,114 popular and 1,114 unpopular Minecraft mods from the CurseForge mod distribution platform, one of the largest distribution platforms for Minecraft mods. We analyzed the relationship between 33 features across 5 dimensions of mod characteristics and the popularity of mods (i.e., mod category, mod documentation, environmental context of the mod, remuneration for the mod, and community contribution for the mod), to understand the characteristics of popular Minecraft mods. We firstly verify that the studied dimensions have significant explanatory power in distinguishing the popularity of the studied mods. Then we evaluated the contribution of each of the 33 features across the 5 dimensions. We observed that popular mods tend to have a high quality description and promote community contribution.
C1 [Lee, Daniel; Rajbahadur, Gopi Krishnan; Lin, Dayi; Sayagh, Mohammed; Hassan, Ahmed E.] Queens Univ Kingston, Software Anal & Intelligence Lab SAIL, Kingston, ON, Canada.
   [Bezemer, Cor-Paul] Univ Alberta Edmonton, Analyt Software Games & Repository Data ASGAARD L, Edmonton, AB, Canada.
C3 Queens University - Canada
RP Rajbahadur, GK (corresponding author), Queens Univ Kingston, Software Anal & Intelligence Lab SAIL, Kingston, ON, Canada.
EM dlee@cs.queensu.ca; Krishnan@cs.queensu.ca; dayi.lin@cs.queensu.ca;
   msayagh@cs.queensu.ca; bezemer@ualberta.ca; ahmed@cs.queensu.ca
RI KHALIFA, AHMED khalifa/HKF-2246-2023
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; Rajbahadur, Gopi
   Krishnan/0000-0003-1812-5365; Bezemer, Cor-Paul/0000-0002-0474-5718;
   Lin, Dayi/0000-0002-4034-6650
CR Ahmed F, 2017, ENTERTAIN COMPUT, V21, P1, DOI 10.1016/j.entcom.2017.04.001
   Al-Washmi R, 2014, PROC EUR CONF GAME, P10
   Ampatzoglou A, 2010, INFORM SOFTWARE TECH, V52, P888, DOI 10.1016/j.infsof.2010.05.004
   [Anonymous], 2011, J COMPUT MATH SCI TE
   Arakji RY, 2007, J MANAGE INFORM SYST, V24, P195, DOI 10.2753/MIS0742-1222240208
   Bavota G, 2015, IEEE T SOFTWARE ENG, V41, P384, DOI 10.1109/TSE.2014.2367027
   Bayliss J.D., 2012, IEEE International Games Innovation Conference, P1, DOI [DOI 10.1109/IGIC.2012.6329841, https://doi.org/10.1109/IGIC.2012.6329841]
   Bebbington S., 2014, THESIS
   Beggs B., 2012, RECONSTRUCTION STUDI, V12, P2
   Blackburn J, 2014, ACM T INTERNET TECHN, V13, DOI 10.1145/2602570
   Blake Vikki., 2019, Minecraft might be the biggest-selling video game of all time now
   Blincoe K, 2016, INFORM SOFTWARE TECH, V70, P30, DOI 10.1016/j.infsof.2015.10.002
   Borges H, 2016, Proceedings of the The 12th International Conference on Predictive Models and Data Analytics in Software Engineering
   Borges H, 2018, J SYST SOFTWARE, V146, P112, DOI 10.1016/j.jss.2018.09.016
   Borges H, 2016, PROC IEEE INT CONF S, P334, DOI 10.1109/ICSME.2016.31
   Brand J.E., 2013, Educational Technology Solutions, V55, P56
   Canossa A., 2013, Computational Intelligence in Games (CIG), 2013 IEEE Conference on, P1
   Cheung GiffordK., 2014, P 1 ACM SIGCHI ANN S, P57, DOI DOI 10.1145/2658537.2658540
   Chia PernHui., 2012, WWW 12 P 21 INT C WO, P311, DOI [10.1145/2187836.2187879, DOI 10.1145/2187836.2187879]
   Chun FKH, 2007, BJU INT, V99, P794, DOI 10.1111/j.1464-410X.2006.06694.x
   Dey T, 2016, CHI PLAY 2016: PROCEEDINGS OF THE ANNUAL SYMPOSIUM ON COMPUTER-HUMAN INTERACTION IN PLAY COMPANION, P133, DOI 10.1145/2968120.2987724
   Duncan Sean C, 2011, Well Played J Video Games Value Mean, V1, P1
   Ekaputra G., 2013, P INF SYST INT C ISI, P1
   Fabric development team, 2018, FABR ANN
   Fejes N, 2013, QUEER VISIBILITY IN POST-SOCIALIST CULTURES, P1
   Finley Klint., 2014, NEW MINECRAFT MOD TEACHES YOU CODE AS YOU PLAY
   Fox John, 2002, An R and S-PLUS Companion to Applied Regression: A Web Appendix to the Book
   Geere D., 2019, The best Minecraft mods
   Graham T. C. N., 2006, Interactive Systems. Design, Specification, and Verification. 13th International Workshop, DSVIS 2006. Revised Papers (Lecture Notes in Computer Science Vol. 4323), P248
   Guana V, 2015, 2015 IEEE/ACM 4TH INTERNATIONAL WORKSHOP ON GAMES AND SOFTWARE ENGINEERING, P15, DOI 10.1109/GAS.2015.11
   Guerrouj L, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P321, DOI 10.1109/SANER.2015.7081842
   Hackman E, 2014, THESIS
   Hanghoj T, 2014, PROC EUR CONF GAME, P182
   Harman M., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P108, DOI 10.1109/MSR.2012.6224306
   Harrell F.E., 2001, Lecture notes in Biostatistical modeling
   HARRELL FE, 1984, STAT MED, V3, P143, DOI 10.1002/sim.4780030207
   Harrell FE., 2001, Introduction to Biostatistics for Biomedical Research
   Bécares JH, 2017, ENTERTAIN COMPUT, V18, P79, DOI 10.1016/j.entcom.2016.08.002
   Howard P, 2019, SUSTAINABILITY-BASEL, V11, DOI 10.3390/su11154109
   Jeppesen LB, 2004, TECH REP
   Kalliamvakou E., 2014, P 11 WORKING C MININ, P92, DOI DOI 10.1145/2597073.2597074
   Kohler B., 2012, Proceedings 2012 2nd International Workshop on Games and Software Engineering: Realizing User Engagement with Game Engineering Techniques (GAS 2012), P42, DOI 10.1109/GAS.2012.6225926
   Leavitt A, 2013, AOIR SELECTED PAPERS, P3
   Lee DB, 2021, ETHNIC HEALTH, V26, P413, DOI 10.1080/13557858.2018.1520815
   Lenig S., 2018, International Conference on Applied Human Factors and Ergonomics, P275, DOI DOI 10.1007/978-3-319-94619-1_27
   Lewis C.L., 2011, PUBLIC OPINION CLASS, P1
   Lewis PG, 2010, NATIONAL POLITICS AND EUROPEAN INTEGRATION: FROM THE CONSTITUTION TO THE LISBON TREATY, P108
   Lin D, 2019, EMPIR SOFTW ENG, V24, P1573
   Lin DY, 2019, EMPIR SOFTW ENG, V24, P170, DOI 10.1007/s10664-018-9627-4
   Lin DY, 2018, EMPIR SOFTW ENG, V23, P771, DOI 10.1007/s10664-017-9531-3
   Lin D, 2017, EMPIR SOFTW ENG, V22, P2095, DOI 10.1007/s10664-016-9480-2
   Linares-Vasquez Mario, 2013, P 2013 9 JOINT M FDN, P477, DOI DOI 10.1145/2491411.2491428
   Long D. Feng, 2003, Handbook of psychology, P635, DOI [10.1002/0471264385.wei0225, DOI 10.1002/0471264385.WEI0225]
   McIntosh S, 2016, EMPIR SOFTW ENG, V21, P2146, DOI 10.1007/s10664-015-9381-9
   Midi H, 2010, J INTERDISCIP MATH, V13, P253, DOI 10.1080/09720502.2010.10700699
   Mills Aaron., 2015, A Brief History of Minecraft Modding
   Mojang, 2019, WHAT IS MIN
   Molnar C, 2018, INTERPRETABLE MACHIN, V7
   Morrison A., 2014, How To Make Minecraft A Survival Game
   Muller S., 2015, P 10 INT C FDN DIG G
   Murphy-Hill E, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1, DOI 10.1145/2568225.2568226
   Nebel S, 2016, EDUC TECHNOL SOC, V19, P355
   Nguyen J, 2016, CONFIGURATIONS, V24, P471, DOI 10.1353/con.2016.0030
   Nieborg DB, 2008, EUR J CULT STUD, V11, P177, DOI 10.1177/1367549407088331
   Pascarella L, 2018, IEEE WORK CONF MIN S, P392, DOI [10.1145/3196398.3196423, 10.1145/3196398.3196418]
   Petrillo F., 2009, Computers in Entertainment CIE, V7, P13, DOI DOI 10.1145/1486508.1486521
   Petrillo F, 2008, APPLIED COMPUTING 2008, VOLS 1-3, P707
   Petrov A, 2014, THESIS
   Phillips T., 2018, The human cost of Red Dead Redemption 2
   Politowski C, 2016, 2016 IEEE/ACM 5TH INTERNATIONAL WORKSHOP ON GAMES AND SOFTWARE ENGINEERING (GAS), P22, DOI [10.1145/2896958.2896960, 10.1109/GAS.2016.012]
   Poretski L, 2017, CSCW'17: PROCEEDINGS OF THE 2017 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING, P480, DOI 10.1145/2998181.2998301
   Postigo Hector., 2007, GAMES CULT, V2, P300
   QUIRING T, 2015, J VIRTUAL WORLDS RES, V8, P1
   Romano J, 2006, ANN M SO ASS I RES C, P1
   Ruiz A, 2008, ARXIV08040650
   Saito D., 2014, IEEE International Professional Communication Conference (IPCC), P1, DOI DOI 10.1109/IPCC.2014.7020393
   Sangho Ahn, 2017, ICIC Express Letters, V11, P1729
   Scacchi W, 2015, C FDN DIG GAM
   Scott R., 2007, Nexus Mods
   Shariat SF, 2009, THER ADV UROL, V1, P13, DOI 10.1177/1756287209103923
   Short D., 2012, TEACHING SCI THE J A, V58, P55, DOI DOI 10.1086/586911
   Shumovsky Y., 2018, How much does it cost to make a video game?
   Sifa R., 2014, 2014 IEEE Conference on Computational Intelligence and Games, P1, DOI [10.1109/CIG.2014.6932906, DOI 10.1109/CIG.2014.6932906]
   Stone BG, 2019, INT J INCLUSIVE EDUC, V23, P209, DOI 10.1080/13603116.2018.1426051
   Taba SES, 2014, LECT NOTES COMPUT SC, V8541, P370, DOI 10.1007/978-3-319-08245-5_22
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Targett S, 2012, GAME STUDIES, V12, P2
   Thongtanunam P, 2018, IEEE T SOFTWARE ENG, P1
   Tian Y, 2015, PROC IEEE INT CONF S, P301, DOI 10.1109/ICSM.2015.7332476
   Washburn M, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P280, DOI 10.1145/2889160.2889253
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Wu H., 2016, VISUAL ARTS RES, V42, P22, DOI DOI 10.5406/VISUARTSRESE.42.1.0022
   Zhu J, 2015, INT J COMPUT INTEG M, V28, P213, DOI 10.1080/0951192X.2013.874589
   Zorn C., 2013, FDG, P352
NR 94
TC 11
Z9 14
U1 6
U2 21
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2020
VL 25
IS 5
BP 3396
EP 3429
DI 10.1007/s10664-020-09840-9
EA AUG 2020
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NJ1FD
UT WOS:000561720100001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Jiarpakdee, J
   Tantithamthavorn, C
   Treude, C
AF Jiarpakdee, Jirayus
   Tantithamthavorn, Chakkrit
   Treude, Christoph
TI The impact of automated feature selection techniques on the
   interpretation of defect models
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software analytics; Defect prediction; Model interpretation; Feature
   selection
ID STATIC CODE ATTRIBUTES; PRONE SOFTWARE MODULES; RESEARCHER BIAS;
   PREDICTION; METRICS; COLLINEARITY
AB The interpretation of defect models heavily relies on software metrics that are used to construct them. Prior work often uses feature selection techniques to remove metrics that are correlated and irrelevant in order to improve model performance. Yet, conclusions that are derived from defect models may be inconsistent if the selected metrics are inconsistent and correlated. In this paper, we systematically investigate 12 automated feature selection techniques with respect to the consistency, correlation, performance, computational cost, and the impact on the interpretation dimensions. Through an empirical investigation of 14 publicly-available defect datasets, we find that (1) 94-100% of the selected metrics are inconsistent among the studied techniques; (2) 37-90% of the selected metrics are inconsistent among training samples; (3) 0-68% of the selected metrics are inconsistent when the feature selection techniques are applied repeatedly; (4) 5-100% of the produced subsets of metrics contain highly correlated metrics; and (5) while the most important metrics are inconsistent among correlation threshold values, such inconsistent most important metrics are highly-correlated with the Spearman correlation of 0.85-1. Since we find that the subsets of metrics produced by the commonly-used feature selection techniques (except for AutoSpearman) are often inconsistent and correlated, these techniques should be avoided when interpreting defect models. In addition to introducing AutoSpearman which mitigates correlated metrics better than commonly-used feature selection techniques, this paper opens up new research avenues in the automated selection of features for defect models to optimise for interpretability as well as performance.
C1 [Jiarpakdee, Jirayus; Tantithamthavorn, Chakkrit] Monash Univ, Fac Informat & Technol, Melbourne, Vic, Australia.
   [Treude, Christoph] Univ Adelaide, Sch Comp Sci, Adelaide, SA, Australia.
C3 Monash University; University of Adelaide
RP Jiarpakdee, J (corresponding author), Monash Univ, Fac Informat & Technol, Melbourne, Vic, Australia.
EM jirayus.jiarpakdee@monash.edu; chakkrit@monash.edu;
   christoph.treude@adelaide.edu.au
RI Treude, Christoph/AAZ-6257-2021
OI Treude, Christoph/0000-0002-6919-2149
FU Australian Research Council's Discovery Early Career Researcher Award
   (DECRA) [DE200100941, DE180100153]; Australian Research Council
   [DE200100941] Funding Source: Australian Research Council
FX C. Tantithamthavorn is supported by the Australian Research Council's
   Discovery Early Career Researcher Award (DECRA) funding scheme
   (DE200100941). C. Treude is supported by the Australian Research
   Council's Discovery Early Career Researcher Award (DECRA) funding scheme
   (DE180100153).
CR Agrawal Amritanshu, 2018, 2018 IEEE/ACM 40th International Conference on Software Engineering (ICSE). Proceedings, P1050, DOI 10.1145/3180155.3180197
   Alckmin G, 2019, INT ARCH PHOTOGRAMME
   Alzubi R, 2018, IEEE ACCESS, V6, DOI 10.1109/ACCESS.2017.2778268
   [Anonymous], 2014, 11 WORKING C MINING, DOI [DOI 10.1145/2597073.2597076, DOI 10.1145/2597073]
   [Anonymous], 2018, ARXIV180110271
   [Anonymous], 2007, PROMISE 07, DOI DOI 10.1109/PROMISE.2007.10
   Arisholm E, 2010, J SYST SOFTWARE, V83, P2, DOI 10.1016/j.jss.2009.06.055
   Berry William D, 1993, Understanding regression assumptions, V92
   Bettenburg Nicolas, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P124, DOI 10.1109/ICPC.2010.46
   Bird C, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P121, DOI 10.1145/1595696.1595716
   Blake C.L., 1998, UCI Repository of Machine Learning Databases, P55
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Cahill J, 2013, IEEE AUS SOFT ENGR, P211, DOI 10.1109/ASWEC.2013.33
   Cai YX, 2010, IEEE T POWER SYST, V25, P642, DOI 10.1109/TPWRS.2009.2036924
   Canfora G, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P252, DOI 10.1109/ICST.2013.38
   Chambers JM., 1992, Statistical Models in S
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   D'Ambros Marco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P31, DOI 10.1109/MSR.2010.5463279
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   Dash M, 2000, LECT NOTES ARTIF INT, V1805, P98
   Efron B., 1993, INTRO BOOTSTRAP, DOI 10.1007/978-1-4899-4541-9
   Elish KO, 2008, J SYST SOFTWARE, V81, P649, DOI 10.1016/j.jss.2007.07.040
   FOX J, 1992, J AM STAT ASSOC, V87, P178, DOI 10.2307/2290467
   Fox J., 2015, APPL REGRESSION ANAL
   Fu W, 2016, INFORM SOFTWARE TECH, V76, P135, DOI 10.1016/j.infsof.2016.04.017
   Garner StephenR., 1995, Proc. of the New Zealand Computer Science Research Students Conference, P57
   Ghotra B, 2017, IEEE WORK CONF MIN S, P146, DOI 10.1109/MSR.2017.18
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Gil Y, 2017, EMPIR SOFTW ENG, V22, P2585, DOI 10.1007/s10664-017-9513-5
   Gunes Koru A., 2005, P 2005 WORKSHOP PRED, P1
   Guyon Isabelle, 2003, J MACH LEARN RES, V3, P1157, DOI DOI 10.1162/153244303322753616
   Hair JF, 2010, Multivariate data analysis
   Hall M. A., 1999, Proceedings of the Twelfth International Florida AI Research Society Conference, P235
   Hall MarkA., 1997, Feature subset selection: a correlation based filter approach
   HANLEY JA, 1982, RADIOLOGY, V143, P29, DOI 10.1148/radiology.143.1.7063747
   Harrell FE, 2015, SPRINGER SER STAT, DOI 10.1007/978-3-319-19425-7
   Harrell F.E., 2013, Hmisc: Harrell Miscellaneous. R package version 3.10-1.1. Available from
   Harrell FE., 2017, rms: Regression Modeling Strategies, DOI DOI 10.1007/978-3-319-19425-7
   Hastie T., 2001, ELEMENTS STAT LEARNI, DOI 10.1007/978-0-387-84858-7_2
   Hinkle DE, 2003, Applied Statistics for the Behavioral Sciences, V663
   Hsu HH, 2011, EXPERT SYST APPL, V38, P8144, DOI 10.1016/j.eswa.2010.12.156
   Jiang Y., 2008, DEFECTS 08 P 2008 WO, P16, DOI [DOI 10.1145/1390817.1390822, 10.1145/1390817.1390822]
   Jiarpakdee J, 2018, ONLINE APPENDIX SHOU
   Jiarpakdee J, 2020, T SOFTW ENG TSE
   Jiarpakdee J., 2019, P INT C SOFTW ENG IC
   Jiarpakdee J, 2018, PROC IEEE INT CONF S, P92, DOI 10.1109/ICSME.2018.00018
   Jiarpakdee J, 2016, IEEE INT SYMP SOFTW, P51, DOI 10.1109/ISSREW.2016.30
   John G.H., 1994, P 11 INT C MACH LEAR, P121
   Jureczko M, 2010, P 6 INT C PREDICTIVE, DOI DOI 10.1145/1868328.1868342
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kaur A, 2008, 2008 INTERNATIONAL CONFERENCE ON ADVANCED COMPUTER THEORY AND ENGINEERING, P37, DOI 10.1109/ICACTE.2008.204
   Kim S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P481, DOI 10.1145/1985793.1985859
   Kohavi R, 1997, ARTIF INTELL, V97, P273, DOI 10.1016/S0004-3702(97)00043-X
   Kraemer HC, 2003, J AM ACAD CHILD PSY, V42, P1524, DOI 10.1097/00004583-200312000-00022
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Lewis D.D., 1994, Third Annual Symposium on Document Analysis and Information Retrieval, P81
   Li JD, 2018, ACM COMPUT SURV, V50, DOI 10.1145/3136625
   Liu H, 1995, PROC INT C TOOLS ART, P388, DOI 10.1109/TAI.1995.479783
   Lu HH, 2014, PROC INT SYMP SOFTW, P312, DOI 10.1109/ISSRE.2014.35
   MASON CH, 1991, J MARKETING RES, V28, P268, DOI 10.2307/3172863
   MATTHEWS BW, 1975, BIOCHIM BIOPHYS ACTA, V405, P442, DOI 10.1016/0005-2795(75)90109-9
   McHugh ML, 2013, BIOCHEM MEDICA, V23, P143, DOI 10.11613/BM.2013.018
   Mende T., 2009, P 5 INT C PREDICTOR, P1, DOI [10.1145/1540438.1540448, DOI 10.1145/1540438.1540448]
   Mende Thilo., 2010, P 6 INT C PREDICTIVE, P5
   Menzies T., 2012, The PROMISE Repository of empirical software engineering data
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Menzies T, 2018, IEEE SOFTWARE, V35, P96, DOI 10.1109/MS.2018.1661323
   MITCHELL T, 1989, ANNU REV COMPUT SCI, V4, P417
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Nam J, 2017, T SOFTWARE ENG TSE
   Okutan A, 2014, EMPIR SOFTW ENG, V19, P154, DOI 10.1007/s10664-012-9218-8
   Osman H, 2018, ARXIV180704486
   Petric Jean., 2016, Proceedings of the 20th International Conference on Evaluation and Assessment in Software Engineering, page, P13
   Rahman F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P432, DOI 10.1109/ICSE.2013.6606589
   Robles Gregorio, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P171, DOI 10.1109/MSR.2010.5463348
   Rodriguez D, 2007, IRI 2007: PROCEEDINGS OF THE 2007 IEEE INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION, P667, DOI 10.1109/IRI.2007.4296696
   Romano J, 2006, ANN M FLOR ASS I RES, P1
   Shepperd M, 2014, IEEE T SOFTWARE ENG, V40, P603, DOI 10.1109/TSE.2014.2322358
   Shepperd M, 2013, IEEE T SOFTWARE ENG, V39, P1208, DOI 10.1109/TSE.2013.11
   Shivaji S, 2013, IEEE T SOFTWARE ENG, V39, P552, DOI 10.1109/TSE.2012.43
   Strobl C, 2008, BMC BIOINFORMATICS, V9, DOI 10.1186/1471-2105-9-307
   Tantithamthavorn C, 2018, RNALYTICA R PACKAGE
   Tantithamthavorn C., 2017, Scottknottesd: The Scott-Knott Effect Size Difference (esd) Test
   Tantithamthavorn C, 2018, EXPERIENCE REPORT DE
   Tantithamthavorn C, 2019, T SOFTW ENG TSE
   Tantithamthavorn C, 2019, IEEE T SOFTWARE ENG, V45, P683, DOI 10.1109/TSE.2018.2794977
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Tantithamthavorn C, 2016, PROC INT CONF SOFTW, P321, DOI 10.1145/2884781.2884857
   Tantithamthavorn C, 2016, IEEE T SOFTWARE ENG, V42, P1092, DOI 10.1109/TSE.2016.2553030
   Tantithamthavorn C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P812, DOI 10.1109/ICSE.2015.93
   Team RC, 2017, CONTR WORLDW STATS R
   Tian Y, 2015, PROC IEEE INT CONF S, P301, DOI 10.1109/ICSM.2015.7332476
   Tosun A, 2009, INT SYMP EMP SOFTWAR, P478
   Xu Z, 2016, PROC INT SYMP SOFTW, P309, DOI 10.1109/ISSRE.2016.13
   Yan K, 2015, SENSOR ACTUAT B-CHEM, V212, P353, DOI 10.1016/j.snb.2015.02.025
   Zhang F, 2017, IEEE T SOFTWARE ENG, V43, P476, DOI 10.1109/TSE.2016.2599161
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
NR 97
TC 43
Z9 46
U1 1
U2 9
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2020
VL 25
IS 5
BP 3590
EP 3638
DI 10.1007/s10664-020-09848-1
EA AUG 2020
PG 49
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NJ1FD
UT WOS:000554333000001
DA 2024-07-18
ER

PT J
AU Kotti, Z
   Kravvaritis, K
   Dritsa, K
   Spinellis, D
AF Kotti, Zoe
   Kravvaritis, Konstantinos
   Dritsa, Konstantina
   Spinellis, Diomidis
TI Standing on shoulders or feet? An extended study on the usage of the MSR
   data papers
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software engineering data; Bibliometrics; Survey study; Mining software
   repositories; Data paper; Reproducibility
ID SOFTWARE; GUIDELINES; PROMISE; SEARCH; LIFE
AB The establishment of the Mining Software Repositories (MSR) data showcase conference track has encouraged researchers to provide data sets as a basis for further empirical studies. The objective of this study is to examine the usage of data papers published in the MSR proceedings in terms of use frequency, users, and use purpose. Data track papers were collected from the MSR data showcase track and through the manual inspection of older MSR proceedings. The use of data papers was established through manual citation searching followed by reading the citing studies and dividing them into strong and weak citations. Contrary to weak, strong citations truly use the data set of a data paper. Data papers were then manually clustered based on their content, whereas their strong citations were classified by hand according to the knowledge areas of the Guide to the Software Engineering Body of Knowledge. A survey study on 108 authors and users of data papers provided further insights regarding motivation and effort in data paper production, encouraging and discouraging factors in data set use, and future desired direction regarding data papers. We found that 65% of the data papers have been used in other studies, with a long-tail distribution in the number of strong citations. Weak citations to data papers usually refer to them as an example. MSR data papers are cited in total less than other MSR papers. A considerable number of the strong citations stem from the teams that authored the data papers. Publications providing Version Control System (VCS) primary and derived data are the most frequent data papers and the most often strongly cited ones. Enhanced developer data papers are the least common ones, and the second least frequently strongly cited. Data paper authors tend to gather data in the context of other research. Users of data sets appreciate high data quality and are discouraged by lack of replicability of data set construction. Data related to machine learning or derived from the manufacturing sector are two suggestions of the respondents for future data papers. Overall, data papers have provided the foundation for a significant number of studies, but there is room for improvement in their utilization. This can be done by setting a higher bar for their publication, by encouraging their use, by promoting open science initiatives, and by providing incentives for the enrichment of existing data collections.
C1 [Kotti, Zoe; Kravvaritis, Konstantinos; Dritsa, Konstantina; Spinellis, Diomidis] Athens Univ Econ & Business, Dept Management Sci & Technol, 76 Patiss St, Athens 10434, Greece.
C3 Athens University of Economics & Business
RP Kotti, Z (corresponding author), Athens Univ Econ & Business, Dept Management Sci & Technol, 76 Patiss St, Athens 10434, Greece.
EM zoekotti@aueb.gr; kravvaritisk@aueb.gr; dritsakon@aueb.gr; dds@aueb.gr
RI Spinellis, Diomidis/E-3600-2010
OI Spinellis, Diomidis/0000-0003-4231-1897; Dritsa,
   Konstantina/0000-0003-3395-2182; Kotti, Zoe/0000-0003-3816-9162;
   Kravvaritis, Konstantinos/0000-0002-8889-0612
FU European Union's Horizon 2020 research and innovation programme
   [825328]; GSRT [EP-2844-01]; Research Centre of the Athens University of
   Economics and Business; H2020 - Industrial Leadership [825328] Funding
   Source: H2020 - Industrial Leadership
FX Panos Louridas provided insightful comments on thismanuscript.
   Furthermore, Georgios Gousios's suggestions regarding the refinement of
   the questionnaire were crucial for the survey attainment. This work has
   received funding from: the European Union's Horizon 2020 research and
   innovation programme under grant agreement No 825328; the GSRT 2016-2017
   Research Support (EP-2844-01); and the Research Centre of the Athens
   University of Economics and Business, under the Original Scientific
   Publications framework 2019.
CR Aivaloglou E, 2017, IEEE WORK CONF MIN S, P511, DOI 10.1109/MSR.2017.45
   Allix K, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P468, DOI [10.1145/2901739.2903508, 10.1109/MSR.2016.056]
   Almakadmeh Mhammed, 2017, J SOFTWARE ENG APPL, V10, P693, DOI [DOI 10.4236/jsea.2017.108038, 10.4236/jsea.2017.108038, DOI 10.4236/JSEA.2017.108038]
   Altinger H, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P494, DOI 10.1109/MSR.2015.72
   Amann S, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P464, DOI [10.1145/2901739.2903506, 10.1109/MSR.2016.055]
   [Anonymous], 2014, WORKING C MINING SOF, DOI [10.1145/2597073.2597123, DOI 10.1145/2597073.2597123]
   [Anonymous], 2002, ACM SIGSOFT SOFTW EN, DOI DOI 10.1145/571681.571686
   [Anonymous], 2014, MSR 14, DOI [DOI 10.1145/2597073.2597124, 10.1145/2597073.2597124]
   [Anonymous], 2014, P 11 WORKING C MININ
   [Anonymous], P 10 WORK C MIN SOFT
   [Anonymous], 2005, P 2 INT WORKSHOP MIN, DOI [DOI 10.1145/1082983.1083164, 10.1145/1082983.1083164]
   Baldassari B, 2014, P 11 WORK C MIN SOFT, P424, DOI DOI 10.1145/2597073.2597136
   Barik T, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P486, DOI 10.1109/MSR.2015.70
   Binkley D, 2013, IEEE WORK CONF MIN S, P401, DOI 10.1109/MSR.2013.6624055
   Bloemen R., 2014, P 11 WORK C MIN SOFT, P404, DOI DOI 10.1145/2597073.2597131
   Boisvert RF, 2016, COMMUN ACM, V59, P5, DOI 10.1145/2994031
   Bourque Pierre, 2014, SWEBOK: Guide to the Software Engineering Body of Knowledge, V3rd
   BRADFORD SC, 1985, J INFORM SCI, V10, P176
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Butler S, 2013, IEEE WORK CONF MIN S, P405, DOI 10.1109/MSR.2013.6624056
   Cao J, 2018, IEEE WORK CONF MIN S, P6, DOI 10.1145/3196398.3196451
   Chametzky B., 2016, Sociology Mind, V6, P163, DOI [DOI 10.4236/SM.2016.64014, DOI 10.4236/sm.2016.64014]
   Chatzidimitriou KC, 2018, IEEE WORK CONF MIN S, P42, DOI 10.1145/3196398.3196465
   Cheikhi L, 2013, 2013 JOINT CONFERENCE OF THE 23RD INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE 2013 EIGHTH INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA), P17, DOI 10.1109/IWSM-Mensura.2013.13
   Cukic B, 2005, IEEE SOFTWARE, V22, P20, DOI 10.1109/MS.2005.153
   de Freitas FG, 2011, LECT NOTES COMPUT SC, V6956, P18, DOI 10.1007/978-3-642-23716-4_5
   Dit B, 2013, IEEE WORK CONF MIN S, P131, DOI 10.1109/MSR.2013.6624019
   Efstathiou V, 2018, IEEE WORK CONF MIN S, P38, DOI 10.1145/3196398.3196448
   Farah Gabriel, 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, P420, DOI DOI 10.1145/2597073.2597135
   Ferenc R, 2018, PROMISE'18: PROCEEDINGS OF THE 14TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING, P12, DOI 10.1145/3273934.3273936
   FURNHAM A, 1986, PERS INDIV DIFFER, V7, P385, DOI 10.1016/0191-8869(86)90014-0
   Geiger FX, 2018, IEEE WORK CONF MIN S, P30, DOI 10.1145/3196398.3196460
   German DM, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P470, DOI 10.1109/MSR.2015.66
   Gkortzis A, 2018, IEEE WORK CONF MIN S, P18, DOI 10.1145/3196398.3196454
   Glaser B. G., 1967, DISCOVERY GROUNDED T, DOI 10.1515/9783111660211/html
   GLASS RL, 1994, J SYST SOFTWARE, V27, P1, DOI 10.1016/0164-1212(94)90109-0
   Goeminne M, 2013, IEEE WORK CONF MIN S, P225, DOI 10.1109/MSR.2013.6624032
   Gonzalez-Barahona JM, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P478, DOI 10.1109/MSR.2015.68
   Gousios G., 2014, Proceedings of the Conference on Mining Software Repositories (MSR), MSR 2014, P368, DOI 10.1145/2597073.2597122
   Gousios G, 2016, PROC INT CONF SOFTW, P285, DOI 10.1145/2884781.2884826
   Gousios G, 2013, IEEE WORK CONF MIN S, P233, DOI 10.1109/MSR.2013.6624034
   Gu YN, 2004, SCIENTOMETRICS, V61, P171, DOI 10.1023/B:SCIE.0000041647.01086.f4
   Habayeb M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P498, DOI 10.1109/MSR.2015.73
   Hamasaki K, 2013, IEEE WORK CONF MIN S, P49, DOI 10.1109/MSR.2013.6624003
   HAMMING RW, 1969, J ACM, V16, P3, DOI 10.1145/321495.321497
   Hardwicke TE, 2018, NAT HUM BEHAV, V2, P793, DOI 10.1038/s41562-018-0444-y
   Harman M, 2009, TR0903 BRUN U DEP CO
   Janjic W, 2013, IEEE WORK CONF MIN S, P339, DOI 10.1109/MSR.2013.6624047
   Karakoidas V, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P510, DOI 10.1109/MSR.2015.76
   Keivanloo I., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P32, DOI 10.1109/MSR.2012.6224296
   Kim S, 2006, 2006 IEEE WORKSHOP ON MULTIMEDIA SIGNAL PROCESSING, P225
   Kitchenham B., 2002, Software Engineering Notes, V27, P20, DOI 10.1145/638574.638580
   Kitchenham B., 2003, ACM SIGSOFT SOFTW EN, V28, P24, DOI DOI 10.1145/638750.638758
   Kitchenham B., 2004, PROCEDURES PERFORMIN, V3, P1
   Kitchenham B.A., 2002, ACM SIGSOFT Software Engineering Notes, V27, P18, DOI [DOI 10.1145/566493.566495, 10.1145/566493.566495]
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kotti Zoe, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P565, DOI 10.1109/MSR.2019.00085
   Krüger S, 2021, IEEE T SOFTWARE ENG, V47, P2382, DOI 10.1109/TSE.2019.2948910
   Kruger Stefan, 2018, EUR C OBJ OR PROGR E, V10, P1
   Krutz DE, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P522, DOI 10.1109/MSR.2015.79
   Krutz Daniel E, 2014, P 11 WORK C MIN SOFT, P388, DOI 10.1145/2597073.2597127
   Kupferschmidt K., 2018, Science (New York, DOI DOI 10.1126/SCIENCE.AAV4786
   Lamkanfi A, 2013, IEEE WORK CONF MIN S, P203, DOI 10.1109/MSR.2013.6624028
   Lavazza L, 2012, PROCEEDINGS OF THE 2012 JOINT CONFERENCE OF THE 22ND INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE 2012 SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA 2012), P221, DOI 10.1109/IWSM-MENSURA.2012.39
   Lazar A, 2014, P 11 WORK C MIN SOFT, P392, DOI [DOI 10.1145/2597073.2597128, 10.1145/2597073.2597128]
   Liebchen G. A., 2008, P 4 INT WORKSH PRED, P39, DOI [10.1145/1370788.1370799, DOI 10.1145/1370788.1370799]
   Lotka A.J., 1926, J. Washing Acad. Sci, V16, P317, DOI 10.1016/s0016-0032(26)91166-6
   MacLean AC, 2013, IEEE WORK CONF MIN S, P135, DOI 10.1109/MSR.2013.6624020
   Madeyski L, 2017, IEEE WORK CONF MIN S, P515, DOI 10.1109/MSR.2017.46
   Markovtsev V, 2018, IEEE WORK CONF MIN S, P34, DOI 10.1145/3196398.3196464
   Martins P, 2018, IEEE WORK CONF MIN S, P1, DOI 10.1145/3196398.3196450
   Mauczka A, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P490, DOI 10.1109/MSR.2015.71
   MERTON RK, 1968, SCIENCE, V159, P56, DOI 10.1126/science.159.3810.56
   Mierle K., 2005, SIGSOFT Softw. Eng. Notes, V30, P1, DOI [10.1145/1082983.1083150, DOI 10.1145/1082983.1083150]
   Mukadam M, 2013, IEEE WORK CONF MIN S, P45, DOI 10.1109/MSR.2013.6624002
   Murakami H., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, P412
   Noten J, 2017, IEEE WORK CONF MIN S, P531, DOI 10.1109/MSR.2017.52
   Novielli N, 2018, IEEE WORK CONF MIN S, P14, DOI 10.1145/3196398.3196453
   Nussbaum L, 2010, P 7 WORK C MIN SOFTW, P10, DOI [10.1109/MSR.2010.5463277, DOI 10.1109/MSR.2010.5463277]
   Ohira M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P518, DOI 10.1109/MSR.2015.78
   Ortu M, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P480, DOI [10.1145/2901739.2903505, 10.1109/MSR.2016.059]
   Paixao M, 2018, IEEE WORK CONF MIN S, P46, DOI 10.1145/3196398.3196466
   Palomba F, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P482, DOI 10.1109/MSR.2015.69
   Petersen K, 2008, 12 INT C EV ASS SOFT, P1, DOI 10.5555/2227115.2227123
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Pfleeger Shari Lawrence, 2001, ACM SIGSOFT Software Engineering Notes, V26, P16, DOI DOI 10.1145/505532.505535
   Piezunka H, 2015, ACAD MANAGE J, V58, P856, DOI 10.5465/amj.2012.0458
   Ponzanelli L, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P474, DOI 10.1109/MSR.2015.67
   Proksch S, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P476, DOI [10.1109/MSR.2016.058, 10.1145/2901739.2903507]
   Raemaekers S, 2013, IEEE WORK CONF MIN S, P221, DOI 10.1109/MSR.2013.6624031
   Robles Gregorio, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P171, DOI 10.1109/MSR.2010.5463348
   Robles G., 2014, P 11 WORKING C MININ, DOI [10.1145/2597073, DOI 10.1145/2597073]
   Robles G, 2017, IEEE WORK CONF MIN S, P519, DOI 10.1109/MSR.2017.48
   Sadat M, 2017, IEEE WORK CONF MIN S, P527, DOI 10.1109/MSR.2017.50
   Saha RK, 2018, IEEE WORK CONF MIN S, P10, DOI 10.1145/3196398.3196473
   Saini V., 2014, P 11 WORK C MIN SOFT, P416, DOI DOI 10.1145/2597073.2597134
   SALINGER S, 2008, HUM TECHNOL, V4, P9, DOI DOI 10.17011/HT/URN.200804151350
   Sawant AA, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P506, DOI 10.1109/MSR.2015.75
   Sayyad Shirabad J., 2005, The PROMISE Repository of Software Engineering Databases
   Schermann G, 2018, IEEE WORK CONF MIN S, P26, DOI 10.1145/3196398.3196456
   Shull FJ, 2008, EMPIR SOFTW ENG, V13, P211, DOI 10.1007/s10664-008-9060-1
   SIGELMAN L, 1981, PUBLIC OPIN QUART, V45, P199, DOI 10.1086/268650
   Spacco J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083149
   Spinellis D, 2018, IEEE WORK CONF MIN S, P58, DOI 10.1145/3196398.3196476
   Spinellis D, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P462, DOI 10.1109/MSR.2015.64
   Squire M, 2018, EMPIR SOFTW ENG, V23, P1123, DOI 10.1007/s10664-017-9581-6
   Squire M, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P452, DOI [10.1109/MSR.2016.053, 10.1145/2901739.2903509]
   Squire M, 2013, IEEE WORK CONF MIN S, P305, DOI 10.1109/MSR.2013.6624043
   Trockman A, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P511, DOI 10.1145/3180155.3180209
   Vasilescu B, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P514, DOI 10.1109/MSR.2015.77
   Vasilescu B, 2013, IEEE WORK CONF MIN S, P373, DOI 10.1109/MSR.2013.6624051
   von Krogh G, 2006, MANAGE SCI, V52, P975, DOI 10.1287/mnsc.1060.0560
   Wagstrom P, 2013, IEEE WORK CONF MIN S, P229, DOI 10.1109/MSR.2013.6624033
   Wallace DR, 1998, THIRD IEEE INTERNATIONAL HIGH-ASSURANCE SYSTEMS ENGINEERING SYMPOSIUM, PROCEEDINGS, P178
   Webster J, 2002, MIS QUART, V26, pXIII
   Wermelinger M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P502, DOI 10.1109/MSR.2015.74
   Williams James R., 2014, P 11 WORK C MIN SOFT, P408, DOI [DOI 10.1145/2597073.2597132, 10.1145/2597073.2597132]
   Wong WE, 2011, J SYST SOFTWARE, V84, P162, DOI 10.1016/j.jss.2010.09.036
   Xu YL, 2018, IEEE WORK CONF MIN S, P54, DOI 10.1145/3196398.3196475
   Yamashita A, 2018, IEEE WORK CONF MIN S, P50, DOI 10.1145/3196398.3196457
   Yamashita A, 2017, IEEE WORK CONF MIN S, P507, DOI 10.1109/MSR.2017.44
   Yang X, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P460, DOI [10.1145/2901739.2903504, 10.1109/MSR.2016.054]
   Yu Y, 2018, IEEE WORK CONF MIN S, P22, DOI 10.1145/3196398.3196455
   Zacchiroli S, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P466, DOI 10.1109/MSR.2015.65
   Zhang Chenlei, 2014, P 11 WORKING C MININ, P400, DOI DOI 10.1145/2597073.2597130
   Zhu CG, 2017, IEEE WORK CONF MIN S, P523, DOI 10.1109/MSR.2017.49
   Zhu JX, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P472, DOI [10.1145/2901739.2903502, 10.1109/MSR.2016.057]
   Zimmermann T, 2013, P 10 WORK C MIN SOFT, piii, DOI [10.1109/MSR.2013.6623995, DOI 10.1109/MSR.2013.6623995]
   Zogaan W, 2017, INT REQUIR ENG CONF, P110, DOI 10.1109/RE.2017.80
NR 129
TC 9
Z9 9
U1 4
U2 20
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2020
VL 25
IS 5
BP 3288
EP 3322
DI 10.1007/s10664-020-09834-7
EA JUL 2020
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA NJ1FD
UT WOS:000549679400001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Beyer, S
   Macho, C
   Di Penta, M
   Pinzger, M
AF Beyer, Stefanie
   Macho, Christian
   Di Penta, Massimiliano
   Pinzger, Martin
TI What kind of questions do developers ask on Stack Overflow? A comparison
   of automated approaches to classify posts into question categories
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 26th IEEE/ACM International Conference on Program Comprehension
CY 2018
CL Gothenburg, SWEDEN
SP IEEE, ACM
DE Question categories; Machine learning; Stack Overflow; Android
ID PROGRAMMERS
AB On question and answer sites, such as Stack Overflow (SO), developers use tags to label the content of a post and to support developers in question searching and browsing. However, these tags mainly refer to technological aspects instead of the purpose of the question. Tagging questions with their purpose can add a new dimension to the identification of discussed topics in posts on SO. In this paper, we aim at automating the classification of SO question posts into seven question categories. As a first step, we harmonized existing taxonomies of question categories and then, we manually classified 1,000 SO questions according to our new taxonomy. Additionally to the question category, we marked the phrases that indicate a question category for each of the posts. We then use this data set to automate the classification of posts using two approaches. For the first approach, we manually analyzed the phrases to find patterns. Based on regular expressions, we implemented a classifier, for each of the categories, that determines whether a post belongs to a category. These regular expressions are derived by analyzing patterns in the phrases. In the second approach, we use the curated data set to train classification models of supervised machine learning algorithms (Random Forest and Support Vector Machines). For the machine learning algorithms, we experimented with 1,312 different configurations regarding the preprocessing of the text and the representation of the input data. Then, we compared the performance of the regex approach with the performance of the best configuration that uses machine learning algorithms on a validation set of 110 posts. The results show that using the regular expression approach, we can classify posts into the correct question category with an average precision and recall of 0.90, and an MCC of 0.68. Additionally, we applied the regex approach on all questions of SO that deal with Android app development and investigated the co-occurrence of question categories in posts. We found that the categories API usage, Conceptual, and Discrepancy are the most frequently assigned question categories and that they also occur together frequently. Our approach can be used to support developers in browsing SO discussions or researchers in building recommender systems based on SO.
C1 [Beyer, Stefanie; Macho, Christian; Pinzger, Martin] Univ Klagenfurt, Klagenfurt, Austria.
   [Di Penta, Massimiliano] Univ Sannio, Sannio, Italy.
C3 University of Klagenfurt; University of Sannio
RP Beyer, S (corresponding author), Univ Klagenfurt, Klagenfurt, Austria.
EM stefanie.beyer@aau.at; christian.macho@aau.at; dipenta@unisannio.it;
   martin.pinzger@aau.at
RI Macho, Christian/AAS-4725-2020; Di Penta, Massimiliano/AAF-9656-2021
OI Macho, Christian/0000-0001-8182-7277; Pinzger,
   Martin/0000-0002-5536-3859
CR Agrawal R., 1993, SIGMOD Record, V22, P207, DOI 10.1145/170036.170072
   Agrawal R., P 20 INT C VERY LARG
   Al Omran FNA, 2017, IEEE WORK CONF MIN S, P187, DOI 10.1109/MSR.2017.42
   Allamanis M, 2013, IEEE WORK CONF MIN S, P53, DOI 10.1109/MSR.2013.6624004
   [Anonymous], 1997, READINGS INFORM RETR
   [Anonymous], 2017, IEEE T SOFTWARE ENG
   [Anonymous], QC REPLICATION PACKA
   [Anonymous], EMPIR SOFTW ENG
   [Anonymous], 2018, IEEE T SERVICES COMP
   [Anonymous], INPR ACL WORKSH EFF
   [Anonymous], 2011, J MACH LEARN TECHNOL
   [Anonymous], 2017, TECHNICAL REPORT
   [Anonymous], 2012, EMPIR SOFTW ENG
   [Anonymous], P WORK C MIN SOFTW R
   [Anonymous], ARXIV171209569
   [Anonymous], 2015, EMPIR SOFTW ENG
   Beyer S, 2018, INT C PROGRAM COMPRE, P211, DOI 10.1145/3196321.3196333
   Beyer S, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P430, DOI [10.1109/MSR.2016.051, 10.1145/2901739.2901750]
   Beyer S, 2014, PROC IEEE INT CONF S, P531, DOI 10.1109/ICSME.2014.88
   Breiman L., 2001, Mach. Learn., V45, P5
   Chaparro O, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P396, DOI 10.1145/3106237.3106285
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chicco D, 2017, BIODATA MIN, V10, DOI 10.1186/s13040-017-0155-3
   Coelho R, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P134, DOI 10.1109/MSR.2015.20
   CORTES C, 1995, MACH LEARN, V20, P273, DOI 10.1007/BF00994018
   FLEISS JL, 1971, PSYCHOL BULL, V76, P378, DOI 10.1037/h0031619
   Fritz T., 2010, Proceedings of the 32nd International Conference on Software Engineering - Volume 1, ICSE '10, V1, P175
   Fu W, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P49, DOI 10.1145/3106237.3106256
   Hou D, 2011, CONF PROC INT SYMP C, P91, DOI 10.1109/ICPC.2011.21
   Joorabchi Mona Erfani, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P15, DOI 10.1109/ESEM.2013.9
   Junhao Wen, 2016, 2016 9th International Conference on Service Science (ICSS). Proceedings, P39, DOI 10.1109/ICSS.2016.13
   Kincaid J, 1975, NAV TECH TRAIN COMMA
   Kohavi R., 1995, IJCAI-95. Proceedings of the Fourteenth International Joint Conference on Artificial Intelligence, P1137
   LaToza ThomasD., 2010, EVALUATION USABILITY, p8:1
   Le TDB, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P331, DOI 10.1109/SANER.2015.7081843
   Lee M, 2018, ISSCC DIG TECH PAP I, P122, DOI 10.1109/ISSCC.2018.8310214
   LETOVSKY S, 1987, J SYST SOFTWARE, V7, P325, DOI 10.1016/0164-1212(87)90032-X
   Linares-Vásquez M, 2013, IEEE WORK CONF MIN S, P93, DOI 10.1109/MSR.2013.6624014
   MCLAUGHLIN GH, 1969, J READING, V12, P639
   Mehrab Z., 2018, P 14 INT C WEB INF S, P191, DOI [10.5220/0006929501910198, DOI 10.5220/0006929501910198]
   Ponzanelli L, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1295, DOI 10.1109/ICSE.2013.6606701
   Ponzanelli Luca, 2014, P 11 WORKING C MININ, P102, DOI DOI 10.1145/2597073.2597077
   Read J, 2011, MACH LEARN, V85, P333, DOI 10.1007/s10994-011-5256-5
   Torgo L., 2016, DATA MINING R LEARNI, DOI DOI 10.1201/9781315399102
   Treude C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P804, DOI 10.1145/1985793.1985907
   Villanes IK, 2017, XXXI BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2017), P104, DOI 10.1145/3131151.3131157
   Villarroel L, 2016, PROC INT CONF SOFTW, P14, DOI 10.1145/2884781.2884818
   Yang XL, 2016, J COMPUT SCI TECH-CH, V31, P910, DOI 10.1007/s11390-016-1672-0
   Zhang PY, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2652483
   Zhang YY, 2013, CONF PROC INT SYMP C, P142, DOI 10.1109/ICPC.2013.6613842
   Zou Y, 2015, P INT C AUTOMATED SO, P1
NR 51
TC 28
Z9 33
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAY
PY 2020
VL 25
IS 3
SI SI
BP 2258
EP 2301
DI 10.1007/s10664-019-09758-x
PG 44
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA LL7FD
UT WOS:000531720100016
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Salza, P
   Palomba, F
   Di Nucci, D
   De Lucia, A
   Ferrucci, F
AF Salza, Pasquale
   Palomba, Fabio
   Di Nucci, Dario
   De Lucia, Andrea
   Ferrucci, Filomena
TI Third-party libraries in mobile apps When, how, and why developers
   update them
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 26th IEEE/ACM International Conference on Program Comprehension
CY 2018
CL Gothenburg, SWEDEN
SP IEEE, ACM
DE Third-party libraries; API usage; Empirical study; Mining software
   repository
AB When developing new software, third-party libraries are commonly used to reduce implementation efforts. However, even these libraries undergo evolution activities to offer new functionalities and fix bugs or security issues. The research community has mainly investigated third-party libraries in the context of desktop applications, while only little is known regarding the mobile context. In this paper, we bridge this gap by investigating when, how, and why mobile developers update third-party libraries. By mining 2752 mobile apps, we study (i) whether mobile developers update third-party libraries, (ii) how much such apps lag behind the latest version of their dependencies, (iii) which are the categories of libraries that are more prone to be updated, and (iv) what are the common patterns followed by developers when updating a library. Then, we perform a survey with 73 mobile developers that aims at shedding lights on the reasons why they update (or not) third-party libraries. We find that mobile developers rarely update libraries, and when they do, they mainly tend to update libraries related to the Graphical User Interface. Avoiding bug propagation and making the app compatible with new Android releases are the top reasons why developers update their libraries.
C1 [Salza, Pasquale; Palomba, Fabio] Univ Zurich, Zurich, Switzerland.
   [Di Nucci, Dario] Vrije Univ Brussel, Brussels, Belgium.
   [De Lucia, Andrea; Ferrucci, Filomena] Univ Salerno, Fisciano, Italy.
C3 University of Zurich; Vrije Universiteit Brussel; University of Salerno
RP Salza, P (corresponding author), Univ Zurich, Zurich, Switzerland.
EM salza@ifi.uzh.ch; palomba@ifi.uzh.ch; dario.di.nucci@vub.be;
   adelucia@unisa.it; fferrucci@unisa.it
RI Di Nucci, Dario/Y-9679-2019; De Lucia, Andrea/AAG-6781-2020; Salza,
   Pasquale/P-1355-2017
OI Di Nucci, Dario/0000-0002-3861-1902; FERRUCCI,
   Filomena/0000-0002-0975-8972; Salza, Pasquale/0000-0002-8687-052X
CR [Anonymous], 2006, SOFTWARE ENG
   [Anonymous], 2003, Journal of Marketing Management, DOI [DOI 10.1080/0267257X.2003.9728225, 10.1080/0267257X.2003.9728225]
   [Anonymous], 2017, EMPIR SOFTW ENG
   [Anonymous], IEEE T SOFTW ENG
   [Anonymous], IEEE INT C SOFTW AN
   [Anonymous], 2009, TECH REP
   [Anonymous], 3 PARTY LIB MOBILE A
   [Anonymous], 2014, HDB INTERRATER RELIA
   [Anonymous], 2011, TECH REP
   [Anonymous], P ACM SIGSOFT 20 INT
   Antoine J.Y., 2014, P 14 C EUR CHAPT ASS, P550, DOI DOI 10.3115/V1/E14-1058
   Azad Shams Abubakar, 2015, THESIS
   Backes M, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P356, DOI 10.1145/2976749.2978333
   Bauer V, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P483, DOI 10.1109/ICSM.2012.6405311
   Bavota G, 2015, IEEE T SOFTWARE ENG, V41, P384, DOI 10.1109/TSE.2014.2367027
   Benaquisto L., 2008, SAGE ENCY QUALITATIV, V1, P85
   Black S, 2001, J SOFTW MAINT EVOL-R, V13, P263, DOI 10.1002/smr.233
   Borges HS, 2015, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.12
   BORNSTEIN RF, 1994, SOC COGNITION, V12, P103, DOI 10.1521/soco.1994.12.2.103
   Catolino G, 2018, 2018 IEEE/ACM 5TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT), P43, DOI 10.1145/3197231.3198447
   Chen N, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P767, DOI 10.1145/2568225.2568263
   Chow KS, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P359, DOI 10.1109/ICSM.1996.565039
   Coelho J, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P186, DOI 10.1145/3106237.3106246
   Daqing Hou, 2011, 2011 18th Working Conference on Reverse Engineering, P131, DOI 10.1109/WCRE.2011.24
   Decan A, 2018, PROC IEEE INT CONF S, P404, DOI 10.1109/ICSME.2018.00050
   Dering ML, 2014, IEEE MILIT COMMUN C, P300, DOI 10.1109/MILCOM.2014.52
   Derr E, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2187, DOI 10.1145/3133956.3134059
   Dig D, 2006, J SOFTW MAINT EVOL-R, V18, P83, DOI 10.1002/smr.328
   Cortés-Coy LF, 2014, IEEE INT WORK C SO, P275, DOI 10.1109/SCAM.2014.14
   Fu B, 2013, 19TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'13), P1276
   Geiger FX, 2018, IEEE WORK CONF MIN S, P30, DOI 10.1145/3196398.3196460
   Haney F.M., 1972, P AFIPS JOINT COMPUT, P173
   Joorabchi Mona Erfani, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P15, DOI 10.1109/ESEM.2013.9
   Khalid H, 2015, IEEE SOFTWARE, V32, P70, DOI 10.1109/MS.2014.50
   Khondhu Jymit., 2013, Open Source Software: Quality Verification, volume 404 of IFIP Advances in Information and Communication Technology, V404, P61
   Kirubakaran B., 2013, Proceedings of the 2013 International Conference on Pattern Recognition, Informatics and Mobile Engineering (PRIME), P79, DOI 10.1109/ICPRIME.2013.6496451
   Kruchten P, 2012, IEEE SOFTWARE, V29, P18, DOI 10.1109/MS.2012.167
   Krutz DE, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P522, DOI 10.1109/MSR.2015.79
   Lammel R., 2011, Proceedings of the 2011 ACM Symposium on Applied Computing, P1317, DOI 10.1145/1982185.1982471
   Lehman M. M., 1985, Program Evolution: Processes of Software Change
   Linares-Vásquez M, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P714, DOI 10.1145/2591062.2591092
   Linares-Vasquez Mario, 2013, P 2013 9 JOINT M FDN, P477, DOI DOI 10.1145/2491411.2491428
   Martin W, 2017, IEEE T SOFTWARE ENG, V43, P817, DOI 10.1109/TSE.2016.2630689
   Mileva YM, 2009, IWPSE-EVOL 09: ERCIM WORKSHOP ON SOFTWARE EVOLUTION (EVOL) AND INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION (IWPSE), P57
   Minelli R, 2013, PROC IEEE INT CONF S, P476, DOI 10.1109/ICSM.2013.76
   Minelli R, 2013, EUR CON SFTWR MTNCE, P144, DOI 10.1109/CSMR.2013.24
   Mojica IJ, 2014, IEEE SOFTWARE, V31, P78, DOI 10.1109/MS.2013.142
   Montandon JE, 2013, WORK CONF REVERSE EN, P401, DOI 10.1109/WCRE.2013.6671315
   Muccini H., 2012, 2012 Proceedings of 7th International Workshop on Automation of Software Test (AST 2012), P29, DOI 10.1109/IWAST.2012.6228987
   Pagano D, 2013, S VIS LANG HUM CEN C, P125, DOI 10.1109/RE.2013.6636712
   Palomba F, 2019, INFORM SOFTWARE TECH, V105, P43, DOI 10.1016/j.infsof.2018.08.004
   Palomba F, 2018, J SYST SOFTWARE, V137, P143, DOI 10.1016/j.jss.2017.11.043
   Palomba F, 2017, PROC INT CONF SOFTW, P106, DOI 10.1109/ICSE.2017.18
   Palomba F, 2014, PROC IEEE INT CONF S, P101, DOI 10.1109/ICSME.2014.32
   Pascarella L, 2018, 2018 IEEE/ACM 5TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT), P144, DOI 10.1145/3197231.3197251
   Raemaekers S, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P378, DOI 10.1109/ICSM.2012.6405296
   Ruiz I. J. M., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P113
   Ruiz IJM, 2016, IEEE SOFTWARE, V33, P74, DOI 10.1109/MS.2014.81
   Salza P, 2018, INT C PROGRAM COMPRE, P255, DOI 10.1145/3196321.3196341
   Scalabrino S, 2019, IEEE T SOFTWARE ENG, V45, P68, DOI 10.1109/TSE.2017.2759112
   Seneviratne P, 2015, DISCRET MATH ALGORIT, V7, DOI 10.1142/S1793830915500603
   SHELLEY M, 1984, J AM STAT ASSOC, V79, P240, DOI 10.2307/2288384
   Strauss A., 1990, BASICS QUALITATIVE R
   Syer MarkD., 2013, Proceedings of the 2013 Conference of the Center for Advanced Studies on Collaborative Research, CASCON '13, P283
   Tian Y, 2015, PROC IEEE INT CONF S, P301, DOI 10.1109/ICSM.2015.7332476
   Vassallo C, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P38, DOI 10.1109/SANER.2018.8330195
   Viennot N., 2014, 2014 ACM INT C MEAS, P221, DOI DOI 10.1145/2637364.2592003
   Yau S.S., 1993, Software engineering metrics I, P71
   Zerouali A, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.2157
   Zerouali A, 2018, LECT NOTES COMPUT SC, V10826, P95, DOI 10.1007/978-3-319-90421-4_6
   Zhang JY, 2013, ASME 2013 DYNAMIC SYSTEMS AND CONTROL CONFERENCE, VOL 2, DOI 10.1115/DSCC2013-3825
NR 71
TC 15
Z9 16
U1 0
U2 13
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAY
PY 2020
VL 25
IS 3
SI SI
BP 2341
EP 2377
DI 10.1007/s10664-019-09754-1
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA LL7FD
UT WOS:000531720100018
DA 2024-07-18
ER

PT J
AU Amreen, S
   Mockus, A
   Zaretzki, R
   Bogart, C
   Zhang, YX
AF Amreen, Sadika
   Mockus, Audris
   Zaretzki, Russell
   Bogart, Christopher
   Zhang, Yuxia
TI ALFAA: Active Learning Fingerprint based Anti-Aliasing for correcting
   developer identity errors in version control systems
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software repository mining; Identity disambiguation; Random forest
   classification; Record linkage; Behavioral fingerprinting; Social
   network analysis
ID SOCIAL NETWORKS; COLLABORATION; CENTRALITY
AB An accurate determination of developer identities is important for software engineering research and practice. Without it, even simple questions such as "how many developers does a project have?" cannot be answered. The commonly used version control data from Git is full of identity errors and the existing approaches to correct these errors are difficult to validate on large scale and cannot be easily improved. We, therefore, aim to develop a scalable, highly accurate, easy to use and easy to improve approach to correct software developer identity errors. We first amalgamate developer identities from version control systems in open source software repositories and investigate the nature and prevalence of these errors, design corrective algorithms, and estimate the impact of the errors on networks inferred from this data. We investigate these questions using a collection of over 1B Git commits with over 23M recorded author identities. By inspecting the author strings that occur most frequently, we group identity errors into categories. We then augment the author strings with three behavioral fingerprints: time-zone frequencies, the set of files modified, and a vector embedding of the commit messages. We create a manually validated set of identities for a subset of OpenStack developers using an active learning approach and use it to fit supervised learning models to predict the identities for the remaining author strings in OpenStack. We then compare these predictions with a competing commercially available effort and a leading research method. Finally, we compare network measures for file-induced author networks based on corrected and raw data. We find commits done from different environments, misspellings, organizational ids, default values, and anonymous IDs to be the major sources of errors. We also find supervised learning methods to reduce errors by several times in comparison to existing research and commercial methods and the active learning approach to be an effective way to create validated datasets. Results also indicate that correction of developer identity has a large impact on the inference of the social network. We believe that our proposed Active Learning Fingerprint Based Anti-Aliasing (ALFAA) approach will expedite research progress in the software engineering domain for applications that involve developer identities.
C1 [Amreen, Sadika] Univ Tennessee, Knoxville, TN 37996 USA.
   [Mockus, Audris; Zaretzki, Russell] Univ Tennessee, Digital Archeol & Evidence Engn, Dept Elect Engn & Comp Sci, Knoxville, TN USA.
   [Zaretzki, Russell] Univ Tennessee, Business Analyt & Stat, Knoxville, TN USA.
   [Bogart, Christopher] Carnegie Mellon Univ, Pittsburgh, PA 15213 USA.
   [Zhang, Yuxia] Peking Univ, Sch Elect Engn & Comp Sci, Beijing, Peoples R China.
C3 University of Tennessee System; University of Tennessee Knoxville;
   University of Tennessee System; University of Tennessee Knoxville;
   University of Tennessee System; University of Tennessee Knoxville;
   Carnegie Mellon University; Peking University
RP Amreen, S (corresponding author), Univ Tennessee, Knoxville, TN 37996 USA.
EM samreen@vols.utk.edu; audris@utk.edu; rzaretzk@utk.edu;
   cbogart@andrew.cmu.edu; yuxiaz@pku.edu.cn
RI Mockus, Audris/AEY-3361-2022
OI Mockus, Audris/0000-0002-7987-7598; Bogart,
   Christopher/0000-0001-8581-115X; Zaretzki, Russell/0000-0001-9769-4894
CR [Anonymous], 2012, Programming with big data in R
   [Anonymous], 2011, P 19 ACM SIGSOFT S 1
   Badashian A.S., 2014, CASCON, P19
   Bird C, 2009, PROMISES PERILS MINI
   Bird C, 2006, CAMB INTRO PHILOS, P13
   BONACICH P, 1987, AM J SOCIOL, V92, P1170, DOI 10.1086/228631
   Burt R., 1992, STRUCTURAL HOLES
   Cataldo M, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P2
   Cataldo Marcelo, 2006, P 2006 20 ANNIVERSAR, P353, DOI DOI 10.1145/1180875.1180929
   Christen P, 2006, ICDM 2006: SIXTH IEEE INTERNATIONAL CONFERENCE ON DATA MINING, WORKSHOPS, P290
   Cohen P., 2003, P KDD WORKSH DAT CLE, V3, P73
   Czerwonka J, 2013, IEEE SOFTWARE, V30, P64, DOI 10.1109/MS.2013.68
   Diehl Stephan, 2018, EMPIR SOFTW ENG
   Edberg D. T., 1996, Journal of Management Information Systems, V13, P167
   FELLEGI IP, 1969, J AM STAT ASSOC, V64, P1183, DOI 10.2307/2286061
   FREEMAN LC, 1979, SOC NETWORKS, V1, P215, DOI 10.1016/0378-8733(78)90021-7
   German D. M., 2004, "International Workshop on Mining Software Repositories (MSR 2004)" W17S Workshop - 26th International Conference on Software Engineering, P17, DOI 10.1049/ic:20040469
   German Daniel., 2003, In Proceedings of the 3rd Workshop on Open Source Software Engineering, P63
   Gharehyazie M, 2015, EMPIR SOFTW ENG, V20, P1318, DOI 10.1007/s10664-014-9332-x
   Goeminne M, 2013, SCI COMPUT PROGRAM, V78, P971, DOI 10.1016/j.scico.2011.11.004
   Hallgren Kevin A, 2012, Tutor Quant Methods Psychol, V8, P23
   Kouters E, 2012, 28 IEEE INT C SOFTW
   Lawrence S, 1999, COMPUTER, V32, P67, DOI 10.1109/2.769447
   Le Quoc V., 2014, P INT C MACH LEARN I
   Ma Y, 2019, P 2019 INT C MIN SOF
   Martinez-Romo J, 2008, INT FED INFO PROC, V275, P171
   Mockus A, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P503, DOI 10.1109/ICSE.2002.1007994
   Mockus A, 2009, 2009 INT C SOFTW ENG
   Mockus A, 2009, 6 IEEE WORK C MIN SO
   Mockus A, 2009, PROC INT CONF SOFTW, P67, DOI 10.1109/ICSE.2009.5070509
   Mockus Audris., 2014, Proceedings of the on Future of Software Engineering, P85, DOI 10.1145/2593882.2593889
   Nagappan N, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P521, DOI 10.1145/1368088.1368160
   Nesbitt A, 2017, LIB IO OPEN SOURCE R, DOI [10.5281/zenodo.808273, DOI 10.5281/ZEN0D0.808273]
   Petersen K, 2011, SOFTWARE PRACT EXPER, V41, P975, DOI 10.1002/spe.975
   Pinzger Martin, 2008, P 16 ACM SIGSOFT INT, P2, DOI DOI 10.1145/1453101.1453105
   Rehurek R., 2010, P LREC 2010 WORKSH N, P45, DOI DOI 10.13140/2.1.2393.1847
   Robles G., 2005, INT C SOFTW ENG P 20, P1, DOI DOI 10.1145/1082983.1083162
   Sarawagi Sunita, 2002, P 8 ACM SIGKDD INT C, P269, DOI DOI 10.1145/775047.775087
   Sariyar M, 2010, R J, V2, P61
   Smalheiser NR, 2009, ANNU REV INFORM SCI, V43, P287
   Spencer D., 2004, Boxes Arrows, V2, P1
   Thung F, 2013, EUR CON SFTWR MTNCE, P323, DOI 10.1109/CSMR.2013.41
   Vasilescu B, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P514, DOI 10.1109/MSR.2015.77
   Ventura SL, 2015, SEEING NONSTARTS SOM
   Wang DJ, 2012, SOC NETWORKS, V34, P396, DOI 10.1016/j.socnet.2012.01.003
   Watts DJ, 1998, NATURE, V393, P440, DOI 10.1038/30918
   Wiese IS, 2016, PROC IEEE INT CONF S, P345, DOI 10.1109/ICSME.2016.13
   Winkler WE, 2006, Work. Pap.
   Wolf T, 2009, IEEE SOFTWARE, V26, P58, DOI 10.1109/MS.2009.16
   Xiong Y., 2017, SEKE, P578, DOI [10.18293/SEKE2017-062, DOI 10.18293/SEKE2017-062]
   Zhou MH, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2876443
   Zhu J, 2019, P 16 INT C MIN SOFTW
NR 52
TC 19
Z9 20
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2020
VL 25
IS 2
SI SI
BP 1136
EP 1167
DI 10.1007/s10664-019-09786-7
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA KT0VU
UT WOS:000518729800004
DA 2024-07-18
ER

PT J
AU Amálio, N
   Briand, L
   Kelsen, P
AF Amalio, Nuno
   Briand, Lionel
   Kelsen, Pierre
TI An experimental scrutiny of visual design modelling: VCL up against UML
   plus OCL
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Design; Modelling; UML; OCL; VCL; Diagrams; Experiment
ID WITHIN-SUBJECTS DESIGNS; FALSE DISCOVERY RATE; CONFIDENCE-INTERVALS;
   COGNITIVE DIMENSIONS; STRUCTURED ANALYSIS; FORMAL SEMANTICS; EFFECT
   SIZE; STATECHARTS; NOTATIONS
AB The graphical nature of prominent modelling notations, such as the standards UML and SysML, enables them to tap into the cognitive benefits of diagrams. However, these notations hardly exploit the cognitive potential of diagrams and are only partially graphical with invariants and operations being expressed textually. The Visual Contract Language (VCL) aims at improving visual modelling; it tries to (a) maximise diagrammatic cognitive effectiveness, (b) increase visual expressivity, and (c) level of rigour and formality. It is an alternative to UML that does largely pictorially what is traditionally done textually. The paper presents the results of a controlled experiment carried out four times in different academic settings and involving 43 participants, which compares VCL against UML and OCL and whose goal is to provide insight on benefits and limitations of visual modelling. The paper's hypotheses are evaluated using a crossover design with the following tasks: (i) modelling of state space, invariants and operations, (ii) comprehension of modelled problem, (iii) detection of model defects and (iv) comprehension of a given model. Although visual approaches have been used and advocated for decades, this is the first empirical investigation looking into the effects of graphical expression of invariants and operations on modelling and model usage tasks. Results suggest VCL benefits in defect detection, model comprehension, and modelling of operations, providing some empirical evidence on the benefits of graphical software design.
C1 [Amalio, Nuno] Birmingham City Univ, Fac Comp Engn & Built Environm, Curzon St, Birmingham B4 7XG, W Midlands, England.
   [Briand, Lionel] Univ Ottawa, Dept EECS, Ottawa, ON, Canada.
   [Briand, Lionel] Univ Luxembourg, SnT Ctr, 29 Ave JF Kennedy, L-1855 Esch Sur Alzette, Luxembourg.
   [Kelsen, Pierre] Univ Luxembourg, Fac Sci Technol & Commun, Maison Nombre,6 Ave Fonte, L-4364 Esch Sur Alzette, Luxembourg.
C3 Birmingham City University; University of Ottawa; University of
   Luxembourg; University of Luxembourg
RP Amálio, N (corresponding author), Birmingham City Univ, Fac Comp Engn & Built Environm, Curzon St, Birmingham B4 7XG, W Midlands, England.
EM nuno.amalio@bcu.ac.uk; lbriand@uottawa.ca; pierre.kelsen@uni.lu
FU University of Luxembourg; Canada Research Chairs program
FX A large part of the research presented in this paper was done during
   Amalio's postdoctoral research work funded by the University of
   Luxembourg. Lionel Briand's research was undertaken, in part, thanks to
   funding from the Canada Research Chairs program. We thank the reviewers
   for their suggestions and challenging of the paper; this led to many
   improvements that resulted in a better article. We thank Christian Glodt
   for his help with the VCL tool, and all participants of the controlled
   experiment presented here at the Faculty of Sciences of the University
   of Lisbon (FCUL), Faculty of Sciences and Technology of the New
   University of Lisbon (FCT/UNL), University of Luxembourg and University
   of York (UY). Several people at the host institutions made the
   controlled experiment possible, namely, Isabel Nunes (FCUL), Joao
   Arauujo (FCT/UNL), Fiona Polack (UY), Antonia Lopes (FCUL) and Ana
   Moreira (FCT/UNL).
CR Abrial Jean-Raymond., 1996, B BOOK ASSIGNING MEA
   Algina J, 2005, PSYCHOL METHODS, V10, P317, DOI 10.1037/1082-989X.10.3.317
   Ali S, 2014, SOFTW SYST MODEL, V13, P1189, DOI 10.1007/s10270-012-0293-5
   Amálio N, 2005, LECT NOTES COMPUT SC, V3455, P262
   Amálio N, 2004, LECT NOTES COMPUT SC, V3308, P418
   Amalio N, 2012, TRLASSY1209 U LUX
   Amalio N, 2016, LNCS, V10009
   Amalio N, 2007, THESIS
   Amalio N, 2010, LNAI, V6170
   Amalio N, 2010, VL HCC
   Amalio N, 2011, TRLASSY1105 U LUX
   Amalio N, 2011, FM
   Amalio N, 2006, SOFTWARE SPECIFICATI, P81
   Amalio N, 2013, TRLASSY1305 U LUX
   Amálio N, 2020, EMERGENCE COMPLEX CO, V35, P255, DOI 10.1007/978-3-030-15792-0_11
   Amálio N, 2011, ELECTRON NOTES THEOR, V279, P3, DOI 10.1016/j.entcs.2011.11.035
   Amálio N, 2015, SCI COMPUT PROGRAM, V98, P52, DOI 10.1016/j.scico.2014.05.002
   Amalio N, 2010, LECT NOTES COMPUT SC, V6210, P151
   Amálio N, 2010, LECT NOTES BUS INF, V50, P261
   [Anonymous], INT S EMP SOFTW ENG
   [Anonymous], 1992, The Z Notation
   [Anonymous], 2013, PSYCHOL SCI
   [Anonymous], 2012, TECH REP
   [Anonymous], 2000, STAT CONFIDENCE CONF
   Arisholm E, 2004, IEEE T SOFTWARE ENG, V30, P521, DOI 10.1109/TSE.2004.43
   Arisholm E, 2006, IEEE T SOFTWARE ENG, V32, P365, DOI 10.1109/TSE.2006.59
   Benjamini Y, 2001, ANN STAT, V29, P1165
   BENJAMINI Y, 1995, J R STAT SOC B, V57, P289, DOI 10.1111/j.2517-6161.1995.tb02031.x
   Blackwell AF, 2001, LECT NOTES ARTIF INT, V2117, P325
   Blackwell AF, 2001, ARTIF INTELL REV, V15, P95, DOI 10.1023/A:1006689708296
   Booch G., 2007, Object-Oriented Analysis and Design with Applications, Vthird
   BOTTONI P, 2001, LNCS, V2185, P257
   Briand L, 2011, EMPIRICAL SOFTWARE E
   Briand LC, 2005, IEEE T SOFTWARE ENG, V31, P833, DOI 10.1109/TSE.2005.105
   Broy M, 2011, SOFTW SYST MODEL, V10, P441, DOI 10.1007/s10270-011-0207-y
   Chen PCH, 2004, DIAGRAMS 2004
   Clark T, 2000, TECH REP
   COHEN J, 1994, AM PSYCHOL, V49, P997, DOI 10.1037/0003-066X.50.12.1103
   Cohen J., 1988, STAT POWER ANAL BEHA
   Cook S, 1999, TOOLS 99
   Cumming G, 2001, EDUC PSYCHOL MEAS, V61, P532, DOI 10.1177/0013164401614002
   Cumming G, 2012, Understanding the new statistics effect sizes, confidence intervals, and meta-analysis, V1
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   Dobing B, 2006, COMMUN ACM, V49, P109, DOI 10.1145/1125944.1125949
   Ehrig K, 2006, ELECTRON NOTES THEOR, V152, P23, DOI 10.1016/j.entcs.2006.01.012
   Evans A, 1999, LECT NOTES COMPUT SC, V1618, P336
   Falessi D, 2017, EMPIRICAL SOFTWARE E
   Farias Kleinner, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P219, DOI 10.1007/978-3-642-33666-9_15
   Farias K, 2012, 9 INT C ASP OR SOFTW, P73
   Ferguson E., 1992, ENG MINDS EYE
   FERGUSON ES, 1977, SCIENCE, V197, P827, DOI 10.1126/science.197.4306.827
   Fish A, 2005, J VISUAL LANG COMPUT, V16, P541, DOI 10.1016/j.jvlc.2005.03.001
   France RB, 2006, COMPUTER, V39, P59, DOI 10.1109/MC.2006.65
   Franz VH, 2012, PSYCHON B REV, V19, P395, DOI 10.3758/s13423-012-0230-1
   GLASS RL, 1994, IEEE SOFTWARE, V11, P6
   Goolkasian P, 1996, MEM COGNITION, V24, P584, DOI 10.3758/BF03201085
   Goolkasian P, 2000, J GEN PSYCHOL, V127, P439, DOI 10.1080/00221300009598596
   Green T. R. G., 1989, People and Computers V. Proceedings of the Fifth Conference of the British Computer Society Human-Computer Interaction Specialist Group, P443
   Green TRG, 1996, J VISUAL LANG COMPUT, V7, P131, DOI 10.1006/jvlc.1996.0009
   GREENWALD AG, 1976, PSYCHOL BULL, V83, P314, DOI 10.1037/0033-2909.83.2.314
   Grissom R. J., 2005, EFFECT SIZES RES BRO
   HAREL D, 1988, COMMUN ACM, V31, P514, DOI 10.1145/42411.42414
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   HAREL D, 1992, COMPUTER, V25, P8, DOI 10.1109/2.108047
   Henderson-Sellers B, 1999, LECT NOTES COMPUT SC, V1723, P550
   Henderson-Sellers B., 2005, Software Systems Modeling, V4, P4, DOI DOI 10.1007/s10270-004-0076-8
   HOLM S, 1979, SCAND J STAT, V6, P65
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   ISO, 2002, 135682002 ISO ISOIEC
   Kelley K, 2007, J STAT SOFTW, V20, P1
   Kelsen P, 2006, ICSOFT 2006: Proceedings of the First International Conference on Software and Data Technologies, Vol 1, P63
   Kelsen P, 2008, LECT NOTES COMPUT SC, V5301, P690, DOI 10.1007/978-3-540-87875-9_48
   KIM YG, 1995, COMMUN ACM, V38, P103, DOI 10.1145/203241.203265
   Lange C. F. J., 2006, 28th International Conference on Software Engineering Proceedings, P401, DOI 10.1145/1134285.1134341
   LARKIN JH, 1987, COGNITIVE SCI, V11, P65, DOI 10.1016/S0364-0213(87)80026-5
   Leemans J, 2012, TRLASSY1204 U LUX
   Leemans J, 2012, S VIS LANG HUM CEN C, P257, DOI 10.1109/VLHCC.2012.6344542
   MEYER B, 1992, COMPUTER, V25, P40, DOI 10.1109/2.161279
   Micskei Z, 2011, SOFTW SYST MODEL, V10, P489, DOI 10.1007/s10270-010-0157-9
   Moody D, 2009, LNCS, V5452
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   Moody DL, 2002, ECIS 2002
   Mussbacher G, 2012, CMA 12
   Newcombe RG, 1998, STAT MED, V17, P873, DOI 10.1002/(SICI)1097-0258(19980430)17:8<873::AID-SIM779>3.0.CO;2-I
   Nuzzo R, 2014, NATURE, V506, P150, DOI 10.1038/506150a
   Oppenheim A.N., 1996, QUESTIONNAIRE DESIGN
   Otero M. C., 2002, Empirical Software Engineering, V7, P27, DOI 10.1023/A:1014819010099
   Petre M, 1995, COMMUNICATIONS ACM, V6
   Pfister R, 2013, ADV COGNITIVE PSYCHO
   Pin-Shan Chen P., 1976, ACM Transactions on Database Systems, V1, P9, DOI 10.1145/320434.320440
   Pinker S., 1990, Artif. Intell. Future Testing, P73
   Purchase HC, 2002, VISSOFT 2002: FIRST INTERNATIONAL WORKSHOP ON VISUALIZING SOFTWARE FOR UNDERSTANDING AND ANALYSIS, PROCEEDINGS, P13, DOI 10.1109/VISSOF.2002.1019790
   Purchase HC, 2001, APVIS 01
   R Core Team R, 2015, LANG ENV STAT COMP
   Ricca F, 2007, ICSE 2007
   Ricca F, 2010, IEEE T SOFTWARE ENG, V36, P96, DOI 10.1109/TSE.2009.69
   Richters M., 1998, Conceptual Modeling - ER'98. 17th International Conference on Conceptual Modeling. Proceedings, P449
   Richters M, 2001, THESIS
   ROSS DT, 1977, IEEE T SOFTWARE ENG, V3, P16, DOI 10.1109/TSE.1977.229900
   ROSS DT, 1977, IEEE T SOFTWARE ENG, V3, P6, DOI 10.1109/TSE.1977.229899
   Rumbaugh J., 1991, OBJECT ORIENTED MODE
   Rumpe B, 2011, SOFTW SYST MODEL, V10, P439, DOI 10.1007/s10270-011-0210-3
   Salman I, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P666, DOI 10.1109/ICSE.2015.82
   SHIMOJIMA A, 1996, LOGICAL REASONING DI
   Staron M, 2006, J SYST SOFTWARE, V79, P727, DOI 10.1016/j.jss.2005.09.014
   Stevens P., 2002, SOFTWARE SYSTEMS MOD, V1, P68, DOI DOI 10.1007/S10270-002-0002-X
   Störrle H, 2003, 200S IEEE SYMPOSIUM ON HUMAN CENTRIC COMPUTING LANGUAGES AND ENVIRONMENTS, P129
   Tilley S., 2003, Proceedings of the 21st Annual International Conference on Documentation, P184
   Tobias E, 2012, S VIS LANG HUM CEN C, P269, DOI 10.1109/VLHCC.2012.6344548
   Torchiano M, 2004, PROGRAM COMPREHENSIO
   Varró D, 2002, LECT NOTES COMPUT SC, V2505, P378
   Wieringa R, 1998, ACM COMPUT SURV, V30, P459, DOI 10.1145/299917.299919
   Wilcox RR, 2011, J APPL STAT, V38, P1359, DOI 10.1080/02664763.2010.498507
   Wilcox RR, 2003, PSYCHOL METHODS, V8, P254, DOI 10.1037/1082-989X.8.3.254
   Woodcock J., 1996, Using Z: Specification, Refinement, and Proof
   YUEN KK, 1974, BIOMETRIKA, V61, P165, DOI 10.2307/2334299
   Zhang JJ, 1997, COGNITIVE SCI, V21, P179
NR 117
TC 0
Z9 0
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2020
VL 25
IS 2
SI SI
BP 1205
EP 1258
DI 10.1007/s10664-019-09784-9
EA DEC 2019
PG 54
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA KT0VU
UT WOS:000504618300001
OA Green Submitted, hybrid, Green Accepted
DA 2024-07-18
ER

PT J
AU Zou, WQ
   Xuan, JF
   Xie, XY
   Chen, ZY
   Xu, BW
AF Zou, Weiqin
   Xuan, Jifeng
   Xie, Xiaoyuan
   Chen, Zhenyu
   Xu, Baowen
TI How does code style inconsistency affect pull request integration? An
   exploratory study on 117 GitHub projects
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Pull request; Code style inconsistency; Exploratory study
AB GitHub is a popular code platform that provides infrastructures to facilitate collaborative development. A Pull Request (PR) is one of the key ideas to support collaboration. Developers are encouraged to submit PRs to ask for the integration of their contributions. In practice, not all submitted PRs can be integrated into the codebase by project maintainers. Existing studies have investigated factors affecting PR integration. Nevertheless, the code style of PRs, which is largely considered by project maintainers, has not been deeply studied yet. In this paper, we performed an exploratory analysis on the effect of code style on PR integration in GitHub. We modeled the code style via the inconsistency between a submitted PR and the existing code in its target codebase. Such modeling makes our study not limited by a specific definition of code style. We conducted our experiments on 50,092 closed PRs in 117 Java projects. Our findings show that: (1) There indeed exists code style inconsistency between PRs and the codebase. (2) Several code style criteria on how to use spaces or indents, make comments, and write code lines with a suitable length, tend to show more inconsistency among PRs. (3) A PR that is consistent with the current code style tends to be merged into the codebase more easily. (4) A PR that violates the current code style is likely to take more time to get closed. Our study shows evidence to developers about how to deliver better contributions to facilitate efficient collaboration.
C1 [Zou, Weiqin; Chen, Zhenyu; Xu, Baowen] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Jiangsu, Peoples R China.
   [Xuan, Jifeng; Xie, Xiaoyuan] Wuhan Univ, Sch Comp Sci, Wuhan, Hubei, Peoples R China.
C3 Nanjing University; Wuhan University
RP Chen, ZY (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Jiangsu, Peoples R China.
EM wqzou@smail.nju.edu.cn; jxuan@whu.edu.cn; xxie@whu.edu.cn;
   zychen@nju.edu.cn; bwxu@nju.edu.cn
RI Xuan, Jifeng/F-2177-2016; Xu, Baowen/IXW-4882-2023
OI Xuan, Jifeng/0000-0002-2968-3496; Xu, Baowen/0000-0001-7743-1296
CR Aiken L.S., 2013, APPL MULTIPLE REGRES
   Allamanis M, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P281, DOI 10.1145/2635868.2635883
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Balachandran V, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P931, DOI 10.1109/ICSE.2013.6606642
   Barto K., 2013, MuMIn: Multi-model inference
   Bates DM, 2010, LME4 MIXED DEFFECTS
   BERRY RE, 1985, COMMUN ACM, V28, P80, DOI 10.1145/2465.2469
   Boogerd C, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P41, DOI 10.1109/MSR.2009.5069479
   Bridger A, 2001, C CODING STANDARDS
   Butler S, 2009, WORK CONF REVERSE EN, P31, DOI 10.1109/WCRE.2009.50
   Cohen J., 1977, STAT POWER ANAL BEHA, pxi, DOI DOI 10.1016/B978-0-12-179060-8.50004-9
   Cohen-Goldberg AM, 2012, J MEM LANG, V67, P184, DOI 10.1016/j.jml.2012.03.007
   de Lima ML, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P1567, DOI 10.1145/2695664.2695884
   Google, 2013, GOOGL JAV COD STYL
   Gousios G, 2016, PROC INT CONF SOFTW, P285, DOI 10.1145/2884781.2884826
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   Gousios G, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P358, DOI 10.1109/ICSE.2015.55
   Graham MH, 2003, ECOLOGY, V84, P2809, DOI 10.1890/02-3114
   Hauke J, 2011, QUAEST GEOGR, V30, P87, DOI 10.2478/v10117-011-0021-1
   Hellendoorn VJ, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P157, DOI 10.1109/MSR.2015.22
   Jaeger FT, 2011, FITTING EVALUATING R
   Jiarpakdee J, 2018, PROC IEEE INT CONF S, P92, DOI 10.1109/ICSME.2018.00018
   Johnson PCD, 2014, METHODS ECOL EVOL, V5, P944, DOI 10.1111/2041-210X.12225
   Kabacoff R., 2015, R ACTION DATA ANAL G
   Kalliamvakou E., 2014, P 11 WORKING C MININ, P92, DOI DOI 10.1145/2597073.2597074
   Kalliamvakou E, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P574, DOI 10.1109/ICSE.2015.74
   Lemhöfer K, 2008, J EXP PSYCHOL LEARN, V34, P12, DOI 10.1037/0278-7393.34.1.12
   Mäntylä MV, 2009, IEEE T SOFTWARE ENG, V35, P430, DOI 10.1109/TSE.2008.71
   Marca D., 1981, SIGPLAN Notices, V16, P70, DOI 10.1145/988131.988140
   McConnell S. C., 1993, Code complete: A practical handbook of software construction
   MIARA RJ, 1983, COMMUN ACM, V26, P861, DOI 10.1145/182.358437
   Nakagawa S, 2013, METHODS ECOL EVOL, V4, P133, DOI 10.1111/j.2041-210x.2012.00261.x
   OMAN PW, 1990, COOPERATION, P244, DOI 10.1145/100348.100385
   Oracle, 1999, OR JAV COD STYL
   Padhye R., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, P332, DOI 10.1145/2597073.2597113
   Rahman M. M, 2014, P 11 WORK C MIN SOFT, P364, DOI DOI 10.1145/2597073.2597121
   Rees M. J., 1982, SIGPLAN Notices, V17, P33, DOI 10.1145/948086.948088
   Rigby PC, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P541, DOI 10.1145/1985793.1985867
   Sadowski C, 2018, COMMUN ACM, V61, P58, DOI 10.1145/3188720
   Selya AS, 2012, FRONT PSYCHOL, V3, DOI 10.3389/fpsyg.2012.00111
   Smit M., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P504, DOI 10.1109/ICSM.2011.6080819
   Soares DM, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P1541, DOI 10.1145/2695664.2695856
   Tsay J, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P356, DOI 10.1145/2568225.2568315
   Tsay J, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P144, DOI 10.1145/2635868.2635882
   van der Veen E, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P357, DOI 10.1109/MSR.2015.40
   Vasilescu B, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P805, DOI 10.1145/2786805.2786850
   Vermeulen A, 2000, The elements of Java (tm) style
   Yu Y, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P367, DOI 10.1109/MSR.2015.42
   Yu Y, 2014, PROC IEEE INT CONF S, P609, DOI 10.1109/ICSME.2014.107
   Zhang X, 2018, PROC IEEE INT CONF S, P228, DOI 10.1109/ICSME.2018.00032
   Zhang YY, 2014, PROCEEDINGS OF 2014 INTERNATIONAL SYMPOSIUM - FEMALE SURVIVAL AND DEVELOPMENT, P37
NR 51
TC 19
Z9 19
U1 0
U2 13
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2019
VL 24
IS 6
BP 3871
EP 3903
DI 10.1007/s10664-019-09720-x
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JT6XW
UT WOS:000501131100020
DA 2024-07-18
ER

PT J
AU Binkley, D
   Gold, N
   Islam, S
   Krinke, J
   Yoo, S
AF Binkley, David
   Gold, Nicolas
   Islam, Syed
   Krinke, Jens
   Yoo, Shin
TI A comparison of tree- and line-oriented observational slicing
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Program slicing; Observational slicing; ORBS; XML
AB Observation-based slicing and its generalization observational slicing are recently-introduced, language-independent dynamic slicing techniques. They both construct slices based on the dependencies observed during program execution, rather than static or dynamic dependence analysis. The original implementation of the observation-based slicing algorithm used lines of source code as its program representation. A recent variation, developed to slice modelling languages (such as Simulink), used an XML representation of an executable model. We ported the XML slicer to source code by constructing a tree representation of traditional source code through the use of srcML. This work compares the tree- and line-based slicers using four experiments involving twenty different programs, ranging from classic benchmarks to million-line production systems. The resulting slices are essentially the same size for the majority of the programs and are often identical. However, structural constraints imposed by the tree representation sometimes force the slicer to retain enclosing control structures. It can also "bog down" trying to delete single-token subtrees. This occasionally makes the tree-based slices larger and the tree-based slicer slower than a parallelised version of the line-based slicer. In addition, a Java versus C comparison finds that the two languages lead to similar slices, but Java code takes noticeably longer to slice. The initial experiments suggest two improvements to the tree-based slicer: the addition of a size threshold, for ignoring small subtrees, and subtree replacement. The former enables the slicer to run 3.4 times faster while producing slices that are only about 9% larger. At the same time the subtree replacement reduces size by about 8-12% and allows the tree-based slicer to produce more natural slices.
C1 [Binkley, David] Loyola Univ Maryland, Comp Sci, Baltimore, MD 21210 USA.
   [Gold, Nicolas; Islam, Syed; Krinke, Jens] UCL, Dept Comp Sci, London, England.
   [Yoo, Shin] Korea Adv Inst Sci & Technol, Sch Comp, Daejeon, South Korea.
C3 Loyola University Maryland; University of London; University College
   London; Korea Advanced Institute of Science & Technology (KAIST)
RP Binkley, D (corresponding author), Loyola Univ Maryland, Comp Sci, Baltimore, MD 21210 USA.
EM binkley@cs.loyola.edu
RI Yoo, Shin/E-3247-2015; Krinke, Jens/E-9011-2011
OI Yoo, Shin/0000-0002-0836-6993; Krinke, Jens/0000-0003-1009-2861;
   Binkley, Dave/0000-0003-0059-4024
FU NSF [1626262]; Next-Generation Information Computing Development Program
   through the National Research Foundation of Korea(NRF) - Ministry of
   Science, ICT [2017M3C4A7068179]; National Research Foundation of Korea
   (NRF) - Korea government (MEST) [NRF-2016R1C1B1011042]
FX A special thanks to Mark Harman for many interesting conversations on
   the use of observational slicing. Dave Binkley is supported by NSF grant
   1626262. Shin Yoo is supported by Next-Generation Information Computing
   Development Program through the National Research Foundation of
   Korea(NRF) funded by the Ministry of Science, ICT (No. 2017M3C4A7068179)
   and the National Research Foundation of Korea (NRF) grant funded by the
   Korea government (MEST) (Grant No. NRF-2016R1C1B1011042). The authors
   acknowledge the use of the UCL Legion High Performance Computing
   Facility (Legion@UCL), and associated support services, in the
   completion of this work. They also thank the Software Infrastructure
   Repository for the provision of subject programs.
CR Agrawal H., 1990, P ACM SIGPLAN 90 C P
   [Anonymous], IEEE INT WORKSH PROG
   [Anonymous], 2006, P 28 INT C SOFTW ENG
   Barpanda SS, 2011, IET SOFTW, V5, P425, DOI 10.1049/iet-sen.2010.0141
   Beszedes A, 2006, INT WORKSH SOURC COD
   Beszedes A, 2001, P 5 C SOFTW MAINT RE
   Beszedes a, 2002, P 18 INT C SOFTW MAI
   Binkley D, 2001, PROC IEEE INT CONF S, P82, DOI 10.1109/ICSM.2001.972714
   Binkley D, 2017, INT WORKSH SOURC COD
   Binkley D, 2014, P 22 ACM SIGSOFT INT
   Binkley D, 2015, INT WORK C SOURC COD
   Binkley D, 2010, J SYST SOFTWARE, V83, P96, DOI 10.1016/j.jss.2009.03.038
   Cleve H., 2000, INT WORKSH AUT DEB
   Danicic S., 2004, 1 INT WORKSH PROGR L
   Danicic S., 2002, SOURC COD AN MAN SCA
   De Lucia A, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P363, DOI 10.1109/CSMR.2003.1192445
   DeMillo RA, 1996, P INT S SOFTW TEST A
   GALLAGHER KB, 1991, IEEE T SOFTWARE ENG, V17, P751, DOI 10.1109/32.83912
   Gallagher KB, 2006, INT WORKSH SOURC COD
   Gold NE, 2017, P 25 ACM SIGSOFT INT
   Harman M., 1997, 5 IEEE INT WORKSH PR
   Harman M, 2009, ACM T PROGR LANG SYS, V32, DOI 10.1145/1596527.1596528
   Hodován R, 2017, PROC IEEE INT CONF S, P194, DOI 10.1109/ICSME.2017.26
   HORWITZ S, 1990, ACM T PROGR LANG SYS, V12, P26, DOI [10.1145/77606.77608, 10.1145/960116.53994]
   Horwitz S, 1988, ACM SIGPLAN CONFEREN
   Nguyen HV, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P369, DOI 10.1145/2786805.2786872
   Islam S., 2016, 2016 IEEE 24 INT C P, P1
   Jaffar J, 2012, P SAS 12, V7460
   Jiang S, 2014, INT WORK C SOURC COD
   KOREL B, 1988, INFORM PROCESS LETT, V29, P155, DOI 10.1016/0020-0190(88)90054-3
   KOREL B, 1990, J SYST SOFTWARE, V13, P187, DOI 10.1016/0164-1212(90)90094-3
   Krinke J, 2003, INT WORKSH SOURC COD
   Laurence MR, 2004, THESIS
   Mamun M.A.A., 2017, P 27 INT WORKSHOP SO, P255, DOI [10.1145/3143434.3143445, DOI 10.1145/3143434.3143445]
   McPeak S, 2006, DELTA
   Mund GB, 2006, J SYST SOFTWARE, V79, P791, DOI 10.1016/j.jss.2005.07.024
   NASA, 2017, DAIDALUS DET AV AL L
   NASA, 2017, GMAT GEN MISS AN TOO
   ORSO A, 2001, P IEEE INT C SOFTW M
   Ottenstein KJ, 1984, P ACM SIGSOFT SIGPLA
   Regehr J, 2012, P ACM SIGPLAN C PROG
   Reps T, 1996, DAGST SEM PART EV, V1110
   Sun Chengnian, 2018, P 40 INT C SOFTW ENG
   Szegedi A, 2005, DYNAMIC SLICING JAVA
   TUKEY JW, 1949, BIOMETRICS, V5, P99, DOI 10.2307/3001913
   Ward M, 2003, INT WORKSH SOURC COD
   WEISER M, 1982, COMMUN ACM, V25, P446, DOI 10.1145/358557.358577
   Weiser M., 1981, P 5 INT C SOFTW ENG
   Yoo S, 2014, IEEE INT WORK C SO, P175, DOI 10.1109/SCAM.2014.26
   Zeller A, 2002, IEEE T SOFTWARE ENG, V28, P183, DOI 10.1109/32.988498
   Zeller A, 1999, EUR SOFTW ENG C FDN
   Zhang X, 2004, P ACM SIGPLAN 2004 C
   Zhang XY, 2007, EMPIR SOFTW ENG, V12, P143, DOI 10.1007/s10664-006-9007-3
NR 53
TC 14
Z9 14
U1 1
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2019
VL 24
IS 5
SI SI
BP 3077
EP 3113
DI 10.1007/s10664-018-9675-9
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IS1CL
UT WOS:000481889700009
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Liva, G
   Khan, MT
   Pinzger, M
AF Liva, Giovanni
   Khan, Muhammad Taimoor
   Pinzger, Martin
TI Semantics-driven extraction of timed automata from Java programs
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Program verification; Time semantics; Timed automata
ID SPECIFICATION; BEHAVIOR; DESIGN
AB The automatic verification of time properties of models extracted from programs is challenging, mainly because modern programming languages, such as Java, represent time without a proper semantics. Current approaches to extract time models from source code either represent time only as a tree-like sequence of events or require developers to manually provide a formal model of the time behavior. This makes it difficult for software developers to verify various aspects of their systems, such as timeouts, delays and periodicity of the execution. In this paper, we introduce a formal definition of the time semantics for the Java programming language. Based on the semantics, we present an approach to automatically extract timed automata and their time constraints from Java programs at method level. First, our approach detects the Java statements that involve time, from which it then extracts the timed automata. Our extracted automata are directly amenable to the verification of time properties of the corresponding Java methods. We evaluated the accuracy of our approach on twenty open source Java projects that implement time behavior in their source code. The results show that our approach achieves 100% precision and recall in identifying time related information. They also show that 95% of the timed automata extracted from source code correctly model the time behavior of the method. Finally, we show the applicability of our timed automata to identify eight real errors in four open source Apache systems.
C1 [Liva, Giovanni; Pinzger, Martin] Alpen Adria Univ Klagenfurt, Software Engn Res Grp, Klagenfurt, Austria.
   [Khan, Muhammad Taimoor] Univ Surrey, Surrey Ctr Cyber Secur, Guildford, Surrey, England.
C3 University of Klagenfurt; University of Surrey
RP Liva, G (corresponding author), Alpen Adria Univ Klagenfurt, Software Engn Res Grp, Klagenfurt, Austria.
EM giovanni.liva@aau.at; m.t.khan@surrey.ac.uk; martin.pinzger@aau.at
OI Khan, Muhammad Taimoor/0000-0002-5752-6420
FU University of Klagenfurt
FX Open access funding provided by University of Klagenfurt.
CR Abadi M, 2012, THEORY OBJECTS
   Abrahamson J, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P598, DOI 10.1145/2591062.2591134
   ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   Alur R., 1999, Computer Aided Verification. 11th International Conference, CAV'99. Proceedings (Lecture Notes in Computer Science Vol.1633), P8
   [Anonymous], 2014, NEW VIEW STAT
   [Anonymous], 1998, P 25 ACM SIGPLAN SIG, DOI DOI 10.1145/268946.268961
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Baliga A, 2011, IEEE T DEPEND SECURE, V8, P670, DOI 10.1109/TDSC.2010.38
   Barrett C., 2010, P 8 INT WORKSHOP SAT, V13, P14
   Behrmann G, 2004, LECT NOTES COMPUT SC, V3185, P200
   Bengtsson J., 1996, Computer Aided Verification. 8th International Conference, CAV '96. Proceedings, P244
   BESCHASTNIKH I., 2011, P 19 ACM SIGSOFT S 1, P267, DOI DOI 10.1145/2025113.2025151
   Beschastnikh I., 2016, Queue, V14, p50:91, DOI DOI 10.1145/2927299.2940294
   BESCHASTNIKH I, 2012, ACM SIGOPS OPERATING, V45, P39
   Beschastnikh I, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P468, DOI 10.1145/2568225.2568246
   Bogdanas D, 2015, ACM SIGPLAN NOTICES, V50, P445, DOI [10.1145/2775051.2676982, 10.1145/2676726.2676982]
   Bollella G, 2000, COMPUTER, V33, P47, DOI 10.1109/2.846318
   Börger E, 2005, THEOR COMPUT SCI, V336, P235, DOI 10.1016/j.tcs.2004.11.008
   Cardelli L, 1998, LECT NOTES COMPUT SC, V1378, P140, DOI 10.1007/BFb0053547
   Cicirelli F, 2013, FED CONF COMPUT SCI, P1373
   Deharbe D., 2011, 1 INT WORKSH PROOF E
   DIJKSTRA EW, 1972, COMMUN ACM, V15, P859, DOI 10.1145/355604.361591
   Ernst MD, 2007, SCI COMPUT PROGRAM, V69, P35, DOI 10.1016/j.scico.2007.01.015
   Farzan A, 2004, LECT NOTES COMPUT SC, V3114, P501
   Filaretti D, 2014, LECT NOTES COMPUT SC, V8586, P567
   Georgiou Chryssis, 2013, 2013 IEEE 12th International Symposium on Network Computing and Applications (NCA), P235, DOI 10.1109/NCA.2013.17
   Guth D, 2013, FORMAL SEMANTICS PYT, V3, P3
   Hakimipour Niusha, 2010, Proceedings of the 2010 8th IEEE International Conference on Software Engineering and Formal Methods (SEFM 2010), P299, DOI 10.1109/SEFM.2010.39
   Hatcliff J., 2001, CONCUR 2001 - Concurrency Theory. 12th International Conference. Proceedings (Lecture Notes in Computer Science Vol.2154), P39
   Hathhorn C, 2015, ACM SIGPLAN NOTICES, V50, P336, DOI [10.1145/2813885.2737979, 10.1145/2737924.2737979]
   Havelund K., 2000, Int. J. Softw. Tools Technol. Transfer, V2, P366, DOI [DOI 10.1007/S100090050043, 10.1007/s100090050043]
   Hennessy M., 1988, An algebraic theory of processes
   Henzinger T. A., 2002, Computer Aided Verification. 14th International Conference, CAV 2002. Proceedings (Lecture Notes in Computer Science Vol.2404), P526
   Hune T., 2001, Nordic Journal of Computing, V8, P43
   Jayaraman S, 2015, INT CONF CONTEMP, P548, DOI 10.1109/IC3.2015.7346742
   Khan MT, 2018, P IEEE, V106, P129, DOI 10.1109/JPROC.2017.2725642
   Laporte C.Y., 2012, Software Quality Professional, V14, P14
   Larsen K. G., 1997, International Journal on Software Tools for Technology Transfer, V1, P134, DOI 10.1007/s100090050010
   Larsen K. G., 1995, P WORKSH VER CONTR H, V1066, P575
   Le TDB, 2015, IEEE INT CONF AUTOM, P115, DOI 10.1109/ASE.2015.83
   Lemieux C, 2015, IEEE INT CONF AUTOM, P81, DOI 10.1109/ASE.2015.71
   Lindahl M, 1998, LECT NOTES COMPUT SC, V1384, P281, DOI 10.1007/BFb0054178
   Liva G, 2018, P IEEE ACM C FORM ME
   Liva G, 2017, IEEE INT WORK C SO, P91, DOI 10.1109/SCAM.2017.9
   Lo D, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P345, DOI 10.1145/1595696.1595761
   McCarthy J, 1964, TECH REP
   McCarthy John, 1993, Program Verification: Fundamental Issues in Computer Science, P35
   Milner R., 1999, Communication and Mobile Systems: the -calculus
   Pacheco C, 2005, LECT NOTES COMPUT SC, V3586, P504
   Park D, 2015, ACM SIGPLAN NOTICES, V50, P346, DOI [10.1145/2813885.2737991, 10.1145/2737924.2737991]
   Plotkin G. D., 1977, Theoretical Computer Science, V5, P223, DOI 10.1016/0304-3975(77)90044-5
   Plotkin G. D., 1981, A structural approach to operational semantics
   Rosu G, 2010, J LOGIC ALGEBR PROGR, V79, P397, DOI 10.1016/j.jlap.2010.03.012
   Sangiorgi D., 2003, PI CALCULUS THEORY M
   Schiller TW, 2012, ACM SIGPLAN NOTICES, V47, P95, DOI 10.1145/2398857.2384624
   Stark R.F., 2012, JAVA JAVA VIRTUAL MA
   Steel T, 1969, P IFIP WG FORM LANG, P25
   Tristan JB, 2009, THESIS
   Walkinshaw Neil, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P248, DOI 10.1109/ASE.2008.35
   WRIGHT AK, 1994, INFORM COMPUT, V115, P38, DOI 10.1006/inco.1994.1093
   Yang YX, 2016, IEEE INT CONF AUTOM, P852, DOI 10.1145/2970276.2970293
   Yovine S., 1997, International Journal on Software Tools for Technology Transfer, V1, P123, DOI 10.1007/s100090050009
NR 62
TC 2
Z9 2
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2019
VL 24
IS 5
SI SI
BP 3114
EP 3150
DI 10.1007/s10664-019-09699-5
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IS1CL
UT WOS:000481889700010
OA hybrid, Green Accepted
DA 2024-07-18
ER

PT J
AU Cruz, L
   Abreu, R
   Lo, D
AF Cruz, Luis
   Abreu, Rui
   Lo, David
TI To the attention of mobile software developers: guess what, test your
   app!
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software testing; Mobile applications; Open source software; Software
   quality; Software metrics
AB Software testing is an important phase in the software development lifecycle because it helps in identifying bugs in a software system before it is shipped into the hand of its end users. There are numerous studies on how developers test general-purpose software applications. The idiosyncrasies of mobile software applications, however, set mobile apps apart from general-purpose systems (e.g., desktop, stand-alone applications, web services). This paper investigates working habits and challenges of mobile software developers with respect to testing. A key finding of our exhaustive study, using 1000 Android apps, demonstrates that mobile apps are still tested in a very ad hoc way, if tested at all. However, we show that, as in other types of software, testing increases the quality of apps (demonstrated in user ratings and number of code issues). Furthermore, we find evidence that tests are essential when it comes to engaging the community to contribute to mobile open source software. We discuss reasons and potential directions to address our findings. Yet another relevant finding of our study is that Continuous Integration and Continuous Deployment (CI/CD) pipelines are rare in the mobile apps world (only 26% of the apps are developed in projects employing CI/CD) - we argue that one of the main reasons is due to the lack of exhaustive and automatic testing.
C1 [Cruz, Luis] INESC ID, Lisbon, Portugal.
   [Abreu, Rui] Univ Lisbon, INESC ID, Lisbon, Portugal.
   [Abreu, Rui] Univ Lisbon, IST, Lisbon, Portugal.
   [Lo, David] Singapore Management Univ, Sch Informat Syst, Singapore, Singapore.
C3 INESC-ID; Universidade de Lisboa; Universidade de Lisboa; INESC-ID;
   Universidade de Lisboa; Singapore Management University
RP Cruz, L (corresponding author), INESC ID, Lisbon, Portugal.
EM luiscruz@fe.up.pt; rui@computer.org; davidlo@smu.edu.sg
RI Cruz, Luis/AAJ-1874-2021; Abreu, Rui/K-7048-2019; Lo, David/A-2493-2012
OI Cruz, Luis/0000-0002-1615-355X; Abreu, Rui/0000-0003-3734-3157; Lo,
   David/0000-0002-4367-7201
FU ERDF-European Regional Development Fund through the Operational Program
   for Competitiveness and Internationalization - COMPETE 2020 Program;
   Portuguese funding agency, FCT - Fundacao para a Ciencia e a Tecnologia
   [UID/CEC/50021/2019]; FCT scholarship [PD/BD/52237/2013]; Portuguese
   funding agency, FCT - Fundacao para a Ciencia e a Tecnologia within
   project GreenLab [POCI-01-0145-FEDER-016718]; Portuguese funding agency,
   FCT - Fundacao para a Ciencia e a Tecnologia within project
   Fault-LockerRef [PTDC/CCI-COM/29300/2017]; Fundação para a Ciência e a
   Tecnologia [PD/BD/52237/2013, PTDC/CCI-COM/29300/2017] Funding Source:
   FCT
FX This work is financed by the ERDF-European Regional Development Fund
   through the Operational Program for Competitiveness and
   Internationalization - COMPETE 2020 Program and by National Funds
   through the Portuguese funding agency, FCT - Fundacao para a Ciencia e a
   Tecnologia with reference UID/CEC/50021/2019, and within projects
   GreenLab (POCI-01-0145-FEDER-016718) and Fault-LockerRef
   (PTDC/CCI-COM/29300/2017). Luis Cruz is sponsored by an FCT scholarship
   grant number PD/BD/52237/2013.
CR Amalfitano D, 2017, J SYST SOFTWARE, V125, P322, DOI 10.1016/j.jss.2016.12.017
   [Anonymous], 2018, P 15 INT C MIN SOFTW
   Bavani R, 2012, IEEE SOFTWARE, V29, P28, DOI 10.1109/MS.2012.155
   Beck K., 2000, EXTREME PROGRAMMING
   Bird C, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P1, DOI 10.1109/MSR.2009.5069475
   Brooks ME, 2014, J APPL PSYCHOL, V99, P332, DOI 10.1037/a0034745
   Choudhary SR, 2015, IEEE INT CONF AUTOM, P429, DOI 10.1109/ASE.2015.89
   Coppola R, 2017, P 13 INT C PRED MOD, P22, DOI [10.1145/3127005.3127008, DOI 10.1145/3127005.3127008]
   Coppola R, 2017, PROC IEEE ACM INT C, P405, DOI 10.1109/ICSE-C.2017.22
   Corral L, 2015, 2ND ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS MOBILESOFT 2015, P22, DOI 10.1109/MobileSoft.2015.10
   Cosentino V, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P137, DOI [10.1109/MSR.2016.023, 10.1145/2901739.2901776]
   Cruz L, 2018, 2018 IEEE ACM 38 INT
   Das T, 2016, PROC IEEE INT CONF S, P443, DOI 10.1109/ICSME.2016.49
   De Langhe B, 2016, J CONSUM RES, V42, P817, DOI 10.1093/jcr/ucv047
   Gao J, 2014, COMPUTER, V47, P46, DOI 10.1109/MC.2013.445
   Gao ZB, 2016, IEEE T SOFTWARE ENG, V42, P170, DOI 10.1109/TSE.2015.2454510
   Gousios G, 2016, PROC INT CONF SOFTW, P285, DOI 10.1145/2884781.2884826
   Gousios G, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P358, DOI 10.1109/ICSE.2015.55
   Hilton M, 2016, IEEE INT CONF AUTOM, P426, DOI 10.1145/2970276.2970358
   Hu Cuixiong, 2011, Proceedings of the 6th International Workshop on Automation of Software Test, P77
   Joorabchi Mona Erfani, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P15, DOI 10.1109/ESEM.2013.9
   Kaasila J., 2012, P 11 INT C MOB UB MU
   Karvonen Teemu., 2017, Information and Software Technology (Cited on page 57)
   Kerby DS, 2014, SIMPLE DIFFERENCE FO, V3, DOI [10.2466/11.IT.3.1, DOI 10.2466/11.IT.3.1]
   Kochhar P. S., 2015, ICST'15, P1
   Kochhar PS, 2013, INT CONF QUAL SOFTW, P103, DOI 10.1109/QSIC.2013.57
   Kochhar PS, 2013, EUR CON SFTWR MTNCE, P353, DOI 10.1109/CSMR.2013.48
   Krutz DE, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P522, DOI 10.1109/MSR.2015.79
   Kumar Maji Amiya, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P249, DOI 10.1109/ISSRE.2010.45
   Leech N.L., 2002, A call for greater use of nonparametric statistics
   Li X, 2017, IEEE INT CONF SOFTW, P161, DOI 10.1109/ICST.2017.22
   Linares-Vasquez M, 2017, 33 IEEE INT C SOFTW
   Martin W, 2017, IEEE T SOFTWARE ENG, V43, P817, DOI 10.1109/TSE.2016.2630689
   MCGRAW KO, 1992, PSYCHOL BULL, V111, P361, DOI 10.1037/0033-2909.111.2.361
   Mehboob H, 2014, BIOMED ENG-APP BAS C, V26, DOI 10.4015/S1016237214500732
   Moran K, 2017, PROC IEEE ACM INT C, P505, DOI 10.1109/ICSE-C.2017.166
   Muccini H., 2012, 2012 Proceedings of 7th International Workshop on Automation of Software Test (AST 2012), P29, DOI 10.1109/IWAST.2012.6228987
   Nagappan M, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 5, P21, DOI 10.1109/SANER.2016.88
   Nayebi M, 2018, EMPIR SOFTW ENG, V23, P2764, DOI 10.1007/s10664-018-9601-1
   Nayebi M, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P552, DOI 10.1109/SANER.2016.116
   Pascarella L, 2018, 2018 IEEE/ACM 5TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT), P144, DOI 10.1145/3197231.3197251
   Picco G.P., 2014, P FUTURE SOFTWARE EN, P13, DOI DOI 10.1145/2593882.2593884
   Ruiz I., 2017, IEEE Software
   Silva Danilo., 2016, 24th International Symposium on the Foundations of Software Engineering (FSE), P1, DOI [10.1109/CLEI.2016.7833334, DOI 10.1109/CLEI.2016.7833334]
   Stolberg S, 2009, AGILE 2009 CONFERENCE, P369, DOI 10.1109/AGILE.2009.16
   van Deursen A, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P176, DOI 10.1109/WCRE.2001.957822
   Visser J., 2016, Building Maintainable Software, C# Edition: Ten Guidelines for Future-Proof Code
   Wang Y, 2015, ADV DIFFER EQU-NY, DOI 10.1186/s13662-015-0358-1
   Zaeem RN, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P183, DOI 10.1109/ICST.2014.31
   Zeng X, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P987, DOI 10.1145/2950290.2983958
   Zhao Y, 2017, 32 IEEE ACM INT C AU
NR 51
TC 19
Z9 21
U1 1
U2 13
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2019
VL 24
IS 4
BP 2438
EP 2468
DI 10.1007/s10664-019-09701-0
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IL9CL
UT WOS:000477582700021
OA Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Gharehyazie, M
   Ray, B
   Keshani, M
   Zavosht, MS
   Heydarnoori, A
   Filkov, V
AF Gharehyazie, Mohammad
   Ray, Baishakhi
   Keshani, Mehdi
   Zavosht, Masoumeh Soleimani
   Heydarnoori, Abbas
   Filkov, Vladimir
TI Cross-project code clones in GitHub
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Clone detection; Cross-project cloning; Deckard; GitHub
AB Code reuse has well-known benefits on code quality, coding efficiency, and maintenance. Open Source Software (OSS) programmers gladly share their own code and they happily reuse others'. Social programming platforms like GitHub have normalized code foraging via their common platforms, enabling code search and reuse across different projects. Removing project borders may facilitate more efficient code foraging, and consequently faster programming. But looking for code across projects takes longer and, once found, may be more challenging to tailor to one's needs. Learning how much code reuse goes on across projects, and identifying emerging patterns in past cross-project search behavior may help future foraging efforts. Our contribution is two fold. First, to understand cross-project code reuse, here we present an in-depth empirical study of cloning in GitHub. Using Deckard, a popular clone finding tool, we identified copies of code fragments across projects, and investigate their prevalence and characteristics using statistical and network science approaches, and with multiple case studies. By triangulating findings from different analysis methods, we find that cross-project cloning is prevalent in GitHub, ranging from cloning few lines of code to whole project repositories. Some of the projects serve as popular sources of clones, and others seem to contain more clones than their fair share. Moreover, we find that ecosystem cloning follows an onion model: most clones come from the same project, then from projects in the same application domain, and finally from projects in different domains. Second, we utilized these results to develop a novel tool named CLONE-HUNTRESS that streamlines finding and tracking code clones in GitHub. The tool is GitHub integrated, built around a user-friendly interface and runs efficiently over a modern database system. We describe the tool and make it publicly available at http://clone-det.ictic.sharif.edu/.
C1 [Gharehyazie, Mohammad; Filkov, Vladimir] Univ Calif Davis, Dept Comp Sci, Davis, CA 95616 USA.
   [Gharehyazie, Mohammad] Sharif Univ Technol, AICT Innovat Ctr, Tehran, Iran.
   [Ray, Baishakhi] Columbia Univ, 500 West 120 St,MC0401, New York, NY 10027 USA.
   [Keshani, Mehdi] Sharif Univ Technol, Software Engn, Tehran, Iran.
   [Keshani, Mehdi] Sharif Univ Technol, ASE Lab, Tehran, Iran.
   [Zavosht, Masoumeh Soleimani] Sharif Univ Technol, Comp Networks, Tehran, Iran.
   [Heydarnoori, Abbas] Sharif Univ Technol, Dept Comp Engn, Tehran, Iran.
C3 University of California System; University of California Davis; Sharif
   University of Technology; Columbia University; Sharif University of
   Technology; Sharif University of Technology; Sharif University of
   Technology; Sharif University of Technology
RP Gharehyazie, M (corresponding author), Univ Calif Davis, Dept Comp Sci, Davis, CA 95616 USA.; Gharehyazie, M (corresponding author), Sharif Univ Technol, AICT Innovat Ctr, Tehran, Iran.
EM m.gharehyazie@sharif.edu; rayb@cs.columbia.edu; keshani@ce.sharif.edu;
   soleimanim@ce.sharif.edu; heydarnoori@sharif.edu; filkov@cs.ucdavis.edu
RI Heydarnoori, Abbas/ABB-2493-2020
OI Heydarnoori, Abbas/0000-0001-9785-2880
CR Al-Ekram R., 2005, 2005 International Symposium on Empirical Software Engineering (IEEE Cat. No. 05EX1213)
   [Anonymous], 2007, P 22 IEEE ACM INT C
   Bajracharya S., 2006, COMP 21 ACM SIGPLAN, P681, DOI DOI 10.1145/1176617.1176671
   Barr ET, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P306, DOI 10.1145/2635868.2635898
   Bogdan V, 2015, CHI 15
   Dabbish L, 2012, P ACM 2012 C COMP SU, P1277, DOI [10.1145/2145204.2145396, DOI 10.1145/2145204.2145396]
   Duala-Ekoko E, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P843, DOI 10.1145/1368088.1368218
   Gabel M, 2010, 18 ACM SIGSOFT INT S, P147
   Gharehyazie M, 2017, IEEE WORK CONF MIN S, P291, DOI 10.1109/MSR.2017.15
   Gharehyazie M, 2015, EMPIR SOFTW ENG, V20, P1318, DOI 10.1007/s10664-014-9332-x
   Gousios G, 2013, IEEE WORK CONF MIN S, P233, DOI 10.1109/MSR.2013.6624034
   Jiang LX, 2007, PROC INT CONF SOFTW, P96
   Juergens E, 2009, PROC INT CONF SOFTW, P485, DOI 10.1109/ICSE.2009.5070547
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kim M, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P83
   Kim Miryung, 2005, ESEC/FSE- 13), P187, DOI [10.1145/1081706.1081737, DOI 10.1145/1081706.1081737]
   Le Goues C, 2012, IEEE T SOFTWARE ENG, V38, P54, DOI 10.1109/TSE.2011.104
   Li JY, 2012, PROC INT CONF SOFTW, P310, DOI 10.1109/ICSE.2012.6227183
   Lv F, 2015, IEEE INT CONF AUTOM, P260, DOI 10.1109/ASE.2015.42
   Meng N, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P502, DOI 10.1109/ICSE.2013.6606596
   Meng N, 2011, ACM SIGPLAN NOTICES, V46, P329, DOI 10.1145/1993316.1993537
   Nguyen H. A., 2013, P 28 INT C AUT SOFTW
   Ossher J., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P283, DOI 10.1109/ICSM.2011.6080795
   Ponzanelli Luca, 2014, P 11 WORKING C MININ, P102, DOI DOI 10.1145/2597073.2597077
   Rattan D, 2013, INFORM SOFTWARE TECH, V55, P1165, DOI 10.1016/j.infsof.2013.01.008
   Ray B, 2014, UNIQUENESS CHANGES C
   Ray B, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P155, DOI 10.1145/2635868.2635922
   Ray Baishakhi, 2012, P ACM SIGSOFT 20 INT, DOI [10.1145/2393596.2393659, DOI 10.1145/2393596.2393659]
   Reiss SP, 2009, PROC INT CONF SOFTW, P243, DOI 10.1109/ICSE.2009.5070525
   Roy CK, 2009, SCI COMPUT PROGRAM, V74, P470, DOI 10.1016/j.scico.2009.02.007
   Sajnani H, 2016, PROC INT CONF SOFTW, P1157, DOI 10.1145/2884781.2884877
   Scacchi W, 2010, COLLABORATIVE SOFTWARE ENGINEERING, P307, DOI 10.1007/978-3-642-10294-3_15
   Sim SE, 1998, PROG COMPREHEN, P180, DOI 10.1109/WPC.1998.693351
   Su FH, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P702, DOI 10.1145/2950290.2950321
   Vasilescu B, 2016, INT C SOFTW ENG ICSE
   Xuan Q, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P401, DOI 10.1145/2635868.2635914
   Zhang HY, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P956, DOI 10.1145/2950290.2983955
NR 37
TC 10
Z9 11
U1 0
U2 8
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2019
VL 24
IS 3
BP 1538
EP 1573
DI 10.1007/s10664-018-9648-z
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ID9YT
UT WOS:000472043800015
DA 2024-07-18
ER

PT J
AU Vera-Pérez, OL
   Danglot, B
   Monperrus, M
   Baudry, B
AF Vera-Perez, Oscar Luis
   Danglot, Benjamin
   Monperrus, Martin
   Baudry, Benoit
TI A comprehensive study of pseudo-tested methods
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software testing; Software developers; Pseudo-tested methods; Test
   quality; Program analysis
ID MUTATION; TOOL
AB Pseudo-tested methods are defined as follows: they are covered by the test suite, yet no test case fails when the method body is removed, i.e., when all the effects of this method are suppressed. This intriguing concept was coined in 2016, by Niedermayr and colleagues, who showed that such methods are systematically present, even in well-tested projects with high statement coverage. This work presents a novel analysis of pseudo-tested methods. First, we run a replication of Niedermayr's study with 28K+ methods, enhancing its external validity thanks to the use of new tools and new study subjects. Second, we perform a systematic characterization of these methods, both quantitatively and qualitatively with an extensive manual analysis of 101 pseudo-tested methods. The first part of the study confirms Niedermayr's results: pseudo-tested methods exist in all our subjects. Our in-depth characterization of pseudo-tested methods leads to two key insights: pseudo-tested methods are significantly less tested than the other methods; yet, for most of them, the developers would not pay the testing price to fix this situation. This calls for future work on targeted test generation to specify those pseudo-tested methods without spending developer time.
C1 [Vera-Perez, Oscar Luis] Inria Rennes Bretagne Atlantique, Campus Beaulieu 263 Ave Gen Leclerc, F-35042 Rennes, France.
   [Danglot, Benjamin] Inria Lille Nord Europe, Parc Sci Haute Borne 40,Ave Halley Bat A Pk Plaza, F-59650 Villeneuve Dascq, France.
   [Monperrus, Martin; Baudry, Benoit] KTH Royal Inst Technol Stockholm, Brinellvagen 8, S-11428 Stockholm, Sweden.
C3 Universite de Rennes; Royal Institute of Technology
RP Vera-Pérez, OL (corresponding author), Inria Rennes Bretagne Atlantique, Campus Beaulieu 263 Ave Gen Leclerc, F-35042 Rennes, France.
EM oscar.vera-perez@inria.fr; benjamin.danglot@inria.fr;
   martin.monperrus@csc.kth.se; baudry@kth.se
RI Monperrus, Martin/I-3640-2012
OI Monperrus, Martin/0000-0003-3505-3383
FU EU Project STAMP [ICT-16-10, 731529]; Wallenberg Autonomous Systems and
   Software Program (WASP) - Knut and Alice Wallenberg Foundation
FX We would like to acknowledge the invaluable help and feedback provided
   by the development teams of authzforce, spoon and pdfbox. We also
   express our appreciation to Simon Urli, Daniel Le Berre, Arnaud Blouin,
   Marko Ivankovi, Goran Petrovic and Andy Zaidman for their feedback and
   their very accurate suggestions. This work has been partially supported
   by the EU Project STAMP ICT-16-10 No.731529 and by the Wallenberg
   Autonomous Systems and Software Program (WASP) funded by the Knut and
   Alice Wallenberg Foundation.
CR Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   Androutsopoulos K, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P573, DOI 10.1145/2568225.2568314
   Coles H., 2016, P 25 INT S SOFTWARE, P449
   Daran M., 1996, SIGSOFT Software Engineering Notes, V21, P158, DOI [10.1145/229000.226313, 10.1145/226295.226313]
   Delahaye M, 2013, INT CONF QUAL SOFTW, P187, DOI 10.1109/QSIC.2013.47
   Delamaro ME, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P11, DOI 10.1109/ICST.2014.12
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   Deng L, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P84, DOI 10.1109/ICST.2013.20
   Durelli VHS, 2017, IEEE ICST WORKSHOP, P149, DOI 10.1109/ICSTW.2017.32
   Gopinath R, 2017, SOFTWARE QUAL J, V25, P871, DOI 10.1007/s11219-016-9317-7
   Gopinath R, 2014, PROC INT SYMP SOFTW, P189, DOI 10.1109/ISSRE.2014.40
   GOURLAY JS, 1983, IEEE T SOFTWARE ENG, V9, P686, DOI 10.1109/TSE.1983.235433
   Jahangirova G., 2016, INT S SOFTWARE TESTI, P247
   Just R., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P612, DOI 10.1109/ASE.2011.6100138
   Just R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P654, DOI 10.1145/2635868.2635929
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Kintis M, 2016, IEEE INT WORK C SO, P147, DOI 10.1109/SCAM.2016.28
   Laurent T, 2017, IEEE INT CONF SOFTW, P430, DOI 10.1109/ICST.2017.47
   Niedermayr R, 2016, INTERNATIONAL WORKSHOP ON CONTINUOUS SOFTWARE EVOLUTION AND DELIVERY, CSED 2016, P23, DOI 10.1145/2896941.2896944
   Petrovic Goran, 2018, P 40 INT C SOFTW ENG
   Schuler D, 2013, SOFTW TEST VERIF REL, V23, P531, DOI 10.1002/stvr.1497
   Shull FJ, 2008, EMPIR SOFTW ENG, V13, P211, DOI 10.1007/s10664-008-9060-1
   Staats M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P391, DOI 10.1145/1985793.1985847
   Untch R. H., 2009, ACM SE, p71U75
   Vera-Perez OL, 2018, P 2018 33 ACM IEEE I, P908
NR 25
TC 7
Z9 7
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2019
VL 24
IS 3
BP 1195
EP 1225
DI 10.1007/s10664-018-9653-2
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ID9YT
UT WOS:000472043800005
DA 2024-07-18
ER

PT J
AU Calefato, F
   Lanubile, F
   Novielli, N
AF Calefato, Fabio
   Lanubile, Filippo
   Novielli, Nicole
TI An empirical assessment of best-answer prediction models in technical
   Q&A sites
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Cross-platform prediction; Q&a; Stack overflow; Crowdsourcing; Knowledge
   sharing; Imbalanced datasets
ID SOFTWARE DEFECT PREDICTION; STATIC CODE ATTRIBUTES; FEATURE-SELECTION;
   CLASSIFICATION; CLASSIFIERS
AB Technical Q&A sites have become essential for software engineers as they constantly seek help from other experts to solve their work problems. Despite their success, many questions remain unresolved, sometimes because the asker does not acknowledge any helpful answer. In these cases, an information seeker can only browse all the answers within a question thread to assess their quality as potential solutions. We approach this time-consuming problem as a binary-classification task where a best-answer prediction model is built to identify the accepted answer among those within a resolved question thread, and the candidate solutions to those questions that have received answers but are still unresolved. In this paper, we report on a study aimed at assessing 26 best-answer prediction models in two steps. First, we study how models perform when predicting best answers in Stack Overflow, the most popular Q&A site for software engineers. Then, we assess performance in a cross-platform setting where the prediction models are trained on Stack Overflow and tested on other technical Q&A sites. Our findings show that the choice of the classifier and automatied parameter tuning have a large impact on the prediction of the best answer. We also demonstrate that our approach to the best-answer prediction problem is generalizable across technical Q&A sites. Finally, we provide practical recommendations to Q&A platform designers to curate and preserve the crowdsourced knowledge shared through these sites.
C1 [Calefato, Fabio] Univ Bari A Moro, Dipartimento Jonico, Via Duomo 259, I-74123 Taranto, Italy.
   [Lanubile, Filippo; Novielli, Nicole] Univ Bari A Moro, Dipartimento Infomat, Via E Orabona 4, I-70125 Bari, Italy.
C3 Universita degli Studi di Bari Aldo Moro; Universita degli Studi di Bari
   Aldo Moro
RP Calefato, F (corresponding author), Univ Bari A Moro, Dipartimento Jonico, Via Duomo 259, I-74123 Taranto, Italy.
EM fabio.calcfato@uniba.it; filippo.lanubile@uniba.it;
   nicole.novielli@uniba.it
RI Calefato, Fabio/H-4177-2014; Novielli, Nicole/Y-9583-2019; Lanubile,
   Filippo/AAF-9132-2020
OI Calefato, Fabio/0000-0003-2654-1588; Novielli,
   Nicole/0000-0003-1160-2608; Lanubile, Filippo/0000-0003-3373-7589
FU project "EmoQuest - Investigating the Role of Emotions in Online
   Question AMP; Answer Sites' - Italian Ministry of Education, University
   and Research (MIUR) under the program "Scientific Independence of young
   Researchers" (SIR); MIUR under the program "PON RC 2007-2013"
FX We thank Stack Overflow for providing their data. We also thank Burak
   Turhan, for his comments on cross-context defect prediction, and
   Margaret-Anne Storey, Alexey Zagalsky, and Daniel M. German for their
   feedback on the study. This work is partially supported by the project
   "EmoQuest - Investigating the Role of Emotions in Online Question &
   Answer Sites', funded by the Italian Ministry of Education, University
   and Research (MIUR) under the program "Scientific Independence of young
   Researchers" (SIR). The computational work has been executed on the IT
   resources made available by two projects, ReCaS and PRISMA, funded by
   MIUR under the program "PON R&C 2007-2013."
CR Abdalkareem R, 2017, IEEE SOFTWARE, V34, P53, DOI 10.1109/MS.2017.31
   Adamic LA, 2008, P 17 INT C WORLD WID, P665, DOI DOI 10.1145/1367497.1367587
   Adams NM, 1999, PATTERN RECOGN, V32, P1139, DOI 10.1016/S0031-3203(98)00154-X
   Anderson Ashton, 2012, P 18 ACM SIGKDD INT, DOI DOI 10.1145/2339530.2339665
   [Anonymous], 2014, Proceedings of the 17th ACM conference on Computer supported cooperative work social computing
   Arisholm E, 2010, J SYST SOFTWARE, V83, P2, DOI 10.1016/j.jss.2009.06.055
   Asaduzzaman M, 2013, IEEE WORK CONF MIN S, P97, DOI 10.1109/MSR.2013.6624015
   Bajaj K, 2014, P 11 WORK C MIN SOFT, P112
   Barua A, 2014, EMPIR SOFTW ENG, V19, P619, DOI 10.1007/s10664-012-9231-y
   BERGSTRA J, 2005, THE JOURNAL OF MACHI, V13, P281
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Borges L. C., 2003, REV MAT ESTAT SAO PA, V211, P67
   Bosu A, 2013, IEEE WORK CONF MIN S, P89, DOI 10.1109/MSR.2013.6624013
   Burel Gregoire, 2012, The Semantic Web: Research and Applications. Proceedings 9th Extended Semantic Web Conference (ESWC 2012), P514, DOI 10.1007/978-3-642-30284-8_41
   Cai Y, 2011, TECHNICAL REPORT
   Calefato F, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962585
   Calefato F, 2018, INFORM SOFTWARE TECH, V94, P186, DOI 10.1016/j.infsof.2017.10.009
   Calefato F, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P430, DOI 10.1109/MSR.2015.56
   Catal C, 2009, EXPERT SYST APPL, V36, P7346, DOI 10.1016/j.eswa.2008.10.027
   Cohen J., 1988, STAT POWER ANAL BEHA
   CONOVER WJ, 1999, PRACTICAL NONPARAMET
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   Davis JJ., 2006, PROC INT C MACHINE L, DOI DOI 10.1145/1143844.1143874
   DELONG ER, 1988, BIOMETRICS, V44, P837, DOI 10.2307/2531595
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   Denaro G, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P241, DOI 10.1109/ICSE.2002.1007972
   diaeresis>tze Hinrich Schu<spacing, 2008, INTRO INFORM RETRIEV, V39
   Drummond C, 2006, MACH LEARN, V65, P95, DOI 10.1007/s10994-006-8199-5
   Duijn M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P410, DOI 10.1109/MSR.2015.51
   Elkan C., 2001, IJCAI 2001, V17, P973, DOI DOI 10.5555/1642194.1642224
   Fawcett T, 2006, PATTERN RECOGN LETT, V27, P861, DOI 10.1016/j.patrec.2005.10.010
   Fenton NE, 1999, IEEE T SOFTWARE ENG, V25, P675, DOI 10.1109/32.815326
   Fu W, 2016, INFORM SOFTWARE TECH, V76, P135, DOI 10.1016/j.infsof.2016.04.017
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Gkotsis G, 2015, J WEB SCI, V1, P1
   GKOTSIS G, 2014, P 2014 ACM C WEB SCI, P202, DOI [DOI 10.1145/2615569.2615681, 10.1145/2615569, DOI 10.1145/2615569]
   Hall M. A., 1999, Proceedings of the Twelfth International Florida AI Research Society Conference, P235
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Hart K., 2014, P 7 INT WORKSHOP COO, P103
   Hastie T., 2009, The Elements of Statistical Learning
   He HB, 2009, IEEE T KNOWL DATA EN, V21, P1263, DOI 10.1109/TKDE.2008.239
   Hosseini S, 2017, IEEE T SOFTW ENG
   Huang J, 2005, IEEE T KNOWL DATA EN, V17, P299, DOI 10.1109/TKDE.2005.50
   Hyndman Rob J, 2017, Forecasting: Principles and practice
   Japkowicz N., 2002, Intelligent Data Analysis, V6, P429
   Jiang Y., 2008, DEFECTS 08 P 2008 WO, P16, DOI [DOI 10.1145/1390817.1390822, 10.1145/1390817.1390822]
   Jiang Y, 2008, EMPIR SOFTW ENG, V13, P561, DOI 10.1007/s10664-008-9079-3
   Karegowda A.G., 2010, International journal of Computer applications, V1, P13
   Kincaid J, 1975, NAV TECH TRAIN COMMA
   Kitchenham BA, 2007, IEEE T SOFTWARE ENG, V33, P316, DOI 10.1109/TSE.2007.1101
   Kocaguneli E, 2012, IEEE T SOFTWARE ENG, V38, P425, DOI 10.1109/TSE.2011.27
   Kuhn M, 2008, J STAT SOFTW, V28, P1, DOI 10.18637/jss.v028.i05
   Kursa MB, 2010, J STAT SOFTW, V36, P1, DOI 10.18637/jss.v036.i11
   Laradji IH, 2015, INFORM SOFTWARE TECH, V58, P388, DOI 10.1016/j.infsof.2014.07.005
   Lemnaru C, 2012, LECT NOTES BUS INF P, V102, P35
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Liu Y, 2006, LECT NOTES ARTIF INT, V3918, P107
   López V, 2013, INFORM SCIENCES, V250, P113, DOI 10.1016/j.ins.2013.07.007
   Malhotra R, 2017, EMPIR SOFTW ENG, V22, P2806, DOI 10.1007/s10664-016-9488-7
   Malhotra R, 2015, APPL SOFT COMPUT, V27, P504, DOI 10.1016/j.asoc.2014.11.023
   Mamykina L, 2011, 29TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P2857
   Mende T., 2009, P 5 INT C PREDICTOR, P1, DOI [10.1145/1540438.1540448, DOI 10.1145/1540438.1540448]
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Menzies T, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P887, DOI 10.1145/2889160.2891047
   Menzies T, 2010, AUTOMAT SOFTW ENG, V17, P375, DOI 10.1007/s10515-010-0069-5
   Menzies T, 2012, EMPIR SOFTW ENG, V17, P1, DOI 10.1007/s10664-011-9193-5
   Nam J, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P508, DOI 10.1145/2786805.2786814
   Nie LQ, 2017, IEEE T KNOWL DATA EN, V29, P1186, DOI 10.1109/TKDE.2017.2669982
   Peters F, 2013, IEEE WORK CONF MIN S, P409, DOI 10.1109/MSR.2013.6624057
   Pitler Emily, 2008, P C EMP METH NAT LAN, P186
   Polikar R., 2006, IEEE Circuits and Systems Magazine, V6, P21, DOI 10.1109/MCAS.2006.1688199
   Ponzanelli L, 2014, PROC IEEE INT CONF S, P541, DOI 10.1109/ICSME.2014.90
   Provost F., 1998, Machine Learning. Proceedings of the Fifteenth International Conference (ICML'98), P445
   Provost F., 1997, Proceedings of the Third International Conference on Knowledge Discovery and Data Mining, P43
   Rahman F, 2012, Proceedings of the ACM SIGSOFT 20th International Symposium on the Foundations of Software Engineering, FSE '12, P61
   Ringrose T. J., 1997, BIOMETRICS, V53, P1181
   Robin X, 2011, BMC BIOINFORMATICS, V12, DOI 10.1186/1471-2105-12-77
   Roy P., 2017, GUIDE NORMALISATION, P1
   Saeys Y, 2007, BIOINFORMATICS, V23, P2507, DOI 10.1093/bioinformatics/btm344
   Scalabrino S, 2016, 2016 IEEE 24 INT C P, P1
   SCOTT AJ, 1974, BIOMETRICS, V30, P507, DOI 10.2307/2529204
   Shah C., 2010, P 33 INT ACM SIGIR C, DOI [10. 1145/1835449. 1835518, DOI 10.1145/1835449.1835518]
   Shah C., 2015, P 78 ASIS T ANN M IN, P51
   Shaw M., 2016, ICSE 2016 KEYNOTE
   Squire M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P219, DOI 10.1109/ICSE.2015.150
   Storey Margaret-Anne, 2012, Crowd Documentation: Exploring the Coverage and the Dynamics of API Discussions on Stack Overflow, V11
   Tantithamthavorn C., 2016, P INT C SOFTW ENG IC
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Tian Q., 2013, P 7 INT C WEBL SOC M
   Tosun A, 2009, INT SYMP EMP SOFTWAR, P478
   Treude C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P804, DOI 10.1145/1985793.1985907
   Turhan B, 2012, EMPIR SOFTW ENG, V17, P62, DOI 10.1007/s10664-011-9182-8
   Turhan B, 2011, EUROMICRO CONF PROC, P396, DOI 10.1109/SEAA.2011.59
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Wahono R. S., 2015, Journal of Software Engineering, V1, P1
   Wang SM, 2017, EPIGENETICS-US, V12, P187, DOI 10.1080/15592294.2016.1273308
   Xia X, 2016, P INT COMP SOFTW APP, P73, DOI 10.1109/COMPSAC.2016.145
   Xu BW, 2017, IEEE INT CONF AUTOM, P706, DOI 10.1109/ASE.2017.8115681
   Xu BW, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P413, DOI [10.1109/MSR.2016.049, 10.1145/2901739.2901746]
   Xu BW, 2016, IEEE INT CONF AUTOM, P51, DOI 10.1145/2970276.2970357
   Yang YM, 1999, SIGIR'99: PROCEEDINGS OF 22ND INTERNATIONAL CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P42, DOI 10.1145/312624.312647
   Zhang F, 2016, EMPIR SOFTW ENG, V21, P2107, DOI 10.1007/s10664-015-9396-2
   Zhang HY, 2007, IEEE T SOFTWARE ENG, V33, P635, DOI 10.1109/TSE.2007.70706
   Zheng WH, 2017, NEUROCOMPUTING, V269, P212, DOI 10.1016/j.neucom.2016.12.097
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
NR 105
TC 14
Z9 15
U1 0
U2 9
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2019
VL 24
IS 2
BP 854
EP 901
DI 10.1007/s10664-018-9642-5
PG 48
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HQ8DM
UT WOS:000462654200010
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Lin, DY
   Bezemer, CP
   Zou, Y
   Hassan, AE
AF Lin, Dayi
   Bezemer, Cor-Paul
   Zou, Ying
   Hassan, Ahmed E.
TI An empirical study of game reviews on the Steam platform
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Review
DE Game reviews; Computer games; Steam
ID USERS
AB The steadily increasing popularity of computer games has led to the rise of a multi-billion dollar industry. Due to the scale of the computer game industry, developing a successful game is challenging. In addition, prior studies show that gamers are extremely hard to please, making the quality of games an important issue. Most online game stores allow users to review a game that they bought. Such reviews can make or break a game, as other potential buyers often base their purchasing decisions on the reviews of a game. Hence, studying game reviews can help game developers better understand user concerns, and further improve the user-perceived quality of games. In this paper, we perform an empirical study of the reviews of 6224 games on the Steam platform, one of the most popular digital game delivery platforms, to better understand if game reviews share similar characteristics with mobile app reviews, and thereby understand whether the conclusions and tools from mobile app review studies can be leveraged by game developers. In addition, new insights from game reviews could possibly open up new research directions for research of mobile app reviews. We first conduct a preliminary study to understand the number of game reviews and the complexity to read through them. In addition, we study the relation between several game-specific characteristics and the fluctuations of the number of reviews that are received on a daily basis. We then focus on the useful information that can be acquired from reviews by studying the major concerns that users express in their reviews, and the amount of play time before players post a review. We find that game reviews are different from mobile app reviews along several aspects. Additionally, the number of playing hours before posting a review is a unique and helpful attribute for developers that is not found in mobile app reviews. Future longitudinal studies should be conducted to help developers and researchers leverage this information. Although negative reviews contain more valuable information about the negative aspects of the game, such as mentioned complaints and bug reports, developers and researchers should also not ignore the potentially useful information in positive reviews. Our study on game reviews serves as a starting point for other game review researchers, and suggests that prior studies on mobile app reviews may need to be revisited.
C1 [Lin, Dayi; Bezemer, Cor-Paul; Hassan, Ahmed E.] Queens Univ, SAIL, Kingston, ON, Canada.
   [Zou, Ying] Queens Univ, Dept Elect & Comp Engn, Kingston, ON, Canada.
C3 Queens University - Canada; Queens University - Canada
RP Lin, DY (corresponding author), Queens Univ, SAIL, Kingston, ON, Canada.
EM dayi.lin@cs.queensu.ca; bezemer@cs.queensu.ca; ying.zou@queensu.ca;
   ahmed@cs.queensu.ca
RI Lin, Dayi/AAS-8054-2020; Zou, Ying/KLC-9380-2024; Hassan,
   Ahmed/AAB-7241-2019; Ali, Ahmed/HOF-4672-2023; KHALIFA, AHMED
   khalifa/HKF-2246-2023
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; Bezemer,
   Cor-Paul/0000-0002-0474-5718; Lin, Dayi/0000-0002-4034-6650
CR Alden, 2017, STEAMW PARTN PROGR
   Apple Inc, 2017, CHOOS MEMB
   Bates D, 2015, J STAT SOFTW, V67, P1, DOI 10.18637/jss.v067.i01
   Beckman RC, 2012, NUS CENT INT LAW SER, P1
   Blackburn J, 2014, ACM T INTERNET TECHN, V13, DOI 10.1145/2602570
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Chambers C., 2005, P 5 ACM SIGCOMM C IN, P1
   Chen N, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P767, DOI 10.1145/2568225.2568263
   Cheung GiffordK., 2014, P 1 ACM SIGCHI ANN S, P57, DOI DOI 10.1145/2658537.2658540
   Ciurumelea A, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P91, DOI 10.1109/SANER.2017.7884612
   Cobbett R., 2017, From shareware superstars to the Steam gold rush: How indie conquered the PC' PC Gamer 23
   COLEMAN M, 1975, J APPL PSYCHOL, V60, P283, DOI 10.1037/h0076540
   Di Sorbo A, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P499, DOI 10.1145/2950290.2950299
   Fu B, 2013, 19TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'13), P1276
   Genc-Nayebi N, 2017, J SYST SOFTWARE, V125, P207, DOI 10.1016/j.jss.2016.11.027
   Google, 2017, US PLAY CONS
   Gu XD, 2015, IEEE INT CONF AUTOM, P760, DOI 10.1109/ASE.2015.57
   Hassan S, 2018, EMPIR SOFTW ENG, V23, P1275, DOI 10.1007/s10664-017-9538-9
   Hoon L., 2012, AUSTR COMP HUM INT C, P245
   Iacob C, 2013, IEEE WORK CONF MIN S, P41, DOI 10.1109/MSR.2013.6624001
   Khalid H, 2015, IEEE SOFTWARE, V32, P70, DOI 10.1109/MS.2014.50
   Kincaid J.P., 1975, Derivation of New Readability Formulas (Automated Readability Index, Fog Count and Flesch Reading Ease Formula) for Navy Enlisted Personnel, DOI [DOI 10.21236/ADA006655, 10.21236/ADA006655]
   Lewis Chris, 2010, Proceedings of the 5th International Conference on the Foundations of Digital Games FDG, P108
   Lin DY, 2018, EMPIR SOFTW ENG, V23, P771, DOI 10.1007/s10664-017-9531-3
   Lin D, 2017, EMPIR SOFTW ENG, V22, P2095, DOI 10.1007/s10664-016-9480-2
   Long J.D., 2003, Ordinal Analysis of Behavioral Data
   Maalej W, 2015, INT REQUIR ENG CONF, P116, DOI 10.1109/RE.2015.7320414
   Machkovech S., 2018, Nintendo: letting our fans review video games might not be a good idea
   Man YC, 2016, PROC INT SYMP SOFTW, P138, DOI 10.1109/ISSRE.2016.27
   Martens D, 2017, 2017 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON EMOTION AWARENESS IN SOFTWARE ENGINEERING (SEMOTION 2017), P8, DOI 10.1109/SEmotion.2017.6
   Martin W, 2017, IMPLANT THERAPY IN THE ESTHETIC ZONE: CURRENT TREATMENT MODALITIES AND MATERIALS FOR SINGLE-TOOTH REPLACEMENTS, P1
   McIlroy S, 2017, IEEE SOFTWARE, V34, P64, DOI 10.1109/MS.2015.149
   McIlroy S, 2016, EMPIR SOFTW ENG, V21, P1067, DOI 10.1007/s10664-015-9375-7
   McIntosh S, 2016, EMPIR SOFTW ENG, V21, P2146, DOI 10.1007/s10664-015-9381-9
   Nagappan M, 2013, 2013 9 JOINT M EUR S, P466, DOI [DOI 10.1145/2491411.2491415, 10.1145/2491411.2491415]
   Noei E, 2017, EMPIR SOFTW ENG, V22, P3088, DOI 10.1007/s10664-017-9507-3
   Orland K., 2014, Introducing Steam Gauge: Ars reveals Steams most popular games
   Pagano D, 2013, S VIS LANG HUM CEN C, P125, DOI 10.1109/RE.2013.6636712
   Palomba F, 2017, PROC INT CONF SOFTW, P106, DOI 10.1109/ICSE.2017.18
   Panichella S., 2017, P 2 ACM SIGSOFT INT, P8
   Panichella S, 2015, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSM.2015.7332474
   Pavel Djundik MB, 2016, STEAM DB STEAM DATAB
   Romano J, 2006, ANN M FLOR ASS I RES, P1
   Ruiz IJM, 2016, IEEE SOFTWARE, V33, P86, DOI 10.1109/MS.2015.56
   Seaman C, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P149
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Sergey G, 2016, STEAMSPY ALL DATA ST
   Sifa R., 2015, Proceedings of the Artificial Intelligence and Interactive Digital Entertainment International Conference, P198, DOI DOI 10.1609/AIIDE.V11I1.12804
   Stern C., 2012, what makes a game indie: a universal definition
   SuperData Research, 2016, NARK BRIEF YEAR REV
   Takahashi D., 2016, PwC: Game industry to grow nearly 5% annually through 2020
   Valve, 2016, STEAM COMM
   Valve, 2016, STEAM STOR
   Vasa R., 2012, AUSTR COMP HUM INT C, P241, DOI DOI 10.1145/2414536.2414577
   Villarroel L, 2016, PROC INT CONF SOFTW, P14, DOI 10.1145/2884781.2884818
   Washburn M, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P280, DOI 10.1145/2889160.2889253
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
NR 57
TC 48
Z9 50
U1 9
U2 49
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2019
VL 24
IS 1
BP 170
EP 207
DI 10.1007/s10664-018-9627-4
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HL3RV
UT WOS:000458634400006
DA 2024-07-18
ER

PT J
AU Sharif, B
   Meinken, J
   Shaffer, T
   Kagdi, H
AF Sharif, Bonita
   Meinken, John
   Shaffer, Timothy
   Kagdi, Huzefa
TI Eye movements in software traceability link recovery
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Eye-tracking; Software traceability link recovery; Continuous
   traceability; Eye-gaze benchmark
ID STATIC CONCEPT LOCATION; SOURCE-CODE; SUPPORT
AB Information Retrieval (IR) approaches, such as Latent Semantic Indexing (LSI) and Vector Space Model (VSM), are commonly applied to recover software traceability links. Recently, an approach based on developers' eye gazes was proposed to retrieve traceability links. This paper presents a comparative study on IR and eye-gaze based approaches. In addition, it reports on the possibility of using eye gaze links as an alternative benchmark in comparison to commits. The study conducted asked developers to perform bug-localization tasks on the open source subject system JabRef. The iTrace environment, which is an eye tracking enabled Eclipse plugin, was used to collect eye gaze data. During the data collection phase, an eye tracker was used to gather the source code entities (SCE's), developers looked at while solving these tasks. We present an algorithm that uses the collected gaze dataset to produce candidate traceability links related to the tasks. In the evaluation phase, we compared the results of our algorithm with the results of an IR technique, in two different contexts. In the first context, precision and recall metric values are reported for both IR and eye gaze approaches based on commits. In the second context, another set of developers were asked to rate the candidate links from each of the two techniques in terms of how useful they were in fixing the bugs. The eye gaze approach outperforms standard LSI and VSM approaches and reports a 55 % precision and 67 % recall on average for all tasks when compared to how the developers actually fixed the bug. In the second context, the usefulness results show that links generated by our algorithm were considered to be significantly more useful (to fix the bug) than those of the IR technique in a majority of tasks. We discuss the implications of this radically different method of deriving traceability links. Techniques for feature location/bug localization are commonly evaluated on benchmarks formed from commits as is done in the evaluation phase of this study. Although, commits are a reasonable source, they only capture entities that were eventually changed to fix a bug or resolve a feature. We investigate another type of benchmark based on eye tracking data, namely links generated from the bug-localization tasks given to the developers in the data collection phase. The source code entities relevant to subjected bugs recommended from IR methods are evaluated on both commits and links generated from eye gaze. The results of the benchmarking phase show that the use of eye tracking could form an effective (complementary) benchmark and add another interesting perspective in the evaluation of bug-localization techniques.
C1 [Sharif, Bonita; Meinken, John; Shaffer, Timothy] Youngstown State Univ, Dept Comp Sci & Informat Syst, Youngstown, OH 44555 USA.
   [Kagdi, Huzefa] Wichita State Univ, Dept Elect Engn & Comp Sci, Wichita, KS 67260 USA.
C3 University System of Ohio; Youngstown State University; Wichita State
   University
RP Sharif, B (corresponding author), Youngstown State Univ, Dept Comp Sci & Informat Syst, Youngstown, OH 44555 USA.
EM bsharif@ysu.edu; jmeinken@student.ysu.edu; trshaffer@student.ysu.edu;
   kagdi@cs.wichita.edu
RI Sharif, Bonita/GXZ-5409-2022
OI Sharif, Bonita/0000-0002-5178-7160
FU Direct For Computer & Info Scie & Enginr; Division of Computing and
   Communication Foundations [1553573] Funding Source: National Science
   Foundation
CR Alhindawi N, 2013, 29 IEEE INT C SOFTW
   Ali N, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P191, DOI 10.1109/ICSM.2012.6405271
   [Anonymous], 2012, Software and Systems Traceability
   [Anonymous], 1993, Software Requirements-objects, Functions and States
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Asuncion H., 2007, 6th Joint Meeting of the European Software Engineering Conference and the ACM SIGSOFT Symposium on the Foundations of Software Engineering (ESEC/FSE), P115
   Asuncion HU, 2010, 2010 ACM IEEE 32 INT, V1, P95
   Bavota G, 2013, 2013 7TH INTERNATIONAL WORKSHOP ON TRACEABILITY IN EMERGING FORMS OF SOFTWARE ENGINEERING (TEFSE), P83, DOI 10.1109/TEFSE.2013.6620160
   Binkley D, 2011, ENCY SOFTWARE ENG
   Capobianco G, 2009, 17 IEEE INT C PROGR, P148
   Cleland-Huang J., 2011, TEFSE 2011 HON HI, P17
   De Lucia A, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1276933.1276934
   De Lucia A, 2006, PROC IEEE INT CONF S, P299
   De Lucia A, 2006, INT C PROGRAM COMPRE, P307, DOI 10.1109/ICPC.2006.15
   De Lucia A, 2009, EMPIR SOFTW ENG, V14, P57, DOI 10.1007/s10664-008-9090-8
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   Dit B., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P203
   Dit B, 2013, IEEE WORK CONF MIN S, P131, DOI 10.1109/MSR.2013.6624019
   Dit B, 2013, J SOFTW-EVOL PROC, V25, P53, DOI 10.1002/smr.567
   Duchowski A., 2003, Eye Tracking Methodology: Theory and Practice
   Fritz T, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P402, DOI 10.1145/2568225.2568266
   Gethers M., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P133, DOI 10.1109/ICSM.2011.6080780
   Gotel O., 2012, 2012 IEEE 20th International Requirements Engineering Conference (RE 2012), P71, DOI 10.1109/RE.2012.6345841
   Hill E, 2013, PROC IEEE INT CONF S, P408, DOI 10.1109/ICSM.2013.59
   Jinshui Wang, 2011, 2011 IEEE 27th International Conference on Software Maintenance, P213, DOI 10.1109/ICSM.2011.6080788
   Keenan E, 2012, ICSE, P4
   Kersten M, 2005, P 2005 INT C ASP OR, P159, DOI DOI 10.1145/1052898.1052912
   Kevic Katja, 2015, P 10 JOINT M EUR SOF
   Lin J, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P363
   Lukins SK, 2010, INFORM SOFTWARE TECH, V52, P972, DOI 10.1016/j.infsof.2010.04.002
   Mäder P, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P143, DOI 10.1109/RE.2009.23
   Manning Christopher D., 2008, INTRO INFORM RETRIEV
   Marcus A, 2003, PROC INT CONF SOFTW, P125, DOI 10.1109/ICSE.2003.1201194
   Oliveto Rocco, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P68, DOI 10.1109/ICPC.2010.20
   Qusef Abdallah, 2010, 2010 IEEE International Conference on Software Maintenance. pp, P1
   Ramesh B, 2001, IEEE T SOFTWARE ENG, V27, P58, DOI 10.1109/32.895989
   Rao S., 2011, P 8 WORK C MIN SOFTW, P43
   Rodeghero P, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P390, DOI 10.1145/2568225.2568247
   Scanniello G, 2015, EMPIR SOFTW ENG, V20, P1666, DOI 10.1007/s10664-014-9327-7
   Scanniello G, 2011, CONF PROC INT SYMP C, P1, DOI 10.1109/ICPC.2011.13
   Shaffer TR, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P954, DOI 10.1145/2786805.2803188
   Sharafi Z., 2015, ELSEVIER J INFORM SO
   SHARIF B., 2011, Proceedings of the 6th International Workshop on Traceability in Emerging Forms of Software Engineering (TEFSE), P67, DOI DOI 10.1145/1987856.1987872
   Walters B., 2014, P 22 INT C PROGRAM C, P201, DOI [10.1145/2597008.2597795, DOI 10.1145/2597008.2597795]
   Walters B, 2013, 2013 7TH INTERNATIONAL WORKSHOP ON TRACEABILITY IN EMERGING FORMS OF SOFTWARE ENGINEERING (TEFSE), P51, DOI 10.1109/TEFSE.2013.6620154
   Wang JS, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P762, DOI 10.1109/ICSE.2013.6606622
   Xing ZC, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1311, DOI 10.1109/ICSE.2013.6606705
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
NR 48
TC 10
Z9 13
U1 2
U2 14
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2017
VL 22
IS 3
BP 1063
EP 1102
DI 10.1007/s10664-016-9486-9
PG 40
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EW4GE
UT WOS:000402459200005
DA 2024-07-18
ER

PT J
AU Jaafar, F
   Guéhéneuc, YG
   Hamel, S
   Khomh, F
   Zulkernine, M
AF Jaafar, Fehmi
   Gueheneuc, Yann-Gael
   Hamel, Sylvie
   Khomh, Foutse
   Zulkernine, Mohammad
TI Evaluating the impact of design pattern and anti-pattern dependencies on
   changes and faults
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Anti-patterns; Design patterns; Faults proneness; Change proneness;
   Static relationships; Co-change
ID METRICS; COMPLEXITY
AB On the one hand, design patterns are solutions to recurring design problems, aimed at increasing reuse, flexibility, and maintainability. However, much prior work found that some patterns, such as the Observer and Singleton, are correlated with large code structures and argued that they are more likely to be fault prone. On the other hand, anti-patterns describe poor solutions to design and implementation problems that highlight weaknesses in the design of software systems and that may slow down maintenance and increase the risk of faults. They have been found to negatively impact change and fault-proneness. Classes participating in design patterns and anti-patterns have dependencies with other classes, e.g., static and co-change dependencies, that may propagate problems to other classes. We investigate the impact of such dependencies in object-oriented systems by studying the relations between the presence of static and co-change dependencies and (1) the fault-proneness, (2) the types of changes, and (3) the types of faults that these classes exhibit. We analyze six design patterns and 10 anti-patterns in 39 releases of ArgoUML, JFreeChart, and XercesJ, and investigate to what extent classes having dependencies with design patterns or anti-patterns have higher odds of faults than other classes. We show that in almost all releases of the three systems, classes having dependencies with anti-patterns are more fault-prone than others while this is not always true for classes with dependencies with design patterns. We also observe that structural changes are the most common changes impacting classes having dependencies with anti-patterns. Software developers could use this knowledge about the impact of design pattern and anti-pattern dependencies to better focus their testing and reviewing activities towards the most risky classes and to propagate changes adequately.
C1 [Jaafar, Fehmi; Zulkernine, Mohammad] Queens Univ, Sch Comp, Kingston, ON, Canada.
   [Hamel, Sylvie] Univ Montreal, DIRO, Quebec City, PQ, Canada.
   [Gueheneuc, Yann-Gael; Khomh, Foutse] Ecole Polytech Montreal, DGIGL, Quebec City, PQ, Canada.
C3 Queens University - Canada; Universite de Montreal; Universite de
   Montreal; Polytechnique Montreal
RP Jaafar, F (corresponding author), Queens Univ, Sch Comp, Kingston, ON, Canada.
EM jaafar@cs.queensu.ca; yann-gael.gueheneuc@polymtl.ca;
   hamelsyl@iro.umontreal.ca; foutse.khomh@polymtl.ca;
   mzulker@cs.queensu.ca
RI Guéhéneuc, Yann-Gaël/K-9371-2019
OI Hamel, Sylvie/0000-0002-8941-2284
FU FQRNT; NSERC; Canada Research Chair in Software Patterns and Patterns of
   Software; Canada Research Chair in Software Dependability
FX This research was partially supported by FQRNT, NSERC, the Canada
   Research Chair in Software Patterns and Patterns of Software, and the
   Canada Research Chair in Software Dependability.
CR Alencar PSC, 1995, CS9529 U WAT
   [Anonymous], 2007, P INT WORKSH PRINC S
   [Anonymous], 2013, ELECT COMMUN EUR ASS
   [Anonymous], 2007, PROMISE 07, DOI DOI 10.1109/PROMISE.2007.10
   Anquetil N, 1998, PROC INT CONF SOFTW, P84, DOI 10.1109/ICSE.1998.671105
   Antoniol G, 1998, PROG COMPREHEN, P153, DOI 10.1109/WPC.1998.693342
   Aversano L, 2009, IET SOFTW, V3, P395, DOI 10.1049/iet-sen.2008.0105
   Aversano Lerina., 2007, PROC THE 6 EUROPEAN, P385, DOI [DOI 10.1145/1287624.1287680, 10.1145/1287624.1287680.]
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Bernstein A., 2007, 9 INT WORKSHOP PRINC, P11
   Binkley David, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering - Workshops, P25, DOI 10.1109/ASEW.2008.4686318
   Bouktif S, 2006, EPMRT200603 DEP COMP
   Brown K, 1996, TR9607 U ILL URB CHA
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   D'Ambros M, 2009, WORK CONF REVERSE EN, P135, DOI 10.1109/WCRE.2009.19
   Dasarathy B. V., 1991, Nearest neighbor (NN) norms, V317
   Gall H, 1998, PROC IEEE INT CONF S, P190, DOI 10.1109/ICSM.1998.738508
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Gatrell M., 2011, Research Challenges in Information Science (RCIS), 2011 Fifth International Conference on, P1, DOI DOI 10.1109/RCIS.2011.6006827
   Gerlec C, 2012, 5 BALK C INF, P117
   Guéhéneuc YG, 2008, IEEE T SOFTWARE ENG, V34, P667, DOI 10.1109/TSE.2008.48
   Guéhéneuc YG, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P172, DOI 10.1109/WCRE.2004.21
   Guéhéneuc YG, 2004, ACM SIGPLAN NOTICES, V39, P301, DOI 10.1145/1035292.1029002
   Halstead M.H., 1977, OPERATING PROGRAMMIN
   Hassan AE, 2005, PROC IEEE INT CONF S, P263
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Hosmer D. W., WILEY SERIES PROBABI
   Iacob Claudia., 2011, P 3 ACM SIGCHI S ENG, P217
   Jaafar F., 2011, 2011 18th Working Conference on Reverse Engineering, P325, DOI 10.1109/WCRE.2011.47
   Jaafar F, 2013, WORK CONF REVERSE EN, P351, DOI 10.1109/WCRE.2013.6671310
   Jahnke JH, 1997, LECT NOTES COMPUT SC, V1301, P193, DOI 10.1145/267896.267911
   Khomh F, 2012, EMPIR SOFTW ENG, V17, P243, DOI 10.1007/s10664-011-9171-y
   Kramer C, 1996, PROCEEDINGS OF THE THIRD WORKING CONFERENCE ON REVERSE ENGINEERING, P208, DOI 10.1109/WCRE.1996.558905
   Kullbach B, 1999, PROCEEDINGS OF THE THIRD EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P42, DOI 10.1109/CSMR.1999.756681
   Lanza Michele, 2006, Objectoriented metrics in practice: using software metrics to characterize, evaluate, and improve the design of object-oriented systems
   liwerski J, 2005, ACM SIGSOFT SOFTWARE, V30, P1, DOI [10.1145/1082983.1083147, DOI 10.1145/1083142.1083147, DOI 10.1145/1082983.1083147]
   Marcus A, 2008, IEEE T SOFTWARE ENG, V34, P287, DOI 10.1109/TSE.2007.70768
   Marinescu R, 2011, IEEE INT WORK C SO, P65, DOI 10.1109/SCAM.2011.9
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Nagappan N, 2005, 27 INT C SOFTW ENG
   Neuhaus S, 2007, CCS'07: PROCEEDINGS OF THE 14TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P529
   Oliveto R, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P820, DOI 10.1145/1985793.1985913
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   Pedersen T., 1996, Proceedings of the South Central SAS User's Group (SCSUG-96) Conference, P188
   Pietrzak B, 2006, LECT NOTES COMPUT SC, V4044, P75
   Quilici A, 1997, J AUTOMATED SOFTWARE, V5, P347
   Ratiu D, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P223
   Romano D., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P437, DOI 10.1109/WCRE.2012.53
   Rothman KJ, 2004, PHARMACOEPIDEM DR S, V13, P519, DOI 10.1002/pds.1001
   Settas D, 2012, EXPERT SYST APPL, V39, P9041, DOI 10.1016/j.eswa.2012.02.049
   Sheskin DJ., 2003, HDB PARAMETRIC NONPA, DOI [10.1201/9781420036268, DOI 10.1201/9781420036268]
   Subramanyam R, 2003, IEEE T SOFTWARE ENG, V29, P297, DOI 10.1109/TSE.2003.1191795
   Tatsubori M, 1998, P OOPSLA 98 WORKSH R, P56
   Tsantalis N, 2006, IEEE T SOFTWARE ENG, V32, P896, DOI 10.1109/TSE.2006.112
   van Emden E, 2002, NINTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P97, DOI 10.1109/WCRE.2002.1173068
   Vokác M, 2004, IEEE T SOFTWARE ENG, V30, P904, DOI 10.1109/TSE.2004.99
   Webster BruceF., 1995, PITFALLS OBJECT ORIE
   Wuyts R, 1998, TOOLS 26 - TECHNOLOGY OF OBJECT-ORIENTED LANGUAGES - PROCEEDINGS, P112, DOI 10.1109/TOOLS.1998.711007
   Yamashita A, 2013, INFORM SOFTWARE TECH, V55, P2223, DOI 10.1016/j.infsof.2013.08.002
   Yamashita A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P306, DOI 10.1109/ICSM.2012.6405287
   Yin R. K., 2017, CASE STUDY RES DESIG
   Ying ATT, 2004, IEEE T SOFTWARE ENG, V30, P574, DOI 10.1109/TSE.2004.52
   Yinn RK, 2002, CASE STUDY RES DESIG
   Zimmermann T, 2004, PROC INT CONF SOFTW, P563, DOI 10.1109/ICSE.2004.1317478
   Zimmermann T, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P531, DOI 10.1145/1368088.1368161
NR 68
TC 31
Z9 33
U1 5
U2 15
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2016
VL 21
IS 3
BP 896
EP 931
DI 10.1007/s10664-015-9361-0
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DQ2VO
UT WOS:000379061700006
DA 2024-07-18
ER

PT J
AU Maffort, C
   Valente, MT
   Terra, R
   Bigonha, M
   Anquetil, N
   Hora, A
AF Maffort, Cristiano
   Valente, Marco Tulio
   Terra, Ricardo
   Bigonha, Mariza
   Anquetil, Nicolas
   Hora, Andre
TI Mining architectural violations from version history
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software architecture conformance; Software architecture erosion; Mining
   software repositories; Reflexion models
ID DESIGN; CODE
AB Software architecture conformance is a key software quality control activity that aims to reveal the progressive gap normally observed between concrete and planned software architectures. However, formally specifying an architecture can be difficult, as it must be done by an expert of the system having a high level understanding of it. In this paper, we present a lightweighted approach for architecture conformance based on a combination of static and historical source code analysis. The proposed approach relies on four heuristics for detecting absences (something expected was not found) and divergences (something prohibited was found) in source code based architectures. We also present an architecture conformance process based on the proposed approach. We followed this process to evaluate the architecture of two industrial-strength information systems, achieving an overall precision of 62.7 % and 53.8 %. We also evaluated our approach in an open-source information retrieval library, achieving an overall precision of 59.2 %. We envision that an heuristicbased approach for architecture conformance can be used to rapidly raise architectural warnings, without deeply involving experts in the process.
C1 [Maffort, Cristiano] CEFET MG, Dept Comp Engn, Belo Horizonte, MG, Brazil.
   [Maffort, Cristiano; Valente, Marco Tulio; Bigonha, Mariza] Univ Fed Minas Gerais, Dept Comp Sci, Belo Horizonte, MG, Brazil.
   [Terra, Ricardo] Univ Fed Lavras, Dept Comp Sci, Lavras, Brazil.
   [Anquetil, Nicolas; Hora, Andre] INRIA, RMoD Team, Lille Nord Europe, France.
C3 Universidade Federal de Minas Gerais; Universidade Federal de Lavras;
   Inria
RP Maffort, C (corresponding author), CEFET MG, Dept Comp Engn, Belo Horizonte, MG, Brazil.
EM cristiano@decom.cefetmg.br; mtov@dcc.ufmg.br; terra@dcc.ufla.br;
   mariza@dcc.ufmg.br; nicolas.anquetil@inria.fr;
   andre.cavalcante.hora@inria.fr
RI Hora, Andre/HTP-0699-2023; Bigonha, Mariza/AAK-5829-2020; Bigonha,
   Mariza/ABE-3200-2020
OI Hora, Andre/0000-0003-4900-1330; Bigonha, Mariza/0000-0002-3471-0452;
   Valente, Marco Tulio/0000-0002-8180-7548; Anquetil,
   Nicolas/0000-0003-1486-8399
FU CAPES; FAPEMIG; CNPq
FX Our research is supported by CAPES, FAPEMIG, and CNPq. We thank the
   architects of the SGA and M2M systems for validating the warnings raised
   by the proposed approach.
CR [Anonymous], 2005, PMD applied
   [Anonymous], 2006, Proceedings of the 14th ACM SIGSOFT international symposium on Foundations of software engineering (SIGSOFT '06/FSE-14), DOI 10.1145/1181775.1181781
   [Anonymous], 65 BELL LAB
   Araújo JEM, 2011, IET SOFTW, V5, P366, DOI 10.1049/iet-sen.2009.0083
   Baeza-Yates R A, 2011, MODERN INFORM RETRIE
   Bittencourt R, 2012, THESIS
   Bruna J., 2014, P INT C LEARN REPR
   Brunet J., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P143, DOI 10.1109/ICSM.2011.6080781
   Ducasse S., 2011, Tech. Rep.
   Ducasse S, 2009, IEEE T SOFTWARE ENG, V35, P573, DOI 10.1109/TSE.2009.19
   Eichberg M, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P391, DOI 10.1145/1368088.1368142
   Fowler M., 2002, Patterns of Enterprise Application Architecture
   Hammad M, 2009, INT C PROGRAM COMPRE, P20, DOI 10.1109/ICPC.2009.5090024
   Holt RC, 1998, FIFTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P210, DOI 10.1109/WCRE.1998.723191
   Hora A., 2013, 20 WORK C REV ENG WC, P1
   Hou DQ, 2006, IEEE T SOFTWARE ENG, V32, P404, DOI 10.1109/TSE.2006.60
   Hovemeyer D, 2004, ACM SIGPLAN NOTICES, V39, P92, DOI 10.1145/1052883.1052895
   Kim S., 2007, EUROPEAN SOFTWARE EN, P45
   Knodel Jens, 2007, 2007 WORKING IEEEIFI, P12, DOI 10.1109/wicsa.2007.1
   Koschke R, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P36, DOI 10.1109/WCRE.2003.1287235
   Koschke R, 2010, EUR CON SFTWR MTNCE, P1, DOI 10.1109/CSMR.2010.10
   Larus JB, 2004, IEEE SOFTWARE, V21, P92, DOI 10.1109/MS.2004.1293079
   Livshits V.B., 2005, ESEC SIGSOFT FSE, P296, DOI [DOI 10.1145/1095430.1081754, DOI 10.1145/1081706.1081754]
   Maffort C., 2013, 25 INT C SOFTW ENG K, P375
   Maffort C, 2013, WORK CONF REVERSE EN, P222, DOI 10.1109/WCRE.2013.6671297
   Mens K, 2006, COMPUT LANG SYST STR, V32, P140, DOI 10.1016/j.cl.2005.09.002
   Mileva YM, 2011, LECT NOTES COMPUT SC, V6813, P105, DOI 10.1007/978-3-642-22655-7_6
   Murphy G. C., 1995, SIGSOFT Software Engineering Notes, V20, P18, DOI 10.1145/222132.222136
   Murphy GC, 2001, IEEE T SOFTWARE ENG, V27, P364, DOI 10.1109/32.917525
   Nguyen Tien N, 2010, Proceedings of the 32Nd ACM/IEEE International Conference on Software Engineering-Volume 1, ICSE '10, P315
   Nierstrasz O., 2005, ACM SIGSOFT SOFTWARE, V30, P1, DOI [DOI 10.1145/1095430, 10.1145/1095430.1081707, DOI 10.1145/1095430.1081707]
   Palomba F, 2013, IEEE INT CONF AUTOM, P268, DOI 10.1109/ASE.2013.6693086
   Passos L, 2010, IEEE SOFTWARE, V27, P82, DOI 10.1109/MS.2009.117
   Perry D. E., 1992, SIGSOFT Software Engineering Notes, V17, P40, DOI 10.1145/141874.141884
   Sarkar S, 2009, J SYST SOFTWARE, V82, P1891, DOI 10.1016/j.jss.2009.06.039
   Sarkar S, 2009, IEEE SOFTWARE, V26, P28, DOI 10.1109/MS.2009.42
   Silva L.L., 2014, 13 INT C MOD MODULAR, P49, DOI [10.1145/2577080., DOI 10.1145/2577080]
   Terra R., 2013, SOFTWARE PRACTICE EX, P1
   Terra R, 2012, EUR CON SFTWR MTNCE, P335, DOI 10.1109/CSMR.2012.40
   Terra R, 2009, SOFTWARE PRACT EXPER, V39, P1073, DOI 10.1002/spe.931
NR 40
TC 11
Z9 11
U1 0
U2 9
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2016
VL 21
IS 3
BP 854
EP 895
DI 10.1007/s10664-014-9348-2
PG 42
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DQ2VO
UT WOS:000379061700005
DA 2024-07-18
ER

PT J
AU Robbes, R
   Róthlisberger, D
   Tanter, É
AF Robbes, Romain
   Rothlisberger, David
   Tanter, Eric
TI Object-oriented software extensions in practice
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Object-oriented programming; Software evolution; Data extensions;
   Operation extensions; Empirical studies; Mining software repositories
AB As software evolves, data types have to be extended, possibly with new data variants or new operations. Object-oriented design is well-known to support data extensions well. In fact, most popular books showcase data extensions to illustrate how objects adequately support software evolution. Conversely, operation extensions are typically better supported by a functional design. A large body of programming language research has been devoted to the challenge of properly supporting both kinds of extensions. While this challenge is well-known from a language design standpoint, it has not been studied empirically. We perform such a study on a large sample of Smalltalk projects (over half a billion lines of code) and their evolution over more than 130,000 committed changes. Our study of extensions during software evolution finds that extensions are indeed prevalent evolution tasks, and that both kinds of extensions are equally common in object-oriented software. We also discuss findings about: the evolution of the kinds of extensions over time; the viability of the Visitor pattern as an object-oriented solution to operation extensions; the change-proneness of extensions; and the prevalence of extensions by third parties. This study suggests that object-oriented design alone is not sufficient, and that practical support for both kinds of program decomposition approaches are in fact needed, either by the programming language or by the development environment.
C1 [Robbes, Romain; Tanter, Eric] Univ Chile, PLEIAD Lab, Comp Sci Dept DCC, Santiago, Chile.
   [Rothlisberger, David] Univ Diego Portales, Sch Informat & Telecommun, Santiago, Chile.
C3 Universidad de Chile; University Diego Portales
RP Robbes, R (corresponding author), Univ Chile, PLEIAD Lab, Comp Sci Dept DCC, Santiago, Chile.
EM rrobbes@dcc.uchile.cl; roethlis@mail.udp.cl; etanter@dcc.uchile.cl
RI Robbes, Romain/H-3771-2013; Tanter, Éric/A-7955-2008
OI Tanter, Éric/0000-0002-7359-890X
FU FONDECYT [11110463, 1110051]
FX We thank the ECOOP and EMSE reviewers for their thorough and helpful
   comments. R. Robbes and E. Tanter are partially funded by FONDECYT
   Projects 11110463 and 1110051, respectively.
CR [Anonymous], PROFESSIONAL COMPUTI
   [Anonymous], P ACM SIGSOFT 20 INT
   [Anonymous], 1948, BELL SYST TECH J
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Aversano Lerina., 2007, PROC THE 6 EUROPEAN, P385, DOI [DOI 10.1145/1287624.1287680, 10.1145/1287624.1287680.]
   Baxter G, 2006, ACM SIGPLAN NOTICES, V41, P397, DOI 10.1145/1167515.1167507
   Booch G., 2007, Object-Oriented Analysis and Design with Applications, Vthird
   Callaú O, 2013, EMPIR SOFTW ENG, V18, P1156, DOI 10.1007/s10664-012-9203-2
   Clifton C, 2000, ACM SIGPLAN NOTICES, V35, P130, DOI 10.1145/354222.353181
   Cook WR, 2009, ACM SIGPLAN NOTICES, V44, P557, DOI 10.1145/1639949.1640133
   Cook WR, 1990, LECT NOTES COMPUTER, V73
   Erlikh L., 2000, IT Professional, V2, P17, DOI 10.1109/6294.846201
   Gîrba T, 2005, NINTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P2, DOI 10.1109/CSMR.2005.15
   Gorschek T., 2010, Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering, ICSE, P115, DOI DOI 10.1145/1806799.1806820
   Grechanik M, 2010, P 4 INT S EMP SOFTW, P11
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Kapser CJ, 2006, J SOFTW MAINT EVOL-R, V18, P61, DOI 10.1002/smr.327
   Kiczales G., 2001, ECOOP 2001 - Object-Oriented Programming. 15th European Conference. Proceedings (Lecture Notes in Computer Science Vol.2072), P327
   Krishnamurthi S., 1998, ECOOP'98 - Object-Oriented Programming. 12th European Conference. Proceedings, P91, DOI 10.1007/BFb0054088
   Lehman M. M., 1985, Program Evolution: Processes of Software Change
   Louridas P, 2008, ACM T SOFTW ENG METH, V18, DOI 10.1145/1391984.1391986
   Mayrand J, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P244, DOI 10.1109/ICSM.1996.565012
   Meyer B, 2009, BEAUTIFUL ARCHITECTU, P315
   Oliveira BCD, 2009, LECT NOTES COMPUT SC, V5653, P269, DOI 10.1007/978-3-642-03013-0_13
   Parnin C, 2013, EMPIR SOFTW ENG, V18, P1047, DOI 10.1007/s10664-012-9236-6
   Posnett D., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P362, DOI 10.1109/ASE.2011.6100074
   Reynolds J.C., 1975, NEW DIRECTIONS ALGOR, P157
   Robbes R, 2005, EIGHTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P155, DOI 10.1109/IWPSE.2005.32
   Robbes R, 2011, P 33 ACM IEEE INT C, P904
   Robbes R, 2012, LECT NOTES COMPUT SC, V7313, P28, DOI 10.1007/978-3-642-31057-7_3
   Schwarz N, 2012, P 34 ACM IEEE INT C
   Shalloway Alan., 2004, Design Patterns Explained: A New Perspective on Object-Oriented Design
   Tempero E, 2008, LECT NOTES COMPUT SC, V5142, P667, DOI 10.1007/978-3-540-70592-5_28
   Torgersen M, 2004, LECT NOTES COMPUT SC, V3086, P123
   Van Rysselberghe Filip., 2007, MSR 07, P16
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Wadler P, 1998, MAIL JAVA GENERICITY
   Zenger Matthias, 2005, WORKSH FDN OBJ OR LA
   Zimmermann T, 2005, IEEE T SOFTWARE ENG, V31, P429, DOI 10.1109/TSE.2005.72
NR 39
TC 5
Z9 7
U1 0
U2 13
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2015
VL 20
IS 3
BP 745
EP 782
DI 10.1007/s10664-013-9298-0
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CI1DF
UT WOS:000354480800005
DA 2024-07-18
ER

PT J
AU Polancic, G
   Jost, G
   Hericko, M
AF Polancic, Gregor
   Jost, Gregor
   Hericko, Marjan
TI An experimental investigation comparing individual and collaborative
   work productivity when using desktop and cloud modeling tools
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Modeling tools; CASE; Desktop computing; Cloud computing; Productivity;
   Collaboration
ID INFORMATION-TECHNOLOGY; ACCEPTANCE; FRAMEWORK
AB Successful modeling tools need to effectively support individual as well as team-based work (collaboration) within colocated and virtual environments. In the past, achieving this has been challenging, since traditional modeling tools are desktop-based and thus suitable for individual and colocated work only. However, with the rise of web-based architectures and the cloud paradigm, desktop modeling tools now have rivals in their web-based counterparts that are especially suited for online collaboration (e-collaboration). The objective of our research was to probe the question as to 'which type of modeling tools (desktop or cloud-based) performs better in cases of individual work and e-collaboration', and to obtain insights into the sources of the strengths and weaknesses regarding both types of modeling tools. A controlled experiment was performed in which we addressed two types of modeling tools-desktop and cloud-based, in respect to two types of work-individual and e-collaboration. Within these treatments, we observed the productivity of 129 undergraduate IT students, who performed different types of modeling activities. The experimental participants reported no statistical significant differences between self-reported expertise with the investigated tools as well as their overall characteristics. However, they did finish individual and e-collaborative activities faster when using cloud modeling tool, where significant differences in favor of the cloud modeling tool were detected during e-collaboration. If we aggregate the results, we can argue that cloud modeling tools are comparable with desktop modeling tools during individual activities and outperform them during e-collaboration. Our findings also correlate with the related research, stating that with the use of state-of-the-art Web technologies, cloud-based applications can achieve the user experience of desktop applications.
C1 [Polancic, Gregor; Jost, Gregor; Hericko, Marjan] Univ Maribor, Fac Elect Engn & Comp Sci, SLO-2000 Maribor, Slovenia.
C3 University of Maribor
RP Polancic, G (corresponding author), Univ Maribor, Fac Elect Engn & Comp Sci, SLO-2000 Maribor, Slovenia.
EM gregor.polancic@uni-mb.si; gregor.jost@uni-mb.si;
   marjan.hericko@uni-mb.si
CR Alharbi ST, 2012, INT J CLOUD APPL COM, V2, P1, DOI 10.4018/ijcac.2012040101
   [Anonymous], 2004, 91264 ISO
   [Anonymous], 1974, Statistical Papers, DOI DOI 10.1007/BF02922904
   Basili V. R., 1994, Encyclopedia of Software Engineering, V1, P528
   Benlian A, 2011, DECIS SUPPORT SYST, V52, P232, DOI 10.1016/j.dss.2011.07.007
   Bibi S, 2012, IEEE SOFTWARE, V29, P86, DOI 10.1109/MS.2011.119
   BLAND JM, 1995, BRIT MED J, V310, P170, DOI 10.1136/bmj.310.6973.170
   Chebrolu SB, 2012, 5 INT C CLOUD COMP C, P932
   Chieu TC, 2009, ICEBE 2009: IEEE INTERNATIONAL CONFERENCE ON E-BUSINESS ENGINEERING, PROCEEDINGS, P281, DOI 10.1109/ICEBE.2009.45
   Chinosi M, 2012, COMPUT STAND INTER, V34, P124, DOI 10.1016/j.csi.2011.06.002
   Clason D.L., 1994, Journal of Agricultural Education, V35, P31
   Dale V, 2012, USABILITY DESKTOP AP
   de Valck K, 2009, DECIS SUPPORT SYST, V47, P185, DOI 10.1016/j.dss.2009.02.008
   Desisto RP, 2011, ESSENTIAL SAAS OVERV, P15
   Dillon Tharam., 2010, Cloud Computing: Issues and Challenges, P27, DOI DOI 10.1109/AINA.2010.187
   Du J, 2013, J SYST SOFTWARE, V86, P2034, DOI 10.1016/j.jss.2013.03.012
   Dyba T, 2005, IEEE SOFTWARE, V22, P58, DOI 10.1109/MS.2005.6
   Ellis C., 1994, Transcending Boundaries, CSCW '94. Proceedings of the Conference on Computer Supported Cooperative Work, P79, DOI 10.1145/192844.192878
   ELLIS CA, 1991, COMMUN ACM, V34, P38
   Ferreira A, 2007, LECT NOTES COMPUT SC, V4402, P82
   Fuks H, 2005, INT J COOP INF SYST, V14, P299, DOI 10.1142/S0218843005001171
   García-Magariño I, 2010, INFORM SOFTWARE TECH, V52, P422, DOI 10.1016/j.infsof.2009.10.008
   Gerosa M. A., 2003, Journal of Interactive Learning Research, V14, P315
   Godse M, 2009, IEEE INT CONF CLOUD, P155, DOI 10.1109/CLOUD.2009.74
   Holden RJ, 2010, J BIOMED INFORM, V43, P159, DOI 10.1016/j.jbi.2009.07.002
   Holzinger A, 2010, ICE-B 2010: PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON E-BUSINESS, P124
   Iosup A, 2011, IEEE T PARALL DISTR, V22, P931, DOI 10.1109/TPDS.2011.66
   Ju J, 2010, RES KEY TECHNOLOGY S, P384
   Katzmarzik A, 2011, BUS INFORM SYST ENG+, V3, P19, DOI 10.1007/s12599-010-0142-4
   Keller A, 2009, TECHNOL FORECAST SOC, V76, P1044, DOI 10.1016/j.techfore.2009.03.005
   Kitchenham B A., 2007, Guidelines for performing systematic literature reviews in software engineering p, P65
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kuhn D., 1989, ANN WEST COMP S PITT
   Legris P, 2003, INFORM MANAGE-AMSTER, V40, P191, DOI 10.1016/S0378-7206(01)00143-4
   Mader Stewart., 2007, WIKIPATTERNS
   Mamcenko J., 2004, INTRO LOTUS NOTES CO
   Mann J, 2011, CLOUD COMPUTING MEAN, V4
   Marston S, 2011, DECIS SUPPORT SYST, V51, P176, DOI 10.1016/j.dss.2010.12.006
   Martin W.E., 2012, QUANTITATIVE STAT RE
   Melao N, 2000, INFORM SYST J, V10, P105, DOI 10.1046/j.1365-2575.2000.00075.x
   Mell Peter., The NIST Definition of Cloud Computing. page, P7, DOI [10.1136/emj.2010.096966, DOI 10.1136/EMJ.2010.096966.HTTP://WWW.MENDELEY.C0M/RESEARCH/THE-NIST-DEFINITI0N-AB0UT-CL0UD-C0MPUTING/]
   Mili H, 2010, ACM COMPUT SURV, V43, DOI 10.1145/1824795.1824799
   Min D, 1999, IEEE SMC 99 C P IEEE, V5, P720
   Mohagheghi P, 2010, APPROACH EMPIRICAL E, P6
   Neuman W.L., 2005, SOCIAL RES METHODS, V6th
   Opitz N., 2012, 2012 45th Hawaii International Conference on System Sciences (HICSS), P1593, DOI 10.1109/HICSS.2012.557
   Oz E, 2005, INFORM MANAGE-AMSTER, V42, P789, DOI 10.1016/j.im.2004.08.003
   Patel H, 2012, APPL ERGON, V43, P1, DOI 10.1016/j.apergo.2011.04.009
   Quinn LS, 2010, COMP ONLINE VS TRADI
   Roca JC, 2006, INT J HUM-COMPUT ST, V64, P683, DOI 10.1016/j.ijhcs.2006.01.003
   SCHMIDT K, 1991, PROCEEDINGS OF THE SECOND EUROPEAN CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK : ECSCW 91, P1
   Schmietendorf A, 2008, LECT NOTES COMPUT SC, V5338, P141
   Schuman S., 2006, Creating a culture of collaboration: The International Association of Facilitators handbook, V4
   Serce FC, 2011, COMPUT HUM BEHAV, V27, P490, DOI 10.1016/j.chb.2010.09.017
   Shapiro R, 2011, BPMN 2 0 HDB METHODS
   SHERIFF PD, 2002, DESIGNING WEB DESKTO
   *SPRING SING, 2011, GUID PROD MEAS
   Sun A, 2013, ENVIRON MODELL SOFTW, V41, P93, DOI 10.1016/j.envsoft.2012.11.008
   Thong JYL, 2002, INT J HUM-COMPUT ST, V57, P215, DOI [10.1016/S1071-5819(02)91024-4, 10.1006/ijhc.1024]
   Torchiano Marco, 2011, International Journal on Software Tools for Technology Transfer, V13, P151, DOI 10.1007/s10009-010-0182-6
   Trochim W. M., 2006, RES METHODS KNOWLEDG
   van Ommeren E., 2009, COLLABORATION CLOUD
   VMware, 2009, SOLV DESKT DIL US CE, P6
   Wang LZ, 2008, HPCC 2008: 10TH IEEE INTERNATIONAL CONFERENCE ON HIGH PERFORMANCE COMPUTING AND COMMUNICATIONS, PROCEEDINGS, P825, DOI 10.1109/HPCC.2008.38
   Wang Y, 2006, E COLLABORATION LIT, P132
   WINTER JCF, 2010, PRACT ASSESS RES EVA, V15, P16
   Wu WW, 2011, EXPERT SYST APPL, V38, P15057, DOI 10.1016/j.eswa.2011.05.039
   Wu WW, 2011, J SYST SOFTWARE, V84, P435, DOI 10.1016/j.jss.2010.11.890
   Xu X, 2012, ROBOT CIM-INT MANUF, V28, P75, DOI 10.1016/j.rcim.2011.07.002
   Yan ZQ, 2010, LECT NOTES BUS INF, V67, P121
   양서정, 2010, Asia Pacific Journal of Information Systems, V20, P87
NR 71
TC 4
Z9 6
U1 0
U2 20
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2015
VL 20
IS 1
BP 142
EP 175
DI 10.1007/s10664-013-9280-x
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA AZ7EN
UT WOS:000348381800005
DA 2024-07-18
ER

PT J
AU Borg, M
   Runeson, P
   Ardö, A
AF Borg, Markus
   Runeson, Per
   Ardo, Anders
TI Recovering from a decade: a systematic mapping of information retrieval
   approaches to software traceability
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Traceability; Information retrieval; Software artifacts; Systematic
   mapping study
ID OBJECT-ORIENTED DESIGN; CENTRIC TRACEABILITY; DEFECT REPORTS;
   REQUIREMENTS; CODE; LINKS; DOCUMENTATION; RELEVANCE; SUPPORT;
   MAINTENANCE
AB Engineers in large-scale software development have to manage large amounts of information, spread across many artifacts. Several researchers have proposed expressing retrieval of trace links among artifacts, i.e. trace recovery, as an Information Retrieval (IR) problem. The objective of this study is to produce a map of work on IR-based trace recovery, with a particular focus on previous evaluations and strength of evidence. We conducted a systematic mapping of IR-based trace recovery. Of the 79 publications classified, a majority applied algebraic IR models. While a set of studies on students indicate that IR-based trace recovery tools support certain work tasks, most previous studies do not go beyond reporting precision and recall of candidate trace links from evaluations using datasets containing less than 500 artifacts. Our review identified a need of industrial case studies. Furthermore, we conclude that the overall quality of reporting should be improved regarding both context and tool details, measures reported, and use of IR terminology. Finally, based on our empirical findings, we present suggestions on how to advance research on IR-based trace recovery.
C1 [Borg, Markus; Runeson, Per] Lund Univ, Dept Comp Sci, S-22100 Lund, Sweden.
   [Ardo, Anders] Lund Univ, Dept Elect & Informat Technol, Lund, Sweden.
C3 Lund University; Lund University
RP Borg, M (corresponding author), Lund Univ, Dept Comp Sci, Box 118, S-22100 Lund, Sweden.
EM markus.borg@cs.lth.se; per.runeson@cs.lth.se; anders.ardo@eit.lth.se
RI Runeson, Per/H-5113-2019; Borg, Markus/F-3609-2010
OI Runeson, Per/0000-0003-2795-4851; Borg, Markus/0000-0001-7879-4371
FU Industrial Excellence Center EASE - Embedded Applications Software
   Engineering
FX This work was funded by the Industrial Excellence Center EASE - Embedded
   Applications Software Engineering.<SUP>6</SUP> Thanks go to our
   librarian Mats Berglund for working on the search strings, and Lorand
   Dali for excellent comments on IR details.
CR Abadi A, 2008, INT C PROGRAM COMPRE, P103, DOI 10.1109/ICPC.2008.30
   AITCHISON J., 2000, THESAURUS CONSTRUCTI, V4th
   Ali N., 2011, 2011 18th Working Conference on Reverse Engineering, P45, DOI 10.1109/WCRE.2011.16
   Ali N, 2012, SOFTWARE SYSTEMS TRA
   Ali N, 2011, CONF PROC INT SYMP C, P111, DOI 10.1109/ICPC.2011.42
   [Anonymous], EXPT SOFTWARE ENG PR
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], 2001, DATA ENG B, DOI 10.1.1.117.7676.
   [Anonymous], CISP 09 IEEE 2 INT C
   [Anonymous], J SOFTWARE MAINTENAN
   [Anonymous], 2006, P 2006 INT WORKSHOP
   [Anonymous], 2005, JOENS LEARN INSTR S
   [Anonymous], 2012, Software and Systems Traceability
   [Anonymous], 2011, P INT WORKSH MACH LE
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Antoniol G., 1999, Sixth Working Conference on Reverse Engineering (Cat. No.PR00303), P136, DOI 10.1109/WCRE.1999.806954
   Antoniol G, 2000, PROC IEEE INT CONF S, P40, DOI 10.1109/ICSM.2000.883003
   Antoniol G, 1999, PROG COMPREHEN, P151, DOI 10.1109/WPC.1999.777754
   Antoniol G, 2000, PROG COMPREHEN, P79, DOI 10.1109/WPC.2000.852482
   Assawamekin N, 2010, KNOWL INF SYST, V25, P493, DOI 10.1007/s10115-009-0259-2
   Asuncion HU, 2010, 2010 ACM IEEE 32 INT, V1, P95
   Ayari K., 2007, Proceedings of the 2007 Conference of the Center for Advanced Studies on Collaborative Research, CASCON '07, P215
   Bacchelli A., 2010, Proceedings of the 32nd International Conference on Software Engineering, P375
   Baeza-Yates R A, 2011, MODERN INFORM RETRIE
   Banko M, 2001, 39TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P26, DOI 10.3115/1073012.1073017
   Ben Charrada E., 2011, P 12 INT WORKSH PRIN, P21
   Bianchi A, 2000, PROG COMPREHEN, P149, DOI 10.1109/WPC.2000.852489
   Binkley D, 2010, ENCY SOFTWARE ENG
   Blei DM, 2007, ANN APPL STAT, V1, P17, DOI 10.1214/07-AOAS114
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Borg M, 2012, P 16 INT C EV ASS SO
   BORILLO M, 1992, ECAI 92 - 10TH EUROPEAN CONFERENCE ON ARTIFICIAL INTELLIGENCE : PROCEEDINGS, P593
   BRAS M, 1993, APPLICATIONS OF ARTIFICIAL INTELLIGENCE IN ENGINEERING VIII, VOL 1, P275
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Capobianco G, 2009, WORK CONF REVERSE EN, P195, DOI 10.1109/WCRE.2009.14
   Capobianco G, 2009, INT C PROGRAM COMPRE, P148, DOI 10.1109/ICPC.2009.5090038
   Carnegie Mellon Software Engineering Institute, 2010, CMMI DEV VERS 1 3
   CASTELL N, 1994, INDUSTRIAL AND ENGINEERING APPLICATIONS OF ARTIFICIAL INTELLIGENCE AND EXPERT SYSTEMS, P37
   Chang J, 2010, ANN APPL STAT, V4, P124, DOI 10.1214/09-AOAS309
   Charikar Moses, 1997, P 29 ANN ACM S THEOR, P626, DOI DOI 10.1145/258533.258657
   Chen X., 2010, IEEE/ACM International Conference on Automated Software Engineering, P505
   Chen XF, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P912, DOI 10.1145/1985793.1985943
   Chengxiang Zhai, 2001, Proceedings of the 2001 ACM CIKM. Tenth International Conference on Information and Knowledge Management, P403, DOI 10.1145/502585.502654
   ChengXiang Zhai, 2008, Foundations and Trends in Information Retrieval, V2, P137, DOI 10.1561/1500000008
   Cleland-Huang J, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P135, DOI 10.1109/RE.2005.78
   Cleland-Huang J, 2003, IEEE T SOFTWARE ENG, V29, P796, DOI 10.1109/TSE.2003.1232285
   Cleland-Huang J., 2011, P 6 INT WORKSH TRAC
   Cleland-Huang J, 2008, IEEE T SOFTWARE ENG, V34, P685, DOI 10.1109/TSE.2008.45
   Cleland-Huang J, 2007, COMPUTER, V40, P27, DOI 10.1109/MC.2007.195
   CLELANDHUANG J, 2006, COETGCT060109
   Cleverdon C. W., 1991, SIGIR Forum, P3
   Croft W. B., 1991, SIGIR Forum, P32
   Cuddeback D., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P231, DOI 10.1109/RE.2010.35
   Czauderna A., 2011, P 6 INT WORKSHOP TRA, P75
   Dag JNO, 2006, EMPIR SOFTW ENG, V11, P303, DOI 10.1007/s10664-006-6405-5
   Dag JNO, 2004, 12TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P283
   De Lucia A, 2005, NINTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P32, DOI 10.1109/CSMR.2005.7
   De Lucia A, 2004, PROC IEEE INT CONF S, P306, DOI 10.1109/ICSM.2004.1357816
   De Lucia Andrea, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P39, DOI 10.1109/ASE.2008.14
   De Lucia A, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1276933.1276934
   De Lucia A, 2006, PROC IEEE INT CONF S, P299
   De Lucia A, 2006, PROC IEEE INT CONF S, P274
   De Lucia A, 2006, INT C PROGRAM COMPRE, P317, DOI 10.1109/ICPC.2006.28
   De Lucia A, 2011, CONF PROC INT SYMP C, P21, DOI 10.1109/ICPC.2011.34
   De Lucia A, 2009, PROC IEEE INT CONF S, P371, DOI 10.1109/ICSM.2009.5306317
   De Lucia A, 2006, INT C PROGRAM COMPRE, P307, DOI 10.1109/ICPC.2006.15
   De Lucia A, 2008, 2008 FRONTIERS OF SOFTWARE MAINTENANCE, P21, DOI 10.1109/FOSM.2008.4659245
   De Lucia A, 2009, EMPIR SOFTW ENG, V14, P57, DOI 10.1007/s10664-008-9090-8
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   Dekhtyar A., 2007, P 3 INT WORKSH PRED
   DEKHTYAR A, 2006, P 22 INT C SOFTW MAI
   Dekhtyar A., 2007, PROC TRACEABILITY EM
   Dekhtyar A, 2007, INT REQUIR ENG CONF, P141, DOI 10.1109/RE.2007.17
   Dekhtyar A, 2011, INT REQUIR ENG CONF, P111, DOI 10.1109/RE.2011.6051649
   DeLucia A., 2012, SOFTWARE SYSTEMS TRA
   Di Penta M, 2002, PROG COMPREHEN, P207, DOI 10.1109/WPC.2002.1021342
   Domges R, 1998, COMMUN ACM, V41, P54, DOI 10.1145/290133.290149
   Duan C., 2007, International Conference on Automated Software Engineering, P244
   Egyed A, 2002, ASE 2002: 17TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, P163, DOI 10.1109/ASE.2002.1115010
   Eisenbarth T, 2003, IEEE T SOFTWARE ENG, V29, P210, DOI 10.1109/TSE.2003.1183929
   Emenecker J., 2010, P 32 ACM IEEE INT C, V1, P155, DOI DOI 10.1145/1806799.1806825
   Falessi D, 2010, P 4 INT S EMP SOFTW
   Felizardo KR, 2011, INT SYMP EMP SOFTWAR, P77, DOI 10.1109/ESEM.2011.16
   Fiutem R, 1998, PROC IEEE INT CONF S, P94, DOI 10.1109/ICSM.1998.738497
   Gay G, 2009, PROC IEEE INT CONF S, P351, DOI 10.1109/ICSM.2009.5306315
   Gethers M., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P540, DOI 10.1109/ASE.2011.6100120
   Gibiec M., 2010, Proceedings of the IEEE/ACM International Conference on Automated Software Engineering, ASE '10, P245
   Gotel O, 2012, SOFTWARE SYSTEMS TRA
   Gotel O. C. Z., 1994, Proceedings of the First International Conference on Requirements Engineering (Cat. No.94TH0613-0), P94, DOI 10.1109/ICRE.1994.292398
   Hayes J., 2005, P 3 INT WORKSHOP TRA, P20
   Hayes J.H., 2005, MSR'05: Proceedings of the 2005 International Workshop on Mining Software Repositories, P1
   Hayes J. H., 2011, P 6 INT WORKSH TRAC, P50
   Hayes JH, 2008, WORK CONF REVERSE EN, P165, DOI 10.1109/WCRE.2008.36
   Hayes JH, 2007, INNOV SYST SOFTW ENG, V3, P193, DOI 10.1007/s11334-007-0024-1
   Hayes JH, 2006, IEEE T SOFTWARE ENG, V32, P4, DOI 10.1109/TSE.2006.3
   Hayes JH, 2005, INT J SOFTW ENG KNOW, V15, P751, DOI 10.1142/S021819400500252X
   Hayes JH, 2004, 12TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P249
   Hayes JH, 2003, 11TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P138
   Heindl M., 2005, P 10 EUROPEAN SOFTWA, P60
   Hofmann T, 2001, MACH LEARN, V42, P177, DOI 10.1023/A:1007617005950
   Hsin-Yi Jiang, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P59, DOI 10.1109/ASE.2008.16
   Ingwersen P., 2005, The Information Retrieval Series, V18, DOI [10.1007/1-4020-3851-8, DOI 10.1007/1-4020-3851-8]
   International Electrotechnical Commission, 2003, 615111 IEC
   International Organization for Standardization, 2011, 2626212011 ISO
   Jarvelin K., 2000, SIGIR Forum, V34, P41
   Jedlitschka A., 2008, Guide to advanced empirical software engineering, P201, DOI DOI 10.1007/978-1-84800-044-5_8
   Katta V., 2011, P COMPL SYST DES MAN
   Kaushik N., 2011, 2011 18th Working Conference on Reverse Engineering, P411, DOI 10.1109/WCRE.2011.58
   Kekäläinen J, 2002, COLIS4: EMERGING FRAMEWORKS AND METHODS, P253
   Kitchenham B., 2007, 23 EBSE, DOI DOI 10.1145/1134285.1134500
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kitchenham BA, 2011, INFORM SOFTWARE TECH, V53, P638, DOI 10.1016/j.infsof.2010.12.011
   Klock S., 2011, 6th international workshop on Traceability in emerging forms of software engineering, P24
   Kong L, 2009, P 21 INT C SOFTW ENG
   Kong WK, 2011, PROCEEDINGS OF THE 4TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE'11), P32
   Kruchten P.., 2004, RATIONAL UNIFIED PRO
   Leuser J, 2010, LECT NOTES COMPUT SC, V6182, P203, DOI 10.1007/978-3-642-14192-8_19
   Leuser J, 2009, 2009 ICSE WORKSHOP ON TRACEABILITY IN EMERGING FORMS OF SOFTWARE ENGINEERING (TEFSE), P31, DOI 10.1109/TEFSE.2009.5069580
   Lewis D. D., 1998, Machine Learning: ECML-98. 10th European Conference on Machine Learning. Proceedings, P4, DOI 10.1007/BFb0026666
   Li Y, 2008, LECT NOTES COMPUT SC, V5007, P100
   Liddy E.D., 2001, NATURAL LANGUAGE PRO
   Lin J, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P363
   Lindvall M., 2009, Proceedings of the 2009 ACM Symposium on Applied Computing: Honolulu, Hawaii, P496, DOI DOI 10.1145/1529282.1529387
   Lormans M, 2006, WORK CONF REVERSE EN, P275
   Lormans M, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P45
   Lormans M, 2008, EMPIR SOFTW ENG, V13, P727, DOI 10.1007/s10664-008-9078-4
   Mahmoud Anas, 2010, 2010 IEEE Proceedings of 34th Annual Computer Software and Applications Conference (COMPSAC 2010), P246, DOI 10.1109/COMPSAC.2010.29
   Mahmoud A., 2011, International workshop on traceability in emerging forms of software engineering (TEFSE), Honolulu, HI, USA, P3
   Manning Christopher D., 2008, INTRO INFORM RETRIEV
   Marcus A, 2005, INT J SOFTW ENG KNOW, V15, P811, DOI 10.1142/S0218194005002543
   Marcus A, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P214, DOI 10.1109/WCRE.2004.10
   Marcus A, 2003, PROC INT CONF SOFTW, P125, DOI 10.1109/ICSE.2003.1201194
   MARON ME, 1960, J ACM, V7, P216, DOI 10.1145/321033.321035
   McMillan C, 2009, 2009 ICSE WORKSHOP ON TRACEABILITY IN EMERGING FORMS OF SOFTWARE ENGINEERING (TEFSE), P41, DOI 10.1109/TEFSE.2009.5069582
   Natt och Dag J., 2002, Requirements Engineering, V7, P20, DOI 10.1007/s007660200002
   Oliveto Rocco, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P68, DOI 10.1109/ICPC.2010.20
   Oliveto R, 2008, THESIS U SALERNO
   Olsson T, 2002, THESIS LUND U
   Park S, 2000, INFORM SOFTWARE TECH, V42, P429, DOI 10.1016/S0950-5849(99)00102-0
   Parvathy AG, 2008, ICEIS 2008: PROCEEDINGS OF THE TENTH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS, VOL ISAS-2, P64
   Petersen K., 2008, C EVALUATION ASSESSM, P71
   Petersen K, 2009, INT SYMP EMP SOFTWAR, P402
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Ponte JM, 1998, P 21 ANN INT ACM SIG, P275, DOI DOI 10.1145/290941.291008
   Port D, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P701, DOI 10.1145/1985793.1985891
   Robertson Stephen, 2009, Foundations and Trends in Information Retrieval, V3, P333, DOI 10.1561/1500000019
   Robertson S, 2012, Mastering the requirements process: getting requirements right
   ROBERTSON SE, 1976, J AM SOC INFORM SCI, V27, P129, DOI 10.1002/asi.4630270302
   ROBERTSON SE, 1977, J DOC, V33, P294, DOI 10.1108/eb026647
   Rocchio J. J., 1971, SMART RETRIEVAL SYST, P313
   Runeson P, 2007, PROC INT CONF SOFTW, P499
   Sabaliauskaite G, 2010, LECT NOTES COMPUT SC, V6182, P128, DOI 10.1007/978-3-642-14192-8_14
   SALTON G, 1988, INFORM PROCESS MANAG, V24, P513, DOI 10.1016/0306-4573(88)90021-0
   SALTON G, 1975, COMMUN ACM, V18, P613, DOI 10.1145/361219.361220
   Scacchi W., 2002, IEE Proceedings-Software, V149, P24, DOI 10.1049/ip-sen:20020202
   Settimi R, 2004, 7TH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, P49, DOI 10.1109/IWPSE.2004.1334768
   Shull FJ, 2008, EMPIR SOFTW ENG, V13, P211, DOI 10.1007/s10664-008-9060-1
   Smeaton AF, 1997, J INFORM SCI, V23, P169, DOI 10.1177/016555159702300208
   Spanoudakis G, 2004, J SYST SOFTWARE, V72, P105, DOI 10.1016/S0164-1212(03)00242-5
   Spanoudakis G., 2003, P 15 INT C SOFTW ENG
   Sparck-Jones K, 2000, INFORM PROCESS MANAG, V36, P779, DOI 10.1016/S0306-4573(00)00015-7
   Stone A, 2006, ICSOFT 2006: PROCEEDINGS OF THE FIRST INTERNATIONAL CONFERENCE ON SOFTWARE AND DATA TECHNOLOGIES, VOL 1, P139
   Sultanov H., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P211, DOI 10.1109/RE.2010.33
   SUNDARAM S.K., 2005, Proceedings of the 2005 workshop on Predictor models in software engineering, P1, DOI 10.1145/1082983.1083169
   Sundaram SK, 2010, REQUIR ENG, V15, P313, DOI 10.1007/s00766-009-0096-6
   Torchiano M, 2010, P 2010 ACM IEEE INT
   TURTLE H, 1991, ACM T INFORM SYST, V9, P187, DOI 10.1145/125187.125188
   Van Rompaey B, 2009, EUR CON SFTWR MTNCE, P209, DOI 10.1109/CSMR.2009.39
   Voorhees E. M., 2005, TREC: Experiment and Evaluation in Information Retrieval
   Wang XB, 2009, ELECTRON NOTES THEOR, V243, P121, DOI 10.1016/j.entcs.2009.07.009
   Wei-Keat Kong, 2011, 2011 First International Workshop on Empirical Requirements Engineering, P45, DOI 10.1109/EmpiRE.2011.6046255
   Winkler S, 2010, SOFTW SYST MODEL, V9, P529, DOI 10.1007/s10270-009-0145-0
   Winkler S, 2009, 2009 ICSE WORKSHOP ON TRACEABILITY IN EMERGING FORMS OF SOFTWARE ENGINEERING (TEFSE), P49, DOI 10.1109/TEFSE.2009.5069583
   Xiaofan Chen, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P223, DOI 10.1109/ASE.2011.6100057
   Xuchang Zou, 2008, Proceedings of the 2008 International Conference on Software Engineering Research & Practice, P157
   Yadla S, 2005, INNOV SYST SOFTW ENG, V1, P116, DOI 10.1007/s11334-005-0011-3
   Zhai C, 2007, TECHNICAL REPORT
   Zhao W, 2003, ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P68, DOI 10.1109/APSEC.2003.1254359
   Zhou X, 2007, LECT NOTES COMPUT SC, V4422, P412
   Zou XC, 2006, P INT COMP SOFTW APP, P265
   Zou XC, 2010, EMPIR SOFTW ENG, V15, P119, DOI 10.1007/s10664-009-9114-z
NR 181
TC 104
Z9 120
U1 1
U2 21
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2014
VL 19
IS 6
BP 1565
EP 1616
DI 10.1007/s10664-013-9255-y
PG 52
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AR9QU
UT WOS:000343910700002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Gousios, G
   Spinellis, D
AF Gousios, Georgios
   Spinellis, Diomidis
TI Conducting quantitative software engineering studies with Alitheia Core
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Quantitative software engineering; Software repository mining
ID HISTORY
AB Quantitative empirical software engineering research benefits mightily from processing large open source software repository data sets. The diversity of repository management tools and the long history of some projects, renders the task of working with those datasets a tedious and error-prone exercise. The Alitheia Core analysis platform preprocesses repository data into an intermediate format that allows researchers to provide custom analysis tools. Alitheia Core automatically distributes the processing load on multiple processors while enabling programmatic access to the raw data, the metadata, and the analysis results. The tool has been successfully applied on hundreds of medium to large-sized open-source projects, enabling large-scale empirical studies.
C1 [Gousios, Georgios] Delft Univ Technol, Dept Software & Comp Technol, NL-2628 CD Delft, Netherlands.
   [Spinellis, Diomidis] Athens Univ Econ & Business, Dept Management Sci & Technol, Athens 15562, Greece.
C3 Delft University of Technology; Athens University of Economics &
   Business
RP Gousios, G (corresponding author), Delft Univ Technol, Dept Software & Comp Technol, Mekelweg 4, NL-2628 CD Delft, Netherlands.
EM G.Gousios@tudelft.nl; dds@aueb.gr
RI Spinellis, Diomidis/E-3600-2010
OI Spinellis, Diomidis/0000-0003-4231-1897; Gousios,
   Georgios/0000-0002-8495-7939
FU European Union (European Social Fund-ESF); Greek national funds through
   the Operational Program "Education and Lifelong Learning" of the
   National Strategic Reference Framework (NSRF)-Research Funding Program:
   Thalis-Athens University of Economics and Business-Software Engineering
   Research Platform
FX This research has been co-financed by the European Union (European
   Social Fund-ESF) and Greek national funds through the Operational
   Program "Education and Lifelong Learning" of the National Strategic
   Reference Framework (NSRF)-Research Funding Program: Thalis-Athens
   University of Economics and Business-Software Engineering Research
   Platform.
CR Alpern B, 2000, IBM SYST J, V39, P211, DOI 10.1147/sj.391.0211
   [Anonymous], 2005, Sci. Program
   [Anonymous], 91262004 ISOIEC
   [Anonymous], USING MAILDIR FORMAT
   [Anonymous], P 4 INT WORKSH SOFTW
   [Anonymous], J DEFENCE SOFTW ENG
   [Anonymous], P 9 WORK C MIN SOFTW
   [Anonymous], 4 MED C INF SYST MCI
   [Anonymous], APSEC 10
   [Anonymous], 5322 RFC INT ENG TAS
   [Anonymous], FAMIX 2 0 FAMOOS INF
   [Anonymous], IEEE INT S SOFTW MET
   [Anonymous], THESIS U RJ CARLOS M
   [Anonymous], 2006, P 2006 INT WORKSHOP
   [Anonymous], J SYST SOFT IN PRESS
   [Anonymous], P 2 ICSE WORKSH REM
   [Anonymous], LINUX KERNEL 2 6 ITS
   [Anonymous], P 3 ANN C SYST PROGR
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Basili VR, 1996, PROC INT CONF SOFTW, P442, DOI 10.1109/ICSE.1996.493439
   BERNSTEIN PA, 1983, ACM T DATABASE SYST, V8, P465, DOI 10.1145/319996.319998
   Bevan Jennifer., 2005, ESECFSE 13, P177
   Bird C, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P1, DOI 10.1109/MSR.2009.5069475
   BOEHM B, 1987, IEEE SOFTWARE, V4, P84
   Brooks Fred, 1975, The Mythical Man-Month
   Bunch Chris, 2010, 2010 IEEE 3rd International Conference on Cloud Computing (CLOUD 2010), P305, DOI 10.1109/CLOUD.2010.51
   Buse R. P. L., 2012, P 34 INT C SOFTW ENG
   Call HC, 2009, IEEE SOFTWARE, V26, P26, DOI 10.1109/MS.2009.6
   Cubranic D, 2005, IEEE T SOFTWARE ENG, V31, P446, DOI 10.1109/TSE.2005.71
   D'Ambros M, 2010, SCI COMPUT PROGRAM, V75, P276, DOI 10.1016/j.scico.2009.07.005
   Dean J, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDE '04), P137
   Deligiannis I. S., 2002, Empirical Software Engineering, V7, P193, DOI 10.1023/A:1016392131540
   Fischer M, 2003, PROC IEEE INT CONF S, P23, DOI 10.1109/ICSM.2003.1235403
   Fluri B, 2007, IEEE T SOFTWARE ENG, V33, P725, DOI 10.1109/TSE.2007.70731
   Gasser L, 2008, INT FED INFO PROC, V275, P143
   Gawer A., 2002, PLATFORM LEADERSHIP
   Gîrba T, 2006, J SOFTW MAINT EVOL-R, V18, P207, DOI 10.1002/smr.325
   Glass RL, 2002, INFORM SOFTWARE TECH, V44, P491, DOI 10.1016/S0950-5849(02)00049-6
   Godfrey MW, 2009, IEEE SOFTWARE, V26, P67, DOI 10.1109/MS.2009.10
   Goeminne M, 2013, SCI COMPUT PROGRAM, V78, P971, DOI 10.1016/j.scico.2011.11.004
   González-Barahona JM, 2012, EMPIR SOFTW ENG, V17, P75, DOI 10.1007/s10664-011-9181-9
   Gousios G, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P31, DOI 10.1109/MSR.2009.5069478
   Halstead M. H., 1977, ELEMENTS SOFTWARE SC
   Heitlager I, 2007, QUATIC 2007: 6TH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, PROCEEDINGS, P30, DOI 10.1109/QUATIC.2007.8
   Herraiz I, 2009, EUR CON SFTWR MTNCE, P281, DOI 10.1109/CSMR.2009.43
   Hovemeyer D, 2004, ACM SIGPLAN NOTICES, V39, P92, DOI 10.1145/1052883.1052895
   Howison J, 2008, INT FED INFO PROC, V275, P405
   Howison J, 2006, INT J INF TECHNOL WE, V1, P17, DOI 10.4018/jitwe.2006070102
   Johnson PM, 2005, IEEE SOFTWARE, V22, P76, DOI 10.1109/MS.2005.95
   Lattner C, 2004, INT SYM CODE GENER, P75, DOI 10.1109/CGO.2004.1281665
   Linstead E, 2009, DATA MIN KNOWL DISC, V18, P300, DOI 10.1007/s10618-008-0118-x
   Livieri S, 2007, PROC INT CONF SOFTW, P106
   Lungu M, 2010, SCI COMPUT PROGRAM, V75, P264, DOI 10.1016/j.scico.2009.09.004
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Mitropoulos D., 2012, 2012 16th Panhellenic Conference on Informatics (PCI 2012), P117, DOI 10.1109/PCi.2012.15
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Mockus A, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P11, DOI 10.1109/MSR.2009.5069476
   Muthanna S, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P248, DOI 10.1109/WCRE.2000.891476
   Nierstrasz O., 2005, ACM SIGSOFT SOFTWARE, V30, P1, DOI [DOI 10.1145/1095430, 10.1145/1095430.1081707, DOI 10.1145/1095430.1081707]
   OMAN P, 1994, J SYST SOFTWARE, V24, P251, DOI 10.1016/0164-1212(94)90067-1
   PARR TJ, 1995, SOFTWARE PRACT EXPER, V25, P789, DOI 10.1002/spe.4380250705
   Pavlo A, 2009, ACM SIGMOD/PODS 2009 CONFERENCE, P165
   Perry DE., 2000, P C FUT SOFTW ENG, P345, DOI DOI 10.1145/336512.336586
   Ratzinger J., 2008, Proceedings of the 2008 international working conference on Mining software repositories, P35, DOI [10.1145/1370750.1370759, DOI 10.1145/1370750.1370759]
   Raymond Eric Steven, 2001, The Cathedral and the Bazaar: Musings on Linux and Open Source by an Accidental Revolutionary
   Reshef DN, 2011, SCIENCE, V334, P1518, DOI 10.1126/science.1205438
   Robles G., 2005, INT C SOFTW ENG P 20, P1, DOI DOI 10.1145/1082983.1083162
   Samoladas I, 2004, COMMUN ACM, V47, P83, DOI 10.1145/1022594.1022598
   Sarma A, 2009, PROC INT CONF SOFTW, P23, DOI 10.1109/ICSE.2009.5070505
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Shang W., 2010, ASE'10: 25th IEEE/ACM International Conference on Automated Software Engineering, P275
   Shaw M, 2003, PROC INT CONF SOFTW, P726, DOI 10.1109/ICSE.2003.1201262
   Shull FJ, 2008, EMPIR SOFTW ENG, V13, P211, DOI 10.1007/s10664-008-9060-1
   Sjoberg DIK, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P358, DOI 10.1109/FOSE.2007.30
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Smite D, 2010, EMPIR SOFTW ENG, V15, P91, DOI 10.1007/s10664-009-9123-y
   Spinellis D, 2004, IEEE SOFTWARE, V21, P28, DOI 10.1109/MS.2004.1259204
   Spinellis D., 2006, Code Quality: The Open Source Perspective
   Spinellis D., 2007, Beautiful Code: Leading Programmers Explain How They Think, P279
   Spinellis D, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P381, DOI 10.1145/1368088.1368140
   Thusoo A., 2010, Proceedings of the 2010 ACM SIGMOD International Conference on Management of data, SIGMOD '10, P1013, DOI [DOI 10.1145/1807167.1807278, 10.1145/1807167.1807278]
   TICHY WF, 1995, J SYST SOFTWARE, V28, P9, DOI 10.1016/0164-1212(94)00111-Y
   Van Deursen A, 1998, J SOFTW MAINT-RES PR, V10, P75, DOI 10.1002/(SICI)1096-908X(199803/04)10:2<75::AID-SMR168>3.0.CO;2-5
   Witten I. H., 2005, DATA MINING PRACTICA
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Yuan Lin, 2010, Chinese Journal of Computers, V33, P1909, DOI 10.3724/SP.J.1016.2010.01909
   Zannier C., 2006, 28th International Conference on Software Engineering Proceedings, P341, DOI 10.1145/1134285.1134333
   Zelkowitz MV, 1997, INFORM SOFTWARE TECH, V39, P735, DOI 10.1016/S0950-5849(97)00025-6
NR 88
TC 12
Z9 17
U1 1
U2 8
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2014
VL 19
IS 4
BP 885
EP 925
DI 10.1007/s10664-013-9242-3
PG 41
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AH8LE
UT WOS:000336388500004
DA 2024-07-18
ER

EF