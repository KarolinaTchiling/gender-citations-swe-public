FN Clarivate Analytics Web of Science
VR 1.0
PT J
AU Zaidman, A
   Matthijssen, N
   Storey, MA
   van Deursen, A
AF Zaidman, Andy
   Matthijssen, Nick
   Storey, Margaret-Anne
   van Deursen, Arie
TI Understanding Ajax applications by connecting client and server-side
   execution traces
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Ajax; Web applications; Program comprehension; Reverse engineering;
   Dynamic analysis; execution traces
ID PROGRAM COMPREHENSION; SEQUENCE; FEATURES
AB Ajax-enabled Web applications are a new breed of highly interactive, highly dynamic Web applications. Although Ajax allows developers to create rich Web applications, Ajax applications can be difficult to comprehend and thus to maintain. For this reason, we have created FireDetective, a tool that uses dynamic analysis at both the client (browser) and server-side to facilitate the understanding of Ajax applications. We evaluate FireDetective using (1) a pretest-posttest user study and (2) a field user study. Preliminary evidence shows that the FireDetective tool is an effective aid for Web developers striving to understand Ajax applications.
C1 [Zaidman, Andy; Matthijssen, Nick; van Deursen, Arie] Delft Univ Technol, NL-2626 CD Delft, Netherlands.
   [Matthijssen, Nick; Storey, Margaret-Anne] Univ Victoria, Victoria, BC V8P 5C2, Canada.
C3 Delft University of Technology; University of Victoria
RP Zaidman, A (corresponding author), Delft Univ Technol, Mekelweg 4, NL-2626 CD Delft, Netherlands.
EM a.e.zaidman@tudelft.nl; nick8maal@gmail.com; mstorey@uvic.ca;
   arie.vandeursen@tudelft.nl
RI Zaidman, Andy/O-6542-2014; van Deursen, Arie/G-3084-2011
OI Zaidman, Andy/0000-0003-2413-3935; van Deursen, Arie/0000-0003-4850-3312
FU Center for Dependable ICT (CeDICT); NIRICT; Netherlands Institute for
   Research on ICT
FX This work has been sponsored by the Center for Dependable ICT (CeDICT),
   an initiative of NIRICT, the Netherlands Institute for Research on ICT.
CR Amalfitano Domenico, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P46, DOI 10.1109/ICPC.2010.16
   Antoniol G, 2004, PROG COMPREHEN, P120, DOI 10.1109/WPC.2004.1311054
   Babbie E.R., 2020, PRACTICE SOCIAL RES
   Ball T, 1999, LECT NOTES COMPUT SC, V1687, P216, DOI 10.1145/318774.318944
   Bennett C, 2008, J SOFTW MAINT EVOL-R, V20, P291, DOI 10.1002/smr.372
   Campbell DT., 1963, EXPT QUASIEXPERIMENT
   Chan A, 2003, PROG COMPREHEN, P237
   Cornelissen B, 2007, INT C PROGRAM COMPRE, P49
   Cornelissen B, 2007, CSMR 2007: 11TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P213
   Cornelissen B, 2011, IEEE T SOFTWARE ENG, V37, P341, DOI 10.1109/TSE.2010.47
   Cornelissen B, 2009, INT C PROGRAM COMPRE, P100, DOI 10.1109/ICPC.2009.5090033
   Cornelissen B, 2009, IEEE T SOFTWARE ENG, V35, P684, DOI 10.1109/TSE.2009.28
   Cornelissen B, 2008, J SYST SOFTWARE, V81, P2252, DOI 10.1016/j.jss.2008.02.068
   Cornelissen B, 2008, PROC IEEE INT CONF S, P107, DOI 10.1109/ICSM.2008.4658059
   De Pauw W, 2005, IBM SYST J, V44, P821, DOI 10.1147/sj.444.0821
   De Pauw W, 1998, PROCEEDINGS OF THE FOURTH USENIX CONFERENCE ON OBJECT-ORIENTED TECHNOLOGIES AND SYSTEMS, P219
   Di Lucca GA, 2002, SIXTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P241, DOI 10.1109/CSMR.2002.995811
   Ducasse S, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P309, DOI 10.1109/CSMR.2004.1281433
   Dugerdil P., 2007, PROC 2007 C CTR ADV, P306, DOI DOI 10.1145/1321211.1321254
   Garrett JJ, 2005, AJAX NEW APPROACH WE
   Hamou-Lhadj A., 2003, IEEE Workshop Visualizing Software for Understanding and Analysis, P35
   Hamou-Lhadj A, 2006, INT C PROGRAM COMPRE, P181, DOI 10.1109/ICPC.2006.45
   Hassan AE, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P349, DOI 10.1109/ICSE.2002.1007981
   Holtzblatt K., 1995, READINGS HUMAN COMPU, P241
   Kuhn A, 2006, PROC IEEE INT CONF S, P320
   Lerner Reuven, 2007, LINUX J, V2007, P8
   Li P, 2009, LECT NOTES COMPUT SC, V5648, P260
   Matthijssen Nick, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P216, DOI 10.1109/ICPC.2010.14
   Matthijssen N, 2010, THESIS DELFT U TECHN
   Matthijssen N, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P998, DOI 10.1145/1985793.1985973
   Mesbah A, 2008, J SYST SOFTWARE, V81, P2194, DOI 10.1016/j.jss.2008.04.005
   Myers D, 2010, EUR CON SFTWR MTNCE, P41, DOI 10.1109/CSMR.2010.19
   Oney S, 2009, S VIS LANG HUM CEN C, P105, DOI 10.1109/VLHCC.2009.5295287
   Pacione MJ, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P70, DOI 10.1109/WCRE.2004.7
   PENNINGTON N, 1987, COGNITIVE PSYCHOL, V19, P295, DOI 10.1016/0010-0285(87)90007-7
   Reiss S.P., 2003, Proc. ACM Symp. Software Visualization, P57, DOI DOI 10.1145/774833.774842
   Reiss SP, 2001, PROC INT CONF SOFTW, P221, DOI 10.1109/ICSE.2001.919096
   Ricca F, 2001, PROC INT CONF SOFTW, P25, DOI 10.1109/ICSE.2001.919078
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Shneiderman B, 1996, IEEE SYMPOSIUM ON VISUAL LANGUAGES, PROCEEDINGS, P336, DOI 10.1109/VL.1996.545307
   Sillito J., 2006, Proc. of the ACM SIGSOFT Int'l Symp. on Foundations of Software Engineering, P23, DOI DOI 10.1145/1181775.1181779
   Sim SE, 1998, PROC INT CONF SOFTW, P361, DOI 10.1109/ICSE.1998.671389
   Systä T, 2001, SOFTWARE PRACT EXPER, V31, P371, DOI 10.1002/spe.386
   Tonella P, 2002, FOURTH INTERNATIONAL WORKSHOP ON WEB SITE EVOLUTION, PROCEEDINGS, P43, DOI 10.1109/WSE.2002.1134088
   VONMAYRHAUSER A, 1995, COMPUTER, V28, P44, DOI 10.1109/2.402076
   WILDE N, 1995, J SOFTW MAINT-RES PR, V7, P49, DOI 10.1002/smr.4360070105
   Yin RK, 2002, Applied Social Research Methods Series, V34
   Zaidman A, 2005, NINTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P134, DOI 10.1109/CSMR.2005.12
   Zaidman A, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P329, DOI 10.1109/CSMR.2004.1281435
   Zaidman A, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P89
   Zaidman A, 2006, INT C PROGRAM COMPRE, P74, DOI 10.1109/ICPC.2006.26
   Zaidman A, 2008, J SOFTW MAINT EVOL-R, V20, P387, DOI 10.1002/smr.370
NR 52
TC 20
Z9 28
U1 0
U2 40
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2013
VL 18
IS 2
BP 181
EP 218
DI 10.1007/s10664-012-9200-5
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 077ZD
UT WOS:000314067000002
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Pikkarainen, M
   Salo, O
   Kuusela, R
   Abrahamsson, P
AF Pikkarainen, Minna
   Salo, Outi
   Kuusela, Raija
   Abrahamsson, Pekka
TI Strengths and barriers behind the successful agile deployment-insights
   from the three software intensive companies in Finland
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Agile deployment; Improving agile development; Success factors for agile
   deployment; Software process improvement (SPI)
ID PLAN-DRIVEN; XP
AB The number of success stories being reported concerning agile software development has led to an increase in interest among industries and research communities. The purpose of this paper is to identify strengths and barriers for 'successful agile deployment' in the software companies. This knowledge can benefit software companies planning their current strategy for agile deployment. Analysis of 57 developers, architects, project managers, customers, quality managers, and line and product managers in three case companies identifies 71 strengths and 169 barriers of agile deployment. The analysis revealed the importance of management providing the necessary goals and support for agile development. It also indicated the significance of defining a tailored process model and giving developers the freedom to improve their own agile development process continuously during agile deployment. The identified barriers, strengths and recommendations can be used as a checklist for planning and/or monitoring the effectiveness of agile deployment in software companies. By identifying the barriers and strengths of agile deployment, the paper deepens understanding of this highly relevant but relatively under-researched phenomenon and contributes to the literature on agile deployment and software process improvement.
C1 [Pikkarainen, Minna; Kuusela, Raija] VTT Tech Res Ctr Finland, FIN-90571 Oulu, Finland.
   [Salo, Outi] Nokia Electr Ltd, Oulu, Finland.
   [Abrahamsson, Pekka] Univ Helsinki, Helsinki, Finland.
C3 VTT Technical Research Center Finland; Nokia Corporation; Nokia Finland;
   University of Helsinki
RP Pikkarainen, M (corresponding author), VTT Tech Res Ctr Finland, POB 1100, FIN-90571 Oulu, Finland.
EM minna.pikkarainen@vtt.fi; outi.salo@nokia.com; raija.kuusela@vtt.fi;
   pekka.abrahamsson@cs.helsinki.fi
RI Abrahamsson, Pekka/A-5559-2018
OI Abrahamsson, Pekka/0000-0002-4360-2226
FU TEKES (the Finnish Funding Agency for Technology and Innovation)
FX This work was carried out in AGILE-ITEA2 and FLEXI-ITEA2 projects funded
   by TEKES (the Finnish Funding Agency for Technology and Innovation).
CR [Anonymous], COMPUT PRACT
   [Anonymous], INT C AG HELS
   [Anonymous], ICSE 2008 LEIPZ GERM
   [Anonymous], DEPLOYING AGILE PRAC
   [Anonymous], 1999, QUALITATIVE DATA ANA
   [Anonymous], SPICE 2006 LUX
   [Anonymous], ACHIEVING CMMI LEVEL
   [Anonymous], AUTOMOTIVE IND TECHN
   [Anonymous], 10 INT S SOFTW METR
   [Anonymous], THESIS U OULU
   [Anonymous], 2005, Extreme programming explained: Embrace change
   [Anonymous], EUROSPI06 FINL JOENS
   [Anonymous], 9 EUR C MAINT REENG
   [Anonymous], THESIS U OULU
   [Anonymous], INFORM TECHNOLOGY DI
   [Anonymous], C OBJ OR PROGR SYST
   [Anonymous], COMPSAC 89 ORL FLOR
   Baskerville R., 2006, IT Professional, V8, P29, DOI 10.1109/MITP.2006.86
   Beck K., 2011, MANIFESTO AGILE SOFT
   BENBASAT I, 1987, MIS QUART, V11, P369, DOI 10.2307/248684
   Boehm B, 2003, COMPUTER, V36, P57, DOI 10.1109/MC.2003.1204376
   Boehm B, 2002, COMPUTER, V35, P64, DOI 10.1109/2.976920
   Anna B, 2006, EUR J INFORM SYST, V15, P169, DOI 10.1057/palgrave.ejis.3000603
   Chan FKY, 2009, DECIS SUPPORT SYST, V46, P803, DOI 10.1016/j.dss.2008.11.009
   Cohen D., 2004, INTRO AGILE METHODS
   Drobka J, 2004, IEEE SOFTWARE, V21, P70, DOI 10.1109/MS.2004.47
   Dybå T, 2005, IEEE T SOFTWARE ENG, V31, P410, DOI 10.1109/TSE.2005.53
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   EISENHARDT KM, 1989, ACAD MANAGE REV, V14, P532, DOI 10.2307/258557
   Fitzgerald B, 2006, EUR J INFORM SYST, V15, P200, DOI 10.1057/palgrave.ejis.3000605
   Garvin D.A., 2000, LEARNING ACTION
   Hansson C, 2006, J SYST SOFTWARE, V79, P1295, DOI 10.1016/j.jss.2005.12.020
   Kettunen P, 2005, INFORM SOFTWARE TECH, V47, P587, DOI 10.1016/j.infsof.2004.11.001
   Kettunen P, 2009, TECHNOVATION, V29, P408, DOI 10.1016/j.technovation.2008.10.003
   McFeeley B., 1996, IDEAL USERS GUIDE SO
   Misra SC, 2009, J SYST SOFTWARE, V82, P1869, DOI 10.1016/j.jss.2009.05.052
   Niazi M., 2006, Software Process Improvement and Practice, V11, P193, DOI 10.1002/spip.261
   Patton M., 2002, Qualitative research and evaluation methods, P452
   Paulk MC, 2001, IEEE SOFTWARE, V18, P19, DOI 10.1109/52.965798
   Petersen K, 2010, EMPIR SOFTW ENG, V15, P654, DOI 10.1007/s10664-010-9136-6
   Rasmusson J, 2003, IEEE SOFTWARE, V20, P21, DOI 10.1109/MS.2003.1196316
   Robson C., 2002, Real world research
   Royce Winston, 1970, Managing the development of large software systems, P1
   Salo O., 2007, Software Process Improvement and Practice, V12, P81, DOI 10.1002/spip.305
   Schwaber K., 2002, AGILE SOFTWARE DEV S
   Stelzer D., 1998, Software Process Improvement and Practice, V4, P227, DOI 10.1002/(SICI)1099-1670(199812)4:4<227::AID-SPIP106>3.0.CO;2-1
   Sweeney A, 1997, SOFTWARE QUAL J, V6, P265, DOI 10.1023/A:1018572321182
   Williams L, 2003, COMPUTER, V36, P39, DOI 10.1109/MC.2003.1204373
   Williams L.A., 2004, Extreme programming evaluation framework for object-oriented languages version 1.4
   Worley J. M., 2006, Management Decision, V44, P228, DOI 10.1108/00251740610650210
   Yin R.K., 2011, Qualitative research from start to finish
NR 51
TC 40
Z9 49
U1 0
U2 57
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2012
VL 17
IS 6
BP 675
EP 702
DI 10.1007/s10664-011-9185-5
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 994VN
UT WOS:000307962100003
DA 2024-07-18
ER

PT J
AU Khomh, F
   Di Penta, M
   Guéhéneuc, YG
   Antoniol, G
AF Khomh, Foutse
   Di Penta, Massimiliano
   Gueheneuc, Yann-Gael
   Antoniol, Giuliano
TI An exploratory study of the impact of antipatterns on class change- and
   fault-proneness
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Antipatterns; Mining software repositories; Empirical software
   engineering
ID SOFTWARE; METRICS; VALIDATION
AB Antipatterns are poor design choices that are conjectured to make object-oriented systems harder to maintain. We investigate the impact of antipatterns on classes in object-oriented systems by studying the relation between the presence of antipatterns and the change- and fault-proneness of the classes. We detect 13 antipatterns in 54 releases of ArgoUML, Eclipse, Mylyn, and Rhino, and analyse (1) to what extent classes participating in antipatterns have higher odds to change or to be subject to fault-fixing than other classes, (2) to what extent these odds (if higher) are due to the sizes of the classes or to the presence of antipatterns, and (3) what kinds of changes affect classes participating in antipatterns. We show that, in almost all releases of the four systems, classes participating in antipatterns are more change-and fault-prone than others. We also show that size alone cannot explain the higher odds of classes with antipatterns to underwent a (fault-fixing) change than other classes. Finally, we show that structural changes affect more classes with antipatterns than others. We provide qualitative explanations of the increase of change- and fault-proneness in classes participating in antipatterns using release notes and bug reports. The obtained results justify a posteriori previous work on the specification and detection of antipatterns and could help to better focus quality assurance and testing activities.
C1 [Khomh, Foutse] Queens Univ, Dept Elect & Comp Engn, Kingston, ON, Canada.
   [Di Penta, Massimiliano] Univ Sannio, Dept Engn, Benevento, Italy.
   [Gueheneuc, Yann-Gael; Antoniol, Giuliano] Ecole Polytech, SOCCER Lab, Montreal, PQ H3C 3A7, Canada.
   [Gueheneuc, Yann-Gael; Antoniol, Giuliano] Ecole Polytech, Ptidej Team, Dept Genie Informat & Genie Logiciel, Montreal, PQ H3C 3A7, Canada.
C3 Queens University - Canada; University of Sannio; Universite de
   Montreal; Polytechnique Montreal; Universite de Montreal; Polytechnique
   Montreal
RP Khomh, F (corresponding author), Queens Univ, Dept Elect & Comp Engn, Kingston, ON, Canada.
EM foutse.khomh@queensu.ca; dipenta@unisannio.it;
   yann-gael.gueheneuc@polymtl.ca; antoniol@ieee.org
RI Guéhéneuc, Yann-Gaël/K-9371-2019; Di Penta, Massimiliano/AAF-9656-2021
OI Di Penta, Massimiliano/0000-0002-0340-9747
FU NSERC Research Chairs in Software Change and Evolution and in Software
   Patterns and Patterns of Software
FX We thank Marc Eaddy for making his data on faults freely available. This
   work has been partly funded by the NSERC Research Chairs in Software
   Change and Evolution and in Software Patterns and Patterns of Software.
CR [Anonymous], P 9 WORK C REV ENG W
   [Anonymous], 2007, PROMISE 07, DOI DOI 10.1109/PROMISE.2007.10
   [Anonymous], P 20 INT C AUT SOFTW
   Antoniol G, 2008, P 18 IBM CTR ADV STU
   Aversano Lerina., 2007, PROC THE 6 EUROPEAN, P385, DOI [DOI 10.1145/1287624.1287680, 10.1145/1287624.1287680.]
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Bieman JM, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P40, DOI 10.1109/METRIC.2003.1232454
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Cartwright M, 2000, IEEE T SOFTWARE ENG, V26, P786, DOI 10.1109/32.879814
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Cohen J., 1988, STAT POWER ANAL BEHA
   Conte SD, 1989, SERCTR33P PURD U
   Deligiannis I, 2004, J SYST SOFTWARE, V72, P129, DOI 10.1016/S0164-1212(03)00240-1
   Deligiannis I, 2003, J SYST SOFTWARE, V65, P127, DOI 10.1016/S0164-1212(02)00054-7
   Dhambri K, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P279
   Di Penta M., 2008, P 24 INT C SOFTW MAI
   Du BoisB., 2006, IASTED C SOFTWARE EN, P346
   Eaddy M, 2008, IEEE T SOFTWARE ENG, V34, P497, DOI 10.1109/TSE.2008.36
   Emam KE, 2001, IEEE T SOFTWARE ENG, V27, P630, DOI 10.1109/32.935855
   Fischer M, 2003, PROC IEEE INT CONF S, P23, DOI 10.1109/ICSM.2003.1235403
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gamma Erich., 1994, DESIGN PATTERNS
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Hosmer DW, 2000, APPL LOGISTIC REGRES
   Khomh F, 2009, P 9 INT C QUAL SOFTW
   Khomh F., 2009, P 25 INT C SOFTW MAI
   Khomh F., 2009, An exploratory study of the impact of code smells on software change-proneness
   Khomh F., 2008, P 12 C SOFTW MAINT R
   Khomh F., 2009, P 16 WORK C REV ENG
   Lanza Michele, 2006, Objectoriented metrics in practice: using software metrics to characterize, evaluate, and improve the design of object-oriented systems
   Li W, 2007, J SYST SOFTWARE, V80, P1120, DOI 10.1016/j.jss.2006.10.018
   Mantyla M., 2003, THESIS HELSINKI U TE
   Marinescu R, 2004, PROC IEEE INT CONF S, P350, DOI 10.1109/ICSM.2004.1357820
   Moha N, 2008, THESIS U MONTREAL
   Moha N, 2008, P 4 INT C FORM CONC
   Moha N, 2008, LECT NOTES COMPUT SC, V4961, P276, DOI 10.1007/978-3-540-78743-3_20
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Munro M.J, 2005, P 11 INT SOFTW METR
   Olbrich S, 2009, 3 INT S EMP SOFTW EN
   Oliveto R, 2010, EUR CON SFTWR MTNCE, P248, DOI 10.1109/CSMR.2010.47
   Riel AJ., 1996, Object-Oriented Design Heuristics
   Sheskin DJ., 2003, HDB PARAMETRIC NONPA, DOI [10.1201/9781420036268, DOI 10.1201/9781420036268]
   Simon F, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P30, DOI 10.1109/CSMR.2001.914965
   Travassos G. H., 1999, SIGPLAN Notices, V34, P47, DOI 10.1145/320385.320389
   Vicinanza SS, 1991, INFORM SYST RES, V2, P243, DOI 10.1287/isre.2.4.243
   Vokác M, 2004, IEEE T SOFTWARE ENG, V30, P904, DOI 10.1109/TSE.2004.99
   Wake W.C., 2003, Refactoring Workbook, V1st
   Webster BruceF., 1995, PITFALLS OBJECT ORIE
   Yin R. K., 2017, CASE STUDY RES DESIG
   Zimmermann T, 2004, PROC INT CONF SOFTW, P563, DOI 10.1109/ICSE.2004.1317478
NR 50
TC 244
Z9 271
U1 0
U2 8
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2012
VL 17
IS 3
BP 243
EP 275
DI 10.1007/s10664-011-9171-y
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 893GI
UT WOS:000300343800004
DA 2024-07-18
ER

PT J
AU Michaelides, G
   Thomson, C
   Wood, S
AF Michaelides, George
   Thomson, Chris
   Wood, Stephen
TI Measuring fidelity to extreme programming: a psychometric approach
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Psychometrics; Confirmatory factor analysis; Extreme Programming (XP);
   Fidelity; Adherence; Shodan survey
AB This study assesses the Shodan survey as an instrument for measuring an individual's or a team's adherence to the extreme programming (XP) methodology. Specifically, we hypothesize that the adherence to the XP methodology is not a uni-dimensional construct as presented by the Shodan survey but a multidimensional one reflecting dimensions that are theoretically grounded in the XP literature. Using data from software engineers in the University of Sheffield's Software Engineering Observatory, two different models were thus tested and compared using confirmatory factor analysis: a uni-dimensional model and a four-dimensional model. We also present an exploratory analysis of how these four dimensions affect students' grades. The results indicate that the four-dimensional model fits the data better than the uni-dimensional one. Nevertheless, the analysis also uncovered flaws with the Shodan survey in terms of the reliability of the different dimensions. The exploratory analysis revealed that some of the XP dimensions had linear or curvilinear relationship with grades. Through validating the four-dimensional model of the Shodan survey this study highlights how psychometric techniques can be used to develop software engineering metrics of fidelity to agile or other software engineering methods.
C1 [Michaelides, George] Nottingham Trent Univ, Div Psychol, Nottingham NG1 4BU, England.
   [Thomson, Chris] Univ Hull, Sch Business, Kingston Upon Hull HU6 7RX, N Humberside, England.
   [Wood, Stephen] Univ Leicester, Sch Management, Leicester LE1 7RH, Leics, England.
C3 Nottingham Trent University; University of Hull; University of Leicester
RP Michaelides, G (corresponding author), Nottingham Trent Univ, Div Psychol, Burton St, Nottingham NG1 4BU, England.
EM george.michaelides@ntu.ac.uk; c.thomson@hull.ac.uk; s.j.wood@le.ac.uk
OI Michaelides, George/0000-0002-4224-7728
FU EPSRC [EP/D031516]
FX This work was supported by an EPSRC grant: EP/D031516 - the Sheffield
   Software Engineering Observatory.
CR Abrahamsson P, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P73
   Abrahamsson P, 2003, EUROMICRO CONF PROC, P259
   [Anonymous], 2004, XP Ser
   [Anonymous], ITI 3 INT C INF COMM
   [Anonymous], P 37 ANN HAW INT C S
   [Anonymous], 1999, Latent variable models and factor analysis
   [Anonymous], AG DEV C 2004
   CHONG J, 2005, P AG UN C
   Cohen J., 1988, STAT POWER ANAL BEHA
   Cronbach LJ, 1951, PSYCHOMETRIKA, V16, P297
   FRUHLING A, 2005, HICSS 05 P 38 ANN HA
   GITTINS R, 2001, P PPIG, P41
   JAMES LR, 1984, J APPL PSYCHOL, V69, P85, DOI 10.1037/0021-9010.69.1.85
   Jokela T, 2004, LECT NOTES COMPUT SC, V3009, P393
   Koskela J, 2004, LECT NOTES COMPUT SC, V3281, P1
   Krebs W., 2002, Extreme Programming and Agile Methods - XP/Agile Universe 2002 Second XP Universe and First Agile Universe Conference. Proceedings (Lecture Notes in Computer Science Vol.2418), P60
   LAYMAN L, 2004, OOPSLA 04 COMP 19 AN
   LAYMAN L, 2004, AG DEV C 2004
   Layman L, 2006, J SYST ARCHITECT, V52, P654, DOI 10.1016/j.sysarc.2006.06.009
   MACIAS F, 2004, THESIS U SHEFFIELD
   Mackenzie A., 2004, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V13, P91, DOI 10.1023/B:COSU.0000014873.27735.10
   Mannaro K, 2004, LECT NOTES COMPUT SC, V3092, P166
   Martin A, 2004, LECT NOTES COMPUT SC, V3092, P51
   Merisalo-Rantanen H, 2005, J DATABASE MANAGE, V16, P41, DOI 10.4018/jdm.2005100103
   Moser R, 2007, LECT NOTES COMPUT SC, V4536, P105
   MULLER M, 2001, ICSE 01 P 23 INT C S
   MUTHEN BO, 1994, SOCIOL METHOD RES, V22, P376, DOI 10.1177/0049124194022003006
   NEWKIRK J, 2000, OOPSLA 00 ADD 2000 P
   NOLL J, 2003, LECT NOTES COMPUTER, V2675, P1013
   Nunnaly J.C., 1994, PSYCHOMETRIC THEORY, P327
   *R DEV COR TEAM, 2008, SER PSYCH R FDN STAT
   Robinson H, 2005, LECT NOTES COMPUT SC, V3556, P100
   Robinson H, 2004, LECT NOTES COMPUT SC, V3092, P139
   ROBINSON H, 2005, P AG C 2005
   Sfetsos P, 2006, EMPIR SOFTW ENG, V11, P269, DOI 10.1007/s10664-006-6404-6
   Sharp H, 2004, EMPIR SOFTW ENG, V9, P353, DOI 10.1023/B:EMSE.0000039884.79385.54
   Stephens Matt, 2003, Extreme Programming Refactored: The XP
   SYEDABDULLAH S, 2005, THESIS U SHEFFIELD
   TESSEM BR, 2003, LECT NOTES COMPUTER, V2675, P1012
   THOMSON C, 2009, CS0901 U SHEFF DEP C
   Williams L.A., 2004, Extreme programming evaluation framework for object-oriented languages version 1.4
   YOUNG M, 2005, HSSE 05 P 2005 WORKS
NR 42
TC 1
Z9 1
U1 1
U2 7
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2010
VL 15
IS 6
BP 599
EP 617
DI 10.1007/s10664-010-9130-z
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 653OB
UT WOS:000282100100002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU De Lucia, A
   Gravino, C
   Oliveto, R
   Tortora, G
AF De Lucia, Andrea
   Gravino, Carmine
   Oliveto, Rocco
   Tortora, Genoveffa
TI An experimental comparison of ER and UML class diagrams for data
   modelling
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Controlled experiments; Entity-relation diagrams; UML class diagrams;
   Design notations; Comprehension; Maintenance; Verification
ID ENTITY-RELATIONSHIP; COMPREHENSION
AB We present the results of three sets of controlled experiments aimed at analysing whether UML class diagrams are more comprehensible than ER diagrams during data models maintenance. In particular, we considered the support given by the two notations in the comprehension and interpretation of data models, comprehension of the change to perform to meet a change request, and detection of defects contained in a data model. The experiments involved university students with different levels of ability and experience. The results demonstrate that using UML class diagrams subjects achieved better comprehension levels. With regard to the support given by the two notations during maintenance activities the results demonstrate that the two notations give the same support, while in general UML class diagrams provide a better support with respect to ER diagrams during verification activities.
C1 [De Lucia, Andrea; Gravino, Carmine; Oliveto, Rocco; Tortora, Genoveffa] Univ Salerno, Dept Math & Informat, I-84084 Salerno, Italy.
C3 University of Salerno
RP Oliveto, R (corresponding author), Univ Salerno, Dept Math & Informat, Via Ponte don Melillo, I-84084 Salerno, Italy.
EM adelucia@unisa.it; gravino@unisa.it; roliveto@unisa.it; tortora@unisa.it
RI Oliveto, Rocco/J-4037-2012; De Lucia, Andrea/AAG-6781-2020
OI De Lucia, Andrea/0000-0002-4238-1425; Gravino,
   Carmine/0000-0002-4394-9035
FU MiUR (Ministero dell'Universita e della Ricerca) [PRIN-2006-2006098097]
FX The work described in this paper is supported by the project METAMORPHOS
   (MEthods and Tools for migrAting software systeMs towards web and
   service Oriented aRchitectures: exPerimental evaluation, usability, and
   tecHnOlogy tranSfer), funded by MiUR (Ministero dell'Universita e della
   Ricerca) under grant PRIN-2006-2006098097.
CR [Anonymous], PRACTICAL NONPARAMET
   [Anonymous], DATABASE SYSTEMS, DOI DOI 10.1145/320434.320440
   [Anonymous], SOFTW TECHN ENG PRAC
   [Anonymous], OBJ CONSTR LANG OCL
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   ARGWAL R, 1999, IEEE T SOFTWARE ENG, V25, P541
   Arisholm E, 2004, IEEE T SOFTWARE ENG, V30, P521, DOI 10.1109/TSE.2004.43
   Baeza-Yates Ricardo, 1999, MODERN INFORM RETRIE, V463
   BASILI VR, 1986, IEEE T SOFTWARE ENG, V12, P733, DOI 10.1109/TSE.1986.6312975
   Bock D. B., 1993, Journal of Database Management, V4, P30
   Briand LC, 2005, IEEE T SOFTWARE ENG, V31, P833, DOI 10.1109/TSE.2005.105
   Conallen J., 1999, BUILDING WEB APPL UM
   CRUZLEMUS JA, 2005, P 8 ACM IEEE INT C M, P113
   De Lucia A, 2008, INT C PROGRAM COMPRE, P93, DOI 10.1109/ICPC.2008.26
   DELUCIA A, 2008, EXPT COMPARISON ER U
   DELUCIA A, 2004, P 16 INT C SOFTW ENG, P31
   DELUCIA A, 2008, P 12 EUR C SOFTW MAI, P173
   Devore J., 1999, APPL STAT ENG SCI
   Downs E., 1992, Structured systems analysis and design method : application and context
   Gane Chris., 1979, STRUCTURED SYSTEMS A
   Gemino A, 2005, DATA KNOWL ENG, V55, P301, DOI 10.1016/j.datak.2004.12.009
   GEMINO W, 1997, P 18 INT C INF SYST, P446
   Henderson PB, 2003, COMMUN ACM, V46, P45, DOI 10.1145/903893.903919
   Hungerford BC, 2005, AM J BUS, V20, P35, DOI 10.1108/19355181200500010
   Juristo N., 2013, BASICS SOFTWARE ENG
   Kuzniarz L, 2004, PROG COMPREHEN, P14, DOI 10.1109/WPC.2004.1311043
   MILLER GA, 1956, PSYCHOL REV, V63, P81, DOI 10.1037/h0043158
   NAVATHE SB, 1992, COMMUN ACM, V35, P112, DOI 10.1145/130994.131001
   Oppenheim A.N., 1992, QUESTIONNAIRE DESIGN
   Otero M. C., 2002, Empirical Software Engineering, V7, P27, DOI 10.1023/A:1014819010099
   Palvia P. C., 1992, Journal of Database Management, V3, P4
   Purchase HC, 2004, INT J HUM-COMPUT ST, V61, P187, DOI 10.1016/j.ijhcs.2004.01.003
   PURCHASE HC, 2001, P AUSTR S INF VIS SY, P113
   REYNOSO L, 2006, P 21 ANN ACM S APPL, P1721
   Ricca F, 2007, PROC INT CONF SOFTW, P375
   Rumbaugh J., 2004, UNIFIED MODELING LAN, V2nd
   Shoval P., 1994, Journal of Database Management, V5, P28
   Shoval P, 1997, DATA KNOWL ENG, V21, P297, DOI 10.1016/S0169-023X(97)88935-5
   Torchiano M, 2004, PROG COMPREHEN, P226, DOI 10.1109/WPC.2004.1311064
   WANG S, 1996, J ED BUSINESS, V61, P136
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Zimmermann T, 2005, IEEE T SOFTWARE ENG, V31, P429, DOI 10.1109/TSE.2005.72
NR 42
TC 28
Z9 29
U1 1
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2010
VL 15
IS 5
BP 455
EP 492
DI 10.1007/s10664-009-9127-7
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 619WX
UT WOS:000279462100001
DA 2024-07-18
ER

PT J
AU Smite, D
   Wohlin, C
   Gorschek, T
   Feldt, R
AF Smite, Darja
   Wohlin, Claes
   Gorschek, Tony
   Feldt, Robert
TI Empirical evidence in global software engineering: a systematic review
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Review
DE Empirical evidence; Empirical studies; Systematic review; Global
   software engineering; Distributed software engineering
ID TO-FACE MEETINGS; COORDINATION PRACTICES; COMMUNICATION; DISTANCE;
   CHALLENGES; IMPACT
AB Recognized as one of the trends of the 21st century, globalization of the world economies brought significant changes to nearly all industries, and in particular it includes software development. Many companies started global software engineering (GSE) to benefit from cheaper, faster and better development of software systems, products and services. However, empirical studies indicate that achieving these benefits is not an easy task. Here, we report our findings from investigating empirical evidence in GSE-related research literature. By conducting a systematic review we observe that the GSE field is still immature. The amount of empirical studies is relatively small. The majority of the studies represent problem-oriented reports focusing on different aspects of GSE management rather than in-depth analysis of solutions for example in terms of useful practices or techniques. Companies are still driven by cost reduction strategies, and at the same time, the most frequently discussed recommendations indicate a necessity of investments in travelling and socialization. Thus, at the same time as development goes global there is an ambition to minimize geographical, temporal and cultural separation. These are normally integral parts of cross-border collaboration. In summary, the systematic review results in several descriptive classifications of the papers on empirical studies in GSE and also reports on some best practices identified from literature.
C1 [Smite, Darja] Univ Latvia, LV-1869 Riga, Latvia.
   [Smite, Darja; Wohlin, Claes; Gorschek, Tony; Feldt, Robert] Blekinge Inst Technol, S-37225 Ronneby, Sweden.
C3 University of Latvia; Blekinge Institute Technology
RP Smite, D (corresponding author), Univ Latvia, Raina Bulv 19, LV-1869 Riga, Latvia.
EM Darja.Smite@lu.se; Claes.Wohlin@bth.se; Tony.Gorschek@bth.se;
   Robert.Feldt@bth.se
RI Gorschek, Tony/E-3445-2013
OI Wohlin, Claes/0000-0003-0460-5253; Feldt, Robert/0000-0002-5179-4205
FU Knowledge Foundation in Sweden
FX This research is supported by the Knowledge Foundation in Sweden under a
   research grant for the project BESQ. We would like to thank the editor
   handling the paper and the anonymous reviewers for providing valuable
   feedback that helped improve the paper.
CR [Abran A. IEEE Computer Society IEEE Computer Society], 2004, GUIDE SOFTWARE ENG B
   Agerfalk P.J., 2005, P INT WORKSHOP DISTR, P47
   ALI BM, 2006, P ACM IEEE INT S EMP, P252
   [Anonymous], P 2 INT C GLOB SOFTW
   [Anonymous], P 12 INT C EV ASS SO
   Babar MA, 2008, EMPIR SOFTW ENG, V13, P39, DOI 10.1007/s10664-007-9052-6
   Babar MA, 2007, J SYST SOFTWARE, V80, P1438, DOI [10.1016/j.jss.2006.10.038, 10.1016/j.jss.2006.12.038]
   Battin RD, 2001, IEEE SOFTWARE, V18, P70, DOI 10.1109/52.914750
   Bhat JM, 2006, IEEE SOFTWARE, V23, P38, DOI 10.1109/MS.2006.137
   Boden A, 2007, SECOND IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P235
   CALEFATO F, 2007, 1 INT S EMP SOFTW EN, P473
   CALEFATO F, 2007, DISTR REQ WORKSH 2 I, P3
   Carmel E, 2001, IEEE SOFTWARE, V18, P22, DOI 10.1109/52.914734
   Carmel E., 1999, GLOBAL SOFTWARE TEAM
   Carmel E, 2007, COMMUN ACM, V50, P40, DOI 10.1145/1290958.1290959
   Casey V., 2006, Proceedings of the International Conference on Software Engineering, P66
   Cataldo M, 2007, SECOND IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P71
   Conchúir EO, 2006, 2006 IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P159, DOI 10.1109/ICGSE.2006.261229
   CONCHUIR O, 2006, P 1 INT C GLOB SOFTW, P159
   Creswell J. W., 2013, RES DESIGN QUALITATI
   DALBERG V, 2006, INT C SOFTW ENG P 20, P51
   Damian D, 2006, LECT NOTES COMPUT SC, V3922, P155
   Damian D, 2007, SECOND IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P81
   Damian D, 2006, IEEE SOFTWARE, V23, P17, DOI 10.1109/MS.2006.126
   Damian DE, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P319, DOI 10.1109/ICRE.2002.1048545
   de Souza CRB, 2007, LECT NOTES COMPUT SC, V4716, P182
   Dutoit AH, 2001, APSEC 2001: EIGHTH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P427, DOI 10.1109/APSEC.2001.991510
   Ebert C, 2001, IEEE SOFTWARE, V18, P62, DOI 10.1109/52.914748
   Ebert C, 2001, PROC INT CONF SOFTW, P545, DOI 10.1109/ICSE.2001.919129
   Favela J, 2004, LECT NOTES COMPUT SC, V3198, P215
   Friedman T. L., 2005, The World Is Flat: A Brief History of the Twenty-First Century
   Gumm DC, 2007, SECOND IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P113
   HARJUMAA L, 2003, P IASTED INT C COMP, P26
   Herbsleb JD, 2005, PROC INT CONF SOFTW, P524
   Herbsleb JD, 2003, IEEE T SOFTWARE ENG, V29, P481, DOI 10.1109/TSE.2003.1205177
   Holmstrom H, 2006, 2006 IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P3, DOI 10.1109/ICGSE.2006.261210
   Holmström H, 2006, INFORM SYST MANAGE, V23, P7, DOI 10.1201/1078.10580530/46108.23.3.20060601/93703.2
   HUANG H, P ACM SIGMIS C COMP, P264
   Jacobs J, 2005, INFORM SOFTWARE TECH, V47, P399, DOI 10.1016/j.infsof.2004.09.006
   Karolak D.W., 1998, Global Software Development: Managing Virtual Teams and Environments
   Kitchenham B., 2007, GUIDELINES PERFORMIN
   Kommeren R, 2007, EMPIR SOFTW ENG, V12, P647, DOI 10.1007/s10664-007-9047-3
   Korkala M, 2007, EUROMICRO CONF PROC, P203
   KOTLARSKY J, 2007, J INFORM TECHNOL JUN, P161
   Lanubile F., 2003, Software Process Improvement and Practice, V8, P217, DOI 10.1002/spip.184
   Lasser S, 2005, 2005 IEEE INTERNATIONAL PROFESSIONAL COMMUNICATION CONFERENCE (IPCC), P718
   Layman L, 2006, INFORM SOFTWARE TECH, V48, P781, DOI 10.1016/j.infsof.2006.01.004
   Lee J.N., 2000, P 33 HAWAII INT C SY, P1
   Lings B, 2007, SECOND IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P130
   Loh L., 1995, Proceedings of the 16th International Conference on Information Systems, P277
   Ma JQ, 2007, LECT NOTES COMPUT SC, V4589, P5
   McChesney IR, 2004, INFORM SOFTWARE TECH, V46, P473, DOI 10.1016/j.infsof.2003.10.001
   Moe NB, 2007, LECT NOTES COMPUT SC, V4589, P20
   Munkvold BE, 2007, INFORM MANAGE-AMSTER, V44, P287, DOI 10.1016/j.im.2007.01.002
   Nicholson B., 2001, INFORM ORGAN-UK, V11, P25, DOI DOI 10.1016/S0959-8022(00)00008-4
   Oshri I, 2007, J STRATEGIC INF SYST, V16, P25, DOI 10.1016/j.jsis.2007.01.001
   Ovaska P., 2003, Software Process Improvement and Practice, V8, P233, DOI 10.1002/spip.186
   Poikolainen T, 2007, SECOND IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P60
   Prikladnicki R., 2003, Software Process Improvement and Practice, V8, P267, DOI 10.1002/spip.188
   Prikladnicki R, 2007, SECOND IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P262
   RAMASUBBU N, P 6 JOINT M EUR SOFT, P125
   Ramesh B, 2006, COMMUN ACM, V49, P41, DOI 10.1145/1164394.1164418
   Sahay S., 2003, GLOBAL IT OUTSOURCIN
   Andaloussi BS, 2006, 2006 IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P169, DOI 10.1109/ICGSE.2006.261230
   Smite D., 2006, Software Process Improvement and Practice, V11, P61, DOI 10.1002/spip.252
   Smite D, 2005, LECT NOTES COMPUT SC, V3547, P234
   SMITE D, 2007, P 2 INT C GLOB SOFTW, P112
   Smite D, 2008, 2008 3RD IEEE INTERNATIONAL CONFERENCE GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P173, DOI 10.1109/ICGSE.2008.22
   SPINELLIS D, INT C SOFTW ENG P 20, P73
   Stewart K. J., 2006, Software Process Improvement and Practice, V11, P177, DOI 10.1002/spip.258
   Swigger K, 2004, INT J HUM-COMPUT ST, V60, P365, DOI 10.1016/j.ijhcs.2003.10.006
   Taweel A., 2002, Informatica, V26, P333
   Taxén L, 2006, INFORM SOFTWARE TECH, V48, P767, DOI 10.1016/j.infsof.2006.01.007
   Treinen JJ, 2006, IBM SYST J, V45, P773, DOI 10.1147/sj.454.0773
   Välimäki A, 2007, LECT NOTES COMPUT SC, V4589, P188
   Van de Walle B, 2007, LECT NOTES COMPUT SC, V4495, P381
NR 76
TC 181
Z9 193
U1 1
U2 62
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2010
VL 15
IS 1
BP 91
EP 118
DI 10.1007/s10664-009-9123-y
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 549GU
UT WOS:000274036300004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Cruz-Lemus, JA
   Genero, M
   Manso, ME
   Morasca, S
   Piattini, M
AF Cruz-Lemus, Jose A.
   Genero, Marcela
   Esperanza Manso, M.
   Morasca, Sandro
   Piattini, Mario
TI Assessing the understandability of UML statechart diagrams with
   composite states-A family of empirical studies
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE UML statechart diagrams; Understandability; Composite states; Family of
   experiments
ID COMPREHENSION; MODELS; OBJECT; MAINTAINABILITY; QUALITY; STEREOTYPES;
   GUIDELINES
AB The main goal of this work is to present a family of empirical studies that we have carried out to investigate whether the use of composite states may improve the understandability of UML statechart diagrams derived from class diagrams. Our hypotheses derive from conventional wisdom, which says that hierarchical modeling mechanisms are helpful in mastering the complexity of a software system. In our research, we have carried out three empirical studies, consisting of five experiments in total. The studies differed somewhat as regards the size of the UML statechart models, though their size and the complexity of the models were chosen so that they could be analyzed by the subjects within a limited time period. The studies also differed with respect to the type of subjects (students vs. professionals), the familiarity of the subjects with the domains of the diagrams, and other factors. To integrate the results obtained from each of the five experiments, we performed a meta-analysis study which allowed us to take into account the differences between studies and to obtain the overall effect that the use of composite states has on the understandability of UML statechart diagrams throughout all the experiments. The results obtained are not completely conclusive. They cast doubts on the usefulness of composite states for a better understanding and memorizing of UML statechart diagrams. Composite states seem only to be helpful for acquiring knowledge from the diagrams. At any rate, it should be noted that these results are affected by the previous experience of the subjects on modeling, as well as by the size and complexity of the UML statechart diagrams we used, so care should be taken when generalizing our results.
C1 [Cruz-Lemus, Jose A.; Genero, Marcela; Piattini, Mario] Univ Castilla La Mancha, Dept Technol & Informat Syst, E-13071 Ciudad Real, Spain.
   [Esperanza Manso, M.] Univ Valladolid, Dept Comp Sci, ETIC, E-47011 Valladolid, Spain.
   [Morasca, Sandro] Univ Insubria, Dipartimento Sci Cultura Polit & Informaz, Como, Italy.
C3 Universidad de Castilla-La Mancha; Universidad de Valladolid; University
   of Insubria
RP Cruz-Lemus, JA (corresponding author), Univ Castilla La Mancha, Dept Technol & Informat Syst, Paseo Univ 4, E-13071 Ciudad Real, Spain.
EM JoseAntonio.Cruz@uclm.es; Marcela.Genero@uclm.es; manso@infor.uva.es;
   Sandro.Morasca@uninsubria.it; Mario.Piattini@uclm.es
RI Piattini, Mario/F-6271-2013; GENERO, MARCELA/L-6480-2014; Cruz-Lemus,
   Jose A./B-7299-2015
OI Piattini, Mario/0000-0002-7212-8279; GENERO,
   MARCELA/0000-0002-6868-7465; Cruz-Lemus, Jose A./0000-0002-0470-609X;
   Morasca, Sandro/0000-0003-4598-7024
CR Agarwal R, 1999, IEEE T SOFTWARE ENG, V25, P541, DOI 10.1109/32.799953
   [Anonymous], 1991, Statistical principles in experimental design
   [Anonymous], 1997, Software metrics: A rigorous and practical approach
   [Anonymous], SPSS 12 0 SYNT REF G
   [Anonymous], METHODS METAANALYSIS
   [Anonymous], 2001, StandardISO/IEC9126
   Cruz-Lemus JA, 2005, METRICS FOR SOFTWARE CONCEPTUAL MODELS, P237, DOI 10.1142/9781860946066_0007
   Arisholm E, 2004, IEEE T SOFTWARE ENG, V30, P521, DOI 10.1109/TSE.2004.43
   Atkinson C, 2003, IEEE SOFTWARE, V20, P36, DOI 10.1109/MS.2003.1231149
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   *BIOST INC, 2006, MET V2
   Bodart F, 2001, INFORM SYST RES, V12, P384, DOI 10.1287/isre.12.4.384.9702
   Bolloju N, 2006, COMMUN ACM, V49, P108, DOI 10.1145/1139922.1139926
   Briand LC, 2001, IEEE T SOFTWARE ENG, V27, P513, DOI 10.1109/32.926174
   CARTER J, 2003, P 9 INT SOFTW METR S, P239
   Craig SD, 2002, J EDUC PSYCHOL, V94, P428, DOI 10.1037//0022-0663.94.2.428
   Cruz-Lemus JA, 2005, LECT NOTES COMPUT SC, V3770, P12, DOI 10.1007/11568346_3
   CRUZLEMUS JA, 2005, P 8 ACM IEEE INT C M, P113
   Denger C, 2003, EUROMICRO CONF PROC, P316
   Dybå T, 2007, IEEE SOFTWARE, V24, P12, DOI 10.1109/MS.2007.158
   FIRESMITH D, 1998, OPEN MODELING LANGUA
   Gemino A, 2005, DATA KNOWL ENG, V55, P301, DOI 10.1016/j.datak.2004.12.009
   Gemino A, 2003, COMMUN ACM, V46, P79, DOI 10.1145/944217.944243
   Genero M, 2007, EMPIR SOFTW ENG, V12, P517, DOI 10.1007/s10664-007-9038-4
   Genero M, 2008, LECT NOTES COMPUT SC, V5301, P280, DOI 10.1007/978-3-540-87875-9_20
   Glass G.V., 1981, MetaAnalysis in Social Research
   Glezer C, 2005, INFORM SOFTWARE TECH, V47, P675, DOI 10.1016/j.infsof.2005.01.003
   Harrison R, 2000, J SYST SOFTWARE, V52, P173, DOI 10.1016/S0164-1212(99)00144-2
   Hayes W., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P143, DOI 10.1109/METRIC.1999.809735
   Hedges LV., 2014, STAT METHODS META AN
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   HU Z, 2006, AUTOMAT SOFTW ENG, V13, P423, DOI DOI 10.1007/S10515-006-0272-6
   Juristo N., 2013, BASICS SOFTWARE ENG
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Khatri V, 2006, INFORM SYST RES, V17, P81, DOI 10.1287/isre.1060.0081
   Kirk R.E., 1995, EXPT DESIGN, V3rd
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   LAITENBERGER O, 1999, 00699E IESE
   Lipsey M., 2001, PRACTICAL METAANALYS
   Mayer R. E., 2020, Multimedia Learning, V3rd
   MAYER RE, 1991, J EDUC PSYCHOL, V83, P484, DOI 10.1037/0022-0663.83.4.484
   MAYER RE, 1989, REV EDUC RES, V59, P43, DOI 10.3102/00346543059001043
   Miller J, 2000, J SYST SOFTWARE, V54, P29, DOI 10.1016/S0164-1212(00)00024-8
   MILLER J, 1998, EFOCS3198 U STRATHCL
   *OMG, 2003, PTC030107 OBJ MAN GR
   Otero MC, 2005, J SYST SOFTWARE, V77, P91, DOI 10.1016/j.jss.2004.11.022
   Otero MC, 2004, INFORM SOFTWARE TECH, V46, P35, DOI 10.1016/S0950-5849(03)00108-3
   PICKARD LM, 2004, V1 TR U KEEL
   Pigoski ThomasM., 1997, PRACTICAL SOFTWARE M
   PORTER A, 1997, INF SOFTW TECHNOL, V42, P35
   Purchase HC, 2002, VISSOFT 2002: FIRST INTERNATIONAL WORKSHOP ON VISUALIZING SOFTWARE FOR UNDERSTANDING AND ANALYSIS, PROCEEDINGS, P13, DOI 10.1109/VISSOF.2002.1019790
   PURCHASE HC, 2001, P AUSTR S INF VIS SY, P113
   Ricca F, 2007, PROC INT CONF SOFTW, P375
   Rosenthal R., 1994, HDB RES SYNTHESIS
   Rosenthal R., 1986, Meta-analytic procedures for social science research
   Selic B, 2003, IEEE SOFTWARE, V20, P19, DOI 10.1109/MS.2003.1231146
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Staron M, 2006, J SYST SOFTWARE, V79, P727, DOI 10.1016/j.jss.2005.09.014
   Tabbers HK, 2004, BRIT J EDUC PSYCHOL, V74, P71, DOI 10.1348/000709904322848824
   Thomas D, 2004, IEEE SOFTWARE, V21, P15, DOI 10.1109/MS.2004.1293067
   Tichy W. F., 2000, Empirical Software Engineering, V5, P309, DOI 10.1023/A:1009844119158
   Verelst J, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P17
   WEBB K, 2006, XHOLON DIGITAL WATCH
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Wolf Wolf F. M F. M, Meta-analysis: Quantitative methods for research synthesis
   Woodfield S. N., 1981, 5th International Conference on Software Engineering, P215
   XIE S, 2007, P 15 IEEE INT C PROG, P123
   Yusuf S, 2007, INT C PROGRAM COMPRE, P113
NR 68
TC 42
Z9 42
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2009
VL 14
IS 6
BP 685
EP 719
DI 10.1007/s10664-009-9106-z
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 495IG
UT WOS:000269883800003
DA 2024-07-18
ER

PT J
AU Masri, W
AF Masri, Wes
TI Exploiting the empirical characteristics of program dependences for
   improved forward computation of dynamic slices
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE dynamic slicing; forward computation; program analysis; program
   dependence; program debugging; memoization
AB Forward computing algorithms for dynamic slicing operate in tandem with program execution and generally do not require a previously stored execution trace, which make them suitable for interactive debugging and online analysis of long running programs. Both the time and space requirements of such algorithms are generally high due to the fact that they compute and maintain in memory the dynamic slices associated with all variables defined during execution. In this paper we empirically identify several characteristics of program dependences that we exploit to develop a memoization-based forward computing dynamic slicing algorithm whose runtime cost is better than that of any existing algorithm in its class. We also conduct an empirical comparative study contrasting the performance of our new algorithm to the performance of four other algorithms. One is a well known basic algorithm, and the remaining three, use reduced ordered binary decision diagrams (roBDDs) to maintain dynamic slices. Our results indicate that the new memoization-based algorithm is: (1) considerably more time and space efficient than the basic algorithm and one of the roBDD-based algorithms designed to be suitable for online analysis; and (2) comparable in terms of time efficiency but consistently more space efficient than the remaining two roBDD-based algorithms.
C1 Amer Univ Beirut, Dept Comp Sci, Beirut 11072020, Lebanon.
C3 American University of Beirut
RP Masri, W (corresponding author), Amer Univ Beirut, Dept Comp Sci, POB 11-0236, Beirut 11072020, Lebanon.
EM wm13@aub.edu.lb
RI Masri, Wes/A-1786-2013
FU Lebanese National Council of Scientific Research
FX Dr. Masri's research was partially supported by a grant from the
   Lebanese National Council of Scientific Research to the American
   University of Beirut.
CR AGRAWAL H, 1993, SOFTWARE PRACT EXPER, V23, P589, DOI 10.1002/spe.4380230603
   AGRAWAL H, 1990, SIGPLAN NOTICES, V25, P246, DOI 10.1145/93548.93576
   Beszédes A, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P105, DOI 10.1109/CSMR.2001.914974
   BESZEDES A, 2002, P INT C SOFTW MAINT
   Binkley D, 1998, INFORM SOFTWARE TECH, V40, P583, DOI 10.1016/S0950-5849(98)00085-8
   Cormen Thomas H., 2001, INTRO ALGORITHMS
   DENNING DE, 1976, COMMUN ACM, V19, P236, DOI 10.1145/360051.360056
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   GALLAGHER KB, 1991, IEEE T SOFTWARE ENG, V17, P751, DOI 10.1109/32.83912
   HARMAN M, 1995, J SOFTWARE TESTING V, V5, P143
   KOREL B, 1988, INFORM PROCESS LETT, V29, P155, DOI 10.1016/0020-0190(88)90054-3
   Korel B, 1997, IEEE T SOFTWARE ENG, V23, P17, DOI 10.1109/32.581327
   KOREL B, 1994, FORWARD COMPUTATION, P66
   KOREL B, 1998, P 6 INT WORKSH PROGR
   MASRI W, 2004, 15 IEEE INT S SOFTW
   MASRI W, 2006, 17 IEEE INT S SOFTW
   MASRI WB, 2004, THESIS
   Meinel C., 1998, ALGORITHMS DATA STRU
   PAN K, 2005, INVESTIGATION PROGRA
   Smith S. F., 2006, PLAS 2006. Proceedings of the 2006 Programming Languages and Analysis for Security Workshop, P75, DOI 10.1145/1134744.1134758
   The Byte Code Engineering Library (BCEL), 2003, AP JAK PROJ
   TIP F, 1995, J PROGRAM LANG, V3, P121
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
   ZHANG X, 2004, ACM SIGPLAN C PROGR, P94
   Zhang X., 2004, INT C SOFTW ENG ED U
   Zhang ZG, 2003, PROC INT CONF SOFTW, P319
   Zimmermann J., 2003, 19 COMP SEC APPL C L
   ZIMMERMANN J, 2003, LECT NOTES COMPUTER, V2808
NR 28
TC 13
Z9 13
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2008
VL 13
IS 4
BP 369
EP 399
DI 10.1007/s10664-008-9071-y
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 343FK
UT WOS:000258838200002
DA 2024-07-18
ER

PT J
AU Maldonado, JC
   Carver, J
   Shull, F
   Fabbri, S
   Dória, E
   Martimiano, L
   Mendonça, M
   Basili, V
AF Maldonado, JC
   Carver, J
   Shull, F
   Fabbri, S
   Dória, E
   Martimiano, L
   Mendonça, M
   Basili, V
TI Perspective-based reading:: A replicated experiment focused on
   individual reviewer effectiveness
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE software inspections; experimental replication; laboratory package;
   software reading techniques; requirements documents
AB This paper describes a replication conducted to compare the effectiveness of inspectors using Perspective Based Reading (PBR) to the effectiveness of inspectors using a checklist. The goal of this replication was to better understand the complementary aspects of the PBR perspectives. To this end, a brief discussion of the original study is provided as well as a more detailed description of the replication. A detailed statistical analysis is then provided along with analysis of the PBR perspectives.
   For the individual PBR perspectives, we saw an interesting dichotomy: In the original study there was little overlap among the sets of defects found by each of the three perspectives, while in the replication two of the three perspectives found similar sets of defects on one of the two documents used in the study. Interestingly this document was the only case where the users of PBR were not more effective than the users of a checklist. This result leads to a new hypothesis that the complementary aspect of the PBR perspectives is the characteristic that provides the benefit over other defect detection techniques.
C1 Mississippi State Univ, Dept Comp Sci & Engn, Mississippi State, MS 39762 USA.
   Univ Sao Paulo, ICMC, Dept Ciencias Computacao, BR-13560 Sao Carlos, SP, Brazil.
   Fraunhofer Ctr Expt Software Engn, College Pk, MD 20740 USA.
   Univ Fed Sao Carlos, Dept Computacao, BR-13565905 Sao Carlos, SP, Brazil.
   Univ Oeste Paulista, Fac Informat Presidente Prudente, BR-19050680 Sao Carlos, SP, Brazil.
   Univ Salvador, NUPERC, Dept Ciencias Exatas, BR-126275 Oliveira, Brazil.
   Univ Maryland, Fraunhofer Ctr Expt Software Engn, College Pk, MD 20742 USA.
   Univ Maryland, Dept Comp Sci, College Pk, MD 20742 USA.
C3 Mississippi State University; Universidade de Sao Paulo; Universidade
   Federal de Sao Carlos; Universidade do Oeste Paulista; Universidade
   Salvador (UNIFACS); University System of Maryland; University of
   Maryland College Park; University System of Maryland; University of
   Maryland College Park
RP Mississippi State Univ, Dept Comp Sci & Engn, 300 Butler Hall,Box 9637, Mississippi State, MS 39762 USA.
EM jcmaldon@icmc.sc.usp.br; carver@cse.msstate.edu; fshull@fc-md.umd.edu;
   sfabbri@dc.ufscar.br; emerson@icmc.sc.usp.br; luciana@icmc.sc.usp.br;
   mgmn@unifacs.br; basili@cs.umd.edu
RI Maldonado, José Carlos/E-9290-2011; Shull, Forrest/GZK-6750-2022;
   Carver, Jeffrey/AAM-8202-2020; Dória, Emerson Silas/G-2237-2017;
   Mendonca, Manoel/A-1579-2011; Carver, Jeffrey/AFP-1987-2022
OI Carver, Jeffrey/0000-0002-7824-9151; Mendonca,
   Manoel/0000-0002-0874-7665; Carver, Jeffrey/0000-0002-7824-9151
CR Basili V. R., 1996, Empirical Software Engineering, V1, P133, DOI 10.1007/BF00368702
   CIOLKOWSKI M, 1997, 9713 ISERN
   Conradi R, 2003, LECT NOTES COMPUT SC, V2743, P483
   Laitenberger O, 2001, IEEE T SOFTWARE ENG, V27, P387, DOI 10.1109/32.922713
   Laitenberger O, 2000, J SYST SOFTWARE, V53, P183, DOI 10.1016/S0164-1212(00)00052-2
   MENDONCA M, 1999, STATE ART REPORT MIN
   Porter A., 1998, Empirical Software Engineering, V3, P355, DOI 10.1023/A:1009776104355
   Regnell B., 2000, Empirical Software Engineering, V5, P331, DOI 10.1023/A:1009848320066
   Robson C., 2002, Real world research
   Shull F, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P7, DOI 10.1109/ISESE.2002.1166920
   Shull F, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P249, DOI 10.1109/METRIC.2002.1011343
   SHULL F, 1998, THESIS U MARYLAND CO
   ZHANG Z, 1999, EMPIR SOFTW ENG, V4, P43
NR 13
TC 23
Z9 24
U1 0
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2006
VL 11
IS 1
BP 119
EP 142
DI 10.1007/s10664-006-5967-6
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 013XO
UT WOS:000235443500005
DA 2024-07-18
ER

PT J
AU Ahonen, JJ
   Junttila, T
   Sakkinen, M
AF Ahonen, JJ
   Junttila, T
   Sakkinen, M
TI Impacts of the organizational model on testing: Three industrial cases
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT Joint Conference of the
   Evaluation-and-Assessment-in-Software-Engineering
   (EASE)/Psychology-of-Programming-Interest-Group (PPIG)
CY APR, 2003
CL Keele Univ, Keele, ENGLAND
SP Evaluat & Assessment Software Engn, Psychol Programming Interest Grp
HO Keele Univ
DE software testing; software engineering; software process; organizational
   model; process assessment; TIM
AB Quality problems in delivered software systems are causing huge costs to vendors and customers alike. Proper testing is crucial for removing defects and assuring the required reliability of software, but testing tends to be it weak spot in the development process. The problems of testing are often supposed to be mainly technical. However, in our three case studies, the organizational structure of the software engineering organization has shown very significant effects on the testing process and its results. We describe three different organizational models and compare their advantages and disadvantages for testing. according to empirical data.
C1 Univ Jyvaskyla, Informat Technol Res Inst, FIN-40014 Jyvaskyla, Finland.
C3 University of Jyvaskyla
RP Ahonen, JJ (corresponding author), Univ Jyvaskyla, Informat Technol Res Inst, POB 35 Agora, FIN-40014 Jyvaskyla, Finland.
EM jarmo.ahonen@seamk.fi; tuukka.junttila@titu.jyu.il; sakkinen@cs.jyu.fi
CR Ahonen J. J., 2002, Software Process Improvement and Practice, V7, P33, DOI 10.1002/spip.152
   Ahonen JJ, 2003, IEEE INTERNATIONAL CONFERENCE ON SOFTWARE - SCIENCE, TECHNOLOGY & ENGINEERING, PROCEEDINGS, P145, DOI 10.1109/SWSTE.2003.1245434
   AHONEN JJ, 2003, P IASTED INT C COMP, P32
   AHONEN JJ, 2004, P 7 INT C BUS INF SY, P449
   [Anonymous], 023 RTI NAT I STAND
   Baker RA, 1997, PROC INT CONF SOFTW, P570, DOI 10.1145/253228.253461
   BRIAND L, 1995, PROC INT CONF SOFTW, P133, DOI 10.1145/225014.225027
   Calzolari E, 1998, PROC IEEE INT CONF S, P104, DOI 10.1109/ICSM.1998.738498
   DALAL SR, 1993, PROC INT CONF SOFTW, P425, DOI 10.1109/ICSE.1993.346023
   DAVIS SM, 1978, HARVARD BUS REV, V56, P131
   Dustin E., 1999, AUTOMATED SOFTWARE T
   Ericson T., 1997, Software Testing, Verification and Reliability, V7, P229, DOI 10.1002/(SICI)1099-1689(199712)7:4<229::AID-STVR149>3.0.CO;2-M
   George J.M., 1996, UNDERSTANDING MANAGI
   Kock N., 1996, Business Process Management Journal, V2, P8
   Koomen T., 1999, TEST PROCESS IMPROVE
   LAAMANEN K, 1998, PROSESSIJOHTAMISEN K
   MCCANN J, 1981, HDB ORG DESIGN, V2
   Osland J.S., 2001, ORG BEHAV EXPERIENTI, V7th
   Pandya KV, 1997, INT J OPER PROD MAN, V17, P502, DOI 10.1108/01443579710167221
   Slaughter SA, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P197, DOI 10.1109/ICSM.1996.565007
   Yamaura T, 1998, IEEE SOFTWARE, V15, P113, DOI 10.1109/52.663795
   Yeh DM, 2002, J SOFTW MAINT EVOL-R, V14, P65, DOI 10.1002/smr.246
NR 22
TC 24
Z9 24
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2004
VL 9
IS 4
BP 275
EP 296
DI 10.1023/B:EMSE.0000039880.99096.af
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 863NR
UT WOS:000224569200002
DA 2024-07-18
ER

PT J
AU Sharp, H
   Robinson, H
AF Sharp, H
   Robinson, H
TI An ethnographic study of XP practice
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT Joint Conference of the
   Evaluation-and-Assessment-in-Software-Engineering
   (EASE)/Psychology-of-Programming-Interest-Group (PPIG)
CY APR, 2003
CL Keele Univ, Keele, ENGLAND
SP Evaluat & Assessment Software Engn, Psychol Programming Interest Grp
HO Keele Univ
DE XP culture; XP community; XP team; agile development; ethnographic
   studies; field studies
ID AGILE METHODS
AB Agile methods are a response to more rigorous and traditional approaches to software development which are perceived to have failed both customers and software development practitioners. eXtreme Programming (XP) is an example agile method and we report on an ethnographic study of XP practice carried out in a small company developing web-based intelligent advertisements. We identify five characterizing themes within XP practice and summarize these findings in terms of XP culture.
C1 Open Univ, Dept Comp, Milton Keynes MK7 6AA, Bucks, England.
C3 Open University - UK
RP Open Univ, Dept Comp, Walton Hall, Milton Keynes MK7 6AA, Bucks, England.
EM h.c.sharp@open.ac.uk; hm.robinson@open.ac.uk
OI Sharp, Helen/0000-0003-4376-1734
CR [Anonymous], 1988, SCI VERY IDEA
   [Anonymous], 2000, AVAILABLE LIGHT ANTH
   Beck K., 2000, EXTREME PROGRAMMING
   Beynon-Davies P, 1999, J INF TECHNOL-UK, V14, P107, DOI 10.1080/026839699344782
   Boehm B, 2002, COMPUTER, V35, P64, DOI 10.1109/2.976920
   Brown J., 1989, Educational Researcher, V18, P32, DOI [DOI 10.3102/0013189X018001032, 10.3102/0013189X018001032, DOI 10.2307/1176008]
   Button G., 1996, Computer Supported Cooperative Work (CSCW), V5, P369, DOI 10.1007/BF00136711
   Cockburn A., 2000, Cutter IT Journal, V13, P26
   Cockburn A., 2002, AGILE SOFTWARE DEV
   DAVIS H, 2001, THESIS U SHEFFIELD
   DeMarco T, 2002, COMPUTER, V35, P90, DOI 10.1109/MC.2002.1009175
   Fielding Nigel., 2001, Researching Social Life, V2nd, P145
   Geertz C., 2000, The Interpretation of Cultures
   Hammersley Martyn., 1983, ETHNOGRAPHY PRINCIPL
   Heath C., 1992, Computer Supported Cooperative Work (CSCW), V1, P69, DOI 10.1007/BF00752451
   Highsmith J., 2002, Agile software development ecosystems
   IVINGSTON E, 1982, THESIS U CALIFORNIA
   Low J, 1996, INFORM SOFTWARE TECH, V38, P77, DOI 10.1016/0950-5849(95)01046-7
   LOW J, 1993, SOCIAL DIMENSIONS SY
   PINCH TJ, 1984, SOC STUD SCI, V14, P399, DOI 10.1177/030631284014003004
   ROBINSON HM, 1996, LONDON PROGRAMMING L, P333
   Schon D., 1984, The Reflective Practitioner: How Professionals Think in Action
   Sharp H., 1999, Proceedings 25th EUROMICRO Conference. Informatics: Theory and Practice for the New Millennium, P170, DOI 10.1109/EURMIC.1999.794778
   Sharp H, 2000, IEEE SOFTWARE, V17, P40, DOI 10.1109/52.819967
   SHARP H, 2002, OOPSLA 02 COMPANION, P92
   Sim S. E., 1999, Fifth IEEE Workshop on Empirical Studies of Software Maintenance (WESS99). Theme: How to Wade Through the Mire of Evidence?, P66
   Sim SE, 1998, PROC INT CONF SOFTW, P361, DOI 10.1109/ICSE.1998.671389
   SINGER J, 1997, CTR ADV STUD C CASCO, P1
   Wenger E., 2009, COMMUNITIES PRACTICE
NR 29
TC 92
Z9 101
U1 0
U2 18
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2004
VL 9
IS 4
BP 353
EP 375
DI 10.1023/B:EMSE.0000039884.79385.54
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 863NR
UT WOS:000224569200006
DA 2024-07-18
ER

PT J
AU Succi, G
   Pedrycz, W
   Stefanovic, M
   Russo, B
AF Succi, G
   Pedrycz, W
   Stefanovic, M
   Russo, B
TI An investigation on the occurrence of service requests in commercial
   software applications
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE service requests; software reliability growth models; gamma analysis;
   linear regression; Monte Carlo simulation
ID RELIABILITY-GROWTH; ERROR-DETECTION; MODEL
AB A proper characterization of the process of servicing requests for modifications in software systems and identification of the domain-specific aspects of this process are extremely important for software companies since service requests often consume lots of resources. A set of methods and criteria for modeling the servicing process is reviewed in this paper and the results of an extensive empirical investigation based on two commercial applications are presented. Existing software reliability growth models and gamma analysis are adopted to characterize the occurrence and typology of service requests over time. Linear regression is used to describe the learning process. A quantitative assessment is provided on the descriptive and predictive ability of the analyzed models. Since humans are involved in collecting the input data, the sensitivity of the proposed models to human errors is assessed using Monte Carlo simulation.
C1 Univ Alberta, Dept Elect & Comp Engn, Edmonton, AB, Canada.
C3 University of Alberta
EM giancarlo.succi@unibz.it
RI Succi, Giancarlo/AAZ-2354-2020; Russo, Barbara/L-5311-2013; Russo,
   Barbara/AAA-8850-2019
OI Succi, Giancarlo/0000-0001-8847-0186; Russo,
   Barbara/0000-0003-3737-9264; Russo, Barbara/0000-0003-3737-9264
CR [Anonymous], 1996, HDB SOFTWARE RELIABI
   BASILI VR, 1996, 18 INT C SOFTW ENG I
   BAYS ME, 1999, SOFTWARE RELEASE MET
   Chong CKS, 1988, P IEEE C SOFTW MAINT, P248
   CHONG HYC, 1987, P IEEE C SOFTW MAINT, P156
   CHONK HYC, 1989, P IEEE C SOFTW MAINT, P106
   FREUND J, 1996, IEEE T RELIABILITY
   GOEL AL, 1979, IEEE T RELIAB, V28, P206, DOI 10.1109/TR.1979.5220566
   Kececioglu D., 1991, RELIABILITY ENG HDB, V2
   Kemerer CF, 1999, IEEE T SOFTWARE ENG, V25, P493, DOI 10.1109/32.799945
   LITTLEWOOD B, 1981, IEEE T RELIAB, V30, P313, DOI 10.1109/TR.1981.5221099
   Musa J. D., 1975, IEEE Transactions on Software Engineering, VSE-1, P312, DOI 10.1109/TSE.1975.6312856
   MUSAJ, 1987, SOFTWARE RELIABILITY
   NIKORA A, 1995, 6 INT S SOFTW REL EN
   PELZ DC, 1985, KNOWLEDGE, V6, P261, DOI 10.1177/107554708500600304
   Pressman Roger S., 1991, SOFTWARE ENG PRACTIT, V1st
   SUCCI G, 2000, EMPIRICAL ANAL PRERE
   TRYFOS P., 1997, Methods for Business Analysis and Forecasting: Text and Cases
   Wood A, 1996, COMPUTER, V29, P69, DOI 10.1109/2.544240
   YAMADA S, 1983, IEEE T RELIAB, V32, P475, DOI 10.1109/TR.1983.5221735
   YAMADA S, 1986, IEEE T RELIAB, V35, P19, DOI 10.1109/TR.1986.4335332
NR 21
TC 10
Z9 10
U1 0
U2 0
PU KLUWER ACADEMIC PUBL
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2003
VL 8
IS 2
BP 197
EP 215
DI 10.1023/A:1023014713253
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 803OV
UT WOS:000220241300004
DA 2024-07-18
ER

PT J
AU Alaboudi, A
   LaToza, TD
AF Alaboudi, Abdulaziz
   LaToza, Thomas D.
TI What constitutes debugging? An exploratory study of debugging episodes
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Debugging; Debugging activities; Debugging tools
ID SOFTWARE; MAINTENANCE; INFORMATION
AB When debugging, developers engage in activities such as navigating, editing, testing, and inspecting code. Despite being the building blocks of debugging, little is known about how they constitute debugging. To address this gap, we introduce the concept of a "debugging episode" which encompasses the time from when a developer first investigates a defect until when the defect is fixed or the developer stops. We observed 11 professional developers working on open source projects, coding 89 debugging episodes and 2135 instances of activities that occurred during them. Six activities were identified: navigate, edit, test, inspect, consult resources, and other miscellaneous activities. We found that developers spent the most time editing (41%) and testing (29%) during debugging. When addressing time-consuming defects, developers engaged in more diverse types of debugging activities, spent more time inspecting program state, navigating code, and consulting external resources, and spent less time testing. We found that the activities developers do while debugging were more similar than different than the activities that make up implementation work. Developers spent a similar fraction of their time editing and navigating during debugging and implementation work. However, debugging involved significantly more time inspecting (16%) than implementation work (2%), while implementation work involved more time consulting resources (24%) than debugging (6%). We conducted semi-structured interviews with ten developers to gain insights into the challenges that cause developers in longer debugging episodes to engage with more activities. Our findings offer insight into the debugging process and the challenges that developers confront, offering implications for the design of debugging tools, improved debugging education, and future research.
C1 [Alaboudi, Abdulaziz; LaToza, Thomas D.] George Mason Univ, Dept Comp Sci, Fairfax, VA 22030 USA.
C3 George Mason University
RP Alaboudi, A (corresponding author), George Mason Univ, Dept Comp Sci, Fairfax, VA 22030 USA.
EM aalaboud@gmu.edu; tlatoza@gmu.edu
OI Alaboudi, Abdulaziz S/0000-0001-9242-748X
FU NSF [1845508]
FX This research was funded by NSF award 1845508.
CR de Souza HA, 2017, Arxiv, DOI arXiv:1607.04347
   Abad Z.S. H., 2018, ACM International Conference on Evaluation and Assessment in Software Engineering, P122, DOI [10.1145/3210459.3210471, DOI 10.1145/3210459.3210471]
   Afzal A, 2018, IEEE WORK CONF MIN S, P114, DOI 10.1145/3196398.3196468
   Alaboudi A, 2020, S VIS LANG HUM CEN C, DOI 10.1109/vl/hcc50065.2020.9127273
   Alaboudi A, 2021, S VIS LANG HUM CEN C, DOI 10.1109/VL/HCC51201.2021.9576170
   Alaboudi A, 2019, S VIS LANG HUM CEN C, P5, DOI [10.1109/VLHCC.2019.8818832, 10.1109/vlhcc.2019.8818832]
   Alaboudi A, 2019, 2019 IEEE/ACM 12TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE 2019), P117, DOI 10.1109/CHASE.2019.00035
   Amann S, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P124, DOI 10.1109/SANER.2016.39
   [Anonymous], PLATEAU WORKSH EV US
   [Anonymous], 2013, P SIGCHI C HUMAN FAC
   Baltes S, 2015, ACM IEEE INT S EMPR, P1
   Beller M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P572, DOI 10.1145/3180155.3180175
   bit, 2022, STUD DAT OBS DEV
   bit, 2022, DEF DAT OBS DEV
   Böhme M, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P117, DOI 10.1145/3106237.3106255
   Bragdon A, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P2503
   Britton T, 2013, 229 U CAMB JUDG BUS
   Chatterjee Preetha, 2019, IEEE WORK CONF MIN S, P490, DOI [DOI 10.1109/MSR.2019.00075, 10.1109/MSR.2019.00075]
   Chattopadhyay S, 2019, PROC INT CONF SOFTW, P373, DOI 10.1109/ICSE.2019.00051
   Coker Z, 2019, PROC IEEE INT CONF S, P568, DOI 10.1109/ICSME.2019.00091
   Damevski K, 2017, IEEE T SOFTWARE ENG, V43, P359, DOI 10.1109/TSE.2016.2592905
   DeMillo R. A., 1996, SIGSOFT Software Engineering Notes, V21, P121, DOI [10.1145/229000.226310, 10.1145/226295.226310]
   Eisenstadt M., 1993, Empirical Studies of Programmers: Fifth Workshop, P86
   Faas Travis, 2018, Proceedings of the ACM on Human-Computer Interaction, V2, DOI 10.1145/3274319
   figshare, 2022, REPLICATION PACKAGE
   GOULD JD, 1974, HUM FACTORS, V16, P258, DOI 10.1177/001872087401600308
   GOULD JD, 1975, INT J MAN MACH STUD, V7, P151, DOI 10.1016/S0020-7373(75)80005-8
   Gugerty L., 1986, P CHI 1986 BOST MASS, P171, DOI DOI 10.1145/22627.22367
   Jiang SY, 2017, EMPIR SOFTW ENG, V22, P631, DOI 10.1007/s10664-016-9441-9
   Johnson M. S., 1982, SIGPLAN Notices, V17, P53, DOI 10.1145/947902.947908
   Jones JA, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P467, DOI 10.1109/ICSE.2002.1007991
   Katz I. R., 1987, Human-Computer Interaction, V3, P351, DOI 10.1207/s15327051hci0304_2
   Ko AJ, 2007, PROC INT CONF SOFTW, P344
   Ko AJ, 2006, IEEE T SOFTWARE ENG, V32, P971, DOI 10.1109/TSE.2006.116
   Ko AJ, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1922649.1922658
   Lakhani K.R., 2004, PRODUKTENTWICKLUNG V, P303, DOI DOI 10.1007/978-3-322-84540-5_13
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   LaToza T. D., 2006, 28th International Conference on Software Engineering Proceedings, P492, DOI 10.1145/1134285.1134355
   LaToza Thomas D., 2010, P 32 ACM IEEE INT C, P185, DOI DOI 10.1145/1806799.1806829
   Lawrance J, 2013, IEEE T SOFTWARE ENG, V39, P197, DOI 10.1109/TSE.2010.111
   Layman Lucas, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P383, DOI 10.1109/ESEM.2013.43
   LUKEY FJ, 1980, INT J MAN MACH STUD, V12, P189, DOI 10.1016/S0020-7373(80)80017-4
   MacLeod L, 2015, INT C PROGRAM COMPRE, P104, DOI 10.1109/ICPC.2015.19
   Mamykina L, 2011, 29TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P2857
   Mangano N, 2015, IEEE T SOFTWARE ENG, V41, P135, DOI 10.1109/TSE.2014.2362924
   Meyer AN, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P19, DOI 10.1145/2635868.2635892
   Minelli R., 2016, INT C PROGRAM COMPRE
   Murphy GC, 2006, IEEE SOFTWARE, V23, P76, DOI 10.1109/MS.2006.105
   Parnin C., 2011, P 2011 INT S SOFTWAR, P199, DOI [10.1145/2001420.2001445, DOI 10.1145/2001420.2001445]
   Perscheid M, 2017, SOFTWARE QUAL J, V25, P83, DOI 10.1007/s11219-015-9294-2
   Petrillo F, 2019, J SYST SOFTWARE, V153, P152, DOI 10.1016/j.jss.2019.04.028
   Piorkowski D, 2015, PROC IEEE INT CONF S, P11, DOI 10.1109/ICSM.2015.7332447
   Romero P, 2007, INT J HUM-COMPUT ST, V65, P992, DOI 10.1016/j.ijhcs.2007.07.005
   Sillito J, 2008, IEEE T SOFTWARE ENG, V34, P434, DOI 10.1109/TSE.2008.26
   Singer L, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P211, DOI 10.1145/2568225.2568305
   Vans AM, 1999, INT J HUM-COMPUT ST, V51, P31, DOI 10.1006/ijhc.1999.0268
   VESSEY I, 1985, INT J MAN MACH STUD, V23, P459, DOI 10.1016/S0020-7373(85)80054-7
   Wang Q, 2015, INT S SOFTWARE TESTI, P1
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Xia X, 2016, PROC IEEE INT CONF S, P268, DOI 10.1109/ICSME.2016.67
   Zhang X, 2006, ACM SIGPLAN NOTICES, V41, P169, DOI 10.1145/1133981.1134002
   Zhang ZG, 2003, PROC INT CONF SOFTW, P319
NR 63
TC 0
Z9 0
U1 3
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2023
VL 28
IS 5
AR 117
DI 10.1007/s10664-023-10352-5
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA R3LB6
UT WOS:001063389600001
DA 2024-07-18
ER

PT J
AU Birchler, C
   Khatiri, S
   Bosshard, B
   Gambi, A
   Panichella, S
AF Birchler, Christian
   Khatiri, Sajad
   Bosshard, Bill
   Gambi, Alessio
   Panichella, Sebastiano
TI Machine learning-based test selection for simulation-based testing of
   self-driving cars software
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Self-driving cars; Software simulation; Regression testing; Test case
   selection; Industrial integration
ID PRIORITIZATION; OPTIMIZATION; MINIMIZATION; VEHICLES; SEARCH
AB Simulation platforms facilitate the development of emerging Cyber-Physical Systems (CPS) like self-driving cars (SDC) because they are more efficient and less dangerous than field operational test cases. Despite this, thoroughly testing SDCs in simulated environments remains challenging because SDCs must be tested in a sheer amount of long-running test cases. Past results on software testing optimization have shown that not all the test cases contribute equally to establishing confidence in test subjects' quality and reliability, and the execution of "safe and uninformative" test cases can be skipped to reduce testing effort. However, this problem is only partially addressed in the context of SDC simulation platforms. In this paper, we investigate test selection strategies to increase the cost-effectiveness of simulation-based testing in the context of SDCs. We propose an approach called SDC-Scissor (SDC coS t-effeC tI ve teS t S electOR) that leverages Machine Learning (ML) strategies to identify and skip test cases that are unlikely to detect faults in SDCs before executing them. Our evaluation shows that SDC-Scissor outperforms the baselines. With the Logistic model, we achieve an accuracy of 70%, a precision of 65%, and a recall of 80% in selecting tests leading to a fault and improved testing cost-effectiveness. Specifically, SDC-Scissor avoided the execution of 50% of unnecessary tests as well as outperformed two baseline strategies. Complementary to existing work, we also integrated SDC-Scissor into the context of an industrial organization in the automotive domain to demonstrate how it can be used in industrial settings.
C1 [Birchler, Christian; Khatiri, Sajad; Panichella, Sebastiano] Zurich Univ Appl Sci, Winterthur, Switzerland.
   [Khatiri, Sajad] USI, Software Inst, Lugano, Switzerland.
   [Bosshard, Bill] Meier Planungsdienste GmbH, Zurich, Switzerland.
   [Gambi, Alessio] IMC Univ Appl Sci Krems, Krems An Der Donau, Austria.
   [Gambi, Alessio] Univ Passau, Passau, Germany.
C3 Zurich University of Applied Sciences; Universita della Svizzera
   Italiana; University of Passau
RP Birchler, C (corresponding author), Zurich Univ Appl Sci, Winterthur, Switzerland.
EM birc@zhaw.ch; bill.bosshard@outlook.com; alessio.gambi@fh-krems.ac.at;
   panc@zhaw.ch
OI Panichella, Sebastiano/0000-0003-4120-626X; Birchler,
   Christian/0000-0003-3987-0276; GAMBI, ALESSIO/0000-0002-0132-6497
FU Horizon 2020 (EU Commission) [957254-COSMOS]; DFG project STUNT (DFG)
   [FR 2955/4-1]
FX Sebastiano Panichella, Sajad Khatiri, and Christian Birchler gratefully
   acknowledge the Horizon 2020 (EU Commission) support for the project
   COSMOS (DevOps for Complex Cyber-physical Systems), Project No.
   957254-COSMOS). This work was partially supported by the DFG project
   STUNT (DFG Grant Agreement n. FR 2955/4-1). We finally thank Kim
   Hyeongkyun for his valuable help in the research conducted and detailed
   in Section 6.
CR Academies of Sciences, 2017, 21 CENT CYB PHYS SYS
   Adnan M, 2022, PEERJ COMPUT SCI, V8, DOI 10.7717/peerj-cs.803
   Afzal A., 2020, A study on the challenges of using robotics simulators for testing
   Althoff M, 2017, IEEE INT VEH SYM, P719, DOI 10.1109/IVS.2017.7995802
   [Anonymous], 2007, P 2014 WORKSH ECL TE, DOI 10.1145/1328279.1328284
   [Anonymous], 2019, WASH POST
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Arrieta A., 2016, P 20 INT SYST SOFTW, P297, DOI 10.1145/2934466.2946046
   Arrieta A, 2018, GECCO'18: PROCEEDINGS OF THE 2018 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1411, DOI 10.1145/3205455.3205490
   Arrieta A, 2019, J SYST SOFTWARE, V149, P1, DOI 10.1016/j.jss.2018.09.055
   Arrieta A, 2018, IEEE T IND INFORM, V14, P1055, DOI 10.1109/TII.2017.2788019
   Baeza-Yates R A, 2011, MODERN INFORM RETRIE
   Baheti R., 2011, Impact Control Technol, V12, P161, DOI DOI 10.1145/1795194.1795205
   BeamNG GmbH, 2022, BEAMNG TECH
   Ben Abdessalem R, 2018, IEEE INT CONF AUTOM, P143, DOI 10.1145/3238147.3238192
   Ben Abdessalem R, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1016, DOI 10.1145/3180155.3180160
   Ben Abdessalem R, 2016, IEEE INT CONF AUTOM, P63, DOI 10.1145/2970276.2970311
   Bergstra J., 2011, Adv. Neural Inf. Process. Syst., V24
   Bergstra J, 2012, J MACH LEARN RES, V13, P281
   Bezerra MER, 2007, IEEE IJCNN, P2874
   Birchler C, 2023, SCI COMPUT PROGRAM, V226, DOI 10.1016/j.scico.2023.102926
   Birchler C, 2022, EUR CON SFTWR MTNCE, P164, DOI 10.1109/SANER53432.2022.00030
   Birchler C, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3533818
   Bondi E, 2018, PROCEEDINGS OF THE 1ST ACM SIGCAS CONFERENCE ON COMPUTING AND SUSTAINABLE SOCIETIES (COMPASS 2018), DOI 10.1145/3209811.3209880
   Boumiza S, 2019, IEEE CONF WIREL MOB, DOI 10.1109/wimob.2019.8923315
   Briand L, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P789, DOI 10.1145/2889160.2889212
   Canfora G, 2015, SOFTW TEST VERIF REL, V25, P426, DOI 10.1002/stvr.1570
   Canfora G, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P252, DOI 10.1109/ICST.2013.38
   Caruana R, 2006, P 23 INT C MACH LEAR, V148, P161, DOI DOI 10.1145/1143844.1143865
   Castellano E, 2021, 2021 IEEE/ACM 14TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST 2021), P36, DOI 10.1109/SBST52555.2021.00016
   Ceylan E, 2006, EUROMICRO CONF PROC, P240, DOI 10.1109/EUROMICRO.2006.56
   Chen H, 2017, J IND INTEGR MANAG, V2, DOI 10.1142/S2424862217500129
   Chen TY, 1996, INFORM PROCESS LETT, V60, P135, DOI 10.1016/S0020-0190(96)00135-4
   CIA, 2017, HIST CAN TECHN
   CNX O, 2021, OP U PHYS
   Dalboni M, 2019, IEEE TRANSP ELECT C, DOI 10.1109/itec.2019.8790496
   Devroey X, 2023, SOFTW TEST VERIF REL, V33, DOI 10.1002/stvr.1838
   Di Nucci D, 2020, IEEE T SOFTWARE ENG, V46, P674, DOI 10.1109/TSE.2018.2868082
   Di Sorbo A, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P499, DOI 10.1145/2950290.2950299
   Dosovitskiy A., 2017, P 1 ANN C ROB LEARN, P1, DOI DOI 10.48550/ARXIV.1711.03938
   Elberzhager F, 2012, INFORM SOFTWARE TECH, V54, P1092, DOI 10.1016/j.infsof.2012.04.007
   Frank E, 2005, DATA MINING AND KNOWLEDGE DISCOVERY HANDBOOK, P1305, DOI 10.1007/0-387-25465-X_62
   Gambi A, 2022, 15TH SEARCH-BASED SOFTWARE TESTING WORKSHOP (SBST 2022), P25, DOI 10.1145/3526072.3527538
   Gambi A, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P318, DOI 10.1145/3293882.3330566
   Gambi A, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P257, DOI 10.1145/3338906.3338942
   Gambi A, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P27, DOI 10.1109/ICSE-Companion.2019.00030
   González CA, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P176, DOI 10.1145/3239372.3239409
   Guardian T, 2018, GUARDIAN T
   Gundu Ravalika, 2022, 2022 IEEE International Conference on Electro Information Technology (eIT)., P42, DOI 10.1109/eIT53891.2022.9813985
   Ho TK, 1998, IEEE T PATTERN ANAL, V20, P832, DOI 10.1109/34.709601
   Huang J, 2013, ACM SIGPLAN NOTICES, V48, P141, DOI 10.1145/2499370.2462167
   Ingrand F, 2019, 2019 THIRD IEEE INTERNATIONAL CONFERENCE ON ROBOTIC COMPUTING (IRC 2019), P321, DOI 10.1109/IRC.2019.00059
   Jia Y, 2009, INFORM SOFTWARE TECH, V51, P1379, DOI 10.1016/j.infsof.2009.04.016
   Kalra N, 2016, TRANSPORT RES A-POL, V94, P182, DOI 10.1016/j.tra.2016.09.010
   Kaur A, 2008, 2008 INTERNATIONAL CONFERENCE ON ADVANCED COMPUTER THEORY AND ENGINEERING, P37, DOI 10.1109/ICACTE.2008.204
   Khatiri Sajad, 2021, Zenodo
   Kim J, 2019, IEEE ICST WORKSHOP, P148, DOI 10.1109/ICSTW.2019.00043
   Li GP, 2020, PROC INT SYMP SOFTW, P25, DOI 10.1109/ISSRE5003.2020.00012
   Li L, 2016, IEEE T INTELL VEHICL, V1, P158, DOI 10.1109/TIV.2016.2608003
   Ling C. X., 1998, Proceedings Fourth International Conference on Knowledge Discovery and Data Mining, P73
   Loquercio A, 2020, IEEE T ROBOT, V36, P1, DOI 10.1109/TRO.2019.2942989
   Matinnejad Reza, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P141, DOI 10.1007/978-3-642-39742-4_12
   Nvidia, 2020, NVID DRIV CONST
   Pan RQ, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10066-6
   Panichella S, 2021, 2021 IEEE/ACM 14TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST 2021), P20, DOI 10.1109/SBST52555.2021.00011
   Panichella S, 2020, INT REQUIR ENG CONF, P404, DOI 10.1109/RE48521.2020.00057
   Panichella S, 2015, PROC IEEE INT CONF S, P586, DOI 10.1109/ICSM.2015.7332519
   Panichella S, 2015, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSM.2015.7332474
   Rani P, 2021, J SYST SOFTWARE, V181, DOI 10.1016/j.jss.2021.111047
   Refaeilzadeh P., 2009, ENCYCL DATABASE SYST, V5, P532, DOI DOI 10.1007/978-0-387-39940-9565
   Riccio V, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P876, DOI 10.1145/3368089.3409730
   Roper M, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE TESTING (AITEST), P99, DOI 10.1109/AITest.2019.00009
   Rothermel G, 1998, PROC IEEE INT CONF S, P34, DOI 10.1109/ICSM.1998.738487
   Rothermel G., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P179, DOI 10.1109/ICSM.1999.792604
   Sadri-Moshkenani Z, 2022, SOFTW TEST VERIF REL, V32, DOI 10.1002/stvr.1794
   Sean CG, 2022, CASPER WEL 2007 2022
   Shin SY, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P49, DOI 10.1145/3213846.3213852
   Söntges S, 2018, IEEE T INTELL TRANSP, V19, P1855, DOI 10.1109/TITS.2017.2742141
   Sorbo AD, 2022, T SOFTW ENG METHODOL
   Tolles J, 2016, JAMA-J AM MED ASSOC, V316, P533, DOI 10.1001/jama.2016.7653
   Webb G.I., 2011, ENCY MACHINE LEARNIN, DOI [10.1007/978-0-387-30164-8, DOI 10.1007/978-0-387-30164-8_425, 10.1007/978-0-387-30164-8_425]
   Xu JX, 2019, IEEE INT C INT ROBOT, P5049, DOI [10.1109/IROS40897.2019.8968102, 10.1109/iros40897.2019.8968102]
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Yoo S, 2010, J SYST SOFTWARE, V83, P689, DOI 10.1016/j.jss.2009.11.706
   Zapridou E, 2020, LECT NOTES COMPUT SC
   Zhang XY, 2020, PROC INT SYMP SOFTW, P301, DOI 10.1109/ISSRE5003.2020.00036
   Zimmermann T, 2010, IEEE T SOFTWARE ENG, V36, P618, DOI 10.1109/TSE.2010.63
NR 87
TC 6
Z9 6
U1 6
U2 12
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2023
VL 28
IS 3
AR 71
DI 10.1007/s10664-023-10286-y
PG 55
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA E6UM1
UT WOS:000976870100001
OA hybrid
DA 2024-07-18
ER

PT J
AU da Costa, DA
   Grattan, N
   Stanger, N
   Licorish, SA
AF da Costa, Daniel Alencar
   Grattan, Natalie
   Stanger, Nigel
   Licorish, Sherlock A.
TI Studying the characteristics of SQL-related development tasks: An
   empirical study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE SQL anti-patterns; SQL code; SQL development task; Software maintenance
ID PERFORMANCE
AB A key function of a software system is its ability to facilitate the manipulation of data, which is often implemented using a flavour of the Structured Query Language (SQL). To develop the data operations of software (i.e, creating, retrieving, updating, and deleting data), developers are required to excel in writing and combining both SQL and application code. The problem is that writing SQL code in itself is already challenging (e.g., SQL anti-patterns are commonplace) and combining SQL with application code (i.e., for SQL development tasks) is even more demanding. Meanwhile, we have little empirical understanding regarding the characteristics of SQL development tasks. Do SQL development tasks typically need more code changes? Do they typically have a longer time-to-completion? Answers to such questions would prepare the community for the potential challenges associated with such tasks. Our results obtained from 20 Apache projects reveal that SQL development tasks have a significantly longer time-to-completion than SQL-unrelated tasks and require significantly more code changes. Through our qualitative analyses, we observe that SQL development tasks require more spread out changes, effort in reviews and documentation. Our results also corroborate previous research highlighting the prevalence of SQL anti-patterns. The software engineering community should make provision for the peculiarities of SQL coding, in the delivery of safe and secure interactive software.
C1 [da Costa, Daniel Alencar; Grattan, Natalie; Stanger, Nigel; Licorish, Sherlock A.] Univ Otago, Dept Informat Sci, Dunedin, New Zealand.
C3 University of Otago
RP da Costa, DA (corresponding author), Univ Otago, Dept Informat Sci, Dunedin, New Zealand.
EM danielcalencar@otago.ac.nz; natalie.grattan@postgrad.otago.ac.nz;
   nigel.stanger@otago.ac.nz; sherlock.licorish@otago.ac.nz
FU CAUL
FX Open Access funding enabled and organized by CAUL and its Member
   Institutions
CR Annamaa A, 2010, LECT NOTES COMPUT SC, V6461, P131, DOI 10.1007/978-3-642-17164-2_10
   [Anonymous], 2014, SOFTW PROJ MANAG CHA
   ASF, 2019, COMM LED DEV AP WAY
   Asmare MB, 2020, IEEE WORK CONF MIN S, P327, DOI 10.1145/3379597.3387467
   Bachmann A, 2009, IWPSE-EVOL 09: ERCIM WORKSHOP ON SOFTWARE EVOLUTION (EVOL) AND INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION (IWPSE), P119
   Bird C, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P1, DOI 10.1109/MSR.2009.5069475
   Bowen GA, 2009, QUAL RES J, V9, P27, DOI 10.3316/QRJ0902027
   Braun V, 2021, QUAL RES PSYCHOL, V18, P328, DOI 10.1080/14780887.2020.1769238
   Braun V, 2019, QUAL RES SPORT EXERC, V11, P589, DOI 10.1080/2159676X.2019.1628806
   Neto EC, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P380, DOI 10.1109/SANER.2018.8330225
   Chen TH, 2016, IEEE T SOFTWARE ENG, V42, P1148, DOI 10.1109/TSE.2016.2553039
   Chen TH, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1001, DOI 10.1145/2568225.2568259
   Cheung A, 2013, ACM SIGPLAN NOTICES, V48, P3, DOI 10.1145/2499370.2462180
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   COHEN J, 1968, PSYCHOL BULL, V70, P213, DOI 10.1037/h0026256
   da Costa DA, 2017, IEEE T SOFTWARE ENG, V43, P641, DOI 10.1109/TSE.2016.2616306
   da Costa DA, 2014, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSME.2014.50
   de Almeida FG, 2019, INT C PROGRAM COMPRE, P116, DOI 10.1109/ICPC.2019.00025
   Dintyala P, 2020, SIGMOD'20: PROCEEDINGS OF THE 2020 ACM SIGMOD INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P2331, DOI 10.1145/3318464.3389754
   Edmundson Anne, 2013, Engineering Secure Software and Systems. 5th International Symposium, ESSoS 2013. Proceedings, P197, DOI 10.1007/978-3-642-36563-8_14
   Eessaar E., 2015, INNOVATIONS ADV COMP, P53
   Faroult S, 2006, ART SQL, DOI [10.1604/9780596008949, DOI 10.1604/9780596008949]
   Gaspar D, 2017, BRIDGING RELATIONAL, DOI [10.4018/978-1-5225-3385-6.ch001, DOI 10.4018/978-1-5225-3385-6.CH001]
   Giger E., 2010, P 2 INT WORKSH REC S, P52
   Gousios G, 2013, IEEE WORK CONF MIN S, P233, DOI 10.1109/MSR.2013.6624034
   Jin GL, 2012, ACM SIGPLAN NOTICES, V47, P77, DOI 10.1145/2345156.2254075
   Kamei Y., 2010, Proceedings of the 26th International Conference on Software Maintenance, P1, DOI 10.1109/ICSM.2010.5609530
   Kampstra P., 2008, Journal of Statistical Software, V28, P1, DOI [10.18637/jss.v028.c01, DOI 10.18637/JSS.V028.C01, 10.18637/jss.v028.c01.papers3://publication/uuid/692988CE-7E10-498E-96EC-E7A0CE3620A3]
   Karampatsis RM, 2020, IEEE WORK CONF MIN S, P573, DOI 10.1145/3379597.3387491
   Karwin B., 2010, SQL ANTIPATTERNS AVO
   Kononenko O, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P124, DOI 10.1145/3183519.3183542
   KRUSKAL WH, 1952, J AM STAT ASSOC, V47, P583, DOI 10.1080/01621459.1952.10483441
   Lohr SL., 2009, SAMPLING DESIGN ANAL, DOI [10.1604/9780495105275, DOI 10.1604/9780495105275]
   Lyu YJ, 2019, PROC IEEE INT CONF S, P53, DOI 10.1109/ICSME.2019.00015
   Lyu YJ, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P310, DOI 10.1145/3213846.3213865
   Mason T, 2005, 7 INT C ENTERPRISE I, V1, P326
   McHugh ML, 2013, BIOCHEM MEDICA, V23, P143, DOI 10.11613/BM.2013.018
   Melton J, 1992, UNDERSTANDING NEW SQ, DOI [10.1604/9781558602458, DOI 10.1604/9781558602458]
   Mende T, 2010, EUR CON SFTWR MTNCE, P107, DOI 10.1109/CSMR.2010.18
   Mens T, 2012, COMPUTER, V45, P79, DOI 10.1109/MC.2012.273
   Miller K.W., 2008, IT Professional Magazine, V10, P4, DOI DOI 10.1109/MITP.2008.64
   Nagy C, 2018, PROC IEEE ACM INT C, P93, DOI 10.1145/3183440.3183496
   Nagy C, 2015, PROC IEEE INT CONF S, P516, DOI 10.1109/ICSM.2015.7332505
   Nagy C, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P580, DOI 10.1109/SANER.2015.7081881
   O'Leary Z., 2017, ESSENTIAL GUIDE DOIN
   Pickerill P, 2020, EMPIR SOFTW ENG, V25, P2897, DOI 10.1007/s10664-020-09825-8
   Podgurski A, 1999, ACM T SOFTW ENG METH, V8, P263, DOI 10.1145/310663.310667
   Posnett D., 2011, 2011 18th Working Conference on Reverse Engineering, P211, DOI 10.1109/WCRE.2011.33
   Rahman M. M, 2014, P 11 WORK C MIN SOFT, P364, DOI DOI 10.1145/2597073.2597121
   Rigby PC, 2017, 4 INT WORKSHOP MININ, P23
   Rith J., 2014, P ACM S APPL COMP NE, P855
   Roberts JA, 2006, MANAGE SCI, V52, P984, DOI 10.1287/mnsc.1060.0554
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   Usman M., 2014, PROMISE '14: Proceedings of the 10th International Conference on Predictive Models in Software Engineering, page, P82
   van der Veen E, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P357, DOI 10.1109/MSR.2015.40
   Vandehei B, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3433928
   Walenstein A, 2002, THESIS CITESEER
   Wassermann G, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1276933.1276935
   Weiss C, 2007, P 4 INT WORKSH MIN S, P1, DOI [10.1109/MSR.2007.13, DOI 10.1109/MSR.2007.13]
   Whigham PA, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2738037
   Wilks D. S, 2011, International Geophysics Series, V100, DOI DOI 10.1002/MET.16
   Yatish S, 2019, PROC INT CONF SOFTW, P654, DOI 10.1109/ICSE.2019.00075
   Yilmaz Murat, 2015, ACM SIGSOFT Software Engineering Notes, V40, DOI 10.1145/2693208.2693239
   Zhao GL, 2019, EMPIR SOFTW ENG, V24, P2140, DOI 10.1007/s10664-019-09696-8
NR 64
TC 0
Z9 0
U1 4
U2 7
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2023
VL 28
IS 3
AR 69
DI 10.1007/s10664-023-10295-x
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA E5OI3
UT WOS:000976029300001
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Parry, O
   Kapfhammer, GM
   Hilton, M
   McMinn, P
AF Parry, Owain
   Kapfhammer, Gregory M.
   Hilton, Michael
   McMinn, Phil
TI Empirically evaluating flaky test detection techniques combining test
   case rerunning and machine learning models
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software testing; Flaky tests; Machine learning
AB A flaky test is a test case whose outcome changes without modification to the code of the test case or the program under test. These tests disrupt continuous integration, cause a loss of developer productivity, and limit the efficiency of testing. Many flaky test detection techniques are rerunning-based, meaning they require repeated test case executions at a considerable time cost, or are machine learning-based, and thus they are fast but offer only an approximate solution with variable detection performance. These two extremes leave developers with a stark choice. This paper introduces CANNIER, an approach for reducing the time cost of rerunning-based detection techniques by combining them with machine learning models. The empirical evaluation involving 89,668 test cases from 30 Python projects demonstrates that CANNIER can reduce the time cost of existing rerunning-based techniques by an order of magnitude while maintaining a detection performance that is significantly better than machine learning models alone. Furthermore, the comprehensive study extends existing work on machine learning-based detection and reveals a number of additional findings, including (1) the performance of machine learning models for detecting polluter test cases; (2) using the mean values of dynamic test case features from repeated measurements can slightly improve the detection performance of machine learning models; and (3) correlations between various test case features and the probability of the test case being flaky.
C1 [Parry, Owain; McMinn, Phil] Univ Sheffield, Sheffield, England.
   [Kapfhammer, Gregory M.] Allegheny Coll, Meadville, PA USA.
   [Hilton, Michael] Carnegie Mellon Univ, Pittsburgh, PA USA.
C3 University of Sheffield; Allegheny College; Carnegie Mellon University
RP Parry, O (corresponding author), Univ Sheffield, Sheffield, England.
EM oparry1@sheffield.ac.uk; gkapfham@allegheny.edu; mhilton@cmu.edu;
   p.mcminn@sheffield.ac.uk
RI Parry, Owain/KFQ-0650-2024; Parry, Owain/AEK-3393-2022
OI Parry, Owain/0000-0002-0917-1274
FU Engineering and Physical Sciences Research Council (EPSRC)
   [EP/R513313/1]
FX The research leading to these results received funding from the
   Engineering and Physical Sciences Research Council (EPSRC) (Award
   Number: EP/R513313/1).
CR airflow/test, 2022, AIRFL TEST LOC CLIEN
   Al-Qutaish R, 2010, HALSTEAD METRICS ANA, P145
   Alshammari A, 2021, PROC INT CONF SOFTW, P1572, DOI 10.1109/ICSE43902.2021.00140
   [Anonymous], 2022, PYTH 3 10 4 DOC
   [Anonymous], 2022, RAD 4 1 0 DOC
   [Anonymous], 2014, P 2014 INT S SOFTW T
   [Anonymous], 2022, SHAP LAT DOC
   [Anonymous], 2022, Docker Documentation
   [Anonymous], 2022, IO STAT FIELDS
   Bell J, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P433, DOI 10.1145/3180155.3180164
   Bell J, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P770, DOI 10.1145/2786805.2786823
   Biagiola M, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P154, DOI 10.1145/3338906.3338948
   Breiman L, 2001, MACH LEARN, V45, P5, DOI 10.1023/A:1010933404324
   Camara Bruno, 2021, SAST'21: Brazilian Symposium on Systematic and Automated Software Testing, P46, DOI 10.1145/3482909.3482916
   Candido J, 2017, IEEE INT CONF AUTOM, P838, DOI 10.1109/ASE.2017.8115695
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chicco D, 2020, BMC GENOMICS, V21, DOI 10.1186/s12864-019-6413-7
   Coverage.py, 2022, COV 6 4 1 DOC
   Dillon E., 2021, Be careful when interpreting predictive models in search of causal insights-SHAP latest documentation
   Durieux T, 2020, IEEE WORK CONF MIN S, P254, DOI 10.1145/3379597.3387460
   Eck M, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P830, DOI 10.1145/3338906.3338945
   Gambi A, 2018, IEEE INT CONF SOFTW, P1, DOI 10.1109/ICST.2018.00011
   Garousi V, 2018, J SYST SOFTWARE, V138, P52, DOI 10.1016/j.jss.2017.12.013
   Geurts P, 2006, MACH LEARN, V63, P3, DOI 10.1007/s10994-006-6226-1
   GILL GK, 1991, IEEE T SOFTWARE ENG, V17, P1284, DOI 10.1109/32.106988
   github, 2022, AP AIRFL C743B95
   github, 2022, OP SOURC PROJ CRIT S
   github, 2022, PYT CANNIER
   github, 2022, CANNIER FRAM
   github, 2022, CANNIER EXP
   Glossary, 2022, PYTH 3 10 4 DOC
   Gruber M, 2021, IEEE INT CONF SOFTW, P148, DOI 10.1109/ICST49551.2021.00026
   Haben G, 2021, IEEE WORK CONF MIN S, P219, DOI 10.1109/MSR52588.2021.00034
   Harman M, 2018, IEEE INT WORK C SO, P1, DOI 10.1109/SCAM.2018.00009
   Hilton M, 2018, IEEE INT CONF AUTOM, P53, DOI 10.1145/3238147.3238183
   ipython/test, 2022, IP AS HELP 95D2B79
   Kapfhammer GM, 2020, P IEEE ACM 42 INT C, P11, DOI DOI 10.1145/3387940.3392177
   KELLER JM, 1985, IEEE T SYST MAN CYB, V15, P580, DOI 10.1109/TSMC.1985.6313426
   Lam W, 2020, PROC INT CONF SOFTW, P1471, DOI 10.1145/3377811.3381749
   Lam W, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P101, DOI 10.1145/3293882.3330570
   Lam W, 2019, IEEE INT CONF SOFTW, P312, DOI 10.1109/ICST.2019.00038
   Lam Wing, 2020, ISSTA, P298, DOI 10.1145/3395363.3397364
   Lundberg SM, 2020, NAT MACH INTELL, V2, P56, DOI 10.1038/s42256-019-0138-9
   Luo QZ, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P643, DOI 10.1145/2635868.2635920
   Machalica M, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P91, DOI 10.1109/ICSE-SEIP.2019.00018
   Memon A, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P233, DOI 10.1109/ICSE-SEIP.2017.16
   New EC2 M5zn instances, 2022, FAST INT XEON SCAL C
   Camara BHP, 2021, INT C PROGRAM COMPRE, P444, DOI 10.1109/ICPC52881.2021.00052
   Parry O, 2022, P INT C SOFTW ENG SO
   Parry O, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3476105
   Parry O, 2022, IEEE INT CONF SOFTW, P93, DOI 10.1109/ICST53961.2022.00021
   Peitek N, 2021, PROC INT CONF SOFTW, P524, DOI 10.1109/ICSE43902.2021.00056
   Pinto Gustavo, 2020, MSR '20: Proceedings of the 17th International Conference on Mining Software Repositories, P492, DOI 10.1145/3379597.3387482
   Pontillo V, 2022, STATIC TEST FLAKINES
   Pontillo V, 2021, MALTESQUE '21: PROCEEDINGS OF THE 5TH INTERNATIONAL WORKSHOP ON MACHINE LEARNING TECHNIQUES FOR SOFTWARE QUALITY EVOLUTION, P19, DOI 10.1145/3472674.3473981
   Psutil documentation, 2022, PSUT 5 7 3 DOC
   pypi, 2022, PYTH PACK IND
   Pytest, 2022, HELPS YOU WRIT BETT
   Romano A, 2021, PROC INT CONF SOFTW, P1585, DOI 10.1109/ICSE43902.2021.00141
   SAFAVIAN SR, 1991, IEEE T SYST MAN CYB, V21, P660, DOI 10.1109/21.97458
   Scikit-Learn, 2022, Machine Learning in Python
   Shi A, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P112, DOI 10.1145/3293882.3330568
   Shi A, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P545, DOI 10.1145/3338906.3338925
   Shi A, 2016, IEEE INT CONF SOFTW, P80, DOI 10.1109/ICST.2016.40
   Shi T, 2006, J COMPUT GRAPH STAT, V15, P118, DOI 10.1198/106186006X94072
   Terragni V, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2020), P69, DOI 10.1145/3377816.3381742
   TOMEK I, 1976, IEEE T SYST MAN CYB, V6, P769, DOI 10.1109/tsmc.1976.4309452
   Unittest, 2022, UN TEST FRAM PYTH 3
   Verdecchia R, 2021, IEEE ACCESS, V9, P76119, DOI 10.1109/ACCESS.2021.3082424
   Vysali S, 2020, T SOFTWARE ENG
   Wei A, 2022, P INT C TOOLS ALG CO
   Welker K. D, 2001, CROSSTALK, V14, P18
   Yao LY, 2021, ACM T KNOWL DISCOV D, V15, DOI 10.1145/3444944
   Zavala VM, 2012, AUTOMATICA, V48, P2627, DOI 10.1016/j.automatica.2012.06.066
   Zeller A, 2002, IEEE T SOFTWARE ENG, V28, P183, DOI 10.1109/32.988498
   Zhang PL, 2021, PROC INT CONF SOFTW, P50, DOI 10.1109/ICSE43902.2021.00018
NR 76
TC 2
Z9 2
U1 0
U2 7
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAY
PY 2023
VL 28
IS 3
AR 72
DI 10.1007/s10664-023-10307-w
PG 52
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA E8VI5
UT WOS:000978250200001
OA Green Accepted, hybrid
DA 2024-07-18
ER

PT J
AU Lin, JHI
   Zhang, HX
   Adams, B
   Hassan, AE
AF Lin, Jiahuei
   Zhang, Haoxiang
   Adams, Bram
   Hassan, Ahmed E.
TI Vulnerability management in Linux distributions An empirical study on
   Debian and Fedora
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Open-source software ecosystems; Vulnerability management; Developer
   coordination; Linux distributions
AB Vulnerabilities in software systems not only lead to loss of revenue, but also to loss of reputation and trust. To avoid this, software providers strive to remedy vulnerabilities rapidly for their customers. However, in open-source development, the providers do not always control the distribution of their software themselves, but instead typically rely on Linux distributions to integrate and distribute upstream projects to millions of end users, which increases the difficulty of vulnerability management. In addition, an upstream project is usually packaged into several Linux distributions so that a vulnerability can propagate across multiple distributions via the upstream project. In this work, we empirically investigate a large number of vulnerabilities registered with the Common Vulnerabilities and Exposures (CVE) program in two popular Linux distributions, i.e., Debian (21,752 CVE-IDs) and Fedora (17,434 CVE-IDs), to study the practices of vulnerability management in such ecosystems. We investigate the lifecycle of fixing vulnerabilities, analyze how fast it takes for a vulnerability to go through each phase of its lifecycle, characterize the commonly occurring vulnerabilities that affect both distributions, and identify the practices that developers use to fix vulnerabilities. Our results suggest that the vulnerability testing period (i.e., the period from when the vulnerability fix is committed for testing to when the vulnerability fix is released) accounts for the largest number of days (median of 15 days) in Fedora. 74% (i.e., 16,070) and 92% (i.e., 16,070) of the vulnerabilities in Debian and Fedora, respectively, occur in both Linux distributions, which we refer to as common security vulnerabilities (CSVs). This result is impacted by the package selection and customization of the distributions. Finally, on a representative sample of 345 fixed CSVs, we find that upstream projects were responsible for fixing 303 (85%) and 267 (76%) out of the 345 CSVs in Debian and Fedora, respectively, with distribution maintainers integrating those fixes. Our work aims to gain a deeper understanding of the current practices in the vulnerability management of Linux distributions, and propose suggestions to distribution maintainers for better mitigation of the risks of vulnerabilities.
C1 [Lin, Jiahuei; Zhang, Haoxiang] Queens Univ Kingston, Software Anal & Intelligence Lab SAIL, Kingston, ON, Canada.
   [Adams, Bram] Queens Univ Kingston, Lab Maintenance Construct & Intelligence Software, Kingston, ON, Canada.
   [Hassan, Ahmed E.] Queens Univ Kingston, Software Anal & Intelligence Lab SAIL, Kingston, ON, Canada.
C3 Queens University - Canada; Queens University - Canada; Queens
   University - Canada
RP Zhang, HX (corresponding author), Queens Univ Kingston, Software Anal & Intelligence Lab SAIL, Kingston, ON, Canada.
EM haoxiang.zhang@acm.org; bram.adams@queensu.ca; ahmed@cs.queensu.ca
CR Harer JA, 2018, Arxiv, DOI [arXiv:1803.04497, 10.48550/arXiv.1803.04497]
   Adams B, 2016, EMPIR SOFTW ENG, V21, P960, DOI 10.1007/s10664-015-9371-y
   Al Sabbagh B, 2015, IEEE SECUR PRIV, V13, P30, DOI 10.1109/MSP.2015.72
   Algarni A., 2014, International Journal of Computer, Information Science and Engineering, P71
   Alhazmi OH, 2008, IEEE T RELIAB, V57, P14, DOI 10.1109/TR.2008.916872
   Anderson R., 2002, Security in open versus closed systemsthe dance of boltzmann, coase and moore
   Duc AN, 2011, IFIP ADV INF COMM TE, V365, P1
   [Anonymous], FED PACK IT NOT FOUN
   [Anonymous], DEB VULN DISCL POL
   [Anonymous], SEC DEB MAN COMPR ON
   [Anonymous], FED SEC BAS ONL
   [Anonymous], FED REL LIF CYCL ONL
   [Anonymous], FEDORA PACKAGE SOURC
   [Anonymous], DEB SEC FAQ
   [Anonymous], REAS US DEB ONL
   [Anonymous], FED SEC BUGS ONL
   [Anonymous], National Vulnerability Database.
   [Anonymous], OP SYST DISTR SEC CO
   [Anonymous], DEB PACK
   [Anonymous], 2011, Proceedings of the 19th ACM SIGSOFT symposium and the 13th European conference on Foundations of software engineering (FSE'11), DOI [10.1145/2025113.2025121, DOI 10.1145/2025113.2025121]
   [Anonymous], HIDD COSTS EMB ONL
   [Anonymous], FED UPD POL ONL
   [Anonymous], LTS DEV
   [Anonymous], DEB LONG TERM SUPP
   [Anonymous], DEB REL
   [Anonymous], DEB CONT INT
   [Anonymous], GITH SEC WORLDS SOFT
   [Anonymous], GUID PRACT MULT VULN
   Bilge L., 2012, CCS 12, P833, DOI [10.1145/2382196.2382284, DOI 10.1145/2382196.2382284]
   Christey S., 2013, BlackHat
   CVE, About us
   da Costa DA, 2014, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSME.2014.50
   Debian security team, US
   Ellison R., 2010, Evaluating and mitigating software supply chain security risks
   Foundjem A, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09929-1
   Frei S., 2008, 0-day patch-exposing vendors(in) security performance
   Frei Stefan, 2006, P 2006 SIGCOMM WORKS, P131, DOI 10.1145/1162666.1162671
   Fruhwirth Christian, 2009, 2009 3rd International Symposium on Empirical Software Engineering and Measurement (ESEM), P535, DOI 10.1109/ESEM.2009.5314230
   Huang Z, 2016, P IEEE S SECUR PRIV, P618, DOI 10.1109/SP.2016.43
   Jiang YJ, 2013, IEEE WORK CONF MIN S, P101, DOI 10.1109/MSR.2013.6624016
   Joh HyunChul, 2011, Proceedings of the 2011 International Conference on Security & Management (SAM 2011), P10
   Kakimoto T., 2006, Proceedings of the International Workshop on Supporting Knowledge Collaboration in Software Development KCSD06, P35
   Klinke A, 2002, RISK ANAL, V22, P1071, DOI 10.1111/1539-6924.00274
   Kula RG, 2018, EMPIR SOFTW ENG, V23, P384, DOI 10.1007/s10664-017-9521-5
   Li F, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2201, DOI 10.1145/3133956.3134072
   Ma WWY, 2017, PROC INT CONF SOFTW, P381, DOI 10.1109/ICSE.2017.42
   Nappa A, 2015, P IEEE S SECUR PRIV, P692, DOI 10.1109/SP.2015.48
   Ohm Marc, 2020, Detection of Intrusions and Malware, and Vulnerability Assessment. 17th International Conference, DIMVA 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12223), P23, DOI 10.1007/978-3-030-52683-2_2
   Oment A, 2006, USENIX Association Proceedings of the 15th USENIX Security Symposium, P93
   Ramsauer Ralf, 2020, CCSW'20: Proceedings of the 2020 SIGSAC Conference on Cloud Computing Security Workshop, P147, DOI 10.1145/3411495.3421360
   Raymond Eric, 1999, KNOWLEDGE TECHNOLOGY, V12, P23, DOI DOI 10.1007/S12130-999-1026-0
   Ristov S., 2013, CLOUD COMPUTING, P101
   Russell RL, 2018, 2018 17TH IEEE INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA), P757, DOI 10.1109/ICMLA.2018.00120
   Schryen G, 2009, IMF 2009: 5TH INTERNATIONAL CONFERENCE ON IT SECURITY INCIDENT MANAGEMENT AND IT FORENSIC, P153, DOI 10.1109/IMF.2009.15
   Shahzad M, 2012, PROC INT CONF SOFTW, P771, DOI 10.1109/ICSE.2012.6227141
   Telang R., 2005, IMPACT SOFTWARE VULN
   US national institute of standards and technology, CVSS INF
   Wang S, 2019, Arxiv, DOI arXiv:1907.12141
   Wang XD, 2019, I C DEPEND SYS NETWO, P485, DOI 10.1109/DSN.2019.00056
   Yilek S, 2009, IMC'09: PROCEEDINGS OF THE 2009 ACM SIGCOMM INTERNET MEASUREMENT CONFERENCE, P15
   Zaman S., 2011, Proceedings of the 8th working conference on mining software repositories, P93, DOI [10.1145/1985441.1985457, DOI 10.1145/1985441.1985457]
   Zhang H., IEEE Transactions on Software Engineering, P2021
NR 62
TC 1
Z9 1
U1 1
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2023
VL 28
IS 2
AR 47
DI 10.1007/s10664-022-10267-7
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 9Q2CK
UT WOS:000944778300001
DA 2024-07-18
ER

PT J
AU Kamienski, A
   Hindle, A
   Bezemer, CP
AF Kamienski, Arthur
   Hindle, Abram
   Bezemer, Cor-Paul
TI Analyzing Techniques for Duplicate Question Detection on Q&A Websites
   for Game Developers
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Q&A communities; Game development
ID COMMUNITIES; KNOWLEDGE; BEHAVIOR; EXPERTS
AB Game development is currently the largest industry in the entertainment segment and has a high demand for skilled game developers that can produce high-quality games. To satiate this demand, game developers need resources that can provide them with the knowledge they need to learn and improve their skills. Question and Answer (Q&A) websites are one of such resources that provide a valuable source of knowledge about game development practices. However, the presence of duplicate questions on Q&A websites hinders their ability to effectively provide information for their users. While several researchers created and analyzed techniques for duplicate question detection on websites such as Stack Overflow, so far no studies have explored how well those techniques work on Q&A websites for game development. With that in mind, in this paper we analyze how we can use pre-trained and unsupervised techniques to detect duplicate questions on Q&A websites focused on game development using data extracted from the Game Development Stack Exchange and Stack Overflow. We also explore how we can leverage a small set of labelled data to improve the performance of those techniques. The pre-trained technique based on MPNet achieved the highest results in identifying duplicate questions about game development, and we could achieve a better performance when combining multiple unsupervised techniques into a single supervised model. Furthermore, the supervised models could identify duplicate questions on websites different from those they were trained on with little to no decrease in performance. Our results lay the groundwork for building better duplicate question detection systems in Q&A websites for game developers and ultimately providing game developers with a more effective Q&A community.
C1 [Kamienski, Arthur; Hindle, Abram; Bezemer, Cor-Paul] Univ Alberta, Edmonton, AB, Canada.
C3 University of Alberta
RP Kamienski, A (corresponding author), Univ Alberta, Edmonton, AB, Canada.
EM kamiensk@ualberta.ca; hindle1@ualberta.ca; bezemer@ualberta.ca
OI Bezemer, Cor-Paul/0000-0002-0474-5718
CR Abric Durham, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P230, DOI 10.1109/MSR.2019.00046
   Ahasanuzzaman M, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P402, DOI 10.1145/2901739.2901770
   Ahmad A, 2018, DATA TECHNOL APPL, V52, P190, DOI 10.1108/DTA-07-2017-0054
   Barua A, 2014, EMPIR SOFTW ENG, V19, P619, DOI 10.1007/s10664-012-9231-y
   Bazelli B, 2013, PROC IEEE INT CONF S, P460, DOI 10.1109/ICSM.2013.72
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Chen LT, 2019, DECIS SUPPORT SYST, V118, P21, DOI 10.1016/j.dss.2018.12.008
   Chowdhury A, 2002, ACM T INFORM SYST, V20, P171, DOI 10.1145/506309.506311
   Dalip DH, 2013, SIGIR'13: THE PROCEEDINGS OF THE 36TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH & DEVELOPMENT IN INFORMATION RETRIEVAL, P543
   Deng SL, 2019, INFORM PROCESS MANAG, V56, DOI 10.1016/j.ipm.2019.102082
   Devlin J, 2019, Arxiv, DOI arXiv:1810.04805
   Ellmann, 2019, INFORM SPEKTRUM, V42, P266
   Fang CC, 2019, COMPUT HUM BEHAV, V92, P87, DOI 10.1016/j.chb.2018.10.036
   Fu HY, 2019, INFORM PROCESS MANAG, V56, P14, DOI 10.1016/j.ipm.2018.08.007
   Guan T, 2018, COMPUT HUM BEHAV, V81, P137, DOI 10.1016/j.chb.2017.12.023
   Hindle A, 2019, EMPIR SOFTW ENG, V24, P902, DOI 10.1007/s10664-018-9643-4
   Hindle A, 2016, EMPIR SOFTW ENG, V21, P368, DOI 10.1007/s10664-015-9387-3
   Homma Y., 2016, P INT C NEUR INF PRO
   Hong ZY, 2020, J MED INTERNET RES, V22, DOI 10.2196/13071
   Hoogeveen Doris, 2018, 12 INT AAAI C WEB SO
   Imtiaz Z, 2020, IEEE ACCESS, V8, P21932, DOI 10.1109/ACCESS.2020.2969041
   Jaccard P., 1912, New Phytologist, V11, P37, DOI [10.1111/j.1469-8137.1912.tb05611.x, DOI 10.1111/J.1469-8137.1912.TB05611.X]
   Jin JH, 2015, INFORM MANAGE-AMSTER, V52, P840, DOI 10.1016/j.im.2015.07.005
   Kamath A, 2019, 57TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2019), P5545
   Kamienski A, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-10014-4
   Li Z, 2017, P 9 ASIA PACIFIC S I
   Li Zhixing, 2020, IEEE Transactions on Software Engineering
   Liang D, 2019, PROCEEDINGS OF THE 42ND INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL (SIGIR '19), P95, DOI 10.1145/3331184.3331228
   Lopresti D. P., 1999, Proceedings of the Fifth International Conference on Document Analysis and Recognition. ICDAR '99 (Cat. No.PR00318), P297, DOI 10.1109/ICDAR.1999.791783
   Mikolov T., 2013, ADV NEURAL INFORM PR, V26, P3111, DOI DOI 10.5555/2999792.2999959
   Mikolov T, 2013, Arxiv, DOI [arXiv:1301.3781, 10.48550/arXiv.1301.3781]
   Mizobuchi Y, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P563, DOI 10.1109/SANER.2017.7884678
   Nasehi SM, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P25, DOI 10.1109/ICSM.2012.6405249
   Niwattanakul Suphakit, 2013, IMECS 2013 Proceedings of International Multiconference of Engineers and Computer Scientists, P380
   Omondiagbe OP, 2019, P EVALUATION ASSESSM, P101
   Overflow S, 2021, About Stack Overflow
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Poerner N, 2019, 2019 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING AND THE 9TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING (EMNLP-IJCNLP 2019), P1630
   PORTER MF, 1980, PROGRAM-AUTOM LIBR, V14, P130, DOI 10.1108/eb046814
   Prabowo D.A., 2019, 2019 5 INT C SCI TEC, P1
   Procaci TB, 2017, IEEE INT CONF ADV LE, P291, DOI 10.1109/ICALT.2017.56
   Procaci TB, 2016, IEEE INT CONF ADV LE, P407, DOI 10.1109/ICALT.2016.68
   Le Q, 2014, PR MACH LEARN RES, V32, P1188
   Rahman MM, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P426, DOI 10.1109/MSR.2015.55
   Rakha MS, 2018, IEEE T SOFTWARE ENG, V44, P1245, DOI 10.1109/TSE.2017.2755005
   Rakha MS, 2018, EMPIR SOFTW ENG, V23, P2597, DOI 10.1007/s10664-017-9590-5
   Ramos J, 2003, P 1 INSTRUCTIONAL C, V242, P29
   Rehurek R, 2021, Gensim: topic modelling for humans
   Reimers N, 2019, Arxiv, DOI [arXiv:1908.10084, 10.48550/arXiv.1908.10084]
   Richardson Leonard, 2020, Beautiful Soup
   Rochette A, 2019, Arxiv, DOI arXiv:1911.02645
   Ruckl‚ A, 2020, Arxiv, DOI arXiv:1911.05594
   Runeson P, 2007, PROC INT CONF SOFTW, P499
   Saedi C, 2017, 2017 IEEE 18TH INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION (IEEE IRI 2017), P544, DOI 10.1109/IRI.2017.39
   Saedi Chakaveh, 2017, P 6 JOINT C LEXICAL, P262
   Santos T, 2020, ICWSM, V14, P969
   Shah DJ, 2018, Adversarial domain adaptation for duplicate question detection
   Shen XX, 2020, IEEE ACCESS, V8, P62238, DOI 10.1109/ACCESS.2020.2984342
   Silva RFG, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P572, DOI 10.1109/SANER.2018.8330262
   Song KT, 2020, Arxiv, DOI arXiv:2004.09297
   Sun Chengnian, 2010, P 32 ACMIEEE INT C S, V1, P45, DOI [DOI 10.1145/1806799, 10.1145/1806799.1806811]
   Sun C, 2011, INT J CHEM ENG, V2011, DOI 10.1155/2011/545234
   Tabassum J., 2020, P 58 ANN M ASS COMPU
   Viggiato M, 2021, IEEE Trans Games
   Virtanen P, 2020, NAT METHODS, V17, P261, DOI 10.1038/s41592-019-0686-2
   Wang LT, 2020, IEEE ACCESS, V8, P25964, DOI 10.1109/ACCESS.2020.2968391
   Wang LT, 2019, ASIA PAC SOFWR ENG, P506, DOI 10.1109/APSEC48747.2019.00074
   Wang Q., 2019, P 11 AS PAC S INT, P1
   Wang Y, 2020, J COMPUT SOCIAL SCI, P1
   Witkowski W., 2020, Videogames are a bigger industry than movies and North American sports combined, thanks to the pandemic
   Wolf T, 2020, PROCEEDINGS OF THE 2020 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING: SYSTEM DEMONSTRATIONS, P38
   Wu YH, 2019, EMPIR SOFTW ENG, V24, P637, DOI 10.1007/s10664-018-9634-5
   Xu B, 2021, IEEE Trans Softw Eng
   Xu ZJ, 2020, IEEE ACCESS, V8, P56029, DOI 10.1109/ACCESS.2020.2982268
   Yang XL, 2016, J COMPUT SCI TECH-CH, V31, P910, DOI 10.1007/s11390-016-1672-0
   Ying AnnieT. T., 2015, The 12th Working Conference on Mining Software Repositories
   Zhang WE, 2018, ACM/SIGIR PROCEEDINGS 2018, P1153, DOI 10.1145/3209978.3210110
   Zhang WE, 2017, PROCEEDINGS OF THE 26TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'17), P1221, DOI 10.1145/3038912.3052701
   Zhang WE, 2018, ACM T INTERNET TECHN, V18, DOI 10.1145/3169795
   Zhang WE, 2017, LECT NOTES ARTIF INT, V10604, P623, DOI 10.1007/978-3-319-69179-4_44
   Zhang X, 2017, MANAGE DECIS, V55, P1536, DOI 10.1108/MD-10-2016-0739
   Zhang Y, 2019, J Assoc Inf Syst, V20, P3
   Zhang Y, 2015, J COMPUT SCI TECH-CH, V30, P981, DOI 10.1007/s11390-015-1576-4
   Zhou QF, 2021, INFORM SCIENCES, V543, P259, DOI 10.1016/j.ins.2020.07.048
NR 84
TC 2
Z9 2
U1 0
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN
PY 2023
VL 28
IS 1
AR 17
DI 10.1007/s10664-022-10256-w
PG 41
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA Q9YK0
UT WOS:001060997100001
DA 2024-07-18
ER

PT J
AU Dominic, J
   Tubre, B
   Kunkel, D
   Rodeghero, P
AF Dominic, James
   Tubre, Brock
   Kunkel, Deborah
   Rodeghero, Paige
TI The human experience of comprehending source code in virtual reality
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Code comprehension; Human experience; Virtual reality
ID FALSE DISCOVERY RATE; SOFTWARE; COORDINATION; ENVIRONMENT; TECHNOLOGY;
   SIMULATION; SYSTEM; IMPACT; LOAD
AB Virtual reality (VR) is an emerging technology used in various domains such as medicine, psychotherapy, architecture, and gaming. Recently, software engineering researchers have started to explore virtual reality as a tool for programmers. However, few studies examine source code comprehension in VR. This paper explores the human experience of comprehending source code in VR and compares it to source code comprehension in a desktop environment. We conducted a study with 26 graduate student programmers. We measured actual productivity, perceived productivity and used the NASA Task Load Index (TLX) survey to measure various factors such as mental demand, physical demand, temporal demand, performance, effort, and frustration. We found that the programmers experienced more physical demand, effort, and overall task load when reading and comprehending code in VR. However, we did not observe any statistically significant differences in the programmers' measured productivity or perceived productivity between VR and desktop comprehension.
C1 [Dominic, James] Clemson Univ, Sch Comp, Clemson, SC 29631 USA.
   [Tubre, Brock] Clemson Univ, Clemson, SC USA.
   [Kunkel, Deborah] Clemson Univ, Sch Math & Stat Sci, Clemson, SC USA.
   [Rodeghero, Paige] Clemson Univ, Sch Comp, Human Factors Software Engn Res Team, Clemson, SC USA.
C3 Clemson University; Clemson University; Clemson University; Clemson
   University
RP Dominic, J (corresponding author), Clemson Univ, Sch Comp, Clemson, SC 29631 USA.
EM domini4@clemson.edu; btubre@clemson.edu; dekunke@clemson.edu;
   prodegh@clemson.edu
RI Kunkel, Deborah/KIL-6391-2024
OI Kunkel, Deborah/0000-0002-0607-0742; Dominic, James/0000-0002-4805-6762
CR Abbes M, 2011, EUR CON SFTWR MTNCE, P181, DOI 10.1109/CSMR.2011.24
   Afridi A. H., 2020, PERS UBIQUIT COMPUT, P1
   Akbulut A, 2018, COMPUT APPL ENG EDUC, V26, P918, DOI 10.1002/cae.21935
   Al-Saiyd NA, 2017, 2017 2ND INTERNATIONAL CONFERENCE ON COMPUTER AND COMMUNICATION SYSTEMS (ICCCS2017), P1, DOI 10.1109/CCOMS.2017.8075175
   Aleotti J, 2004, ROBOT AUTON SYST, V47, P153, DOI 10.1016/j.robot.2004.03.009
   Nguyen-Duc A, 2015, INFORM SOFTWARE TECH, V57, P277, DOI 10.1016/j.infsof.2014.06.002
   [Anonymous], 2022, PIMAX VISION 8K 10
   [Anonymous], 2022, FUTURE REMOTE WORK H
   [Anonymous], 2020, UPWORK STUDY FINDS 2
   [Anonymous], 2006, LEISTUNG LEISTUNGSDI
   [Anonymous], TLX NASA AM NASA TLX
   Ara R, 2008, VALUE HEALTH, V11, P1131, DOI 10.1111/j.1524-4733.2008.00352.x
   Arisholm E, 2007, IEEE T SOFTWARE ENG, V33, P65, DOI 10.1109/TSE.2007.17
   Bacher Ivan, 2017, EUROVIS SHORT PAPERS, P115
   Baheti P., 2002, Extreme Programming and Agile Methods - XP/Agile Universe 2002 Second XP Universe and First Agile Universe Conference. Proceedings (Lecture Notes in Computer Science Vol.2418), P208
   Beland LP, 2016, LABOUR ECON, V41, P61, DOI 10.1016/j.labeco.2016.04.004
   BENJAMINI Y, 1995, J R STAT SOC B, V57, P289, DOI 10.1111/j.2517-6161.1995.tb02031.x
   Bierbaum A, 2001, P IEEE VIRT REAL ANN, P89, DOI 10.1109/VR.2001.913774
   Binet A., 1904, LANNE PSYCHOLOGIQUE, V11, P623
   Blok M., 2009, P 17 WORLD C ERGONOM
   Bordegoni M, 2013, VIRTUAL PHYS PROTOTY, V8, P51, DOI 10.1080/17452759.2012.762612
   Boughzala I, 2012, J ASSOC INF SYST, V13, P714
   Bozgeyikli E, 2016, CHI PLAY 2016: PROCEEDINGS OF THE 2016 ANNUAL SYMPOSIUM ON COMPUTER-HUMAN INTERACTION IN PLAY, P205, DOI 10.1145/2967934.2968105
   Busjahn T, 2015, INT C PROGRAM COMPRE, P255, DOI 10.1109/ICPC.2015.36
   Campbell G., 2017, COGNITIVE COMPLEXITY
   Castelhano J, 2019, BRAIN IMAGING BEHAV, V13, P623, DOI 10.1007/s11682-018-9885-1
   Cecil J., 2021, 2021 IEEE INT SYSTEM, P1
   Connor MO, 2022, J DECIS SYST, V31, P207, DOI 10.1080/12460125.2020.1861772
   DeLine R, 2005, 2005 IEEE Symposium on Visual Language and Human-Centric Computing, Proceedings, P241, DOI 10.1109/VLHCC.2005.32
   Dominic J, 2020, PROC IEEE INT CONF S, P406, DOI 10.1109/ICSME46990.2020.00046
   Dominic J, 2020, INT C PROGRAM COMPRE, P391, DOI 10.1145/3387904.3389287
   Elliott A, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P547, DOI 10.1109/ICSE.2015.191
   Fittkau F, 2015, 2015 IEEE 3RD WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT), P130, DOI 10.1109/VISSOFT.2015.7332423
   Floyd B, 2017, PROC INT CONF SOFTW, P175, DOI 10.1109/ICSE.2017.24
   Freeman D, 2017, PSYCHOL MED, V47, P2393, DOI 10.1017/S003329171700040X
   Fritz T, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P402, DOI 10.1145/2568225.2568266
   Furuyama T., 1996, Achieving Quality in Software. Proceedings of the Third International Conference on Achieving Quality in Software, 1996, P14
   Good J, 2004, INT J HUM-COMPUT ST, V61, P169, DOI 10.1016/j.ijhcs.2003.12.010
   Graham K, 2018, LECT NOTES COMPUT SC, V10605, P324, DOI 10.1007/978-3-319-75826-8_26
   Grubert J, 2018, IEEE COMPUT GRAPH, V38, P125, DOI 10.1109/MCG.2018.2875609
   Guerin K., 2017, GOOGLE PATENTS US PA, V9, P643
   Gulec U, 2018, PROCEEDINGS OF THE 2018 INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESS (ICSSP 2018), P71, DOI 10.1145/3202710.3203161
   Häfner P, 2013, PROCEDIA COMPUT SCI, V25, P251, DOI 10.1016/j.procs.2013.11.031
   HART S G, 1988, P139
   Hart S. G., 2006, P HUM FACT ERG SOC A, V50, P904, DOI DOI 10.1177/154193120605000909
   Hayes Aleshia, 2019, Foundations and Trends in Smart Learning. Proceedings of 2019 International Conference on Smart Learning Environments. Lecture Notes in Educational Technology (LNET), P93, DOI 10.1007/978-981-13-6908-7_13
   Hayes B, 2018, INT CON ELECTR POWER
   Herz M, 2020, AUGMENTED REALITY VI, P113
   HODGES LF, 1995, COMPUTER, V28, P27, DOI 10.1109/2.391038
   Hoffmann M., 2016, Engineering Education, V4, P235
   Hoppe AH, 2018, COMM COM INF SC, V851, P258, DOI 10.1007/978-3-319-92279-9_35
   Hossain E, 2009, COMM COM INF SC, V42, P81
   HTC Vive Tracker, HTC VIVE TRACKER VIV
   Jeon C, 2015, TECHNOL CULT, V56, P28, DOI 10.1353/tech.2015.0017
   Johansson M, 2014, FUSION: DATA INTEGRATION AT ITS BEST, VOL 2, P261
   Johnson PM, 2003, PROC INT CONF SOFTW, P641, DOI 10.1109/ICSE.2003.1201249
   Keating GD, 2008, LANG TEACH RES, V12, P365, DOI 10.1177/1362168808089922
   Kennedy RS, 1993, The international journal of aviation psychology, V3, P203, DOI [DOI 10.1207/S15327108IJAP0303, 10.1207/s15327108ijap0303_3]
   Khomokhoana Pakiso J, 2019, ANN C SO AFR COMP LE, P17
   KIGER DM, 1989, PERCEPT MOTOR SKILL, V69, P531, DOI 10.2466/pms.1989.69.2.531
   Kircher M., 2001, XP 2001, P66
   Kreutzberg A, 2015, ECAADE 2015: REAL TIME - EXTENDING THE REACH OF COMPUTATION, VOL 1, P117
   Kuo W., 1998, Reliability, Yield, and Stress Burn-in
   LaToza Thomas D., 2007, P ESECFSE 2007 DUBR, P361, DOI [DOI 10.1145/1287624.1287675, 10.1145/1287624.1287675]
   Laver KE, 2017, COCHRANE DB SYST REV, DOI 10.1002/14651858.CD008349.pub4
   leetcode, WORLDS LEADING ONLIN
   Lohse KR, 2014, PLOS ONE, V9, DOI 10.1371/journal.pone.0093318
   Ma Y.-F., 2002, ACM MULTIMEDIA, P533
   Martin-Gutierrez J, 2017, EURASIA J MATH SCI T, V13, P297, DOI 10.12973/eurasia.2017.00630a
   Marutani T, 2016, STUD HEALTH TECHNOL, V220, P215, DOI 10.3233/978-1-61499-625-5-215
   Matsas E, 2017, INT J INTERACT DES M, V11, P139, DOI 10.1007/s12008-015-0259-2
   Merino L, 2018, 2018 SIXTH IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT), P54, DOI 10.1109/VISSOFT.2018.00014
   Miller C, 2021, PROC INT CONF SOFTW, P624, DOI 10.1109/ICSE43902.2021.00064
   Munoz Baron M, 2019, THESIS U STUTTGART
   Mystakidis S., 2022, ENCYCLOPEDIA, V2, P486, DOI [10.3390/encyclopedia2010031, DOI 10.3390/ENCYCLOPEDIA2010031]
   Nazligul MD, 2017, COMM COM INF SC, V748, P191, DOI 10.1007/978-3-319-64218-5_15
   Oberhauser R., 2017, International Journal of Virtual Reality, V17, P79, DOI DOI 10.20870/IJVR.2017.17.2.2894
   Panas T, 2003, IEEE INFOR VIS, P314, DOI 10.1109/IV.2003.1217996
   Parsons S., 2011, European Journal of Special Needs Education, V26, P355, DOI DOI 10.1080/08856257.2011.593831
   Pearlman DM, 2010, J CONV EVENT TOUR, V11, P247, DOI 10.1080/15470148.2010.530535
   Peitek N, 2021, PROC INT CONF SOFTW, P524, DOI 10.1109/ICSE43902.2021.00056
   Peitek N, 2020, IEEE T SOFTWARE ENG, V46, P442, DOI 10.1109/TSE.2018.2863303
   Pellas N, 2020, IEEE T LEARN TECHNOL, V13, P748, DOI 10.1109/TLT.2020.3019405
   Petermann F, 2011, Z PSYCHIATR PSYCH PS, V59, P325, DOI 10.1024/1661-4747/a000088
   Pourchera G., 2018, OBESITY SURG, P531
   Racz A., 2018, 2018 INT C ADV COMPU, P11
   Ralph P, 2020, EMPIR SOFTW ENG, V25, P4927, DOI 10.1007/s10664-020-09875-y
   Rastogi A, 2017, PROCEEDINGS OF THE 10TH INNOVATIONS IN SOFTWARE ENGINEERING CONFERENCE, P107, DOI 10.1145/3021460.3021471
   Regenbrecht H, 2002, PRESENCE-TELEOP VIRT, V11, P425, DOI 10.1162/105474602760204318
   Rodeghero P, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P390, DOI 10.1145/2568225.2568247
   Romano S, 2019, MULTIMED TOOLS APPL, V78, P33113, DOI 10.1007/s11042-019-07748-1
   Romano S, 2019, INFORM SOFTWARE TECH, V114, P92, DOI 10.1016/j.infsof.2019.06.007
   Ruvimova A, 2020, PROCEEDINGS OF THE 2020 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'20), DOI 10.1145/3313831.3376724
   Said S, 2020, J MED INTERNET RES, V22, DOI 10.2196/19472
   Sampaio A.Z., 2018, STATE ART VIRTUAL RE, P59
   Sattar MU, 2020, INT J EMERG TECHNOL, V15, P160, DOI 10.3991/ijet.v15i02.11394
   Schenk J, 2018, DISSERTATION
   Sharma VS, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS (ICSE-NIER), P105, DOI 10.1145/3183399.3183414
   Siegmund J, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P140, DOI 10.1145/3106237.3106268
   Siegmund J, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P378, DOI 10.1145/2568225.2568252
   Sörqvist P, 2016, FRONT HUM NEUROSCI, V10, DOI 10.3389/fnhum.2016.00221
   Steinmacher I, 2016, PROC INT CONF SOFTW, P273, DOI 10.1145/2884781.2884806
   Takala T.M., 2014, Proceedings of the 2Nd ACM Symposium on Spatial User Interaction, P94, DOI DOI 10.1145/2659766.2659774
   Taxén G, 2002, COMPUT GRAPH-UK, V26, P593, DOI 10.1016/S0097-8493(02)00112-7
   Tvarozek Jozef, 2016, EYE MOVEMENTS PROGRA, V23, P25
   Ullrich S, 2012, IEEE T VIS COMPUT GR, V18, P617, DOI 10.1109/TVCG.2012.46
   Ultraleap, ULTRALEAP TRACKIG LE
   van Berlo ZMC, 2021, J BUS RES, V122, P458, DOI 10.1016/j.jbusres.2020.09.006
   Vincur J, 2017, VRST'17: PROCEEDINGS OF THE 23RD ACM SYMPOSIUM ON VIRTUAL REALITY SOFTWARE AND TECHNOLOGY, DOI 10.1145/3139131.3141785
   Vive, VIVE PRO2 BEST VR HE
   w3schools, W3SCHOOLS FREE ONLIN
   Wang P, 2018, INT J ENV RES PUB HE, V15, DOI 10.3390/ijerph15061204
   WASSERTHEIL S, 1970, BIOMETRICS, V26, P588, DOI 10.2307/2529115
   Wiese ES, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING EDUCATION AND TRAINING (ICSE-SEET), P84, DOI 10.1109/ICSE-SEET.2019.00017
   Williams L, 2000, IEEE SOFTWARE, V17, P19, DOI 10.1109/52.854064
   Wolfe D. A., 2013, Nonparametric Statistical Methods
   Wolfgramm C., 2016, International Journal of Listening, V30, P25
   Workrooms, WORKROOMS VR BUSINES
   Yekutieli D, 1999, J STAT PLAN INFER, V82, P171, DOI 10.1016/S0378-3758(99)00041-5
   Zirkelbach Christian, 2019, HANDS ON EXPERIENCIN
NR 120
TC 0
Z9 0
U1 1
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2022
VL 27
IS 7
AR 173
DI 10.1007/s10664-022-10196-5
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4V4SY
UT WOS:000859469500007
PM 36159895
OA Bronze, Green Published
DA 2024-07-18
ER

PT J
AU Li, ZX
   Lu, SQ
   Zhang, R
   Xue, R
   Ma, WQ
   Liang, RJ
   Zhao, ZM
   Gao, S
AF Li, Zhaoxuan
   Lu, Siqi
   Zhang, Rui
   Xue, Rui
   Ma, Wenqiu
   Liang, Rujin
   Zhao, Ziming
   Gao, Sheng
TI SmartFast: an accurate and robust formal analysis tool for Ethereum
   smart contracts
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Blockchain; Smart contracts; Solidity; Security vulnerability; Formal
   static analysis
AB Recently, although state-of-the-art (SOTA) tools were designed and developed to analyze the vulnerabilities of smart contracts on Ethereum, security incidents caused by these vulnerabilities are still widespread. This can be attributed to the fact that each tool has various standards for judging the severity of vulnerabilities. More importantly, tools fail to identify all the vulnerabilities accurately and comprehensively as the evolution of vulnerabilities. To this end, we first propose a vulnerability assessment model to unify the vulnerability measurement standards. Next, we design a static analysis tool called SmartFast, which expresses the contract source code as a novel intermediate representation named SmartIR. Using preset rules and taint tracking technology, SmartFast matches SmartIR to locate the vulnerability code. Furthermore, SmartFast can recommend the optimization of the contract code automatically. Finally, we implement a prototype of SmartFast with 25K lines of code and compare it with 7 SOTA tools on three datasets (a total of 13,687 public contracts). The results indicate that SmartFast is efficient (only took a few seconds per contract) and robust (0.4% failure rate and resistance to the general code confusion methods). Besides, compared with other tools, SmartFast can detect more kinds of vulnerabilities (119) with a higher precision rate (98.43%) and a recall rate (85.12%), which confirms the conclusion of the theoretical analysis in the paper.
C1 [Li, Zhaoxuan; Zhang, Rui; Xue, Rui; Ma, Wenqiu] Chinese Acad Sci, Inst Informat Engn, State Key Lab Informat Secur, Beijing 100093, Peoples R China.
   [Li, Zhaoxuan; Zhang, Rui; Xue, Rui; Ma, Wenqiu] Univ Chinese Acad Sci, Sch Cyber Secur, Beijing 100049, Peoples R China.
   [Lu, Siqi; Liang, Rujin] Informat Engn Univ, Zhengzhou 450001, Peoples R China.
   [Lu, Siqi; Liang, Rujin] Henan Key Lab Network Cryptog Technol, Zhengzhou 450001, Peoples R China.
   [Zhao, Ziming] Zhejiang Univ, Coll Informat Sci & Elect Engn, Hangzhou 310027, Peoples R China.
   [Gao, Sheng] Cent Univ Finance & Econ, Sch Informat, Beijing 100081, Peoples R China.
C3 Chinese Academy of Sciences; Institute of Information Engineering, CAS;
   Chinese Academy of Sciences; University of Chinese Academy of Sciences,
   CAS; PLA Information Engineering University; Zhejiang University;
   Central University of Finance & Economics
RP Lu, SQ (corresponding author), Informat Engn Univ, Zhengzhou 450001, Peoples R China.; Lu, SQ (corresponding author), Henan Key Lab Network Cryptog Technol, Zhengzhou 450001, Peoples R China.
EM lizhaoxuan@iie.ac.cn; 080lusiqi@sina.com; zhangrui@iie.ac.cn;
   xuerui@iie.ac.cn; mawenqiu@iie.ac.cn; coderlrj@163.com;
   zhaoziming@zju.edu.cn; sgao@cufe.edu.cn
RI Gao, Sheng/ISS-8753-2023
OI Gao, Sheng/0000-0001-8118-411X; Zhao, Ziming/0000-0003-1455-4330
FU National Key R&D Program of China [2021YFB2700603]; National Natural
   Science Foundation of China [62072487, 62172405]; Beijing Natural
   Science Foundation [M21036]
FX This work was supported by the National Key R&D Program of China under
   Grant No.2021YFB2700603, National Natural Science Foundation of China
   under Grant No.62072487 and No.62172405, and Beijing Natural Science
   Foundation under Grant No.M21036.
CR Beosin, 2020, BEOS BLOCKCH SEC ON
   Blockchain C, 2018, BAMBOO MORPHING SMAR
   Bocek T., 2018, Digital Marketplaces Unleashed, P169
   Chen T, 2020, 27TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2020), DOI 10.14722/ndss.2020.24449
   Choi J, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P227, DOI 10.1109/ASE51524.2021.9678888
   Corporation M, 2020, Z3 THEOR PROV
   DappHub, 2019, FORMAL VERIFICATION
   Durieux T, 2020, PROC INT CONF SOFTW, P530, DOI 10.1145/3377811.3380364
   Etherscan, 2017, CONTR VER SOURC COD
   Feist J, 2019, 2019 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON EMERGING TRENDS IN SOFTWARE ENGINEERING FOR BLOCKCHAIN (WETSEB 2019), P8, DOI 10.1109/WETSEB.2019.00008
   Foundation E, 2020, SOLIDITY CONTRACT OR
   Frank J, 2020, PROCEEDINGS OF THE 29TH USENIX SECURITY SYMPOSIUM, P2757
   Grishchenko I, 2018, LECT NOTES COMPUT SC, V10981, P51, DOI 10.1007/978-3-319-96145-3_4
   Grishchenko I, 2018, LECT NOTES COMPUT SC, V10804, P243, DOI 10.1007/978-3-319-89722-6_10
   He JX, 2019, PROCEEDINGS OF THE 2019 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'19), P531, DOI 10.1145/3319535.3363230
   Hildenbrandt E, 2018, P IEEE COMPUT SECUR, P204, DOI 10.1109/CSF.2018.00022
   Jiao J, 2020, P IEEE S SECUR PRIV, P1695, DOI 10.1109/SP40000.2020.00066
   Kalra S, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23082
   Kasampalis T, 2018, LELE INTERMEDIATE LE
   Krupp J, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P1317
   Liu C, 2018, PROC IEEE ACM INT C, P65, DOI 10.1145/3183440.3183495
   Lu N, 2021, SOFTWARE PRACT EXPER, V51, P2065, DOI 10.1002/spe.2745
   Luu L, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P254, DOI 10.1145/2976749.2978309
   Nguyen TD, 2020, PROC INT CONF SOFTW, P778, DOI 10.1145/3377811.3380334
   Nipkow T., 2002, ISABELLE HOL PROOF A, DOI DOI 10.1007/3-540-45949-9
   Permenev A, 2020, P IEEE S SECUR PRIV, P1661, DOI 10.1109/SP40000.2020.00024
   Reis J S, 2020, FMBC CAV, V84
   Rodler M, 2019, NDSS
   Schneidewind, 2018, Tech. Rep
   Schneidewind C, 2020, CCS '20: PROCEEDINGS OF THE 2020 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P621, DOI 10.1145/3372297.3417250
   Sergey I., 2017, INT C FIN CRYPT DAT, P478
   Sergey I, 2018, Arxiv, DOI arXiv:1801.00687
   Software C, 2020, SEC AN TOOL EVM BYT
   Solidity, 2020, SOL V0 5 0 BREAK CHA
   SRI Lab E Z, 2020, SEC V2 0
   Team V, 2020, VYP DOC
   Tezos, 2020, MICH LANG SMART CONT
   Tikhomirov S, 2018, 2018 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON EMERGING TRENDS IN SOFTWARE ENGINEERING FOR BLOCKCHAIN (WETSEB), P9, DOI 10.1145/3194113.3194115
   Torres CF, 2018, 34TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2018), P664, DOI 10.1145/3274694.3274737
   Tsankov P, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P67, DOI 10.1145/3243734.3243780
   Wood G., 2014, Ethereum project yellow paper, V151, P1
NR 41
TC 2
Z9 2
U1 0
U2 9
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2022
VL 27
IS 7
AR 197
DI 10.1007/s10664-022-10218-2
PG 52
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 5F2CI
UT WOS:000866127700003
DA 2024-07-18
ER

PT J
AU Han, XF
   Tahir, A
   Liang, P
   Counsell, S
   Blincoe, K
   Li, B
   Luo, YJ
AF Han, Xiaofeng
   Tahir, Amjed
   Liang, Peng
   Counsell, Steve
   Blincoe, Kelly
   Li, Bing
   Luo, Yajing
TI Code smells detection via modern code review: a study of the OpenStack
   and Qt communities
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Review
DE Modern code review; Code smell; Mining software repositories; Empirical
   study
ID IMPACT; BAD; DEBT
AB Code review plays an important role in software quality control. A typical review process involves a careful check of a piece of code in an attempt to detect and locate defects and other quality issues/violations. One type of issue that may impact the quality of software is code smells - i.e., bad coding practices that may lead to defects or maintenance issues. Yet, little is known about the extent to which code smells are identified during modern code review. To investigate the concept behind code smells identified in modern code review and what actions reviewers suggest and developers take in response to the identified smells, we conducted an empirical study of code smells in code reviews by analysing reviews from four, large open source projects from the OpenStack (Nova and Neutron) and Qt (Qt Base and Qt Creator) communities. We manually checked a total of 25,415 code review comments obtained by keywords search and random selection; this resulted in the identification of 1,539 smell-related reviews which then allowed the study of the causes of code smells, actions taken against identified smells, time taken to fix identified smells and reasons why developers ignored fixing identified smells. Our analysis found that 1) code smells were not commonly identified in code reviews, 2) smells were usually caused by violation of coding conventions, 3) reviewers usually provided constructive feedback, including fixing (refactoring) recommendations to help developers remove smells, 4) developers generally followed those recommendations and actioned the changes, 5) once identified by reviewers, it usually takes developers less than one week to fix the smells and 6) the main reason why developers chose to ignore the identified smells is that it is not worth fixing the smell. Our results suggest the following: 1) developers should closely follow coding conventions in their projects to avoid introducing code smells, 2) review-based detection of code smells is perceived to be a trustworthy approach by developers, mainly because reviews are context-sensitive (as reviewers are more aware of the context of the code given that they are part of the project's development team) and 3) program context needs to be fully considered in order to make a decision of whether to fix the identified code smell immediately.
C1 [Han, Xiaofeng; Liang, Peng; Li, Bing; Luo, Yajing] Wuhan Univ, Sch Comp Sci, Wuhan, Peoples R China.
   [Han, Xiaofeng; Liang, Peng; Li, Bing; Luo, Yajing] Hubei Luojia Lab, Wuhan, Peoples R China.
   [Tahir, Amjed] Massey Univ, Sch Math & Computat Sci, Palmerston North, New Zealand.
   [Counsell, Steve] Brunel Univ London, Dept Comp Sci, London, England.
   [Blincoe, Kelly] Univ Auckland, Dept Elect Comp & Software Engn, Auckland, New Zealand.
C3 Wuhan University; Massey University; Brunel University; University of
   Auckland
RP Liang, P (corresponding author), Wuhan Univ, Sch Comp Sci, Wuhan, Peoples R China.; Liang, P (corresponding author), Hubei Luojia Lab, Wuhan, Peoples R China.
EM hanxiaofeng@whu.edu.cn; a.tahir@massey.ac.nz; liangp@whu.edu.cn;
   steve.counsell@brunel.ac.uk; k.blincoe@auckland.ac.nz;
   bingli@whu.edu.cn; luoyajing@whu.edu.cn
RI Li, bo/IWL-9318-2023; li, bai/JNE-1502-2023; li, bing/GWQ-9617-2022;
   wang, qiang/IZW-1751-2023; Li, Ye/JBS-2949-2023; han,
   xiao/HDN-9782-2022; Li, Kun/JLL-6505-2023
OI Li, Kun/0000-0002-3638-2974; Liang, Peng/0000-0002-2056-5346
FU National Natural Science Foundation of China (NSFC) [62172311]; Special
   Fund of Hubei Luojia Laboratory
FX This work is supported by the National Natural Science Foundation of
   China (NSFC) under Grant No. 62172311 and the Special Fund of Hubei
   Luojia Laboratory.
CR Abbes M, 2011, EUR CON SFTWR MTNCE, P181, DOI 10.1109/CSMR.2011.24
   [Anonymous], 2014, P 6 INT WORKSHOP SOC
   [Anonymous], 2014, 11 WORKING C MINING, DOI [DOI 10.1145/2597073.2597076, DOI 10.1145/2597073]
   [Anonymous], 1992, Fact Sheet PEOD- 6
   Baker RA, 1997, PROC INT CONF SOFTW, P570, DOI 10.1145/253228.253461
   Bavota G, 2015, EMPIR SOFTW ENG, V20, P1052, DOI 10.1007/s10664-014-9313-0
   Bosu A, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P257, DOI 10.1145/2635868.2635880
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   Cassee N, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P423, DOI [10.1109/saner48275.2020.9054818, 10.1109/SANER48275.2020.9054818]
   Chouchen M, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P531, DOI 10.1109/SANER50967.2021.00060
   Coelho Flavia., 2021, P 15 ACMIEEE INT S E, P1
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Counsell S., 2018, P 22 INT C EVALUATIO
   Dou WS, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P848, DOI 10.1145/2568225.2568316
   El Zanaty F, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3239525
   Fontana FA, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P609, DOI 10.1109/SANER.2016.84
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Garcia J, 2009, EUR CON SFTWR MTNCE, P255, DOI 10.1109/CSMR.2009.59
   Hall T, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2629648
   Han X, 2022, Replication package for the paper: code smells detection via modern code review: a study of the OpenStack and Qt communities, DOI DOI 10.5281/ZENODO.5588454
   Han XF, 2021, INT C PROGRAM COMPRE, P323, DOI 10.1109/ICPC52881.2021.00038
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hirao T, 2020, IEEE Transactions on Software Engineering, DOI [DOI 10.1109/TSE.2020.2977907, 10.1109/TSE.2020.2977907]
   KAPLAN EL, 1958, J AM STAT ASSOC, V53, P457, DOI 10.2307/2281868
   Kemerer CF, 2009, IEEE T SOFTWARE ENG, V35, P534, DOI 10.1109/TSE.2009.27
   Khomh F, 2009, WORK CONF REVERSE EN, P75, DOI 10.1109/WCRE.2009.28
   Kononenko O, 2015, PROC IEEE INT CONF S, P111, DOI 10.1109/ICSM.2015.7332457
   KRUSKAL WH, 1952, J AM STAT ASSOC, V47, P583, DOI 10.1080/01621459.1952.10483441
   Li ZY, 2015, J SYST SOFTWARE, V101, P193, DOI 10.1016/j.jss.2014.12.027
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Martini A, 2018, LECT NOTES COMPUT SC, V11048, P320, DOI 10.1007/978-3-030-00761-4_21
   McConnell Steve., 2004, Code Complete, V2nd ed
   McIntosh S, 2016, EMPIR SOFTW ENG, V21, P2146, DOI 10.1007/s10664-015-9381-9
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Morales R, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P171, DOI 10.1109/SANER.2015.7081827
   Nanthaamornphong Aziz, 2016, P 1 INT WORKSH SOFTW, P5
   Palomba F, 2018, EMPIR SOFTW ENG, V23, P1188, DOI 10.1007/s10664-017-9535-z
   Palomba F, 2015, IEEE T SOFTWARE ENG, V41, P462, DOI 10.1109/TSE.2014.2372760
   Palomba F, 2014, PROC IEEE INT CONF S, P101, DOI 10.1109/ICSME.2014.32
   Panichella S, 2020, EMPIR SOFTW ENG, V25, P4833, DOI 10.1007/s10664-020-09870-3
   Pascarella Luca, 2020, P 27 IEEE INT C SOFT
   Pecorelli F, 2020, IEEE WORK CONF MIN S, P220, DOI 10.1145/3379597.3387457
   Porter MF, 2001, Snowball: a language for stemming algorithms
   Potdar A, 2014, PROC IEEE INT CONF S, P91, DOI 10.1109/ICSME.2014.31
   Sae-Lim N, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1886
   Sharma T, 2018, J SYST SOFTWARE, V138, P158, DOI 10.1016/j.jss.2017.12.034
   Sjoberg DIK, 2013, IEEE T SOFTWARE ENG, V39, P1144, DOI 10.1109/TSE.2012.89
   Soh Z, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P393, DOI 10.1109/SANER.2016.103
   Tahir A, 2020, INFORM SOFTWARE TECH, V125, DOI 10.1016/j.infsof.2020.106333
   Tahir A, 2016, ASIA PAC SOFWR ENG, P137, DOI [10.1109/APSEC.2016.029, 10.1109/APSEC.2016.34]
   Taibi D, 2017, INFORM SOFTWARE TECH, V92, P223, DOI 10.1016/j.infsof.2017.08.008
   Tan P. N., 2016, INTRO DATA MINING
   Tsantalis N, 2009, IEEE T SOFTWARE ENG, V35, P347, DOI 10.1109/TSE.2009.1
   Tufano M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P403, DOI 10.1109/ICSE.2015.59
   Uchôa A, 2021, IEEE WORK CONF MIN S, P471, DOI 10.1109/MSR52588.2021.00059
   Wessel M, 2020, PROC IEEE INT CONF S, P1, DOI 10.1109/ICSME46990.2020.00011
   Yamashita A, 2013, WORK CONF REVERSE EN, P242, DOI 10.1109/WCRE.2013.6671299
   Zhang M, 2011, J SOFTW MAINT EVOL-R, V23, P179, DOI 10.1002/smr.521
NR 58
TC 3
Z9 3
U1 3
U2 10
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2022
VL 27
IS 6
AR 127
DI 10.1007/s10664-022-10178-7
PG 42
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 2Q7WO
UT WOS:000820630300001
DA 2024-07-18
ER

PT J
AU Alves, LF
   Vasconcellos, FJS
   Nogueira, BM
AF Alves, Leonardo Fuchs
   Vasconcellos, Francisco J. S.
   Nogueira, Bruno Magalhaes
TI SeSG: a search string generator for Secondary Studies with hybrid search
   strategies using text mining
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Search string; Text mining; Secondary studies; Systematic literature
   review; Systematic mapping study
ID SYSTEMATIC REVIEWS
AB A Secondary Study (SS) is an important research method used in several areas. A crucial step in the Conduction phase of a SS is the search of studies. This step is time-consuming and error-prone, mainly due to the refinement of the search string. The objective of this study is to validate the effectiveness of an automatic formulation of search strings for SS. Our approach, termed Search String Generator (SeSG), takes as input a small set of studies (as a Quasi-Gold Standard) and processes them using text mining. After that, SeSG generates search strings that deliver a high F1-Score on the start set of a hybrid search strategy. To achieve this objective, we (1) generate a structured textual representation of the initial set of input studies as a bag-of-words using Term Frequency and Document Frequency; (2) perform automatic topic modeling using LDA (Latent Dirichlet Allocation) and enrichment of terms with a pre-trained dense language representation (embedding) called BERT (Bidirectional Encoder Representations from Transformers); (3) formulate and evaluate the search string using the obtained terms; and (4) use the developed search strings in a digital library. For the validation of our approach, we conduct an experiment-using some SS as objects-comparing the effectiveness of automatically formulated search strings by SeSG with manual search strings reported in these studies. SeSG generates search strings that achieve a better final F1-Score on the start set than the searches reported by these SS. Our study shows that SeSG can effectively supersede the formulation of search strings, in hybrid search strategies, since it dismisses the manual string refinements.
C1 [Alves, Leonardo Fuchs; Vasconcellos, Francisco J. S.; Nogueira, Bruno Magalhaes] Univ Fed Mato Grosso do Sul, Fac Comp, Campo Grande, MS, Brazil.
C3 Universidade Federal de Mato Grosso do Sul
RP Alves, LF (corresponding author), Univ Fed Mato Grosso do Sul, Fac Comp, Campo Grande, MS, Brazil.
EM leo.fuchs.alves@gmail.com; francisco.vasconcellos@facom.ufms.br;
   bruno@facom.ufms.br
RI Nogueira, Bruno M/A-7517-2013
OI Fuchs Alves, Leonardo/0000-0002-7767-3989
FU Coordination for the Improvement of Higher Education Personnel (CAPES)
FX The authors would like to thank the Coordination for the Improvement of
   Higher Education Personnel (CAPES) for financially assisting this study.
CR Agrawal R., 1994, PROC
   Ampatzoglou A, 2019, INFORM SOFTWARE TECH, V106, P201, DOI 10.1016/j.infsof.2018.10.006
   [Anonymous], 2000, METAANALYSIS DECISIO
   [Anonymous], 2008, PROC INT C MACHINE L
   [Anonymous], 2012, MINING TEXT DATA
   Arampatzis A., 1999, ENCYCL LIB INF SCI, V69, P201
   Azeem MI, 2019, INFORM SOFTWARE TECH, V108, P115, DOI 10.1016/j.infsof.2018.12.009
   Babar MA, 2009, INT SYMP EMP SOFTWAR, P347
   Badampudi D, 2015, P 19 INT C EVALUATIO, P110
   Bengio Y, 2001, ADV NEUR IN, V13, P932
   Bin Ali N, 2018, INFORM SOFTWARE TECH, V99, P133, DOI 10.1016/j.infsof.2018.02.002
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Booth A, 2016, SYST REV-LONDON, V5, DOI 10.1186/s13643-016-0249-x
   Bramer WM, 2017, SYST REV-LONDON, V6, DOI 10.1186/s13643-017-0644-y
   Briscoe S, 2020, RES SYNTH METHODS, V11, P169, DOI 10.1002/jrsm.1355
   Chang AA, 2006, LARYNGOSCOPE, V116, P336, DOI 10.1097/01.mlg.0000195371.72887.a2
   Collobert R, 2011, J MACH LEARN RES, V12, P2493
   Cook T., 1979, Quasi experimental design and analysis
   Cooper C, 2018, BMC MED RES METHODOL, V18, DOI 10.1186/s12874-018-0545-3
   Cooper C, 2017, SYST REV-LONDON, V6, DOI 10.1186/s13643-017-0625-1
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   DICKERSIN K, 1994, BMJ-BRIT MED J, V309, P1286, DOI 10.1136/bmj.309.6964.1286
   Dieste Oscar, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P215
   Dieste O, 2009, EMPIR SOFTW ENG, V14, P513, DOI 10.1007/s10664-008-9091-7
   Feng LY, 2017, ASIA PAC SOFWR ENG, P41, DOI 10.1109/APSEC.2017.10
   Ghafari M., 2012, International Journal of Software Engineering Applications, V3, P13, DOI DOI 10.5121/IJSEA.2012.3202
   Grames EM, 2019, METHODS ECOL EVOL, V10, P1645, DOI 10.1111/2041-210X.13268
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Haynes R Brian, 2005, BMC Med Inform Decis Mak, V5, P8, DOI 10.1186/1472-6947-5-8
   Horsley T, 2011, COCHRANE DB SYST REV, DOI 10.1002/14651858.MR000026.pub2
   Hosseini S, 2019, IEEE T SOFTWARE ENG, V45, P111, DOI 10.1109/TSE.2017.2770124
   Imtiaz Salma, 2013, P 17 INT C EV ASS SO, P177
   Gonzalez MAI, 2006, LECT NOTES ARTIF INT, V3960, P100
   Jones K.Sparck., 1997, READINGS INFORM RETR
   Juristo N., 2013, BASICS SOFTWARE ENG
   Kitchenham B., 2015, Evidence-Based Software Engineering and Systematic Reviews
   Kitchenham B., 2007, Guidelines for performing systematic literature reviews in software engineering
   Kitchenham B., 2004, PROCEDURES PERFORMIN, V33, P1
   Kitchenham B, 2011, EAST 2011: EVIDENTIAL ASSESSMENT OF SOFTWARE TECHNOLOGIES, P3
   Krovetz R., 1993, SIGIR Forum, P191
   Krüger J, 2020, EMPIR SOFTW ENG, V25, P627, DOI 10.1007/s10664-019-09763-0
   Kuhrmann M, 2017, EMPIR SOFTW ENG, V22, P2852, DOI 10.1007/s10664-016-9492-y
   Kuper Hannah, 2006, BMC Med Res Methodol, V6, P4, DOI 10.1186/1471-2288-6-4
   Laguna MdSC, 2014, THESIS U SO PAULO SO
   Lee J, 2019, ARXIV 190108746
   LUHN HP, 1958, IBM J RES DEV, V2, P159, DOI 10.1147/rd.22.0159
   Marcos-Pablos S, 2020, SOFT COMPUT, V24, P5551, DOI 10.1007/s00500-018-3568-0
   Marshall Christopher, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P296, DOI 10.1109/ESEM.2013.32
   Marshall C., 2014, P 18 INT C EV ASS SO
   McCann B, 2017, ADV NEUR IN, V30
   Mergel GD, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P1594, DOI 10.1145/2695664.2695902
   Mikolov T., 2013, ADV NEURAL INFORM PR, V26, P3111, DOI DOI 10.5555/2999792.2999959
   Mikolov T, 2018, PROCEEDINGS OF THE ELEVENTH INTERNATIONAL CONFERENCE ON LANGUAGE RESOURCES AND EVALUATION (LREC 2018), P52
   Montgomery D.C., 2014, Applied Statistics and Probability for Engineers, Vsixth
   Montgomery D. C., 2020, DESIGN ANAL EXPT
   Mourao E, 2020, INFORM SOFTWARE TECH, V123, DOI 10.1016/j.infsof.2020.106294
   Mourao E, 2017, INT SYMP EMP SOFTWAR, P193, DOI 10.1109/ESEM.2017.30
   Munch J., 2012, FRAUNHOFER IESE SERI
   Nogueira B. M., 2013, THESIS
   Nogueira BM, 2009, THESIS I CINCIAS MAT
   O'Mara-Eves A, 2015, SYST REV-LONDON, V4, DOI 10.1186/2046-4053-4-5
   Pennington J., 2014, PROC C EMPIRICAL MET
   Pravin A., 2012, NATL J SYST INF TECH, V6, P1
   Radford Alec, 2018, IMPROVING LANGUAGE U, DOI DOI 10.18653/V1/N18-1202
   Relevo R, 2012, J GEN INTERN MED, V27, pS28, DOI 10.1007/s11606-011-1873-8
   Rezende S.O., 2003, Sistemas Inteligentes: fundamentos e aplicacoes
   Rogers A, 2020, T ASSOC COMPUT LING, V8, P842, DOI 10.1162/tacl_a_00349
   Ros Rasmus, 2017, P 21 INT C EV ASS SO, P118, DOI [10.1145/3084226.3084243, DOI 10.1145/3084226.3084243]
   SALTON G, 1975, COMMUN ACM, V18, P613, DOI 10.1145/361219.361220
   Sanderson M, 2010, NAT LANG ENG, V16, P100, DOI 10.1017/S1351324909005129
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   Shearer C., 2000, J. Data Warehous, V5, P13
   Smalheiser NR, 2014, HEALTH INF SCI SYST, V2, DOI 10.1186/2047-2501-2-1
   Stansfield C, 2017, RES SYNTH METHODS, V8, P355, DOI 10.1002/jrsm.1250
   Sullivan Gail M, 2012, J Grad Med Educ, V4, P279, DOI 10.4300/JGME-D-12-00156.1
   Tomassetti Federico, 2011, 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), P31, DOI 10.1049/ic.2011.0004
   Trochim W.M. K., 1999, RES METHODS KNOWLEDG
   Tsafnat G, 2014, SYST REV-LONDON, V3, DOI 10.1186/2046-4053-3-74
   Turian J, 2010, ACL 2010: 48TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, P384
   van Rijsbergen C. J, 1979, Information Retrieval, V2nd
   Vasconcellos FJS, 2017, J SYST SOFTWARE, V123, P45, DOI 10.1016/j.jss.2016.09.030
   Vaswani Ashish, 2017, Advances in Neural Information Processing Systems (NeurIPS), V17, P6000, DOI DOI 10.48550/ARXIV.1706.03762
   Wang JJ, 2016, REQUIR ENG, V21, P161, DOI 10.1007/s00766-014-0215-x
   Weiss S. M., 2010, Text Mining: Predictive Methods for Analyzing Unstructured Information, DOI [10.1007/978-0-387-34555-0, DOI 10.1007/978-0-387-34555-0]
   WEISS S.M., 1998, PREDICTIVE DATA MINI
   White VJ, 2001, J INFORM SCI, V27, P357, DOI 10.1177/016555150102700601
   Wieringa R.J., 2014, Design Science Methodology: For Information Systems and Software Engineering, DOI DOI 10.1007/978-3-662-43839-8
   Wieringa R, 2015, SCI COMPUT PROGRAM, V101, P136, DOI 10.1016/j.scico.2014.11.013
   Wilczynski NL, 2005, BMC MED, V3, DOI 10.1186/1741-7015-3-7
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Wolf Thomas, 2020, arXiv, P38, DOI DOI 10.18653/V1/2020.EMNLP-DEMOS.6
   Yang LX, 2021, INFORM SOFTWARE TECH, V130, DOI 10.1016/j.infsof.2020.106397
   Zhang H, 2011, INT SYMP EMP SOFTWAR, P87, DOI 10.1109/ESEM.2011.17
   Zhang H, 2011, INFORM SOFTWARE TECH, V53, P625, DOI 10.1016/j.infsof.2010.12.010
   Zwakman M, 2018, BMC PALLIAT CARE, V17, DOI 10.1186/s12904-018-0335-z
NR 95
TC 0
Z9 0
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2022
VL 27
IS 5
AR 105
DI 10.1007/s10664-021-10084-4
PG 49
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 1U7GT
UT WOS:000805577100013
DA 2024-07-18
ER

PT J
AU Baltes, S
   Ralph, P
AF Baltes, Sebastian
   Ralph, Paul
TI Sampling in software engineering research: a critical review and
   guidelines
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Review
DE Sampling; Representative sampling; Random sampling; Purposive sampling;
   Probability sampling; Research methodology
ID BIAS
AB Representative sampling appears rare in empirical software engineering research. Not all studies need representative samples, but a general lack of representative sampling undermines a scientific field. This article therefore reports a critical review of the state of sampling in recent, high-quality software engineering research. The key findings are: (1) random sampling is rare; (2) sophisticated sampling strategies are very rare; (3) sampling, representativeness and randomness often appear misunderstood. These findings suggest that software engineering research has a generalizability crisis. To address these problems, this paper synthesizes existing knowledge of sampling into a succinct primer and proposes extensive guidelines for improving the conduct, presentation and evaluation of sampling in software engineering research. It is further recommended that while researchers should strive for more representative samples, disparaging non-probability sampling is generally capricious and particularly misguided for predominately qualitative research.
C1 [Baltes, Sebastian] Univ Adelaide, Adelaide, SA, Australia.
   [Ralph, Paul] Dalhousie Univ, Halifax, NS, Canada.
C3 University of Adelaide; Dalhousie University
RP Baltes, S (corresponding author), Univ Adelaide, Adelaide, SA, Australia.
EM sebastian.baltes@adelaide.edu.au; paulralph@dal.ca
RI Ralph, D. Paul/H-4322-2019
OI Ralph, D. Paul/0000-0002-7411-0857
CR Amir B, 2018, PROC IEEE ACM INT C, P344, DOI 10.1145/3183440.3195001
   [Anonymous], 2002, ACM SIGSOFT SOFTW EN, DOI DOI 10.1145/571681.571686
   [Anonymous], 2015, Journal of Software Engineering Research and Development, DOI [10.1186/s40411-015-0023-0, DOI 10.1186/S40411-015-0023-0]
   Arnett JJ, 2008, AM PSYCHOL, V63, P602, DOI 10.1037/0003-066X.63.7.602
   Baltes S, 2020, SAMPLING SOFTWARE EN, DOI DOI 10.5281/ZENODO.3666824
   Baltes S, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962628
   Baltes S, 2018, IEEE WORK CONF MIN S, P319, DOI 10.1145/3196398.3196430
   Beecham S, 2008, INFORM SOFTWARE TECH, V50, P860, DOI 10.1016/j.infsof.2007.09.004
   Breckenridge J, 2009, GROUNDED THEORY REV, V8, P112
   Caine K, 2016, 34TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, CHI 2016, P981, DOI 10.1145/2858036.2858498
   Charmaz K., 2014, Introducing Qualitative Methods
   Checkland P, 1998, SYST PRACT ACT RES, V11, P9, DOI 10.1023/A:1022908820784
   Cochran WilliamGemmell., 1999, Sampling techniques, V3d
   Cohen J., 1988, STAT POWER ANAL BEHA, VSecond, P1, DOI DOI 10.1016/B978-0-12-179060-8.50006-2
   Cosentino V, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P137, DOI [10.1109/MSR.2016.023, 10.1145/2901739.2901776]
   Daniel J., 2011, Sampling essentials: practical guidelines for making sampling choices
   de Mello RM, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962632
   de Mello RM, 2015, P IB AM C SOFTW ENG
   Dillman D.A., 2009, Internet, Mail, and Mix-Mode Surveys: The Taylored Design Method
   Draucker CB, 2007, QUAL HEALTH RES, V17, P1137, DOI 10.1177/1049732307308450
   Duignan, 2019, ENCYCL BRITANNICA
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Easton G., 2010, One case study is enough
   Falessi D, 2018, EMPIR SOFTW ENG, V23, P452, DOI 10.1007/s10664-017-9523-3
   Faugier J, 1997, J ADV NURS, V26, P790, DOI 10.1046/j.1365-2648.1997.00371.x
   Feldt R, 2018, EMPIR SOFTW ENG, V23, P3801, DOI 10.1007/s10664-018-9655-0
   FITTS PM, 1954, J EXP PSYCHOL, V47, P381, DOI 10.1037/h0055392
   Foster E., 2014, SOFTWARE ENG METHODI
   Gentles SJ, 2015, QUAL REP, V20, P1772
   Glaser B. G., 1967, DISCOVERY GROUNDED T, DOI 10.1515/9783111660211/html
   Goel S, 2010, P NATL ACAD SCI USA, V107, P6743, DOI 10.1073/pnas.1000261107
   Gousios G, 2013, IEEE WORK CONF MIN S, P233, DOI 10.1109/MSR.2013.6624034
   GUBA EG, 1982, ECTJ-EDUC COMMUN TEC, V30, P233
   Heckathorn DD, 1997, SOC PROBL, V44, P174, DOI 10.1525/sp.1997.44.2.03x0221m
   Henrich J, 2010, BEHAV BRAIN SCI, V33, P61, DOI 10.1017/S0140525X0999152X
   Henry G. T, 1990, PRACTICAL SAMPLING, V21
   Huang X, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1207, DOI 10.1145/3180155.3180235
   Humbatova N, 2020, PROC INT CONF SOFTW, P1110, DOI 10.1145/3377811.3380395
   Ingram C., 2020, ICSE
   Johnston LG., 2010, METHODOL INNOV ONLIN, V5, P38, DOI [DOI 10.4256/MIO.2010.0017, 10.4256/mio.2010.0017]
   Kitchenham B., 2007, GUIDELINES PERFORMIN
   Kitchenham BA, 2008, Guide to advanced empirical software engineering, P63, DOI [DOI 10.1007/978-1-84800-044-5_3, 10.1007/ 978-1-84800-044-5_3]
   KRUSKAL W, 1979, INT STAT REV, V47, P13, DOI 10.2307/1403202
   KRUSKAL W, 1979, INT STAT REV, V47, P245, DOI 10.2307/1402647
   LANDON EL, 1977, J MARKETING RES, V14, P294, DOI 10.2307/3150766
   Lee AS, 2003, INFORM SYST RES, V14, P221, DOI 10.1287/isre.14.3.221.16560
   Maalej W, 2013, IEEE T SOFTWARE ENG, V39, P1264, DOI 10.1109/TSE.2013.12
   Malekinejad M, 2008, AIDS BEHAV, V12, pS105, DOI 10.1007/s10461-008-9421-1
   McElreath R, 2016, TEXT STAT SCI, pXI
   Miles M.B., 2014, Qualitative data analysis: A methods sourcebook, V3rd
   Mohanani R, 2021, IEEE T SOFTWARE ENG, V47, P936, DOI 10.1109/TSE.2019.2909033
   Moher D, 2009, J CLIN EPIDEMIOL, V62, P1006, DOI 10.1016/j.jclinepi.2009.06.005
   Mullinix K.J., 2015, Journal of Experimental Political Science, V2, P109, DOI [DOI 10.1017/XPS.2015.19, 10.1017/xps.2015.19]
   Nagappan M, 2013, 2013 9 JOINT M EUR S, P466, DOI [DOI 10.1145/2491411.2491415, 10.1145/2491411.2491415]
   Patton M. Q., 2002, QUALITATIVE RES EVAL
   Paulson JW, 2004, IEEE T SOFTWARE ENG, V30, P246, DOI 10.1109/TSE.2004.1274044
   Ralph P, 2020, ARXIV201003525
   Ralph P, 2020, EMPIR SOFTW ENG, V25, P4927, DOI 10.1007/s10664-020-09875-y
   Ralph P, 2019, IEEE T SOFTWARE ENG, V45, P712, DOI 10.1109/TSE.2018.2796554
   Russo D, 2022, IEEE T SOFTWARE ENG, V48, P819, DOI 10.1109/TSE.2020.3003413
   Salleh N, 2018, INFORM SOFTWARE TECH, V98, P161, DOI 10.1016/j.infsof.2017.12.001
   Sax LJ, 2003, RES HIGH EDUC, V44, P409, DOI 10.1023/A:1024232915870
   Sedano T, 2019, PROC INT CONF SOFTW, P200, DOI 10.1109/ICSE.2019.00036
   Sjoberg DIK, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P17, DOI 10.1109/ISESE.2002.1166921
   Stol KJ, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3241743
   Stol KJ, 2016, PROC INT CONF SOFTW, P120, DOI 10.1145/2884781.2884833
   Tempero E, 2010, ASIA PAC SOFWR ENG, P336, DOI 10.1109/APSEC.2010.46
   Theisen Christopher, 2017, ACM SIGSOFT Software Engineering Notes, V42, P1, DOI 10.1145/3149485.3149496
   Thomas G., 2015, ANATOMY CASE STUDY
   THOMPSON SK, 1990, J AM STAT ASSOC, V85, P1050, DOI 10.2307/2289601
   Toepoel V., 2012, Handbook of Survey Methodology for the Social Sciences, P209
   Torchiano M, 2017, IEEE-ACM INT WKSP CO, P33, DOI 10.1109/CESI.2017.5
   Trochim W.M., 2001, Research Methods Knowledge Base, V2
   Trost J.E., 1986, Qualitative Sociology, V9, P54, DOI DOI 10.1007/BF00988249
   Turk P, 2005, ENVIRON ECOL STAT, V12, P55, DOI 10.1007/s10651-005-6818-0
   Valliant R, 2018, PRACTICAL TOOLS DESI, P209
   van Hoeven LR, 2015, BMC MED RES METHODOL, V15, DOI 10.1186/s12874-015-0089-8
   Van Manen Max, 2016, Phenomenology of Practice: Meaning-Giving Methods in Phenomenological Research and Writing
   Vasilescu B, 2015, CHI 2015: PROCEEDINGS OF THE 33RD ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P3789, DOI 10.1145/2702123.2702549
   Wohlin C., 2012, Experimentation in Software Engineering
   Yin R. K., 2009, CASE STUDY RES DESIG, V4th ed.
   Zannier C., 2006, 28th International Conference on Software Engineering Proceedings, P341, DOI 10.1145/1134285.1134333
   Zhang H, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P659, DOI 10.1145/3338906.3338976
NR 83
TC 68
Z9 71
U1 0
U2 9
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2022
VL 27
IS 4
AR 94
DI 10.1007/s10664-021-10072-8
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 0V8JM
UT WOS:000788586200002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU White, R
   Krinke, J
AF White, Robert
   Krinke, Jens
TI TCTracer: Establishing test-to-code traceability links using dynamic and
   static techniques
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software testing; Traceability; Software development; Software
   engineering
ID CONTINUOUS INTEGRATION; CHALLENGES; DEPLOYMENT; RECOVERY; DELIVERY
AB Test-to-code traceability links model the relationships between test artefacts and code artefacts. When utilised during the development process, these links help developers to keep test code in sync with tested code, reducing the rate of test failures and missed faults. Test-to-code traceability links can also help developers to maintain an accurate mental model of the system, reducing the risk of architectural degradation when making changes. However, establishing and maintaining these links manually places an extra burden on developers and is error-prone. This paper presents TCTracer, an approach and implementation for the automatic establishment of test-to-code traceability links. Unlike existing work, TCTracer operates at both the method level and the class level, allowing us to establish links between tests and functions, as well as between test classes and tested classes. We improve over existing techniques by combining an ensemble of new and existing techniques that utilise both dynamic and static information and exploiting a synergistic flow of information between the method and class levels. An evaluation of TCTracer using five large, well-studied open source systems demonstrates that, on average, we can establish test-to-function links with a mean average precision (MAP) of 85% and test-class-to-class links with an MAP of 92%.
C1 [White, Robert; Krinke, Jens] UCL, UCL Comp Sci, London, England.
C3 University of London; University College London
RP Krinke, J (corresponding author), UCL, UCL Comp Sci, London, England.
EM robert.white.13@ucl.ac.uk; j.krinke@ucl.ac.uk
OI White, Robert/0000-0001-9579-7072
FU Engineering and Physical Sciences Research Council (EPSRC)
   [EP/N509577/1]
FX This This work was funded through the Engineering and Physical Sciences
   Research Council (EPSRC), award number EP/N509577/1.
CR Aljawabrah N, 2021, IEEE ACCESS, V9, P40111, DOI 10.1109/ACCESS.2021.3063158
   Allamanis M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3212695
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Bouillon P, 2007, AGILE PROCESSES SOFT, DOI [10.1007/978-3-540-73101-6_14, DOI 10.1007/978-3-540-73101-6_14]
   Cleland-Huang J., 2012, Software and Systems Traceability, P265, DOI [DOI 10.1007/978144712239512, 10.1007/978-1-4471-2239-5, DOI 10.1007/978-1-4471-2239-5]
   Csuvik V, 2019, 2019 IEEE/ACM 10TH INTERNATIONAL WORKSHOP ON SOFTWARE AND SYSTEMS TRACEABILITY (SST 2019), P29, DOI 10.1109/SST.2019.00016
   Csuvik V, 2019, LECT NOTES COMPUT SC, V11622, P529, DOI 10.1007/978-3-030-24305-0_40
   Davis JS, 2006, PROCEEDINGS OF THE 1ST INTERNATIONAL CONFERENCE ON THE ECOLOGICAL IMPORTANCE OF SOLAR SALTWORKS, P5
   De Lucia A, 2008, 2008 FRONTIERS OF SOFTWARE MAINTENANCE, P21, DOI 10.1109/FOSM.2008.4659245
   Elsner D, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P491, DOI 10.1145/3460319.3464834
   Gergely T, 2019, SOFTWARE QUAL J, V27, P797, DOI 10.1007/s11219-018-9430-x
   Gethers M., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P133, DOI 10.1109/ICSM.2011.6080780
   Ghafari M, 2015, IEEE INT WORK C SO, P61, DOI 10.1109/SCAM.2015.7335402
   Gold NE, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10057-7
   Gold NE, 2020, IEEE WORK CONF MIN S, P265, DOI 10.1145/3379597.3387462
   Hurdugaci V, 2012, EUR CON SFTWR MTNCE, P11, DOI 10.1109/CSMR.2012.12
   Jones JA, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P467, DOI 10.1109/ICSE.2002.1007991
   Kicsi A, 2020, IEEE WORK CONF MIN S, P593, DOI 10.1145/3379597.3387488
   Kicsi A, 2018, INT WORK REAL ARTIF, P8, DOI 10.1145/3194104.3194106
   Levenshtein V. I., 1966, SOV PHYS DOKL, V10, P707
   Madeja Matej, 2019, 8 S LANG APPL TECHN, V3, P1, DOI [10.4230/OASIcs.SLATE.2019.3, DOI 10.4230/OASICS.SLATE.2019.3]
   Orellana G, 2017, IEEE WORK CONF MIN S, P451, DOI 10.1109/MSR.2017.25
   Parizi RM, 2016, 2016 IEEE/ACIS 14TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGEMENT AND APPLICATIONS (SERA), P193, DOI 10.1109/SERA.2016.7516146
   Parizi RM, 2015, 2015 10TH INTERNATIONAL JOINT CONFERENCE ON SOFTWARE TECHNOLOGIES (ICSOFT), VOL 1, P393
   Parizi RM, 2014, IEEE T RELIAB, V63, P913, DOI 10.1109/TR.2014.2338254
   Pinto L.S., 2012, P ACM SIGSOFT 20 INT, P1
   Qusef A, 2014, J SYST SOFTWARE, V88, P147, DOI 10.1016/j.jss.2013.10.019
   Qusef A, 2013, J SOFTW-EVOL PROC, V25, P1167, DOI 10.1002/smr.1573
   Sanderson M, 2010, NAT LANG ENG, V16, P100, DOI 10.1017/S1351324909005129
   Shahin M, 2017, IEEE ACCESS, V5, P3909, DOI 10.1109/ACCESS.2017.2685629
   Soetens QD, 2016, EMPIR SOFTW ENG, V21, P1990, DOI 10.1007/s10664-015-9405-5
   Ståhl D, 2017, EMPIR SOFTW ENG, V22, P967, DOI 10.1007/s10664-016-9457-1
   Trautsch F, 2020, J SYST SOFTWARE, V159, DOI 10.1016/j.jss.2019.110421
   UCL Research Ethics Committee, 2020, RES ETH UCL
   Van Rompaey B, 2009, EUR CON SFTWR MTNCE, P209, DOI 10.1109/CSMR.2009.39
   Villmow J, 2021, NLP4PROG 2021: THE 1ST WORKSHOP ON NATURAL LANGUAGE PROCESSING FOR PROGRAMMING (NLP4PROG 2021), P17
   Watson C, 2020, PROC INT CONF SOFTW, P1398, DOI 10.1145/3377811.3380429
   White R, 2020, ARXIV201109784
   White R, 2021, **DATA OBJECT**, DOI 10.5281/zenodo.5206476
   White R, 2020, PROC INT CONF SOFTW, P861, DOI 10.1145/3377811.3380921
   White R, 2018, PROCEEDINGS OF THE 4TH ACM SIGSOFT INTERNATIONAL WORKSHOP ON NLP FOR SOFTWARE ENGINEERING (NL4SE '18), P30, DOI 10.1145/3283812.3283823
   Winkler S, 2010, SOFTW SYST MODEL, V9, P529, DOI 10.1007/s10270-009-0145-0
   Zaidman A, 2011, EMPIR SOFTW ENG, V16, P325, DOI 10.1007/s10664-010-9143-7
NR 43
TC 1
Z9 1
U1 2
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAY
PY 2022
VL 27
IS 3
AR 67
DI 10.1007/s10664-021-10079-1
PG 43
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZV2BV
UT WOS:000770339500012
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Berry, DM
AF Berry, Daniel M.
TI Empirical evaluation of tools for hairy requirements engineering tasks
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Abstraction finding; Ambiguity finding; F-measure; False negatives;
   False positives; Hairy task; Manual task; Natural language documents;
   Precision; Recall; Summarization; Tool-assisted task; Tracing
ID TRACEABILITY RECOVERY; CODE
AB Context A hairy requirements engineering (RE) task involving natural language (NL) documents is (1) a non-algorithmic task to find all relevant answers in a set of documents, that is (2) not inherently difficult for NL-understanding humans on a small scale, but is (3) unmanageable in the large scale. In performing a hairy RE task, humans need more help finding all the relevant answers than they do in recognizing that an answer is irrelevant. Therefore, a hairy RE task demands the assistance of a tool that focuses more on achieving high recall, i.e., finding all relevant answers, than on achieving high precision, i.e., finding only relevant answers. As close to 100% recall as possible is needed, particularly when the task is applied to the development of a high-dependability system. In this case, a hairy-RE-task tool that falls short of close to 100% recall may even be useless, because to find the missing information, a human has to do the entire task manually anyway. On the other hand, too much imprecision, too many irrelevant answers in the tool's output, means that manually vetting the tool's output to eliminate the irrelevant answers may be too burdensome. The reality is that all that can be realistically expected and validated is that the recall of a hairy-RE-task tool is higher than the recall of a human doing the task manually.
   Objective Therefore, the evaluation of any hairy-RE-task tool must consider the context in which the tool is used, and it must compare the performance of a human applying the tool to do the task with the performance of a human doing the task entirely manually, in the same context. The context of a hairy-RE-task tool includes characteristics of the documents being subjected to the task and the purposes of subjecting the documents to the task. However, traditionally, many a hairy-RE-task tool has been evaluated by considering only (1) how high is its precision, or (2) how high is its F-measure, which weights recall and precision equally, ignoring the context, and possibly leading to incorrect - often underestimated - conclusions about how effective it is.
   Method To evaluate a hairy-RE-task tool, this article offers an empirical procedure that takes into account not only (1) the performance of the tool, but also (2) the context in which the task is being done, (3) the performance of humans doing the task manually, and (4) the performance of those vetting the tool's output. The empirical procedure uses (I) on one hand, (1) the recall and precision of the tool, (2) a contextually weighted F-measure for the tool, (3) a new measure called summarization of the tool, and (4) the time required for vetting the tool's output, and (II) on the other hand, (1) the recall and precision achievable by and (2) the time required by a human doing the task.
   Results The use of the procedure is shown for a variety of different contexts, including that of successive attempts to improve the recall of an imagined hairy-RE-task tool. The procedure is shown to be context dependent, in that the actual next step of the procedure followed in any context depends on the values that have emerged in previous steps.
   Conclusion Any recommendation for a hairy-RE-task tool to achieve close to 100% recall comes with caveats and may be required only in specific high-dependability contexts. Appendix C applies parts of this procedure to several hairy-RE-task tools reported in the literature using data published about them. The surprising finding is that some of the previously evaluated tools are actually better than they were thought to be when they were evaluated using mainly precision or an unweighted F-measure.
C1 [Berry, Daniel M.] Univ Waterloo, David R Cheriton Sch Comp Sci, Waterloo, ON N2L 3G1, Canada.
C3 University of Waterloo
RP Berry, DM (corresponding author), Univ Waterloo, David R Cheriton Sch Comp Sci, Waterloo, ON N2L 3G1, Canada.
EM dberry@uwaterloo.ca
FU Canadian NSERC grant [NSERC-RGPIN227055-15]
FX I benefited from discussions, in person or electronically, with William
   Berry, Travis Breaux, Lionel Briand, Alex Dekhtyar, Jane Cleland-Huang,
   Alessio Ferrari, Eddy Groen, Jane Hayes, Walid Maalej, Anas Mahmoud,
   Salome Maro, Aaron Massey, Thorsten Merten, Lloyd Montgomery, John
   Mylopoulos, Mei Nagappan, Barbara Paech, Jan Steghofer, Andreas
   Vogelsang, and the anonymous referees. My work was supported in part by
   a Canadian NSERC grant NSERC-RGPIN227055-15.
CR Anish PR, 2014, INT REQUIR ENG CONF, P437, DOI 10.1109/RE.2014.6912295
   [Anonymous], 2001, P 7 INT WORKSH REQ E
   [Anonymous], 2011, Learning to Rank for Information Retrieval and Natural Language Processing
   [Anonymous], 2012, Software and Systems Traceability
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Antoniol G., 2000, Proceedings of the Fourth European Conference on Software Maintenance and Reengineering, P227, DOI 10.1109/CSMR.2000.827331
   Arora C, 2015, IEEE T SOFTWARE ENG, V41, P944, DOI 10.1109/TSE.2015.2428709
   Beard M., 2011, 2011 18th Working Conference on Reverse Engineering, P124, DOI 10.1109/WCRE.2011.23
   Berry Daniel, 2012, Requirements Engineering: Foundation for Software Quality. Proceedings 18th International Working Conference, REFSQ 2012, P211, DOI 10.1007/978-3-642-28714-5_18
   Berry DM, 2017, INT REQUIR ENG CONF, P570, DOI 10.1109/RE.2017.64
   Berry DM, 2017, 2017 IEEE 25TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW), P284, DOI 10.1109/REW.2017.25
   Berry DanielM., 2017, EVALUATION TOOLS HAI
   Binkley David., 2010, Encyclopedia of Software Engineering, P454
   Breaux Travis D., 2013, Requirements Engineering: Foundation for Software Quality. 19th International Working Conference, REFSQ 2013. Proceedings, P141, DOI 10.1007/978-3-642-37422-7_11
   Breaux TD, 2014, INT REQUIR ENG CONF, P163, DOI 10.1109/RE.2014.6912258
   Bucchiarone A, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P390, DOI 10.1109/RE.2005.53
   Casamayor A, 2012, KNOWL-BASED SYST, V30, P78, DOI 10.1016/j.knosys.2011.12.009
   Cavalcanti G, 2017, PROC IEEE ACM INT C, P325, DOI 10.1109/ICSE-C.2017.103
   Chantree F, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P59
   Cleland-Huang J, 2004, 12TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P230
   Cuddeback D., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P231, DOI 10.1109/RE.2010.35
   De Lucia Andrea, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P39, DOI 10.1109/ASE.2008.14
   De Lucia A., 2012, SOFTWARE SYSTEMS TRA, P71, DOI [10.1007/978-1-4471- 2239-5_4, DOI 10.1007/978-1-4471-2239-5_4]
   De Lucia A, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1276933.1276934
   De Lucia A, 2009, PROC IEEE INT CONF S, P371, DOI 10.1109/ICSM.2009.5306317
   De Lucia A, 2009, EMPIR SOFTW ENG, V14, P57, DOI 10.1007/s10664-008-9090-8
   Dekhtyar A, 2011, P 6 INT WORKSH TRAC, P58
   Delater Alexander, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P25, DOI 10.1109/ESEM.2013.16
   Dwarakanath A, 2013, S VIS LANG HUM CEN C, P314, DOI 10.1109/RE.2013.6636736
   Emenecker J., 2010, P 32 ACM IEEE INT C, V1, P155, DOI DOI 10.1145/1806799.1806825
   Ferrari Alessio, 2014, Requirements Engineering: Foundation for Software Quality. 20th International Working Conference, REFSQ 2014. Proceedings: LNCS 8396, P23, DOI 10.1007/978-3-319-05843-6_3
   Freedman D.H., 2010, WRONG WHY EXPERTS KE
   Gacitua R., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P5, DOI 10.1109/RE.2010.12
   Gacitua R, 2008, 7TH IEEE/ACIS INTERNATIONAL CONFERENCE ON COMPUTER AND INFORMATION SCIENCE IN CONJUNCTION WITH 2ND IEEE/ACIS INTERNATIONAL WORKSHOP ON E-ACTIVITY, PROCEEDINGS, P328, DOI 10.1109/ICIS.2008.94
   Gervasi V, 2014, INT REQUIR ENG CONF, P143, DOI 10.1109/RE.2014.6912256
   Gleich B, 2010, LECT NOTES COMPUT SC, V6182, P218, DOI 10.1007/978-3-642-14192-8_20
   Goldin L., 1997, Automated Software Engineering, V4, P375, DOI 10.1023/A:1008617922496
   Gotel O., 2012, 2012 IEEE 20th International Requirements Engineering Conference (RE 2012), P71, DOI 10.1109/RE.2012.6345841
   Groen EC, 2018, P INT C REQ ENG FDN, V2075, P1
   Grossman M.R., 2016, TREC 2016 Total Recall Track Overview
   Guzman E, 2014, INT REQUIR ENG CONF, P153, DOI 10.1109/RE.2014.6912257
   Hayes J., 2005, P 3 INT WORKSHOP TRA, P20
   Hayes JH, 2018, REQUIR ENG, V23, P119, DOI 10.1007/s00766-016-0260-8
   Hayes JH, 2006, IEEE T SOFTWARE ENG, V32, P4, DOI 10.1109/TSE.2006.3
   Hayes JH, 2004, 12TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P249
   Hayes JH, 2003, 11TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P138
   Hayes J, 2019, EUR J COMMUN, V34, P661, DOI 10.1177/0267323119886168
   Heindl M., 2005, P 10 EUROPEAN SOFTWA, P60
   Hubner P., 2016, JOINT P REFSQ 2016 C, P1
   Hubner P, 2017, P 23 INT WORK C REQ
   Ingram C., 2012, Software and Systems Traceability, P23
   Jha N, 2019, EMPIR SOFTW ENG, V24, P3659, DOI 10.1007/s10664-019-09716-7
   Jha N, 2018, EMPIR SOFTW ENG, V23, P3734, DOI 10.1007/s10664-018-9605-x
   Jha N, 2017, LECT NOTES COMPUT SC, V10153, P273, DOI 10.1007/978-3-319-54045-0_20
   Juristo N., 2013, BASICS SOFTWARE ENG
   Knauss Eric, 2014, Requirements Engineering: Foundation for Software Quality. 20th International Working Conference, REFSQ 2014. Proceedings: LNCS 8396, P39, DOI 10.1007/978-3-319-05843-6_4
   Kong WK, 2011, PROCEEDINGS OF THE 4TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE'11), P32
   Maalej W., 2017, COMMUNICATION
   Maalej W, 2016, REQUIR ENG, V21, P311, DOI 10.1007/s00766-016-0251-9
   Mack A., 1998, Inattentional blindness, DOI [10.7551/mitpress/3707.001.0001, DOI 10.7551/MITPRESS/3707.001.0001]
   Mäder P, 2015, EMPIR SOFTW ENG, V20, P413, DOI 10.1007/s10664-014-9314-z
   Mahmoud A, 2014, REQUIR ENG, V19, P309, DOI 10.1007/s00766-013-0197-0
   Manning Christopher D., 2008, INTRO INFORM RETRIEV
   Marcus A., 2013, Software Engineering: International Summer Schools, ISSSE 2009-2011, Salerno, Italy. Revised Tutorial Lectures, V7171, P126
   Maro S, 2019, E COMMUNICATION
   Maro S, 2018, INT REQUIR ENG CONF, P52, DOI 10.1109/RE.2018.00-52
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P637, DOI 10.1109/TSE.2007.70721
   Merten T, 2016, LECT NOTES COMPUT SC, V9619, P45, DOI 10.1007/978-3-319-30282-9_4
   Montgomery L, 2017, INT REQUIR ENG CONF, P362, DOI 10.1109/RE.2017.61
   Mori Kenji, 2020, JOINT P REFSQ 2020 W
   Nagappan M, 2018, COMMUNICATION
   Nikora AP, 2010, P 21 IEEE INT S SOFT, P229
   Northrop L., 2006, ULTRALARGE SCALE SYS
   Oliveto Rocco, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P68, DOI 10.1109/ICPC.2010.20
   Paech B, 2019, E COMMUNICATION
   Pagano D, 2013, S VIS LANG HUM CEN C, P125, DOI 10.1109/RE.2013.6636712
   Pittke F, 2015, IEEE T SOFTWARE ENG, V41, P526, DOI 10.1109/TSE.2015.2396895
   Pollock L, 2013, REVISED TUTORIAL LEC, P126
   Poshyvanyk D, 2007, INT C PROGRAM COMPRE, P37
   Provost F, 1998, MACH LEARN, V30, P127, DOI 10.1023/A:1007442505281
   Quirchmayr T, 2017, LECT NOTES COMPUT SC, V10153, P255, DOI 10.1007/978-3-319-54045-0_19
   Rahimi M, 2014, INT REQUIR ENG CONF, P253, DOI 10.1109/RE.2014.6912267
   Rempel P, 2017, IEEE T SOFTWARE ENG, V43, P777, DOI 10.1109/TSE.2016.2622264
   Riaz M, 2014, INT REQUIR ENG CONF, P183, DOI 10.1109/RE.2014.6912260
   Robeer M, 2016, INT REQUIR ENG CONF, P196, DOI 10.1109/RE.2016.40
   Roegiest A, 2016, TREC 2015 TOTAL RECA
   Ryan K, 1993, P IEEE INT S REQ ENG, P240, DOI 10.1109/ISRE.1993.324852
   Saito S, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P152, DOI 10.1145/2889160.2889237
   Saracevic T., 1995, SIGIR Forum, P138
   Seqerloo AY, 2019, REQUIR ENG, V24, P119, DOI 10.1007/s00766-018-0304-3
   SUNDARAM S.K., 2005, Proceedings of the 2005 workshop on Predictor models in software engineering, P1, DOI 10.1145/1082983.1083169
   Sutcliffe A, 2014, INT REQUIR ENG CONF, P173, DOI 10.1109/RE.2014.6912259
   Tjong S. F., 2013, The design of SREE-a prototype potential ambiguity finder for requirements specifications and lessons learned, V7830, P80, DOI DOI 10.1007/978-3-642-37422-7_6
   TREC Conferences, 2015, TREC 2015 TOT REC TR
   TREC Conferences, 2017, TEXT RETRIEVAL C TRE
   Vogelsang A, 2019, E COMMUNICATION
   Wang L, 2020, JOINT P REFSQ 2020 W
   Wei-Keat Kong, 2012, 2012 IEEE 20th International Requirements Engineering Conference (RE 2012), P31, DOI 10.1109/RE.2012.6345824
   Wilson WM, 1997, PROC INT CONF SOFTW, P161, DOI 10.1145/253228.253258
   Winkler JP, 2019, INT REQUIR ENG CONF, P40, DOI 10.1109/RE.2019.00016
   Winkler JP, 2018, LECT NOTES COMPUT SC, V10753, P57, DOI 10.1007/978-3-319-77243-1_4
   Witten IH, 2011, MOR KAUF D, P1
   Wnuk K, 2012, EMPIR SOFTW ENG, V17, P305, DOI 10.1007/s10664-011-9174-8
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Yang H, 2011, REQUIR ENG, V16, P163, DOI 10.1007/s00766-011-0119-y
   Zeni N, 2015, REQUIR ENG, V20, P1, DOI 10.1007/s00766-013-0181-8
NR 106
TC 15
Z9 15
U1 1
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2021
VL 26
IS 6
AR 111
DI 10.1007/s10664-021-09986-0
PG 77
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UC6WX
UT WOS:000686665100005
DA 2024-07-18
ER

PT J
AU Tian, YQ
   Ma, SQ
   Wen, M
   Liu, YP
   Cheung, SC
   Zhang, XY
AF Tian, Yongqiang
   Ma, Shiqing
   Wen, Ming
   Liu, Yepang
   Cheung, Shing-Chi
   Zhang, Xiangyu
TI To what extent do DNN-based image classification models make unreliable
   inferences?
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Deep learning; Metamorphic testing; Software engineering for AI
AB Deep Neural Network (DNN) models are widely used for image classification. While they offer high performance in terms of accuracy, researchers are concerned about if these models inappropriately make inferences using features irrelevant to the target object in a given image. To address this concern, we propose a metamorphic testing approach that assesses if a given inference is made based on irrelevant features. Specifically, we propose two metamorphic relations (MRs) to detect such unreliable inferences. These relations expect (a) the classification results with different labels or the same labels but less certainty from models after corrupting the relevant features of images, and (b) the classification results with the same labels after corrupting irrelevant features. The inferences that violate the metamorphic relations are regarded as unreliable inferences. Our evaluation demonstrated that our approach can effectively identify unreliable inferences for single-label classification models with an average precision of 64.1% and 96.4% for the two MRs, respectively. As for multi-label classification models, the corresponding precision for MR-1 and MR-2 is 78.2% and 86.5%, respectively. Further, we conducted an empirical study to understand the problem of unreliable inferences in practice. Specifically, we applied our approach to 18 pre-trained single-label image classification models and 3 multi-label classification models, and then examined their inferences on the ImageNet and COCO datasets. We found that unreliable inferences are pervasive. Specifically, for each model, more than thousands of correct classifications are actually made using irrelevant features. Next, we investigated the effect of such pervasive unreliable inferences, and found that they can cause significant degradation of a model's overall accuracy. After including these unreliable inferences from the test set, the model's accuracy can be significantly changed. Therefore, we recommend that developers should pay more attention to these unreliable inferences during the model evaluations. We also explored the correlation between model accuracy and the size of unreliable inferences. We found the inferences of the input with smaller objects are easier to be unreliable. Lastly, we found that the current model training methodologies can guide the models to learn object-relevant features to certain extent, but may not necessarily prevent the model from making unreliable inferences. We encourage the community to propose more effective training methodologies to address this issue.
C1 [Tian, Yongqiang; Cheung, Shing-Chi] Hong Kong Univ Sci & Technol, Dept Comp Sci & Engn, Hong Kong, Peoples R China.
   [Ma, Shiqing] Rutgers State Univ, Dept Comp Sci, Piscataway, NJ USA.
   [Wen, Ming] Huazhong Univ Sci & Technol, Sch Cyber Sci & Engn, Wuhan, Hubei, Peoples R China.
   [Liu, Yepang] Southern Univ Sci & Technol, Dept Comp Sci & Engn, Shenzhen, Guangdong, Peoples R China.
   [Zhang, Xiangyu] Purdue Univ, Dept Comp Sci, W Lafayette, IN 47907 USA.
C3 Hong Kong University of Science & Technology; Rutgers University System;
   Rutgers University New Brunswick; Huazhong University of Science &
   Technology; Southern University of Science & Technology; Purdue
   University System; Purdue University
RP Cheung, SC (corresponding author), Hong Kong Univ Sci & Technol, Dept Comp Sci & Engn, Hong Kong, Peoples R China.
EM ytianas@cse.ust.hk; shiqing.ma@rutgers.edu; mwenaa@hust.edu.cn;
   liuyp1@sustech.edu.cn; scc@cse.ust.hk; xyzhang@purdue.edu
RI Wen, Ming/AEJ-8029-2022; xiangyu, zhang/AAQ-6550-2020; Tian,
   Yongqiang/GWC-3226-2022; li, jing/KHY-5337-2024; Liu,
   Chenyu/KBQ-8899-2024; Liu, Yepang/G-6183-2018; Cheung, Shing
   Chi/U-5882-2018
OI xiangyu, zhang/0000-0002-4858-5429; Tian, Yongqiang/0000-0003-1644-2965;
   Liu, Yepang/0000-0001-8147-8126; Cheung, Shing Chi/0000-0002-3508-7172
FU National Key Research and Development Program of China [2019YFE0198100];
   National Natural Science Foundation of China [61932021, 62002125,
   61802164]; Guangdong Provincial Key Laboratory [2020B121201001]; Hong
   Kong RGC/RIF [R5034-18]; Hong Kong ITF [MHP/055/19]; Hong Kong PhD
   Fellowship Scheme; MSRA Collaborative Research Grant; NSF [1901242,
   1910300]; IARPA TrojAI [W911NF19S0012]
FX This work was supported by the National Key Research and Development
   Program of China (Grant No. 2019YFE0198100), National Natural Science
   Foundation of China (Grant No. 61932021, 62002125 and 61802164),
   Guangdong Provincial Key Laboratory (Grant No. 2020B121201001), Hong
   Kong RGC/RIF (Grant No. R5034-18), Hong Kong ITF (Grant No: MHP/055/19),
   Hong Kong PhD Fellowship Scheme, MSRA Collaborative Research Grant,
   Microsoft Cloud Research Software Fellow Award 2019, NSF 1901242, NSF
   1910300, and IARPA TrojAI W911NF19S0012. Any opinions, findings, and
   conclusions in this paper are those of the authors only and do not
   necessarily reflect the views of our sponsors.
CR Aggarwal A, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P625, DOI 10.1145/3338906.3338937
   Barr ET, 2015, IEEE T SOFTWARE ENG, V41, P507, DOI 10.1109/TSE.2014.2372785
   Ben-Baruch Emanuel, 2020, ARXIV200914119
   Benesty J., 2009, NOISE REDUCTION SPEE, P1, DOI [10.1007/978-3-642-00296-0_5, DOI 10.1007/978-3-642-00296-05]
   Carlini N, 2017, P IEEE S SECUR PRIV, P39, DOI 10.1109/SP.2017.49
   Chen T.Y., 1998, Metamorphic testing: a new approach for generating next test cases
   Chen TY, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3143561
   Chollet F, 2015, KERAS
   Cochran W.G., 1977, Sampling techniques, V3rd ed.
   Cramer H., 1946, MATH METHODS STAT
   Deng J, 2009, PROC CVPR IEEE, P248, DOI 10.1109/CVPRW.2009.5206848
   Ding JH, 2017, 2017 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON METAMORPHIC TESTING (MET 2017), P28, DOI 10.1109/MET.2017.2
   Dwarakanath A, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P118, DOI 10.1145/3213846.3213858
   Eiband M, 2018, IUI 2018: PROCEEDINGS OF THE 23RD INTERNATIONAL CONFERENCE ON INTELLIGENT USER INTERFACES, P211, DOI 10.1145/3172944.3172961
   Fahmy H, 2020, ARXIV200200863
   Fellbaum C., 2006, Encyclopedia of language linguistics, V14, P665
   Freund Y, 1997, J COMPUT SYST SCI, V55, P119, DOI 10.1006/jcss.1997.1504
   FRS K, 1900, PHILOS MAG, V50, P157, DOI DOI 10.1080/14786440009463897
   Ge Qin, 2010, Proceedings of the 2010 20th International Conference on Pattern Recognition (ICPR 2010), P922, DOI 10.1109/ICPR.2010.231
   Geirhos R, 2019, 7 INT C LEARN REPR I
   Gu TY, 2019, IEEE ACCESS, V7, P47230, DOI 10.1109/ACCESS.2019.2909068
   Guo JM, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P739, DOI 10.1145/3236024.3264835
   He K., 2016, PROC CVPR IEEE, P770, DOI [10.1109/CVPR.2016.90, DOI 10.1109/CVPR.2016.90]
   Howard A.G., 2017, MOBILENETS EFFICIENT, DOI DOI 10.48550/ARXIV.1704.04861
   HUANG G, 2017, PROC CVPR IEEE, P2261, DOI DOI 10.1109/CVPR.2017.243
   Pham HV, 2019, PROC INT CONF SOFTW, P1027, DOI 10.1109/ICSE.2019.00107
   Krasin I., 2017, Openimages: A public dataset for large-scale multi-label and multi-class image classification
   Krizhevsky A., 2009, LEARNING MULTIPLE LA
   Krizhevsky A, 2017, COMMUN ACM, V60, P84, DOI 10.1145/3065386
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   LeCun Y., 2010, MNIST HANDWRITTEN DI
   Lin TY, 2014, LECT NOTES COMPUT SC, V8693, P740, DOI 10.1007/978-3-319-10602-1_48
   Lin YQ, 2011, PROC CVPR IEEE, P1689, DOI 10.1109/CVPR.2011.5995477
   Liu W, 2016, LECT NOTES COMPUT SC, V9905, P21, DOI 10.1007/978-3-319-46448-0_2
   Ma L, 2018, IEEE INT CONF AUTOM, P120, DOI 10.1145/3238147.3238202
   Ma L, 2018, PROC INT SYMP SOFTW, P100, DOI 10.1109/ISSRE.2018.00021
   Ma SQ, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P175, DOI 10.1145/3236024.3236082
   Montavon G., 2019, EXPLAINABLE INTERPRE, V11700, P193, DOI [10.1007/978-3-030-28954-6_10, DOI 10.1007/978-3-030-28954-6_10]
   Moosavi-Dezfooli SM, 2016, PROC CVPR IEEE, P2574, DOI 10.1109/CVPR.2016.282
   Nejadgholi M, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P797, DOI 10.1109/ASE.2019.00078
   Odena A, 2019, PR MACH LEARN RES, V97
   Pei KX, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P1, DOI 10.1145/3132747.3132785
   Redmon J, 2016, PROC CVPR IEEE, P779, DOI 10.1109/CVPR.2016.91
   Ren SQ, 2017, IEEE T PATTERN ANAL, V39, P1137, DOI 10.1109/TPAMI.2016.2577031
   Ribeiro MT, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1135, DOI 10.1145/2939672.2939778
   Roobaert D, 2001, P 2001 IEEE COMP VIS, V2, pII, DOI [10.1109/CVPR.2001.990982, DOI 10.1109/CVPR.2001.990982]
   Rosenfeld Amir, 2018, ARXIV180803305
   Sánchez J, 2011, PROC CVPR IEEE, P1665, DOI 10.1109/CVPR.2011.5995504
   Selvaraju RR, 2017, IEEE I CONF COMP VIS, P618, DOI 10.1109/ICCV.2017.74
   Simonyan K, 2015, Arxiv, DOI arXiv:1409.1556
   Stock P, 2018, LECT NOTES COMPUT SC, V11210, P504, DOI 10.1007/978-3-030-01231-1_31
   TIAN Y, P ACM IEEE 42 INT C, P1122, DOI DOI 10.1145/3377811.3380400
   Tian YQ, 2020, PROC INT CONF SOFTW, P45, DOI 10.1145/3377812.3382133
   Tian YC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P303, DOI 10.1145/3180155.3180220
   Tramèr F, 2017, 2017 IEEE EUROPEAN SYMPOSIUM ON SECURITY AND PRIVACY (EUROS&P), P401, DOI 10.1109/EuroSP.2017.29
   Wang S, 2020, IEEE INT CONF AUTOM, P1053, DOI 10.1145/3324884.3416584
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Wu Guoqiang, 2020, ADV NEURAL INFORM PR
   Xie XF, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P5772
   Xie XF, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P146, DOI 10.1145/3293882.3330579
   Xie XY, 2011, J SYST SOFTWARE, V84, P544, DOI 10.1016/j.jss.2010.11.920
   Yu JH, 2018, PROC CVPR IEEE, P5505, DOI 10.1109/CVPR.2018.00577
   Zhang JM, 2022, IEEE T SOFTWARE ENG, V48, P1, DOI 10.1109/TSE.2019.2962027
   Zhang MS, 2018, IEEE INT CONF AUTOM, P132, DOI 10.1145/3238147.3238187
   Zhang P, 2020, P 42 INT C SOFTW ENG
   Zhang XY, 2020, PROC INT CONF SOFTW, P739, DOI 10.1145/3377811.3380368
   Zhao Jieyu, 2017, P C EMP METH NAT LAN, P2979
   Zhou B., 2016, P IEEE C COMP VIS PA, DOI DOI 10.1109/CVPR.2016.319
   Zhou ZQ, 2019, COMMUN ACM, V62, P61, DOI 10.1145/3241979
   Zoph B, 2018, PROC CVPR IEEE, P8697, DOI 10.1109/CVPR.2018.00907
NR 70
TC 11
Z9 12
U1 1
U2 14
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2021
VL 26
IS 5
AR 84
DI 10.1007/s10664-021-09985-1
PG 40
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SU7QU
UT WOS:000663327900002
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Zhou, JY
   Wang, SW
   Zhang, HX
   Chen, TH
   Hassan, AE
AF Zhou, Jiayuan
   Wang, Shaowei
   Zhang, Haoxiang
   Chen, Tse-Hsun (Peter)
   Hassan, Ahmed E.
TI Studying backers and hunters in bounty issue addressing process of open
   source projects
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Bounty; Open source projects; GitHub; Issue addressing
ID MOTIVATION; APACHE
AB Issue addressing is a vital task in the evolution of software projects. However, in practice, not all issues can be addressed on time. To facilitate the issue addressing process, monetary incentives (e.g., bounties) are used to attract developers to address issues. There are two types of core roles who are involved in this process: bounty backers, who propose bounties for an issue report via bounty platforms (e.g., Bountysource), and bounty hunters, who address the bounty issues and win the bounties. We wish to study the process of bounty issue addressing from the angle of two important roles (i.e., backers and hunters) and their related behaviors. With a better understanding of how they address bounty issues, stakeholders (e.g., operators and developers) of open source projects may have a reasonable estimation of what they can expect from backers and hunters. In this study, we investigate 2,955 bounty backers and 882 bounty hunters, and their associated 3,579 GitHub issue reports with 5,589 bounties that were proposed on Bountysource. We find that: 1) Overall, the value of a bounty is small (median bounty value of $20). Both individual and corporate backers prefer to support implementing new features rather than fixing bugs. Corporate backers tend to propose larger bounties and propose bounties more frequently than individual backers. 2) 85.0% of the bounty hunters addressed less than 3 bounty issues. The income of 56.7% of the bounty hunters is no more than $100 and only 2.7% of the hunters have earned more than $2,000. In addition, most of the regular hunters and big hunters are developers that made at least one commit before addressing a bounty issue. 3) The value of a bounty issue is not a statistically significant factor that attracts developers that have never made any commit before to address an issue. Based on our findings, we provide several suggestions for stakeholders of open source projects and hunters.
C1 [Zhou, Jiayuan; Zhang, Haoxiang] Huawei, Ctr Software Excellence CSE, Markham, ON, Canada.
   [Wang, Shaowei] Univ Manitoba, Dept Comp Sci, Winnipeg, MB R3T 2N2, Canada.
   [Chen, Tse-Hsun (Peter)] Concordia Univ, Software Performance Anal & Reliabil SPEAR Lab, Montreal, PQ H3G 1M8, Canada.
   [Hassan, Ahmed E.] Queens Univ, Software Anal & Intelligence Lab SAIL, Kingston, ON, Canada.
C3 Huawei Technologies; University of Manitoba; Concordia University -
   Canada; Queens University - Canada
RP Wang, SW (corresponding author), Univ Manitoba, Dept Comp Sci, Winnipeg, MB R3T 2N2, Canada.
EM jiayuan.zhou1@huawei.com; shaowei.wang@umanitoba.ca;
   haoxiang.zhang@huawei.com; peterc@encs.concordia.ca; ahmed@cs.queensu.ca
RI KHALIFA, AHMED khalifa/HKF-2246-2023
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; Chen,
   Tse-Hsun/0000-0003-4027-0905
CR Akobeng AK, 2007, ACTA PAEDIATR, V96, P644, DOI 10.1111/j.1651-2227.2006.00178.x
   Androutsellis-Theotokis Stephanos, 2010, Foundations and Trends in Technology, Information and Operations Management, V4, P187, DOI 10.1561/0200000026
   [Anonymous], 2016, ROADS BRIDGES UNSEEN
   Apple Inc, 2020, APPL SEC BOUNT
   Atiq A., 2016, INT C INF SYST ICIS, P1
   Avelino Guilherme, 2016, Proceedings of IEEE 24th International Conference on Program Comprehension (ICPC), P1
   Bergstra J, 2012, J MACH LEARN RES, V13, P281
   Bissyandé TF, 2013, P INT COMP SOFTW APP, P303, DOI 10.1109/COMPSAC.2013.55
   Izquierdo JLC, 2018, PROC INT CONF SOFTW, P3, DOI 10.1145/3183428.3183438
   Coelho J, 2018, 2018 IEEE/ACM 11TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P114, DOI 10.1145/3195836.3195848
   Comino S, 2007, RES POLICY, V36, P1575, DOI 10.1016/j.respol.2007.08.003
   Dagenais B., 2010, Proc. of the ICSE 10, P275, DOI DOI 10.1145/1806799.1806842
   Di Penta Massimiliano, 2012, P ACM SIGSOFT 20 INT, P1
   Dinnie M., 2019, PRIORITIZE FEATURE R
   Duebendorfer T, 2009, 302 ETH ZUR
   Eghbal N., 2019, HANDY GUIDE FINANCIA
   Finifter M., 2013, 22 USENIX SECURITY S, P273
   Frei S, 2009, ACM SIGCOMM COMP COM, V39, P16
   Frey B.S., 1999, Working paper/Institute for Empirical Research in Economics, P7
   HackerOne, 2018, HACKERONE 188 FASC F
   Harhoff D, 2003, RES POLICY, V32, P1753, DOI 10.1016/S0048-7333(03)00061-1
   Hata H, 2017, INT SYMP EMP SOFTWAR, P223, DOI 10.1109/ESEM.2017.34
   Kanda T, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P577, DOI 10.1109/SANER.2017.7884685
   Kochhar PS, 2014, IEEE INT C ENG COMP, P126, DOI 10.1109/ICECCS.2014.25
   Krishnamurthy S, 2006, EC OPEN SOURCE SOFTW, P165
   Krishnamurthy S, 2014, RES POLICY, V43, P632, DOI 10.1016/j.respol.2013.10.007
   Kuhn M, 2008, J STAT SOFTW, V28, P1, DOI 10.18637/jss.v028.i05
   Lakhani K. R., 2003, Why Hackers Do What They Do: Understanding Motivation and Effort in Free/Open Source Software Projects, DOI [10.2139/ssrn.443040, DOI 10.2139/SSRN]
   Lee A, 2017, PROC INT CONF SOFTW, P187, DOI 10.1109/ICSE.2017.25
   Maillart T, 2017, J CYBERSECURITY, V3, P81, DOI 10.1093/cybsec/tyx008
   Mandrekar JN, 2010, J THORAC ONCOL, V5, P1315, DOI 10.1097/JTO.0b013e3181ec173d
   Matt A., 2020, BUG BOUNTIES WONT MA
   Mirko Z., 2020, FULL TIME BUG HUNTIN
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Moore D.S., 2007, The Basic Practice of Statistics, V2
   Nakasai K, 2019, IEEE SOFTWARE, V36, P22, DOI 10.1109/MS.2018.2874568
   Rajbahadur GK, 2021, IEEE T SOFTWARE ENG, V47, P1414, DOI 10.1109/TSE.2019.2924371
   Robert L., 2019, BUG BOUNTIES CONTINU
   Roberts JA, 2006, MANAGE SCI, V52, P984, DOI 10.1287/mnsc.1060.0554
   Robles G, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P167, DOI 10.1109/MSR.2009.5069497
   Romano Jeanine, 2006, ANN M FLOR ASS I RES, V177, P34
   Shah SK, 2006, MANAGE SCI, V52, P1000, DOI 10.1287/mnsc.1060.0553
   Shaowei Wang, 2018, Empirical Software Engineering, V23, P1552, DOI 10.1007/s10664-017-9558-5
   Steinmacher I, 2014, IFIP ADV INF COMM TE, V427, P153
   Tantithamthavorn C, 2019, IEEE T SOFTWARE ENG, V45, P683, DOI 10.1109/TSE.2018.2794977
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Tom R., 2020, FIREFOXS BUG BOUNTY
   Vasilescu B, 2015, CHI 2015: PROCEEDINGS OF THE 33RD ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P3789, DOI 10.1145/2702123.2702549
   von Hippel E, 2007, IND CORP CHANGE, V16, P293, DOI 10.1093/icc/dtm005
   von Krogh G, 2012, MIS QUART, V36, P649
   Weiss M., 2011, OPEN SOURC BUS RES
   Ye YW, 2003, PROC INT CONF SOFTW, P419
   Zhao M., 2014, Proceedings of the 2014 ACM workshop on security information workers, P51, DOI [DOI 10.1145/2663887.2663906, 10.1145/2663887.2663906]
   Zhao MY, 2017, J INFORM POLICY, V7, P372, DOI 10.5325/jinfopoli.7.2017.0372
   Zhou J, 2020, IEEE T SOFTW ENG
   Zhou JY, 2020, EMPIR SOFTW ENG, V25, P139, DOI 10.1007/s10664-019-09744-3
   Zhou MH, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2876443
NR 57
TC 3
Z9 3
U1 1
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2021
VL 26
IS 4
AR 81
DI 10.1007/s10664-021-09979-z
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA SP9KQ
UT WOS:000659982100001
DA 2024-07-18
ER

PT J
AU Sharafi, Z
   Sharif, B
   Guéhéneuc, YG
   Begel, A
   Bednarik, R
   Crosby, M
AF Sharafi, Zohreh
   Sharif, Bonita
   Gueheneuc, Yann-Gael
   Begel, Andrew
   Bednarik, Roman
   Crosby, Martha
TI A practical guide on conducting eye tracking studies in software
   engineering
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Eye tracking; Practical guide; Empirical software engineering; Program
   comprehension
ID STEREOTYPE THREAT; PROGRAM COMPREHENSION; MOVEMENTS; IMPACT; TASK; CODE;
   DEVELOPERS; ALGORITHMS; EXPERTISE; PATTERN
AB For several years, the software engineering research community used eye trackers to study program comprehension, bug localization, pair programming, and other software engineering tasks. Eye trackers provide researchers with insights on software engineers' cognitive processes, data that can augment those acquired through other means, such as on-line surveys and questionnaires. While there are many ways to take advantage of eye trackers, advancing their use requires defining standards for experimental design, execution, and reporting. We begin by presenting the foundations of eye tracking to provide context and perspective. Based on previous surveys of eye tracking for programming and software engineering tasks and our collective, extensive experience with eye trackers, we discusswhenandwhyresearchers should use eye trackers as well ashowthey should use them. We compile a list of typical use cases-real and anticipated-of eye trackers, as well as metrics, visualizations, and statistical analyses to analyze and report eye-tracking data. We also discuss the pragmatics of eye tracking studies. Finally, we offer lessons learned about using eye trackers to study software engineering tasks. This paper is intended to be a one-stop resource for researchers interested in designing, executing, and reporting eye tracking studies of software engineering tasks.
C1 [Sharafi, Zohreh] Univ Michigan, Ann Arbor, MI 48109 USA.
   [Sharif, Bonita] Univ Nebraska, Lincoln, NE USA.
   [Gueheneuc, Yann-Gael] Concordia Univ, Montreal, PQ, Canada.
   [Begel, Andrew] Microsoft Res, Redmond, WA USA.
   [Bednarik, Roman] Univ Eastern Finland, Joensuu, Finland.
   [Crosby, Martha] Univ Hawaii Manoa, Honolulu, HI 96822 USA.
C3 University of Michigan System; University of Michigan; University of
   Nebraska System; University of Nebraska Lincoln; Concordia University -
   Canada; Microsoft; University of Eastern Finland; University of Hawaii
   System; University of Hawaii Manoa
RP Guéhéneuc, YG (corresponding author), Concordia Univ, Montreal, PQ, Canada.
EM zohrehsh@umich.edu; bsharif@unl.edu; yann-gael.gueheneuc@concordia.ca;
   andrew.begel@microsoft.com; roman.bednarik@uef.fi; crosby@hawaii.edu
RI Sharif, Bonita/GXZ-5409-2022; Sharafi, Zohreh/HRC-2499-2023
OI Sharif, Bonita/0000-0002-5178-7160; Crosby, Martha/0000-0002-1672-9037;
   Gueheneuc, Yann-Gael/0000-0002-4361-2563
FU US NSF [CCF 18-55756, CCF 15-53573]; NSERC; Canada Research Chair in
   Software Patterns and Patterns of Software
FX The authors would like to thank the anonymous reviewers for their
   insightful comments and suggestions. This work has been partly funded by
   the US NSF under Grant Numbers CCF 18-55756 and CCF 15-53573, as well as
   the NSERC Discovery Grant program and the Canada Research Chair in
   Software Patterns and Patterns of Software.
CR Abid NJ, 2019, ETRA 2019: 2019 ACM SYMPOSIUM ON EYE TRACKING RESEARCH & APPLICATIONS, DOI 10.1145/3314111.3319834
   Abid Nahla J., 2019, P 41 INT C SOFTW ENG
   Ali N, 2015, EMPIR SOFTW ENG, V20, P442, DOI 10.1007/s10664-014-9315-y
   Alkan S, 2007, BRIT J EDUC TECHNOL, V38, P538, DOI 10.1111/j.1467-8535.2007.00721.x
   [Anonymous], 2012, P S EYE TRACK RES AP
   [Anonymous], 2007, REAL TIME OFFLINE FI
   [Anonymous], 1999, CHI 99 EXTENDED ABST, DOI DOI 10.1145/632716.632823
   [Anonymous], 2014, EYE TRACKING USER EX
   [Anonymous], 2014, THESIS
   [Anonymous], 2002, P PROGR WORKSH PSYCH
   [Anonymous], 2010, ACM SIGGRAPH 2010 CO, DOI DOI 10.1145/1837101.1837106
   [Anonymous], P C ADV INF SYST ENG
   [Anonymous], 2012, 20 IEEE INT C PROGR
   [Anonymous], 2007, Eye tracking methodology: Theory and practice, DOI DOI 10.1007/978-3-319-57883-5
   [Anonymous], 1967, EYE MOVEMENTS VISION
   Armaly A, 2018, PROC IEEE INT CONF S, P206, DOI 10.1109/ICSME.2018.00030
   Ayres J, 2002, P 8 ACM SIGKDD INT C, V8, P429, DOI DOI 10.1145/775047.775109
   Barik T, 2017, PROC INT CONF SOFTW, P575, DOI 10.1109/ICSE.2017.59
   Bateson P, 2014, DOMESTIC CAT: THE BIOLOGY OF ITS BEHAVIOUR, 3RD EDITION, P231
   BEATTY J, 1982, PSYCHOL BULL, V91, P276, DOI 10.1037/0033-2909.91.2.276
   Bednarik R., 2006, Proceedings. ETRA 2006. Symposium on Eye Tracking Research and Applications, P125, DOI 10.1145/1117309.1117356
   Bednarik R., 2012, PROC 4 WORKSHOP EYE, P1, DOI DOI 10.1145/2401836.2401846
   Bednarik R, 2012, INT J HUM-COMPUT ST, V70, P143, DOI 10.1016/j.ijhcs.2011.09.003
   Bednarik Roman., 2007, Methods to analyze visual attention strategies: Applications in the studies of programming
   Bednarik Roman., 2005, CHI'05 Extended abstracts on human factors in computing systems, P1204, DOI DOI 10.1145/1056808.1056877
   Begel A, 2018, EYE MOVEMENTS IN PROGRAMMING (EMIP 2018), DOI 10.1145/3216723.3216727
   Binkley D, 2013, EMPIR SOFTW ENG, V18, P219, DOI 10.1007/s10664-012-9201-4
   Blascheck T, 2017, COMPUT GRAPH FORUM, V36, P260, DOI 10.1111/cgf.13079
   Blascheck T, 2019, ETRA 2019 ACM S EYE
   Bojko A., 2005, P UPA 2005 C
   Bojko A, 2009, LECT NOTES COMPUT SC, V5610, P30, DOI 10.1007/978-3-642-02574-7_4
   Brechmann, 2018, S EMP SOFTW ENG MEAS
   Buse RPL, 2011, OOPSLA 11: PROCEEDINGS OF THE 2011 ACM INTERNATIONAL CONFERENCE ON OBJECT ORIENTED PROGRAMMING SYSTEMS LANGUAGES AND APPLICATIONS, P643
   Busjahn T, 2015, P 22 INT C PROGR COM
   Busjahn T., 2014, ICER 2014 P 10 ANN I, P3, DOI DOI 10.1145/2632320.2632344
   Busjahn Teresa, 2011, P 11 KOL CALL INT C, p1s9
   Buxton RB, 2004, NEUROIMAGE, V23, pS220, DOI 10.1016/j.neuroimage.2004.07.013
   Cagiltay NE, 2013, J SYST SOFTWARE, V86, P2184, DOI 10.1016/j.jss.2013.03.106
   Clark B, 2017, 2017 IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT 2017), P22, DOI 10.1109/VISSOFT.2017.30
   Cristino F, 2010, BEHAV RES METHODS, V42, P692, DOI 10.3758/BRM.42.3.692
   CROSBY ME, 1990, COMPUTER, V23, P24, DOI 10.1109/2.48797
   Dalmaijer ES, 2014, BEHAV RES METHODS, V46, P913, DOI 10.3758/s13428-013-0422-2
   De Smet B, 2014, SCI COMPUT PROGRAM, V79, P260, DOI 10.1016/j.scico.2012.01.004
   Divjak M, 2008, 1 INT WORKSH TRACK H, P99
   Duchowski AT, 2002, BEHAV RES METH INS C, V34, P455, DOI 10.3758/BF03195475
   Fakhoury S, 2018, INT C PROGRAM COMPRE, P286, DOI 10.1145/3196321.3196347
   Farnsworth Bryan, 2019, 10 FREE EYE TRACKING
   Fritz T, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P402, DOI 10.1145/2568225.2568266
   Godfroid A, 2019, EYE TRACKING SECOND
   Goldberg J. H., 2002, Proceedings ETRA 2002. Eye Tracking Research and Applications Symposium, P51, DOI 10.1145/507072.507082
   Goldberg JH, 1999, INT J IND ERGONOM, V24, P631, DOI 10.1016/S0169-8141(98)00068-7
   Goldberg Joseph H, 2010, P 3 BELIV 10 WORKSHO, P71
   Grace R, 1998, 17 DASC AIAA IEEE SA, V2
   Guarnera DT, 2018, P 2018 ACM S EYE TRA, P105
   Gueheneuc Y.-G., 2006, P 2006 C CTR ADV STU
   Gueheneuc Y.-G., 2006, Proceedings of the 2006 conference of the Center for Advanced Studies on Collaborative research, P1, DOI DOI 10.1145/1188966.1188968
   Haiduc S., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P35, DOI 10.1109/WCRE.2010.13
   Haji-Abolhassani A, 2014, VISION RES, V103, P127, DOI 10.1016/j.visres.2014.08.014
   Hansen DW, 2010, IEEE T PATTERN ANAL, V32, P478, DOI 10.1109/TPAMI.2009.30
   HARTRIDGE H, 1948, BRIT J OPHTHALMOL, V32, P581, DOI 10.1136/bjo.32.9.581
   Hejmady P., 2012, P 2012 S EYE TRACKIN, P197, DOI [10.1145/2168556, DOI 10.1145/2168556]
   Henderson JM, 2008, PSYCHON B REV, V15, P566, DOI 10.3758/PBR.15.3.566
   Huey E., 1908, PSYCHOL PEDAGOGY REA
   Jacob RJK, 2003, MIND'S EYE: COGNITIVE AND APPLIED ASPECTS OF EYE MOVEMENT RESEARCH, P573, DOI 10.1016/B978-044451020-4/50031-1
   Jbara A, 2017, EMPIR SOFTW ENG, V22, P1440, DOI 10.1007/s10664-016-9477-x
   Jeanmart S, 2009, INT SYMP EMP SOFTWAR, P69, DOI 10.1109/ESEM.2009.5316015
   JUST MA, 1980, PSYCHOL REV, V87, P329, DOI 10.1037/0033-295X.87.4.329
   Kenneth HolmqvistMarcus Nystrom., 2011, Eye Tracking: A Comprehensive Guide to Methods and Measures
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kitchenham BA, 2004, TRSE0401 NAT ICT AUS
   Ko AJ, 2015, EMPIR SOFTW ENG, V20, P110, DOI 10.1007/s10664-013-9279-3
   Levenshtein V. I., 1966, SOV PHYS DOKL, V10, P707
   Lung J, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P191, DOI 10.1145/1368088.1368115
   MACKWORTH NH, 1962, J OPT SOC AM, V52, P713, DOI 10.1364/JOSA.52.000713
   McChesney I, 2019, EMPIR SOFTW ENG, V24, P1109, DOI 10.1007/s10664-018-9649-y
   Murphy GC, 2006, IEEE SOFTWARE, V23, P76, DOI 10.1109/MS.2006.105
   Nevalainen S., 2004, Proceedings of the 16th Annual Workshop of the Psychology of Programming Interest Group, P151
   Obaidellah U, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3145904
   Orlov PA, 2017, PERCEPTION, V46, P541, DOI 10.1177/0301006616675629
   Peitek N., 2018, IEEE T SOFTWARE ENG, P1
   Pernice K., 2009, Nielsen Norman Group Technical Report
   Peterson C., 2019, EMIP 2019 6 INT WORK
   Pfleeger S., 1995, ACM SIGSOFT, V20, P14
   Poole A., 2005, ENCY HUMAN COMPUTER
   Porras GC, 2010, EMPIR SOFTW ENG, V15, P493, DOI 10.1007/s10664-009-9125-9
   Privitera CM, 2000, IEEE T PATTERN ANAL, V22, P970, DOI 10.1109/34.877520
   Rayner K, 1998, PSYCHOL BULL, V124, P372, DOI 10.1037/0033-2909.124.3.372
   RAYNER K, 1978, PSYCHOL BULL, V85, P618, DOI 10.1037/0033-2909.85.3.618
   Rodeghero P, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P390, DOI 10.1145/2568225.2568247
   Ross J., 2009, Eyetracking: Is It Worth It? UX Matters - Insights and Inspiration for the User Experience Community
   Salvucci DD, 2000, 2000 S EYE TRACKING, P71, DOI [10.1145/355017.355028, DOI 10.1145/355017.355028]
   Seolhwa Lee, 2018, Cluster Computing, V21, P1097, DOI 10.1007/s10586-017-0746-2
   SHACKEL B, 1960, J OPT SOC AM, V50, P763, DOI 10.1364/JOSA.50.000763
   Shaffer TR, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P954, DOI 10.1145/2786805.2803188
   Shapiro JR, 2007, PERS SOC PSYCHOL REV, V11, P107, DOI 10.1177/1088868306294790
   Sharafi Z, 2015, INFORM SOFTWARE TECH
   Sharafi Z, 2015, P 22 AS PAC SOFTW EN
   Sharafi Z, 2013, CONF PROC INT SYMP C, P33, DOI 10.1109/ICPC.2013.6613831
   Shard B., 2012, P S EYE TRACK RES AP, P381
   Sharif Bonita, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P196, DOI 10.1109/ICPC.2010.41
   Sharif B., 2013, VISSOFT, P1
   Sharma B., 2010, P 26 IEEE INT C SOFT, P1, DOI DOI 10.1109/ICSM.2010.5609582
   Siegmund J, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P9, DOI 10.1109/ICSE.2015.24
   Soh Z., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P163
   Soh Z, 2018, EMPIR SOFTW ENG, V23, P645, DOI 10.1007/s10664-017-9529-x
   Soh Z, 2013, WORK CONF REVERSE EN, P391, DOI 10.1109/WCRE.2013.6671314
   Spencer SJ, 1999, J EXP SOC PSYCHOL, V35, P4, DOI 10.1006/jesp.1998.1373
   STEELE CM, 1995, J PERS SOC PSYCHOL, V69, P797, DOI 10.1037/0022-3514.69.5.797
   Stein Randy., 2004, Proceedings of the 6th international conference on Multimodal interfaces, P9, DOI DOI 10.1145/1027933.1027936
   Strandvall T, 2009, LECT NOTES COMPUT SC, V5727, P936, DOI 10.1007/978-3-642-03658-3_119
   Uwano H., 2005, Eye Tracking Research and Applications Symposium (ETRA), V2005, P133
   Vrzakova H, 2019, DISSERTATIONS FOREST
   Wohlin C., 2012, Experimentation in Software Engineering
   Yusuf S, 2007, INT C PROGRAM COMPRE, P113
   Zutao Zhang, 2010, Journal of Control Theory and Applications, V8, P181, DOI 10.1007/s11768-010-8043-0
NR 115
TC 48
Z9 51
U1 3
U2 46
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2020
VL 25
IS 5
BP 3128
EP 3174
DI 10.1007/s10664-020-09829-4
EA JUN 2020
PG 47
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA NJ1FD
UT WOS:000539867300001
DA 2024-07-18
ER

PT J
AU Das, T
   Di Penta, M
   Malavolta, I
AF Das, Teerath
   Di Penta, Massimiliano
   Malavolta, Ivano
TI Characterizing the evolution of statically-detectable performance issues
   of Android apps
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Android; Mobile performance issues; Mining software repositories;
   Empirical study
ID CODE; SMELLS
AB Mobile apps are playing a major role in our everyday life, and they are tending to become more and more complex and resource demanding. Because of that, performance issues may occur, disrupting the user experience or, even worse, preventing an effective use of the app. Ultimately, such problems can cause bad reviews and influence the app success. Developers deal with performance issues thorough dynamic analysis, i.e., performance testing and profiler tools, albeit static analysis tools can be a valid, relatively inexpensive complement for the early detection of some such issues. This paper empirically investigates how potential performance issues identified by a popular static analysis tool - Android Lint - are actually resolved in 316 open source Android apps among 724 apps we analyzed. More specifically, the study traces the issues detected by Android Lint since their introduction until they resolved, with the aim of studying (i) the overall evolution of performance issues in apps, (ii) the proportion of issues being resolved, as well as (iii) the distribution of their survival time, and (iv) the extent to which issue resolution are documented by developers in commit messages. Results indicate how some issues, especially related to the lack of resource recycle, tend to be more frequent than others. Also, while some issues, primarily of algorithmic nature, tend to be resolved quickly through well-known patterns, others tend to stay in the app longer, or not to be resolved at all. Finally, we found how only 10% of the issue resolution is documented in commit messages.
C1 [Das, Teerath] Gran Sasso Sci Inst, Comp Sci, Laquila, Italy.
   [Di Penta, Massimiliano] Univ Sannio, Dept Engn, Benevento, Italy.
   [Malavolta, Ivano] Vrije Univ Amsterdam, Dept Comp Sci, Amsterdam, Netherlands.
C3 Gran Sasso Science Institute (GSSI); University of Sannio; Vrije
   Universiteit Amsterdam
RP Malavolta, I (corresponding author), Vrije Univ Amsterdam, Dept Comp Sci, Amsterdam, Netherlands.
EM teerath.das@gssi.it; dipenta@unisannio.it; i.malavolta@vu.nl
RI Di Penta, Massimiliano/AAF-9656-2021; Malavolta, Ivano/E-9018-2017
OI Malavolta, Ivano/0000-0001-5773-8346
CR Ahmed TM, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P1, DOI [10.1145/2901739.2901774, 10.1109/MSR.2016.011]
   [Anonymous], 2014, SOFTWARETECHNIK TREN
   [Anonymous], 2007, GUIDE ADV EMPIRICAL
   [Anonymous], 2017, INFORM SOFTWARE TECH
   [Anonymous], 2012, EXPT SOFTWARE ENG CO
   [Anonymous], 2015, Principles of program analysis
   Asaduzzaman M, 2013, PROC IEEE INT CONF S, P484, DOI 10.1109/ICSM.2013.78
   Asaduzzaman M, 2013, PROC IEEE INT CONF S, P230, DOI 10.1109/ICSM.2013.34
   Ayewah N, 2008, IEEE SOFTWARE, V25, P22, DOI 10.1109/MS.2008.130
   Basili V.R., 1994, Encyclopedia of Software Engineering, P528532
   Bessey A, 2010, COMMUN ACM, V53, P66, DOI 10.1145/1646353.1646374
   Chatzigeorgiou A, 2014, INNOV SYST SOFTW ENG, V10, P3, DOI 10.1007/s11334-013-0205-z
   COHEN J, 1968, PSYCHOL BULL, V70, P426, DOI 10.1037/h0026714
   Couto C., 2011, SOFTW QUAL J, V21, P241, DOI [DOI 10.1007/S11219-011-9172-5, DOI 10.1007/s11219-011-9172-5]
   Cruz Luis, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P46, DOI 10.1109/MOBILESoft.2017.19
   Cruz L, 2018, USING AUTOMATIC REFA
   Das T, 2016, PROC IEEE INT CONF S, P443, DOI 10.1109/ICSME.2016.49
   Di Penta M, 2009, INFORM SOFTWARE TECH, V51, P1469, DOI 10.1016/j.infsof.2009.04.013
   DUNN OJ, 1964, TECHNOMETRICS, V6, P241, DOI 10.2307/1266041
   Foo KC, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P159, DOI 10.1109/ICSE.2015.144
   Gómez M, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P13, DOI [10.1145/2901739.2901747, 10.1109/MSR.2016.012]
   Habchi S, 2018, ASE18 P 33 IEEE ACM, V11
   Hassan F, 2017, INT SYMP EMP SOFTWAR, P38, DOI 10.1109/ESEM.2017.11
   Hecht G, 2015, IEEE INT CONF AUTOM, P236, DOI 10.1109/ASE.2015.46
   Hecht G, 2015, 2ND ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS MOBILESOFT 2015, P148, DOI 10.1109/MobileSoft.2015.38
   HOLM S, 1979, SCAND J STAT, V6, P65
   Huchard Marianne, 2018, P 33 ACM IEEE INT C
   Joorabchi Mona Erfani, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P15, DOI 10.1109/ESEM.2013.9
   Kalliamvakou E, 2016, EMPIR SOFTW ENG, V21, P2035, DOI 10.1007/s10664-015-9393-5
   Kim S., 2007, EUROPEAN SOFTWARE EN, P45
   KRUSKAL WH, 1952, J AM STAT ASSOC, V47, P583, DOI 10.1080/01621459.1952.10483441
   Leffingwell D., 2010, Agile Software Requirements: Lean Requirements Practices for Teams, Programs, and the Enterprise
   Lidwell William, 2010, Universal Principles of Design, Revised and Updated: 125 Ways to Enhance Usability, Influence Perception, Increase Appeal, Make Better Design Decisions, and Teach through Design
   Linares-Vásquez M, 2015, PROC IEEE INT CONF S, P352, DOI 10.1109/ICSM.2015.7332486
   Liu YP, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1013, DOI 10.1145/2568225.2568229
   Malik H, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1012, DOI 10.1109/ICSE.2013.6606651
   Munson JC, 1998, PROC IEEE INT CONF S, P24, DOI 10.1109/ICSM.1998.738486
   Nistor Adrian., 2014, ISSTA'14, P282, DOI DOI 10.1145/2610384.2610410
   Palomba F, 2018, J SYST SOFTWARE, V137, P143, DOI 10.1016/j.jss.2017.11.043
   Palomba F, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P487, DOI 10.1109/SANER.2017.7884659
   Pascarella L, 2018, IEEE ACM INT C MOB S
   Qian Feng, 2011, P 9 INT C MOB SYST A, P321, DOI DOI 10.1145/1999995.2000026
   Ravindranath L, 2012, P 10 USENIX C OP SYS, P107, DOI [DOI 10.5555/2387880.2387891, 10.5555/2387880.2387891]
   Rosenberg J., 2008, Guide to Advanced Empirical Software Engineering, P155
   Sadowski C, 2018, COMMUN ACM, V61, P58, DOI 10.1145/3188720
   Spacco J., 2006, PROC 2006 INT WORK M, P133
   Spencer D., 2009, CARD SORTING DESIGNI
   Sulir M, 2016, PLATEAU'16: PROCEEDINGS OF THE 7TH INTERNATIONAL WORKSHOP ON EVALUATION AND USABILITY OF PROGRAMMING LANGUAGES AND TOOLS, P17, DOI 10.1145/3001878.3001882
   Tufano M, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3340544
   Tufano M, 2017, IEEE T SOFTWARE ENG, V43, P1063, DOI 10.1109/TSE.2017.2653105
   Wedyan F, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P141, DOI 10.1109/ICST.2009.21
   Zaman S., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P199, DOI 10.1109/MSR.2012.6224281
NR 52
TC 6
Z9 6
U1 2
U2 7
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2020
VL 25
IS 4
BP 2748
EP 2808
DI 10.1007/s10664-019-09798-3
EA MAY 2020
PG 61
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MD8CQ
UT WOS:000530270100001
OA Green Published
DA 2024-07-18
ER

PT J
AU Ranganath, VP
   Mitra, J
AF Ranganath, Venkatesh-Prasad
   Mitra, Joydeep
TI Are free Android app security analysis tools effective in detecting
   known vulnerabilities?
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Empirical evaluation; Effectiveness; Security analysis tools;
   Vulnerabilities; Android
AB Increasing interest in securing the Android ecosystem has spawned numerous efforts to assist app developers in building secure apps. These efforts have resulted in tools and techniques capable of detecting vulnerabilities and malicious behaviors in apps. However, there has been no evaluation of the effectiveness of these tools and techniques in detecting known vulnerabilities. The absence of such evaluations puts app developers at a disadvantage when choosing security analysis tools to secure their apps. In this regard, we evaluated the effectiveness of vulnerability detection tools for Android apps. We reviewed 64 tools and empirically evaluated 14 vulnerability detection tools against 42 known unique vulnerabilities captured by Ghera benchmarks, which are composed of both vulnerable and secure apps. Of the 20 observations from the evaluation, the main observation is existing vulnerability detection tools for Android apps are very limited in their ability to detect known vulnerabilities - all of the evaluated tools together could only detect 30 of the 42 known unique vulnerabilities. More effort is required if security analysis tools are to help developers build secure apps. We hope the observations from this evaluation will help app developers choose appropriate security analysis tools and persuade tool developers and researchers to identify and address limitations in their tools and techniques. We also hope this evaluation will catalyze or spark a conversation in the software engineering and security communities to require a more rigorous and explicit evaluation of security analysis tools and techniques.
C1 [Ranganath, Venkatesh-Prasad; Mitra, Joydeep] Kansas State Univ, Manhattan, KS USA.
C3 Kansas State University
RP Ranganath, VP (corresponding author), Kansas State Univ, Manhattan, KS USA.
EM rvprasad@k-state.edu
RI Ranganath, Venkatesh-Prasad/J-5238-2014
OI Ranganath, Venkatesh-Prasad/0000-0001-7684-6086; Mitra,
   Joydeep/0000-0001-7189-4396
CR Abraham Ajin., 2015, Mobile Security Framework
   Agrawal Aditya., 2015, Mobile Security Wiki
   Allen Booz., 2018, AppCritique: Online Vulnerability Detection Tool
   Allix K, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P468, DOI [10.1145/2901739.2903508, 10.1109/MSR.2016.056]
   Anandan S, 2012, MATER SCI FORUM, V712, P1, DOI 10.4028/www.scientific.net/MSF.712.1
   [Anonymous], 2014, P 21 ANN NETW DISTR
   [Anonymous], 2009, TECH REP
   [Anonymous], US C SEC S
   Antunes Nuno, 2010, 2010 IEEE International Conference on Web Services (ICWS), P203, DOI 10.1109/ICWS.2010.76
   Arzt S, 2014, ACM SIGPLAN NOTICES, V49, P259, DOI [10.1145/2666356.2594299, 10.1145/2594291.2594299]
   Au Kathy Wain Yee, 2012, P 2012 ACM C COMP CO, P217
   Backes SRT GmbH, 2014, SRT APPGUARD
   Bagheri H, 2015, IEEE T SOFTWARE ENG, V41, P866, DOI 10.1109/TSE.2015.2419611
   Bhatia Ashish., 2014, A collection of android security related resources
   Bosu A, 2017, DIALDROIDBENCH
   Bosu AS, 2017, PROCEEDINGS OF THE 2017 ACM ASIA CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (ASIA CCS'17), P71, DOI 10.1145/3052973.3053004
   Bugiel S, 2013, 22 USENIX SEC S USEN
   Calzavara S, 2016, 1ST IEEE EUROPEAN SYMPOSIUM ON SECURITY AND PRIVACY, P47, DOI 10.1109/EuroSP.2016.16
   Chin E., 2011, P 9 INT C MOB SYST A, P239, DOI DOI 10.1145/1999995.2000018
   Chin E, 2014, LECT NOTES COMPUT SC, V8267, P138, DOI 10.1007/978-3-319-05149-9_9
   Cuckoo, 2015, CUCKOODROID AUT ANDR
   Debize Thomas., 2012, AndroWarn: Yet Another Static Code Analyzer for malicious Android applications
   Deshotels L., 2014, Proceedings of ACM SIGPLAN on Program Protection and Reverse Engineering Workshop 2014, P3, DOI [10.1145/2556464.2556467, DOI 10.1145/2556464.2556467, 10.1145/2556464. 2556467]
   DevKnox, 2016, DEVKNOX SEC PLUG AND
   DroidBench, 2013, DROIDBENCH MICR SUIT
   Nguyen DC, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1065, DOI 10.1145/3133956.3133977
   Egele M., 2013, P 2013 ACM SIGSAC C, P73
   Enck William., 2010, Proceedings of the USENIX Symposium on Operating Systems Design and Implementation (OSDI), P393
   Ernst MD, 2014, CCS'14: PROCEEDINGS OF THE 21ST ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1092, DOI 10.1145/2660267.2660343
   Fahl S., 2012, ACM CCS 12, P50, DOI DOI 10.1145/2382196.2382205
   Garcia J, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P661, DOI 10.1145/3106237.3106286
   Google Inc, 2018, ANDR DEV DOC BIND
   Google Inc, 2018, ANDR DEV DOC CONT PR
   Google Inc, 2018, ANDR SEC TIPS
   Google Inc, 2017, ANDR INT CHROM
   Gordon MI, 2015, P 22 ANN NETW DISTR
   Gray J., 1992, The benchmark handbook for database and transaction systems
   Green M, 2016, IEEE SECUR PRIV, V14, P40, DOI 10.1109/MSP.2016.111
   IBM, 2018, IBM APP SCAN
   Jia YJ, 2017, 2017 IEEE EUROPEAN SYMPOSIUM ON SECURITY AND PRIVACY (EUROS&P), P190, DOI 10.1109/EuroSP.2017.44
   Keen T, 2016, JOINT ADV APPL DEF A
   Klieber W, 2014, P 3 ACM SIGPLAN INT
   Li L, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P280, DOI 10.1109/ICSE.2015.48
   Lin YC, 2015, ANDROBUGS FRAMEWORK
   LinkedIn, 2015, QUICK ANDR REV KIT
   Mitra Joydeep, 2017, P 13 INT C PRED MOD, P43, DOI DOI 10.1145/3127005.3127010
   Mitre Corporation, 2017, COMM VULN EXP
   MWR Labs, 2012, DROZ
   Nadkarni A, 2016, PROCEEDINGS OF THE 25TH USENIX SECURITY SYMPOSIUM, P1119
   Pauck F, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P331, DOI 10.1145/3236024.3236029
   Powers DMW, 2020, J MACH LEARN TECHNOL, P37, DOI DOI 10.9735/2229-3981
   Reaves B, 2016, ACM COMPUT SURV, V49, DOI 10.1145/2996358
   Ren CG, 2015, PROCEEDINGS OF THE 24TH USENIX SECURITY SYMPOSIUM, P945
   Rinaudo J, 2016, MARVIN STATIC ANAL
   Rogue Wave Software, 2017, KLOCW
   Ryohei K, 2014, CVE20145319
   Ryoji T, 2014, CVE20140806
   Sadeghi A, 2017, IEEE T SOFTWARE ENG, V43, P492, DOI 10.1109/TSE.2016.2615307
   Satoru T, 2014, CVE20141977
   Shen F., 2014, P 29 ACMIEEE INT C A, P515, DOI DOI 10.1145/2642937.2643018
   Sufatrio, 2015, ACM COMPUT SURV, V47, DOI 10.1145/2733306
   Tendulkar V, 2014, APPL PACKAGE CONFIGU
   van der Veen V, 2013, TRACEDROID
   Wang T, 2014, CVE20148609
   Wang T, 2014, CVE20148507
   Wei F, 2017, ICC BENCH
   Wei FG, 2018, ACM T PRIV SECUR, V21, DOI 10.1145/3183575
   Wei FG, 2014, CCS'14: PROCEEDINGS OF THE 21ST ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1329, DOI 10.1145/2660267.2660357
   Yu D, 2014, CVE20141566
   Zhauniarovich Y., 2015, P 5 ACM C DATA APPL, P37, DOI DOI 10.1145/2699026.2699105
   Zhou YJ, 2012, P IEEE S SECUR PRIV, P95, DOI 10.1109/SP.2012.16
NR 71
TC 18
Z9 20
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN
PY 2020
VL 25
IS 1
BP 178
EP 219
DI 10.1007/s10664-019-09749-y
PG 42
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KP0WS
UT WOS:000515965100005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Zhou, JY
   Wang, SW
   Bezemer, CP
   Hassan, AE
AF Zhou, Jiayuan
   Wang, Shaowei
   Bezemer, Cor-Paul
   Hassan, Ahmed E.
TI Bounties on technical Q&A sites: a case study of Stack Overflow bounties
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Stack Overflow; Question and answer sites; Bounty; Empirical study;
   Incentive system
ID TAG RECOMMENDATION SYSTEM
AB Technical question and answer (Q&A) websites provide a platform for developers to communicate with each other by asking and answering questions. Stack Overflow is the most prominent of such websites. With the rapidly increasing number of questions on Stack Overflow, it is becoming difficult to get an answer to all questions and as a result, millions of questions on Stack Overflow remain unsolved. In an attempt to improve the visibility of unsolved questions, Stack Overflow introduced a bounty system to motivate users to solve such questions. In this bounty system, users can offer reputation points in an effort to encourage users to answer their question. In this paper, we study 129,202 bounty questions that were proposed by 61,824 bounty backers. We observe that bounty questions have a higher solving-likelihood than non-bounty questions. This is particularly true for long-standing unsolved questions. For example, questions that were unsolved for 100 days for which a bounty is proposed are more likely to be solved (55%) than those without bounties (1.7%). In addition, we studied the factors that are important for the solving-likelihood and solving-time of a bounty question. We found that: (1) Questions are likely to attract more traffic after receiving a bounty than non-bounty questions. (2) Bounties work particularly well in very large communities with a relatively low question solving-likelihood. (3) High-valued bounties are associated with a higher solving-likelihood, but we did not observe a likelihood for expedited solutions. Our study shows that while bounties are not a silver bullet for getting a question solved, they are associated with a higher solving-likelihood of a question in most cases. As questions that are still unsolved after two days hardly receive any traffic, we recommend that Stack Overflow users propose a bounty as soon as possible after those two days for the bounty to have the highest impact.
C1 [Zhou, Jiayuan; Wang, Shaowei; Hassan, Ahmed E.] Queen's Univ, Intelligence Lab, Software Anal, SAIL, Kingston, ON, Canada.
   [Bezemer, Cor-Paul] Univ Alberta, Dept Elect, Comp Engn, Edmonton, AB, Canada.
C3 University of Alberta
RP Wang, SW (corresponding author), Queen's Univ, Intelligence Lab, Software Anal, SAIL, Kingston, ON, Canada.
EM shaowei@cs.queensu.ca
RI KHALIFA, AHMED khalifa/HKF-2246-2023
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; Bezemer,
   Cor-Paul/0000-0002-0474-5718
CR Ahasanuzzaman M, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P244, DOI 10.1109/SANER.2018.8330213
   Anderson Ashton, 2012, P 18 ACM SIGKDD INT, DOI DOI 10.1145/2339530.2339665
   Anderson DE, 2013, VETERINARY TECHNIQUES FOR LLAMAS AND ALPACAS, P95
   [Anonymous], 2002, Stat. Methods Inter-Rater Reliab. Assess. Ser.
   BAUER DF, 1972, J AM STAT ASSOC, V67, P687, DOI 10.2307/2284469
   Bonferroni C.E., 1936, Pubblicazioni del R Istituto Superiore di Scienze Economiche e Commericiali diFirenze, V8, P3
   Cavusoglu H., 2015, P ACM C COMPUTER SUP, V2015, P171, DOI DOI 10.1145/2685553.2698999
   Chen C., 2018, P ACM HUM COMP INT C, V2, P33
   Chen H, 2014, FIFTH INTERNATIONAL CONFERENCE ON INTELLIGENT CONTROL AND INFORMATION PROCESSING (ICICIP), P5
   Chunyang Chen, 2017, Proceedings of the ACM on Human-Computer Interaction, V1, DOI 10.1145/3134667
   EFRON B, 1986, J AM STAT ASSOC, V81, P461, DOI 10.2307/2289236
   FARRAR DE, 1967, REV ECON STAT, V49, P92, DOI 10.2307/1937887
   Finifter M., 2013, 22 USENIX SECURITY S, P273
   Ford D, 2018, P 2018 CHI C HUM FAC, P608
   Hanrahan BV, 2012, P ACM 2012 C COMP SU, P91, DOI DOI 10.1145/2141512.2141550
   Harrell Jr E, 2006, REGRESSION MODELING
   Hassan AE., 2018, IEEE Transactions on Software Engineering
   Hata H, 2017, INT SYMP EMP SOFTWAR, P223, DOI 10.1109/ESEM.2017.34
   Hsieh G, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P305
   Jan S. TK, 2017, ARXIV170301333
   Kanda T, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P577, DOI 10.1109/SANER.2017.7884685
   Krishnamurthy S, 2006, EC OPEN SOURCE SOFTW, P165
   Liu J, 2018, AUTOMAT SOFTW ENG, V25, P675, DOI 10.1007/s10515-018-0239-4
   Long J.D., 2003, Handbook of psychology
   Maillart T, 2017, J CYBERSECURITY, V3, P81, DOI 10.1093/cybsec/tyx008
   McIntosh S, 2016, EMPIR SOFTW ENG, V21, P2146, DOI 10.1007/s10664-015-9381-9
   Munaiah N, 2016, SPRO'16: PROCEEDINGS OF THE 2016 ACM WORKSHOP ON SOFTWARE PROTECTION, P3, DOI 10.1145/2995306.2995311
   Nakasai K, 2018, IEEE SOFTWARE
   Ponzanelli L, 2014, PROC IEEE INT CONF S, P541, DOI 10.1109/ICSME.2014.90
   Rajbahadur GK, 2017, IEEE WORK CONF MIN S, P135, DOI 10.1109/MSR.2017.4
   Romano J, 2006, ANN M FLOR ASS I RES, P1
   Srba I, 2016, IEEE SOFTWARE, V33, P80, DOI 10.1109/MS.2016.34
   Stack Overflow, 2019, STACK OV US PRIV
   Tantithamthavorn C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P286, DOI 10.1145/3183519.3183547
   Thongtanunam P, 2016, PROC INT CONF SOFTW, P1039, DOI 10.1145/2884781.2884852
   Tian Y, 2015, PROC IEEE INT CONF S, P301, DOI 10.1109/ICSM.2015.7332476
   Treude C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P804, DOI 10.1145/1985793.1985907
   Wang SW, 2018, EMPIR SOFTW ENG, V23, P1552, DOI 10.1007/s10664-017-9558-5
   Wang SW, 2018, EMPIR SOFTW ENG, V23, P800, DOI 10.1007/s10664-017-9533-1
   Wang SW, 2014, PROC IEEE INT CONF S, P291, DOI 10.1109/ICSME.2014.51
   Xia X, 2013, P 10 WORK C MIN SOFT
   Yu W, 2018, INT CONF COMPUT NETW, P637, DOI 10.1109/ICCNC.2018.8390397
   Zhang H., 2019, IEEE T SOFTWARE ENG
   Zhao MY, 2017, J INFORM POLICY, V7, P372, DOI 10.5325/jinfopoli.7.2017.0372
   Zhou J, 2019, ARXIV190402724
   Zhou J, 2019, SUPPLEMENTARY MAT OU
NR 46
TC 21
Z9 24
U1 0
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN
PY 2020
VL 25
IS 1
BP 139
EP 177
DI 10.1007/s10664-019-09744-3
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KP0WS
UT WOS:000515965100004
DA 2024-07-18
ER

PT J
AU Afjehei, SS
   Chen, TH
   Tsantalis, N
AF Afjehei, Sara Seif
   Chen, Tse-Hsun (Peter)
   Tsantalis, Nikolaos
TI iPerfDetector: Characterizing and detecting performance anti-patterns in
   iOS applications
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE iOS apps; Performance; Anti-pattern detection; Empirical study;
   Refactoring
ID IMPACT
AB Performance issues in mobile applications (i.e., apps) often have a direct impact on the user experience. However, due to limited testing resources and fast-paced software development cycles, many performance issues remain undiscovered when the apps are released. As found by a prior study, these performance issues are one of the most common complaints that app users have. Unfortunately, there is a limited support to help developers avoid or detect performance issues in mobile apps. In this paper, we conduct an empirical study on performance issues in iOS apps written in Swift language. To the best of our knowledge, this is the first study on performance issues of apps on the iOS platform. We manually studied 225 performance issues that are collected from four open source iOS apps. We found that most performance issues in iOS apps are related to inefficient UI design, memory issues, and inefficient thread handling. We also manually uncovered four performance anti-patterns that recurred in the studied issue reports. To help developers avoid these performance anti-patterns in the code, we implemented a static analysis tool called iPerfDetector. We evaluated iPerfDetector on eight open source and three commercial apps. iPerfDetector successfully detected 34 performance anti-pattern instances in the studied apps, where 31 of them are already confirmed and accepted by developers as potential performance issues. Our case study on the performance impact of the anti-patterns shows that fixing the anti-pattern may improve the performance (i.e., response time, GPU, or CPU) of the workload by up to 80%.
C1 [Afjehei, Sara Seif; Chen, Tse-Hsun (Peter)] Concordia Univ, Software PErformance Anal & Reliabil SPEAR Lab, Dept Software Engn & Comp Sci, Montreal, PQ, Canada.
   [Tsantalis, Nikolaos] Concordia Univ, Dept Software Engn & Comp Sci, Montreal, PQ, Canada.
C3 Concordia University - Canada; Concordia University - Canada
RP Chen, TH (corresponding author), Concordia Univ, Software PErformance Anal & Reliabil SPEAR Lab, Dept Software Engn & Comp Sci, Montreal, PQ, Canada.
EM seifaf@encs.concordia.ca; peterc@encs.concordia.ca;
   tsantalis@encs.concordia.ca
RI Tsantalis, Nikolaos/AAR-7845-2020
OI Tsantalis, Nikolaos/0000-0003-2508-3845; Chen,
   Tse-Hsun/0000-0003-4027-0905
CR Afjehei SS, 2018, IOS PERF ISS REP
   [Anonymous], 2011, P 10 ACM WORKSH HOT
   [Anonymous], 2015, Medium
   Apple, 2018, APPL UIKIT
   Apple, 2015, MOR COR DAT CONC
   Apple, 2018, MON YOUR APPS GRAPH
   Apple, 2018, INSTRUMENTS
   Apple, 2018, APPL GUID SWIFT PROG
   Apple, 2017, NSMAN PROGR GUID
   Apple, 2017, APPL THREAD PROGR GU
   Apple, 2018, US COR DAT BACKGR
   Apple, 2018, MAK COR DAT YOUR MOD
   Apple, 2012, PRACT MEM MAN
   Apple, 2018, MODEL VIEW CONTROLLE
   Cassee N, 2018, 15 INT C MIN SOFTW R
   Chen TH, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P243, DOI 10.1109/ICSE-SEIP.2017.26
   Chen TH, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P71, DOI 10.1145/2889160.2889228
   Chen TH, 2016, IEEE T SOFTWARE ENG, V42, P1148, DOI 10.1109/TSE.2016.2553039
   Chen TH, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1001, DOI 10.1145/2568225.2568259
   Chowdhury S, 2018, EMPIR SOFTW ENG, V23, P1422, DOI 10.1007/s10664-017-9545-x
   Citizens Equal, 2016, Medium.15 June
   Cruz Luis, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P46, DOI 10.1109/MOBILESoft.2017.19
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Github, 2018, TREND SWIFT PROJ GIT
   Gottschalk Marion., 2014, EnviroInfo, P437
   Grechanik M, 2012, PROC INT CONF SOFTW, P156, DOI 10.1109/ICSE.2012.6227197
   Guide ACDP, 2017, COR DAT PROGR GUID
   Habchi Sarra, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P110, DOI 10.1109/MOBILESoft.2017.11
   Hecht G, 2016, 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2016), P59, DOI [10.1145/2897073.2897100, 10.1109/MobileSoft.2016.030]
   Hu H, 2018, EMPIR SOFTW ENG
   Jiang ZM, 2008, PROC IEEE INT CONF S, P307, DOI 10.1109/ICSM.2008.4658079
   Jin GL, 2012, ACM SIGPLAN NOTICES, V47, P77, DOI 10.1145/2345156.2254075
   Jin Guoliang, 2012, P 33 ACM SIGPLAN C P
   Jindal A., 2013, P WORKSHOP POWER AWA, P1
   Khalid H, 2015, IEEE SOFTWARE, V32, P70, DOI 10.1109/MS.2014.50
   Lin Y, 2015, IEEE INT CONF AUTOM, P224, DOI 10.1109/ASE.2015.50
   Liu YP, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1013, DOI 10.1145/2568225.2568229
   Mannan UA, 2016, 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2016), P225, DOI [10.1109/MobileSoft.2016.048, 10.1145/2897073.2897094]
   Martin W, 2017, IEEE T SOFTWARE ENG, V43, P817, DOI 10.1109/TSE.2016.2630689
   McDonnell T, 2013, PROC IEEE INT CONF S, P70, DOI 10.1109/ICSM.2013.18
   Morales R, 2018, IEEE T SOFTWARE ENG, V44, P1176, DOI 10.1109/TSE.2017.2757486
   Nistor A, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P902, DOI 10.1109/ICSE.2015.100
   Nistor A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P562, DOI 10.1109/ICSE.2013.6606602
   Nistor A, 2013, IEEE WORK CONF MIN S, P237, DOI 10.1109/MSR.2013.6624035
   Okur S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1117, DOI 10.1145/2568225.2568309
   Palomba F, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P487, DOI 10.1109/SANER.2017.7884659
   Pathak Abhijit D., 2012, Proceedings of the PCIM ASIA 2012. International Conference and Exhibition for Power Electronics, Intelligent Motion, Renewable Energy and Energy Management, P29
   Rebouças M, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P634, DOI 10.1109/SANER.2016.66
   RedMonk, 2018, REDMONK PROGR LANG R
   Reimann J., 2014, SOFTWARETECHNIK TREN
   Smith C., 2001, 27 INT C COMP MEAS G, P797
   Statistica, 2020, NUMB APPS AV LEAD AP
   SwiftAST, 2018, SWIFT AST TOOL GITH
   Syer MarkD., 2013, Proceedings of the 2013 Conference of the Center for Advanced Studies on Collaborative Research, CASCON '13, P283
   Zaman S., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P199, DOI 10.1109/MSR.2012.6224281
NR 55
TC 4
Z9 5
U1 2
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2019
VL 24
IS 6
BP 3484
EP 3513
DI 10.1007/s10664-019-09703-y
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JT6XW
UT WOS:000501131100008
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Mateus, BG
   Martinez, M
AF Mateus, Bruno Gois
   Martinez, Matias
TI An empirical study on quality of Android applications written in Kotlin
   language
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Android; Mobile development; Quality; Kotlin; Java; Code smells; Code
   evolution; Open-Source applications
ID SMELLS
AB Context During the last years, developers of mobile applications have the possibility to use new paradigms and tools for developing mobile applications. For instance, since 2017, Android developers have the official support to write Android applications using Kotlin language. Kotlin is programming language fully interoperable with Java that combines object-oriented and functional features. Objective The goal of this paper is twofold. First, it aims to study the degree of adoption of Kotlin language on the development of open-source Android applications and to measure the amount of Kotlin code inside those applications. Secondly, it aims to measure the quality of Android applications that are written using Kotlin and to compare it with the quality of Android applications written using Java. Method We first defined a method to detect Kotlin applications from a dataset of open-source Android applications. Then, we analyzed those applications to detect instances of code smells and computed an estimation of the quality of the applications. Finally, we studied how the introduction of Kotlin code impacts on the quality of an Android application. Results Our experiment found that 11.26% of applications from a dataset with 2,167 open-source applications have been written (partially or fully) using Kotlin language. We found that the introduction of Kotlin code increases the quality, in terms of the presence of 10 different code smells studied, 4 object-oriented and 6 Android, of the majority of the Android applications initially written in Java.
C1 [Mateus, Bruno Gois; Martinez, Matias] UPHF, Campus Mt Houy, F-59313 Valenciennes, France.
C3 Universite Polytechnique Hauts-de-France
RP Mateus, BG (corresponding author), UPHF, Campus Mt Houy, F-59313 Valenciennes, France.
EM Bruno.GoisMateus@etu.uphf.fr; Matias.Martinez@uphf.fr
RI Martinez, Matias/ABA-8871-2021
OI Martinez, Matias/0000-0002-2945-866X
CR Allix K, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P468, DOI [10.1145/2901739.2903508, 10.1109/MSR.2016.056]
   AndroidDoc, 2018, ARR MAP ANDR DEV
   AndroidDoc, 2018, PERF TIPS ANDR DEV
   Aniche M, 2016, PROC IEEE INT CONF S, P234, DOI 10.1109/ICSME.2016.12
   [Anonymous], THESIS
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Carette A, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P115, DOI 10.1109/SANER.2017.7884614
   Chen TH, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1001, DOI 10.1145/2568225.2568259
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Cliff N., 2014, Ordinal Methods for Behavioral Data Analysis
   Cruz Luis, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P46, DOI 10.1109/MOBILESoft.2017.19
   Cruz L, 2018, P CIBSE 21 IB AM C S
   Fowler M., 1999, Refactoring: Improving the Design of Existing Code
   Geiger F-X, 2018, ARXIV180910069
   Geiger FX, 2018, IEEE WORK CONF MIN S, P30, DOI 10.1145/3196398.3196460
   Haase C, 2015, DEV ANDROID 2 GOOGLE
   Habchi Sarra, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P110, DOI 10.1109/MOBILESoft.2017.11
   Hecht G, 2016, THESIS
   Hecht G, 2016, 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2016), P59, DOI [10.1145/2897073.2897100, 10.1109/MobileSoft.2016.030]
   Hecht G, 2015, IEEE INT CONF AUTOM, P236, DOI 10.1109/ASE.2015.46
   Hecht G, 2015, 2ND ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS MOBILESOFT 2015, P148, DOI 10.1109/MobileSoft.2015.38
   IDC, 2017, SMARTPH OS MARK SHAR
   Kessentini Marouane, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P122, DOI 10.1109/MOBILESoft.2017.29
   Khalid H, 2016, IEEE SOFTWARE, V33, P34, DOI 10.1109/MS.2015.29
   KotlinDoc, 2018, CLASS INH KOTL PROGR
   La J, 2017, UPDATE KOTLIN ANDROI
   LEHMAN MM, 1980, P IEEE, V68, P1060, DOI 10.1109/PROC.1980.11805
   Li DG, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1855
   Li L, 2017, INFORM SOFTWARE TECH, V88, P67, DOI 10.1016/j.infsof.2017.04.001
   Lockwood A, 2013, LEAK CONTEXT HANDLER
   Macbeth G, 2011, UNIV PSYCHOL, V10, P545, DOI 10.11144/Javeriana.upsy10-2.cdcp
   Malavolta I, 2015, 2ND ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS MOBILESOFT 2015, P56, DOI 10.1109/MobileSoft.2015.15
   Malavolta I, 2015, IEEE INT CONF MO, P25, DOI [10.1109/MobServ.2015.14, 10.1109/MS.2015.14]
   Mannan UA, 2016, 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2016), P225, DOI [10.1109/MobileSoft.2016.048, 10.1145/2897073.2897094]
   Mariotti G, 2013, ANTIPATTERN FREEZING
   Martinez Matias, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P184, DOI 10.1109/MOBILESoft.2017.30
   Mazinanian D, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P496, DOI 10.1145/2635868.2635879
   McAnlis C, 2015, ANDROID PERFORMANCE
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Morales R, 2016, ARXIV161005711
   Morales R, 2018, IEEE T SOFTWARE ENG, V44, P1176, DOI 10.1109/TSE.2017.2757486
   Nagappan M, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 5, P21, DOI 10.1109/SANER.2016.88
   Ni-Lewis I., 2015, Avoiding Allocations in OnDraw() (100 Days of Google Dev)
   Ni-Lewis I, 2015, CUSTOM VIEWS PERFORM
   Palomba F, 2018, EMPIR SOFTW ENG, V23, P1188, DOI 10.1007/s10664-017-9535-z
   Palomba F, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P487, DOI 10.1109/SANER.2017.7884659
   Palomba F, 2015, IEEE T SOFTWARE ENG, V41, P462, DOI 10.1109/TSE.2014.2372760
   Panichella S., 2017, P 2 ACM SIGSOFT INT, P8
   Reimann J, 2014, ANDROID SMELLS CATAL
   Reimann Jan., 2014, Softwaretechnik-Trends, V34
   Romano J, 2006, ANN M FLOR ASS I RES, P1
   Saborido R, 2018, EMPIR SOFTW ENG, V23, P2829, DOI 10.1007/s10664-018-9607-8
   Sharma T, 2018, J SYST SOFTWARE, V138, P158, DOI 10.1016/j.jss.2017.12.034
   Tufano M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P403, DOI 10.1109/ICSE.2015.59
   Vinther M, 2017, WHY YOU SHOULD TOTAL
   Zadeh LA, 1974, IFIP C, V591
NR 56
TC 25
Z9 30
U1 4
U2 45
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2019
VL 24
IS 6
BP 3356
EP 3393
DI 10.1007/s10664-019-09727-4
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JT6XW
UT WOS:000501131100005
DA 2024-07-18
ER

PT J
AU Danglot, B
   Vera-Perez, OL
   Baudry, B
   Monperrus, M
AF Danglot, Benjamin
   Vera-Perez, Oscar Luis
   Baudry, Benoit
   Monperrus, Martin
TI Automatic test improvement with DSpot: a study with ten mature
   open-source projects
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Test improvement; Junit test; Pull request empirical study
ID TEST SUITES
AB In the literature, there is a rather clear segregation between manually written tests by developers and automatically generated ones. In this paper, we explore a third solution: to automatically improve existing test cases written by developers. We present the concept, design and implementation of a system called DSpot, that takes developer-written test cases as input (JUnit tests in Java) and synthesizes improved versions of them as output. Those test improvements are given back to developers as patches or pull requests, that can be directly integrated in the main branch of the test code base. We have evaluated DSpot in a deep, systematic manner over 40 real-world unit test classes from 10 notable and open-source software projects. We have amplified all test methods from those 40 unit test classes. In 26/40 cases, DSpot is able to automatically improve the test under study, by triggering new behaviors and adding new valuable assertions. Next, for ten projects under consideration, we have proposed a test improvement automatically synthesized by DSpot to the lead developers. In total, 13/19 proposed test improvements were accepted by the developers and merged into the main code base. This shows that DSpot is capable of automatically improving unit-tests in real-world, large scale Java software.
C1 [Danglot, Benjamin] Inria Lille Nord Europe, Parc Sci Haute Borne 40,Ave Halley,Bat A,Pk Plaza, F-59650 Villeneuve Dascq, France.
   [Vera-Perez, Oscar Luis] Inria Rennes Bretagne Atlantique, Campus Beaulieu,263 Ave Gen Leclerc, F-35042 Rennes, France.
   [Baudry, Benoit; Monperrus, Martin] KTH Royal Inst Technol Stockholm, Brinellvagen 8, S-11428 Stockholm, Sweden.
C3 Universite de Rennes; Royal Institute of Technology
RP Danglot, B (corresponding author), Inria Lille Nord Europe, Parc Sci Haute Borne 40,Ave Halley,Bat A,Pk Plaza, F-59650 Villeneuve Dascq, France.
EM danglot@inria.fr; oscar.vera-perez@inria.fr; baudry@kth.se;
   martin.monperrus@csc.kth.se
RI Monperrus, Martin/I-3640-2012
OI Monperrus, Martin/0000-0003-3505-3383; Danglot,
   Benjamin/0000-0001-9483-5743
CR Allamanis M, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P281, DOI 10.1145/2635868.2635883
   Almasi MM, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P263, DOI 10.1109/ICSE-SEIP.2017.27
   [Anonymous], 2012, International Symposium on Software Testing and Analysis, ISSTA 2012, Minneapolis, MN, USA, July 15-20, 2012, DOI DOI 10.1145/2338965.2336790
   [Anonymous], 2003, TEST DRIVEN DEV EXAM
   [Anonymous], P 14 WORK C MIN SOFT
   [Anonymous], 2017, IEEE T EVOLUTIONARY
   Arcuri A, 2008, IEEE C EVOL COMPUTAT, P162, DOI 10.1109/CEC.2008.4630793
   Baudry B, 2005, SOFTW TEST VERIF REL, V15, P73, DOI 10.1002/stvr.313
   Baudry B, 2015, ARXIV150305807
   Danglot B, 2017, ARXIV170510692
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   Fard A. M., 2014, Proceedings of the 29th ACM/IEEE International Conference on Automated Software Engineering, ASE'14, P67, DOI 10.1145/2642937.2642991
   Flyvbjerg B, 2006, QUAL INQ, V12, P219, DOI 10.1177/1077800405284363
   Fraser G., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P121, DOI 10.1109/ICST.2012.92
   Fraser G, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2699688
   Fraser G, 2015, EMPIR SOFTW ENG, V20, P783, DOI 10.1007/s10664-013-9299-z
   Fraser G, 2013, IEEE T SOFTWARE ENG, V39, P276, DOI 10.1109/TSE.2012.14
   Godefroid P, 2005, ACM SIGPLAN NOTICES, V40, P213, DOI 10.1145/1064978.1065036
   Groce A, 2007, PROC INT CONF SOFTW, P621
   Harder M, 2003, PROC INT CONF SOFTW, P60, DOI 10.1109/ICSE.2003.1201188
   Liu MH, 2006, PROC IEEE INT CONF S, P113
   Pawlak R, 2016, SOFTWARE PRACT EXPER, V46, P1155, DOI 10.1002/spe.2346
   Pezzè M, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P11, DOI 10.1109/ICST.2013.37
   Roche J, 2013, QUEUE, V11
   Tonella P, 2004, WSE 2004: SIXTH IEEE INTERNATIONAL WORKSHOP ON WEB SITE EVOLUTION, PROCEEDINGS, P11, DOI 10.1109/WSE.2004.10012
   Wilkerson J.L., 2010, P GECCO 2010 GENETIC, P1391
   Xie T, 2006, LECT NOTES COMPUT SC, V4067, P380
   Xuan JF, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P910, DOI 10.1145/2786805.2803206
   Xuan JF, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P52, DOI 10.1145/2635868.2635906
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P171, DOI 10.1002/stvr.435
   Yu ZX, 2013, INFORM SOFTWARE TECH, V55, P2076, DOI 10.1016/j.infsof.2013.07.004
   Zhang J, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P883, DOI 10.1145/2950290.2950313
NR 32
TC 15
Z9 15
U1 0
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2019
VL 24
IS 4
BP 2603
EP 2635
DI 10.1007/s10664-019-09692-y
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IL9CL
UT WOS:000477582700025
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Al-Zubidy, A
   Carver, JC
AF Al-Zubidy, Ahmed
   Carver, Jeffrey C.
TI Identification and prioritization of SLR search tool requirements: an
   SLR and a survey
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Systematic literature review; Empirical software engineering; Tooling
   infrastructure
ID SYSTEMATIC LITERATURE-REVIEWS; CHALLENGES; LESSONS; METHODOLOGY
AB Context The number of published systematic literature reviews (SLRs) in software engineering venues is increasing. However, even with their high adaptation rate, the task of performing an SLR requires a large amount of effort and presents a number of barriers. Specifically, during the SLR search phase authors must expend a lot of time and overcome a large number of barriers.
   Objective To help alleviate some of the barriers in the search phase, we identify and prioritize SLR search tool requirements based on input from the SLR community. These requirements will help tool builders ensure they focus their efforts appropriately.
   Method We conducted an SLR and a survey of SLR authors in software engineering. In the SLR we extracted problems and solutions SLR authors reported during their search processes. In the survey we asked respondents to describe the problems they faced during SLR search and to specify any requirements they would like to see as part of an SLR search tool. We also asked survey respondents to describe any tools they use to support SLR search, along with the strengths and limitations of those tools.
   Results Based on analysis of 84 studies from the literature and a qualitative analysis of 131 responses from researchers, we identified a set of functional requirements that authors, researchers, and tool builders can use as a reference. We also describe the tools currently used by SLR researchers.
   Conclusions The list of SLR search tool requirements can be used by tool builders as a guide when constructing new tools. Our analysis of tools showed that more recent tools are covering more of the requirements than in the past.
C1 [Al-Zubidy, Ahmed; Carver, Jeffrey C.] Univ Alabama, Dept Comp Sci, Tuscaloosa, AL 35487 USA.
C3 University of Alabama System; University of Alabama Tuscaloosa
RP Carver, JC (corresponding author), Univ Alabama, Dept Comp Sci, Tuscaloosa, AL 35487 USA.
EM aalzubidy@crimson.ua.edu; carver@cs.ua.edu
RI Carver, Jeffrey/AFP-1987-2022; Carver, Jeffrey/AAM-8202-2020
OI Carver, Jeffrey/0000-0002-7824-9151; Carver, Jeffrey/0000-0002-7824-9151
FU United States National Science Foundation [1305395]; Direct For Computer
   & Info Scie & Enginr; Division Of Computer and Network Systems [1305395]
   Funding Source: National Science Foundation
FX We thank the survey respondents for taking the time to complete the
   survey. We also acknowledge partial support from the United States
   National Science Foundation grant number 1305395.
CR Al-Zubidy A, 2017, INFORM SOFTWARE TECH, V91, P72, DOI 10.1016/j.infsof.2017.06.007
   Allman-Farinelli M, 2014, AUST J PRIM HEALTH, V20, P236, DOI 10.1071/PY13016
   [Anonymous], 2012, Proceedings of the 2nd International Workshop on Evidential Assessment of software technologies
   [Anonymous], 2000, EVIDENCE BASED MED P
   Babar MA, 2009, INT SYMP EMP SOFTWAR, P347
   Badampudi D., 2015, P 19 INT C EV ASS SO, P1, DOI [10.1145/2745802.2745818, DOI 10.1145/2745802.2745818]
   Barat S, 2017, PROCEEDINGS OF THE 10TH INNOVATIONS IN SOFTWARE ENGINEERING CONFERENCE, P15, DOI 10.1145/3021460.3021462
   Barn Balbir S., 2014, 16th International Conference on Enterprise Information Systems (ICEIS 2014). Proceedings, P440
   Biolchini J., 2005, Systematic review in software engineering(05)
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Budgen D, 2018, INFORM SOFTWARE TECH, V95, P62, DOI 10.1016/j.infsof.2017.10.017
   Carver Jeffrey C., 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P203, DOI 10.1109/ESEM.2013.28
   Charters S., 2007, GUIDELINES PERFORMIN
   Corbin J., 2008, QUAL RES, DOI DOI 10.4135/9781452230153.N10
   de Almeida Biolchini JC, 2007, ADV ENG INFORM, V21, P133, DOI 10.1016/j.aei.2006.11.006
   Dieste O, 2009, EMPIR SOFTW ENG, V14, P513, DOI 10.1007/s10664-008-9091-7
   Dyba Tore, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P225
   Engström E, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P22
   Felizardo KatiaRomero., 2016, Proceedings of the 10th ACM/IEEE International Symposium on Empirical Software Engineering and Measurement, P53
   Fernández-Sáez AM, 2010, ICSOFT 2010: PROCEEDINGS OF THE FIFTH INTERNATIONAL CONFERENCE ON SOFTWARE AND DATA TECHNOLOGIES, VOL 2, P157
   Hassler E, 2016, INFORM SOFTWARE TECH, V70, P122, DOI 10.1016/j.infsof.2015.10.011
   Hassler Edgar., 2014, 18th International Conference on Evaluation Assessment in Software Engineering, P31
   He Zhang, 2011, 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), P56, DOI 10.1049/ic.2011.0007
   Hernandes Elis, 2012, CLEIej, V15, P3
   Jalali S, 2012, INT SYMP EMP SOFTWAR, P29, DOI 10.1145/2372251.2372257
   Kitchenham B, 1997, COMPUT CONTROL ENG J, V8, P120, DOI 10.1049/cce:19970304
   Kitchenham B., 2004, ARXIV
   Kitchenham B.A., 2015, EVIDENCE BASED SOFTW, V4
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Kitchenham B, 2013, INFORM SOFTWARE TECH, V55, P2049, DOI 10.1016/j.infsof.2013.07.010
   Kitchenham B, 2010, INFORM SOFTWARE TECH, V52, P792, DOI 10.1016/j.infsof.2010.03.006
   Mallett R, 2012, J DEV EFFECT, V4, P445, DOI 10.1080/19439342.2012.711342
   Marshall Christopher, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P296, DOI 10.1109/ESEM.2013.32
   Marshall Christopher., 2014, Proceedings of the 18th International Conference on Evaluation and Assessment in Software Engineering, P13
   Molleri J.S., 2015, EASE 15 P 19 INT C E, P1, DOI DOI 10.1145/2745802.2745825
   Parsifal, 2015, PARS SYST LIT REV TO
   Perestelo-Pérez L, 2013, INT J CLIN HLTH PSYC, V13, P49, DOI 10.1016/S1697-2600(13)70007-3
   Petersen K., 2007, Systematic Mapping Studies in Software Engineering, P1
   Pignone M, 2005, ANN INTERN MED, V142, P1073, DOI 10.7326/0003-4819-142-12_Part_2-200506211-00007
   Reed D, 2005, ANN INTERN MED, V142, P1080, DOI 10.7326/0003-4819-142-12_Part_2-200506211-00008
   Riaz M, 2010, INT C EV ASS SOFTW E, P44
   Sjoberg DIK, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P358, DOI 10.1109/FOSE.2007.30
   Skoglund M., 2009, 13 INT C EVALUATION, P31
   Spasic I, 2005, BRIEF BIOINFORM, V6, P239, DOI 10.1093/bib/6.3.239
   Strauss Anselm, 1967, DISCOVERY GROUNDED T
   Tranfield D, 2003, BRIT J MANAGE, V14, P207, DOI 10.1111/1467-8551.00375
   Wohlin Claes., 2016, 20th International Conference on Evaluation and Assessment in Software Engineering, P15
   Wohlin Claes, 2014, P 8 ACM IEEE INT S E, P1
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Zhang H, 2011, INFORM SOFTWARE TECH, V53, P625, DOI 10.1016/j.infsof.2010.12.010
NR 50
TC 10
Z9 11
U1 1
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2019
VL 24
IS 1
BP 139
EP 169
DI 10.1007/s10664-018-9626-5
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HL3RV
UT WOS:000458634400005
DA 2024-07-18
ER

PT J
AU Pano, A
   Graziotin, D
   Abrahamsson, P
AF Pano, Amantia
   Graziotin, Daniel
   Abrahamsson, Pekka
TI Factors and actors leading to the adoption of a JavaScript framework
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE JavaScript; Programming frameworks; Decision making; Technology
   adoption; Human aspects of software development; Qualitative research;
   Interpretivism
ID USER ACCEPTANCE; INFORMATION-TECHNOLOGY; UNIFIED THEORY; SYSTEMS; MODEL
AB The increasing popularity of JavaScript has led to a variety of JavaScript frameworks that aim to help developers to address programming tasks. However, the number of JavaScript frameworks has risen rapidly to thousands of versions. It is challenging for practitioners to identify the frameworks that best fit their needs and to develop new ones which fit such needs. Furthermore, there is a lack of knowledge regarding what drives developers toward the choice. This paper explores the factors and actors that lead to the choice of a JavaScript framework. We conducted a qualitative interpretive study of semi-structured interviews. We interviewed 18 decision makers regarding the JavaScript framework selection, up to reaching theoretical saturation. Through coding of the interview responses, we offer a model of desirable JavaScript framework adoption factors. The factors are grouped into categories that are derived via the Unified Theory of Acceptance and Use of Technology. The factors are performance expectancy (performance, size), effort expectancy (automatization, learnability, complexity, understandability), social influence (competitor analysis, collegial advice, community size, community responsiveness), facilitating conditions (suitability, updates, modularity, isolation, extensibility), and price value. A combination of four actors, which are customer, developer, team, and team leader, leads to the choice. Our model contributes to the body of knowledge related to the adoption of technology by software engineers. As a practical implication, our model is useful for decision makers when evaluating JavaScript frameworks, as well as for developers for producing desirable frameworks.
C1 [Pano, Amantia] Free Univ Bozen Bolzano, Fac Comp Sci, Bolzano, Italy.
   [Graziotin, Daniel] Univ Stuttgart, Inst Software Technol, Stuttgart, Germany.
   [Abrahamsson, Pekka] Univ Jyvaskyla, Fac Informat Technol, Jyvaskyla, Finland.
C3 Free University of Bozen-Bolzano; University of Stuttgart; University of
   Jyvaskyla
RP Graziotin, D (corresponding author), Univ Stuttgart, Inst Software Technol, Stuttgart, Germany.
EM amantia.pano@unibz.it; daniel.graziotin@iste.uni-stuttgart.de;
   pekka.abrahamsson@jyu.fi
OI Graziotin, Daniel/0000-0002-9107-7681
FU Alexander von Humboldt (AvH) Foundation
FX Daniel Graziotin has been supported by the Alexander von Humboldt (AvH)
   Foundation.
CR [Anonymous], 2017, MOST STARRED GITHUB
   [Anonymous], RES DESIGN QUALITATI
   [Anonymous], 2017, MOOTOOLS SLICK SPEED
   Atkins TJ, 2015, CSS SNAPSHOT 2015
   Bennett J, 2007, CHOOSING JAVASCRIPT
   Corbin J, 2008, Techniques and procedures for developing grounded theory, V3rd
   Craver N, 2017, NEW YORK IS SO COOL
   Cunha JAOG, 2016, PROCEDIA COMPUT SCI, V100, P947, DOI 10.1016/j.procs.2016.09.255
   DAVIS FD, 1989, MANAGE SCI, V35, P982, DOI 10.1287/mnsc.35.8.982
   Doukakis S, 2013, INFORM EDUC, V12, P207
   Dreyfus H., 1987, IEEE Expert, V2, P110, DOI [DOI 10.1109/MEX.1987.4307079, 10.1109/MEX.1987.4307079]
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Fagerholm F, 2015, INFORM SOFTWARE TECH, V64, P132, DOI 10.1016/j.infsof.2015.01.010
   Fayad ME, 1997, COMMUN ACM, V40, P32, DOI 10.1145/262793.262798
   GA Papadopoulos, 2017, 22 INT C
   Garrett JJ, 2005, AJAX NEW APPROACH WE
   Geertz C, 1973, INTERPRETATION CULTU
   Gizas A., 2012, P 21 INT C COMPANION, P513
   Glaser BG, 2014, GROUNDED THEORY REV, V13, P3
   Graziotin D, 2013, LECT NOTES COMPUT SC, V7983, P334, DOI 10.1007/978-3-642-39259-7_28
   Guest G, 2006, FIELD METHOD, V18, P59, DOI 10.1177/1525822X05279903
   Halstead M.H., 1977, OPERATING PROGRAMMIN
   Hardgrave BC, 2003, IEEE T ENG MANAGE, V50, P322, DOI 10.1109/TEM.2003.817293
   Heath H, 2004, INT J NURS STUD, V41, P141, DOI 10.1016/S0020-7489(03)00113-5
   Hong W, 2011, J MANAGE INFORM SYST, V28, P235, DOI 10.2753/MIS0742-1222280108
   Idemudia E. C., 2016, INT J QUANTITATIVE R, V3, P277, DOI DOI 10.1504/IJQRE.2016.082394
   International Q, 2012, NVIVO 10
   Kettunen P, 2013, Syst. Softw. Serv. Process Improv, P131, DOI [DOI 10.1007/978-3-642-39179-812, 10.1007/978-3-642-39179-8_12, DOI 10.1007/978-3-642-39179-8_12]
   Klein HK, 1999, MIS QUART, V23, P67, DOI 10.2307/249410
   Langley A, 1999, ACAD MANAGE REV, V24, P691, DOI 10.2307/259349
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   McNamara C., 1999, Field Guide to Consulting and Organizational Development
   Misra S, 2012, INT ARAB J INF TECHN, V9, P535
   Mohr L. B., 1982, Explaining Organizational Behavior
   Ocariza Frolin  Jr., 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P55, DOI 10.1109/ESEM.2013.18
   PFEFFER J, 1983, ADMIN SCI QUART, V28, P321, DOI 10.2307/2392635
   Polancic G, 2010, J SYST SOFTWARE, V83, P574, DOI 10.1016/j.jss.2009.10.036
   Reyes J, 2010, CHOOSE RIGHT JAVASCR
   Robins A., 2003, COMPUT SCI EDUC, V13, P137, DOI [10.1076/csed.13.2.137.14200, DOI 10.1076/CSED.13.2.137.14200]
   SC Cheung, 2014, 22 ACM SIGSOFT INT S
   Stefi A, 2015, ECIS 2015 COMPLETED, P175
   Stol KJ, 2016, PROC INT CONF SOFTW, P120, DOI 10.1145/2884781.2884833
   Strauss A., 1994, HDB QUALITATIVE RES, P273, DOI DOI 10.1007/BF00988593
   Strauss E, 1998, CLIN ORTHOP RELAT R, P2
   Tiobe, 2015, TIOB IND
   van Kesteren A, 2015, W3C DOM4
   van Kesteren A, 2014, XMLHTTPREQUEST LEVEL
   VANDEVEN AH, 1995, ACAD MANAGE REV, V20, P510, DOI 10.2307/258786
   Venkatesh V, 2003, MIS QUART, V27, P425, DOI 10.2307/30036540
   Venkatesh V, 2012, MIS QUART, V36, P157
   Vishwanath A, 2016, 49 HAW INT C SYST SC, V2016
   W3Techs, 2014, WEB TECHN SURV US JA
   Walsh D, 2007, 8 CONSIDERATIONS CHO
   Walsham G, 2006, EUR J INFORM SYST, V15, P320, DOI 10.1057/palgrave.ejis.3000589
   Williams MD, 2015, J ENTERP INF MANAG, V28, P443, DOI 10.1108/JEIM-09-2014-0088
NR 55
TC 15
Z9 15
U1 3
U2 28
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2018
VL 23
IS 6
BP 3503
EP 3534
DI 10.1007/s10664-018-9613-x
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA HC1WE
UT WOS:000451593200012
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Paasivaara, M
   Behm, B
   Lassenius, C
   Hallikainen, M
AF Paasivaara, Maria
   Behm, Benjamin
   Lassenius, Casper
   Hallikainen, Minna
TI Large-scale agile transformation at Ericsson: a case study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Agile software development; Large-scale agile; Adopting agile;
   Enterprise agile; Scaling agile
ID SOFTWARE-DEVELOPMENT
AB Many large organizations are adopting agile software development as part of their continuous push towards higher flexibility and shorter lead times, yet few reports on large-scale agile transformations are available in the literature. In this paper we report how Ericsson introduced agile in a new R&D product development program developing a XaaS platform and a related set of services, while simultaneously scaling it up aggressively. The overarching goal for the R&D organization, distributed to five sites at two continents, was to achieve continuous feature delivery. This single case study is based on 45 semi-structured interviews during visits at four sites, and five observation sessions at three sites. We describe how the organization experimented with different set-ups for their tens of agile teams aiming for rapid end-to-end development: from component-based virtual teams to totally cross-functional, cross-component, cross-site teams. Moreover, we discuss the challenges the organization faced and how they mitigated them on their journey towards continuous and rapid software engineering. We present four lessons learned for large-scale agile transformations: 1) consider using an experimental approach to transformation, 2) consider implementing the transformation step-wise in complex large-scale settings, 3) team inter-changeability can be limited in a complex large-scale product - specialization might be needed, and 4) not using a common agile framework for the whole organization, in combination with insufficient common trainings and coaching may lead to a lack of common direction in the agile implementation. Further in-depth case studies on large-scale agile transformations, on customizing agile to large-scale settings, as well as on the use of scaling frameworks are needed.
C1 [Paasivaara, Maria; Behm, Benjamin; Lassenius, Casper] Aalto Univ, Dept Comp Sci, POB 19210, FI-00076 Aalto, Finland.
   [Hallikainen, Minna] Oy LM Ericsson Ab, Hirsalantie 11, FI-02420 Kyrkslatt, Finland.
C3 Aalto University; Ericsson
RP Paasivaara, M (corresponding author), Aalto Univ, Dept Comp Sci, POB 19210, FI-00076 Aalto, Finland.
EM Maria.Paasivaara@aalto.fi; Benjamin.Behm@aalto.fi;
   casper.lassenius@aalto.fi; minna.hallikainen@ericsson.com
RI Lassenius, Casper/A-4339-2013
OI Lassenius, Casper/0000-0003-4192-7024
FU TEKES as part of the Need for Speed (N4S) SHOK program
FX The authors would like to thank Ericsson and in particular the
   interviewees for participating in the study. This work was supported by
   TEKES as part of the Need for Speed (N4S) SHOK program.
CR Abdelnour-Nocera J, 2007, TECH REP
   Abdelnour-Nocera J, 2008, LECT NOTES BUS INF P, V9, P42
   [Anonymous], 1990, QUALITATIVE EVALUATI, DOI DOI 10.1002/NUR.4770140111
   [Anonymous], 2007, Scaling Software Agility: Best Practices for Large Enterprises
   [Anonymous], 2012, Disciplined agile delivery: A practitioner's guide to agile software delivery in the enterprise
   [Anonymous], 2013, APPL COMPUTATIONAL M, DOI DOI 10.1145/2486046.2486064
   [Anonymous], 2010, Practices for Scaling Lean & Agile Development: Large, Multisite, and Offshore Product Development with Large-Scale Scrum
   [Anonymous], J SYST SOFTW
   Banerjee P, 2011, COMPUTER, V44, P36, DOI 10.1109/MC.2011.67
   Beavers PA, 2007, AGILE 2007, Proceedings, P296, DOI 10.1109/AGILE.2007.40
   Benefield, 2008, Proceedings of the 41st Annual Hawaii International Conference on System Sciences (HICSS 2008), P461, DOI [10.1109/HICSS.2008.382, DOI 10.1109/HICSS.2008.382]
   Berczuk S, 2010, IEEE SOFTWARE, V27, P12, DOI 10.1109/MS.2010.151
   Boehm B, 2005, IEEE SOFTWARE, V22, P30, DOI 10.1109/MS.2005.129
   Chung MW, 2009, AGILE 2009 CONFERENCE, P113, DOI 10.1109/AGILE.2009.41
   Cunningham W, 1992, P OOPSLA
   Dikert K, 2016, J SYS SOFTW
   Dingsoyr Torgeir, 2013, Software Engineering Notes, V38, P33, DOI 10.1145/2507288.2507322
   Dingsoyr T, 2014, LECT NOTES BUS INF P, V199, P1
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Fecarotta J, 2008, AGILE 2008, PROCEEDINGS, P135, DOI 10.1109/Agile.2008.72
   Freudenberg S, 2010, IEEE SOFTWARE, V27, P8, DOI 10.1109/MS.2010.129
   Fry C, 2007, AGILE 2007, PROCEEDINGS, P136, DOI 10.1109/AGILE.2007.38
   Gat I., 2006, AGILE 2006
   Goos J, 2008, AGILE 2008, PROCEEDINGS, P154, DOI 10.1109/Agile.2008.24
   Greening D. R., 2013, Proceedings of the 2013 46th Hawaii International Conference on System Sciences (HICSS 2013), P4835, DOI 10.1109/HICSS.2013.463
   Hallikainen M., 2011, Proceedings of the 2011 6th IEEE International Conference on Global Software Engineering (ICGSE 2011), P119, DOI 10.1109/ICGSE.2011.20
   Hansen MT, 2009, AGILE 2009 CONFERENCE, P283, DOI 10.1109/AGILE.2009.18
   Hanssen G. K., 2011, 2011 Sixth IEEE International Conference on Global Software Engineering Workshop, P17, DOI 10.1109/ICGSE-W.2011.12
   Hibbs Curt, 2009, The art of lean software development: a practical and incremental approach
   Highsmith J, 2001, COMPUTER, V34, P120, DOI 10.1109/2.947100
   Holmström H, 2006, INFORM SYST MANAGE, V23, P7, DOI 10.1201/1078.10580530/46108.23.3.20060601/93703.2
   Hossain E, 2009, INT CONF GLOBAL SOFT, P175, DOI 10.1109/ICGSE.2009.25
   JICK TD, 1979, ADMIN SCI QUART, V24, P602, DOI 10.2307/2392366
   Korhonen K, 2013, SOFTWARE QUAL J, V21, P599, DOI 10.1007/s11219-012-9189-4
   Kruchten P, 2012, IEEE SOFTWARE, V29, P18, DOI 10.1109/MS.2012.167
   Larman C, 2015, LESS FRAMEWORK
   Leffingwell D., 2015, Scaled Agile Framework - SAFe for Lean Enterprises
   Lindvall M, 2004, COMPUTER, V37, P26, DOI 10.1109/MC.2004.231
   Livermore Jeffrey A., 2008, Journal of Software, V3, P31, DOI 10.4304/jsw.3.4.31-36
   Long K, 2008, AGILE 2008, PROCEEDINGS, P160, DOI 10.1109/Agile.2008.61
   McDowell S, 2007, LECT NOTES COMPUT SC, V4536, P17
   Moore E, 2008, SCALING AGILE FINDIN
   Murphy P, 2009, LECT NOTES BUS INF P, V31, P136
   O'Connor C. P., 2011, Proceedings of the 2011 Agile Conference, P302, DOI 10.1109/AGILE.2011.25
   Paasivaara M, 2014, P WORKSH PRINC LARG
   Paasivaara M, 2014, INT CONF GLOBAL SOFT, P16, DOI 10.1109/ICGSE.2014.22
   Paasivaara M, 2014, INFORM SOFTWARE TECH, V56, P1556, DOI 10.1016/j.infsof.2014.06.008
   Paasivaara M, 2013, 2013 IEEE 8TH INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING (ICGSE 2013), P134, DOI 10.1109/ICGSE.2013.25
   Petersen K, 2010, EMPIR SOFTW ENG, V15, P654, DOI 10.1007/s10664-010-9136-6
   Poppendieck M, 2007, POPPENDIECK T CONCEP
   Poppendieck M, 2012, IEEE SOFTWARE, V29, P26, DOI 10.1109/MS.2012.107
   Prokhorenko Sergey, 2012, Proceedings of the 2012 Agile Conference, P191, DOI 10.1109/Agile.2012.30
   Ranganath P., 2011, Proceedings of the 2011 Agile Conference, P187, DOI 10.1109/AGILE.2011.40
   Ryan JJ, 2008, AGILE 2008, PROCEEDINGS, P125, DOI 10.1109/Agile.2008.38
   Schwaber K., 2002, Agile software development with scrum
   Silva K, 2007, AGILE 2007, PROCEEDINGS, P225, DOI 10.1109/AGILE.2007.56
   Stavru S, 2014, J SYST SOFTWARE, V94, P87, DOI 10.1016/j.jss.2014.03.041
   VersionOne Inc, 2016, 10 ANN STAT AG DEV S
   Vlaanderen Kevin, 2012, Product-Focused Software Process Improvement. Proceedings 13th International Conference (PROFES 2012), P116, DOI 10.1007/978-3-642-31063-8_10
   Wenger E., 2002, Cultivating Communities of Practice: A Guide to Managing Knowledge
   Wenger EC, 2000, HARVARD BUS REV, V78, P139
   Womack J., 2003, Lean Thinking: Banish Waste and Create Wealth in Your Corporation
   Yin R. K., 2008, CASE STUDY RES DESIG, DOI DOI 10.1097/FCH.0B013E31822DDA9E
NR 63
TC 72
Z9 81
U1 6
U2 82
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2018
VL 23
IS 5
BP 2550
EP 2596
DI 10.1007/s10664-017-9555-8
PG 47
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GO5AW
UT WOS:000440031100002
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Yi, J
   Tan, SH
   Mechtaev, S
   Böhme, M
   Roychoudhury, A
AF Yi, Jooyong
   Tan, Shin Hwei
   Mechtaev, Sergey
   Bohme, Marcel
   Roychoudhury, Abhik
TI A correlation study between automated program repair and test-suite
   metrics
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Automated program repair; Test suite; Empirical evaluation; Correlation
ID MUTATION
AB Automated program repair is increasingly gaining traction, due to its potential to reduce debugging cost greatly. The feasibility of automated program repair has been shown in a number of works, and the research focus is gradually shifting toward the quality of generated patches. One promising direction is to control the quality of generated patches by controlling the quality of test-suites used for automated program repair. In this paper, we ask the following research question: "Can traditional test-suite metrics proposed for the purpose of software testing also be used for the purpose of automated program repair?" We empirically investigate whether traditional test-suite metrics such as statement/branch coverage and mutation score are effective in controlling the reliability of generated repairs (the likelihood that repairs cause regression errors). We conduct the largest-scale experiments of this kind to date with real-world software, and for the first time perform a correlation study between various test-suite metrics and the reliability of generated repairs. Our results show that in general, with the increase of traditional test suite metrics, the reliability of repairs tend to increase. In particular, such a trend is most strongly observed in statement coverage. Our results imply that the traditional test suite metrics proposed for software testing can also be used for automated program repair to improve the reliability of repairs.
C1 [Yi, Jooyong] Innopolis Univ, Inst Technol & Software Dev, Innopolis, Russia.
   [Tan, Shin Hwei; Mechtaev, Sergey; Bohme, Marcel; Roychoudhury, Abhik] Natl Univ Singapore, Sch Comp, Singapore, Singapore.
C3 Innopolis University; National University of Singapore
RP Yi, J (corresponding author), Innopolis Univ, Inst Technol & Software Dev, Innopolis, Russia.
EM j.yi@innopolis.ru; shinhwei@comp.nus.edu.sg; mechtaev@comp.nus.edu.sg;
   mboehme@comp.nus.edu.sg; abhik@comp.nus.edu.sg
RI Yi, Jooyong/ACE-0654-2022
OI Yi, Jooyong/0000-0002-7215-0855
FU National Research Foundation, Prime Minister's Office, Singapore under
   National Cybersecurity R&D Program (TSUNAMi project)
   [NRF2014NCR-NCR001-21]; Innopolis University
FX This research is supported in part by the National Research Foundation,
   Prime Minister's Office, Singapore under its National Cybersecurity R&D
   Program (TSUNAMi project, Award No. NRF2014NCR-NCR001-21) and
   administered by the National Cybersecurity R&D Directorate. The first
   author thanks Innopolis University for its support.
CR Andrews JH, 2006, IEEE T SOFTWARE ENG, V32, P608, DOI 10.1109/TSE.2006.83
   [Anonymous], 2016, PROC EUR C COMPUT VI
   [Anonymous], 2013, JOINT M EUROPEAN SOF, DOI [10.1145/2491411.2491430, DOI 10.1145/2491411.2491430]
   Artzi S., 2010, ISSTA, P49, DOI DOI 10.1145/1831708.1831715
   Assiri FY, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P273, DOI 10.1109/ICST.2014.40
   B_ohme M., 2014, INT S SOFTWARE TESTI, P105
   Baudry B., 2006, 28th International Conference on Software Engineering Proceedings, P82, DOI 10.1145/1134285.1134299
   Böhme M, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P302, DOI 10.1109/ICSE.2013.6606576
   Cadar C, 2005, LECT NOTES COMPUT SC, V3639, P2
   Cadar C., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, (USA), P209
   Dallmeier V, 2009, IEEE INT CONF AUTOM, P550, DOI 10.1109/ASE.2009.15
   Debroy Vidroha, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P65, DOI 10.1109/ICST.2010.66
   Debroy V, 2014, J SYST SOFTWARE, V90, P45, DOI 10.1016/j.jss.2013.10.042
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Elkarablieh B, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P855, DOI 10.1145/1368088.1368222
   Godefroid P, 2005, ACM SIGPLAN NOTICES, V40, P213, DOI 10.1145/1064978.1065036
   Gopinath D, 2011, LECT NOTES COMPUT SC, V6605, P173, DOI 10.1007/978-3-642-19835-9_15
   He HF, 2004, LECT NOTES COMPUT SC, V2984, P267
   Nguyen HDT, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P772, DOI 10.1109/ICSE.2013.6606623
   Jobstmann B, 2005, LECT NOTES COMPUT SC, V3576, P226
   Jones JA, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P467, DOI 10.1109/ICSE.2002.1007991
   Ke YL, 2015, IEEE INT CONF AUTOM, P295, DOI 10.1109/ASE.2015.60
   Kendall MG, 1945, BIOMETRIKA, V33, P239, DOI 10.2307/2332303
   Kim D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P802, DOI 10.1109/ICSE.2013.6606626
   Kong XL, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P194, DOI 10.1109/ISSRE.2015.7381813
   Konighofer R., 2011, 2011 Formal Methods in Computer-Aided Design (FMCAD), P91
   Le Goues C., 2012, IEEE Transactions on Software Engineering, V38, P54, DOI 10.1109/TSE.2011.104
   Le Goues C, 2013, SOFTWARE QUAL J, V21, P421, DOI 10.1007/s11219-013-9208-0
   Le Goues C, 2012, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.2012.6227211
   Liblit B, 2003, ACM SIGPLAN NOTICES, V38, P141, DOI 10.1145/780822.781148
   Long F, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P166, DOI 10.1145/2786805.2786811
   Long F, 2016, ACM SIGPLAN NOTICES, V51, P298, DOI 10.1145/2914770.2837617
   Long F, 2014, ACM SIGPLAN NOTICES, V49, P227, DOI [10.1145/2666356.2594337, 10.1145/2594291.2594337]
   Maldonado JC, 2001, KLUW INT S ADV DATA, V24, P113
   Mechtaev S., 2016, P 38 INT C SOFTWARE, P691
   Mechtaev S, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P448, DOI 10.1109/ICSE.2015.63
   Miller W., 1976, IEEE Transactions on Software Engineering, VSE-2, P223, DOI 10.1109/TSE.1976.233818
   Namin AS, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P57
   Pearson K., 1895, Proceedings of the Royal Society London, Vlviii, P240
   Pei Y, 2014, IEEE T SOFTWARE ENG, V40, P427, DOI 10.1109/TSE.2014.2312918
   Perkins JH, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P87
   Person S, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P504
   Qi YH, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P254, DOI 10.1145/2568225.2568254
   Qi YH, 2013, PROC IEEE INT CONF S, P180, DOI 10.1109/ICSM.2013.29
   Qi Zichao, 2015, P 2015 INT S SOFTW T, P24, DOI DOI 10.1145/2771783.2771791
   Samimi H, 2012, PROC INT CONF SOFTW, P277, DOI 10.1109/ICSE.2012.6227186
   Samimi H, 2010, LECT NOTES COMPUT SC, V6183, P552, DOI 10.1007/978-3-642-14107-2_26
   Santelices Raul, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P218, DOI 10.1109/ASE.2008.32
   SCHOENAUER M, 1993, PROCEEDINGS OF THE FIFTH INTERNATIONAL CONFERENCE ON GENETIC ALGORITHMS, P573
   Smith EK, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P532, DOI 10.1145/2786805.2786825
   Tan SH, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P727, DOI 10.1145/2950290.2950295
   Tan SH, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P471, DOI 10.1109/ICSE.2015.65
   Weimer W, 2013, IEEE INT CONF AUTOM, P356, DOI 10.1109/ASE.2013.6693094
   White DR, 2011, IEEE T EVOLUT COMPUT, V15, P515, DOI 10.1109/TEVC.2010.2083669
   Xuan JF, 2017, IEEE T SOFTWARE ENG, V43, P34, DOI 10.1109/TSE.2016.2560811
   Yao XJ, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P919, DOI 10.1145/2568225.2568265
   Yue Jia, 2011, IEEE Transactions on Software Engineering, V37, P649, DOI 10.1109/TSE.2010.62
NR 57
TC 14
Z9 14
U1 0
U2 7
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2018
VL 23
IS 5
BP 2948
EP 2979
DI 10.1007/s10664-017-9552-y
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GO5AW
UT WOS:000440031100014
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Zagalsky, A
   German, DM
   Storey, MA
   Teshima, CG
   Poo-Caamaño, G
AF Zagalsky, Alexey
   German, Daniel M.
   Storey, Margaret-Anne
   Teshima, Carlos Gomez
   Poo-Caamano, German
TI How the R community creates and curates knowledge: an extended study of
   stack overflow and mailing lists
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Mining software repositories; Empirical study; Qualitative study;
   Survey; Stack overflow; R; Mailing list
AB One of the effects of social media's prevalence in software development is the many flourishing communities of practice where users share a common interest. These large communities use many different communication channels, but little is known about how they create, share, and curate knowledge using such channels. In this paper, we report a mixed methods study of how one community of practice, the R software development community, creates and curates knowledge associated with questions and answers (Q&A) in two of its main communication channels: the R tag in Stack Overflow and the R-Help mailing list. The results reveal that knowledge is created and curated in two main forms: participatory, where multiple users explicitly collaborate to build knowledge, and crowdsourced, where individuals primarily work independently of each other. Moreover, we take a unique approach at slicing the data based on question score and participation activities over time. Our study reveals participation patterns, showing the existence of prolific contributors: users who are active across both channels and are responsible for a large proportion of the answers, serving as a bridge of knowledge. The key contributions of this paper are: a characterization of knowledge artifacts that are exchanged by this community of practice; the reasons why users choose one channel over the other; and insights on the community participation patterns, which indicate an evolution of the community and a shift from knowledge creation to knowledge curation.
C1 [Zagalsky, Alexey] Univ Victoria, Victoria, BC, Canada.
   [German, Daniel M.] Univ Victoria, Dept Comp Sci, Victoria, BC, Canada.
   [Storey, Margaret-Anne; Teshima, Carlos Gomez; Poo-Caamano, German] Univ Victoria, Comp Sci, Victoria, BC, Canada.
   [Storey, Margaret-Anne] Univ Victoria, Software Engn Program, Victoria, BC, Canada.
C3 University of Victoria; University of Victoria; University of Victoria;
   University of Victoria
RP Zagalsky, A (corresponding author), Univ Victoria, Victoria, BC, Canada.
EM alexeyza@uvic.ca; dmg@uvic.ca; mstorey@uvic.ca; cagomezt@uvic.ca;
   gpoo@uvic.ca
RI Poo-Caamaño, Germán/AAB-7571-2021
OI Poo-Caamaño, Germán/0000-0001-8570-8128; Zagalsky,
   Alexey/0000-0002-8510-1454
FU Natural Sciences and Engineering Research Council of Canada (NSERC)
FX The authors would like to thank Cassandra Petrachenko for the editing
   support and valuable comments that contributed to this work. We also
   thank Lorena Castaneda for her assistance with the data collection and
   analysis processes. Finally, we thank the R community users that
   responded to our survey. This work was supported by the Natural Sciences
   and Engineering Research Council of Canada (NSERC).
CR [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], 2004, PRACTICAL ASSESSMENT
   [Anonymous], CONFRONTING CHALLENG
   [Anonymous], 2014, Proceedings of the 17th ACM conference on Computer supported cooperative work social computing
   Bettenburg N, 2009, PROC IEEE INT CONF S, P539, DOI 10.1109/ICSM.2009.5306383
   Bosu A, 2013, IEEE WORK CONF MIN S, P89, DOI 10.1109/MSR.2013.6624013
   Bowen GA, 2008, QUAL RES, V8, P137, DOI 10.1177/1468794107085301
   Correa D, 2014, WWW'14: PROCEEDINGS OF THE 23RD INTERNATIONAL CONFERENCE ON WORLD WIDE WEB, P631, DOI 10.1145/2566486.2568036
   Creswell W., 2009, Research design: Qualitative, quantitative, and mixed methods approaches, V3rd, DOI DOI 10.1063/1.1150549
   German DM, 2013, EUR CON SFTWR MTNCE, P243, DOI 10.1109/CSMR.2013.33
   Gómez C, 2013, IEEE WORK CONF MIN S, P81, DOI 10.1109/MSR.2013.6624011
   Ihaka R., 1996, J COMPUTATIONAL GRAP, V5, P299, DOI [DOI 10.1080/10618600.1996.10474713, 10.2307/1390807, DOI 10.2307/1390807]
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Lave J., 2002, Supporting lifelong learning, V1, P111
   Li HW, 2013, WORK CONF REVERSE EN, P142, DOI 10.1109/WCRE.2013.6671289
   Mamykina L, 2011, 29TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P2857
   NAUR P, 1985, MICROPROC MICROPROG, V15, P253, DOI 10.1016/0165-6074(85)90032-8
   Squire M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P219, DOI 10.1109/ICSE.2015.150
   Srba I, 2016, IEEE SOFTWARE, V33, P80, DOI 10.1109/MS.2016.34
   Storey Margaret-Anne, 2013, P 2013 C COMPUTER SU, P103
   Storey Margaret-Anne, 2014, FUT SOFTW ENG P, P100, DOI 10.1145/2593882.2593887
   Tausczik Y.R., 2014, Proceedings of the 17th ACM Conference on Computer Supported Cooperative Work and Social Computing, CSCW'14, P355
   Vasilescu B, 2014, THESIS
   Wenger E., 2009, Digital habitats: Stewarding technology for communities
   Zagalsky A, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P441, DOI [10.1145/2901739.2901772, 10.1109/MSR.2016.052]
   Zhang AX, 2015, P 33 SIGCHI C HUM FA
NR 26
TC 20
Z9 20
U1 0
U2 12
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2018
VL 23
IS 2
BP 953
EP 986
DI 10.1007/s10664-017-9536-y
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GC1OI
UT WOS:000429551000009
DA 2024-07-18
ER

PT J
AU Noei, E
   Syer, MD
   Zou, Y
   Hassan, AE
   Keivanloo, I
AF Noei, Ehsan
   Syer, Mark D.
   Zou, Ying
   Hassan, Ahmed E.
   Keivanloo, Iman
TI A study of the relation of mobile device attributes with the
   user-perceived quality of Android apps
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Mobile applications; Software attributes; Device attributes;
   User-perceived quality
ID COMPLEXITY; EXPERIENCE; METRICS
AB The number of mobile applications (apps) and mobile devices has increased considerably over the past few years. Online app markets, such as the Google Play Store, use a star-rating mechanism to quantify the user-perceived quality of mobile apps. Users may rate apps on a five point (star) scale where a five star-rating is the highest rating. Having considered the importance of a high star-rating to the success of an app, recent studies continue to explore the relationship between the app attributes, such as User Interface (UI) complexity, and the user-perceived quality. However, the user-perceived quality reflects the users' experience using an app on a particular mobile device. Hence, the user-perceived quality of an app is not solely determined by app attributes. In this paper, we study the relation of both device attributes and app attributes with the user-perceived quality of Android apps from the Google Play Store. We study 20 device attributes, such as the CPU and the display size, and 13 app attributes, such as code size and UI complexity. Our study is based on data from 30 types of Android mobile devices and 280 Android apps. We use linear mixed effect models to identify the device attributes and app attributes with the strongest relationship with the user-perceived quality. We find that the code size has the strongest relationship with the user-perceived quality. However, some device attributes, such as the CPU, have stronger relationships with the user-perceived quality than some app attributes, such as the number of UI inputs and outputs of an app. Our work helps both device manufacturers and app developers. Manufacturers can focus on the attributes that have significant relationships with the user-perceived quality. Moreover, app developers should be careful about the devices for which they make their apps available because the device attributes have a strong relationship with the ratings that users give to apps.
C1 [Noei, Ehsan; Zou, Ying; Keivanloo, Iman] Queens Univ, Dept Elect & Comp Engn, Kingston, ON, Canada.
   [Syer, Mark D.; Hassan, Ahmed E.] Queens Univ, Sch Comp, Kingston, ON, Canada.
C3 Queens University - Canada; Queens University - Canada
RP Noei, E (corresponding author), Queens Univ, Dept Elect & Comp Engn, Kingston, ON, Canada.
EM e.noei@queensu.ca; mdsyer@cs.queensu.ca; ying.zou@queensu.ca;
   ahmed@cs.queensu.ca; iman.keivanloo@queensu.ca
RI Hassan, Ahmed/AAB-7241-2019; Ali, Ahmed/HOF-4672-2023; Zou,
   Ying/KLC-9380-2024; KHALIFA, AHMED khalifa/HKF-2246-2023
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572
CR ALBRECHT AJ, 1983, IEEE T SOFTWARE ENG, V9, P639, DOI 10.1109/TSE.1983.235271
   [Anonymous], SOFTW QUAL
   Balasubramanian N, 2009, IMC'09: PROCEEDINGS OF THE 2009 ACM SIGCOMM INTERNET MEASUREMENT CONFERENCE, P280
   Bandi RK, 2003, IEEE T SOFTWARE ENG, V29, P77, DOI 10.1109/TSE.2003.1166590
   BANKER RD, 1993, COMMUN ACM, V36, P81, DOI 10.1145/163359.163375
   Bavota G, 2015, IEEE T SOFTWARE ENG, V41, P384, DOI 10.1109/TSE.2014.2367027
   Carreño LVG, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P582, DOI 10.1109/ICSE.2013.6606604
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   COPPICK JC, 1992, 1992 ACM COMPUTER SCIENCE CONFERENCE, PROCEEDINGS, P317, DOI 10.1145/131214.131254
   Cormen T.H., 2009, INTRO ALGORITHMS
   Costa-Montenegro E, 2012, EXPERT SYST APPL, V39, P9367, DOI 10.1016/j.eswa.2012.02.131
   Dan Han, 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P83, DOI 10.1109/WCRE.2012.18
   Draper NormanRichard., 1966, APPL REGRESSION ANAL, V3
   DUNN OJ, 1964, TECHNOMETRICS, V6, P241, DOI 10.2307/1266041
   Faraway J., 2005, Extending the linear model with R: Generalized linear, mixed effects and nonparametric regression models
   Harbach M, 2014, 32ND ANNUAL ACM CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2014), P2647, DOI 10.1145/2556288.2556978
   Harman M., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P108, DOI 10.1109/MSR.2012.6224306
   Harrell F.E., 2001, Regression modeling strategies: with applications to linear models, logistic regression, and survival analysis
   Hassenzahl M, 2006, BEHAV INFORM TECHNOL, V25, P91, DOI 10.1080/01449290500330331
   Iacob C, 2013, IEEE WORK CONF MIN S, P41, DOI 10.1109/MSR.2013.6624001
   Ickin S, 2012, IEEE COMMUN MAG, V50, P48, DOI 10.1109/MCOM.2012.6178833
   JOHNSON RE, 1988, J OBJECT-ORIENT PROG, V1, P22
   Kaup F., 2013, 2013 21 IEEE INT C N, P1, DOI [10.1109/ICNP.2013.6733641, DOI 10.1109/ICNP.2013.6733641]
   Khalid H, 2014, P 22 ACM SIGSOFT INT, P370
   Kim HW, 2011, P 11 INT DEC SCI I 1
   Korhonen H, 2010, P 9 INT C MOB UB MUL
   KRUSKAL WH, 1952, J AM STAT ASSOC, V47, P583, DOI 10.1080/01621459.1952.10483441
   Lawson S., 2009, ANDROID MARKET NEEDS
   Li D., 2014, P 3 INT WORKSHOP GRE, P46, DOI DOI 10.1145/2593743.2593750
   Li D, 2014, PROC IEEE INT CONF S, P121, DOI 10.1109/ICSME.2014.34
   LI W, 1993, J SYST SOFTWARE, V23, P111, DOI 10.1016/0164-1212(93)90077-B
   Linares-Vasquez M, 2013, P 9 JOINT M EUR SOFT, P477
   Martin W, IEEE T SOFTW ENG
   Martin W, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P123, DOI 10.1109/MSR.2015.19
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   McDonnell T, 2013, PROC IEEE INT CONF S, P70, DOI 10.1109/ICSM.2013.18
   Miecznikowski J, 2002, LECT NOTES COMPUT SC, V2304, P111
   Moran K, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P673, DOI 10.1145/2786805.2786857
   Nakagawa S, 2013, METHODS ECOL EVOL, V4, P133, DOI 10.1111/j.2041-210x.2012.00261.x
   Nielson F., 1999, Principles of Program Analysis
   Noei E, 2016, STUDY RELATION MOBIL
   Pagano D, 2013, S VIS LANG HUM CEN C, P125, DOI 10.1109/RE.2013.6636712
   Pinheiro J., 2006, MIXED EFFECTS MODELS
   Pinheiro J., 2007, NLME LINEAR NONLINEA
   Shabtai A., 2010, Proceedings 2010 International Conference on Computational Intelligence and Security (CIS 2010), P329, DOI 10.1109/CIS.2010.77
   Shull F, 2008, GUIDE ADV EMPIRICAL
   Stats A, 2016, NUMBER ANDROID APPL
   Syer MD, 2011, IEEE INT WORK C SO, P55, DOI 10.1109/SCAM.2011.25
   Syer MarkD., 2013, Proceedings of the 2013 Conference of the Center for Advanced Studies on Collaborative Research, CASCON '13, P283
   Taba SES, 2014, LECT NOTES COMPUT SC, V8541, P370, DOI 10.1007/978-3-319-08245-5_22
   Wasserman A.I., 2010, Proceedings of the FSE/SDP Workshop on Future of Software Engineering Research, P397, DOI [DOI 10.1145/1882362.1882443, 10.1145/1882362.1882443]
   Winter B., 2013, A very basic tutorial for performing linear mixed effects analyses
   Zuur A., 2009, MIXED EFFECTS MODELS
NR 54
TC 34
Z9 37
U1 0
U2 45
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2017
VL 22
IS 6
BP 3088
EP 3116
DI 10.1007/s10664-017-9507-3
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FI3MB
UT WOS:000411865400010
DA 2024-07-18
ER

PT J
AU Herbold, S
   Trautsch, A
   Grabowski, J
AF Herbold, Steffen
   Trautsch, Alexander
   Grabowski, Jens
TI Global vs. local models for cross-project defect prediction A
   replication study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Defect prediction; Cross-project; Local models
ID SOFTWARE
AB Although researchers invested significant effort, the performance of defect prediction in a cross-project setting, i.e., with data that does not come from the same project, is still unsatisfactory. A recent proposal for the improvement of defect prediction is using local models. With local models, the available data is first clustered into homogeneous regions and afterwards separate classifiers are trained for each homogeneous region. Since the main problem of cross-project defect prediction is data heterogeneity, the idea of local models is promising. Therefore, we perform a conceptual replication of the previous studies on local models with a focus on cross-project defect prediction. In a large case study, we evaluate the performance of local models and investigate their advantages and drawbacks for cross-project predictions. To this aim, we also compare the performance with a global model and a transfer learning technique designed for cross-project defect predictions. Our findings show that local models make only a minor difference in comparison to global models and transfer learning for cross-project defect prediction. While these results are negative, they provide valuable knowledge about the limitations of local models and increase the validity of previously gained research results.
C1 [Herbold, Steffen; Trautsch, Alexander; Grabowski, Jens] Georg August Univ Gottingen, Inst Comp Sci, Gottingen, Germany.
C3 University of Gottingen
RP Herbold, S (corresponding author), Georg August Univ Gottingen, Inst Comp Sci, Gottingen, Germany.
EM herbold@cs.uni-goettingen.de; alexander.trautsch@stud.uni-goettingen.de;
   graboswki@cs.uni-goettingen.de
RI Herbold, Steffen/I-4659-2019; Trautsch, Alexander/ABH-7306-2020
OI Herbold, Steffen/0000-0001-9765-2803; Trautsch,
   Alexander/0000-0001-5236-7953
CR Amasaki S, 2015, 41 EUR C SOFTW ENG A
   [Anonymous], P 37 INT C SOFTW ENG
   [Anonymous], P 37 INT C SOFTW ENG
   [Anonymous], 2002, LEARNING KERNELS
   Bettenburg N, 2012, P 9 IEEE WORK C MIN
   Bettenburg N, 2015, EMPIR SOFTW ENG, V20, P294, DOI 10.1007/s10664-013-9292-6
   Caglayan B, 2015, P 37 INT C SOFTW ENG
   Camargo Cruz AE, 2009, P 3 INT S EMP SOFTW
   Carver JC, 2010, P INT WORKSH REPL EM
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Cohen J., 1992, P 37 INT C SOFTW ENG, P98
   D'Ambros M, 2010, P 7 IEEE WORK C MIN
   DEMPSTER AP, 1977, J ROY STAT SOC B MET, V39, P1, DOI 10.1111/j.2517-6161.1977.tb01600.x
   Drummond Chris, 2003, WORKSH LEARN IMB DAT, V11, P1
   Faloutsos C., 1995, SIGMOD Record, V24, P163, DOI 10.1145/568271.223812
   Fraley C, 1999, J CLASSIF, V16, P297, DOI 10.1007/s003579900058
   Gray D, 2011, P 15 ANN C EV ASS SO
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Halstead M.H., 1977, OPERATING PROGRAMMIN
   Han J, 2012, MOR KAUF D, P1
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   He Peng., 2014, CORR
   He Z, 2013, P 7 INT S EMP SOFTW
   He ZM, 2012, AUTOMAT SOFTW ENG, V19, P167, DOI 10.1007/s10515-011-0090-3
   Henderson-Sellers B., 1996, Object-Oriented Metrics, measures of complexity
   Herbold S, 2015, P 4 INT WORKSH SOFTW
   Herbold Steffen, 2013, P 9 INT C PRED MOD S, P1
   Huang L, 2010, P 25 IEEE ACM INT C
   Jelihovschi E.G., 2014, TEMA (São Carlos), V15, P3
   Jiang Y, 2008, EMPIR SOFTW ENG, V13, P561, DOI 10.1007/s10664-008-9079-3
   Jureczko M, 2010, ACM INT C P SERIES, DOI [10.1145/1868328.1868342, DOI 10.1145/1868328.1868342]
   Kawata K, 2015, 3RD INTERNATIONAL CONFERENCE ON APPLIED COMPUTING AND INFORMATION TECHNOLOGY (ACIT 2015) 2ND INTERNATIONAL CONFERENCE ON COMPUTATIONAL SCIENCE AND INTELLIGENCE (CSI 2015), P2, DOI 10.1109/ACIT-CSI.2015.104
   Kitchenham B, 2008, EMPIR SOFTW ENG, V13, P219, DOI 10.1007/s10664-008-9061-0
   Kocaguneli E, 2013, IEEE T SOFTWARE ENG, V39, P1040, DOI 10.1109/TSE.2012.88
   Kotsiantis S., 2006, International Journal of Computer Science, V1, P111
   Ma Y, 2012, INFORM SOFTWARE TECH, V54, P248, DOI 10.1016/j.infsof.2011.09.007
   Madeyski L, 2015, SOFTWARE QUAL J, V23, P393, DOI 10.1007/s11219-014-9241-7
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Meneely A., 2008, P 16 ACM SIGSOFT INT, P13, DOI DOI 10.1145/1453101.1453106
   Menzies T, 2011, P 26 IEEE ACM INT C
   Menzies T., 2008, P 4 INT WORKSH PRED
   Menzies T, 2014, TERA PROMISE
   Menzies T, 2013, IEEE T SOFTWARE ENG, V39, P822, DOI 10.1109/TSE.2012.83
   Nam J., 2013, P 35 INT C SOFTW ENG
   Nam J, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P508, DOI 10.1145/2786805.2786814
   Ngomo ACN, 2009, THESIS
   Pan SJ, 2010, IEEE T KNOWL DATA EN, V22, P1345, DOI 10.1109/TKDE.2009.191
   Peters F, 2015, P 37 INT C SOFTW ENG
   Peters F, 2013, IEEE T SOFTWARE ENG, V39, P1054, DOI 10.1109/TSE.2013.6
   Premraj R, 2011, P INT S EMP SOFTW EN
   Rahman F, 2012, P ACM SIGSOFT 20 INT, DOI 10.1145/2393596.2393669
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Scanniello G., 2013, P 28 IEEE ACM INT C
   Schikuta E, 1993, P 15 INT C PATT REC
   SCOTT AJ, 1974, BIOMETRICS, V30, P507, DOI 10.2307/2529204
   Shepperd M, 2013, IEEE T SOFTWARE ENG, V39, P1208, DOI 10.1109/TSE.2013.11
   Shull FJ, 2008, EMPIR SOFTW ENG, V13, P211, DOI 10.1007/s10664-008-9060-1
   Siegmund J, 2015, 37 INT C SOFTW ENG
   Tantithamthavorn C, 2016, PROC INT CONF SOFTW, P321, DOI 10.1145/2884781.2884857
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   van Gestel T, 2004, MACH LEARN, V54, P5, DOI 10.1023/B:MACH.0000008082.80494.e0
   Watanabe S., 2008, P INT C SOFTW ENG, P19, DOI [10.1145/1370788.1370794, DOI 10.1145/1370788.1370794]
   Xu R, 2005, IEEE T NEURAL NETWOR, V16, P645, DOI 10.1109/TNN.2005.845141
   Zhang F, 2014, P 11 WORK C MIN SOFT
   Zhang F, 2016, EMPIR SOFTW ENG, V21, P2107, DOI 10.1007/s10664-015-9396-2
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
NR 67
TC 47
Z9 49
U1 0
U2 12
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2017
VL 22
IS 4
BP 1866
EP 1902
DI 10.1007/s10664-016-9468-y
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FB6ZI
UT WOS:000406290500008
DA 2024-07-18
ER

PT J
AU Beller, M
   Zaidman, A
   Karpov, A
   Zwaan, RA
AF Beller, Moritz
   Zaidman, Andy
   Karpov, Andrey
   Zwaan, Rolf A.
TI The last line effect explained
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Micro-clones; Code clones; Clone detection; Last line effect;
   Psychology; Interdisciplinary work
AB Micro-clones are tiny duplicated pieces of code; they typically comprise only few statements or lines. In this paper, we study the "Last Line Effect," the phenomenon that the last line or statement in a micro-clone is much more likely to contain an error than the previous lines or statements. We do this by analyzing 219 open source projects and reporting on 263 faulty micro-clones and interviewing six authors of real-world faulty micro-clones. In an interdisciplinary collaboration, we examine the underlying psychological mechanisms for the presence of these relatively trivial errors. Based on the interviews and further technical analyses, we suggest that so-called "action slips" play a pivotal role for the existence of the last line effect: Developers' attention shifts away at the end of a micro-clone creation task due to noise and the routine nature of the task. Moreover, all micro-clones whose origin we could determine were introduced in unusually large commits. Practitioners benefit from this knowledge twofold: 1) They can spot situations in which they are likely to introduce a faulty micro-clone and 2) they can use PVS-Studio, our automated micro-clone detector, to help find erroneous micro-clones.
C1 [Beller, Moritz; Zaidman, Andy] Delft Univ Technol, Delft, Netherlands.
   [Karpov, Andrey] OOO Program Verificat Syst, Tula, Russia.
   [Zwaan, Rolf A.] Erasmus Univ, Dept Psychol, Rotterdam, Netherlands.
C3 Delft University of Technology; Erasmus University Rotterdam - Excl
   Erasmus MC; Erasmus University Rotterdam
RP Beller, M (corresponding author), Delft Univ Technol, Delft, Netherlands.
EM m.m.beller@tudelft.nl; a.e.zaidman@tudelft.nl; karpov@viva64.com;
   zwaan@fsw.eur.nl
RI ; Zaidman, Andy/O-6542-2014
OI Zwaan, Rolf/0000-0001-9967-7879; Beller, Moritz/0000-0003-4852-0526;
   Zaidman, Andy/0000-0003-2413-3935
CR ADAIR JG, 1984, J APPL PSYCHOL, V69, P334, DOI 10.1037/0021-9010.69.2.334
   Anderson John Robert, 1980, Cognitive Psychology and Its Implications
   Balazinska M., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P292, DOI 10.1109/METRIC.1999.809750
   BASIT H A, 2007, P 6 JOINT M EUR SOFT, P513, DOI DOI 10.1145/1287624.1287698
   Baxter ID, 1998, PROC IEEE INT CONF S, P368, DOI 10.1109/ICSM.1998.738528
   Beller M., 2014, 11 WORK C MIN SOFTW, P202, DOI DOI 10.1145/2597073.2597082
   Beller M., 2015, P 10 JOINT M EUR SOF
   Beller M, 2016, 2016 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING RESEARCH AND INDUSTRIAL PRACTICE (SER&IP), P53, DOI 10.1145/2897022.2897027
   Beller M, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P470, DOI 10.1109/SANER.2016.105
   Beller M, 2015, INT C PROGRAM COMPRE, P240, DOI 10.1109/ICPC.2015.34
   Beller M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P559, DOI 10.1109/ICSE.2015.193
   Bellon S, 2007, IEEE T SOFTWARE ENG, V33, P577, DOI 10.1109/TSE.2007.70725
   Bland JM, 2000, BRIT MED J, V320, P1468, DOI 10.1136/bmj.320.7247.1468
   Botvinick M, 2004, PSYCHOL REV, V111, P395, DOI 10.1037/0033-295X.111.2.395
   Busjahn T, 2015, INT C PROGRAM COMPRE, P255, DOI 10.1109/ICPC.2015.36
   Chatterji D, 2011, INT SYMP EMP SOFTWAR, P20, DOI 10.1109/ESEM.2011.10
   Cooper R, 2006, HIERARCHICAL SCHEMAS, V113
   de Wit M, 2009, PROC IEEE INT CONF S, P169, DOI 10.1109/ICSM.2009.5306336
   Fukuda K, 2009, J NEUROSCI, V29, P8726, DOI 10.1523/JNEUROSCI.2145-09.2009
   Göde N, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P311, DOI 10.1145/1985793.1985836
   HEALY AF, 1980, J EXP PSYCHOL HUMAN, V6, P45, DOI 10.1037/0096-1523.6.1.45
   Inoue K., 2012, 2012 Proceedings of the 6th International Workshop on Software Clones (IWSC 2012), P94, DOI 10.1109/IWSC.2012.6227882
   Juergens E, 2009, PROC INT CONF SOFTW, P485, DOI 10.1109/ICSE.2009.5070547
   Kane MJ, 2007, PSYCHOL SCI, V18, P614, DOI 10.1111/j.1467-9280.2007.01948.x
   Kapser C, 2003, 2 INT WORKSH DET SOF, V13
   Kapser CJ, 2008, EMPIR SOFTW ENG, V13, P645, DOI 10.1007/s10664-008-9076-6
   Kim M, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P83
   Koschke R, 2007, DAGST SEM P INT BEG
   Meyerovich LA, 2013, ACM SIGPLAN NOTICES, V48, P1, DOI 10.1145/2509136.2509515
   MORAVCSIK JE, 1995, J EXP PSYCHOL LEARN, V21, P82, DOI 10.1037/0278-7393.21.1.82
   OMALLEY JJ, 1977, PERCEPT MOTOR SKILL, V44, P919, DOI 10.2466/pms.1977.44.3.919
   Rieger M, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P100, DOI 10.1109/WCRE.2004.25
   Roy C., 2007, 2007541 TR SCH COMP
   Roy CK, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P18, DOI 10.1109/CSMR-WCRE.2014.6747168
   Roy CK, 2009, SCI COMPUT PROGRAM, V74, P470, DOI 10.1016/j.scico.2009.02.007
   Siegmund J, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P378, DOI 10.1145/2568225.2568252
   Svajlenko J, 2014, PROC IEEE INT CONF S, P321, DOI 10.1109/ICSME.2014.54
   Trafton JG, 2011, COGN SYST RES, V12, P134, DOI 10.1016/j.cogsys.2010.07.010
   van Tonder R., 2016, 2016 IEEE 24 INT C P, P1
   Xie S, 2013, P 10 WORK C MIN SOFT
   Zibran MF, 2011, 2011 16TH IEEE INTERNATIONAL CONFERENCE ON ENGINEERING OF COMPLEX COMPUTER SYSTEMS (ICECCS), P295, DOI 10.1109/ICECCS.2011.36
NR 41
TC 4
Z9 4
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2017
VL 22
IS 3
BP 1508
EP 1536
DI 10.1007/s10664-016-9489-6
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EW4GE
UT WOS:000402459200019
OA hybrid
DA 2024-07-18
ER

PT J
AU Munaiah, N
   Camilo, F
   Wigham, W
   Meneely, A
   Nagappan, M
AF Munaiah, Nuthan
   Camilo, Felivel
   Wigham, Wesley
   Meneely, Andrew
   Nagappan, Meiyappan
TI Do bugs foreshadow vulnerabilities? An in-depth study of the chromium
   project
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Vulnerability; Code review; Bugs; Security
ID EFFECT SIZE; STATISTICS
AB As developers face an ever-increasing pressure to engineer secure software, researchers are building an understanding of security-sensitive bugs (i.e. vulnerabilities). Research into mining software repositories has greatly increased our understanding of software quality via empirical study of bugs. Conceptually, however, vulnerabilities differ from bugs: they represent an abuse of functionality as opposed to insufficient functionality commonly associated with traditional, non-security bugs. We performed an in-depth analysis of the Chromium project to empirically examine the relationship between bugs and vulnerabilities. We mined 374,686 bugs and 703 post-release vulnerabilities over five Chromium releases that span six years of development. We used logistic regression analysis, ranking analysis, bug type classifications, developer experience, and vulnerability severity metrics to examine the overarching question: are bugs and vulnerabilities in the same files? While we found statistically significant correlations between pre-release bugs and post-release vulnerabilities, we found the association to be weak. Number of features, source lines of code, and pre-release security bugs are, in general, more closely associated with post-release vulnerabilities than any of our non-security bug categories. In further analysis, we examined sub-types of bugs, such as stability-related bugs, and the associations did not improve. Even the files with the most severe vulnerabilities (by measure of CVSS or bounty payouts) did not show strong correlations with number of bugs. These results indicate that bugs and vulnerabilities are empirically dissimilar groups, motivating the need for security engineering research to target vulnerabilities specifically.
C1 [Munaiah, Nuthan; Camilo, Felivel; Wigham, Wesley; Meneely, Andrew; Nagappan, Meiyappan] Rochester Inst Technol, Dept Software Engn, 134 Lomb Mem Dr, Rochester, NY 14623 USA.
C3 Rochester Institute of Technology
RP Munaiah, N (corresponding author), Rochester Inst Technol, Dept Software Engn, 134 Lomb Mem Dr, Rochester, NY 14623 USA.
EM nm6061@rit.edu; fddc7162@rit.edu; waw5336@rit.edu; axmvse@rit.edu;
   mxnvse@rit.edu
RI Munaiah, Nuthan/AAR-6905-2021
OI Meneely, Andy/0000-0002-4850-1408; Munaiah, Nuthan/0000-0003-2071-664X
FU National Science Foundation [CCF-1441444]; Direct For Education and
   Human Resources; Division Of Graduate Education [1433736] Funding
   Source: National Science Foundation
FX This research is supported by the National Science Foundation (grant
   CCF-1441444). Any opinions, findings, and conclusions or recommendations
   expressed in this material are those of the author(s) and do not
   necessarily reflect the views of the National Science Foundation. We
   thank the Software Archeology group at RIT for their valuable
   contributions to this work.
CR Algarni A., 2014, International Journal of Computer, Information Science and Engineering, P71
   Allodi L, 2014, ACM T INFORM SYST SE, V17, DOI 10.1145/2630069
   Allodi L, 2013, IEEE CS SECURITY AND PRIVACY WORKSHOPS (SPW 2013), P165, DOI 10.1109/SPW.2013.16
   [Anonymous], 2014, P 6 INT WORKSHOP SOC
   [Anonymous], 2012, P 2012 ACM WORKSH BU
   Bird C., 2015, The Art and Science of Analyzing Software Data
   Bozorgi M., 2010, Proceedings of of 16th International Conference of on Knowledge discovery and data mining, P105
   Burnham KP, 2004, SOCIOL METHOD RES, V33, P261, DOI 10.1177/0049124104268644
   Chen TY, 2004, QSIC 2004: PROCEEDINGS OF THE FOURTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, P146
   Cohen J., 1988, STAT POWER ANAL BEHA
   Cohen J., 1992, Current Directions in Psychological Science, V1, P98, DOI [DOI 10.1111/1467-8721.EP10768783, 10.1111/1467-8721.ep10768783]
   Cruz AEC, 2009, INT SYMP EMP SOFTWAR, P461
   Finifter M, 2013, USENIX SECURITY, V13
   Gegick M, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P181, DOI 10.1109/ICST.2009.36
   Gegick Michael., 2008, QOP 08, P31, DOI DOI 10.1145/1456362.1456370
   Guisan A, 2000, ECOL MODEL, V135, P147, DOI 10.1016/S0304-3800(00)00354-9
   Krishnamurthy S, 2006, BOUNTY PROGRAMS FREE
   Krsul I., 1998, THESIS
   Meneely Andrew, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P65, DOI 10.1109/ESEM.2013.19
   Miller Charles, 2007, WORKSHOP EC INFORM S
   Mitropoulos D., 2012, 2012 16th Panhellenic Conference on Informatics (PCI 2012), P117, DOI 10.1109/PCi.2012.15
   Mitropoulos D., 2013, LASER 2013 LASER 201, P37
   Mukaka MM, 2012, MALAWI MED J, V24, P69
   Neuhaus S, 2007, CCS'07: PROCEEDINGS OF THE 14TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P529
   Poncin W, 2011, EUR CON SFTWR MTNCE, P5, DOI 10.1109/CSMR.2011.5
   Pournelle G. H., 1953, Journal of Mammalogy, V34, P133, DOI 10.1890/0012-9658(2002)083[1421:SDEOLC]2.0.CO;2
   Radianti J, 2007, 40 ANN HAW INT C SYS
   Raftery AE, 1995, SOCIOL METHODOL, V25, P111, DOI 10.2307/271063
   Ruscio J, 2008, PSYCHOL METHODS, V13, P19, DOI 10.1037/1082-989X.13.1.19
   SCHNEIDEWIND NF, 1992, IEEE T SOFTWARE ENG, V18, P410, DOI 10.1109/32.135774
   Shihab E., 2011, Proceedings of the ACM SIGSOFT symposium and the European Conference on Foundations of Software Engineering, P300
   Shin Y, 2011, IEEE T SOFTWARE ENG, V37, P772, DOI 10.1109/TSE.2010.81
   Tantithamthavorn C, 2015, P 37 INT C IN PRESS
   Tegarden D.P., 1992, P 25 HAWAII INT C SY, V4, P359
   Tse-Hsun Chen, 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P189, DOI 10.1109/MSR.2012.6224280
   Younis A, 2016, SOFTWARE QUAL J, V24, P159, DOI 10.1007/s11219-015-9274-6
   Younis AA, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P252, DOI 10.1109/QRS.2015.44
   Zakzanis KK, 2001, ARCH CLIN NEUROPSYCH, V16, P653, DOI 10.1016/S0887-6177(00)00076-7
   Zimmermann Thomas, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P421, DOI 10.1109/ICST.2010.32
NR 39
TC 17
Z9 22
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2017
VL 22
IS 3
BP 1305
EP 1347
DI 10.1007/s10664-016-9447-3
PG 43
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EW4GE
UT WOS:000402459200012
DA 2024-07-18
ER

PT J
AU Mkaouer, MW
   Kessentini, M
   Cinnéide, MO
   Hayashi, S
   Deb, K
AF Mkaouer, Mohamed Wiem
   Kessentini, Marouane
   Cinneide, Mel O.
   Hayashi, Shinpei
   Deb, Kalyanmoy
TI A robust multi-objective approach to balance severity and importance of
   refactoring opportunities
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Search-based software engineering; Refactoring under uncertainty;
   Software quality; Robust multi-objective optimization
ID OPTIMIZATION; ALGORITHM; BAD
AB Refactoring large systems involves several sources of uncertainty related to the severity levels of code smells to be corrected and the importance of the classes in which the smells are located. Both severity and importance of identified refactoring opportunities (e.g. code smells) are difficult to estimate. In fact, due to the dynamic nature of software development, these values cannot be accurately determined in practice, leading to refactoring sequences that lack robustness. In addition, some code fragments can contain severe quality issues but they are not playing an important role in the system. To address this problem, we introduced a multi-objective robust model, based on NSGA-II, for the software refactoring problem that tries to find the best trade-off between three objectives to maximize: quality improvements, severity and importance of refactoring opportunities to be fixed. We evaluated our approach using 8 open source systems and one industrial project, and demonstrated that it is significantly better than state-of-the-art refactoring approaches in terms of robustness in all the experiments based on a variety of real-world scenarios. Our suggested refactoring solutions were found to be comparable in terms of quality to those suggested by existing approaches, better prioritization of refactoring opportunities and to carry an acceptable robustness price.
C1 [Mkaouer, Mohamed Wiem; Kessentini, Marouane] Univ Michigan, Dearborn, MI 48128 USA.
   [Cinneide, Mel O.] Univ Coll Dublin, Dublin, Ireland.
   [Hayashi, Shinpei] Tokyo Inst Technol, Tokyo, Japan.
   [Deb, Kalyanmoy] Michigan State Univ, E Lansing, MI 48824 USA.
C3 University of Michigan System; University of Michigan; University
   College Dublin; Tokyo Institute of Technology; Michigan State University
RP Kessentini, M (corresponding author), Univ Michigan, Dearborn, MI 48128 USA.
EM mmkaouer@umich.edu; kessentiniglp@yahoo.fr; mel.ocinneide@ucd.ie;
   hayashi@se.cs.titech.ac.jp; kdeb@egr.msu.edu
RI Mkaouer, Mohamed Wiem/N-7476-2017; Ó Cinnéide, Mel/GQP-1737-2022
OI Mkaouer, Mohamed Wiem/0000-0001-6010-7561; Hayashi,
   Shinpei/0000-0001-7988-7772
FU Grants-in-Aid for Scientific Research [15H02683, 15K15970] Funding
   Source: KAKEN
CR Anda Bente, 2007, 2007 IEEE International Conference on Software Maintenance, P204, DOI 10.1109/ICSM.2007.4362633
   [Anonymous], 2010, 2010 IEEE International Conference on Software Maintenance, DOI [10.1109/ICSM.2010.5609564, DOI 10.1109/ICSM.2010.5609564]
   Antoniol G, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P172, DOI 10.1109/METRIC.2004.1357901
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   Beyer HG, 2007, COMPUT METHOD APPL M, V196, P3190, DOI 10.1016/j.cma.2007.03.003
   Beyer HG, 2004, LECT NOTES COMPUT SC, V3102, P654
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Chatzigeorgiou A, 2013, NASA J
   Cinnéide MO, 2012, INT SYMP EMP SOFTWAR, P49, DOI 10.1145/2372251.2372260
   Coad P., 1991, OBJECT ORIENTED DESI
   Coelho W., 2007, J ED RESOURCES COMPU, V7
   D'Ambros Marco, 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P23, DOI 10.1109/QSIC.2010.58
   Das I, 2000, ENG OPTIMIZ, V32, P585, DOI 10.1080/03052150008941314
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Deb K, 2011, ENG OPTIMIZ, V43, P1175, DOI 10.1080/0305215X.2010.548863
   Du Bois B, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P144, DOI 10.1109/WCRE.2004.33
   Esteves Paixao M-H, 2013, P C GEN EV COMP GECC
   Fokaefs M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1037, DOI 10.1145/1985793.1985989
   Fontana FA, 2016, EMPIR SOFTW ENG, V21, P1143, DOI 10.1007/s10664-015-9378-4
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Glass RL, 2001, IEEE SOFTWARE, V18, P112, DOI 10.1109/MS.2001.922739
   Gueorguiev S., 2009, P 11 ANN C GENETIC E, P1673, DOI DOI 10.1145/1569901.1570125
   Hall T, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2629648
   Harman M, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1106
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Jensen und A.C., 2010, Proceedings of the 12th Annual Conference on Genetic and Evolutionary Computation. GECCO '10, P1341
   Jin Y, 2005, IEEE T EVOLUT COMPUT, V9, P303, DOI 10.1109/TEVC.2005.846356
   Jin YC, 2003, LECT NOTES COMPUT SC, V2632, P237
   Kataoka Y, 2001, PROC IEEE INT CONF S, P736, DOI 10.1109/ICSM.2001.972794
   Kerievsky J., 2004, REFACTORING PATTERNS
   Kessentini M, 2011, CONF PROC INT SYMP C, P81, DOI 10.1109/ICPC.2011.22
   Li XD, 2003, LECT NOTES COMPUT SC, V2723, P37
   Mäntylä MV, 2006, EMPIR SOFTW ENG, V11, P395, DOI 10.1007/s10664-006-9002-8
   Marinescu R, 2004, PROC IEEE INT CONF S, P350, DOI 10.1109/ICSM.2004.1357820
   Marinescu R, 2010, P 14 C SOFTW MAINT R
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Mkaouer MW, 2014, LECT NOTES COMPUT SC, V8636, P168
   Moghadam IH, 2012, P EUR C SOFTW MAINT
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   O'Keeffe M, 2008, J SYST SOFTWARE, V81, P502, DOI 10.1016/j.jss.2007.06.003
   Oliveto R, 2010, EUR CON SFTWR MTNCE, P248, DOI 10.1109/CSMR.2010.47
   Opdyke William F., 1992, THESIS
   Ouni A, 2013, AUTOMAT SOFTW ENG, V20, P47, DOI 10.1007/s10515-011-0098-8
   Palomba F, 2013, P INT C AUT SOFTW EN
   Rachmawati L, 2009, IEEE T EVOLUT COMPUT, V13, P810, DOI 10.1109/TEVC.2009.2017515
   Riel AJ., 1996, Object-Oriented Design Heuristics
   Sahraoui HA, 2000, PROC IEEE INT CONF S, P154, DOI 10.1109/ICSM.2000.883034
   Seng O, 2006, GECCO 2006: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1909
   Suny? G., 2001, LNCS, P134, DOI DOI 10.1007/3-540-45441-1_11
   Trifu A, 2007, CSMR 2007: 11TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P39
   Tsantalis N, 2009, IEEE T SOFTWARE ENG, V35, P347, DOI 10.1109/TSE.2009.1
   van Emden E, 2002, NINTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P97, DOI 10.1109/WCRE.2002.1173068
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Yamashita A., 2012, THESIS
   Yamashita A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P306, DOI 10.1109/ICSM.2012.6405287
   Zamani B., 2009, Iranian Journal of Electrical and Computer Engineering, V8, P47
   Zhang M, 2011, J SOFTW MAINT EVOL-R, V23, P179, DOI 10.1002/smr.521
NR 58
TC 37
Z9 47
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2017
VL 22
IS 2
BP 894
EP 927
DI 10.1007/s10664-016-9426-8
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ES9PL
UT WOS:000399891400010
DA 2024-07-18
ER

PT J
AU Chen, TH
   Thomas, SW
   Hassan, AE
AF Chen, Tse-Hsun
   Thomas, Stephen W.
   Hassan, Ahmed E.
TI A survey on the use of topic models when mining software repositories
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Topic modeling; LDA; LSI; Survey
ID INFORMATION-RETRIEVAL; FEATURE LOCATION; PROBABILISTIC RANKING;
   TRACEABILITY LINKS; EXECUTION; PREDICTION; COHESION; SYSTEM;
   COMBINATION; METRICS
AB Researchers in software engineering have attempted to improve software development by mining and analyzing software repositories. Since the majority of the software engineering data is unstructured, researchers have applied Information Retrieval (IR) techniques to help software development. The recent advances of IR, especially statistical topic models, have helped make sense of unstructured data in software repositories even more. However, even though there are hundreds of studies on applying topic models to software repositories, there is no study that shows how the models are used in the software engineering research community, and which software engineering tasks are being supported through topic models. Moreover, since the performance of these topic models is directly related to the model parameters and usage, knowing how researchers use the topic models may also help future studies make optimal use of such models. Thus, we surveyed 167 articles from the software engineering literature that make use of topic models. We find that i) most studies centre around a limited number of software engineering tasks; ii) most studies use only basic topic models; iii) and researchers usually treat topic models as black boxes without fully exploring their underlying assumptions and parameter values. Our paper provides a starting point for new researchers who are interested in using topic models, and may help new researchers and practitioners determine how to best apply topic models to a particular software engineering task.
C1 [Chen, Tse-Hsun; Thomas, Stephen W.; Hassan, Ahmed E.] Queens Univ, SAIL, Kingston, ON, Canada.
C3 Queens University - Canada
RP Chen, TH (corresponding author), Queens Univ, SAIL, Kingston, ON, Canada.
EM tsehsun@cs.queensu.ca; sthomas@cs.queensu.ca; ahmed@cs.queensu.ca
RI Hassan, Ahmed/AAB-7241-2019; Ali, Ahmed/HOF-4672-2023; KHALIFA, AHMED
   khalifa/HKF-2246-2023
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; Chen,
   Tse-Hsun/0000-0003-4027-0905
CR Abebe SL, 2013, J SYST SOFTWARE, V86, P2919, DOI 10.1016/j.jss.2013.07.009
   Ahsan SN, 2009, 2009 FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING ADVANCES (ICSEA 2009), P216, DOI 10.1109/ICSEA.2009.92
   Alhindawi N, 2013, PROC IEEE INT CONF S, P300, DOI 10.1109/ICSM.2013.41
   Alhindawi N, 2013, 2013 7TH INTERNATIONAL WORKSHOP ON TRACEABILITY IN EMERGING FORMS OF SOFTWARE ENGINEERING (TEFSE), P79, DOI 10.1109/TEFSE.2013.6620159
   Ali N., 2012, 2012 12th IEEE Working Conference on Source Code Analysis and Manipulation (SCAM 2012), P174, DOI 10.1109/SCAM.2012.26
   Ali N, 2015, EMPIR SOFTW ENG, V20, P442, DOI 10.1007/s10664-014-9315-y
   Ali N, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P191, DOI 10.1109/ICSM.2012.6405271
   Alipour A, 2013, IEEE WORK CONF MIN S, P183, DOI 10.1109/MSR.2013.6624026
   Allamanis M, 2013, IEEE WORK CONF MIN S, P53, DOI 10.1109/MSR.2013.6624004
   Andrzejewski D, 2007, LECT NOTES ARTIF INT, V4701, P6
   Nguyen AT, 2012, IEEE INT CONF AUTOM, P70, DOI 10.1145/2351676.2351687
   Anh Tuan Nguyen, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P263, DOI 10.1109/ASE.2011.6100062
   [Anonymous], 1999, MODERN INFORM RETRIE
   [Anonymous], 2010, P 32 ACMIEEE INT C S
   [Anonymous], 2013, Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering-ESEC/FSE 2013, page
   [Anonymous], 2008, Advances in Neural Information Processing Systems
   [Anonymous], 2010, IEEE INT C SOFTWARE
   [Anonymous], 2007, LATENT SEMANTIC ANAL
   [Anonymous], 2009, TEXT MINING CLASSIFI, DOI [DOI 10.1145/1141844.1143859, DOI 10.1201/9781420059458.CH4]
   [Anonymous], 2008, INTRO INFORM RETRIEV, DOI DOI 10.1017/CBO9780511809071
   [Anonymous], 2010, ASE 10 P IEEE ACM IN, DOI DOI 10.1145/1858996.1859024
   [Anonymous], 1983, INTRO MODERN INFORM
   [Anonymous], 1987, Latent variable models and factors analysis
   ANTHES G, 2010, COMMUN ACM, V53, P16
   Antoniol G, 2008, PROC IEEE INT CONF S, P147, DOI 10.1109/ICSM.2008.4658063
   Asadi F., 2010, 2010 Proceedings of Second International Symposium on Search Based Software Engineering (SSBSE), P153, DOI 10.1109/SSBSE.2010.26
   Asadi F, 2010, EUR CON SFTWR MTNCE, P31, DOI 10.1109/CSMR.2010.17
   Asuncion HU, 2010, 2010 ACM IEEE 32 INT, V1, P95
   Bajaj K, 2014, P 11 WORK C MIN SOFT, P112
   BAJRACHARYA S, 2010, EMPIR SOFTW ENG, P1
   Bajracharya S, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P111, DOI 10.1109/MSR.2009.5069489
   Baldi PF, 2008, ACM SIGPLAN NOTICES, V43, P543, DOI 10.1145/1449955.1449807
   Barnard K, 2003, J MACH LEARN RES, V3, P1107, DOI 10.1162/153244303322533214
   Barua A., 2012, J ESME 12, V19, P619
   Bassett B, 2013, CONF PROC INT SYMP C, P133, DOI 10.1109/ICPC.2013.6613841
   Bavota G., 2012, EMPIR SOFTW ENG, V18, P901
   Bavota G, 2014, IEEE T SOFTWARE ENG, V40, P671, DOI 10.1109/TSE.2013.60
   Bavota G, 2013, 2013 7TH INTERNATIONAL WORKSHOP ON TRACEABILITY IN EMERGING FORMS OF SOFTWARE ENGINEERING (TEFSE), P83, DOI 10.1109/TEFSE.2013.6620160
   Beard M., 2011, 2011 18th Working Conference on Reverse Engineering, P124, DOI 10.1109/WCRE.2011.23
   Bellon S, 2007, IEEE T SOFTWARE ENG, V33, P577, DOI 10.1109/TSE.2007.70725
   Bettenburg N., 2010, Proceedings of the 17th Working Conference on Reverse Engineering, P277
   Biggers LR, 2014, EMPIR SOFTW ENG, V19, P465, DOI 10.1007/s10664-012-9224-x
   Bing Xie, 2013, Safe and Secure Software Reuse. 13th International Conference on Software Reuse, ICSR 2013. Proceedings: LNCS 7925, P239, DOI 10.1007/978-3-642-38977-1_16
   Binkley D., 2014, 22nd International Conference on Program Comprehension (Hyderabad, India, 2014), P26, DOI [DOI 10.1145/2597008.2597150, 10.1145/2597008.2597150]
   Binkley D, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P588, DOI 10.1109/ICSM.2012.6405328
   Bishop C.M., 1998, LATENT VARIABLE MODE
   Blei D.M., 2006, INT C MACHINE LEARNI, DOI [DOI 10.1145/1143844.1143859, 10.1145/1143844.1143859]
   Blei DM, 2007, ANN APPL STAT, V1, P17, DOI 10.1214/07-AOAS114
   Blei DM, 2010, J ACM, V57, DOI 10.1145/1667053.1667056
   Blei DM, 2004, ADV NEUR IN, V16, P17
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Blumberg R., 2003, DM Review, V13, P42
   Borg M, 2014, EMPIR SOFTW ENG, V19, P1565, DOI 10.1007/s10664-013-9255-y
   Bose JC, 2008, P 19 AUSTR C SOFTW E, P67
   Bradford RogerB., 2008, Proceedings of the 17th ACM Conference on Information and Knowledge Management, CIKM '08, P153, DOI DOI 10.1145/1458082.1458105
   Brickey J, 2012, IEEE T SOFTWARE ENG, V38, P537, DOI 10.1109/TSE.2011.60
   Campbell JC, 2013, IEEE WORK CONF MIN S, P57, DOI 10.1109/MSR.2013.6624005
   Canfora G, 2014, EMPIR SOFTW ENG, V19, P1, DOI 10.1007/s10664-012-9214-z
   Capobianco G, 2009, WORK CONF REVERSE EN, P195, DOI 10.1109/WCRE.2009.14
   Carpineto C, 2012, ACM COMPUT SURV, V44, DOI 10.1145/2071389.2071390
   Carreño LVG, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P582, DOI 10.1109/ICSE.2013.6606604
   Chang J., 2009, AISTATS
   Chang J, 2009, KDD-09: 15TH ACM SIGKDD CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P169
   Chen T-H, 2015, EMPIRICAL STUD UNPUB
   Cleary B, 2009, EMPIR SOFTW ENG, V14, P93, DOI 10.1007/s10664-008-9095-3
   COMON P, 1994, SIGNAL PROCESS, V36, P287, DOI 10.1016/0165-1684(94)90029-9
   Corley C. S., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P173
   Dallmeier V., 2007, P 22 IEEE ACM INT C, P433
   Dan Han, 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P83, DOI 10.1109/WCRE.2012.18
   Dasgupta T, 2013, PROC IEEE INT CONF S, P320, DOI 10.1109/ICSM.2013.43
   de Boer RC, 2008, J SYST SOFTWARE, V81, P1456, DOI 10.1016/j.jss.2007.12.815
   De Lucia A, 2004, PROC IEEE INT CONF S, P306, DOI 10.1109/ICSM.2004.1357816
   De Lucia A., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P193
   De Lucia A, 2014, EMPIR SOFTW ENG, V19, P1
   De Lucia A, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1276933.1276934
   De Lucia A, 2011, CONF PROC INT SYMP C, P21, DOI 10.1109/ICPC.2011.34
   De Lucia A, 2006, INT C PROGRAM COMPRE, P307, DOI 10.1109/ICPC.2006.15
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   Dietterich TG, 2000, LECT NOTES COMPUT SC, V1857, P1, DOI 10.1007/3-540-45014-9_1
   Dit B., 2008, P 1 INT WORKSH SEM T
   Dit B, 2014, EMPIR SOFTW ENG, P1
   Dit B, 2013, PROC IEEE INT CONF S, P330, DOI 10.1109/ICSM.2013.44
   Dit B, 2013, 2013 7TH INTERNATIONAL WORKSHOP ON TRACEABILITY IN EMERGING FORMS OF SOFTWARE ENGINEERING (TEFSE), P105, DOI 10.1109/TEFSE.2013.6620164
   Dit B, 2013, EMPIR SOFTW ENG, V18, P277, DOI 10.1007/s10664-011-9194-4
   Eddy BP, 2013, CONF PROC INT SYMP C, P13, DOI 10.1109/ICPC.2013.6613829
   Eyal-Salman Hamzeh, 2013, 2013 39th Euromicro Conference on Software Engineering and Advanced Applications (SEAA), P57, DOI 10.1109/SEAA.2013.65
   Flaherty P, 2005, BIOINFORMATICS, V21, P3286, DOI 10.1093/bioinformatics/bti515
   Gall CS, 2008, IET SOFTW, V2, P17, DOI 10.1049/iet-sen:20070109
   Gethers M., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P540, DOI 10.1109/ASE.2011.6100120
   Gethers M., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P133, DOI 10.1109/ICSM.2011.6080780
   Gethers M, 2012, PROC INT CONF SOFTW, P430, DOI 10.1109/ICSE.2012.6227172
   Gethers M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1034, DOI 10.1145/1985793.1985988
   Godfrey M.W., 2008, IEEE Software, V26, P67
   Gorla A, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1025, DOI 10.1145/2568225.2568276
   Grant S., 2011, 2011 18th Working Conference on Reverse Engineering, P87, DOI 10.1109/WCRE.2011.20
   Grant S, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P303, DOI 10.1109/CSMR-WCRE.2014.6747182
   Grant S, 2012, EUR CON SFTWR MTNCE, P403, DOI 10.1109/CSMR.2012.51
   Grant S, 2011, IEEE INT S WEB SYST, P33, DOI 10.1109/WSE.2011.6081817
   Grant S, 2010, IEEE INT WORK C SO, P65, DOI 10.1109/SCAM.2010.22
   Grant S, 2008, WORK CONF REVERSE EN, P138, DOI 10.1109/WCRE.2008.49
   Grant S, 2009, INT C PROGRAM COMPRE, P233, DOI 10.1109/ICPC.2009.5090048
   Griffiths TL, 2007, PSYCHOL REV, V114, P211, DOI 10.1037/0033-295X.114.2.211
   Griffiths TL, 2004, P NATL ACAD SCI USA, V101, P5228, DOI 10.1073/pnas.0307752101
   Grimes S., 2008, Clarabridge Bridgepoints
   Guo W., 2012, The 50th Annual Meeting of the Association for Computational Linguistics, Proceedings of the Conference, July 8-14, 2012, Jeju Island, Korea-Volume 1: Long Papers, V1, P864
   Haiduc S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P842, DOI 10.1109/ICSE.2013.6606630
   Hall D. D., 2008, P C EMP METH NAT LAN, DOI DOI 10.3115/1613715.1613763
   Hassan A.E, 2010, Proceedings of the FSE/SDP workshop on Future of Software Engineering Research, P161
   Hassan AE, 2005, PROC IEEE INT CONF S, P263
   Hassan AE, 2004, THESIS
   Hassan AE, 2008, 2008 FRONTIERS OF SOFTWARE MAINTENANCE, P48, DOI 10.1109/FOSM.2008.4659248
   Hayes JH, 2006, IEEE T SOFTWARE ENG, V32, P4, DOI 10.1109/TSE.2006.3
   Hindle A., 2010, Proceedings of the 26th International Conference on Software Maintenance, P1, DOI DOI 10.1109/ICSM.2010.5609670
   Hindle A., 2011, P 8 WORK C MIN SOFTW, P163, DOI DOI 10.1145/1985441.1985466
   Hindle A, 2012, EMPIR SOFTW ENG, V20, P479
   Hindle A, 2015, EMPIR SOFTW ENG, V20, P479, DOI 10.1007/s10664-014-9312-1
   Hindle A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P243, DOI 10.1109/ICSM.2012.6405278
   Hindle A, 2012, PROC INT CONF SOFTW, P837, DOI 10.1109/ICSE.2012.6227135
   Hindle A, 2009, PROC IEEE INT CONF S, P339, DOI 10.1109/ICSM.2009.5306310
   Hofmann T, 1999, SIGIR'99: PROCEEDINGS OF 22ND INTERNATIONAL CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P50, DOI 10.1145/312624.312649
   Hofmann T, 2001, MACH LEARN, V42, P177, DOI 10.1023/A:1007617005950
   Hsin-Yi Jiang, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P59, DOI 10.1109/ASE.2008.16
   Hu W, 2013, IEEE WORK CONF MIN S, P419, DOI 10.1109/MSR.2013.6624058
   Hu X., 2003, Proceedings of the 25th Meeting of the Cognitive Science Society, P1
   Iacob C, 2013, IEEE WORK CONF MIN S, P41, DOI 10.1109/MSR.2013.6624001
   Islam MM, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P654, DOI 10.1109/ICSM.2012.6405346
   Islam MM, 2012, EUR CON SFTWR MTNCE, P21, DOI 10.1109/CSMR.2012.13
   Lin MYJ, 2006, 2006 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P351
   Jin O., 2011, CIKM 11, P775, DOI DOI 10.1145/2063576.2063689
   Jolliffe I. T., 2002, PRINCIPAL COMPONENT
   Kagdi H., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P119, DOI 10.1109/WCRE.2010.21
   Kagdi H, 2012, EMPIR SOFTW ENG, V18, P933
   Kagdi H, 2012, J SOFTW-EVOL PROC, V24, P3, DOI 10.1002/smr.530
   Kamei Y., 2010, Proceedings of the 26th International Conference on Software Maintenance, P1, DOI 10.1109/ICSM.2010.5609530
   Kaushik N., 2011, 2011 18th Working Conference on Reverse Engineering, P411, DOI 10.1109/WCRE.2011.58
   Kaushik N, 2012, EUR CON SFTWR MTNCE, P159, DOI 10.1109/CSMR.2012.78
   Kawaguchi S, 2006, J SYST SOFTWARE, V79, P939, DOI 10.1016/j.jss.2005.06.044
   Kelly MB, 2011, IEEE INT WORK C SO, P135, DOI 10.1109/SCAM.2011.23
   Kitchenham BA, 2011, INFORM SOFTWARE TECH, V53, P638, DOI 10.1016/j.infsof.2010.12.011
   Kouters E, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P592, DOI 10.1109/ICSM.2012.6405329
   Kuhn A, 2005, WCRE: 12TH WORKING CONFERENCE ON REVERSE ENGINEERING 2005, PROCEEDINGS, P133
   Kuhn A, 2007, INFORM SOFTWARE TECH, V49, P230, DOI 10.1016/j.infsof.2006.10.017
   Kuhn A, 2010, J SOFTW MAINT EVOL-R, V22, P191, DOI 10.1002/smr.414
   Kuhn A, 2008, WORK CONF REVERSE EN, P209, DOI 10.1109/WCRE.2008.45
   Le TDB, 2013, PROC IEEE INT CONF S, P364, DOI 10.1109/ICSM.2013.48
   LEHMAN MM, 1980, P IEEE, V68, P1060, DOI 10.1109/PROC.1980.11805
   Li Wei, 2006, P 23 INT C MACH LEAR, DOI [10.1145/1143844.1143917, DOI 10.1145/1143844.1143917]
   LIMSETTHO N, 2014, P 15 IEEE ACIS INT C, P1
   Linares-Vásquez M, 2013, IEEE WORK CONF MIN S, P93, DOI 10.1109/MSR.2013.6624014
   Linstead E., 2007, P 22 IEEE ACM INT C, P461, DOI [10.1145/1321631.1321709, DOI 10.1145/1321631.1321709]
   Linstead E., 2007, P 4 INT WORKSHOP MIN, P30
   Linstead E., 2008, ADV NEURAL INFORM PR, P929
   Linstead E, 2009, NIPS WORKSH APPL TOP
   Linstead E, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P99, DOI 10.1109/MSR.2009.5069486
   Linstead E, 2009, DATA MIN KNOWL DISC, V18, P300, DOI 10.1007/s10618-008-0118-x
   Linstead E, 2008, SEVENTH INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS, PROCEEDINGS, P813, DOI 10.1109/ICMLA.2008.47
   Liu YX, 2009, PROC IEEE INT CONF S, P233, DOI 10.1109/ICSM.2009.5306318
   Loehlin J. C., 1987, Latent Variable Models, DOI 10.4324/9781315643199
   Lormans M, 2007, CSMR 2007: 11TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P349
   Lormans M, 2006, WORK CONF REVERSE EN, P275
   Lormans M, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P45
   Lormans M, 2008, EMPIR SOFTW ENG, V13, P727, DOI 10.1007/s10664-008-9078-4
   Lukins SK, 2010, INFORM SOFTWARE TECH, V52, P972, DOI 10.1016/j.infsof.2010.04.002
   Lukins SK, 2008, WORK CONF REVERSE EN, P155, DOI 10.1109/WCRE.2008.33
   Madsen RE, 2004, INT C PATT RECOG, P483, DOI 10.1109/ICPR.2004.1334270
   Maletic J. I., 1999, 14th IEEE International Conference on Automated Software Engineering, P251, DOI 10.1109/ASE.1999.802296
   Maletic JI, 2001, PROC INT CONF SOFTW, P103, DOI 10.1109/ICSE.2001.919085
   Marcus A, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P107, DOI 10.1109/ASE.2001.989796
   Marcus A, 2005, PROG COMPREHEN, P33, DOI 10.1109/WPC.2005.33
   Marcus A, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P214, DOI 10.1109/WCRE.2004.10
   Marcus A, 2003, PROC INT CONF SOFTW, P125, DOI 10.1109/ICSE.2003.1201194
   Marcus A, 2004, PROC IEEE INT CONF S, P469, DOI 10.1109/ICSM.2004.1357837
   Marcus A, 2008, IEEE T SOFTWARE ENG, V34, P287, DOI 10.1109/TSE.2007.70768
   Maskeri Girish, 2008, 1st India Software Engineering Conference. ISEC 2008, P113
   McIlroy S, 2016, EMPIR SOFTW ENG, V21, P1067, DOI 10.1007/s10664-015-9375-7
   McMillan C, 2009, 2009 ICSE WORKSHOP ON TRACEABILITY IN EMERGING FORMS OF SOFTWARE ENGINEERING (TEFSE), P41, DOI 10.1109/TEFSE.2009.5069582
   Medini S., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P135, DOI 10.1109/WCRE.2012.23
   Medini S, 2011, CONF PROC INT SYMP C, P238, DOI 10.1109/ICPC.2011.44
   Mei Q., 2008, P 17 INT C WORLD WID, P101
   Mei QZ, 2007, KDD-2007 PROCEEDINGS OF THE THIRTEENTH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P490
   Mei Qiaozhu., 2005, KDD 05, P198, DOI DOI 10.1145/1081870.1081895
   MILLER GA, 1995, COMMUN ACM, V38, P39, DOI 10.1145/219717.219748
   Mimno David, 2009, EMNLP, P880
   Misirli AT, 2011, SOFTWARE QUAL J, V19, P515, DOI 10.1007/s11219-010-9128-1
   Misra J., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P113, DOI 10.1109/WCRE.2012.21
   Misra J, 2013, ASIA PAC SOFWR ENG, P239, DOI 10.1109/APSEC.2013.41
   Moritz E, 2013, IEEE INT CONF AUTOM, P646, DOI 10.1109/ASE.2013.6693127
   Naguib H, 2013, IEEE WORK CONF MIN S, P22, DOI 10.1109/MSR.2013.6623999
   Neuhaus Stephan, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P111, DOI 10.1109/ISSRE.2010.53
   Newman D., 2010, AUTOMATIC EVALUATION
   Nguyen T. H. D., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P259, DOI 10.1109/WCRE.2010.37
   Nie KM, 2012, ASIA PAC SOFWR ENG, P547, DOI 10.1109/APSEC.2012.116
   Niu N, 2012, P INT COMP SOFTW APP, P219, DOI 10.1109/COMPSAC.2012.32
   Oliveto Rocco, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P68, DOI 10.1109/ICPC.2010.20
   Oliveto R, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P820, DOI 10.1145/1985793.1985913
   Ossher J, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P183, DOI 10.1109/MSR.2009.5069501
   Pagano D, 2013, EMPIR SOFTW ENG, V18, P1090, DOI 10.1007/s10664-012-9211-2
   Panichella A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P522, DOI 10.1109/ICSE.2013.6606598
   Parizy M, 2014, PROC IEEE INT CONF S, P565, DOI 10.1109/ICSME.2014.96
   Paul M., 2009, THESIS
   Petersen K., 2007, Systematic Mapping Studies in Software Engineering, P1
   Phan Xuan-Hieu, 2008, P 17 INT C WORLD WID, P91
   Pingclasai N, 2013, ASIA PAC SOFWR ENG, P13, DOI 10.1109/APSEC.2013.105
   Porteous I., 2008, P 14 ACM SIGKDD INT, P569, DOI DOI 10.1145/1401890.1401960
   PORTER MF, 1980, PROGRAM-AUTOM LIBR, V14, P130, DOI 10.1108/eb046814
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI [10.1109/TSE.2007.1016, 10.1109/TSE.2007.1016.]
   Poshyvanyk D, 2007, INT C PROGRAM COMPRE, P37
   Poshyvanyk D, 2006, INT C PROGRAM COMPRE, P137, DOI 10.1109/ICPC.2006.17
   Poshyvanyk D, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2377656.2377660
   Poshyvanyk D, 2009, PROC INT CONF SOFTW, P283, DOI 10.1109/ICSE-COMPANION.2009.5071002
   Qusef A, 2013, J SOFTW-EVOL PROC, V25, P1167, DOI 10.1002/smr.1573
   Rahman F, 2012, EMPIR SOFTW ENG, V17, P503, DOI 10.1007/s10664-011-9195-3
   Raja U, 2013, EMPIR SOFTW ENG, V18, P117, DOI 10.1007/s10664-012-9197-9
   Rajlich V, 2002, PROG COMPREHEN, P271, DOI 10.1109/WPC.2002.1021348
   Ramage D, 2009, NIPS 2009 WORKSH APP, V5, P1
   Ramage Daniel., 2009, EMNLP, DOI DOI 10.3115/1699510.1699543
   Rao S., 2011, P 8 WORK C MIN SOFTW, P43
   Revelle Meghan, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P14, DOI 10.1109/ICPC.2010.10
   Revelle M, 2009, INT C PROGRAM COMPRE, P218, DOI 10.1109/ICPC.2009.5090045
   Rosen-Zvi Michal., 2004, UAI
   Roy CK, 2009, SCI COMPUT PROGRAM, V74, P470, DOI 10.1016/j.scico.2009.02.007
   Saha RK, 2013, IEEE INT CONF AUTOM, P345, DOI 10.1109/ASE.2013.6693093
   SALTON G, 1975, COMMUN ACM, V18, P613, DOI 10.1145/361219.361220
   Savage T, 2010, Proceedings of the 2010 IEEE International Conference on Software Maintenance, ICSM '10, P1, DOI [10.1109/ICSM.2010.5609654, DOI 10.1109/ICSM.2010.5609654]
   Scanniello Giuseppe, 2010, Proceedings of the 2010 8th IEEE International Conference on Software Engineering and Formal Methods (SEFM 2010), P103, DOI 10.1109/SEFM.2010.19
   Shang WY, 2014, J SOFTW-EVOL PROC, V26, P3, DOI 10.1002/smr.1579
   Shihab Emad, 2010, P ACM IEEE INT S EMP, P1
   Somasundaram K., 2012, Proceedings of the 5th India Software Engineering Conference, ISEC '12, P125, DOI DOI 10.1145/2134254.2134276
   Tairas R, 2009, EMPIR SOFTW ENG, V14, P33, DOI 10.1007/s10664-008-9089-1
   Tang J, 2014, PR MACH LEARN RES, V32
   Thomas SW, 2014, EMPIR SOFTW ENG, V19, P182, DOI 10.1007/s10664-012-9219-7
   Thomas SW, 2013, IEEE T SOFTWARE ENG, V39, P1427, DOI 10.1109/TSE.2013.27
   Thomas SW, 2010, IEEE INT WORK C SO, P55, DOI 10.1109/SCAM.2010.13
   Tian K, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P163, DOI 10.1109/MSR.2009.5069496
   Tichy W, 2010, UBIQUITY 2010
   Tse-Hsun Chen, 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P189, DOI 10.1109/MSR.2012.6224280
   Nguyen TT, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P932, DOI 10.1145/1985793.1985950
   Ujházi B, 2010, IEEE INT WORK C SO, P33, DOI 10.1109/SCAM.2010.14
   van der Spek P, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P253
   Wall M. E., 2003, PRACTICAL APPROACH M, P91, DOI [10.1007/0-306-47815-35, DOI 10.1007/0-306-47815-35, 10.1007/0-306-47815-3_5]
   Wallach H, 2009, P NIPS 09 VANC BC
   Wallach H.M., 2009, P 26 ANN INT C MACH, P1105, DOI DOI 10.1145/1553374.1553515
   Wang C., 2009, International Conference on Artificial Intelligence and Statistics, V5, P583
   Wang SQ, 2011, PANCREATOLOGY, V11, P92, DOI 10.1159/000327688
   Wang Xuerui., P 12 ACM SIGKDD INT, P424
   Wu C, 2008, ASWEC 2008: 19TH AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P412
   Xia X, 2013, WORK CONF REVERSE EN, P72, DOI 10.1109/WCRE.2013.6671282
   Yan X., 2013, P 22 INT C WORLD WID, P1445, DOI DOI 10.1145/2488388.2488514
   Yang G, 2014, P INT COMP SOFTW APP, P97, DOI 10.1109/COMPSAC.2014.16
   Yinxing Xue, 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P145, DOI 10.1109/WCRE.2012.24
   Yu SS, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P621, DOI 10.1109/ICSM.2012.6405337
   Zhai C, 2008, SYNTHESIS LECT HUMAN, V1, P1, DOI [DOI 10.2200/S00158ED1V01Y200811HLT001, 10.2200/S00158ED1V01Y200811HLT001]
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
   Zimmermann T, 2005, IEEE T SOFTWARE ENG, V31, P429, DOI 10.1109/TSE.2005.72
   Zou CY, 2014, PROC IEEE INT CONF S, P593, DOI 10.1109/ICSME.2014.103
NR 255
TC 110
Z9 123
U1 0
U2 23
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2016
VL 21
IS 5
BP 1843
EP 1919
DI 10.1007/s10664-015-9402-8
PG 77
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DU2BX
UT WOS:000382017100001
DA 2024-07-18
ER

PT J
AU Assar, S
   Borg, M
   Pfahl, D
AF Assar, Said
   Borg, Markus
   Pfahl, Dietmar
TI Using text clustering to predict defect resolution time: a conceptual
   replication and an evaluation of prediction accuracy
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Defect resolution time; Prediction; Text mining; Data clustering;
   Independent replication; Simulation
ID BUG REPORTS; SOFTWARE
AB Defect management is a central task in software maintenance. When a defect is reported, appropriate resources must be allocated to analyze and resolve the defect. An important issue in resource allocation is the estimation of Defect Resolution Time (DRT). Prior research has considered different approaches for DRT prediction exploiting information retrieval techniques and similarity in textual defect descriptions. In this article, we investigate the potential of text clustering for DRT prediction. We build on a study published by Raja (2013) which demonstrated that clusters of similar defect reports had statistically significant differences in DRT. Raja's study also suggested that this difference between clusters could be used for DRT prediction. Our aims are twofold: First, to conceptually replicate Raja's study and to assess the repeatability of its results in different settings; Second, to investigate the potential of textual clustering of issue reports for DRT prediction with focus on accuracy. Using different data sets and a different text mining tool and clustering technique, we first conduct an independent replication of the original study. Then we design a fully automated prediction method based on clustering with a simulated test scenario to check the accuracy of our method. The results of our independent replication are comparable to those of the original study and we confirm the initial findings regarding significant differences in DRT between clusters of defect reports. However, the simulated test scenario used to assess our prediction method yields poor results in terms of DRT prediction accuracy. Although our replication confirms the main finding from the original study, our attempt to use text clustering as the basis for DRT prediction did not achieve practically useful levels of accuracy.
C1 [Assar, Said] Inst Mines Telecom, Ecole Management, 9 Rue C Fourier, F-91011 Evry, France.
   [Borg, Markus] Lund Univ, Dept Comp Sci, Box 118, SE-22100 Lund, Sweden.
   [Pfahl, Dietmar] Univ Tartu, Inst Comp Sci, J Liivi 2, EE-50409 Tartu, Estonia.
C3 IMT - Institut Mines-Telecom; Institut Mines-Telecom Business School;
   Institut Polytechnique de Paris; Telecom SudParis; Lund University;
   University of Tartu
RP Assar, S (corresponding author), Inst Mines Telecom, Ecole Management, 9 Rue C Fourier, F-91011 Evry, France.
EM said.assar@telecom-em.eu; markus.borg@cs.lth.se; dietmar.pfahl@ut.ee
RI Pfahl, Dietmar Alfred Paul Kurt/H-3084-2015; Assar, Saïd/N-1688-2019;
   Borg, Markus/F-3609-2010
OI Pfahl, Dietmar Alfred Paul Kurt/0000-0003-2400-501X; Assar,
   Saïd/0000-0001-8040-5865; Borg, Markus/0000-0001-7879-4371
FU Estonian Research Council [IUT20-55]; Industrial Excellence Center EASE
   - Embedded Applications Software Engineering, Sweden
FX This research was partly funded by the institutional research grant
   IUT20-55 of the Estonian Research Council and the Industrial Excellence
   Center EASE - Embedded Applications Software Engineering, Sweden.
CR AbdelMoez W, 2013, 2013 INTERNATIONAL CONFERENCE ON TECHNOLOGICAL ADVANCES IN ELECTRICAL, ELECTRONICS AND COMPUTER ENGINEERING (TAEECE), P359
   Anbalagan P, 2009, PROC IEEE INT CONF S, P523, DOI 10.1109/ICSM.2009.5306337
   [Anonymous], 2002, RTI PROJECT
   [Anonymous], 2010, P 2010 ACM IEEE INT, DOI DOI 10.1145/1852786.1852814
   [Anonymous], DOCT S 29 IEEE ACM I
   [Anonymous], 2001, DATA ENG B, DOI 10.1.1.117.7676.
   [Anonymous], 1991, Replication Research in the Social Sciences
   [Anonymous], 2014, RECOMMENDATION SYSTE, DOI DOI 10.1007/978-3-642-45135-5_12
   [Anonymous], 2008, GUIDE ADV EMPIRICAL, DOI [10.1007/978-1-84800-044-5_14, DOI 10.1007/978-1-84800-044-5_14]
   [Anonymous], P 7 INT SOFTW METR S
   [Anonymous], 1993, Handbook of pattern recognition and computer vision, DOI DOI 10.1142/9789814343138_0001
   [Anonymous], 615111 IEC
   Batet M, 2011, AI COMMUN, V24, P291, DOI 10.3233/AIC-2011-0501
   Bettenburg N., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P60, DOI 10.1109/MSR.2012.6224300
   Bhattacharya Pamela., 2011, PROCEEDING 8 WORKING, P207, DOI DOI 10.1145/1985441.1985472
   Boehm B, 2001, COMPUTER, V34, P135, DOI 10.1109/2.962984
   Borg Markus, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P243, DOI 10.1109/ESEM.2013.39
   Borg M, 2013, 2013 7TH INTERNATIONAL WORKSHOP ON TRACEABILITY IN EMERGING FORMS OF SOFTWARE ENGINEERING (TEFSE), P72, DOI 10.1109/TEFSE.2013.6620158
   Borg M, 2013, EUR CON SFTWR MTNCE, P79, DOI 10.1109/CSMR.2013.18
   Bougie Gargi, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P106, DOI 10.1109/MSR.2010.5463291
   Carver JC, 2014, EMPIR SOFTW ENG, V19, P267, DOI 10.1007/s10664-013-9290-8
   D'Ambros Marco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P31, DOI 10.1109/MSR.2010.5463279
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   Dietterich ThomasG., 2002, Joint IAPR International Workshops SSPR 2002 and SPR 2002 Windsor, Ontario, Canada, August 6-9, 2002 Proceedings, P15
   Frost HR, 2014, BIOINFORMATICS, V30, P1698, DOI 10.1093/bioinformatics/btu110
   Giger E., 2010, P 2 INT WORKSH REC S, P52
   Gómez OS, 2014, INFORM SOFTWARE TECH, V56, P1033, DOI 10.1016/j.infsof.2014.04.004
   González-Barahona JM, 2012, EMPIR SOFTW ENG, V17, P75, DOI 10.1007/s10664-011-9181-9
   Hassan AE, 2008, 2008 FRONTIERS OF SOFTWARE MAINTENANCE, P48, DOI 10.1109/FOSM.2008.4659248
   Hofmann Markus., 2014, RapidMiner Data Mining Use Cases and Business Analytics Applications, Vfirst
   Jain AK, 1999, ACM COMPUT SURV, V31, P264, DOI 10.1145/331499.331504
   Jain AK, 2010, PATTERN RECOGN LETT, V31, P651, DOI 10.1016/j.patrec.2009.09.011
   Juristo N, 2012, LECT NOTES COMPUT SC, V7007, P60
   Keung J, 2008, ASWEC 2008: 19TH AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P229
   Kim S, 2006, Proceedings of the 2006 international workshop on Mining software repositories, P173
   Kitchenham B, 2008, EMPIR SOFTW ENG, V13, P219, DOI 10.1007/s10664-008-9061-0
   Kontostathis A., 2007, P 40 ANN HAW INT C S, P73, DOI DOI 10.1109/HICSS.2007.213
   Lamkanfi A, 2012, EUR CON SFTWR MTNCE, P379, DOI 10.1109/CSMR.2012.47
   Laukkanen EI, 2011, INT SYMP EMP SOFTWAR, P197, DOI 10.1109/ESEM.2011.28
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   LILLIEFORS HW, 1967, J AM STAT ASSOC, V62, P399, DOI 10.2307/2283970
   Marks L., 2011, P 7 INT C PRED MOD S, DOI [10.1145/2020390.202040, DOI 10.1145/2020390.202040]
   Matejka J, 2009, UIST 2009: PROCEEDINGS OF THE 22ND ANNUAL ACM SYMPOSIUM ON USER INTERFACE SOFTWARE AND TECHNOLOGY, P193
   McCandless M., 2010, Lucene in Action
   Menzies T., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P343, DOI 10.1109/ASE.2011.6100072
   Menzies T., 2011, Proceedings of the International Workshop on Machine Learning Technologies in Software Engineering, P19
   Menzies T, 2012, EMPIR SOFTW ENG, V17, P1, DOI 10.1007/s10664-011-9193-5
   Miller J, 2005, INFORM SOFTWARE TECH, V47, P233, DOI 10.1016/j.infsof.2004.08.005
   Muller Mark, 2008, Guide to Advanced Empirical Software Engineering, P117, DOI DOI 10.1007/978-1-84800-044-5_5
   Panjer LucasD., 2007, Proceedings of the 4th International Workshop on Mining Software Repositories, MSR '07, P29
   Perry DE., 2000, P C FUT SOFTW ENG, P345, DOI DOI 10.1145/336512.336586
   Raja U, 2013, EMPIR SOFTW ENG, V18, P117, DOI 10.1007/s10664-012-9197-9
   SAWILOWSKY SS, 1992, PSYCHOL BULL, V111, P352, DOI 10.1037/0033-2909.111.2.352
   Shihab E., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P112, DOI 10.1109/MSR.2012.6224307
   Shull FJ, 2008, EMPIR SOFTW ENG, V13, P211, DOI 10.1007/s10664-008-9060-1
   Strate JD, 2013, IEEE T RELIAB, V62, P444, DOI 10.1109/TR.2013.2259204
   Su T, 2004, PROC INT C TOOLS ART, P784
   Tibshirani R, 2001, J ROY STAT SOC B, V63, P411, DOI 10.1111/1467-9868.00293
   Tse-Hsun Chen, 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P189, DOI 10.1109/MSR.2012.6224280
   Wang DD, 2011, INT SYMP EMP SOFTWAR, P434, DOI 10.1109/ESEM.2011.62
   WEICK KE, 1995, ADMIN SCI QUART, V40, P385, DOI 10.2307/2393789
   Weiss C, 2007, P 4 INT WORKSH MIN S, P1, DOI [10.1109/MSR.2007.13, DOI 10.1109/MSR.2007.13]
   Wohlin C., 2012, Experimentation in Software Engineering
   Xu R, 2005, IEEE T NEURAL NETWOR, V16, P645, DOI 10.1109/TNN.2005.845141
   Zeller A, 2009, WHY PROGRAMS FAIL: A GUIDE TO SYSTEMATIC DEBUGGING, 2ND EDITION
   Zhang HY, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1042, DOI 10.1109/ICSE.2013.6606654
NR 66
TC 14
Z9 15
U1 0
U2 9
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2016
VL 21
IS 4
BP 1437
EP 1475
DI 10.1007/s10664-015-9391-7
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DQ2VF
UT WOS:000379060700001
DA 2024-07-18
ER

PT J
AU Fontana, FA
   Mäntylä, MV
   Zanoni, M
   Marino, A
AF Fontana, Francesca Arcelli
   Mantyla, Mika V.
   Zanoni, Marco
   Marino, Alessandro
TI Comparing and experimenting machine learning techniques for code smell
   detection
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Code smells detection; Machine learning techniques; Benchmark for code
   smell detection
ID BAD SMELLS; QUALITY; CLASSIFICATION
AB Several code smell detection tools have been developed providing different results, because smells can be subjectively interpreted, and hence detected, in different ways. In this paper, we perform the largest experiment of applying machine learning algorithms to code smells to the best of our knowledge. We experiment 16 different machine-learning algorithms on four code smells (Data Class, Large Class, Feature Envy, Long Method) and 74 software systems, with 1986 manually validated code smell samples. We found that all algorithms achieved high performances in the cross-validation data set, yet the highest performances were obtained by J48 and Random Forest, while the worst performance were achieved by support vector machines. However, the lower prevalence of code smells, i.e., imbalanced data, in the entire data set caused varying performances that need to be addressed in the future studies. We conclude that the application of machine learning to the detection of these code smells can provide high accuracy (>96 %), and only a hundred training examples are needed to reach at least 95 % accuracy.
C1 [Fontana, Francesca Arcelli] Univ Milano Bicocca, Dept Comp Sci, Milan, Italy.
   [Zanoni, Marco] Univ Milano Bicocca, Dept Informat Syst & Commun, Milan, Italy.
   [Marino, Alessandro] Univ Milano Bicocca, Milan, Italy.
   [Mantyla, Mika V.] Univ Oulu, Software Engn, Oulu, Finland.
   [Mantyla, Mika V.] Aalto Univ, Helsinki, Finland.
C3 University of Milano-Bicocca; University of Milano-Bicocca; University
   of Milano-Bicocca; University of Oulu; Aalto University
RP Zanoni, M (corresponding author), Univ Milano Bicocca, Dept Informat Syst & Commun, Milan, Italy.
EM arcelli@disco.unimib.it; mika.mantyla@oulu.fi;
   marco.zanoni@disco.unimib.it; a.marino4@campus.unimib.it
RI Mäntylä, Mika V/E-7644-2012; Fontana, Francesca Arcelli/K-4785-2016
OI Zanoni, Marco/0000-0002-6590-0195; Arcelli Fontana,
   Francesca/0000-0002-1195-530X; Mantyla, Mika/0000-0002-2841-5879
CR Aggarwal KK, 2006, J OBJECT TECHNOL, V5, P149, DOI 10.5381/jot.2006.5.8.a5
   [Anonymous], 2003, Proceedings of the 7th International Conference on Empirical Assessment in Software Engineering
   [Anonymous], 1994, Object-oriented software metrics: a practical guide
   [Anonymous], 2010, 2010 IEEE International Conference on Software Maintenance, DOI [10.1109/ICSM.2010.5609564, DOI 10.1109/ICSM.2010.5609564]
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   Bengio Y, 2004, J MACH LEARN RES, V5, P1089
   Berander P, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P167
   Bowes D, 2013, INT WORKS EMERG TREN, P62, DOI 10.1109/WETSoM.2013.6619338
   Capra E, 2011, J SYST SOFTWARE, V84, P144, DOI 10.1016/j.jss.2010.09.004
   Carver J, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P239
   Chen Y.-W., 2006, COMBINING SVMS VARIO, P315
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Cohen PR., 1997, Sixth International Workshop on Artificial Intelligence and Statistics, P115
   DEKKERS A, 1991, MATH PROGRAM, V50, P367, DOI 10.1007/BF01594945
   Deligiannis I, 2004, J SYST SOFTWARE, V72, P129, DOI 10.1016/S0164-1212(03)00240-1
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   FERME V, 2013, THESIS
   Ferme V, 2013, REFTEST 2013 WORKSH, P15
   Fontana FA, 2012, J OBJECT TECHNOL, V11, DOI 10.5381/jot.2012.11.2.a5
   Fontana FA, 2013, PROC IEEE INT CONF S, P260, DOI 10.1109/ICSM.2013.37
   Fowler M., 1999, Refactoring: Improving the Design of Existing Code, P1, DOI 10.1007/s10071-009-0219-y
   Freund Y., 1996, Machine Learning. Proceedings of the Thirteenth International Conference (ICML '96), P148
   Goldberg David E, 1989, GENETIC ALGORITHMS S
   Guéhéneuc YG, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P172, DOI 10.1109/WCRE.2004.21
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Hall MA, 2003, IEEE T KNOWL DATA EN, V15, P1437, DOI 10.1109/TKDE.2003.1245283
   Hall T, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2629648
   He HB, 2009, IEEE T KNOWL DATA EN, V21, P1263, DOI 10.1109/TKDE.2008.239
   Hollander M, 2000, NONPARAMETRIC STAT M, p[39, 84]
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   Hsu C.-W., 2003, TECH REP, DOI [DOI 10.1177/02632760022050997, 10 . 1177 / 02632760022050997]
   Jiachen Yang, 2012, 2012 Proceedings of the 6th International Workshop on Software Clones (IWSC 2012), P76, DOI 10.1109/IWSC.2012.6227872
   Khomh F, 2011, J SYST SOFTWARE, V84, P559, DOI 10.1016/j.jss.2010.11.921
   Khomh F, 2009, INT CONF QUAL SOFTW, P305, DOI 10.1109/QSIC.2009.47
   Kline RM, LIB EXAMPLE
   Kreimer J, 2005, ELECTRON NOTES THEOR, V141, P117, DOI 10.1016/j.entcs.2005.02.059
   Lamkanfi Ahmed, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P1, DOI 10.1109/MSR.2010.5463284
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Li W, 2007, J SYST SOFTWARE, V80, P1120, DOI 10.1016/j.jss.2006.10.018
   Maiga A., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P466, DOI 10.1109/WCRE.2012.56
   Maiga A, 2012, IEEE INT CONF AUTOM, P278, DOI 10.1145/2351676.2351723
   Mäntylä MV, 2006, EMPIR SOFTW ENG, V11, P395, DOI 10.1007/s10664-006-9002-8
   Mäntylä MV, 2004, PROC IEEE INT CONF S, P399, DOI 10.1109/ICSM.2004.1357825
   Marinescu C., 2005, IEEE INT C SOFTW MAI
   Marinescu R, 2005, PROC IEEE INT CONF S, P701
   Marinescu R., 2002, Measurement and Quality in Object-Oriented Design
   McKnight Lawrence K, 2002, Proc AMIA Symp, P519
   Menzies T, 2008, PROC IEEE INT CONF S, P346, DOI 10.1109/ICSM.2008.4658083
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Moser R, 2008, LECT NOTES COMPUT SC, V5082, P252
   Murphy-Hill E, 2010, SOFTVIS 2010: PROCEEDINGS OF THE 2010 INTERNATIONAL SYMPOSIUM ON SOFTWARE VISUALIZATION, P5
   Navot A, 2006, LECT NOTES COMPUT SC, V3940, P127
   Nongpong K., 2012, Integrating" code smells" detection with refactoring tool support,"
   Palomba F, 2013, IEEE INT CONF AUTOM, P268, DOI 10.1109/ASE.2013.6693086
   Sharma A., 2012, INT J COMPUT SCI MAN, P12
   Sjoberg DIK, 2013, IEEE T SOFTWARE ENG, V39, P1144, DOI 10.1109/TSE.2012.89
   Spinellis D, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P381, DOI 10.1145/1368088.1368140
   Stamelos I, 2002, INFORM SYST J, V12, P43, DOI 10.1046/j.1365-2575.2002.00117.x
   STONE M, 1974, J R STAT SOC B, V36, P111, DOI 10.1111/j.2517-6161.1974.tb00994.x
   Sun YM, 2007, PATTERN RECOGN, V40, P3358, DOI 10.1016/j.patcog.2007.04.009
   Svahnberg M, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P288
   Tempero E, 2010, ASIA PAC SOFWR ENG, P336, DOI 10.1109/APSEC.2010.46
   Tichy W. F., 2000, Empirical Software Engineering, V5, P309, DOI 10.1023/A:1009844119158
   Tsantalis N, 2009, IEEE T SOFTWARE ENG, V35, P347, DOI 10.1109/TSE.2009.1
   Weston J, 2001, ADV NEUR IN, V13, P668
   Wieman R, 2011, ANTIPATTERN SCANNER
   Yamashita A, 2014, EMPIR SOFTW ENG, V19, P1111, DOI 10.1007/s10664-013-9250-3
   Yuan Tian, 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P215, DOI 10.1109/WCRE.2012.31
   Zazworka Nico, 2011, P 2 WORKSH MAN TECHN, P17, DOI 10.1145/1985362.1985366
   Zhang M, 2011, J SOFTW MAINT EVOL-R, V23, P179, DOI 10.1002/smr.521
NR 70
TC 220
Z9 241
U1 1
U2 13
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2016
VL 21
IS 3
BP 1143
EP 1191
DI 10.1007/s10664-015-9378-4
PG 49
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DQ2VO
UT WOS:000379061700013
DA 2024-07-18
ER

PT J
AU Cruzes, DS
   Dybå, T
   Runeson, P
   Höst, M
AF Cruzes, Daniela S.
   Dyba, Tore
   Runeson, Per
   Host, Martin
TI Case studies synthesis: a thematic, cross-case, and narrative synthesis
   worked example
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Evidence-based software engineering; Systematic reviews; Research
   synthesis; Case study
ID SOFTWARE OUTSOURCING RELATIONSHIPS; TRUST
AB Case studies are largely used for investigating software engineering practices. They are characterized by their flexible nature, multiple forms of data collection, and are mostly informed by qualitative data. Synthesis of case studies is necessary to build a body of knowledge from individual cases. There are many methods for such synthesis, but they are yet not well explored in software engineering. The objective of this research is to demonstrate the similarities and differences of the results and conclusions when applying three different methods of synthesis, and to discuss the challenges of synthesizing evidence from reported case studies in SE. We describe a worked example of three such methods where three independent teams synthesized two studies that investigated critical factors of trust in outsourced projects through thematic synthesis and cross-case analysis, and compared these to each other and also to an already published narrative synthesis. In addition, despite that the primary studies were well presented for synthesis, we identified challenges in the use of case studies synthesis methods related to the goals and research questions of the synthesis, the types and number of case studies, variations in context, limited access to raw data, and quality of the case studies. Thus, we recommend that the analysts should be aware of these challenges and try to account for them during the execution of the synthesis. We also recommend that analysts consider using more than one method of synthesis for sake of reliability of the results and conclusions.
C1 [Cruzes, Daniela S.; Dyba, Tore] SINTEF, Dept Informat & Commun Technol ICT, NO-7465 Trondheim, Norway.
   [Runeson, Per; Host, Martin] Lund Univ, Dept Comp Sci, SE-22100 Lund, Sweden.
C3 SINTEF; Lund University
RP Cruzes, DS (corresponding author), SINTEF, Dept Informat & Commun Technol ICT, NO-7465 Trondheim, Norway.
EM danielac@sintef.no; tore.dyba@sintef.no; per.runeson@cs.lth.se;
   martin.host@cs.lth.se
RI Höst, Martin/KDN-4323-2024; Runeson, Per/H-5113-2019
OI Höst, Martin/0000-0002-9360-8693; Runeson, Per/0000-0003-2795-4851
CR Ashrafian H, 2011, EVIDENCE SYNTHESIS IN HEALTHCARE: A PRACTICAL HANDBOOK FOR CLINICIANS, P1, DOI 10.1007/978-0-85729-206-3_1
   Babar MA, 2007, J SYST SOFTWARE, V80, P1438, DOI [10.1016/j.jss.2006.10.038, 10.1016/j.jss.2006.12.038]
   Bethel EC, 2010, DISTANCE EDUC, V31, P231, DOI 10.1080/01587919.2010.513950
   CRUZES D.S., 2010, Proceedings of the 2010 ACM-IEEE International Symposium on Empirical Software Engineering and Measurement 2010, P1, DOI DOI 10.1145/1852786.1852788
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Cruzes DS, 2011, INFORM SOFTWARE TECH, V53, P440, DOI 10.1016/j.infsof.2011.01.004
   Dybå T, 2012, INT SYMP EMP SOFTWAR, P19, DOI 10.1145/2372251.2372256
   Dybå T, 2013, IEEE SOFTWARE, V30, P81, DOI 10.1109/MS.2013.4
   Dybå T, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P178
   Gerring J, 2007, CASE STUDY RESEARCH: PRINCIPLES AND PRACTICES, P86
   Khan S., 2008, Qualitative Social Research, V9
   Kitchenham B., 2007, 2007001 EBSE
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Kitchenham BA, 2012, INFORM SOFTWARE TECH, V54, P804, DOI 10.1016/j.infsof.2011.11.008
   LARSSON R, 1993, ACAD MANAGE J, V36, P1515, DOI 10.5465/256820
   Lucas W.A., 1974, The case survey method and alternative methods for research aggregation
   Mays Nicholas, 2005, J Health Serv Res Policy, V10 Suppl 1, P6, DOI 10.1258/1355819054308576
   Miles M. B., 1984, Qualitative data analysis: An expanded sourcebook
   Newig J., 2009, CASE SURVEY METHOD A
   Nguyen PT, 2006, CRITICAL FACTORS EST
   Oza N., 2005, 9 INT C EMP ASS SOFT
   Oza NV, 2006, INFORM SOFTWARE TECH, V48, P345, DOI 10.1016/j.infsof.2005.09.011
   Popay J, 2010, DEV METHODS NARRATIV
   Pope C., 2007, Synthesizing qualitative and quantitative health research: A guide to methods
   Ragin C.C., 1987, The comparative method: moving beyond qualitative and quantitative strategies
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Runeson Per, 2012, Case study research in software engineering: Guidelines and examples
   Smite D, 2010, EMPIR SOFTW ENG, V15, P91, DOI 10.1007/s10664-009-9123-y
   Thomas J, 2008, BMC MED RES METHODOL, V8, DOI 10.1186/1471-2288-8-45
   Yin R. K., 2017, CASE STUDY RES DESIG
NR 30
TC 86
Z9 127
U1 2
U2 15
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2015
VL 20
IS 6
BP 1634
EP 1665
DI 10.1007/s10664-014-9326-8
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CT7YX
UT WOS:000363032900007
DA 2024-07-18
ER

PT J
AU Bavota, G
   Canfora, G
   Di Penta, M
   Oliveto, R
   Panichella, S
AF Bavota, Gabriele
   Canfora, Gerardo
   Di Penta, Massimiliano
   Oliveto, Rocco
   Panichella, Sebastiano
TI How the Apache community upgrades dependencies: an evolutionary study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software ecosystems; Project dependency upgrades; Mining software
   repositories
ID OPEN SOURCE SOFTWARE; PROJECT
AB Software ecosystems consist of multiple software projects, often interrelated by means of dependency relations. When one project undergoes changes, other projects may decide to upgrade their dependency. For example, a project could use a new version of a component from another project because the latter has been enhanced or subject to some bug-fixing activities. In this paper we study the evolution of dependencies between projects in the Java subset of the Apache ecosystem, consisting of 147 projects, for a period of 14 years, resulting in 1,964 releases. Specifically, we investigate (i) how dependencies between projects evolve over time when the ecosystem grows, (ii) what are the product and process factors that can likely trigger dependency upgrades, (iii) how developers discuss the needs and risks of such upgrades, and (iv) what is the likely impact of upgrades on client projects. The study results-qualitatively confirmed by observations made by analyzing the developers' discussion-indicate that when a new release of a project is issued, it triggers an upgrade when the new release includes major changes (e.g., new features/services) as well as large amount of bug fixes. Instead, developers are reluctant to perform an upgrade when some APIs are removed. The impact of upgrades is generally low, unless it is related to frameworks/libraries used in crosscutting concerns. Results of this study can support the understanding of the of library/component upgrade phenomenon, and provide the basis for a new family of recommenders aimed at supporting developers in the complex (and risky) activity of managing library/component upgrade within their software projects.
C1 [Bavota, Gabriele; Canfora, Gerardo; Di Penta, Massimiliano; Panichella, Sebastiano] Univ Sannio, Dept Engn, Benevento, BN, Italy.
   [Oliveto, Rocco] Univ Molise, Dept Biosci & Terr, Pesche, IS, Italy.
C3 University of Sannio; University of Molise
RP Bavota, G (corresponding author), Univ Sannio, Dept Engn, Benevento, BN, Italy.
EM gabriele.bavota@gmail.com; gerardo.canfora@gmail.com;
   dipenta@unisannio.it; rocco.oliveto@unimol.it; spanichella@unisannio.it
RI Di Penta, Massimiliano/AAF-9656-2021
OI Canfora, Gerardo/0000-0003-0049-1279; BAVOTA,
   Gabriele/0000-0002-2216-3148; Panichella,
   Sebastiano/0000-0003-4120-626X; Di Penta,
   Massimiliano/0000-0002-0340-9747
FU EU [FP7-ICT-2011-8, 317743]
FX Gabriele Bavota, Gerardo Canfora, Massimiliano Di Penta, and Sebastiano
   Panichella are partially funded by the EU FP7-ICT-2011-8 project Markos,
   contract no. 317743. Any opinions, findings, and conclusions expressed
   herein are the authors' and do not necessarily reflect those of the
   sponsors.
CR Annosi M. C., 2012, 2012 Proceedings of the 3rd International Workshop on Product LinE Approaches in Software Engineering (PLEASE 2012), P9, DOI 10.1109/PLEASE.2012.6229776
   [Anonymous], 2010, Proceedings of the IEEE/ACM international conference on Automated software engineering (ASE'10)
   [Anonymous], 2011, P 19 ACM SIGSOFT S 1
   Antoniol G, 2008, P 2008 C CTR ADV STU, P304
   Aranda J, 2009, PROC INT CONF SOFTW, P298, DOI 10.1109/ICSE.2009.5070530
   Bavota G, 2013, 29 IEEE INT C SOFTW
   Bavota G, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P399, DOI 10.1109/CSMR-WCRE.2014.6747204
   Bosch Jan, 2009, 2009 13 INT SOFTW PR, V9, P111, DOI DOI 10.1145/1753235.1753251
   Businge J, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P368, DOI 10.1109/ICSM.2012.6405295
   Cohen J., 1988, STAT POWER ANAL BEHA
   Collard ML, 2003, PROG COMPREHEN, P134
   Conover W. J., 1998, PRACTICAL NONPARAMET, V3rd
   Dagenais B, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P481, DOI 10.1145/1368088.1368154
   Daqing Hou, 2011, 2011 18th Working Conference on Reverse Engineering, P131, DOI 10.1109/WCRE.2011.24
   Di Penta Massimiliano, 2010, P 32 ACMIEEE INT C S, P145, DOI [10.1145/1806799.1806824, DOI 10.1145/1806799.1806824]
   Dig D, 2006, J SOFTW MAINT EVOL-R, V18, P83, DOI 10.1002/smr.328
   Gala-Perez S, 2013, 10 IEEE WORK C MIN S
   German D. M., 2003, Software Process Improvement and Practice, V8, P201, DOI 10.1002/spip.189
   German DM, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P140, DOI 10.1109/WCRE.2007.5
   German DM, 2013, EUR CON SFTWR MTNCE, P243, DOI 10.1109/CSMR.2013.33
   German DM, 2010, P IEEE ACM INT C AUT
   Godfrey MW, 2000, PROC IEEE INT CONF S, P131, DOI 10.1109/ICSM.2000.883030
   Goeminne M, 2013, SOFTWARE ECOSYSTEMS: ANALYZING AND MANAGING BUSINESS NETWORKS IN THE SOFTWARE INDUSTRY, P247
   Goeminne M, 2013, IEEE WORK CONF MIN S, P225, DOI 10.1109/MSR.2013.6624032
   Gonzalez-Barahona JM, 2009, EMPIR SOFTW ENG, V14, P262, DOI 10.1007/s10664-008-9100-x
   Grissom R. J., 2005, EFFECT SIZES RES BRO
   Hazewinkel M., 2001, ENCY MATH
   Jansen S, 2005, 31 INT C SOFTW EC NE, P187
   Kidane Y. H., 2007, Computational & Mathematical Organization Theory, V13, P17, DOI 10.1007/s10588-006-9006-3
   Kilamo T, 2012, J SYST SOFTWARE, V85, P1467, DOI 10.1016/j.jss.2011.06.071
   Koch S, 2002, INFORM SYST J, V12, P27, DOI 10.1046/j.1365-2575.2002.00110.x
   Krinke Jens, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P98, DOI 10.1109/MSR.2010.5463290
   Levenshtein V. I., 1966, SOV PHYS DOKL, V10, P707
   Mens T, 2008, PROC IEEE INT CONF S, P386, DOI 10.1109/ICSM.2008.4658087
   Ossher Joel, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P130, DOI 10.1109/MSR.2010.5463346
   Raemaekers S, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P378, DOI 10.1109/ICSM.2012.6405296
   Robbes R., 2012, P ACM SIGSOFT 20 INT
   Scacchi W, 2012, J SYST SOFTWARE, V85, P1479, DOI 10.1016/j.jss.2012.03.033
   Singh PV, 2010, ACM T SOFTW ENG METH, V20, DOI 10.1145/1824760.1824763
   Vasilescu B., 2013, EMPIR SOFTW ENG, P1
   Watts DJ, 1998, NATURE, V393, P440, DOI 10.1038/30918
   Wermelinger M, 2011, EMPIR SOFTW ENG, V16, P623, DOI 10.1007/s10664-011-9164-x
   Yu LG, 2007, THIRD INTERNATIONAL IEEE WORKSHOP ON SOFTWARE EVOLVABILITY, PROCEEDINGS, P75, DOI 10.1109/SE.2007.8
   ZAR JH, 1972, J AM STAT ASSOC, V67, P578, DOI 10.2307/2284441
NR 44
TC 74
Z9 85
U1 0
U2 10
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2015
VL 20
IS 5
BP 1275
EP 1317
DI 10.1007/s10664-014-9325-9
PG 43
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CQ5UP
UT WOS:000360671500004
DA 2024-07-18
ER

PT J
AU Wu, W
   Serveaux, A
   Guéhéneuc, YG
   Antoniol, G
AF Wu, Wei
   Serveaux, Adrien
   Gueheneuc, Yann-Gaeal
   Antoniol, Giuliano
TI The impact of imperfect change rules on framework API evolution
   identification: an empirical study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software maintenance; Usefulness; Framework API evolution; Change rule
ID REFACTORINGS; SUPPORT; CODE; COMPREHENSION
AB Software frameworks keep evolving. It is often time-consuming for developers to keep their client code up-to-date. Not all frameworks have documentation about the upgrading process. Many approaches have been proposed to ease the impact of non-documented framework evolution on developers by identifying change rules between two releases of a framework, but these change rules are imperfect, i.e., not 100 % correct. To the best of our knowledge, there is no empirical study to show the usefulness of these imperfect change rules. Therefore, we design and conduct an experiment to evaluate their impact. In the experiment, the subjects must find the replacements of 21 missing methods in the new releases of three open-source frameworks with the help of (1) all-correct, (2) imperfect, and (3) no change rules. The statistical analysis results show that the precision of the replacements found by the subjects with the three sets of change rules are significantly different. The precision with all-correct change rules is the highest while that with no change rules is the lowest, while imperfect change rules give a precision in between. The effect size of the difference between the subjects with no and imperfect change rules is large and that between the subjects with imperfect and correct change rules is moderate. The results of this study show that the change rules generated by framework API evolution approaches do help developers, even they are not always correct. The imperfect change rules can be used by developers upgrading their code when documentation is not available or as a complement to partial documentation. The moderate difference between results from subjects with imperfect and all-correct change rules also suggests that improving precision of change rules will still help developers.
C1 [Wu, Wei; Serveaux, Adrien; Gueheneuc, Yann-Gaeal] Ecole Polytech Montreal, DGIGL, Ptidej Team, Montreal, PQ, Canada.
   [Wu, Wei; Antoniol, Giuliano] Ecole Polytech Montreal, DGIGL, Soccer Lab, Montreal, PQ, Canada.
C3 Universite de Montreal; Polytechnique Montreal; Universite de Montreal;
   Polytechnique Montreal
RP Wu, W (corresponding author), Ecole Polytech Montreal, DGIGL, Ptidej Team, Montreal, PQ, Canada.
EM wei.wu@polymtl.ca; adrien.serveaux@telecom-st-etienne.fr;
   yann-gael.gueheneuc@polymtl.ca; giuliano.antoniol@polymtl.ca
CR Abbes M, 2011, EUR CON SFTWR MTNCE, P181, DOI 10.1109/CSMR.2011.24
   Ali N, 2012, ICSM 2012
   [Anonymous], 1981, SIMULTANEOUS STAT IN
   [Anonymous], 1989, COGN AFFECT BEHAV NE
   [Anonymous], 2012, 20 IEEE INT C PROGR
   Antoniol G, 2004, 7TH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, P31, DOI 10.1109/IWPSE.2004.1334766
   Baker R.D., 1995, Randomization Tests
   Beckwith Laura, 2005, P SIGCHI C HUM FACT, P869
   Businge J, 2013, EUR CON SFTWR MTNCE, P37, DOI 10.1109/CSMR.2013.14
   Chow KS, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P359, DOI 10.1109/ICSM.1996.565039
   Dagenais B, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000799.2000805
   Demeyer S, 2000, ACM SIGPLAN NOTICES, V35, P166, DOI 10.1145/354222.353183
   Dig D., 2006, ECOOP 06
   Dig D, 2007, PROC INT CONF SOFTW, P427
   Fagard RH, 1996, J HYPERTENS, V14, pS9, DOI 10.1097/00004872-199609002-00004
   Fluri B, 2006, INT C PROGRAM COMPRE, P35, DOI 10.1109/ICPC.2006.16
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   German DM, 2009, PROC INT CONF SOFTW, P188, DOI 10.1109/ICSE.2009.5070520
   Godfrey MW, 2005, IEEE T SOFTWARE ENG, V31, P166, DOI 10.1109/TSE.2005.28
   Grissom R. J., 2005, EFFECT SIZES RES BRO
   HART S G, 1988, P139
   Hart S.G., 1988, NASA TASK LOAD INDEX
   Henkel J, 2005, PROC INT CONF SOFTW, P274
   Kataoka Y, 2001, PROC IEEE INT CONF S, P736, DOI 10.1109/ICSM.2001.972794
   Kemper C., 2005, JAVAONE SUNS 2005 WO
   Kim M, 2007, PROC INT CONF SOFTW, P333
   Kim S, 2005, WCRE: 12TH WORKING CONFERENCE ON REVERSE ENGINEERING 2005, PROCEEDINGS, P143
   Lawrie D, 2007, INNOV SYST SOFTW ENG, V3, P303, DOI 10.1007/s11334-007-0031-2
   Likert R., 1932, TECHNIQUE MEASUREMEN, DOI 1933-01885-001
   Malpohl G, 2000, FIFTEENTH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P73, DOI 10.1109/ASE.2000.873652
   Meng SC, 2012, PROC INT CONF SOFTW, P353, DOI 10.1109/ICSE.2012.6227179
   O'Donnell E., 2001, INT J AUDIT, V5, P91, DOI DOI 10.1111/J.1099-1123.2001.00328.X
   Schäfer T, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P471, DOI 10.1145/1368088.1368153
   Sharif Bonita, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P196, DOI 10.1109/ICPC.2010.41
   Weissgerber P, 2006, IEEE INT CONF AUTOM, P231
   Wohlin C., 1999, EXPT SOFTWARE ENG IN
   Wu Wei, 2010, P 32 ACMIEEE INT C S, P325, DOI DOI 10.1145/1806799.1806848
   Xing ZC, 2006, WORK CONF REVERSE EN, P263
   Xing ZC, 2007, IEEE T SOFTWARE ENG, V33, P818, DOI 10.1109/TSE.2007.70747
   Yusuf S, 2007, INT C PROGRAM COMPRE, P113
   Zhang C, 2012, IEEE T SOFTWARE ENG, V38, P1213, DOI 10.1109/TSE.2011.79
NR 41
TC 11
Z9 12
U1 0
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2015
VL 20
IS 4
BP 1126
EP 1158
DI 10.1007/s10664-014-9317-9
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CJ8MB
UT WOS:000355754500007
DA 2024-07-18
ER

PT J
AU Aitken, JM
   Alexander, R
   Kelly, T
   Poulding, S
AF Aitken, Jonathan M.
   Alexander, Rob
   Kelly, Tim
   Poulding, Simon
TI Evolving robust networks for systems-of-systems: is it viable for large
   networks?
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Network calculus; Systems of systems; Genetic algorithms; Safety;
   Robustness
ID CALCULUS; DELAY
AB Software systems that rely on ad-hoc networks are increasingly complex and prevalent. Some of these systems provide vital functionality to emergency services, military operations, and disaster relief; such systems may have significant impact on the safety of people involved in those operations. It is therefore important that those networks support critical software requirements, including those for latency of packet transfer. If a network ceases to meet the software's requirements (e.g. due to a link failure) then engineers must be able to understand it well enough to reconfigure the network and restore it to a requirement-satisfying state. Given a complex network, it is difficult for a human to do this, especially under time pressure. Tool support would therefore be valuable. This paper presents a search-based tool which takes as input a network defined using the Network Description Language (NDL), annotated with a set of network-hosted applications and a set of latency requirements between each. The tool can evolve variants of the network configuration which meet the requirements and are robust to single link failures, using multi-objective optimisation to resolve the conflicting demands of robustness and low resource use. We have investigated how the Genetic Algorithm (GA) can be configured to find good results, and how the time taken to evolve networks scales with the size of the network. We conclude that the approach is effective for small networks (tens of nodes) but scales poorly beyond that.
C1 [Aitken, Jonathan M.] Univ Sheffield, Dept Automat Control & Syst Engn, Autonomous Syst & Robot Grp, Sheffield, S Yorkshire, England.
   [Alexander, Rob] Univ York, Dept Comp Sci, High Integr Syst Engn HISE Grp, York YO10 5DD, N Yorkshire, England.
   [Kelly, Tim; Poulding, Simon] Univ York, Dept Comp Sci, York YO10 5DD, N Yorkshire, England.
C3 University of Sheffield; University of York - UK; University of York -
   UK
RP Aitken, JM (corresponding author), Univ Sheffield, Dept Automat Control & Syst Engn, Autonomous Syst & Robot Grp, Sheffield, S Yorkshire, England.
EM jonathan.aitken@sheffield.ac.uk; rob.alexander@york.ac.uk;
   tim.kelly@york.ac.uk; simon.poulding@york.ac.uk
RI Aitken, Jonathan/O-5012-2019; Alexander, Rob/GPF-8217-2022
OI Aitken, Jonathan/0000-0003-4204-4020; Alexander, Rob/0000-0003-3818-0310
FU EPSRC [EP/J011843/2] Funding Source: UKRI
CR Aitken Jonathan M., 2012, Search Based Software Engineering. Proceedings of the 4th International Symposium (SSBSE 2012), P30, DOI 10.1007/978-3-642-33119-0_4
   Aitken J. M., 2010, 5 INT C SYST SYST EN
   Ali S, 2004, PROC INT CONF PARAL, P178
   [Anonymous], 2011, P 5 INT ICST C PERF
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   Bhagchandani K., 2013, INT J SOFT COMPUTING, V2, P224
   Boyer M, 2010, 4 INT S LEV APPL FOR
   Charara H., 2006, 18 EUR C REAL TIM SY
   Crucitti P, 2004, PHYS REV E, V69, DOI 10.1103/PhysRevE.69.045104
   CRUZ RL, 1991, IEEE T INFORM THEORY, V37, P132, DOI 10.1109/18.61110
   CRUZ RL, 1991, IEEE T INFORM THEORY, V37, P114, DOI 10.1109/18.61109
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Ducatelle F, 2006, P RES RES DICS PROGR
   Elia A, 2006, IEEE C EM TECHN FACT
   Georges JP, 2006, ENG APPL ARTIF INTEL, V19, P335, DOI 10.1016/j.engappai.2005.09.004
   Kandula S., 2009, Proc, P202
   Le Boudec JY, 2011, THEORY DETERMINISTIC
   Leu G, 2009, INTELLIGENT EVOLUTIO
   Moulouna M, 2001, HUMAN FACTORS ERGONO
   NEWTH D, 2004, P 8 AS PAC S INT EV
   Nunes A., 2004, P 48 ANN CHAPT M HUM
   Scharbarg JL, 2009, IEEE T IND INFORM, V5, P38, DOI 10.1109/TII.2009.2016085
   Schmitt JB, 2006, 1 INT C PERF EV METH
   Sghairi M, 2009, DIG AV SYST C
   SINNOTT RW, 1984, SKY TELESCOPE, V68, P159
   Skeie T, 2006, IEEE T IND INFORM, V2, P25, DOI 10.1109/TII.2006.869934
   van der Ham J, 2006, ACM IEEE C SUP
   van der Ham J, 2007, INTEGRATED NETWORK M
   van der Ham JJ, 2006, FUTURE GENER COMP SY, V22, P862, DOI 10.1016/j.future.2006.03.022
NR 29
TC 0
Z9 0
U1 0
U2 7
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2014
VL 19
IS 5
BP 1502
EP 1530
DI 10.1007/s10664-013-9295-3
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AP9VT
UT WOS:000342429900012
DA 2024-07-18
ER

PT J
AU Okutan, A
   Yildiz, OT
AF Okutan, Ahmet
   Yildiz, Olcay Taner
TI Software defect prediction using Bayesian networks
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Defect prediction; Bayesian networks
ID EMPIRICAL-ANALYSIS; METRICS; RELIABILITY
AB There are lots of different software metrics discovered and used for defect prediction in the literature. Instead of dealing with so many metrics, it would be practical and easy if we could determine the set of metrics that are most important and focus on them more to predict defectiveness. We use Bayesian networks to determine the probabilistic influential relationships among software metrics and defect proneness. In addition to the metrics used in Promise data repository, we define two more metrics, i.e. NOD for the number of developers and LOCQ for the source code quality. We extract these metrics by inspecting the source code repositories of the selected Promise data repository data sets. At the end of our modeling, we learn the marginal defect proneness probability of the whole software system, the set of most effective metrics, and the influential relationships among metrics and defectiveness. Our experiments on nine open source Promise data repository data sets show that response for class (RFC), lines of code (LOC), and lack of coding quality (LOCQ) are the most effective metrics whereas coupling between objects (CBO), weighted method per class (WMC), and lack of cohesion of methods (LCOM) are less effective metrics on defect proneness. Furthermore, number of children (NOC) and depth of inheritance tree (DIT) have very limited effect and are untrustworthy. On the other hand, based on the experiments on Poi, Tomcat, and Xalan data sets, we observe that there is a positive correlation between the number of developers (NOD) and the level of defectiveness. However, further investigation involving a greater number of projects is needed to confirm our findings.
C1 [Okutan, Ahmet; Yildiz, Olcay Taner] Isik Univ, Dept Comp Engn, Istanbul, Turkey.
C3 Isik University
RP Okutan, A (corresponding author), Isik Univ, Dept Comp Engn, Istanbul, Turkey.
EM ahmet.okutan@erenetyazilim.com; olcaytaner@isikun.edu.tr
RI YILDIZ, OLCAY/K-3869-2012; Yildiz, Olcay Taner/ABE-5268-2021
OI Yildiz, Olcay Taner/0000-0001-5838-4615; Okutan,
   Ahmet/0000-0001-6664-515X
CR Alpaydin E, 2004, INTRO MACHINE LEARNI
   AMASAKI S, 2003, P 14 INT S SOFTW REL
   [Anonymous], 2007, The promise repository of empirical software engineering data
   Bibi S., 2004, P 10 INT SOFTW METR
   Boetticher G. D., 2005, P 2005 WORKSH PRED M
   CHIDAMBER SR, 1991, SIGPLAN NOTICES, V26, P197
   Cong Jin, 2010, Proceedings of the 2010 Second International Conference on Multimedia and Information Technology (MMIT 2010), P24, DOI 10.1109/MMIT.2010.10
   COOPER GF, 1992, MACH LEARN, V9, P309, DOI 10.1007/BF00994110
   Dejaeger K., 2012, IEEE T SOFTWARE ENG, V1, P1, DOI DOI 10.1109/TSE.2012.20
   Ekanayake J, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P51, DOI 10.1109/MSR.2009.5069480
   El Emam K, 2001, J SYST SOFTWARE, V56, P63, DOI 10.1016/S0164-1212(00)00086-8
   Fenton N, 2002, IEEE SOFTWARE, V19, P116, DOI 10.1109/MS.2002.1020298
   Fenton N., 2008, Proceedings of the Institution of Mechanical Engineers, Part O (Journal of Risk and Reliability), V222, P701, DOI 10.1243/1748006XJRR161
   Fenton NE, 1999, IEEE T SOFTWARE ENG, V25, P675, DOI 10.1109/32.815326
   Fenton N, 2007, INFORM SOFTWARE TECH, V49, P32, DOI 10.1016/j.infsof.2006.09.001
   Gunes Koru A., 2005, P 2005 WORKSHOP PRED, P1
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Henderson-Sellers B., 1996, Object-Oriented Metrics, measures of complexity
   Hu Y, 2009, 2009 INTERNATIONAL CONFERENCE ON INFORMATION MANAGEMENT, INNOVATION MANAGEMENT AND INDUSTRIAL ENGINEERING, VOL 1, PROCEEDINGS, P629, DOI 10.1109/ICIII.2009.157
   Kaur A, 2009, 2009 SECOND INTERNATIONAL CONFERENCE ON MACHINE VISION, PROCEEDINGS, ( ICMV 2009), P242, DOI 10.1109/ICMV.2009.54
   Khoshgoftaar T. M., 1995, Annals of Software Engineering, V1, P141, DOI 10.1007/BF02249049
   Khoshgoftaar TM, 1997, EIGHTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P27, DOI 10.1109/ISSRE.1997.630845
   Khoshgoftaar TM, 2000, PROC INT C TOOLS ART, P54, DOI 10.1109/TAI.2000.889846
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Menzies T, 2011, P 26 IEEE ACM INT C
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Menzies T, 2012, EMPIR SOFTW ENG, V17, P1, DOI 10.1007/s10664-011-9193-5
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   MUNSON JC, 1992, IEEE T SOFTWARE ENG, V18, P423, DOI 10.1109/32.135775
   Myrtveit I, 2005, IEEE T SOFTWARE ENG, V31, P380, DOI 10.1109/TSE.2005.58
   Nagappan N, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P521, DOI 10.1145/1368088.1368160
   Norick B, 2010, EFFECTS NUMBER DEV C
   Pai GJ, 2007, IEEE T SOFTWARE ENG, V33, P675, DOI [10.1109/TSE.2007.70722, 10.1109/TSE.2007.70722.]
   Pendharkar PC, 2007, INFORM TECHNOL MANAG, V8, P253, DOI 10.1007/s10799-006-0005-3
   Pérez-Miñana E, 2006, SOFTW TEST VERIF REL, V16, P157, DOI 10.1002/stvr.353
   Perry DE., 2000, P C FUT SOFTW ENG, P345, DOI DOI 10.1145/336512.336586
   Posnett D, 2011, ECOLOGICAL INFERENCE, P362
   Shepperd M, 2001, IEEE T SOFTWARE ENG, V27, P1014, DOI 10.1109/32.965341
   Shivaji S, 2009, IEEE INT CONF AUTOM, P600, DOI 10.1109/ASE.2009.76
   Song QB, 2006, IEEE T SOFTWARE ENG, V32, P69, DOI 10.1109/TSE.2006.1599417
   Suffian Muhammad Dhiauddin Mohamed, 2010, Proceedings of 2010 International Symposium on Information Technology (ITSim 2010), P1087, DOI 10.1109/ITSIM.2010.5561516
   Thwin MMT, 2002, ICONIP'02: PROCEEDINGS OF THE 9TH INTERNATIONAL CONFERENCE ON NEURAL INFORMATION PROCESSING, P2312
   Wolpert D. H., 1997, IEEE Transactions on Evolutionary Computation, V1, P67, DOI 10.1109/4235.585893
   Zhang D., 2000, P 2000 MONT WORKSH M, P275
   Zhou YM, 2006, IEEE T SOFTWARE ENG, V32, P771, DOI 10.1109/TSE.2006.102
NR 46
TC 181
Z9 201
U1 2
U2 38
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2014
VL 19
IS 1
BP 154
EP 181
DI 10.1007/s10664-012-9218-8
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AA3HQ
UT WOS:000330983900005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Prechelt, L
   Oezbek, C
AF Prechelt, Lutz
   Oezbek, Christopher
TI The search for a research method for studying OSS process innovation
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Open Source; Methodology; Innovation introduction
ID SOFTWARE; PROJECTS; NETWORK
AB Medium-sized, open-participation Open Source Software (OSS) projects do not usually perform explicit software process improvement on any routine basis. It would be useful to understand how to get such a project to accept a process improvement proposal and hence to perform process innovation. We want to determine an effective and feasible qualitative research method for studying the above question. We present (narratively) a case study of how we worked towards and eventually found such a research method. The case involves four attempts at collecting suitable data about innovation episodes (direct participation (twice), polling developers for episodes, manually finding episodes in mailing list archives) and the adaptation of the Grounded Theory data analysis methodology. Direct participation allows gathering rather rich data, but does not allow for observing a sufficiently large number of innovation episodes. Polling developers for episodes did not prove to be useful. Using mailing list archives to find data to be analyzed is both feasible and effective. We also describe how the data thus found can be analyzed based on the Grounded Theory Method with suitable adjustments. By-and-large, our findings ought to apply to studying various phenomena in OSS development processes that are similarly heavyweight and infrequent. However, specific details may block this possibility and we cannot predict which details that might be. The amount of effort involved in direct participation approaches to qualitative research can easily be underestimated. Also, survey approaches are not well-suited for many process issues in OSS, because too few developers are sufficiently process-conscious. An approach based on passive observation is a viable alternative in the OSS context due to the availability of large amounts of fairly complete archival data.
C1 [Prechelt, Lutz; Oezbek, Christopher] Free Univ Berlin, D-1000 Berlin, Germany.
C3 Free University of Berlin
RP Prechelt, L (corresponding author), Free Univ Berlin, D-1000 Berlin, Germany.
EM prechelt@inf.fu-berlin.de; oezbek@inf.fu-berlin.de
OI Oezbek, Christopher/0000-0003-3995-1797; Prechelt,
   Lutz/0000-0001-5592-3521
CR [Anonymous], 2000, Code and Other Laws of Cyberspace
   [Anonymous], 2006, CMMI DEV VERS 1 2
   ARTHUR WB, 1989, ECON J, V99, P116, DOI 10.2307/2234208
   Avison D, 1999, COMMUN ACM, V42, P94, DOI 10.1145/291469.291479
   Barcellini F, 2008, INTERACT COMPUT, V20, P141, DOI 10.1016/j.intcom.2007.10.004
   Berdou E., 2007, THESIS LONDON SCH EC
   Bergquist M, 2001, INFORM SYST J, V11, P305, DOI 10.1046/j.1365-2575.2001.00111.x
   Buzan T., 1993, MIND MAP BOOK
   Charmaz K., 2006, CONSTRUCTING GROUNDE, DOI DOI 10.7748/NR.13.4.84.S4
   COHEN MD, 1972, ADMIN SCI QUART, V17, P1, DOI 10.2307/2392088
   Corbin J., 2015, BASICS QUALITATIVE R
   DAVID PA, 1985, AM ECON REV, V75, P332
   Davison R, 2004, INFORM SYST J, V14, P65, DOI 10.1111/j.1365-2575.2004.00162.x
   Denning PJ, 2006, COMMUN ACM, V49, P47, DOI 10.1145/1125944.1125974
   DIETZE S, 2004, THESIS U POTSDAM
   Farrand P, 2002, MED EDUC, V36, P426, DOI 10.1046/j.1365-2923.2002.01205.x
   GARCIA LQ, 2006, THESIS FREIE U BERLI
   Giddens A., 1984, The constitution of society: Outline of the theory of structuration
   Glaser B. G., 1967, DISCOV GROUNDED THEO
   HEDLUND G, 1986, HUM RESOURCE MANAGE, V25, P9, DOI 10.1002/hrm.3930250103
   Hertel G, 2003, RES POLICY, V32, P1159, DOI 10.1016/S0048-7333(03)00047-7
   HIGHSMITH J, 2001, IEEE SOFTWARE, V18, P120
   Jeffries R, 2007, IEEE SOFTWARE, V24, P24, DOI 10.1109/MS.2007.75
   Jorgensen D.L., 1989, Applied Social Research Methods Series, V15
   KRAFFT MF, 2009, THESIS U LIMERICK IR
   Langley A, 1999, ACAD MANAGE REV, V24, P691, DOI 10.2307/259349
   Lave J., 1991, Situated Learning: Legitimate Peripheral Partic- ipation
   LAW J, 1992, SYST PRACTICE, V5, P379, DOI 10.1007/BF01059830
   LI Q, 2008, P INT C INF SYST ICI
   Luhmann N., 1984, Soziale Systeme. Grundriβ einer allgemeinen Theorie
   Mahony SO, 2005, Perspectives on Free and Open Source Software, P393
   MANNS ML, 2004, FEARLESS CHANGE PATT
   Mayring P., 2002, EINFUHRUNG QUALITATI, V5th
   Muhr T., 1991, QUAL SOCIOL, V14, P349, DOI DOI 10.1007/BF00989645
   NOVAK J, 2006, 200601 IHMC CMAPTOOL
   Novak J. D, 1984, Learning How to Learn
   O'Mahony S, 2003, RES POLICY, V32, P1179, DOI 10.1016/S0048-7333(03)00048-9
   OEZBEK C, 2007, P 29 INT C SOFTW ENG
   OEZBEK C, 2010, TRB1001 FREIE U BERL
   OEZBEK C, 2010, THESIS FREIE U BERLI
   OEZBEK C, 2008, TRB0805 FREIE U BERL
   Peirce C. S., 1883, STUDIES LOGIC, P126
   Raymond E. S., 1998, First Monday, V3
   Rogers EM, 2003, DIFFUSION INNOVATION
   Salinger Stephan, 2008, P 20 ANN WORKSH PSYC
   Sarma A, 2009, PROC INT CONF SOFTW, P23, DOI 10.1109/ICSE.2009.5070505
   SCHUSTER R, 2005, THESIS FREIE U BERLI
   SCOTT J, 1988, SOCIOLOGY, V22, P109, DOI 10.1177/0038038588022001007
   SCOTTO M, 2005, 1 INT C OP SOURC SYS
   SHAIKHM, 2003, TAKING STOCK BAZAAR, P127
   SIEFKES C, 2007, THESIS FREIE U BERLI
   Strauss E, 1998, CLIN ORTHOP RELAT R, P2
   Suddaby R, 2006, ACAD MANAGE J, V49, P633, DOI 10.5465/AMJ.2006.22083020
   Torvalds L., 2001, JUST FUN STORY ACCID
   Wenger E., 1998, Communities of practice: learning, meaning, and identity, DOI [10.1017/CBO9780511803932, DOI 10.1017/CBO9780511803932]
   WEST J, 2005, 38 ANN HAW INT C SYS, V7, pC196, DOI DOI 10.1109/HICSS.2005.166
   West J, 2008, IND INNOV, V15, P145, DOI 10.1080/13662710801970142
   Whittaker JA, 2000, IEEE SOFTWARE, V17, P70, DOI 10.1109/52.819971
   Windeler A., 2001, Unternehmungsnetzwerke. Konstitution und Strukturation
   Yamauchi Y., 2000, CSCW 2000. ACM 2000 Conference on Computer Supported Cooperative Work, P329, DOI 10.1145/358916.359004
   Yin R.K., 2003, CASE STUDY RES DESIG
NR 61
TC 6
Z9 6
U1 0
U2 9
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2011
VL 16
IS 4
SI SI
BP 514
EP 537
DI 10.1007/s10664-011-9160-1
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 778ZA
UT WOS:000291746700005
DA 2024-07-18
ER

PT J
AU Lee, S
   Yong, HS
AF Lee, Seiyoung
   Yong, Hwan-Seung
TI Distributed agile: project management in a global environment
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Agile methods; Scrum; Distributed software development; Software
   globalization
ID SOFTWARE-DEVELOPMENT
AB Agile methods have been gaining acceptance in the mainstream software development community. At the same time, globally distributed software development is another trend delivering high-quality software to global users at lower costs. Little is published about the adoption and adaption of Agile methods in a distributed team and software globalization/localization project environment. The overall performance and satisfaction with the international deployment of the latest version of My Yahoo! increased by more than 30% after the global product team, distributed over three continents, adopted Agile methods. Our objective is to highlight successful practices and challenges that have been overcome by the globalization project, and suggest a framework for software globalization project management using a distributed Agile approach.
C1 [Lee, Seiyoung; Yong, Hwan-Seung] Ewha Womans Univ, Dept Comp Sci & Engn 331, Coll Engn, Seoul 120750, South Korea.
C3 Ewha Womans University
RP Lee, S (corresponding author), Ewha Womans Univ, Dept Comp Sci & Engn 331, Coll Engn, Seoul 120750, South Korea.
EM sarahlee230@yahoo.com; hsyong@ewha.ac.kr
CR Abrahamsson P., 2002, Agile Software Development Methods: Review and Analysis
   Ågerfalk PJ, 2006, COMMUN ACM, V49, P26, DOI 10.1145/1164394.1164416
   [Anonymous], ENTERPRISE AGILE ADO
   BENEFIELD G, 2008, HAW INT C SOFTW SYST
   Cohn Mike., 2004, User Stories Applied: For Agile Software Development
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   FLARUP E, 2007, INT UN C IUC32 SAN J
   JAIN N, 2008, AGILE 2008
   Lee G, 2006, COMMUN ACM, V49, P35, DOI 10.1145/1164394.1164417
   Lee OK, 2006, COMMUN ACM, V49, P48, DOI 10.1145/1164394.1164419
   Ramesh B, 2006, COMMUN ACM, V49, P41, DOI 10.1145/1164394.1164418
   Salo O, 2008, IET SOFTW, V2, P58, DOI 10.1049/iet-sen:20070038
   Scotland K, 2008, AGILE 2008, PROCEEDINGS, P191, DOI 10.1109/Agile.2008.22
   SUTHERLAND J, 2007, HAW INT C SOFTW SYST
   Sutherland J., 2007, SCRUM PAPERS NUTS BO
   Sutherland J, 2008, AGILE 2008, PROCEEDINGS, P339, DOI 10.1109/Agile.2008.92
NR 16
TC 51
Z9 58
U1 0
U2 67
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2010
VL 15
IS 2
BP 204
EP 217
DI 10.1007/s10664-009-9119-7
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 570VH
UT WOS:000275705900004
DA 2024-07-18
ER

PT J
AU Huynh, T
   Miller, J
AF Huynh, Toan
   Miller, James
TI Another viewpoint on "evaluating web software reliability based on
   workload and failure data extracted from server logs"
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Partial replication; Empirical evaluation; Case study; www reliability;
   Defect classification
ID PERFORMANCE; USAGE
AB An approach of determining a website's reliability is evaluated in this paper. This technique extracts workload measures and error codes from the server's data logs. This information is then used to calculate the reliability for a particular website. This study follows on from a previous study, and hence, can be regarded as a "partial replication" (technically, as both studies are case studies not formal experiments, this description is inaccurate. Unfortunately, no corresponding definition exists for case studies, and hence the term is used to convey a general sense of purpose) of the original study. Although the method proposed by the original study is feasible, the effectiveness of just using a specific error type and a specific workload to estimate the reliability of websites is questionable. In this study, different error types and their usefulness for reliability analysis are examined and discussed. After a thorough investigation, we believe that reliability analysis for websites must be based on more specific error definitions as they can provide a superior reliability estimate for today's highly dynamic websites.
C1 [Huynh, Toan; Miller, James] Univ Alberta, Dept Elect & Comp Engn, Elect & Comp Engn Res Facil, Edmonton, AB T6G 2V4, Canada.
C3 University of Alberta
RP Miller, J (corresponding author), Univ Alberta, Dept Elect & Comp Engn, Elect & Comp Engn Res Facil, Edmonton, AB T6G 2V4, Canada.
EM huynh@ece.ualberta.ca; jm@ece.ualberta.ca
CR Alagar VS, 2002, P INT COMP SOFTW APP, P405, DOI 10.1109/CMPSAC.2002.1045036
   [Anonymous], HPL199935R1
   [Anonymous], INT WORKSH WEB US AN
   Arlitt MF, 1997, IEEE ACM T NETWORK, V5, P631, DOI 10.1109/90.649565
   Boyd SW, 2004, LECT NOTES COMPUT SC, V3089, P292
   CATLEDGE LD, 1995, COMPUT NETWORKS ISDN, V27, P1065, DOI 10.1016/0169-7552(95)00043-7
   *CGISECURITY, 2002, CROSS SIT SCRIPT FAQ
   CHERKASOVA L, 1998, HPL08119
   Cook S., 2003, WEB DEV GUIDE CROSS
   Cooley R., 1999, Knowledge and Information Systems, V1, P5
   Cowan C, 1998, PROCEEDINGS OF THE SEVENTH USENIX SECURITY SYMPOSIUM, P63
   Cremonesi P, 2002, LECT NOTES COMPUT SC, V2459, P158
   CROVELLA ME, 1997, IEEE ACM T NETWORK, V5, P631
   Evans D, 2002, IEEE SOFTWARE, V19, P42, DOI 10.1109/52.976940
   Gallagher RM, 2004, PAIN MED, V5, P1, DOI 10.1111/j.1526-4637.2004.04014.x
   Goseva-Popstojanova K, 2006, EMPIR SOFTW ENG, V11, P71, DOI 10.1007/s10664-006-5966-7
   Goseva-Popstojanova K, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P403, DOI 10.1109/ISSRE.2004.19
   GOSEVAPOPSTOJAN.K, 2006, 2006 INT C DEP SYST, P505
   GRANT J, 2000, 10 UNDENIABLE TRUTHS
   GROSSMAN J, 2004, VAR BUSINESS, V20, P41
   He D., 2000, 22nd Annual Colloquium on Information Retrieval Research, P57
   Huang XJ, 2004, J AM SOC INF SCI TEC, V55, P1290, DOI 10.1002/asi.20084
   Huang Yao-Wen, 2003, Proceedings of the 12th International Conference on World Wide Web, P148
   Huntington P, 2008, INFORM PROCESS MANAG, V44, P358, DOI 10.1016/j.ipm.2007.03.003
   HUYNH T, 2005, 4 INT S EMP SOFTW EN, P162
   Jolliffee I.T., 1986, Principal Component Analysis
   Kallepalli C, 2001, IEEE T SOFTWARE ENG, V27, P1023, DOI 10.1109/32.965342
   Lyu M.R., 1995, HDB SOFTWARE RELIABI
   MA L, 2003, 3 INT C WEB ENG OV S, P314
   MASTERSON M, 1999, E COM TECH TOUGH ENO
   MENASCE D, 2000, 2 ACM C EL COMM EC 0, P56
   Menascé DA, 2000, PERFORM EVALUATION, V42, P223, DOI 10.1016/S0166-5316(00)00034-1
   MENASCE DA, 1999, ACM C EL COMM DENV C, P119
   Montgomery AL, 2001, COMPUTER, V34, P94, DOI 10.1109/2.933515
   Musa J. D., 1987, Software Reliability: Measure-ment, Prediction, Application
   Nah F. F.-H., 2002, Intelligent support systems: knowledge management, P145
   NELSON E, 1978, MICROELECTRON RELIAB, V17, P67, DOI 10.1016/0026-2714(78)91139-3
   Offutt J, 2002, IEEE SOFTWARE, V19, P25, DOI 10.1109/52.991329
   Pitkow J. E., 1999, World Wide Web, V2, P3, DOI 10.1023/A:1019284202914
   Rose G.M., 2001, INT J MEDIA MANAGEME, V3, P105
   ROSENSTEIN M, 2000, 2 ACM C EL COMM EC 0, P38
   SPITZNER L, 2001, KNOW YOUR ENEMY REVE, pCH6
   Tian J, 2004, IEEE T SOFTWARE ENG, V30, P754, DOI 10.1109/TSE.2004.87
   Trivedi K.S., 2001, Probability and statistics with reliability, queueing, and computer science applications, V2nd
   Wagner D., 2000, IN NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM, P3
   Wang QM, 2003, HETEROATOM CHEM, V14, P293, DOI 10.1002/hc.10174
   WILLIAMS J, 2001, AVOIDING CNNN MOMENT, P68
NR 47
TC 10
Z9 11
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2009
VL 14
IS 4
BP 371
EP 396
DI 10.1007/s10664-008-9084-6
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 461TM
UT WOS:000267294400001
DA 2024-07-18
ER

PT J
AU De Lucia, A
   Oliveto, R
   Tortora, G
AF De Lucia, Andrea
   Oliveto, Rocco
   Tortora, Genoveffa
TI Assessing IR-based traceability recovery tools through controlled
   experiments
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Traceability recovery; Information retrieval; Latent semantic indexing;
   Singular value decomposition; Program comprehension; Impact analysis
ID REQUIREMENTS; INFORMATION; RETRIEVAL; LINKS
AB We report the results of a controlled experiment and a replication performed with different subjects, in which we assessed the usefulness of an Information Retrieval-based traceability recovery tool during the traceability link identification process. The main result achieved in the two experiments is that the use of a traceability recovery tool significantly reduces the time spent by the software engineer with respect to manual tracing. Replication with different subjects allowed us to investigate if subjects' experience and ability play any role in the traceability link identification process. In particular, we made some observations concerning the retrieval accuracy achieved by the software engineers with and without the tool support and with different levels of experience and ability.
C1 [De Lucia, Andrea; Oliveto, Rocco; Tortora, Genoveffa] Univ Salerno, Dept Math & Informat, I-84084 Fisciano, SA, Italy.
C3 University of Salerno
RP Oliveto, R (corresponding author), Univ Salerno, Dept Math & Informat, Via Ponte Don Melillo, I-84084 Fisciano, SA, Italy.
EM adelucia@unisa.it; roliveto@unisa.it; tortora@unisa.it
RI Oliveto, Rocco/J-4037-2012; De Lucia, Andrea/AAG-6781-2020
OI De Lucia, Andrea/0000-0002-4238-1425
CR [Anonymous], PRACTICAL NONPARAMET
   [Anonymous], 1992, Information retrieval: Data structures and algorithms
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Antoniol G, 2000, PROG COMPREHEN, P253, DOI 10.1109/WPC.2000.852502
   ANTONIOL G, 2000, P 7 WORK C REV ENG I, V240
   Baeza-Yates Ricardo, 1999, MODERN INFORM RETRIE, V463
   BASILI VR, 1986, IEEE T SOFTWARE ENG, V12, P733, DOI 10.1109/TSE.1986.6312975
   Bruegge B, 2006, 2006 IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P213, DOI 10.1109/ICGSE.2006.261235
   Cleland-Huang J, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P135, DOI 10.1109/RE.2005.78
   Cullum J. K., 1998, LANCZOS ALGORITHMS L, V1
   De Lucia A, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1276933.1276934
   De Lucia A, 2006, PROC IEEE INT CONF S, P299
   De Lucia A, 2006, INT C PROGRAM COMPRE, P317, DOI 10.1109/ICPC.2006.28
   De Lucia A, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P839, DOI 10.1145/1368088.1368216
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   DELUCIA A, 2007, P INT S GRAND CHALL, P46
   DELUCIA A, 2004, P 16 INT C SOFTW ENG, P31
   Devore J., 1999, APPL STAT ENG SCI
   Di Penta M, 2002, PROG COMPREHEN, P207, DOI 10.1109/WPC.2002.1021342
   Domges R, 1998, COMMUN ACM, V41, P54, DOI 10.1145/290133.290149
   Duan C., 2007, International Conference on Automated Software Engineering, P244
   DUMAIS ST, 1991, BEHAV RES METH INS C, V23, P229, DOI 10.3758/BF03203370
   DUMAIS ST, 1993, P 1 TEXT RETR C TREC, P137
   Gotel O. C. Z., 1994, Proceedings of the First International Conference on Requirements Engineering (Cat. No.94TH0613-0), P94, DOI 10.1109/ICRE.1994.292398
   Hayes JH, 2006, IEEE T SOFTWARE ENG, V32, P4, DOI 10.1109/TSE.2006.3
   Hayes JH, 2003, 11TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P138
   Juristo N., 2013, BASICS SOFTWARE ENG
   Leffingwell D., 1997, CALCULATING YOUR RET
   Lin J, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P363
   Lormans M, 2006, WORK CONF REVERSE EN, P275
   Lormans M, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P45
   Marchal D, 2003, J STRUCT GEOL, V25, P135, DOI 10.1016/S0191-8141(02)00011-1
   Marcus A., 2005, Proceedings of the 3rd International Workshop on Traceability in Emerging Forms of Software Engineering. TEFSE'05, P56, DOI [DOI 10.1145/1107656.1107669, 10.1145/1107656.1107669.1107669, DOI 10.1145/1107656.1107669.1107669]
   Oliveto R, 2008, THESIS U SALERNO
   Oppenheim A.N., 1992, QUESTIONNAIRE DESIGN
   Pfleeger SL, 2000, IEEE SOFTWARE, V17, P27, DOI 10.1109/52.819965
   Pinheiro FAC, 1996, IEEE SOFTWARE, V13, P52, DOI 10.1109/52.506462
   PORTER MF, 1980, PROGRAM-AUTOM LIBR, V14, P130, DOI 10.1108/eb046814
   Ricca F, 2007, PROC INT CONF SOFTW, P375
   Settimi R, 2004, 7TH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, P49, DOI 10.1109/IWPSE.2004.1334768
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Yadla S, 2005, INNOV SYST SOFTW ENG, V1, P116, DOI 10.1007/s11334-005-0011-3
   ZOU X, 2007, P INT S GRAND CHALL, P40
NR 43
TC 49
Z9 55
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2009
VL 14
IS 1
BP 57
EP 92
DI 10.1007/s10664-008-9090-8
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 414UU
UT WOS:000263891500004
DA 2024-07-18
ER

PT J
AU Wohlin, C
AF Wohlin, C
TI Are individual differences in software development performance possible
   to capture using a quantitative survey?
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE individual performance; development experience; personal software
   process; quantitative survey
AB Software engineering is human intensive. Thus, it is important to understand and evaluate the value of different types of experiences, and their relation to the quality of the developed software. Many job advertisements focus on requiring knowledge of, for example, specific programming languages. This may seem sensible at first sight, but is it really possible to capture software development performance using this kind of simple measure? On the other hand, maybe it is sufficient to have general knowledge in programming and then it is enough to learn a specific language within the new job. Two key questions are (1) whether prior knowledge of a specific language actually does improve software quality and (2) whether it is possible to capture performance using simple quantitative measures'? This paper presents an empirical study where the experience, for example with respect to a specific programming language, of students is assessed using a quantitative survey at the beginning of a course on the personal software process (PSP), and the Outcome of the course is evaluated, for example, using the number of defects and development time. Statistical tests are used to analyze the relationship between experience/background and the performance of the students in terms of software quality. The results are mostly unexpected, for example, we are unable to show any significant relation between experience in the programming language used and the number of defects detected.
C1 Blekinge Inst Technol, Sch Engn, Dept Software Engn, SE-37225 Ronneby, Sweden.
C3 Blekinge Institute Technology
RP Blekinge Inst Technol, Sch Engn, Dept Software Engn, Box 520, SE-37225 Ronneby, Sweden.
EM claes.wohlin@bth.se
OI Wohlin, Claes/0000-0003-0460-5253
CR [Anonymous], 1997, Design and Analysis of Experiments
   [Anonymous], 1997, INTRO PERSONAL SOFTW
   Boehm BW., 1981, Software Engineering Economics
   Briand L., 1996, Empirical Software Engineering, V1, P61, DOI 10.1007/BF00125812
   BROOKS FP, 1987, IEEE COMPUT, V20, P10, DOI DOI 10.1109/MC.1987.1663532
   BROOKS RE, 1980, COMMUN ACM, V23, P207, DOI 10.1145/358841.358847
   CURTIS B, 1980, P IEEE, V68, P1144, DOI 10.1109/PROC.1980.11813
   Ferguson P, 1997, COMPUTER, V30, P24, DOI 10.1109/2.589907
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   Humphrey W S, 1995, A discipline for software engineering
   Humphrey WS, 1996, IEEE SOFTWARE, V13, P77, DOI 10.1109/52.493023
   KACHIGAN SK, 1986, STAT NAL INTRO UNIVA
   Robson C., 2002, Real world research
   Wesslen A., 2000, Empirical Software Engineering, V5, P93, DOI 10.1023/A:1009811222725
   Wohlin C, 1998, NINTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P49, DOI 10.1109/ISSRE.1998.730773
   WOHLIN C, 1998, IEEE TCSE SOFTWARE P, V12, P7
   Wohlin C., 1999, Experimentation in Software Engineering - An Introduction
NR 17
TC 7
Z9 9
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2004
VL 9
IS 3
BP 211
EP 228
DI 10.1023/B:EMSE.0000027780.08194.b0
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 836LM
UT WOS:000222557200003
DA 2024-07-18
ER

PT J
AU Thelin, T
   Runeson, P
   Wohlin, C
   Olsson, T
   Andersson, C
AF Thelin, T
   Runeson, P
   Wohlin, C
   Olsson, T
   Andersson, C
TI Evaluation of usage-based reading - Conclusions after three experiments
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE empirical study; reading technique; software inspection; usage-based
   reading
ID SOFTWARE INSPECTIONS
AB Software inspections have been introduced in software engineering in order to detect faults before testing is performed. Reading techniques provide reviewers in software inspections with guidelines on how they should check the documents under inspection. Several reading techniques with different 16 purposes have been introduced and empirically evaluated. In this paper, we describe a reading technique with the special aim to detect faults that are severe from a user's point of view. The reading technique is named usage-based reading (UBR) and it can be used to inspect all software artefacts. In the series of experiments, a high-level design document is used. The main focus of the paper is on the third experiment, which investigates the information needed for UBR in the individual preparation and the meeting of software inspections. Hence, the paper discusses (1) the series of three experiments of UBR, (2) the individual preparation of the third experiment, and (3) the meeting part of the third experiment. For each of these three parts, results are produced. The main results are (1) UBR is an efficient and effective reading technique that can be used for user-focused software inspections, (2) UBR is more efficient and effective if the information used for UBR is developed prior to, instead of during the individual preparation, and (3) the meeting affects the UBR inspection in terms of increased effectiveness and decreased efficiency. In summary, the empirical evidence shows that UBR is an efficient and effective reading technique to be used by software organizations that produce software for which the user perceived quality is important.
C1 Lund Univ, Dept Commun Syst, SE-22100 Lund, Sweden.
   Blekinge Inst Technol, Dept Software Eng & Comp Sci, SE-37225 Ronneby, Sweden.
C3 Lund University; Blekinge Institute Technology
RP Lund Univ, Dept Commun Syst, Box 118, SE-22100 Lund, Sweden.
EM thomast@telecom.lth.se; perr@telecom.lth.se; claes.wohlin@bth.se;
   thomas.olsson@iese.fhg.de; carinaa@telecom.lth.se
RI Runeson, Per/H-5113-2019
OI Runeson, Per/0000-0003-2795-4851; Wohlin, Claes/0000-0003-0460-5253;
   Olsson, Thomas/0000-0002-2933-1925
CR [Anonymous], 1992, Object Oriented Software Engineering: A Use Case Driven Approach
   Aurum A, 2002, SOFTW TEST VERIF REL, V12, P133, DOI 10.1002/stvr.243
   Basili V. R., 1996, Empirical Software Engineering, V1, P133, DOI 10.1007/BF00368702
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Cheng B., 1996, Proceedings 1996 Australian Software Engineering Conference, P203, DOI 10.1109/ASWEC.1996.534137
   Dunsmore A, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P47, DOI 10.1109/ICSE.2002.1007955
   FAGAN ME, 1976, IBM SYST J, V15, P182, DOI 10.1147/sj.153.0182
   *ITU T, 1996, Z120 ITUT
   KNIGHT JC, 1993, COMMUN ACM, V36, P51, DOI 10.1145/163359.163366
   Laitenberger O, 2000, J SYST SOFTWARE, V50, P5, DOI 10.1016/S0164-1212(99)00073-4
   MARTIN J, 1990, COMMUN ACM, V33, P225, DOI 10.1145/75577.75587
   MUSA J.D., 1998, SOFTWARE RELIABILITY
   PORTON R, 1995, CINEASTE, V21, P6
   Saaty TL., 2001, INT SERIES OPERATION
   Siegel Sidney, 1988, Nonparametric statistics for the behavioral sciences
   Thelin T, 2003, IEEE T SOFTWARE ENG, V29, P687, DOI 10.1109/TSE.2003.1223644
   Thelin T, 2003, IEEE SOFTWARE, V20, P30, DOI 10.1109/MS.2003.1207451
   Thelin T, 2001, INFORM SOFTWARE TECH, V43, P925, DOI 10.1016/S0950-5849(01)00201-4
   VOTTA L, 1993, ACM SOFTWARE ENG NOT, V18, P107
   Wohlin C, 1997, TENTH CONFERENCE ON SOFTWARE ENGINEERING EDUCATION & TRAINING, PROCEEDINGS, P40, DOI 10.1109/SEDC.1997.592438
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 27
TC 18
Z9 18
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2004
VL 9
IS 1-2
BP 77
EP 110
DI 10.1023/B:EMSE.0000013515.86806.d4
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 805NU
UT WOS:000220373800003
DA 2024-07-18
ER

PT J
AU Härtel, J
   Lämmel, R
AF Hartel, Johannes
   Laemmel, Ralf
TI Operationalizing validity of empirical software engineering studies
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Simulations; Empirical methods; Validity; Threats; Testing
ID DEFECT PREDICTION; DESIGN; SIMULATION
AB Empirical Software Engineering studies apply methods, like linear regression, statistic tests, or correlation analysis, to better understand software engineering scenarios. Assuring the validity of such methods and corresponding results is challenging but critical. This is also reflected by quality criteria on the validity that are part of the reviewing process for the corresponding research results. However, such criteria are often hard to define operationally and thus hard to judge by the reviewers. In this paper, we describe a new strategy to define and communicate the validity of methods and results. We conceptually decompose a study into an empirical scenario, a used method, and the produced results. Validity can only be described as the relationship between the three parts. To make the empirical scenario fully operational, we convert informal assumptions on it into executable simulation code that leverages artificial data to replace (or complement) our real data. We can then run the method on the artificial data and examine the impact of our assumptions on the quality of results. This may operationally i) support the validity of a method for a valid result, ii) threaten the validity of a method for an invalid result if assumptions are controversial, or iii) invalidate a method for an invalid result if assumptions are plausible. We encourage researchers to submit simulations as additional artifacts to the reviewing process to make such statements explicit. Rating if a simulated scenario is plausible or controversial is subjective and may benefit from involving a reviewer. We show that existing empirical software engineering studies can benefit from such additional validation artifacts.
C1 [Hartel, Johannes] Vrije Univ Brussel, Ixelles, Belgium.
   [Laemmel, Ralf] Univ Koblenz, Koblenz, Germany.
C3 Vrije Universiteit Brussel; University of Koblenz & Landau
RP Härtel, J (corresponding author), Vrije Univ Brussel, Ixelles, Belgium.
EM johannes.hartel@vub.be
OI Hartel, Johannes/0000-0002-7461-2320
FU We want to acknowledge the original work of the authors in the studies,
   subject to the following illustrations. All studies have been selected
   because of their originality. However, we believe that this
   meta-validation of simulation-based testing is not cr
FX We want to acknowledge the original work of the authors in the studies,
   subject to the following illustrations. All studies have been selected
   because of their originality. However, we believe that this
   meta-validation of simulation-based testing is not credible on
   unpublished examples.
CR Akaike H, 1973, 2 INT S INF THEOR, P267, DOI [DOI 10.1007/978-1-4612-1694-0_15, 10.1007/978-1-4612-0919-5_38, DOI 10.1007/978-1-4612-0919-5_38]
   Alali A, 2008, INT C PROGRAM COMPRE, P182, DOI 10.1109/ICPC.2008.24
   Albayrak Ö, 2014, EMPIR SOFTW ENG, V19, P241, DOI 10.1007/s10664-012-9221-0
   Anda B, 2005, EMPIR SOFTW ENG, V10, P285, DOI 10.1007/s10664-005-1289-3
   Apa C, 2014, EMPIR SOFTW ENG, V19, P378, DOI 10.1007/s10664-013-9267-7
   Baayen RH, 2008, J MEM LANG, V59, P390, DOI 10.1016/j.jml.2007.12.005
   Bangash AA, 2020, EMPIR SOFTW ENG, V25, P5047, DOI 10.1007/s10664-020-09878-9
   Barón MM, 2023, PROC INT CONF SOFTW, P1907, DOI 10.1109/ICSE48619.2023.00162
   Barr DJ, 2013, J MEM LANG, V68, P255, DOI 10.1016/j.jml.2012.11.001
   Beheim B, 2021, NATURE, V595, pE29, DOI 10.1038/s41586-021-03655-4
   Bidoki Neda Hajiakhoond, 2020, Online Social Networks and Media, V16, P1, DOI 10.1016/j.osnem.2020.100070
   Bird C, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P121, DOI 10.1145/1595696.1595716
   Blythe Jim, 2019, Advances in Practical Applications of Survivable Agents and Multi-Agent Systems. The PAAMS Collection. 17th International Conference, PAAMS 2019. Proceedings: Lecture Notes in Artificial Intelligence (LNAI 11523), P3, DOI 10.1007/978-3-030-24209-1_1
   Boh WF, 2007, MANAGE SCI, V53, P1315, DOI 10.1287/mnsc.1060.0687
   Borges H, 2016, Proceedings of the The 12th International Conference on Predictive Models and Data Analytics in Software Engineering
   Borle NC, 2018, EMPIR SOFTW ENG, V23, P1931, DOI 10.1007/s10664-017-9576-3
   Burton A, 2006, STAT MED, V25, P4279, DOI 10.1002/sim.2673
   Canfora G, 2015, SOFTW TEST VERIF REL, V25, P426, DOI 10.1002/stvr.1570
   Casalnuovo C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P755, DOI 10.1109/ICSE.2015.88
   Clyburne-Sherin A, 2019, Meta-Psychology, V3, DOI DOI 10.15626/MP.2018.892
   Cohen J., 2013, APPL MULTIPLE REGRES
   Cosentino V, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P137, DOI [10.1109/MSR.2016.023, 10.1145/2901739.2901776]
   Di Penta M, 2008, PROC IEEE INT CONF S, P217, DOI 10.1109/ICSM.2008.4658070
   Dias M, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P341, DOI 10.1109/SANER.2015.7081844
   Falcao F, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P378, DOI [10.1109/SANER48275.2020.9054824, 10.1109/saner48275.2020.9054824]
   Fang HB, 2022, PROC INT CONF SOFTW, P2116, DOI 10.1145/3510003.3510121
   Gabel M, 2010, P ACM SIGSOFT S FDN, P147, DOI DOI 10.1145/1882291.1882315
   Gall H, 2007, PROC INT CONF SOFTW, P107, DOI 10.1109/ICSECOMPANION.2007.8
   Gasparini A, 2020, STAT NEERL, V74, P5, DOI 10.1111/stan.12188
   Gelman A., 2020, Regression and other stories, DOI DOI 10.1017/9781139161879
   Ghaleb TA, 2019, EMPIR SOFTW ENG, V24, P2102, DOI 10.1007/s10664-019-09695-9
   Härtel J, 2022, IEEE WORK CONF MIN S, P86, DOI 10.1145/3524842.3527960
   Härtel J, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P320, DOI [10.1109/SANER48275.2020.9054811, 10.1109/saner48275.2020.9054811]
   Harrell FE, 2015, SPRINGER SER STAT, DOI 10.1007/978-3-319-19425-7
   Herzig K, 2013, IEEE WORK CONF MIN S, P121, DOI 10.1109/MSR.2013.6624018
   Honsel V, 2015, 2015 30TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING WORKSHOP (ASEW), P102, DOI 10.1109/ASEW.2015.9
   Honsel V, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P863, DOI 10.1109/ICSE.2015.279
   Honsel V, 2014, 2014 IEEE INTERNATIONAL CONFERENCE ON DATA MINING WORKSHOP (ICDMW), P828, DOI 10.1109/ICDMW.2014.35
   Imbens GW, 2015, CAUSAL INFERENCE FOR STATISTICS, SOCIAL, AND BIOMEDICAL SCIENCES: AN INTRODUCTION, P57
   Iyer RN, 2019, IEEE Transactions on Software Engineering
   Jamie DM, 2002, Journal of Statistics Education, V10
   Jbara A, 2014, EMPIR SOFTW ENG, V19, P1261, DOI 10.1007/s10664-013-9275-7
   Jiarpakdee J, 2021, IEEE T SOFTWARE ENG, V47, P320, DOI 10.1109/TSE.2019.2891758
   Johnson JC, 2019, PROC IEEE INT CONF S, P513, DOI 10.1109/ICSME.2019.00085
   Jolak R, 2020, EMPIR SOFTW ENG, V25, P4427, DOI 10.1007/s10664-020-09835-6
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kochhar PS, 2017, Proceedings of the 21st International Conference on Evaluation and Assessment in Software Engineering, P298
   Martens A, 2011, EMPIR SOFTW ENG, V16, P587, DOI 10.1007/s10664-010-9142-8
   McChesney Ian, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P81, DOI 10.1145/3383219.3383228
   McElreath R, 2016, TEXT STAT SCI, pXI
   Miller G, 2006, SCIENCE, V314, P1856, DOI 10.1126/science.314.5807.1856
   Mockus A, 2000, BELL LABS TECH J, V5, P169, DOI 10.1002/bltj.2229
   Mockus A, 2010, Proc. of the 18th Symposium on the Foundations of Software Engineering (FSE), P117
   Morris TP, 2019, STAT MED, V38, P2074, DOI 10.1002/sim.8086
   Nagappan Nachiappan, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P309, DOI 10.1109/ISSRE.2010.25
   Nam J, 2018, IEEE T SOFTWARE ENG, V44, P874, DOI 10.1109/TSE.2017.2720603
   Nam J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P382, DOI 10.1109/ICSE.2013.6606584
   Peduzzi P, 1996, J CLIN EPIDEMIOL, V49, P1373, DOI 10.1016/S0895-4356(96)00236-3
   Posnett D., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P362, DOI 10.1109/ASE.2011.6100074
   Rahman F, 2012, Proceedings of the ACM SIGSOFT 20th International Symposium on the Foundations of Software Engineering, FSE '12, P61
   Rahman F, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P491, DOI 10.1145/1985793.1985860
   Rahman MM, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P222, DOI 10.1145/2889160.2889244
   Reyes RP, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1195, DOI 10.1145/3180155.3180161
   Roberts DR, 2017, ECOGRAPHY, V40, P913, DOI 10.1111/ecog.02881
   Sayagh M, 2020, EMPIR SOFTW ENG, V25, P1259, DOI 10.1007/s10664-019-09790-x
   Scholtes I, 2016, EMPIR SOFTW ENG, V21, P642, DOI 10.1007/s10664-015-9406-4
   Seifer P, 2019, PROCEEDINGS OF THE 12TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING (SLE '19), P152, DOI 10.1145/3357766.3359541
   Shadish W. R., 2002, EXPT QUASI EXPT DESI
   SHAO J, 1993, J AM STAT ASSOC, V88, P486, DOI 10.2307/2290328
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Sliwerski J., 2005, MSR
   Stodden V, 2018, P NATL ACAD SCI USA, V115, P2584, DOI 10.1073/pnas.1708290115
   Taemin Seo, 2009, Proceedings 21st International Conference on Software Engineering & Knowledge Engineering (SEKE 2009), P170
   Tan M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P99, DOI 10.1109/ICSE.2015.139
   Tantithamthavorn C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P286, DOI 10.1145/3183519.3183547
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Thongtanunam P, 2016, PROC INT CONF SOFTW, P1039, DOI 10.1145/2884781.2884852
   TICHY WF, 1995, J SYST SOFTWARE, V28, P9, DOI 10.1016/0164-1212(94)00111-Y
   Tsay J, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P356, DOI 10.1145/2568225.2568315
   Tufano M, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1797
   Vasilescu B, 2015, CHI 2015: PROCEEDINGS OF THE 33RD ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P3789, DOI 10.1145/2702123.2702549
   Vaughn BK, 2008, J EDUC MEAS, V45, P94, DOI 10.1111/j.1745-3984.2007.00053_2.x
   Vokác M, 2004, IEEE T SOFTWARE ENG, V30, P904, DOI 10.1109/TSE.2004.99
   Wood M, 2005, J STAT EDUC, V13, DOI 10.1080/10691898.2005.11910562
   Yan M, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1308, DOI 10.1145/3368089.3417048
   Zhang F, 2017, IEEE T SOFTWARE ENG, V43, P476, DOI 10.1109/TSE.2016.2599161
   Zhimin He, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P45, DOI 10.1109/ESEM.2013.20
   Zimmermann T, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P531, DOI 10.1145/1368088.1368161
NR 88
TC 0
Z9 0
U1 1
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2023
VL 28
IS 6
AR 153
DI 10.1007/s10664-023-10370-3
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA X8JK0
UT WOS:001100843200002
DA 2024-07-18
ER

PT J
AU Chen, YH
   Fernandes, E
   Adams, B
   Hassan, AE
AF Chen, Yihao
   Fernandes, Eduardo
   Adams, Bram
   Hassan, Ahmed E.
TI On practitioners' concerns when adopting service mesh frameworks
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Service mesh; Microservices; Mixed-methods empirical study; Discussion
   forum; Technology adoption; Software architecture; Service mesh;
   Microservices; Mixed-methods empirical study; Discussion forum;
   Technology adoption; Software architecture
ID SOFTWARE
AB Context The emerging service mesh architecture tries to simplify microservices by delegating crucial tasks to dedicated infrastructure. However, service mesh introduces new notions and enables complex capabilities such as sidecar proxies that inevitably bring major adoption concerns.Objective We investigate the adoption concerns in two dominant open-source service mesh frameworks via a mixed-methods empirical investigation of the past, current and evolution of 5,497 practitioner questions posted on generic and framework-specific question-and-answer fora.Method We first mine the topics of questions with the help of Dynamic Topic Modeling (DTM). We identify evolution by applying topic modelling to time periods and aggregating topics into macro-topics. We conduct a qualitative analysis to understand the three major types of questions and to generalize common fix patterns for the extracted error symptoms. We consulted a service mesh domain expert to provide feedback on our findings and discuss implications.Results We found that about half of the questions are error-related and mined 18 topics, covering service mesh traffic, infrastructure, security, observability and application. We discovered a drastic decline in traffic-related concerns while finding persisting infrastructure-related concerns and a rise in security and observability concerns. We identified 54 error symptoms from two popular service mesh frameworks and generalized 9 common fix patterns. We found complex symptom-to-fix relationships, yet, surprisingly, minimal configuration changes were able to fix most symptoms.Conclusion Providing consistent documentation and practical automation that assists customization of service mesh deployment and functionalities is crucial in the current service mesh domain, given the diversity of discovered intentions, goals and symptoms. Furthermore, there should be more work towards better container orchestration to deploy service mesh frameworks and reliable customization of security and observability service mesh features.
C1 [Chen, Yihao; Fernandes, Eduardo; Hassan, Ahmed E.] Queens Univ, Sch Comp, Kingston, ON, Canada.
   [Adams, Bram] Univ Southern Denmark, Maersk Mc Kinney Moller Inst, Odense, Syddanmark, Denmark.
C3 Queens University - Canada; University of Southern Denmark
RP Chen, YH (corresponding author), Queens Univ, Sch Comp, Kingston, ON, Canada.
EM yihao.chen@queensu.ca; edmf@mmmi.sdu.dk; bram.adams@queensu.ca;
   hassan@queensu.ca
RI Fernandes, Eduardo/F-8555-2017
OI Fernandes, Eduardo/0000-0002-1222-2247; Chen, Yihao/0000-0002-3317-1995
FU We would like to thank the service mesh expert who provided feedback on
   our findings. Their statements are accounts of personal experience and
   opinion, and are in no means relate to their current or past
   affiliations.
FX We would like to thank the service mesh expert who provided feedback on
   our findings. Their statements are accounts of personal experience and
   opinion, and are in no means relate to their current or past
   affiliations.
CR Allamanis M, 2013, IEEE WORK CONF MIN S, P53, DOI 10.1109/MSR.2013.6624004
   Alshuqayran N, 2016, IEEE INT CONF SERV, P44, DOI 10.1109/SOCA.2016.15
   Aly M, 2021, INTERNET THINGS-NETH, V14, DOI 10.1016/j.iot.2021.100364
   Barua A, 2014, EMPIR SOFTW ENG, V19, P619, DOI 10.1007/s10664-012-9231-y
   BASILI VR, 1988, IEEE T SOFTWARE ENG, V14, P758, DOI 10.1109/32.6156
   Ben-Kiki Oren, 2009, Working Draft 2008, V2009, P11
   Bevana N., 1991, P 4 INT C HCI, P1
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Blei DM, 2006, P 23 INT C MACH LEAR, P113
   Bourne V, 2022, ANN APIS INTEGRATION
   Buck C, 2021, COMPUT SECUR, V110, DOI 10.1016/j.cose.2021.102436
   Burns B, 2016, COMMUN ACM, V59, P50, DOI 10.1145/2890784
   Cardellini V, 1999, IEEE INTERNET COMPUT, V3, P28, DOI 10.1109/4236.769420
   Chakraborty P, 2021, INFORM SOFTWARE TECH, V137, DOI 10.1016/j.infsof.2021.106603
   Chen Y, 2022, REPLICATION PACKAGE
   Chen ZP, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P750, DOI 10.1145/3368089.3409759
   Cito J, 2017, IEEE WORK CONF MIN S, P323, DOI 10.1109/MSR.2017.67
   De Sanctis M, 2020, 2020 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE COMPANION (ICSA-C 2020), P59, DOI 10.1109/ICSA-C50368.2020.00019
   Dragoni N., 2017, PRESENT ULTERIOR SOF, P195, DOI DOI 10.1007/978-3-319-67425-4_12
   Esposito C, 2016, IEEE CLOUD COMPUT, V3, P10, DOI 10.1109/MCC.2016.105
   Ferreira AP, 2019, INT CONF CLOUD COMP, P199, DOI 10.1109/CloudCom.2019.00038
   Ganguli M, 2021, IEEE INT CONF EDGE C, P78, DOI 10.1109/EDGE53862.2021.00020
   Goethals T, 2020, PROCEEDINGS OF THE 10TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND SERVICES SCIENCE (CLOSER), P161, DOI 10.5220/0009517401610170
   Hahn DA, 2020, L N INST COMP SCI SO, V335, P140, DOI 10.1007/978-3-030-63086-7_9
   Hamidi S, 2014, P 29 INT C AUT SOFTW, P485
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hindle A, 2009, PROC IEEE INT CONF S, P339, DOI 10.1109/ICSM.2009.5306310
   Houmani Z, 2020, 2020 20TH IEEE/ACM INTERNATIONAL SYMPOSIUM ON CLUSTER, CLOUD AND INTERNET COMPUTING (CCGRID 2020), P290, DOI 10.1109/CCGrid49817.2020.00-64
   Klein Matt, 2017, LYFTS ENVOY EXPERIEN
   Li BW, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10063-9
   Li WB, 2019, 2019 13TH IEEE INTERNATIONAL CONFERENCE ON SERVICE-ORIENTED SYSTEM ENGINEERING (SOSE) / 10TH INTERNATIONAL WORKSHOP ON JOINT CLOUD COMPUTING (JCC) / IEEE INTERNATIONAL WORKSHOP ON CLOUD COMPUTING IN ROBOTIC SYSTEMS (CCRS), P122, DOI 10.1109/SOSE.2019.00026
   Lou YL, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P617, DOI 10.1145/3368089.3409760
   McHugh ML, 2013, BIOCHEM MEDICA, V23, P143, DOI 10.11613/BM.2013.018
   Miano S, 2018, IEEE INT CONF HIGH
   NIST, 2020, NIST Special Publication, V800-175B
   Picoreti R, 2018, 2018 16TH IEEE INT CONF ON DEPENDABLE, AUTONOM AND SECURE COMP, 16TH IEEE INT CONF ON PERVAS INTELLIGENCE AND COMP, 4TH IEEE INT CONF ON BIG DATA INTELLIGENCE AND COMP, 3RD IEEE CYBER SCI AND TECHNOL CONGRESS (DASC/PICOM/DATACOM/CYBERSCITECH), P776, DOI 10.1109/DASC/PiCom/DataCom/CyberSciTec.2018.00134
   Röder M, 2015, WSDM'15: PROCEEDINGS OF THE EIGHTH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING, P399, DOI 10.1145/2684822.2685324
   Sayagh M, 2020, IEEE T SOFTWARE ENG, V46, P646, DOI 10.1109/TSE.2018.2867847
   Schneider S, 2020, P 16 INT C NETW SERV, P1
   Schneider S, 2021, IEEE T NETW SERV MAN, V18, P3829, DOI 10.1109/TNSM.2021.3076503
   Scoccia GL, 2021, IEEE WORK CONF MIN S, P271, DOI 10.1109/MSR52588.2021.00039
   Sculley D, 2015, ADV NEUR IN, V28
   Sedghpour Mohammad Reza Saleh, 2021, HAOC '21: Proceedings of the 1st Workshop on High Availability and Observability of Cloud Systems, P4, DOI 10.1145/3447851.3458740
   Sedghpour MRS, 2022, PROCEEDINGS OF THE 2022 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE '22), P17, DOI 10.1145/3489525.3511686
   Shadija D., 2017, P 23 INT C AUT COMP, P1
   Squire M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P219, DOI 10.1109/ICSE.2015.150
   Syed S, 2017, PR INT CONF DATA SC, P165, DOI 10.1109/DSAA.2017.61
   Thönes J, 2015, IEEE SOFTWARE, V32, P116, DOI 10.1109/MS.2015.11
   Vayghan LA, 2018, PROCEEDINGS 2018 IEEE 11TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING (CLOUD), P970, DOI 10.1109/CLOUD.2018.00148
   Venkatesh PK, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS), P131, DOI 10.1109/ICWS.2016.25
   Wang W, 2013, IEEE WORK CONF MIN S, P61, DOI 10.1109/MSR.2013.6624006
   Wojciechowski L, 2021, IEEE INFOCOM SER, DOI 10.1109/INFOCOM42981.2021.9488670
   Wood JR, 2008, J USABILITY STUD, V4, P1
   Wu MH, 2022, EUR CON SFTWR MTNCE, P432, DOI 10.1109/SANER53432.2022.00058
   Xu TY, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P307, DOI 10.1145/2786805.2786852
   Zhang S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P152, DOI 10.1145/2568225.2568251
   Zhang S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P312, DOI 10.1109/ICSE.2013.6606577
NR 57
TC 0
Z9 0
U1 1
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2023
VL 28
IS 5
AR 113
DI 10.1007/s10664-023-10348-1
PG 54
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA Q4YC6
UT WOS:001057582600002
DA 2024-07-18
ER

PT J
AU Yan, AY
   Zhong, H
   Song, DH
   Jia, L
AF Yan, Aoyang
   Zhong, Hao
   Song, Daohan
   Jia, Li
TI How do programmers fix bugs as workarounds? An empirical study on Apache
   projects
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Workaround; Bug fix; Empirical study
AB In software development, issue tracker systems are widely used to manage bug reports. In such a system, a bug report can be filed, diagnosed, assigned, and fixed. In the standard process, a bug can be resolved as fixed, invalid, duplicated, or won't fix. Although the above resolutions are well-defined and easy to understand, a bug report can end with a less -known resolution, i.e., a workaround. Compared with other resolutions, the definition of workarounds is more ambiguous. Besides the problem that is reported in a bug report, the resolution of a workaround raises more questions. Some questions are important for users, especially those programmers who build their projects upon others (e.g., libraries). Although some early studies have been conducted to analyze API workarounds, many research questions on workarounds are still open. For example, which bugs are resolved as workarounds? Why is a bug report resolved as a workaround? What are the repairs and impacts of workarounds? In this paper, we conduct the first empirical study to explore the above research questions. In particular, we analyzed 200 real workarounds that were collected from 81 Apache projects. Our results lead to eight findings and answers to all the above questions. For example, if bug reports are resolved as workarounds, their problems often either arise in external projects (40%) or reside in programming environments (23.5%). Although the problems of some workarounds (38.5%) reside in the project where they are reported, it is difficult to fix them fully and perfectly. Our findings are useful to understand workarounds, and to improve software projects and issue trackers.
C1 [Yan, Aoyang; Zhong, Hao; Song, Daohan; Jia, Li] Shanghai Jiao Tong Univ, Dept Comp Sci & Engn, Shanghai, Peoples R China.
C3 Shanghai Jiao Tong University
RP Zhong, H (corresponding author), Shanghai Jiao Tong Univ, Dept Comp Sci & Engn, Shanghai, Peoples R China.
EM xiaoyan9894@sjtu.edu.cn; zhonghao@sjtu.edu.cn; 251287012@qq.com;
   insanelung@sjtu.edu.cn
RI Zhong, Hao/B-2435-2015
OI Zhong, Hao/0000-0002-4302-9183
FU National Nature Science Foundation of China [62232003, 62272295]
FX AcknowledgementsWe appreciate reviewers for their insightful comments.
   This work is sponsored by the National Nature Science Foundation of
   China No. 62232003 and 62272295.
CR AGRAWAL R, 1995, PROC INT CONF DATA, P3, DOI 10.1109/ICDE.1995.380415
   Ammons G, 2002, ACM SIGPLAN NOTICES, V37, P4, DOI 10.1145/565816.503275
   [Anonymous], 2001, Proceedings of the 18th ACM Symposium on Operating Systems Principles
   [Anonymous], 2003, Modernizing Legacy Systems: Software Technologies, Engineering Processes,and Business Practices
   [Anonymous], 2006, Why programs fail-a guide to systematic debugging
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Bettenburg N., 2008, P 16 ACM SIGSOFT INT, P308
   Bettenburg N, 2008, PROC IEEE INT CONF S, P337, DOI 10.1109/ICSM.2008.4658082
   Bhattacharya P, 2013, EUR CON SFTWR MTNCE, P133, DOI 10.1109/CSMR.2013.23
   Bogart C, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P109, DOI 10.1145/2950290.2950325
   Dallmeier V., 2010, P 19 INT S SOFTWARE, P85, DOI [DOI 10.1145/1831708.1831719, 10.1145/1831708.1831719]
   Dehaghani Sayed Mehdi Hejazi, 2013, Acta Inform Med, V21, P63, DOI 10.5455/AIM.2012.21.63-66
   Endrikat S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P632, DOI 10.1145/2568225.2568299
   Erlikh L., 2000, IT Professional, V2, P17, DOI 10.1109/6294.846201
   Ernst MD, 2007, SCI COMPUT PROGRAM, V69, P35, DOI 10.1016/j.scico.2007.01.015
   Feng Zhang, 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P225, DOI 10.1109/WCRE.2012.32
   Francalanci C, 2008, INT FED INFO PROC, V275, P187
   Gabel M., 2008, SIGSOFT FSE, P339, DOI DOI 10.1145/1453101.1453150
   Guo PJ, 2011, P ACM 2011 C COMP SU, P395, DOI [10.1145/1958824.1958887., DOI 10.1145/1958824.1958887]
   Guo PJ, 2010, Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering, P495
   Han J, 2012, MOR KAUF D, P1
   Herzig K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P392, DOI 10.1109/ICSE.2013.6606585
   Hora A, 2015, PROC IEEE INT CONF S, P251, DOI 10.1109/ICSM.2015.7332471
   Jeong G, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P111, DOI 10.1145/1595696.1595715
   Jia L, 2020, IN PRESS
   Kazman R, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P179, DOI 10.1109/ICSE.2015.146
   Krippendorff K., 2011, DEP PAPERS ASC
   Lamothe M, 2021, ACM COMPUT SURV, V54, DOI 10.1145/3470133
   Lamothe M, 2020, PROC INT CONF SOFTW, P912, DOI 10.1145/3377811.3380433
   Le Goues C, 2012, IEEE T SOFTWARE ENG, V38, P54, DOI 10.1109/TSE.2011.104
   Li Z, 2006, P 1 WORKSH ARCH SYST, P25, DOI DOI 10.1145/1181309.1181314
   Li Z, 2021, PROC ASE
   Li Zhenmin, 2005, P ACM SIGSOFT SOFTW, P306, DOI DOI 10.1145/1081706.1081755
   Lin ZP, 2009, INT SYMP EMP SOFTWAR, P452
   Linares-Vasquez M., 2014, P 22 INT C PROGR COM, P83, DOI DOI 10.1145/2597008.2597155
   Linares-Vasquez Mario, 2013, P 2013 9 JOINT M FDN, P477, DOI DOI 10.1145/2491411.2491428
   Lorenzoli D, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P501, DOI 10.1145/1368088.1368157
   Monperrus M, 2012, EMPIR SOFTW ENG, V17, P703, DOI 10.1007/s10664-011-9186-4
   Nadi S, 2016, PROC INT CONF SOFTW, P935, DOI 10.1145/2884781.2884790
   Nawaz A, 2012, APCHI, P28
   Nguyen TT, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P383, DOI 10.1145/1595696.1595767
   Okur S., 2012, Proceedings of the ACM SIGSOFT 20th International Symposium on the Foundations of Software Engineering, P54
   Pandita R, 2012, PROC INT CONF SOFTW, P815, DOI 10.1109/ICSE.2012.6227137
   Potdar A, 2014, PROC IEEE INT CONF S, P91, DOI 10.1109/ICSME.2014.31
   Qiu D, 2016, INFORM SOFTWARE TECH, V73, P81, DOI 10.1016/j.infsof.2016.01.011
   Ramasubbu N, 2019, IEEE T SOFTWARE ENG, V45, P285, DOI 10.1109/TSE.2017.2774832
   Robbes R., 2012, P ACM SIGSOFT 20 INT, P1, DOI 10.1145/2393596.2393662
   Robillard MP, 2013, IEEE T SOFTWARE ENG, V39, P613, DOI 10.1109/TSE.2012.63
   Robillard MP, 2011, EMPIR SOFTW ENG, V16, P703, DOI 10.1007/s10664-010-9150-8
   Shi L, 2011, LECT NOTES COMPUT SC, V6603, P416, DOI 10.1007/978-3-642-19811-3_29
   Tan L, 2014, EMPIR SOFTW ENG, V19, P1665, DOI 10.1007/s10664-013-9258-8
   Tang YM, 2021, PROC INT CONF SOFTW, P238, DOI 10.1109/ICSE43902.2021.00033
   Thung F., 2012, Proceedings of the 2012 IEEE 23rd International Symposium on Software Reliability Engineering (ISSRE), P271, DOI 10.1109/ISSRE.2012.22
   Tom E, 2013, J SYST SOFTWARE, V86, P1498, DOI 10.1016/j.jss.2012.12.052
   Vetrò A, 2012, PROC INT CONF SOFTW, P1613, DOI 10.1109/ICSE.2012.6227226
   Xia X, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P174, DOI 10.1109/CSMR-WCRE.2014.6747167
   Yan Aoyang, 2022, P ICSE
   Yan M, 2019, IEEE T SOFTWARE ENG, V45, P1211, DOI 10.1109/TSE.2018.2831232
   Zhang HY, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1042, DOI 10.1109/ICSE.2013.6606654
   Zhang YH, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P129, DOI 10.1145/3213846.3213866
   Zhong, 2022, IN PRESS
   Zhong H, 2023, EMPIR SOFTW ENG
   Zhong H, 2022, POLYM REV, V62, P826, DOI 10.1080/15583724.2022.2033764
   Zhong H, 2019, IEEE T SOFTWARE ENG, V45, P319, DOI 10.1109/TSE.2017.2782280
   Zimmermann T, 2010, IEEE T SOFTWARE ENG, V36, P618, DOI 10.1109/TSE.2010.63
NR 65
TC 1
Z9 1
U1 0
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2023
VL 28
IS 4
AR 96
DI 10.1007/s10664-023-10318-7
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA K7NZ3
UT WOS:001018282600001
DA 2024-07-18
ER

PT J
AU Deiner, A
   Feldmeier, P
   Fraser, G
   Schweikl, S
   Wang, WR
AF Deiner, Adina
   Feldmeier, Patric
   Fraser, Gordon
   Schweikl, Sebastian
   Wang, Wengran
TI Automated test generation for Scratch programs
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Search-based testing; Block-based programming; Scratch
AB The importance of programming education has led to dedicated educational programming environments, where users visually arrange block-based programming constructs that typically control graphical, interactive game-like programs. The Scratch programming environment is particularly popular, with more than 90 million registered users at the time of this writing. While the block-based nature of Scratch helps learners by preventing syntactical mistakes, there nevertheless remains a need to provide feedback and support in order to implement desired functionality. To support individual learning and classroom settings, this feedback and support should ideally be provided in an automated fashion, which requires tests to enable dynamic program analysis. In prior work we introduced Whisker, a framework that enables automated testing of Scratch programs. However, creating these automated tests for Scratch programs is challenging. In this paper, we therefore investigate how to automatically generate Whisker tests. Generating tests for Scratch raises important challenges: First, game-like programs are typically randomised, leading to flaky tests. Second, Scratch programs usually consist of animations and interactions with long delays, inhibiting the application of classical test generation approaches. Thus, the new application domain raises the question of which test generation technique is best suited to produce high coverage tests capable of detecting faulty behaviour. We investigate these questions using an extension of the Whisker test framework for automated test generation. Evaluation on common programming exercises, a random sample of 1000 Scratch user programs, and the 1000 most popular Scratch programs demonstrates that our approach enables Whisker to reliably accelerate test executions, and even though many Scratch programs are small and easy to cover, there are many unique challenges for which advanced search-based test generation using many-objective algorithms is needed in order to achieve high coverage.
C1 [Deiner, Adina; Feldmeier, Patric; Fraser, Gordon; Schweikl, Sebastian] Univ Passau, Innstr 33, D-94032 Passau, Germany.
   [Wang, Wengran] North Carolina State Univ, 890 Oval Dr, Raleigh, NC 27606 USA.
C3 University of Passau; North Carolina State University
RP Fraser, G (corresponding author), Univ Passau, Innstr 33, D-94032 Passau, Germany.
EM Gordon.Fraser@Uni-Passau.De
FU DFG project [FR 2955/3-1]; Projekt DEAL
FX We thank Christoph Fraedrich, Sophia Geserer, and Niklas Zantner for
   their contributions to Whisker. This work is supported by DFG project FR
   2955/3-1 "TENDER-BLOCK: Testing, Debugging, and Repairing Blocks-based
   Programs".Open Access funding enabled and organized by Projekt DEAL
CR Adler F, 2021, IEEE INT WORK C SO, P120, DOI 10.1109/SCAM52516.2021.00023
   Aivaloglou E, 2016, PROCEEDINGS OF THE 2016 ACM CONFERENCE ON INTERNATIONAL COMPUTING EDUCATION RESEARCH (ICER'16), P53, DOI 10.1145/2960310.2960325
   Amalfitano D, 2015, IEEE SOFTWARE, V32, P53, DOI 10.1109/MS.2014.55
   Anjum MS, 2020, LECT NOTES COMPUT SC, V12101, P18, DOI 10.1007/978-3-030-44094-7_2
   [Anonymous], 2012, INT S SOFTWARE TESTI
   Arcuri A, 2017, LECT NOTES COMPUT SC, V10452, P3, DOI 10.1007/978-3-319-66299-2_1
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Arcuri A, 2013, SOFTW TEST VERIF REL, V23, P119, DOI 10.1002/stvr.457
   Baldoni R, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3182657
   Boe B., 2013, Proceeding of the 44th ACM technical symposium on Computer science education, P215, DOI 10.1145/2445196.2445265
   BUDD TA, 1982, ACTA INFORM, V18, P31, DOI 10.1007/BF00625279
   Campos J, 2017, LECT NOTES COMPUT SC, V10452, P33, DOI 10.1007/978-3-319-66299-2_3
   Chang Z, 2018, INT WIREL COMMUN, P950, DOI 10.1109/IWCMC.2018.8450296
   Chen YQT, 2020, IEEE INT CONF AUTOM, P237, DOI 10.1145/3324884.3416667
   Cooper S., 2000, NE C J COMPUTING SMA, P107
   Corbett A. T., 2001, CHI 2001 Conference Proceedings. Conference on Human Factors in Computing Systems, P245, DOI 10.1145/365024.365111
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Deiner Adina, 2020, Search-Based Software Engineering. 12th International Symposium, SSBSE 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12420), P58, DOI 10.1007/978-3-030-59762-7_5
   Diner D, 2021, LECT NOTES COMPUT SC, V12740, P53, DOI 10.1007/978-3-030-79379-1_4
   Edmison B., 2017, Proceedings of the Nineteenth Australasian Computing Education Conference, P48
   Edwards SH, 2017, ITICSE'17: PROCEEDINGS OF THE 2017 ACM CONFERENCE ON INNOVATION AND TECHNOLOGY IN COMPUTER SCIENCE EDUCATION, P188, DOI 10.1145/3059009.3059055
   Feldmeier P, 2022, 37 IEEE ACM INT C AU
   Fields DA, 2017, ACM T COMPUT EDUC, V17, DOI 10.1145/3123815
   Fradrich Christoph, 2020, ITiCSE '20: Proceedings of the 2020 ACM Conference on Innovation and Technology in Computer Science Education, P89, DOI 10.1145/3341525.3387389
   Franklin D, 2020, SIGCSE 2020: PROCEEDINGS OF THE 51ST ACM TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION, P794, DOI 10.1145/3328778.3366912
   Fraser G, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: JOINT TRACK ON SOFTWARE ENGINEERING EDUCATION AND TRAINING (ICSE-JSEET 2021), P183, DOI 10.1109/ICSE-SEET52601.2021.00028
   Fraser G, 2015, J SYST SOFTWARE, V103, P311, DOI 10.1016/j.jss.2014.05.032
   Fraser G, 2013, IEEE T SOFTWARE ENG, V39, P276, DOI 10.1109/TSE.2012.14
   Fraser G, 2012, IEEE T SOFTWARE ENG, V38, P278, DOI 10.1109/TSE.2011.93
   Ganov S, 2009, LECT NOTES COMPUT SC, V5885, P69, DOI 10.1007/978-3-642-10373-5_4
   Garcia D., 2015, ACM Inroads, V6, P71, DOI DOI 10.1145/2835184
   Geldreich K, 2016, ISSEP 2016, P49
   Gopinath R, 2014, PROC INT SYMP SOFTW, P189, DOI 10.1109/ISSRE.2014.40
   Gotz K., 2022, 2022 15 IEEE C SOFTW
   Greifenstein Luisa, 2021, 16 WORKSH PRIM SEC C, P1
   Gruber M, 2021, IEEE INT CONF SOFTW, P148, DOI 10.1109/ICST49551.2021.00026
   Gusukuma L, 2018, ICER'18: PROCEEDINGS OF THE 2018 ACM CONFERENCE ON INTERNATIONAL COMPUTING EDUCATION RESEARCH, P160, DOI 10.1145/3230977.3231002
   Harvey B, 2014, PROCEEDINGS OF THE 45TH ACM TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION (SIGCSE'14), P749
   Hermans F, 2016, P ICPC, P1
   Hermans F, 2016, S VIS LANG HUM CEN C, P68, DOI 10.1109/VLHCC.2016.7739666
   Inozemtseva L, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P435, DOI 10.1145/2568225.2568271
   Jahangirova G., 2016, INT S SOFTWARE TESTI, P247
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Johnson D.E., 2016, Proceedings of the 47th ACM Technical Symposium on Computing Science Education, P223
   Kalliamvakou E, 2016, EMPIR SOFTW ENG, V21, P2035, DOI 10.1007/s10664-015-9393-5
   Kolling M., 2010, ACM Transactions on Computing Education (TOCE), V10, P14, DOI DOI 10.1145/1868358.1868361
   KOREL B, 1990, IEEE T SOFTWARE ENG, V16, P870, DOI 10.1109/32.57624
   Lee Irene, 2011, ACM Inroads, V2, P32, DOI 10.1145/1929887.1929902
   Leitner Andreas, 2007, 22 IEEE ACM INT C AU, P417, DOI 10.1145/1321631.1321698
   Luo QZ, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P643, DOI 10.1145/2635868.2635920
   Mahmood R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P599, DOI 10.1145/2635868.2635896
   Maj P, 2021, 35 EUROPEAN C OBJECT
   Maloney J., 2010, ACM T COMPUT EDUC, V10, P16, DOI DOI 10.1145/1868358.1868363
   Mao K., 2016, P 25 INT S SOFTW TES, P94
   Mariani L., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P81, DOI 10.1109/ICST.2012.88
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   Meerbaum-Salant O., 2011, P 16 ANN JOINT C INN, P168, DOI DOI 10.1145/1999747.1999796
   Miller B.P., 1995, Fuzz Revisited: A Re-examination of the Reliability of Unix Utilities and Services
   Mirzaei Nariman, 2012, ACM SIGSOFT Software Engineering Notes, V37, P1, DOI DOI 10.1145/2382756.2382798
   Moreno-León J, 2015, PROCEEDINGS OF THE 10TH WORKSHOP IN PRIMARY AND SECONDARY COMPUTING EDUCATION, WIPSCE 2015, P132, DOI 10.1145/2818314.2818338
   O'Neill M, 2001, IEEE T EVOLUT COMPUT, V5, P349, DOI 10.1109/4235.942529
   Obermuller F., 2021, WiPSCE, P1
   Offutt A. J., 1996, ACM Transactions on Software Engineering and Methodology, V5, P99, DOI 10.1145/227607.227610
   Panichella A, 2018, INFORM SOFTWARE TECH, V104, P236, DOI 10.1016/j.infsof.2018.08.009
   Panichella A, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL SYMPOSIUM ON SOFTWARE AND SYSTEMS TRACEABILITY, P15, DOI 10.1109/SST.2015.10
   Papert S., 1980, MINDSTORMS CHILDREN
   Salvesen K, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST), P32, DOI 10.1109/SBST.2015.15
   Shamshiri S, 2018, SOFTW TEST VERIF REL, V28, DOI 10.1002/stvr.1660
   Shamshiri S, 2015, IEEE INT CONF AUTOM, P201, DOI 10.1109/ASE.2015.86
   Shute VJ, 2008, REV EDUC RES, V78, P153, DOI 10.3102/0034654307313795
   Sirkia T, 2012, Proceedings of the 12th Koli Calling International Conference on Computing Education Research, P19
   Stahlbauer A, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P165, DOI 10.1145/3338906.3338910
   Su T, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P245, DOI 10.1145/3106237.3106298
   Techapalokul P, 2017, S VIS LANG HUM CEN C, P337, DOI 10.1109/VLHCC.2017.8103498
   Techapalokul P, 2017, S VIS LANG HUM CEN C, P43, DOI 10.1109/VLHCC.2017.8103449
   Vogl S, 2021, PROCEEDINGS OF THE 2021 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE (GECCO'21), P1088, DOI 10.1145/3449639.3459339
   Wang W, 2021, EX TRAC BAS FEAT ENG
   Wegener J, 2001, INFORM SOFTWARE TECH, V43, P841, DOI 10.1016/S0950-5849(01)00190-2
   Weintrop D, 2017, ACM T COMPUT EDUC, V18, DOI 10.1145/3089799
   Wengran Wang, 2021, ITiCSE '21: Proceedings of the 26th ACM Conference on Innovation and Technology in Computer Science Education, P227, DOI 10.1145/3430665.3456367
   Xie T, 2006, LECT NOTES COMPUT SC, V4067, P380
NR 81
TC 0
Z9 0
U1 6
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAY
PY 2023
VL 28
IS 3
AR 79
DI 10.1007/s10664-022-10255-x
PG 63
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA G0VL1
UT WOS:000986436400001
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Díaz, O
   Contell, JP
AF Diaz, Oscar
   Contell, Jeremias P.
TI Developing research questions in conversation with the literature:
   operationalization & tool support
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Research question; Literature review; Inductive Top-Down Theorizing;
   Reference management systems
ID SOFTWARE; TECHNOLOGY; ACCEPTANCE; DESIGN; USER
AB Empirical Software Engineering rests on the understanding of practical problems and their solution counterparts. Frequently, solutions are not absolute but relative to the context where the problem is observed. This tends to imply that the solution and the problem unveil gradually together, and hence, researchers are not always in the position to state the research question (RQ) at the onset. Like software engineers when facing blurred requirements, researchers might not be familiar enough with the problem in the early phases of a research to properly scope their RQs (hereafter referred to as RQ Scoping). Here, the literature may play the role of the stakeholders in Agile methods: keeping the focus on the aspects that are essential (vs. accidental) of the RQ. Informed by Inductive Top-Down Theorizing, this article acknowledges RQ Scoping as iterative and incremental, entailing a conversation between the experimental work and literature reviewing. Yet, for literature reviewing to become "Agile" it is not only required to be driven by the RQ but also to have tool support. Tools might bring transparency and traceability, both factors especially welcome in a scenario characterized by testing (is my RQ relevant?) and adjustment (how can I make my RQ relevant?). Specifically, the advent of the RQ in close relationship with the literature advises for "Agile" literature reviewing to be conducted at the place where the literature is naturally kept: the Reference Management System (e.g., Mendeley). This article introduces the theoretical underpinnings, design principles, proof of concept and evaluation for FRAMEndeley, a Mendeley-integrated utility for RQ Scoping.
C1 [Diaz, Oscar; Contell, Jeremias P.] Univ Basque Country, ONEKIN Res Grp, UPV EHU, San Sebastian, Spain.
C3 University of Basque Country
RP Díaz, O (corresponding author), Univ Basque Country, ONEKIN Res Grp, UPV EHU, San Sebastian, Spain.
EM oscar.diaz@ehu.eus; jeremias.perez@ehu.eus
RI ; Diaz, Oscar/D-2822-2011
OI PEREZ CONTELL, JEREMIAS/0000-0002-2041-6674; Diaz,
   Oscar/0000-0003-1334-4761
FU MCIU/AEI/FEDER,UE [RTI2018-099818-B-I00]; program "Grupos de
   Investigacion del Sistema Univesitario Vasco 2019-2021" [IT1235-19];
   CRUE-CSIC; Springer Nature
FX Open Access funding provided thanks to the CRUE-CSIC agreement with
   Springer Nature. This work is co-supported by MCIU/AEI/FEDER,UE under
   contract RTI2018-099818-B-I00. ONEKIN enjoys support from the program
   "Grupos de Investigacion del Sistema Univesitario Vasco 2019-2021" under
   contract IT1235-19.
CR Al-Zubidy A, 2019, EMPIR SOFTW ENG, V24, P139, DOI 10.1007/s10664-018-9626-5
   Alvesson M., 2013, CONSTRUCTING RES QUE, DOI [10.4135/9781446270035, DOI 10.4135/9781446270035]
   Anderson R.C., 1984, SCH ACQUISITION KNOW
   [Anonymous], 2012, Proceedings of the 2nd International Workshop on Evidential Assessment of software technologies
   [Anonymous], 2015, P 19 INT C EV ASS SO, DOI DOI 10.1145/2745802.2745825
   Bandara W., 2006, 3 ANN QUALIT C BRISB, P6
   BASILI VR, 1986, IEEE T SOFTWARE ENG, V12, P733, DOI 10.1109/TSE.1986.6312975
   Baxter G, 2011, INTERACT COMPUT, V23, P4, DOI 10.1016/j.intcom.2010.07.003
   Beelmann A, 2006, EUR PSYCHOL, V11, P244, DOI 10.1027/1016-9040.11.3.244
   Benmerikhi M, 2015, XXIVE C INT MANAGEME
   Bitzer P., 2014, P EUR C INF SYST ECI
   Bloor M., 2002, FOCUS GROUPS SOCIAL
   Boell SK, 2014, COMMUN ASSOC INF SYS, V34, P257
   Bonasio A, 2013, MENDELEY HAS 2 5 MIL
   Bosetti G, 2022, COMPUT STAND INTER, V82, DOI 10.1016/j.csi.2022.103633
   Boyatzis R., 1998, Transferring qualitative information", V1st
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   Charmaz K., 2014, Introducing Qualitative Methods
   Chauhan S, 2016, INT J MANAG EDUC-OXF, V14, P248, DOI 10.1016/j.ijme.2016.05.005
   Cooper D.R., 2014, BUSINESS RES METHODS
   Corbin J., 2015, BASICS QUALITATIVE R
   DeSantis L, 2000, WESTERN J NURS RES, V22, P351, DOI 10.1177/019394590002200308
   Díaz O, 2017, LECT NOTES COMPUT SC, V10243, P231, DOI 10.1007/978-3-319-59144-5_14
   Díaz O, 2015, ACM T WEB, V9, DOI 10.1145/2735633
   DiMaggio P, 1997, ANNU REV SOCIOL, V23, P263, DOI 10.1146/annurev.soc.23.1.263
   Dybå T, 2012, INT SYMP EMP SOFTWAR, P19, DOI 10.1145/2372251.2372256
   EISENHARDT KM, 1989, ACAD MANAGE REV, V14, P532, DOI 10.2307/258557
   Ellemers N, 2021, BRIT J SOC PSYCHOL, V60, P1, DOI 10.1111/bjso.12430
   Evers JC, 2018, QUAL REP, V23, P61
   Fabbri S, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2916013
   Felizardo K. R., 2020, Contemporary empirical methods in software engineering, P327
   Felizardo KR, 2017, 2017 43RD EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P202, DOI 10.1109/SEAA.2017.17
   Fernández-Sáez AM, 2010, ICSOFT 2010: PROCEEDINGS OF THE FIFTH INTERNATIONAL CONFERENCE ON SOFTWARE AND DATA TECHNOLOGIES, VOL 2, P157
   Fink A., 2019, Conducting research literature reviews: From the internet to paper
   Fitzgibbons M, 2010, J ACAD LIBR, V36, P144, DOI 10.1016/j.acalib.2010.01.005
   FORNELL C, 1981, J MARKETING RES, V18, P39, DOI 10.2307/3151312
   Fowler M., 2001, Software Development, V9, P28
   Glaser B., 2017, Discovery of Grounded Theory: Strategies for Qualitative Research, DOI DOI 10.4324/9780203793206
   Granieri N, 2019, FANTASTIC REFERENCE
   Gregor S, 2007, J ASSOC INF SYST, V8, P312, DOI 10.17705/1jais.00129
   Gupta S, 2013, INFORM SYST RES, V24, P454, DOI 10.1287/isre.1120.0433
   Hair JF, 2010, Multivariate data analysis
   Hassan N R, 2017, P 23 AMERICAS C INFO
   Thuan NH, 2019, COMMUN ASSOC INF SYS, V44, P332, DOI 10.17705/1CAIS.04420
   Hoda R, 2022, IEEE T SOFTWARE ENG, V48, P3808, DOI 10.1109/TSE.2021.3106280
   Iivari J., 2007, Scandinavian Journal of Information Systems, V19, P39
   Kitchenham B., 2007, GUIDELINES PERFORMIN
   Kitchenham B.A., 2015, EVIDENCE BASED SOFTW, V4
   Kitchenham BA, 2011, INFORM SOFTWARE TECH, V53, P638, DOI 10.1016/j.infsof.2010.12.011
   Klopper R., 2007, Alternation, V14, P262
   Kontio J., 2008, Guide to Advanced Empirical Software Engineering, P93, DOI [DOI 10.1007/978-1-84800-044-5_4, 10.1007/978-1-84800-044-54, DOI 10.1007/978-1-84800-044-54]
   Kuhrmann M, 2017, EMPIR SOFTW ENG, V22, P2852, DOI 10.1007/s10664-016-9492-y
   Kwan BSC, 2008, ENGL SPECIF PURP, V27, P42, DOI 10.1016/j.esp.2007.05.002
   Madera M., 2012, Apertura, V8, P96
   Marijan D, 2021, INFORM SOFTWARE TECH, V132, DOI 10.1016/j.infsof.2020.106473
   Marzano R.J., 2001, CLASSROOM INSTRUCTIO
   MAXWELL JA, 1992, HARVARD EDUC REV, V62, P279, DOI 10.17763/haer.62.3.8323320856251826
   Mussweiler T, 2012, COGNITION, V122, P236, DOI 10.1016/j.cognition.2011.10.005
   Nielsen PA, 2016, COMMUN ASSOC INF SYS, V38, P720, DOI 10.17705/1CAIS.03835
   Ortlipp M, 2008, QUAL REP, V13, P695
   Parker A, 2006, INT J RES METHOD EDU, V29, P23, DOI 10.1080/01406720500537304
   Rai A, 2017, MIS QUART, V41, pIII
   Recker J., 2013, Scientific Research in Information Systems, DOI DOI 10.1007/978-3-642-30048-6
   Ridder HG, 2014, BRIT J MANAGE, V25, P373, DOI 10.1111/1467-8551.12000
   Ruben A, 2016, READ SCI PAPER, DOI [10.1126/science.caredit.a1600012, DOI 10.1126/SCIENCE.CAREDIT.A1600012]
   Russo D, 2021, ACM COMPUT SURV, V54, DOI 10.1145/3447580
   Shepherd DA, 2011, ACAD MANAGE REV, V36, P361, DOI 10.5465/AMR.2011.59330952
   Stol KJ, 2016, PROC INT CONF SOFTW, P120, DOI 10.1145/2884781.2884833
   Studycom, 2013, WRIT RES QUEST PURP
   Timonen V, 2018, INT J QUAL METH, V17, DOI 10.1177/1609406918758086
   Venable J, 2016, EUR J INFORM SYST, V25, P77, DOI 10.1057/ejis.2014.36
   Venkatesh V, 2003, MIS QUART, V27, P425, DOI 10.2307/30036540
   Wagner G., 2020, P 28 EUR C INF SYST, P44
   Walton Douglas, 2014, Abductive reasoning
   Webster J, 2002, MIS QUART, V26, pXIII
   Wieringa Roelf J., 2014, Design science methodology for information systems and software engineering, DOI DOI 10.1007/978-3-662-43839-8
   Wohlin C., 2012, Experimentation in Software Engineering
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Wolfswinkel JF, 2013, EUR J INFORM SYST, V22, P45, DOI 10.1057/ejis.2011.51
   Zaugg H, 2011, TECHTRENDS, V55, P32
NR 80
TC 0
Z9 0
U1 0
U2 10
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2022
VL 27
IS 7
AR 174
DI 10.1007/s10664-022-10204-8
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4V4SY
UT WOS:000859469500017
PM 36159891
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Flint, SW
   Chauhan, J
   Dyer, R
AF Flint, Samuel W.
   Chauhan, Jigyasa
   Dyer, Robert
TI Pitfalls and guidelines for using time-based Git data
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Literature review; Time data; Mining software repositories
AB Many software engineering research papers rely on time-based data (e.g., commit timestamps, issue report creation/update/close dates, release dates). Like most real-world data however, time-based data is often dirty. To date, there are no studies that quantify how frequently such data is used by the software engineering research community, or investigate sources of and quantify how often such data is dirty. Depending on the research task and method used, including such dirty data could affect the research results. This paper presents an extended survey of papers that utilize time-based data, published in the Mining Software Repositories (MSR) conference series. Out of the 754 technical track and data papers published in MSR 2004-2021, we saw at least 290 (38%) papers utilized time-based data. We also observed that most time-based data used in research papers comes in the form of Git commits, often from GitHub. Based on those results, we then used the Boa and Software Heritage infrastructures to help identify and quantify several sources of dirty Git timestamp data. Finally we provide guidelines/best practices for researchers utilizing time-based data from Git repositories.
C1 [Flint, Samuel W.; Chauhan, Jigyasa; Dyer, Robert] Univ Nebraska, Lincoln, NE 68588 USA.
C3 University of Nebraska System; University of Nebraska Lincoln
RP Flint, SW (corresponding author), Univ Nebraska, Lincoln, NE 68588 USA.
EM swflint@huskers.unl.edu; jchauhan2@huskers.unl.edu; rdyer@unl.edu
RI Dyer, Robert/ABA-1964-2020
OI Dyer, Robert/0000-0001-9571-5567; Flint, Samuel/0000-0002-8023-9710
CR Ahasanuzzaman M, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P402, DOI 10.1145/2901739.2901770
   Antoniol G., 2005, P 2005 INT WORKSH MI, P1, DOI DOI 10.1145/1083142.1083156
   Baysal O., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P98, DOI 10.1109/MSR.2012.6224305
   Bird C, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P1, DOI 10.1109/MSR.2009.5069475
   Cito J, 2017, IEEE WORK CONF MIN S, P323, DOI 10.1109/MSR.2017.67
   Claes M, 2020, IEEE WORK CONF MIN S, P503, DOI 10.1145/3379597.3387487
   Cosentino V, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P137, DOI [10.1109/MSR.2016.023, 10.1145/2901739.2901776]
   D'Ambros Marco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P31, DOI 10.1109/MSR.2010.5463279
   Demeyer S, 2013, IEEE WORK CONF MIN S, P353, DOI 10.1109/MSR.2013.6624049
   Di Cosmo Roberto, 2017, P 14 INT C DIGITAL P
   Durieux T, 2020, IEEE WORK CONF MIN S, P254, DOI 10.1145/3379597.3387460
   Dyer R, 2021, BOA MINING ULTRALARG
   Dyer R, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P422, DOI 10.1109/ICSE.2013.6606588
   Flint SW, 2021, IEEE WORK CONF MIN S, P85, DOI 10.1109/MSR52588.2021.00022
   Flint SW, 2021, REPLICATION PACKAGE, DOI [10.5281/zenodo.5558291, DOI 10.5281/ZENODO.5558291]
   Gasser L, 2004, P 1 INT WORKSH MIN S
   Ghezzi G, 2013, IEEE WORK CONF MIN S, P363, DOI 10.1109/MSR.2013.6624050
   Goeminne M, 2013, IEEE WORK CONF MIN S, P225, DOI 10.1109/MSR.2013.6624032
   Gonzalez-Barahona JM, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P478, DOI 10.1109/MSR.2015.68
   Hayashi Junichi, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P502, DOI 10.1109/MSR.2019.00076
   Hemmati H, 2013, IEEE WORK CONF MIN S, P343, DOI 10.1109/MSR.2013.6624048
   Jiaxin Zhu, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P409, DOI 10.1109/MSR.2019.00068
   Kagdi H., 2006, P 2006 INT WORKSH MI, P47, DOI [DOI 10.1145/1137983.1137996, 10.1145/1137983.1137996]
   Kalliamvakou E., 2014, P 11 WORKING C MININ, P92, DOI DOI 10.1145/2597073.2597074
   Kalliamvakou E, 2016, EMPIR SOFTW ENG, V21, P2035, DOI 10.1007/s10664-015-9393-5
   Karampatsis RM, 2020, IEEE WORK CONF MIN S, P573, DOI 10.1145/3379597.3387491
   Kikas R, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P291, DOI [10.1109/MSR.2016.038, 10.1145/2901739.2901751]
   Kotti Zoe, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P565, DOI 10.1109/MSR.2019.00085
   Liu YL, 2020, IEEE WORK CONF MIN S, P443, DOI 10.1145/3379597.3387440
   Peipei Wang, 2020, MSR '20: Proceedings of the 17th International Conference on Mining Software Repositories, P103, DOI 10.1145/3379597.3387464
   Pietri A, 2020, IEEE WORK CONF MIN S, P277, DOI 10.1145/3379597.3387450
   Pimentel Joao Felipe, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P507, DOI 10.1109/MSR.2019.00077
   Robles Gregorio, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P171, DOI 10.1109/MSR.2010.5463348
   Robles Gregorio., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, P222
   Software Heritage developers, 2020, SOFTW HER ARCH
   Steff M., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P213, DOI 10.1109/MSR.2012.6224283
   Walker RJ, 2006, P 2006 INT WORKSHOP, P98, DOI [10.1145/1137983.1138008, DOI 10.1145/1137983.1138008]
   Whitehead, 2011, P 8 WORK C MIN SOFTW, P219, DOI [10.1145/1985441.1985475, DOI 10.1145/1985441.1985475]
   Xu YL, 2018, IEEE WORK CONF MIN S, P54, DOI 10.1145/3196398.3196475
   Zimmermann T., 2004, Proc. of the 1st Int'lWorkshop onMining Software Repositories (MSR), P2, DOI [DOI 10.1049/IC:20040466, 10.1049/ic:20040466]
NR 40
TC 0
Z9 0
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2022
VL 27
IS 7
AR 194
DI 10.1007/s10664-022-10200-y
PG 55
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 5D0KB
UT WOS:000864638900002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Liang, HL
   Hang, DJ
   Li, XY
AF Liang, Hongliang
   Hang, Dengji
   Li, Xiangyu
TI Modeling function-level interactions for file-level bug localization
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Bug localization; Language model; Learning-to-rank; Fine-tuning
ID LARGE-SCALE; RANKING; RETRIEVAL; HYBRID
AB Automatic bug localization, i.e., automatically locating potential buggy source files given a bug report, plays an essential role in software engineering. For instance, bug localization helps developers fix bugs quickly. Although information retrieval-based bug localization methods are simple and easy to understand, it is difficult for them to bridge the lexical gap between bug reports and programs and capture the rich structural information in programs. Deep learning-based bug localization (DLBL) methods can utilize the structural information of the program, but they cannot handle long code sequences well. For example, CNN fails to capture remote code interaction features, while RNN (like LSTM, GRU) is vulnerable to gradient disappearance or burst when facing long code sequences. Additionally, DLBL methods fail to model metadata features such as bug-fixing recency and frequency. In this paper, we research how to locate buggy files by learning function-level features. Specifically, we propose a new framework called FLIM that can extract semantic features of a program at the function level and then calculates the relevance between natural and programming language by aggregating function-level interactions. We leverage a fine-tuned language model to treat the bug localization task as a code retrieval task, and use a learning-to-rank model to fuse the function-level semantic features with IR features to calculate the final relevance. We evaluate FLIM by conducting extensive experiments on widely-used six software projects. Experimental results demonstrate that FLIM outperforms six state-of-the-art methods of bug localization.
C1 [Liang, Hongliang; Hang, Dengji; Li, Xiangyu] Beijing Univ Posts & Commun, TSIS Lab, Beijing, Peoples R China.
RP Liang, HL (corresponding author), Beijing Univ Posts & Commun, TSIS Lab, Beijing, Peoples R China.
EM hliang@bupt.edu.cn; hangdengji@bupt.edu.cn; pyterware@bupt.edu.cn
RI Li, Xiangyu/GXG-4002-2022
CR Abozeed S M, 2020, 2019 INT C ADV EM CO, P1
   Abreu R, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P89, DOI 10.1109/TAIC.PART.2007.13
   Abreu R, 2006, 12TH PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P39
   Akbar SA, 2020, IEEE WORK CONF MIN S, P21, DOI 10.1145/3379597.3387474
   Almhana R, 2021, INFORM SOFTWARE TECH, V131, DOI 10.1016/j.infsof.2020.106474
   Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   Lam AN, 2017, INT C PROGRAM COMPRE, P218, DOI 10.1109/ICPC.2017.24
   [Anonymous], 2018, DEEP CONTEXTUALIZED, DOI DOI 10.18653/V1/N18-1202
   Arong, 2014, PROCEEDINGS OF 2014 IEEE INTERNATIONAL CONFERENCE ON PROGRESS IN INFORMATICS AND COMPUTING (PIC), P51, DOI 10.1109/PIC.2014.6972294
   Bahdanau D, 2016, Arxiv, DOI [arXiv:1409.0473, 10.48550/arXiv.1409.0473]
   Budd T. A., 1980, THESIS NEW HAVEN USA
   Chen AR, 2021, IEEE T SOFTW ENG, P1
   Chen Sanyuan, 2020, ARXIV200412651
   Clark K, 2020, INFORM SYST RES, DOI 10.48550/arXiv.2003.10555
   Cossock D, 2006, LECT NOTES ARTIF INT, V4005, P605, DOI 10.1007/11776420_44
   Devlin J., 2018, BERT PRE TRAINING DE
   Fejzer MM, 2021, IEEE T SOFTW ENG, P1
   Feng ZY, 2020, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, EMNLP 2020, P1536
   Gay G, 2009, PROC IEEE INT CONF S, P351, DOI 10.1109/ICSM.2009.5306315
   Guyon I., 1997, AT &T Bell Laboratories
   Huo X., 2016, IJCAI, P1606
   Huo X, 2020, AAAI CONF ARTIF INTE, V34, P4223
   Huo X, 2021, IEEE T SOFTWARE ENG, V47, P1368, DOI 10.1109/TSE.2019.2920771
   Huo X, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1909
   Husain H, 2020, Arxiv, DOI arXiv:1909.09436
   Kim M, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09946-8
   Kim Yoon, 2017, arXiv preprint, arXiv170200887, P2
   Le TDB, 2017, EMPIR SOFTW ENG, V22, P2237, DOI 10.1007/s10664-016-9484-y
   Li W, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10082-6
   Li X, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P169, DOI 10.1145/3293882.3330574
   Liblit B, 2005, ACM SIGPLAN NOTICES, V40, P15, DOI 10.1145/1064978.1065014
   Liu YH, 2019, Arxiv, DOI arXiv:1907.11692
   Lukins SK, 2008, WORK CONF REVERSE EN, P155, DOI 10.1109/WCRE.2008.33
   Moon S, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P153, DOI 10.1109/ICST.2014.28
   Musco V, 2017, SOFTWARE QUAL J, V25, P921, DOI 10.1007/s11219-016-9332-8
   Owen AB, 2007, CONTEMP MATH, V443, P59
   Peters ME, 2019, 4TH WORKSHOP ON REPRESENTATION LEARNING FOR NLP (REPL4NLP-2019), P7
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI [10.1109/TSE.2007.1016, 10.1109/TSE.2007.1016.]
   Qi BH, 2022, IEEE T RELIAB, V71, P235, DOI 10.1109/TR.2021.3104728
   Radford Alec, 2018, IMPROVING LANGUAGE U, DOI DOI 10.18653/V1/N18-1202
   Raffel C, 2020, J MACH LEARN RES, V21
   Razzaq A, 2021, IEEE INT WORK C SO, P81, DOI 10.1109/SCAM52516.2021.00019
   Saha RK, 2013, IEEE INT CONF AUTOM, P345, DOI 10.1109/ASE.2013.6693093
   Shi ZD, 2018, APPL SOFT COMPUT, V62, P636, DOI 10.1016/j.asoc.2017.10.048
   Smola AJ, 2004, STAT COMPUT, V14, P199, DOI 10.1023/B:STCO.0000035301.49549.88
   Sun C, 2019, IEEE I CONF COMP VIS, P7463, DOI 10.1109/ICCV.2019.00756
   Thakkar G, 2020, FRONT ARTIF INTEL AP, V328, P55, DOI 10.3233/FAIA200602
   Vaswani A, 2017, ADV NEUR IN, V30
   Yang ZL, 2019, ADV NEUR IN, V32
   Ye X, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P689, DOI 10.1145/2635868.2635874
   Ye X, 2016, IEEE T SOFTWARE ENG, V42, P379, DOI 10.1109/TSE.2015.2479232
   Youm KC, 2017, INFORM SOFTWARE TECH, V82, P177, DOI 10.1016/j.infsof.2016.11.002
   Zhang Liu-ze, 2010, Instrument Techniques and Sensor, P1
   Zhang T., 2004, PROC ICML, DOI 10.1145/1015330.-1015332
   Zhang W, 2019, INFORM SOFTWARE TECH, V110, P121, DOI 10.1016/j.infsof.2019.03.001
   Zhang XY, 2019, IEEE PAC RIM INT SYM, P148, DOI 10.1109/PRDC47002.2019.00045
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
   Zhu ZY, 2020, PROCEEDINGS OF THE TWENTY-NINTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P3565
   Zou H, 2005, J R STAT SOC B, V67, P301, DOI 10.1111/j.1467-9868.2005.00503.x
NR 59
TC 1
Z9 1
U1 0
U2 8
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2022
VL 27
IS 7
AR 186
DI 10.1007/s10664-022-10237-z
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 5A0CE
UT WOS:000862564000001
DA 2024-07-18
ER

PT J
AU Lamine, Y
   Cheng, JH
AF Lamine, Yassine
   Cheng, Jinghui
TI Understanding and supporting the design systems practice
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Design system; Design tools; Front-end development; Practitioners'
   perspectives
ID MOTIVATION; FRAMEWORK; WORKING
AB Design systems represent a user interaction design and development approach that is currently of avid interest in the industry. However, little research work has been done to synthesize knowledge related to design systems in order to inform the design of tools to support their creation, maintenance, and usage practices. This paper represents an important step in which we explored the issues that design system projects usually deal with and the perceptions and values of design system project leaders. Through this exploration, we aim to investigate the needs for tools that support the design system approach. We found that the open source communities around design systems focused on discussing issues related to behaviors of user interface components of design systems. At the same time, leaders of design system projects faced considerable challenges when evolving their design systems to make them both capable of capturing stable design knowledge and flexible to the needs of the various concrete products. They valued a bottom-up approach for design system creation and maintenance, in which components are elevated and merged from the evolving products. Our findings synthesize the knowledge and lay foundations for designing techniques and tools aimed at supporting the design system practice and related modern user interaction design and development approaches.
C1 [Lamine, Yassine; Cheng, Jinghui] Polytech Montreal, HCDLab, Montreal, PQ, Canada.
C3 Universite de Montreal; Polytechnique Montreal
RP Lamine, Y; Cheng, JH (corresponding author), Polytech Montreal, HCDLab, Montreal, PQ, Canada.
EM yassine.lamine@polymtl.ca; jinghui.cheng@polymtl.ca
FU Discovery Grant of the Natural Sciences and Engineering Research Council
   of Canada [RGPIN-2018-04470]
FX This work was partially supported by the Discovery Grant of the Natural
   Sciences and Engineering Research Council of Canada [RGPIN-2018-04470].
CR Alexander C., 1977, PATTERN LANGUAGE TOW
   [Anonymous], 2004, Patterns in game design (game development series)
   [Anonymous], 2002, P INT WORKSH PRINC S
   Arya D, 2019, PROC INT CONF SOFTW, P454, DOI 10.1109/ICSE.2019.00058
   Bertram D, 2010, 2010 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, P291
   Bissyandé TF, 2013, PROC INT SYMP SOFTW, P188, DOI 10.1109/ISSRE.2013.6698918
   BROWN JM, 2012, P 7 NORD C HUM COMP, P693, DOI [DOI 10.1145/2399016, 10.1145/2399016.2399121, DOI 10.1145/2399016.2399121]
   Casalnuovo C, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P817, DOI 10.1145/2786805.2786854
   Chamberlain S, 2006, LECT NOTES COMPUT SC, V4044, P143
   Cheng C, 2017, J COMPUT SCI TECH-CH, V32, P396, DOI 10.1007/s11390-017-1728-9
   Cheng JH, 2019, 2019 IEEE/ACM 12TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE 2019), P11, DOI 10.1109/CHASE.2019.00011
   Cheng JH, 2018, CHI 2018: EXTENDED ABSTRACTS OF THE 2018 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, DOI 10.1145/3170427.3188467
   Cheng JH, 2017, CHI PLAY'17: PROCEEDINGS OF THE ANNUAL SYMPOSIUM ON COMPUTER-HUMAN INTERACTION IN PLAY, P291, DOI 10.1145/3116595.3116600
   Chung Eric S, 2004, P 5 C DES INT SYST P, P233, DOI [10.1145/1013115.1013148, DOI 10.1145/1013115.1013148]
   Churchill EF., 2019, INTERACTIONS, V26, P22, DOI [10.1145/3352681, DOI 10.1145/3352681]
   Cross N, 2001, DES ISSUES, V17, P49, DOI 10.1162/074793601750357196
   Crowston K, 2012, ACM COMPUT SURV, V44, DOI 10.1145/2089125.2089127
   Dearden A., 2002, PDC 2002. Proceedings of the Participatory Design Conference, P104
   DUYNE DKV, 2002, DESIGN SITES PATTERN
   Elo S, 2008, J ADV NURS, V62, P107, DOI 10.1111/j.1365-2648.2007.04569.x
   Erickson T., 2000, DIS2000. Designing Interactive Systems Processes, Practices, Methods, and Techniques. Conference Proceedings, P357, DOI 10.1145/347642.347794
   Fanguy W., 2019, COMPREHENSIVE GUIDE
   Faulkner Sandra L, 2017, The International Encyclopedia of Communication Research Methods Internet, P1, DOI [DOI 10.1002/9781118901731.IECRM0060, 10.1002/9781118901731.iecrm0060]
   Ferreira J, 2007, AGILE 2007, PROCEEDINGS, P50, DOI 10.1109/AGILE.2007.8
   Fessenden Therese, 2021, Design Systems 101
   Gharehyazie M, 2015, EMPIR SOFTW ENG, V20, P1318, DOI 10.1007/s10664-014-9332-x
   GOULD JD, 1985, COMMUN ACM, V28, P300, DOI 10.1145/3166.3170
   Gray CM, 2016, 34TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, CHI 2016, P4044, DOI 10.1145/2858036.2858410
   Gutzwiller RS, 2018, ADV INTELL SYST, V591, P12, DOI 10.1007/978-3-319-60591-3_2
   Hacq A, 2018, EVERYTHING YOU NEED
   Hamilton N., 1982, The limits of state autonomy: Post-revolutionary Mexico
   Handal S, 2022, INFORM TECHNOLOGY SY, P42
   Hars A, 2002, INT J ELECTRON COMM, V6, P25
   Heck P, 2017, REQUIR ENG, V22, P453, DOI 10.1007/s00766-016-0247-5
   Hertel G, 2003, RES POLICY, V32, P1159, DOI 10.1016/S0048-7333(03)00047-7
   Huang Q, 2017, PROC INT SYMP SOFTW, P124, DOI 10.1109/ISSRE.2017.24
   Iivari N, 2011, BEHAV INFORM TECHNOL, V30, P309, DOI 10.1080/0144929X.2010.503351
   Joblin M, 2017, EMPIR SOFTW ENG, V22, P2050, DOI 10.1007/s10664-016-9478-9
   Kholmatova A., 2017, Design Systems A practical guide to creating design languages for digital products
   Leiva G, 2019, ACM T COMPUT-HUM INT, V26, DOI 10.1145/3310276
   Lunström M, 2015, BRITISH HCI 2015, P239, DOI 10.1145/2783446.2783563
   Ma K, 2019, ADV INTELL SYST COMP, V903, P613, DOI 10.1007/978-3-030-11051-2_93
   McHugh ML, 2012, BIOCHEM MEDICA, V22, P276, DOI 10.11613/bm.2012.031
   Merten T, 2016, INT REQUIR ENG CONF, P166, DOI 10.1109/RE.2016.8
   Moorthy R., 2020, P 2 C CONVERSATIONAL, P1, DOI [DOI 10.1145/3405755.3406150, 10.1145/3405755.3406150]
   Morville Peter., 2010, SEARCH PATTERNS
   Mounter D, 2019, DESIGN SYSTEMS HDB
   Neil T., 2014, Mobile design pattern gallery: UI patterns for smartphone apps
   Saldana J., 2015, CODING MANUAL QUALIT
   Saxena R, 2019, BEGINNERS GUIDE CSS
   Schon D., 1984, The Reflective Practitioner: How Professionals Think in Action
   Schrape JF, 2019, CONVERGENCE-US, V25, P409, DOI 10.1177/1354856517735795
   Scott B., 2009, Designing web interfaces: principles and patterns for rich interactions
   Stolterman E., 2012, Proceedings of the Designing Interactive Systems Conference, P25, DOI [10.1145/2317956.2317961, DOI 10.1145/2317956.2317961]
   Tidwell Jenifer, 2011, Designing Interfaces: Patterns for Effective Interaction Design, V2nd
   Vaismoradi M, 2013, NURS HEALTH SCI, V15, P398, DOI 10.1111/nhs.12048
   Vendramini S, 2021, PROCEEDINGS OF THE 20TH BRAZILIAN SYMPOSIUM ON SOFTWARE QUALITY, SBOS 2021, DOI 10.1145/3493244.3493260
   Wang WT, 2020, PROCEEDINGS OF THE 2020 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'20), DOI 10.1145/3313831.3376218
   Wang WT, 2022, IEEE SOFTWARE, V39, P76, DOI 10.1109/MS.2020.3009514
   Xia X, 2017, IEEE T SOFTWARE ENG, V43, P272, DOI 10.1109/TSE.2016.2576454
   Ye YW, 2003, PROC INT CONF SOFTW, P419
   Yew J., 2019, State of Design Systems 2019
   Yew J, 2020, CHI'20: EXTENDED ABSTRACTS OF THE 2020 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, DOI 10.1145/3334480.3375204
   Zhang X., 2014, P 2014 C DES INT SYS, P895, DOI [DOI 10.1145/2598510.2598556, https://doi.org/10.1145/2598510.2598556]
NR 64
TC 0
Z9 0
U1 5
U2 17
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2022
VL 27
IS 6
AR 146
DI 10.1007/s10664-022-10181-y
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 3O4IB
UT WOS:000836798500006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Russo, D
   Masegosa, AR
   Stol, KJ
AF Russo, Daniel
   Masegosa, Andres R.
   Stol, Klaas-Jan
TI From anecdote to evidence: the relationship between personality and need
   for cognition of developers
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Behavioral software engineering; Personality traits; Need for cognition;
   Bayesian statistics
ID BRIGGS TYPE INDICATOR; INDIVIDUAL-DIFFERENCES; 5-FACTOR MODEL; MORAL
   INTENSITY; DARK TRIAD; TRAITS; STABILITY; LIFE; MACHIAVELLIANISM;
   INTELLIGENCE
AB There is considerable anecdotal evidence suggesting that software engineers enjoy engaging in solving puzzles and other cognitive efforts. A tendency to engage in and enjoy effortful thinking is referred to as a person's 'need for cognition.' In this article we study the relationship between software engineers' personality traits and their need for cognition. Through a large-scale sample study of 483 respondents we collected data to capture the six 'bright' personality traits of the HEXACO model of personality, and three 'dark' personality traits. Data were analyzed using several methods including a multiple Bayesian linear regression analysis. The results indicate that ca. 33% of variation in developers' need for cognition can be explained by personality traits. The Bayesian analysis suggests four traits to be of particular interest in predicting need for cognition: openness to experience, conscientiousness, honesty-humility, and emotionality. Further, we also find that need for cognition of software engineers is, on average, higher than in the general population, based on a comparison with prior studies. Given the importance of human factors for software engineers' performance in general, and problem solving skills in particular, our findings suggest several implications for recruitment, working behavior, and teaming.
C1 [Russo, Daniel; Masegosa, Andres R.] Aalborg Univ, Dept Comp Sci, Copenhagen, Denmark.
   [Stol, Klaas-Jan] Univ Coll Cork, Lero Sci Fdn Ireland, Res Ctr Software, Cork, Ireland.
   [Stol, Klaas-Jan] Univ Coll Cork, Sch Comp Sci, Informat Technol, Cork, Ireland.
C3 Aalborg University; University College Cork; University College Cork
RP Russo, D (corresponding author), Aalborg Univ, Dept Comp Sci, Copenhagen, Denmark.
EM daniel.russo@cs.aau.dk; arma@cs.aau.dk; k.stol@ucc.ie
RI Stol, Klaas-Jan/I-6269-2013; Russo, Daniel/O-3002-2019
OI Stol, Klaas-Jan/0000-0002-1038-5050; Russo, Daniel/0000-0001-7253-101X
FU Science Foundation Ireland [13/RC/2094_P2, 15/SIRG/3293]; European
   Regional Development Fund through the Southern & Eastern Regional
   Operational Programme
FX This work was supported by the Science Foundation Ireland grant
   13/RC/2094_P2 and 15/SIRG/3293 and co-funded under the European Regional
   Development Fund through the Southern & Eastern Regional Operational
   Programme to Lero-the Irish Software Research Centre (www.lero.ie). For
   the purpose of Open Access, the authors have applied a CC-BY public
   copyright licence to any Author Accepted Manuscript version arising from
   this submission.
CR AHLERING RF, 1989, J RES PERS, V23, P313, DOI 10.1016/0092-6566(89)90004-4
   Almstrum VL, 2003, COMMUN ACM, V46, P51, DOI 10.1145/903893.903920
   Amichai-Hamburger Y, 2007, COMPUT HUM BEHAV, V23, P880, DOI 10.1016/j.chb.2006.03.002
   [Anonymous], 2001, B WORLD HEALTH ORGAN, V79, P373, DOI 10.1001/jama.2013.281053
   [Anonymous], 2014, TOLERANCE VARIANCE I
   [Anonymous], 1971, The Psychology of Computer Programming
   [Anonymous], 1986, Programmers at Work
   [Anonymous], 1991, Measures of social psychological attitudes: Vol. 1. Measures of personality and social psychological attitudes, DOI [DOI 10.1016/B978-0-12-590241-0.50006-X, 10.1016/B978-0-12-590241-0.50006-X]
   [Anonymous], 2008, PRINCE
   [Anonymous], 1931, BASIC POSTULATES ANA
   [Anonymous], 2009, PROC IEEE 13 INT MUL
   [Anonymous], 2009, HDB INDIVIDUAL DIFFE
   Ashton M.C., 2013, INDIVIDUAL DIFFERENC
   Ashton MC, 2004, J PERS SOC PSYCHOL, V86, P356, DOI 10.1037/0022-3514.86.2.356
   Ashton MC, 2014, PERS SOC PSYCHOL REV, V18, P139, DOI 10.1177/1088868314523838
   Baker M, 2016, NATURE, V531, P151, DOI 10.1038/nature.2016.19503
   Beecham S, 2008, INFORM SOFTWARE TECH, V50, P860, DOI 10.1016/j.infsof.2007.09.004
   Bergande Bianca, 2020, ECSEE '20. Proceedings of the 4th European Conference on Software Engineering Education, P47, DOI 10.1145/3396802.3396803
   Blonigen DM, 2008, J PERS, V76, P229, DOI 10.1111/j.1467-6494.2007.00485.x
   BOEHM BW, 1988, IEEE T SOFTWARE ENG, V14, P1462, DOI 10.1109/32.6191
   BOYLE GJ, 1995, AUST PSYCHOL, V30, P71, DOI 10.1111/j.1742-9544.1995.tb01750.x
   Bruinsma J, 2018, PERS INDIV DIFFER, V127, P151, DOI 10.1016/j.paid.2018.02.001
   CACIOPPO JT, 1982, J PERS SOC PSYCHOL, V42, P116, DOI 10.1037/0022-3514.42.1.116
   Cacioppo JT, 1996, PSYCHOL BULL, V119, P197, DOI 10.1037/0033-2909.119.2.197
   Calefato F, 2019, INFORM SOFTWARE TECH, V114, P1, DOI 10.1016/j.infsof.2019.05.012
   Callan MJ, 2017, SOC PSYCHOL PERS SCI, V8, P660, DOI 10.1177/1948550616673877
   Capretz LF, 2003, INT J HUM-COMPUT ST, V58, P207, DOI 10.1016/S1071-5819(02)00137-4
   Cegielski CG, 2006, COMMUN ACM, V49, P73, DOI 10.1145/1164394.1164397
   Cobb-Clark DA, 2012, ECON LETT, V115, P11, DOI 10.1016/j.econlet.2011.11.015
   Coelho GLD, 2020, ASSESSMENT, V27, P1870, DOI 10.1177/1073191118793208
   COHEN J, 1994, AM PSYCHOL, V49, P997, DOI 10.1037/0003-066X.50.12.1103
   Corr PJ, 2009, CAMBRIDGE HANDBOOK OF PERSONALITY PSYCHOLOGY, P1, DOI 10.1017/CBO9780511596544
   Cruz S, 2015, COMPUT HUM BEHAV, V46, P94, DOI 10.1016/j.chb.2014.12.008
   Cucolas AA, 2021, ARXIV210705955
   Curtis B., 1984, Proceedings of the 7th International Conference on Software Engineering (cat. no. 84CH2011-5), P97
   Da Cunha AD, 2007, COMMUN ACM, V50, P109, DOI 10.1145/1230819.1241672
   de Vries RE, 2013, J RES PERS, V47, P871, DOI 10.1016/j.jrp.2013.09.003
   Devito A.J., 1985, 9 MENTAL MEASUREMENT, P1030
   Dienes Z, 2014, FRONT PSYCHOL, V5, DOI 10.3389/fpsyg.2014.00781
   [Druckman D. National Research Council National Research Council], 1991, In the mind's eye: Enhancing human performance
   EVANS GE, 1989, COMMUN ACM, V32, P1322, DOI 10.1145/68814.68817
   Feldt R, 2010, INFORM SOFTWARE TECH, V52, P611, DOI 10.1016/j.infsof.2010.01.001
   Firfiray S, 2017, HUM RESOUR MANAGE-US, V56, P629, DOI 10.1002/hrm.21790
   FLETCHER GJO, 1986, J PERS SOC PSYCHOL, V51, P875, DOI 10.1037/0022-3514.51.4.875
   Furia C A, 2021, ACM T SOFTW ENG METH
   Furia CA, 2021, IEEE T SOFTWARE ENG, V47, P1786, DOI 10.1109/TSE.2019.2935974
   Furia CA, 2017, PROC IEEE ACM INT C, P374, DOI 10.1109/ICSE-C.2017.92
   Furnham A, 1996, PERS INDIV DIFFER, V21, P303, DOI 10.1016/0191-8869(96)00033-5
   Furnham A, 2013, J INDIVID DIFFER, V34, P230, DOI 10.1027/1614-0001/a000119
   Gallagher VC, 2012, PERS INDIV DIFFER, V53, P534, DOI 10.1016/j.paid.2012.04.025
   Glass R. L., 2002, FACTS FALLACIES SOFT
   Gravetter F. J., 2018, Research methods for the behavioral sciences
   Graziotin D, 2014, PEERJ, V2, DOI 10.7717/peerj.289
   Gren L, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3267437
   Gustavsson JP, 1997, PERS INDIV DIFFER, V22, P783, DOI 10.1016/S0191-8869(96)00268-1
   HAUGTVEDT CP, 1992, J PERS SOC PSYCHOL, V63, P308, DOI 10.1037/0022-3514.63.2.308
   HEPPNER PP, 1983, J COUNS PSYCHOL, V30, P537, DOI 10.1037/0022-0167.30.4.537
   Hill BD, 2013, J RES PERS, V47, P22, DOI 10.1016/j.jrp.2012.11.001
   Hosio S, 2020, COMPUTER, V53, P63, DOI 10.1109/MC.2019.2902542
   JASP Team, 2018, JASP VERS 0 11 1
   Jonason PK, 2010, PSYCHOL ASSESSMENT, V22, P420, DOI 10.1037/a0019265
   Judge TA, 2009, LEADERSHIP QUART, V20, P855, DOI 10.1016/j.leaqua.2009.09.004
   Kearney E, 2009, ACAD MANAGE J, V52, P581, DOI 10.5465/AMJ.2009.41331431
   Kosinski M, 2013, P NATL ACAD SCI USA, V110, P5802, DOI 10.1073/pnas.1218772110
   Kraichy D, 2014, J BUS PSYCHOL, V29, P253, DOI 10.1007/s10869-013-9311-z
   Lee J.M., 1978, P 1978 ANN C, V2, P561, DOI [10.1145/800178.810092, DOI 10.1145/800178.810092]
   Lee M., 2014, Bayesian cognitive modeling: A practical course, P101
   Lee MD., 2014, BAYESIAN COGNITIVE M, DOI DOI 10.1017/CBO9781139087759
   Lee MD, 2018, PSYCHON B REV, V25, P114, DOI 10.3758/s13423-017-1238-3
   Lenberg P, 2015, J SYST SOFTWARE, V107, P15, DOI 10.1016/j.jss.2015.04.084
   Li PL, 2020, EMPIR SOFTW ENG, V25, P322, DOI 10.1007/s10664-019-09773-y
   Liang F, 2008, J AM STAT ASSOC, V103, P410, DOI 10.1198/016214507000001337
   Madrid HP, 2016, LEARN INDIVID DIFFER, V51, P409, DOI 10.1016/j.lindif.2015.07.010
   Marreiros H, 2017, J ECON BEHAV ORGAN, V140, P1, DOI 10.1016/j.jebo.2017.03.024
   Masegosa Andres R., 2020, ADV NEURAL INFORM PR, V33
   MCCRAE RR, 1989, J PERS, V57, P17, DOI 10.1111/j.1467-6494.1989.tb00759.x
   MCCRAE RR, 1992, J PERS, V60, P175, DOI 10.1111/j.1467-6494.1992.tb00970.x
   McCrae RR, 1996, PSYCHOL BULL, V120, P323, DOI 10.1037/0033-2909.120.3.323
   Mellblom E, 2019, IEEE SOFTWARE, V36, P57, DOI 10.1109/MS.2019.2924769
   Myers I B, 1976, INTRO TYPE GUIDE UND
   Nuzzo R, 2014, NATURE, V506, P150, DOI 10.1038/506150a
   O'Brien RM, 2007, QUAL QUANT, V41, P673, DOI 10.1007/s11135-006-9018-6
   Palan S, 2018, J BEHAV EXP FINANC, V17, P22, DOI 10.1016/j.jbef.2017.12.004
   Park HS, 2008, J MANAGE ENG, V24, P111, DOI 10.1061/(ASCE)0742-597X(2008)24:2(111)
   Paulhus DL, 2002, J RES PERS, V36, P556, DOI 10.1016/S0092-6566(02)00505-6
   Peer E, 2017, J EXP SOC PSYCHOL, V70, P153, DOI 10.1016/j.jesp.2017.01.006
   PERRY DE, 1994, IEEE SOFTWARE, V11, P36, DOI 10.1109/52.300082
   Petre M, 1997, P WORKSH EMP STUD PR
   Petty R. E., 1996, INDIVIDUAL DIFFERENC
   Pohling R, 2019, FRONT PSYCHOL, V10, DOI 10.3389/fpsyg.2019.01381
   Popoviciu S A, 2011, PROBL EDUC 21ST CENT, P33
   Ralph P., 2021, EMPIRICAL STANDARDS
   Ralph P, 2020, EMPIR SOFTW ENG, V25, P4927, DOI 10.1007/s10664-020-09875-y
   Rauthmann JF, 2012, PERS INDIV DIFFER, V53, P884, DOI 10.1016/j.paid.2012.06.020
   Roberts BW, 2007, PERSPECT PSYCHOL SCI, V2, P313, DOI 10.1111/j.1745-6916.2007.00047.x
   Roberts BW, 2008, CURR DIR PSYCHOL SCI, V17, P31, DOI 10.1111/j.1467-8721.2008.00543.x
   Rouder JN, 2012, MULTIVAR BEHAV RES, V47, P877, DOI 10.1080/00273171.2012.734737
   Russo D, 2021, ARXIV211110349
   Russo D, 2021, INT C SOFTW ENG, P624
   Russo D, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3464938
   Russo D, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09945-9
   Russo D, 2022, IEEE T SOFTWARE ENG, V48, P819, DOI 10.1109/TSE.2020.3003413
   Sadowski CJ, 1997, J PSYCHOL, V131, P307, DOI 10.1080/00223989709603517
   Salzberger T, 2013, FRONT PSYCHOL, V4, DOI 10.3389/fpsyg.2013.00075
   Saucier G, 2009, J PERS, V77, P1577, DOI 10.1111/j.1467-6494.2009.00593.x
   Sharma GG, 2020, J SYST SOFTWARE, V159, DOI 10.1016/j.jss.2019.110442
   Shneiderman B., 1980, CAMBR MASS, V48, P161
   Simmonds G, 2018, FOOD QUAL PREFER, V63, P18, DOI 10.1016/j.foodqual.2017.07.015
   Singer M, 1998, J BUS ETHICS, V17, P527
   Smith BN, 2001, GROUP DYN-THEOR RES, V5, P150, DOI 10.1037/1089-2699.5.2.150
   Smith D. C., 1989, Computer Personnel, V12, P12, DOI 10.1145/1036387.1036389
   Stol KJ, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3241743
   Storey MA, 2020, EMPIR SOFTW ENG, V25, P4097, DOI 10.1007/s10664-020-09858-z
   Strobel A, 2018, J INDIVID DIFFER, V39, P107, DOI 10.1027/1614-0001/a000255
   Tuten TL, 2001, SOC BEHAV PERSONAL, V29, P391, DOI 10.2224/sbp.2001.29.4.391
   Valentine S, 2019, J BUS RES, V98, P277, DOI 10.1016/j.jbusres.2019.01.009
   van Berkel N, 2021, CHI '21: PROCEEDINGS OF THE 2021 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, DOI 10.1145/3411764.3445365
   van der Molen DRM, 2022, BREAST CANCER RES TR, V191, P553, DOI 10.1007/s10549-021-06458-3
   van Doorn J, 2021, PSYCHON B REV, V28, P813, DOI 10.3758/s13423-020-01798-5
   van Nimwegen C., 2006, Conference on Human Factors in Computing Systems. CHI2006, P917
   VENKATRAMAN MP, 1990, J BUS RES, V20, P293, DOI 10.1016/0148-2963(90)90008-2
   Wagenmakers EJ, 2018, PSYCHON B REV, V25, P58, DOI [10.3758/s13423-017-1323-7, 10.3758/s13423-017-1343-3]
   Weiner I.B., 2017, Handbook of personality assessment, V2nd
   Wu CH, 2014, J MANAGE, V40, P1511, DOI 10.1177/0149206311429862
   Yamane T., 1973, STAT INTRO ANAL
NR 125
TC 9
Z9 9
U1 2
U2 10
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAY
PY 2022
VL 27
IS 3
AR 71
DI 10.1007/s10664-021-10106-1
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZV2BV
UT WOS:000770339500003
PM 35313539
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Lin, JF
   Liu, YL
   Cleland-Huang, J
AF Lin, Jinfeng
   Liu, Yalin
   Cleland-Huang, Jane
TI Information retrieval versus deep learning approaches for generating
   traceability links in bilingual projects
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software traceability; Cross-lingual information retrieval; Generalized
   Vector Space Model; BERT
AB Software traceability links are established between diverse artifacts of the software development process in order to support tasks such as compliance analysis, safety assurance, and requirements validation. However, practice has shown that it is difficult and costly to create and maintain trace links in non-trivially sized projects. For this reason, many researchers have proposed and evaluated automated approaches based on information retrieval and deep-learning. Generating trace links automatically can also be challenging - especially in multi-national projects which include artifacts written in multiple languages. The intermingled language use can reduce the efficiency of automated tracing solutions. In this work, we analyze patterns of intermingled language that we observed in several different projects, and then comparatively evaluate different tracing algorithms. These include Information Retrieval techniques, such as the Vector Space Model (VSM), Latent Semantic Indexing (LSI), Latent Dirichlet Allocation (LDA), and various models that combine mono- and cross-lingual word embeddings with the Generative Vector Space Model (GVSM), and a deep-learning approach based on a BERT language model. Our experimental analysis of trace links generated for 14 Chinese-English projects indicates that our MultiLingual Trace-BERT approach performed best in large projects with close to 2-times the accuracy of the best IR approach, while the IR-based GVSM with neural machine translation and a monolingual word embedding performed best on small projects.
C1 [Lin, Jinfeng; Liu, Yalin; Cleland-Huang, Jane] Univ Notre Dame, Notre Dame, IN 46556 USA.
C3 University of Notre Dame
RP Lin, JF (corresponding author), Univ Notre Dame, Notre Dame, IN 46556 USA.
EM jlin6@nd.edu; yliu26@nd.edu; janehuang@nd.edu
FU United States National Science Foundation [CCF-1649448, SHF-1901059]
FX The work described in this paper has been partially funded by United
   States National Science Foundation grants CCF-1649448 and SHF-1901059.
CR Abufardeh Sameer, 2010, 2010 4th International Conference on New Trends in Information Science and Service Science (NISS 2010), P133
   Ali N, 2013, IEEE T SOFTWARE ENG, V39, P725, DOI 10.1109/TSE.2012.71
   ALMasri Mohannad, 2016, Advances in Information Retrieval. 38th European Conference on IR Research, ECIR 2016. Proceedings; LNCS 9626, P709, DOI 10.1007/978-3-319-30671-1_57
   [Anonymous], 2018, ARXIV180902306
   [Anonymous], 2021, TREC KBA TREC KBA MA
   [Anonymous], 2014, P 22 INT C PROGR COM
   [Anonymous], 2013, Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering-ESEC/FSE 2013, page
   [Anonymous], 1985, P 8 ANN INT ACM SIGI, DOI DOI 10.1145/253495.253506
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Asuncion HazelineU., 2012, Software and Systems Traceability, P129, DOI [10.1007/978-1-4471-2239-5_6, DOI 10.1007/978-1-4471-2239-5_6]
   Asuncion HU, 2010, 2010 ACM IEEE 32 INT, V1, P95
   Bird S., 2004, P ACL INTERACTIVE PO, P214
   Calefato F., 2011, Proceedings of the 2011 6th IEEE International Conference on Global Software Engineering (ICGSE 2011), P94, DOI 10.1109/ICGSE.2011.14
   Calefato F., 2010, Proceedings of the 2010 Fifth IEEE International Conference Global Software Engineering (ICGSE 2010), P257, DOI 10.1109/ICGSE.2010.37
   Cleland-Huang J., 2014, FOSE P FUTURE SOFTWA, P55
   Cleland-Huang J., 2011, Proceedings of the 6th International Workshop on Traceability in Emerging Forms of Software Engineering, P17, DOI [10.1145/1987856.1987861, DOI 10.1145/1987856.1987861]
   Cleland-Huang J, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P849, DOI 10.1145/2635868.2666612
   Conneau A, 2018, 2018 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2018), P2475
   Cover T. M., 1991, ELEMENTS INFORM THEO
   Cruz BD, 2017, INT REQUIR ENG CONF, P233, DOI 10.1109/RE.2017.24
   De Lucia A, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1276933.1276934
   Devlin J., 2018, BERT PRE TRAINING DE
   Dhingra B, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2016), VOL 2, P269
   Double Blinded, 2020, ALL INF IS BLIND DUE
   EF EPI, 2019, EF ENGL PROF IND
   Fasttext, 2021, WORD VECT 157 LANG F
   Fu Y, 2021, WHO OFFERS BEST CHIN
   Google-Research, 2019, GITH REP MULT MOD
   Gotel O., 2012, 2012 IEEE 20th International Requirements Engineering Conference (RE 2012), P71, DOI 10.1109/RE.2012.6345841
   Gotel O. C. Z., 1994, Proceedings of the First International Conference on Requirements Engineering (Cat. No.94TH0613-0), P94, DOI 10.1109/ICRE.1994.292398
   Gouws S, 2015, PR MACH LEARN RES, V37, P748
   Guo J, 2017, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.2017.9
   Guo J, 2013, S VIS LANG HUM CEN C, P42, DOI 10.1109/RE.2013.6636704
   Harris ZS, 1954, WORD, V10, P146, DOI 10.1080/00437956.1954.11659520
   Hayes JH, 2006, IEEE T SOFTWARE ENG, V32, P4, DOI 10.1109/TSE.2006.3
   Hilgert L, 2014, LREC 2014 - NINTH INTERNATIONAL CONFERENCE ON LANGUAGE RESOURCES AND EVALUATION, P2772
   Hofmann T, 1999, SIGIR'99: PROCEEDINGS OF 22ND INTERNATIONAL CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P50, DOI 10.1145/312624.312649
   Jenkins J., 1999, P 15 INT UN C C, V15, P1
   Johnson M., 2017, T ASSOC COMPUT LING, V5, P339, DOI [10.1162/tacla00065, 10.1162/tacl_a_00065, DOI 10.1162/TACL_A_00065]
   Jones E., 2001, SciPy: Open source scientific tools for Python
   Joulin A, 2018, 2018 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2018), P2979
   KAILATH T, 1967, IEEE T COMMUN TECHN, VCO15, P52, DOI 10.1109/TCOM.1967.1089532
   Khandkar ShahedulHuq., 2009, Open coding, V23
   Krishna S, 2004, COMMUN ACM, V47, P62, DOI 10.1145/975817.975818
   Liu YL, 2020, IEEE WORK CONF MIN S, P443, DOI 10.1145/3379597.3387440
   Liu YL, 2020, INT REQUIR ENG CONF, P328, DOI 10.1109/RE48521.2020.00043
   Lormans M, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P45
   Lutz B, 2009, INT CONF GLOBAL SOFT, P249, DOI 10.1109/ICGSE.2009.33
   Mäder P, 2012, J SYST SOFTWARE, V85, P2205, DOI 10.1016/j.jss.2011.10.023
   Meeker M, 2018, INTERNET TRENDS 2018
   Mikolov T, 2018, PROCEEDINGS OF THE ELEVENTH INTERNATIONAL CONFERENCE ON LANGUAGE RESOURCES AND EVALUATION (LREC 2018), P52
   Mikolov Tomas, 2013, Preprints
   Monti J, 2013, 2013 ASE/IEEE INTERNATIONAL CONFERENCE ON SOCIAL COMPUTING (SOCIALCOM), P725, DOI 10.1109/SocialCom.2013.108
   Moulin C, 2009, INT C COMP SUPP COOP, P312, DOI 10.1109/CSCWD.2009.4968077
   Muhr M., 2010, NOTEBOOK PAPERS CLEF
   Oliveto Rocco, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P68, DOI 10.1109/ICPC.2010.20
   Pawelka T, 2015, PROC IEEE INT CONF S, P401, DOI 10.1109/ICSM.2015.7332491
   Ranzato M., 2017, ABS171004087 CORR
   Rath M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P834, DOI 10.1145/3180155.3180207
   Rempel P., 2015, Software Engineering Management 2015, Multikonferenz der GIFachbereiche Softwaretechnik (SWT) und Wirtschaftsinformatik, P120
   Ruder S., 2017, A survey of cross-lingual word embedding models
   Sanh V., 2019, P 33 C NEURAL INFORM
   Shin Y, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL SYMPOSIUM ON SOFTWARE AND SYSTEMS TRACEABILITY, P61, DOI 10.1109/SST.2015.13
   Spanoudakis G, 2004, J SYST SOFTWARE, V72, P105, DOI 10.1016/S0164-1212(03)00242-5
   Tang G., 2011, Fifth_International Joint_Conference_on_Natural_Language_Processing,_IJCNLP_2011,_Chiang_Mai, Thailand,_November_8-13,_2011, P580
   Treude C, 2015, 2015 29TH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING, P179, DOI 10.1109/SBES.2015.27
   Tsatsaronis G., 2009, EACL_2009,_12th_Conference_of_the European_Chapter_of_the_Association_for_Computational_Linguistics,_Proceedings_of the_Conference,_Athens,_Greece,_March_30_-_April_3,_2009, P70
   Tsatsaronis G, 2010, J ARTIF INTELL RES, V37, P1, DOI 10.1613/jair.2880
   Vaswani A, 2017, ADV NEUR IN, V30
   Vulic I, 2015, SIGIR 2015: PROCEEDINGS OF THE 38TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P363, DOI 10.1145/2766462.2767752
   Vulic Ivan., 2017, Proceedings of the 15th Conference of the European Chapter of the Association for Computational Linguistics, V2, P408, DOI DOI 10.18653/V1/E17-2065
   WONG SKM, 1989, INFORM SYST, V14, P47, DOI 10.1016/0306-4379(89)90024-0
   Woolson RF, 2007, Wiley encyclopedia of clinical trials, P1, DOI [10.1002/9780471462422.eoct979, DOI 10.1002/9780471462422.EOCT979]
   Wouters L, 2013, INT C COMP SUPP COOP, P269, DOI 10.1109/CSCWD.2013.6580974
   Wu Y., 2016, GOOGLES NEURAL MACHI
   Xu BW, 2018, EMPIR SOFTW ENG, V23, P1084, DOI 10.1007/s10664-017-9568-3
   Ye XG, 2015, PROCEEDINGS 2015 IEEE INTERNATIONAL CONFERENCE ON BIG DATA, P801, DOI 10.1109/BigData.2015.7363825
   Zhao T, 2017, ASIA PAC SOFWR ENG, P81, DOI 10.1109/APSEC.2017.14
NR 78
TC 3
Z9 5
U1 2
U2 13
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN
PY 2022
VL 27
IS 1
AR 5
DI 10.1007/s10664-021-10050-0
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WL0WL
UT WOS:000710136400002
DA 2024-07-18
ER

PT J
AU Zampetti, F
   Mudbhari, S
   Arnaoudova, V
   Di Penta, M
   Panichella, S
   Antoniol, G
AF Zampetti, Fiorella
   Mudbhari, Saghan
   Arnaoudova, Venera
   Di Penta, Massimiliano
   Panichella, Sebastiano
   Antoniol, Giuliano
TI Using code reviews to automatically configure static analysis tools
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Static analysis tools; Code reviews; Automated tool configuration
AB Developers often use Static Code Analysis Tools (SCAT) to automatically detect different kinds of quality flaws in their source code. Since many warnings raised by SCATs may be irrelevant for a project/organization, it can be possible to leverage information from the project development history, to automatically configure which warnings a SCAT should raise, and which not. In this paper, we propose an automated approach (Auto-SCAT) to leverage (statement-level) code review comments for recommending SCAT warnings, or warning categories, to be enabled. To this aim, we trace code review comments onto SCAT warnings by leveraging their descriptions and messages, as well as review comments made in other different projects. We apply Auto-SCAT to study how CheckStyle, a well-known SCAT, can be configured in the context of six Java open source projects, all using Gerrit for handling code reviews. Our results show that, Auto-SCAT is able to classify code review comments into CheckStyle checks with a precision of 61% and a recall of 52%. While considering also the code review comments not related to CheckStyle warnings Auto-SCAT has a precision and a recall of approximate to 75%. Furthermore, Auto-SCAT can configuring CheckStyle with a precision of 72.7% at checks level and a precision of 96.3% at category level. Finally, our findings highlight that Auto-SCAT outperforms state-of-art baselines based on default CheckStyle configurations, or leveraging the history of previously-removed warnings.
C1 [Zampetti, Fiorella; Di Penta, Massimiliano] Univ Sannio, Benevento, Italy.
   [Mudbhari, Saghan; Arnaoudova, Venera] Washington State Univ, Pullman, WA 99164 USA.
   [Panichella, Sebastiano] Zurich Univ Appl Sci, Winterthur, Switzerland.
   [Antoniol, Giuliano] Ecole Polytech Montreal, Montreal, PQ, Canada.
C3 University of Sannio; Washington State University; Zurich University of
   Applied Sciences; Universite de Montreal; Polytechnique Montreal
RP Zampetti, F (corresponding author), Univ Sannio, Benevento, Italy.
EM fiorella.zampetti@unisannio.it; saghan.mudbhari@wsu.edu;
   Venera.Arnaoudova@wsu.edu; dipenta@unisannio.it; panc@zhaw.ch;
   antoniol@ieee.org
OI Panichella, Sebastiano/0000-0003-4120-626X
CR Anderson P, 2003, IEEE SOFTWARE, V20, P42, DOI 10.1109/MS.2003.1207453
   [Anonymous], 2009, PROC DEFECTS, P11
   [Anonymous], 2008, Proceedings of the 2008 international working conference on Mining software repositories
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Baeza-Yates Ricardo, 1999, MODERN INFORM RETRIE, V463
   Bavota G, 2015, PROC IEEE INT CONF S, P81, DOI 10.1109/ICSM.2015.7332454
   Baysal O, 2013, WORK CONF REVERSE EN, P122, DOI 10.1109/WCRE.2013.6671287
   Beller M., 2014, 11 WORK C MIN SOFTW, P202, DOI DOI 10.1145/2597073.2597082
   Beller M, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P470, DOI 10.1109/SANER.2016.105
   Bosu A, 2017, IEEE T SOFTWARE ENG, V43, P56, DOI 10.1109/TSE.2016.2576451
   Bosu A, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P736, DOI 10.1145/2591062.2591200
   Cassee N, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P423, DOI [10.1109/saner48275.2020.9054818, 10.1109/SANER48275.2020.9054818]
   Cousot P, 2005, LECT NOTES COMPUT SC, V3444, P21
   Couto C, 2013, SOFTWARE QUAL J, V21, P241, DOI 10.1007/s11219-011-9172-5
   Duvall Paul M., 2007, Continuous integration: improving software quality and reducing risk
   FAGAN ME, 1976, IBM SYST J, V15, P182, DOI 10.1147/sj.153.0182
   Fry ZP, 2013, WORK CONF REVERSE EN, P282, DOI 10.1109/WCRE.2013.6671303
   Hanam Q., 2014, P 11 WORKING C MININ, P152
   Huang A., 2008, Proceedings of the sixth new zealand computer science research student conference (NZCSRSC2008), V4, P9
   Johnson B, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P672, DOI 10.1109/ICSE.2013.6606613
   Jongwon Yoon, 2014, 2014 21st Asia-Pacific Software Engineering Conference (APSEC), P3, DOI 10.1109/APSEC.2014.81
   Khoo Y.P., 2008, WORKSHOP PROGRAM ANA, P57
   Kim S, 2007, P 6 JOINT M EUR SOFT, P45, DOI DOI 10.1145/1287624.1287633
   Kononenko O, 2016, PROC INT CONF SOFTW, P1028, DOI 10.1145/2884781.2884840
   Mäntylä MV, 2009, IEEE T SOFTWARE ENG, V35, P430, DOI 10.1109/TSE.2008.71
   Marcilio D, 2019, INT C PROGRAM COMPRE, P209, DOI 10.1109/ICPC.2019.00040
   McIntosh S, 2016, EMPIR SOFTW ENG, V21, P2146, DOI 10.1007/s10664-015-9381-9
   Morales R, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P171, DOI 10.1109/SANER.2015.7081827
   Muske TB, 2013, IEEE INT WORK C SO, P106, DOI 10.1109/SCAM.2013.6648191
   Panichella S, 2020, EMPIR SOFTW ENG, V25, P4833, DOI 10.1007/s10664-020-09870-3
   Panichella S, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P161, DOI 10.1109/SANER.2015.7081826
   Pascarella Luca, 2018, Proceedings of the ACM on Human-Computer Interaction, V2, DOI 10.1145/3274404
   Phang K.Y., 2009, Evaluation and Usability of Programming Languages and Tools (PLATEAU) PLATEAU 2009
   PORTER MF, 1980, PROGRAM-AUTOM LIBR, V14, P130, DOI 10.1108/eb046814
   Querel LP, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P892, DOI 10.1145/3236024.3264599
   Rehurek R., 2010, P LREC 2010 WORKSH N, P45, DOI DOI 10.13140/2.1.2393.1847
   Reiss S. P, 2007, 22 IEEEACM INT C AUT, P74
   Ribeiro A, 2019, PROCEEDINGS OF THE 15TH INTERNATIONAL SYMPOSIUM ON OPEN COLLABORATION (OPENSYM), DOI 10.1145/3306446.3340828
   Rigby PC, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P541
   Ruthruff JR, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P341, DOI 10.1145/1368088.1368135
   SALTON G, 1975, COMMUN ACM, V18, P613, DOI 10.1145/361219.361220
   Sanderson M, 2010, NAT LANG ENG, V16, P100, DOI 10.1017/S1351324909005129
   Sokolova M, 2009, INFORM PROCESS MANAG, V45, P427, DOI 10.1016/j.ipm.2009.03.002
   Spacco J., 2006, PROC 2006 INT WORK M, P133
   Vassallo C, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P38, DOI 10.1109/SANER.2018.8330195
   Wedyan F, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P141, DOI 10.1109/ICST.2009.21
   Williams CC, 2005, IEEE T SOFTWARE ENG, V31, P466, DOI 10.1109/TSE.2005.63
   Yüksel U, 2013, PROC IEEE INT CONF S, P532, DOI 10.1109/ICSM.2013.89
   Zampetti F, 2017, IEEE WORK CONF MIN S, P334, DOI 10.1109/MSR.2017.2
   Zhang DL, 2013, ASIA PAC SOFWR ENG, P172, DOI 10.1109/APSEC.2013.33
   Zheng J, 2006, IEEE T SOFTWARE ENG, V32, P240, DOI 10.1109/TSE.2006.38
   杨云峰, 1999, [西安公路交通大学学报, Journal of Xian Highway University], P67
NR 52
TC 5
Z9 6
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN
PY 2022
VL 27
IS 1
AR 28
DI 10.1007/s10664-021-10076-4
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XN0QP
UT WOS:000729219800001
DA 2024-07-18
ER

PT J
AU Zhou, JY
   Wang, SW
   Kamei, Y
   Hassan, AE
   Ubayashi, N
AF Zhou, Jiayuan
   Wang, Shaowei
   Kamei, Yasutaka
   Hassan, Ahmed E.
   Ubayashi, Naoyasu
TI Studying donations and their expenses in open source projects: a case
   study of GitHub projects collecting donations through open collectives
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Donations; Open source; GitHub
AB Operating an open source project requires not only intrinsic motivation (e.g., the joy of participation) but also extrinsic motivation (e.g., financial incentives). Almost 95% of open source projects are no longer maintained after a year. Nowadays, although donations start to play an important role in operating open source projects, there is little knowledge about the characteristics of donors and the usage of donations. A better understanding of the characteristics of donations, their donors, and the usage of donations in open source projects is needed to provide insights to the stakeholders of open source projects to help them operate their projects more sustainably. In this paper, we study the donations that are received through the Open Collective platform (i.e., an online crowdfunding platform) to support open source projects, to understand the characteristics of these donations, their donors, and the usage of these donations. To do so, we investigate 225 GitHub open source projects that received 54,889 donations with a total value of $2,537,281 through the Open Collective platform. We find that: 1) In general, corporate donors tend to donate more money than individual donors in a single donation. However, in a collective, the total donation amount from individual donors is more than corporate donors, suggesting the importance of individual donors. Moreover, individual donors are more likely to redonate to the same collective compared to corporate donors. 2) Non-engineering-related expenses take up to 54.0% of the total number of all expenses that are filtered against donation. For instance, "Web services", "marketing", and "travel" expenses are the three most frequent and costly non-engineering-related expense types. For engineering-related expenses, the most frequent expenses are related to development and maintenance. Interestingly, we also observe that 18% of the engineering expenses were spent to propose bounties for addressing issues with a median cost of $95 per proposed bounty. We further analyze the differences between individual-supported collectives (i.e., collectives where more than 80% of their donation amount is from individual donors) and corporate-supported collectives (i.e., collectives where more than 80% of their donation amount is from corporate donors). We observe that corporate-supported collectives tend to receive a higher donation amount than individual-supported collectives and the monthly received donation amounts are positively associated with the levels of community and maintenance activities in corporate-supported collectives. They have no significant difference in terms of popularity (e.g., the number of pull requests) of their associated GitHub projects. Our findings suggest that the stakeholders of GitHub open source projects should try to attract more individual donors. Collectives should not expect to receive a large amount of funds overall from donations unless their projects are very popular or are mainly supported by corporations. Projects should budget for a reasonable amount (e.g., 13% of total funds) of non-engineering expenses (e.g., marketing and traveling).
C1 [Zhou, Jiayuan] Huawei, Ctr Software Excellence CSE, Ottawa, ON, Canada.
   [Wang, Shaowei] Univ Manitoba, Dept Comp Sci, Winnipeg, MB, Canada.
   [Kamei, Yasutaka; Ubayashi, Naoyasu] Kyushu Univ, Principles Software Engn & Programming Languages, Fukuoka, Japan.
   [Hassan, Ahmed E.] Queens Univ, Software Anal & Intelligence Lab SAIL, Kingston, ON, Canada.
C3 Huawei Technologies; University of Manitoba; Kyushu University; Queens
   University - Canada
RP Wang, SW (corresponding author), Univ Manitoba, Dept Comp Sci, Winnipeg, MB, Canada.
EM jiayuan.zhou1@huawei.com; shaowei.wang@umanitoba.ca;
   kamei@ait.kyushu-u.ac.jp; ahmed@cs.queensu.ca; kamei@ait.kyushu-u.ac.jp
RI KHALIFA, AHMED khalifa/HKF-2246-2023
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; Ubayashi,
   Naoyasu/0000-0003-1578-7195
FU JSPS KAKENHI [JP18H03222]
FX This research was partially supported by JSPS KAKENHI Grant Numbers
   JP18H03222.
CR Androutsellis-Theotokis Stephanos, 2010, Foundations and Trends in Technology, Information and Operations Management, V4, P187, DOI 10.1561/0200000026
   [Anonymous], 2016, ROADS BRIDGES UNSEEN
   [Anonymous], 2002, Stat. Methods Inter-Rater Reliab. Assess. Ser.
   Atiq A., 2016, INT C INF SYST ICIS, P1
   Avelino Guilherme, 2016, Proceedings of IEEE 24th International Conference on Program Comprehension (ICPC), P1
   BAUER DF, 1972, J AM STAT ASSOC, V67, P687, DOI 10.2307/2284469
   Bissyandé TF, 2013, P INT COMP SOFTW APP, P303, DOI 10.1109/COMPSAC.2013.55
   Izquierdo JLC, 2018, PROC INT CONF SOFTW, P3, DOI 10.1145/3183428.3183438
   Coelho J, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P186, DOI 10.1145/3106237.3106246
   Daniel W., 1978, APPL NONPARAMETRIC S
   Di Penta Massimiliano, 2012, P ACM SIGSOFT 20 INT, P1
   Finifter M., 2013, 22 USENIX SECURITY S, P273
   Gamalielsson J, 2014, J SYST SOFTWARE, V89, P128, DOI 10.1016/j.jss.2013.11.1077
   GitHub, 2019, GITHUB SPONS NOW SUP
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Hata H, 2017, INT SYMP EMP SOFTWAR, P223, DOI 10.1109/ESEM.2017.34
   Kanda T, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P577, DOI 10.1109/SANER.2017.7884685
   Krishnamurthy S, 2014, RES POLICY, V43, P632, DOI 10.1016/j.respol.2013.10.007
   Krishnamurthy S, 2009, RES POLICY, V38, P404, DOI 10.1016/j.respol.2008.11.004
   Lee A, 2017, PROC INT CONF SOFTW, P187, DOI 10.1109/ICSE.2017.25
   Long D. Feng, 2003, Handbook of psychology, P635, DOI [10.1002/0471264385.wei0225, DOI 10.1002/0471264385.WEI0225]
   Maillart T, 2017, J CYBERSECURITY, V3, P81, DOI 10.1093/cybsec/tyx008
   Munaiah Nuthan., 2016, P 2 INT WORKSHOP SOF, P8, DOI DOI 10.1145/2989238.2989239
   Nakasai K, 2019, IEEE SOFTWARE, V36, P22, DOI 10.1109/MS.2018.2874568
   Nakasai K, 2017, INT WORKSH EMPIR ENG, P18, DOI 10.1109/IWESEP.2017.19
   Overney C, 2020, PROC INT CONF SOFTW, P1209, DOI 10.1145/3377811.3380410
   Paredes H, 2018, INT C COMP SUPP COOP, P796, DOI 10.1109/CSCWD.2018.8465161
   Pinto G, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P112, DOI 10.1109/SANER.2016.68
   Sands Rich, 2012, OPEN SOURCE NUMBERS
   Solomon J, 2015, PROCEEDINGS OF THE 2015 ACM INTERNATIONAL CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING (CSCW'15), P547, DOI 10.1145/2675133.2675296
   Steinmacher I, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P256, DOI 10.1145/3180155.3180208
   Steinmacher I, 2016, PROC INT CONF SOFTW, P273, DOI 10.1145/2884781.2884806
   Valiev M, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P644, DOI 10.1145/3236024.3236062
   Yamashita K., 2016, J INFORM PROCESS, V24, P339, DOI DOI 10.2197/IPSJJIP.24.339
   Ye YW, 2003, PROC INT CONF SOFTW, P419
   Yukizawa U, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P609, DOI [10.1109/SANER.2019.8667974, 10.1109/saner.2019.8667974]
   Zhao HK, 2020, IEEE T KNOWL DATA EN, V32, P1652, DOI 10.1109/TKDE.2019.2906199
   Zhao M., 2014, Proceedings of the 2014 ACM workshop on security information workers, P51, DOI [DOI 10.1145/2663887.2663906, 10.1145/2663887.2663906]
   Zhou J, 2021, SOFTWARE PRACT EXPER, V51, P2238, DOI 10.1002/spe.2950
NR 39
TC 0
Z9 0
U1 2
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN
PY 2022
VL 27
IS 1
AR 24
DI 10.1007/s10664-021-10060-y
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XF3VG
UT WOS:000724001300003
DA 2024-07-18
ER

PT J
AU Aranega, V
   Delplanque, J
   Martinez, M
   Black, AP
   Ducasse, S
   Etien, A
   Fuhrman, C
   Polito, G
AF Aranega, Vincent
   Delplanque, Julien
   Martinez, Matias
   Black, Andrew P.
   Ducasse, Stephane
   Etien, Anne
   Fuhrman, Christopher
   Polito, Guillermo
TI Rotten green tests in Java, Pharo and Python An empirical study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Testing; Rotten Green Tests; Empirical study; Software quality
AB Rotten Green Tests are tests that pass, but not because the assertions they contain are true: a rotten test passes because some or all of its assertions are not actually executed. The presence of a rotten green test is a test smell, and a bad one, because the existence of a test gives us false confidence that the code under test is valid, when in fact that code may not have been tested at all. This article reports on an empirical evaluation of the tests in a corpus of projects found in the wild. We selected approximately one hundred mature projects written in each of Java, Pharo, and Python. We looked for rotten green tests in each project, taking into account test helper methods, inherited helpers, and trait composition. Previous work has shown the presence of rotten green tests in Pharo projects; the results reported here show that they are also present in Java and Python projects, and that they fall into similar categories. Furthermore, we found code bugs that were hidden by rotten tests in Pharo and Python. We also discuss two test smells -missed fail and missed skip -that arise from the misuse of testing frameworks, and which we observed in tests written in all three languages.
C1 [Aranega, Vincent; Delplanque, Julien; Ducasse, Stephane; Etien, Anne; Polito, Guillermo] Univ Lille, CNRS, Cent Lille, INRIA,UMR 9189,CRIStAL, F-59000 Lille, France.
   [Martinez, Matias] Univ Polytech Hauts France, LAMIH UMR CNRS 8201, Valenciennes, France.
   [Black, Andrew P.] Portland State Univ, Dept Comp Sci, Portland, OR 97207 USA.
   [Fuhrman, Christopher] Ecole Technol Super, Montreal, PQ, Canada.
C3 Universite de Lille; Centrale Lille; Inria; Centre National de la
   Recherche Scientifique (CNRS); Centre National de la Recherche
   Scientifique (CNRS); Universite Polytechnique Hauts-de-France; Portland
   State University; University of Quebec; Ecole de Technologie Superieure
   - Canada
RP Aranega, V (corresponding author), Univ Lille, CNRS, Cent Lille, INRIA,UMR 9189,CRIStAL, F-59000 Lille, France.
EM vincent.aranega@inria.fr; julien.delplanque@inria.fr;
   matias.martinez@uphf.fr; apblack@pdx.edu; stephane.ducasse@inria.fr;
   anne.etien@inria.fr; christopher.fuhrman@etsmtl.ca;
   guillermo.polito@inria.fr
RI Etien, Anne/AAG-4675-2020; Martinez, Matias/ABA-8871-2021
OI Etien, Anne/0000-0003-3034-873X; Martinez, Matias/0000-0002-2945-866X;
   Fuhrman, Christopher/0000-0001-8010-1087
CR Baudry B, 2005, IEEE SOFTWARE, V22, P76, DOI 10.1109/MS.2005.30
   Baudry B., 2006, 28th International Conference on Software Engineering Proceedings, P82, DOI 10.1145/1134285.1134299
   Bavota G, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P56, DOI 10.1109/ICSM.2012.6405253
   Beszédes A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P46, DOI 10.1109/ICSM.2012.6405252
   Black A.P., 2009, PHARO EXAMPLE
   Blondeau V, 2017, SOFTWARE QUAL J, V25, P1203, DOI 10.1007/s11219-016-9328-4
   Bowes D, 2017, INT WORKS EMERG TREN, P9, DOI 10.1109/WETSoM.2017.2
   Breugelmans M, 2008, INT WORKSH ADV SOFTW
   Costiou S, 2020, ART SCI ENG PROGRAMM, V4, DOI [10.22152/programming-journal.org/2020/4/5, DOI 10.22152/PROGRAMMING-JOURNAL.ORG/2020/4/5]
   Csallner C, 2004, SOFTWARE PRACT EXPER, V34, P1025, DOI 10.1002/spe.602
   Daniel B, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1010, DOI 10.1145/1985793.1985978
   Delplanque J, 2018, ROTTEN GREEN TESTS 1
   Delplanque J, 2019, PROC INT CONF SOFTW, P500, DOI 10.1109/ICSE.2019.00062
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   Ducasse S, 2006, ACM T PROGR LANG SYS, V28, P331, DOI 10.1145/1119479.1119483
   Ducasse S, 2009, LECT NOTES BUS INF P, V33, P252
   Dustin E., 1999, AUTOMATED SOFTWARE T
   Gälli M, 2004, PROC IEEE INT CONF S, P114, DOI 10.1109/ICSM.2004.1357796
   Gligoric M, 2013, INT S SOFTW TEST AN
   Herzig K, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P39, DOI 10.1109/ICSE.2015.133
   Huo C, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P621, DOI 10.1145/2635868.2635917
   Inozemtseva L, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P435, DOI 10.1145/2568225.2568271
   Lingampally R., 2007, SYST SCI 2007 HICSS, p261b, DOI DOI 10.1109/HICSS.2007.24
   Martinez M, 2020, PROC INT CONF SOFTW, P69, DOI 10.1145/3377812.3382151
   Meszaros G., 2007, Xunit test patterns: refactoring test code
   Mockus A, 2009, INT SYMP EMP SOFTWAR, P292
   Moonen Leon, 2001, P 2 INT C EXTR PROGR
   Niedermayr R, 2016, INTERNATIONAL WORKSHOP ON CONTINUOUS SOFTWARE EVOLUTION AND DELIVERY, CSED 2016, P23, DOI 10.1145/2896941.2896944
   Poulding S, 2017, IEEE ICST WORKSHOP, P81, DOI 10.1109/ICSTW.2017.21
   Reichhart S, 2007, J OBJECT TECHNOL, V6, P231, DOI 10.5381/jot.2007.6.9.a12
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Schuler D, 2013, SOFTW TEST VERIF REL, V23, P531, DOI 10.1002/stvr.1497
   Shahrokni A, 2011, P 3 INT C ADV SYSTEM
   Silva Junior N, 2020, ARXIV200305613
   Tillmann Nikolai., 2005, SIGSOFT Softw. Eng. Notes, V30, P253
   Van Rompaey B, 2006, IMPROVING TEST CODE
   Van Rompaey B, 2006, PROC IEEE INT CONF S, P391
   Vera-Perez O, 2018, ARXIV180705030
NR 38
TC 0
Z9 0
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2021
VL 26
IS 6
AR 130
DI 10.1007/s10664-021-10016-2
PG 41
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UU6ZE
UT WOS:000698944800001
OA Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Chen, JC
   Xia, X
   Lo, D
   Grundy, J
   Yang, XH
AF Chen, Jiachi
   Xia, Xin
   Lo, David
   Grundy, John
   Yang, Xiaohu
TI Maintenance-related concerns for post-deployed Ethereum smart contract
   development: issues, techniques, and future challenges
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Empirical study; Literature review; Smart contracts; Ethereum; Smart
   contracts maintenance
ID BLOCKCHAIN
AB Software development is a very broad activity that captures the entire life cycle of a software, which includes designing, programming, maintenance and so on. In this study, we focus on the maintenance-related concerns of the post-deployment of smart contracts. Smart contracts are self-executed programs that run on a blockchain. They cannot be modified once deployed and hence they bring unique maintenance challenges compared to conventional software. According to the definition of ISO/IEC 14764, there are four kinds of software maintenance, i.e., corrective, adaptive, perfective, and preventive maintenance. This study aims to answer (i) What kinds of issues will smart contract developers encounter for corrective, adaptive, perfective, and preventive maintenance after they are deployed to the Ethereum? (ii) What are the current maintenance-related methods used for smart contracts? To obtain the answers to these research questions, we first conducted a systematic literature review to analyze 131 smart contract related research papers published from 2014 to 2020. Since the Ethereum ecosystem is fast-growing, some results from previous publications might be out-of-date and there may be a gap between academia and industry. To address this, we performed an online survey of smart contract developers on Github to validate our findings and received 165 useful responses. Based on the survey feedback and literature review, we present the first empirical study on smart contract maintenance-related concerns. Our study can help smart contract developers better maintain their smart contract-based projects, and we highlight some key future research directions to improve the Ethereum ecosystem.
C1 [Chen, Jiachi; Xia, Xin; Grundy, John] Monash Univ, Fac Informat Technol, Melbourne, Vic, Australia.
   [Lo, David] Singapore Management Univ, Sch Informat Syst, Singapore, Singapore.
   [Yang, Xiaohu] Zhejiang Univ, Coll Comp Sci & Technol, Hangzhou, Peoples R China.
C3 Monash University; Singapore Management University; Zhejiang University
RP Xia, X (corresponding author), Monash Univ, Fac Informat Technol, Melbourne, Vic, Australia.
EM jiachi.chen@Monash.edu; xin.xia@monash.edu; davidlo@smu.edu.sg;
   John.Grundy@monash.edu; yangxh@zju.edu.cn
RI Xia, Xin/AAD-6217-2022; Chen, Jiachi/HOC-4256-2023; Grundy,
   John/I-6681-2012; Lo, David/A-2493-2012
OI Xia, Xin/0000-0002-6302-3256; Chen, Jiachi/0000-0002-0192-9992; Lo,
   David/0000-0002-4367-7201
CR Amani S, 2018, VERIFYING ETHEREUM S
   [Anonymous], 2018, P 25 ANN NETW DISTR
   [Anonymous], 2020, IEEE T SOFTW ENG
   AST, 2020, ABSTR SYNT TREE
   Atzei N, 2017, LECT NOTES COMPUT SC, V10204, P164, DOI 10.1007/978-3-662-54455-6_8
   Ayoade G, 2019, SMART CONTRACT DEFEN
   Azzopardi S, 2018, LECT NOTES COMPUT SC, V11237, P113, DOI 10.1007/978-3-030-03769-7_8
   Bartoletti Massimo, 2017, Financial Cryptography and Data Security. FC 2017 International Workshops WAHC, BITCOIN, VOTING, WTSC, and TA. Revised Selected Papers: LNCS 10323, P494, DOI 10.1007/978-3-319-70278-0_31
   Bartoletti M, 2020, FUTURE GENER COMP SY, V102, P259, DOI 10.1016/j.future.2019.08.014
   Beck K., 2011, MANIFESTO AGILE SOFT
   Bez M, 2019, 2019 13TH IEEE INTERNATIONAL CONFERENCE ON SERVICE-ORIENTED SYSTEM ENGINEERING (SOSE) / 10TH INTERNATIONAL WORKSHOP ON JOINT CLOUD COMPUTING (JCC) / IEEE INTERNATIONAL WORKSHOP ON CLOUD COMPUTING IN ROBOTIC SYSTEMS (CCRS), P167, DOI 10.1109/SOSE.2019.00031
   Bhargavan K, 2016, PROCEEDINGS OF THE 2016 ACM WORKSHOP ON PROGRAMMING LANGUAGES AND ANALYSIS FOR SECURITY (PLAS'16), P91, DOI 10.1145/2993600.2993611
   Bigi G, 2015, LECT NOTES COMPUT SC, V9465, P142, DOI 10.1007/978-3-319-25527-9_11
   Bistarelli S., 2019, International Conference on Advanced Information Networking and Applications, P546
   Boehm B., 2005, Found Empirical Softw. Eng., Legacy Victor R Baxili, V426, P426
   BOEHM BW, 1988, COMPUTER, V21, P61, DOI 10.1145/12944.12948
   Bosu A, 2019, EMPIR SOFTW ENG, V24, P2636, DOI 10.1007/s10664-019-09708-7
   Bourque Pierre, 2014, SWEBOK: Guide to the Software Engineering Body of Knowledge, V3rd
   Brent Lexi, 2018, ARXIV180903981
   Bruce J. D., 2014, White paper
   Chakraborty P, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3240298
   Chen J, IEEE T SOFTW ENG
   Chen J, ARXIV200507908
   Chen T, 2020, IEEE T EMERG TOPICS
   Chen T, 2019, PROCEEDINGS OF THE 2019 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'19), P1503, DOI 10.1145/3319535.3345664
   Chen T, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS (ICSE-NIER), P81, DOI 10.1145/3183399.3183420
   Chen WL, 2019, IEEE ACCESS, V7, P37575, DOI 10.1109/ACCESS.2019.2905769
   Chen WL, 2018, WEB CONFERENCE 2018: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW2018), P1409, DOI 10.1145/3178876.3186046
   Chen WL, 2018, IEEE INT SYMP SERV O, P216, DOI 10.1109/SOSE.2018.00036
   Colombo Christian, 2018, Leveraging Applications of Formal Methods, Verification and Validation. Industrial Practice. 8th International Symposium, ISoLA 2018. Proceedings: Lecture Notes in Computer Science (LNCS 11247), P300, DOI 10.1007/978-3-030-03427-6_23
   Conoscenti M., 2017, 2016 IEEEACS 13 INT, P1, DOI [10.1109/AICCSA.2016.7945805, 10.1109/AICCSA.2016 .7945805, DOI 10.1109/AICCSA.2016.7945805]
   ConsenSys, 2020, SMART CONTR BEST PRA
   Costan V., 2016, IACR Cryptol. ePrint Arch, DOI DOI 10.1159/000088809
   Cryptum Obiter, 2019, WHAT IS BLOCKCH
   DApp, 2019, DEC APPL
   Delmolino K, 2016, LECT NOTES COMPUT SC, V9604, P79, DOI 10.1007/978-3-662-53357-4_6
   di Angelo M, 2019, BCC '19: PROCEEDINGS OF THE THIRD ACM WORKSHOP ON BLOCKCHAINS, CRYPTOCURRENCIES AND CONTRACTS, P1, DOI 10.1145/3327959.3329537
   DPoS, 2019, DEL PROOF STAK
   Drechsler R., 2004, ADV FORMAL VERIFICAT, DOI [10.1007/b105236, DOI 10.1007/B105236]
   Durieux T, 2020, PROC INT CONF SOFTW, P530, DOI 10.1145/3377811.3380364
   Efanov D, 2018, PROCEDIA COMPUT SCI, V123, P116, DOI 10.1016/j.procs.2018.01.019
   EIP, 2020, ETH IMPR PROP REP
   EIP150, 2020, EIP150
   ETC, 2018, ETH CLASS
   Ethereum, 2019, ETHEREUM
   Ethstats, 2020, Ethereum network status
   Fabian V, 2018, ERC20
   Fontana FA, 2016, EMPIR SOFTW ENG, V21, P1143, DOI 10.1007/s10664-015-9378-4
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Fröwis M, 2017, LECT NOTES COMPUT SC, V10436, P357, DOI 10.1007/978-3-319-67816-0_20
   Fu Y, 2019, ARXIV190308483
   GasStation, 2020, ETH GAS STAT
   Giger E, 2012, INT SYMP EMP SOFTWAR, P171, DOI 10.1145/2372251.2372285
   Grech N, 2019, GIGAHORSE THOROUGH D
   Grech N, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3276486
   Harz D, 2018, CORR ABS180909805
   He N, 2019, ARXIV190500272
   Hegedus P, 2019, TECHNOLOGIES, V7, DOI 10.3390/technologies7010006
   Hildenbrandt E, 2018, P IEEE COMPUT SECUR, P204, DOI 10.1109/CSF.2018.00022
   Huang R, 2019, IEEE T SOFTW ENG XIA
   Huang T. H.-D., 2018, ARXIV180701868
   Intel, 2015, INT CORP INT SOFTW G
   ISO, 2006, Environmental Management-Life Cycle Assessment-Principles and Framework, P1, DOI DOI 10.1136/BMJ.332.7550.1107
   Jialiang Chang, 2019, Formal Methods and Software Engineering. 21st International Conference on Formal Engineering Methods, ICFEM 2019. Proceedings. Lecture Notes in Computer Science (LNCS 11852), P286, DOI 10.1007/978-3-030-32409-4_18
   Jiang B, 2018, IEEE INT CONF AUTOM, P259, DOI 10.1145/3238147.3238177
   Kiffer L, 2018, IMC'18: PROCEEDINGS OF THE INTERNET MEASUREMENT CONFERENCE, P494, DOI 10.1145/3278532.3278575
   Kim M, 2016, EMERGING ROLE DATA S
   Kitchenham B., 2007, 23 EBSE, DOI DOI 10.1145/1134285.1134500
   Kitchenham BA, 2008, Guide to advanced empirical software engineering, P63, DOI [DOI 10.1007/978-1-84800-044-5_3, 10.1007/ 978-1-84800-044-5_3]
   Kolluri A, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P363, DOI 10.1145/3293882.3330560
   Krupp J, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P1317
   Li XQ, 2020, FUTURE GENER COMP SY, V107, P841, DOI 10.1016/j.future.2017.08.020
   Li ZX, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1198, DOI 10.1109/ASE.2019.00136
   Liu C, 2018, PROC IEEE ACM INT C, P65, DOI 10.1145/3183440.3183495
   Liu H, 2018, IEEE INT CONF AUTOM, P814, DOI 10.1145/3238147.3240728
   LLVM, 2021, LLVM PROJ
   Lohr M, 2020, CEUR WORKSHOP PROC
   Luu L, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P254, DOI 10.1145/2976749.2978309
   Maalej W, 2015, INT REQUIR ENG CONF, P116, DOI 10.1109/RE.2015.7320414
   Macrinici D, 2018, TELEMAT INFORM, V35, P2337, DOI 10.1016/j.tele.2018.10.004
   Marino B, 2016, LECT NOTES COMPUT SC, V9718, P151, DOI 10.1007/978-3-319-42019-6_10
   Mavridou A, 2018, LECT NOTES COMPUT SC, V10957, P523, DOI 10.1007/978-3-662-58387-6_28
   Mohanta BK, 2018, INT CONF COMPUT
   Mossberg M, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1186, DOI 10.1109/ASE.2019.00133
   Mudge N, EIP2535 DIAMOND STAN
   Mushegian N, 2020, EIP140
   Nakamoto Satoshi, 2009, DECENT BUS REV
   Nguyen TD, 2020, PROC INT CONF SOFTW, P778, DOI 10.1145/3377811.3380334
   Nikolic I, 2018, 34TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2018), P653, DOI 10.1145/3274694.3274743
   Nipkow Tobias, 2002, ISABELLE HOL PROOF A, V2283
   Norvill R., 2017, Computer Communication and Networks (ICCCN), 2017 26th International Conference on, P1
   Ong AD, 2000, J APPL SOC PSYCHOL, V30, P1691, DOI 10.1111/j.1559-1816.2000.tb02462.x
   openzeppelin, 2020, OP CONTR
   OpenZeppelin, 2020, OPENZEPPELIN UPGR SM
   Panichella S., 2017, P 2 ACM SIGSOFT INT, P8
   Parizi R.M., 2018, P 28 ANN INT C COMP, P103
   Parizi RM, 2018, LECT NOTES COMPUT SC, V10974, P75, DOI 10.1007/978-3-319-94478-4_6
   Park D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P912, DOI 10.1145/3236024.3264591
   Perez D, 2019, CORR ABS190206710
   Pigoski TM., 1996, Practical Software Maintenance: Best Practices for Managing Your Software Investment
   PoS, 2019, PROOF OF STAKE
   Reyna A, 2018, FUTURE GENER COMP SY, V88, P173, DOI 10.1016/j.future.2018.05.046
   Rodler Michael, 2018, ARXIV181205934
   Schrans F., 2018, P C COMP 2 INT C ART, P218
   SDHardFork, SPUR DRAG HARD FORK
   Segura S, 2016, IEEE T SOFTWARE ENG, V42, P805, DOI 10.1109/TSE.2016.2532875
   Siegel D, 2018, UNDERSTANDING DAO AT
   Software C, 2019, MYTHR SEC AN TOOL EV
   Solidity, 2020, SOL DOC
   Solidity, 2020, REL SOL
   Spencer D., 2009, CARD SORTING DESIGNI
   Swamy N, 2016, ACM SIGPLAN NOTICES, V51, P256, DOI 10.1145/2914770.2837655
   Tai AT, 1998, 1998 IEEE WORKSHOP ON APPLICATION-SPECIFIC SOFTWARE ENGINEERING AND TECHNOLOGY (ASSET 98) - PROCEEDINGS, P69, DOI 10.1109/ASSET.1998.688236
   Tann A, 2018, arXiv preprint arXiv:1811.06632, P1371
   Tikhomirov S, 2018, 2018 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON EMERGING TRENDS IN SOFTWARE ENGINEERING FOR BLOCKCHAIN (WETSEB), P9, DOI 10.1145/3194113.3194115
   Torres CF, 2019, PROCEEDINGS OF THE 2019 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'19), P2589, DOI 10.1145/3319535.3363263
   Torres CF, 2019, PROCEEDINGS OF THE 28TH USENIX SECURITY SYMPOSIUM, P1591
   Torres CF, 2018, 34TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2018), P664, DOI 10.1145/3274694.3274737
   Tsankov P, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P67, DOI 10.1145/3243734.3243780
   Tyagi Pradeep K., 1989, Journal of the Academy of Marketing Science, V17, P235
   Udokwu C, 2018, 2018 IVANNIKOV ISPRAS OPEN CONFERENCE (ISPRAS), P137, DOI 10.1109/ISPRAS.2018.00029
   Velner Yaron, 2017, Financial Cryptography and Data Security. FC 2017 International Workshops WAHC, BITCOIN, VOTING, WTSC, and TA. Revised Selected Papers: LNCS 10323, P298, DOI 10.1007/978-3-319-70278-0_19
   Vukolic M, 2017, BCC '17: PROCEEDINGS OF THE ACM WORKSHOP ON BLOCKCHAIN, CRYPTOCURRENCIES AND CONTRACTS, P3, DOI 10.1145/3055518.3055526
   Vyper, 2020, VYP DOC
   Wan Z., 2018, IEEE T SOFTW ENG
   Wan Z, 2019, IEEE T SOFTW ENG
   Wang HJ, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2019), P1, DOI 10.1109/ICSE-NIER.2019.00009
   Wang X, IEEE T SERV COMPUT
   Wang ZL, 2020, J NETW COMPUT APPL, V154, DOI 10.1016/j.jnca.2020.102530
   Wood G., 2014, Ethereum project yellow paper, V151, P1
   Yan M, 2019, IEEE T SOFTWARE ENG, V45, P1211, DOI 10.1109/TSE.2018.2831232
   Zhang F, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P270, DOI 10.1145/2976749.2978326
   Zhang T, 2019, IEEE T SOFTW ENG
   Zheng ZB, 2020, FUTURE GENER COMP SY, V105, P475, DOI 10.1016/j.future.2019.12.019
   Zheng ZB, 2018, INT J WEB GRID SERV, V14, P352, DOI 10.1504/IJWGS.2018.095647
   Zhou E, 2018, SECURITY ASSURANCE S
   Zou WQ, 2021, IEEE T SOFTWARE ENG, V47, P2084, DOI 10.1109/TSE.2019.2942301
NR 137
TC 4
Z9 5
U1 0
U2 12
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2021
VL 26
IS 6
AR 117
DI 10.1007/s10664-021-10018-0
PG 44
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UF2ZG
UT WOS:000688446300001
DA 2024-07-18
ER

PT J
AU Nguyen-Duc, A
   Kemell, KK
   Abrahamsson, P
AF Nguyen-Duc, Anh
   Kemell, Kai-Kristian
   Abrahamsson, Pekka
TI The entrepreneurial logic of startup software development: A study of 40
   software startups
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software startup engineering; Entrepreneurial logics; Effectuation
   theory; Case study; Effectuation index; Software engineering for
   startups
ID STRATEGIC DECISION-MAKING; DIGITAL ENTREPRENEURSHIP; PRODUCT
   DEVELOPMENT; VENTURE CREATION; EFFECTUATION; CAUSATION; BUSINESS;
   DESIGN; MODEL; OPPORTUNITIES
AB Context Software startups are an essential source of innovation and software-intensive products. The need to understand product development in startups and to provide relevant support are highlighted in software research. While state-of-the-art literature reveals how startups develop their software, the reasons why they adopt these activities are underexplored. Objective This study investigates the tactics behind software engineering (SE) activities by analyzing key engineering events during startup journeys. We explore how entrepreneurial mindsets may be associated with SE knowledge areas and with each startup case. Method Our theoretical foundation is based on causation and effectuation models. We conducted semi-structured interviews with 40 software startups. We used two-round open coding and thematic analysis to describe and identify entrepreneurial software development patterns. Additionally, we calculated an effectuation index for each startup case. Results We identified 621 events merged into 32 codes of entrepreneurial logic in SE from the sample. We found a systemic occurrence of the logic in all areas of SE activities. Minimum Viable Product (MVP), Technical Debt (TD), and Customer Involvement (CI) tend to be associated with effectual logic, while testing activities at different levels are associated with causal logic. The effectuation index revealed that startups are either effectuation-driven or mixed-logics-driven. Conclusions Software startups fall into two types that differentiate between how traditional SE approaches may apply to them. Effectuation seems the most relevant and essential model for explaining and developing suitable SE practices for software startups.
C1 [Nguyen-Duc, Anh] Univ South Eastern, Business Sch, Dept IT & Econ, Bo I, Telemark, Norway.
   [Kemell, Kai-Kristian; Abrahamsson, Pekka] Univ Jyvaskyla, Fac Informat Technol, Jyvaskyla, Finland.
C3 University of Jyvaskyla
RP Nguyen-Duc, A (corresponding author), Univ South Eastern, Business Sch, Dept IT & Econ, Bo I, Telemark, Norway.
EM angu@usn.no
OI Kemell, Kai-Kristian/0000-0002-0225-4560; Nguyen-Duc,
   Anh/0000-0002-7063-9200
CR Alvarez C., 2014, LEAN CUSTOMER DEV
   Alvarez SA, 2005, J MANAGE, V31, P776, DOI 10.1177/0149206305279486
   Nguven-Duc A, 2017, LECT NOTES COMPUT SC, V10611, P265, DOI 10.1007/978-3-319-69926-4_19
   Nguyen-Duc A, 2016, 2016 42ND EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P120, DOI 10.1109/SEAA.2016.21
   Nguyen-Duc A, 2017, LECT NOTES BUS INF P, V283, P20, DOI 10.1007/978-3-319-57633-6_2
   [Anonymous], 2004, XP Ser
   [Anonymous], 2008, GUIDE ADV EMPIRICAL
   [Anonymous], 2008, GUIDE ADV EMPIRICAL
   [Anonymous], 2005, Researching Information Systems and Computing
   [Anonymous], 2013, Lean UX: Applying Lean Principles to Improve User Experience
   Aurum A, 2003, INFORM SOFTWARE TECH, V45, P945, DOI 10.1016/S0950-5849(03)00096-X
   Ayala C, 2018, EMPIR SOFTW ENG, V23, P3073, DOI 10.1007/s10664-017-9594-1
   Bajwa S.S., 2020, FUNDAMENTALS SOFTWAR, P27, DOI DOI 10.1007/978-3-030-35983-6
   Bajwa SS, 2017, EMPIR SOFTW ENG, V22, P2373, DOI 10.1007/s10664-016-9458-0
   BARNEY J, 1991, J MANAGE, V17, P99, DOI 10.1177/014920639101700108
   Barton Cunningham J., 2002, MANAGE DECIS, V40, P734, DOI [10.1108/00251740210437707, DOI 10.1108/00251740210437707]
   Beck K., 2011, MANIFESTO AGILE SOFT
   Berends H, 2014, J PROD INNOVAT MANAG, V31, P616, DOI 10.1111/jpim.12117
   Berg V, 2020, J SYST SOFTWARE, V167, DOI 10.1016/j.jss.2020.110599
   Berg V, 2018, J SYST SOFTWARE, V144, P255, DOI 10.1016/j.jss.2018.06.043
   BLANK S, 2013, MVP IS NOT CHEAPER P
   Blank S., 2012, The Startup Owner's Manual The Step-by-Step Guide for Building a Great Company
   Blank S.G., 2007, The Four Steps to the Epiphany, VThird
   Boland R., 2008, Handbook on Decision Support Systems, P55, DOI DOI 10.1007/978-3-540-48713-5_3)
   Bosch J., 2013, LEAN ENTERPRISE SOFT, V167, DOI [10.1007/978-3-642-44930-7_1, DOI 10.1007/978-3-642-44930-7_1]
   Bourque Pierre, 2014, SWEBOK: Guide to the Software Engineering Body of Knowledge, V3rd
   Boyatzis R., 1998, Transferring qualitative information", V1st
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   Brettel M, 2012, J BUS VENTURING, V27, P167, DOI 10.1016/j.jbusvent.2011.01.001
   Bygrave W.D., 1991, Entrepreneurship Theory and Practice, V16, P13, DOI DOI 10.1177/104225879201600203
   Chandler GN, 2011, J BUS VENTURING, V26, P375, DOI 10.1016/j.jbusvent.2009.10.006
   Cico Orges, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P282, DOI 10.1145/3383219.3383249
   Collis J., 2009, Business Research: A Practical Guide for Undergraduate and Postgraduate Students
   CORBIN J, 1990, Z SOZIOL, V19, P418, DOI 10.1007/BF00988593
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Daher M, 2017, FQS, V18
   Dew N, 2009, J BUS VENTURING, V24, P287, DOI 10.1016/j.jbusvent.2008.02.002
   Duc A., 2016, LNBIP, V251, P118, DOI DOI 10.1007/978-3-319-33515-5
   EISENHARDT KM, 1989, ACAD MANAGE REV, V14, P532, DOI 10.2307/258557
   Fagerholm F, 2017, J SYST SOFTWARE, V123, P292, DOI 10.1016/j.jss.2016.03.034
   Fisher G, 2012, ENTREP THEORY PRACT, V36, P1019, DOI 10.1111/j.1540-6520.2012.00537.x
   Gautam N, 2008, INT J PROD ECON, V114, P313, DOI 10.1016/j.ijpe.2006.12.070
   Gemmell RM, 2012, ENTREP THEORY PRACT, V36, P1053, DOI 10.1111/j.1540-6520.2011.00486.x
   Ghezzi A, 2019, TECHNOL FORECAST SOC, V146, P945, DOI 10.1016/j.techfore.2018.09.017
   Giardino C, 2016, IEEE T SOFTWARE ENG, V42, P585, DOI 10.1109/TSE.2015.2509970
   Giardino C, 2015, LECT NOTES BUS INF P, V212, P52, DOI 10.1007/978-3-319-18612-2_5
   Giardino C, 2014, LECT NOTES BUS INF P, V182, P27
   Giardino C, 2014, IEEE SOFTWARE, V31, P28, DOI 10.1109/MS.2014.129
   Harms R, 2012, J INT ENTREP, V10, P95, DOI 10.1007/s10843-012-0089-2
   Hevner A, 2019, ELECTRON MARK, V29, P407, DOI 10.1007/s12525-019-00334-1
   Highsmith J, 2001, COMPUTER, V34, P120, DOI 10.1109/2.947100
   Hokkanen L, 2015, LECT NOTES BUS INF P, V212, P81, DOI 10.1007/978-3-319-18612-2_7
   Kemell KK, 2019, LECT NOTES BUS INF P, V370, P369, DOI 10.1007/978-3-030-33742-1_29
   Khanna D, 2018, LECT NOTES BUS INF P, V336, P172, DOI 10.1007/978-3-030-04840-2_12
   Khurum M, 2015, INFORM SOFTWARE TECH, V57, P595, DOI 10.1016/j.infsof.2014.06.010
   Klotins E, 2019, IEEE T SOFTW ENG, DOI [10.1109/TSE20192900213, DOI 10.1109/TSE20192900213]
   Klotins E, 2019, EMPIR SOFTW ENG, V24, P68, DOI 10.1007/s10664-018-9620-y
   Kruchten P, 2012, IEEE SOFTWARE, V29, P18, DOI 10.1109/MS.2012.167
   Ladd T., 2015, ACAD MANAGE P, V2015, DOI [10.5465/ambpp.2015.11415abstract, DOI 10.5465/AMBPP.2015.11415ABSTRACT]
   Lindgren E, 2016, INFORM SOFTWARE TECH, V77, P80, DOI 10.1016/j.infsof.2016.04.008
   Mansoori Y., 2015, Entrepreneurial methods
   Mansoori Y, 2020, SMALL BUS ECON, V54, P791, DOI 10.1007/s11187-019-00153-w
   McKelvie A, 2020, SMALL BUS ECON, V54, P689, DOI 10.1007/s11187-019-00149-6
   Melegati J, 2019, INFORM SOFTWARE TECH, V109, P92, DOI 10.1016/j.infsof.2019.02.001
   Melo CD, 2013, INFORM SOFTWARE TECH, V55, P412, DOI 10.1016/j.infsof.2012.09.004
   Nambisan S, 2017, ENTREP THEORY PRACT, V41, P1029, DOI 10.1111/etap.12254
   Nguven-Duc A, 2020, FUNDAMENTALS SOFTWAR, V1st
   Nguyen-Duc A., 2015, Hunter-gatherer cycle: a conceptual model of the evolution of software startups, V24-26, P199
   Norman D., 1986, USER CENTERED SYSTEM, P1986, DOI [10.1201/b15703, DOI 10.1201/B15703]
   Nummela N, 2014, MANAGE INT REV, V54, P527, DOI 10.1007/s11575-014-0211-x
   Ojala A, 2016, INFORM SYST J, V26, P451, DOI 10.1111/isj.12078
   Ojala A, 2016, J SYST SOFTWARE, V113, P408, DOI 10.1016/j.jss.2015.11.004
   Pantiuchina J, 2017, LECT NOTES BUS INF P, V283, P167, DOI 10.1007/978-3-319-57633-6_11
   Paternoster N, 2014, INFORM SOFTWARE TECH, V56, P1200, DOI 10.1016/j.infsof.2014.04.014
   Pitchbook, 2019, 4Q 2018 PITCHBOOK NV
   Ralph P, 2016, INFORM SOFTWARE TECH, V70, P232, DOI 10.1016/j.infsof.2015.06.010
   Read S, 2009, J BUS VENTURING, V24, P573, DOI 10.1016/j.jbusvent.2008.02.005
   Reymen I, 2017, R&D MANAGE, V47, P595, DOI 10.1111/radm.12249
   Reymen IMMJ, 2015, STRATEG ENTREP J, V9, P351, DOI 10.1002/sej.1201
   Ries E, 2011, The Lean Startup
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sarasvathy S, 2005, Scandinavian Journal of Management, V21, P385, DOI [101016/jscaman200509009, DOI 10.1016/J.SCAMAN.2005.09.009]
   Sarasvathy SD, 2001, ACAD MANAGE REV, V26, P243, DOI 10.2307/259121
   Sarasvathy SD, 2005, J EVOL ECON, V15, P533, DOI 10.1007/s00191-005-0264-x
   Seaman C, 2011, ADV COMPUT, V82, P25, DOI 10.1016/B978-0-12-385512-1.00002-5
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Signoretti I, 2019, INT SYMP EMP SOFTWAR, P213
   Smolka KM, 2018, ENTREP THEORY PRACT, V42, P571, DOI [10.1177/1042258718783429, 10.1111/etap.12266]
   Steininger DM, 2019, INFORM SYST J, V29, P363, DOI 10.1111/isj.12206
   Stol KJ, 2016, PROC INT CONF SOFTW, P120, DOI 10.1145/2884781.2884833
   Sutton SM, 2000, IEEE SOFTWARE, V17, P33, DOI 10.1109/52.854066
   Tell P, 2019, 2019 IEEE/ACM INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESSES (ICSSP 2019), P105, DOI 10.1109/ICSSP.2019.00022
   Tripathi N, 2019, INFORM SOFTWARE TECH, V114, P77, DOI 10.1016/j.infsof.2019.06.008
   Tripathi N, 2018, J SYST SOFTWARE, V146, P130, DOI 10.1016/j.jss.2018.08.059
   Trochim W.M., 2001, Research Methods Knowledge Base, V2
   TUCKMAN BW, 1965, PSYCHOL BULL, V63, P384, DOI 10.1037/h0022100
   Unterkalmsteiner M, 2016, E-INFORMATICA, V10, P89, DOI 10.5277/e-Inf160105
   VONHIPPEL E, 1986, MANAGE SCI, V32, P791, DOI 10.1287/mnsc.32.7.791
   Walsham G, 1995, INFORM SYST RES, V6, P376, DOI 10.1287/isre.6.4.376
   Weick K., 1995, SENSEMAKING ORG
   Weick KE, 2005, ORGAN SCI, V16, P409, DOI 10.1287/orsc.1050.0133
   Wiltbank R, 2006, STRATEGIC MANAGE J, V27, P981, DOI 10.1002/smj.555
   Wohlin C, 2015, EMPIR SOFTW ENG, V20, P1427, DOI 10.1007/s10664-014-9319-7
   Yaman SG, 2016, LECT NOTES COMPUT SC, V9619, P249, DOI 10.1007/978-3-319-30282-9_18
   Yin R.K., 2011, Qualitative research from start to finish
NR 105
TC 8
Z9 8
U1 2
U2 35
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2021
VL 26
IS 5
AR 91
DI 10.1007/s10664-021-09987-z
PG 55
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TE8OZ
UT WOS:000670267700001
DA 2024-07-18
ER

PT J
AU Pereira, R
   Matalonga, H
   Couto, M
   Castor, F
   Cabral, B
   Carvalho, P
   de Sousa, SM
   Fernandes, JP
AF Pereira, Rui
   Matalonga, Hugo
   Couto, Marco
   Castor, Fernando
   Cabral, Bruno
   Carvalho, Pedro
   de Sousa, Simao Melo
   Fernandes, Joao Paulo
TI GreenHub: a large-scale collaborative dataset to battery consumption
   analysis of android devices
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Green software; Green mining; Android; Battery consumption analysis
AB Context The development of solutions to improve battery life in Android smartphones and the energy efficiency of apps running on them is hindered by diversity. There are more than 24k Android smartphone models in the world. Moreover, there are multiple active operating system versions, and a myriad application usage profiles. Objective In such a high-diversity scenario, profiling for energy has only limited applicability. One would need to obtain information about energy use in real usage scenarios to make informed, effective decisions about energy optimization. The goal of our work is to understand how Android usage, apps, operating systems, hardware, and user habits influence battery lifespan. Method We leverage crowdsourcing to collect information about energy in real-world usage scenarios. This data is collected by a mobile app, which we developed and made available to the public through Google Play store, and periodically uploaded to a centralized server and made publicly available to researchers, app developers, and smartphone manufacturers through multiple channels (SQL, REST API, zipped CSV/Parquet dump). Results This paper presents the results of a wide analysis of the tendency several smart-phone characteristics have on the battery charge/discharge rate, such as the different models, brands, networks, settings, applications, and even countries. Our analysis was performed over the crowdsourced data, and we have presented findings such as which applications tend to be around when battery consumption is the highest, do users from different countries have the same battery usage, and even showcase methods to help developers find and improve energy inefficient processes. The dataset we considered is sizable; it comprises 23+ million (anonymous) data samples stemming from a large number of installations of the mobile app. Moreover, it includes 700+ million data points pertaining to processes running on these devices. In addition, the dataset is diverse. It covers 1.6k+ device brands, 11.8k+ smartphone models, and more than 50 Android versions. We have been using this dataset to perform multiple analyses. For example, we studied what are the most common apps running on these smartphones and related the presence of those apps in memory with the battery discharge rate of these devices. We have also used this dataset in teaching, having had students practicing data analysis and machine learning techniques for relating energy consumption/charging rates with many other hardware and software qualities, attributes and user behaviors. Conclusions The dataset we considered can support studies with a wide range of research goals, be those energy efficiency or not. It opens the opportunity to inform and reshape user habits, and even influence the development of both hardware (manufacturers) and software (developers) for mobile devices. Our analysis also shows results which go outside of the common perception of what impacts battery consumption in real-world usage, while exposing new varied, complex, and promising research avenues.
C1 [Pereira, Rui] Univ Beira Interior, C4 Ctr Competencias Cloud Comp C4 UBI, Rua Marques Avila & Bolama, P-6201001 Covilha, Portugal.
   [Pereira, Rui; Couto, Marco] INESC Tec, HASLab, Porto, Portugal.
   [Matalonga, Hugo; Couto, Marco] Univ Minho, Braga, Portugal.
   [Castor, Fernando] Univ Fed Pernambuco, Recife, PE, Brazil.
   [Cabral, Bruno; Carvalho, Pedro; Fernandes, Joao Paulo] Univ Coimbra, CISUC, DEI, Coimbra, Portugal.
   [de Sousa, Simao Melo] Univ Beira Interior, C4 Lab Release, NOVA, LINCS, Covilha, Portugal.
C3 Universidade da Beira Interior; INESC TEC; Universidade do Minho;
   Universidade Federal de Pernambuco; Universidade de Coimbra;
   Universidade da Beira Interior
RP Pereira, R (corresponding author), Univ Beira Interior, C4 Ctr Competencias Cloud Comp C4 UBI, Rua Marques Avila & Bolama, P-6201001 Covilha, Portugal.
EM rui.alexandre.pereira@ubi.pt; hugo@hmatalonga.com;
   marco.l.couto@inesctec.pt; castor@cin.ufpe.br; bcabral@dei.uc.pt;
   pfcarvalho@student.dei.uc.pt; desousa@di.ubi.pt; jpf@dei.uc.pt
RI Pereira, Rui/GMW-9448-2022; Fernandes, João/IUN-2117-2023; Castor,
   Fernando/V-4011-2018; Fernandes, Joao Paulo/A-1929-2013; Melo de Sousa,
   Simao/M-3195-2013
OI Pereira, Rui/0000-0002-5801-7345; Castor, Fernando/0000-0002-6389-3630;
   Cabral, Bruno/0000-0001-9699-1133; Fernandes, Joao
   Paulo/0000-0002-1952-9460; Melo de Sousa, Simao/0000-0001-9129-4136;
   Couto, Marco/0000-0003-2333-6095
FU FCT - Foundation for Science and Technology, I.P. [CISUC -
   UID/CEC/00326/2020, UIDB/50014/2020]; European Social Fund, through the
   Regional Operational Program Centro 2020; C4 - Centro de Competencias em
   Cloud Computing [Centro-01-0145-FEDER-000019]; European Regional
   Development Fund (ERDF) through the Programa Operacional Regional do
   Centro (Centro 2020); CNPq/Brazil [304755/2014-1, 406308/2016-0];
   FACEPE/Brazil [APQ-0839-1.03/14]; INES 2.0; FACEPE grants [PRONEX APQ
   0388-1.03/14, APQ-0399-1.03/17]; CNPq [465614/2014-0]; NOVA LINCS
   [UIDB/04516/2020]; FCT - Foundation for Science and Technology
   [SFRH/BD/132485/2017]; Erasmus+ Key Action 2 (Strategic partnership for
   higher education) project [2020-1-PT01-KA203-078646];  [C4_SMDS_L1-1_D];
   Fundação para a Ciência e a Tecnologia [SFRH/BD/132485/2017] Funding
   Source: FCT
FX This research and work is funded: by national funds through the FCT -
   Foundation for Science and Technology, I.P., within the scope of the
   project CISUC - UID/CEC/00326/2020, project UIDB/50014/2020, and by
   European Social Fund, through the Regional Operational Program Centro
   2020; by operation Centro-01-0145-FEDER-000019 - C4 - Centro de
   Competencias em Cloud Computing, co-financed by the European Regional
   Development Fund (ERDF) through the Programa Operacional Regional do
   Centro (Centro 2020), in the scope of the Sistema de Apoio a
   InvestigacAo Cientifica e Tecnologica - Programas Integrados de IC & DT;
   by CNPq/Brazil (304755/2014-1, 406308/2016-0), FACEPE/Brazil
   (APQ-0839-1.03/14), and INES 2.0, FACEPE grants PRONEX APQ 0388-1.03/14
   and APQ-0399-1.03/17, and CNPq grant 465614/2014-0; by NOVA LINCS
   (UIDB/04516/2020) with the financial support of FCT - Foundation for
   Science and Technology; The first author was financed by post-doc grant
   reference C4_SMDS_L1-1_D and the third author financed by FCT grant
   SFRH/BD/132485/2017; Additionally, this paper acknowledges the support
   of the Erasmus+ Key Action 2 (Strategic partnership for higher
   education) project No. 2020-1-PT01-KA203-078646: "SusTrainable -
   Promoting Sustainability as a Fundamental Driver in Software Development
   Training and Education". The information and views set out in this paper
   are those of the author(s) and do not necessarily reflect the official
   opinion of the European Union. Neither the European Union institutions
   and bodies nor any person acting on their behalf may be held responsible
   for the use which may be made of the information contained therein.
CR Anderson MJ, 2001, AUSTRAL ECOL, V26, P32, DOI 10.1046/j.1442-9993.2001.01070.x
   Chon Y, 2016, UBICOMP'16: PROCEEDINGS OF THE 2016 ACM INTERNATIONAL JOINT CONFERENCE ON PERVASIVE AND UBIQUITOUS COMPUTING, P958, DOI 10.1145/2971648.2971728
   CLARKE KR, 1993, AUST J ECOL, V18, P117, DOI 10.1111/j.1442-9993.1993.tb00438.x
   Couto M, 2017, PROCEEDINGS OF THE 21ST BRAZILIAN SYMPOSIUM ON PROGRAMMING LANGUAGES (SBLP 2017), DOI 10.1145/3125374.3125382
   Cruz Luis, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P46, DOI 10.1109/MOBILESoft.2017.19
   Di Nucci D, 2017, PROC IEEE ACM INT C, P3, DOI 10.1109/ICSE-C.2017.18
   Di Nucci D, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P103, DOI 10.1109/SANER.2017.7884613
   Fu B, 2013, 19TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'13), P1276
   Guo Y, 2017, IEEE ACCESS, V5, P13387, DOI 10.1109/ACCESS.2017.2728620
   Harris, 2018, OUR PHONES GADGETS A
   Hasan S, 2016, PROC INT CONF SOFTW, P225, DOI 10.1145/2884781.2884869
   Hoque MA, 2015, ACM COMPUT SURV, V48, DOI 10.1145/2840723
   Hu Y, 2017, SCI COMPUT PROGRAM
   Inc. A, 2018, INSTR OV
   Incorporated Q, 2014, TREPN PROF
   Jabbarvand R, 2015, 2015 IEEE/ACM FOURTH INTERNATIONAL WORKSHOP ON GREEN AND SUSTAINABLE SOFTWARE (GREENS), P8, DOI 10.1109/GREENS.2015.9
   Khalid H, 2015, IEEE SOFTWARE, V32, P70, DOI 10.1109/MS.2014.50
   Li D., 2014, P 3 INT WORKSHOP GRE, P46, DOI DOI 10.1145/2593743.2593750
   Li D, 2013, P 2013 INT S SOFTW T, P78, DOI DOI 10.1145/2483760.2483780
   Li D, 2016, PROC INT CONF SOFTW, P249, DOI 10.1145/2884781.2884867
   Lima LG, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P517, DOI 10.1109/SANER.2016.85
   Lin Kaisen., 2010, P 8 INT C MOBILE SYS, P285, DOI DOI 10.1145/1814433.1814462
   Linares-Vasquez M., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, P2
   Linares-Vásquez M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P143, DOI 10.1145/2786805.2786847
   LLC G, 2018, INSP EN US EN PROF
   LLC G, 2014, PROF BATT US BATT BA
   Manotas I, 2016, PROC INT CONF SOFTW, P237, DOI 10.1145/2884781.2884810
   Matalonga Hugo, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P171, DOI 10.1109/MSR.2019.00034
   Mickle T, 2018, Your phone is almost out of battery. Remain calm. Call a doctor
   Oliner AJ, 2013, P 11 ACM C EMB NETW
   Oliveira Wellington, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P160, DOI 10.1109/MSR.2019.00033
   Oliveira W, 2017, IEEE WORK CONF MIN S, P42, DOI 10.1109/MSR.2017.66
   Pang C, 2016, IEEE SOFTWARE, V33, P83, DOI 10.1109/MS.2015.83
   Pathak Abhijit D., 2012, Proceedings of the PCIM ASIA 2012. International Conference and Exhibition for Power Electronics, Intelligent Motion, Renewable Energy and Energy Management, P29
   Pereira Rui, 2016, 2016 IEEE/ACM 5th International Workshop on Green and Sustainable Software (GREENS), P15, DOI 10.1109/GREENS.2016.011
   Pereira R, 2018, IEEE INT CONF AUTOM, P856, DOI 10.1145/3238147.3240473
   Pereira R, 2017, SLE'17: PROCEEDINGS OF THE 10TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING, P256, DOI 10.1145/3136014.3136031
   Pinto G., 2014, P 11 WORK C MIN SOFT, P22
   Pinto G, 2017, COMMUN ACM, V60, P68, DOI 10.1145/3154384
   Pinto G, 2016, PROC IEEE INT CONF S, P20, DOI 10.1109/ICSME.2016.34
   Richter, 2018, MOST WANT SMARTPH FE
   SHIFFLER RE, 1988, AM STAT, V42, P79, DOI 10.2307/2685269
   Tung L, 2015, ANDROID FRAGMENTATIO
   Urdan T., 2016, STAT PLAIN ENGLISH
   Wan M, 2017, SOFTW TEST VERIF REL, V27, DOI 10.1002/stvr.1635
NR 45
TC 4
Z9 4
U1 2
U2 7
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR 20
PY 2021
VL 26
IS 3
AR 38
DI 10.1007/s10664-020-09925-5
PG 55
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RA0BV
UT WOS:000631084500001
DA 2024-07-18
ER

PT J
AU Mondal, M
   Roy, B
   Roy, CK
   Schneider, KA
AF Mondal, Manishankar
   Roy, Banani
   Roy, Chanchal K.
   Schneider, Kevin A.
TI ID-correspondence: a measure for detecting evolutionary coupling
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Evolutionary coupling; Co-change; Support; Confidence; Identifier
   correspondence
ID CODE
AB Evolutionary coupling is a well investigated phenomenon in software maintenance research and practice. Association rules and two related measures, support and confidence, have been used to identify evolutionary coupling among program entities. However, these measures only emphasize the co-change (i.e., changing together) frequency of entities and cannot determine whether the entities co-evolved by experiencing related changes. Consequently, the approach reports false positives and fails to detect evolutionary coupling among infrequently co-changed entities. We propose a new measure, identifier correspondence (id-correspondence), that quantifies the extent to which changes that occurred to the co-changed entities are related based on identifier similarity. Identifiers are the names given to different program entities such as variables, methods, classes, packages, interfaces, structures, unions etc. We use Dice-Sorensen co-efficient for measuring lexical similarity between the identifiers involved in the changed lines of the co-changed entities. Our investigation on thousands of revisions from nine subject systems covering three programming languages shows that id-correspondence can considerably improve the detection accuracy of evolutionary coupling. It outperforms the existing state-of-the-art evolutionary coupling based techniques with significantly higher recall and F-score in predicting future co-change candidates.
C1 [Mondal, Manishankar] Khulna Univ, Comp Sci & Engn Discipline, Khulna, Bangladesh.
   [Roy, Banani; Roy, Chanchal K.; Schneider, Kevin A.] Univ Saskatchewan, Dept Comp Sci, Saskatoon, SK, Canada.
C3 Khulna University; University of Saskatchewan
RP Mondal, M (corresponding author), Khulna Univ, Comp Sci & Engn Discipline, Khulna, Bangladesh.
EM mshankar@cseku.ac.bd; banani.roy@usask.ca; chanchal.roy@usask.ca;
   kevin.schneider@usask.ca
RI Schneider, Kevin/KQV-5113-2024
OI Schneider, Kevin/0000-0003-1113-1754
FU Natural Sciences and Engineering Research Council of Canada (NSERC);
   Canada First Research Excellence Fund (CFREF); Global Institute for
   Water Security (GIWS)
FX This research is supported by the Natural Sciences and Engineering
   Research Council of Canada (NSERC), and by two Canada First Research
   Excellence Fund (CFREF) grants coordinated by the Global Institute for
   Food Security (GIFS) and the Global Institute for Water Security (GIWS).
CR Agrawal R., 1993, SIGMOD Record, V22, P207, DOI 10.1145/170036.170072
   Ahsan S. N., 2011, 2011 Proceedings of Joint Conf of 21st Int'l Workshop on Software Measurement and the 6th Int'l Conference on Software Process and Product Measurement (IWSM-MENSURA 2011), P257, DOI 10.1109/IWSM-MENSURA.2011.38
   Alali A, 2013, IEEE WORK CONF MIN S, P169, DOI 10.1109/MSR.2013.6624024
   Ali N, 2013, WORK CONF REVERSE EN, P361, DOI 10.1109/WCRE.2013.6671311
   Bantelay F, 2013, WORK CONF REVERSE EN, P311, DOI 10.1109/WCRE.2013.6671306
   Bavota G, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P692, DOI 10.1109/ICSE.2013.6606615
   Brindescu C, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P322, DOI 10.1145/2568225.2568322
   Canfora G, 2006, PROC IEEE INT CONF S, P213
   Canfora Gerardo., 2010, P IEEE INT C SOFTWAR, P1
   Ceccarelli M., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P163, DOI 10.1145/1810295.1810320
   D'Ambros M, 2006, WORK CONF REVERSE EN, P189
   DICE LR, 1945, ECOLOGY, V26, P297, DOI 10.2307/1932409
   Gall H, 2003, SIXTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P13
   Gall H, 1998, PROC IEEE INT CONF S, P190, DOI 10.1109/ICSM.1998.738508
   Hanakawa N, 2007, 14TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P214, DOI 10.1109/ASPEC.2007.36
   Hotta K., 2010, JOINT ERCIM WORK SHO, P73
   Islam JF, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P68, DOI 10.1109/SANER.2016.78
   Islam MA, 2018, IEEE INT WORK C SO, P113, DOI 10.1109/SCAM.2018.00020
   Itkonen J, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P233, DOI 10.1109/CSMR.2004.1281424
   Jaafar F., 2011, 2011 18th Working Conference on Reverse Engineering, P325, DOI 10.1109/WCRE.2011.47
   Kagdi H., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P119, DOI 10.1109/WCRE.2010.21
   Kagdi H, 2013, EMPIR SOFTW ENG, V18, P933, DOI 10.1007/s10664-012-9233-9
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kotsiantis Sotiris, 2006, GESTS International Transactions on Computer Science and Engineering, V32, P71
   Krinke J., 2011, P 5 INT WORKSHOP SOF, P28
   Lozano A., 2010, IWSC, V10, P65, DOI [10.1145/1808901.1808910, DOI 10.1145/1808901.1808910]
   Lozano A, 2008, PROC IEEE INT CONF S, P227, DOI 10.1109/ICSM.2008.4658071
   Mondal M, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P93, DOI [10.1109/SANER48275.2020.9054846, 10.1109/saner48275.2020.9054846]
   Mondal M, 2019, PROC IEEE INT CONF S, P157, DOI 10.1109/ICSME.2019.00026
   Mondal M, 2018, EMPIR SOFTW ENG, V23, P693, DOI 10.1007/s10664-017-9528-y
   Mondal M, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 3, P44, DOI 10.1109/SANER.2016.53
   Mondal M, 2012, APPL COMPUT REV, V12, P20, DOI 10.1145/2387358.2387360
   Mondal M, 2014, SCI COMPUT PROGRAM, V95, P445, DOI 10.1016/j.scico.2013.11.027
   Mondal M, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P358, DOI 10.1109/CSMR-WCRE.2014.6747194
   Mondal M, 2013, CONF PROC INT SYMP C, P223, DOI 10.1109/ICPC.2013.6613853
   Mondol MA, 2020, IEEE INT CONF DISTR, P11, DOI 10.1109/DCOSS49796.2020.00016
   Oliva G. A., 2011, Proceedings of the 2011 25th Brazilian Symposium on Software Engineering (SBES 2011), P144, DOI 10.1109/SBES.2011.39
   Poshyvanyk D, 2006, PROC IEEE INT CONF S, P469
   Pugh S, 2018, IEEE INT WORK C SO, P129, DOI 10.1109/SCAM.2018.00022
   Robbes R, 2008, WORK CONF REVERSE EN, P42, DOI 10.1109/WCRE.2008.47
   Rolfsnes T, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P201, DOI 10.1109/SANER.2016.101
   Romano J, 2006, ANN M FLOR ASS I RES, P1
   Sorensen T.A., 1948, BIOL SKRIFTER, V5, P1
   Tantithamthavorn C, 2013, 2013 14TH ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, ARTIFICIAL INTELLIGENCE, NETWORKING AND PARALLEL/DISTRIBUTED COMPUTING (SNPD 2013), P543, DOI 10.1109/SNPD.2013.92
   Wenzel S, 2007, PROC IEEE INT CONF S, P174
   Wong S., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P293, DOI 10.1109/ASE.2011.6100065
   Xiaobing Sun, 2010, 2010 IEEE Proceedings of 34th Annual Computer Software and Applications Conference (COMPSAC 2010), P373, DOI 10.1109/COMPSAC.2010.45
   Ying ATT, 2004, IEEE T SOFTWARE ENG, V30, P574, DOI 10.1109/TSE.2004.52
   Zimmermann T, 2004, PROC INT CONF SOFTW, P563, DOI 10.1109/ICSE.2004.1317478
NR 49
TC 0
Z9 0
U1 0
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN 12
PY 2021
VL 26
IS 1
AR 5
DI 10.1007/s10664-020-09921-9
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA PV7VA
UT WOS:000610190100001
DA 2024-07-18
ER

PT J
AU Trautsch, A
   Herbold, S
   Grabowski, J
AF Trautsch, Alexander
   Herbold, Steffen
   Grabowski, Jens
TI A longitudinal study of static analysis warning evolution and the
   effects of PMD on software quality in Apache open source projects
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Static code analysis; Quality evolution; Software metrics; Software
   quality
ID ANALYSIS TOOLS
AB Automated static analysis tools (ASATs) have become a major part of the software development workflow. Acting on the generated warnings, i.e., changing the code indicated in the warning, should be part of, at latest, the code review phase. Despite this being a best practice in software development, there is still a lack of empirical research regarding the usage of ASATs in the wild. In this work, we want to study ASAT warning trends in software via the example of PMD as an ASAT and its usage in open source projects. We analyzed the commit history of 54 projects (with 112,266 commits in total), taking into account 193 PMD rules and 61 PMD releases. We investigate trends of ASAT warnings over up to 17 years for the selected study subjects regarding changes of warning types, short and long term impact of ASAT use, and changes in warning severities. We found that large global changes in ASAT warnings are mostly due to coding style changes regarding braces and naming conventions. We also found that, surprisingly, the influence of the presence of PMD in the build process of the project on warning removal trends for the number of warnings per lines of code is small and not statistically significant. Regardless, if we consider defect density as a proxy for external quality, we see a positive effect if PMD is present in the build configuration of our study subjects.
C1 [Trautsch, Alexander; Herbold, Steffen; Grabowski, Jens] Univ Goettingen, Inst Comp Sci, Gottingen, Germany.
C3 University of Gottingen
RP Trautsch, A (corresponding author), Univ Goettingen, Inst Comp Sci, Gottingen, Germany.
EM alexander.trautsch@cs.uni-goettingen.de
RI Trautsch, Alexander/ABH-7306-2020
OI Trautsch, Alexander/0000-0001-5236-7953; Herbold,
   Steffen/0000-0001-9765-2803
FU Projekt DEAL
FX Open Access funding provided by Projekt DEAL.
CR Abdi H, 2007, ENCY MEASUREMENT STA, P103, DOI DOI 10.4135/9781412952644
   Aloraini B, 2019, J SYST SOFTWARE, V158, DOI 10.1016/j.jss.2019.110427
   [Anonymous], 2007, PROMISE 07, DOI DOI 10.1109/PROMISE.2007.10
   Aversano Lerina., 2007, PROC THE 6 EUROPEAN, P385, DOI [DOI 10.1145/1287624.1287680, 10.1145/1287624.1287680.]
   Bakota T., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P243, DOI 10.1109/ICSM.2011.6080791
   Beller M, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P470, DOI 10.1109/SANER.2016.105
   Bird C, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P1, DOI 10.1109/MSR.2009.5069475
   Boehm B. W., 1976, 2nd International Conference on Software Engineering, P592
   BROWN MB, 1974, J AM STAT ASSOC, V69, P364, DOI 10.2307/2285659
   CAMPBELL MJ, 1988, BRIT MED J, V296, P1454, DOI 10.1136/bmj.296.6634.1454
   Christakis M, 2016, IEEE INT CONF AUTOM, P332, DOI 10.1145/2970276.2970347
   Cohen J., 1988, STAT POWER ANAL BEHA
   Devanbu P, 2016, PROC INT CONF SOFTW, P108, DOI 10.1145/2884781.2884812
   Di Penta M, 2009, INFORM SOFTWARE TECH, V51, P1469, DOI 10.1016/j.infsof.2009.04.013
   Digkas G, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P153, DOI 10.1109/SANER.2018.8330205
   Dijkstra E., 1959, NUMER MATH, V1, P269, DOI [DOI 10.1007/BF01386390, 10.1007/bf01386390]
   Distefano D, 2019, COMMUN ACM, V62, P62, DOI 10.1145/3338112
   Faragó C, 2015, LECT NOTES COMPUT SC, V9159, P3, DOI 10.1007/978-3-319-21413-9_1
   Fenton N. E., 1998, Software metrics: a rigorous and practical approach
   Ferenc R, 2020, SOFTWARE QUAL J, V28, P1447, DOI 10.1007/s11219-020-09515-0
   Ferenc Rudolf., 2014, Evolving Software Systems, P65, DOI DOI 10.1007/978-3-642-45398-4_3
   Fowler M., 1999, Refactoring: Improving the Design of Existing Code
   Habib A, 2018, IEEE INT CONF AUTOM, P317, DOI 10.1145/3238147.3238213
   Hagberg A. A., 2008, EXPLORING NETWORK ST, P11, DOI DOI 10.1016/J.JELECTROCARD.2010.09.003
   Heckman S, 2011, INFORM SOFTWARE TECH, V53, P363, DOI 10.1016/j.infsof.2010.12.007
   Heckman S, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P161, DOI 10.1109/ICST.2009.45
   Herbold S, 2019, ARXIV 191108938
   Johnson B, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P672, DOI 10.1109/ICSE.2013.6606613
   Jones E., 2001, SciPy: Open source scientific tools for Python
   Kendall M. G., 1948, Rank correlation methods.
   Kim S, 2007, P 6 JOINT M EUR SOFT, P45, DOI DOI 10.1145/1287624.1287633
   Kim S., 2007, 4 INT WORKSHOP MININ, P27, DOI DOI 10.1109/MSR.2007.26
   Kitchenham B, 1996, IEEE SOFTWARE, V13, P12, DOI 10.1109/52.476281
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Kreyszig E., 2000, Advanced Engineering Mathematics: Maple Computer Guide, V8th
   Kruchten P, 2012, IEEE SOFTWARE, V29, P18, DOI 10.1109/MS.2012.167
   Lehman MeirM., 1997, Lecture Notes in Computer Science, V1149, P108
   Liu K, 2021, IEEE T SOFTWARE ENG, V47, P165, DOI 10.1109/TSE.2018.2884955
   liwerski J, 2005, ACM SIGSOFT SOFTWARE, V30, P1, DOI [10.1145/1082983.1083147, DOI 10.1145/1083142.1083147, DOI 10.1145/1082983.1083147]
   Malloy BA, 2019, EMPIR SOFTW ENG, V24, P751, DOI 10.1007/s10664-018-9637-2
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Marcilio D, 2019, INT C PROGRAM COMPRE, P209, DOI 10.1109/ICPC.2019.00040
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   McCall J., 1977, Factors in software quality, V1
   Panichella S, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P161, DOI 10.1109/SANER.2015.7081826
   Plosch R., 2008, Proceedings of the 2008 32nd Annual IEEE Software Engineering Workshop. SEW 2008, P169, DOI 10.1109/SEW.2008.17
   Querel LP, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P892, DOI 10.1145/3236024.3264599
   Rahman F, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P424, DOI 10.1145/2568225.2568269
   Rosen C, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P966, DOI 10.1145/2786805.2803183
   Sadowski C, 2018, COMMUN ACM, V61, P58, DOI 10.1145/3188720
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   Spearman C, 1904, AM J PSYCHOL, V15, P72, DOI 10.2307/1412159
   Szoke G, 2014, IEEE INT WORK C SO, P95, DOI 10.1109/SCAM.2014.18
   Thung F, 2012, IEEE INT CONF AUTOM, P50, DOI 10.1145/2351676.2351685
   Trautsch A, 2020, LONGITUDINAL STUDY S
   Trautsch F, 2018, EMPIR SOFTW ENG, V23, P1036, DOI 10.1007/s10664-017-9537-x
   Tufano M, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1838
   Vassallo C, 2020, EMPIR SOFTW ENG, V25, P1419, DOI 10.1007/s10664-019-09750-5
   Vetro Antonio, 2011, 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), P144, DOI 10.1049/ic.2011.0018
   Wagner S, 2012, PROC INT CONF SOFTW, P1133, DOI 10.1109/ICSE.2012.6227106
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Zampetti F, 2017, IEEE WORK CONF MIN S, P334, DOI 10.1109/MSR.2017.2
   Zheng J, 2006, IEEE T SOFTWARE ENG, V32, P240, DOI 10.1109/TSE.2006.38
NR 63
TC 12
Z9 15
U1 0
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2020
VL 25
IS 6
BP 5137
EP 5192
DI 10.1007/s10664-020-09880-1
EA SEP 2020
PG 56
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA OI4BB
UT WOS:000571711800001
OA hybrid
DA 2024-07-18
ER

PT J
AU Alami, A
   Nielsen, PA
   Wasowski, A
AF Alami, Adam
   Nielsen, Peter Axel
   Wasowski, Andrzej
TI A tailored participatory action research for foss communities
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Participatory Action Research; FOSS; Change implementation
ID OPEN-SOURCE SOFTWARE; ACTION-RESEARCH-PROJECT; INTRINSIC MOTIVATION
AB Participatory Action Research (PAR) is an established method to implement change in organizations. However, it cannot be applied in the open source (FOSS) communities, without adaptation to their particularities, especially to the specific control mechanisms developed in FOSS. FOSS communities are self-managed, and rely on consensus to reach decisions. This study proposes a PAR framework specifically tailored to FOSS communities. We successfully applied the framework to implement a set of quality assurance interventions in the Robot Operating System community. The framework we proposed is composed of three components, interventions design, democratization, and execution. We believe that this process will work for other FOSS communities too. We have learned that changing a particular aspect of a FOSS community is arduous. To achieve success the change must rally the community around it for support and attract motivated volunteers to implement the interventions.
C1 [Alami, Adam; Wasowski, Andrzej] IT Univ Copenhagen, Rued Langgaards Vej 7, DK-2300 Copenhagen, Denmark.
   [Nielsen, Peter Axel] Aalborg Univ, Selma Lagerlofs Vej 300, DK-9220 Aalborg, Denmark.
C3 IT University Copenhagen; Aalborg University
RP Alami, A (corresponding author), IT Univ Copenhagen, Rued Langgaards Vej 7, DK-2300 Copenhagen, Denmark.
EM adaa@itu.dk; pan@cs.aau.dk; wasowski@itu.dk
RI Alami, Adam/KBR-2703-2024
OI Alami, Adam/0000-0003-4483-0105; Wasowski, Andrzej/0000-0003-0532-2685;
   Nielsen, Peter Axel/0000-0002-0282-7445
FU EU's H2020 research and innovation programme [732287 ROSIN]
FX This work is supported by the EU's H2020 research and innovation
   programme, grant No 732287 ROSIN. We thank the volunteers for their work
   in the implementation of interventions. We thank the ROS quality
   assurance working group members for their ongoing inputs, advice and
   participation in the process.
CR Alami A, 2018, P 11 INT WORKS COOP
   [Anonymous], MIS Q
   [Anonymous], P 29 INT C SOFTW ENG
   [Anonymous], 2003, FLOSS US FREE LIBRE
   [Anonymous], 2001 P 34 ANN HAW IN
   Anthes G, 2016, COMMUN ACM, V59
   Baskerville R, 1998, EUROPEAN J INFORM SY, V7
   Baskerville R. L., 1999, Communications of the association for information systems, V2, P2, DOI [https://doi.org/10.17705/1CAIS.00219, DOI 10.17705/1CAIS.00219]
   Baum F, 2006, J EPIDEMIOL COMMUN H, V60, P854, DOI 10.1136/jech.2004.028662
   Bitzer J, 2007, J COMP ECON, V35, P160, DOI 10.1016/j.jce.2006.10.001
   Bretthauer D, 2002, INFORM TECHNOL LIBR, V21, P3
   Campbell-Kelly M, 2008, COMMUN ACM, V51, P21, DOI 10.1145/1400181.1400189
   Capiluppi A, 2009, 2009 CSMR 09 13 EUR
   Dedding C., 2020, Educational Action Research, V29, P1
   Dittrich Y, 2008, EMPIR SOFTW ENG, V13, P231, DOI 10.1007/s10664-007-9057-1
   Donnelly C., 2012, The Role of Action Research in the Study of Small Business Marketing and Retailer Loyalty Card Data
   Elliott MS, 2008, INFORM TECHNOLOGY PE, V21
   Farnsworth V, 2016, BRIT J EDUC STUD, V64, P139, DOI 10.1080/00071005.2015.1133799
   German D. M., 2003, Software Process Improvement and Practice, V8, P201, DOI 10.1002/spip.189
   Ghosh R.A., 2005, PERSPECTIVES FREE OP
   Ghosh RA, 2002, SURVEY STUDY
   GREENWOOD DJ, 1993, HUM RELAT, V46, P175, DOI 10.1177/001872679304600203
   Gustafsson S, 2018, SCAND J OCCUP THER, V25, P347, DOI 10.1080/11038128.2018.1502345
   Home R, 2015, J AGRIC EDUC EXT, V21, P73, DOI 10.1080/1389224X.2014.991112
   Kemmis S., 2005, Participatory action research: Communicative action and the public sphere, V3rd
   Kemmis StephenRobin McTaggart Rhonda Nixon., 2013, The Action Research Planner: Doing Critical Participatory Action Research
   Kindon SL, 2007, ROUTL STUD HUM GEOGR, V22, P1
   Kogut B, 2001, OXFORD REV ECON POL, V17, P248, DOI 10.1093/oxrep/17.2.248
   Krafft MF, 2010, THESIS
   Lakhani K., 2005, Perspectives on Free and Open Source Software, P1, DOI [10.2139/ssrn.443040, DOI 10.2139/SSRN.443040]
   Mathiassen L., 2002, Information Technology & People, V15, P321, DOI 10.1108/09593840210453115
   McTaggart R., 1997, Participatory action research: International contexts and consequences, P25
   Meyer J, 2000, Age Ageing, V29 Suppl 2, P8
   Miles M. B., 1984, Qualitative data analysis: An expanded sourcebook
   oZbek S.C., 2011, THESIS
   Rajaram SS, 2007, TEACH SOCIOL, V35, P138, DOI 10.1177/0092055X0703500203
   RANA OF, 2004, DISTRIBUTED SYSTEMS, V5, P1
   Ryan RM, 2000, CONTEMP EDUC PSYCHOL, V25, P54, DOI 10.1006/ceps.1999.1020
   Ryan RM, 2000, AM PSYCHOL, V55, P68, DOI 10.1037/0003-066X.55.1.68
   Scacchi W, 2004, IEEE SOFTWARE, V21, P59, DOI 10.1109/MS.2004.1259221
   SCACCHI W, 2005, SOFTWARE PROCESS MOD
   Scacchi W, 2002, IEE P-SOFTW, V149
   Scacchi W, 2007, ADV COMPUT, V69
   Scully MA, 2015, WILEY ENCY MANAGEMEN, P1, DOI DOI 10.1002/9781118785317.WEOM020075
   Skopik F, 2009, 2009 35TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, PROCEEDINGS, P72, DOI 10.1109/SEAA.2009.20
   Stringer E. T., 2013, Action research, V4th
NR 46
TC 1
Z9 1
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2020
VL 25
IS 5
BP 3639
EP 3670
DI 10.1007/s10664-020-09849-0
EA AUG 2020
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA NJ1FD
UT WOS:000555768800001
DA 2024-07-18
ER

PT J
AU Zhang, ZY
   Sun, HL
   Zhang, HY
AF Zhang, Zhenyu
   Sun, Hailong
   Zhang, Hongyu
TI Developer recommendation for Topcoder through a meta-learning based
   policy model
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Topcoder; Developer recommendation; Meta-learning; Crowdsourcing
   software development
ID SYSTEM
AB Crowdsourcing Software Development (CSD) has emerged as a new software development paradigm. Topcoder is now the largest competition-based CSD platform. Many organizations use Topcoder to outsource their software tasks to crowd developers in the form of open challenges. To facilitate timely completion of the crowdsourced tasks, it is important to find right developers who are more likely to win a challenge. Recently, many developer recommendation methods for CSD platforms have been proposed. However, these methods often make unrealistic assumptions about developer status or application scenarios. For example, they consider only skillful developers or only developers registered with the challenges. In this paper, we propose a meta-learning based policy model, which firstly filters out those developers who are unlikely to participate in or submit to a given challenge and then recommend the top k developers with the highest possibility of winning the challenge. We have collected Topcoder data between 2009 and 2018 to evaluate the proposed approach. The results show that our approach can successfully identify developers for posted challenges regardless of the current registration status of the developers. In particular, our approach works well in recommending new winners. The accuracy for top-5 recommendation ranges from 30.1% to 91.1%, which significantly outperforms the results achieved by the related work.
C1 [Zhang, Zhenyu; Sun, Hailong] Beihang Univ, Sch Comp Sci, SKLSDE Lab, Engn, Beijing, Beijing, Peoples R China.
   [Zhang, Zhenyu; Sun, Hailong] Beihang Univ, Beijing Adv Innovat Ctr Big Data, Brain Comp, Beijing, Beijing, Peoples R China.
   [Zhang, Hongyu] Univ Newcastle, Callaghan, Australia.
C3 Beihang University; Beihang University; University of Newcastle
RP Sun, HL (corresponding author), Beihang Univ, Sch Comp Sci, SKLSDE Lab, Engn, Beijing, Beijing, Peoples R China.
EM sunhl@buaa.edu.cn
RI zhang, hongyu/ABC-3702-2021; zhang, zhenyu/HOA-8440-2023
OI zhang, hongyu/0000-0002-3063-9425; 
CR Abadi M, 2016, PROCEEDINGS OF OSDI'16: 12TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P265
   Abhinav K, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P93, DOI 10.1109/ICSE-SEIP.2017.23
   Aggarwal C. C., 2016, RECOMMENDER SYSTEMS, P139, DOI DOI 10.1007/978-3-319-29659-3
   Al-Shedivat Maruan., 2017, CoRR
   Alelyani T., 2016, P 2 INT WORKSH SOFTW, P36
   [Anonymous], 2009, CONC SYST, P1
   [Anonymous], 2017, Meta networks
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Archak N, 2010, P 19 INT C WORLD WO, P21
   Avazpour I, 2014, Recomm Syst Softw Eng, P245
   Baba Y, 2016, EXPERT SYST APPL, V58, P174, DOI 10.1016/j.eswa.2016.04.010
   Begel Andrew, 2012, P ACM 2012 C COMPUTE, P17
   Brazdil P., 2008, Metalearning: Applications to data mining
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Calefato F, 2018, INFORM SOFTWARE TECH, V94, P186, DOI 10.1016/j.infsof.2017.10.009
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chen T, HIGH PERFORMANCE IMP
   Chen TQ, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P785, DOI 10.1145/2939672.2939785
   Choetkiertikul M, 2015, 2015 24TH AUSTRALASIAN SOFTWARE ENGINEERING CONFERENCE (ASWEC 2015), P155, DOI 10.1109/ASWEC.2015.28
   Chollet F, 2015, KERAS
   Chowdhury A., 2002, Proceedings of SIGIR 2002. Twenty-Fifth Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, P421
   Cui C, 2016, EXPERT SYST APPL, V46, P33, DOI 10.1016/j.eswa.2015.10.021
   Cui Q., 2017, P SEKE, P218
   Cunha T, 2018, INFORM SCIENCES, V423, P128, DOI 10.1016/j.ins.2017.09.050
   Domingos P, 2000, SEVENTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-2001) / TWELFTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE (IAAI-2000), P564
   Dubey A, 2017, PROC IEEE ACM INT C, P115, DOI 10.1109/ICSE-C.2017.145
   Dwarakanath A, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P41, DOI 10.1145/2889160.2889225
   EDWARDS JR, 1993, J APPL PSYCHOL, V78, P628, DOI 10.1037/0021-9010.78.4.628
   Fu Y, 2017, 6TH INTERNATIONAL WORKSHOP ON SOFTWARE MINING (SOFTWAREMINING), P32, DOI 10.1109/SOFTWAREMINING.2017.8100851
   Geurts P, 2006, MACH LEARN, V63, P3, DOI 10.1007/s10994-006-6226-1
   Goodfellow I, 2016, ADAPT COMPUT MACH LE, P1
   Gu XD, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P631, DOI 10.1145/2950290.2950334
   Hannebauer C, 2016, IEEE INT CONF AUTOM, P99, DOI 10.1145/2970276.2970306
   Hasteer N, 2016, PROCEDIA COMPUT SCI, V78, P48, DOI 10.1016/j.procs.2016.02.009
   Hauff C, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P362, DOI 10.1109/MSR.2015.41
   Hazan Elad, 2017, arXiv
   He HB, 2008, IEEE IJCNN, P1322, DOI 10.1109/IJCNN.2008.4633969
   Hinton GE, 2006, SCIENCE, V313, P504, DOI 10.1126/science.1127647
   Hu H, 2014, PROC INT SYMP SOFTW, P122, DOI 10.1109/ISSRE.2014.17
   Karim M. R., 2018, P WMNC 2017 10 WIR M, P1
   Khanfor A, 2017, ASIA PAC SOFWR ENG, P495, DOI 10.1109/APSEC.2017.56
   Khasraghi HJ, 2014, BEHAV INFORM TECHNOL, V33, P1383, DOI 10.1080/0144929X.2014.883551
   Li W, 2015, PROGR IS, P1, DOI 10.1007/978-3-662-47011-4
   Mao K, 2017, J SYST SOFTWARE, V126, P57, DOI 10.1016/j.jss.2016.09.015
   Mao K, 2015, 9TH IEEE INTERNATIONAL SYMPOSIUM ON SERVICE-ORIENTED SYSTEM ENGINEERING (SOSE 2015), P347, DOI 10.1109/SOSE.2015.46
   Navarro DJ, 2012, COGNITIVE SCI, V36, P187, DOI 10.1111/j.1551-6709.2011.01212.x
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Ponzanelli L, 2017, PROC INT CONF SOFTW, P94, DOI 10.1109/ICSE.2017.17
   Porto F., 2018, ARXIV180206025
   Powers DMW, 2020, J MACH LEARN TECHNOL, P37, DOI DOI 10.9735/2229-3981
   Procaci TB, 2016, IEEE INT CONF ADV LE, P407, DOI 10.1109/ICALT.2016.68
   Le Q, 2014, PR MACH LEARN RES, V32, P1188
   Rice J. R., 1976, Advances in computers, vol.15, P65, DOI 10.1016/S0065-2458(08)60520-3
   Sanjana N.E, 2003, ADV NEURAL INFORM PR, P59
   Saremi RL, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P103, DOI 10.1109/ICSE-SEIP.2017.2
   Saremi RL, 2015, SECOND INTERNATIONAL WORKSHOP ON CROWDSOURCING IN SOFTWARE ENGINEERING CSI-SE 2015, P17, DOI 10.1109/CSI-SE.2015.11
   Stol Klass-Jan., 2014, Proceedings of the 1st International Workshop on CrowdSourcing in Software Engineering, P7, DOI DOI 10.1145/2593728.2593731
   Tantithamthavorn C, 2016, PROC INT CONF SOFTW, P321, DOI 10.1145/2884781.2884857
   Valentini G, 2002, LECT NOTES COMPUT SC, V2364, P222
   Wang W, 2016, P 2016 INT C INT INF, P14
   Wang ZZ, 2017, IEEE INT CONF AUTOM, P717, DOI 10.1109/ASE.2017.8115682
   Yang Ye, 2016, P 10 ACMIEEE INT S E, P8
   Ye LT, 2018, IEEE INT CONF AUTOM, P808, DOI 10.1145/3238147.3240472
   Yuan WZ, 2018, PROC IEEE ACM INT C, P364, DOI 10.1145/3183440.3195011
   Zanatta AL, 2018, 2018 IEEE/ACM 5TH INTERNATIONAL WORKSHOP ON CROWD SOURCING IN SOFTWARE ENGINEERING (CSI-SE), P9, DOI 10.1145/3195863.3195869
NR 65
TC 14
Z9 18
U1 0
U2 27
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN
PY 2020
VL 25
IS 1
BP 859
EP 889
DI 10.1007/s10664-019-09755-0
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA KP0WS
UT WOS:000515965100022
DA 2024-07-18
ER

PT J
AU Al-Subaihin, A
   Sarro, F
   Black, S
   Capra, L
AF Al-Subaihin, Afnan
   Sarro, Federica
   Black, Sue
   Capra, Licia
TI Empirical comparison of text-based mobile apps similarity measurement
   techniques
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE App store analysis; Software clustering; Mobile applications Clustering;
   Feature extraction; Cluster analysis
ID COEFFICIENT
AB Context Code-free software similarity detection techniques have been used to support different software engineering tasks, including clustering mobile applications (apps). The way of measuring similarity may affect both the efficiency and quality of clustering solutions. However, there has been no previous comparative study of feature extraction methods used to guide mobile app clustering. Objective In this paper, we investigate different techniques to compute the similarity of apps based on their textual descriptions and evaluate their effectiveness using hierarchical agglomerative clustering. Method To this end we carry out an empirical study comparing five different techniques, based on topic modelling and keyword feature extraction, to cluster 12,664 apps randomly sampled from the Google Play App Store. The comparison is based on three main criteria: silhouette width measure, human judgement and execution time. Results The results of our study show that using topic modelling, in addition to collocation-based and dependency-based feature extractors perform similarly in detecting app-feature similarity. However, dependency-based feature extraction performs better than any other in finding application domain similarity (rho = 0.7,p - value < 0.01). Conclusions Current categorisation in the app store studied does not exhibit a good classification quality in terms of the claimed feature space. However, a better quality can be achieved using a good feature extraction technique and a traditional clustering method.
C1 [Al-Subaihin, Afnan; Sarro, Federica; Capra, Licia] UCL, Dept Comp Sci, London, England.
   [Al-Subaihin, Afnan] King Saud Univ, CCIS, Riyadh, Saudi Arabia.
   [Black, Sue] Univ Durham, Dept Comp Sci, Durham, England.
C3 University of London; University College London; King Saud University;
   Durham University
RP Al-Subaihin, A (corresponding author), UCL, Dept Comp Sci, London, England.; Al-Subaihin, A (corresponding author), King Saud Univ, CCIS, Riyadh, Saudi Arabia.
EM a.alsubaihin@cs.ucl.ac.uk; f.sarro@ucl.ac.uk; Sue.black@durham.ac.uk;
   l.capra@ucl.ac.uk
RI AlSubaihin, Afnan/AAH-4185-2021
OI AlSubaihin, Afnan/0000-0003-4693-5349; Sarro,
   Federica/0000-0002-9146-442X
CR Al-Subaihin A., 2015, P 3 INT WORKSH SOFTW, P1, DOI DOI 10.1145/2804345.2804346
   Al-Subaihin AA, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962600
   AlSubaihin A., 2019, IEEE Transactions on Software Engineering, P1
   [Anonymous], ON DEMAND FEATURE RE
   [Anonymous], 2008, COLING 2008 P WORKSH
   Arnaoudova V, 2015, USE TEXT RETRIEVAL N
   Avdiienko V, 2017, PROC IEEE ACM INT C, P201, DOI 10.1109/ICSE-C.2017.130
   Babbie E.R., 1998, PRACTICE SOCIAL RES, V112
   Bakiu E, 2017, 2017 IEEE 25TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW), P182, DOI 10.1109/REW.2017.76
   BARTKO JJ, 1966, PSYCHOL REP, V19, P3, DOI 10.2466/pr0.1966.19.1.3
   Berardi G, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P585, DOI 10.1145/2695664.2695997
   Blei DM, 2003, TECHNICAL REPORT
   CAN F, 1990, ACM T DATABASE SYST, V15, P483, DOI 10.1145/99935.99938
   Chen N, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P767, DOI 10.1145/2568225.2568263
   Chen N, 2015, WSDM'15: PROCEEDINGS OF THE EIGHTH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING, P305, DOI 10.1145/2684822.2685305
   Cheng S., 2015, THESIS
   COHEN J, 1968, PSYCHOL BULL, V70, P426, DOI 10.1037/h0026714
   Crussell J., 2013, European Symposium on Research in Computer Security, P182
   Davril JM, 2013, P 2013 9 JOINT M FDN
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   Di Sorbo A, 2017, PROC IEEE ACM INT C, P55, DOI 10.1109/ICSE-C.2017.5
   Di Sorbo A, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P499, DOI 10.1145/2950290.2950299
   Escobar-Avila J, 2015, INT C PROGRAM COMPRE, P229, DOI 10.1109/ICPC.2015.33
   Finkelstein A., 2014, RN, V14, P10
   Finkelstein A, 2017, INFORM SOFTWARE TECH, V87, P119, DOI 10.1016/j.infsof.2017.03.002
   FLEISS JL, 1971, PSYCHOL BULL, V76, P378, DOI 10.1037/h0031619
   FOWLKES EB, 1983, J AM STAT ASSOC, V78, P553, DOI 10.2307/2288117
   Gorla A, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1025, DOI 10.1145/2568225.2568276
   Griffiths TL, 2004, P NATL ACAD SCI USA, V101, P5228, DOI 10.1073/pnas.0307752101
   Gu XD, 2015, IEEE INT CONF AUTOM, P760, DOI 10.1109/ASE.2015.57
   Gui J, 2017, TECHNICAL REPORT
   Guzman E, 2014, INT REQUIR ENG CONF, P153, DOI 10.1109/RE.2014.6912257
   Hariri N, 2013, IEEE T SOFTWARE ENG, V39, P1736, DOI 10.1109/TSE.2013.39
   Harman M, 2016, 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2016), P243, DOI 10.1109/MobileSoft.2016.051
   Harman M., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P108, DOI 10.1109/MSR.2012.6224306
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   HUBERT L, 1985, J CLASSIF, V2, P193, DOI 10.1007/BF01908075
   Iacob C, 2013, IEEE WORK CONF MIN S, P41, DOI 10.1109/MSR.2013.6624001
   JELINEK F, 1977, J ACOUST SOC AM, V62, pS63, DOI 10.1121/1.2016299
   Jiang H, 2013, BMC OPHTHALMOL, V13, DOI 10.1186/1471-2415-13-66
   Kim JE, 2013, PLOS ONE, V8, DOI 10.1371/journal.pone.0074458
   Kuznetsov K., 2016, Proceedings of the International Workshop on App Market Analytics, P1, DOI [DOI 10.1145/2993259.2993265, 10.1145/2993259, DOI 10.1145/2993259]
   Lim SL, 2015, IEEE T SOFTWARE ENG, V41, P40, DOI 10.1109/TSE.2014.2360674
   Linares-Vasquez M, 2016, 24 IEEE INT C PROGR
   Lu M, 2017, P 21 C EV ASS SOFTW
   LUHN HP, 1957, IBM J RES DEV, V1, P309, DOI 10.1147/rd.14.0309
   Lulu David., 2013, International Conference on Intelligent User Interfaces, P297
   Martin DD, 2013, INTERACT CURRENT, P123
   Martin W., 2015, TECHNICAL REPORT
   Martin W, 2017, IEEE T SOFTWARE ENG, V43, P817, DOI 10.1109/TSE.2016.2630689
   Martin W, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P435, DOI 10.1145/2950290.2950320
   McMillan C., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P343, DOI 10.1109/ICSM.2011.6080801
   McMillan C, 2012, PROC INT CONF SOFTW, P848, DOI 10.1109/ICSE.2012.6227134
   Mokarizadeh S, 2013, 9 INT C WEB INF SYST
   Morrison P, 2013, INT WORK SOFTW, P46, DOI 10.1109/SEHC.2013.6602477
   Nagappan M, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 5, P21, DOI 10.1109/SANER.2016.88
   Nayebi M., 2018, EMPIR SOFTW ENG, P1
   Nayebi Maleknaz., 2016, International Workshop on App Market Analytics, P30
   Pandita Rahul, 2013, USENIX SECURITY 13, P527
   Panichella S, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P1023, DOI 10.1145/2950290.2983938
   Panichella S, 2015, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSM.2015.7332474
   Pearson K., 1895, P R SOC LOND, V58, P240, DOI [DOI 10.1098/RSPL.1895.0041, 10.1098/rspl.1895.0041]
   Phan Xuan-Hieu, 2008, P 17 INT C WORLD WID, P91
   Robertson S, 2004, J DOC, V60, P503, DOI 10.1108/00220410410560582
   ROUSSEEUW PJ, 1987, J COMPUT APPL MATH, V20, P53, DOI 10.1016/0377-0427(87)90125-7
   SALTON G, 1988, INFORM PROCESS MANAG, V24, P513, DOI 10.1016/0306-4573(88)90021-0
   Sanz B, 2012, CONSUM COMM NETWORK, P149, DOI 10.1109/CCNC.2012.6181075
   Sarro F, 2015, 23 IEEE INT REQ ENG
   Sarro Federica, 2018, P 26 IEEE INT REQ EN
   Scalabrino S, 2017, IEEE T SOFT ENG, P1
   Seneviratne S, 2015, PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW 2015), P949, DOI 10.1145/2736277.2741084
   Shabtai A., 2010, Proceedings 2010 International Conference on Computational Intelligence and Security (CIS 2010), P329, DOI 10.1109/CIS.2010.77
   SPARCKJONES K, 1972, J DOC, V28, P11, DOI 10.1108/eb026526
   Spearman C, 1904, AM J PSYCHOL, V15, P72, DOI 10.2307/1412159
   Sutcliffe A, 2013, S VIS LANG HUM CEN C, P92, DOI 10.1109/RE.2013.6636709
   Vakulenko S, 2014, P 31 INT C INF SYST
   Viennot N., 2014, 2014 ACM INT C MEAS, P221, DOI DOI 10.1145/2637364.2592003
   Wallach H. M., 2006, P 23 INT C MACH LEAR, V23, P977, DOI DOI 10.1145/1143844.1143967
   Wang T, 2013, PROC IEEE INT CONF S, P240, DOI 10.1109/ICSM.2013.35
   Zhu HS, 2014, IEEE T MOBILE COMPUT, V13, P1550, DOI 10.1109/TMC.2013.113
NR 80
TC 18
Z9 19
U1 0
U2 8
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2019
VL 24
IS 6
BP 3290
EP 3315
DI 10.1007/s10664-019-09726-5
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA JT6XW
UT WOS:000501131100003
OA Green Accepted, Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Jha, N
   Mahmoud, A
AF Jha, Nishant
   Mahmoud, Anas
TI Mining non-functional requirements from App store reviews
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Requirements elicitation; Non-functional requirements; Application
   store; Classification
ID MOBILE; CLASSIFICATION
AB User reviews obtained from mobile application (app) stores contain technical feedback that can be useful for app developers. Recent research has been focused on mining and categorizing such feedback into actionable software maintenance requests, such as bug reports and functional feature requests. However, little attention has been paid to extracting and synthesizing the Non-Functional Requirements (NFRs) expressed in these reviews. NFRs describe a set of high-level quality constraints that a software system should exhibit (e.g., security, performance, usability, and dependability). Meeting these requirements is a key factor for achieving user satisfaction, and ultimately, surviving in the app market. To bridge this gap, in this paper, we present a two-phase study aimed at mining NFRs from user reviews available on mobile app stores. In the first phase, we conduct a qualitative analysis using a dataset of 6,000 user reviews, sampled from a broad range of iOS app categories. Our results show that 40% of the reviews in our dataset signify at least one type of NFRs. The results also show that users in different app categories tend to raise different types of NFRs. In the second phase, we devise an optimized dictionary-based multi-label classification approach to automatically capture NFRs in user reviews. Evaluating the proposed approach over a dataset of 1,100 reviews, sampled from a set of iOS and Android apps, shows that it achieves an average precision of 70% (range [66% - 80%]) and average recall of 86% (range [69% - 98%]).
C1 [Jha, Nishant; Mahmoud, Anas] Louisiana State Univ, Div Comp Sci & Engn, Baton Rouge, LA 70803 USA.
C3 Louisiana State University System; Louisiana State University
RP Mahmoud, A (corresponding author), Louisiana State Univ, Div Comp Sci & Engn, Baton Rouge, LA 70803 USA.
EM njha1@lsu.edu; amahmo4@lsu.edu
CR [Anonymous], 2012, Service Science, DOI [10.1287/serv.1120.0004, DOI 10.1287/SERV.1120.0004]
   [Anonymous], 2015, MAICS
   [Anonymous], ARXIV151201818
   [Anonymous], 2010, LIT SURVEY ALGORITHM
   [Anonymous], 2005, Proceedings of the 14th ACM International Conference on Information and Knowledge Management, CIKM'05, DOI [DOI 10.1145/1099554.1099591, 10.1145/1099554.1099591]
   Apte C., 1994, SIGIR '94. Proceedings of the Seventeenth Annual International ACM-SIGIR Conference on Research and Development in Information Retrieval, P23
   Bailetti T, 2016, TECHNOL INNOV MANAG, P15
   Bakiu E, 2017, 2017 IEEE 25TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW), P182, DOI 10.1109/REW.2017.76
   Bano M, 2017, EMPIR SOFTW ENG, V22, P2339, DOI 10.1007/s10664-016-9465-1
   Berry DM, 2017, 2017 IEEE 25TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW), P284, DOI 10.1109/REW.2017.25
   Bi W, 2014, AAAI CONF ARTIF INTE, P1680
   Bird S., 2009, Sentiment in short strength detection informal text, V61, P2544
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Brinker K, 2006, FRONT ARTIF INTEL AP, V141, P489
   Brusilovsky P., 2007, The Adaptive Web: Methods and Strategies of Web Personalization, P335
   Burges CJC, 1998, DATA MIN KNOWL DISC, V2, P121, DOI 10.1023/A:1009715923555
   Carreño LVG, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P582, DOI 10.1109/ICSE.2013.6606604
   Chen N, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P767, DOI 10.1145/2568225.2568263
   Cheng W., 2009, International Workshop on Learning from Multi-Label Data, P28
   Chung L, 2009, LECT NOTES COMPUT SC, V5600, P363, DOI 10.1007/978-3-642-02463-4_19
   Ciurumelea A, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P91, DOI 10.1109/SANER.2017.7884612
   Cleland-Huang J, 2005, PROC INT CONF SOFTW, P362
   Cleland-Huang J, 2007, REQUIR ENG, V12, P103, DOI 10.1007/s00766-007-0045-1
   Cleland-Huang J, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P39
   Coulton P, 2011, INT J MOB HUM COMPUT, V3, P55, DOI 10.4018/jmhci.2011100104
   Dehlinger J., 2011, Proceedings of the Workshop on Mobile Software Engineering, P29
   Eisenstein J, 2014, PLOS ONE, V9, DOI 10.1371/journal.pone.0113114
   Elisseeff A, 2002, ADV NEUR IN, V14, P681
   Ester M., 1996, KDD 96, P226, DOI DOI 10.5555/3001460.3001507
   Finkelstein A., 2014, RN, V14, P10
   FORMAN GH, 1994, COMPUTER, V27, P38, DOI 10.1109/2.274999
   Fu B, 2013, 19TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'13), P1276
   Giardino C, 2014, LECT NOTES BUS INF P, V182, P27
   Glinz M, 2007, INT REQUIR ENG CONF, P21, DOI 10.1109/RE.2007.45
   Godbole S, 2004, LECT NOTES ARTIF INT, V3056, P22
   GOKCAY D, 1995, 1995 IEEE INTERNATIONAL CONFERENCE ON SYSTEMS, MAN AND CYBERNETICS, VOLS 1-5, P3174, DOI 10.1109/ICSMC.1995.538271
   Gómez M, 2017, IEEE SOFTWARE, V34, P81, DOI 10.1109/MS.2017.46
   Gotel Orlena, 2011, SOFTWARE SYSTEMS TRA, P343
   Gralha W, 2018, INT C SOFTW ENG
   Groen EC, 2017, INT REQUIR ENG CONF, P80, DOI 10.1109/RE.2017.73
   Gross D., 2001, Requirements Engineering, V6, P18, DOI 10.1007/s007660170013
   Guzman E, 2014, INT REQUIR ENG CONF, P153, DOI 10.1109/RE.2014.6912257
   Harman M., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P108, DOI 10.1109/MSR.2012.6224306
   Harrison R., 2013, J INTERACTION SCI, V1, P1, DOI [10.1186/2194-0827-1-1, DOI 10.1186/2194-0827-1-1]
   Hattori LP, 2008, 2008 23RD IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING WORKSHOPS, PROCEEDINGS, P147
   Hindle A., 2014, Working Conference on Mining Software Repositories, P21
   Hutto C, 2014, INT AAAI C WEBL SOC
   Ihm SY, 2013, 2013 IEEE THIRD INTERNATIONAL CONFERENCE ON CLOUD AND GREEN COMPUTING (CGC 2013), P561, DOI 10.1109/CGC.2013.95
   Javarone MA, 2013, EUR PHYS J B, V86, DOI 10.1140/epjb/e2013-40662-5
   Jha N, 2018, EMPIR SOFTW ENG, V23, P3734, DOI 10.1007/s10664-018-9605-x
   Jha N, 2017, LECT NOTES COMPUT SC, V10153, P273, DOI 10.1007/978-3-319-54045-0_20
   Joachims Thorsten, 1998, EUROPEAN C MACHINE L, P137, DOI 10.1007/
   Johann T, 2017, INT REQUIR ENG CONF, P21, DOI 10.1109/RE.2017.71
   Jongeling R, 2017, EMPIR SOFTW ENG, V22, P2543, DOI 10.1007/s10664-016-9493-x
   Kurtanovic Z, 2017, INT REQUIR ENG CONF, P61, DOI 10.1109/RE.2017.86
   Lee G., 2011, Americas Conference Information Systems, P3912
   Lewis D.D, 1998, EUR C MACH LEARN, P4
   Li J, 2017, IEEE SYST J, V11, P439, DOI 10.1109/JSYST.2015.2415835
   Lin B, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P94, DOI 10.1145/3180155.3180195
   Luaces O, 2012, PROG ARTIF INTELL, V1, P303, DOI 10.1007/s13748-012-0030-x
   Maalej W, 2016, REQUIR ENG, V21, P311, DOI 10.1007/s00766-016-0251-9
   Maalej W, 2015, INT REQUIR ENG CONF, P116, DOI 10.1109/RE.2015.7320414
   Mahatanankoon P, 2005, COMPUT STAND INTER, V27, P347, DOI 10.1016/j.csi.2004.10.003
   Mahmoud A, 2016, REQUIR ENG, V21, P357, DOI 10.1007/s00766-016-0252-8
   Mairiza D., 2010, P 2010 ACM S APPL CO, P311, DOI DOI 10.1145/1774088.1774153
   Martin W., 2016, IEEE Transactions on Software Engineering (TSE), VPP, P1
   Martin W, 2017, IEEE T SOFTWARE ENG, V43, P817, DOI 10.1109/TSE.2016.2630689
   Martin W, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P435, DOI 10.1145/2950290.2950320
   Martin W, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P123, DOI 10.1109/MSR.2015.19
   McCallum A., 1998, AAAI 98 WORKSH LEARN, V752, P41, DOI DOI 10.1109/TSMC.1985.6313426
   McIlroy S, 2016, EMPIR SOFTW ENG, V21, P1067, DOI 10.1007/s10664-015-9375-7
   Nayebi M, 2018, EMPIR SOFTW ENG, V23, P2764, DOI 10.1007/s10664-018-9601-1
   Nayebi M, 2017, INT SYMP EMP SOFTWAR, P324, DOI 10.1109/ESEM.2017.46
   Nayebi M, 2017, INT REQUIR ENG CONF, P388, DOI 10.1109/RE.2017.72
   Nayebi M, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P552, DOI 10.1109/SANER.2016.116
   Nguyen-Duc A., 2016, Agile processes, in software engineering, and extreme programming, P118, DOI [10.1007/978-3-319-33515-510, DOI 10.1007/978-3-319-33515-510, DOI 10.1007/978-3-319-33515-5_10]
   Nuseibeh B, 2001, COMPUTER, V34, P115, DOI 10.1109/2.910904
   Pagano D, 2013, S VIS LANG HUM CEN C, P125, DOI 10.1109/RE.2013.6636712
   Panichella S, 2015, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSM.2015.7332474
   Paternoster N, 2014, INFORM SOFTWARE TECH, V56, P1200, DOI 10.1016/j.infsof.2014.04.014
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Petsas Thanasis., 2013, P 2013 C INTERNET ME, P277, DOI DOI 10.1145/2504730.2504749
   Quinlan J. R., 1986, Machine Learning, V1, P81, DOI 10.1007/BF00116251
   Read J, 2008, IEEE DATA MINING, P995, DOI 10.1109/ICDM.2008.74
   Regnell B, 2007, LECT NOTES COMPUT SC, V4542, P277
   Tsoumakas G., 2009, P INT WORKSH LEARN M, P101, DOI DOI 10.1109/ICCI-CC.2015.7259416
   Villarroel L, 2016, PROC INT CONF SOFTW, P14, DOI 10.1145/2884781.2884818
   Wasserman A.I., 2010, Proceedings of the FSE/SDP Workshop on Future of Software Engineering Research, P397, DOI [DOI 10.1145/1882362.1882443, 10.1145/1882362.1882443]
   Williams G, 2018, INT REQUIR ENG CONF, P64, DOI 10.1109/RE.2018.00-51
   Williams G, 2017, INT REQUIR ENG CONF, P1, DOI 10.1109/RE.2017.14
   Williams G, 2017, 2017 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON EMOTION AWARENESS IN SOFTWARE ENGINEERING (SEMOTION 2017), P2, DOI 10.1109/SEmotion.2017.1
   Wilson T., 2005, P C HUM LANG TECHN E, P347, DOI [10.3115/1220575.1220619, DOI 10.3115/1220575.1220619]
   Wohlin C, 2012, WESSLEN EXPT SOFTWAR
NR 93
TC 47
Z9 52
U1 3
U2 16
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2019
VL 24
IS 6
BP 3659
EP 3695
DI 10.1007/s10664-019-09716-7
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JT6XW
UT WOS:000501131100013
DA 2024-07-18
ER

PT J
AU Baum, T
   Schneider, K
   Bacchelli, A
AF Baum, Tobias
   Schneider, Kurt
   Bacchelli, Alberto
TI Associating working memory capacity and code change ordering with code
   review performance
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Change-based code review; Working memory; Individual differences; Code
   ordering; Cognitive support; Cognitive load
ID COGNITIVE LOAD; INSPECTION; DESIGN; COMPREHENSION; KNOWLEDGE; PROGRAM;
   SUPPORT
AB Change-based code review is a software quality assurance technique that is widely used in practice. Therefore, better understanding what influences performance in code reviews and finding ways to improve it can have a large impact. In this study, we examine the association of working memory capacity and cognitive load with code review performance and we test the predictions of a recent theory regarding improved code review efficiency with certain code change part orders. We perform a confirmatory experiment with 50 participants, mostly professional software developers. The participants performed code reviews on one small and two larger code changes from an open source software system to which we had seeded additional defects. We measured their efficiency and effectiveness in defect detection, their working memory capacity, and several potential confounding factors. We find that there is a moderate association between working memory capacity and the effectiveness of finding delocalized defects, influenced by other factors, whereas the association with other defect types is almost non-existing. We also confirm that the effectiveness of reviews is significantly larger for small code changes. We cannot conclude reliably whether the order of presenting the code change parts influences the efficiency of code review.
C1 [Baum, Tobias; Schneider, Kurt] Leibniz Univ Hannover, Fachgebiet Software Engn, Hannover, Germany.
   [Bacchelli, Alberto] Univ Zurich, ZEST, Zurich, Switzerland.
C3 Leibniz University Hannover; University of Zurich
RP Baum, T (corresponding author), Leibniz Univ Hannover, Fachgebiet Software Engn, Hannover, Germany.
EM Tobias.Baum@inf.uni-hannover.de; Kurt.Schneider@inf.uni-hannover.de;
   bacchelli@ifi.uzh.ch
RI Bacchelli, Alberto/ABG-5379-2020
OI Bacchelli, Alberto/0000-0003-0193-6823; Baum,
   Tobias/0000-0003-3623-5349; Schneider, Kurt/0000-0002-7456-8323
FU Swiss National Science Foundation through the SNF [PP00P2_170529]
FX We thank all participants and all pre-testers for the time and effort
   they donated. We furthermore thank Sylvie Gasnier and Gunter Faber for
   advice on the statistical procedures and Javad Ghofrani for help with
   double-checking the defect coding. We thank Bettina von Helversen from
   the psychology department at the University of Zurich for advice on the
   parts related to the theory of cognitive load. Bacchelli gratefully
   acknowledges the support of the Swiss National Science Foundation
   through the SNF Project No. PP00P2_170529.
CR Abdelnabi Z, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P239
   Agresti A., 2010, ANAL ORDINAL CATEGOR, DOI DOI 10.1002/9780470594001
   Agresti A, 2007, INTRO CATEGORICAL DA, DOI DOI 10.1002/0470114754
   [Anonymous], P 2015 INT C SOFTW E
   [Anonymous], 24765 IEEE
   [Anonymous], 1996, P 21 ANN SOFTW ENG W
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Balachandran V, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P931, DOI 10.1109/ICSE.2013.6606642
   Bates D., 2014, LME4 LINEAR MIXED EF, DOI [10.18637/jss.v067.i01, DOI 10.18637/JSS.V067.I01]
   Baum T, 2017, ONLINE MAT OPTIMAL O, DOI [10.6084/m9.figshare.5236150, DOI 10.6084/M9.FIGSHARE.5236150]
   Baum T, 2017, LECT NOTES COMPUT SC, V10611, P111, DOI 10.1007/978-3-319-69926-4_9
   Baum T, 2017, PROC IEEE INT CONF S, P329, DOI 10.1109/ICSME.2017.28
   Baum T, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P85, DOI 10.1145/2950290.2950323
   Baum T, 2016, LECT NOTES COMPUT SC, V10027, P301, DOI 10.1007/978-3-319-49094-6_19
   Baum T, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2016), P74, DOI 10.1109/QRS.2016.19
   Baum Tobias, 2018, ONLINE MAT ASS WORKI, DOI [10.6084/m9.figshare.5808609, DOI 10.6084/M9.FIGSHARE.5808609]
   Bergersen GR, 2011, J INDIVID DIFFER, V32, P201, DOI 10.1027/1614-0001/a000052
   Bernhart M, 2013, CONF PROC INT SYMP C, P192, DOI 10.1109/ICPC.2013.6613847
   Bettencourt BA, 1996, PSYCHOL BULL, V119, P422, DOI 10.1037/0033-2909.119.3.422
   Biegel B, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P88, DOI 10.1109/ICSM.2012.6405258
   Biffl S, 2000, SEVENTH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P136, DOI 10.1109/APSEC.2000.896692
   Chen F, 2016, HUM-COMPUT INT-SPRIN, P1, DOI 10.1007/978-3-319-31700-7
   Cohen J., 1988, STAT POWER ANAL BEHA
   Cowan N, 2010, CURR DIR PSYCHOL SCI, V19, P51, DOI 10.1177/0963721409359277
   Crk I, 2016, ACM T COMPUT-HUM INT, V23, DOI 10.1145/2829945
   DANEMAN M, 1980, J VERB LEARN VERB BE, V19, P450, DOI 10.1016/S0022-5371(80)90312-6
   Denger C, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P219
   DeStefano D, 2007, COMPUT HUM BEHAV, V23, P1616, DOI 10.1016/j.chb.2005.08.012
   Dias M, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P341, DOI 10.1109/SANER.2015.7081844
   Dowell J, 1998, ERGONOMICS, V41, P126, DOI 10.1080/001401398187125
   Dunsmore A, 2003, IEEE T SOFTWARE ENG, V29, P677, DOI 10.1109/TSE.2003.1223643
   Dunsmore A., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P467, DOI 10.1109/ICSE.2000.870437
   Dunsmore A, 2001, PROC INT CONF SOFTW, P135, DOI 10.1109/ICSE.2001.919088
   Ebert F, 2017, PROC IEEE INT CONF S, P549, DOI 10.1109/ICSME.2017.40
   FAGAN ME, 1976, IBM SYST J, V15, P182, DOI 10.1147/sj.153.0182
   Falessi D, 2018, EMPIR SOFTW ENG, V23, P452, DOI 10.1007/s10664-017-9523-3
   Field A., 2002, How to design and report experiments
   Fritz T, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P402, DOI 10.1145/2568225.2568266
   Geffen Y, 2016, 24 INT C PROGR COMPR, P1, DOI [10.1109/ICPC.2016.7503711, DOI 10.1109/ICPC.2016.7503711]
   Gilb Tom, 1993, Software inspections
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Herzig K, 2013, IEEE WORK CONF MIN S, P121, DOI 10.1109/MSR.2013.6624018
   Humble Jez, 2010, Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation
   Hungerford BC, 2004, IEEE T SOFTWARE ENG, V30, P82, DOI 10.1109/TSE.2004.1265814
   Jaccard P., 1912, New Phytologist, V11, P37, DOI [10.1111/j.1469-8137.1912.tb05611.x, DOI 10.1111/J.1469-8137.1912.TB05611.X]
   Kalyan A, 2016, IEEE INT C ENG COMP, P191, DOI [10.1109/ICECCS.2016.21, 10.1109/ICECCS.2016.032]
   Laguilles JS, 2011, RES HIGH EDUC, V52, P537, DOI 10.1007/s11162-010-9203-2
   Laitenberger O, 2000, THESIS
   MacLeod L, 2018, IEEE SOFTWARE, V35, P34, DOI 10.1109/MS.2017.265100500
   Mäntylä MV, 2009, IEEE T SOFTWARE ENG, V35, P430, DOI 10.1109/TSE.2008.71
   Matsuda J, 2015, 14TH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION (IWPSE 2015), P19, DOI 10.1145/2804360.2804363
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   McIntosh S, 2016, EMPIR SOFTW ENG, V21, P2146, DOI 10.1007/s10664-015-9381-9
   McMeekin DA, 2009, CONF SOFTW ENG EDUC, P232, DOI 10.1109/CSEET.2009.15
   MILLER GA, 1956, PSYCHOL REV, V63, P81, DOI 10.1037/h0043158
   Oswald FL, 2015, BEHAV RES METHODS, V47, P1343, DOI 10.3758/s13428-014-0543-2
   PAAS FGWC, 1994, EDUC PSYCHOL REV, V6, P351, DOI 10.1007/BF02213420
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   Pearl J., 2001, Causality: Models, Reasoning, and Inference, V2nd
   Perneger TV, 1998, BRIT MED J, V316, P1236, DOI 10.1136/bmj.316.7139.1236
   Platz S, 2016, P 32 JSSST ANN C, P24, DOI [10.11185/imt.12.24, DOI 10.11185/IMT.12.24]
   Pollock L, 2009, SOFTWARE ENG, P94
   Porter A., 1998, ACM Transactions on Software Engineering and Methodology, V7, P41, DOI 10.1145/268411.268421
   RASMUSSEN J, 1983, IEEE T SYST MAN CYB, V13, P257, DOI 10.1109/TSMC.1983.6313160
   Raz T, 1997, INFORM SOFTWARE TECH, V39, P297, DOI 10.1016/S0950-5849(96)01147-0
   Rigby PC, 2013, P 2013 9 JOINT M FDN, P202, DOI DOI 10.1145/2491411.2491444
   Rigby PC, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2594458
   Rigby PC, 2012, IEEE SOFTWARE, V29, P56, DOI 10.1109/MS.2012.24
   Rigby PC, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P541, DOI 10.1145/1985793.1985867
   Robbins B, 2009, INT SYMP EMP SOFTWAR, P145, DOI 10.1109/ESEM.2009.5316027
   Röthlisberger D, 2012, IEEE T SOFTWARE ENG, V38, P579, DOI 10.1109/TSE.2011.42
   Sauer C, 2000, IEEE T SOFTWARE ENG, V26, P1, DOI 10.1109/32.825763
   Siegmund J, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P140, DOI 10.1145/3106237.3106268
   SIMON HA, 1974, SCIENCE, V183, P482, DOI 10.1126/science.183.4124.482
   Singer E, 2013, ANN AM ACAD POLIT SS, V645, P112, DOI 10.1177/0002716212458082
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Skoglund M., 2004, "8th Internation Conference on Empirical Assessment in Software Engineering (EASE 2004)" Workshop - 26th International Conference on Software Engineering, P165, DOI 10.1049/ic:20040409
   SWELLER J, 1988, COGNITIVE SCI, V12, P257, DOI 10.1207/s15516709cog1202_4
   Tao Y, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P180, DOI 10.1109/MSR.2015.24
   Thongtanunam P, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P168, DOI 10.1109/MSR.2015.23
   Thongtanunam P, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P141, DOI 10.1109/SANER.2015.7081824
   Unsworth N, 2005, BEHAV RES METHODS, V37, P498, DOI 10.3758/BF03192720
   Venables WN., 2002, MODERN APPL STAT S
   Walenstein A, 2002, PROG COMPREHEN, P75, DOI 10.1109/WPC.2002.1021322
   Walenstein A, 2003, PROG COMPREHEN, P185
   Wilhelm O, 2013, FRONT PSYCHOL, V4, DOI 10.3389/fpsyg.2013.00433
   Zhang TY, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P111, DOI 10.1109/ICSE.2015.33
NR 88
TC 26
Z9 27
U1 0
U2 13
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2019
VL 24
IS 4
BP 1762
EP 1798
DI 10.1007/s10664-018-9676-8
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA IL9CL
UT WOS:000477582700003
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU May, A
   Wachs, J
   Hannák, A
AF May, Anna
   Wachs, Johannes
   Hannak, Aniko
TI Gender differences in participation and reward on Stack Overflow
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Open-source; Online representation; Gender gap; Empirical measurement
ID ONLINE PARTICIPATION; WOMEN; BIAS; WIKIPEDIA
AB Programming is a valuable skill in the labor market, making the underrepresentation of women in computing an increasingly important issue. Online question and answer platforms serve a dual purpose in this field: they form a body of knowledge useful as a reference and learning tool, and they provide opportunities for individuals to demonstrate credible, verifiable expertise. Issues, such as male-oriented site design or overrepresentation of men among the site's elite may therefore compound the issue of women's underrepresentation in IT. In this paper we audit the differences in behavior and outcomes between men and women on Stack Overflow, the most popular of these Q&A sites. We observe significant differences in how men and women participate in the platform and how successful they are. For example, the average woman has roughly half of the reputation points, the primary measure of success on the site, of the average man. Using an Oaxaca-Blinder decomposition, an econometric technique commonly applied to analyze differences in wages between groups, we find that most of the gap in success between men and women can be explained by differences in their activity on the site and differences in how these activities are rewarded. Specifically, 1) men give more answers than women and 2) are rewarded more for their answers on average, even when controlling for possible confounders such as tenure or buy-in to the site. Women ask more questions and gain more reward per question. We conclude with a hypothetical redesign of the site's scoring system based on these behavioral differences, cutting the reputation gap in half.
C1 [May, Anna] Cent European Univ, Dept Econ & Business, Budapest, Hungary.
   [Wachs, Johannes] Cent European Univ, Dept Network & Data Sci, Budapest, Hungary.
   [Hannak, Aniko] Vienna Univ Econ & Business, Welthandelspl 1 1, A-1020 Vienna, Austria.
   [Hannak, Aniko] Complex Sci Hub, Josefstadter Str 39, A-1080 Vienna, Austria.
C3 Central European University; Central European University; Vienna
   University of Economics & Business
RP Hannák, A (corresponding author), Vienna Univ Econ & Business, Welthandelspl 1 1, A-1020 Vienna, Austria.; Hannák, A (corresponding author), Complex Sci Hub, Josefstadter Str 39, A-1080 Vienna, Austria.
EM ancsaaa@gmail.com; johanneswachs@gmail.com
RI Wachs, Johannes/W-1768-2017
OI Wachs, Johannes/0000-0002-9044-2018
FU Vienna University of Economics and Business (WU)
FX Open access funding provided by Vienna University of Economics and
   Business (WU). We would like thank Agnes Horvat, Daniel Larremore, Piotr
   Sapiezynski, Kenny Joseph, and participants of Central European
   University's Gendered Creative Teams Workshop for helpful comments and
   insights. We thank Kristen Altenburger and Dorota Celinska for advice
   regarding matching and the Oaxaca-Blinder decomposition, respectively.
   We also acknowledge the comments of anonymous referees.
CR Ahuja MK, 2002, EUR J INFORM SYST, V11, P20, DOI 10.1057/palgrave/ejis/3000417
   Altenburger K, 2017, ARE THERE GENDER DIF
   Anderson Ashton, 2012, P 18 ACM SIGKDD INT, DOI DOI 10.1145/2339530.2339665
   [Anonymous], 2014, Wired
   [Anonymous], P WIKISYM
   [Anonymous], 2016, 22776 NAT BUR EC RES
   [Anonymous], P DAT DISCR CONV CRI
   [Anonymous], 2006, P SIGCHI C HUM FACT, DOI DOI 10.1145/1124772.1124808
   [Anonymous], 2008, ANAL HLTH EQUITY USI
   [Anonymous], 2014, Proceedings of the 17th ACM conference on Computer supported cooperative work social computing
   [Anonymous], WWW 16 COMPANION
   Ashcraft Catherine, 2016, Women in tech: The facts
   Barzilay AR, 2016, SETON HALL LAW REV, V47, P393
   Beckwith L, 2004, 2004 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN CENTRIC COMPUTING: PROCEEDINGS, P107, DOI 10.1109/VLHCC.2004.28
   Bentley J. T., 2003, Special Report
   Blau FD, 2016, TECH REP
   BLINDER AS, 1973, J HUM RESOUR, V8, P436, DOI 10.2307/144855
   Blondel VD, 2008, J STAT MECH-THEORY E, DOI 10.1088/1742-5468/2008/10/P10008
   Bosu A, 2013, IEEE WORK CONF MIN S, P89, DOI 10.1109/MSR.2013.6624013
   Bruckman A.S., 1996, HIGH NOON ELECT FRON, P317
   Celinska D., 2017, P 11 INT C WEB SOC M, P727
   Chen Z, 2010, AM J PUBLIC HEALTH, V100, P426, DOI 10.2105/AJPH.2008.156190
   Choi T, 2017, REV REG STUD, V47, P1
   Clayton D., 2002, SIGCSE Bulletin, V34, P89, DOI 10.1145/543812.543838
   Cohoon J.M., 2006, Women and information technology: Research on underrepresentation, V1
   Fawcett H, 2012, 3 UNUSUAL Q A SITES
   Ford D., 2018, Proceedings of the 2018 CHI conference on human factors in computing systems, page, P608
   Ford D, 2017, S VIS LANG HUM CEN C, P239, DOI 10.1109/VLHCC.2017.8103473
   Ford D, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P846, DOI 10.1145/2950290.2950331
   Ford H, 2016, WIKIPEDIAS SILENT CO
   Glass B, 2016, POINT CLICK
   Hannak Aniko, 2017, 20 ACM C COMP SUPP C
   Herzig P., 2015, Gamification in Education and Business, P451
   Horvath JA, 2014, INSIDE GITHUB SCANDA
   Jadidi M., 2017, ARXIV170405801
   Lehman KJ, 2016, COMPUT SCI EDUC, V26, P277, DOI 10.1080/08993408.2016.1271536
   Lerner J, 2002, J IND ECON, V50, P197, DOI 10.1111/1467-6451.00174
   Leslie SJ, 2015, SCIENCE, V347, P262, DOI 10.1126/science.1261375
   Marom D, 2014, SSRN WORKING PAPER, V430, P1
   Menking A, 2015, CHI 2015: PROCEEDINGS OF THE 33RD ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P207, DOI 10.1145/2702123.2702514
   Muchnik L, 2013, SCIENCE, V341, P647, DOI 10.1126/science.1240466
   NEUMARK D, 1988, J HUM RESOUR, V23, P279, DOI 10.2307/145830
   Niederle M, 2007, Q J ECON, V122, P1067, DOI 10.1162/qjec.122.3.1067
   Oaxaca R., 1973, International Economic Review, P693, DOI [DOI 10.2307/2525981, 10.2307/2525981]
   Pedro LZ, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P214, DOI 10.1145/2695664.2695752
   Reagle J, 2011, INT J COMMUN-US, V5, P1138
   Republic T, 2014, STAT WOM TECHN
   Sax LJ, 2017, J HIGH EDUC-UK, V88, P258, DOI 10.1080/00221546.2016.1257306
   Sen B, 2014, OBESITY, V22, P1750, DOI 10.1002/oby.20755
   Serrano MA, 2009, P NATL ACAD SCI USA, V106, P6483, DOI 10.1073/pnas.0808904106
   Shaw A, 2018, J COMMUN, V68, P143, DOI 10.1093/joc/jqx003
   Stanton CT, 2016, REV ECON STUD, V83, P810, DOI 10.1093/restud/rdv042
   Stephens M, 2013, GEOJOURNAL, V78, P981, DOI 10.1007/s10708-013-9492-z
   Sweeney Latanya, 2013, Discrimination in Online Ad Delivery
   Szell M, 2013, SCI REP-UK, V3, DOI 10.1038/srep01214
   Terrell J, 2017, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.111
   Thebault-Spieker J., 2015, P 18 ACM C COMP SUPP
   Vasilescu B, 2013, INT COMPUT, V26, P47
   Vasilescu B, 2015, CHI 2015: PROCEEDINGS OF THE 33RD ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P3789, DOI 10.1145/2702123.2702549
   Vasilescu B, 2014, INTERACT COMPUT, V26, P488, DOI 10.1093/iwc/iwt047
   Vasilescu B, 2013, 2013 ASE/IEEE INTERNATIONAL CONFERENCE ON SOCIAL COMPUTING (SOCIALCOM), P188, DOI 10.1109/SocialCom.2013.35
   Vasilescu B, 2012, PROCEEDINGS OF THE 2012 ASE INTERNATIONAL CONFERENCE ON SOCIAL INFORMATICS (SOCIALINFORMATICS 2012), P332, DOI 10.1109/SocialInformatics.2012.81
   Wachs J., 2017, 11 INT AAAI C WEB SO
   Wagner C, 2016, EPJ DATA SCI, V5, DOI 10.1140/epjds/s13688-016-0066-4
   Zhang Y, 2015, J COMPUT SCI TECH-CH, V30, P981, DOI 10.1007/s11390-015-1576-4
NR 65
TC 51
Z9 56
U1 1
U2 13
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2019
VL 24
IS 4
BP 1997
EP 2019
DI 10.1007/s10664-019-09685-x
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA IL9CL
UT WOS:000477582700009
OA hybrid
DA 2024-07-18
ER

PT J
AU Mazuera-Rozo, A
   Bautista-Mora, J
   Linares-Vásquez, M
   Rueda, S
   Bavota, G
AF Mazuera-Rozo, Alejandro
   Bautista-Mora, Jairo
   Linares-Vasquez, Mario
   Rueda, Sandra
   Bavota, Gabriele
TI The Android OS stack and its vulnerabilities: an empirical study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Vulnerabilities; Android; Empirical study; Operating system
AB The wide and rapid adoption of Android-based devices in the last years has motivated the usage of Android apps to support a broad range of daily activities. In that sense, being the most popular mobile platform makes it an attractive target for security attacks. In fact, 1,489 security vulnerabilities have been reported in the last three years (2015-2017) for the Android OS (which is the underlying platform for Android-based devices). While there is a plethora of approaches and tools for detecting malware and security issues in Android apps, few research has been done to identify, categorize, or detect vulnerabilities in the Android OS. In this paper we present the largest study so far aimed at analyzing software vulnerabilities in the Android OS. In particular, we analyzed a total of 1,235 vulnerabilities from four different perspectives: vulnerability types and their evolution, CVSS vectors that describe the vulnerabilities, impacted Android OS layers, and their survivability across the Android OS history. Based on our findings, we propose a list of future actions that could be performed by researchers and practitioners to reduce the number of vulnerabilities in the Android OS as well as their impact and survivability.
C1 [Mazuera-Rozo, Alejandro; Bautista-Mora, Jairo; Linares-Vasquez, Mario; Rueda, Sandra] Univ Los Andes, Bogota, Colombia.
   [Mazuera-Rozo, Alejandro; Bavota, Gabriele] Univ Svizzera Italiana, Lugano, Switzerland.
C3 Universidad de los Andes (Colombia); Universita della Svizzera Italiana
RP Linares-Vásquez, M (corresponding author), Univ Los Andes, Bogota, Colombia.
EM a.mazuera@uniandes.edu.co; je.bautista10@uniandes.edu.co;
   m.linaresv@uniandes.edu.co; sarueda@uniandes.edu.co;
   gabriele.bavota@usi.ch
RI Rueda, Sandra/R-8255-2016
OI BAVOTA, Gabriele/0000-0002-2216-3148; Linares-Vasquez,
   Mario/0000-0003-0161-2888
CR Ahmad W, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P177, DOI [10.1109/MSR.2016.027, 10.1145/2901739.2901762]
   Anderson B, 2016, TECH REP
   [Anonymous], 2017, CVE20126636
   [Anonymous], NON TRADITIONAL REF
   [Anonymous], 2015, ANDR KERN FEAT
   [Anonymous], 2014, TECH REP
   Armis, 2017, ATT VECT BLUEB EXP A
   Arzt S, 2014, ACM SIGPLAN NOTICES, V49, P259, DOI [10.1145/2666356.2594299, 10.1145/2594291.2594299]
   Avdiienko V, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P426, DOI 10.1109/ICSE.2015.61
   Backes M, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P356, DOI 10.1145/2976749.2978333
   Bagheri H, SPRINGER J FORMAL AS
   Bagheri H, 2015, IEEE T SOFTWARE ENG, V41, P866, DOI 10.1109/TSE.2015.2419611
   Beres D, 2015, COWBOY ADVENTURE GAM
   Bhosale A, 2014, THESIS
   Brady P., 2008, ANATOMY PHYSL ANDROI
   Burgess M, 2016, MILLIONS ANDROID DEV
   Cao C., 2015, Proceedings of the 31st Annual Computer Security Applications Conference, Los Angeles, CA, USA, December 7-11, 2015, ACSAC'15, P361
   Christensen R, 2011, SPRINGER TEXTS STAT, P1, DOI 10.1007/978-1-4419-9816-3
   Conover W. J., 1998, PRACTICAL NONPARAMET, V3rd
   Corporation M, 2017, CVE COMM VULN EXP
   CUMMING G, 2011, INTRO NEW STAT EFFEC
   Dimjaevic M, 2015, ANDROID MALWARE DETE
   Drake J.J., 2014, Android hacker's handbook
   Enck W, 2009, CCS'09: PROCEEDINGS OF THE 16TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P235
   Enck William., 2010, Proceedings of the USENIX Symposium on Operating Systems Design and Implementation (OSDI), P393
   Fahl S., 2012, ACM CCS 12, P50, DOI DOI 10.1145/2382196.2382205
   Fattori A, 2014, TECH REP
   FIRST, 2019, COMM VULN SCOR SYST
   Garcia J, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P661, DOI 10.1145/3106237.3106286
   Gasior W, 2012, 2012 ASE INTERNATIONAL CONFERENCE ON CYBER SECURITY (CYBERSECURITY), P173, DOI 10.1109/CyberSecurity.2012.29
   Ghafari M, 2017, IEEE INT WORK C SO, P121, DOI 10.1109/SCAM.2017.24
   Gilbert P., 2011, P 2 INT WORKSHOP MOB, P21, DOI DOI 10.1145/1999732.1999740
   Gorla A, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1025, DOI 10.1145/2568225.2568276
   Grissom R. J., 2005, EFFECT SIZES RES BRO
   Gwet KL, 2008, BRIT J MATH STAT PSY, V61, P29, DOI 10.1348/000711006X126600
   Hedges LV., 2014, STAT METHODS META AN
   Castellanos JH, 2016, CRYPTOL INF SEC SER, V14, P13, DOI 10.3233/978-1-61499-617-0-13
   Herzig K, 2013, IEEE WORK CONF MIN S, P121, DOI 10.1109/MSR.2013.6624018
   HOLM S, 1979, SCAND J STAT, V6, P65
   Huang HQ, 2015, CCS'15: PROCEEDINGS OF THE 22ND ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1236, DOI 10.1145/2810103.2813606
   Jimenez M, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2016), P222, DOI 10.1109/QRS.2016.34
   Kantola David., 2012, Proceedings of the second ACM workshop on Security and privacy in smartphones and mobile devices, P69
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Lal S, 2012, ASIA PAC SOFWR ENG, P517, DOI 10.1109/APSEC.2012.54
   Lee S, 2017, IEEE INT CONF AUTOM, P252, DOI 10.1109/ASE.2017.8115638
   Li ZT, 2016, IEEE ICCSS 2016 - 2016 3RD INTERNATIONAL CONFERENCE ON INFORMATIVE AND CYBERNETICS FOR COMPUTATIONAL SOCIAL SYSTEMS (ICCSS), P93, DOI 10.1109/ICCSS.2016.7586430
   Linares-Vásquez M, 2017, IEEE WORK CONF MIN S, P2, DOI 10.1109/MSR.2017.60
   LLC PI, 2014, TECH REP
   Lu Long, 2012, P 2012 ACM C COMP CO, P229, DOI DOI 10.1145/2382196.2382223
   Mazuera-Rozo A, 2017, REPLICATION PACKAGE
   Mell P., 2007, 1 FORUM INCIDENT RES, P23
   MITRE, 2017, CWE 275 PERM ISS
   MITRE, 2017, CWE 121 STACK BAS BU
   MITRE, 2017, CWE 190 INT OV WRAP
   MITRE, 2017, CVE DET ANDR VULN
   MITRE, 2017, COMM WEAKN EN
   MITRE, 2017, CWE 862 MISS AUTH
   MITRE, 2017, CWE 415 DOUBL FREE
   MITRE, 2017, CWE 787 OUT BOUNDS W
   MITRE, 2017, CVE DET
   MITRE, 2017, CWE 120 BUFF COP CHE
   MITRE, 2017, CWE 327 US BROK RISK
   MITRE, 2020, CWE326 MITRE
   MITRE, 2017, CWE 201 INF EXP SENT
   MITRE, 2017, CWE 296 IMPR FOLL CE
   MITRE, 2017, CWE 840 BUS KIG ERR
   MITRE, 2017, CWE 94 IMPR CONTR GE
   MITRE, 2017, CWE 122 HEAP BAS BUF
   MITRE, 2017, CWE 909 MISS IN RES
   Mohr M., 2015, GEMEINSAMER TAGUNGSB, V1337
   Morales LV, 2015, IEEE LAT AM T, V13, P1160, DOI 10.1109/TLA.2015.7106371
   Nickinson P, 2015, STAGEFRIGHT EXPLOIT
   NIST, 2015, COMM VULN SCOR SYST
   NIST, 2017, NVD DAT FEEDS
   Novak E, 2015, PROCEEDINGS OF THE 2015 ACM INTERNATIONAL JOINT CONFERENCE ON PERVASIVE AND UBIQUITOUS COMPUTING (UBICOMP 2015), P367, DOI 10.1145/2750858.2804253
   Park Y, 2013, COMPUT SECUR, V39, P419, DOI 10.1016/j.cose.2013.09.006
   Ren CG, 2015, PROCEEDINGS OF THE 24TH USENIX SECURITY SYMPOSIUM, P945
   Sadeghi A, 2016, IEEE T SOFTWARE ENG, VPP, P1
   Sadeghi A, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P220, DOI 10.1145/3106237.3106250
   Sadeghi A, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P725, DOI 10.1109/ICSE.2015.233
   Sbîelea D, 2013, IBM J RES DEV, V57, DOI 10.1147/JRD.2013.2284403
   Sliwerski J., 2005, MSR
   Stefanko Lukas, 2015, AGGRESSIVE ANDROID R
   Sufatrio, 2015, ACM COMPUT SURV, V47, DOI 10.1145/2733306
   Thomas D.R., 2015, P 5 ANN ACM CCS WORK, P87
   Thomas DR, 2015, LECT NOTES COMPUT SC, V9379, P139, DOI 10.1007/978-3-319-26096-9_14
   Tufano M, 2018, IEEE INT CONF AUTOM, P832, DOI 10.1145/3238147.3240732
   U. S. National Institute of Standards and Technology-NIST, 2012, NAT VULN DAT
   U. S. National Institute of Standards and Technology-NIST, 2012, SP 800 30 GUID COND
   Weichselbaum L, 2012, TECH REP
   Wu L., 2013, PROC 20 SIGSAC C COM, P623, DOI DOI 10.1145/2508859.2516728
   Xiao X., 2012, IEEE ACM INT C AUT S
   Xu M, 2016, ACM COMPUT SURV, V49, DOI 10.1145/2963145
   You W, 2016, PROC INT CONF SOFTW, P959, DOI 10.1145/2884781.2884863
   Zaman S., 2011, Proceedings of the 8th working conference on mining software repositories, P93, DOI [10.1145/1985441.1985457, DOI 10.1145/1985441.1985457]
   Zhou Y., 2012, Android malware genome project
   Zhou YJ, 2012, P IEEE S SECUR PRIV, P95, DOI 10.1109/SP.2012.16
   ZUO C., 2015, Proceedings of the 10th ACM Symposium on Information, Computer and Communications Security, ASIA CCS '15, Singapore, April 14-17, 2015, ASIACCS'15, P591
NR 98
TC 10
Z9 11
U1 0
U2 25
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2019
VL 24
IS 4
BP 2056
EP 2101
DI 10.1007/s10664-019-09689-7
PG 46
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IL9CL
UT WOS:000477582700011
DA 2024-07-18
ER

PT J
AU Yu, TT
   Pradel, M
AF Yu, Tingting
   Pradel, Michael
TI Pinpointing and repairing performance bottlenecks in concurrent programs
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Testing; Concurrency; Performance bottlenecks
AB Developing concurrent software that is both correct and efficient is challenging. Past research has proposed various techniques that support developers in finding, understanding, and repairing concurrency-related correctness problems, such as missing or incorrect synchronization. In contrast, existing work provides little support for dealing with concurrency-related performance problems, such as unnecessary or inefficient synchronization. This paper presents SyncProf, a profiling approach that helps in identifying, localizing, and repairing performance bottlenecks in concurrent programs. The approach consists of a sequence of dynamic analyses that reason about relevant code locations with increasing precision while narrowing down performance problems and gathering data for avoiding them. A key novelty is a graph-based representation of relations between critical sections, which is the basis for computing the performance impact of a critical section and for identifying the root cause of a bottleneck. Once a bottleneck is identified, SyncProf searches for a suitable optimization strategy to avoid the problem, increasing the level of automation when repairing performance bottlenecks over a traditional, manual approach. We evaluate SyncProf on 25 versions of eleven C/C++ projects with both known and previously unknown synchronization bottlenecks. The results show that SyncProf effectively localizes the root causes of these bottlenecks with higher precision than a state of the art lock contention profiler, and that it suggests valuable strategies to repair the bottlenecks.
C1 [Yu, Tingting] Univ Kentucky, Dept Comp Sci, Lexington, KY 40506 USA.
   [Pradel, Michael] Tech Univ Darmstadt, Dept Comp Sci, Darmstadt, Germany.
C3 University of Kentucky; Technical University of Darmstadt
RP Yu, TT (corresponding author), Univ Kentucky, Dept Comp Sci, Lexington, KY 40506 USA.
EM tyu@cs.uky.edu; michael@binaervarianz.de
RI yu, tingting/HGA-4783-2022
FU NSF [CCF-1464032, CCF-1652149]; German Research Foundation; German
   Federal Ministry of Education and Research; Hessian Ministry of Science
   and the Arts within "CRISP"
FX This research is supported in part by the NSF grants CCF-1464032 and
   CCF-1652149, by the German Research Foundation within the Emmy Noether
   project "ConcSys" and by the German Federal Ministry of Education and
   Research and the Hessian Ministry of Science and the Arts within
   "CRISP".
CR Alam KA, 2017, IEEE ACCESS, V5, P8236, DOI 10.1109/ACCESS.2017.2699172
   Ammons G, 2004, LECT NOTES COMPUT SC, V3086, P170
   [Anonymous], 2010, DIAGN LOCK CONT CONC
   [Anonymous], 1998, SIGMETRICS PERFORM E, DOI DOI 10.1145/306225.306235
   [Anonymous], 2014, INTEL VTUNE AMPLIFER
   [Anonymous], 2013, ONGOING WORK LOCK CO
   [Anonymous], 2013, ISCA 2013, DOI DOI 10.1145/2485922.2485966
   [Anonymous], 2015, IDENTIFY THREAD CONT
   Arlitt M.F., 1996, PROC ACM SIGMETRICS, P126
   Artho C, 2003, SOFTW TEST VERIF REL, V13, P207, DOI 10.1002/stvr.281
   Avritzer A., 2002, P 3 INT WORKSHOP SOF, P17
   Barford P, 2001, IEEE ACM T NETWORK, V9, P238, DOI 10.1109/90.929848
   Bond MD, 2010, PLDI '10: PROCEEDINGS OF THE 2010 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P255, DOI 10.1145/1806596.1806626
   Chen GC, 2012, INT CONF HIGH PERFOR
   Choudhary A, 2017, PROC INT CONF SOFTW, P266, DOI 10.1109/ICSE.2017.32
   Cleve H, 2005, PROC INT CONF SOFTW, P342
   Coons KE, 2010, PPOPP 2010: PROCEEDINGS OF THE 2010 ACM SIGPLAN SYMPOSIUM ON PRINCIPLES AND PRACTICE OF PARALLEL PROGRAMMING, P15, DOI 10.1145/1693453.1693458
   Curtsinger C, 2015, SOSP'15: PROCEEDINGS OF THE TWENTY-FIFTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P184, DOI 10.1145/2815400.2815409
   Draheim D, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P55
   DRD, 2015, THREAD ERR DET
   Effinger-Dean L, 2012, ACM SIGPLAN NOTICES, V47, P467, DOI 10.1145/2398857.2384650
   Eyerman S, 2010, CONF PROC INT SYMP C, P362, DOI 10.1145/1816038.1816011
   Flanagan C, 2004, ACM SIGPLAN NOTICES, V39, P256, DOI 10.1145/982962.964023
   Flanagan C, 2003, ACM SIGPLAN NOTICES, V38, P338, DOI 10.1145/780822.781169
   Fouche Sandro., 2007, Proceedings of the the 6th joint meeting of the European software engineering conference and the ACM SIGSOFT symposium on The foundations of software engineering, ESEC-FSE '07, P557
   Gong L, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P357, DOI 10.1145/2786805.2786831
   Gray J. N., 1975, P 1 INT C VERY LARGE
   Gu R, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P426, DOI 10.1145/2786805.2786815
   Gupta R., 1990, Future Generation Computer Systems, V6, P255, DOI 10.1016/0167-739X(90)90023-7
   Han S, 2012, PROC INT CONF SOFTW, P145, DOI 10.1109/ICSE.2012.6227198
   Heinrich M., 2003, Computer Architecture News, V31, P30, DOI 10.1145/882105.882110
   Heirman W, 2011, I S WORKL CHAR PROC, P38, DOI 10.1109/IISWC.2011.6114195
   Jin GL, 2012, ACM SIGPLAN NOTICES, V47, P77, DOI 10.1145/2345156.2254075
   Joao JA, 2012, ASPLOS XVII: SEVENTEENTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS, P223
   Jones J.A., 2005, P 20 IEEE ACM INT C, P273, DOI [10.1145/1101908.1101949, DOI 10.1145/1101908.1101949]
   Joshi S, 2012, POPL 12: PROCEEDINGS OF THE 39TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P19
   Kahlon V, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P13, DOI 10.1145/1595696.1595701
   Koskinen E, 2008, SPAA'08: PROCEEDINGS OF THE TWENTIETH ANNUAL SYMPOSIUM ON PARALLELISM IN ALGORITHMS AND ARCHITECTURES, P297
   Liqiang Wang, 2006, Proceedings of the 2006 ACM SIGPLAN Symposium on Principles and Practice of Parallel Programming PPoPP'06, P137, DOI 10.1145/1122971.1122993
   Lozi Jean-Pierre., 2012, Proceedings of the 2012 USENIX Annual Technical Conference, USENIX ATC'12, P65
   Luk CK, 2005, ACM SIGPLAN NOTICES, V40, P190, DOI 10.1145/1064978.1065034
   Marino D, 2009, PLDI'09 PROCEEDINGS OF THE 2009 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P134, DOI 10.1145/1542476.1542491
   Mertler C.A., 2002, Advanced and multivariate statistical methods: Practical application and interpretation, V2nd
   Michael M. M., 1996, Proceedings of the Fifteenth Annual ACM Symposium on Principles of Distributed Computing, P267, DOI 10.1145/248052.248106
   Miller B. P., 1990, IEEE Transactions on Parallel and Distributed Systems, V1, P206, DOI 10.1109/71.80132
   Musuvathi M., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, P267
   Naik M, 2009, PROC INT CONF SOFTW, P386, DOI 10.1109/ICSE.2009.5070538
   Nistor A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P562, DOI 10.1109/ICSE.2013.6606602
   Nistor A, 2012, PROC INT CONF SOFTW, P727, DOI 10.1109/ICSE.2012.6227145
   Novillo E, 2003, P INT S PAR DISTR PR
   Olivier S, 2007, LECT NOTES COMPUT SC, V4382, P235, DOI 10.1007/978-3-540-72521-3_18
   Pradel M, 2014, ACM SIGPLAN NOTICES, V49, P33, DOI [10.1145/2660193.2660233, 10.1145/2714064.2660233]
   Pradel M, 2012, ACM SIGPLAN NOTICES, V47, P521, DOI 10.1145/2345156.2254126
   Pradel Michael, 2014, Proceedings of the 2014 International Symposium on Software Testing and Analysis, P13, DOI DOI 10.1145/2610384.2610393
   Rajwar R, 2001, INT SYMP MICROARCH, P294, DOI 10.1109/MICRO.2001.991127
   Roy A, 2009, EUROSYS'09: PROCEEDINGS OF THE FOURTH EUROSYS CONFERENCE, P261
   Sahelices B, 2009, LECT NOTES COMPUT SC, V5704, P149, DOI 10.1007/978-3-642-03869-3_17
   Samak M, 2014, ACM SIGPLAN NOTICES, V49, P29, DOI [10.1145/2692916.2555262, 10.1145/2555243.2555262]
   Selakovic M, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P170, DOI 10.1145/3092703.3092716
   Selakovic M, 2016, PROC INT CONF SOFTW, P61, DOI 10.1145/2884781.2884829
   Sen K., 2007, P 22 IEEE ACM INT C, P323, DOI [DOI 10.1145/1321631.1321679, 10.1145/1321631.1321679]
   Sen K, 2008, PLDI'08: PROCEEDINGS OF THE 2008 SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN & IMPLEMENTATION, P11, DOI 10.1145/1375581.1375584
   Shacham O, 2011, OOPSLA 11: PROCEEDINGS OF THE 2011 ACM INTERNATIONAL CONFERENCE ON OBJECT ORIENTED PROGRAMMING SYSTEMS LANGUAGES AND APPLICATIONS, P51
   Sim J, 2012, ACM SIGPLAN NOTICES, V47, P11, DOI 10.1145/2370036.2145819
   Tallent NR, 2010, PPOPP 2010: PROCEEDINGS OF THE 2010 ACM SIGPLAN SYMPOSIUM ON PRINCIPLES AND PRACTICE OF PARALLEL PROGRAMMING, P269, DOI 10.1145/1693453.1693489
   Toffola LD, 2015, P ACM SIGPLAN INT C
   Visser W., 2003, Automated Software Engineering, V10, P203, DOI 10.1023/A:1022920129859
   von Praun C, 2003, ACM SIGPLAN NOTICES, V38, P115, DOI 10.1145/780822.781145
   Wang Yin, 2008, 8 USENIX S OP SYST D, P281
   Wert A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P552, DOI 10.1109/ICSE.2013.6606601
   Williams A, 2005, LECT NOTES COMPUT SC, V3586, P602
   WOO SC, 1995, ACM COMP AR, P24, DOI 10.1109/ISCA.1995.524546
   Xu M, 2005, ACM SIGPLAN NOTICES, V40, P1, DOI 10.1145/1064978.1065013
   Yu T., 2016, P 25 INT S SOFTW TES, P389
   Yu X, 2014, ACM SIGPLAN NOTICES, V49, P193, DOI 10.1145/2541940.2541968
   Zheng L, 2015, INT SYM CODE GENER, P56, DOI 10.1109/CGO.2015.7054187
NR 76
TC 14
Z9 16
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2018
VL 23
IS 5
BP 3034
EP 3071
DI 10.1007/s10664-017-9578-1
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GO5AW
UT WOS:000440031100017
DA 2024-07-18
ER

PT J
AU Przybylek, A
AF Przybylek, Adam
TI An empirical study on the impact of AspectJ on software evolvability
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Aspect-oriented programming; AOP; Maintainability; Understandability;
   Separation of concerns; Controlled experiment
ID EVOLUTION; DESIGN; METRICS
AB Since its inception in 1996, aspect-oriented programming (AOP) has been believed to reduce the effort required to maintain software systems by replacing cross-cutting code with aspects. However, little convincing empirical evidence exists to support this claim, while several studies suggest that AOP brings new obstacles to maintainability. This paper discusses two controlled experiments conducted to evaluate the impact of AspectJ (the most mature and popular aspect-oriented programming language) versus Java on software evolvability. We consider evolvability as the ease with which a software system can be updated to fulfill new requirements. Since a minor language was compared to the mainstream, the experiments were designed so as to anticipate that the participants were much more experienced in one of the treatments. The first experiment was performed on 35 student subjects who were asked to comprehend either Java or AspectJ implementation of the same system, and perform the corresponding comprehension tasks. Participants of both groups achieved a high rate of correct answers without a statistically significant difference between the groups. Nevertheless, the Java group significantly outperformed the AspectJ group with respect to the average completion time. In the second experiment, 24 student subjects were asked to implement (in a non-invasive way) two extension scenarios to the system that they had already known. Each subject evolved either the Java version using Java or the AspectJ version using AspectJ. We found out that a typical AspectJ programmer needs significantly fewer atomic changes to implement the change scenarios than a typical Java programmer, but we did not observe a significant difference in completion time. The overall result indicates that AspectJ has a different effect on two sub-characteristics of the evolvability: understandability and changeability. While AspectJ decreases the former, it improves one aspect of the latter.
C1 [Przybylek, Adam] Gdansk Univ Technol, Fac Elect Telecommun & Informat, Narutowicza 11-12, PL-80233 Gdansk, Poland.
C3 Fahrenheit Universities; Gdansk University of Technology
RP Przybylek, A (corresponding author), Gdansk Univ Technol, Fac Elect Telecommun & Informat, Narutowicza 11-12, PL-80233 Gdansk, Poland.
EM adam.przybylek@gmail.com
RI Przybylek, Adam/AFR-3682-2022
OI Przybylek, Adam/0000-0002-8231-709X
FU European Union [UDA-POKL.04.01.01-00-051/10-00]
FX The study is cofounded by the European Union from resources of the
   European Social Fund. Project PO KL "Information technologies: Research
   and their interdisciplinary applications", Agreement
   UDA-POKL.04.01.01-00-051/10-00.
CR [Anonymous], 2001, 912612001 ISOIEC
   Arnaoudova V, 2008, J OBJECT TECHNOL, V7, P121, DOI 10.5381/jot.2008.7.6.a4
   Bartsch M, 2008, SOFTWARE QUAL J, V16, P23, DOI 10.1007/s11219-007-9022-7
   Basili1 Victor R, 1994, Encyclopedia of software engineering, V1994, P528
   BELADY LA, 1976, IBM SYST J, V15, P225, DOI 10.1147/sj.153.0225
   Benestad H, 2006, INT C PROD FOC SOFTW
   BEZDEK J, 1994, IEEE T FUZZY SYST, V2, P1
   Boehm B, 1987, IEEE T COMPUT, V25, P1226
   Bordens K., 2011, Research design and methods: A process approach, V8th
   Briand L. C., 2001, Empirical Software Engineering, V6, P11, DOI 10.1023/A:1009815306478
   Briand LC, 1999, IEEE INT C SOFTW MAI
   Brito I, 2004, 3 WORKSH EARL ASP AO
   Burrows R, 2011, 19 INT C PROGR COMPR
   Chapin N, 2001, J SOFTW MAINT EVOL-R, V13, P3, DOI 10.1002/smr.220
   Charness G, 2012, J ECON BEHAV ORGAN, V81, P1, DOI 10.1016/j.jebo.2011.08.009
   Chatzigeorgiou A, 2013, J SOFTW-EVOL PROC, V25, P303, DOI 10.1002/smr.584
   Chavez CH, 2011, 25 BRAZ S SOFTW ENG
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Chikofsky EJ, 1992, SOFTWARE REENGINEERI, P54
   Coad P., 1991, OBJECT ORIENTED ANAL, V2nd
   Coady Y, 2003, 2 INT C ASP OR SOFTW
   Dantas DS, 2006, ACM SIGPLAN NOTICES, V41, P383, DOI 10.1145/1111320.1111071
   Dijkstra E. W., 1976, A Discipline of Pro-gramming
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Fenton N., 2001, Empirical Software Engineering, V6, P195, DOI 10.1023/A:1011449731678
   Figueiredo E, 2008, 30 INT C SOFTW ENG L
   Filman RE, 2001, WORKSH MULT SEP CONC
   Fjeldstad R., 1983, TUTORIAL SOFTWARE MA, P13
   Greenwood P, 2007, 21 EUR C OBJ OR PROG
   Griswold WG, 2006, IEEE SOFTWARE, V23, P51, DOI 10.1109/MS.2006.24
   Hanenberg S, 2009, 3 INT S EMP SOFTW EN
   Hanenberg S, 2001, WORKSH ADV SEP CONC
   Hanenberg S, 2013, INFORM SOFTWARE TECH, V55, P722, DOI 10.1016/j.infsof.2012.09.005
   Harrison W, 2000, BBS WORKSH ICSE 00 L
   Hitz M., 1995, P INT S APPL CORP CO, P25
   Hoffman K, 2009, SCI COMPUT PROGRAM, V74, P333, DOI 10.1016/j.scico.2009.01.003
   Hohenstein U, 2011, LECT NOTES COMPUTER, V6580
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   ISO/IEC, 2006, 14764 ISOIEC
   Juristo N., 2013, BASICS SOFTWARE ENG
   Kastner C, 2007, 11 INT C SOFTW PROD
   Katic M, 2013, J INF ORGAN SCI, V37, P45
   Kellens A, 2006, 20 EUR C OBJ OR PROG
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kiczales G, 2001, 15 EUR C OBJ OR PROG
   Kienzle J, 2002, 16 EUR C OBJ OR PROG
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kniesel G, 2001, WORKSH ADV SEP CONC
   Koppen C., 2004, EUR INT WORKSH ASP S
   Kouskouras KG, 2008, J SYST SOFTWARE, V81, P1725, DOI 10.1016/j.jss.2007.12.807
   Kulesza U, 2006, 22 IEEE INT C SOFTW
   Kvale AA, 2005, 20 ACM S APPL COMP S
   LIEBERHERR KJ, 1989, IEEE SOFTWARE, V6, P38, DOI 10.1109/52.35588
   Lobato C, 2008, 7 INT C COMP BAS SOF
   Lopez-Herrejon R, 2006, ACM SIGPLAN 2006 WOR
   Mancoridis S, 1998, 6 INT WORKSH PROGR C
   Marot A, 2011, THESIS
   Mauch J., 2003, Guide to the successful thesis and dissertation: A handbook for students and faculty
   McEachen N, 2005, 4 INT C ASP OR SOFTW
   Mens K, 2008, SOFTWARE EVOLUTION, P203
   Mens T, 2004, ERCIM AUTOMATED SOFT
   Meyer B, 1989, OBJECT ORIENTED SOFT
   Mguni Kagiso, 2013, ISRN Software Engineering, DOI 10.1155/2013/121692
   Mortensen M, 2009, THESIS
   Mortensen M, 2012, IEEE T SOFTWARE ENG, V38, P118, DOI 10.1109/TSE.2010.109
   Munoz F, 2008, IEEE INT C SOFTW MAI
   Murphy GC, 1999, IEEE T SOFTWARE ENG, V25, P438, DOI 10.1109/32.799936
   Ossher H, 2001, 23 INT C SOFTW ENG I
   Page-Jones M, 1980, PRACTICAL GUIDE STRU
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   Pereira RHR, 2017, SOFTWARE PRACT EXPER, V47, P193, DOI 10.1002/spe.2415
   Ponisio ML, 2006, THESIS
   Przybylek A, 2010, 5 INT C SOFTW DAT TE
   Przybylek A, 2013, 17 EUR C SOFTW MAINT
   Przybylek A, 2011, LECT NOTES COMPUT SC, V6603, P447, DOI 10.1007/978-3-642-19811-3_31
   Rashid A, 2006, 9 INT C MOD DRIV ENG
   Rinard M, 2004, 12 ACM SIGSOFT INT S
   Ryder BG, 2001, 3 ACM SIGPLAN SIGSOF
   Sant'anna C., 2003, P 17 BRAZ S SOFTW EN
   Santos A, 2016, SCI COMPUT PROGRAM, V119, P31, DOI 10.1016/j.scico.2015.12.003
   Scholtz J, 1992, 7 C BRIT COMP SOC HU, VVII
   Serebrenik A, 2010, PROC IEEE INT CONF S
   Shen H, 2008, 2 IFIP IEEE INT S TH
   STANDISH TA, 1984, IEEE T SOFTWARE ENG, V10, P494, DOI 10.1109/TSE.1984.5010272
   Steimann F, 2006, ACM SIGPLAN NOTICES, V41, P481, DOI 10.1145/1167515.1167514
   Steimann F, 2010, ACM T SOFTW ENG METH, V20, DOI 10.1145/1767751.1767752
   Storey MAD, 1999, J SYST SOFTWARE, V44, P171, DOI 10.1016/S0164-1212(98)10055-9
   Tonella P, 2005, IEEE T SOFTWARE ENG, V31, P819, DOI 10.1109/TSE.2005.115
   Torkar R, 2017, ARXIV170600933V3CSSE
   Tourwe T, 2003, AOSD 2003 WORKSH SOF
   Tsang SL, 2004, 7 IEEE INT S OBJ OR
   Walker R, 1999, 21 INT C SOFTW ENG I
   YOURDON E, 1979, STRUCTURED DESIGN FU
   Zelkowitz MV, 1998, COMPUTER, V31, P23, DOI 10.1109/2.675630
NR 94
TC 16
Z9 16
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2018
VL 23
IS 4
BP 2018
EP 2050
DI 10.1007/s10664-017-9580-7
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GK0MK
UT WOS:000435804100006
DA 2024-07-18
ER

PT J
AU Lin, DY
   Bezemer, CP
   Hassan, AE
AF Lin, Dayi
   Bezemer, Cor-Paul
   Hassan, Ahmed E.
TI An empirical study of early access games on the Steam platform
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Early access games; Computer games; Steam
ID USER INVOLVEMENT
AB "Early access" is a release strategy for software that allows consumers to purchase an unfinished version of the software. In turn, consumers can influence the software development process by giving developers early feedback. This early access model has become increasingly popular through digital distribution platforms, such as Steam which is the most popular distribution platform for games. The plethora of options offered by Steam to communicate between developers and game players contribute to the popularity of the early access model. The model is considered a success by the game development community as several games using this approach have gained a large user base (i.e., owners) and high sales. On the other hand, the benefits of the early access model have been questioned as well. In this paper, we conduct an empirical study on 1,182 Early Access Games (EAGs) on the Steam platform to understand the characteristics, advantages and limitations of the early access model. We find that 15% of the games on Steam make use of the early access model, with the most popular EAG having as many as 29 million owners. 88% of the EAGs are classified by their developers as so-called "indie" games, indicating that most EAGs are developed by individual developers or small studios. We study the interaction between players and developers of EAGs and the Steam platform. We observe that on the one hand, developers update their games more frequently in the early access stage. On the other hand, the percentage of players that review a game during its early access stage is lower than the percentage of players that review the game after it leaves the early access stage. However, the average rating of the reviews is much higher during the early access stage, suggesting that players are more tolerant of imperfections in the early access stage. The positive review rate does not correlate with the length or the game update frequency of the early access stage. Based on our findings, we suggest game developers to use the early access model as a method for eliciting early feedback and more positive reviews to attract additional new players. In addition, our findings suggest that developers can determine their release schedule without worrying about the length of the early access stage and the game update frequency during the early access stage.
C1 [Lin, Dayi; Bezemer, Cor-Paul] Queens Univ, SAIL, Kingston, ON, Canada.
   [Hassan, Ahmed E.] Queens Univ, Software Analyt, Kingston, ON, Canada.
   [Hassan, Ahmed E.] Queens Univ, Sch Comp, Kingston, ON, Canada.
C3 Queens University - Canada; Queens University - Canada; Queens
   University - Canada
RP Lin, DY (corresponding author), Queens Univ, SAIL, Kingston, ON, Canada.
EM dayi.lin@cs.queensu.ca; bezemer@cs.queensu.ca; ahmed@cs.queensu.ca
RI Hassan, Ahmed/AAB-7241-2019; Lin, Dayi/AAS-8054-2020; Ali,
   Ahmed/HOF-4672-2023; KHALIFA, AHMED khalifa/HKF-2246-2023
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; Bezemer,
   Cor-Paul/0000-0002-0474-5718; Lin, Dayi/0000-0002-4034-6650
CR Al-Ani B., 2008, Proc. Int'l Workshop Cooperative and Human Aspects of Software Eng. (CHASE 08), P1, DOI DOI 10.1145/1370114.1370115
   Allen P., 2016, Is Steam's Early Access a ticking time bomb?
   [Anonymous], THINK DESIGN PLAY
   Cards C, 2015, FREE PLAY COMING SOO
   Chambers C., 2005, P 5 ACM SIGCOMM C IN, P1
   Chambers J. M., 1991, STAT MODELS S
   Clifford C., 2014, Crowdfunding Generates More Than 0,000 an Hour (Infographic)
   CPx, 2015, POOL NAT FX LIT NOW
   Damodaran L, 1996, BEHAV INFORM TECHNOL, V15, P363, DOI 10.1080/014492996120049
   Dictionary O, 2016, OXF DICT DEF CROWDF
   EuroGamer, 2014, DAYZ WEEK ON SAL ROC
   Fine D, 2016, DOUBL FIN WHAT IS DO
   Foley M.J., 2015, Microsoft launches new Office Insider test program
   Gallivan MJ, 2003, INFORM SYST J, V13, P37, DOI 10.1046/j.1365-2575.2003.00138.x
   Galyonkin S., 2017, STEAM SALES 2016
   Greg D., 2014, Double Fine - Action Forums
   Johnson J., 2000, Chaos in the new millennium: The ghost of christmas future
   Johnson J., 1999, SOFTWARE MAG, V19, P30
   Kujala S, 2003, BEHAV INFORM TECHNOL, V22, P1, DOI 10.1080/0144929021000055530
   LadyAijou, 2015, ETA GETT OUT EARL AC
   LadyAijou, 2014, EARL ACC EDG SPAC GE
   LeBreton J., 2014, JP LeBreton's twitter
   Lin D, 2016, EMPIRICAL SOFTWARE E
   Logfeller, 2014, REL DAT UND GEN DISC
   Long J.D., 2003, Ordinal Analysis of Behavioral Data
   Lowgren J, 2004, THOUGHTFUL INTERACTION DESIGN: A DESIGN PERSPECTIVE ON INFORMATION TECHNOLOGY, P1
   Maalej W., 2009, P 24 ACM SIGPLAN C C, P981, DOI [10.1145/1639950.1640068, DOI 10.1145/1639950.1640068]
   Manes S., 1984, PC Mag, P211
   Martin W., 2016, RN, V16, P02
   McDougall J., 2010, Community heroes: Notch, for Minecraft
   Medierra, 2015, IS THIS GAM COM OUT
   O'reilly T, 2007, COMMUN STRAT, V97, P253
   Orland K., 2014, Introducing Steam Gauge: Ars reveals Steams most popular games
   Orland K, 2011, MINECRAFT DRAWS 33 M
   Pavel Djundik MB, 2016, STEAM DB STEAM DATAB
   PCGamer, 2014, T SCHAF EXPL SPAC DF
   Romano J., 2006, P ANN M SO ASS I RES
   Stern C., 2012, what makes a game indie: a universal definition
   Takkunen P., 2015, Moving out of Early Access
   Taylor T.L., 2006, 1 MONDAY
   ThunderPeel2001, 2015, FACTS SPAC DF 9
   TimOfLegend, 2014, T SCHAF ANSW COMM QU
   Ullrich C., 2008, Proceedings of the 17th International World Wide Web Conference, P705
   Valve, 2016, SPAC DF 9 STEAM
   Valve, 2016, INTR EARL ACC
   Waclawek T., 2015, Ronin, the turn-based action-platformer, is now on Steam
   Walker P., 2014, Early Access popularity growing, but only 25% have released as a full game
   Washburn M, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P280, DOI 10.1145/2889160.2889253
   Welch C., 2013, Steam Early Access lets gamers buy and play titles still in development
   Yin-Poole W., 2014, Valve tightens Steam Early Access rules for developers
NR 50
TC 24
Z9 27
U1 1
U2 35
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2018
VL 23
IS 2
BP 771
EP 799
DI 10.1007/s10664-017-9531-3
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GC1OI
UT WOS:000429551000004
DA 2024-07-18
ER

PT J
AU Alégroth, E
   Feldt, R
AF Alegroth, Emil
   Feldt, Robert
TI On the long-term use of visual gui testing in industrial practice: a
   case study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Automated testing; Visual GUI testing; Guidelines; Industrial; Case
   study
ID SOFTWARE; TOOLS
AB Visual GUI Testing (VGT) is a tool-driven technique for automated GUI-based testing that uses image recognition to interact with and assert the correctness of the behavior of a system through its GUI as it is shown to the user. The technique's applicability, e.g. defect-finding ability, and feasibility, e.g. time to positive return on investment, have been shown through empirical studies in industrial practice. However, there is a lack of studies that evaluate the usefulness and challenges associated with VGT when used long-term (years) in industrial practice. This paper evaluates how VGT was adopted, applied and why it was abandoned at the music streaming application development company, Spotify, after several years of use. A qualitative study with two workshops and five well chosen employees is performed at the company, supported by a survey, which is analyzed with a grounded theory approach to answer the study's three research questions. The interviews provide insights into the challenges, problems and limitations, but also benefits, that Spotify experienced during the adoption and use of VGT. However, due to the technique's drawbacks, VGT has been abandoned for a new technique/framework, simply called the Test interface. The Test interface is considered more robust and flexible for Spotify's needs but has several drawbacks, including that it does not test the actual GUI as shown to the user like VGT does. From the study's results it is concluded that VGT can be used long-term in industrial practice but it requires organizational change as well as engineering best practices to be beneficial. Through synthesis of the study's results, and results from previous work, a set of guidelines are presented that aim to aid practitioners to adopt and use VGT in industrial practice. However, due to the abandonment of the technique, future research is required to analyze in what types of projects the technique is, and is not, long-term viable. To this end, we also present Spotify's Test interface solution for automated GUI-based testing and conclude that it has its own benefits and drawbacks.
C1 [Alegroth, Emil] Blekinge Inst Technol, Dept Comp Sci & Engn, SE-37179 Karlskrona, Sweden.
   [Feldt, Robert] Chalmers Univ Technol, Dept Comp Sci & Engn, SE-41296 Gothenburg, Sweden.
C3 Blekinge Institute Technology; Chalmers University of Technology
RP Alégroth, E (corresponding author), Blekinge Inst Technol, Dept Comp Sci & Engn, SE-37179 Karlskrona, Sweden.
EM emil.alegroth@bth.se
OI Alegroth, Emil/0000-0001-7526-3727
CR Alegroth E., 2014, EMPIR SOFTW ENG, V20, P1
   Alegroth E., 2015, 2015 IEEE 8 INT C SO, P1
   Alegroth E, 2013, TECH REP
   Alégroth E, 2016, IEEE ICST WORKSHOP, P257, DOI 10.1109/ICSTW.2016.47
   Alégroth E, 2016, INFORM SOFTWARE TECH, V73, P66, DOI 10.1016/j.infsof.2016.01.012
   Alégroth E, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P439, DOI 10.1109/ICST.2013.61
   Alégroth E, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P56, DOI 10.1109/ICST.2013.14
   [Anonymous], EMPIRICAL SOFTW ENG
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], 2009, STRATEGIE BADANIA JA
   [Anonymous], 1980, Principles of Artificial Intelligence
   [Anonymous], SERPS 06
   Berner S, 2005, PROC INT CONF SOFTW, P571
   Borjesson E., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P350, DOI 10.1109/ICST.2012.115
   Carver J, 2007, LECT NOTES COMPUT SC, V4336, P42
   Finsterwalder M., 2001, Proc. of the 2nd Int. Conf. on Extreme Prog, P114
   Grechanik M, 2009, IEEE ICST WORKSHOP, P243, DOI 10.1109/ICSTW.2009.31
   Grechanik M, 2009, PROC INT CONF SOFTW, P408, DOI 10.1109/ICSE.2009.5070540
   Hellmann T., 2014, An Exploratory Study of Automated GUI Testing: Goals, Issues, and Best Practices
   Höfer A, 2007, LECT NOTES COMPUT SC, V4336, P10
   Holmes A, 2006, AGILE 2006, Proceedings, P270, DOI 10.1109/AGILE.2006.19
   Isaacson C, 2004, US Patent, Patent No. [10/844,095, 10844095]
   Itkonen J, 2005, 2005 INT S EMP SOFTW, V10
   Karhu Katja, 2009, 2009 2nd International Conference on Software Testing Verification and Validation (ICST 2009), P201, DOI 10.1109/ICST.2009.16
   Kendall C, 2008, AIDS BEHAV, V12, pS97, DOI 10.1007/s10461-008-9390-4
   Kniberg H., 2012, Scaling agile @ spotify with tribes, squads, chapters guilds
   Lalwani T, 2013, UFT QTP INTERVIEW UN
   Leotta M, 2016, ADV COMPUT, V101, P193, DOI 10.1016/bs.adcom.2015.11.007
   Leotta M, 2014, LECT NOTES COMPUT SC, V8541, P322, DOI 10.1007/978-3-319-08245-5_19
   Leotta M, 2013, WORK CONF REVERSE EN, P272, DOI 10.1109/WCRE.2013.6671302
   Marchenko A, 2009, LECT NOTES BUS INF P, V31, P13
   Nguyen BN, 2014, AUTOMAT SOFTW ENG, V21, P65, DOI 10.1007/s10515-013-0128-9
   Olan M., 2003, Journal of Computing Sciences in Colleges, V19, P319
   Olsson HH, 2012, EUROMICRO CONF PROC, P392, DOI 10.1109/SEAA.2012.54
   Olsson N., 2015, Graphwalker: The Open Source Model-Based Testing Tool
   Patel C., 2012, Int. J. Comput. Appl., V55
   Rafi D. M., 2012, 2012 Proceedings of 7th International Workshop on Automation of Software Test (AST 2012), P36, DOI 10.1109/IWAST.2012.6228988
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Saladana J., 2012, The coding manual for qualitative researchers
   Vizulis V, 2012, BALT J MOD COMPUT, V787, P27
   Weinstein M., 2002, TAMS Analyzer for Macintosh OS X: The native Open source, Macintosh Qualitative Research Tool
   Yeh T, 2009, UIST 2009: PROCEEDINGS OF THE 22ND ANNUAL ACM SYMPOSIUM ON USER INTERFACE SOFTWARE AND TECHNOLOGY, P183
NR 42
TC 24
Z9 25
U1 0
U2 26
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2017
VL 22
IS 6
BP 2937
EP 2971
DI 10.1007/s10664-016-9497-6
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FI3MB
UT WOS:000411865400006
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Tosun, A
   Dieste, O
   Fucci, D
   Vegas, S
   Turhan, B
   Erdogmus, H
   Santos, A
   Oivo, M
   Toro, K
   Jarvinen, J
   Juristo, N
AF Tosun, Ayse
   Dieste, Oscar
   Fucci, Davide
   Vegas, Sira
   Turhan, Burak
   Erdogmus, Hakan
   Santos, Adrian
   Oivo, Markku
   Toro, Kimmo
   Jarvinen, Janne
   Juristo, Natalia
TI An industry experiment on the effects of test-driven development on
   external quality and productivity
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Industry experiment; Test-driven development; External quality;
   Productivity
AB Existing empirical studies on test-driven development (TDD) report different conclusions about its effects on quality and productivity. Very few of those studies are experiments conducted with software professionals in industry. We aim to analyse the effects of TDD on the external quality of the work done and the productivity of developers in an industrial setting. We conducted an experiment with 24 professionals from three different sites of a software organization. We chose a repeated-measures design, and asked subjects to implement TDD and incremental test last development (ITLD) in two simple tasks and a realistic application close to real-life complexity. To analyse our findings, we applied a repeated-measures general linear model procedure and a linear mixed effects procedure. We did not observe a statistical difference between the quality of the work done by subjects in both treatments. We observed that the subjects are more productive when they implement TDD on a simple task compared to ITLD, but the productivity drops significantly when applying TDD to a complex brownfield task. So, the task complexity significantly obscured the effect of TDD. Further evidence is necessary to conclude whether TDD is better or worse than ITLD in terms of external quality and productivity in an industrial setting. We found that experimental factors such as selection of tasks could dominate the findings in TDD studies.
C1 [Tosun, Ayse] Istanbul Tech Univ, Fac Comp Engn & Informat, Istanbul, Turkey.
   [Dieste, Oscar; Vegas, Sira; Juristo, Natalia] UPM, Escuela Tecn Super Ingn Informat, Madrid, Spain.
   [Fucci, Davide; Turhan, Burak; Santos, Adrian; Oivo, Markku; Juristo, Natalia] Univ Oulu, Dept Informat Proc Sci, Oulu, Finland.
   [Erdogmus, Hakan] Carnegie Mellon Univ, Dept Elect & Comp Engn, Moffett Field, CA USA.
   [Toro, Kimmo; Jarvinen, Janne] FSecure Corp, Helsinki, Finland.
C3 Istanbul Technical University; Universidad Politecnica de Madrid;
   University of Oulu; Carnegie Mellon University
RP Tosun, A (corresponding author), Istanbul Tech Univ, Fac Comp Engn & Informat, Istanbul, Turkey.
EM tosunay@itu.edu.tr; odieste@fi.upm.es; davide.fucci@oulu.fi;
   svegas@fi.upm.es; burak.turhan@oulu.fi; hakan.erdogmus@west.cmu.edu;
   adrian.santos1987@gmail.com; markku.oivo@oulu.fi;
   kimmo.toro@f-secure.com; janne.jarvinen@f-secure.com; natalia@fi.upm.es
RI Fucci, Davide/C-1463-2015; Erdogmus, Hakan/HTQ-8803-2023; Järvinen,
   Janne/HJJ-1432-2023; Turhan, Burak/G-7400-2011; Dieste,
   Oscar/K-6193-2014; Tosun, Ayse/B-4794-2014; Vegas, Sira/R-6742-2018
OI Fucci, Davide/0000-0002-0679-4361; Erdogmus, Hakan/0000-0002-7987-5621;
   Turhan, Burak/0000-0003-1511-2163; Dieste, Oscar/0000-0002-3060-7853;
   Tosun, Ayse/0000-0003-1859-7872; Jarvinen, Janne/0000-0002-2000-6552
FU Spanish Ministry of Science and Innovation [TIN2011-23216];
   Distinguished Professor Program of Tekes, and the Academy of Finland
   [260871]; Academy of Finland (AKA) [260871] Funding Source: Academy of
   Finland (AKA)
FX This research has been partly funded by Spanish Ministry of Science and
   Innovation projects TIN2011-23216, the Distinguished Professor Program
   of Tekes, and the Academy of Finland (Grant Decision No. 260871). We
   would like to thank Dr. Lucas Layman for his contributions in designing
   one of the tasks used in this experiment. We would also like to
   sincerely thank FSecure Corporation and the software professionals who
   attended our training/experiment.
CR Aniche MF, 2010, 3 INT C SOFTW TEST V
   [Anonymous], 2015, BOWLING GAME KATA
   [Anonymous], THESIS
   [Anonymous], 2014, ORACLE VIRTUAL BOX 4
   [Anonymous], 2014, ECLIPSE HELIOS
   [Anonymous], 2003, TEST DRIVEN DEV EXAM
   Basili Victor R, 1992, Technical Report CSTR- 2956, UMIACSTR-92-9
   Becker K, 2014, INFORM SOFTWARE TECH
   Bergersen GR, 2014, IEEE T SOFTWARE ENG, V40, P1163, DOI 10.1109/TSE.2014.2348997
   Campbell D.T., 2001, Experimental and quasiexperimental designs for generalized causal inference
   Canfora G., 2006, P 2006 ACMIEEE INT S, P364
   Causevic A., 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P337, DOI 10.1109/ICST.2011.19
   Causevic A, 2010, 3 IEEE INT C SOFTW T
   COHEN J, 1992, PSYCHOL BULL, V112, P155, DOI 10.1037/0033-2909.112.1.155
   Draper D, 2006, DOJO KATA OR RANDORI
   Ellis PD, 2010, ESSENTIAL GUIDE TO EFFECT SIZES: STATISTICAL POWER, META-ANALYSIS AND THE INTERPRETATION OF RESEARCH RESULTS, P1
   Emam K, 2003, TECHNICAL REPORT
   Erdogmus H, 2005, IEEE T SOFTWARE ENG, V31, P226, DOI 10.1109/TSE.2005.37
   Field A., 2007, DISCOVERING STAT USI, V2nd
   Fucci Davide, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P103, DOI 10.1109/ESEM.2013.15
   Fucci D., 2014, Proceedings of the 8th ACM/IEEE International Symposium on Empirical Software Engineering and Measurement, P10
   Fucci D, 2015, INFORM SOFTWARE TECH, V68, P82, DOI 10.1016/j.infsof.2015.08.004
   Gamma E, 2014, JUNIT TESTING FRAMEW
   George B, 2004, INFORM SOFTWARE TECH, V46, P337, DOI 10.1016/j.infsof.2003.09.011
   George B, 2003, ACM S APPL COMP
   Geras A, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P405, DOI 10.1109/METRIC.2004.1357925
   Ivarsson M, 2011, EMPIR SOFTW ENG, V16, P365, DOI 10.1007/s10664-010-9146-4
   Jedlitschka A., 2005, INT S EMP SOFTW ENG
   Juristo N, 2016, 4 INT WORKSH COND EM
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Kim Hae-Young, 2013, Restor Dent Endod, V38, P52, DOI 10.5395/rde.2013.38.1.52
   Kollanus S, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P403, DOI 10.1109/QUATIC.2010.73
   Latorre R, 2014, IEEE T SOFTWARE ENG, V40, P381, DOI 10.1109/TSE.2013.2295827
   Latorre R, 2014, EMPIR SOFTW ENG, V19, P753, DOI 10.1007/s10664-013-9281-9
   Madeyski L, 2007, LECT NOTES COMPUT SC, V4764, P200
   Maximilien EM, 2003, INT C SOFTW ENG ICSE
   McCulloch CharlesE., 2000, Generalized, linear, and mixed models
   Munir H, 2014, INFORM SOFTWARE TECH, V56, P375, DOI 10.1016/j.infsof.2014.01.002
   Nagappan N, 2008, EMPIR SOFTW ENG, V13, P289, DOI 10.1007/s10664-008-9062-z
   Pancur M, 2011, INF SOFTW TECHNOL
   Rafique Y, 2013, IEEE T SOFTWARE ENG, V39, P835, DOI 10.1109/TSE.2012.28
   Robert C., 2002, ANN C BRIT ED RES AS
   Rodriguez P, 2012, 6 INT S EMP SOFTW EN
   Salman I, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P666, DOI 10.1109/ICSE.2015.82
   Sanchez JC, 2007, AGILE 2007, PROCEEDINGS, P5, DOI 10.1109/AGILE.2007.43
   Siniaalto M, 2006, TECHNICAL REPORT
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Still Jari, 2007, Product-Focused Software Process Improvements. Proceedings 8th International Conference, PROFES 2007
   Tosun-Misirli A, 2014, 3 INT WORKSH COND EX
   Turhan B, 2010, MAKING SOFTWARE WHAT
   VersionOne, 2013, TECHNICAL REPORT
   Williams L, 2003, 14 INT S SOFTW REL E
   Winer B. J., 1971, STAT PRINCIPLES EXPT
   Wohlin C., 2012, Experimentation in Software Engineering
NR 54
TC 22
Z9 23
U1 1
U2 17
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2017
VL 22
IS 6
BP 2763
EP 2805
DI 10.1007/s10664-016-9490-0
PG 43
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FI3MB
UT WOS:000411865400002
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Ali, S
   Iqbal, MZ
   Khalid, M
   Arcuri, A
AF Ali, Shaukat
   Iqbal, Muhammad Zohaib
   Khalid, Maham
   Arcuri, Andrea
TI Improving the performance of OCL constraint solving with novel
   heuristics for logical operations: a search-based approach
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE UML; OCL; Search-based testing; Test data; Empirical evaluation
AB A common practice to specify constraints on the Unified Modeling Language (UML) models is using the Object Constraint Language (OCL). Such constraints serve various purposes, ranging from simply providing precise meaning to the models to supporting complex verification and validation activities. In many applications, these constraints have to be solved to obtain values satisfying the constraints, for example, in the case of model-based testing (MBT) to generate test data for the purpose of generating executable test cases. In our previous work, we proposed novel heuristics for various OCL constructs to efficiently solve them using search algorithms. These heuristics are enhanced in this paper to further improve the performance of OCL constraint solving. We performed an empirical evaluation comprising of three case studies using three search algorithms: Alternating Variable Method (AVM), (1 + 1) Evolutionary Algorithm (EA), and a Genetic Algorithm (GA) and in addition Random Search (RS) was used as a comparison baseline. In the first case study, we evaluated each heuristics using carefully designed artificial problems. In the second case study, we evaluated the heuristics on various constraints of Cisco's Video Conferencing Systems defined to support MBT. Finally, the third case study is about EU-Rent Car Rental specification and is obtained from the literature. The results of the empirical evaluation showed that (1 + 1) EA and AVM with the improved heuristics significantly outperform the rest of the algorithms.
C1 [Ali, Shaukat] Simula Res Lab, Fornebu, Norway.
   [Iqbal, Muhammad Zohaib; Khalid, Maham] Natl Univ Comp & Emerging Sci, Quest Lab, Islamabad, Pakistan.
   [Arcuri, Andrea] Univ Luxembourg, SnT Ctr, Walferdange, Luxembourg.
   [Arcuri, Andrea] Scienta, Oslo, Norway.
C3 University of Luxembourg
RP Ali, S (corresponding author), Simula Res Lab, Fornebu, Norway.
EM shaukat@simula.no; zohaib.iqbal@nu.edu.pk; maham.khalid@questlab.pk;
   aa@scienta.no
OI Iqbal, Muhammad Zohaib Z/0000-0001-8190-5327
FU National Research Fund, Luxembourg [FNR/P10/03]; National ICT R&D Fund,
   Pakistan (ICTRDF/MBTToolset)
FX This paper is supported by the National Research Fund, Luxembourg
   (FNR/P10/03). Muhammad Zohaib Iqbal and Maham Khalid were also supported
   by National ICT R&D Fund, Pakistan (ICTRDF/MBTToolset/2013).
CR Afzal W, 2009, INFORM SOFTWARE TECH, V51, P957, DOI 10.1016/j.infsof.2008.12.005
   Ali S., 2011, ACM IEEE 14 INT C MO
   Ali S., 2014, P 2014 C GEN EV COMP
   Ali S, 2009, IEEE T SOFTWARE ENG, V99
   Ali S., 2011, P 11 INT C QUAL SOFT
   Ali S, 2013, IEEE T SOFTWARE ENG, V39, P1376, DOI 10.1109/TSE.2013.17
   Ali S, 2012, SOFTW SYST MODEL, V11, P633, DOI 10.1007/s10270-011-0206-z
   [Anonymous], 1999, Testing Object-Oriented Systems: Models, Patterns, and Tools
   [Anonymous], 2000, HDB PARAMETRIC NONPA
   Arcuri A., 2011, INT S SEARCH BAS SOF
   Arcuri A., 2010, P 2010 3 INT C SOFTW
   Arcuri A, 2011, VERIFICATION RELIAB, DOI [10.1002/stvr.457, DOI 10.1002/STVR.457]
   Arcuri A, 2013, EMPIR SOFTW ENG, V18, P594, DOI 10.1007/s10664-013-9249-9
   Arcuri A, 2012, IEEE T SOFTWARE ENG, V38, P258, DOI 10.1109/TSE.2011.121
   Arcuri Andrea, 2011, INT C SOFTW ENG ICSE
   Bao-Lin L., 2007, INT C CIMP INT SEC
   Bertolino A, 2007, 2007 FUT SOFTW ENG
   Bordbar B., 2005, IADIS INT C APPL COM
   Brucker A. D., 2010, WORKSH OCL TEXT MOD
   Burke E.K., 2006, Search methodologies: Introductory tutorials in optimization and decision support techniques
   Cabot Jordi, 2012, Formal Methods for Model-Driven Engineering. 12th International School of Formal Methods for the Design of Computer, Communication and Software Systems (SFM 2012). Advanced Lectures, P58, DOI 10.1007/978-3-642-30982-3_3
   Cabot J, 2008, P 2008 I E INT C SOF
   Clarke J., 2003, IEE Proceedings-Software, V150, P161, DOI 10.1049/ip-sen:20030559
   Clavel M., 2009, P 9 OCL 2009 WORKSH
   Coley D.A., 1997, INTRO GENETIC ALGORI
   Costal D, 2008, SOFTW SYST MODEL, V7, P469, DOI 10.1007/s10270-007-0078-4
   Distefano D., 2000, ECOOP WORKSH DEF PRE
   Drechsler R., 2002, Evolutionary Algorithms for Embedded System Design (Genetic Algorithms and Evolutionary Computation)
   Fraser Gordon, 2011, PROC 19 ACM SIGSOFT, P416, DOI 10.1145/2025113.2025179
   Frias L, 2003, U RENT CAR RENTALS S
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Harman M., 2009, TR0903 KINGS COLL
   Harman M, 2012, SEARCH BASED SOFTWAR
   Hong L, 2014, SOFTW REL ENG ISSRE, P13, DOI 10.1109/ISSRE.2014.13
   Iqbal Muhammad Zohaib, 2012, Search Based Software Engineering. Proceedings of the 4th International Symposium (SSBSE 2012), P136, DOI 10.1007/978-3-642-33119-0_11
   Iqbal M. Z., 2012, INT S SOFTW TEST AN
   Iqbal MZ, 2012, ACM IEEE INT C MOD D
   Jackson D., 2000, P 22 INT C SOFTW ENG
   KOREL B, 1990, IEEE T SOFTWARE ENG, V16, P870, DOI 10.1109/32.57624
   Krieger M., 2008, 8 INT WORKSH OCL CON
   Lv Aertryck, 2003, APPR FORM DANS ASS D
   Mantere T, 2005, APPL SOFT COMPUT, V5, P315, DOI 10.1016/j.asoc.2004.08.004
   MATHUR AP, 2008, FDN SOFTWARE TESTING
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   OCL, 2011, OBH CONSTR LANG SPEC
   Souza J.T.d., 2010, P 2 INT S SEARCH BAS
   Tairas R, 2012, LECT NOTES COMPUTER, P60, DOI 10.1007/978-3-642-28830-2_4
   Wang C, 2015, INT S SOFTW TEST AN
   Wilson B, 1994, EU RENT CAR RENTALS
   Winkelmann J, 2008, ELECTRON NOTES THEOR, V211, P159, DOI 10.1016/j.entcs.2008.04.038
   Wohlin C., 1999, EXPT SOFTWARE ENG IN
NR 51
TC 13
Z9 16
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2016
VL 21
IS 6
BP 2459
EP 2502
DI 10.1007/s10664-015-9392-6
PG 44
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ED7XQ
UT WOS:000389085500008
DA 2024-07-18
ER

PT J
AU Nguyen, VH
   Dashevskyi, S
   Massacci, F
AF Nguyen, Viet Hung
   Dashevskyi, Stanislav
   Massacci, Fabio
TI An automatic method for assessing the versions affected by a
   vulnerability
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software security; Empirical validation; Vulnerability analysis;
   National vulnerability database (NVD); Browsers
AB Vulnerability data sources are used by academics to build models, and by industry and government to assess compliance. Errors in such data sources therefore not only are threats to validity in scientific studies, but also might cause organizations, which rely on retro versions of software, to lose compliance. In this work, we propose an automated method to determine the code evidence for the presence of vulnerabilities in retro software versions. The method scans the code base of each retro version of software for the code evidence to determine whether a retro version is vulnerable or not. It identifies the lines of code that were changed to fix vulnerabilities. If an earlier version contains these deleted lines, it is highly likely that this version is vulnerable. To show the scalability of the method we performed a large scale experiments on Chrome and Firefox (spanning 7,236 vulnerable files and approximately 9,800 vulnerabilities) on the National Vulnerability Database (NVD). The elimination of spurious vulnerability claims (e.g. entries to a vulnerability database such as NVD) found by our method may change the conclusions of studies on the prevalence of foundational vulnerabilities.
C1 [Nguyen, Viet Hung; Dashevskyi, Stanislav; Massacci, Fabio] Univ Trento, Dept Informat Engn & Comp Sci DISI, Trento, Italy.
C3 University of Trento
RP Nguyen, VH (corresponding author), Univ Trento, Dept Informat Engn & Comp Sci DISI, Trento, Italy.
EM vhnguyen@disi.unitn.it; stanislav.dashevskyi@unitn.it;
   Fabio.Massacci@unitn.it
RI Massacci, Fabio/C-2662-2012
OI Massacci, Fabio/0000-0002-1091-8486
FU European Union [256980, 285223, 317387]; Italian Project
   MIUR-PRIN-TENACE
FX This work has been partly supported by the European Union Seventh
   Framework Programme (FP7/2007-2013) under grant agreement no. 256980
   (NESSOS), and agreement no. 285223 (SECONOMICS), and grant agreement no.
   317387 (SECENTIS), and the Italian Project MIUR-PRIN-TENACE.
CR Agresti A., 2012, Statistics: the art science of learning from data, V3rd
   Allodi L, 2013, MALWARELAB EXPT CYBE
   [Anonymous], 2014, THESIS
   [Anonymous], 2007, PROMISE 07, DOI DOI 10.1109/PROMISE.2007.10
   Antoniol G, 2008, IS IT BUG ENHANCEMEN
   Bird C, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P121, DOI 10.1145/1595696.1595716
   Chowdhury I, 2011, J SYST ARCHITECT, V57, P294, DOI 10.1016/j.sysarc.2010.06.003
   Chromium Developers, 2013, CHROM STABL REL HIST
   Krsul IV, 1998, THESIS
   Massacci F, 2010, P INT ACM WORKSH SEC
   Massacci F, 2011, P 2011 ENG SEC SOFTW
   Massacci F, 2014, IEEE T SOFTWARE ENG, V40, P1147, DOI 10.1109/TSE.2014.2354037
   Meneely A., 2013, PATCH GOES BAD EXPLO
   Needham R, 2002, SECURITY OPEN SOURCE
   Neuhaus S, 2007, CCS'07: PROCEEDINGS OF THE 14TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P529
   Nguyen T, 2010, P 17 WORK C REV ENG
   Nguyen VH, 2013, P 8 ACM S INF COMP C
   Ozment A, 2007, THESIS
   Ozment A, 2006, P 15 USENIX SEC S
   Quinn SD, 2010, TECH REP
   Roumani Y, 2015, COMPUT SECUR, V51, P32, DOI 10.1016/j.cose.2015.03.003
   Shin Y, 2011, IEEE T SOFTWARE ENG, V37, P772, DOI 10.1109/TSE.2010.81
   Sliwerski J, 2005, P INT WORKSH MIN SOF, P24
   Taleb NassimNicholas., 2010, BLACK SWAN IMPACT HI, V2
   Williams BR, 2012, PCI COMPLIANCE UNDER
   Younan Y., 2013, 25 YEARS VULNERABILI
NR 26
TC 24
Z9 25
U1 2
U2 7
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2016
VL 21
IS 6
BP 2268
EP 2297
DI 10.1007/s10664-015-9408-2
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ED7XQ
UT WOS:000389085500002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU McIlroy, S
   Ali, N
   Hassan, AE
AF McIlroy, Stuart
   Ali, Nasir
   Hassan, Ahmed E.
TI Fresh apps: an empirical study of frequently-updated mobile apps in the
   Google play store
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Mobile apps; Release patterns; Reverse engineering; Source code
   analysis; Software releases; Release frequency
AB Mobile app stores provide a unique platform for developers to rapidly deploy new updates of their apps. We studied the frequency of updates of 10,713 mobile apps (the top free 400 apps at the start of 2014 in each of the 30 categories in the Google Play store). We find that a small subset of these apps (98 apps representing (similar to)1 % of the studied apps) are updated at a very frequent rate - more than one update per week and 14 % of the studied apps are updated on a bi-weekly basis (or more frequently). We observed that 45 % of the frequently-updated apps do not provide the users with any information about the rationale for the new updates and updates exhibit a median growth in size of 6 %. This paper provides information regarding the update strategies employed by the top mobile apps. The results of our study show that 1) developers should not shy away from updating their apps very frequently, however the frequency varies across store categories. 2) Developers do not need to be too concerned about detailing the content of new updates. It appears that users are not too concerned about such information. 3) Users highly rank frequently-updated apps instead of being annoyed about the high update frequency.
C1 [McIlroy, Stuart; Hassan, Ahmed E.] Queens Univ, Sch Comp, SAIL, Kingston, ON, Canada.
   [Ali, Nasir] Univ Waterloo, Dept Elect & Comp Engn, Waterloo, ON, Canada.
C3 Queens University - Canada; University of Waterloo
RP McIlroy, S (corresponding author), Queens Univ, Sch Comp, SAIL, Kingston, ON, Canada.
EM mcilroy@cs.queensu.ca; nasir.ali@uwaterloo.ca; ahmed@cs.queensu.ca
RI Ali, Ahmed/HOF-4672-2023; Hassan, Ahmed/AAB-7241-2019; KHALIFA, AHMED
   khalifa/HKF-2246-2023
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572
CR Adobe, 2014, MOB AN
   [Anonymous], 2013, P 21 IEEE INT REQ EN
   App Annie, 2014, ANALYTICS
   Apple, 2014, VIEW CHANG YOUR APPS
   Brut.alll, 2014, APK TOOL
   Carreño LVG, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P582, DOI 10.1109/ICSE.2013.6606604
   Chen BX, 2014, SAMSUNG GALAXY PHONE
   Distimo, 2013, GOOGL PLAY STOR US T
   Dolstra E, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE EIGHTEENTH LARGE INSTALLATION SYSTEM ADMINISTRATION CONFERENCE, P79
   Flurry, 2014, FLURR AN
   Gartner, 2014, GARTN SAYS MOB APP S
   Harman M., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P108, DOI 10.1109/MSR.2012.6224306
   Hodgetts Paul., 2002, Extreme Programming Perspectives, P355
   Humble Jez, 2010, Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation
   Iacob C, 2013, IEEE WORK CONF MIN S, P41, DOI 10.1109/MSR.2013.6624001
   Jenkins J, 2011, OR VEL C
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Khalid H., 2014, IEEE SOFTWARE
   Khomh F., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P179, DOI 10.1109/MSR.2012.6224279
   Kim H.W., 2011, 11 INT DSI 16 APDSI
   Kuppuswami S., 2003, ACM SIGSOFT Software Engineering Notes, V28, P6
   Lim SL, 2013, 2013 IEEE CONGRESS ON EVOLUTIONARY COMPUTATION (CEC), P2672
   Linares-Vasquez M., 2014, PROC 11 WORK C MININ, P242
   Linares-Vásquez M, 2013, IEEE WORK CONF MIN S, P93, DOI 10.1109/MSR.2013.6624014
   Linares-Vasquez Mario, 2013, P 2013 9 JOINT M FDN, P477, DOI DOI 10.1145/2491411.2491428
   Lynch J., 2012, APP STORE OPTIMIZATI
   Maas Andrew, 2011, P 49 ANN M ASS COMP
   Marschall M, 2007, AGILE 2007, Proceedings, P395, DOI 10.1109/AGILE.2007.64
   Microsoft, 2003, UND PATCH UPD MAN MI
   Mojica Ruiz IJ, 2012, IEEE INT C IN PRESS
   Mudambi SM, 2010, MIS QUART, V34, P185
   Otte Tobias, 2008, 2008 IEEE 32nd International Computer Software and Applications Conference (COMPSAC), P1247, DOI 10.1109/COMPSAC.2008.65
   Pagano D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P953, DOI 10.1109/ICSE.2013.6606645
   Pang B., 2004, ANN M ASS COMP LING, P271, DOI [10.3115/1218955.1218990, DOI 10.3115/1218955.1218990]
   Porter A., 2006, Software Process Improvement and Practice, V11, P163, DOI 10.1002/spip.260
   Ruhe G, 2005, IEEE SOFTWARE, V22, P47, DOI 10.1109/MS.2005.164
   Ruhe G, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P262, DOI 10.1109/ISESE.2003.1237987
   Ruiz I. J. M., 2014, RELATIONSHIP NUMBER
   Syer MD, 2011, IEEE INT WORK C SO, P55, DOI 10.1109/SCAM.2011.25
   Syer MD, 2013, P IBM CASCON C CASCO
   van der Storm T, 2005, P 12 INT WORKSH SOFT, P43
   Vision mobile, 2014, TECHNICAL REPORT
   Viswanathan P, 2014, ANDROID OS VS APPLE
NR 43
TC 103
Z9 106
U1 1
U2 18
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2016
VL 21
IS 3
BP 1346
EP 1370
DI 10.1007/s10664-015-9388-2
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DQ2VO
UT WOS:000379061700018
DA 2024-07-18
ER

PT J
AU Cheung, WT
   Ryu, S
   Kim, S
AF Cheung, Wai Ting
   Ryu, Sukyoung
   Kim, Sunghun
TI Development nature matters: An empirical study of code clones in
   JavaScript applications
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE JavaScript; Code clones; Web applications; Clone properties; Software
   metrics; Cloning patterns
ID WEB APPLICATIONS; EVOLUTION; SOFTWARE; PATTERNS; CLONING; SYSTEM; PAGES
AB Code cloning is one of the active research areas in the software engineering community. Specifically, researchers have conducted numerous empirical studies on code cloning and reported that 7 % to 23 % of the code in a typical software system has been cloned. However, there was less awareness of code clones in dynamically-typed languages and most studies are limited to statically-typed languages such as Java, C, and C++. In addition, most previous studies did not consider different application domains such as standalone projects or web applications. As a result, very little is known about clones in dynamically-typed languages, such as JavaScript, in different application domains. In this paper, we report a large-scale clone detection experiment in a dynamically-typed programming language, JavaScript, for different application domains: web pages and standalone projects. Our experimental results showed that unlike JavaScript standalone projects, JavaScript web applications have 95 % of inter-file clones and 91-97 % of widely scattered clones. We observed that web application developers created clones intentionally and such clones may not be as risky as claimed in previous studies. Understanding the risks of cloning in web applications requires further studies, as cloning may be due to either good or bad intentions. Also, we identified unique development practices such as including browser-dependent or device-specific code in code clones of JavaScript web applications. This indicates that features of programming languages and technologies affect how developers duplicate code.
C1 [Cheung, Wai Ting; Ryu, Sukyoung] Korea Adv Inst Sci & Technol, Dept Comp Sci, Daejeon, South Korea.
   [Kim, Sunghun] Hong Kong Univ Sci & Technol, Dept Comp Sci & Engn, Hong Kong, Hong Kong, Peoples R China.
C3 Korea Advanced Institute of Science & Technology (KAIST); Hong Kong
   University of Science & Technology
RP Ryu, S (corresponding author), Korea Adv Inst Sci & Technol, Dept Comp Sci, Daejeon, South Korea.
EM kencwt@kaist.ac.kr; sryu.cs@kaist.ac.kr; hunkim@cse.ust.hk
RI Ryu, Sukyoung/C-2080-2011; Ryu, Sukyoung/A-8543-2015
OI Ryu, Sukyoung/0000-0002-0019-9772
FU Korea Ministry of Education, Science and Technology(MEST) / National
   Research Foundation of Korea(NRF) [NRF-2014R1A2A2A01003235,
   NRF-2008-0062609]; Samsung Electronics; Google
FX This work is supported in part by Korea Ministry of Education, Science
   and Technology(MEST) / National Research Foundation of Korea(NRF)
   (Grants NRF-2014R1A2A2A01003235 and NRF-2008-0062609), Samsung
   Electronics, and Google.
CR Abd-El-Hafiz SK, 2012, P INT COMP SOFTW APP, P35, DOI 10.1109/COMPSAC.2012.14
   [Anonymous], THESIS CITESEER
   [Anonymous], P INT C SOFTW MAINT
   [Anonymous], 2009, P 3 INT WORKSHOP SOF
   [Anonymous], 2011, ISSTA
   [Anonymous], CODEMATCH
   [Anonymous], 2011, P 20 INT C WORLD WID
   [Anonymous], P 19 INT WORKSH FDN
   [Anonymous], WEB GENERATED CLONES
   [Anonymous], SIMIAN SIMILARITY AN
   [Anonymous], CODE CLONE DETECTION
   [Anonymous], 2010, P JOINT ERCIM WORKSH
   [Anonymous], P SHORT TOOL PAP TRA
   [Anonymous], JAVASCRIPT PROJ GITH
   [Anonymous], 2007, DUBLICATION REDUNDAN
   [Anonymous], DAGSTUHL REPORTS
   [Anonymous], 2009, Proceedings of the Second ACM international Conference on Web Search and Data Mining (Barcelona, Spain, February 09-12, DOI DOI 10.1145/1498759.1498809
   Antoniol G, 2001, PROC IEEE INT CONF S, P273, DOI 10.1109/ICSM.2001.972740
   Antoniol G, 2002, INFORM SOFTWARE TECH, V44, P755, DOI 10.1016/S0950-5849(02)00123-4
   Aversano L, 2007, CSMR 2007: 11TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P81
   BAKER BS, 1995, SECOND WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P86, DOI 10.1109/WCRE.1995.514697
   Balazinska M., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P292, DOI 10.1109/METRIC.1999.809750
   Baxter ID, 1998, PROC IEEE INT CONF S, P368, DOI 10.1109/ICSM.1998.738528
   Bellon S, 2007, IEEE T SOFTWARE ENG, V33, P577, DOI 10.1109/TSE.2007.70725
   Bettenburg N, 2012, SCI COMPUT PROGRAM, V77, P760, DOI 10.1016/j.scico.2010.11.010
   Boldyreff C, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P249, DOI 10.1109/WCRE.2001.957829
   Brito eAbreu., 1995, Proceedings of ECOOP Workshop on Quantitative Methods for Object-Oriented Systems Development, V95, P267
   Brixtel R, 2010, IEEE INT WORK C SO, P77, DOI 10.1109/SCAM.2010.19
   Burd E, 2002, SCAM 2002: SECOND IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS MANIPULATION, PROCEEDINGS, P36, DOI 10.1109/SCAM.2002.1134103
   Cai DX, 2011, LECT NOTES COMPUT SC, V6603, P432, DOI 10.1007/978-3-642-19811-3_30
   Calefato F., 2004, Journal of Web Engineering, V3, P3
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Chugh R, 2009, ACM SIGPLAN NOTICES, V44, P50, DOI 10.1145/1543135.1542483
   Cordy J R., 2004, Proc. LDTA 2004, ACM 4th International Workshop on Language Descriptions, P1
   Dalal N, 2005, PROC CVPR IEEE, P886, DOI 10.1109/cvpr.2005.177
   De Lucia A, 2005, PROG COMPREHEN, P333, DOI 10.1109/WPC.2005.42
   De Lucia A, 2007, J SOFTW MAINT EVOL-R, V19, P281, DOI 10.1002/smr.359
   De Lucia A, 2009, J WEB ENG, V8, P346
   Di Lucca GA, 2005, NINTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P366, DOI 10.1109/CSMR.2005.47
   Di Lucca GA, 2002, P INT COMP SOFTW APP, P481, DOI 10.1109/CMPSAC.2002.1045051
   Ducasse S, 2006, J SOFTW MAINT EVOL-R, V18, P37, DOI 10.1002/smr.317
   Ducasse S., 2004, Lightweight Detection of Duplicated Code. A Language-Independent Approach
   Falke R, 2008, EMPIR SOFTW ENG, V13, P601, DOI 10.1007/s10664-008-9073-9
   Finifter Matthew., 2010, NDSS
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Hegedus P, 2011, COMM COM INF SC, V257, P272
   Hill R, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P228, DOI 10.1109/ASE.2004.1342740
   Islam M. R., 2011, 2011 14th International Conference on Computer and Information Technology (ICCIT), P497, DOI 10.1109/ICCITechn.2011.6164840
   Jang JY, 2012, P IEEE S SECUR PRIV, P48, DOI 10.1109/SP.2012.13
   Jiang LX, 2007, PROC INT CONF SOFTW, P96
   Jiang Lingxiao, 2007, P THE 6 JOINT M EURO, P55, DOI DOI 10.1145/1287624.1287634
   Juergens E, 2009, PROC INT CONF SOFTW, P603, DOI 10.1109/ICSE.2009.5070566
   Juergens E, 2009, PROC INT CONF SOFTW, P485, DOI 10.1109/ICSE.2009.5070547
   Kamei Y., 2011, 2011 Proceedings of Joint Conf of 21st Int'l Workshop on Software Measurement and the 6th Int'l Conference on Software Process and Product Measurement (IWSM-MENSURA 2011), P55, DOI 10.1109/IWSM-MENSURA.2011.12
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kapser C, 2003, ELISA 03, P67
   Kapser CJ, 2008, EMPIR SOFTW ENG, V13, P645, DOI 10.1007/s10664-008-9076-6
   Kim H, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P301, DOI 10.1145/1985793.1985835
   Kim Miryung, 2005, ESEC/FSE- 13), P187, DOI [10.1145/1081706.1081737, DOI 10.1145/1081706.1081737]
   Kontogiannis K, 1997, PROCEEDINGS OF THE FOURTH WORKING CONFERENCE ON REVERSE ENGINEERING, P44, DOI 10.1109/WCRE.1997.624575
   Kontogiannis K. A., 1996, Automated Software Engineering, V3, P77, DOI 10.1007/BF00126960
   Koschke R, 2006, WORK CONF REVERSE EN, P253
   Kou G, 2012, ANN OPER RES, V197, P123, DOI 10.1007/s10479-010-0704-3
   Kozlov D, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P358, DOI 10.1109/QUATIC.2010.94
   Krinke J., 2011, P 5 INT WORKSHOP SOF, P28
   Krinke J, 2008, EIGHTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P57, DOI 10.1109/SCAM.2008.14
   Krinke J, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P170, DOI 10.1109/WCRE.2007.7
   Lanubile F, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P379, DOI 10.1109/CSMR.2003.1192447
   Li CQ, 2014, INT CONF DIGIT INFO, P363, DOI 10.1109/DICTAP.2014.6821712
   Li JY, 2012, PROC INT CONF SOFTW, P310, DOI 10.1109/ICSE.2012.6227183
   Livieri Simone., 2007, MSR 07, P22
   Lozano Angela, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering - Workshops, P100, DOI 10.1109/ASEW.2008.4686327
   Martin D., 2011, PROC 5 INT WORKSHOP, P41, DOI DOI 10.1145/1985404.1985412
   Martinsen JK, 2011, LECT NOTES COMPUT SC, V6757, P399, DOI 10.1007/978-3-642-22233-7_35
   Mayrand J, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P244, DOI 10.1109/ICSM.1996.565012
   Merlo E, 2002, P INT COMP SOFTW APP, P421, DOI 10.1109/CMPSAC.2002.1045038
   Merlo E, 2004, PROC IEEE INT CONF S, P412, DOI 10.1109/ICSM.2004.1357826
   Mondal M., 2012, P ACM S APPL COMPUTI, P1227, DOI DOI 10.1145/2245276.2231969
   Monden A, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P87, DOI 10.1109/METRIC.2002.1011328
   Muhammad T, 2013, CAN CON EL COMP EN, P715
   Negara N, 2013, EUR CON SFTWR MTNCE, P154, DOI 10.1109/CSMR.2013.25
   Nikiforakis Nick, 2012, P 2012 ACM C COMP CO, P736, DOI DOI 10.1145/2382196.2382274
   Ocariza FS, 2011, 22ND IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P100, DOI 10.1109/ISSRE.2011.28
   Patenaude JF, 1999, PROG COMPREHEN, P49, DOI 10.1109/WPC.1999.777743
   Rahman F, 2012, EMPIR SOFTW ENG, V17, P503, DOI 10.1007/s10664-011-9195-3
   Rajapakse DC, 2007, PROC INT CONF SOFTW, P116
   Rajapakse DC, 2005, LECT NOTES COMPUT SC, V3579, P252
   Ratanaworabhan P., 2010, P 2010 USENIX C WEB, P3
   Richards G, 2011, LECT NOTES COMPUT SC, V6813, P52, DOI 10.1007/978-3-642-22655-7_4
   Richards G, 2010, ACM SIGPLAN NOTICES, V45, P1, DOI 10.1145/1809028.1806598
   Rieger M, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P100, DOI 10.1109/WCRE.2004.25
   Roy CK, 2010, J SOFTW MAINT EVOL-R, V22, P165, DOI 10.1002/smr.416
   Roy CK, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P18, DOI 10.1109/CSMR-WCRE.2014.6747168
   Roy CK, 2008, WORK CONF REVERSE EN, P81, DOI 10.1109/WCRE.2008.54
   Roy CK, 2009, IEEE ICST WORKSHOP, P157, DOI 10.1109/ICSTW.2009.18
   Roy CK, 2009, SCI COMPUT PROGRAM, V74, P470, DOI 10.1016/j.scico.2009.02.007
   Roy ChanchalK., 2010, Proceedings of the 4th International Workshop on Software Clones, IWSC '10, P17
   Roy J. R., 2007, QUEENS SCH COMPUTING, V541, P64
   Saha R. K., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P293, DOI 10.1109/ICSM.2011.6080796
   Schleimer Saul, 2003, P 2003 ACM SIGMOD IN, P76, DOI [10.1145/872757.872770, DOI 10.1145/872757.872770]
   Shawky DM, 2010, INT CONF COMP SCI, P580, DOI 10.1109/ICCSIT.2010.5563834
   Stephan M, 2014, IEEE ICST WORKSHOP, P206, DOI 10.1109/ICSTW.2014.17
   Stephan M, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1261, DOI 10.1109/ICSE.2013.6606693
   Tairas R., 2006, P 44 ANN SE REG C, P679, DOI 10.1145/1185448.1185597
   Thummalapenta S, 2010, EMPIR SOFTW ENG, V15, P1, DOI 10.1007/s10664-009-9108-x
   Van Rysselberghe F, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P336, DOI 10.1109/ASE.2004.1342759
   VAN WELIE M., 2003, Proceedings of interact, P1
   Wang Tiantian, 2013, P 2013 9 JOINT M FDN, P455
   Yamanaka Y, 2013, CONF PROC INT SYMP C, P199, DOI 10.1109/ICPC.2013.6613848
   Zibran M. F., 2012, P 27 ANN ACM S APPL, P1235
   Zibran MF, 2011, 2011 16TH IEEE INTERNATIONAL CONFERENCE ON ENGINEERING OF COMPLEX COMPUTER SYSTEMS (ICECCS), P295, DOI 10.1109/ICECCS.2011.36
NR 111
TC 16
Z9 17
U1 1
U2 27
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2016
VL 21
IS 2
BP 517
EP 564
DI 10.1007/s10664-015-9368-6
PG 48
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DI2ST
UT WOS:000373349700008
DA 2024-07-18
ER

PT J
AU Khalili, A
   Sami, A
   Azimi, M
   Moshtari, S
   Salehi, Z
   Ghiasi, M
   Safavi, AA
AF Khalili, Abdullah
   Sami, Ashkan
   Azimi, Mahdi
   Moshtari, Sara
   Salehi, Zahra
   Ghiasi, Mahboobe
   Safavi, Ali Akbar
TI Employing secure coding practices into industrial applications: a case
   study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Industrial control system; SCADA; Secure coding; Memory leak;
   Availability; Time critical process
AB Industrial Control Systems (ICS) are the vital part of modern critical infrastructures. Recent attacks to ICS indicate that these systems have various types of vulnerabilities. A large number of vulnerabilities are due to secure coding problems in industrial applications. Several international and national organizations like: NIST, DHS, and US-CERT have provided extensive documentation on securing ICS; however proper details on securing software application for industrial setting were not presented. The notable point that makes securing a difficult task is the contradictions between security priorities in ICS and IT systems. In addition, none of the guidelines highlights the implications on modification of general IT security solutions to industrial settings. Moreover based on the best of our knowledge, steps to develop a successful real-world secure industrial application have not been reported. In this paper, the first attempts to employ secure coding best practices into a real world industrial application (Supervisory Control and Data Acquisition) called OpenSCADA is presented. Experiments indicate that resolving the vulnerabilities of OpenSCADA in addition to possible improvement in its availability, does not jeopardize other dimensions of security. In addition, all experiments are backed up with proper statistical tests to see whether or not, improvements are statistically significant.
C1 [Khalili, Abdullah; Sami, Ashkan; Azimi, Mahdi; Moshtari, Sara; Salehi, Zahra; Ghiasi, Mahboobe] Shiraz Univ, Sch Elect & Comp Engn, CSE & IT Dept, Shiraz, Iran.
   [Safavi, Ali Akbar] Shiraz Univ, Sch Elect & Comp Engn, Power & Control Engn Dept, Shiraz, Iran.
C3 Shiraz University; Shiraz University
RP Sami, A (corresponding author), Shiraz Univ, Sch Elect & Comp Engn, CSE & IT Dept, Shiraz, Iran.
EM sami@shirazu.ac.ir
RI Safavi, Ali Akbar/ITV-5746-2023
OI Sami, Ashkan/0000-0002-0023-9543; Moshtari, Sara/0000-0002-7918-0467
CR [Anonymous], 2011, TOP 25 CWES 2011 CWE
   Cheminod M, 2013, IEEE T IND INFORM, V9, P277, DOI 10.1109/TII.2012.2198666
   Department of Homeland Security (DHS), 2009, REC PRACT IMPR IND C
   ICS-CERT, 2012, IND CONTR SYST CYB E
   Khalili A, 2014, P 1 INT WORKSH MOD S
   Kissel R., 2008, NIST special publication 800-64: Security considerations in the information system development life cycle
   National Cyber Security Division (NCSD), 2009, COMM CYB SEC VULN IN
   Seacord R., 2005, SECURE CODING C C
   Stouffer K, 2006, SP80082 NIST
NR 9
TC 1
Z9 2
U1 0
U2 8
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2016
VL 21
IS 1
BP 4
EP 16
DI 10.1007/s10664-014-9341-9
PG 13
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DI2SQ
UT WOS:000373349300001
DA 2024-07-18
ER

PT J
AU Kechagia, M
   Mitropoulos, D
   Spinellis, D
AF Kechagia, Maria
   Mitropoulos, Dimitris
   Spinellis, Diomidis
TI Charting the API minefield using software telemetry data
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Application programming interfaces; Stack traces; Reliability; Mobile
   applications
ID STATIC ANALYSIS; MANAGEMENT; SUPPORT; DESIGN
AB Programs draw significant parts of their functionality through the use of Application Programming Interfaces (APIs). Apart from the way developers incorporate APIs in their software, the stability of these programs depends on the design and implementation of the APIs. In this work, we report how we used software telemetry data to analyze the causes of API failures in Android applications. Specifically, we got 4.9 gb worth of crash data that thousands of applications sent to a centralized crash report management service. We processed that data to extract approximately a million stack traces, stitching together parts of chained exceptions, and established heuristic rules to draw the border between applications and the API calls. We examined a set of more than a half million stack traces associated with risky API calls to map the space of the most common application failure reasons. Our findings show that the top ones can be attributed to memory exhaustion, race conditions or deadlocks, and missing or corrupt resources. Given the classes of the crash causes we identified, we recommend API design and implementation choices, such as specific exceptions, default resources, and non-blocking algorithms, that can eliminate common failures. In addition, we argue that development tools like memory analyzers, thread debuggers, and static analyzers can prevent crashes through early code testing and analysis. Finally, some execution platform and framework designs for process and memory management can also eliminate some application crashes.
C1 [Kechagia, Maria; Mitropoulos, Dimitris; Spinellis, Diomidis] Athens Univ Econ & Business, Dept Management Sci & Technol, Athens, Greece.
C3 Athens University of Economics & Business
RP Kechagia, M (corresponding author), Athens Univ Econ & Business, Dept Management Sci & Technol, Athens, Greece.
EM mkechagia@aueb.gr; dimitro@cs.columbia.edu; dds@aueb.gr
RI Spinellis, Diomidis/E-3600-2010
OI Spinellis, Diomidis/0000-0003-4231-1897; Kechagia,
   Maria/0000-0001-9092-3244
FU European Union; Greek national funds through the Operational Program
   "Education and Lifelong Learning" of the National Strategic Reference
   Framework (NSRF)-Research Funding Program: Thalis-Athens University of
   Economics and Business-Software Engineering Research Platform
FX This research has been co-financed by the European Union (European
   Social Fund-ESF) and Greek national funds through the Operational
   Program "Education and Lifelong Learning" of the National Strategic
   Reference Framework (NSRF)-Research Funding Program: Thalis-Athens
   University of Economics and Business-Software Engineering Research
   Platform.
CR Aftandilian EE, 2010, SOFTVIS 2010: PROCEEDINGS OF THE 2010 INTERNATIONAL SYMPOSIUM ON SOFTWARE VISUALIZATION, P53
   Agarwal R, 2006, LECT NOTES COMPUT SC, V3875, P191
   Alsallakh B, 2012, EUR CON SFTWR MTNCE, P541, DOI 10.1109/CSMR.2012.71
   Amalfitano D., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P252, DOI 10.1109/ICSTW.2011.77
   Amalfitano D., 2012, P 27 IEEE ACM INT C
   [Anonymous], 2003, SOFTWARE TESTING TEC
   [Anonymous], 2006, SIGMOD C
   [Anonymous], 2009, MAKING APIS MORE USA
   Artho Cyrille., 2001, 2001 AUSTR SOFTW, P68
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   Ayewah N, 2008, IEEE SOFTWARE, V25, P22, DOI 10.1109/MS.2008.130
   Bacchelli Alberto., 2013, The 10th Working Conference on Mining Software Repositories
   Bacon DavidF., 2004, 4th ACM International Conference on Embedded Software, P125
   Bloch J., 2006, 21 ACM SIGPLAN S OBJ, P506, DOI DOI 10.1145/1176617.1176622
   Bond MD, 2008, ACM SIGPLAN NOTICES, V43, P109, DOI 10.1145/1449955.1449774
   Bovet D. P., 2005, Understanding the Linux Kernel: from I/O ports to process management
   Buse RPL, 2012, PROC INT CONF SOFTW, P782, DOI 10.1109/ICSE.2012.6227140
   Candès EJ, 2008, IEEE SIGNAL PROC MAG, V25, P21, DOI 10.1109/MSP.2007.914731
   Chang TH, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P1535
   Chen G, 2003, ACM SIGPLAN NOTICES, V38, P282, DOI 10.1145/949343.949330
   Chen MC, 2011, COMPUT COMMUN, V34, P169, DOI 10.1016/j.comcom.2010.03.032
   CHILLAREGE R, 1992, IEEE T SOFTWARE ENG, V18, P943, DOI 10.1109/32.177364
   Choe H, 2011, P 2011 ACM S RES APP, P56
   Clarke S, 2004, DR DOBBS J, V29, pS6
   Dang YN, 2012, PROC INT CONF SOFTW, P1084, DOI 10.1109/ICSE.2012.6227111
   de Souza CRB, 2009, PROC INT CONF SOFTW, P299, DOI 10.1109/ICSE-COMPANION.2009.5071006
   DeMillo RA, 1995, GRAMMAR BASED FAULT
   Eisenstadt M, 1997, COMMUN ACM, V40, P30, DOI 10.1145/248448.248456
   Ellis B, 2007, PROC INT CONF SOFTW, P302
   Enck W, 2009, IEEE SECUR PRIV, V7, P50, DOI 10.1109/MSP.2009.26
   Endres A., 1975, SIGPLAN Notices, V10, P327, DOI 10.1145/390016.808455
   Engler D., 2003, Operating Systems Review, V37, P237, DOI 10.1145/1165389.945468
   Faghri F., 2012, P WORKSH SEC DEP MID, P1
   Farooq U, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P2327
   Felt AP, 2011, PROCEEDINGS OF THE 18TH ACM CONFERENCE ON COMPUTER & COMMUNICATIONS SECURITY (CCS 11), P627
   Fraboulet A, 2001, ISSS'01: 14TH INTERNATIONAL SYMPOSIUM ON SYSTEM SYNTHESIS, P95, DOI 10.1109/ISSS.2001.957920
   Ganapathi A, 2005, I C DEPEND SYS NETWO, P280, DOI 10.1109/DSN.2005.32
   Ganapathi A, 2006, LISA, V6, P49
   Gavalas D, 2011, IEEE SOFTWARE, V28, P77, DOI 10.1109/MS.2010.155
   Gerken J, 2011, 29TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P3373
   Gray J., 1986, Proceedings Fifth Symposium on Reliability in Distributed Software and Database Systems (Cat. No.86CH2260-8), P3
   Gross KC, 2006, Third IEEE International Workshop on Engineering of Autonomic & Autonomous Systems (EASe 2006), Proceedings, P9, DOI 10.1109/EASE.2006.21
   Gross KC, 2003, 27TH ANNUAL NASA GODDARD/IEEE SOFTWARE ENGINEERING WORKSHOP - PROCEEDINGS, P17, DOI 10.1109/SEW.2002.1199445
   Guo PJ, 2010, Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering, P495
   Havelund K, 2004, FORM METHOD SYST DES, V24, P189, DOI 10.1023/B:FORM.0000017721.39909.4b
   Havelund K., 2000, Int. J. Softw. Tools Technol. Transfer, V2, P366, DOI [DOI 10.1007/S100090050043, 10.1007/s100090050043]
   Henning M, 2009, COMMUN ACM, V52, P46, DOI 10.1145/1506409.1506424
   Hovemeyer D, 2004, ACM SIGPLAN NOTICES, V39, P92, DOI 10.1145/1052883.1052895
   Hyosu Kim, 2011, 2011 International Conference on Embedded Software (EMSOFT 2011), P49
   Johnson PM, 2005, IEEE SOFTWARE, V22, P76, DOI 10.1109/MS.2005.95
   Jula H., 2011, 2011 IEEE/IFIP 41st International Conference on Dependable Systems and Networks Workshops (DSN-W), P205, DOI 10.1109/DSNW.2011.5958814
   Jula H., 2008, OSDI, P295
   Kawrykow D, 2009, PROC INT CONF SOFTW, P183, DOI 10.1109/ICSE-COMPANION.2009.5070977
   Khknen K., 2011, WORKSHOP BYTECODE SE, P75
   Kim D, 2011, IEEE T SOFTWARE ENG, V37, P430, DOI 10.1109/TSE.2011.20
   Kim H, 2012, ACM T STORAGE, V8, DOI 10.1145/2385603.2385607
   Kim KHK, 2006, REAL-TIME SYST, V32, P197, DOI 10.1007/s11241-005-4680-7
   Kim S, 2011, I C DEPEND SYS NETWO, P486, DOI 10.1109/DSN.2011.5958261
   KNUTH DE, 1989, SOFTWARE PRACT EXPER, V19, P607, DOI 10.1002/spe.4380190702
   Kumar Maji Amiya, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P249, DOI 10.1109/ISSRE.2010.45
   LEE IW, 1995, IEEE T SOFTWARE ENG, V21, P455, DOI 10.1109/32.387474
   Li Z, 2006, P 1 WORKSH ARCH SYST, P25, DOI DOI 10.1145/1181309.1181314
   Liblit Ben., 2002, Building a Better Backtrace: Techniques for Postmortem Program Analysis
   Linares-Vasquez Mario, 2013, P 2013 9 JOINT M FDN, P477, DOI DOI 10.1145/2491411.2491428
   Long B, 2003, IEEE T SOFTWARE ENG, V29, P555, DOI 10.1109/TSE.2003.1205182
   Maalej W, 2013, IEEE T SOFTWARE ENG, V39, P1264, DOI 10.1109/TSE.2013.12
   Maia C., 2010, Proceedings of the 6th International Workshop on Operating Systems Platforms for Embedded Real-Time Applications, Brussels, Belgium, OSPERT '10, P63
   Mandelin D, 2005, ACM SIGPLAN NOTICES, V40, P48, DOI 10.1145/1064978.1065018
   McKinley KS, 1996, ACM T PROGR LANG SYS, V18, P424, DOI 10.1145/233561.233564
   Mernik M, 2005, ACM COMPUT SURV, V37, P316, DOI 10.1145/1118890.1118892
   Michael M. M., 1996, Proceedings of the Fifteenth Annual ACM Symposium on Principles of Distributed Computing, P267, DOI 10.1145/248052.248106
   Ongtang M, 2010, 26TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2010), P221
   Panda PR, 2001, ACM T DES AUTOMAT EL, V6, P149, DOI 10.1145/375977.375978
   Payet É, 2012, INFORM SOFTWARE TECH, V54, P1192, DOI 10.1016/j.infsof.2012.05.003
   Pheatt Chuck, 2008, Journal of Computing Sciences in Colleges, V23, P298
   Ploski Jan, 2007, ACM SIGSOFT Softw Eng Notes, V32, P6, DOI DOI 10.1145/1317471.1317478
   Podgurski A, 2003, PROC INT CONF SOFTW, P465, DOI 10.1109/ICSE.2003.1201224
   Robillard MP, 2013, IEEE T SOFTWARE ENG, V39, P613, DOI 10.1109/TSE.2012.63
   Robillard MP, 2011, EMPIR SOFTW ENG, V16, P703, DOI 10.1007/s10664-010-9150-8
   Robillard MP, 2009, IEEE SOFTWARE, V26, P27, DOI 10.1109/MS.2009.193
   Schoeberl M, 2004, SEVENTH IEEE INTERNATIONAL SYMPOSIUM ON OBJECT-ORIENTED REAL-TIME DISTRIBUTED COMPUTING, PROCEEDINGS, P93, DOI 10.1109/ISORC.2004.1300334
   Sen K, 2006, LECT NOTES COMPUT SC, V4144, P419
   Seo J, 2011, INFORM SOFTWARE TECH, V53, P106, DOI 10.1016/j.infsof.2010.09.003
   Shabtai A, 2012, J INTELL INF SYST, V38, P161, DOI 10.1007/s10844-010-0148-x
   Shabtai A, 2010, IEEE SECUR PRIV, V8, P35, DOI 10.1109/MSP.2010.2
   Shelton CP, 2000, DSN 2000: INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P261, DOI 10.1109/ICDSN.2000.857548
   Shi L, 2011, LECT NOTES COMPUT SC, V6603, P416, DOI 10.1007/978-3-642-19811-3_29
   Shihab E, 2012, 9 WORK C MIN SOFTW R
   Sproull R, 2014, QUEUE, V12, P10, DOI [10.1145/2576966.2576968, DOI 10.1145/2576966.2576968]
   Stylos J, 2007, PROC INT CONF SOFTW, P529
   Stylos Jeffrey., 2008, Proc. of the 16th International Symposium on Foundations of Software Eng, P105
   Sullivan M., 1991, Digest of Papers. Fault-Tolerant Computing: Twenty-First International Symposium (Cat. No.91CH2985-0), P2, DOI 10.1109/FTCS.1991.146625
   Tan L, 2014, EMPIR SOFTW ENG, V19, P1665, DOI 10.1007/s10664-013-9258-8
   Tulach J, 2012, APRESSUS SERIES
   Vallina-Rodriguez N, 2013, IEEE COMMUN SURV TUT, V15, P179, DOI 10.1109/SURV.2012.021312.00045
   Valois J. D., 1995, Proceedings of the Fourteenth Annual ACM Symposium on Principles of Distributed Computing, P214, DOI 10.1145/224964.224988
   van der Merwe H, 2012, SIGSOFT SOFTW ENG NO, V37, P1, DOI DOI 10.1145/2382756.2382797
   Vaughan-Nichols SJ, 2001, COMPUTER, V34, P22, DOI 10.1109/2.970549
   Xie Tao, 2006, Proc. MSR, P54
   Yang L, 2010, ACM T EMBED COMPUT S, V9, DOI 10.1145/1698772.1698785
   Yang Ting., 2004, Proceedings of the 4th international symposium on Memory management, P61
NR 101
TC 13
Z9 14
U1 0
U2 9
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2015
VL 20
IS 6
BP 1785
EP 1830
DI 10.1007/s10664-014-9343-7
PG 46
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CT7YX
UT WOS:000363032900011
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Jabangwe, R
   Börstler, J
   Smite, D
   Wohlin, C
AF Jabangwe, Ronald
   Borstler, Jurgen
   Smite, Darja
   Wohlin, Claes
TI Empirical evidence on the link between object-oriented measures and
   external quality attributes: a systematic literature review
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Systematic literature review; Object-oriented system; Source code
   analysis; Source code measures; Software metrics; Software quality;
   Static analysis
ID MACHINE LEARNING-METHODS; DEFECT-PRONE CLASSES; OPEN-SOURCE SOFTWARE;
   FAULT PREDICTION; CLASS COHESION; DESIGN METRICS; STRUCTURAL COMPLEXITY;
   COUPLING MEASURES; VALIDATION; MODELS
AB There is a plethora of studies investigating object-oriented measures and their link with external quality attributes, but usefulness of the measures may differ across empirical studies. This study aims to aggregate and identify useful object-oriented measures, specifically those obtainable from the source code of object-oriented systems that have gone through such empirical evaluation. By conducting a systematic literature review, 99 primary studies were identified and traced to four external quality attributes: reliability, maintainability, effectiveness and functionality. A vote-counting approach was used to investigate the link between object-oriented measures and the attributes, and to also assess the consistency of the relation reported across empirical studies. Most of the studies investigate links between object-oriented measures and proxies for reliability attributes, followed by proxies for maintainability. The least investigated attributes were: effectiveness and functionality. Measures from the C&K measurement suite were the most popular across studies. Vote-counting results suggest that complexity, cohesion, size and coupling measures have a better link with reliability and maintainability than inheritance measures. However, inheritance measures should not be overlooked during quality assessment initiatives; their link with reliability and maintainability could be context dependent. There were too few studies traced to effectiveness and functionality attributes; thus a meaningful vote-counting analysis could not be conducted for these attributes. Thus, there is a need for diversification of quality attributes investigated in empirical studies. This would help with identifying useful measures during quality assessment initiatives, and not just for reliability and maintainability aspects.
C1 [Jabangwe, Ronald; Borstler, Jurgen; Smite, Darja; Wohlin, Claes] Blekinge Inst Technol, S-37179 Karlskrona, Sweden.
C3 Blekinge Institute Technology
RP Jabangwe, R (corresponding author), Blekinge Inst Technol, S-37179 Karlskrona, Sweden.
EM ronald.jabangwe@bth.se; jurgen.borstler@bth.se; darja.smite@bth.se;
   claes.wohlin@bth.se
RI Jabangwe, Ronald/P-1049-2018; Börstler, Jürgen/IWE-4001-2023
OI Jabangwe, Ronald/0000-0002-2305-6352; Börstler,
   Jürgen/0000-0003-0639-4234
FU Swedish Knowledge Foundation in Sweden [2009/0249, 2010/0311]; Ericsson
   Software Research
FX This work was funded by the Swedish Knowledge Foundation in Sweden under
   the grants 2009/0249 and 2010/0311, and Ericsson Software Research. We
   thank Indira Nurdiani, a PhD Student at Software Engineering Research
   Lab (SERL), for valuable comments on the paper.
CR Abreu F. B. E., 1994, P 4 INT C SOFTW QUAL, V186
   Abreu FBE, 1996, PROCEEDINGS OF THE 3RD INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, P90, DOI 10.1109/METRIC.1996.492446
   Abubakar A, 2006, P 30 IEEE INT C COMP, P890
   Aggarwal KK, 2007, J OBJECT TECHNOL, V6, P127, DOI 10.5381/jot.2007.6.10.a5
   Aggarwal K. K., 2009, Software Process: Improvement and Practice, V14, P39, DOI 10.1002/spip.389
   Al Dallal J, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2089116.2089118
   Al Dallal J, 2012, J SYST SOFTWARE, V85, P1042, DOI 10.1016/j.jss.2011.12.006
   Al Dallal J, 2012, INFORM SOFTWARE TECH, V54, P396, DOI 10.1016/j.infsof.2011.11.007
   Al Dallal J, 2011, INFORM SOFTWARE TECH, V53, P914, DOI 10.1016/j.infsof.2011.03.004
   Al Dallal J, 2011, PROCEDIA COMPUT SCI, V3, DOI 10.1016/j.procs.2011.01.053
   Al Dallal J, 2010, INFORM SOFTWARE TECH, V52, P1346, DOI 10.1016/j.infsof.2010.08.006
   Alshayeb M, 2003, IEEE T SOFTWARE ENG, V29, P1043, DOI 10.1109/TSE.2003.1245305
   Aman H, 2006, IEICE T INF SYST, VE89D, P1347, DOI 10.1093/ietisy/e89-d.4.1347
   [Anonymous], 2010, ISOIECIEEE24765
   [Anonymous], 1994, Object-oriented software metrics: a practical guide
   [Anonymous], 2012, ANN ACM S APPL COMP
   [Anonymous], 2011, REAL WORLD RES
   [Anonymous], 2001, ISOIEC9126 1
   [Anonymous], 2010, ISOIEC25010
   [Anonymous], 2012, J BRAZ COMPUT SOC
   Arisholm E, 2000, J SYST SOFTWARE, V53, P3, DOI 10.1016/S0164-1212(00)00003-0
   Arisholm E, 2006, INFORM SOFTWARE TECH, V48, P1046, DOI 10.1016/j.infsof.2006.01.002
   Babich Djuradj., 2011, Proceedings of the ACM Symposium on Applied Computing, P1419, DOI [10.1145/1982185, DOI 10.1145/1982185]
   Badri L., 2011, INT J SOFTW ENG ITS, V5, P69
   Badri M, 2012, ADV SOFT ENG, V2012, P5
   Bakar NSAA, 2011, P IASTED INT C SOFTW
   Bandi RK, 2003, IEEE T SOFTWARE ENG, V29, P77, DOI 10.1109/TSE.2003.1166590
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Benlarbi S, 2000, 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P24, DOI 10.1109/ISSRE.2000.885858
   Benlarbi S., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P334, DOI 10.1109/ICSE.1999.841024
   Bocco MG, 2005, J SOFTW MAINT EVOL-R, V17, P225, DOI 10.1002/smr.312
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Briand L, 1997, PROC INT CONF SOFTW, P412, DOI 10.1145/253228.253367
   Briand L. C., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P345, DOI 10.1109/ICSE.1999.841025
   Briand LC, 2000, J SYST SOFTWARE, V51, P245, DOI 10.1016/S0164-1212(99)00102-8
   Briand LC, 2002, ADV COMPUT, V56, P97, DOI 10.1016/S0065-2458(02)80005-5
   Briand LC, 2002, IEEE T SOFTWARE ENG, V28, P706, DOI 10.1109/TSE.2002.1019484
   Bruntink M, 2006, J SYST SOFTWARE, V79, P1219, DOI 10.1016/j.jss.2006.02.036
   Cartwright M, 2000, IEEE T SOFTWARE ENG, V26, P786, DOI 10.1109/32.879814
   Catal C, 2007, DEPCOS - RELCOMEX '07: INTERNATIONAL CONFERENCE ON DEPENDABILITY OF COMPUTER SYSTEMS, PROCEEDINGS, P238, DOI 10.1109/DEPCOS-RELCOMEX.2007.8
   Catal C, 2009, EXPERT SYST APPL, V36, P7346, DOI 10.1016/j.eswa.2008.10.027
   Charters S., 2007, GUIDELINES PERFORMIN
   Chaumun MA, 1999, PROCEEDINGS OF THE THIRD EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P130, DOI 10.1109/CSMR.1999.756690
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   CHIDAMBER SR, 1991, SIGPLAN NOTICES, V26, P197
   Chidamber SR, 1998, IEEE T SOFTWARE ENG, V24, P629, DOI 10.1109/32.707698
   Cong Jin, 2009, 2009 2nd International Conference on Power Electronics and Intelligent Transportation System (PEITS 2009), P120, DOI 10.1109/PEITS.2009.5406941
   Cruz AEC, 2010, IEICE T INF SYST, VE93D, P3038, DOI 10.1587/transinf.E93.D.3038
   Dagpinar M, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P155, DOI 10.1109/WCRE.2003.1287246
   Dandashi F., 2002, Proceedings of the 2002 ACM Symposium on Applied Computing, P997
   Darcy DP, 2005, IEEE T SOFTWARE ENG, V31, P982, DOI 10.1109/TSE.2005.130
   Díaz J, 2011, SOFTWARE PRACT EXPER, V41, P921, DOI 10.1002/spe.1087
   Dick S, 2006, IEEE IJCNN, P4089
   Dyba Tore, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P225
   El Emam K, 2002, IEEE T SOFTWARE ENG, V28, P494, DOI 10.1109/TSE.2002.1000452
   Elish Mahmoud O., 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P144, DOI 10.1109/ICPC.2010.43
   Elish MO, 2011, ADV ENG SOFTW, V42, P852, DOI 10.1016/j.advengsoft.2011.06.001
   Elish MO, 2006, 2006 30 ANN INT COMP, P1
   Eski S., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P566, DOI 10.1109/ICSTW.2011.43
   Esteves R, 1995, 5 INT C SOFTW QUAL A, P44, DOI [10.5281/zenodo.1217073, DOI 10.5281/ZENODO.1217073]
   Etzkorn L, 1997, TRUAHCS199702
   Fenton N. E., 1998, Software metrics: a rigorous and practical approach
   Fioravanti F, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P121, DOI 10.1109/CSMR.2001.914976
   Genero M, 2001, SCCC 2001: XXI INTERNATIONAL CONFERENCE OF THE CHILEAN COMPUTER SCIENCE SOCIETY, PROCEEDINGS, P95, DOI 10.1109/SCCC.2001.972637
   Genero M, 2005, J OBJECT TECHNOL, V4, P59, DOI 10.5381/jot.2005.4.9.a1
   Giger E., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P217, DOI 10.1109/MSR.2012.6224284
   Goel B, 2008, STUD COMPUT INTELL, V131, P255
   Gupta V, 2009, J COMPUT SCI TECH-CH, V24, P273, DOI 10.1007/s11390-009-9223-6
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Halstead M.H., 1977, OPERATING PROGRAMMIN
   Harrison R, 1997, EIGHTH IEEE INTERNATIONAL WORKSHOP ON SOFTWARE TECHNOLOGY AND ENGINEERING PRACTICE INCORPORATING COMPUTER AIDED SOFTWARE ENGINEERING, PROCEEDINGS, P230, DOI 10.1109/STEP.1997.615494
   Harrison R, 1998, P ESCOM, P449
   Henningsson K, 2005, P 9 C EMP ASS SOFTW
   Holschuh T, 2009, PROC INT CONF SOFTW, P172, DOI 10.1109/ICSE-COMPANION.2009.5070975
   Janes A, 2006, INFORM SCIENCES, V176, P3711, DOI 10.1016/j.ins.2005.12.002
   Jia H, 2009, LECT NOTES BUS INF P, V35, P45
   Kamiya T, 1999, 2ND IEEE INTERNATIONAL SYMPOSIUM ON OBJECT-ORIENTED REAL-TIME DISTRIBUTED COMPUTING (ISORC'99), PROCEEDINGS, P253, DOI 10.1109/ISORC.1999.776386
   Kanellopoulos Y., 2010, International Journal of Software Engineering and Applications, V1, P17, DOI [DOI 10.5121/IJSEA.2010.1302, 10.5121/ijsea.2010.1302]
   Kanmani S, 2007, INFORM SOFTWARE TECH, V49, P483, DOI 10.1016/j.infsof.2006.07.005
   Kanmani S., 2004, WSEAS Transactions on Information Science and Applications, V1, P1142
   Karus S, 2012, INFORM SOFTWARE TECH, V54, P203, DOI 10.1016/j.infsof.2011.09.004
   Kitchenham B, 2010, J SYST SOFTWARE, V83, P37, DOI 10.1016/j.jss.2009.06.041
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Li W, 2007, J SYST SOFTWARE, V80, P1120, DOI 10.1016/j.jss.2006.10.018
   Liu YX, 2009, PROC IEEE INT CONF S, P233, DOI 10.1109/ICSM.2009.5306318
   MALHOTRA R., 2011, ACM SIGSOFT Software Engineering Notes, V36, P1, DOI DOI 10.1145/2020976.2020991
   Malhotra R, 2012, J INF PROCESS SYST, V8, P241, DOI 10.3745/JIPS.2012.8.2.241
   Marinescu R, 2011, IEEE INT WORK C SO, P65, DOI 10.1109/SCAM.2011.9
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Nair TRG, 2012, INFORM SOFTWARE TECH, V54, P274, DOI 10.1016/j.infsof.2011.10.001
   Olague H. M., 2006, Proceedings of the 2006 International Conference on Software Engineering Research and Practice and Conference on Programming Languages and Compilers SERP'06, P442
   Olague HM, 2008, J SOFTW MAINT EVOL-R, V20, P171, DOI 10.1002/smr.366
   Olague HM, 2007, IEEE T SOFTWARE ENG, V33, P402, DOI 10.1109/TSE.2007.1015.
   Olbrich S, 2009, INT SYMP EMP SOFTWAR, P391
   Pai GJ, 2007, IEEE T SOFTWARE ENG, V33, P675, DOI [10.1109/TSE.2007.70722, 10.1109/TSE.2007.70722.]
   Peng Huang, 2009, Proceedings of the 2009 Fifth International Conference on Natural Computation (ICNC 2009), P436, DOI 10.1109/ICNC.2009.24
   Pickard LM, 1998, INFORM SOFTWARE TECH, V40, P811, DOI 10.1016/S0950-5849(98)00101-3
   Ping Yu, 2002, Proceedings of the Sixth European Conference on Software Maintenance and Reengineering, P99, DOI 10.1109/CSMR.2002.995794
   Poshyvanyk D, 2009, EMPIR SOFTW ENG, V14, P5, DOI 10.1007/s10664-008-9088-2
   Pritchett W. W.  IV, 2001, Ada Letters, V21, P117
   Quah JT, 2002, P 1 INT C INF TECHN, P307
   Radjenovic D, 2013, INFORM SOFTWARE TECH, V55, P1397, DOI 10.1016/j.infsof.2013.02.009
   Ramasubbu N, 2012, IEEE T SOFTWARE ENG, V38, P1054, DOI 10.1109/TSE.2011.88
   Rathore S.S., 2012, 2012 CSI 6 INT C SOF, P1
   Rathore SS, 2012, ASIA PAC SOFWR ENG, P350, DOI 10.1109/APSEC.2012.148
   Revelle M, 2011, EMPIR SOFTW ENG, V16, P773, DOI 10.1007/s10664-011-9159-7
   Reyes L., 1998, Proceedings. SEKE '98. Tenth International Conference on Software Engineering and Knowledge Engineering, P156
   Riaz M, 2009, INT SYMP EMP SOFTWAR, P368, DOI 10.1109/esem.2009.5314233
   Rosenberg L.H., 1997, Crosstalk Journal, P1
   Rudiger Lincke., 2008, International Symposium on Software Testing and Analysis, P131, DOI 10.1145/1390630.1390648
   Saxena P., 2011, Int. J. Comput. Appl., V22, P41, DOI 10.5120/2600-3626
   Shatnawi R, 2008, J SYST SOFTWARE, V81, P1868, DOI 10.1016/j.jss.2007.12.794
   Shatnawi R, 2010, IEEE T SOFTWARE ENG, V36, P216, DOI 10.1109/TSE.2010.9
   Shatnawi R, 2010, J SOFTW MAINT EVOL-R, V22, P1, DOI 10.1002/smr.404
   Singh P., 2012, 2012 International Joint Conference on Computer Science and Software Engineering (JCSSE 2012), P323, DOI 10.1109/JCSSE.2012.6261973
   Singh Yogesh, 2007, Proceedings of the 2007 International Conference on Software Engineering Research & Practice. SERP 2007, P664
   SINGH Y, 2009, P WORLD C ENG, V1, P1
   Singh Y, 2012, INT J COMPUT APPL T, V44, P12, DOI 10.1504/IJCAT.2012.048204
   Singh Y, 2011, J STAT MANAG SYST, V14, P595, DOI 10.1080/09720510.2011.10701574
   Singh Y, 2009, INT J COMPUT APPL T, V35, P183, DOI 10.1504/IJCAT.2009.026595
   Singh Y, 2010, SOFTWARE QUAL J, V18, P3, DOI 10.1007/s11219-009-9079-6
   Subramanyam R, 2003, IEEE T SOFTWARE ENG, V29, P297, DOI 10.1109/TSE.2003.1191795
   Succi G, 2003, J SYST SOFTWARE, V65, P1, DOI 10.1016/S0164-1212(02)00024-9
   Szabo RM, 2004, INT J RELIABILITY QU, V11, P59
   Ujházi B, 2010, IEEE INT WORK C SO, P33, DOI 10.1109/SCAM.2010.14
   Nguyen V, 2011, INFORM SOFTWARE TECH, V53, P682, DOI 10.1016/j.infsof.2010.11.003
   Xenos M., 2000, P EUROPEAN SOFTWARE, P1
   Xu J, 2008, J COMPUT SCI, V4
   Yi Guo, 2011, 2011 18th Working Conference on Reverse Engineering, P239, DOI 10.1109/WCRE.2011.36
   Zhou YM, 2006, IEEE T SOFTWARE ENG, V32, P771, DOI 10.1109/TSE.2006.102
   Zhou YM, 2012, SCI CHINA INFORM SCI, V55, P2800, DOI 10.1007/s11432-012-4745-x
   Zhou YM, 2010, J SYST SOFTWARE, V83, P660, DOI 10.1016/j.jss.2009.11.704
   Zimmerman T., 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P347, DOI 10.1109/ICST.2011.39
NR 134
TC 64
Z9 67
U1 1
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2015
VL 20
IS 3
BP 640
EP 693
DI 10.1007/s10664-013-9291-7
PG 54
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CI1DF
UT WOS:000354480800003
DA 2024-07-18
ER

PT J
AU Hill, E
   Binkley, D
   Lawrie, D
   Pollock, L
   Vijay-Shanker, K
AF Hill, Emily
   Binkley, David
   Lawrie, Dawn
   Pollock, Lori
   Vijay-Shanker, K.
TI An empirical study of identifier splitting techniques
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software engineering tools; Program comprehension; Identifier names;
   Source code text analysis
AB Researchers have shown that program analyses that drive software development and maintenance tools supporting search, traceability and other tasks can benefit from leveraging the natural language information found in identifiers and comments. Accurate natural language information depends on correctly splitting the identifiers into their component words and abbreviations. While conventions such as camel-casing can ease this task, conventions are not well-defined in certain situations and may be modified to improve readability, thus making automatic splitting more challenging. This paper describes an empirical study of state-of-the-art identifier splitting techniques and the construction of a publicly available oracle to evaluate identifier splitting algorithms. In addition to comparing current approaches, the results help to guide future development and evaluation of improved identifier splitting approaches.
C1 [Hill, Emily] Montclair State Univ, Dept Comp Sci, Montclair, NJ 07043 USA.
   [Binkley, David; Lawrie, Dawn] Loyola Univ Maryland, Dept Comp Sci, Baltimore, MD 21210 USA.
   [Pollock, Lori; Vijay-Shanker, K.] Univ Delaware, Dept Comp & Informat Sci, Newark, DE 19716 USA.
C3 Montclair State University; Loyola University Maryland; University of
   Delaware
RP Hill, E (corresponding author), Montclair State Univ, Dept Comp Sci, Montclair, NJ 07043 USA.
EM hillem@mail.montclair.edu; binkley@cs.loyola.edu; lawrie@cs.loyola.edu;
   pollock@cis.udel.edu; vijay@cis.udel.edu
OI Lawrie, Dawn/0000-0001-7347-7086
FU NSF [CCF 0916081]; Direct For Computer & Info Scie & Enginr [0916081]
   Funding Source: National Science Foundation; Direct For Computer & Info
   Scie & Enginr; Division of Computing and Communication Foundations
   [0915803] Funding Source: National Science Foundation; Division of
   Computing and Communication Foundations [0916081] Funding Source:
   National Science Foundation
FX Special thanks to all the participants as this work would not be
   possible without your time and also to Chris Morrell for help with the
   statistics. Support for this work was provided by NSF grant CCF 0916081.
CR ATKINSON KEVIN., 2004, Spell Checking Oriented Word Lists (SCOWL)
   Binkley D, 2013, EMPIR SOFTW ENG, V18, P219, DOI 10.1007/s10664-012-9201-4
   Brants T., 2006, Web 1T 5-gram Version 1, pLDC2006T13
   Butler S, 2011, LECT NOTES COMPUT SC, V6813, P130, DOI 10.1007/978-3-642-22655-7_7
   Caprile B, 2000, PROC IEEE INT CONF S, P97, DOI 10.1109/ICSM.2000.883022
   Caprile C., 1999, Sixth Working Conference on Reverse Engineering (Cat. No.PR00303), P112, DOI 10.1109/WCRE.1999.806952
   Corazza A., 2012, P 2012 IEEE INT C SO
   Deissenboeck F, 2006, SOFTWARE QUAL J, V14, P261, DOI 10.1007/s11219-006-9219-1
   Dit B, 2011, CONF PROC INT SYMP C, P11, DOI 10.1109/ICPC.2011.47
   Enslen E, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P71, DOI 10.1109/MSR.2009.5069482
   FEILD H, 2006, P IASTED INT C SOFTW
   Guerrouj L, 2013, J SOFTW-EVOL PROC, V25, P575, DOI 10.1002/smr.539
   Hill E, 2008, MSR 08 P 5 INT WORK
   Lawrie Dawn, 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P3, DOI 10.1109/WCRE.2010.10
   Lawrie D, 2011, ICSM 11 P 27 IEEE IN
   Lawrie D, 2007, SEVENTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P213, DOI 10.1109/SCAM.2007.17
   Lawrie D, 2007, EMPIR SOFTW ENG, V12, P359, DOI 10.1007/s10664-006-9032-2
   Liblit Ben, 2006, P 18 ANN WORKSHOP PS, P11
   Madani N, 2010, EUR CON SFTWR MTNCE, P68, DOI 10.1109/CSMR.2010.31
   Nie J, 2002, SIGIR 02 P 2002 SIGI
   Ott R.L., 2015, INTRO STAT METHODS D
   Runeson P, 2007, PROC INT CONF SOFTW, P499
NR 22
TC 39
Z9 47
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2014
VL 19
IS 6
BP 1754
EP 1780
DI 10.1007/s10664-013-9261-0
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AR9QU
UT WOS:000343910700006
DA 2024-07-18
ER

PT J
AU Bardsiri, VK
   Jawawi, DNA
   Hashim, SZM
   Khatibi, E
AF Bardsiri, Vahid Khatibi
   Jawawi, Dayang Norhayati Abang
   Hashim, Siti Zaiton Mohd
   Khatibi, Elham
TI A flexible method to estimate the software development effort based on
   the classification of projects and localization of comparisons
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE ABE; PSO; Clustering; Effort estimation; Localization
ID COST ESTIMATION MODELS; GREY RELATIONAL ANALYSIS; GENETIC ALGORITHM;
   ANALOGY; OPTIMIZATION; SELECTION; WEIGHTS
AB The estimation of software development effort has been centralized mostly on the accuracy of estimates through dealing with heterogeneous datasets regardless of the fact that the software projects are inherently complex and uncertain. In particular, Analogy Based Estimation (ABE), as a widely accepted estimation method, suffers a great deal from the problem of inconsistent and non-normal datasets because it is a comparison-based method and the quality of comparisons strongly depends on the consistency of projects. In order to overcome this problem, prior studies have suggested the use of weighting methods, outlier elimination techniques and various types of soft computing methods. However the proposed methods have reduced the complexity and uncertainty of projects, the results are not still convincing and the methods are limited to a special domain of software projects, which causes the generalization of methods to be impossible. Localization of comparison and weighting processes through clustering of projects is the main idea behind this paper. A hybrid model is proposed in which the software projects are divided into several clusters based on key attributes (development type, organization type and development platform). A combination of ABE and Particle Swarm Optimization (PSO) algorithm is used to design a weighting system in which the project attributes of different clusters are given different weights. Instead of comparing a new project with all the historical projects, it is only compared with the projects located in the related clusters based on the common attributes. The proposed method was evaluated through three real datasets that include a total of 505 software projects. The performance of the proposed model was compared with other well-known estimation methods and the promising results showed that the proposed localization can considerably improve the accuracy of estimates. Besides the increase in accuracy, the results also certified that the proposed method is flexible enough to be used in a wide range of software projects.
C1 [Bardsiri, Vahid Khatibi; Jawawi, Dayang Norhayati Abang; Hashim, Siti Zaiton Mohd] Univ Teknol Malaysia UTM, Dept Software Engn, Skudai 81310, Johor Bahru, Malaysia.
   [Khatibi, Elham] Islamic Azad Univ, Dept Comp Engn, Bardsir Branch, Kerman, Iran.
C3 Universiti Teknologi Malaysia; Islamic Azad University
RP Bardsiri, VK (corresponding author), Univ Teknol Malaysia UTM, Dept Software Engn, Skudai 81310, Johor Bahru, Malaysia.
EM kvahid2@live.utm.my; dayang@utm.my; zaiton@utm.my; kbelham2@live.utm.my
RI Jawawi, Dayang N. A./A-7251-2013; Bardsiri, Vahid Khatibi/A-5812-2013;
   Hashim, Siti Zaiton Mohd/AAE-5401-2020
OI Bardsiri, Vahid Khatibi/0000-0003-0694-956X; jawawi, dayang n.
   a./0000-0001-8300-8523
CR Angelis L., 2000, Empirical Software Engineering, V5, P35, DOI 10.1023/A:1009897800559
   [Anonymous], 1986, Software Engineering Metrics and Models
   [Anonymous], 2010, INT J ENG SCI TECHNO
   [Anonymous], THESIS U SO CALIFORN
   [Anonymous], ROUGH SET THEORETICA
   [Anonymous], 2002, Applied Statistics for Software Managers
   [Anonymous], 2000, P EASE 2000 C
   [Anonymous], P ICNN 95 INT C NEUR
   [Anonymous], WORLD APPL SCI J
   Aroba J, 2008, J SYST SOFTWARE, V81, P1944, DOI 10.1016/j.jss.2008.01.016
   Attarzadeh I, 2010, 2 INT C COMP ENG TEC
   Auer M, 2006, IEEE T SOFTWARE ENG, V32, P83, DOI 10.1109/TSE.2006.1599418
   Azzeh M, 2011, J SYST SOFTWARE, V84, P270, DOI 10.1016/j.jss.2010.09.028
   Azzeh M, 2010, EMPIR SOFTW ENG, V15, P60, DOI 10.1007/s10664-009-9113-0
   Bai Qinghai, 2010, COMPUTER INFORM SCI, V3, P180, DOI DOI 10.5539/CIS.V3N1P180
   Bajwa SS, 2009, THESIS BLEKINGE I TE
   Bakir A, 2010, SOFTWARE QUAL J, V18, P57, DOI 10.1007/s11219-009-9081-z
   Benala TR, 2012, ADV INTEL SOFT COMPU, V132, P75
   Bettenburg N., 2012, P 9 WORK C MIN SOFTW
   Boehm B, 2000, ANN SOFTW ENG, V10, P177, DOI 10.1023/A:1018991717352
   Boehm BW., 1981, Software Engineering Economics
   Breiman L, 1998, BIOMETRICS, DOI [10.1201/9781315139470, DOI 10.2307/2530946]
   Chao-Jung H., 2007, 14 AS PAC C SOFTW EN
   Chiu NH, 2007, J SYST SOFTWARE, V80, P628, DOI 10.1016/j.jss.2006.06.006
   Costagliola G, 2005, IEEE T SOFTWARE ENG, V31, P52, DOI 10.1109/TSE.2005.5
   DALKEY N, 1963, MANAGE SCI, V9, P458, DOI 10.1287/mnsc.9.3.458
   DENG JL, 1982, SYST CONTROL LETT, V1, P288, DOI 10.1016/S0167-6911(82)80025-X
   Elyassami S., 2012, INT J ARTIF INTELL A, V3, P121
   Ferrucci Filomena, 2010, 2010 Proceedings of Second International Symposium on Search Based Software Engineering (SSBSE), P89, DOI 10.1109/SSBSE.2010.20
   Gupta S., 2011, ACM SIGSOFT SOFTW EN, V36, P1
   Hary CHVMK, 2011, J SOFTW ENG, V5
   Hayes W.L., 1994, Statistics, V5th
   Hsu CJ, 2011, SOFTWARE QUAL J, V19, P165, DOI 10.1007/s11219-010-9110-y
   Huang SJ, 2008, EUR J OPER RES, V188, P898, DOI 10.1016/j.ejor.2007.07.002
   Huang SJ, 2006, INFORM SOFTWARE TECH, V48, P1034, DOI 10.1016/j.infsof.2005.12.020
   Huang YS, 2002, PATTERN RECOGN, V35, P1237, DOI 10.1016/S0031-3203(01)00124-8
   Jensen Randall., 1983, 5 ISPA C, P88
   Jin-Cherng Lin, 2010, 2010 International Computer Symposium (ICS 2010), P1039, DOI 10.1109/COMPSYM.2010.5685538
   Jingzhou L, 2006, P ACM IEEE INT S EMP
   Jones Capers, 2011, The Economics of Software Quality
   Jorgensen M, 2003, J SYST SOFTWARE, V68, P253, DOI 10.1016/S0164-1212(03)00066-9
   Jorgensen M, 2004, J SYST SOFTWARE, V70, P37, DOI 10.1016/S0164-1212(02)00156-5
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Keung JW, 2008, IEEE T SOFTWARE ENG, V34, P471, DOI 10.1109/TSE.2008.34
   Khatibi Bardsiri V, 2012, SOFTW QUAL J, P1
   Kocaguneli E, 2012, IEEE T SOFTWARE ENG, V38, P425, DOI 10.1109/TSE.2011.27
   Kocaguneli E, 2011, INT SYMP EMP SOFTWAR, P255, DOI 10.1109/ESEM.2011.34
   Kolodner J.L., 1993, Case-Based Reasoning
   Kumar KV, 2008, J SYST SOFTWARE, V81, P1853, DOI 10.1016/j.jss.2007.12.793
   Lafferty M.T., 2010, Software effort estimation accuracy: A comparative study of estimations based on software sizing and development methods
   Li JZ, 2008, INT J SOFTW ENG KNOW, V18, P1, DOI 10.1142/S0218194008003532
   Li JZ, 2008, EMPIR SOFTW ENG, V13, P63, DOI 10.1007/s10664-007-9054-4
   Li JZ, 2007, EMPIR SOFTW ENG, V12, P65, DOI 10.1007/s10664-006-7552-4
   Li YF, 2009, EMPIR SOFTW ENG, V14, P603, DOI 10.1007/s10664-008-9104-6
   Li YF, 2009, J SYST SOFTWARE, V82, P241, DOI 10.1016/j.jss.2008.06.001
   Li YF, 2008, 4 IEEE INT C MAN INN
   Li YF, 2007, INT C IND ENG ENG MA
   Marza Venus, 2009, Advanced Technologies, P395
   Mendes E, 2005, J SYST SOFTWARE, V77, P157, DOI 10.1016/j.jss.2004.08.034
   Mendes E, 2003, EMPIR SOFTW ENG, V8, P163, DOI 10.1023/A:1023062629183
   Menzies T., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P343, DOI 10.1109/ASE.2011.6100072
   Milios D, 2011, IFIP ADV INF COMM TE, V364, P350
   Mittas N, 2008, INFORM SOFTWARE TECH, V50, P221, DOI 10.1016/j.infsof.2007.04.001
   Mittas N, 2010, EMPIR SOFTW ENG, V15, P523, DOI 10.1007/s10664-010-9128-6
   Oliveira ALI, 2006, NEUROCOMPUTING, V69, P1749, DOI 10.1016/j.neucom.2005.12.119
   Oliveira ALI, 2010, INFORM SOFTWARE TECH, V52, P1155, DOI 10.1016/j.infsof.2010.05.009
   Pendharkar PC, 2005, IEEE T SOFTWARE ENG, V31, P615, DOI 10.1109/TSE.2005.75
   Pickard L., 2001, IEE Proceedings-Software, V148, P165, DOI 10.1049/ip-sen:20010621
   Posnett D., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P362, DOI 10.1109/ASE.2011.6100074
   PUTNAM LH, 1978, IEEE T SOFTWARE ENG, V4, P345, DOI 10.1109/TSE.1978.231521
   Reddy P., 2011, INT J SOFTW ENG KNOW, V1, P12
   Seo Yeong-Seok., 2008, Proceedings of the 4th international workshop on Predictor models in software engineering, P25
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   Sheta AF, 2010, INT J BIO-INSPIR COM, V2, P365, DOI 10.1504/IJBIC.2010.037016
   Song QB, 2011, EXPERT SYST APPL, V38, P7302, DOI 10.1016/j.eswa.2010.12.005
   Tausworthe R. C., 1980, Journal of Systems and Software, V1, P181, DOI 10.1016/0164-1212(79)90018-9
   Vishal S., 2010, INT J COMPUTER SCI I, V7, P30
   Walkerden F., 1999, Empirical Software Engineering, V4, P135, DOI 10.1023/A:1009872202035
   Walkerden F., 1997, ADV COMPUT, V44, P59, DOI DOI 10.1016/S0065-2458(08)60337-X
   Wen JF, 2009, ASIA PAC SOFWR ENG, P179, DOI 10.1109/APSEC.2009.40
   Wu DS, 2013, J SUPERCOMPUT, V64, P898, DOI 10.1007/s11227-010-0525-9
NR 81
TC 43
Z9 44
U1 0
U2 22
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2014
VL 19
IS 4
BP 857
EP 884
DI 10.1007/s10664-013-9241-4
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AH8LE
UT WOS:000336388500003
DA 2024-07-18
ER

PT J
AU Lee, T
   Gu, T
   Baik, J
AF Lee, Taeho
   Gu, Taewan
   Baik, Jongmoon
TI MND-SCEMP: an empirical study of a software cost estimation modeling
   process in the defense domain
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Common cost factors; Defense domain; Domain specific cost factors;
   Software cost estimation modeling process; Software development process
AB The primary focus of weapon systems research and development has moved from a hardware base to a software base and the cost of software development is increasing gradually. An accurate estimation of the cost of software development is now a very important task in the defense domain. However, existing models and tools for software cost estimation are not suitable for the defense domain due to problems of accuracy. Thus, it is necessary to develop cost estimation models that are appropriate to specific domains. Furthermore, most studies of methodology development are aligned with generic methodologies that do not consider the pertinent factors to specific domains, whereas new methodologies should reflect specific domains. In this study, we apply two generic methodologies to the development of a software cost estimation model, before suggesting an integrated modeling process specifically for the national defense domain. To validate our proposed modeling process, we performed an empirical study of 113 software development projects on weapon systems in Korea. A software cost estimation model was developed by applying the proposed modeling process. The MMRE value of this model was 0.566 while the accuracy was appropriate for use. We conclude that the modeling process and software cost estimation model developed in this study is suitable for estimating resource requirements during weapon system development in South Korea's national defense domain. This modeling process and model may facilitate more accurate resource estimation by project planners, which will lead to more successful project execution.
C1 [Lee, Taeho] Agcy Def Dev, Joint Modeling & Simulat Ctr, Taejon 300600, South Korea.
   [Gu, Taewan] Hyundai Automot Elect AUTRON, Qual Control Team, Songnam 463400, Gyeonggi Do, South Korea.
   [Baik, Jongmoon] Korea Adv Inst Sci & Technol, Dept Comp Sci, Taejon 305701, South Korea.
C3 Agency of Defense Development (ADD), Republic of Korea; Hyundai Kia
   Motors; Korea Advanced Institute of Science & Technology (KAIST)
RP Lee, T (corresponding author), Agcy Def Dev, Joint Modeling & Simulat Ctr, Taejon 300600, South Korea.
EM lth2094@kaist.ac.kr; TaeWan.Gu@hyundai-autron.com; jbaik@kaist.ac.kr
RI Baik, Jongmoon/C-1780-2011
FU National Research Foundation of Korea; Korean Government (MEST)
   [NRF-2010-0014375]
FX "This work was supported by the National Research Foundation of Korea
   Grant funded by the Korean Government (MEST)" (NRF-2010-0014375).
CR [Anonymous], 2002, Handbook of Software Engineering
   [Anonymous], 2000, Software Cost Estimation with COCOMO II
   Baik J, 2002, IEEE T SOFTWARE ENG, V28, P1009, DOI 10.1109/TSE.2002.1049401
   Bailey JW, 1981, INT C SOFTW ENG
   Barbour R, 2006, CMMI DOD PERSPECTIVE
   Basha Saleem., 2010, International Journal of Computer Science and Information Security, V7, P68
   Benediktsson O, 2003, SOFTWARE QUAL J, V11, P265, DOI 10.1023/A:1025809010217
   Berntsson-Svenesson R, 2006, INT S EMP SOFTW ENG, DOI [10.1145/1159733.1159757, DOI 10.1145/1159733.1159757]
   Boehm B, 2000, ANN SOFTW ENG, V10, P177, DOI 10.1023/A:1018991717352
   Boehm B, 2004, ACM IEEE INT S EMP S, DOI [10.1109/ISESE.2004.1334903, DOI 10.1109/ISESE.2004.1334903]
   Briand L. C, 2002, RESOURCE ESTIMATION
   Cebrowski A., 1998, U.S. Naval Institute Proceedings
   Chulani S, 1999, IEEE T SOFTWARE ENG, V25, P573, DOI 10.1109/32.799958
   Galorath D, 2001, SEER SEM
   GAO, 1992, SOFTW PROBL LED SYST
   GAO, 2005, GAO05519T
   Group CAW, 2008, LEV INF SYST INT
   HEEMSTRA FJ, 1992, INFORM SOFTWARE TECH, V34, P627, DOI 10.1016/0950-5849(92)90068-Z
   ISPA, 1999, ISPA PAR EST HDB
   Jones C., 2007, Estimating Software Costs: Bringing Realism To Estimating
   Kokaguneli E, 2011, EMPIR SOFTW ENG, P1, DOI [10.1007/s10664-011-9189-1, DOI 10.1007/S10664-011-9189-1]
   Lee D, 2009, PROCEEDINGS OF THE 8TH IEEE/ACIS INTERNATIONAL CONFERENCE ON COMPUTER AND INFORMATION SCIENCE, P989, DOI 10.1109/ICIS.2009.168
   Morisio M, 1999, INT SOFTW METR S
   Myrtveit I, 2001, IEEE T SOFTWARE ENG, V27, P999, DOI 10.1109/32.965340
   NCW, 2005, IMPL NETW CENTR WARF
   Prieto-Diaz R., 1990, SIGSOFT Software Engineering Notes, V15, P47, DOI 10.1145/382296.382703
   Seo YS, 2008, INT WORKSH PRED MOD, DOI [10.1145/1370788.1370796, DOI 10.1145/1370788.1370796]
   VDC, 2006, EMB SOFTW MARK INT P
NR 28
TC 11
Z9 13
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2014
VL 19
IS 1
BP 213
EP 240
DI 10.1007/s10664-012-9220-1
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AA3HQ
UT WOS:000330983900007
DA 2024-07-18
ER

PT J
AU Hofman, R
AF Hofman, Radoslaw
TI Behavioral economics in software quality engineering
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software; Quality perception; Cognitive psychology; Behavioral economics
AB This article describes empirical research results regarding the "history effect" in software quality evaluation processes. Most software quality models and evaluation processes models assume that software quality may be deterministically evaluated, especially when it is evaluated by experts. Consequently, software developers focus on the technical characteristics of the software product. A similar assumption is common in most engineering disciplines. However, in regard to other kinds of goods, direct violations of the assumption about objective evaluation were shown to be affected by the consequences of cognitive processes limitations. Ongoing discussion in the area of behavioral economics raises the question: are the experts prone to observation biases? If they are, then software quality models overlook an important aspect of software quality evaluation. This article proposes an experiment that aims to trace the influence of users' knowledge on software quality assessment. Measuring the influence of single variables for the software quality perception process is a complex task. There is no valid quality model for the precise measurement of product quality, and consequently software engineering does not have tools to freely manipulate the quality level for a product. This article proposes a simplified method to manipulate the observed quality level, thereby making it possible to conduct research. The proposed experiment has been conducted among professional software evaluators. The results show the significant negative influence (large effect size) of negative experience of users on final opinion about software quality regardless of its actual level.
C1 [Hofman, Radoslaw] Poznan Univ Econ, Polish Software Attestat & Standardizat Org SASO, Dept Informat Syst, Poznan, Poland.
C3 Poznan University of Economics & Business
RP Hofman, R (corresponding author), Poznan Univ Econ, Polish Software Attestat & Standardizat Org SASO, Dept Informat Syst, Poznan, Poland.
EM radekh@saso.org.pl
CR AKERLOF GA, 1970, Q J EC
   [Anonymous], PSYCHOLOGIA POZNAWCZ
   [Anonymous], IASTED2003
   [Anonymous], 1956, PSYCHOL REV
   [Anonymous], 1979, ECONOMETRICA
   [Anonymous], INT C INT COMP WEB S
   [Anonymous], EXPT PSYCHOL
   [Anonymous], 1988, STAT POWER ANAL BEHA
   [Anonymous], J POLIT EC
   BARON R, 1996, J PERS SOC PSYCHOL, V71
   BASILI V, 1993, LECT NOTES COMPUTER
   Basili VR., 2007, EMPIRICAL SOFTWARE E
   Boehm B.W., 1978, Characteristics of Software Quality
   BROOKSHIRE D, 1987, AM EC REV, V77
   CAMERER C, 1999, J RISK UNCERTAIN, V19
   CAMERER C, 2003, BEHAV EC PAST UNPUB
   HOFMAN R, 2010, ADV TECHNIQUES COMPU
   LEVITT S, 2008, NATL BUREAU EC RES W
   LIST A, 2004, ECONOMETRICA
   McCall J., 1977, Factors in software quality, V1
   MIGUEL P, 2007, POMS COLL SERV OP EU
   MOOK D, 1983, AM PSYCHOL
   Osgood C. E., 1957, The measurement of meaning
   Pressman R.S., 1992, Software Engineering: A Practitioner's Approach, Vthird
   Shaughnessy J.J., 2005, Research methods in psychology, V7th
   Smith A., 1994, An Inquiry into the Nature and Causes of the Wealth of Nations, DOI DOI 10.1093/OSEO/INSTANCE.00043218
   STAVRINOUDIS D, 2005, SOFTW QUAL J, V13
   STEENKAMP JEB, 1986, 402 SWOKA
   Tversky A., 1982, Judgement Under Uncertainty: Heuristics and Biases
   Tversky A., 1974, SCIENCE
   XENOS M, 1995, SOFTWARE QUALITY PRO
   ZELENSKI J, 2007, EMOTIONS HELP HURT D
NR 32
TC 11
Z9 13
U1 1
U2 27
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2011
VL 16
IS 2
BP 278
EP 293
DI 10.1007/s10664-010-9140-x
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 732VM
UT WOS:000288217800004
DA 2024-07-18
ER

PT J
AU Weyuker, EJ
   Ostrand, TJ
   Bell, RM
AF Weyuker, Elaine J.
   Ostrand, Thomas J.
   Bell, Robert M.
TI Comparing the effectiveness of several modeling methods for fault
   prediction
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Empirical study; Fault prediction; Negative binomial; Recursive
   partitioning; Random forests; Bayesian trees; Fault-percentile-average
AB We compare the effectiveness of four modeling methods-negative binomial regression, recursive partitioning, random forests and Bayesian additive regression trees-for predicting the files likely to contain the most faults for 28 to 35 releases of three large industrial software systems. Predictor variables included lines of code, file age, faults in the previous release, changes in the previous two releases, and programming language. To compare the effectiveness of the different models, we use two metrics-the percent of faults contained in the top 20% of files identified by the model, and a new, more general metric, the fault-percentile-average. The negative binomial regression and random forests models performed significantly better than recursive partitioning and Bayesian additive regression trees, as assessed by either of the metrics. For each of the three systems, the negative binomial and random forests models identified 20% of the files in each release that contained an average of 76% to 94% of the faults.
C1 [Weyuker, Elaine J.; Ostrand, Thomas J.; Bell, Robert M.] AT&T Labs Res, Florham Pk, NJ 07932 USA.
C3 AT&T
RP Weyuker, EJ (corresponding author), AT&T Labs Res, 180 Pk Ave, Florham Pk, NJ 07932 USA.
EM weyuker@research.att.com; ostrand@research.att.com;
   rbell@research.att.com
CR ADAMS EN, 1984, IBM J RES DEV, V28, P2, DOI 10.1147/rd.281.0002
   [Anonymous], 2002, P 2002 ACM SIGSOFT I
   ARISHOLM E, 2006, P ACM IEEE ISESE RIO
   BASILI VR, 1984, COMMUN ACM, V27, P42, DOI 10.1145/69605.2085
   Bell R., 2006, Proc. 2006 International Symposium on Software Testing and Analysis, P61
   Blewitt ME, 2008, NAT GENET, V40, P663, DOI 10.1038/ng.142
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   CHIPMAN HA, 2008, BART BAYESIAN ADDITI
   DENARO G, 2002, P INT C SOFTW ENG IC
   Eick SG, 2001, IEEE T SOFTWARE ENG, V27, P1, DOI 10.1109/32.895984
   Fenton NE, 2000, IEEE T SOFTWARE ENG, V26, P797, DOI 10.1109/32.879815
   FRIEDMAN JH, 1991, ANN STAT, V19, P1, DOI 10.1214/aos/1176347963
   GUO L, 2004, P ISSRE 2004 SAINT M
   Hatton L, 1997, IEEE SOFTWARE, V14, P89, DOI 10.1109/52.582978
   Jiang Y, 2008, EMPIR SOFTW ENG, V13, P561, DOI 10.1007/s10664-008-9079-3
   Khoshgoftaar TM, 1996, IEEE SOFTWARE, V13, P65, DOI 10.1109/52.476287
   Khoshgoftaar TM, 2002, IEEE T RELIAB, V51, P455, DOI 10.1109/TR.2002.804488
   KORU AG, 2005, 2005 PROM WORKSH 15
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   MENZIES T, 2004, INT WORKSH MIN SOFTW
   Moller K.-H., 1993, Proceedings First International Software Metrics Symposium (Cat. No.93TH0518-1), P82, DOI 10.1109/METRIC.1993.263798
   MUNSON JC, 1992, IEEE T SOFTWARE ENG, V18, P423, DOI 10.1109/32.135775
   NELDER JA, 1972, J R STAT SOC SER A-G, V135, P370, DOI 10.2307/2344614
   Ohlsson N, 1996, IEEE T SOFTWARE ENG, V22, P886, DOI 10.1109/32.553637
   OSTRAND T, 2007, P 4 INT WORKSH SOFTW
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   OSTRAND TJ, 2007, P ACM INT S SOFTW TE
   Pighin M, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P206, DOI 10.1109/ISESE.2003.1237979
   Succi G, 2003, J SYST SOFTWARE, V65, P1, DOI 10.1016/S0164-1212(02)00024-9
   WHITE H, 1980, ECONOMETRICA, V48, P817, DOI 10.2307/1912934
NR 30
TC 69
Z9 83
U1 0
U2 10
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2010
VL 15
IS 3
BP 277
EP 295
DI 10.1007/s10664-009-9111-2
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 580WD
UT WOS:000276480300003
DA 2024-07-18
ER

PT J
AU Thummalapenta, S
   Cerulo, L
   Aversano, L
   Di Penta, M
AF Thummalapenta, Suresh
   Cerulo, Luigi
   Aversano, Lerina
   Di Penta, Massimiliano
TI An empirical study on the maintenance of source code clones
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software clones; Software maintenance; Mining software repositories;
   Clone evolution
ID EVOLUTION; SOFTWARE
AB Code cloning has been very often indicated as a bad software development practice. However, many studies appearing in the literature indicate that this is not always the case. In fact, either changes occurring in cloned code are consistently propagated, or cloning is used as a sort of templating strategy, where cloned source code fragments evolve independently. This paper (a) proposes an automatic approach to classify the evolution of source code clone fragments, and (b) reports a fine-grained analysis of clone evolution in four different Java and C software systems, aimed at investigating to what extent clones are consistently propagated or they evolve independently. Also, the paper investigates the relationship between the presence of clone evolution patterns and other characteristics such as clone radius, clone size and the kind of change the clones underwent, i.e., corrective maintenance or enhancement.
C1 [Cerulo, Luigi; Aversano, Lerina; Di Penta, Massimiliano] Univ Sannio, Dept Engn, Benevento, Italy.
   [Thummalapenta, Suresh] N Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
C3 University of Sannio; North Carolina State University
RP Di Penta, M (corresponding author), Univ Sannio, Dept Engn, Benevento, Italy.
EM sthumma@ncsu.edu; lcerulo@unisannio.it; aversano@unisannio.it;
   dipenta@unisannio.it
RI Aversano, Lerina/AAG-3855-2019; Di Penta, Massimiliano/AAF-9656-2021
OI Aversano, Lerina/0000-0003-2436-6835; Cerulo, Luigi/0000-0001-8342-3487;
   Di Penta, Massimiliano/0000-0002-0340-9747
FU MiUR (Ministero dell'Universita e della Ricerca) [PRIN2006-2006098097];
   NSF [CCF-0725190]; ARO [W911NF-08-1-0443]
FX We would like to thank the anonymous reviewers for their very
   constructive comments on early versions of this manuscript. We also
   thank William Harris for his review comments that helped us to improve
   the draft. Luigi Cerulo, Lerina Aversano, and Massimiliano Di Penta are
   partially supported by the project METAMORPHOS (MEthods and Tools for
   migrAting software systeMs towards web and service Oriented
   aRchitectures: exPerimental evaluation, usability, and tecHnOlogy
   tranSfer), funded by MiUR (Ministero dell'Universita e della Ricerca)
   under grant PRIN2006-2006098097. Suresh Thummalapenta is partially
   supported by NSF grant CCF-0725190 and ARO grant W911NF-08-1-0443.
CR Al-Ekram R., 2005, ISESE, P376
   Alkhatib G., 1992, Journal of Software Maintenance: Research and Practice, V4, P83, DOI 10.1002/smr.4360040203
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Antoniol G, 2002, INFORM SOFTWARE TECH, V44, P755, DOI 10.1016/S0950-5849(02)00123-4
   AVERSANO L, 2007, 11 EUR C SOFTW MAINT, P81
   BAKER BS, 1995, SECOND WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P86, DOI 10.1109/WCRE.1995.514697
   Bakota T, 2007, PROC IEEE INT CONF S, P234
   Balazinska M, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P98, DOI 10.1109/WCRE.2000.891457
   Baxter ID, 1998, PROC IEEE INT CONF S, P368, DOI 10.1109/ICSM.1998.738528
   Bellon S, 2007, IEEE T SOFTWARE ENG, V33, P577, DOI 10.1109/TSE.2007.70725
   Bouktif S, 2006, WORK CONF REVERSE EN, P221
   Bouktif S, 2006, PROC IEEE INT CONF S, P155
   CANFORA G, 2007, P 4 INT WORKSH MIN S, P14
   Casazza G, 2001, FIRST IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P90, DOI 10.1109/SCAM.2001.972670
   Cordy JR, 2003, PROG COMPREHEN, P196
   Duala-Ekoko E, 2007, PROC INT CONF SOFTW, P158
   Fischer M, 2003, PROC IEEE INT CONF S, P23, DOI 10.1109/ICSM.2003.1235403
   GABEL M, 2008, 30 INT C SOFTW ENG I, P321
   Gall H, 2003, SIXTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P13
   Gall H, 1998, PROC IEEE INT CONF S, P190, DOI 10.1109/ICSM.1998.738508
   Geiger R, 2006, LECT NOTES COMPUT SC, V3922, P411
   Godfrey M. W., 2000, CASCON WORKSH DET DU
   Godfrey MW, 2000, PROC IEEE INT CONF S, P131, DOI 10.1109/ICSM.2000.883030
   Jiang LX, 2007, PROC INT CONF SOFTW, P96
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kapser C, 2005, PROC IEEE INT CONF S, P305
   Kapser C, 2004, 7TH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, P85, DOI 10.1109/IWPSE.2004.1334772
   KAPSER C, 2007, DUPLICATION REDUNDAN
   Kapser C, 2006, WORK CONF REVERSE EN, P19
   Kim Miryung, 2005, ESEC/FSE- 13), P187, DOI [10.1145/1081706.1081737, DOI 10.1145/1081706.1081737]
   Krinke J, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P301, DOI 10.1109/WCRE.2001.957835
   Krinke J, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P170, DOI 10.1109/WCRE.2007.7
   Levenshtein V. I., 1966, SOV PHYS DOKL, V10, P707
   Li ZM, 2006, IEEE T SOFTWARE ENG, V32, P176, DOI 10.1109/TSE.2006.28
   Lozano A., 2007, PROC 4 INT WORKSHOP, P18, DOI DOI 10.1109/MSR.2007.8
   Lozano Angelo., 2007, Ninth International Workshop on Principles of software evolution, P31
   Marchal D, 2003, J STRUCT GEOL, V25, P135, DOI 10.1016/S0191-8141(02)00011-1
   Mayrand J, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P244, DOI 10.1109/ICSM.1996.565012
   MOCKUS A, 2000, P INT C SOFTW MAINT
   REISS SP, 2007, 22 IEEE ACM INT C AU, P74
   Ueda Y, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P67, DOI 10.1109/METRIC.2002.1011326
   van Emden E, 2002, NINTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P97, DOI 10.1109/WCRE.2002.1173068
   XIE Y, 2002, P 10 ACM SIGSOFT S F, P51
   Yin RK, 2002, Applied Social Research Methods Series, V34
   Zimmermann T, 2004, PROC INT CONF SOFTW, P563, DOI 10.1109/ICSE.2004.1317478
NR 45
TC 112
Z9 133
U1 0
U2 10
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2010
VL 15
IS 1
BP 1
EP 34
DI 10.1007/s10664-009-9108-x
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 549GU
UT WOS:000274036300001
DA 2024-07-18
ER

PT J
AU Budgen, D
   Kitchenham, BA
   Charters, SM
   Turner, M
   Brereton, P
   Linkman, SG
AF Budgen, David
   Kitchenham, Barbara A.
   Charters, Stuart M.
   Turner, Mark
   Brereton, Pearl
   Linkman, Stephen G.
TI Presenting software engineering results using structured abstracts: a
   randomised experiment
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE structured abstract; randomised controlled laboratory experiment
ID READABILITY
AB When conducting a systematic literature review, researchers usually determine the relevance of primary studies on the basis of the title and abstract. However, experience indicates that the abstracts for many software engineering papers are of too poor a quality to be used for this purpose. A solution adopted in other domains is to employ structured abstracts to improve the quality of information provided. This study consists of a formal experiment to investigate whether structured abstracts are more complete and easier to understand than non-structured abstracts for papers that describe software engineering experiments. We constructed structured versions of the abstracts for a random selection of 25 papers describing software engineering experiments. The 64 participants were each presented with one abstract in its original unstructured form and one in a structured form, and for each one were asked to assess its clarity (measured on a scale of 1 to 10) and completeness (measured with a questionnaire that used 18 items). Based on a regression analysis that adjusted for participant, abstract, type of abstract seen first, knowledge of structured abstracts, software engineering role, and preference for conventional or structured abstracts, the use of structured abstracts increased the completeness score by 6.65 (SE 0.37, p < 0.001) and the clarity score by 2.98 (SE 0.23, p < 0.001). 57 participants reported their preferences regarding structured abstracts: 13 (23%) had no preference; 40 (70%) preferred structured abstracts; four preferred conventional abstracts. Many conventional software engineering abstracts omit important information. Our study is consistent with studies from other disciplines and confirms that structured abstracts can improve both information content and readability. Although care must be taken to develop appropriate structures for different types of article, we recommend that Software Engineering journals and conferences adopt structured abstracts.
C1 [Budgen, David] Univ Durham, Dept Comp Sci, Durham, England.
   [Kitchenham, Barbara A.; Turner, Mark; Brereton, Pearl; Linkman, Stephen G.] Keele Univ, Sch Comp & Math, Keele, Staffs, England.
   [Charters, Stuart M.] Lincoln Univ, Sch Appl Comp, Lincoln, New Zealand.
C3 Durham University; Keele University; Lincoln University - New Zealand
RP Budgen, D (corresponding author), Univ Durham, Dept Comp Sci, Durham, England.
EM david.budgen@durham.ac.uk; b.a.kitchenham@cs.keele.ac.uk;
   charters@lincoln.ac.nz; m.turner@cs.keele.ac.uk;
   o.p.brereton@cs.keele.ac.uk; s.g.linkman@cs.keele.ac.uk
RI Kitchenham, Barbara/AAL-4311-2020; Charters, Stuart M/C-1751-2012
OI Kitchenham, Barbara/0000-0002-6134-8460; Budgen,
   David/0000-0001-7143-0241
FU U.K.'s Engineering and Physical Sciences Research Council (EPSRC); EPSRC
   [EP/E046983/1, EP/E049184/1] Funding Source: UKRI
FX This work was supported by an award from the U.K.'s Engineering and
   Physical Sciences Research Council (EPSRC). The authors would also like
   to thank Dag Sjoberg for providing a random selection of papers to use
   in this study; all those who helped by participating in the study as
   'judges'; John Bailey who organised the data collection; and Professor
   Jim Hartley of Keele University for his advice and guidance.
CR [Anonymous], 2004, ANN INTERN MED, V140, P480, DOI 10.7326/0003-4819-140-6-200403160-00015
   [Anonymous], 2003, HYPOTHESIS
   [Anonymous], 2002, J WILEY
   [Anonymous], 1967, DISCOV GROUNDED THEO
   Booth A., 2003, New Review of Information and Library Research, V9, P3, DOI 10.1080/13614550410001687909
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   BUDGEN D, 2007, PROTOCOL EXPT STUDY
   BUDGEN D, 2007, EASE 2007, P64
   Flesch R, 1948, J APPL PSYCHOL, V32, P221, DOI 10.1037/h0057532
   Hartley J, 2004, J MED LIBR ASSOC, V92, P368
   Hartley J, 2003, SCI COMMUN, V24, P366, DOI 10.1177/1075547002250301
   Hartley J, 1998, BRIT J EDUC PSYCHOL, V68, P443, DOI 10.1111/j.2044-8279.1998.tb01303.x
   Hartley J, 1996, J INFORM SCI, V22, P27, DOI 10.1177/016555159602200103
   HARTLEY J, 2000, J TECHNICAL WRITING, V30, P355
   Hartley J., 1997, Journal of Research in Reading, V20, P122, DOI DOI 10.1111/1467-9817.00025
   Jedlitschka A, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P92, DOI 10.1109/ISESE.2005.1541818
   KITCHENHAM B, 2007, P REBSE 2 WORKSH ICS
   KITCHENHAM B, 2006, P ACM IEEE INT S EMP
   KITCHENHAM B, 2004, TRSE0401 U NAT ICT D
   Kitchenham BA, 2008, IET SOFTW, V2, P37, DOI 10.1049/iet-sen:20070044
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Milliken G.A., 1992, ANAL MESSY DATA, VI
   Petticrew M, 2006, SYSTEMATIC REVIEWS IN THE SOCIAL SCIENCES: A PRACTICAL GUIDE, P1, DOI 10.1002/9780470754887
   Sharma S, 2006, AM J ORTHOD DENTOFAC, V130, P523, DOI 10.1016/j.ajodo.2005.10.023
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Webster J, 2002, MIS QUART, V26, pXIII
   *WIK, 2006, WIK FREE ENC
   2006, WIKIPEDIA FREE ENCY
   [No title captured]
NR 30
TC 33
Z9 36
U1 0
U2 9
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2008
VL 13
IS 4
BP 435
EP 468
DI 10.1007/s10664-008-9075-7
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 343FK
UT WOS:000258838200004
DA 2024-07-18
ER

PT J
AU Moses, J
   Farrow, M
AF Moses, John
   Farrow, Malcolm
TI Tests for consistent measurement of external subjective software quality
   attributes
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE subjective software quality attributes; conditional probability;
   consistent measurement; Bayesian inference; multinomial distribution;
   error rates; distribution principle; minimum rejection principle; data
   imputation
ID DISTRIBUTIONS; MODEL
AB One reason that researchers may wish to demonstrate that an external software quality attribute can be measured consistently is so that they can validate a prediction system for the attribute. However, attempts at validating prediction systems for external subjective quality attributes have tended to rely on experts indicating that the values provided by the prediction systems informally agree with the experts' intuition about the attribute. These attempts are undertaken without a pre-defined scale on which it is known that the attribute can be measured consistently. Consequently, a valid unbiased estimate of the predictive capability of the prediction system cannot be given because the experts' measurement process is not independent of the prediction system's values. Usually, no justification is given for not checking to see if the experts can measure the attribute consistently. It seems to be assumed that: subjective measurement isn't proper measurement or subjective measurement cannot be quantified or no one knows the true values of the attributes anyway and they cannot be estimated. However, even though the classification of software systems' or software artefacts' quality attributes is subjective, it is possible to quantify experts' measurements in terms of conditional probabilities. It is then possible, using a statistical approach, to assess formally whether the experts' measurements can be considered consistent. If the measurements are consistent, it is also possible to identify estimates of the true values, which are independent of the prediction system. These values can then be used to assess the predictive capability of the prediction system. In this paper we use Bayesian inference, Markov chain Monte Carlo simulation and missing data imputation to develop statistical tests for consistent measurement of subjective ordinal scale attributes.
C1 [Moses, John] Univ Sunderland, Sch Comp & Technol, Sunderland SR6 0DD, England.
   [Farrow, Malcolm] Newcastle Univ, Dept Math & Stat, Newcastle Upon Tyne NE1 7RU, Tyne & Wear, England.
C3 University of Sunderland; Newcastle University - UK
RP Moses, J (corresponding author), Univ Sunderland, Sch Comp & Technol, Sunderland SR6 0DD, England.
EM john.moses@sund.ac.uk; malcolm.farrow@ncl.ac.uk
CR AGRESTI A, 1988, BIOMETRICS, V44, P539, DOI 10.2307/2531866
   Agresti A, 2002, CATEGORICAL DATA ANA
   ALBERT JH, 1992, J EDUC STAT, V17, P251, DOI 10.2307/1165149
   Altman DG., 1996, PRACTICAL STAT MED R, V7th
   [Anonymous], 1979, Encyclopedia of Mathematics and its Applications
   [Anonymous], 912612001 ISOIEC 1
   [Anonymous], 1996, Bugs 0.5: Bayesian inference using Gibbs sampling, manual (version ii)
   ARANDA J, 2005, P 10 EUR SOFTW ENG C, P346
   Bartholomew D.J., 1999, Kendall's Library of Statistics, V7
   Bland JM, 1997, BRIT MED J, V314, P572, DOI 10.1136/bmj.314.7080.572
   Cartwright MH, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P154, DOI 10.1109/METRIC.2003.1232464
   CONGDON P, 2001, WILEY SER PROB STAT, P1
   CONIAM SW, 1994, PRACTICAL PAIN MANAG
   Cronbach LJ, 1951, PSYCHOMETRIKA, V16, P297
   Dawid A. P., 1979, J ROY STAT SOC C, V28, P20, DOI DOI 10.2307/2346806
   DEMARCO T, 1982, CONTROLLING SOFTWARE
   Domhoff GW, 1999, DREAMING, V9, P115, DOI 10.1023/A:1021325331276
   FENTON N, 1994, IEEE T SOFTWARE ENG, V20, P199, DOI 10.1109/32.268921
   Fenton NE, 1998, IEEE T SOFTWARE ENG, V24, P1002, DOI 10.1109/32.730547
   Fenton NE, 1999, IEEE T SOFTWARE ENG, V25, P675, DOI 10.1109/32.815326
   FLEISS JL, 1971, PSYCHOL BULL, V76, P378, DOI 10.1037/h0031619
   Gelman A., 1998, Bayesian data analysis
   GEMAN S, 1984, IEEE T PATTERN ANAL, V6, P721, DOI 10.1109/TPAMI.1984.4767596
   GILKS WR, 1997, M CHAIN M CARLO PRAC, P1
   HASTINGS WK, 1970, BIOMETRIKA, V57, P97, DOI 10.1093/biomet/57.1.97
   Hughes RT, 1996, INFORM SOFTWARE TECH, V38, P67, DOI 10.1016/0950-5849(95)01045-9
   Kendall M. G., 1973, The advanced theory of statistics, volume 2: Inference and relationship
   Kitchenham B., 2003, ACM SIGSOFT SOFTW EN, V28, P24, DOI DOI 10.1145/638750.638758
   Kyburg HenryE., 1984, THEORY MEASUREMENT
   LINDLEY DV, 2000, STATISTICIAN, V49, P293, DOI DOI 10.1111/1467-9884.00238
   Little R. J. A., 2019, Statistical Analysis with Missing Data, V793
   METROPOLIS N, 1953, J CHEM PHYS, V21, P1087, DOI 10.1063/1.1699114
   Moses J, 2005, SOFTWARE QUAL J, V13, P71, DOI 10.1007/s11219-004-5261-z
   Moses J, 2000, SEVENTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 2001, PROCEEDINGS, P112, DOI 10.1109/METRIC.2001.915520
   Moses J, 2000, INFORM SOFTWARE TECH, V42, P533, DOI 10.1016/S0950-5849(00)00097-5
   MOSES J, 2004, 1 SOFTW MEAS EUR FOR, P247
   MOSES J, 2007, SOFTWARE QUALITY J, V15
   Myrtveit I, 2001, IEEE T SOFTWARE ENG, V27, P999, DOI 10.1109/32.965340
   Pendharkar PC, 2005, IEEE T SOFTWARE ENG, V31, P615, DOI 10.1109/TSE.2005.75
   ROSENBERG J, 1997, J EMPIRICAL SOFTWARE, V2, P173
   RUBIN DB, 1984, ANN STAT, V12, P1151, DOI 10.1214/aos/1176346785
   Seigel S, 1998, NONPARAMETRIC STAT B
   SHEPPERD M, 1990, INFORM SOFTWARE TECH, V32, P311, DOI 10.1016/0950-5849(90)90065-Y
   Spiegelhalter D J, 1983, Stat Med, V2, P33, DOI 10.1002/sim.4780020105
   Strike K, 2001, IEEE T SOFTWARE ENG, V27, P890, DOI 10.1109/32.962560
   WILSON ME, 1980, BR MED J        0223
   Yu LG, 2004, IEEE T SOFTWARE ENG, V30, P694, DOI 10.1109/TSE.2004.58
   [No title captured]
NR 48
TC 5
Z9 5
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2008
VL 13
IS 3
BP 261
EP 287
DI 10.1007/s10664-007-9058-0
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 316RE
UT WOS:000256966600002
DA 2024-07-18
ER

PT J
AU Babar, MA
   Kitchenham, B
   Jeffery, R
AF Babar, Muhammad Ali
   Kitchenham, Barbara
   Jeffery, Ross
TI Comparing distributed and face-to-face meetings for software
   architecture evaluation: A controlled experiment
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 5th International Symposium on Empirical Software Engineering
CY 2006
CL Rio de Janeiro, BRAZIL
DE architecture evaluation; process improvement; controlled experiments;
   groupware support; scenario development
ID GROUP SUPPORT-SYSTEMS; REVIEWS
AB Scenario-based methods for evaluating software architecture require a large number of stakeholders to be collocated for evaluation meetings. Collocating stakeholders is often an expensive exercise. To reduce expense, we have proposed a framework for supporting software architecture evaluation process using groupware systems. This paper presents a controlled experiment that we conducted to assess the effectiveness of one of the key activities, developing scenario profiles, of the proposed groupware-supported process of evaluating software architecture. We used a cross-over experiment involving 32 teams of three 3rd and 4th year undergraduate students. We found that the quality of scenario profiles developed by distributed teams using a groupware tool were significantly better than the quality of scenario profiles developed by face-to-face teams (p < 0.001). However, questionnaires indicated that most participants preferred the face-to-face arrangement (82%) and 60% thought the distributed meetings were less efficient. We conclude that distributed meetings for developing scenario profiles are extremely effective but that tool support must be of a high standard or participants will not find distributed meetings acceptable.
C1 [Babar, Muhammad Ali] Univ Limerick, Limerick, Ireland.
   [Kitchenham, Barbara; Jeffery, Ross] Natl ICT Australia, Sydney, NSW, Australia.
C3 University of Limerick; NICTA
RP Babar, MA (corresponding author), Univ Limerick, Limerick, Ireland.
EM malibaba@lero.ie; barbara.kitchenham@nicta.com.au;
   ross.jeffery@nicta.com.au
RI Kitchenham, Barbara/AAL-4311-2020
OI Kitchenham, Barbara/0000-0002-6134-8460
CR ALIBABAR M, 2006, P 28 INT C SOFTW ENG
   ALIBABAR M, 2004, P 15 AUSTR SOFTW ENG
   ALIBABAR M, 2005, P INT WORKSH DISTR S
   Babar MA, 2006, J SYST SOFTWARE, V79, P912, DOI 10.1016/j.jss.2005.06.043
   BASILI VR, 1986, IEEE T SOFTWARE ENG, V12, P733, DOI 10.1109/TSE.1986.6312975
   Bass L., 2013, SOFTWARE ARCHITECTUR
   Bengtsson P, 2000, ANN SOFTW ENG, V9, P59, DOI 10.1023/A:1018968506874
   Bengtsson P, 2002, THESIS BLEKINGE I TE
   BIUKAGHAI RP, 1999, P DAT APPL NONTR ENV
   Boehm B, 2001, IEEE SOFTWARE, V18, P46, DOI 10.1109/52.922725
   CLEMENTS P., 2002, EVALUATING SOFTWARE
   Damian DEH, 2000, IEEE SOFTWARE, V17, P28, DOI 10.1109/52.896247
   DeSanctis G., 1990, Organizations and Communication Technology, P173, DOI DOI 10.4135/9781483325385.N8
   Dobrica L, 2002, IEEE T SOFTWARE ENG, V28, P638, DOI 10.1109/TSE.2002.1019479
   ELLIS CA, 1991, COMMUN ACM, V34, P38
   Fjermestad J., 1998, Journal of Management Information Systems, V15, P7
   Fjermestad J, 2004, DECIS SUPPORT SYST, V37, P239, DOI 10.1016/S0167-9236(03)00021-6
   Fjermestad J, 2000, J MANAGE INFORM SYST, V17, P115
   Genuchten MV, 1997, J MANAGE INFORM SYST, V14, P165
   HALLING M, 2001, P 16 INT C AUT SOFTW
   Herbsleb JD, 2001, IEEE SOFTWARE, V18, P16, DOI 10.1109/52.914732
   Hiltz R, 1978, NETWORK NATIONS HUMA
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   JARVENPAA SL, 1988, MIS QUART, V12, P645, DOI 10.2307/249137
   Kazman R, 2002, IEEE SOFTWARE, V19, P67, DOI 10.1109/52.976943
   Kazman R, 1996, IEEE SOFTWARE, V13, P47, DOI 10.1109/52.542294
   KAZMAN R, 1994, P 16 INT C SOFTW ENG
   Kazman R., 1999, P 21 INT C SOFTW ENG P 21 INT C SOFTW ENG
   KAZMAN R, 2000, CMUSEI2000TR004 CARN
   KIESLER S, 1984, AM PSYCHOL, V39, P1123, DOI 10.1037/0003-066X.39.10.1123
   KITCHENHAM B, 2003, P 11 INT WORKSH SOFT
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Lanubile F., 2003, Software Process Improvement and Practice, V8, P217, DOI 10.1002/spip.184
   Lassing N, 2003, J SYST SOFTWARE, V65, P141, DOI 10.1016/S0164-1212(02)00056-0
   Lassing N, 2002, J SYST SOFTWARE, V61, P47, DOI 10.1016/S0164-1212(01)00113-3
   Maranzano JF, 2005, IEEE SOFTWARE, V22, P34, DOI 10.1109/MS.2005.28
   McGrath JosephE., 1994, GROUPS INTERACTING T
   Nunamaker J., 1989, Decision Support Systems, V5, P183, DOI 10.1016/0167-9236(89)90006-7
   Nunamaker J. R.  Jr, 1996, Journal of Management Information Systems, V13, P163
   NUNAMAKER JF, 1991, COMMUN ACM, V34, P40, DOI 10.1145/105783.105793
   Paasivaara M., 2003, Software Process Improvement and Practice, V8, P183, DOI 10.1002/spip.187
   Perry DE, 2002, IEEE T SOFTWARE ENG, V28, P695, DOI 10.1109/TSE.2002.1019483
   Porter AA, 1997, IEEE T SOFTWARE ENG, V23, P129, DOI 10.1109/32.585501
   Rosnow R.L., 1997, People studying people: Artifacts and ethics in behavioral research
   Sakthivel S, 2005, INFORM SOFTWARE TECH, V47, P305, DOI 10.1016/j.infsof.2004.09.001
   Sauer C, 2000, IEEE T SOFTWARE ENG, V26, P1, DOI 10.1109/32.825763
   SENN S, 2002, CROSS OVER CLIN RES
   Toothaker L.E., 1996, INTRO STAT BEHAV SCI, V2nd
   TYRAN CK, 1992, MIS QUART, V16, P313, DOI 10.2307/249531
   Tyran CK, 2002, COMMUN ACM, V45, P87, DOI 10.1145/567498.567504
   VALACICH JS, 1991, INT J MAN MACH STUD, V34, P261, DOI 10.1016/0020-7373(91)90044-8
   VALACICH JS, 1992, SMALL GR RES, V23, P49, DOI 10.1177/1046496492231004
   van Genuchten M, 2001, IEEE SOFTWARE, V18, P60, DOI 10.1109/52.922727
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   *ZWIK, 2004, ZWIK SYST
NR 55
TC 18
Z9 19
U1 0
U2 9
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2008
VL 13
IS 1
BP 39
EP 62
DI 10.1007/s10664-007-9052-6
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 245WT
UT WOS:000251970200003
DA 2024-07-18
ER

PT J
AU Kommeren, R
   Parviainen, P
AF Kommeren, Rob
   Parviainen, Paivi
TI Philips experiences in global distributed software development
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Philips; software development; globally distributed software
AB Global software development is increasingly common. Main expected benefits are improvements in time-to-market efficiency and access to greater - and less costly - resources. A number of problems are still to be solved before the full potential of global development can be obtained. This paper describes the experience of over 10 years of global distributed development at Philips, derived from about 200 projects. We discuss the experience and lessons learnt from multi-site development. Main lessons learned are that explicit agreements and ways of working should be defined for the following areas needing the most attention; team coordination and communication, requirements and architectures, integration, and configuration management. In addition, we discuss the experience gained from subcontracting software development to suppliers. Main lesson learned from subcontracting software development is the need for explicit attention and ways of working with respect to selection of suppliers, specification of the work to be subcontracted and establishment and content of the contract.
C1 VTT Tech Res Ctr Finland, Oulu 90571, Finland.
   Philips Appl Technol, NL-5600 MD Eindhoven, Netherlands.
   Tech Res Ctr Finland, VTT, Espoo, Finland.
C3 VTT Technical Research Center Finland; Philips; VTT Technical Research
   Center Finland
RP Kommeren, R (corresponding author), VTT Tech Res Ctr Finland, POB 1100, Oulu 90571, Finland.
EM r.c.kommeren@philips.com; paivi.parviainen@vtt.fi
CR Agerfalk P.J., 2006, COMMUN ACM, V49, P27
   BASS M, 2004, P ICSE 2004 INT C SO
   Battin R., 2001, Leveraging Resources in Global Software Development, P70
   BOLAND D, 2004, 3 INT WORKSH GLOB SO
   CUSICK J, 2006, PRACTICAL MANAGEMENT, P20
   DAMIAN D, 2004, P ICSE 2004 INT C SO
   Ebert C., 2001, Surviving Global Software Development, P62
   FALLS M, 1995, ENG MANAG J      DEC
   Herbsleb J. D., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P85, DOI 10.1109/ICSE.1999.840998
   Herbsleb JD, 2003, IEEE T SOFTWARE ENG, V29, P481, DOI 10.1109/TSE.2003.1205177
   Herbsleb JD, 2001, IEEE SOFTWARE, V18, P16, DOI 10.1109/52.914732
   KOMISIRVIO S, 2003, 15 INT C SOFTW ENG K
   PAASIVAARA M, 2004, 3 INT WORKSH GLOB SO
   *VA SOFTW, 2005, ROAD HIGH DEV EFF WH
NR 14
TC 55
Z9 57
U1 0
U2 11
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2007
VL 12
IS 6
BP 647
EP 660
DI 10.1007/s10664-007-9047-3
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 226MC
UT WOS:000250592200004
DA 2024-07-18
ER

PT J
AU Moreira, CG
   de França, BBN
   Conte, TU
AF Moreira, Caique G.
   de Franca, Breno B. N.
   Conte, Tayana U.
TI Analyzing the BizDev interface in an enterprise context: a case of
   developers acting in business
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE BizDev; Business-development interface; Agile software development;
   Organizational culture
ID AGILE
AB ContextCurrently, organizations seek to evolve software engineering methodologies targeting a wider and healthier collaboration among their functional areas. In this context, the interface between business and development (BizDev) includes all the interactions between Information Technology and business areas within an organization. Although we have been observing a small number of studies about this interface, we still consider the area lacks deeper characterization and deserves analysis in more diverse contexts.GoalWe aimed to understand how the BizDev interface works under enterprise and innovative contexts, raising information on roles, responsibilities, and practices in the interface.MethodWe conducted a case study in a Brazilian company through the application of semi-structured interviews with fifteen people from both technology and business areas. The interviews were recorded, transcribed, and further analyzed using Grounded Theory procedures, namely the open, axial, and selective coding phases. Finally, the synthesis was validated with participants.ResultsNot only we obtained relevant information on roles, responsibilities, and practices in the BizDev interface, but we also identified a phenomenon in which IT people acted in business. We observed development analysts and leaders working on defining and prioritizing requirements, analyzing business indicators, and presenting feature propositions. Also, the organizational culture strongly influenced this behavior through the sense of ownership and meritocracy. This performance is also characterized as data-driven, with IT people constantly extracting metrics and using them to validate and justify their work in business.ConclusionThe organizational culture and the open BizDev communication were the main motivators and support for IT people to act in business. Despite the positive results, developers also delivered features that harmed some business aspects. Therefore, while we advocate organizations should review their organizational values and culture to motivate this behavior, we suggest that guidance from the business area is necessary, introducing measures to prevent business decisions from being made solely by the IT area.
C1 [Moreira, Caique G.; de Franca, Breno B. N.] Univ Estadual Campinas, Inst Computacao, Campinas, Brazil.
   [Conte, Tayana U.] Univ Fed Amazonas, Inst Computacao, Manaus, Brazil.
C3 Universidade Estadual de Campinas; Universidade Federal de Amazonas
RP de França, BBN (corresponding author), Univ Estadual Campinas, Inst Computacao, Campinas, Brazil.
RI de França, Breno B N/D-8754-2017
OI de Franca, Breno Bernard Nicolau/0000-0002-4531-1473
FU Coordenacao de Aperfeicoamento de Pessoal de Nivel Superior - Brasil
   (CAPES); UNICAMP, Amazonas State Research Support Foundation - FAPEAM,
   Federal University of Amazonas (UFAM) [001]; CNPq;  [314174/2020-6]
FX We thank the Brazilian Company and the participants for supporting this
   research. We thank the reviewers for all their suggestions, many of
   which we incorporated into the paper and significantly improved it. This
   research was financed in part by the Coordenacao de Aperfeicoamento de
   Pessoal de Nivel Superior - Brasil (CAPES) - Finance Code 001. Also
   supported by UNICAMP, Amazonas State Research Support Foundation -
   FAPEAM, Federal University of Amazonas (UFAM), and CNPq process
   314174/2020-6
CR Abrahamsson P., 2002, Agile Software Development Methods: Review and Analysis
   ADLER PA, 1995, CONTEMP SOCIOL, V24, P420, DOI 10.2307/2076552
   Agile S, 2011, Scaled agile framework
   BROWN AD, 1994, J MANAGE STUD, V31, P807, DOI 10.1111/j.1467-6486.1994.tb00640.x
   Conboy K, 2009, INFORM SYST RES, V20, P329, DOI 10.1287/isre.1090.0236
   Diel E, 2016, INT CONF GLOBAL SOFT, P24, DOI 10.1109/ICGSE.2016.28
   Fitzgerald B, 2017, J SYST SOFTWARE, V123, P176, DOI 10.1016/j.jss.2015.06.063
   Gruhn V., 2015, INT C INTELLIGENT SO, P388, DOI [10.1007/978-3-319-22689-7_30, DOI 10.1007/978-3-319-22689-7_30]
   Karvonen T, 2018, LECT NOTES BUS INF P, V314, P131, DOI 10.1007/978-3-319-91602-6_9
   Knauss E, 2018, REQUIR ENG, V23, P97, DOI 10.1007/s00766-016-0259-1
   Moreira C, 2019, P 22 IB AM C SOFTW E, P86
   de França BBN, 2016, THIRTIETH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2016), P53, DOI 10.1145/2973839.2973845
   Nyrud H, 2017, Bizdev teams in agile software development
   Oriol M, 2018, INT REQUIR ENG CONF, P217, DOI 10.1109/RE.2018.00030
   Palomares C, 2021, REQUIR ENG, V26, P273, DOI 10.1007/s00766-020-00345-x
   Petersen K, 2013, 2013 JOINT CONFERENCE OF THE 23RD INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE 2013 EIGHTH INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA), P81, DOI 10.1109/IWSM-Mensura.2013.22
   Putta A, 2021, LECT NOTES BUS INF P, V419, P172, DOI 10.1007/978-3-030-78098-2_11
   Remta D, 2021, INFORMATION, V12, DOI 10.3390/info12030107
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sharp H, 2010, AGILE SOFTWARE DEVELOPMENT: CURRENT RESEARCH AND FUTURE DIRECTIONS, P61, DOI 10.1007/978-3-642-12575-1_4
   Strauss A., 1990, BASICS QUALITATIVE R
   Strong DR, 2009, ECOLOGY, V90, P1, DOI 10.1890/0012-9658-90.1.1
   van Waardenburg G, 2013, INFORM SOFTWARE TECH, V55, P2154, DOI 10.1016/j.infsof.2013.07.012
NR 23
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2023
VL 28
IS 6
AR 154
DI 10.1007/s10664-023-10383-y
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA X8JK0
UT WOS:001100843200003
DA 2024-07-18
ER

PT J
AU Ribeiro, TV
   dos Santos, PSM
   Travassos, GH
AF Ribeiro, Talita Vieira
   dos Santos, Paulo Sergio Medeiros
   Travassos, Guilherme Horta
TI On the Investigation of Empirical Contradictions - Aggregated Results of
   Local Studies on Readability and Comprehensibility of Source Code
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Source code quality; Readability; Comprehensibility; Understandability;
   Empirical study; Aggregation; Meta-analysis
ID FAULT-PRONENESS; IDENTIFIER NAMES; QUALITY; SIZE
AB ContextReading and understanding the source code are fundamental to supporting software programmers' daily activities. Still, there is no agreement regarding the program attributes needed to achieve the readability and comprehensibility of source code.ObjectiveTo analyze the influence of comments presence, indentation spacing, identifiers length, and code size on the readability and comprehensibility of source code from the perspective of novice and experienced programmers.MethodWe performed three primary studies and collected quantitative (Likert) and qualitative data representing the programmers' judgment regarding the readability and comprehensibility of code snippets. For each study, the influence of the four attributes on the readability and comprehensibility of source code was analyzed. The results were aggregated using the odds-ratio approach and analyzed concerning participants' programming experience.ResultsThe quality characteristics were not significantly affected (alpha = 5%) by either the indentation spacing or the code size, whereas the presence of comments and identifier length affect source code quality positively under such characteristics, according to both novices and experienced programmers.ConclusionsAlthough the results presented findings with statistical significance, the controlled factors and participants' stratification between novices and experienced were insufficient to explain the contradictory findings in the technical literature concerning the impact of the attributes under evaluation on the readability and comprehensibility of source code.
C1 [Ribeiro, Talita Vieira; Travassos, Guilherme Horta] Univ Fed Rio de Janeiro, PESC, COPPE, Rio De Janeiro, Brazil.
   [dos Santos, Paulo Sergio Medeiros] Fed Univ State Rio De Janeiro, Dept Appl Informat, Rio De Janeiro, Brazil.
C3 Universidade Federal do Rio de Janeiro
RP Ribeiro, TV (corresponding author), Univ Fed Rio de Janeiro, PESC, COPPE, Rio De Janeiro, Brazil.
EM tvribeiro@cos.ufrj.br; pasemes@uniriotec.br; ght@cos.ufrj.br
FU Coordenao de Aperfeioamento de Pessoal de Nvel Superior
FX No Statement Available
CR Alawad D, 2019, Arxiv, DOI arXiv:1909.01760
   Aman H, 2016, P INT WORKSH QUANT A
   Aman H., 2012, P INT WORKSH EMP SOF
   Aman H, 2017, 2017 43RD EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P375, DOI 10.1109/SEAA.2017.23
   Aman H, 2015, IEICE T INF SYST, VE98D, P2218, DOI 10.1587/transinf.2015EDP7107
   Aman H, 2012, ASIA PAC SOFWR ENG, P362, DOI 10.1109/APSEC.2012.108
   Avidan E, 2017, INT C PROGRAM COMPRE, P55, DOI 10.1109/ICPC.2017.27
   Basili V. R., 1994, Encyclopedia of Software Engineering, V1, P528
   Bauer J, 2019, INT C PROGRAM COMPRE, P154, DOI 10.1109/ICPC.2019.00033
   Beniamini G, 2017, INT C PROGRAM COMPRE, P45, DOI 10.1109/ICPC.2017.18
   Binkley D, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P99, DOI 10.1109/TAIC.PART.2007.10
   Binkley D, 2009, J SYST SOFTWARE, V82, P1793, DOI 10.1016/j.jss.2009.06.036
   Borenstein M., 2009, INTRO METAANALYSIS, DOI DOI 10.1002/9780470743386
   Börstler J, 2016, IEEE T SOFTWARE ENG, V42, P886, DOI 10.1109/TSE.2016.2527791
   Bosch J., 2014, CONTINUOUS SOFTWARE, P3
   Buse RPL, 2010, IEEE T SOFTWARE ENG, V36, P546, DOI 10.1109/TSE.2009.70
   Buse RPL, 2008, P INT S SOFTW TEST A
   Butler S, 2010, EUR CON SFTWR MTNCE, P156, DOI 10.1109/CSMR.2010.27
   COHEN J, 1992, PSYCHOL BULL, V112, P155, DOI 10.1037/0033-2909.112.1.155
   DeYoung GE, 1979, P INT COMP SOFTW APP
   dos Santos RM, 2018, INT C PROGRAM COMPRE, P277, DOI 10.1145/3196321.3196342
   Eaddy M, 2008, IEEE T SOFTWARE ENG, V34, P497, DOI 10.1109/TSE.2008.36
   Feigenspan J, 2011, INT SYMP EMP SOFTWAR, P127, DOI 10.1109/ESEM.2011.21
   GARVIN DA, 1984, SLOAN MANAGE REV, V26, P25
   Glass RL, 2002, Facts and fallacies of software engineering, P224
   Guerrouj L, 2017, SOFTWARE QUAL J, V25, P641, DOI 10.1007/s11219-016-9318-6
   Hofmeister J., 2017, Shorter identifier names take longer to comprehend, in International Conference on Software Analysis
   Hofmeister JC, 2019, EMPIR SOFTW ENG, V24, P417, DOI 10.1007/s10664-018-9621-x
   Jedlitschka A., 2008, Guide to advanced empirical software engineering, P201, DOI DOI 10.1007/978-1-84800-044-5_8
   Jorgensen AnkerHelms., 1980, BIT Numerical Mathematics, V20, P393, DOI DOI 10.1007/BF01933633
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Lawrie D, 2006, INT C PROGRAM COMPRE, P3, DOI 10.1109/ICPC.2006.51
   Lawrie D, 2007, INNOV SYST SOFTW ENG, V3, P303, DOI 10.1007/s11334-007-0031-2
   Lee T, 2015, IEICE T INF SYST, VE98D, P1286, DOI 10.1587/transinf.2014EDP7327
   Lewis S, 2001, BMJ-BRIT MED J, V322, P1479, DOI 10.1136/bmj.322.7300.1479
   LIENTZ BP, 1978, COMMUN ACM, V21, P466, DOI 10.1145/359511.359522
   Lipsey M. W., 2001, PRACTICAL METAANALYS, DOI DOI 10.1016/J.AUTNEU.2007.06.087
   Martínez-Fernández S, 2015, INT SYMP EMP SOFTWAR, P154, DOI 10.1109/ESEM.2015.7321184
   MIARA RJ, 1983, COMMUN ACM, V26, P861, DOI 10.1145/182.358437
   Miyake Y, 2017, STUD COMPUT INTELL, V695, P17, DOI 10.1007/978-3-319-51472-7_2
   Nielebock S, 2019, EMPIR SOFTW ENG, V24, P1418, DOI 10.1007/s10664-018-9664-z
   Olivier J, 2013, PLOS ONE, V8, DOI 10.1371/journal.pone.0058777
   Peitek N, 2021, PROC INT CONF SOFTW, P524, DOI 10.1109/ICSE43902.2021.00056
   PETERSEN K., 2010, Implementing lean and agile software development in industry
   Posnett D, 2011, P WORK C MIN SOFTW R
   Raymond DR, 1991, P C CTR ADV STUD COL
   Ribeiro TV, 2015, IEEE-ACM INT WKSP CO, P26, DOI 10.1109/CESI.2015.12
   Ribeiro TV, 2017, 20 IBER AM C SOFTW E
   Ribeiro TV, 2018, CLEI Electron J, V21
   Rugaber S, 2000, ANN SOFTW ENG, V9, P143, DOI 10.1023/A:1018976708691
   Salviulo F., 2014, P INT C EV ASS SOFTW, P1, DOI [10.1145/2601248.2601251, DOI 10.1145/2601248.2601251]
   Scalabrino S, 2021, IEEE T SOFTWARE ENG, V47, P595, DOI 10.1109/TSE.2019.2901468
   Scalabrino S, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1958
   Scalabrino S, 2017, IEEE INT CONF AUTOM, P417, DOI 10.1109/ASE.2017.8115654
   Scanniello G, 2017, ACM T SOFTW ENG METH, V26, DOI 10.1145/3104029
   Scanniello G, 2013, PROC IEEE INT CONF S, P190, DOI 10.1109/ICSM.2013.30
   Siegmund J, 2014, EMPIR SOFTW ENG, V19, P1299, DOI 10.1007/s10664-013-9286-4
   TENNY T, 1988, IEEE T SOFTWARE ENG, V14, P1271, DOI 10.1109/32.6171
   Trockman A, 2018, P INT C MIN SOFTW RE
   Uni Yarmouk., 2013, International Journal of Software Engineering and Its Applications, V7, P441
   Nguyen V, 2011, INFORM SOFTWARE TECH, V53, P682, DOI 10.1016/j.infsof.2010.11.003
   Woodfield S, 1981, P INT C SOFTW ENG SA
   Xia X, 2018, IEEE T SOFTWARE ENG, V44, P951, DOI 10.1109/TSE.2017.2734091
NR 63
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2023
VL 28
IS 6
AR 148
DI 10.1007/s10664-023-10360-5
PG 41
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IU7E5
UT WOS:001168907900001
DA 2024-07-18
ER

PT J
AU Chen, XP
   Liao, PY
   Kong, QP
   Huang, Y
   Zhou, XC
AF Chen, Xiangping
   Liao, Peiyong
   Kong, Queping
   Huang, Yuan
   Zhou, Xiaocong
TI Studying differentiated code to support smart contract update
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Smart contract; Differentiated code; Contract update; Evolution
   analysis; Code retrieval
ID BLOCKCHAIN; NICAD
AB Smart contracts have received a lot of attention. A smart contract is a program that runs on a blockchain. Some recent studies reveal that most of the smart contracts on the Ethereum blockchain are highly similar. An inexperienced smart contract developer can refer to some existing smart contracts that is similar to their own contracts to help their development by applying the differentiated code from the existing similar contracts. How to identify similar contracts and extract differentiated code to recommend to the developers as guidance is what we aim for in this work. Differentiated code is defined as the source code excluding the repeated part in two similar smart contracts, which usually illustrates how a software feature is implemented or a programming issue is solved. Thus, differentiated code might be used to guide the update of a smart contract. In this paper, we propose a differentiated code recommendation approach, SmartDiffrec, for supporting smart contract update. Specifically, we apply syntax and semantic similarities to discover the similar contracts for a given target contract, and then recommend the differentiated code to the target contract. Moreover, we investigate three research questions to analyze the effectiveness of our approach from the whole to the specific. The results show that the differentiated codes extracted found by our approach can effectively support smart contract update.
C1 [Chen, Xiangping] Sun Yat Sen Univ, Sch Journalism & Commun, Guangdong Key Lab Big Data Anal & Simulat Publ Opi, Guangzhou, Peoples R China.
   [Liao, Peiyong; Kong, Queping; Zhou, Xiaocong] Sun Yat Sen Univ, Sch Comp Sci & Engn, Guangzhou, Peoples R China.
   [Huang, Yuan] Sun Yat Sen Univ, Sch Software Engn, Zhuhai, Peoples R China.
C3 Sun Yat Sen University; Sun Yat Sen University; Sun Yat Sen University
RP Huang, Y (corresponding author), Sun Yat Sen Univ, Sch Software Engn, Zhuhai, Peoples R China.
EM chenxp8@mail.sysu.edu.cn; liaopy6@mail2.sysu.edu.cn;
   kongqp2@mail2.sysu.edu.cn; huangyuan5@mail.sysu.edu.cn;
   isszxc@mail.sysu.edu.cn
CR Atzei N, 2017, LECT NOTES COMPUT SC, V10204, P164, DOI 10.1007/978-3-662-54455-6_8
   Bartoletti M, 2019, Arxiv, DOI arXiv:1703.03779
   Baxter ID, 1998, PROC IEEE INT CONF S, P368, DOI 10.1109/ICSM.1998.738528
   Chen T, 2019, 2019 ACM IEEE INT S, P1
   Chen T, 2019, PROCEEDINGS OF THE 2019 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'19), P1503, DOI 10.1145/3319535.3345664
   Chen T, 2018, IEEE INFOCOM SER, P1484, DOI 10.1109/INFOCOM.2018.8486401
   Chen T, 2017, LECT NOTES COMPUT SC, V10701, P3, DOI 10.1007/978-3-319-72359-4_1
   Chen T, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P442, DOI 10.1109/SANER.2017.7884650
   Chen WL, 2018, WEB CONFERENCE 2018: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW2018), P1409, DOI 10.1145/3178876.3186046
   Christidis K, 2016, IEEE ACCESS, V4, P2292, DOI 10.1109/ACCESS.2016.2566339
   Cordy JR, 2006, SCI COMPUT PROGRAM, V61, P190, DOI 10.1016/j.scico.2006.04.002
   Cordy JR, 2011, CONF PROC INT SYMP C, P219, DOI 10.1109/ICPC.2011.26
   CRAWFORD SES, 1995, AM POLIT SCI REV, V89, P582, DOI 10.2307/2082975
   Dickerson T, 2017, PROCEEDINGS OF THE ACM SYMPOSIUM ON PRINCIPLES OF DISTRIBUTED COMPUTING (PODC'17), P303, DOI 10.1145/3087801.3087835
   Elmay FK, 2022, IEEE ACCESS, V10, P124507, DOI 10.1109/ACCESS.2022.3225000
   Feist J, 2019, 2019 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON EMERGING TRENDS IN SOFTWARE ENGINEERING FOR BLOCKCHAIN (WETSEB 2019), P8, DOI 10.1109/WETSEB.2019.00008
   Frantz CK, 2016, 2016 IEEE 1ST INTERNATIONAL WORKSHOPS ON FOUNDATIONS AND APPLICATIONS OF SELF* SYSTEMS (FAS*W), P210, DOI 10.1109/FAS-W.2016.53
   Gao ZP, 2021, IEEE T SOFTWARE ENG, V47, P2874, DOI 10.1109/TSE.2020.2971482
   Ghaleb Asem, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P415, DOI 10.1145/3395363.3397385
   Grossman S, 2018, Arxiv, DOI [arXiv:1801.04032, 10.48550/arXiv.1801.04032, DOI 10.48550/ARXIV.1801.04032]
   Harris Z.S., 1981, Distributional Structure, P3
   Hartigan J. A., 1979, Applied Statistics, V28, P100, DOI 10.2307/2346830
   He NY, 2019, Arxiv, DOI arXiv:1905.00272
   He X, 2018, P INT COMP SOFTW APP, P132, DOI 10.1109/COMPSAC.2018.00025
   Huang Y, 2019, INT C PROGRAM COMPRE, P260, DOI 10.1109/ICPC.2019.00045
   Huang Y, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P770, DOI 10.1145/3236024.3264841
   Huang Y, 2018, PROC IEEE ACM INT C, P260, DOI 10.1145/3183440.3194960
   Huang Y, 2017, INT SYMP EMP SOFTWAR, P414, DOI 10.1109/ESEM.2017.56
   Huang Y, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1859
   Jiang JJ, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P298, DOI 10.1145/3213846.3213871
   Juels A, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P283, DOI 10.1145/2976749.2978362
   Kiffer L, 2018, IMC'18: PROCEEDINGS OF THE INTERNET MEASUREMENT CONFERENCE, P494, DOI 10.1145/3278532.3278575
   Kosba A, 2016, P IEEE S SECUR PRIV, P839, DOI 10.1109/SP.2016.55
   Le Quoc V., 2014, P INT C MACH LEARN I
   Liu H, 2019, INT C PROGRAM COMPRE, P105, DOI 10.1109/ICPC.2019.00024
   Liu H, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P900, DOI 10.1145/3236024.3264596
   Luu L, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P254, DOI 10.1145/2976749.2978309
   Merkle R. C., 1980, Proceedings of the 1980 Symposium on Security and Privacy, P122
   Merlec MM, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON BLOCKCHAIN (BLOCKCHAIN 2021), P90, DOI 10.1109/Blockchain53845.2021.00023
   Mikolov T., 2013, ADV NEURAL INFORM PR, V26, P3111, DOI DOI 10.5555/2999792.2999959
   Mueller B., 2018, HITB SECCONF AMSTERD, V9, P54
   Nakamoto S, 2008, BITCOIN PEER TO PEER, DOI DOI 10.1007/S10838-008-9062-0
   Nick S, 2008, The idea of smart contracts (1997)
   Norta A., 2015, Lecture Notes in Business Information Processing, P3, DOI DOI 10.1007/978-3-319-21915-8_1
   Oliva J, 2011, DATA KNOWL ENG, V70, P390, DOI 10.1016/j.datak.2011.01.002
   Parizi RM, 2018, LECT NOTES COMPUT SC, V10974, P75, DOI 10.1007/978-3-319-94478-4_6
   Ren M, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1360, DOI 10.1145/3468264.3473929
   Roy CK, 2008, INT C PROGRAM COMPRE, P172, DOI 10.1109/ICPC.2008.41
   Roy CK, 2009, SCI COMPUT PROGRAM, V74, P470, DOI 10.1016/j.scico.2009.02.007
   Sapirshtein A, 2017, LECT NOTES COMPUT SC, V9603, P515, DOI 10.1007/978-3-662-54970-4_30
   Swan Melanie, 2015, BLOCKCHAIN BLUEPRINT
   Dinh TTA, 2018, IEEE T KNOWL DATA EN, V30, P1366, DOI 10.1109/TKDE.2017.2781227
   Torres CF, 2018, 34TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2018), P664, DOI 10.1145/3274694.3274737
   Wang BZ, 2018, LECT NOTES COMPUT SC, V10974, P18, DOI 10.1007/978-3-319-94478-4_2
   Wettel R, 2005, SEVENTH INTERNATIONAL SYMPOSIUM ON SYMBOLIC AND NUMERIC ALGORITHMS FOR SCIENTIFIC COMPUTING, PROCEEDINGS, P63
   Yu LA, 2017, 2017 11TH IEEE SYMPOSIUM ON SERVICE-ORIENTED SYSTEM ENGINEERING (SOSE), P160, DOI 10.1109/SOSE.2017.33
   Yue RR, 2018, PROC IEEE INT CONF S, P115, DOI 10.1109/ICSME.2018.00021
   Zheng PL, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P134, DOI 10.1145/3183519.3183546
   Zheng ZB, 2017, IEEE INT CONGR BIG, P557, DOI 10.1109/BigDataCongress.2017.85
   Zhu JM, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P415, DOI 10.1109/ICSE.2015.60
NR 60
TC 0
Z9 0
U1 2
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2023
VL 28
IS 5
AR 119
DI 10.1007/s10664-023-10359-y
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA R9JE8
UT WOS:001067434600001
DA 2024-07-18
ER

PT J
AU Santos, F
   Vargovich, J
   Trinkenreich, B
   Santos, I
   Penney, J
   Britto, R
   Pimentel, JF
   Wiese, I
   Steinmacher, I
   Sarma, A
   Gerosa, MA
AF Santos, Fabio
   Vargovich, Joseph
   Trinkenreich, Bianca
   Santos, Italo
   Penney, Jacob
   Britto, Ricardo
   Pimentel, Joao Felipe
   Wiese, Igor
   Steinmacher, Igor
   Sarma, Anita
   Gerosa, Marco A.
TI Tag that issue: applying API-domain labels in issue tracking systems
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE API identification; Labelling; Tagging; Skills; Multi-label
   classification; Mining software repositories
ID NEWCOMERS; BARRIERS
AB Labeling issues with the skills required to complete them can help contributors to choose tasks in Open Source Software projects. However, manually labeling issues is time-consuming and error-prone, and current automated approaches are mostly limited to classifying issues as bugs/non-bugs. We investigate the feasibility and relevance of automatically labeling issues with what we call "API-domains," which are high-level categories of APIs. Therefore, we posit that the APIs used in the source code affected by an issue can be a proxy for the type of skills (e.g., DB, security, UI) needed to work on the issue. We ran a user study (n=74) to assess API-domain labels' relevancy to potential contributors, leveraged the issues' descriptions and the project history to build prediction models, and validated the predictions with contributors (n=20) of the projects. Our results show that (i) newcomers to the project consider API-domain labels useful in choosing tasks, (ii) labels can be predicted with a precision of 84% and a recall of 78.6% on average, (iii) the results of the predictions reached up to 71.3% in precision and 52.5% in recall when training with a project and testing in another (transfer learning), and (iv) project contributors consider most of the predictions helpful in identifying needed skills. These findings suggest our approach can be applied in practice to automatically label issues, assisting developers in finding tasks that better match their skills.
C1 [Santos, Fabio; Vargovich, Joseph; Trinkenreich, Bianca; Santos, Italo; Penney, Jacob; Pimentel, Joao Felipe; Steinmacher, Igor; Gerosa, Marco A.] No Arizona Univ, Flagstaff, AZ 86011 USA.
   [Wiese, Igor] Univ Tecnol Fed Parana, Curitiba, PR, Brazil.
   [Sarma, Anita] Oregon State Univ, Corvallis, OR USA.
   [Britto, Ricardo] Ericsson Blekinge Inst Technol, Karlskrona, Gotaland, Sweden.
C3 Northern Arizona University; Pontificia Universidade Catolica do Parana;
   Universidade Tecnologica Federal do Parana; Universidade Federal do
   Parana; Oregon State University
RP Santos, F (corresponding author), No Arizona Univ, Flagstaff, AZ 86011 USA.
EM fabio_santos@nau.edu; joseph_vargovich@nau.edu;
   bianca_trinkenreich@nau.edu; italo_santos@nau.edu; jacob_penney@nau.edu;
   ricardo.britto@ericsson.com; joao.pimentel@nau.edu; igor@utfpr.edu.br;
   igor.steinmacher@nau.edu; anita.sarma@oregonstate.edu;
   marco.gerosa@nau.edu
RI Trinkenreich, Bianca/ABE-4435-2020; Gerosa, Marco Aurelio/A-6686-2009;
   de Oliveira Santos, Italo/H-7078-2018; Igor, Steinmacher/B-6414-2012
OI Gerosa, Marco Aurelio/0000-0003-1399-7535; de Oliveira Santos,
   Italo/0000-0002-7545-6104; Igor, Steinmacher/0000-0002-0612-5790; de
   Abreu Santos, Fabio Marcos/0000-0001-8069-3158
FU This work is partially supported by the National Science Foundation
   under Grant numbers 1815486, 1815503, 1900903, and 1901031, CNPq grant
   #313067/2020-1. CNPq/MCTI/FNDCT grant #408812/2021-4 and
   MCTIC/CGI/FAPESP (grant #2021/06662-1). We also thank the de [1815503,
   1900903, 1901031, 313067/2020-1]; National Science Foundation
   [408812/2021-4, 2021/06662-1]; CNPq; MCTIC/CGI/FAPESP;  [1815486]
FX This work is partially supported by the National Science Foundation
   under Grant numbers 1815486, 1815503, 1900903, and 1901031, CNPq grant
   #313067/2020-1. CNPq/MCTI/FNDCT grant #408812/2021-4 and
   MCTIC/CGI/FAPESP (grant #2021/06662-1). We also thank the developers who
   spent their time answering our questionnaire.
CR Agrawal R., 1993, SIGMOD Record, V22, P207, DOI 10.1145/170036.170072
   [Anonymous], 2007, P 2014 WORKSH ECL TE, DOI 10.1145/1328279.1328284
   [Anonymous], 2021, Transformers documentation
   [Anonymous], 2022, API definition
   [Anonymous], 2021, Fast bert repository
   [Anonymous], 2021, spacy industrial-strength natural language processing
   Antoniol G, 2008, P 2008 C CTR ADV STU, P304
   Balali S, 2018, COMPUT SUPP COOP W J, V27, P679, DOI 10.1007/s10606-018-9310-8
   Barcomb Ann, 2022, IEEE Transactions on Software Engineering, V48, P260, DOI 10.1109/TSE.2020.2985093
   Behl D, 2014, PROCEEDINGS OF THE 2014 INTERNATIONAL CONFERENCE ON RELIABILTY, OPTIMIZATION, & INFORMATION TECHNOLOGY (ICROIT 2014), P294, DOI 10.1109/ICROIT.2014.6798341
   Blanco A, 2019, EXPERT SYST APPL, V138, DOI 10.1016/j.eswa.2019.112835
   Charte F, 2015, KNOWL-BASED SYST, V89, P385, DOI 10.1016/j.knosys.2015.07.019
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   Ducasse S, 2009, IEEE T SOFTWARE ENG, V35, P573, DOI 10.1109/TSE.2009.19
   El Zanaty F, 2020, IEEE SOFTWARE
   Feng Y, 2018, IEEE INT CONF SOFTW, P320, DOI 10.1109/ICST.2018.00039
   Flach PA, 2015, ADV NEUR IN, V28
   Goel E., 2017, INT J ADV RES COMPUT, DOI 10.23956/ijarcsse/V7I1/01113
   Guggulothu T, 2020, SOFTWARE QUAL J, V28, P1063, DOI 10.1007/s11219-020-09498-y
   Herrera F., 2016, MULTILABEL CLASSIFIC
   Hsieh Cho-Jui, 2020, INT C LEARNING REPRE
   Huang Y, 2021, P 15 ACM IEEE INT S, P1
   Izadi M, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10085-3
   Izadi M, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09976-2
   Kallis R, 2019, PROC IEEE INT CONF S, P406, DOI 10.1109/ICSME.2019.00070
   Klock A. C. T., 2016, P 15 BRAZILIAN S HUM, P1
   Lin B, 2019, PROC INT CONF SOFTW, P548, DOI 10.1109/ICSE.2019.00066
   Lu YY, 2017, LECT NOTES ARTIF INT, V10412, P237, DOI 10.1007/978-3-319-63558-3_20
   Moreno MF, 2018, IEEE INT SYM MULTIM, P239, DOI 10.1109/ISM.2018.00034
   Nam J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P382, DOI 10.1109/ICSE.2013.6606584
   OHNO T, 1982, JPN ECON STUD, V10, P83, DOI 10.2753/JES1097-203X100483
   Pacaiova H, 2015, Analysis and identification of nonconforming products by 5W2H method
   Park Y, 2009, IEEE INT WORK VIS SO, P3, DOI 10.1109/VISSOF.2009.5336433
   Pereira RB, 2018, INFORM PROCESS MANAG, V54, P359, DOI 10.1016/j.ipm.2018.01.002
   Perez Q, 2021, INT C PROGRAM COMPRE, P47, DOI 10.1109/ICPC52881.2021.00014
   Petkovic D., 2016, 2016 IEEE FRONT ED C, DOI 10.1109/FIE.2016.7757406
   Pingclasai N, 2013, ASIA PAC SOFWR ENG, P13, DOI 10.1109/APSEC.2013.105
   Pinto G, 2017, CONF SOFTW ENG EDUC, P117, DOI 10.1109/CSEET.2017.27
   Pinto G, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P112, DOI 10.1109/SANER.2016.68
   Pushphavathi TP, 2014, 2014 INTERNATIONAL CONFERENCE ON ELECTRONICS AND COMMUNICATION SYSTEMS (ICECS)
   Qiu D, 2016, INFORM SOFTWARE TECH, V73, P81, DOI 10.1016/j.infsof.2016.01.011
   Ramos J, 2003, P 1 INSTRUCTIONAL C, V242, P29
   Ravichandiran S., 2021, Getting Started with Google BERT: Build and Train State-of-the-Art Natural Language Processing Models Using BERT
   Romano J, 2006, ANN M FLOR ASS I RES, P1
   Saito T, 2015, PLOS ONE, V10, DOI 10.1371/journal.pone.0118432
   Santos F, 2022, EMPIR SOFTW ENG
   Santos F, 2021, 2021 IEEE ACM 18 INT, P346
   Santos I, 2022, EUR CON SFTWR MTNCE, P174, DOI 10.1109/SANER53432.2022.00032
   Sarma A, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P932, DOI 10.1145/2950290.2983984
   Satapathy SM, 2016, IET SOFTW, V10, P10, DOI 10.1049/iet-sen.2014.0122
   Savidis A, 2021, IVAPP, V12
   Seah CW, 2013, IEEE T NEUR NET LEAR, V24, P1863, DOI 10.1109/TNNLS.2013.2268541
   Sheskin J.D., 2004, Handbook of Parametric and Nonparametric Statistical Procedures, VThird
   Sokolova M, 2009, INFORM PROCESS MANAG, V45, P427, DOI 10.1016/j.ipm.2009.03.002
   Stanik C, 2018, PROC IEEE INT CONF S, P172, DOI 10.1109/ICSME.2018.00027
   Steinmacher I, 2019, IEEE SOFTWARE, V36, P41, DOI 10.1109/MS.2018.110162131
   Steinmacher I, 2015, PROCEEDINGS OF THE 2015 ACM INTERNATIONAL CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING (CSCW'15), P1379, DOI 10.1145/2675133.2675215
   Steinmacher I, 2015, P ANN HICSS, P5299, DOI 10.1109/HICSS.2015.624
   Steinmacher I, 2015, INFORM SOFTWARE TECH, V59, P67, DOI 10.1016/j.infsof.2014.11.001
   Strauss A., 1990, BASICS QUALITATIVE R
   Szumilas M, 2010, J CAN ACAD CHILD ADO, V19, P227
   Tantithamthavorn C, 2019, IEEE T SOFTWARE ENG, V45, P683, DOI 10.1109/TSE.2018.2794977
   Tsoumakas G, 2010, DATA MINING AND KNOWLEDGE DISCOVERY HANDBOOK, SECOND EDITION, P667, DOI 10.1007/978-0-387-09823-4_34
   Uddin G, 2019, IEEE Trans Softw Eng, P1
   Vadlamani SL, 2020, PROC IEEE INT CONF S, P312, DOI 10.1109/ICSME46990.2020.00038
   Van Gompel M, 2016, J Open Res Softw, V4
   Vargas-Baldrich S, 2015, IEEE INT CONF AUTOM, P289, DOI 10.1109/ASE.2015.38
   Vaz L, 2019, INT CONF GLOBAL SOFT, P48, DOI 10.1109/ICGSE.2019.00041
   Wang JG, 2011, PROCEEDINGS OF THE 4TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE'11), P76
   Wang J, 2021, KNOWL-BASED SYST, V232, DOI 10.1016/j.knosys.2021.107476
   Wiese IS, 2017, J SYST SOFTWARE, V128, P220, DOI 10.1016/j.jss.2016.07.016
   Xia X, 2013, IEEE WORK CONF MIN S, P287, DOI 10.1109/MSR.2013.6624040
   Zhang ML, 2007, PATTERN RECOGN, V40, P2038, DOI 10.1016/j.patcog.2006.12.019
   Zhou Y, 2016, J SOFTW-EVOL PROC, V28, P150, DOI 10.1002/smr.1770
   Zhu YX, 2019, Arxiv, DOI arXiv:1909.00934
   Zimmermann T, 2010, IEEE T SOFTWARE ENG, V36, P618, DOI 10.1109/TSE.2010.63
NR 76
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2023
VL 28
IS 5
AR 116
DI 10.1007/s10664-023-10329-4
PG 52
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA Q6MQ3
UT WOS:001058649500001
DA 2024-07-18
ER

PT J
AU Pacheco, M
   Oliva, GA
   Rajbahadur, GK
   Hassan, AE
AF Pacheco, Michael
   Oliva, Gustavo A.
   Rajbahadur, Gopi Krishnan
   Hassan, Ahmed E.
TI What makes Ethereum blockchain transactions be processed fast or slow?
   An empirical study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Transaction processing time; Smart contracts; Ethereum; Blockchain;
   Machine learning; Regression model; Model interpretation
AB The Ethereum platform allows developers to implement and deploy applications called DApps onto the blockchain for public use through the use of smart contracts. To execute code within a smart contract, a paid transaction must be issued towards one of the functions that are exposed in the interface of a contract. However, such a transaction is only processed once one of the miners in the peer-to-peer network selects it, adds it to a block, and appends that block to the blockchain This creates a delay between transaction submission and code execution. It is crucial for DApp developers to be able to precisely estimate when transactions will be processed, since this allows them to define and provide a certain Quality of Service (QoS) level (e.g., 95% of the transactions processed within 1 minute). However, the impact that different factors have on these times have not yet been studied. Processing time estimation services are used by DApp developers to achieve predefined QoS. Yet, these services offer minimal insights into what factors impact processing times. Considering the vast amount of data that surrounds the Ethereum blockchain, changes in processing times are hard for DApp developers to predict, making it difficult to maintain said QoS. In our study, we build random forest models to understand the factors that are associated with transaction processing times. We engineer several features that capture blockchain internal factors, as well as gas pricing behaviors of transaction issuers. By interpreting our models, we conclude that features surrounding gas pricing behaviors are very strongly associated with transaction processing times. Based on our empirical results, we provide DApp developers with concrete insights that can help them provide and maintain high levels of QoS.
C1 [Pacheco, Michael; Oliva, Gustavo A.; Hassan, Ahmed E.] Queens Univ, Software Anal & Intelligence Lab SAIL, Sch Comp, Kingston, ON, Canada.
   [Rajbahadur, Gopi Krishnan] Huawei, Ctr Software Excellence CSE, Kingston, ON, Canada.
C3 Queens University - Canada; Huawei Technologies
RP Pacheco, M (corresponding author), Queens Univ, Software Anal & Intelligence Lab SAIL, Sch Comp, Kingston, ON, Canada.
EM mpacheco@cs.queensu.ca; gustavo@cs.queensu.ca;
   gopi.krishnan.rajbahadur1@huawei.com; ahmed@cs.queensu.ca
OI Pacheco, Michael/0000-0002-7848-5170
CR Aniche M, 2022, IEEE T SOFTWARE ENG, V48, P1432, DOI 10.1109/TSE.2020.3021736
   [Anonymous], 2017, IEEE T SOFTWARE ENG, DOI DOI 10.1109/TSE.2016.2584050
   Ante Lennart., 2021, SSRN Electronic Journal, P1, DOI DOI 10.2139/SSRN.3778844
   Bao LF, 2021, IEEE T SOFTWARE ENG, V47, P1277, DOI 10.1109/TSE.2019.2918536
   BBC, 2017, BBC NEWS CRYPTOKITTI
   Bergstra J, 2012, J MACH LEARN RES, V13, P281
   Binder M., 2022, Bored ape yacht club caused ethereum fees to soar to astronomical levels
   Bird C, 2011, DONT TOUCH MY CODE E
   Boslaugh S., 2008, Statistics in a nutshell-a desktop quick reference
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Buterin V., 2014, CISC VIS NETW IND GL, V3, P1, DOI DOI 10.1145/2939672.2939785
   Chen T, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P442, DOI 10.1109/SANER.2017.7884650
   Comben Christina, 2018, WHAT ARE BLOCKCHAIN
   Sousa JED, 2021, INT J NETW MANAG, V31, DOI 10.1002/nem.2113
   Esteves G, 2020, AUTOMAT SOFTW ENG, V27, P369, DOI 10.1007/s10515-020-00277-4
   Fan YR, 2020, IEEE T SOFTWARE ENG, V46, P495, DOI 10.1109/TSE.2018.2864217
   Graham B., 2003, INTELLIGENT INVESTOR
   Harrell FE, 2015, SPRINGER SER STAT, DOI 10.1007/978-3-319-19425-7
   Jakobsson M, 1999, INT FED INFO PROC, V23, P258
   Jiarpakdee J, 2021, IEEE WORK CONF MIN S, P432, DOI 10.1109/MSR52588.2021.00055
   Kaiser L, 2019, FINANC RES LETT, V31, P232, DOI 10.1016/j.frl.2018.11.007
   Kasahara S, 2019, J IND MANAG OPTIM, V15, P365, DOI 10.3934/jimo.2018047
   Kondo M, 2020, EMPIR SOFTW ENG, V25, P4617, DOI 10.1007/s10664-020-09852-5
   Lee D, 2020, EMPIR SOFTW ENG, V25, P3396, DOI 10.1007/s10664-020-09840-9
   Liaw A, 2010, RANDOM FOREST AUC
   Liu YL, 2022, Arxiv, DOI arXiv:2201.05574
   Lundberg S. M., 2017, ADV NEURAL INFORM PR, P4765
   Lyu YZ, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3488269
   Lundberg SM, 2019, Arxiv, DOI arXiv:1802.03888
   Marchesi L, 2020, PROCEEDINGS OF THE 2020 IEEE 3RD INTERNATIONAL WORKSHOP ON BLOCKCHAIN ORIENTED SOFTWARE ENGINEERING (IWBOSE '20), P9, DOI [10.1109/iwbose50093.2020.9050163, 10.1109/IWBOSE50093.2020.9050163]
   McIntosh S, 2016, EMPIR SOFTW ENG, V21, P2146, DOI 10.1007/s10664-015-9381-9
   Menzies T., 2020, Scott Knot with nonparametric effect size and significance test
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Midi H, 2010, J INTERDISCIP MATH, V13, P253, DOI 10.1080/09720502.2010.10700699
   Molnar Molnar C. C., Lulu. com
   Nishida K, 2007, LECT NOTES ARTIF INT, V4755, P264
   Oliva GA, 2021, P 29 ACM JOINT M EUR, P1463
   Oliva GA, 2020, EMPIR SOFTW ENG, V25, P1864, DOI 10.1007/s10664-019-09796-5
   Oliveira Vinicius C., 2021, ACM SIGMETRICS Performance Evaluation Review, V48, P12, DOI 10.1145/3466826.3466832
   Pacheco M, 2022, ACM T SOFTW ENG METH
   Pierro GA, 2022, FUTURE GENER COMP SY, V128, P142, DOI 10.1016/j.future.2021.09.021
   Pierro GA, 2019, 2019 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON EMERGING TRENDS IN SOFTWARE ENGINEERING FOR BLOCKCHAIN (WETSEB 2019), P24, DOI 10.1109/WETSEB.2019.00010
   Rajbahadur GK, 2021, IEEE T SOFTWARE ENG, V48, P2245, DOI 10.1109/TSE.2021.3056941
   Ribeiro MT, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1135, DOI 10.1145/2939672.2939778
   Romano J, 2006, ANN M FLOR ASS I RES, P1
   SCOTT AJ, 1974, BIOMETRICS, V30, P507, DOI 10.2307/2529204
   Signer C., 2018, Gas Cost Analysis for Ethereum Smart Contracts
   Singh Harsh Jot, 2020, Blockchain and Applications. International Congress. Advances in Intelligent Systems and Computing (AISC 1010), P126, DOI 10.1007/978-3-030-23813-1_16
   Tagra A, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10133-6
   Tantithamthavorn C, 2020, IEEE T SOFTWARE ENG, V46, P1200, DOI 10.1109/TSE.2018.2876537
   Tantithamthavorn C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P286, DOI 10.1145/3183519.3183547
   Tantithamthavorn C, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P1, DOI 10.1109/ASE51524.2021.9678580
   Thongtanunam P, 2021, IEEE T SOFTWARE ENG, V47, P2698, DOI 10.1109/TSE.2020.2964660
   Viggiato M., 2020, Proceedings of the AAAI Conference on Artificial Intelligence and Interactive Digital Entertainment, V16, P294
   Werner S.M., 2020, MATH RES BLOCKCHAIN, V2020, P161, DOI [10.1007/978-3-030-53356-4_10, DOI 10.1007/978-3-030-53356-4_10]
   Wood G., 2014, Ethereum project yellow paper, V151, P1
   Yatish S, 2019, PROC INT CONF SOFTW, P654, DOI 10.1109/ICSE.2019.00075
   Zarir AA, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3431726
   Zhang HX, 2021, IEEE T SOFTWARE ENG, V47, P850, DOI 10.1109/TSE.2019.2906315
   Zou WQ, 2021, IEEE T SOFTWARE ENG, V47, P2084, DOI 10.1109/TSE.2019.2942301
NR 60
TC 2
Z9 2
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2023
VL 28
IS 2
AR 39
DI 10.1007/s10664-022-10283-7
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 8O3KY
UT WOS:000925737600002
PM 36776918
OA Green Published, Green Submitted, Bronze
DA 2024-07-18
ER

PT J
AU Yerramreddy, S
   Mordahl, A
   Koc, U
   Wei, SY
   Foster, JS
   Carpuat, M
   Porter, AA
AF Yerramreddy, Sai
   Mordahl, Austin
   Koc, Ugur
   Wei, Shiyi
   Foster, Jeffrey S.
   Carpuat, Marine
   Porter, Adam A.
TI An empirical assessment of machine learning approaches for triaging
   reports of static analysis tools
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Static analysis; False positive classification; Machine learning
ID PROBABILISTIC MODEL; GRAPH
AB Despite their ability to detect critical bugs in software, static analysis tools' high false positive rates are a key barrier to their adoption in real-world settings. To improve the usability of these tools, researchers have recently begun to apply machine learning techniques to classify and filter incorrect analysis reports. Although initial results have been promising, the long-term potential and best practices for this line of research are unclear due to the lack of detailed, large-scale empirical evaluation. To partially address this knowledge gap, we present a comparative empirical study of three machine learning techniques & mdash;traditional models, recurrent neural networks (RNNs), and graph neural networks (GNNs)& mdash;for classifying correct and incorrect results in three static analysis tools & mdash;FindSecBugs, CBMC, and JBMC & mdash;using multiple datasets. These tools represent different techniques of static analysis, namely taint analysis and model-checking. We also introduce and evaluate new data preparation routines for RNNs and node representations for GNNs. We find that overall classification accuracy reaches a high of 80%-99% for different datasets and application scenarios. We observe that data preparation routines have a positive impact on classification accuracy, with an improvement of up to 5% for RNNs and 16% for GNNs. Overall, our results suggest that neural networks (RNNs or GNNs) that learn over a program's source code outperform traditional models, although interesting tradeoffs are present among all techniques. Our observations provide insight into the future research needed to speed the adoption of machine learning approaches for static analysis tools in practice.
C1 [Yerramreddy, Sai; Koc, Ugur; Carpuat, Marine; Porter, Adam A.] Univ Maryland, Dept Comp Sci, College Pk, MD 20742 USA.
   [Mordahl, Austin; Wei, Shiyi] Univ Texas Dallas, Dept Comp Sci, Richardson, TX USA.
   [Foster, Jeffrey S.] Tufts Univ, Dept Comp Sci, Medford, MA USA.
C3 University System of Maryland; University of Maryland College Park;
   University of Texas System; University of Texas Dallas; Tufts University
RP Yerramreddy, S (corresponding author), Univ Maryland, Dept Comp Sci, College Pk, MD 20742 USA.
EM saiyr@cs.umd.edu; austin.mordahl@utdallas.edu; ukoc@cs.umd.edu;
   swei@utdallas.edu; jfoster@cs.tufts.edu; marine@cs.umd.edu;
   aporter@cs.umd.edu
RI Wei, Shiyi/AAR-1561-2020
OI Yerramreddy, Sai/0000-0003-0848-6351
FU NSF [CCF-2007314, CCF-2008905, CCF 2047682]; NSF graduate research
   fellowship program; Eugene McDermott Graduate Fellowship [202006]
FX This work was partly supported by NSF grants CCF-2007314, CCF-2008905
   and CCF 2047682, the NSF graduate research fellowship program, and
   Eugene McDermott Graduate Fellowship 202006.
CR Abadi M, 2016, PROCEEDINGS OF OSDI'16: 12TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P265
   Al-Rfou R, 2021, arXiv
   Allamanis M, 2018, Arxiv, DOI arXiv:1711.00740
   Allamanis M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3212695
   Allamanis M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P38, DOI 10.1145/2786805.2786849
   Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   Andres M., 2013, FREE CHAT SERVER CHA
   [Anonymous], 2001, ADAPT LEARN SYST SIG, DOI 10.1002/047084535X
   Apollo, 2018, APOLLO DISTRIBUTED C
   Arteau Ph, 2018, FIND SECURITY BUGS
   AutoML, 2022, AutoML
   Beyer D., 2018, RESULTS COMPETITION
   Beyer D., 2019, RESULTS COMPETITION
   Biere A, 1999, LECT NOTES COMPUT SC, V1579, P193
   Blackburn SM, 2006, ACM SIGPLAN NOTICES, V41, P169, DOI 10.1145/1167515.1167488
   Block Inc, 2022, OKHTTP HTTP HTTP2 CL
   Bravenboer M, 2009, ACM SIGPLAN NOTICES, V44, P243, DOI 10.1145/1639949.1640108
   Burato E, 2017, P ITASEC17 RST ITALI
   Carrier P-L., 2018, LSTM NETWORKS SENTIM
   Chen ZM, 2019, Arxiv, DOI arXiv:1904.03061
   Cho KYHY, 2014, Arxiv, DOI arXiv:1409.1259
   Clarke E, 2004, LECT NOTES COMPUT SC, V2988, P168, DOI 10.1007/978-3-540-24730-2_15
   Cordeiro L, 2018, LECT NOTES COMPUT SC, V10981, P183, DOI 10.1007/978-3-319-96145-3_10
   Zeiler MD, 2012, Arxiv, DOI [arXiv:1212.5701, DOI 10.48550/ARXIV.1212.5701]
   Dam H. K., 2016, FSE 2016, P1
   Diamantopoulos T., 2020, ASTEXTRACTOR V05
   Eclipse Foundation, 2022, JETTY LIGHTWEIGHT HI
   Eclipse Foundation, 2022, ECLIPSE JAVA INTEGRA
   Eibe FrankM.A. H., 2016, The WEKA Workbench
   Feng ZY, 2020, Arxiv, DOI [arXiv:2002.08155, 10.48550/arXiv.2002.08155]
   FERRANTE J, 1987, ACM T PROGR LANG SYS, V9, P319, DOI 10.1145/24039.24041
   Fowkes J, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P254, DOI 10.1145/2950290.2950319
   Gers FA, 2000, NEURAL COMPUT, V12, P2451, DOI 10.1162/089976600300015015
   Giraph, 2020, GIRAPH LARGE SCALE G
   Goldberg Y, 2014, Arxiv, DOI [arXiv:1402.3722, DOI 10.48550/ARXIV.1402.3722]
   Goldberg Yoav., 2017, Synthesis Lectures on Human Language Technologies
   Gori M, 2005, IEEE IJCNN, P729
   Gros D, 2020, Arxiv, DOI arXiv:2010.01410
   Gu XD, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P631, DOI 10.1145/2950290.2950334
   h2db, 2022, H2 DATABASE ENGINE
   Haque S., 2020, MSR 20 17 INT C MIN, P300, DOI DOI 10.1145/3379597.3387449
   Heckman SS, 2007, PROC INT CONF SOFTW, P89, DOI 10.1109/ICSECOMPANION.2007.16
   Heckman SarahSmith., 2009, A systematic model building process for predicting actionable static analysis alerts
   Hochreiter S, 1997, NEURAL COMPUT, V9, P1735, DOI [10.1162/neco.1997.9.1.1, 10.1007/978-3-642-24797-2]
   IBM, 2006, T J WATSON LIB ANAL
   Joda.org, 2021, JODA TIME QUALITY RE
   Johnson A, 2015, ACM SIGPLAN NOTICES, V50, P291, DOI [10.1145/2813885.2737957, 10.1145/2737924.2737957]
   Johnson B, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P672, DOI 10.1109/ICSE.2013.6606613
   Jozefowicz R, 2015, PR MACH LEARN RES, V37, P2342
   Kang HJ, 2022, PROC INT CONF SOFTW, P698, DOI 10.1145/3510003.3510214
   Kharkar A, 2022, PROC INT CONF SOFTW, P1307, DOI 10.1145/3510003.3510153
   Kingma D. P., 2014, arXiv
   Koc U, 2021, P 36 IEEEACM INT C A
   Koc U, 2019, IEEE INT CONF SOFTW, P288, DOI 10.1109/ICST.2019.00036
   Koc U, 2017, MAPL'17: PROCEEDINGS OF THE 1ST ACM SIGPLAN INTERNATIONAL WORKSHOP ON MACHINE LEARNING AND PROGRAMMING LANGUAGES, P35, DOI 10.1145/3088525.3088675
   Kroening Daniel, 2014, TOOLS ALGORITHMS CON, P389, DOI [10.1007/978-3-642-54862-8_26, DOI 10.1007/978-3-642-54862-8_26]
   Kushman Nate, 2013, P 2013 C N AM CHAPTE, P826
   Li HY, 2019, Arxiv, DOI arXiv:1908.09804
   Li YJ, 2017, Arxiv, DOI arXiv:1511.05493
   Ling W, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P599
   LLVM team, 2020, LLVM COMPILER INFRAS
   Lukins SK, 2010, INFORM SOFTWARE TECH, V52, P972, DOI 10.1016/j.infsof.2010.04.002
   Microsoft, 2019, MICROSOFT GATED GRAP
   Mikolov T, 2013, ICLR WORKSHOP POSTER
   Mohr M., 2021, JOANA JAVA OBJECT SE
   MyBatis, 2021, MYBATIS SQL MAPPER F
   Naik M., 2020, PETABLOX LARGE SCALE
   NASA Ames Research Center, 2022, JAVA PATHFINDER
   Nguyen T.T., 2013, P 2013 9 JOINT M FDN, P532, DOI DOI 10.1145/2491411.2491458
   Nie CH, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1883612.1883618
   OWASP, 2014, OWASP BENCHMARK SECU
   Panthaplackel S, 2020, Arxiv, DOI arXiv:2004.12169
   Prlic A, 2012, BIOINFORMATICS, V28, P2693, DOI 10.1093/bioinformatics/bts494
   Quinlan J. R., 1993, PROGRAMS MACHINE LEA
   Raghothaman M, 2018, ACM SIGPLAN NOTICES, V53, P722, DOI [10.1145/3192366.3192417, 10.1145/3296979.3192417]
   Raychev V, 2015, ACM SIGPLAN NOTICES, V50, P111, DOI [10.1145/2775051.2677009, 10.1145/2676726.2677009]
   Raychev V, 2014, ACM SIGPLAN NOTICES, V49, P419, DOI [10.1145/2594291.2594321, 10.1145/2666356.2594321]
   Rish Irina, 2001, IJCAI 2001 WORKSHOP, V3, P41
   Rosen B. K., 1988, Conference Record of the Fifteenth Annual ACM Symposium on Principles of Programming Languages, P12, DOI 10.1145/73560.73562
   ROSENBLATT F, 1958, PSYCHOL REV, V65, P386, DOI 10.1037/h0042519
   Russell S., 2016, Artificial intelligence a modern approach
   SAFAVIAN SR, 1991, IEEE T SYST MAN CYB, V21, P660, DOI 10.1109/21.97458
   Sak H, 2014, INTERSPEECH, P338
   Scarselli F, 2009, IEEE T NEURAL NETWOR, V20, P61, DOI 10.1109/TNN.2008.2005605
   Smith A., 2019, UNIVERSAL PASSWORD M
   Sureka A, 2010, ASIA PAC SOFWR ENG, P366, DOI 10.1109/APSEC.2010.49
   Susi.ai, 2018, APISUSIAI SOFTWARE R
   Tanwar A, 2020, Arxiv, DOI [arXiv:2004.12783, 10.48550/ARXIV.2004.12783]
   The Apache Software Foundation, 2022, APACHE JACKRABBIT IS
   The Clang Team, 2021, CLANG 12 DOCUMENTATI
   The HSQL Development Group, 2021, HYPERSQL DATABASE
   Thunes C., 2020, javalang: Pure Python Java parser and tools
   Tripp O, 2014, CCS'14: PROCEEDINGS OF THE 21ST ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P762, DOI 10.1145/2660267.2660339
   Tu ZP, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P269, DOI 10.1145/2635868.2635875
   Utture A, 2022, PROC INT CONF SOFTW, P2043, DOI 10.1145/3510003.3510166
   Wan Y, 2019, Arxiv, DOI arXiv:1909.13516
   Wang JJ, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3239523
   Wang WH, 2020, Arxiv, DOI arXiv:2003.03238
   Weiser M., 1981, 5th International Conference on Software Engineering, P439
   White M, 2016, IEEE INT CONF AUTOM, P87, DOI 10.1145/2970276.2970326
   Xypolytos A, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY COMPANION (QRS-C), P595, DOI 10.1109/QRS-C.2017.110
   Ye X, 2016, PROC INT CONF SOFTW, P404, DOI 10.1145/2884781.2884862
   Yüksel U, 2013, PROC IEEE INT CONF S, P532, DOI 10.1109/ICSM.2013.89
   Zhou YQ, 2019, Arxiv, DOI arXiv:1909.03496
NR 104
TC 1
Z9 1
U1 2
U2 7
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2023
VL 28
IS 2
DI 10.1007/s10664-022-10253-z
PG 44
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 7U3EY
UT WOS:000912018500001
DA 2024-07-18
ER

PT J
AU Lima, JAP
   Mendonça, WDF
   Vergilio, SR
   Assunçao, WKG
AF Prado Lima, Jackson A.
   Mendonca, Willian D. F.
   Vergilio, Silvia R.
   Assuncao, Wesley K. G.
TI Cost-effective learning-based strategies for test case prioritization in
   continuous integration of highly-configurable software
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Test case prioritization; Software product line; Continuous integration;
   Highly-configurable software
ID SELECTION
AB Highly-Configurable Software (HCSs) testing is usually costly, as a significant number of variants need to be tested. This becomes more problematic when Continuous Integration (CI) practices are adopted. CI leads the software to be integrated and tested multiple times a day, subject to time constraints (budgets). To address CI challenges, a learning-based test case prioritization approach named COLEMAN has been successfully applied. COLEMAN deals with test case volatility, in which some test cases can be included/removed over the CI cycles. Nevertheless, such an approach does not consider HCS particularities such as, by analogy, the volatility of variants. Given such a context, this work introduces two strategies for applying COLEMAN in the CI of HCS: the Variant Test Set Strategy (VTS) that relies on the test set specific for each variant; and the Whole Test Set Strategy (WST) that prioritizes the test set composed by the union of the test cases of all variants. Both strategies are applied to two real-world HCSs, considering three test budgets. Independently of the time budget, the proposed strategies using COLEMAN have the best performance in comparison with solutions generated randomly and by another learning approach from the literature. Moreover, COLEMAN produces, in more than 92% of the cases, reasonable solutions that are near to the optimal solutions obtained by a deterministic approach. Both strategies spend less than one second to execute. WTS provides better results in the less restrictive budgets, and VTS the opposite. WTS seems to better mitigate the problem of beginning without knowledge, and is more suitable when a new variant to be tested is added.
C1 [Prado Lima, Jackson A.; Mendonca, Willian D. F.; Vergilio, Silvia R.] Fed Univ Parana UFPR, DINF, Curitiba, Parana, Brazil.
   [Assuncao, Wesley K. G.] Pontifical Catholic Univ Rio de Janeiro PUC Rio, Rio De Janeiro, Brazil.
C3 Universidade Federal do Parana; Pontificia Universidade Catolica do Rio
   de Janeiro
RP Lima, JAP (corresponding author), Fed Univ Parana UFPR, DINF, Curitiba, Parana, Brazil.
EM jackson.lima@ufpr.br; willian.mendonca@ufpr.br; silvia@inf.ufpr.br;
   wassuncao@inf.puc-rio.br
RI Prado Lima, Jackson/L-8938-2016; Assuncao, Wesley Klewerton
   Guez/AAA-8331-2020
OI Prado Lima, Jackson/0000-0003-4993-777X; Assuncao, Wesley Klewerton
   Guez/0000-0002-7557-9091
FU Brazilian research agency: CNPq [408356/2018-9, 305968/2018-1];
   Brazilian research agency: Fundacao Araucaria - FAPPR [51435]; Brazilian
   research agency: FAPERJ PDR-10 program [202073/2020]; Brazilian research
   agency: CAPES
FX This research was partially funded by the Brazilian research agencies:
   CNPq (grants 408356/2018-9 and 305968/2018-1), FundacAo Araucaria -
   FAPPR (grant no. 51435), FAPERJ PDR-10 program (grant no. 202073/2020),
   and CAPES.
CR Al-Hajjaji Mustafa, 2017, 2017 IEEE/ACM 2nd International Workshop on Variability and Complexity in Software Design (VACE). Proceedings, P34, DOI 10.1109/VACE.2017.8
   [Anonymous], 2017, VAMOS 17
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Bertolino A, 2020, PROC INT CONF SOFTW, P1, DOI 10.1145/3377811.3380369
   Capilla R, 2013, SYSTEMS SOFTWARE VAR
   Cho Y, 2016, ASIA PAC SOFWR ENG, P385, DOI [10.1109/APSEC.2016.066, 10.1109/APSEC.2016.24]
   Colanzi TE, 2019, LECT NOTES COMPUT SC, V11664, P42, DOI 10.1007/978-3-030-27455-9_4
   Crepinsek M, 2013, ACM COMPUT SURV, V45, DOI 10.1145/2480741.2480752
   Dayhoff J. E., 1990, NEURAL NETWORK ARCHI
   Do H., 2008, Proceedings of the 16th ACM SIGSOFT International Symposium on Foundations of software engineering (SIGSOFT '08/FSE-16), P71
   Duvall Paul M., 2007, Continuous integration: improving software quality and reducing risk
   Elbaum S, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P235, DOI 10.1145/2635868.2635910
   Engstrom Emelie, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P512, DOI 10.1109/ICST.2010.45
   Ensan A., 2011, Proceedings of the 2011 Eighth International Conference on Information Technology: New Generations (ITNG), P291, DOI 10.1109/ITNG.2011.58
   Gargantini A, 2016, LECT NOTES COMPUT SC, V9962, P49, DOI 10.1007/978-3-319-47106-8_4
   Haghighatkhah A, 2018, J SYST SOFTWARE, V146, P80, DOI 10.1016/j.jss.2018.08.061
   Hajri I, 2020, EMPIR SOFTW ENG, V25, P3711, DOI 10.1007/s10664-020-09853-4
   Jung P, 2018, ASIA PAC SOFWR ENG, P663, DOI 10.1109/APSEC.2018.00086
   Kumar S, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON COMPUTING, COMMUNICATION AND AUTOMATION (ICCCA), P884, DOI 10.1109/CCAA.2016.7813841
   Lachmann R., 2015, P 19 INT C SOFTW PRO, P81
   Li K, 2014, IEEE T EVOLUT COMPUT, V18, P114, DOI 10.1109/TEVC.2013.2239648
   Lima JAP, 2022, IEEE T SOFTWARE ENG, V48, P453, DOI 10.1109/TSE.2020.2992428
   Lima Jackson A. Prado, 2020, P INT SYST SOFTW PRO, P1, DOI [10.1145/3382025.3414967, DOI 10.1145/3382025.3414967]
   Lity S, 2019, J SYST SOFTWARE, V147, P46, DOI 10.1016/j.jss.2018.09.090
   Liu WL, 2007, INT C COMP AID DES C, P252
   Lochau Malte, 2012, Tests and Proofs. Proceedings 6th International Conference, TAP 2012, P67, DOI 10.1007/978-3-642-30473-6_7
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Marijan D, 2019, SOFTWARE PRACT EXPER, V49, P192, DOI 10.1002/spe.2661
   Marijan D, 2017, IEEE INT CONF SOFTW, P524, DOI 10.1109/ICST.2017.60
   Marijan D, 2017, IEEE HI ASS SYS ENGR, P100, DOI 10.1109/HASE.2017.26
   Marijan D, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P157, DOI 10.1109/QRS.2015.31
   Marijan D, 2013, PROC IEEE INT CONF S, P540, DOI 10.1109/ICSM.2013.91
   Medeiros F, 2018, IEEE T SOFTWARE ENG, V44, P453, DOI 10.1109/TSE.2017.2688333
   Medeiros F, 2016, PROC INT CONF SOFTW, P643, DOI 10.1145/2884781.2884793
   Mukelabai M, 2018, IEEE INT CONF AUTOM, P155, DOI 10.1145/3238147.3238201
   Oliveira R., 2019, 13 INT WORKSH VAR MO, P1, DOI [10.1145/3302333.3302342, DOI 10.1145/3302333.3302342]
   Pett Tobias, 2021, VaMoS'21: Proceedings of the15th International Working Conference on Variability Modelling of Software-Intensive Systems, DOI 10.1145/3442391.3442410
   Prado Lima J A, 2020, 5 BRAZILIAN S SYSTEM
   Lima JAP, 2020, INFORM SOFTWARE TECH, V121, DOI 10.1016/j.infsof.2020.106268
   Remmel H, 2013, 2013 5TH INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR COMPUTATIONAL SCIENCE AND ENGINEERING (SE-CSE), P58, DOI 10.1109/SECSE.2013.6615100
   Remmel H, 2012, COMPUT SCI ENG, V14, P38, DOI 10.1109/MCSE.2011.115
   ROBBINS H, 1952, B AM MATH SOC, V58, P527, DOI 10.1090/S0002-9904-1952-09620-8
   Rothermel G., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P179, DOI 10.1109/ICSM.1999.792604
   Rothermel G, 2018, PROCEEDINGS OF THE 9TH ACM SIGSOFT INTERNATIONAL WORKSHOP ON AUTOMATING TEST CASE DESIGN, SELECTION, AND EVALUATION (A-TEST '18), P1, DOI 10.1145/3278186.3281454
   Runeson P, 2012, ADV COMPUT, V86, P223, DOI 10.1016/B978-0-12-396535-6.00007-7
   Shahin M, 2017, IEEE ACCESS, V5, P3909, DOI 10.1109/ACCESS.2017.2685629
   Spieker H, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P12, DOI 10.1145/3092703.3092709
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   von Rhein A, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P178, DOI 10.1109/ICSE.2015.39
   Wang S, 2016, EMPIR SOFTW ENG, V21, P1586, DOI 10.1007/s10664-014-9345-5
   Wang S, 2015, J SYST SOFTWARE, V103, P370, DOI 10.1016/j.jss.2014.08.024
   Wang T, 2018, PROC INT SYMP SOFTW, P135, DOI 10.1109/ISSRE.2018.00024
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Xu Z., 2013, P 17 INT SOFTWARE PR, P52, DOI DOI 10.1145/2491627.2491650
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
NR 55
TC 0
Z9 0
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2022
VL 27
IS 6
AR 133
DI 10.1007/s10664-021-10093-3
PG 45
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 3B1ZX
UT WOS:000827747300001
DA 2024-07-18
ER

PT J
AU Hejderup, J
   Beller, M
   Triantafyllou, K
   Gousios, G
AF Hejderup, Joseph
   Beller, Moritz
   Triantafyllou, Konstantinos
   Gousios, Georgios
TI Prazi: from package-based to call-based dependency networks
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Package repository; Dependency network; Package manager; Software
   ecosystem; Network analysis; Call graphs
ID IMPACT; GRAPH
AB Modern programming languages such as Java, JavaScript, and Rust encourage software reuse by hosting diverse and fast-growing repositories of highly interdependent packages (i.e., reusable libraries) for their users. The standard way to study the interdependence between software packages is to infer a package dependency network by parsing manifest data. Such networks help answer questions such as "How many packages have dependencies to packages with known security issues?" or "What are the most used packages?". However, an overlooked aspect in existing studies is that manifest-inferred relationships do not necessarily examine the actual usage of these dependencies in source code. To better model dependencies between packages, we developed Prazi, an approach combining manifests and call graphs of packages. Prazi constructs a dependency network at the more fine-grained function-level, instead of at the manifest level. This paper discusses a prototypical Prazi implementation for the popular system programming language Rust. We use Prazi to characterize Rust's package repository, Crates.io, at the function level and perform a comparative study with metadata-based networks. Our results show that metadata-based networks generalize how packages use their dependencies. Using Prazi, we find packages call only 40% of their resolved dependencies, and that manual analysis of 34 cases reveals that not all packages use a dependency the same way. We argue that researchers and practitioners interested in understanding how developers or programs use dependencies should account for its context-not the sum of all resolved dependencies.
C1 [Hejderup, Joseph; Gousios, Georgios] Delft Univ Technol, Delft, Netherlands.
   [Beller, Moritz] Facebook Inc, Menlo Pk, CA USA.
   [Triantafyllou, Konstantinos] Univ Athens, Athens, Greece.
C3 Delft University of Technology; Facebook Inc; National & Kapodistrian
   University of Athens
RP Hejderup, J (corresponding author), Delft Univ Technol, Delft, Netherlands.
EM j.i.hejderup@tudelft.nl; mmb@fb.com; kotriant@di.uoa.gr;
   g.gousios@tudelft.nl
OI Hejderup, Joseph/0000-0002-3334-2133; Gousios,
   Georgios/0000-0002-8495-7939
FU NWO [628.008.001, 825328]
FX The work in this paper was partially funded by NWO grant 628.008.001
   (CodeFeedr) and H2020 grant 825328 (FASTEN). Georgios Gousios is the
   main recipient of both funding grants.
CR Abdalkareem R, 2020, EMPIR SOFTW ENG, V25, P1168, DOI 10.1007/s10664-019-09792-9
   Abdalkareem R, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P385, DOI 10.1145/3106237.3106267
   Albert R, 2002, REV MOD PHYS, V74, P47, DOI 10.1103/RevModPhys.74.47
   Ali K, 2012, LECT NOTES COMPUT SC, V7313, P688, DOI 10.1007/978-3-642-31057-7_30
   Alimadadi S., 2015, 29 EUR C OBJ OR PROG
   Baldwin A, 2018, DETAILS EVENT STREAM
   Beller M, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P470, DOI 10.1109/SANER.2016.105
   Bogart C, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P109, DOI 10.1145/2950290.2950325
   Brian A, 2020, RUST LIBZ BLITZ
   Chen LC, 2020, PROC INT CONF SOFTW, P112, DOI 10.1145/3377811.3380436
   Chinthanet B, 2020, IEEE INT CONF AUTOM, P1199, DOI [10.1145/3324884.3421838, 10.1145/3324884.3421538]
   Cogo FR, 2021, IEEE T SOFTWARE ENG, V47, P2457, DOI 10.1109/TSE.2019.2952130
   Decan A, 2019, EMPIR SOFTW ENG, V24, P381, DOI 10.1007/s10664-017-9589-y
   Decan A, 2018, IEEE WORK CONF MIN S, P181, DOI 10.1145/3196398.3196401
   Dietrich Jens, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P349, DOI 10.1109/MSR.2019.00061
   Duan R, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2169, DOI 10.1145/3133956.3134048
   Dunn J, 2017, PYPI PYTHON REPOSITO
   EMAMI M, 1994, SIGPLAN NOTICES, V29, P242, DOI 10.1145/773473.178264
   Hejderup J, 2021, PRAZI PACKAGEBASED C, DOI DOI 10.5281/ZENODO.4478981
   Hejderup J, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS (ICSE-NIER), P101, DOI 10.1145/3183399.3183417
   Hejderup Joseph, 2015, Master's thesis
   Hoan Anh Nguyen, 2019, 2019 IEEE/ACM 41st International Conference on Software Engineering (ICSE). Proceedings, P819, DOI 10.1109/ICSE.2019.00089
   Hopkins WG, 2002, Sportscience, V502, P321
   Katz Y, 2016, CARGO PREDICTABLE DE
   Kikas R, 2017, IEEE WORK CONF MIN S, P102, DOI 10.1109/MSR.2017.55
   Kula RG, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P288, DOI 10.1109/SANER.2018.8330217
   Kula RG, 2018, INFORM SOFTWARE TECH, V93, P186, DOI 10.1016/j.infsof.2017.09.007
   LEHMAN MM, 1980, P IEEE, V68, P1060, DOI 10.1109/PROC.1980.11805
   Livshits B, 2015, COMMUN ACM, V58, P44, DOI 10.1145/2644805
   Martins P, 2018, IEEE WORK CONF MIN S, P1, DOI 10.1145/3196398.3196450
   Matsakis Niko, 2016, Introducing MIR
   Mezzetti G, 2018, 32 EUR C OBJ OR PROG
   Mirhosseini S, 2017, IEEE INT CONF AUTOM, P84, DOI 10.1109/ASE.2017.8115621
   Mones E, 2012, PLOS ONE, V7, DOI 10.1371/journal.pone.0033799
   Mujahid S, 2020, IEEE WORK CONF MIN S, P466, DOI 10.1145/3379597.3387476
   Ponta SE, 2018, PROC IEEE INT CONF S, P449, DOI 10.1109/ICSME.2018.00054
   Preston-Werner Tom., 2013, Semantic Versioning 2.0.0
   Raemaekers S, 2017, J SYST SOFTWARE, V129, P140, DOI 10.1016/j.jss.2016.04.008
   Robbes R., 2012, P ACM SIGSOFT 20 INT
   RYDER BG, 1979, IEEE T SOFTWARE ENG, V5, P216, DOI 10.1109/TSE.1979.234183
   Salis V, 2021, PROC INT CONF SOFTW, P1646, DOI 10.1109/ICSE43902.2021.00146
   Sawant AA, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P561, DOI 10.1145/3180155.3180170
   Sawant AA, 2018, EMPIR SOFTW ENG, V23, P2158, DOI 10.1007/s10664-017-9554-9
   Sawant AA, 2017, EMPIR SOFTW ENG, V22, P1348, DOI 10.1007/s10664-016-9444-6
   Schlueter I, 2017, NPM BLOG KIK LEFT PA
   Schlueter I., 2013, UNIX PHILOS NODEJS
   Shapiro M., 1997, Conference Record of POPL '97: The 24th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P1, DOI 10.1145/263699.263703
   Shivers O. G., 1991, THESIS CARNEGIE MELL
   Stack B., 2019, CARGO CALL STACK STA
   Steensgaard B., 1996, Conference Record of POPL '96: The 23rd ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P32, DOI 10.1145/237721.237727
   Sulir M, 2016, PLATEAU'16: PROCEEDINGS OF THE 7TH INTERNATIONAL WORKSHOP ON EVALUATION AND USABILITY OF PROGRAMMING LANGUAGES AND TOOLS, P17, DOI 10.1145/3001878.3001882
   Sundaresan V, 2000, ACM SIGPLAN NOTICES, V35, P264, DOI 10.1145/354222.353189
   Tip F, 2000, ACM SIGPLAN NOTICES, V35, P281, DOI 10.1145/354222.353190
   Tufano M, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1838
   Valiev M, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P644, DOI 10.1145/3236024.3236062
   Xavier L, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P138, DOI 10.1109/SANER.2017.7884616
   Zapata RE, 2018, PROC IEEE INT CONF S, P559, DOI 10.1109/ICSME.2018.00067
   Zerouali A, 2018, LECT NOTES COMPUT SC, V10826, P95, DOI 10.1007/978-3-319-90421-4_6
   Zhang TY, 2020, PROCEEDINGS OF THE 2020 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'20), DOI 10.1145/3313831.3376382
   Zhao Z., 2019, International Conference on Applied Human Factors and Ergonomics, P402
   Zimmermann M, 2019, PROCEEDINGS OF THE 28TH USENIX SECURITY SYMPOSIUM, P995
NR 61
TC 3
Z9 4
U1 1
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2022
VL 27
IS 5
AR 102
DI 10.1007/s10664-021-10071-9
PG 42
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 1U7GT
UT WOS:000805577100015
DA 2024-07-18
ER

PT J
AU Wessel, M
   Serebrenik, A
   Wiese, I
   Steinmacher, I
   Gerosa, MA
AF Wessel, Mairieli
   Serebrenik, Alexander
   Wiese, Igor
   Steinmacher, Igor
   Gerosa, Marco A.
TI Quality gatekeepers: investigating the effects of code review bots on
   pull request activities
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Review
DE Software bots; GitHub bots; Code review; Automation; Open source
   software; Software engineering
AB Software bots have been facilitating several development activities in Open Source Software (OSS) projects, including code review. However, these bots may bring unexpected impacts to group dynamics, as frequently occurs with new technology adoption. Understanding and anticipating such effects is important for planning and management. To analyze these effects, we investigate how several activity indicators change after the adoption of a code review bot. We employed a regression discontinuity design on 1,194 software projects from GitHub. We also interviewed 12 practitioners, including open-source maintainers and contributors. Our results indicate that the adoption of code review bots increases the number of monthly merged pull requests, decreases monthly non-merged pull requests, and decreases communication among developers. From the developers' perspective, these effects are explained by the transparency and confidence the bot comments introduce, in addition to the changes in the discussion focused on pull requests. Practitioners and maintainers may leverage our results to understand, or even predict, bot effects on their projects.
C1 [Wessel, Mairieli] Delft Univ Technol, Delft, Netherlands.
   [Wessel, Mairieli] Univ Sao Paulo, Sao Paulo, Brazil.
   [Serebrenik, Alexander] Eindhoven Univ Technol, Eindhoven, Netherlands.
   [Wiese, Igor; Steinmacher, Igor] Univ Tecnol Fed Parana, Curitiba, Parana, Brazil.
   [Gerosa, Marco A.] No Arizona Univ, Flagstaff, AZ 86011 USA.
C3 Delft University of Technology; Universidade de Sao Paulo; Eindhoven
   University of Technology; Universidade Tecnologica Federal do Parana;
   Pontificia Universidade Catolica do Parana; Universidade Federal do
   Parana; Northern Arizona University
RP Wessel, M (corresponding author), Delft Univ Technol, Delft, Netherlands.; Wessel, M (corresponding author), Univ Sao Paulo, Sao Paulo, Brazil.
EM m.wessel@tudelft.nl; a.serebrenik@tue.nl; igor@utfpr.edu.br;
   igorfs@utfpr.edu.br; marco.gerosa@nau.edu
RI Gerosa, Marco Aurelio/A-6686-2009; Igor, Steinmacher/B-6414-2012;
   Wessel, Mairieli/ABA-1455-2021
OI Gerosa, Marco Aurelio/0000-0003-1399-7535; Igor,
   Steinmacher/0000-0002-0612-5790; Wessel, Mairieli/0000-0001-8619-726X;
   Serebrenik, Alexander/0000-0002-1418-0095
FU National Science Foundation [1815503, 1900903]; CNPq [313067/2020-1];
   Direct For Computer & Info Scie & Enginr; Div Of Information &
   Intelligent Systems [1900903, 1815503] Funding Source: National Science
   Foundation
FX This work is partially supported by the National Science Foundation
   under Grant numbers 1815503, 1900903, CNPq grant #313067/2020-1.
CR Aniche M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P499, DOI 10.1145/3180155.3180180
   [Anonymous], 2012, ACM 2012 C COMP SUPP
   [Anonymous], 2014, 11 WORKING C MINING, DOI [DOI 10.1145/2597073.2597076, DOI 10.1145/2597073]
   Balali S, 2018, COMPUT SUPP COOP W J, V27, P679, DOI 10.1007/s10606-018-9310-8
   Baysal O, 2016, EMPIR SOFTW ENG, V21, P932, DOI 10.1007/s10664-015-9366-8
   BENJAMINI Y, 1995, J R STAT SOC B, V57, P289, DOI 10.1111/j.2517-6161.1995.tb02031.x
   Bernard HR., 2018, RES METHODS ANTHR QU
   Brown C, 2019, 2019 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON BOTS IN SOFTWARE ENGINEERING (BOTSE 2019), P54, DOI 10.1109/BotSE.2019.00021
   Carvalho A, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P161, DOI [10.1109/saner48275.2020.9054842, 10.1109/SANER48275.2020.9054842]
   Cassee N, 2021, 2021 IEEE INT C SOFT, P654, DOI DOI 10.1109/ICSME52107.2021.00075
   Cassee N, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P423, DOI [10.1109/saner48275.2020.9054818, 10.1109/SANER48275.2020.9054818]
   Chaves AP, 2021, INT J HUM-COMPUT INT, V37, P729, DOI 10.1080/10447318.2020.1841438
   Cook T., 1979, Quasi experimental design and analysis
   Creswell J, 2003, RES DESIGN QUALITATI, V3
   Dias LF, 2016, PROC IEEE INT CONF S, P473, DOI 10.1109/ICSME.2016.78
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Ebert F, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P49, DOI [10.1109/SANER.2019.8668024, 10.1109/saner.2019.8668024]
   Ellwart T, 2015, EUR J WORK ORGAN PSY, V24, P812, DOI 10.1080/1359432X.2014.1000873
   Erlenhov Linda, 2016, P 2020 28 ACM SIGSOF
   Galecki A, 2013, SPRINGER TEXTS STAT, P1, DOI 10.1007/978-1-4614-3900-4
   Gousios Georgios, 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P12, DOI 10.1109/MSR.2012.6224294
   Gousios G, 2016, PROC INT CONF SOFTW, P285, DOI 10.1145/2884781.2884826
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   Guo YF, 2019, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.245
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Healy T, 2012, Nanotechnology: ethical and social Implications, P155
   Hove SE, 2005, 2005 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS (METRICS), P201
   Imbens GW, 2008, J ECONOMETRICS, V142, P615, DOI 10.1016/j.jeconom.2007.05.001
   Kalliamvakou E., 2014, P 11 WORKING C MININ, P92, DOI DOI 10.1145/2597073.2597074
   Kavaler D, 2019, PROC INT CONF SOFTW, P476, DOI 10.1109/ICSE.2019.00060
   Khanan C, 2020, 2020 35 IEEE ACM INT
   Kinsman T., 2021, MINING SOFTWARE REPO
   Kuznetsova A, 2017, J STAT SOFTW, V82, P1, DOI 10.18637/jss.v082.i13
   Lebeuf C., 2017, 20 ACM C COMP SUPP C
   Lebeuf C, 2019, 2019 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON BOTS IN SOFTWARE ENGINEERING (BOTSE 2019), P1, DOI 10.1109/BotSE.2019.00008
   Lebeuf C, 2018, IEEE SOFTWARE, V35, P18, DOI 10.1109/MS.2017.4541027
   Liu DY, 2020, CHI'20: EXTENDED ABSTRACTS OF THE 2020 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, DOI 10.1145/3334480.3382998
   Mendez C, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1004, DOI 10.1145/3180155.3180241
   Mirhosseini S, 2017, IEEE INT CONF AUTOM, P84, DOI 10.1109/ASE.2017.8115621
   Moldon L, 2020, ARXIV 200602371
   Monperrus M, 2019, 2019 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON BOTS IN SOFTWARE ENGINEERING (BOTSE 2019), P12, DOI 10.1109/BotSE.2019.00010
   Mulder K, 2013, Impact of new technologies: how to assess the intended and unintended effects of new technologies
   Murphy-Hill E, 2019, PROC INT CONF SOFTW, P465, DOI 10.1109/ICSE.2019.00059
   Nakagawa S, 2013, METHODS ECOL EVOL, V4, P133, DOI 10.1111/j.2041-210x.2012.00261.x
   Paikari E, 2018, 2018 IEEE/ACM 11TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P13, DOI 10.1145/3195836.3195859
   Patton M. Q., 2002, QUALITATIVE RES EVAL
   Phan-udom P, 2020, PROC IEEE INT CONF S, P806, DOI 10.1109/ICSME46990.2020.00098
   Pinto G, 2017, CONF SOFTW ENG EDUC, P117, DOI 10.1109/CSEET.2017.27
   Pinto G, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P112, DOI 10.1109/SANER.2016.68
   Romano J., 2006, ANN M FLORIDA ASS IN
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Serban D., 2021, INWORKSHOP BOTS SOFT
   Sheather SJ, 2009, SPRINGER TEXTS STAT, P1, DOI 10.1007/978-0-387-09608-7_1
   Singer L, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P211, DOI 10.1145/2568225.2568305
   Steinmacher I, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P256, DOI 10.1145/3180155.3180208
   Steinmacher I, 2015, PROCEEDINGS OF THE 2015 ACM INTERNATIONAL CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING (CSCW'15), P1379, DOI 10.1145/2675133.2675215
   Steinmacher I, 2013, 2013 6TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P25, DOI 10.1109/CHASE.2013.6614728
   Stol KJ, 2016, PROC INT CONF SOFTW, P120, DOI 10.1145/2884781.2884833
   Storey MA, 2010, FSE SDP WORKSH FUT S
   Storey MA, 2017, IEEE T SOFTWARE ENG, V43, P185, DOI 10.1109/TSE.2016.2584053
   Storey MA, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P928, DOI 10.1145/2950290.2983989
   Strauss A. L., 1997, Grounded Theory in Practice
   Strauss E, 1998, CLIN ORTHOP RELAT R, P2
   STRUTZEL E, 1968, NURS RES, V17, P364
   THISTLETHWAITE DL, 1960, J EDUC PSYCHOL, V51, P309, DOI 10.1037/h0044319
   Trockman A, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P511, DOI 10.1145/3180155.3180209
   Urli S, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P95, DOI 10.1145/3183519.3183540
   Vorvoreanu M, 2019, CHI 2019: PROCEEDINGS OF THE 2019 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, DOI 10.1145/3290605.3300283
   Walden J., 2020, ARXIV 200514242
   Wessel Mairieli, 2021, Proceedings of the ACM on Human-Computer Interaction, V5, DOI 10.1145/3476042
   Wessel Mairieli, 2018, Proceedings of the ACM on Human-Computer Interaction, V2, DOI 10.1145/3274451
   Wessel M., 2020, Proceedings of the 42nd International Conference on Software Engineering Workshops (ICSEW'20), P51, DOI [10.1145/3387940.3391504, DOI 10.1145/3387940.3391504]
   Wessel M., 2020, SBES 2020IDEIAS INOV, P457, DOI 10.1145/3422392.3422459
   Wessely M, 2020, PROCEEDINGS OF THE 2020 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'20), DOI 10.1145/3313831.3376249
   Wilks D. S, 2011, International Geophysics Series, V100, DOI DOI 10.1002/MET.16
   Woods DD, 2001, HUM FAC TRANSP, P290
   Wyrich M, 2019, 2019 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON BOTS IN SOFTWARE ENGINEERING (BOTSE 2019), P24, DOI 10.1109/BotSE.2019.00015
   Yin R. K., 2015, CASE STUDY RES DESIG
   Yu Y, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P367, DOI 10.1109/MSR.2015.42
   Zhao YY, 2017, IEEE INT CONF AUTOM, P60, DOI 10.1109/ASE.2017.8115619
   Zimmermann T, 2019, PROC IEEE INT CONF S, P13, DOI 10.1109/ICSME.2019.00011
NR 81
TC 5
Z9 5
U1 3
U2 8
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2022
VL 27
IS 5
AR 108
DI 10.1007/s10664-022-10130-9
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 1U7GT
UT WOS:000805577100007
OA Green Submitted, Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Ginelli, D
   Martinez, M
   Mariani, L
   Monperrus, M
AF Ginelli, Davide
   Martinez, Matias
   Mariani, Leonardo
   Monperrus, Martin
TI A comprehensive study of code-removal patches in automated program
   repair
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Automatic program repair; Code-removal patches; Software testing;
   Debugging
AB Automatic Program Repair (APR) techniques can promisingly help reduce the cost of debugging. Many relevant APR techniques follow the generate-and-validate approach, that is, the faulty program is iteratively modified with different change operators and then validated with a test suite until a plausible patch is generated. In particular, Kali is a generate-and-validate technique developed to investigate the possibility of generating plausible patches by only removing code. Former studies show that indeed Kali successfully addressed several faults. This paper addresses the single and particular case of code-removal patches in automated program repair. We investigate the reasons and the scenarios that make their creation possible, and the relationship with patches implemented by developers. Our study reveals that code-removal patches are often insufficient to fix bugs, and proposes a comprehensive taxonomy of code-removal patches that provides evidence of the problems that may affect test suites, opening new opportunities for researchers in the field of automatic program repair.
C1 [Ginelli, Davide; Mariani, Leonardo] Univ Milano Bicocca, Milan, Italy.
   [Martinez, Matias] Univ Polytech Hauts de France, Valenciennes, France.
   [Monperrus, Martin] KTH Royal Inst Technol, Stockholm, Sweden.
C3 University of Milano-Bicocca; Universite Polytechnique Hauts-de-France;
   Royal Institute of Technology
RP Ginelli, D (corresponding author), Univ Milano Bicocca, Milan, Italy.
EM davide.ginelli@unimib.it; matias.martinez@uphf.fr;
   leonardo.mariani@unimib.it; monperrus@kth.se
RI Monperrus, Martin/I-3640-2012; Martinez, Matias/ABA-8871-2021
OI Monperrus, Martin/0000-0003-3505-3383; Martinez,
   Matias/0000-0002-2945-866X; Ginelli, Davide/0000-0003-1489-321X
FU ERC Consolidator Grant 2014 Program through the EU H2020 Learn Project
   under ERC Grant [646867]; Wallenberg Artificial Intelligence, Autonomous
   Systems and Software Program (WASP) - Knut and Alice Wallenberg
   Foundation; Swedish Foundation for Strategic Research (SSF)
FX This work was supported in part by the ERC Consolidator Grant 2014
   Program through the EU H2020 Learn Project under ERC Grant 646867. This
   work was partially supported by the Wallenberg Artificial Intelligence,
   Autonomous Systems and Software Program (WASP) funded by Knut and Alice
   Wallenberg Foundation, and by the Swedish Foundation for Strategic
   Research (SSF).
CR Alarcon GM, 2020, SYSTEMS-BASEL, V8, DOI 10.3390/systems8010008
   Britton T, 2013, Reversible Debugging Software "Quantify the Time and Cost Saved Using Reversible Debuggers
   Brown MD, 2019, FEAST'19: PROCEEDINGS OF THE 3RD ACM WORKSHOP ON FORMING AN ECOSYSTEM AROUND SOFTWARE TRANSFORMATION, P1, DOI 10.1145/3338502.3359764
   Cambronero JP, 2019, S VIS LANG HUM CEN C, P181, DOI 10.1109/vlhcc.2019.8818884
   Campos J, 2012, IEEE INT CONF AUTOM, P378, DOI 10.1145/2351676.2351752
   Colanzi TE, 2018, P LECT NOTES COMPUTE, DOI [10.1007/978-3-319-99241-9, DOI 10.1007/978-3-319-99241-9]
   Coralogix, 2015, THIS IS WHAT YOUR DE
   Daniel B, 2009, P 24 IEEEACM INT C A
   Delplanque J, 2019, 2019 IEEE ACM 41 INT
   Durieux T, 2020, ARXIV
   Durieux T, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P302, DOI 10.1145/3338906.3338911
   Fry ZP, 2012, INT S SOFTW TEST AN
   Gazzola L, 2019, IEEE T SOFTWARE ENG, V45, P34, DOI 10.1109/TSE.2017.2755013
   Jiang JJ, 2019, SCI CHINA INFORM SCI, V62, DOI 10.1007/s11432-018-1465-6
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Kim D H., 2013, 2013 INT S SLOPE STA, DOI DOI 10.36487/ACG_REP/1308_15_KIM
   Klein J, 2020, EFFICIENCY TEST SUIT, DOI [10.1145/3377811.3380338, DOI 10.1145/3377811.3380338]
   Krasner Herb, 2018, COST POOR QUALITY SO
   Langr J., 2015, PRAGMATIC UNIT TESTI
   Le Goues C, 2012, IEEE T SOFTWARE ENG, V38, P54, DOI 10.1109/TSE.2011.104
   Le Goues C, 2015, IEEE T SOFTWARE ENG, V41, P1236, DOI 10.1109/TSE.2015.2454513
   Liu K, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P31, DOI 10.1145/3293882.3330577
   Liu K, 2021, IEEE T SOFTWARE ENG, V47, P165, DOI 10.1109/TSE.2018.2884955
   Liu K, 2019, IEEE INT CONF SOFTW, P102, DOI 10.1109/ICST.2019.00020
   Long F, 2016, ACM SIGPLAN NOTICES, V51, P298, DOI 10.1145/2914770.2837617
   Luo QZ, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P643, DOI 10.1145/2635868.2635920
   Madeiral F, 2019, P 26 IEEE INT C SOFT
   Martinez M., 2016, P 25 INT S SOFTWARE, P441, DOI 10.1145/2931037
   Martinez M, 2020, PROC INT CONF SOFTW, P69, DOI 10.1145/3377812.3382151
   Martinez M, 2017, EMPIR SOFTW ENG, V22, P1936, DOI 10.1007/s10664-016-9470-4
   Martínez M, 2015, EMPIR SOFTW ENG, V20, P176, DOI 10.1007/s10664-013-9282-8
   Meyvis T, 2021, ADDING IS FAVOURED S
   Monperrus M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3105906
   Monperrus Martin, 2019, Ubiquity, V2019, P1, DOI 10.1145/3349589
   Papadakis M, 2015, SOFTW TEST VERIF REL, V25, P605, DOI 10.1002/stvr.1509
   Qi Zichao, 2015, P 2015 INT S SOFTW T, P24, DOI DOI 10.1145/2771783.2771791
   Ramanathan MK, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP), P221, DOI 10.1145/3377813.3381350
   Ryan TJ, 2019, LECT NOTES
   Saha RK, 2017, 2017 32 IEEEACM INT, DOI [10.1109/ASE.2017.8115675, DOI 10.1109/ASE.2017.8115675]
   Soto M, 2018, IEEE WORK CONF MIN S, P102, DOI 10.1145/3196398.3196472
   Soto-Valero C, 2021, ARXIV
   Soto-Valero C, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09914-8
   Tan SH, 2015, 37 INT C SOFTWARE EN
   Tan SH, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P727, DOI 10.1145/2950290.2950295
   Undo Software, 2014, CISC VIS NETW IND GL
   Urli S, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P95, DOI 10.1145/3183519.3183540
   Wang S., 2019, 2019 ACMIEEE INT S E, P1, DOI DOI 10.1109/ESEM.2019.8870172
   Weimer W, 2013, P 28 IEEEACM INT C A
   Xuan JF, 2017, IEEE T SOFTWARE ENG, V43, P34, DOI 10.1109/TSE.2016.2560811
   Yang JQ, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P831, DOI 10.1145/3106237.3106274
   Ye H, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09920-w
   Ye H, 2021, J SYST SOFTWARE, V171, DOI 10.1016/j.jss.2020.110825
   Yi J, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P24, DOI 10.1145/3180155.3182517
   Yu Zhongxing, 2017, ARXIV170300198
   Yuan Y, 2020, IEEE T SOFTWARE ENG, V46, P1040, DOI 10.1109/TSE.2018.2874648
   Zhong H, 2018, J SYST SOFTWARE, V141, P16, DOI 10.1016/j.jss.2018.03.046
NR 56
TC 2
Z9 2
U1 0
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2022
VL 27
IS 4
AR 97
DI 10.1007/s10664-021-10100-7
PG 43
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0Z9HQ
UT WOS:000791380900002
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Ding, ZS
   Li, H
   Shang, WY
   Chen, TH
AF Ding, Zishuo
   Li, Heng
   Shang, Weiyi
   Chen, Tse-Hsun (Peter)
TI Can pre-trained code embeddings improve model performance? Revisiting
   the use of code embeddings in software engineering tasks
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Machine learning; Source code representation; Code embeddings; Neural
   network
ID SYSTEM
AB Word representation plays a key role in natural language processing (NLP). Various representation methods have been developed, among which pre-trained word embeddings (i.e., dense vectors that represent words) have shown to be highly effective in many neural network-based NLP applications, such as named entity recognition (NER) and part-of-speech (POS) tagging. However, the use of pre-trained code embeddings for software engineering (SE) tasks has not been extensively explored. A recent study by Kang et al. (2019) finds that code embeddings may not be readily leveraged for the downstream tasks that the embeddings are not trained for. However, Kang et al. (2019) only evaluate two code embedding approaches on three downstream tasks and both approaches may have not taken full advantage of the context information in the code when training code embeddings. Considering the limitations of the evaluated embedding techniques and downstream tasks in Kang et al. (2019), we would like to revisit the prior study by examining whether the lack of generalizability of pre-trained code embeddings can be addressed by considering both the textual and structural information of the code and using unsupervised learning. Therefore, in this paper, we propose a framework, StrucTexVec, which uses a two-step unsupervised training strategy to incorporate the textual and structural information of the code. Then, we extend prior work (Kang et al. 2019) by evaluating seven code embedding techniques and comparing them with models that do not utilize pre-trained embeddings in six downstream tasks. Our results first confirm the findings from prior work, i.e., pre-trained embeddings may not always have a significant effect on the performance of downstream SE tasks. Nevertheless, we also observe that (1) different embedding techniques can result in diverse performance for some SE tasks; (2) using well pre-trained embeddings usually improve the performance of SE tasks (e.g., all six downstream tasks in our study); and (3) the structural context has a non-negligible impact on improving the quality of code embeddings (e.g., embedding approaches that leverage the structural context achieve the best performance in five out of six downstream tasks among all the evaluated non-contextual embeddings), and thus, future work can consider incorporating such information into the large pre-trained models. Our findings imply the importance and effectiveness of combining both textual and structural context in creating code embeddings. Moreover, one should be very careful with the selection of code embedding techniques for different downstream tasks, as it may be difficult to prescribe a single best-performing solution for all SE tasks.
C1 [Ding, Zishuo; Shang, Weiyi; Chen, Tse-Hsun (Peter)] Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ, Canada.
   [Li, Heng] Polytech Montreal, Dept Comp Engn & Software Engn, Montreal, PQ, Canada.
C3 Concordia University - Canada; Universite de Montreal; Polytechnique
   Montreal
RP Ding, ZS (corresponding author), Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ, Canada.
EM zi_ding@encs.concordia.ca; heng.li@polymtl.ca; shang@encs.concordia.ca;
   peterc@encs.concordia.ca
OI Chen, Tse-Hsun/0000-0003-4027-0905
CR Abuhamad M, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P101, DOI 10.1145/3243734.3243738
   Allamanis M., 2018, INT C LEARN REPR ICL
   Allamanis M, 2016, PR MACH LEARN RES, V48
   Allamanis M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P38, DOI 10.1145/2786805.2786849
   Allamanis M, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P281, DOI 10.1145/2635868.2635883
   Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   Alon U, 2018, ACM SIGPLAN NOTICES, V53, P404, DOI [10.1145/3192366.3192412, 10.1145/3296979.3192412]
   [Anonymous], 2017, 2017 14 INT JOINT C, DOI DOI 10.1109/JCSSE.2017.8025917
   Barbour L., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P273, DOI 10.1109/ICSM.2011.6080794
   Bielik P, 2016, PR MACH LEARN RES, V48
   Bojanowski P., 2017, Transactions of the Association for Computational Linguistics, V5, P135, DOI DOI 10.1162/TACLA00051
   Büch L, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P95, DOI [10.1109/saner.2019.8668039, 10.1109/SANER.2019.8668039]
   Caliskan-Islam A, 2015, PROCEEDINGS OF THE 24TH USENIX SECURITY SYMPOSIUM, P255
   Chen TH, 2016, EMPIR SOFTW ENG, V21, P1843, DOI 10.1007/s10664-015-9402-8
   Chen Z., 2018, The remarkable role of similarity in redundancy-based program repair
   Collard ML, 2011, IEEE INT WORK C SO, P173, DOI 10.1109/SCAM.2011.19
   Devlin J., 2018, BERT PRE TRAINING DE
   Ding Z, 2022, SANER
   Dubinsky Y, 2013, EUR CON SFTWR MTNCE, P25, DOI 10.1109/CSMR.2013.13
   Efstathiou Vasiliki, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P29, DOI 10.1109/MSR.2019.00015
   Feng Z., 2020, EMNLP
   Harer J.A., 2018, Automated software vulnerability detection with machine learning
   Hindle A, 2012, PROC INT CONF SOFTW, P837, DOI 10.1109/ICSE.2012.6227135
   Hu X, 2018, INT C PROGRAM COMPRE, P200, DOI 10.1145/3196321.3196334
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kanade A, 2020, PR MACH LEARN RES, V119
   Kang HJ, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1, DOI 10.1109/ASE.2019.00011
   Kawaguchi S, 2006, J SYST SOFTWARE, V79, P939, DOI 10.1016/j.jss.2005.06.044
   Kim Y., 2014, P 2014 C EMPIRICAL M
   Komninos A., 2016, P 2016 C N AM CHAPT, P1490
   Li C, 2018, AAAI CONF ARTIF INTE, P5836
   Li H, 2018, EMPIR SOFTW ENG, V23, P2655, DOI 10.1007/s10664-018-9595-8
   Linares-Vasquez M, 2014, EMPIR SOFTW ENG, V19, P582, DOI 10.1007/s10664-012-9230-z
   Liu Y, 2019, 57TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2019), P5070
   Masters D, 2018, ARXIV, DOI 10.48550/arXiv.1804.07612
   Mayrand J, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P244, DOI 10.1109/ICSM.1996.565012
   McBurney P. W., 2014, P 22 INT C PROGRAM C, P279
   Mikolov T., 2013, ADV NEURAL INFORM PR, V26, P3111, DOI DOI 10.5555/2999792.2999959
   Mikolov Tomas, 2013, Advances in Neural Information Processing Systems, P3111, DOI DOI 10.48550/ARXIV.1310.4546
   Moreno L, 2013, CONF PROC INT SYMP C, P23, DOI 10.1109/ICPC.2013.6613830
   Mou LL, 2016, AAAI CONF ARTIF INTE, P1287
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Pennington J., 2014, P C EMP METH NAT LAN, P1532, DOI DOI 10.3115/V1/D14-1162
   Pradel M, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3276517
   Raychev V, 2015, ACM SIGPLAN NOTICES, V50, P111, DOI [10.1145/2775051.2677009, 10.1145/2676726.2677009]
   Rehurek R., 2010, P LREC 2010 WORKSH N, P45, DOI DOI 10.13140/2.1.2393.1847
   Roy J. R., 2007, QUEENS SCH COMPUTING, V541, P64
   Sajnani H, 2016, PROC INT CONF SOFTW, P1157, DOI 10.1145/2884781.2884877
   Sridhara Giriprasad, 2010, 25 IEEEACM INT C AUT, P43
   Sui YL, 2020, P ACM PROGRAM LANG, V4, DOI 10.1145/3428301
   Svajlenko J, 2014, PROC IEEE INT CONF S, P476, DOI 10.1109/ICSME.2014.77
   Theeten Bart, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P18, DOI 10.1109/MSR.2019.00014
   Thummalapenta S, 2010, EMPIR SOFTW ENG, V15, P1, DOI 10.1007/s10664-009-9108-x
   Tufano M, 2018, IEEE WORK CONF MIN S, P542, DOI 10.1145/3196398.3196431
   Vashishth S, 2019, 57TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2019), P3308
   Wang K., 2018, INT C LEARNING REPRE
   Wang S, 2016, PROC INT CONF SOFTW, P297, DOI 10.1145/2884781.2884804
   Wei HH, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P3034
   White M, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P479, DOI [10.1109/saner.2019.8668043, 10.1109/SANER.2019.8668043]
   White M, 2016, IEEE INT CONF AUTOM, P87, DOI 10.1145/2970276.2970326
   Zhang J, 2019, PROC INT CONF SOFTW, P783, DOI 10.1109/ICSE.2019.00086
NR 61
TC 12
Z9 13
U1 2
U2 7
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAY
PY 2022
VL 27
IS 3
AR 63
DI 10.1007/s10664-022-10118-5
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZV2BV
UT WOS:000770339500007
DA 2024-07-18
ER

PT J
AU Kröher, C
   Flöter, M
   Gerling, L
   Schmid, K
AF Kroeher, Christian
   Floeter, Moritz
   Gerling, Lea
   Schmid, Klaus
TI Incremental software product line verification - A performance analysis
   with dead variable code
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software product line analysis; Evolution; Incremental verification;
   Dead variable code analysis
ID VARIABILITY; COEVOLUTION; EVOLUTION; KERNEL
AB Verification approaches for Software Product Lines (SPL) aim at detecting variability-related defects and inconsistencies. In general, these analyses take a significant amount of time to provide complete results for an entire, complex SPL. If the SPL evolves, these results potentially become invalid, which requires a time-consuming re-verification of the entire SPL for each increment. However, in previous work we showed that variability-related changes occur rather infrequently and typically only affect small parts of a SPL. In this paper, we utilize this observation and present an incremental dead variable code analysis as an example for incremental SPL verification, which achieves significant performance improvements. It explicitly considers changes and partially updates its previous results by re-verifying changed artifacts only. We apply this approach to the Linux kernel demonstrating that our fastest incremental strategy takes only 3.20 seconds or less for most of the changes, while the non-incremental approach takes 1,020 seconds in median. We also discuss the impact of different variants of our strategy on the overall performance, providing insights into optimizations that are worthwhile.
C1 [Kroeher, Christian; Floeter, Moritz; Gerling, Lea; Schmid, Klaus] Univ Hildesheim, Hildesheim, Germany.
C3 University of Hildesheim
RP Kröher, C; Gerling, L (corresponding author), Univ Hildesheim, Hildesheim, Germany.
EM kroeher@sse.uni-hildesheim.de; moritzf@gmail.com;
   gerling@sse.uni-hildesheim.de; schmid@sse.uni-hildesheim.de
RI Schmid, Klaus/AAB-1480-2019
OI Schmid, Klaus/0000-0002-4147-3942
FU ITEA3 project REVaMP2 - BMBF (German Ministry of Research and Education)
   [01IS16042H]
FX This work is partially supported by the ITEA3 project REVaMP2, funded by
   the BMBF (German Ministry of Research and Education) under grant
   01IS16042H. Any opinions expressed herein are solely by the authors and
   not of the BMBF. Moritz Floter (second author) contributed to this paper
   as part of his former employment at the University of Hildesheim.
CR Acher Mathieu, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P424, DOI 10.1109/ASE.2011.6100089
   Acher M., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P600, DOI 10.1109/ASE.2011.6100135
   Adams B., 2007, ELECTR COMMUN, V8, P1
   Angerer F, 2019, AUTOMAT SOFTW ENG, V26, P417, DOI 10.1007/s10515-019-00253-7
   [Anonymous], 2006, COMPILERS PRINCIPLES
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Berger T., 2016, KBUILDMINER
   Bohner SA, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P42, DOI 10.1109/ICSM.1996.564987
   Borba P, 2012, THEOR COMPUT SCI, V455, P2, DOI 10.1016/j.tcs.2012.01.031
   CHASTEK G, 2001, CMUSEI2001TR001
   ComAn Team, 2018, COMM AN COMAN
   ComAnI Team, 2019, COMM AN INFR COMAN
   Czarnecki Krzysztof., 2012, P 6 INT WORKSHOP VAR, P173, DOI DOI 10.1145/2110147.2110167
   Díaz J, 2011, LECT NOTES COMPUT SC, V6903, P114, DOI 10.1007/978-3-642-23798-0_12
   Dietrich C., 2012, Em: Proceedings of the 16th International Software Product Line Conference-Volume, V1, P21
   Dintzner N, 2015, 14 INT C SOFTW REUS, P1
   Dintzner N, 2018, EMPIR SOFTW ENG, V23, P905, DOI 10.1007/s10664-017-9557-6
   Eichelberger Holger, 2013, Safe and Secure Software Reuse. 13th International Conference on Software Reuse, ICSR 2013. Proceedings: LNCS 7925, P32, DOI 10.1007/978-3-642-38977-1_3
   Eichelberger Holger., 2013, Proceedings of the 17th International Software Product Line Conference (SPLC'13), P12
   El-Sharkawy S, 2015, GPCE'15: PROCEEDINGS OF THE 2015 ACM SIGPLAN INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING: CONCEPTS AND EXPERIENCES, P45, DOI 10.1145/2814204.2814222
   El-Sharkawy S, 2017, 21ST INTERNATIONAL SYSTEMS & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 1, P19, DOI 10.1145/3106195.3106208
   EPANECHN.VA, 1969, THEOR PROBAB APPL+, V14, P153, DOI 10.1137/1114019
   Gerling L, 2019, 23 INT SYST SOFTW PR, P1
   Gerling L, 2020, P 14 INT WORK C VAR, P1
   Git, 2020, GIT VERS CONTR SYST
   Git, 2021, GIT DOC REF GIT APPL
   Godfrey MW, 2000, PROC IEEE INT CONF S, P131, DOI 10.1109/ICSM.2000.883030
   Gomes K, 2019, 13 INT WORKSH VAR MO, P1
   Hamza M, 2018, SPLC'18: PROCEEDINGS OF THE 22ND INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL 1, P31, DOI 10.1145/3233027.3233036
   Hellebrand R, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P274, DOI 10.1145/2648511.2648542
   Hunsen C, 2016, EMPIR SOFTW ENG, V21, P449, DOI 10.1007/s10664-015-9360-1
   Israeli A, 2010, J SYST SOFTWARE, V83, P485, DOI 10.1016/j.jss.2009.09.042
   Kästner C, 2011, ACM SIGPLAN NOTICES, V46, P805, DOI 10.1145/2076021.2048128
   Kastner C., 2016, KCONFIGREADER
   KernelHaven Team, 2020, KERNELHAVEN
   KernelHaven Team, 2019, KERNELHAVEN PLUG IN
   Krieter S, 2016, PROC INT SYSTEMS SOF, P60
   Kröher C, 2018, SPLC'18: PROCEEDINGS OF THE 22ND INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL 1, P54, DOI 10.1145/3233027.3233032
   Kröher C, 2018, SPLC'18: PROCEEDINGS OF THE 22ND INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE - VOL 2, P5, DOI 10.1145/3236405.3236410
   Kröher C, 2018, PROC IEEE ACM INT C, P73, DOI 10.1145/3183440.3183480
   Kroher C., 2017, 217E SSE U HILD
   Kroher C, 2017, SOFTWARETECHNIK TREN, V37, P40
   Liebig Jorg, 2010, P 32 ACM IEEE INT C, V1, P105
   Linux, 2018, KCONF LANG
   Linux, 2019, LIN KERN MAK
   Lity S, 2016, PROCEEDINGS OF THE 7TH INTERNATIONAL WORKSHOP ON FEATURE-ORIENTED SOFTWARE DEVELOPMENT (FOSD'16), P39, DOI 10.1145/3001867.3001872
   Lity S, 2016, LECT NOTES COMPUT SC, V9679, P3, DOI 10.1007/978-3-319-35122-3_1
   Lity S, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P530, DOI 10.1109/SANER.2015.7081871
   Liu YHA, 2003, SCI COMPUT PROGRAM, V47, P221, DOI 10.1016/S0167-6423(02)00134-X
   Livengood S, 2011, 2 INT WORKSH PROD LI, P6
   Lüdemann D, 2015, IEEE INT WORK C SO, P211, DOI 10.1109/SCAM.2015.7335417
   Meinicke J., 2014, P 18 INT SOFTW PROD, P94, DOI DOI 10.1145/2647908.2655972
   Mendonca Marcilio, 2009, SPLC' 09, P231
   Michalik B, 2011, 2011 9TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P290, DOI 10.1109/WICSA.2011.45
   Mukelabai M, 2018, IEEE INT CONF AUTOM, P155, DOI 10.1145/3238147.3238201
   Nadi S, 2015, IEEE T SOFTWARE ENG, V41, P820, DOI 10.1109/TSE.2015.2415793
   Nadi S, 2014, J SOFTW-EVOL PROC, V26, P730, DOI 10.1002/smr.1595
   Nadi S, 2012, EUR CON SFTWR MTNCE, P107, DOI 10.1109/CSMR.2012.21
   Neves L, 2015, J SYST SOFTWARE, V106, P42, DOI 10.1016/j.jss.2015.04.024
   Neves L, 2011, GPCE 11: PROCEEDINGS OF THE TENTH INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING AND COMPONENT ENGINEERING, P33
   Paskevicius P, 2012, COMM COM INF SC, V319, P108
   Passos L, 2016, EMPIR SOFTW ENG, V21, P1744, DOI 10.1007/s10664-015-9364-x
   Ribeiro M, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P989, DOI 10.1145/2568225.2568289
   Sabouri H, 2011, 4 IPM INT C FUND SOF, P351
   Sabouri H, 2011, 8 INT S FORM ASP COM, P296
   Sabouri H, 2014, SCI COMPUT PROGRAM, V83, P35, DOI 10.1016/j.scico.2013.06.009
   Sampaio G., 2016, 20 INT SYSTEMS SOFTW, P124, DOI [10.1145/2934466.2934482, DOI 10.1145/2934466.2934482]
   Sat4j Team, 2021, SAT4J
   Schmid K, 2013, IEEE SOFTWARE, V30, P24, DOI 10.1109/MS.2013.83
   Schröter R, 2016, PROC INT CONF SOFTW, P667, DOI 10.1145/2884781.2884823
   Silverman B. W., 1986, DENSITY ESTIMATION S, P175, DOI DOI 10.1007/978-1-4899-3324-9
   Szabó T, 2021, PROCEEDINGS OF THE 42ND ACM SIGPLAN INTERNATIONAL CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '21), P1, DOI 10.1145/3453483.3454026
   Szabó T, 2016, IEEE INT CONF AUTOM, P320, DOI 10.1145/2970276.2970298
   Tartler R, 2011, EUROSYS 11: PROCEEDINGS OF THE EUROSYS 2011 CONFERENCE, P47
   Teixeira Leopoldo, 2020, Formal Methods: Foundations and Applications. 23rd Brazilian Symposium, SBMF 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12475), P210, DOI 10.1007/978-3-030-63882-5_13
   Thüm T, 2014, ACM COMPUT SURV, V47, DOI 10.1145/2580950
   Thüm T, 2019, 23RD INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE(SPLC 2019), VOL B, P57, DOI 10.1145/3307630.3342414
   Torvalds Linus, 2020, LINUX KERNEL SOURCE
   VAMOS/CADOS Team, 2015, UND
   Weiser M., 1981, 5th International Conference on Software Engineering, P439
   Yazdanshenas AR, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P119, DOI 10.1109/ICSM.2012.6405262
NR 81
TC 3
Z9 4
U1 0
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAY
PY 2022
VL 27
IS 3
AR 68
DI 10.1007/s10664-021-10090-6
PG 41
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZV2BV
UT WOS:000770339500016
OA hybrid
DA 2024-07-18
ER

PT J
AU Noei, E
   Lyons, K
AF Noei, Ehsan
   Lyons, Kelly
TI A study of gender in user reviews on the Google Play Store
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Review
DE Empirical study; Gender; Mobile app; App store
ID PARTICIPATION
AB User reviews that are posted on the Google Play Store provide app developers with important information such as bug reports, feature requests, and user experience. Developers should maintain their apps while taking user feedback into account to succeed in the competitive market of mobile apps. the Google Play Store provides a star-rating mechanism for users to rate apps on a scale of one to five. Apps that are ranked higher and have higher star ratings are more likely to be downloaded. In this paper, we investigate and compare men's and women's participation in user reviews that are posted on the Google Play Store. We analyze 438,707 user reviews of the top 156 Android apps over six months. We find that women give higher star ratings and use more positive sentiment in their reviews than men. Furthermore, women's reviews receive more likes and are ranked higher in the top 10 by the Google Play Store. For the reviews from which user gender can be inferred, we find that men submit more reviews than women, making reviews by men more likely to be visible to app developers and other users. Past research has shown that app developers respond more to negative reviews with fewer stars. We found that developers respond to a greater percentage of men's reviews than women's. The small number of and more positive reviews by women are less likely to be addressed by app developers; thus, the resulting changes to apps will align more with the needs of men users, perhaps causing even less participation by women in the Google Play Store reviews. Our findings suggest that developers should take gender into consideration when responding to reviews to help mitigate a feedback loop of bias. Our observations also suggest a need for future research in this area to understand the motivations of men and women in reviewing apps and how developers respond to reviews.
C1 [Noei, Ehsan] Univ Toronto, Toronto, ON, Canada.
   [Lyons, Kelly] Univ Toronto, Fac Informat, Toronto, ON, Canada.
C3 University of Toronto; University of Toronto
RP Noei, E (corresponding author), Univ Toronto, Toronto, ON, Canada.
EM e.noei@utoronto.ca; kelly.lyons@utoronto.ca
OI Noei, Ehsan/0000-0001-7192-4604
FU NSERC Strategic Partnership Grant; NSERC Discovery Grants; NSERC
   Collaborative Research and Development Grant; SAP, two NSERC Engage
   Grants; MITACS Accelerate Grants; SSHRC Knowledge Synthesis Grant; two
   University of Toronto/UCL research grants; IBM Smarter Planet Faculty
   Innovation Grant; IBM Advanced Studies grant; GRAND Networks of Centres
   of Excellence (NCE)
FX Dr. Kelly Lyons is a Professor in the Faculty of Information at the
   University of Toronto with a cross appointment to the Department of
   Computer Science. Prior to joining the Faculty of Information, she was
   the Program Director of the IBM Toronto Lab Centre for Advanced Studies
   (CAS). Her current research interests include service science, knowledge
   mobilization, data science, social media, collaborative work, and
   software engineering. From 2015 to 2020, Kelly served as Associate Dean,
   Academic in the Faculty of Information. From 2020 to 2021, Kelly is
   serving as the Dean's Advisor on Pandemic Planning and Response. Kelly
   has co-authored several papers, served on program committees for
   conferences, given many keynote and invited presentations, and
   co-chaired several workshops. She has been the recipient of an NSERC
   Strategic Partnership Grant, NSERC Discovery Grants, an NSERC
   Collaborative Research and Development Grant with SAP, two NSERC Engage
   Grants (with Sciencescape and Dell), MITACS Accelerate Grants (with CA,
   IBM, and Cerebri AI), a SSHRC Knowledge Synthesis Grant, two University
   of Toronto/UCL research grants, an IBM Smarter Planet Faculty Innovation
   Grant, an IBM Advanced Studies grant, and has received funding through
   the GRAND Networks of Centres of Excellence (NCE). Kelly is an IBM
   Faculty Fellow and a Faculty Affiliate of the Schwartz Reisman Institute
   for Technology and Society. She is currently on the Board of
   CS-Can/Info-Can and on the Board of the Informs Service Science Section.
   From 2008 to 2012, she was aMember-at-Large of the ACM Council and a
   member of the Executive Council of ACM-W.
CR Abu Bakar Normi Sham Awang, 2013, 2013 International Conference on Advanced Computer Science Applications and Technologies (ACSAT), P406, DOI 10.1109/ACSAT.2013.86
   [Anonymous], 2006, Proceedings of the 2006 Conference on Empirical Methods in Natural Language Processing (EMNLP 2006), DOI DOI 10.3115/1610075.1610135
   [Anonymous], 2007, GUIDE ADV EMPIRICAL
   [Anonymous], 2011, Proceedings of the 2011 Conference on Empirical Methods in Natural Language Processing
   [Anonymous], 2012, Proceedings of the ACM 2012 conference on computer supported cooperative work
   [Anonymous], 2003, Text, DOI [10.1515/text.2003.014, DOI 10.1515/TEXT.2003.014]
   [Anonymous], 2005, APPL LINEAR REGRESSI
   [Anonymous], ARE MEN WOMEN USING
   Asiri O, 2018, LECT NOTES COMPUT SC, V10902, P481, DOI 10.1007/978-3-319-91244-8_38
   Basili V. R., 1992, Technical Report
   Bavota G, 2015, IEEE T SOFTWARE ENG, V41, P384, DOI 10.1109/TSE.2014.2367027
   Benjamini Y, 2001, ANN STAT, V29, P1165
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Bolboaca SD, 2011, INFORMATION, V2, P528, DOI 10.3390/info2030528
   Carreño LVG, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P582, DOI 10.1109/ICSE.2013.6606604
   Collier B., 2012, Proceedings of the ACM 2012 Conference on Computer Supported Cooperative Work, P383, DOI [DOI 10.1145/2145204.2145265, 10.1145/2145204.2145265]
   De Marneffe M.-C., 2006, LREC, V6, P449
   DEVEAUD R, 2014, DOCUMENT NUMERIQUE, V0017
   Fink C., 2012, P 6 INT AAAI C WEBL, V6, P459
   Foltz P. W., 1999, WORLD C ED MULT HYP, P939
   Ford D, 2017, S VIS LANG HUM CEN C, P239, DOI 10.1109/VLHCC.2017.8103473
   Fu B, 2013, 19TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'13), P1276
   Google, 2020, GOOGL PLAY STOR CAT
   Guzman E, 2014, INT REQUIR ENG CONF, P153, DOI 10.1109/RE.2014.6912257
   Hannák A, 2017, CSCW'17: PROCEEDINGS OF THE 2017 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING, P1914, DOI 10.1145/2998181.2998327
   Harman M., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P108, DOI 10.1109/MSR.2012.6224306
   Harrell F.E., 2001, Regression modeling strategies: with applications to linear models, logistic regression, and survival analysis
   Harrell FE., 2020, HMISC HARRELL MISCEL
   Hong C, 2017, COMPUT HUM BEHAV, V68, P292, DOI 10.1016/j.chb.2016.11.048
   Iacob C, 2013, IEEE WORK CONF MIN S, P41, DOI 10.1109/MSR.2013.6624001
   Ibrahim H, 2019, JAMA NETW OPEN, V2, DOI 10.1001/jamanetworkopen.2019.16222
   Islam MR, 2017, IEEE WORK CONF MIN S, P203, DOI 10.1109/MSR.2017.9
   Jazzy, 2017, JAZZ SPELL CHECK
   Karimi F, 2016, PROCEEDINGS OF THE 25TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'16 COMPANION), P53, DOI 10.1145/2872518.2889385
   Khalid H, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P610, DOI 10.1145/2635868.2635909
   Khalid H, 2015, IEEE SOFTWARE, V32, P70, DOI 10.1109/MS.2014.50
   Kim H.W., 2011, 11 INT DSI 16 APDSI
   Kübler R, 2018, J MARKETING, V82, P20, DOI 10.1509/jm.16.0140
   Lakoff G., 1975, Contemporary research in philosophical logic and linguistic semantics, P221
   Lakoff Robin T., 1973, LANGUAGE SOC, V2, P45, DOI [10.1017/S0047404500000051, DOI 10.1017/S0047404500000051]
   Linares-Vasquez Mario, 2013, P 2013 9 JOINT M FDN, P477, DOI DOI 10.1145/2491411.2491428
   LOVINS JB, 1968, MECH TRANSL, V11, P22
   Manning CD, 2014, PROCEEDINGS OF 52ND ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: SYSTEM DEMONSTRATIONS, P55, DOI 10.3115/v1/p14-5010
   Martin W, 2017, IEEE T SOFTWARE ENG, V43, P817, DOI 10.1109/TSE.2016.2630689
   Martin W, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P123, DOI 10.1109/MSR.2015.19
   May A, 2019, EMPIR SOFTW ENG, V24, P1997, DOI 10.1007/s10664-019-09685-x
   McClave JT., 2006, STAT TECHNOLOGY MANU
   Mcmillan C, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2522920.2522930
   Merchant A, 2019, WEB CONFERENCE 2019: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2019), P3086, DOI 10.1145/3308558.3313583
   Mukherjee S, 2017, INF SYST E-BUS MANAG, V15, P117, DOI 10.1007/s10257-016-0312-0
   Nguyen T.N. D., 2010, Proceedings of the International Conference on Software Maintenance, P1, DOI DOI 10.1109/ICSM.2010.5609560
   Niu HR, 2017, EMPIR SOFTW ENG, V22, P259, DOI 10.1007/s10664-015-9421-5
   Noei E, 2018, THESIS QUEENS U CANA
   Noei E., 2019, P 29 ANN INT C COMP, P54
   Noei E, 2019, IEEE T SOFTWARE ENG
   Noei E, 2019, EMPIR SOFTW ENG, V24, P1964, DOI 10.1007/s10664-019-09684-y
   Noei E, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P283, DOI 10.1145/3236024.3236044
   Nord C., 2005, TEXT ANAL TRANSLATIO, P94
   Otterbacher J., 2010, P 19 ACM C INF KNOWL, P369, DOI DOI 10.1145/1871437.1871487
   Palomba F, 2015, PROC IEEE INT CONF S, P291, DOI 10.1109/ICSM.2015.7332475
   Panichella A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P522, DOI 10.1109/ICSE.2013.6606598
   Panichella S, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P1023, DOI 10.1145/2950290.2983938
   Pinheiro J., 2007, NLME LINEAR NONLINEA
   Raftery AE., 1992, BAYESIAN STAT, V4, P763, DOI DOI 10.21236/ADA640705
   Rajaraman A., 2012, Mining of massive datasets, V77
   Ruiz IJM, 2016, IEEE SOFTWARE, V33, P86, DOI 10.1109/MS.2015.56
   Scheuerman Morgan Klaus, 2019, UMBC Faculty Collection
   Smith BN, 2013, ACM-IEEE J CONF DIG, P199
   Statista, 2020, Number of Apps Available in Leading App Stores 2019
   Stephens M, 2013, GEOJOURNAL, V78, P981, DOI 10.1007/s10708-013-9492-z
   Terrell J, 2017, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.111
   Tian Y, 2015, PROC IEEE INT CONF S, P301, DOI 10.1109/ICSM.2015.7332476
   Topaz CM, 2016, PLOS ONE, V11, DOI 10.1371/journal.pone.0161357
   Ugoni A, 1995, COMSIG Rev, V4, P61
   Van Solingen Rini, 2002, ENCY SOFTWARE ENG, V2002, P528
   Vasa R., 2012, AUSTR COMP HUM INT C, P241, DOI DOI 10.1145/2414536.2414577
   Vasilescu B, 2014, INTERACT COMPUT, V26, P488, DOI 10.1093/iwc/iwt047
   Villarroel L, 2016, PROC INT CONF SOFTW, P14, DOI 10.1145/2884781.2884818
   Wachs J., 2017, 11 INT AAAI C WEB SO
   Wagner C, 2016, EPJ DATA SCI, V5, DOI 10.1140/epjds/s13688-016-0066-4
   Wais K, 2016, R J, V8, P17
   백영미, 2013, International Journal of Contents, V9, P35, DOI 10.5392/IJoC.2013.9.4.035
NR 82
TC 3
Z9 3
U1 2
U2 7
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2022
VL 27
IS 2
AR 34
DI 10.1007/s10664-021-10080-8
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA XS5IZ
UT WOS:000732943800001
DA 2024-07-18
ER

PT J
AU Chen, C
   Peng, X
   Chen, BH
   Sun, J
   Xing, ZC
   Wang, X
   Zhao, WY
AF Chen, Chi
   Peng, Xin
   Chen, Bihuan
   Sun, Jun
   Xing, Zhenchang
   Wang, Xin
   Zhao, Wenyun
TI "More Than Deep Learning": post-processing for API sequence
   recommendation
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE API; Recommendation; Deep learning; Encoder-decoder; Post-processing
ID CODE COMPLETION
AB In the daily development process, developers often need assistance in finding a sequence of APIs to accomplish their development tasks. Existing deep learning models, which have recently been developed for recommending one single API, can be adapted by using encoder-decoder models together with beam search to generate API sequence recommendations. However, the generated API sequence recommendations heavily rely on the probabilities of API suggestions at each decoding step, which do not take into account other domain-specific factors (e.g., whether an API suggestion satisfies the program syntax and how diverse the API sequence recommendations are). Moreover, it is difficult for developers to find similar API sequence recommendations, distinguish different API sequence recommendations, and make a selection when the API sequence recommendations are ordered by probabilities. Thus, what we need is more than deep learning. In this paper, we propose an approach, named Cook, to combine deep learning models with post-processing strategies for API sequence recommendation. Specifically, we enhance beam search with code-specific heuristics to improve the quality of API sequence recommendations. We develop a clustering algorithm to cluster API sequence recommendations so as to make it easier for developers to find similar API sequence recommendations and distinguish different API sequence recommendations. We also propose a method to generate a summary for each cluster to help developers understand the API sequence recommendations. Our evaluation results have shown that (1) three deep learning models with our heuristic-enhanced beam search achieved better performance than with the original beam search in terms of CIDEr-1, CIDEr-5 and CIDEr-10 scores, with an average improvement of 1.8, 2.3 and 2.3, respectively; and (2) our clustering algorithm achieved high performance on six metrics and outperformed two variant clustering algorithms. Moreover, our user study with 24 participants shows that Cook can help developers accomplish programming tasks faster and pass more test cases, and the participants confirm that clusters and summaries indeed help them understand and select the correct API sequence recommendations.
C1 [Chen, Chi; Peng, Xin; Chen, Bihuan; Wang, Xin; Zhao, Wenyun] Fudan Univ, Sch Comp Sci, Shanghai, Peoples R China.
   [Chen, Chi; Peng, Xin; Chen, Bihuan; Wang, Xin; Zhao, Wenyun] Fudan Univ, Shanghai Key Lab Data Sci, Shanghai, Peoples R China.
   [Sun, Jun] Singapore Management Univ, Singapore, Singapore.
   [Xing, Zhenchang] Australian Natl Univ, Canberra, ACT, Australia.
C3 Fudan University; Fudan University; Singapore Management University;
   Australian National University
RP Peng, X (corresponding author), Fudan Univ, Sch Comp Sci, Shanghai, Peoples R China.; Peng, X (corresponding author), Fudan Univ, Shanghai Key Lab Data Sci, Shanghai, Peoples R China.
EM pengxin@fudan.edu.cn
RI zhang, xu/JEO-4879-2023; Tan, Wei/KBB-7333-2024
OI Peng, Xin/0000-0003-3376-2581
FU National Natural Science Foundation of China [61972098]
FX This work is supported by National Natural Science Foundation of China
   under Grant No. 61972098.
CR Ai L, 2019, P INT COMP SOFTW APP, P27, DOI 10.1109/COMPSAC.2019.00014
   Allamanis M, 2013, IEEE WORK CONF MIN S, P207, DOI 10.1109/MSR.2013.6624029
   Alnusair A, 2010, EFFECTIVE API NAVIGA
   Nguyen AT, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P323, DOI 10.1109/SANER.2018.8330220
   Nguyen AT, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P511, DOI 10.1145/2950290.2950333
   Nguyen AT, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P858, DOI 10.1109/ICSE.2015.336
   Nguyen AT, 2012, PROC INT CONF SOFTW, P69, DOI 10.1109/ICSE.2012.6227205
   Asaduzzaman M, 2016, J SOFTW-EVOL PROC, V28, P512, DOI 10.1002/smr.1791
   Bahdanau D, 2016, Arxiv, DOI [arXiv:1409.0473, 10.48550/arXiv.1409.0473]
   Brin S, 1998, COMPUT NETWORKS ISDN, V30, P107, DOI 10.1016/S0169-7552(98)00110-X
   Bruch M, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P213, DOI 10.1145/1595696.1595728
   Cambronero J, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P964, DOI 10.1145/3338906.3340458
   Chakraborty S, 2020, IEEE T SOFTW ENG, P1
   Chen C, 2022, INT J PAVEMENT ENG, V23, P3274, DOI 10.1080/10298436.2021.1888092
   Chen C, 2019, SCI CHINA INFORM SCI, V62, DOI 10.1007/s11432-018-9821-9
   Chen ZM, 2021, IEEE T SOFTWARE ENG, V47, P1943, DOI 10.1109/TSE.2019.2940179
   Dam Hoa Khanh, 2016, arXiv
   Daqing Hou, 2011, 2011 IEEE 27th International Conference on Software Maintenance, P233, DOI 10.1109/ICSM.2011.6080790
   Fowkes J, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P254, DOI 10.1145/2950290.2950319
   FOWLKES EB, 1983, J AM STAT ASSOC, V78, P553, DOI 10.2307/2288117
   Gu XD, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P933, DOI 10.1145/3180155.3180167
   Gu XD, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P631, DOI 10.1145/2950290.2950334
   Hill R, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P228, DOI 10.1109/ASE.2004.1342740
   Hindle A, 2012, PROC INT CONF SOFTW, P837, DOI 10.1109/ICSE.2012.6227135
   Hou Daqing, 2010, P 2 INT WORKSHOP REC, P26
   Huang Y, 2018, IEEE INT CONF AUTOM, P214, DOI 10.1145/3238147.3238208
   HUBERT L, 1985, J CLASSIF, V2, P193, DOI 10.1007/BF01908075
   Kim K, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P946, DOI 10.1145/3180155.3180187
   Krugler K., 2013, Finding Source Code on the Web for Remix and Reuse, P103
   Li J, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P4159
   Li Y., 2016, ICLR, P1, DOI DOI 10.48550/ARXIV.1511.05493
   Liu XY, 2018, IEEE INT CONF AUTOM, P282, DOI 10.1145/3238147.3238216
   Long MS, 2018, ADV NEUR IN, V31
   Luan SF, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360578
   Mandelin D, 2005, ACM SIGPLAN NOTICES, V40, P48, DOI 10.1145/1064978.1065018
   McHugh ML, 2012, BIOCHEM MEDICA, V22, P276, DOI 10.11613/bm.2012.031
   Nguyen T.T., 2013, P 2013 9 JOINT M FDN, P532, DOI DOI 10.1145/2491411.2491458
   Nguyen TT, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P383, DOI 10.1145/1595696.1595767
   Pletcher DM, 2009, PROC IEEE INT CONF S, P393, DOI 10.1109/ICSM.2009.5306289
   Raychev V, 2014, ACM SIGPLAN NOTICES, V49, P419, DOI [10.1145/2594291.2594321, 10.1145/2666356.2594321]
   Rosenberg A, 2007, P 2007 JOINT C EMP M, P410, DOI [10 . 7916 / D80V8N84, DOI 10.7916/D80V8N84]
   ROUSSEEUW PJ, 1987, J COMPUT APPL MATH, V20, P53, DOI 10.1016/0377-0427(87)90125-7
   Sachdev S, 2018, MAPL'18: PROCEEDINGS OF THE 2ND ACM SIGPLAN INTERNATIONAL WORKSHOP ON MACHINE LEARNING AND PROGRAMMING LANGUAGES, P31, DOI 10.1145/3211346.3211353
   Son Nguyen, 2019, 2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE). Proceedings, P710, DOI 10.1109/ASE.2019.00072
   Svyatkovskiy A, 2019, KDD'19: PROCEEDINGS OF THE 25TH ACM SIGKDD INTERNATIONAL CONFERENCCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P2727, DOI 10.1145/3292500.3330699
   Terada K, 2019, 2019 IEEE 11TH INTERNATIONAL WORKSHOP ON COMPUTATIONAL INTELLIGENCE AND APPLICATIONS (IWCIA 2019), P109, DOI [10.1109/iwcia47330.2019.8955090, 10.1109/IWCIA47330.2019.8955090]
   Tu ZP, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P269, DOI 10.1145/2635868.2635875
   Tufano M, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3340544
   Tufano M, 2019, PROC INT CONF SOFTW, P25, DOI 10.1109/ICSE.2019.00021
   Vaswani A, 2017, ADV NEUR IN, V30
   Vedantam R, 2015, PROC CVPR IEEE, P4566, DOI 10.1109/CVPR.2015.7299087
   Vinh NX, 2010, J MACH LEARN RES, V11, P2837
   Wang J, 2013, IEEE WORK CONF MIN S, P319, DOI 10.1109/MSR.2013.6624045
   White M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P334, DOI 10.1109/MSR.2015.38
   Yan Jinpei, 2018, 30 INT C SOFTW ENG K, P137, DOI [DOI 10.18293/SEKE2018-193, 10.18293/SEKE2018-193]
   Yang Y., 2019, P 31 INT C SOFTWARE, P675, DOI DOI 10.18293/SEKE2019-057
   Yang YX, 2019, INT J SOFTW ENG KNOW, V29, P1801, DOI 10.1142/S0218194019400229
   Yang YX, 2017, IEEE INT CONF AUTOM, P682, DOI 10.1109/ASE.2017.8115678
   Yang Yixiao., 2019, 31st int. conf. software engineering and knowledge engineering, P667
   Zhong H, 2009, LECT NOTES COMPUT SC, V5653, P318, DOI 10.1007/978-3-642-03013-0_15
NR 60
TC 3
Z9 3
U1 1
U2 22
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN
PY 2022
VL 27
IS 1
AR 15
DI 10.1007/s10664-021-10040-2
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WO2JZ
UT WOS:000712287300002
OA Green Accepted
DA 2024-07-18
ER

PT J
AU da Costa, JAS
   Gheyi, R
   Ribeiro, M
   Apel, S
   Vander Alves
   Fonseca, B
   Medeiros, F
   Garcia, A
AF Silva da Costa, Jose Aldo
   Gheyi, Rohit
   Ribeiro, Marcio
   Apel, Sven
   Vander Alves
   Fonseca, Baldoino
   Medeiros, Flavio
   Garcia, Alessandro
TI Evaluating refactorings for disciplining #ifdef annotations: An eye
   tracking study with novices
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Refactoring; #ifdefs; Eye tracking; Code comprehension; Disciplined
   annotations; Undisciplined annotations
ID C PREPROCESSOR; MOVEMENTS
AB The C preprocessor is widely used in practice. Conditional compilation with #ifdef annotations allows developers to flexibly introduce variability in their programs. Developers can use disciplined annotations, entirely enclosing full statements with preprocessor directives, or undisciplined ones, enclosing only parts of the statements. Despite some debate, there is no consensus on whether a developer should use exclusively disciplined annotations. While one prior study found undisciplined annotations more time-consuming and error-prone, another study found no difference between disciplined and undisciplined annotations regarding task completion time and accuracy. In this article, we evaluate whether three fine-grained refactorings to discipline #ifdef annotations correlate with improvements in code comprehension and visual effort with an eye tracker. We conduct a controlled experiment with 64 human subjects who were majoritarily novices in the C programming language. We observed statistically significant differences for two refactorings to discipline annotations with respect to the analyzed metrics (time, fixation duration, fixation count, and regressions count) in the code regions changed by each refactoring.
C1 [Silva da Costa, Jose Aldo; Gheyi, Rohit] Univ Fed Campina Grande, Campina Grande, Paraiba, Brazil.
   [Ribeiro, Marcio; Fonseca, Baldoino] Univ Fed Alagoas, Maceio, Alagoas, Brazil.
   [Apel, Sven] Saarland Univ, Saarland Informat Campus, Saarbrucken, Germany.
   [Vander Alves] Univ Brasilia, Brasilia, DF, Brazil.
   [Medeiros, Flavio] Fed Inst Alagoas, Maceio, Alagoas, Brazil.
   [Garcia, Alessandro] Pontifical Catholic Univ Rio de Janeiro, Rio De Janeiro, Brazil.
C3 Universidade Federal de Campina Grande; Universidade Federal de Alagoas;
   Saarland University; Universidade de Brasilia; Instituto Federal de
   Alagoas (IFAL); Pontificia Universidade Catolica do Rio de Janeiro
RP da Costa, JAS (corresponding author), Univ Fed Campina Grande, Campina Grande, Paraiba, Brazil.
EM josealdo@copin.ufcg.edu.br; rohit@dsc.ufcg.edu.br; marcio@ic.ufal.br;
   apel@cs.uni-saarland.de; valves@unb.br; baldoino@ic.ufal.br;
   flavio.medeiros@ifal.edu.br; afgarcia@inf.puc-rio.br
RI Fonseca, Baldoino/JUV-2819-2023
OI Fonseca, Baldoino/0000-0002-0730-0319; Silva da Costa, Jose
   Aldo/0000-0001-8918-1749
FU CAPES [117875, 175956]; FAPEAL [60030.0000000462/2020]; CNPq
   [426005/2018-0, 421306/2018-1, 309844/2018-5, 311442/2019-6,
   310757/2018-5, 427787/2018-1]; FAPDF [00193-00000926/2019-67]
FX We would like to thank the anonymous reviewers, Rafael Mello, and
   Rodrigo Bonifacio for their insightful comments. This work was partially
   supported by CAPES (117875 and 175956), FAPEAL (60030.0000000462/2020),
   CNPq (426005/2018-0, 421306/2018-1, 309844/2018-5, 311442/2019-6,
   310757/2018-5, 427787/2018-1), and FAPDF (00193-00000926/2019-67).
CR Aldo J, 2021, EVALUATING REFACTORI
   [Anonymous], P 29 EUR C OBJ OR PR
   [Anonymous], 2013, P 12 INT C GEN PROGR
   [Anonymous], 2012, 20 IEEE INT C PROGR
   Basili V. R., 1994, Encyclopedia of Software Engineering, V1, P528
   Bednarik R., 2006, Proceedings. ETRA 2006. Symposium on Eye Tracking Research and Applications, P125, DOI 10.1145/1117309.1117356
   Binkley D, 2013, EMPIR SOFTW ENG, V18, P219, DOI 10.1007/s10664-012-9201-4
   Binkley D, 2009, SCI COMPUT PROGRAM, V74, P430, DOI 10.1016/j.scico.2009.02.006
   Box G., 2005, Statistics for Experimenters, VSecond
   Busjahn T, 2015, EYE MOVEMENTS PROGRA
   Busjahn T, 2015, INT C PROGRAM COMPRE, P255, DOI 10.1109/ICPC.2015.36
   Busjahn Teresa, 2011, P 11 KOL CALL INT C, p1s9
   Charness G, 2012, J ECON BEHAV ORGAN, V81, P1, DOI 10.1016/j.jebo.2011.08.009
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Cohen J., 1988, STAT POWER ANAL BEHA
   Crosby M. E., 1990, Computer, V23, P25, DOI 10.1109/2.48797
   Crosby Martha E., 2002, PPIG, P5
   Ernst MD, 2002, IEEE T SOFTWARE ENG, V28, P1146, DOI 10.1109/TSE.2002.1158288
   Fenske W., 2020, P INT C SOFTW MAINT
   Galley N., 2015, Advances in visual perception research, P83
   Garrido A, 2013, J SOFTW-EVOL PROC, V25, P1285, DOI 10.1002/smr.1603
   Guarnera D., 2018, P S EYE TRACK RES AP
   Hansen DW, 2010, IEEE T PATTERN ANAL, V32, P478, DOI 10.1109/TPAMI.2009.30
   Hermens F, 2015, VISION RES, V113, P87, DOI 10.1016/j.visres.2015.05.019
   Jadhav A, 2019, APPL ARTIF INTELL, V33, P913, DOI 10.1080/08839514.2019.1637138
   Kenneth HolmqvistMarcus Nystrom., 2011, Eye Tracking: A Comprehensive Guide to Methods and Measures
   Kleinke K, 2017, J EDUC BEHAV STAT, V42, P371, DOI 10.3102/1076998616687084
   Liebig Jorg, 2011, AOSD 11
   Malaquias R, 2017, INT C PROGRAM COMPRE, P297, DOI 10.1109/ICPC.2017.41
   Medeiros F, 2018, IEEE T SOFTWARE ENG, V44, P453, DOI 10.1109/TSE.2017.2688333
   Melo J, 2017, INT C PROGRAM COMPRE, P34, DOI 10.1109/ICPC.2017.34
   Melo J, 2016, PROC INT CONF SOFTW, P679, DOI 10.1145/2884781.2884831
   Nyström M, 2010, BEHAV RES METHODS, V42, P188, DOI 10.3758/BRM.42.1.188
   Obaidellah U, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3145904
   Oliveira D., 2020, P INT C SOFTW MAINT
   Rayner K, 1998, PSYCHOL BULL, V124, P372, DOI 10.1037/0033-2909.124.3.372
   RAYNER K, 1978, PSYCHOL BULL, V85, P618, DOI 10.1037/0033-2909.85.3.618
   Salvucci DD, 2000, 2000 S EYE TRACKING, P71, DOI [10.1145/355017.355028, DOI 10.1145/355017.355028]
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   Sharafi Z, 2020, EMPIR SOFTW ENG, V25, P3128, DOI 10.1007/s10664-020-09829-4
   Sharafi Z, 2015, ASIA PAC SOFWR ENG, P96, DOI 10.1109/APSEC.2015.53
   Shard B., 2012, P S EYE TRACK RES AP, P381
   Sharif Bonita, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P196, DOI 10.1109/ICPC.2010.41
   Sheskin D.J., 2011, Handbook of Parametric and Nonparametric Statistical Procedures, DOI DOI 10.1201/9780429186196
   SPENCER H, 1992, PROCEEDINGS OF THE SUMMER 1992 USENIX CONFERENCE, P185
   Strauss E, 1998, CLIN ORTHOP RELAT R, P2
   Turner R., 2014, P S EYE TRACK RES AP, P231
   Uwano H., 2005, Eye Tracking Research and Applications Symposium (ETRA), V2005, P133
NR 48
TC 4
Z9 4
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2021
VL 26
IS 5
AR 92
DI 10.1007/s10664-021-10002-8
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA TG3ZW
UT WOS:000671346900001
PM 34248397
OA Green Published, Bronze
DA 2024-07-18
ER

PT J
AU Prana, GAA
   Sharma, A
   Shar, LK
   Foo, D
   Santosa, AE
   Sharma, A
   Lo, D
AF Prana, Gede Artha Azriadi
   Sharma, Abhishek
   Shar, Lwin Khin
   Foo, Darius
   Santosa, Andrew E.
   Sharma, Asankhaya
   Lo, David
TI Out of sight, out of mind? How vulnerable dependencies affect
   open-source projects
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Empirical study; Security; Software composition analysis
AB Context Software developers often use open-source libraries in their project to improve development speed. However, such libraries may contain security vulnerabilities, and this has resulted in several high-profile incidents in recent years. As usage of open-source libraries grows, understanding of these dependency vulnerabilities becomes increasingly important. Objective In this work, we analyze vulnerabilities in open-source libraries used by 450 software projects written in Java, Python, and Ruby. Our goal is to examine types, distribution, severity, and persistence of the vulnerabilities, along with relationships between their prevalence and project as well as commit attributes. Method Our data is obtained by scanning versions of the sample projects after each commit made between November 1, 2017 and October 31, 2018 using an industrial software composition analysis tool, which provides information such as library names and versions, dependency types (direct or transitive), and known vulnerabilities. Results Among other findings, we found that project activity level, popularity, and developer experience do not translate into better or worse handling of dependency vulnerabilities. We also found "Denial of Service" and "Information Disclosure" types of vulnerabilities being common across the languages studied. Further, we found that most dependency vulnerabilities persist throughout the observation period (mean of 78.4%, 97.7%, and 66.4% for publicly-known vulnerabilities in our Java, Python, and Ruby datasets respectively), and the resolved ones take 3-5 months to fix. Conclusion Our results highlight the importance of managing the number of dependencies and performing timely updates, and indicate some areas that can be prioritized to improve security in wide range of projects, such as prevention and mitigation of Denial-of-Service attacks.
C1 [Prana, Gede Artha Azriadi; Shar, Lwin Khin; Lo, David] Singapore Management Univ, Singapore, Singapore.
   [Sharma, Abhishek; Santosa, Andrew E.; Sharma, Asankhaya] Veracode, Singapore, Singapore.
   [Foo, Darius] Natl Univ Singapore, Singapore, Singapore.
C3 Singapore Management University; National University of Singapore
RP Prana, GAA (corresponding author), Singapore Management Univ, Singapore, Singapore.
EM arthaprana.2016@phdis.smu.edu.sg; absharma@veracode.com;
   lkshar@smu.edu.sg; dariusf@comp.nus.edu.sg; asantosa@veracode.com;
   asharma@veracode.com; davidlo@smu.edu.sg
RI Lo, David/A-2493-2012
OI Lo, David/0000-0002-4367-7201; Prana, Gede Artha
   Azriadi/0000-0003-3759-5661; Shar, Lwin Khin/0000-0001-5130-0407
FU National Research Foundation, Singapore; National University of
   Singapore through its National Satellite of Excellence in Trustworthy
   Software Systems (NSOETSS) office under the Trustworthy Computing for
   Secure Smart Nation Grant (TCSSNG) award [NSOETSS2020-02]
FX This project is supported by the National Research Foundation, Singapore
   and National University of Singapore through its National Satellite of
   Excellence in Trustworthy Software Systems (NSOETSS) office under the
   Trustworthy Computing for Secure Smart Nation Grant (TCSSNG) award no.
   NSOETSS2020-02. Any opinions, findings and conclusions or
   recommendations expressed in this material are those of the author(s)
   and do not reflect the views of National Research Foundation, Singapore
   and National University of Singapore (including its National Satellite
   of Excellence in Trustworthy Software Systems (NSOE-TSS) office).
CR Abdalkareem R, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P385, DOI 10.1145/3106237.3106267
   Ali Babar M., 2018, P 51 HAW INT C SYST
   [Anonymous], 2007, Proceedings of the 3rd International Workshop on Predictor Models in Software Engineering
   [Anonymous], 2011, NEGATIVE BINOMIAL RE
   [Anonymous], 2011, PROC INT C INFR MILL, P1, DOI [DOI 10.1145/1988630.1988632, DOI 10.1109/IRMMW-THZ.2011.6105031]
   Arora A, 2005, IEEE SECUR PRIV, V3, P20, DOI 10.1109/MSP.2005.12
   Bell RM, 2013, EMPIR SOFTW ENG, V18, P478, DOI 10.1007/s10664-011-9178-4
   Bosu A, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P257, DOI 10.1145/2635868.2635880
   Cadariu M, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P516, DOI 10.1109/SANER.2015.7081868
   Camilo F, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P269, DOI 10.1109/MSR.2015.32
   Dashevskyi Stanislav, 2016, Engineering Secure Software and Systems. 8th International Symposium, ESSoS 2016. Proceedings: LNCS 9639, P190, DOI 10.1007/978-3-319-30806-7_12
   Decan A, 2019, EMPIR SOFTW ENG, V24, P381, DOI 10.1007/s10664-017-9589-y
   Decan A, 2018, IEEE WORK CONF MIN S, P181, DOI 10.1145/3196398.3196401
   Derr E, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2187, DOI 10.1145/3133956.3134059
   Devanbu P, 2016, PROC INT CONF SOFTW, P108, DOI 10.1145/2884781.2884812
   Durumeric Z, 2014, PROCEEDINGS OF THE 2014 ACM INTERNET MEASUREMENT CONFERENCE (IMC'14), P475, DOI 10.1145/2663716.2663755
   Fazzini M, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P204, DOI 10.1145/3293882.3330571
   Foo D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P791, DOI 10.1145/3236024.3275535
   Foo D, 2018, 2018 IEEE CYBERSECURITY DEVELOPMENT CONFERENCE (SECDEV 2018), P61, DOI 10.1109/SecDev.2018.00016
   GARDNER W, 1995, PSYCHOL BULL, V118, P392, DOI 10.1037/0033-2909.118.3.392
   Hoepman JH, 2007, COMMUN ACM, V50, P79, DOI 10.1145/1188913.1188921
   Jezek K, 2017, J OBJECT TECHNOL, V16, DOI 10.5381/jot.2017.16.4.a2
   Jimenez M, 2016, IEEE INT WORK C SO, P1, DOI 10.1109/SCAM.2016.15
   Kalliamvakou E., 2014, P 11 WORKING C MININ, P92, DOI DOI 10.1145/2597073.2597074
   KAPLAN EL, 1958, J AM STAT ASSOC, V53, P457, DOI 10.2307/2281868
   Kononenko O, 2016, PROC INT CONF SOFTW, P1028, DOI 10.1145/2884781.2884840
   Kula RG, 2018, EMPIR SOFTW ENG, V23, P384, DOI 10.1007/s10664-017-9521-5
   Kula RG, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P520, DOI 10.1109/SANER.2015.7081869
   Lamothe M, 2018, ARXIV181204894
   Lauinger T, 2018, COMMUN ACM, V61, P41, DOI 10.1145/3190562
   Li JY, 2009, IEEE SOFTWARE, V26, P80, DOI 10.1109/MS.2009.33
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Meneely Andrew, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P65, DOI 10.1109/ESEM.2013.19
   Meneely A., 2010, P 2010 ACM IEEE INT, P1, DOI 10.1145/1852786.1852798
   Meneely A, 2009, CCS'09: PROCEEDINGS OF THE 16TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P453
   Meng N, 2018, SECURE CODING PRACTI
   Mezzetti G, 2018, 32 EUR C OBJ OR PROG
   Muller A, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P409, DOI 10.1145/3338906.3338940
   Munaiah N, 2017, EMPIR SOFTW ENG, V22, P3219, DOI 10.1007/s10664-017-9512-6
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Neuhaus S, 2007, CCS'07: PROCEEDINGS OF THE 14TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P529
   Oment A, 2006, USENIX Association Proceedings of the 15th USENIX Security Symposium, P93
   Ostrand T. J., 2010, P 6 INT C PRED MOD S, P19, DOI [DOI 10.1145/1868328, 10.1145/1868328]
   Pashchenko I, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3268920
   Perl H, 2015, CCS'15: PROCEEDINGS OF THE 22ND ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P426, DOI 10.1145/2810103.2813604
   Rahman Akond, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P200, DOI 10.1109/MSR.2019.00040
   Ray B, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P155, DOI 10.1145/2635868.2635922
   Raymond Eric, 1999, KNOWLEDGE TECHNOLOGY, V12, P23, DOI DOI 10.1007/S12130-999-1026-0
   Seabold S, 2010, PROC 9 PYTHON SCI C
   Shahzad M, 2012, PROC INT CONF SOFTW, P771, DOI 10.1109/ICSE.2012.6227141
   Shin Y, 2013, EMPIR SOFTW ENG, V18, P25, DOI 10.1007/s10664-011-9190-8
   Shin Y, 2011, IEEE T SOFTWARE ENG, V37, P772, DOI 10.1109/TSE.2010.81
   Spadini D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P908, DOI 10.1145/3236024.3264598
   Spearman C, 1904, AM J PSYCHOL, V15, P72, DOI 10.2307/1412159
   Thung F, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P602, DOI [10.1109/SANER48275.2020.9054860, 10.1109/saner48275.2020.9054860]
   Trockman A, 2018, PROC IEEE ACM INT C, P524, DOI 10.1145/3183440.3190335
   Witten B, 2001, IEEE SOFTWARE, V18, P57, DOI 10.1109/52.951496
   Zhang Y, 2015, IEEE INT C ENG COMP, P40, DOI 10.1109/ICECCS.2015.15
   Zhou YQ, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P914, DOI 10.1145/3106237.3117771
   Zimmermann M, 2019, PROCEEDINGS OF THE 28TH USENIX SECURITY SYMPOSIUM, P995
   Zimmermann Thomas, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P421, DOI 10.1109/ICST.2010.32
NR 61
TC 27
Z9 30
U1 0
U2 10
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2021
VL 26
IS 4
AR 59
DI 10.1007/s10664-021-09959-3
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RS6YZ
UT WOS:000643923500002
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Ahmed, T
   Devanbu, P
   Hellendoorn, VJ
AF Ahmed, Toufique
   Devanbu, Premkumar
   Hellendoorn, Vincent J.
TI Learning lenient parsing & typing via indirect supervision
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Program repair; Naturalness; Deep learning
AB Both professional coders and teachers frequently deal with imperfect (fragmentary, incomplete, ill-formed) code. Such fragments are common in StackOverflow; students also frequently produce ill-formed code, for which instructors, TAs (or students themselves) must find repairs. In either case, the developer experience could be greatly improved if such code could somehow be parsed & typed; this makes such code more amenable to use within IDEs and allows early detection and repair of potential errors. We introduce a lenient parser, which can parse & type fragments, even ones with simple errors. Training a machine learner to leniently parse and type imperfect code requires a large training set including many pairs of imperfect code and its repair (and/or type information); such training sets are limited by human effort and curation. In this paper, we present a novel, indirectly supervised, approach to train a lenient parser, without access to such human-curated training data. We leverage the huge corpus of mostly correct code available on Github, and the massive, efficient learning capacity of Transformer-based NN architectures. Using GitHub data, we first create a large dataset of fragments of code and corresponding tree fragments and type annotations; we then randomly corrupt the input fragments (while requiring correct output) by seeding errors that mimic corruptions found in StackOverflow and student data. Using this data, we train high-capacity transformer models to overcome both fragmentation and corruption. With this novel approach, we can achieve reasonable performance on parsing & typing StackOverflow fragments; we also demonstrate that our approach performs well on shorter student error program and achieves best-in-class performance on longer programs that have more than 400 tokens. We also show that by blending DeepFix and our tool, we could achieve 77% accuracy, which outperforms all previously reported student error correction tools.
C1 [Ahmed, Toufique; Devanbu, Premkumar; Hellendoorn, Vincent J.] Univ Calif Davis, Dept Comp Sci, Davis, CA 95616 USA.
C3 University of California System; University of California Davis
RP Ahmed, T (corresponding author), Univ Calif Davis, Dept Comp Sci, Davis, CA 95616 USA.
EM tfahmed@ucdavis.edu; ptdevanbu@ucdavis.edu; vhellendoorn@ucdavis.edu
OI Ahmed, Toufique/0000-0002-4427-1350
FU National Science Foundation, via NSF CISE SHF [1414172]; Microsoft PhD
   Fellowship; UC Davis Dean's Distinguished Graduate Fellowship; Division
   of Computing and Communication Foundations; Direct For Computer & Info
   Scie & Enginr [1414172] Funding Source: National Science Foundation
FX Prem Devanbu and Vincent Hellendoorn were supported by the National
   Science Foundation, via NSF CISE SHF: Large No. 1414172. Hellendoorn was
   also supported by the Microsoft PhD Fellowship. Toufique Ahmed was
   supported by the UC Davis Dean's Distinguished Graduate Fellowship. Any
   opinions, findings, and conclusions or recommendations expressed in this
   material are those of the author(s) and do not necessarily reflect the
   views of the National Science Foundation.
CR Aftandilian E, 2019, DEEPDELTA LEARNING R
   Alexandra CV, 2017, INT C PROGRAM COMPRE, P316, DOI 10.1109/ICPC.2017.11
   Allamanis M, 2013, IEEE WORK CONF MIN S, P207, DOI 10.1109/MSR.2013.6624029
   [Anonymous], 2016, ARXIV PREPRINT ARXIV
   [Anonymous], 2007, P 22 IEEE ACM INT C
   [Anonymous], 2015, Advances in neural information processing systems
   Babii H., 2019, ARXIV PREPRINT ARXIV
   Bacchelli A, 2017, SCI COMPUT PROGRAM, V150, P31, DOI 10.1016/j.scico.2017.06.009
   Bengio Y., 2014, TECHNICAL REPORT
   Brown NCC, 2017, ACM T COMPUT EDUC, V17, DOI 10.1145/2994154
   Brown NCC, 2014, PROCEEDINGS OF THE 45TH ACM TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION (SIGCSE'14), P223, DOI 10.1145/2538862.2538924
   Chakraborty S., 2018, ARXIV181000314
   Chen Z., 2019, TSE
   Chung Junyoung, 2014, ARXIV14123555
   Dagenais B, 2008, ACM SIGPLAN NOTICES, V43, P313, DOI 10.1145/1449955.1449790
   Dean TR, 2003, CASCON '03, P266
   Gupta R, 2017, AAAI CONF ARTIF INTE, P1345
   Gupta Rahul, 2018, ARXIV180110467
   Hellendoorn VJ, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P152, DOI 10.1145/3236024.3236051
   Hellendoorn VJ, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P763, DOI 10.1145/3106237.3106290
   Hindle A, 2012, PROC INT CONF SOFTW, P837, DOI 10.1109/ICSE.2012.6227135
   Hochreiter S, 1997, NEURAL COMPUT, V9, P1735, DOI [10.1162/neco.1997.9.1.1, 10.1007/978-3-642-24797-2]
   Holmes Reid, 2005, P 10 EUR SOFTW ENG C, V30, P237, DOI DOI 10.1145/1095430.1081744
   Karampatsis RM, 2020, PROC INT CONF SOFTW, P1073, DOI 10.1145/3377811.3380342
   Kolling M., 2003, Computer Science Education, V13, P249
   Le Goues C, 2012, IEEE T SOFTWARE ENG, V38, P54, DOI 10.1109/TSE.2011.104
   Li Y, 2020, ICSE
   Long F, 2016, ACM SIGPLAN NOTICES, V51, P298, DOI 10.1145/2914770.2837617
   Loshchilov I, 2016, ARXIV
   Lutellier Thibaud, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P101, DOI 10.1145/3395363.3397369
   Malik RS, 2019, PROC INT CONF SOFTW, P304, DOI 10.1109/ICSE.2019.00045
   McCracken M., 2001, ACM SIGCSE Bull., V33, P125, DOI [10.1145/572133.572137, DOI 10.1145/572133.572137, DOI 10.1145/572139.572181, 10.1145/]
   Moonen L, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P13, DOI 10.1109/WCRE.2001.957806
   Nasehi SM, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P25, DOI 10.1109/ICSM.2012.6405249
   Ponzanelli Luca, 2014, P 11 WORKING C MININ, P102, DOI DOI 10.1145/2597073.2597077
   Pradel Michael, 2018, Proceedings of the ACM on Programming Languages, V2, DOI 10.1145/3276517
   Qiu D, 2016, INFORM SOFTWARE TECH, V73, P81, DOI 10.1016/j.infsof.2016.01.011
   Raychev V, 2015, ACM SIGPLAN NOTICES, V50, P111, DOI [10.1145/2775051.2677009, 10.1145/2676726.2677009]
   Rigby PC, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P832, DOI 10.1109/ICSE.2013.6606629
   Rountev A, 1999, LECT NOTES COMPUT SC, V1687, P235, DOI 10.1145/318774.318945
   Santos EA, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P311, DOI 10.1109/SANER.2018.8330219
   Tufano M, 2019, PROC INT CONF SOFTW, P25, DOI 10.1109/ICSE.2019.00021
   Van Deursen A., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P40, DOI 10.1109/ICSM.1999.792497
   Vaswani A, 2017, ADV NEUR IN, V30
   Wang K, 2018, PROCEEDINGS OF THE 39TH ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, PLDI 2018, P481, DOI 10.1145/3192366.3192384
   White M, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P479, DOI [10.1109/saner.2019.8668043, 10.1109/SANER.2019.8668043]
   Yangruibo Ding, 2020, 2020 35th IEEE/ACM International Conference on Automated Software Engineering (ASE), P275, DOI 10.1145/3324884.3416587
NR 47
TC 7
Z9 7
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR 5
PY 2021
VL 26
IS 2
AR 29
DI 10.1007/s10664-021-09942-y
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QT3VE
UT WOS:000626517000001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Amanatidis, T
   Mittas, N
   Moschou, A
   Chatzigeorgiou, A
   Ampatzoglou, A
   Angelis, L
AF Amanatidis, Theodoros
   Mittas, Nikolaos
   Moschou, Athanasia
   Chatzigeorgiou, Alexander
   Ampatzoglou, Apostolos
   Angelis, Lefteris
TI Evaluating the agreement among technical debt measurement tools:
   building an empirical benchmark of technical debt liabilities
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Technical debt; Software quality; Archetypal analysis; Inter-rater
   agreement; Empirical benchmark
ID ARCHETYPAL ANALYSIS; STATISTICAL-ANALYSIS; MULTIVARIATE; THRESHOLDS
AB Software teams are often asked to deliver new features within strict deadlines leading developers to deliberately or inadvertently serve "not quite right code" compromising software quality and maintainability. This non-ideal state of software is efficiently captured by the Technical Debt (TD) metaphor, which reflects the additional effort that has to be spent to maintain software. Although several tools are available for assessing TD, each tool essentially checks software against a particular ruleset. The use of different rulesets can often be beneficial as it leads to the identification of a wider set of problems; however, for the common usage scenario where developers or researchers rely on a single tool, diverse estimates of TD and the identification of different mitigation actions limits the credibility and applicability of the findings. The objective of this study is two-fold: First, we evaluate the degree of agreement among leading TD assessment tools. Second, we propose a framework to capture the diversity of the examined tools with the aim of identifying few "reference assessments" (or class/file profiles) representing characteristic cases of classes/files with respect to their level of TD. By extracting sets of classes/files exhibiting similarity to a selected profile (e.g., that of high TD levels in all employed tools) we establish a basis that can be used either for prioritization of maintenance activities or for training more sophisticated TD identification techniques. The proposed framework is illustrated through a case study on fifty (50) open source projects and two programming languages (Java and JavaScript) employing three leading TD tools.
C1 [Amanatidis, Theodoros; Moschou, Athanasia; Chatzigeorgiou, Alexander; Ampatzoglou, Apostolos] Univ Macedonia, Dept Appl Informat, Thessaloniki, Greece.
   [Mittas, Nikolaos] Int Hellen Univ, Dept Chem, Kavala, Greece.
   [Angelis, Lefteris] Aristotle Univ Thessaloniki, Dept Informat, Thessaloniki, Greece.
C3 University of Macedonia; Aristotle University of Thessaloniki
RP Mittas, N (corresponding author), Int Hellen Univ, Dept Chem, Kavala, Greece.
EM tamanatidis@uom.edu.gr; nmittas@chem.ihu.gr; nasiamoschou@gmail.com;
   achat@uom.gr; a.ampatzoglou@uom.edu.gr; lef@csd.auth.gr
RI Chatzigeorgiou, Alexandros/AAL-6077-2021; Mittas, Nikolaos/AAL-6645-2021
OI Mittas, Nikolaos/0000-0003-3061-7864
FU University of Macedonia Research Committee as part of the "Principal
   Research 2019" funding program
FX This research is funded by the University of Macedonia Research
   Committee as part of the "Principal Research 2019" funding program.
CR AITCHISON J, 1982, J ROY STAT SOC B, V44, P139
   Alves NSR, 2016, INFORM SOFTWARE TECH, V70, P100, DOI 10.1016/j.infsof.2015.10.008
   Alves TL, 2010, 26 IEEE INT C SOFTW, P1, DOI [10.1109/ICSM.2010.5609747, DOI 10.1109/ICSM.2010.5609747]
   [Anonymous], INT SERIES SOFTWARE
   Arvedahl S, 2018, 2018 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT), P51, DOI 10.1145/3194164.3194183
   Baggen R, 2012, SOFTWARE QUAL J, V20, P287, DOI 10.1007/s11219-011-9144-9
   Baldassari B., 2013, SQUORE NEW APPROACH
   Borante Foganholi Lucas, 2015, Advances in Software Engineering, DOI 10.1155/2015/898514
   Campbell G., 2013, SONARQUBE IN ACTION
   Canhasi E, 2014, EXPERT SYST APPL, V41, P535, DOI 10.1016/j.eswa.2013.07.079
   Chan BHP, 2003, MON NOT R ASTRON SOC, V338, P790, DOI 10.1046/j.1365-8711.2003.06099.x
   Chatzipetrou P, 2015, INFORM SOFTWARE TECH, V59, P149, DOI 10.1016/j.infsof.2014.11.004
   Chatzipetrou P, 2010, EUROMICRO CONF PROC, P361, DOI 10.1109/SEAA.2010.35
   Chopra K, 2015, INT J COMPUT TECHNOL, V14, P5845, DOI [10.24297/ijct.v14i6.1915, DOI 10.24297/IJCT.V14I6.1915]
   COHEN J, 1968, PSYCHOL BULL, V70, P213, DOI 10.1037/h0026256
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Conejero JM, 2018, J SYST SOFTWARE, V142, P92, DOI 10.1016/j.jss.2018.04.035
   Cunningham W., 1993, OOPS Messenger, V4, P29
   Curtis B, 2012, IEEE SOFTWARE, V29, P34, DOI 10.1109/MS.2012.156
   CUTLER A, 1994, TECHNOMETRICS, V36, P338, DOI 10.2307/1269949
   DeMarco T, 1986, CONTROLLING SOFTWARE
   Dohmen T, 2016, PROCEEDINGS OF 2016 JOINT CONFERENCE OF THE INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA), P11, DOI [10.1109/IWSM-Mensura.2016.014, 10.1109/IWSM-Mensura.2016.35]
   Elze T, 2015, J R SOC INTERFACE, V12, DOI 10.1098/rsif.2014.1118
   Ernst NA, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2017), P165, DOI 10.1109/ICSA.2017.25
   Eugster MJA, 2012, INT J PERF ANAL SPOR, V12, P166, DOI 10.1080/24748668.2012.11868592
   Fernández-Sánchez C, 2017, 2017 43RD EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P400, DOI 10.1109/SEAA.2017.60
   Ferreira KAM, 2012, J SYST SOFTWARE, V85, P244, DOI 10.1016/j.jss.2011.05.044
   FLEISS JL, 1971, PSYCHOL BULL, V76, P378, DOI 10.1037/h0031619
   Fontana FA, 2016, PROCEEDINGS OF THE XP2016 SCIENTIFIC WORKSHOPS, DOI 10.1145/2962695.2962716
   Fontana FA, 2016, INT WORKSH MANAG TEC, P28, DOI 10.1109/MTD.2016.11
   Griffith Isaac, 2014, 2014 Sixth International Workshop on Managing Technical Debt. Proceedings, P19, DOI 10.1109/MTD.2014.13
   Gwet KL., 2014, Handbook of inter-rater reliability: The definitive guide to measuring the extent of agreement among raters, V4th ed.
   Holvitie J, 2013, 2013 4TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD), P20, DOI 10.1109/MTD.2013.6608674
   Izurieta Clemente, 2012, Proceedings 2012 Third International Workshop on Managing Technical Debt (MTD 2012), P23, DOI 10.1109/MTD.2012.6225995
   Kazman R, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P179, DOI 10.1109/ICSE.2015.146
   Kendall M. G., 1948, Rank correlation methods.
   Kosti MV, 2016, EMPIR SOFTW ENG, V21, P1509, DOI 10.1007/s10664-015-9395-3
   Li S, 2003, ARCHETYPAL ANAL NEW, V6
   Li ZY, 2015, J SYST SOFTWARE, V101, P193, DOI 10.1016/j.jss.2014.12.027
   Marinescu R, 2012, IBM J RES DEV, V56, DOI 10.1147/JRD.2012.2204512
   Martín-Fernández JA, 2003, MATH GEOL, V35, P253, DOI 10.1023/A:1023866030544
   Martini A, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P31, DOI 10.1145/2889160.2889224
   Mayr A, 2014, INT CONF QUAL SOFTW, P305, DOI 10.1109/QSIC.2014.35
   Mendes Thiago S., 2019, Journal of the Brazilian Computer Society, V25, DOI 10.1186/s13173-018-0083-1
   Mittas N., 2014, P 10 INT C PRED MOD, P62
   Mittas N, 2020, J SOFTW-EVOL PROC, V32, DOI 10.1002/smr.2258
   Moliner J, 2019, PHYSICA A, V519, P195, DOI 10.1016/j.physa.2018.12.036
   Mori A, 2018, 2018 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT), P41, DOI 10.1145/3194164.3194173
   Nayebi M, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P171, DOI 10.1109/ICSE-SEIP.2019.00026
   Nugroho A, 2011, P 2 WORKSH MAN TECHN, P1
   Oliveira P, 2014, PROC IEEE INT CONF S, P629, DOI 10.1109/ICSME.2014.112
   Oliveira P, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P254, DOI 10.1109/CSMR-WCRE.2014.6747177
   Pawlowsky-Glahn V, 2001, STOCH ENV RES RISK A, V15, P384, DOI 10.1007/s004770100077
   Pearson C.S., 2015, Awakening the heroes within: Twelve archetypes to help us find ourselves and transform our world
   Pinheiro J. C., 2000, MIXED EFFECTS MODELS, DOI [DOI 10.1007/B98882, 10.1007/b98882]
   Porzio GC, 2008, APPL STOCH MODEL BUS, V24, P419, DOI 10.1002/asmb.727
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sadowski C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P598, DOI 10.1109/ICSE.2015.76
   Salkind Neil J., 2010, ENCY RES DESIGN
   Schmidt RC, 1997, DECISION SCI, V28, P763, DOI 10.1111/j.1540-5915.1997.tb01330.x
   Scott WA, 1955, PUBLIC OPIN QUART, V19, P321, DOI 10.1086/266577
   Seiler C, 2013, J INFORMETR, V7, P345, DOI 10.1016/j.joi.2012.11.013
   Thogersen JC, 2013, BMC BIOINFORMATICS, V14, DOI 10.1186/1471-2105-14-279
   Tornhill A, 2018, IEEE ICST WORKSHOP, P122, DOI 10.1109/ICSTW.2018.00039
   Tsanousa A, 2015, EXPERT SYST APPL, V42, P8454, DOI 10.1016/j.eswa.2015.06.058
   van Solingen R, 2002, AM CANC SOC, DOI [10.1002/0471028959.sof142, DOI 10.1002/0471028959.SOF142]
   Veado L, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2916014
   Watson PF, 2010, THERIOGENOLOGY, V73, P1167, DOI 10.1016/j.theriogenology.2010.01.003
   Xiao L, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P763, DOI 10.1145/2635868.2661677
   Xiao L, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P967, DOI 10.1145/2568225.2568241
   Yamashita A, 2015, PROC IEEE INT CONF S, P421, DOI 10.1109/ICSM.2015.7332493
   Zazworka N, 2014, SOFTWARE QUAL J, V22, P403, DOI 10.1007/s11219-013-9200-8
   Zuur A., 2009, Mixed Effects Models and Extensions in Ecology with R, V574, DOI DOI 10.1007/978-0-387-87458-6
NR 73
TC 18
Z9 19
U1 3
U2 10
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2020
VL 25
IS 5
BP 4161
EP 4204
DI 10.1007/s10664-020-09869-w
EA AUG 2020
PG 44
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA NJ1FD
UT WOS:000562938700001
DA 2024-07-18
ER

PT J
AU Krutauz, A
   Dey, T
   Rigby, PC
   Mockus, A
AF Krutauz, Andrey
   Dey, Tapajit
   Rigby, Peter C.
   Mockus, Audris
TI Do code review measures explain the incidence of post-release defects?
   Case study replications and bayesian networks
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Review
DE Code review measures; Statistical models; Bayesian networks
ID SOFTWARE; PREDICTION; INSPECTION; COMPLEXITY; PROGRAM
AB Aim In contrast to studies of defects found during code review, we aim to clarify whether code review measures can explain the prevalence of post-release defects. Method We replicate McIntoshet al.'s(Empirical Softw. Engg.21(5): 2146-2189,2016) study that uses additive regression to model the relationship between defects and code reviews. To increase external validity, we apply the same methodology on a new software project. We discuss our findings with the first author of the original study, McIntosh. We then investigate how to reduce the impact of correlated predictors in the variable selection process and how to increase understanding of the inter-relationships among the predictors by employing Bayesian Network (BN) models. Context As in the original study, we use the same measures authors obtained for Qt project in the original study. We mine data from version control and issue tracker of Google Chrome and operationalize measures that are close analogs to the large collection of code, process, and code review measures used in the replicated the study. Results Both the data from the original study and the Chrome data showed high instability of the influence of code review measures on defects with the results being highly sensitive to variable selection procedure. Models without code review predictors had as good or better fit than those with review predictors. Replication, however, confirms with the bulk of prior work showing that prior defects, module size, and authorship have the strongest relationship to post-release defects. The application of BN models helped explain the observed instability by demonstrating that the review-related predictors donotaffect post-release defects directly and showed indirect effects. For example, changes that haveno review discussiontend to be associated with files that have had manyprior defectswhich in turn increase the number of post-release defects. We hope that similar analyses of other software engineering techniques may also yield a more nuanced view of their impact. Our replication package including our data and scripts is publicly available (Replication package2018).
C1 [Krutauz, Andrey; Rigby, Peter C.] Concordia Univ Montreal, Montreal, PQ, Canada.
   [Dey, Tapajit; Mockus, Audris] Univ Tennessee Knoxville, Knoxville, TN USA.
C3 University of Tennessee System; University of Tennessee Knoxville
RP Rigby, PC (corresponding author), Concordia Univ Montreal, Montreal, PQ, Canada.
EM andrey.krutauz@encs.concordia.ca; tdey2@vols.utk.edu;
   peter.rigby@concordia.ca; audris@utk.edu
RI Mockus, Audris/AEY-3361-2022
OI Mockus, Audris/0000-0002-7987-7598; Rigby, Peter/0000-0003-1137-4297;
   Dey, Tapajit/0000-0002-1379-8539
CR Almqvist JPF, 2006, REPLICATION CONTROLL
   [Anonymous], 2002, EC IMPACTS INADEQUAT
   [Anonymous], 2014, 11 WORKING C MINING, DOI [DOI 10.1145/2597073.2597076, DOI 10.1145/2597073]
   [Anonymous], 2018, REPLICATION PACKAGE
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Arisholm E., 2006, ISESE 06 P 2006 ACMI, P8
   Austin PC, 2004, J CLIN EPIDEMIOL, V57, P1138, DOI 10.1016/j.jclinepi.2004.04.003
   Axelrod R., 1997, Complexity, V3, P16, DOI 10.1002/(SICI)1099-0526(199711/12)3:2<16::AID-CPLX4>3.0.CO;2-K
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Bai CG, 2005, J SYST SOFTWARE, V77, P103, DOI 10.1016/j.jss.2004.11.034
   Beller M., 2014, 11 WORK C MIN SOFTW, P202, DOI DOI 10.1145/2597073.2597082
   Bibi S, 2003, 1 BALK C INF THESS G
   Bird C., 2011, P 19 ACM SIGSOFT S 1, P4, DOI DOI 10.1145/2025113.2025119
   Bosu A, 2017, IEEE T SOFTWARE ENG, V43, P56, DOI 10.1109/TSE.2016.2576451
   Bosu A, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P257, DOI 10.1145/2635868.2635880
   Bosu A, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P146, DOI 10.1109/MSR.2015.21
   Camilo F, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P269, DOI 10.1109/MSR.2015.32
   Carvalho A.M., 2009, Inescid Tec. Rep, P12
   Carver J. C., 2010, INT WORKSH REPL EMP, P2
   CARVER RP, 1978, HARVARD EDUC REV, V48, P378, DOI 10.17763/haer.48.3.t490261645281841
   Chlebus B. S., 1998, Rough Sets and Current Trends in Computing. First International Conference, RSCTC'98. Proceedings, P537, DOI 10.1007/3-540-69115-4_74
   Dey T, 2020, EMPIR SOFTW ENG, V25, P1596, DOI 10.1007/s10664-019-09791-w
   Eick S. G., 1992, International Conference on Software Engineering, P59, DOI 10.1145/143062.143090
   FAGAN ME, 1976, IBM SYST J, V15, P182, DOI 10.1147/sj.153.0182
   Fagan Michael E., 2002, Software pioneers, P562, DOI DOI 10.1007/978-3-642-59412-0_34
   Fenton N, 2002, IEEE SOFTWARE, V19, P116, DOI 10.1109/MS.2002.1020298
   Fenton NE, 1999, IEEE T SOFTWARE ENG, V25, P675, DOI 10.1109/32.815326
   Fenton N, 2007, INFORM SOFTWARE TECH, V49, P32, DOI 10.1016/j.infsof.2006.09.001
   Fleiss J., 2003, STAT METHODS RATES P, P598, DOI DOI 10.1002/0471445428.CH18
   Friedman N, 1999, UNCERTAINTY IN ARTIFICIAL INTELLIGENCE, PROCEEDINGS, P196
   García S, 2013, IEEE T KNOWL DATA EN, V25, P734, DOI 10.1109/TKDE.2012.35
   Gómez OS, 2014, INFORM SOFTWARE TECH, V56, P1033, DOI 10.1016/j.infsof.2014.04.004
   Gousios G, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P358, DOI 10.1109/ICSE.2015.55
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Heckerman D, 1998, NATO ADV SCI I D-BEH, V89, P301
   Herbsleb JD, 2003, IEEE T SOFTWARE ENG, V29, P481, DOI 10.1109/TSE.2003.1205177
   Hojsgaard S, 2012, J STAT SOFTW, V46, P1
   Huang LG, 2006, IEEE SOFTWARE, V23, P88, DOI 10.1109/MS.2006.127
   James G, 2013, SPRINGER TEXTS STAT, V103, P1, DOI [10.1007/978-1-4614-7138-7, 10.1007/978-1-4614-7138-7_1]
   KNIGHT JC, 1993, COMMUN ACM, V36, P51, DOI 10.1145/163359.163366
   Kollanus S., 2009, Open Softw Eng J, V3, P15, DOI [10.2174/1874107X00903010015, DOI 10.2174/1874107X00903010015]
   Koller D., 2009, Probabilistic graphical models: principles and techniques
   Kononenko O, 2016, PROC INT CONF SOFTW, P1028, DOI 10.1145/2884781.2884840
   Kononenko O, 2015, PROC IEEE INT CONF S, P111, DOI 10.1109/ICSM.2015.7332457
   Laitenberger O, 2000, J SYST SOFTWARE, V50, P5, DOI 10.1016/S0164-1212(99)00073-4
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   LAURITZEN SL, 1988, J ROY STAT SOC B MET, V50, P157
   Lin MF, 2013, INFORM SYST RES, V24, P906, DOI 10.1287/isre.2013.0480
   MARTIN J, 1990, COMMUN ACM, V33, P225, DOI 10.1145/75577.75587
   McIntosh S, 2016, EMPIR SOFTW ENG, V21, P2146, DOI 10.1007/s10664-015-9381-9
   Menzies T, 2013, IEEE T SOFTWARE ENG, V39, P1698, DOI 10.1109/TSE.2013.43
   Mockus A., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P263, DOI 10.1109/ICSE.2000.870417
   Mockus A, 2010, Proc. of the 18th Symposium on the Foundations of Software Engineering (FSE), P117
   Mockus Audris., 2014, Proceedings of the on Future of Software Engineering, P85, DOI 10.1145/2593882.2593889
   Morales R, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P171, DOI 10.1109/SANER.2015.7081827
   Mukadam M, 2013, IEEE WORK CONF MIN S, P45, DOI 10.1109/MSR.2013.6624002
   Munaiah N, 2017, EMPIR SOFTW ENG, V22, P1305, DOI 10.1007/s10664-016-9447-3
   Nagappan N, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P521, DOI 10.1145/1368088.1368160
   Neil M, 1996, P 21 ANN SOFTW ENG W, P217
   Nemeth CL, 2013, BIOL SEX DIFFER, V4, DOI 10.1186/2042-6410-4-8
   Neuhaus S, 2007, CCS'07: PROCEEDINGS OF THE 14TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P529
   Okutan A, 2014, EMPIR SOFTW ENG, V19, P154, DOI 10.1007/s10664-012-9218-8
   Pai GJ, 2007, IEEE T SOFTWARE ENG, V33, P675, DOI [10.1109/TSE.2007.70722, 10.1109/TSE.2007.70722.]
   Pear J, 2014, PROBABILISTIC REASON
   Pendharkar PC, 2005, IEEE T SOFTWARE ENG, V31, P615, DOI 10.1109/TSE.2005.75
   Pérez A, 2006, INT J APPROX REASON, V43, P1, DOI 10.1016/j.ijar.2006.01.002
   Perry DE, 2002, IEEE T SOFTWARE ENG, V28, P695, DOI 10.1109/TSE.2002.1019483
   Pinheiro J, 2010, R PCKG V, V3, P1
   Porter A., 1998, ACM Transactions on Software Engineering and Methodology, V7, P41, DOI 10.1145/268411.268421
   Porter A, 1998, ACM T SOFTWARE ENG M
   Rahman M.M., 2014, P 11 WORKING C MININ, P364, DOI DOI 10.1145/2597073.2597121
   Rahman MM, 2017, IEEE WORK CONF MIN S, P215, DOI 10.1109/MSR.2017.17
   Rigby PC, 2013, P 2013 9 JOINT M FDN, P202, DOI DOI 10.1145/2491411.2491444
   Rigby PC, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2594458
   Rigby PC, 2012, IEEE SOFTWARE, V29, P56, DOI 10.1109/MS.2012.24
   Rigby PC, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P541, DOI 10.1145/1985793.1985867
   Rigby PC, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P541
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sauer C, 2000, IEEE T SOFTWARE ENG, V26, P1, DOI 10.1109/32.825763
   Scutari M, 2013, LEARNING BAYESIAN NE
   Shivaji S, 2013, IEEE T SOFTWARE ENG, V39, P552, DOI 10.1109/TSE.2012.43
   Shmueli G, 2010, STAT SCI, V25, P289, DOI 10.1214/10-STS330
   Shull F, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P7, DOI 10.1109/ISESE.2002.1166920
   Shull FJ, 2008, EMPIR SOFTW ENG, V13, P211, DOI 10.1007/s10664-008-9060-1
   Sjoberg DIK, 2013, IEEE T SOFTWARE ENG, V39, P1144, DOI 10.1109/TSE.2012.89
   Sober E, 2002, PHILOS SCI, V69, pS112, DOI 10.1086/341839
   Stamelos I, 2003, INFORM SOFTWARE TECH, V45, P51, DOI 10.1016/S0950-5849(02)00163-5
   Thongtanunam P, 2016, PROC INT CONF SOFTW, P1039, DOI 10.1145/2884781.2884852
   van Koten C, 2006, INFORM SOFTWARE TECH, V48, P59, DOI 10.1016/j.infsof.2005.03.002
   Votta L. G.  Jr., 1993, SIGSOFT Software Engineering Notes, V18, P107, DOI 10.1145/167049.167070
   Wiegers KE, 2001, ADDISON WESLEY INFOR
   Yu Y, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P367, DOI 10.1109/MSR.2015.42
   Zheng QM, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P637, DOI 10.1145/2786805.2786866
NR 94
TC 6
Z9 7
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2020
VL 25
IS 5
BP 3323
EP 3356
DI 10.1007/s10664-020-09837-4
EA JUN 2020
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NJ1FD
UT WOS:000544134100001
DA 2024-07-18
ER

PT J
AU Danglot, B
   Monperrus, M
   Rudametkin, W
   Baudry, B
AF Danglot, Benjamin
   Monperrus, Martin
   Rudametkin, Walter
   Baudry, Benoit
TI An approach and benchmark to detect behavioral changes of commits in
   continuous integration
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Continuous Integration; Test amplification; Behavioral change detection
AB When a developer pushes a change to an application's codebase, a good practice is to have a test case specifying this behavioral change. Thanks to continuous integration (CI), the test is run on subsequent commits to check that they do no introduce a regression for that behavior. In this paper, we propose an approach that detects behavioral changes in commits. As input, it takes a program, its test suite, and a commit. Its output is a set of test methods that capture the behavioral difference between the pre-commit and post-commit versions of the program. We call our approach DCI (Detecting behavioral changes in CI). It works by generating variations of the existing test cases through (i) assertion amplification and (ii) a search-based exploration of the input space. We evaluate our approach on a curated set of 60 commits from 6 open source Java projects. To our knowledge, this is the first ever curated dataset of real-world behavioral changes. Our evaluation shows that DCI is able to generate test methods that detect behavioral changes. Our approach is fully automated and can be integrated into current development processes. The main limitations are that it targets unit tests and works on a relatively small fraction of commits. More specifically, DCI works on commits that have a unit test that already executes the modified code. In practice, from our benchmark projects, we found 15.29% of commits to meet the conditions required by DCI.
C1 [Danglot, Benjamin] INRIA, Lille Nord Europe, 40 Ave Halley, F-59650 Villeneuve Dascq, France.
   [Monperrus, Martin; Baudry, Benoit] KTH Royal Inst Technol, Brinellvagen 8, S-11428 Stockholm, Sweden.
   [Rudametkin, Walter] Univ Lille, 42 Rue Paul Duez, F-59000 Lille, France.
C3 Inria; Royal Institute of Technology; Universite de Lille
RP Danglot, B (corresponding author), INRIA, Lille Nord Europe, 40 Ave Halley, F-59650 Villeneuve Dascq, France.
EM bdanglot@gmail.com; martin.monperrus@csc.kth.se;
   walter.rudametkin@inria.fr; benoit.baudry@kth.se
RI Monperrus, Martin/I-3640-2012
OI Monperrus, Martin/0000-0003-3505-3383; Danglot,
   Benjamin/0000-0001-9483-5743
CR Anand Saswat, 2007, JPF SE SYMBOLIC EXEC
   [Anonymous], 2007, ESEC FSE 2007, DOI DOI 10.1145/1287624.1287707
   B_ohme M., 2014, INT S SOFTWARE TESTI, P105
   Cadar C., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, (USA), P209
   Chambwera M, 2014, COMMUNITY-BASED ADAPTATION TO CLIMATE CHANGE: SCALING IT UP, P55
   Danglot B., 2019, AUTOMATIC TEST IMPRO
   Daniel B, 2009, IEEE INT CONF AUTOM, P433, DOI 10.1109/ASE.2009.17
   Duvall Paul M., 2007, Continuous integration: improving software quality and reducing risk
   Falleri Jean-Remy, 2014, P 29 ACM IEEE INT C, P313
   Fowler M., 2006, THOUGHT WORKS, V122, P14
   Fraser G., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P121, DOI 10.1109/ICST.2012.92
   Godefroid P, 2005, ACM SIGPLAN NOTICES, V40, P213, DOI 10.1145/1064978.1065036
   Groce A, 2007, PROC INT CONF SOFTW, P621
   Hilton M, 2018, IEEE INT CONF AUTOM, P53, DOI 10.1145/3238147.3238183
   Hilton M, 2016, IEEE INT CONF AUTOM, P426, DOI 10.1145/2970276.2970358
   Kuchta T, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3208952
   Lahiri S, 2013, DIFFERENTIAL ASSERTI
   Madeiral F, 2019, P 26 IEEE INT C SOFT
   Marinescu P. D., 2013, KATCH HIGH COVERAGE, P235, DOI [10.1145/2491411.2491438, DOI 10.1145/2491411.2491438]
   Menarini M, 2017, IEEE INT CONF AUTOM, P554, DOI 10.1109/ASE.2017.8115666
   Noller Yannic, 2017, ACM SIGSOFT Software Engineering Notes, V42, DOI 10.1145/3149485.3149492
   Palikareva H, 2016, PROC INT CONF SOFTW, P1181, DOI 10.1145/2884781.2884845
   Person Suzette, 2008, P 16 INT S FDN SOFTW, P226, DOI [DOI 10.1145/1453101.1453131, 10.1145/1453101.1453131]
   Saff D., 2004, Software Engineering Notes, V29, P76, DOI 10.1145/1013886.1007523
   Simon Urli L.S.M.M., 2018, ICSE 2018, P1
   Spieker H, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P12, DOI 10.1145/3092703.3092709
   Taneja Kunal, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P407, DOI 10.1109/ASE.2008.60
   Tonella P, 2004, WSE 2004: SIXTH IEEE INTERNATIONAL WORKSHOP ON WEB SITE EVOLUTION, PROCEEDINGS, P11, DOI 10.1109/WSE.2004.10012
   Vera-Perez OL, 2018, COMPREHENSIVE STUDY
   VOAS JM, 1995, IEEE SOFTWARE, V12, P17, DOI 10.1109/52.382180
   Waller Jan, 2015, ACM SIGSOFT Software Engineering Notes, V40, P1, DOI [10.1145/2735399, 10.1145/2735399.2735416]
   Wei Jin, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P137, DOI 10.1109/ICST.2010.64
   Xie T, 2006, LECT NOTES COMPUT SC, V4067, P380
   Yang GW, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1059, DOI 10.1145/2568225.2568319
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P171, DOI 10.1002/stvr.435
   Zampetti F, 2017, IEEE WORK CONF MIN S, P334, DOI 10.1109/MSR.2017.2
   Zhang PY, 2012, PROC INT CONF SOFTW, P595, DOI 10.1109/ICSE.2012.6227157
NR 37
TC 9
Z9 10
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2020
VL 25
IS 4
BP 2379
EP 2415
DI 10.1007/s10664-019-09794-7
EA MAR 2020
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MD8CQ
UT WOS:000518304900002
DA 2024-07-18
ER

PT J
AU Nugroho, YS
   Hata, H
   Matsumoto, K
AF Nugroho, Yusuf Sulistyo
   Hata, Hideaki
   Matsumoto, Kenichi
TI How different are different <i>diff</i> algorithms in Git? Use
   --histogram for code changes
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Code changes; Diff; Histogram algorithm; Mining repositories
ID SOFTWARE; CHURN
AB Automatic identification of the differences between two versions of a file is a common and basic task in several applications of mining code repositories. Git, a version control system, has a diff utility and users can select algorithms of diff from the default algorithm Myers to the advanced Histogram algorithm. From our systematic mapping, we identified three popular applications of diff in recent studies. On the impact on code churn metrics in 14 Java projects, we obtained different values in 1.7% to 8.2% commits based on the different diff algorithms. Regarding bug-introducing change identification, we found 6.0% and 13.3% in the identified bug-fix commits had different results of bug-introducing changes from 10 Java projects. For patch application, we found that the Histogram is more suitable than Myers for providing the changes of code, from our manual analysis. Thus, we strongly recommend using the Histogram algorithm when mining Git repositories to consider differences in source code.
C1 [Nugroho, Yusuf Sulistyo; Hata, Hideaki; Matsumoto, Kenichi] Nara Inst Sci, Technol, Ikoma, Japan.
RP Nugroho, YS; Hata, H (corresponding author), Nara Inst Sci, Technol, Ikoma, Japan.
EM yusuf_sulistyo.nugroho.yi5@is.naist.jp; hata@is.naist.jp
RI Nugroho, Yusuf Sulistyo/AAB-6581-2021; Hata, Hideaki/N-7103-2019; Hata,
   Hideaki/GQB-2557-2022; Nugroho, Yusuf Sulistyo/S-8200-2019
OI Hata, Hideaki/0000-0003-0708-5222; Nugroho, Yusuf
   Sulistyo/0000-0001-6391-0851
CR Barr ET, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P306, DOI 10.1145/2635868.2635898
   Budgen David., 2008, USING MAPPING STUDIE
   da Costa DA, 2017, IEEE T SOFTWARE ENG, V43, P641, DOI 10.1109/TSE.2016.2616306
   Dotzler G, 2016, IEEE INT CONF AUTOM, P660, DOI 10.1145/2970276.2970315
   Duala-Ekoko E, 2007, PROC INT CONF SOFTW, P158
   Falleri Jean-Remy, 2014, P 29 ACM IEEE INT C, P313
   Fluri B, 2007, IEEE T SOFTWARE ENG, V33, P725, DOI 10.1109/TSE.2007.70731
   Gousios G., 2008, P 2008 INT WORKING C, P129, DOI [DOI 10.1145/1370750.1370781, 10.1145/1370750.1370781]
   Hashimoto M, 2008, WORK CONF REVERSE EN, P279, DOI 10.1109/WCRE.2008.44
   Hata H, 2012, PROC INT CONF SOFTW, P200, DOI 10.1109/ICSE.2012.6227193
   Higo Y, 2017, IEEE INT CONF AUTOM, P532, DOI 10.1109/ASE.2017.8115664
   Huang KF, 2018, IEEE INT CONF AUTOM, P679, DOI 10.1145/3238147.3238219
   Hunt J, 1976, COMPUTING SCI TECHNI
   Kamei Y, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 5, P33, DOI 10.1109/SANER.2016.56
   Kavitha R, 2009, COLLECTION DEV DIGIT
   Kim M, 2013, IEEE T SOFTWARE ENG, V39, P45, DOI 10.1109/TSE.2012.16
   Kim Miryung, 2005, ESEC/FSE- 13), P187, DOI [10.1145/1081706.1081737, DOI 10.1145/1081706.1081737]
   Kuhrmann M, 2017, EMPIR SOFTW ENG, V22, P2852, DOI 10.1007/s10664-016-9492-y
   liwerski J, 2005, ACM SIGSOFT SOFTWARE, V30, P1, DOI [10.1145/1082983.1083147, DOI 10.1145/1083142.1083147, DOI 10.1145/1082983.1083147]
   Madeyski L, 2015, SOFTWARE QUAL J, V23, P393, DOI 10.1007/s11219-014-9241-7
   Meng XZ, 2013, PROC IEEE INT CONF S, P250, DOI 10.1109/ICSM.2013.36
   Myers EW, 1986, ALGORITHMICA, V1, P251, DOI 10.1007/BF01840446
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Petersen K, 2008, 12 INT C EV ASS SOFT, P1, DOI 10.5555/2227115.2227123
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Rahman F, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P491, DOI 10.1145/1985793.1985860
   Rausch T, 2017, IEEE WORK CONF MIN S, P345, DOI 10.1109/MSR.2017.54
   Ray B, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P34, DOI 10.1109/MSR.2015.11
   Rodríguez-Pérez G, 2018, INFORM SOFTWARE TECH, V99, P164, DOI 10.1016/j.infsof.2018.03.009
   Shin Y, 2011, IEEE T SOFTWARE ENG, V37, P772, DOI 10.1109/TSE.2010.81
   Viera AJ, 2005, FAM MED, V37, P360
   Wohlin C, 2013, J SYST SOFTWARE, V86, P2594, DOI 10.1016/j.jss.2013.04.076
NR 32
TC 21
Z9 22
U1 1
U2 8
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN
PY 2020
VL 25
IS 1
BP 790
EP 823
DI 10.1007/s10664-019-09772-z
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KP0WS
UT WOS:000515965100020
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Xiang, Y
   Yang, XW
   Zhou, YR
   Zheng, ZB
   Li, MQ
   Huang, H
AF Xiang, Yi
   Yang, Xiaowei
   Zhou, Yuren
   Zheng, Zibin
   Li, Miqing
   Huang, Han
TI Going deeper with optimal software products selection using
   many-objective optimization and satisfiability solvers
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Search-based software engineering; Feature model; Many-objective
   optimization; Optimal software product selection; Satisfiability solvers
ID EVOLUTIONARY; ALGORITHMS; TESTS
AB In search-based software engineering, one actively studied problem is the optimal software product selection from a feature model using multiple (usually more than three) optimization objectives simultaneously. This can be represented as a many-objective optimization problem. The primary goal of solving this problem is to search for diverse and high-quality valid products as rapidly as possible. Previous studies have shown that combining search-based techniques with satisfiability (SAT) solvers was promising for achieving this goal, but it remained open that how different solvers affect the performance of a search algorithm, and that whether the ways to randomize solutions in the solvers make a difference. Moreover, we may need further investigation on the necessity of mixing different types of SAT solving techniques. In this paper, we address the above open research questions by performing a series of empirical studies on 21 features models, most of which are reverse-engineered from industrial software product lines. We examine four conflict-driven clause learning solvers, two stochastic local search solvers, and two different ways to randomize solutions. Experimental results suggest that the performance can be indeed affected by different SAT solvers, and by the ways to randomize solutions in the solvers. This study serves as a practical guideline for choosing and tuning SAT solvers for the many-objective optimal software product selection problem.
C1 [Xiang, Yi; Yang, Xiaowei; Huang, Han] South China Univ Technol, Sch Software Engn, Guangzhou, Peoples R China.
   [Zhou, Yuren; Zheng, Zibin] Sun Yat Sen Univ, Sch Data & Comp Sci, Guangzhou, Peoples R China.
   [Li, Miqing] Univ Birmingham, Ctr Excellence Res Computat Intelligence & Appl, Sch Comp Sci, Birmingham, England.
C3 South China University of Technology; Sun Yat Sen University; University
   of Birmingham
RP Yang, XW (corresponding author), South China Univ Technol, Sch Software Engn, Guangzhou, Peoples R China.
EM xwyang@scut.edu.cn
RI Xiang, Yi/KRO-9761-2024; Li, Miqing/P-4153-2015; Zhang,
   Can/JUU-9511-2023; Zheng, Zibin/E-3024-2014
OI Xiang, Yi/0000-0003-2118-4825; Li, Miqing/0000-0002-8607-9607; Zheng,
   Zibin/0000-0002-7878-4330
CR [Anonymous], 2013, P 17 INT SOFTW PROD, DOI [DOI 10.1145/2491627.2491635, 10.1145/2491627.2491635]
   [Anonymous], 2009, MULT OPT TEST INST C
   [Anonymous], 2010, J SATISFIABIL BOOLEA, DOI DOI 10.3233/SAT190075
   [Anonymous], 2015, P 19 INT C SOFTW PRO, DOI DOI 10.1145/2791060.2791108
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   Balint A., 2014, P SAT COMP 2014 SOLV, V2014, P63
   Balint A., 2012, PROC SAT 2012, P16
   Balyo T, 2016, ARTIF INTELL, V241, P45, DOI 10.1016/j.artint.2016.08.007
   Batory D, 2005, LECT NOTES COMPUT SC, V3714, P7
   Berger T, 2010, IEEE RAD CONF, P75, DOI 10.1109/RADAR.2010.5494650
   Bezerra LCT, 2016, IEEE T EVOLUT COMPUT, V20, P403, DOI 10.1109/TEVC.2015.2474158
   Biere A, 2010, TECH REP
   Biere A., 2018, P SAT COMPETITION 20, P13
   Cai S, 2013, TECH REP
   Chen JF, 2019, IEEE T SOFTWARE ENG, V45, P597, DOI 10.1109/TSE.2018.2790925
   Chen J, 2018, ASIA PAC CONF ANTEN, P10, DOI 10.1109/APCAP.2018.8538252
   Coello-Coello C. A., 2007, EVOLUTIONARY ALGORIT
   Derrac J, 2011, SWARM EVOL COMPUT, V1, P3, DOI 10.1016/j.swevo.2011.02.002
   Durillo JJ, 2011, ADV ENG SOFTW, V42, P760, DOI 10.1016/j.advengsoft.2011.05.014
   Dutra R, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P549, DOI 10.1145/3180155.3180248
   Eén N, 2004, LECT NOTES COMPUT SC, V2919, P502, DOI 10.1007/978-3-540-24605-3_37
   Faul F, 2009, BEHAV RES METHODS, V41, P1149, DOI 10.3758/BRM.41.4.1149
   Guo J., 2014, P 29 ACMIEEE INT C A, P409, DOI 10.1145/2642937.2642971
   Guo JM, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1027, DOI 10.1145/3180155.3180163
   Guo JM, 2019, SOFTW SYST MODEL, V18, P1447, DOI 10.1007/s10270-017-0610-0
   Harman M, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P5, DOI 10.1145/2648511.2648513
   Harman M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P342, DOI 10.1109/FOSE.2007.29
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Henard C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P517, DOI 10.1109/ICSE.2015.69
   Henard C, 2014, IEEE T SOFTWARE ENG, V40, P650, DOI 10.1109/TSE.2014.2327020
   Henard C, 2013, IEEE ICST WORKSHOP, P188, DOI 10.1109/ICSTW.2013.30
   Hierons RM, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2897760
   Ishibuchi H, 2017, IEEE T EVOLUT COMPUT, V21, P169, DOI 10.1109/TEVC.2016.2587749
   Ishibuchi H, 2016, IEEE T EVOLUT COMPUT, V20, P807, DOI 10.1109/TEVC.2015.2505784
   Johansen Martin Fagereng, 2012, P 16 INT SOFTWARE PR, P46, DOI [10.1145/2362536.2362547, DOI 10.1145/2362536.2362547]
   Kang K, 1990, TECH REP
   Li BD, 2015, ACM COMPUT SURV, V48, DOI 10.1145/2792984
   Li MQ, 2019, ACM COMPUT SURV, V52, DOI 10.1145/3300148
   Li MQ, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS (ICSE-NIER), P17, DOI 10.1145/3183399.3183405
   Li MQ, 2015, ARTIF INTELL, V228, P45, DOI 10.1016/j.artint.2015.06.007
   Li MQ, 2014, IEEE T EVOLUT COMPUT, V18, P348, DOI 10.1109/TEVC.2013.2262178
   Liang Jia Hui, 2015, P 19 INT C SOFTW PRO, P91, DOI [10.1145/2791060, DOI 10.1145/2791060]
   Lopez-Herrejon RE, 2013, PROC IEEE INT CONF S, P404, DOI 10.1109/ICSM.2013.58
   Marques-Silva JP, 1999, IEEE T COMPUT, V48, P506, DOI 10.1109/12.769433
   Mendonca Marcilio, 2009, SPLC' 09, P231
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Olaechea R, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P92, DOI 10.1145/2648511.2648521
   Perrouin Gilles, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P459, DOI 10.1109/ICST.2010.43
   Pohl Richard, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P313, DOI 10.1109/ASE.2011.6100068
   Rayside D, 2009, TECH REP
   Sayyad Abdel Salam, 2013, Proceedings of the 2013 3rd International Workshop on Replication in Empirical Software Engineering Research (RESER 2013), P84, DOI 10.1109/RESER.2013.6
   Sayyad AS, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P492, DOI 10.1109/ICSE.2013.6606595
   Sayyad AS, 2013, IEEE INT CONF AUTOM, P465, DOI 10.1109/ASE.2013.6693104
   SELMAN B, 1992, AAAI-92 PROCEEDINGS : TENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE, P440
   SELMAN B, 1994, PROCEEDINGS OF THE TWELFTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE, VOLS 1 AND 2, P337
   She S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P461, DOI 10.1145/1985793.1985856
   Simon L, 2009, 21 INT JOINT C ART I
   SRINIVAS M, 1994, COMPUTER, V27, P17, DOI 10.1109/2.294849
   Tan N, 2015, 2015 24TH IEEE INTERNATIONAL SYMPOSIUM ON ROBOT AND HUMAN INTERACTIVE COMMUNICATION (RO-MAN), P246, DOI 10.1109/ROMAN.2015.7333566
   Wang HD, 2017, IEEE T CYBERNETICS, V47, P1510, DOI 10.1109/TCYB.2016.2550502
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Xiang Y, 2018, ACM T SOFTW ENG METH, V26, DOI 10.1145/3176644
   Xiang Y, 2017, APPL INTELL, V47, P705, DOI 10.1007/s10489-017-0929-9
   Xiang Y, 2017, IEEE T EVOLUT COMPUT, V21, P131, DOI 10.1109/TEVC.2016.2587808
   Xue YX, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1231, DOI 10.1145/3180155.3180257
   Xue YX, 2016, APPL SOFT COMPUT, V49, P1215, DOI 10.1016/j.asoc.2016.07.040
   Zabih R., 1988, AAAI 88. Seventh National Conference on Artificial Intelligence, P155
   Zhang QF, 2007, IEEE T EVOLUT COMPUT, V11, P712, DOI 10.1109/TEVC.2007.892759
   Zhou YR, 2019, IEEE T CYBERNETICS, V49, P2073, DOI 10.1109/TCYB.2018.2819360
   Zitzler E, 1999, IEEE T EVOLUT COMPUT, V3, P257, DOI 10.1109/4235.797969
   Zitzler E, 2004, LECT NOTES COMPUT SC, V3242, P832
NR 71
TC 6
Z9 7
U1 0
U2 18
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN
PY 2020
VL 25
IS 1
BP 591
EP 626
DI 10.1007/s10664-019-09761-2
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KP0WS
UT WOS:000515965100015
DA 2024-07-18
ER

PT J
AU Chen, BY
   Jiang, ZM
AF Chen, Boyuan
   Jiang, Zhen Ming (Jack)
TI Extracting and studying the Logging-Code-Issue- Introducing changes in
   Java-based large-scale open source software systems
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Empirical studies; Logging code; Software analytics
AB Execution logs, which are generated by logging code, are widely used in modern software projects for tasks like monitoring, debugging, and remote issue resolution. Ineffective logging would cause confusion, lack of information during problem diagnosis, or even system crash. However, it is challenging to develop and maintain logging code, as it inter-mixes with the feature code. Furthermore, unlike feature code, it is very challenging to verify the correctness of logging code. Currently developers usually rely on their intuition when performing their logging activities. There are no well established logging guidelines in research and practice. In this paper, we intend to derive such guidelines through mining the historical logging code changes. In particular, we have extracted and studied the Logging-Code-Issue-Introducing (LCII) changes in six popular large-scale Java-based open source software systems. Preliminary studies on this dataset show that: (1) both co-changed and independently changed logging code changes can contain fixes to the LCII changes; (2) the complexity of fixes to LCII changes are similar to regular logging code updates; (3) it takes longer for developers to fix logging code issues than regular bugs; and (4) the state-of-the-art logging code issue detection tools can only detect a small fraction (3%) of the LCII changes. This highlights the urgent need for this area of research and the importance of such a dataset.
C1 [Chen, Boyuan; Jiang, Zhen Ming (Jack)] York Univ, Software Construct AnaLyt & Evaluat SCALE Lab, Toronto, ON, Canada.
C3 York University - Canada
RP Chen, BY (corresponding author), York Univ, Software Construct AnaLyt & Evaluat SCALE Lab, Toronto, ON, Canada.
EM chenfsd@cse.yorku.ca; zmjiang@cse.yorku.ca
OI Chen, Boyuan/0000-0001-9103-5820
CR [Anonymous], 2018, IMPROVE LOG LEVELS E
   [Anonymous], P 25 IEEE INT C SOFT
   [Anonymous], 2018, JBOSS LOGGING
   [Anonymous], 2018, IMPORT GENERATES HUG
   [Anonymous], 2018, SPLIT ALL LOG MESSAG
   [Anonymous], 2018, SOME LOGGING TRACE S
   [Anonymous], 2016, ASPECTJ PROJECT
   [Anonymous], 2018, SIMPLER MODEL NAMENO
   [Anonymous], 2018, HFILELINKCLEANER LOG
   [Anonymous], 2018, HADOOP COMMON LOGS M
   [Anonymous], 2016, NPE CAUSED STOREFILE
   [Anonymous], 2018, CLEANUP HDFS LOGS RE
   [Anonymous], 2018, TYPO SOFT LIMIT HARD
   [Anonymous], P 2005 INT WORKSH MI
   [Anonymous], 2011, P 16 INT C ARCH SUPP
   [Anonymous], 2018, REPLICATION PACKAGE
   [Anonymous], 2018, JN LOG SEGMENT SYNCI
   [Anonymous], 2018, SUPPORT MICROSOFT AZ
   [Anonymous], 2007, PROMISE 07, DOI DOI 10.1109/PROMISE.2007.10
   [Anonymous], 2018, LOG CLIENT IP PORT B
   [Anonymous], P 30 INT C SOFTW ENG
   Barik T, 2016, 38 INT C SOFTW ENG
   Bird C., 2009, P 7 JOINT M EUR SOFT
   Boyle MJ, 2008, BMC MED EDUC, V8, DOI 10.1186/1472-6920-8-19
   Chen B, 2016, CHARACTERIZING LOGGI
   Chen BY, 2017, PROC INT CONF SOFTW, P71, DOI 10.1109/ICSE.2017.15
   da Costa DA, 2017, IEEE T SOFTWARE ENG, V43, P641, DOI 10.1109/TSE.2016.2616306
   Davies S, 2014, J SOFTW-EVOL PROC, V26, P107, DOI 10.1002/smr.1619
   Ding R, 2015, P 2015 USENIX C US A
   Ferrus T, 2008, 2008 IEEE SILICON NANOELECTRONICS WORKSHOP, P32
   Fluri B, 2007, IEEE T SOFTWARE ENG, V33, P725, DOI 10.1109/TSE.2007.70731
   Fowler M., 1999, Refactoring: Improving the Design of Existing Code
   Fu Q, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P24, DOI 10.1145/2591062.2591175
   Humble Jez, 2010, Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation
   Kabinna Suhas, 2016, P 13 INT C MIN SOFTW
   Kampstra P., 2008, Journal of Statistical Software, V28, P1, DOI [10.18637/jss.v028.c01, DOI 10.18637/JSS.V028.C01, 10.18637/jss.v028.c01.papers3://publication/uuid/692988CE-7E10-498E-96EC-E7A0CE3620A3]
   Kiczales G., 1997, ASPECT ORIENTED PROG
   Kim S, 2006, IEEE INT CONF AUTOM, P81
   Li H, 2017, EMPIR SOFTW ENG, V22, P1684, DOI 10.1007/s10664-016-9456-2
   Li H, 2017, EMPIR SOFTW ENG, V22, P1831, DOI 10.1007/s10664-016-9467-z
   Moha N., 2010, IEEE T SOFTWARE ENG
   Oliner A, 2012, COMMUN ACM, V55, P63, DOI 10.1145/2076450.2076466
   Palomba F, 2015, IEEE T SOFTWARE ENG
   Pecchia A, 2015, 37 INT C SOFTW ENG
   Romano J, 2006, ANN M FLOR ASS I RES, P1
   Sajnani H, 2016, PROC INT CONF SOFTW, P1157, DOI 10.1145/2884781.2884877
   Shang W, 2014, P 2014 IEEE INT C SO
   Shang WY, 2015, EMPIR SOFTW ENG, V20, P1, DOI 10.1007/s10664-013-9274-8
   Shang WY, 2014, J SOFTW-EVOL PROC, V26, P3, DOI 10.1002/smr.1579
   Yuan D., 2012, P 2012 USENIX S OP S, P293
   Yuan D, 2012, PROC INT CONF SOFTW, P102, DOI 10.1109/ICSE.2012.6227202
   Zhao Xu, 2017, P 26 S OP SYST PRINC
   Zhu J, 2015, P 37 INT C SOFTW ENG
NR 53
TC 19
Z9 20
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2019
VL 24
IS 4
BP 2285
EP 2322
DI 10.1007/s10664-019-09690-0
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IL9CL
UT WOS:000477582700017
DA 2024-07-18
ER

PT J
AU McChesney, I
   Bond, R
AF McChesney, Ian
   Bond, Raymond
TI Eye tracking analysis of computer program comprehension in programmers
   with dyslexia
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Computer programming; Program comprehension; Eye tracking; Dyslexia
ID VISUAL-ATTENTION; DUAL-ROUTE; MOVEMENTS; PERSONALITY; IMPACT; MODEL;
   READ; BEHAVIOR; WORDS; STYLE
AB This paper investigates the impact of dyslexia on the reading and comprehension of computer program code. Drawing upon work from the fields of program comprehension, eye tracking, dyslexia, models of reading and dyslexia gaze behaviour, a set of hypotheses is developed with which to investigate potential differences in the gaze behaviour of programmers with dyslexia compared to typical programmers. The hypotheses posit that, in general terms, programmers with dyslexia will show gaze behaviour of longer duration and a greater number of fixations on program features than typical programmers. An experiment is described in which 28 programmers (14 with dyslexia, 14 without dyslexia) were asked to read and explain three simple computer programs. Eye tracking technology is used to capture the gaze behaviour of the programmers. Data analysis suggests that the code reading behaviour of programmers with dyslexia is not what would be expected based on the dyslexia literature relating to natural text. In conjunction with further exploratory analysis, observations are made in relation to spatial differences in how programmers with dyslexia read and scan code. The results show that the gaze behaviour of programmers with dyslexia requires further study to understand effects such as code layout, identifier naming and line length. A possible impact on dyslexia gaze behaviour is from the visual crowding of features in program code which might cause certain program features to receive less attention during a program comprehension task.
C1 [McChesney, Ian; Bond, Raymond] Ulster Univ, Sch Comp, Newtownabbey, North Ireland.
C3 Ulster University
RP McChesney, I (corresponding author), Ulster Univ, Sch Comp, Newtownabbey, North Ireland.
EM ir.mcchesney@ulster.ac.uk; rb.bond@ulster.ac.uk
OI McChesney, Ian/0000-0002-5202-5360; Bond, Raymond/0000-0002-1078-2232
CR Adelman JS, 2010, PSYCHOL SCI, V21, P1799, DOI 10.1177/0956797610387442
   Ali N, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P191, DOI 10.1109/ICSM.2012.6405271
   [Anonymous], P 24 ANN C PSYCH PRO
   [Anonymous], CURR PSYCHOL LETT BE
   [Anonymous], 2014, KEY PERSPECTIVES DYS
   [Anonymous], 2004, INNOVATION TEACHING
   [Anonymous], 2014, EYE MOVEMENTS PROGRA
   [Anonymous], JAV COD CONV
   Bednarik R., 2006, Proceedings. ETRA 2006. Symposium on Eye Tracking Research and Applications, P125, DOI 10.1145/1117309.1117356
   Bellocchi S., 2013, EYE MOVEMENT DEV PER, P93
   Bellocchi S, 2013, RES DEV DISABIL, V34, P452, DOI 10.1016/j.ridd.2012.09.002
   Binkley D, 2013, EMPIR SOFTW ENG, V18, P219, DOI 10.1007/s10664-012-9201-4
   BISHOPCLARK C, 1995, COMPUT HUM BEHAV, V11, P241, DOI 10.1016/0747-5632(94)00034-F
   BROOKS R, 1983, INT J MAN MACH STUD, V18, P543, DOI 10.1016/S0020-7373(83)80031-5
   Brooks R., 1978, 3rd International Conference on Software Engineering, P196
   BUSJAHN T., 2014, S EYE TRACKING RES A, P335, DOI DOI 10.1145/2578153
   Busjahn T., 2014, ICER 2014 P 10 ANN I, P3, DOI DOI 10.1145/2632320.2632344
   Busjahn T, 2015, INT C PROGRAM COMPRE, P255, DOI 10.1109/ICPC.2015.36
   Busjahn Teresa, 2011, P 11 KOL CALL INT C, p1s9
   Coltheart M, 2001, PSYCHOL REV, V108, P204, DOI 10.1037//0033-295X.108.1.204
   COLTHEART M, 1993, PSYCHOL REV, V100, P589, DOI 10.1037/0033-295X.100.4.589
   Coppin P, 2009, IEEE TIC-STH 09: 2009 IEEE TORONTO INTERNATIONAL CONFERENCE: SCIENCE AND TECHNOLOGY FOR HUMANITY, P801, DOI 10.1109/TIC-STH.2009.5444390
   Coppin P, 2008, 2008 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P266, DOI 10.1109/VLHCC.2008.4639104
   Cruz S, 2015, COMPUT HUM BEHAV, V46, P94, DOI 10.1016/j.chb.2014.12.008
   De Luca M, 2002, BRAIN LANG, V80, P617, DOI 10.1006/brln.2001.2637
   De Smet B, 2014, SCI COMPUT PROGRAM, V79, P260, DOI 10.1016/j.scico.2012.01.004
   Engbert R, 2005, PSYCHOL REV, V112, P777, DOI 10.1037/0033-295X.112.4.777
   Facoetti A, 2001, NEUROPSYCHOLOGIA, V39, P352, DOI 10.1016/S0028-3932(00)00138-X
   Friedmann N., 2016, Handbook of communication disorders: Theoretical, empirical, and applied linguistics perspectives, P721
   Hari R, 2001, TRENDS COGN SCI, V5, P525, DOI 10.1016/S1364-6613(00)01801-5
   Hawelka S, 2010, COGNITION, V115, P367, DOI 10.1016/j.cognition.2009.11.004
   HOWELL D.C., 2012, Statistical methods for psychology
   Jbara A, 2017, EMPIR SOFTW ENG, V22, P1440, DOI 10.1007/s10664-016-9477-x
   Kevic K, 2017, J SYST SOFTWARE, V128, P252, DOI 10.1016/j.jss.2016.03.030
   Law C, 2017, NEUROPSYCHOL REHABIL, V27, P149, DOI 10.1080/09602011.2015.1064453
   Maalej W, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2622669
   McChesney I, 2018, EYE MOVEMENTS IN PROGRAMMING (EMIP 2018), DOI 10.1145/3216723.3216724
   Morris MR, 2015, ASSETS'15: PROCEEDINGS OF THE 17TH INTERNATIONAL ACM SIGACCESS CONFERENCE ON COMPUTERS & ACCESSIBILITY, P173, DOI 10.1145/2700648.2809841
   Pennington BF, 2015, OXFORD HDB READING, P361
   PENNINGTON N, 1987, COGNITIVE PSYCHOL, V19, P295, DOI 10.1016/0010-0285(87)90007-7
   Perea M, 2012, LEARN INSTR, V22, P420, DOI 10.1016/j.learninstruc.2012.04.001
   Prado C, 2007, VISION RES, V47, P2521, DOI 10.1016/j.visres.2007.06.001
   Radach R, 2013, Q J EXP PSYCHOL, V66, P429, DOI 10.1080/17470218.2012.750676
   Rayner K, 2009, Q J EXP PSYCHOL, V62, P1457, DOI 10.1080/17470210902816461
   Reichle E.D., 2015, OXFORD HDB READING, P277
   Rodeghero P, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P390, DOI 10.1145/2568225.2568247
   Salleh N, 2014, EMPIR SOFTW ENG, V19, P714, DOI 10.1007/s10664-012-9238-4
   Schroeder S, 2015, J COGN PSYCHOL, V27, P500, DOI 10.1080/20445911.2015.1046877
   Schulte Carsten, 2010, P 2010 ITICSE WORK G, P65, DOI [10.1145/1971681.1971687, DOI 10.1145/1971681.1971687]
   Sexton CC, 2012, J LEARN DISABIL-US, V45, P538, DOI 10.1177/0022219411407772
   SHAFT TM, 1995, INFORM SYST RES, V6, P286, DOI 10.1287/isre.6.3.286
   Sharif B, 2016, IEEE SOFTWARE, V33, P105, DOI 10.1109/MS.2016.84
   SHNEIDERMAN B, 1979, INT J COMPUT INF SCI, V8, P219, DOI 10.1007/BF00977789
   Siegmund J, 2015, EMPIR SOFTW ENG, V20, P1159, DOI 10.1007/s10664-014-9318-8
   Spinelli D, 2002, CORTEX, V38, P179, DOI 10.1016/S0010-9452(08)70649-X
   vonMayrhauser A, 1997, J SOFTW MAINT-RES PR, V9, P299, DOI 10.1002/(SICI)1096-908X(199709/10)9:5<299::AID-SMR157>3.0.CO;2-S
   Wallace S., 2015, DICT ED
NR 57
TC 5
Z9 5
U1 2
U2 14
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2019
VL 24
IS 3
BP 1109
EP 1154
DI 10.1007/s10664-018-9649-y
PG 46
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA ID9YT
UT WOS:000472043800003
OA Green Submitted, Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Quirchmayr, T
   Paech, B
   Kohl, R
   Karey, H
   Kasdepke, G
AF Quirchmayr, Thomas
   Paech, Barbara
   Kohl, Roland
   Karey, Hannes
   Kasdepke, Gunar
TI Semi-automatic rule-based domain terminology and software
   feature-relevant information extraction from natural language user
   manuals: An approach and evaluation at Roche Diagnostics GmbH
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software feature; Terminology extraction; Atomic information extraction;
   NLP
ID REQUIREMENTS
AB Mature software systems comprise a vast number of heterogeneous system capabilities which are usually requested by different groups of stakeholders and which evolve over time. Software features describe and bundle low level capabilities logically on an abstract level and thus provide a structured and comprehensive overview of the entire capabilities of a software system. Software features are often not explicitly managed. Quite the contrary, feature-relevant information is often spread across several software engineering artifacts (e.g., user manual, issue tracking systems). It requires huge manual effort to identify and extract feature-relevant information from these artifacts in order to make feature knowledge explicit. In this paper we present a two-step-approach to extract feature-relevant information from a user manual: First we semi-automatically extract a domain terminology from a natural language user manual based on linguistic patterns. Then, we apply natural language processing techniques based on the extracted domain terminology and structural sentence information. Our approach is able to extract atomic feature-relevant information with an F-1-score of at least 92.00%. We describe the implementation of the approach as well as evaluations based on example sections of a user manual taken from industry.
C1 [Quirchmayr, Thomas; Paech, Barbara] Heidelberg Univ, Inst Comp Sci, Heidelberg, Germany.
   [Kohl, Roland; Karey, Hannes; Kasdepke, Gunar] Roche Diagnost GmbH, Mannheim, Germany.
C3 Ruprecht Karls University Heidelberg; Roche Holding
RP Quirchmayr, T (corresponding author), Heidelberg Univ, Inst Comp Sci, Heidelberg, Germany.
EM Thomas.Quirchmayr@informatik.uni-heidelberg.de;
   Barbara.Paech@informatik.uni-heidelberg.de; Roland.Kohl@roche.com;
   Hannes.Karey@roche.com; Gunar.Kasdepke@roche.com
RI Paech, Barbara/AAI-5997-2020
FU Roche Diagnostics GmbH
FX We would like to thank Roche Diagnostics GmbH for the financial support
   of this research project. Many thanks also to the GDC experts for their
   participation in the case study and valuable discussions of the results.
CR Abney S., 1991, PRINCIPLE BASED PARS
   ACHER M., 2012, P 6 INT WORKSH VAR M, P45, DOI DOI 10.1145/2110147.2110153
   Aggarwal CC., 2012, Mining text data, P1, DOI [DOI 10.1007/978-1-4614-3223-4_1, 10.1007/978-1-4614-3223-4, DOI 10.1007/978-1-4614-3223-4]
   Alves V, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P67, DOI 10.1109/SPLC.2008.18
   [Anonymous], 1990, IEEE STANDARD GLOSSA
   [Anonymous], 2020, Feature Extraction and Image Processing
   [Anonymous], 2003, Advances in Neural Information Processing Systems
   [Anonymous], 1996, P 16 C COMP LING, DOI DOI 10.3115/993268.993361
   Apel S, 2009, J OBJECT TECHNOL, V8, P49, DOI 10.5381/jot.2009.8.5.c5
   Bakar NH, 2015, 2 INT C INF SCI SEC, P1
   Bakar NH, 2015, J SYST SOFTWARE, V106, P132, DOI 10.1016/j.jss.2015.05.006
   Balachandran K, 2016, 2016 IEEE/WIC/ACM INTERNATIONAL CONFERENCE ON WEB INTELLIGENCE (WI 2016), P34, DOI [10.1109/WI.2016.16, 10.1109/WI.2016.0016]
   Beliga S, 2015, J INF ORGAN SCI, V39, P1
   Berry Daniel, 2012, Requirements Engineering: Foundation for Software Quality. Proceedings 18th International Working Conference, REFSQ 2012, P211, DOI 10.1007/978-3-642-28714-5_18
   Berry DM, 2017, 2017 IEEE 25TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW), P284, DOI 10.1109/REW.2017.25
   Bishop Christopher M, 2006, PATTERN RECOGN, V128, P1
   Blanco R, 2012, INFORM RETRIEVAL, V15, P54, DOI 10.1007/s10791-011-9172-x
   Bosch J., 2000, Design and Use of Software Architectures: Adopting and Evolving a Product-Line Approach
   Boutkova E, 2011, INT REQUIR ENG CONF, P313, DOI 10.1109/RE.2011.6051627
   Brinton LaurelJ. Donna M. Brinton., 2010, LINGUISTIC STRUCTURE
   Charniak Eugene., 1997, Statistical Parsing with a Context-free Grammar and Word Statistics
   Chen J., 2004, Proceedings of the Second Workshop on Australasian information Security, Data Mining and Web intelligence, and Software internationalisation - Volume 32 (Dunedin, New Zealand), V32, P157
   Chen K, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P31
   Chen PI, 2010, EXPERT SYST APPL, V37, P1928, DOI 10.1016/j.eswa.2009.07.016
   Classen A, 2008, LECT NOTES COMPUT SC, V4961, P16, DOI 10.1007/978-3-540-78743-3_2
   Conrado Merley., 2013, Proceedings of the 2013 NAACL HLT Student Research Workshop, P16
   Conrado MS, 2014, P 11 INT WORKSH NAT, P49
   Corbett G.G., 2006, ENCY LANGUAGE LINGUI, V7, P193, DOI DOI 10.1016/B0-08-044854-2/04782-9
   Drymonas E, 2010, LECT NOTES COMPUT SC, V6177, P277, DOI 10.1007/978-3-642-13881-2_29
   Earls AB, 2002, BT TECHNOL J, V20, P127, DOI 10.1023/A:1021311932020
   Eisenbarth T, 2003, IEEE T SOFTWARE ENG, V29, P210, DOI 10.1109/TSE.2003.1183929
   Ercan G, 2007, INFORM PROCESS MANAG, V43, P1705, DOI 10.1016/j.ipm.2007.01.015
   Gao XZ, 2005, INT CONF E BUS ENG, P332, DOI 10.1109/ICEBE.2005.66
   Ghosh S, 2016, LECT NOTES COMPUT SC, V9690, P41, DOI 10.1007/978-3-319-40648-0_4
   Guzman E, 2014, INT REQUIR ENG CONF, P153, DOI 10.1109/RE.2014.6912257
   Indurkhya N, 2010, CH CRC MACH LEARN PA, pXXI
   John I, 2003, P 9 INT WORKSH REQ E, P17
   Jonnalagadda S., 2009, P HUMAN LANGUAGE TEC, P177
   Kim S.N., 2009, AUSTRALASIAN LANGUAG, P94
   Kleinberg JM, 1999, J ACM, V46, P604, DOI 10.1145/324133.324140
   Kof L, 2010, LECT NOTES COMPUT SC, V5723, P79
   Levy R., 2006, P LREC GEN IT, P2231
   Li Y, 2015, PROCEDIA COMPUT SCI, V51, P582, DOI 10.1016/j.procs.2015.05.326
   Liu F., 2009, NAACL HLT 2009-Human Language Technologies: The 2009 Annual Conference of the North American Chapter of the Association for Computational Linguistics, Proceedings of the Conference, P620, DOI DOI 10.3115/1620754.1620845
   Lossio-Ventura J A, 2014, JADT JOURNEES DANALY, P421
   Lossio-Ventura JA, 2014, LECT NOTES ARTIF INT, V8686, P52, DOI 10.1007/978-3-319-10888-9_6
   Loughran N, 2006, LECT NOTES COMPUT SC, V3844, P262
   Manning CD, 2014, PROCEEDINGS OF 52ND ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: SYSTEM DEMONSTRATIONS, P55, DOI 10.3115/v1/p14-5010
   Marciuska S, 2014, LECT NOTES BUS INF P, V166, P100
   Meijer K, 2014, DECIS SUPPORT SYST, V62, P78, DOI 10.1016/j.dss.2014.03.006
   Melville P, 2009, KDD-09: 15TH ACM SIGKDD CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1275
   Merten T, 2016, INT REQUIR ENG CONF, P166, DOI 10.1109/RE.2016.8
   Mu YH, 2009, 2009 INTERNATIONAL CONFERENCE ON INFORMATION AND MULTIMEDIA TECHNOLOGY, PROCEEDINGS, P194, DOI 10.1109/ICIMT.2009.47
   Paech B., 2014, P 9 INT C SOFTW ENG, P114
   Pikkarainen M, 2008, EMPIR SOFTW ENG, V13, P303, DOI 10.1007/s10664-008-9065-9
   Quirchmayr T, 2017, LECT NOTES COMPUT SC, V10153, P255, DOI 10.1007/978-3-319-54045-0_19
   Rose D., 2010, TEXT MINING APPL THE, V1, P1, DOI [DOI 10.1002/9780470689646.CH1, 10.1002/9780470689646.CH1]
   Sebastiani F, 2002, ACM COMPUT SURV, V34, P1, DOI 10.1145/505282.505283
   Shaker P., 2012, 2012 IEEE 20th International Requirements Engineering Conference (RE 2012), P151, DOI 10.1109/RE.2012.6345799
   Venu SH, 2017, LECT NOTES ARTIF INT, V10089, P132, DOI 10.1007/978-3-319-58130-9_13
   Ward L. J, 2013, ENGLISH GRAMMAR DUMM
   WESTON N., 2009, P 13 INT SOFTWARE PR, P211
   Wimalasuriya DC, 2010, J INF SCI, V36, P306, DOI 10.1177/0165551509360123
   Wong W, 2012, ACM COMPUT SURV, V44, DOI 10.1145/2333112.2333115
   Zapata J. C. M., 2012, P 38 C LAT INF CLEI, P1
   Zhang K, 2006, LECT NOTES COMPUT SC, V4016, P85, DOI 10.1007/11775300_8
   Zorn-Pauli G., 2012, P 6 INT WORKSH SOFTW, P186
NR 67
TC 7
Z9 8
U1 0
U2 8
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2018
VL 23
IS 6
BP 3630
EP 3683
DI 10.1007/s10664-018-9597-6
PG 54
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HC1WE
UT WOS:000451593200016
DA 2024-07-18
ER

PT J
AU Zhang, Y
   Lo, D
   Xia, X
   Scanniello, G
   Le, TDB
   Sun, JL
AF Zhang, Yun
   Lo, David
   Xia, Xin
   Scanniello, Giuseppe
   Le, Tien-Duy B.
   Sun, Jianling
TI Fusing multi-abstraction vector space models for concern localization
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Concern localization; Multi-Abstraction; Text retrieval; Topic modeling;
   Data fusion
ID LINK ANALYSIS ALGORITHMS; STATIC CONCEPT LOCATION;
   INFORMATION-RETRIEVAL; EXECUTION; RANKING; IR
AB Concern localization refers to the process of locating code units that match a particular textual description. It takes as input textual documents such as bug reports and feature requests and outputs a list of candidate code units that are relevant to the bug reports or feature requests. Many information retrieval (IR) based concern localization techniques have been proposed in the literature. These techniques typically represent code units and textual descriptions as a bag of tokens at one level of abstraction, e.g., each token is a word, or each token is a topic. In this work, we propose a multi-abstraction concern localization technique named MULAB. MULAB represents a code unit and a textual description at multiple abstraction levels. Similarity of a textual description and a code unit is now made by considering all these abstraction levels. We combine a vector space model (VSM) and multiple topic models to compute the similarity and apply a genetic algorithm to infer semi-optimal topic model configurations. We also propose 12 variants of MULAB by using different data fusion methods. We have evaluated our solution on 175 concerns from 9 open source Java software systems. The experimental results show that variant COMBMNZ-DEF performs better than other variants, and also outperforms the state-of-art baseline called PR (PageRank based algorithm), which is proposed by Scanniello et al. (Empir Softw Eng 20(6): 1666-1720 2015) in terms of effectiveness and rank.
C1 [Zhang, Yun; Xia, Xin] Zhejiang Univ, Coll Comp Sci & Technol, Hangzhou, Zhejiang, Peoples R China.
   [Sun, Jianling] Zhejiang Univ, Coll Comp Sci & Technol, Comp Sci, Hangzhou, Zhejiang, Peoples R China.
   [Lo, David; Le, Tien-Duy B.] Singapore Management Univ, Sch Informat Syst, Singapore, Singapore.
   [Xia, Xin] Monash Univ, Fac Informat Technol, Scenic Blvd, Clayton, Vic 3800, Australia.
   [Scanniello, Giuseppe] Univ Basilicata, Dept Math & Comp Sci, Potenza, Italy.
C3 Zhejiang University; Zhejiang University; Singapore Management
   University; Monash University; University of Basilicata
RP Xia, X (corresponding author), Zhejiang Univ, Coll Comp Sci & Technol, Hangzhou, Zhejiang, Peoples R China.; Xia, X (corresponding author), Monash Univ, Fac Informat Technol, Scenic Blvd, Clayton, Vic 3800, Australia.
EM yunzhang28@zju.edu.cn; davidlo@smu.edu.sg; xxkidd@zju.edu.cn;
   giuseppe.scanniello@unibas.it; btdle.2012@smu.edu.sg; sunjl@zju.edu.cn
RI Xia, Xin/AAD-6217-2022; Lo, David/A-2493-2012
OI Xia, Xin/0000-0002-6302-3256; Lo, David/0000-0002-4367-7201; Scanniello,
   Giuseppe/0000-0003-0024-7508
FU NSFC Program [61602403, 61572426]
FX This work was supported by NSFC Program (No. 61602403 and 61572426).
CR [Anonymous], SANER
   [Anonymous], 1992, P 1 TEXT RETR C TREC
   [Anonymous], ICSME
   [Anonymous], ADAPT LEARN OPTIM
   [Anonymous], APPL LINEAR ALGEBRA
   [Anonymous], J ACM COMPUT SURV CS
   [Anonymous], INT J UNCERTAIN FUZZ
   [Anonymous], IEEE T RELIABILITY
   [Anonymous], ICSE 2003
   [Anonymous], 2014, P 22 INT C PROGR COM
   [Anonymous], WCRE
   [Anonymous], 2013, Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering-ESEC/FSE 2013, page
   [Anonymous], IEEE T MULTIMEDIA
   [Anonymous], MSR
   [Anonymous], INFORM RETRIEVAL
   [Anonymous], 2014, P IEEE ACM 29 INT C
   [Anonymous], COMPOSITIONAL VECTOR
   [Anonymous], IEEE T SOFTWARE ENG
   Antoniol G, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P172, DOI 10.1109/METRIC.2004.1357901
   Anvik John, 2005, P 2005 OOPSLA WORKSH, P35
   Arcuri A, 2011, LECT NOTES COMPUT SC, V6956, P33, DOI 10.1007/978-3-642-23716-4_6
   Aslam J. A., 2001, SIGIR Forum, P276
   Asuncion HU, 2010, 2010 ACM IEEE 32 INT, V1, P95
   Binkley D, 2014, PROC IEEE INT CONF S, P441, DOI 10.1109/ICSME.2014.70
   Blei DM, 2007, ANN APPL STAT, V1, P17, DOI 10.1214/07-AOAS114
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Canfora G, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P252, DOI 10.1109/ICST.2013.38
   Chengnian Sun, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P253, DOI 10.1109/ASE.2011.6100061
   Cliff N., 2014, ORDINAL METHODS BEHA
   Dit B, 2013, EMPIR SOFTW ENG, V18, P277, DOI 10.1007/s10664-011-9194-4
   Eaddy M, 2008, INT C PROGRAM COMPRE, P53, DOI 10.1109/ICPC.2008.39
   Gay G, 2009, PROC IEEE INT CONF S, P351, DOI 10.1109/ICSM.2009.5306315
   Gold N, 2006, PROC IEEE INT CONF S, P310
   Goldberg David E, 1989, GENETIC ALGORITHMS S
   Griffiths TL, 2004, P NATL ACAD SCI USA, V101, P5228, DOI 10.1073/pnas.0307752101
   Haiduc S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P842, DOI 10.1109/ICSE.2013.6606630
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Hindle A, 2012, PROC INT CONF SOFTW, P837, DOI 10.1109/ICSE.2012.6227135
   Holland J.H., 1992, Adaptation in Natural and Artificial Systems, DOI DOI 10.7551/MITPRESS/1090.001.0001
   Hotho A., 2002, KUNSTL INTELL, V16, P48
   Kaufman Leonard., Wiley Series in Probability and Statistics, P68, DOI DOI 10.1093/aje/kwu209
   Le Goues C., 2012, IEEE Transactions on Software Engineering, V38, P54, DOI 10.1109/TSE.2011.104
   Le TDB, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P579, DOI 10.1145/2786805.2786880
   Le XBD, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P213, DOI 10.1109/SANER.2016.76
   Li Z, 2007, IEEE T SOFTWARE ENG, V33, P225, DOI 10.1109/TSE.2007.38
   Liu DP, 2007, P INT COMP SOFTW APP, P29
   Mancoridis S., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P50, DOI 10.1109/ICSM.1999.792498
   Manning Christopher D., 2008, INTRO INFORM RETRIEV
   Moreno L, 2013, PROC IEEE INT CONF S, P452, DOI 10.1109/ICSM.2013.70
   Oliveto Rocco, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P68, DOI 10.1109/ICPC.2010.20
   Panichella A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P522, DOI 10.1109/ICSE.2013.6606598
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI [10.1109/TSE.2007.1016, 10.1109/TSE.2007.1016.]
   Robillard MP, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1189748.1189751
   Sander J, 1998, DATA MIN KNOWL DISC, V2, P169, DOI 10.1023/A:1009745219419
   Scanniello G, 2015, EMPIR SOFTW ENG, V20, P1666, DOI 10.1007/s10664-014-9327-7
   Scanniello G, 2011, CONF PROC INT SYMP C, P1, DOI 10.1109/ICPC.2011.13
   Shaowei Wang, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P556, DOI 10.1109/ASE.2011.6100124
   Tang YB, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON CONSUMER ELECTRONICS-TAIWAN (ICCE-TW), P101
   Thomas SW, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1138, DOI 10.1145/1985793.1986020
   Tonella P., 2004, Software Engineering Notes, V29, P119, DOI 10.1145/1013886.1007528
   Wallach Hanna M., 2009, Advances in neural information processing systems, P1973, DOI DOI 10.1007/S10708-008-9161-9
   Wang Tiantian, 2013, P 2013 9 JOINT M FDN, P455
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Xia X, 2017, AUTOMAT SOFTW ENG, V24, P455, DOI 10.1007/s10515-016-0204-z
   Xia X, 2017, IEEE T SOFTWARE ENG, V43, P272, DOI 10.1109/TSE.2016.2576454
   Xia X, 2015, J SOFTW-EVOL PROC, V27, P195, DOI 10.1002/smr.1706
   Xuan JF, 2014, PROC IEEE INT CONF S, P191, DOI 10.1109/ICSME.2014.41
   Ye X, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P689, DOI 10.1145/2635868.2635874
   Zhao W, 2006, ACM T SOFTW ENG METH, V15, P195, DOI 10.1145/1131421.1131424
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
NR 70
TC 6
Z9 9
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2018
VL 23
IS 4
BP 2279
EP 2322
DI 10.1007/s10664-017-9585-2
PG 44
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GK0MK
UT WOS:000435804100014
OA Green Published
DA 2024-07-18
ER

PT J
AU Narayanan, A
   Chandramohan, M
   Chen, LH
   Liu, Y
AF Narayanan, Annamalai
   Chandramohan, Mahinthan
   Chen, Lihui
   Liu, Yang
TI A multi-view context-aware approach to Android malware detection and
   malicious code localization
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Android malware detection; Graph kernels; Multiple kernel learning;
   Malicious code localization
AB Many existing Machine Learning (ML) based Android malware detection approaches use a variety of features such as security-sensitive APIs, system calls, control-flow structures and information flows in conjunction with ML classifiers to achieve accurate detection. Each of these feature sets provides a unique semantic perspective (or view) of apps' behaviors with inherent strengths and limitations. Meaning, some views are more amenable to detect certain attacks but may not be suitable to characterize several other attacks. Most of the existing malware detection approaches use only one (or a selected few) of the aforementioned feature sets which prevents them from detecting a vast majority of attacks. Addressing this limitation, we propose MKLDroid, a unified framework that systematically integrates multiple views of apps for performing comprehensive malware detection and malicious code localization. The rationale is that, while a malware app can disguise itself in some views, disguising in every view while maintaining malicious intent will be much harder. MKLDroid uses a graph kernel to capture structural and contextual information from apps' dependency graphs and identify malice code patterns in each view. Subsequently, it employs Multiple Kernel Learning (MKL) to find a weighted combination of the views which yields the best detection accuracy. Besides multi-view learning, MKLDroid's unique and salient trait is its ability to locate fine-grained malice code portions in dependency graphs (e.g., methods/classes). Malicious code localization caters several important applications such as supporting human analysts studying malware behaviors, engineering malware signatures, and other counter-measures. Through our large-scale experiments on several datasets (incl. wild apps), we demonstrate that MKLDroid outperforms three state-of-the-art techniques consistently, in terms of accuracy while maintaining comparable efficiency. In our malicious code localization experiments on a dataset of repackaged malware, MKLDroid was able to identify all the malice classes with 94% average recall. Our work opens up two new avenues in malware research: (i) enables the research community to elegantly look at Android malware behaviors in multiple perspectives simultaneously, and (ii) performing precise and scalable malicious code localization.
C1 [Narayanan, Annamalai; Chandramohan, Mahinthan; Liu, Yang] Nanyang Technol Univ, Singapore, Singapore.
   [Chen, Lihui] Nanyang Technol Univ, Ctr Infocomm Technol, Sch Elect & Elect Engn, Singapore, Singapore.
C3 Nanyang Technological University; Nanyang Technological University
RP Narayanan, A (corresponding author), Nanyang Technol Univ, Singapore, Singapore.
EM annamala002@e.ntu.edu.sg; mahinthan@ntu.edu.sg; elhchen@ntu.edu.sg;
   yangliu@ntu.edu.sg
RI liu, yang/HIU-0559-2022; liu, yang/HQY-7531-2023; yang,
   liu/HTN-9175-2023; liu, yang/HHY-8583-2022; Chen, LiHui/A-5146-2011;
   yang, liu/GVU-8760-2022; LIU, YANG/HWQ-4615-2023; Liu, Yang/D-2306-2013;
   Liu, Yang/HNJ-6693-2023
OI Chen, LiHui/0000-0001-7452-1675; Liu, Yang/0000-0001-7300-9215; 
CR Allix K., 2014, Machine Learning-Based Malware Detection for Android Applications: History Matters!
   Allix K, 2016, P 13 INT C MIN SOFTW
   Allix K, 2016, EMPIR SOFTW ENG, V21, P183, DOI 10.1007/s10664-014-9352-6
   [Anonymous], P 2014 WORKSH ART IN
   [Anonymous], 2012 EUR INT SEC INF
   [Anonymous], WORKSH MIN LEARN GRA
   [Anonymous], 2013, ACM WORKSH AI SEC
   [Anonymous], 2012, CCS
   [Anonymous], 2016, MOBILE SECUR TECHNOL
   [Anonymous], 2005, 5 IEEE INT C DAT MIN
   [Anonymous], IEEE T DEPENDABLE SE
   [Anonymous], P INT C SOFTW ENG IC
   [Anonymous], 2013, INT C SEC PRIV COMM
   [Anonymous], P ACM SIGSAC C COMPU, DOI DOI 10.1145/2517312.2517315
   [Anonymous], P 6 ACM C SEC PRIV W
   [Anonymous], 2011, P 1 ACM WORKSH SEC P
   Arp D., 2014, P ANN S NETW DISTR S P ANN S NETW DISTR S
   Arzt S, 2014, ACM SIGPLAN NOTICES, V49, P259, DOI [10.1145/2666356.2594299, 10.1145/2594291.2594299]
   Avdiienko V, 2015, 2015 IEEE ACM 37 IEE, V1
   Burges CJC, 1998, DATA MIN KNOWL DISC, V2, P121, DOI 10.1023/A:1009715923555
   Cesare S., 2010, Proceedings of the Eighth Australasian Symposium on Parallel and Distributed Computing, V107, P61
   Chen K, 2015, 24 USENIX SEC S USEN
   Deo A, 2016, P 2016 ACM WORKSH AR
   Elish KO, 2015, COMPUT SECUR, V49, P255, DOI 10.1016/j.cose.2014.11.001
   Enrico Mariconti, 2016, ARXIV161204433
   Forman G., 2003, Journal of Machine Learning Research, V3, P1289, DOI 10.1162/153244303322753670
   Fredrikson M, 2010, P IEEE S SECUR PRIV, P45, DOI 10.1109/SP.2010.11
   Garcia J., 2015, TECHNICAL REPORT
   Gärtner T, 2003, LECT NOTES ARTIF INT, V2777, P129, DOI 10.1007/978-3-540-45167-9_11
   Gönen M, 2011, J MACH LEARN RES, V12, P2211
   Gordon M.I., 2015, Information-flow analysis of android applications in droidsafe
   Gorla A., 2014, P 36 INT C SOFTW ENG
   Guyon I., 2003, Journal of Machine Learning Research, V3, P1157, DOI 10.1162/153244303322753616
   Hassen M, 2017, SCALABLE FUNCTION CA
   Hido S, 2009, 9 IEEE INT C DAT MIN
   Hoi SCH, 2013, MACH LEARN, V90, P289, DOI 10.1007/s10994-012-5319-2
   Ke Tian, 2016, 2016 IEEE SEC PRIV W
   Kriege N. M., 2017, ARXIV170300676
   Li L, 2017, P INT WORKSH MOB SOF
   LI L, 2015, P 37 INT C SOFTW ENG, V1
   Li Li, 2017, IEEE T INFORM FORENS
   Ma J., 2009, P 26 ANN INT C MACH
   Meng G., 2016, P 11 ACM AS C COMP C
   Mu Z., 2014, P 2014 ACM SIGSAC C
   Narayanan A, 2016, 2016 INT JOINT C NEU
   Octeau D, 2015, P 27 INT C SOFTW ENG, V1
   Peiravian N, 2013, 2013 IEEE 25 INT C T
   Pouik, 2012, PHRACK, V14, P68
   Rasthofer Siegfried., 2014, A machine-learning approach for classifying and categorizing android sources and sinks
   Ribeiro Marco Tulio, 2016, P SIGKDD
   ROY S., 2015, P 31 ANN COMP SEC AP
   Searles R, 2017, P 25 EUR C PAR DISTR
   Shervashidze N, 2011, J MACH LEARN RES, V12, P2539
   Shervashidze Nino, 2009, P INT C ART INT STAT, P488
   Singh A, 2012, P 4 ACM WORKSH SEC A
   Suarez-Tangil G, 2016, DROIDSIEVE FAST ACCU
   Tam K, 2017, ACM COMPUT SURV, V49, DOI 10.1145/3017427
   Vishwanathan S., 2010, Proc. of Neural Information Processing Systems, P2361
   Xu L., 2016, SAI INT SYST C INTEL SAI INT SYST C INTEL
   Yanardag P., 2015, P SIGKDD
   Yang C, 2014, LECT NOTES COMPUT SC, V8712, P163, DOI 10.1007/978-3-319-11203-9_10
   Zhou Yajin, 2012, 2012 IEEE S SEC PRIV
NR 62
TC 46
Z9 58
U1 1
U2 28
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2018
VL 23
IS 3
BP 1222
EP 1274
DI 10.1007/s10664-017-9539-8
PG 53
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GH6DH
UT WOS:000433532300003
DA 2024-07-18
ER

PT J
AU Joblin, M
   Apel, S
   Mauerer, W
AF Joblin, Mitchell
   Apel, Sven
   Mauerer, Wolfgang
TI Evolutionary trends of developer coordination: a network approach
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software evolution; Developer coordination; Developer networks
ID OPEN SOURCE SOFTWARE; SOCIAL NETWORK; PRODUCTIVITY; IMPACT
AB Software evolution is a fundamental process that transcends the realm of technical artifacts and permeates the entire organizational structure of a software project. By means of a longitudinal empirical study of 18 large open-source projects, we examine and discuss the evolutionary principles that govern the coordination of developers. By applying a network-analytic approach, we found that the implicit and self-organizing structure of developer coordination is ubiquitously described by non-random organizational principles that defy conventional software-engineering wisdom. In particular, we found that: (a) developers form scale-free networks, in which the majority of coordination requirements arise among an extremely small number of developers, (b) developers tend to accumulate coordination requirements with more and more developers over time, presumably limited by an upper bound, and (c) initially developers are hierarchically arranged, but over time, form a hybrid structure, in which core developers are hierarchically arranged and peripheral developers are not. Our results suggest that the organizational structure of large projects is constrained to evolve towards a state that balances the costs and benefits of developer coordination, and the mechanisms used to achieve this state depend on the project's scale.
C1 [Joblin, Mitchell] Siemens AG, Paul Gossen Str 100, D-91052 Erlangen, Germany.
   [Apel, Sven] Univ Passau, Innstr 33, D-94032 Passau, Germany.
   [Mauerer, Wolfgang] Tech Univ Appl Sci Regensburg, Univ Str 31, D-93058 Regensburg, Germany.
C3 Siemens AG; Siemens Germany; University of Passau
RP Joblin, M (corresponding author), Siemens AG, Paul Gossen Str 100, D-91052 Erlangen, Germany.
EM mitchell.joblin@siemens.com; apel@uni-passau.de;
   wolfgang.mauerer@oth-regensburg.de
RI Mauerer, Wolfgang/JFL-0857-2023
OI Mauerer, Wolfgang/0000-0002-9765-8313; Apel, Sven/0000-0003-3687-2233
FU German Research Foundation [AP 206/4, AP 206/5, AP 206/6]
FX This work has been supported by the German Research Foundation (AP
   206/4, AP 206/5, AP 206/6).
CR Albert R, 2002, REV MOD PHYS, V74, P47, DOI 10.1103/RevModPhys.74.47
   [Anonymous], 1999, Open sources: voices from the open source revolution
   Arafat O., 2009, 42nd Hawaii International Conference on System Sciences, P1, DOI DOI 10.1109/HICSS.2009.421
   Arias TBC, 2011, EMPIR SOFTW ENG, V16, P544, DOI 10.1007/s10664-011-9158-8
   Arnold R. S., 1993, Proceedings. Conference on Software Maintenance 1993. CSM-93 (Cat. No.93CH3360-5), P292, DOI 10.1109/ICSM.1993.366933
   ATKINSON AB, 1970, J ECON THEORY, V2, P244, DOI 10.1016/0022-0531(70)90039-6
   Baeza-Yates R., 1999, Modern information retrieval
   Barabási AL, 2002, PHYSICA A, V311, P590, DOI 10.1016/S0378-4371(02)00736-7
   Barabási AL, 1999, SCIENCE, V286, P509, DOI 10.1126/science.286.5439.509
   Bavota G, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P692, DOI 10.1109/ICSE.2013.6606615
   Begel A., 2010, Software Engineering, 2010 ACM/IEEE 32nd International Conference on, V1, P125
   BERNARD HR, 1988, ETHNOLOGY, V27, P155, DOI 10.2307/3773626
   Bishop Christopher M, 2006, PATTERN RECOGN, V128, P1
   Boccaletti S, 2006, PHYS REP, V424, P175, DOI 10.1016/j.physrep.2005.10.009
   Boehm BW, 1989, IEEE
   Brooks Frederick P., 1995, The mythical man-month
   Cataldo M, 2013, IEEE T SOFTWARE ENG, V39, P343, DOI 10.1109/TSE.2012.32
   Cataldo M, 2009, IEEE T SOFTWARE ENG, V35, P864, DOI 10.1109/TSE.2009.42
   Cataldo M, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P2
   Cataldo Marcelo, 2006, P 2006 20 ANNIVERSAR, P353, DOI DOI 10.1145/1180875.1180929
   Clauset A, 2009, SIAM REV, V51, P661, DOI 10.1137/070710111
   CONWAY ME, 1968, DATAMATION, V14, P28
   Crowston K., 2005, First Monday, V10, DOI 10.5210/fm.v10i2.1207
   Crowston K., 2006, P IEEE 39 HAW INT C, DOI DOI 10.1109/HICSS.2006.101
   Crowston K, 2012, ACM COMPUT SURV, V44, DOI 10.1145/2089125.2089127
   diaeresis>tze Hinrich Schu<spacing, 2008, INTRO INFORM RETRIEV, V39
   Dinh-Trong TT, 2005, IEEE T SOFTWARE ENG, V31, P481, DOI 10.1109/TSE.2005.73
   Dorogovtsev S. N., 2013, EVOLUTION NETWORKS B
   Erdos P., 1959, Publicationes Mathematicae Debrecen, V6, P18
   Espinosa JA, 2007, ORGAN SCI, V18, P613, DOI 10.1287/orsc.1070.0297
   Foucault M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P829, DOI 10.1145/2786805.2786870
   Godfrey MW, 2000, PROC IEEE INT CONF S, P131, DOI 10.1109/ICSM.2000.883030
   Goldstein ML, 2004, EUR PHYS J B, V41, P255, DOI 10.1140/epjb/e2004-00316-5
   Hinds P., 2006, CSCW 06, P343
   Huang NE, 1998, P ROY SOC A-MATH PHY, V454, P903, DOI 10.1098/rspa.1998.0193
   HUSELID MA, 1995, ACAD MANAGE J, V38, P635, DOI 10.5465/256741
   Hynninen Peitsa, 2010, Proceedings of the 2010 Fifth IEEE International Conference Global Software Engineering (ICGSE 2010), P145, DOI 10.1109/ICGSE.2010.25
   Jeong H, 2000, NATURE, V407, P651, DOI 10.1038/35036627
   Jermakovics A, 2011, PROCEEDINGS OF THE 4TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE'11), P24
   Joblin M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P563, DOI 10.1109/ICSE.2015.73
   Joblin Mitchell, 2016, ARXIV160400830
   Koch S., 2004, ELECTRON MARK, V14, P77
   Kotter J.P., 2014, Accelerate: Building strategic agility for a faster-moving world
   Lehman MM, 1997, FOURTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P20, DOI 10.1109/METRIC.1997.637156
   Lehman MM, 2001, ANN SOFTW ENG, V11, P15, DOI 10.1023/A:1012535017876
   López-Fernández L, 2006, INT J INF TECHNOL WE, V1, P27, DOI 10.4018/jitwe.2006070103
   Louridas P, 2008, ACM T SOFTW ENG METH, V18, DOI 10.1145/1391984.1391986
   Martinez-Romo J, 2008, INT FED INFO PROC, V275, P171
   Mauerer W, 2013, IT-INF TECHNOL, V55, P196, DOI 10.1515/itit.2013.1008
   Meneely A., 2008, P 16 ACM SIGSOFT INT, P13, DOI DOI 10.1145/1453101.1453106
   Meneely A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P281, DOI 10.1145/1985793.1985832
   Mens T, 2008, PROC IEEE INT CONF S, P386, DOI 10.1109/ICSM.2008.4658087
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Mockus A., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P263, DOI 10.1109/ICSE.2000.870417
   Mockus A, 2010, Proc. of the 18th Symposium on the Foundations of Software Engineering (FSE), P117
   Olbrich S, 2009, INT SYMP EMP SOFTWAR, P391
   Poshyvanyk D, 2009, EMPIR SOFTW ENG, V14, P5, DOI 10.1007/s10664-008-9088-2
   Ravasz E, 2003, PHYS REV E, V67, DOI 10.1103/PhysRevE.67.026112
   Robles G, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P167, DOI 10.1109/MSR.2009.5069497
   Schilling A., 2012, 2012 45th Hawaii International Conference on System Sciences (HICSS), P3446, DOI 10.1109/HICSS.2012.644
   Scholtes I, 2016, EMPIR SOFTW ENG, V21, P642, DOI 10.1007/s10664-015-9406-4
   Sosa ME, 2004, MANAGE SCI, V50, P1674, DOI 10.1287/mnsc.1040.0289
   STEVENS WP, 1974, IBM SYST J, V13, P115, DOI 10.1147/sj.132.0115
   Terceiro Antonio, 2010, 2010 Proceedings of 24th Brazilian Symposium on Software Engineering (SBES 2010), P21, DOI 10.1109/SBES.2010.26
   Toral SL, 2010, INFORM SOFTWARE TECH, V52, P296, DOI 10.1016/j.infsof.2009.10.007
   Yiqing Yu, 2012, 2012 45th Hawaii International Conference on System Sciences (HICSS), P3396, DOI 10.1109/HICSS.2012.97
NR 66
TC 28
Z9 31
U1 0
U2 9
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2017
VL 22
IS 4
BP 2050
EP 2094
DI 10.1007/s10664-016-9478-9
PG 45
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA FB6ZI
UT WOS:000406290500013
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Mahmoud, A
   Bradshaw, G
AF Mahmoud, Anas
   Bradshaw, Gary
TI Semantic topic models for source code analysis
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Clustering; Information theory; Topic modeling
ID LATENT; SOFTWARE
AB Topic modeling techniques have been recently applied to analyze and model source code. Such techniques exploit the textual content of source code to provide automated support for several basic software engineering activities. Despite these advances, applications of topic modeling in software engineering are frequently suboptimal. This can be attributed to the fact that current state-of-the-art topic modeling techniques tend to be data intensive. However, the textual content of source code, embedded in its identifiers, comments, and string literals, tends to be sparse in nature. This prevents classical topic modeling techniques, typically used to model natural language texts, to generate proper models when applied to source code. Furthermore, the operational complexity and multi-parameter calibration often associated with conventional topic modeling techniques raise important concerns about their feasibility as data analysis models in software engineering. Motivated by these observations, in this paper we propose a novel approach for topic modeling designed for source code. The proposed approach exploits the basic assumptions of the cluster hypothesis and information theory to discover semantically coherent topics in software systems. Ten software systems from different application domains are used to empirically calibrate and configure the proposed approach. The usefulness of generated topics is empirically validated using human judgment. Furthermore, a case study that demonstrates thet operation of the proposed approach in analyzing code evolution is reported. The results show that our approach produces stable, more interpretable, and more expressive topics than classical topic modeling techniques without the necessity for extensive parameter calibration.
C1 [Mahmoud, Anas] Louisiana State Univ, Div Comp Sci & Engn, Baton Rouge, LA 70803 USA.
   [Bradshaw, Gary] Mississippi State Univ, Dept Psychol, Mississippi State, MS 39762 USA.
C3 Louisiana State University System; Louisiana State University;
   Mississippi State University
RP Mahmoud, A (corresponding author), Louisiana State Univ, Div Comp Sci & Engn, Baton Rouge, LA 70803 USA.
EM mahmoud@csc.lsu.edu; glb2@psychology.msstate.edu
FU Louisiana Board of Regents Research Competitiveness Subprogram (LA
   BoR-RCS) [LEQSF(2015-18)-RD-A-07]
FX The authors would like to thank our study participants for their time
   and feedback and the Institutional Review Board (IRB) at LSU for
   approving our research. This work was supported by the Louisiana Board
   of Regents Research Competitiveness Subprogram (LA BoR-RCS), contract
   number: LEQSF(2015-18)-RD-A-07.
CR Abadi A, 2008, INT C PROGRAM COMPRE, P103, DOI 10.1109/ICPC.2008.30
   Aggarwal Charu C, 2012, A survey of text clustering algorithms, P163, DOI [10.1007/978-1-4614-3223-4, DOI 10.1007/978-1-4614-3223-46]
   Andrzejewski D, 2007, LECT NOTES ARTIF INT, V4701, P6
   Anh Tuan Nguyen, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P263, DOI 10.1109/ASE.2011.6100062
   [Anonymous], 2010, P 23 INT C COMP LING
   [Anonymous], 2003, Advances in Neural Information Processing Systems
   [Anonymous], 2013, Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering-ESEC/FSE 2013, page
   [Anonymous], 2010, IEEE INT C SOFTWARE
   [Anonymous], 2010, PROC 10 ANN JOINT C, DOI DOI 10.1145/1816123.1816156
   [Anonymous], 2017, DESIGN ANAL EXPT
   Anquetil N., 1999, Sixth Working Conference on Reverse Engineering (Cat. No.PR00303), P235, DOI 10.1109/WCRE.1999.806964
   Anquetil N., 1998, Conference of the Centre for Advanced Studies on Collaborative Research, P4
   Asuncion HU, 2010, 2010 ACM IEEE 32 INT, V1, P95
   Baldi PF, 2008, ACM SIGPLAN NOTICES, V43, P543, DOI 10.1145/1449955.1449807
   Barua A, 2014, EMPIR SOFTW ENG, V19, P619, DOI 10.1007/s10664-012-9231-y
   Bavota G, 2014, IEEE T SOFTWARE ENG, V40, P671, DOI 10.1109/TSE.2013.60
   Bavota G, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2559935
   Bieman J. M., 1995, SIGSOFT Software Engineering Notes, P259, DOI 10.1145/223427.211856
   Biggers LR, 2014, EMPIR SOFTW ENG, V19, P465, DOI 10.1007/s10664-012-9224-x
   Binkley D., 2014, 22nd International Conference on Program Comprehension (Hyderabad, India, 2014), P26, DOI [DOI 10.1145/2597008.2597150, 10.1145/2597008.2597150]
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Budiu R, 2007, LARGE SCALE SEMANTIC, P314
   Bullinaria JA, 2007, BEHAV RES METHODS, V39, P510, DOI 10.3758/BF03193020
   Caprile B, 2000, PROC IEEE INT CONF S, P97, DOI 10.1109/ICSM.2000.883022
   Chang J., 2010, Proceeding of the NAACL HLT 2010 Workshop on Creating Speech and Language Data with Amazon's Mechanical Turk, P131
   Chang J., 2009, Advances in neural information processing systems, P22, DOI DOI 10.5555/2984093.2984126
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Church K.W., 1990, WORD ASS NORMS MUTUA, V16, P22
   Cilibrasi RL, 2007, IEEE T KNOWL DATA EN, V19, P370, DOI 10.1109/TKDE.2007.48
   De Lucia A., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P193
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   Deissenböck F, 2005, PROG COMPREHEN, P97, DOI 10.1109/WPC.2005.14
   DEMMEL J, 1990, SIAM J SCI STAT COMP, V11, P873, DOI 10.1137/0911052
   Gabel M, 2010, 18 ACM SIGSOFT INT S, P147
   Gethers M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1034, DOI 10.1145/1985793.1985988
   Gracia J., 2006, International Conference on Web Engineering, P241, DOI DOI 10.1145/1145581.1145630
   Grant S, 2010, IEEE INT WORK C SO, P65, DOI 10.1109/SCAM.2010.22
   Griffiths TL, 2004, P NATL ACAD SCI USA, V101, P5228, DOI 10.1073/pnas.0307752101
   Haiduc S, 2008, INT C PROGRAM COMPRE, P113, DOI 10.1109/ICPC.2008.29
   Hearst M. A., 1996, SIGIR Forum, P76
   Hindle A, 2015, EMPIR SOFTW ENG, V20, P479, DOI 10.1007/s10664-014-9312-1
   Hindle A, 2012, PROC INT CONF SOFTW, P837, DOI 10.1109/ICSE.2012.6227135
   Hofmann T, 1999, SIGIR'99: PROCEEDINGS OF 22ND INTERNATIONAL CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P50, DOI 10.1145/312624.312649
   Howard MJ, 2013, IEEE WORK CONF MIN S, P377, DOI 10.1109/MSR.2013.6624052
   Khatiwada S., 2016, International Conference on Program Comprehension, P1
   Khoat Than, 2012, Machine Learning and Knowledge Discovery in Databases. Proceedings of the European Conference (ECML PKDD 2012), P490, DOI 10.1007/978-3-642-33460-3_37
   Koltsov S., 2014, P 2014 ACM C WEB SCI, P161, DOI DOI 10.1145/2615569.2615680
   Kuhn A, 2007, INFORM SOFTWARE TECH, V49, P230, DOI 10.1016/j.infsof.2006.10.017
   Li M, 2004, IEEE T INFORM THEORY, V50, P3250, DOI 10.1109/TIT.2004.838101
   Linstead E., 2007, P 22 IEEE ACM INT C, P461, DOI [10.1145/1321631.1321709, DOI 10.1145/1321631.1321709]
   Linstead E, 2008, SEVENTH INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS, PROCEEDINGS, P813, DOI 10.1109/ICMLA.2008.47
   Liu YX, 2009, PROC IEEE INT CONF S, P233, DOI 10.1109/ICSM.2009.5306318
   Lo D, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P415, DOI 10.1145/2786805.2786809
   Lukins SK, 2010, INFORM SOFTWARE TECH, V52, P972, DOI 10.1016/j.infsof.2010.04.002
   Lukins SK, 2008, WORK CONF REVERSE EN, P155, DOI 10.1109/WCRE.2008.33
   Mahmoud A, 2015, ACM T SOFTW ENG METH, V25, DOI 10.1145/2824251
   Mahmoud A, 2015, REQUIR ENG, V20, P281, DOI 10.1007/s00766-013-0199-y
   Mancoridis S., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P50, DOI 10.1109/ICSM.1999.792498
   Maskeri Girish, 2008, 1st India Software Engineering Conference. ISEC 2008, P113
   Mei QZ, 2007, KDD-2007 PROCEEDINGS OF THE THIRTEENTH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P490
   Mihalcea R., 2006, P 21 NAT C ART INT, V6, P775
   Mimno D, 2011, EMNLP, P262, DOI DOI 10.5555/2145432.2145462
   Mitchell BS, 2006, IEEE T SOFTWARE ENG, V32, P193, DOI 10.1109/TSE.2006.31
   Nan Niu, 2012, 2012 IEEE 20th International Requirements Engineering Conference (RE 2012), P81, DOI 10.1109/RE.2012.6345842
   Neuhaus Stephan, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P111, DOI 10.1109/ISSRE.2010.53
   Newman D, 2011, Advances in Neural Information Processing Systems, P496, DOI DOI 10.5555/2986459.2986515
   Newman D., 2010, AUTOMATIC EVALUATION
   Oliveto Rocco, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P68, DOI 10.1109/ICPC.2010.20
   Panichella A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P522, DOI 10.1109/ICSE.2013.6606598
   Panichellal A, 2016, INT C SOFTW AN EV RE, P522
   Porteous I., 2008, P 14 ACM SIGKDD INT, P569, DOI DOI 10.1145/1401890.1401960
   Porter F, 1997, ALGORITHM SUFFIX STR, P313
   Potapenko A, 2013, ROBUST PLSA PERFORMS, P784
   Recchia G, 2009, BEHAV RES METHODS, V41, P647, DOI 10.3758/BRM.41.3.647
   SALTON G, 1975, COMMUN ACM, V18, P613, DOI 10.1145/361219.361220
   Savage T, 2010, Proceedings of the 2010 IEEE International Conference on Software Maintenance, ICSM '10, P1, DOI [10.1109/ICSM.2010.5609654, DOI 10.1109/ICSM.2010.5609654]
   Schaeffer SE, 2007, COMPUT SCI REV, V1, P27, DOI 10.1016/j.cosrev.2007.05.001
   Slonim N., 2000, SIGIR Forum, V34, P208
   Sontag David, 2011, Advances in Neural Information Processing Systems, P1008
   Sridhara G, 2008, INT C PROGRAM COMPRE, P123, DOI 10.1109/ICPC.2008.18
   Stevens K., 2012, P 2012 JOINT C EMPIR
   Steyvers M., 2007, PROBABILISTIC TOPIC, P427
   Teh Y.W., 2007, ADV NEURAL INFORM PR, V19
   Thomas SW, 2014, EMPIR SOFTW ENG, V19, P182, DOI 10.1007/s10664-012-9219-7
   Thomas SW, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1138, DOI 10.1145/1985793.1986020
   Thomas SW, 2010, IEEE INT WORK C SO, P55, DOI 10.1109/SCAM.2010.13
   Tian K, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P163, DOI 10.1109/MSR.2009.5069496
   Tian Y, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P44, DOI 10.1109/CSMR-WCRE.2014.6747213
   Tse-Hsun Chen, 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P189, DOI 10.1109/MSR.2012.6224280
   Tzerpos V, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P258
   van Rijsbergen C. J, 1979, Information Retrieval, V2nd
   Wallach H.M., 2009, P 26 ANN INT C MACH, P1105, DOI DOI 10.1145/1553374.1553515
   Wallach Hanna M., 2009, Advances in neural information processing systems, P1973, DOI DOI 10.1007/S10708-008-9161-9
   Yang JQ, 2014, EMPIR SOFTW ENG, V19, P1856, DOI 10.1007/s10664-013-9264-x
   Zhao Y., 2002, Proceedings of the Eleventh International Conference on Information and Knowledge Management. CIKM 2002, P515, DOI 10.1145/584792.584877
NR 95
TC 11
Z9 12
U1 0
U2 11
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2017
VL 22
IS 4
BP 1965
EP 2000
DI 10.1007/s10664-016-9473-1
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FB6ZI
UT WOS:000406290500011
DA 2024-07-18
ER

PT J
AU Sawant, AA
   Bacchelli, A
AF Sawant, Anand Ashok
   Bacchelli, Alberto
TI fine-GRAPE: fine-grained APi usage extractor - an approach and dataset
   to investigate API usage
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Application programming interface; API usage; API popularity; Dataset
AB An Application Programming Interface (API) provides a set of functionalities to a developer with the aim of enabling reuse. APIs have been investigated from different angles such as popularity usage and evolution to get a better understanding of their various characteristics. For such studies, software repositories are mined for API usage examples. However, many of the mining algorithms used for such purposes do not take type information into account. Thus making the results unreliable. In this paper, we aim to rectify this by introducing fine-GRAPE, an approach that produces fine-grained API usage information by taking advantage of type information while mining API method invocations and annotation. By means of fine-GRAPE, we investigate API usages from Java projects hosted on GitHub. We select five of the most popular APIs across GitHub Java projects and collect historical API usage information by mining both the release history of these APIs and the code history of every project that uses them. We perform two case studies on the resulting dataset. The first measures the lag time of each client. The second investigates the percentage of used API features. In the first case we find that for APIs that release more frequently clients are far less likely to upgrade to a more recent version of the API as opposed to clients of APIs that release infrequently. The second case study shows us that for most APIs there is a small number of features that is actually used and most of these features relate to those that have been introduced early in the APIs lifecycle.
C1 [Sawant, Anand Ashok; Bacchelli, Alberto] Delft Univ Technol, Mekelweg 4, NL-2628 CD Delft, Netherlands.
C3 Delft University of Technology
RP Sawant, AA; Bacchelli, A (corresponding author), Delft Univ Technol, Mekelweg 4, NL-2628 CD Delft, Netherlands.
EM A.A.Sawant@tudelft.nl; A.Bacchelli@tudelft.nl
RI Bacchelli, Alberto/ABG-5379-2020
OI Bacchelli, Alberto/0000-0003-0193-6823; Sawant,
   Anand/0000-0002-5816-8020
CR [Anonymous], 2007, 6th joint meeting of the European Software Engineering Conference and the ACM SIGSOFT Symposium on the Foundations of Software Engineering (ESEC/FSE), DOI DOI 10.1145/1287624.1287632
   [Anonymous], P 20 2NT C VER 6ARG
   Bacchelli Alberto, 2008, 2008 The Third International Conference on Software Engineering Advances (ICSEA), P252, DOI 10.1109/ICSEA.2008.66
   Bajracharya S., 2006, COMP 21 ACM SIGPLAN, P681, DOI DOI 10.1145/1176617.1176671
   Barr ET, 2012, LECT NOTES COMPUT SC, V7212, P316, DOI 10.1007/978-3-642-28872-2_22
   Bruneton Eric, 2002, P AD EXT COMP SYST
   Chacon Scott., 2009, Pro Git, V1st, DOI DOI 10.1016/j.rse.2010.01.021
   Dagenais B, 2008, ACM SIGPLAN NOTICES, V43, P313, DOI 10.1145/1449955.1449790
   Dig D, 2006, J SOFTW MAINT EVOL-R, V18, P83, DOI 10.1002/smr.328
   Ducasse S, 2000, P 2 INT S S CONSTR S
   Ester M., 1996, KDD-96 Proceedings. Second International Conference on Knowledge Discovery and Data Mining, P226
   Gousios G., 2014, Proceedings of the 11th working conference on mining software repositories, Ved, P384, DOI [DOI 10.1145/2597073.2597126, 10.1145/2597073]
   Henkel J, 2005, PROC INT CONF SOFTW, P274
   JOHNSON RE, 1988, J OBJECT-ORIENT PROG, V1, P22
   Kalliamvakou E., 2014, P 11 WORKING C MININ, P92, DOI DOI 10.1145/2597073.2597074
   Kula RG, 2014, 2014 SECOND IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT), P127, DOI 10.1109/VISSOFT.2014.29
   Lammel R., 2011, Proceedings of the 2011 ACM Symposium on Applied Computing, P1317, DOI 10.1145/1982185.1982471
   Li Zhenmin, 2005, P ACM SIGSOFT SOFTW, P306, DOI DOI 10.1145/1081706.1081755
   Livshits V.B., 2005, ESEC SIGSOFT FSE, P296, DOI [DOI 10.1145/1095430.1081754, DOI 10.1145/1081706.1081754]
   Mandelin D, 2006, SYNTHESIS-STUTTGART, P48
   McDonnell T, 2013, PROC IEEE INT CONF S, P70, DOI 10.1109/ICSM.2013.18
   Michail A., 1999, 14th IEEE International Conference on Automated Software Engineering, P24, DOI 10.1109/ASE.1999.802089
   Mileva YM, 2010, LECT NOTES COMPUT SC, V6303, P173, DOI 10.1007/978-3-642-15585-7_17
   Momjian B, 2001, POSTGRESQL INTRO CON, V192
   Moreno L, 2015, P 37 INT C SOFTW ENG
   Ponzanelli L, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1295, DOI 10.1109/ICSE.2013.6606701
   Primat O, 2013, GITHUBS 10000 MOST P
   Robillard MP, 2011, EMPIR SOFTW ENG, V16, P703, DOI 10.1007/s10664-010-9150-8
   Saied MA, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P23, DOI 10.1109/SANER.2015.7081812
   Saini V., 2014, P 11 WORK C MIN SOFT, P416, DOI DOI 10.1145/2597073.2597134
   Sawant A, 2015, API USAGE DATABASES, DOI [10.6084/m9.figshare.1320591, DOI 10.6084/M9.FIGSHARE.1320591]
   Sawant AA, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P506, DOI 10.1109/MSR.2015.75
   Thummalapenta Suresh, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P327, DOI 10.1109/ASE.2008.43
   Thummalapenta S, 2009, IEEE INT CONF AUTOM, P283, DOI 10.1109/ASE.2009.72
   Uddin G, 2012, PROC INT CONF SOFTW, P804, DOI 10.1109/ICSE.2012.6227138
   Wang J, 2013, IEEE WORK CONF MIN S, P319, DOI 10.1109/MSR.2013.6624045
   Xie Tao, 2006, Proc. MSR, P54
   Zhong H, 2009, LECT NOTES COMPUT SC, V5653, P318, DOI 10.1007/978-3-642-03013-0_15
NR 38
TC 25
Z9 26
U1 1
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2017
VL 22
IS 3
BP 1348
EP 1371
DI 10.1007/s10664-016-9444-6
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EW4GE
UT WOS:000402459200013
OA hybrid, Green Accepted, Green Published
DA 2024-07-18
ER

PT J
AU Wu, YH
   Manabe, Y
   Kanda, T
   German, DM
   Inoue, K
AF Wu, Yuhao
   Manabe, Yuki
   Kanda, Tetsuya
   German, Daniel M.
   Inoue, Katsuro
TI Analysis of license inconsistency in large collections of open source
   projects
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software license; Code clone; License inconsistency
AB Free and open source software (FOSS) plays an important role in source code reuse practice. They usually come with one or more software licenses written in the header part of source files, stating the requirements and conditions which should be followed when been reused. Removing or modifying the license statement by re-distributors will result in the inconsistency of license with its ancestor, and may potentially cause license infringement. In this paper, we describe and categorize different types of license inconsistencies and propose a method to detect them. Then we applied this method to Debian 7.5 and a collection of 10,514 Java projects on GitHub and present the license inconsistency cases found in these systems. With a manual analysis, we summarized various reasons behind these license inconsistency cases, some of which imply potential license infringement and require attention from the developers. This analysis also exposes the difficulty to discover license infringements, highlighting the usefulness of finding and maintaining source code provenance.
C1 [Wu, Yuhao] Osaka Univ, Grad Sch Informat Sci & Technol, Osaka, Japan.
   [Inoue, Katsuro] Osaka Univ, Grad Sch Informat Sci & Technol, Dept Comp Sci, Osaka, Japan.
   [Manabe, Yuki] Kumamoto Univ, Fac Adv Sci & Technol, Kumamoto, Japan.
   [Kanda, Tetsuya] Nara Inst Sci & Technol, Grad Sch Informat Sci, Nara, Japan.
   [German, Daniel M.] Univ Victoria, Dept Comp Sci, Victoria, BC, Canada.
C3 Osaka University; Osaka University; Kumamoto University; Nara Institute
   of Science & Technology; University of Victoria
RP Wu, YH (corresponding author), Osaka Univ, Grad Sch Informat Sci & Technol, Osaka, Japan.
EM wuyuhao@ist.osaka-u.ac.jp; y-manabe@cs.kumamoto-u.ac.jp;
   t-kanda@is.naist.jp; dmg@uvic.ca; inoue@ist.osaka-u.ac.jp
FU Japan Society for the Promotion of Science [25220003]; Osaka University
   Program for Promoting International Joint Research, "Software License
   Evolution Analysis"
FX This work is supported by Japan Society for the Promotion of Science,
   Grant-in-Aid for Scientific Research (S) "Collecting, Analyzing, and
   Evaluating Software Assets for Effective Reuse"(No. 25220003) and Osaka
   University Program for Promoting International Joint Research, "Software
   License Evolution Analysis".
CR Alspaugh TA, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P24, DOI 10.1109/RE.2009.22
   Bettenburg N, 2009, WORK CONF REVERSE EN, P85, DOI 10.1109/WCRE.2009.51
   BOEHM BW, 1987, COMPUTER, V20, P43, DOI 10.1109/MC.1987.1663694
   Di Penta Massimiliano, 2010, P 32 ACMIEEE INT C S, P145, DOI [10.1145/1806799.1806824, DOI 10.1145/1806799.1806824]
   Gabel M, 2010, ACM SIGPLAN NOTICES, V45, P175, DOI 10.1145/1932682.1869475
   German Daniel M., 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P84, DOI 10.1109/ICPC.2010.48
   German DM, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P81, DOI 10.1109/MSR.2009.5069483
   German DM, 2009, PROC INT CONF SOFTW, P188, DOI 10.1109/ICSE.2009.5070520
   German Daniel M., 2010, P 25 IEEE ACM INT C, P437, DOI [10.1145/1858996.1859088, DOI 10.1145/1858996.1859088]
   Gobeille R, 2008, P 2008 INT WORK C MI, P47, DOI DOI 10.1145/1370750.1370763
   Gode N., 2011, PROC 5 INT WORKSHOP, P14
   Göde N, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P311, DOI 10.1145/1985793.1985836
   Higo Yoshiki, 2014, P 29 INT C AUT SOFTW, P843
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Krinke J, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P170, DOI 10.1109/WCRE.2007.7
   Li JY, 2009, IEEE SOFTWARE, V26, P80, DOI 10.1109/MS.2009.33
   Manabe Y, 2010, P JOINT ERCIM WORKSH, P83
   Manabe Y, 2014, IFIP ADV INF COMM TE, V427, P51
   Mcilroy D. M., 1968, 1 INT C SOFTW ENG, P88
   Roy CK, 2009, SCI COMPUT PROGRAM, V74, P470, DOI 10.1016/j.scico.2009.02.007
   Sasaki Y., 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P102, DOI 10.1109/MSR.2010.5463293
   STANDISH TA, 1984, IEEE T SOFTWARE ENG, V10, P494, DOI 10.1109/TSE.1984.5010272
   Tuunanen T, 2009, AUTOMAT SOFTW ENG, V16, P455, DOI 10.1007/s10515-009-0054-z
   Vendome C, 2015, 23 IEEE INT C PROGR
   Vendome C, 2015, PROC IEEE INT CONF S, P31, DOI 10.1109/ICSM.2015.7332449
   Wu YH, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P324, DOI 10.1109/MSR.2015.37
   Zhang HL, 2010, J NANOMATER, V2010, DOI 10.1155/2010/898910
NR 27
TC 10
Z9 13
U1 1
U2 12
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2017
VL 22
IS 3
BP 1194
EP 1222
DI 10.1007/s10664-016-9487-8
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EW4GE
UT WOS:000402459200009
DA 2024-07-18
ER

PT J
AU Niknafs, A
   Berry, D
AF Niknafs, Ali
   Berry, Daniel
TI The impact of domain knowledge on the effectiveness of requirements
   engineering activities
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Requirements engineering; Requirements idea generation; Domain
   knowledge; Empirical software engineering
ID BASE-LINE; IGNORANCE
AB One factor that seems to influence an individual's effectiveness in requirements engineering activities is her knowledge of the problem being solved, i.e., domain knowledge. While in-depth domain knowledge enables a requirements analyst to understand the problem easier, she can fall for tacit assumptions and fail to consider issues that she believes to be obvious. This paper investigates the impact of domain knowledge on requirements engineering activities. Its main research question is "How does one form the most effective team, consisting of some mix of domain ignorants and domain awares, for a requirements engineering activity involving knowledge about the domain of the computer-based system whose requirements are being determined by the team?" For completeness, a number of other factors, such as educational background, are considered for their effect on teams' effectiveness. Two controlled experiments test a number of hypotheses derived from the question, including mainly that for a computer-based system in a particular domain, a team consisting of a mix of requirements analysts that are both ignorant and aware of the domain, is more effective at requirement idea generation than a team consisting of only analysts that are aware of the domain. The results show no significant effect of the mix by itself on effectiveness in requirement idea generation. However, the results do show surprising significant effects of the educational background and of the mix combined with the educational background. Combining the results, the main conclusion is that the presence of a domain ignorant with a computer science or software engineering background improves the effectiveness of a requirement idea generation team.
C1 Univ Waterloo, David R Cheriton Sch Comp Sci, Waterloo, ON, Canada.
   [Niknafs, Ali; Berry, Daniel] Univ Waterloo, David R Cheriton Sch Comp Sci, Waterloo, ON, Canada.
C3 University of Waterloo; University of Waterloo
RP Berry, D (corresponding author), Univ Waterloo, David R Cheriton Sch Comp Sci, Waterloo, ON, Canada.
EM aniknafs@uwaterloo.ca; dberry@uwaterloo.ca
FU Canada's NSERC [NSERC-RGPIN227055-00]; Canada's NSERC-Scotia Bank
   Industrial Research Chair [NSERC-IRCPJ365473-05]
FX The authors thank the anonymous reviewers of the earlier version of this
   paper for their comments. Ali Niknafs's and Daniel Berry's work were
   supported in parts by Canada's NSERC grant NSERC-RGPIN227055-00 and by
   Canada's NSERC-Scotia Bank Industrial Research Chair
   NSERC-IRCPJ365473-05.
CR ALRAWAS A, 1996, P 1 WESTM C PROF AW, P47
   Anand S. S., 1995, Proceedings of the 1995 ACM CIKM International Conference on Information and Knowledge Management, P37, DOI 10.1145/221270.221321
   [Anonymous], 1969, SOFTWARE ENG REPORT
   [Anonymous], 1987, Peopleware: Productive Projects and Teams
   [Anonymous], 1993, IEEE INT S REQ ENG I
   Apfelbaum EP, 2014, PERSPECT PSYCHOL SCI, V9, P235, DOI 10.1177/1745691614527466
   Basili Victor R, 1994, ENCY SOFTWARE ENG, V1
   BBN Technologies, 2015, PROPH STATG POSS ALT
   Berenbach B., 2009, SOFTWARE SYSTEMS RE
   BERRY DM, 1995, J SYST SOFTWARE, V28, P179, DOI 10.1016/0164-1212(94)00054-Q
   Berry DM, 1999, SOFTWARE PRACT EXPER, V29, P1417, DOI 10.1002/(SICI)1097-024X(19991225)29:15<1417::AID-SPE282>3.0.CO;2-F
   Berry DM, 2002, J SYST SOFTWARE, V60, P83, DOI 10.1016/S0164-1212(01)00103-0
   Blom G, 1960, Inc Stat, V10, P53, DOI DOI 10.2307/2987488
   Brooks Frederick P., 1995, The mythical man-month
   Carver JC, 2008, IEEE T SOFTWARE ENG, V34, P800, DOI 10.1109/TSE.2008.49
   Dagenais B., 2010, Proc. of the ICSE 10, P275, DOI DOI 10.1145/1806799.1806842
   Damian D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P442, DOI 10.1109/ICSE.2013.6606590
   Dieste O, 2008, IEEE SOFTWARE, V25, P11, DOI 10.1109/MS.2008.53
   Dunbar K, 1999, MODEL-BASED REASONING IN SCIENTIFIC DISCOVERY, P85
   Feldt R, 2010, 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING & KNOWLEDGE ENGINEERING (SEKE 2010), P374
   Ferrari R, 2007, P 6 WORK IEEE IFIP C
   Finkelstein A., 1994, Proceedings. 1994 First Asia-Pacific Software Engineering Conference, P10, DOI 10.1109/APSEC.1994.465278
   Firestein S., 2013, IGNORANCE COURSE
   Fischer G., 1999, Creativity and Cognition, P116
   Frappaolo C, 2008, KNOWL MAN RES PRACT, V6, P23, DOI 10.1057/palgrave.kmrp.8500168
   GLASS GV, 1972, REV EDUC RES, V42, P237, DOI 10.3102/00346543042003237
   Habusha U., 1990, Electronic Publishing: Origination, Dissemination and Design, V3, P65
   Hadar I, 2014, REQUIR ENG, V19, P143, DOI 10.1007/s00766-012-0163-2
   Hanebutte N, 2003, EMPIR SOFTW ENG, V8, P43, DOI 10.1023/A:1021716832057
   Hinton PR., 2004, SPSS explained, DOI DOI 10.4324/9780203642597
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   IBM Corp, 2013, POSTH COMP KRUSK WAL
   Itkonen J, 2013, IEEE T SOFTWARE ENG, V39, P707, DOI 10.1109/TSE.2012.55
   Kopanas I, 2002, LECT NOTES ARTIF INT, V2308, P288
   Kristensson P, 2004, J PROD INNOVAT MANAG, V21, P4, DOI 10.1111/j.0737-6782.2004.00050.x
   Kumar M., 2009, P CONSEG 09 INT C SO, P87
   Laplante P.A., 2014, Requirements engineering for software and systems
   Lauesen S., 2001, SOFTWARE REQUIREMENT
   Lehrer J., 2009, Accept defeat: The neuroscience of screwing up
   Luchins AS, 1950, J GEN PSYCHOL, V42, P279, DOI 10.1080/00221309.1950.9920160
   Luchins AS, 1942, PSYCHOL MONOGR, V54, P1
   McAllister CA, 2006, THESIS
   Mehrotra G, 2011, THESIS
   Niknafs A., 2012, 2012 IEEE 20th International Requirements Engineering Conference (RE 2012), P181, DOI 10.1109/RE.2012.6345802
   Niknafs A, 2014, THESIS
   Niknafs A, 2013, S VIS LANG HUM CEN C, P279, DOI 10.1109/RE.2013.6636730
   Osborn A.F., 1953, APPL IMAGINATION
   Pascal B., 1968, PENSEES TRANSLATED I
   SHARP H, 1991, BEHAV INFORM TECHNOL, V10, P383, DOI 10.1080/01449299108924298
   Taylor CW, 1965, INSTR MED CREAT P 6
   Thagard P, 1997, NOUS, V31, P242, DOI 10.1111/0029-4624.00044
   Warner RM., 2012, APPL STAT BIVARIATE, V2
   Wiley J, 1998, MEM COGNITION, V26, P716, DOI 10.3758/BF03211392
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
NR 54
TC 12
Z9 12
U1 1
U2 12
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2017
VL 22
IS 1
BP 80
EP 133
DI 10.1007/s10664-015-9416-2
PG 54
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA EI3GS
UT WOS:000392378400003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Niu, HR
   Keivanloo, I
   Zou, Y
AF Niu, Haoran
   Keivanloo, Iman
   Zou, Ying
TI Learning to rank code examples for code search engines
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Learning to rank; Code example; Code search; Code recommendation
AB Source code examples are used by developers to implement unfamiliar tasks by learning from existing solutions. To better support developers in finding existing solutions, code search engines are designed to locate and rank code examples relevant to user's queries. Essentially, a code search engine provides a ranking schema, which combines a set of ranking features to calculate the relevance between a query and candidate code examples. Consequently, the ranking schema places relevant code examples at the top of the result list. However, it is difficult to determine the configurations of the ranking schemas subjectively. In this paper, we propose a code example search approach that applies a machine learning technique to automatically train a ranking schema. We use the trained ranking schema to rank candidate code examples for new queries at run-time. We evaluate the ranking performance of our approach using a corpus of over 360,000 code snippets crawled from 586 open-source Android projects. The performance evaluation study shows that the learning-to-rank approach can effectively rank code examples, and outperform the existing ranking schemas by about 35.65 % and 48.42 % in terms of normalized discounted cumulative gain (NDCG) and expected reciprocal rank (ERR) measures respectively.
C1 [Niu, Haoran; Keivanloo, Iman; Zou, Ying] Queens Univ, Dept Elect & Comp Engn, Kingston, ON, Canada.
C3 Queens University - Canada
RP Niu, HR (corresponding author), Queens Univ, Dept Elect & Comp Engn, Kingston, ON, Canada.
EM hit.haoran@gmail.com; iman.keivanloo@queensu.ca; ying.zou@queensu.ca
RI Zou, Ying/KLC-9380-2024
CR [Anonymous], 2003, Journal of machine learning research
   [Anonymous], 2008, SCORING TERM WEIGHTI
   [Anonymous], 2013, Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering-ESEC/FSE 2013, page
   [Anonymous], 2012, Proceedings of_the_21st_ACM_international_conference_on_Information_and_knowledge management
   Bailey P., 2007, Proceedings of ADCS
   Bajracharya S, 2006, P INT C OBJ OR PROGR
   Bajracharya S.K., 2010, P 18 ACM SIGSOFT INT, P157, DOI 10.1145/1882291.1882316
   Binkley D, 2014, P 2014 IEEE INT C SO
   Brandt J, 2009, CHI2009: PROCEEDINGS OF THE 27TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P1589
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Brin S, 1998, COMPUT NETWORKS ISDN, V30, P107, DOI 10.1016/S0169-7552(98)00110-X
   Bruch M., 2008, P 2008 INT WORKSHOP, P16, DOI DOI 10.1145/1454247.1454254
   Burges Chris, 2005, P 22 INT C MACH LEAR, P89, DOI DOI 10.1145/1102351.1102363
   Buse R. P. L., 2012, 34 INT C SOFTW ENG
   Buse RPL, 2010, IEEE T SOFTWARE ENG, V36, P546, DOI 10.1109/TSE.2009.70
   Campbell M. J., 2009, STAT SQUARE ONE, V11th
   Cao Z., 2007, P 24 INT C MACHINE L, P129, DOI DOI 10.1145/1273496.1273513
   Chapelle O., 2009, P 18 ACM C INF KNOWL, P621, DOI DOI 10.1145/1645953.1646033
   Cliff N., 1993, Dominance statistics: Ordinal analyses to answer ordinal questions
   Crammer K, 2002, ADV NEUR IN, V14, P641
   diaeresis>tze Hinrich Schu<spacing, 2008, INTRO INFORM RETRIEV, V39
   Gallardo-Valencia RE, 2009, 2009 ICSE WORKSHOP ON SEARCH-DRIVEN DEVELOPMENT-USERS, INFRASTRUCTURE, TOOLS AND EVALUATION, P49, DOI 10.1109/SUITE.2009.5070022
   Grahne G, 2003, IEEE ICDM WORKSH FRE
   Greenwood P. E., 1996, A guide to chi-squared testing, V280
   Harrington P., 2012, MACHINE LEARNING ACT
   Herbrich R, 2000, ADV NEUR IN, P115
   Holmes R, 2009, 25 IEEE INT C SOFTW
   Holmes R, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2377656.2377657
   Holmes Reid, 2005, P 10 EUR SOFTW ENG C, V30, P237, DOI DOI 10.1145/1095430.1081744
   Jaccard P., 1901, B SOCIT VAUDOISE SCI, V37, P547, DOI [10.5169/seals-266440, DOI 10.5169/SEALS-266440]
   Järvelin K, 2002, ACM T INFORM SYST, V20, P422, DOI 10.1145/582415.582418
   Jun Xu, 2007, 30th Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, P391
   Kapser C, 2006, WORK CONF REVERSE EN, P19
   Keivanloo I, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P664, DOI 10.1145/2568225.2568292
   Kim J, 2010, P 24 AAAI C ART INT
   Lange B. M., 1989, SIGCHI Bulletin, P69, DOI 10.1145/67450.67465
   Li H, 2011, IEICE T INF SYST, VE94D, P1854, DOI 10.1587/transinf.E94.D.1854
   Li P, 2008, PROCEEDINGS OF THE 6TH INTERNATIONAL CONFERENCE ON FUEL CELL SCIENCE, ENGINEERING, AND TECHNOLOGY - 2008, P897
   Mcmillan C, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2522920.2522930
   McMillan C, 2012, IEEE T SOFTWARE ENG, V38, P1069, DOI 10.1109/TSE.2011.84
   Mishne A, 2012, ACM SIGPLAN NOTICES, V47, P997, DOI 10.1145/2398857.2384689
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Niu SZ, 2012, SIGIR 2012: PROCEEDINGS OF THE 35TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P751, DOI 10.1145/2348283.2348384
   Panichella A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P522, DOI 10.1109/ICSE.2013.6606598
   Philip Kavita., 2012, P ACM 2012 C COMPUTE, P1361
   Reiss SP, 2009, PROC INT CONF SOFTW, P243, DOI 10.1109/ICSE.2009.5070525
   Robert KY, 2002, DESIGN AND METHODS
   Robillard MP, 2011, EMPIR SOFT ENG, V16
   Romano J, 2006, ANN M FLOR ASS I RES, P1
   SALTON G, 1975, COMMUN ACM, V18, P613, DOI 10.1145/361219.361220
   Sheskin DJ., 2003, HDB PARAMETRIC NONPA, DOI [10.1201/9781420036268, DOI 10.1201/9781420036268]
   Shihab E., 2010, P 2010 ACM IEEE INT, p4:1
   Stylos J, 2009, S VIS LANG HUM CEN C, P119, DOI 10.1109/VLHCC.2009.5295283
   Thomas P, 2006, P ACM INT C INF KNOW
   Thummalapenta Suresh, 2007, Proceedings of the Twenty-second IEEE/ACM International Conference on Automated Software Engineering, ASE '07, P204
   Tie-Yan Liu, 2009, Foundations and Trends in Information Retrieval, V3, P225, DOI 10.1561/1500000016
   Wang J, 2013, IEEE WORK CONF MIN S, P319, DOI 10.1109/MSR.2013.6624045
   Xuan J., 2014, P 30 INT C SOFTW MAI
   Ye X, 2012, P IEEE INT C SOFTW E
   Ye X, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P689, DOI 10.1145/2635868.2635874
   Ying ATT, 2014, P 22 ACM SIGSOFT INT
   Zhong H, 2009, LECT NOTES COMPUT SC, V5653, P318, DOI 10.1007/978-3-642-03013-0_15
NR 62
TC 48
Z9 53
U1 0
U2 16
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2017
VL 22
IS 1
BP 259
EP 291
DI 10.1007/s10664-015-9421-5
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EI3GS
UT WOS:000392378400007
DA 2024-07-18
ER

PT J
AU Wu, W
   Khomh, F
   Adams, B
   Guéhéneuc, YG
   Antoniol, G
AF Wu, Wei
   Khomh, Foutse
   Adams, Bram
   Gueheneuc, Yann-Gael
   Antoniol, Giuliano
TI An exploratory study of api changes and usages based on apache and
   eclipse ecosystems
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Empirical study; Framework evolution; API changes; API usages; Framework
   ecosystems; Data mining
AB Frameworks are widely used in modern software development to reduce development costs. They are accessed through their Application Programming Interfaces (APIs), which specify the contracts with client programs. When frameworks evolve, API backward-compatibility cannot always be guaranteed and client programs must upgrade to use the new releases. Because framework upgrades are not cost-free, observing API changes and usages together at fine-grained levels is necessary to help developers understand, assess, and forecast the cost of each framework upgrade. Whereas previous work studied API changes in frameworks and API usages in client programs separately, we analyse and classify API changes and usages together in 22 framework releases from the Apache and Eclipse ecosystems and their client programs. We find that (1) missing classes and methods happen more often in frameworks and affect client programs more often than the other API change types do, (2) missing interfaces occur rarely in frameworks but affect client programs often, (3) framework APIs are used on average in 35 % of client classes and interfaces, (4) most of such usages could be encapsulated locally and reduced in number, and (5) about 11 % of APIs usages could cause ripple effects in client programs when these APIs change. Based on these findings, we provide suggestions for developers and researchers to reduce the impact of API evolution through language mechanisms and design strategies.
C1 [Wu, Wei; Khomh, Foutse; Adams, Bram; Gueheneuc, Yann-Gael; Antoniol, Giuliano] Ecole Polytech Montreal, DGIGL, Quebec City, PQ, Canada.
C3 Universite de Montreal; Polytechnique Montreal
RP Wu, W (corresponding author), Ecole Polytech Montreal, DGIGL, Quebec City, PQ, Canada.
EM wei.wu@polymtl.ca; foutse.khomh@polymtl.ca; bram.adams@polymtl.ca;
   yann-gael.gueheneuc@polymtl.ca; giuliano.antoniol@polymtl.ca
RI Guéhéneuc, Yann-Gaël/K-9371-2019
OI Adams, Bram/0000-0001-7213-4006
FU FQRNT; NSERC; Canada Research Chair on Patterns in Mixed-language
   Systems
FX We thank Daniel German for providing the Maven central repository
   snapshots. This work has been partly funded by FQRNT, NSERC, and the
   Canada Research Chair on Patterns in Mixed-language Systems. We thank
   the anonymous reviewers for their invaluable comments on previous
   versions of this paper.
CR Ali N, 2012, ICSM
   [Anonymous], APSEC 10
   [Anonymous], 2000, HDB PARAMETRIC NONPA
   [Anonymous], 2010, P 32 ACMIEEE INT C S, DOI DOI 10.1145/1806799.1806831
   Bartolomei T.T., 2010, P 26 IEEE INT C SOFT, P1
   Bavota G, 2013, PROC IEEE INT CONF S, P280, DOI 10.1109/ICSM.2013.39
   Bloch Joshua., 2008, The Java Series, V2nd
   BRACHA G, 1990, SIGPLAN NOTICES, V25, P303, DOI 10.1145/97946.97982
   Businge J., 2010, EVOL IWPSE 10, P63, DOI [10.1145/1862372.1862389, DOI 10.1145/1862372.1862389]
   Businge J., 2013, SOFTW QUAL J, P1
   Cossette B.E., 2012, P ACM SIGSOFT 20 INT, p55:1, DOI DOI 10.1145/2393596.2393661
   Dagenais B, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000799.2000805
   Daqing Hou, 2011, 2011 18th Working Conference on Reverse Engineering, P131, DOI 10.1109/WCRE.2011.24
   De Roover C, 2013, CONF PROC INT SYMP C, P152, DOI 10.1109/ICPC.2013.6613843
   Dietrich J, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P64, DOI 10.1109/CSMR-WCRE.2014.6747226
   Dig D, 2006, J SOFTW MAINT EVOL-R, V18, P83, DOI 10.1002/smr.328
   Dig D, 2006, ECOOP 06 P 20 EUR C
   Dig D, 2007, PROC INT CONF SOFTW, P427
   Espinha T, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P84, DOI 10.1109/CSMR-WCRE.2014.6747228
   Fisher RA, 1922, J R STAT SOC, V85, P87, DOI 10.2307/2340521
   Fokaefs M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1037, DOI 10.1145/1985793.1985989
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Godfrey MW, 2005, IEEE T SOFTWARE ENG, V31, P166, DOI 10.1109/TSE.2005.28
   Hoan AN, 2010, ACM SIGPLAN NOTICES, V45, P302, DOI 10.1145/1932682.1869486
   Hou DQ, 2013, PROC IEEE INT CONF S, P60, DOI 10.1109/ICSM.2013.17
   Kawrykow D, 2009, IEEE INT CONF AUTOM, P111, DOI 10.1109/ASE.2009.62
   Kim M, 2007, PROC INT CONF SOFTW, P333
   Kim M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P151, DOI 10.1145/1985793.1985815
   Kpodjedo S, 2013, IEEE T SOFTWARE ENG, V39, P1090, DOI 10.1109/TSE.2013.9
   Lammel R., 2011, Proceedings of the 2011 ACM Symposium on Applied Computing, P1317, DOI 10.1145/1982185.1982471
   Linares-Vasquez M, 2014, P 22 INT C PROGR C, P83
   Maalej W, 2013, IEEE T SOFTWARE ENG, V39, P1264, DOI 10.1109/TSE.2013.12
   McDonnell T, 2013, PROC IEEE INT CONF S, P70, DOI 10.1109/ICSM.2013.18
   Meng SC, 2012, PROC INT CONF SOFTW, P353, DOI 10.1109/ICSE.2012.6227179
   Mikhajlov L., 1998, ECOOP'98 - Object-Oriented Programming. 12th European Conference. Proceedings, P355, DOI 10.1007/BFb0054099
   Montandon JE, 2013, WORK CONF REVERSE EN, P401, DOI 10.1109/WCRE.2013.6671315
   MORITZ E, 2013, ASE 13, P646
   Pearson K, 1922, PHILOS MAGAZINE 5, V50, P157
   Raemaekers S, 2014, 4 IEEE INT WORK C SO
   Raemaekers S, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P378, DOI 10.1109/ICSM.2012.6405296
   Robbes R., 2012, P ACM SIGSOFT 20 INT, P1, DOI 10.1145/2393596.2393662
   Robillard MP, 2011, EMPIR SOFTW ENG, V16, P703, DOI 10.1007/s10664-010-9150-8
   Schäfer T, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P471, DOI 10.1145/1368088.1368153
   Schärli N, 2003, LECT NOTES COMPUT SC, V2743, P248
   Shah SMA, 2013, PROC IEEE INT CONF S, P160, DOI 10.1109/ICSM.2013.27
   Shi L, 2011, LECT NOTES COMPUT SC, V6603, P416, DOI 10.1007/978-3-642-19811-3_29
   Thummalapenta Suresh, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P327, DOI 10.1109/ASE.2008.43
   Wohlin C., 1999, EXPT SOFTWARE ENG IN
   Wu W, 2014, EMPIRICAL S IN PRESS
   Wu W, 2014, 4 IEEE INT WORK C SO
   Wu WY, 2010, BMC MICROBIOL, V10, DOI 10.1186/1471-2180-10-32
   Xing ZC, 2007, AUTOMAT SOFTW ENG, V14, P215, DOI 10.1007/s10515-007-0007-3
   Xing ZC, 2007, IEEE T SOFTWARE ENG, V33, P818, DOI 10.1109/TSE.2007.70747
NR 54
TC 23
Z9 28
U1 2
U2 10
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2016
VL 21
IS 6
BP 2366
EP 2412
DI 10.1007/s10664-015-9411-7
PG 47
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ED7XQ
UT WOS:000389085500005
DA 2024-07-18
ER

PT J
AU McIntosh, S
   Kamei, Y
   Adams, B
   Hassan, AE
AF McIntosh, Shane
   Kamei, Yasutaka
   Adams, Bram
   Hassan, Ahmed E.
TI An empirical study of the impact of modern code review practices on
   software quality
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Review
DE Code review; Software quality
ID PREDICTION
AB Software code review, i.e., the practice of having other team members critique changes to a software system, is a well-established best practice in both open source and proprietary software domains. Prior work has shown that formal code inspections tend to improve the quality of delivered software. However, the formal code inspection process mandates strict review criteria (e.g., in-person meetings and reviewer checklists) to ensure a base level of review quality, while the modern, lightweight code reviewing process does not. Although recent work explores the modern code review process, little is known about the relationship between modern code review practices and long-term software quality. Hence, in this paper, we study the relationship between post-release defects (a popular proxy for long-term software quality) and: (1) code review coverage, i.e., the proportion of changes that have been code reviewed, (2) code review participation, i.e., the degree of reviewer involvement in the code review process, and (3) code reviewer expertise, i.e., the level of domain-specific expertise of the code reviewers. Through a case study of the Qt, VTK, and ITK projects, we find that code review coverage, participation, and expertise share a significant link with software quality. Hence, our results empirically confirm the intuition that poorly-reviewed code has a negative impact on software quality in large systems using modern reviewing tools.
C1 [McIntosh, Shane; Hassan, Ahmed E.] Queens Univ, SAIL, Kingston, ON, Canada.
   [Kamei, Yasutaka] Kyushu Univ, Principles Software Languages Grp POSL, Fukuoka, Japan.
   [Adams, Bram] Polytech Montral, Lab Maintenance Construct & Intelligence Software, Montreal, PQ, Canada.
C3 Queens University - Canada; Kyushu University; Universite de Montreal;
   Polytechnique Montreal
RP McIntosh, S (corresponding author), Queens Univ, SAIL, Kingston, ON, Canada.
EM mcintosh@cs.queensu.ca; kamei@ait.kyushu-u.ac.jp; bram.adams@polymtl.ca;
   ahmed@cs.queensu.ca
RI Hassan, Ahmed/AAB-7241-2019; KHALIFA, AHMED khalifa/HKF-2246-2023; Ali,
   Ahmed/HOF-4672-2023
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; Adams,
   Bram/0000-0001-7213-4006
FU Natural Sciences and Engineering Research Council of Canada (NSERC);
   JSPS KAKENHI Grant [24680003, 25540026]; Grants-in-Aid for Scientific
   Research [25540026, 24680003] Funding Source: KAKEN
FX This research was partially supported by the Natural Sciences and
   Engineering Research Council of Canada (NSERC) and JSPS KAKENHI Grant
   Numbers 24680003 and 25540026.
CR [Anonymous], 2014, 11 WORKING C MINING, DOI [DOI 10.1145/2597073.2597076, DOI 10.1145/2597073]
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Baysal O, 2013, WORK CONF REVERSE EN, P122, DOI 10.1109/WCRE.2013.6671287
   Beller M., 2014, 11 WORK C MIN SOFTW, P202, DOI DOI 10.1145/2597073.2597082
   Bettenburg N, 2014, EMPIRICAL S IN PRESS
   Bird C., 2011, P 19 ACM SIGSOFT S 1, P4, DOI DOI 10.1145/2025113.2025119
   Chambers JM., 1992, Statistical Models in S
   EFRON B, 1986, J AM STAT ASSOC, V81, P461, DOI 10.2307/2289236
   FAGAN ME, 1976, IBM SYST J, V15, P182, DOI 10.1147/sj.153.0182
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Hamasaki K, 2013, DATASETS OSS PEER RE
   Harrell FE, 2015, SPRINGER SER STAT, DOI 10.1007/978-3-319-19425-7
   Harrell F.E., 2002, Regression modeling strategies
   HARRELL FE, 1984, STAT MED, V3, P143, DOI 10.1002/sim.4780030207
   HARRELL FE, 1985, CANCER TREAT REP, V69, P1071
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Hassan AE, 2008, APPLIED COMPUTING 2008, VOLS 1-3, P837
   Hastie T., 2009, The Elements of Statistical Learning
   Herraiz I., 2008, Proceedings of the 2008 International Working Conference on Mining Software Repositories. MSR'08, P145
   Jiang YJ, 2013, IEEE WORK CONF MIN S, P101, DOI 10.1109/MSR.2013.6624016
   Kamei Y., 2010, Proceedings of the 26th International Conference on Software Maintenance, P1, DOI 10.1109/ICSM.2010.5609530
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kemerer CF, 2009, IEEE T SOFTWARE ENG, V35, P534, DOI 10.1109/TSE.2009.27
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Koru AG, 2009, IEEE T SOFTWARE ENG, V35, P293, DOI 10.1109/TSE.2008.90
   Mäntylä MV, 2009, IEEE T SOFTWARE ENG, V35, P430, DOI 10.1109/TSE.2008.71
   Matsumoto S, 2010, P 6 INT C PREDICTIVE, P1, DOI DOI 10.1145/1868328.1868356
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Menzies T, 2003, 27TH ANNUAL NASA GODDARD/IEEE SOFTWARE ENGINEERING WORKSHOP - PROCEEDINGS, P51, DOI 10.1109/SEW.2002.1199449
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Mockus A, 2000, PROC IEEE INT CONF S, P120, DOI 10.1109/ICSM.2000.883028
   Mockus A, 2000, BELL LABS TECH J, V5, P169, DOI 10.1002/bltj.2229
   Mukadam M, 2013, IEEE WORK CONF MIN S, P45, DOI 10.1109/MSR.2013.6624002
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Nagappan Nachiappan, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P364
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Porter A., 1998, ACM Transactions on Software Engineering and Methodology, V7, P41, DOI 10.1145/268411.268421
   Pournelle G. H., 1953, Journal of Mammalogy, V34, P133, DOI 10.1890/0012-9658(2002)083[1421:SDEOLC]2.0.CO;2
   Rahman F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P432, DOI 10.1109/ICSE.2013.6606589
   Rahman F, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P491, DOI 10.1145/1985793.1985860
   Rigby PC, 2013, P 2013 9 JOINT M FDN, P202, DOI DOI 10.1145/2491411.2491444
   Rigby PC, 2014, STAT MODELS IN PRESS
   Rigby PC, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P541, DOI 10.1145/1985793.1985867
   Rigby PC, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P541
   Sarle WS, 1990, SAS STAT USERS GUIDE
   Shannon C. E., 1948, BELL SYST TECH J, V27, P379, DOI DOI 10.1002/J.1538-7305.1948.TB01338.X
   Shihab E., 2011, Proceedings of the ACM SIGSOFT symposium and the European Conference on Foundations of Software Engineering, P300
   TANAKA T, 1995, PROC INT CONF SOFTW, P123, DOI 10.1145/225014.225026
NR 48
TC 170
Z9 185
U1 0
U2 31
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2016
VL 21
IS 5
BP 2146
EP 2189
DI 10.1007/s10664-015-9381-9
PG 44
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DU2BX
UT WOS:000382017100009
DA 2024-07-18
ER

PT J
AU Mäder, P
   Egyed, A
AF Maeder, Patrick
   Egyed, Alexander
TI Do developers benefit from requirements traceability when evolving and
   maintaining a software system?
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Requirements traceability; Software traceability; Software maintenance;
   Software evolution; Traceability usage; Traceability effect;
   Traceability benefit; Empirical software engineering; Controlled
   experiment; Study
AB Software traceability is a required component of many software development processes. Advocates of requirements traceability cite advantages like easier program comprehension and support for software maintenance (i.e., software change). However, despite its growing popularity, there exists no published evaluation about the usefulness of requirements traceability. It is important, if not crucial, to investigate whether the use of requirements traceability can significantly support development tasks to eventually justify its costs. We thus conducted a controlled experiment with 71 subjects re-performing real maintenance tasks on two third-party development projects: half of the tasks with and the other half without traceability. Subjects sketched their task solutions on paper to focus on the their ability to solving the problems rather than their programming skills. Our findings show that subjects with traceability performed on average 24 % faster on a given task and created on average 50 % more correct solutions-suggesting that traceability not only saves effort but can profoundly improve software maintenance quality.
C1 [Maeder, Patrick] Tech Univ Ilmenau, Software Syst Proc Informat Grp, Ilmenau, Germany.
   [Egyed, Alexander] Johannes Kepler Univ Linz, Inst Software Syst Engn ISSE, A-4040 Linz, Austria.
C3 Technische Universitat Ilmenau; Johannes Kepler University Linz
RP Mäder, P (corresponding author), Tech Univ Ilmenau, Software Syst Proc Informat Grp, Ilmenau, Germany.
EM patrick.maeder@tu-ilmenau.de; alexander.egyed@jku.at
RI Mäder, Patrick/A-1848-2018; Egyed, Alexander/E-2632-2017
OI Mäder, Patrick/0000-0001-6871-2707; Egyed, Alexander/0000-0003-3128-5427
FU Austrian Science Fund (FWF) [M1268-N23, P23115-N23]; German Research
   Foundation (DFG) [Ph49/8-1]; German Ministry of Education and Research
   (BMBF) [16V0116]; Austrian Science Fund (FWF) [P23115] Funding Source:
   Austrian Science Fund (FWF)
FX We would like to thank all participants for their dedicated work and the
   developers of Gantt and iTrust for making their work publicly available.
   This work was funded by the Austrian Science Fund (FWF) M1268-N23,
   P23115-N23, the German Research Foundation (DFG) Ph49/8-1, and the
   German Ministry of Education and Research (BMBF) 16V0116.
CR Ahmad A., 2007, IEEE International Multitopic Conference (INMIC), (2007), P1, DOI DOI 10.1109/INMIC.2007.4557711
   Arkley P, 2005, 13th IEEE International Conference on Requirements Engineering, Proceedings, P385, DOI 10.1109/RE.2005.49
   Barashev D, 2013, GANTTPROJECT FREE PR
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Box GE., 2005, Statistics for Experimenters: Design, Innovation, and Discovery, V2nd ed.
   Briand L, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2559978
   Cleland-Huang J., 2014, FOSE P FUTURE SOFTWA, P55
   Crawley M.J., 2002, STAT COMPUTING INTRO
   Cuddeback D., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P231, DOI 10.1109/RE.2010.35
   CURTIS B, 1979, IEEE T SOFTWARE ENG, V5, P96, DOI 10.1109/TSE.1979.234165
   De Lucia Andrea, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P39, DOI 10.1109/ASE.2008.14
   De Lucia A, 2006, INT C PROGRAM COMPRE, P317, DOI 10.1109/ICPC.2006.28
   Domges R, 1998, COMMUN ACM, V41, P54, DOI 10.1145/290133.290149
   Dzidek WJ, 2008, IEEE T SOFTWARE ENG, V34, P407, DOI 10.1109/TSE.2008.15
   Egyed A., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P221, DOI 10.1109/RE.2010.34
   Glass R. L., 2002, FACTS FALLACIES SOFT
   Gotel O., 2012, SOFTWARE SYSTEMS TRA, P3, DOI [DOI 10.1007/978-1-4471-2239-5_1, 10.1007/978-1-4471-2239-5_1]
   Gotel O. C. Z., 1994, Proceedings of the First International Conference on Requirements Engineering (Cat. No.94TH0613-0), P94, DOI 10.1109/ICRE.1994.292398
   ISO, 2011, 2626262011 ISO
   Leffingwell D., 1997, CALCULATING YOUR RET
   Lindvall M, 1996, SOFTWARE PRACT EXPER, V26, P1161, DOI 10.1002/(SICI)1097-024X(199610)26:10<1161::AID-SPE58>3.0.CO;2-X
   MADER P, 2008, 16 IEEE INT REQ ENG, P23, DOI DOI 10.1109/RE.2008.24
   Mader P, 2010, LNCS, P226, DOI 10.1007/978-3-642-16145-216
   MADER P, 2012, P ICSM, P171, DOI DOI 10.1109/ICSM.2012.6405269
   Mäder P, 2013, SOFTW SYST MODEL, V12, P537, DOI 10.1007/s10270-012-0237-0
   Mäder P, 2013, IEEE SOFTWARE, V30, P58, DOI 10.1109/MS.2013.60
   Mäder P, 2012, J SYST SOFTWARE, V85, P2205, DOI 10.1016/j.jss.2011.10.023
   Mäder P, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P143, DOI 10.1109/RE.2009.23
   Omoronyia I, 2011, INFORM SOFTWARE TECH, V53, P851, DOI 10.1016/j.infsof.2011.03.001
   Pohl K, 1996, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, P76, DOI 10.1109/ICRE.1996.491432
   Pohl K., 1996, Requirements engineering: An overview
   Project R, 2013, R PROJECT STAT COMPU
   Ramesh B, 2001, IEEE T SOFTWARE ENG, V27, P58, DOI 10.1109/32.895989
   Ramesh B., 1995, Proceedings of the Second IEEE International Symposium on Requirements Engineering (Cat. No.95TH8040), P89, DOI 10.1109/ISRE.1995.512549
   Rempel P, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P943, DOI 10.1145/2568225.2568290
   Rempel P, 2013, S VIS LANG HUM CEN C, P195, DOI 10.1109/RE.2013.6636719
   Ricca F, 2010, IEEE T SOFTWARE ENG, V36, P96, DOI 10.1109/TSE.2009.69
   RTCA/EUROCAE, 2011, DO178CED12C RTCAEURO
   Williams L, 2013, ITRUST ROLE BASED HE
NR 39
TC 57
Z9 64
U1 0
U2 14
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2015
VL 20
IS 2
BP 413
EP 441
DI 10.1007/s10664-014-9314-z
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CH2AB
UT WOS:000353824000006
DA 2024-07-18
ER

PT J
AU Prikladnicki, R
   Boden, A
   Avram, G
   de Souza, CRB
   Wulf, V
AF Prikladnicki, Rafael
   Boden, Alexander
   Avram, Gabriela
   de Souza, Cleidson R. B.
   Wulf, Volker
TI Data collection in global software engineering research: learning from
   past experience
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Global software engineering; Research methods; Qualitative research;
   Data collection
ID COORDINATION; DISTANCE; FIELD
AB Global Software Engineering has become a standard in today's software industry. Research in distributed software development poses severe challenges that are due to the spatial and temporal distribution of the actors, as well as to language, intercultural and organizational aspects. These challenges occur in addition to "traditional" challenges of the domain itself in large-scale software projects, like coordination and communication issues, requirements volatily, lack of domain knowledge, among others. While several authors have reported empirical studies of global software development projects, the methodological difficulties and challenges of this type of studies have not been sufficiently discussed. In this paper, we share our experiences of collecting and analysing qualitative data in the context of Global Software Engineering projects. We discuss strategies for gaining access to field sites, building trust and documenting distributed and complex work practices in the context of several research projects we have conducted in the past 9 years. The experiences described in this paper illustrate the need to deal with fundamental problems, such as understanding local languages and different cultures, observing synchronous interaction, or dealing with barriers imposed by political conflicts between the sites. Based on our findings, we discuss some practical implications and strategies that can be used by other researchers and provide some recommendations for future research in methodological aspects of Global Software Engineering.
C1 [Prikladnicki, Rafael] Pontificia Univ Catolica Rio Grande do Sul, Porto Alegre, RS, Brazil.
   [Boden, Alexander] Univ Siegen, Inst Informat Syst & New Media, D-57068 Siegen, Germany.
   [Wulf, Volker] Univ Siegen, D-57068 Siegen, Germany.
   [Avram, Gabriela] Univ Limerick, Limerick, Ireland.
   [de Souza, Cleidson R. B.] Vale Inst Technol, Belem, Para, Brazil.
   [de Souza, Cleidson R. B.] Fed Univ Para, BR-66059 Belem, Para, Brazil.
C3 Pontificia Universidade Catolica Do Rio Grande Do Sul; Universitat
   Siegen; Universitat Siegen; University of Limerick; Instituto
   Tecnologico Vale Desenvolvimento Sustentavel; Universidade Federal do
   Para
RP Prikladnicki, R (corresponding author), Pontificia Univ Catolica Rio Grande do Sul, Porto Alegre, RS, Brazil.
EM rafaelp@pucrs.br; alexander.boden@uni-siegen.de; gabriela.avram@ul.ie;
   cleidson.desouza@acm.org; volker.wulf@uni-siegen.de
RI de Souza, Cleidson R B/J-4409-2014
OI de Souza, Cleidson R B/0000-0003-3240-3122; Wulf,
   Volker/0000-0002-1214-1551
FU Research Group on Distributed Software Development of the PDTI program -
   Dell Computers of Brazil Ltd. [Law 8.248/91]; CAPES [BEX 426006-6, BEX
   1312/99-5]; FAPERGS; CNPq [479206/2006-6, 550130/2011-06, 560037/2010-4,
   483125/2010-5]; Science Foundation Ireland; Lero-The Irish Software
   Engineering Research Centre under PI [03/IN3/1408C]; German Research
   Foundation (DFG)
FX The studies reported in this paper were partially supported by: the
   Research Group on Distributed Software Development of the PDTI program,
   financed by Dell Computers of Brazil Ltd. (Law 8.248/91); CAPES (project
   BEX 426006-6); CAPES (project BEX 1312/99-5); FAPERGS; CNPq (project
   479206/2006-6, project 550130/2011-06, project 560037/2010-4, project
   483125/2010-5); Science Foundation Ireland and Lero-The Irish Software
   Engineering Research Centre under PI grant 03/IN3/1408C; and the German
   Research Foundation (DFG) within the Project ARTOS-Articulation work in
   Offshoring Projects of Small and Medium-sized Enterprises of the
   Software Branch.
CR [Anonymous], INT ADV SCH EMPIRICA
   [Anonymous], SEAFOOD LNCS
   [Anonymous], ICGSE MUN GERM
   [Anonymous], 2004, HIDDEN POWER SOCIAL
   [Anonymous], EUR C KNOWL MAN BARC
   [Anonymous], P 2008 INT WORKSH CO
   [Anonymous], ICGSE MUN GERM
   [Anonymous], HDB SOFTWARE ENG KNO
   [Anonymous], J SOFTW PROCESS IMPR
   [Anonymous], ICGSE 2006 FLOR BRAZ
   [Anonymous], ECSCW
   [Anonymous], 1979, ACTION SCI
   [Anonymous], P 2 S EMP SOFTW ENG
   [Anonymous], 2007, GUIDE ADV EMPIRICAL
   [Anonymous], GLOBAL SOFTWARE ENG
   [Anonymous], INT C SOFTW ENG HAW
   [Anonymous], 1998, J COMPUT MEDIAT COMM
   [Anonymous], 67905 TRES COPPEUFRJ
   [Anonymous], INT C SOFTW ENG ZUR
   [Anonymous], ICSE WORKSH BEG BORR
   [Anonymous], P C COMP SUPP COOP W
   [Anonymous], ICGSE MUN GERM
   [Anonymous], HICSS 2008 HAW US
   [Anonymous], QUALITATIVE REPORT
   [Anonymous], INT S EMP SOFTW ENG
   Aranda J, 2009, PROC INT CONF SOFTW, P298, DOI 10.1109/ICSE.2009.5070530
   Avram G, 2011, INFORM SOFTWARE TECH, V53, P949, DOI 10.1016/j.infsof.2011.01.010
   Avram G, 2009, COMPUT SUPP COOP W J, V18, P477, DOI 10.1007/s10606-009-9099-6
   Boden A, 2007, SECOND IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P235
   Boden A, 2009, INT CONF GLOBAL SOFT, P18, DOI 10.1109/ICGSE.2009.10
   Brown B, 2007, ECSCW 2007: PROCEEDINGS OF THE 10TH EUROPEAN CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK, P411, DOI 10.1007/978-1-84800-031-5_22
   CARMEL E., 2006, MIS Quarterly Executive, V5, P43
   Carmel E., 1999, GLOBAL SOFTWARE TEAM
   Creswell J. W., 2013, RES DESIGN QUALITATI
   CURTIS B, 1988, COMMUN ACM, V31, P1268, DOI 10.1145/50087.50089
   Damian D, 2006, IEEE SOFTWARE, V23, P17, DOI 10.1109/MS.2006.126
   Dawson R, 2004, ELEVENTH ANNUAL INTERNATIONAL WORKSHOP ON SOFTWARE TECHNOLOGY AND ENGINEERING PRACTICE, PROCEEDINGS, P52
   de Souza CRB, 2011, IEEE T SOFTWARE ENG, V37, P325, DOI 10.1109/TSE.2011.19
   de Souza CRB, 2009, IEEE SOFTWARE, V26, P17, DOI 10.1109/MS.2009.176
   Dittrich Y, 2007, INFORM SOFTWARE TECH, V49, P531, DOI 10.1016/j.infsof.2007.02.009
   Dybå T, 2011, EMPIR SOFTW ENG, V16, P425, DOI 10.1007/s10664-011-9163-y
   Geertz C., 1973, INTERPRETATION CULTU, P3, DOI DOI 10.4324/9781315613192
   Gobo G., 2008, DOING ETHNOGRAPHY
   Gonçalves MK, 2011, J UNIVERS COMPUT SCI, V17, P1913
   Gupta Akhil, 1997, Culture, Power, Place: Explorations in Critical Anthropology
   Herbsleb JD, 1999, IEEE SOFTWARE, V16, P63, DOI 10.1109/52.795103
   Herbsleb JD, 2005, PROC INT CONF SOFTW, P23
   Herbsleb JD, 2001, PROC INT CONF SOFTW, P81, DOI 10.1109/ICSE.2001.919083
   Herbsleb JD, 2001, IEEE SOFTWARE, V18, P16, DOI 10.1109/52.914732
   Hine C., 2000, Virtual ethnography
   Jacobson Ivar., 1999, AW OBJ TECHNOL S
   King WR, 2008, MIS QUART, V32, P205
   Klein HK, 1999, MIS QUART, V23, P67, DOI 10.2307/249410
   Ko AJ, 2007, PROC INT CONF SOFTW, P344
   Kraut R.E., 1990, Intellectual Teamwork, P149
   KRAUT RE, 1995, COMMUN ACM, V38, P69, DOI 10.1145/203330.203345
   Lethbridge TC, 2005, EMPIR SOFTW ENG, V10, P311, DOI 10.1007/s10664-005-1290-x
   Lutz B, 2009, INT CONF GLOBAL SOFT, P249, DOI 10.1109/ICGSE.2009.33
   Marcus GeorgeE., 1998, ETHNOGRAPHY THICK TH
   Oates B. J., 2006, Researching information systems and computing
   Onwuegbuzie AJ, 2007, QUAL QUANT, V41, P105, DOI 10.1007/s11135-005-1098-1
   Patil S, 2011, INFORM SOFTWARE TECH, V53, P969, DOI 10.1016/j.infsof.2011.01.013
   PERRY DE, 1994, IEEE SOFTWARE, V11, P36, DOI 10.1109/52.300082
   Randall D., 2007, Fieldwork for design: theory and practice
   Richardson I, 2008, 2008 3RD IEEE INTERNATIONAL CONFERENCE GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P13, DOI 10.1109/ICGSE.2008.21
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Sengupta B., 2006, 28th International Conference on Software Engineering Proceedings, P731, DOI 10.1145/1134285.1134402
   Sharp H, 2004, EMPIR SOFTW ENG, V9, P353, DOI 10.1023/B:EMSE.0000039884.79385.54
   Strauss E, 1998, CLIN ORTHOP RELAT R, P2
   Suchman L. A., 1987, Plans and situated actions: The problem of human-machine communication
   Taylor SJ., 1984, INTRO QUALITATIVE RE
   Wittel A., 2000, FORUM QUALITATIVEQUA, V1, P1, DOI DOI 10.17169/FQS-13.1.1710
   Wohlin C, 2003, LECT NOTES COMPUT SC, V2765, P7
   Wulf V., 2011, Proceedings of the CSCW 2011, P505, DOI DOI 10.1145/1958824.1958902
NR 74
TC 8
Z9 10
U1 0
U2 22
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2014
VL 19
IS 4
BP 822
EP 856
DI 10.1007/s10664-012-9240-x
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AH8LE
UT WOS:000336388500002
DA 2024-07-18
ER

PT J
AU Salleh, N
   Mendes, E
   Grundy, J
AF Salleh, Norsaremah
   Mendes, Emilia
   Grundy, John
TI Investigating the effects of personality traits on pair programming in a
   higher education setting through a family of experiments
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Pair programming; Formal experiment; Personality traits; Five-factor
   model; Higher education
ID BRIGGS TYPE INDICATOR; PREDICTS ACADEMIC-PERFORMANCE; STATISTICAL POWER
   ANALYSIS; TEAM PERFORMANCE; 5-FACTOR MODEL; BIG 5; GENDER-DIFFERENCES;
   JOB-PERFORMANCE; WORK; IMPACT
AB Evidence from our systematic literature review revealed numerous inconsistencies in findings from the Pair Programming (PP) literature regarding the effects of personality on PP's effectiveness as a pedagogical tool. In particular: i) the effect of differing personality traits of pairs on the successful implementation of pair-programming (PP) within a higher education setting is still unclear, and ii) the personality instrument most often used had been Myers-Briggs Type Indicator (MBTI), despite being an indicator criticized by personality psychologists as unreliable in measuring an individual's personality traits. These issues motivated the research described in this paper. We conducted a series of five formal experiments (one of which was a replicated experiment), between 2009 and 2010, at the University of Auckland, to investigate the effects of personality composition on PP's effectiveness. Each experiment looked at a particular personality trait of the Five-Factor personality framework. This framework comprises five broad traits (Openness to experience, Conscientiousness, Extraversion, Agreeableness, and Neuroticism), and our experiments focused on three of these - Conscientiousness, Neuroticism, and Openness. A total of 594 undergraduate students participated as subjects. Overall, our findings for all five experiments, including the replication, showed that Conscientiousness and Neuroticism did not present a statistically significant effect upon paired students' academic performance. However, Openness played a significant role in differentiating paired students' academic performance. Participants' survey results also indicated that PP not only caused an increase in satisfaction and confidence levels but also brought enjoyment to the tutorial classes and enhanced students' motivation.
C1 [Salleh, Norsaremah] Int Islamic Univ Malaysia, Dept Comp Sci, Kuala Lumpur 50728, Malaysia.
   [Mendes, Emilia] Blekinge Istitute Technol, Sch Comp, S-37179 Karlskrona, Sweden.
   [Grundy, John] Swinburne Univ Technol, Fac Informat & Commun Technol, Hawthorn, Vic, Australia.
C3 International Islamic University Malaysia; Swinburne University of
   Technology
RP Salleh, N (corresponding author), Int Islamic Univ Malaysia, Dept Comp Sci, POB 10, Kuala Lumpur 50728, Malaysia.
EM norsaremah@iium.edu.my; emilia.mendes@bth.se; jgrundy@swin.edu.au
RI Mendes, Maria E/B-4207-2015; Grundy, John/AAF-1716-2019; Salleh,
   Norsaremah/B-9889-2008; Salleh, Norsaremah/AFU-5066-2022
OI Grundy, John/0000-0003-4928-7076; Salleh,
   Norsaremah/0000-0001-5625-7014; Mendes, Emilia/0000-0003-0449-5322
FU Ministry of Higher Education Malaysia
FX This research is supported by the Ministry of Higher Education Malaysia.
   The authors would like to thank all tutors and demonstrators of CS101
   and CS230 at the University of Auckland (2008-2010) for the help given
   to run the experiments. Thanks also to all students who have
   participated in the experiments.
CR Acuña ST, 2009, INFORM SOFTWARE TECH, V51, P627, DOI 10.1016/j.infsof.2008.08.006
   [Anonymous], 2002, Agile software development
   [Anonymous], 1971, The Psychology of Computer Programming
   [Anonymous], 2010, Proceedings of the 32Nd ACM/IEEE International Conference on Software Engineering-Volume 1, ICSE'10
   [Anonymous], 2006, AG 2006 P
   [Anonymous], 1998, PLEASE UNDERSTAND ME
   Arisholm E, 2007, IEEE T SOFTWARE ENG, V33, P65, DOI 10.1109/TSE.2007.17
   BARRICK MR, 1991, PERS PSYCHOL, V44, P1, DOI 10.1111/j.1744-6570.1991.tb00688.x
   Barrick MR, 1998, J APPL PSYCHOL, V83, P377, DOI 10.1037/0021-9010.83.3.377
   Barrick MR, 2001, INT J SELECT ASSESS, V9, P9, DOI 10.1111/1468-2389.00160
   BASILI VR, 1988, IEEE T SOFTWARE ENG, V14, P758, DOI 10.1109/32.6156
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Beck Kent, 1999, Extreme Programming Explained: Embrace Change
   Bell ST, 2007, J APPL PSYCHOL, V92, P595, DOI 10.1037/0021-9010.92.3.595
   Boekaerts M, 1996, EUR J PERSONALITY, V10, P377
   Bowers CA, 2000, SMALL GR RES, V31, P305, DOI 10.1177/104649640003100303
   BOYLE GJ, 1995, AUST PSYCHOL, V30, P71, DOI 10.1111/j.1742-9544.1995.tb01750.x
   Bradley J.H., 1997, J MANAG DEV, V16, P337, DOI DOI 10.1108/02621719710174525
   Buchanan T, 2005, EUR J PSYCHOL ASSESS, V21, P115, DOI 10.1027/1015-5759.21.2.115
   Burch GSJ, 2008, INT REV IND ORGAN PS, V23, P261
   Busato VV, 2000, PERS INDIV DIFFER, V29, P1057, DOI 10.1016/S0191-8869(99)00253-6
   Cegielski CG, 2006, COMMUN ACM, V49, P73, DOI 10.1145/1164394.1164397
   Chamorro-Premuzic T, 2003, J RES PERS, V37, P319, DOI 10.1016/S0092-6566(02)00578-0
   Chamorro-Premuzic T, 2003, EUR J PERSONALITY, V17, P237, DOI 10.1002/per.473
   Chamorro-Premuzic T, 2008, PERS INDIV DIFFER, V44, P1596, DOI 10.1016/j.paid.2008.01.003
   Choi KS, 2004, THESIS NEW JERSEY I
   Choi KS, 2008, INFORM SOFTWARE TECH, V50, P1114, DOI 10.1016/j.infsof.2007.11.002
   Cockburn A., 2001, EXTREME PROGRAMMING, P223, DOI DOI 10.1108/00012530210448235
   Cohen J., 1988, STAT POWER ANAL BEHA
   Conard MA, 2006, J RES PERS, V40, P339, DOI 10.1016/j.jrp.2004.10.003
   Cook T. D., 1979, QUASIEXPERIMENTATION
   Costa P.T., 1992, REVISED NEO PERSONAL
   Costa PT, 2001, J PERS SOC PSYCHOL, V81, P322, DOI [10.1037/0022-3514.81.2.322, 10.1037//0022-3514.81.2.322]
   COSTA PT, 1995, J PERS ASSESS, V64, P21, DOI 10.1207/s15327752jpa6401_2
   Da Cunha AD, 2007, COMMUN ACM, V50, P109, DOI 10.1145/1230819.1241672
   Davito A, 1985, 9 MENTAL MEASUREMENT
   DeClue T., 2003, J COMPUTING SMALL CO, V18, P49
   DeRaad B, 1996, EUR J PERSONALITY, V10, P303, DOI 10.1002/(SICI)1099-0984(199612)10:5<303::AID-PER262>3.0.CO;2-2
   DOLLINGER SJ, 1991, J RES PERS, V25, P276, DOI 10.1016/0092-6566(91)90020-Q
   Donaldson SI, 2002, J BUS PSYCHOL, V17, P245, DOI 10.1023/A:1019637632584
   Driskell JE, 2006, GROUP DYN-THEOR RES, V10, P249, DOI 10.1037/1089-2699.10.4.249
   Duff A, 2004, PERS INDIV DIFFER, V36, P1907, DOI 10.1016/j.paid.2003.08.020
   Dybå T, 2006, INFORM SOFTWARE TECH, V48, P745, DOI 10.1016/j.infsof.2005.08.009
   Farsides T, 2003, PERS INDIV DIFFER, V34, P1225, DOI 10.1016/S0191-8869(02)00111-3
   Faul F, 2007, BEHAV RES METHODS, V39, P175, DOI 10.3758/BF03193146
   FEINGOLD A, 1994, PSYCHOL BULL, V116, P429, DOI 10.1037/0033-2909.116.3.429
   Feldt R, 2008, CHASE 08
   Francis LJ, 2008, J INDIVID DIFFER, V29, P116, DOI 10.1027/1614-0001.29.2.116
   Furnham A, 1996, PERS INDIV DIFFER, V21, P303, DOI 10.1016/0191-8869(96)00033-5
   Gallis H, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P132, DOI 10.1109/ISESE.2003.1237972
   Goldberg LR, 2006, J RES PERS, V40, P84, DOI 10.1016/j.jrp.2005.08.007
   Gorla N, 2004, COMMUN ACM, V47, P79, DOI 10.1145/990680.990684
   Gosling SD, 2004, AM PSYCHOL, V59, P93, DOI 10.1037/0003-066X.59.2.93
   Hanks B., 2006, ACM SIGCSE Bulletin, V38, P113, DOI [10.1145/1140123.1140156, DOI 10.1145/1140123.1140156]
   Hannay JE, 2010, IEEE T SOFTWARE ENG, V36, P61, DOI 10.1109/TSE.2009.41
   HICKS LE, 1984, J PERS SOC PSYCHOL, V46, P1118, DOI 10.1037/0022-3514.46.5.1118
   Ho C., 2004, EXAMINING IMPACT PAI
   Hsu BF, 2007, PORTL INT CONF MANAG, P2583, DOI 10.1109/PICMET.2007.4349592
   John O.P., 1999, HDB PERSONALITY THEO, P102, DOI DOI 10.1525/FQ.1998.51.4.04A00260
   Johnson JA, 2005, J RES PERS, V39, P103, DOI 10.1016/j.jrp.2004.09.009
   Johnson JA, 2008, IPIP NEO PERSONALITY
   Juristo N., 2013, BASICS SOFTWARE ENG
   Kam J., 2006, P ISESE 06, P232, DOI DOI 10.1145/1159733.1159769
   Katira N., 2004, SIGCSE Bulletin, V36, P7, DOI 10.1145/1028174.971307
   Keirsey D., 1984, PLEASE UNDERSTAND ME
   Kichuk SL, 1997, J ENG TECHNOL MANAGE, V14, P195, DOI 10.1016/S0923-4748(97)00010-6
   Lan L, 2010, BUILD ENVIRON, V45, P1202, DOI 10.1016/j.buildenv.2009.11.002
   Layman L, 2006, CONF SOFTW ENG EDUC, P159, DOI 10.1109/CSEET.2006.10
   Leech N.L., 2005, SPSS INTERMEDIATE ST
   Leedy P.D., 2005, PRACTICAL RES PLANNI, V8th
   LePine JA, 2003, J APPL PSYCHOL, V88, P27, DOI 10.1037/0021-9010.88.1.27
   LEVINE JM, 1990, ANNU REV PSYCHOL, V41, P585, DOI 10.1146/annurev.ps.41.020190.003101
   Lounsbury JW, 2003, PERS INDIV DIFFER, V35, P1231, DOI 10.1016/S0191-8869(02)00330-6
   Matzler K, 2008, J ECON PSYCHOL, V29, P301, DOI 10.1016/j.joep.2007.06.004
   McCrae RR, 1997, AM PSYCHOL, V52, P509, DOI 10.1037/0003-066X.52.5.509
   MCCRAE RR, 1989, J PERS, V57, P17, DOI 10.1111/j.1467-6494.1989.tb00759.x
   MCCRAE RR, 1992, J PERS, V60, P175, DOI 10.1111/j.1467-6494.1992.tb00970.x
   McDowell C, 2003, PROC INT CONF SOFTW, P602, DOI 10.1109/ICSE.2003.1201243
   Morgan G. A., 2004, SPSS for introductory statistics: Use and interpretation
   Murphy K.R., 2003, Statistical power analysis: A simple and general model for traditional and modern hypothesis tests, V2nd
   Myers Isabel Briggs, 1998, MBTI Manual: A Guide to the Development and Use of the Myers-Briggs Type Indicator
   Myers J. L., 2003, Research design and statistical analysis
   Neuman GA, 1999, GROUP ORGAN MANAGE, V24, P28, DOI 10.1177/1059601199241003
   Nguyen NT, 2005, J HIGH EDUC POLICY M, V27, P105, DOI 10.1080/13600800500046313
   Norman G, 2010, ADV HLTH SCI ED
   O'Connor MC, 2007, PERS INDIV DIFFER, V43, P971, DOI 10.1016/j.paid.2007.03.017
   Pallant J., 2015, SPSS survival manual: A step by step guide to data analysis using IBM SPSS
   Paunonen SV, 2001, J RES PERS, V35, P78, DOI 10.1006/jrpe.2000.2309
   Peeters MAG, 2006, EUR J PERSONALITY, V20, P377, DOI 10.1002/per.588
   Peslak A. R., 2006, SIGMIS CPR'06. Proceedings of the 2006 ACM SIGMIS CPR Conference. Forty Four Years of Computer Personnel Research: Achievements, Challenges and the Future, P273, DOI 10.1145/1125170.1125233
   Pfleeger S. L., 1995, Annals of Software Engineering, V1, P219, DOI 10.1007/BF02249052
   Phillips P, 2003, EUR J PERSONALITY, V17, P435, DOI 10.1002/per.488
   Pieterse V., 2006, Proceedings of annual research conference of the South African institute of computer scientists and information technologists on IT research in developing countries, P180
   Poropat AE, 2009, PSYCHOL BULL, V135, P322, DOI 10.1037/a0014996
   Pulford BD, 2006, PERS INDIV DIFFER, V41, P1409, DOI 10.1016/j.paid.2006.05.010
   Puus U, 2004, LECT NOTES COMPUT SC, V3092, P246
   Rutherfoord R. H., 2001, SIGCSE Bulletin, V33, P73, DOI 10.1145/507758.377486
   Salleh N, 2011, P 24 IEEE CS C SOFTW
   Salleh N, 2010, P 4 ACM IEE INT S EM
   Salleh N, 2011, IEEE T SOFTWARE ENG, V37, P509, DOI 10.1109/TSE.2010.59
   Salleh N, 2009, INT SYMP EMP SOFTWAR, P214, DOI 10.1109/ESEM.2009.5315997
   Saulsman LM, 2003, CURR OPIN PSYCHIATR, V16, P83, DOI 10.1097/00001504-200301000-00016
   Schmitt N, 2008, HUM PERFORM, V21, P49, DOI 10.1080/08959280701522197
   SCHRIESHEIM CA, 1991, J APPL PSYCHOL, V76, P106, DOI 10.1037/0021-9010.76.1.106
   Sfetsos P, 2006, LECT NOTES COMPUT SC, V4044, P43
   Sfetsos P, 2009, EMPIR SOFTW ENG, V14, P187, DOI 10.1007/s10664-008-9093-5
   Tabachnick B.G., 2012, Using multivariate statistics, V6th
   Thomas L., 2003, SIGCSE Bulletin, V35, P363, DOI 10.1145/792548.612007
   Trochim W. M., 2006, RES METHODS KNOWLEDG
   Walle T, 2009, INT SYMP EMP SOFTWAR, P203, DOI 10.1109/ESEM.2009.5315996
   Whyte JJ, 2006, CLIN EVALUATION MED
   Williams L, 2000, IEEE SOFTWARE, V17, P19, DOI 10.1109/52.854064
   Williams L, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P143, DOI 10.1109/ISESE.2003.1237973
   Yuan KH, 2005, J EDUC BEHAV STAT, V30, P141, DOI 10.3102/10769986030002141
NR 114
TC 47
Z9 50
U1 6
U2 55
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2014
VL 19
IS 3
BP 714
EP 752
DI 10.1007/s10664-012-9238-4
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA AF0ZA
UT WOS:000334442700009
DA 2024-07-18
ER

PT J
AU Itkonen, J
   Mäntylä, MV
AF Itkonen, Juha
   Mantyla, Mika V.
TI Are test cases needed? Replicated comparison between exploratory and
   test-case-based software testing
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software testing; Manual testing; Test cases; Exploratory testing;
   Experiment; Effectiveness; Efficiency
ID DEFECT DETECTION
AB Manual software testing is a widely practiced verification and validation method that is unlikely to fade away despite the advances in test automation. In the domain of manual testing, many practitioners advocate exploratory testing (ET), i.e., creative, experience-based testing without predesigned test cases, and they claim that it is more efficient than testing with detailed test cases. This paper reports a replicated experiment comparing effectiveness, efficiency, and perceived differences between ET and test-case-based testing (TCT) using 51 students as subjects, who performed manual functional testing on the jEdit text editor. Our results confirm the findings of the original study: 1) there is no difference in the defect detection effectiveness between ET and TCT, 2) ET is more efficient by requiring less design effort, and 3) TCT produces more false-positive defect reports than ET. Based on the small differences in the experimental design, we also put forward a hypothesis that the effectiveness of the TCT approach would suffer more than ET from time pressure. We also found that both approaches had distinctive issues: in TCT, the problems were related to correct abstraction levels of test cases, and the problems in ET were related to test design and logging of the test execution and results. Finally, we recognize that TCT has other benefits over ET in managing and controlling testing in large organizations.
C1 [Itkonen, Juha; Mantyla, Mika V.] Aalto Univ, Dept Comp Sci & Engn, FI-00076 Aalto, Finland.
   [Mantyla, Mika V.] Lund Univ, Dept Comp Sci, S-22100 Lund, Sweden.
C3 Aalto University; Lund University
RP Itkonen, J (corresponding author), Aalto Univ, Dept Comp Sci & Engn, FI-00076 Aalto, Finland.
EM juha.itkonen@aalto.fi; mika.mantyla@aalto.fi
RI Mäntylä, Mika V/E-7644-2012; Itkonen, Juha/E-8360-2012
OI Mantyla, Mika/0000-0002-2841-5879; Itkonen, Juha/0000-0001-9084-495X
CR [Abran A. IEEE Computer Society IEEE Computer Society], 2004, GUIDE SOFTWARE ENG B
   Andersson C, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P37, DOI 10.1109/ISESE.2002.1166923
   [Anonymous], DISCOVERING STAT USI
   [Anonymous], 2010, 1 INT WORKSH REPL EM
   [Anonymous], 1990, Software testing techniques {
   [Anonymous], 2004, A practitioner's guide to software test design
   [Anonymous], 2009, PROC IEEE 13 INT MUL
   Bach J., 1999, GEN FUNCTIONALITY ST
   Bach J, 2000, SOFTWARE BASED TEST
   Bach J, 2003, EXPLORATORY TEST EXP
   Bach J, 2004, TESTING PRACTITIONER, P253
   Baeza-Yates Ricardo, 1999, MODERN INFORM RETRIE, V463
   BASILI VR, 1987, IEEE T SOFTWARE ENG, V13, P1278, DOI 10.1109/TSE.1987.232881
   Berner S, 2005, PROC INT CONF SOFTW, P571
   Bolton M, 2005, BETTER SOFTWARE, V7
   Cohen DM, 1997, IEEE T SOFTWARE ENG, V23, P437, DOI 10.1109/32.605761
   Craig R.D., 2002, SYSTEMATIC SOFTWARE
   Crispin L., 2009, AGILE TESTING PRACTI
   do Nascimento L.H., 2007, Workshop on Domain specific approaches to software test automation: in conjunction with the 6th ESEC/FSE joint meeting, P27
   Ellis PD, 2010, ESSENTIAL GUIDE TO EFFECT SIZES: STATISTICAL POWER, META-ANALYSIS AND THE INTERPRETATION OF RESEARCH RESULTS, P1
   Engström E, 2013, INFORM SOFTWARE TECH, V55, P581, DOI 10.1016/j.infsof.2012.04.009
   Engström E, 2010, LECT NOTES COMPUT SC, V6156, P3, DOI 10.1007/978-3-642-13792-1_3
   Glass RL, 2002, IEEE SOFTWARE, V19, P112, DOI 10.1109/MS.2002.1032872
   Grechanik M., 2010, Proceedings of the FSE/SDP workshop on Future of software engineering research, P149, DOI DOI 10.1145/1882362.1882394
   Houdek F, 2002, INT J SOFTW ENG KNOW, V12, P637, DOI 10.1142/S0218194002001128
   Huang LG, 2006, IEEE SOFTWARE, V23, P88, DOI 10.1109/MS.2006.127
   Itkonen J, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P82, DOI 10.1109/ISESE.2005.1541817
   Itkonen Juha, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P61
   Itkonen J., 2008, THESIS HELSINKI U TE
   Itkonen J, 2013, ET VS TCT EXPT REPLI, DOI DOI 10.6084/M9.FIGSHARE.689809.ACCESSED
   Itkonen J, 2013, IEEE T SOFTWARE ENG, V39, P707, DOI 10.1109/TSE.2012.55
   Itkonen J, 2009, INT SYMP EMP SOFTWAR, P495
   Juristo N, 2004, EMPIR SOFTW ENG, V9, P7, DOI 10.1023/B:EMSE.0000013513.48963.1b
   Juristo N., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P330, DOI 10.1109/ICST.2012.113
   Juristo N., 2013, BASICS SOFTWARE ENG
   Kamsties E., 1995, Software Engineering - ESEC '95. 5th European Software Engineering Conference. Proceedings, P362
   Kaner C., 1999, TESTING COMPUTER SOF
   Kaner Cem., 2002, LESSONS LEARNED SOFT
   Kitchenham B, 2008, EMPIR SOFTW ENG, V13, P219, DOI 10.1007/s10664-008-9061-0
   Lyndsay James, 2003, Adventures in Session-Based Testing
   Mäntylä MV, 2013, INFORM SOFTWARE TECH, V55, P986, DOI 10.1016/j.infsof.2012.12.004
   Mäntylä MV, 2011, EUR CON SFTWR MTNCE, P131, DOI 10.1109/CSMR.2011.19
   Martin D, 2007, PROC INT CONF SOFTW, P602
   McConnell Steve., 2004, Code Complete, V2nd ed
   MCDANIEL LS, 1990, J ACCOUNTING RES, V28, P267, DOI 10.2307/2491150
   Mouchawrab S, 2011, IEEE T SOFTWARE ENG, V37, P161, DOI 10.1109/TSE.2010.32
   MYERS GJ, 1978, COMMUN ACM, V21, P760, DOI 10.1145/359588.359602
   Myers Glenford J., 2011, The Art of Software Testing
   Ng SP, 2004, 2004 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P116, DOI 10.1109/ASWEC.2004.1290464
   Page A., 2008, WE TEST SOFTWARE MIC
   Pichler Josef, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P494, DOI 10.1109/ICST.2008.52
   Rafi D. M., 2012, 2012 Proceedings of 7th International Workshop on Automation of Software Test (AST 2012), P36, DOI 10.1109/IWAST.2012.6228988
   Ramasubbu N, 2009, PROC INT CONF SOFTW, P529, DOI 10.1109/ICSE.2009.5070551
   Runeson P, 2006, IEEE SOFTWARE, V23, P82, DOI 10.1109/MS.2006.89
   Shah SMA, 2012, INT SYMP EMP SOFTWAR, P315, DOI 10.1145/2372251.2372308
   Shull FJ, 2008, EMPIR SOFTW ENG, V13, P211, DOI 10.1007/s10664-008-9060-1
   Spolsky J, 2001, JOEL SOFTWARE
   Tichy W. F., 2000, Empirical Software Engineering, V5, P309, DOI 10.1023/A:1009844119158
   Tinkham A., 2003, P PAC NW SOFTW QUAL
   Tinkham A., 2003, P SOFTW TEST AN REV, P9
   Tsang EWK, 1999, ACAD MANAGE REV, V24, P759, DOI 10.2307/259353
   Tuomikoski J., 2009, P 10 INT C PROD FOC
   Våga J, 2002, SOFTWARE QUALITY AND SOFTWARE TESTING IN INTERNET TIMES, P23
   Vegas S., 2006, International Symposium on Empirical Software Engineering, P28, DOI DOI 10.1145/1159733.1159741
   Whittaker J. A., 2009, Exploratory software testing: tips, tricks, tours, and techniques to guide test design
   Whittaker James A., 2003, BREAK SOFTWARE PRACT
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Wood Bill, 2003, Medical Device and Diagnostic Industry, V25, P90
   Wood M, 1997, LECT NOTES COMPUT SC, V1301, P262, DOI 10.1145/267896.267915
   Yatani K, 2010, STAT HCI RES
NR 70
TC 31
Z9 36
U1 1
U2 23
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2014
VL 19
IS 2
BP 303
EP 342
DI 10.1007/s10664-013-9266-8
PG 40
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AD1SF
UT WOS:000333013100003
DA 2024-07-18
ER

PT J
AU Parnin, C
   Bird, C
   Murphy-Hill, E
AF Parnin, Chris
   Bird, Christian
   Murphy-Hill, Emerson
TI Adoption and use of Java generics
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Generics; Annotations; Java; Languages; Post-mortem analysis
AB Support for generic programming was added to the Java language in 2004, representing perhaps the most significant change to one of the most widely used programming languages today. Researchers and language designers anticipated this addition would relieve many long-standing problems plaguing developers, but surprisingly, no one has yet measured how generics have been adopted and used in practice. In this paper, we report on the first empirical investigation into how Java generics have been integrated into open source software by automatically mining the history of 40 popular open source Java programs, traversing more than 650 million lines of code in the process. We evaluate five hypotheses and research questions about how Java developers use generics. For example, our results suggest that generics sometimes reduce the number of type casts and that generics are usually adopted by a single champion in a project, rather than all committers. We also offer insights into why some features may be adopted sooner and others features may be held back.
C1 [Parnin, Chris] Georgia Inst Technol, Coll Comp, Atlanta, GA 30332 USA.
   [Bird, Christian] Microsoft Res, Redmond, WA 98052 USA.
   [Murphy-Hill, Emerson] N Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
C3 University System of Georgia; Georgia Institute of Technology;
   Microsoft; North Carolina State University
RP Murphy-Hill, E (corresponding author), N Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
EM chris.parnin@gatech.edu; cbird@microsoft.com; emerson@csc.ncsu.edu
CR [Anonymous], 2012, JAVA TUTORIALS ANNOT
   [Anonymous], 2012, ADVANTAGES JAVA EE 5
   [Anonymous], 2012, JAVA LANGUAGE GUIDE
   Basit H, 2005, P 17 INT C SOFTW ENG, P109
   BENJAMINI Y, 1995, J R STAT SOC B, V57, P289, DOI 10.1111/j.2517-6161.1995.tb02031.x
   Bloch J., 2016, Effective Java
   Bracha G, 2012, LESSON GENERICS
   Bracha G, 2005, GENERICS JAVA PROGRA
   Donovan A, 2004, OOPSLA 04
   Dowdy S., 2004, STAT RES
   Ducheneaut N., 2005, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V14, P323, DOI 10.1007/s10606-005-9000-1
   Flanagan C, 2002, ACM SIGPLAN NOTICES, V37, P234, DOI 10.1145/543552.512558
   Fuhrer R, 2005, LECT NOTES COMPUT SC, V3586, P71
   Geiger R, 2006, LECT NOTES COMPUT SC, V3922, P411
   Halstead M.H., 1977, OPERATING PROGRAMMIN
   Humphrey W S, 1995, A discipline for software engineering
   Liebig Jorg, 2011, AOSD 11
   Markstrum S, 2010, P WORKSH EV US PROGR
   Matsumoto A., 2002, P 8 INT S SOFTW METR
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Naftalin M., 2006, JAVA GENERICS COLLEC
   O'Mahony S, 2007, ACAD MANAGE J, V50, P1079
   Pankratius V, 2009, 200912 U KARLSR FAK
   Papi Matthew M., 2008, INT S SOFT TEST AN I, P201
   Parnin C., 2011, P 8 WORK C MIN SOFTW, P3, DOI [10.1145/1985441.1985446, DOI 10.1145/1985441.1985446]
   Shi L, 2011, LECT NOTES COMPUT SC, V6603, P416, DOI 10.1007/978-3-642-19811-3_29
   Storey MA, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P251, DOI 10.1145/1368088.1368123
   van Emden E, 2002, NINTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P97, DOI 10.1109/WCRE.2002.1173068
   VANDEVOORDE D, 2003, C TEMPLATES COMPLETE
   Zimmermann T, 2006, P OOPSLA WORKSH ECL
NR 30
TC 26
Z9 33
U1 1
U2 42
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2013
VL 18
IS 6
BP 1047
EP 1089
DI 10.1007/s10664-012-9236-6
PG 43
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 215SC
UT WOS:000324229600002
DA 2024-07-18
ER

PT J
AU Raja, U
AF Raja, Uzma
TI All complaints are not created equal: text analysis of open source
   software defect reports
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software maintenance; Software reliability; Defect removal efficiency
ID RELIABILITY-ANALYSIS; TIME
AB As the use of Open Source Software (OSS) systems increases in the corporate environment, it is important to examine the maintenance process of these projects. OSS projects allow end users to directly submit reports in case of any operational issues. Timely resolution of these defect reports requires effective management of maintenance resources. This study analyzes the usefulness of the textual content of the defect reports as an early indicator of their resolution time. Text Mining techniques are used to categorize defect reports of five OSS projects. Significant variation in the defect resolution time amongst the resulting categories, for each of the sample projects, indicates that a text based classification of defect reports can be useful in early assessment of resolution time before source code level analysis. Such technique can assist in allocation of sufficient maintenance resources to targeted defects and also enable project teams to manage customer expectations regarding defect resolution times.
C1 Univ Alabama, Dept Informat Syst Stat & Management Sci, Tuscaloosa, AL 35487 USA.
C3 University of Alabama System; University of Alabama Tuscaloosa
RP Raja, U (corresponding author), Univ Alabama, Dept Informat Syst Stat & Management Sci, Tuscaloosa, AL 35487 USA.
EM uraja@cba.ua.edu
CR [Anonymous], 2004, Software Engineering and Knowledge Engineering
   [Anonymous], 2005, Understanding Search Engines: Mathematical Modeling and Text Retrieval
   [Anonymous], 2010, CAMBRIDGE DICT STAT, DOI DOI 10.1017/CBO9780511779633
   [Anonymous], 2007, 4 INT WORKSHOP MININ
   Anvik John, 2005, P 2005 OOPSLA WORKSH, P35
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Bettenburg N, 2008, PROC IEEE INT CONF S, P337, DOI 10.1109/ICSM.2008.4658082
   Bhawnani P, 2005, PROC IEEE INT CONF S, P617
   BRETTSCHNEIDER R, 1989, IEEE SOFTWARE, V6, P100, DOI 10.1109/52.31659
   Campbell D.T., 2001, Experimental and quasiexperimental designs for generalized causal inference
   Canfora G, 2005, P WORKSH EMP STUD RE
   Chiarini-Tremblay M, 2005, 11 AM C INF SYST OM
   Chulani S, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P189, DOI 10.1109/METRIC.2003.1232467
   COCHRAN WG, 1947, BIOMETRICS, V3, P22, DOI 10.2307/3001535
   CROWSTON K, 2003, INT C INF SYST SEATT
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   Di Lucca GA, 2002, PROC IEEE INT CONF S, P93, DOI 10.1109/ICSM.2002.1167756
   Dinh-Trong TT, 2005, IEEE T SOFTWARE ENG, V31, P481, DOI 10.1109/TSE.2005.73
   Dit B., 2008, P 1 INT WORKSH SEM T
   Goldberg JL, 1995, PROC INT C TOOLS ART, P258, DOI 10.1109/TAI.1995.479592
   Huang CY, 2006, IEEE T RELIAB, V55, P436, DOI 10.1109/TR.2006.879607
   Ito P.K., 1980, Handbook of statistics 1. Analysis of variance, P199, DOI 10.1016/S0169-7161(80)01009-7
   Jensen C., 2004, "International Workshop on Mining Software Repositories (MSR 2004)" W17S Workshop - 26th International Conference on Software Engineering, P96, DOI 10.1049/ic:20040484
   Jones C, 1996, COMPUTER, V29, P94, DOI 10.1109/2.488361
   Kemerer CF, 1997, J SOFTW MAINT-RES PR, V9, P235, DOI 10.1002/(SICI)1096-908X(199707/08)9:4<235::AID-SMR153>3.0.CO;2-3
   Kemerer CF, 1999, IEEE T SOFTWARE ENG, V25, P493, DOI 10.1109/32.799945
   Kerlinger Fred., 1999, FDN BEHAV RES, V4th
   Ko Y., 2000, P 18 C COMPUTATIONAL, V1, P453, DOI DOI 10.3115/990820.990886
   Lehman M, 2002, FEAST FEEDBACK EVOLU, P1996
   LEVENDEL Y, 1990, IEEE T SOFTWARE ENG, V16, P141, DOI 10.1109/32.44378
   Lewis D.D., 1994, Third Annual Symposium on Document Analysis and Information Retrieval, P81
   Lin CT, 2006, 2006 IEEE INTERNATIONAL CONFERENCE ON MANAGEMENT OF INNOVATION AND TECHNOLOGY, VOLS 1 AND 2, PROCEEDINGS, P658
   Matter D, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P131, DOI 10.1109/MSR.2009.5069491
   McCallum A, 2000, KDD 00, P169
   Melouk SH, 2010, INF RESOUR MANAG J, V23, P53, DOI 10.4018/irmj.2010040104
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Mockus A, 2000, PROC IEEE INT CONF S, P120, DOI 10.1109/ICSM.2000.883028
   Mockus A., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P263, DOI 10.1109/ICSE.2000.870417
   MUSA JD, 1989, IEEE SOFTWARE, V6, P19, DOI 10.1109/52.28120
   Neter J, 2004, APPL LINEAR REGRESSI, V4
   Newman M, 2002, 200210 NIST
   OHTERA H, 1990, IEEE T RELIAB, V39, P596, DOI 10.1109/24.61317
   PORTER MF, 1980, PROGRAM-AUTOM LIBR, V14, P130, DOI 10.1108/eb046814
   Poulsen Kevin., 2004, Software bug contributed to blackout
   Raja U, 2011, J SOFTW MAINT EVOL-R, V23, P69, DOI 10.1002/smr.468
   Raja U, 2009, INFORM TECHNOL MANAG, V10, P235, DOI 10.1007/s10799-009-0062-5
   SCARIANO SM, 1987, AM STAT, V41, P123, DOI 10.2307/2684223
   Wang XY, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P461, DOI 10.1145/1368088.1368151
   Weiss C, 2007, ICSE WORKSH MSR 07 4
   Williams CC, 2005, IEEE T SOFTWARE ENG, V31, P466, DOI 10.1109/TSE.2005.63
   Xie M, 2007, QUAL RELIAB ENG INT, V23, P459, DOI 10.1002/qre.827
   Xie M, 2003, IEEE T SOFTWARE ENG, V29, P471, DOI 10.1109/TSE.2003.1199075
   Ying ATT, 2004, IEEE T SOFTWARE ENG, V30, P574, DOI 10.1109/TSE.2004.52
   Zhang XM, 2003, IEEE T SYST MAN CY A, V33, P114, DOI 10.1109/TSMCA.2003.812597
   Zimmermann T, 2005, IEEE T SOFTWARE ENG, V31, P429, DOI 10.1109/TSE.2005.72
NR 55
TC 9
Z9 11
U1 2
U2 29
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2013
VL 18
IS 1
BP 117
EP 138
DI 10.1007/s10664-012-9197-9
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 064IW
UT WOS:000313069300005
DA 2024-07-18
ER

PT J
AU Ekanayake, J
   Tappolet, J
   Gall, HC
   Bernstein, A
AF Ekanayake, Jayalath
   Tappolet, Jonas
   Gall, Harald C.
   Bernstein, Abraham
TI Time variance and defect prediction in software projects Towards an
   exploitation of periods of stability and change as well as a notion of
   concept drift in software projects
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Time variance; Mining software repository; Defect prediction; Decision
   tree learner; Concept drift
ID FAULTS; CLASSIFICATION
AB It is crucial for a software manager to know whether or not one can rely on a bug prediction model. A wrong prediction of the number or the location of future bugs can lead to problems in the achievement of a project's goals. In this paper we first verify the existence of variability in a bug prediction model's accuracy over time both visually and statistically. Furthermore, we explore the reasons for such a high variability over time, which includes periods of stability and variability of prediction quality, and formulate a decision procedure for evaluating prediction models before applying them. To exemplify our findings we use data from four open source projects and empirically identify various project features that influence the defect prediction quality. Specifically, we observed that a change in the number of authors editing a file and the number of defects fixed by them influence the prediction quality. Finally, we introduce an approach to estimate the accuracy of prediction models that helps a project manager decide when to rely on a prediction model. Our findings suggest that one should be aware of the periods of stability and variability of prediction quality and should use approaches such as ours to assess their models' accuracy in advance.
C1 [Ekanayake, Jayalath; Gall, Harald C.] Univ Zurich, Inst Informat, Software Evolut & Architecture Lab, Zurich, Switzerland.
C3 University of Zurich
RP Ekanayake, J (corresponding author), Univ Zurich, Inst Informat, Software Evolut & Architecture Lab, Zurich, Switzerland.
EM jayalath@ifi.uzh.ch; tappolet@ifi.uzh.ch; gall@ifi.uzh.ch;
   bernstein@ifi.uzh.ch
OI Bernstein, Abraham/0000-0002-0128-4602; Gall, Harald/0000-0002-3874-5628
FU Sabaragamuwa University of Sri Lanka; Swiss National Science Foundation
   [200021-112330]
FX J. Ekanayake was partially supported by funding from the Sabaragamuwa
   University of Sri Lanka while J. Tappolet was partially supported by
   funding from the Swiss National Science Foundation award number
   200021-112330.
CR Ancona D, 1996, RES ORGAN BEHAV, V18, P251
   [Anonymous], 2007, PROMISE 07, DOI DOI 10.1109/PROMISE.2007.10
   Antoniol G, 2008, P 2008 C CTR ADV STU, P304
   Bachmann A, 2009, IFI20090003 U ZUR DE
   Bernstein A., 2007, 9 INT WORKSHOP PRINC, P11
   Bird C, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P121, DOI 10.1145/1595696.1595716
   Brooks Frederick P., 1995, The mythical man-month
   Diehl S, 2009, EMPIR SOFTW ENG, V14, P257, DOI 10.1007/s10664-009-9110-3
   Eaddy M, 2008, IEEE T SOFTWARE ENG, V34, P497, DOI 10.1109/TSE.2008.36
   Ekanayake J, 2011, IFI20110004 U ZUR DE
   Fenton NE, 1999, IEEE T SOFTWARE ENG, V25, P675, DOI 10.1109/32.815326
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Hassan AE, 2005, PROC IEEE INT CONF S, P263
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Kagdi H, 2007, J SOFTW MAINT EVOL-R, V19, P77, DOI 10.1002/smr.344
   Kenmei B, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P73
   Khoshgoftaar TM, 1996, SEVENTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P364, DOI 10.1109/ISSRE.1996.558896
   Kim S, 2007, PROC INT CONF SOFTW, P489
   Knab P., 2006, P 2006 INT WORKSHOP, P119
   Ko AJ, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P1665
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Li PL, 2005, 16TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P193
   Mockus A, 2000, PROC IEEE INT CONF S, P120, DOI 10.1109/ICSM.2000.883028
   Nagappan N, 2005, PROC INT CONF SOFTW, P580, DOI 10.1145/1062455.1062558
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   Provost F, 2001, MACH LEARN, V42, P203, DOI 10.1023/A:1007601015854
   Quinlan J. R., 1993, PROGRAMS MACHINE LEA
   Tsymbal Alexey, 2004, COMPUTER SCI DEP TRI, V106, P58
   Vorburger P, 2006, IEEE DATA MINING, P1113
   Widmer G., 1993, Machine Learning: ECML-93. European Conference on Machine Learning Proceedings, P227
   Witten I. H., 2005, DATA MINING PRACTICA
NR 31
TC 22
Z9 23
U1 0
U2 10
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2012
VL 17
IS 4-5
BP 348
EP 389
DI 10.1007/s10664-011-9180-x
PG 42
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 943WF
UT WOS:000304155700002
DA 2024-07-18
ER

PT J
AU Dybå, T
   Prikladnicki, R
   Rönkkö, K
   Seaman, C
   Sillito, J
AF Dyba, Tore
   Prikladnicki, Rafael
   Ronkko, Kari
   Seaman, Carolyn
   Sillito, Jonathan
TI Qualitative research in software engineering
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
C1 [Seaman, Carolyn] Univ Maryland Baltimore Cty, Baltimore, MD 21228 USA.
   [Dyba, Tore] SINTEF, N-7034 Trondheim, Norway.
   [Prikladnicki, Rafael] Pontificia Univ Catolica Rio Grande do Sul, Porto Alegre, RS, Brazil.
   [Ronkko, Kari] Blekinge Inst Technol, Karlskrona, Sweden.
   [Sillito, Jonathan] Univ Calgary, Dept Comp Sci, Calgary, AB, Canada.
C3 University System of Maryland; University of Maryland Baltimore County;
   SINTEF; Pontificia Universidade Catolica Do Rio Grande Do Sul; Blekinge
   Institute Technology; University of Calgary
RP Seaman, C (corresponding author), Univ Maryland Baltimore Cty, Baltimore, MD 21228 USA.
EM cseaman@umbc.edu
CR Denzin N. K., 2011, Strategies of qualitative inquiry, V4th
   Taylor SJ., 1984, INTRO QUALITATIVE RE
NR 2
TC 26
Z9 34
U1 1
U2 10
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2011
VL 16
IS 4
SI SI
BP 425
EP 429
DI 10.1007/s10664-011-9163-y
PG 5
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 778ZA
UT WOS:000291746700001
OA Bronze
DA 2024-07-18
ER

PT J
AU Juristo, N
   Vegas, S
AF Juristo, Natalia
   Vegas, Sira
TI The role of non-exact replications in software engineering experiments
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Experimentation; Experiment replication; Combination of experiment
   results
AB In no science or engineering discipline does it make sense to speak of isolated experiments. The results of a single experiment cannot be viewed as representative of the underlying reality. Experiment replication is the repetition of an experiment to double-check its results. Multiple replications of an experiment increase the confidence in its results. Software engineering has tried its hand at the identical (exact) replication of experiments in the way of the natural sciences (physics, chemistry, etc.). After numerous attempts over the years, apart from experiments replicated by the same researchers at the same site, no exact replications have yet been achieved. One key reason for this is the complexity of the software development setting, which prevents the many experimental conditions from being identically reproduced. This paper reports research into whether non-exact replications can be of any use. We propose a process aimed at researchers running non-exact replications. Researchers enacting this process will be able to identify new variables that are possibly having an effect on experiment results. The process consists of four phases: replication definition and planning, replication operation and analysis, replication interpretation, and analysis of the replication's contribution. To test the effectiveness of the proposed process, we have conducted a multiple-case study, revealing the variables learned from two different replications of an experiment.
C1 [Juristo, Natalia; Vegas, Sira] Univ Politecn Madrid, Fac Informat, E-28660 Madrid, Spain.
C3 Universidad Politecnica de Madrid
RP Vegas, S (corresponding author), Univ Politecn Madrid, Fac Informat, Campus Montegancedo, E-28660 Madrid, Spain.
EM natalia@fi.upm.es; svegas@fi.upm.es
RI Vegas, Sira/R-6742-2018
FU Spanish Ministry of Science and Innovation [TIN2008-00555]
FX We would like to thank the reviewers of the paper for their thorough and
   insightful comments on this paper. They have all unquestionably helped
   to improve this work. We also would like to thank Oscar Dieste for
   sharing with us his deep knowledge on meta-analysis, and for the
   fruitful conversation on random variations among experiments' results.
   This work was funded by research grant TIN2008-00555 of the Spanish
   Ministry of Science and Innovation.
CR [Anonymous], P INT S EMP SOFTW EN
   [Anonymous], 2002, Meta-Analysis of Controlled Clinical Trials
   Basili V.R., 1985, TR1501 U MAR DEP COM
   BASILI VR, 1987, IEEE T SOFTWARE ENG, V13, P1278, DOI 10.1109/TSE.1987.232881
   CLOSE F, 1991, TOO HOT HANDLE STORY
   CONRADI R, 2001, CSTR4235 U MAR
   GOMEZ OS, 2010, INT S EMP SOFT UNPUB
   Hedges LV., 2014, STAT METHODS META AN
   Juristo N, 2004, EMPIR SOFTW ENG, V9, P7, DOI 10.1023/B:EMSE.0000013513.48963.1b
   Juristo N., 2003, EMPIRICAL METHODS ST, V2785, P235
   KAMSTIES E, 1995, P 5 EUR SOFTW ENG C
   KAMSTIES S, 1995, 9502 ISERN U KAIS DE
   LAITENBERGER O, 2003, LECT NOTES EMPIRICAL
   LINDSAY RM, 1993, AM STAT, V47, P217, DOI 10.2307/2684982
   LUNG J, 2008, P 30 INT C SOFTW ENG
   Mendongal MG, 2008, IEEE INT C ENG COMP, P203, DOI 10.1109/ICECCS.2008.38
   Miller J, 2000, J SYST SOFTWARE, V54, P29, DOI 10.1016/S0164-1212(00)00024-8
   Popper K., 2005, The logic of scientific discovery
   Porter AA, 1997, IEEE T SOFTWARE ENG, V23, P129, DOI 10.1109/32.585501
   Roper M, 1997, INFORM SOFTWARE TECH, V39, P763, DOI 10.1016/S0950-5849(97)00028-1
   Runeson P, 2006, IEEE SOFTWARE, V23, P82, DOI 10.1109/MS.2006.89
   SHULL F, 2003, LECT NOTES EMPIRICAL, P39
   Shull F. J., 1998, Tese de doutorado.
   Shull FJ, 2008, EMPIR SOFTW ENG, V13, P211, DOI 10.1007/s10664-008-9060-1
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Thompson SG, 1999, STAT MED, V18, P2693, DOI 10.1002/(SICI)1097-0258(19991030)18:20<2693::AID-SIM235>3.0.CO;2-V
   Wood M., 1997, P 6 EUR SOFTW ENG C
   Yin R.K., 2008, Applied Social Research Methods Series, V5
NR 28
TC 30
Z9 33
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2011
VL 16
IS 3
BP 295
EP 324
DI 10.1007/s10664-010-9141-9
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 746NS
UT WOS:000289254600001
DA 2024-07-18
ER

PT J
AU Benestad, HC
   Anda, B
   Arisholm, E
AF Benestad, Hans Christian
   Anda, Bente
   Arisholm, Erik
TI Understanding cost drivers of software evolution: a quantitative and
   qualitative investigation of change effort in two evolving software
   systems
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Change effort; Software evolution cost; Quantitative and qualitative
   methods
ID MAINTENANCE; IMPACT; MAINTAINABILITY; DOCUMENTATION; COMPLEXITY;
   METRICS; DESIGN; MODEL; RISK
AB Making changes to software systems can prove costly and it remains a challenge to understand the factors that affect the costs of software evolution. This study sought to identify such factors by investigating the effort expended by developers to perform 336 change tasks in two different software organizations. We quantitatively analyzed data from version control systems and change trackers to identify factors that correlated with change effort. In-depth interviews with the developers about a subset of the change tasks further refined the analysis. Two central quantitative results found that dispersion of changed code and volatility of the requirements for the change task correlated with change effort. The analysis of the qualitative interviews pointed to two important, underlying cost drivers: Difficulties in comprehending dispersed code and difficulties in anticipating side effects of changes. This study demonstrates a novel method for combining qualitative and quantitative analysis to assess cost drivers of software evolution. Given our findings, we propose improvements to practices and development tools to manage and reduce the costs.
C1 [Benestad, Hans Christian; Arisholm, Erik] Simula Res Lab, N-1325 Lysaker, Norway.
   [Benestad, Hans Christian; Arisholm, Erik] Univ Oslo, N-1325 Lysaker, Norway.
   [Anda, Bente] Univ Oslo, N-0316 Oslo, Norway.
C3 University of Oslo; University of Oslo
RP Benestad, HC (corresponding author), Simula Res Lab, N-1325 Lysaker, Norway.
EM benestad@simula.no
FU Simula School of Research and Innovation
FX We are indebted to the managers and developers at Esito and Know IT who
   provided us with high quality empirical data. The research was funded by
   the Simula School of Research and Innovation.
CR [Anonymous], 1986, Software Engineering Metrics and Models
   [Anonymous], 2002, Software Design-Cognitive Aspects
   Arisholm E, 2004, IEEE T SOFTWARE ENG, V30, P521, DOI 10.1109/TSE.2004.43
   Arisholm E, 2004, IEEE T SOFTWARE ENG, V30, P491, DOI 10.1109/TSE.2004.41
   Arisholm E, 2006, INFORM SOFTWARE TECH, V48, P1046, DOI 10.1016/j.infsof.2006.01.002
   Atkins DL, 2002, IEEE T SOFTWARE ENG, V28, P625, DOI 10.1109/TSE.2002.1019478
   *ATL, JIR BUG ISS TRACK
   BANKER RD, 1993, COMMUN ACM, V36, P81, DOI 10.1145/163359.163375
   Beck K, 1999, COMPUTER, V32, P70, DOI 10.1109/2.796139
   BELADY LA, 1976, IBM SYST J, V15, P225, DOI 10.1147/sj.153.0225
   Benestad Hans Christian, 2005, How to Recruit Professionals As Subjects in Software Engineering Experiments
   BENESTAD HC, 2008, 102008 SIM RES LAB
   BENESTAD HC, 2008, 122008 SIM RES LAB
   BENESTAD HC, 2009, 022009 SIM RES LAB
   Bhatt P, 2006, J SOFTW MAINT EVOL-R, V18, P385, DOI 10.1002/smr.339
   Birk A, 2002, IEEE SOFTWARE, V19, P43, DOI 10.1109/MS.2002.1003452
   Briand L., 1992, PROCEEDING C SOFTWAR, P328
   Briand LC, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P57, DOI 10.1109/WCRE.2003.1287237
   Briand LC, 2002, ADV COMPUT, V56, P97, DOI 10.1016/S0065-2458(02)80005-5
   Briand LC, 2001, J SYST SOFTWARE, V59, P3, DOI 10.1016/S0164-1212(01)00045-0
   Briand LC, 2001, IEEE T SOFTWARE ENG, V27, P963, DOI 10.1109/32.965338
   Burton Swanson E., 1976, Proceedings of International Conference on Software Engineering (ICSE), P492
   CHILLAREGE R, 1992, IEEE T SOFTWARE ENG, V18, P943, DOI 10.1109/32.177364
   CHRISTENSEN R, 1996, ANAL VARIANCE DESIGN, P446
   Cohn Mike, 2006, AGILE ESTIMATING PLA
   CURTIS B, 1989, J SYST SOFTWARE, V9, P167, DOI 10.1016/0164-1212(89)90019-8
   DeMarco T., 1985, Proceedings of the 8th International Conference on Software Engineering (Cat. No.85CH2139-4), P268
   Derby Esther., 2006, AGILE RETROSPECTIVES
   DETIENNE F, 2002, SOFTWARE DESIGN COGN, P105
   Dzidek WJ, 2008, IEEE T SOFTWARE ENG, V34, P407, DOI 10.1109/TSE.2008.15
   Eick SG, 2001, IEEE T SOFTWARE ENG, V27, P1, DOI 10.1109/32.895984
   Etzkorn L, 1999, J OBJECT-ORIENT PROG, V12, P35
   Evanco W. M., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P179, DOI 10.1109/METRIC.1999.809739
   Evanco WM, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P114, DOI 10.1109/CSMR.2001.914975
   FENTON N, 1994, IEEE T SOFTWARE ENG, V20, P199, DOI 10.1109/32.268921
   Fluri B, 2006, INT C PROGRAM COMPRE, P35, DOI 10.1109/ICPC.2006.16
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   GEPPERT B, 2005, P 11 INT S SOFTW MET
   *GNU, CONC VERS SYST
   Graves TL, 1998, FIFTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 1998, PROCEEDINGS, P267, DOI 10.1109/METRIC.1998.731253
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Hayes JH, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P254, DOI 10.1109/CSMR.2004.1281427
   Hunt J. W., 1975, 41 BELL LAB
   *IBM, RAT CLEARCASE LT
   Jolliffe I. T., 2002, PRINCIPAL COMPONENT
   JORGENSEN M, 1995, IEEE T SOFTWARE ENG, V21, P674, DOI 10.1109/32.403791
   JORGENSEN M, 1995, J SOFTW MAINT-RES PR, V7, P27, DOI 10.1002/smr.4360070104
   Kemerer C. F., 1995, Annals of Software Engineering, V1, P1, DOI 10.1007/BF02249043
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   KITCHENHAM BA, 2002, IEEE T SOFTWARE ENG, V12, P1106
   KOENEMANN J, 1991, P C HUM FACT COMP SY, P125
   Krishnan MS, 2000, MANAGE SCI, V46, P745, DOI 10.1287/mnsc.46.6.745.11941
   LIENTZ BP, 1983, COMPUT SURV, V15, P271, DOI 10.1145/356914.356919
   MILLER A, 2002, SUBSET SELECTION REG, P48
   Mockus A, 2000, BELL LABS TECH J, V5, P169, DOI 10.1002/bltj.2229
   MOCKUS A, 2000, GUIDE ADV EMPIRICAL, P185
   MOLOKKENOSTVOLD K, 2008, J SYSTEMS S IN PRESS
   Munson JC, 1998, PROC IEEE INT CONF S, P24, DOI 10.1109/ICSM.1998.738486
   MYERS RH, 2001, GEN LINEAR MODELS AP, P4
   Niessink F, 1998, PROC IEEE INT CONF S, P76, DOI 10.1109/ICSM.1998.738495
   Niessink F, 1997, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P32, DOI 10.1109/ICSM.1997.624228
   *NSB, NORW STAT RAILW
   OTT RL, 2001, STAT METHODS DATA AN, P646
   Perry DE., 2000, P C FUT SOFTW ENG, P345, DOI DOI 10.1145/336512.336586
   PINCHES GE, 1973, J FINANC, V28, P1, DOI 10.2307/2978164
   Polo M, 2001, PROC IEEE INT CONF S, P202, DOI 10.1109/ICSM.2001.972733
   Purushothaman R, 2005, IEEE T SOFTWARE ENG, V31, P511, DOI 10.1109/TSE.2005.74
   Rajaraman C., 1992, Proceedings. Third International Symposium on Software Reliability Engineering (Cat. No.92TH0486-1), P303, DOI 10.1109/ISSRE.1992.285898
   *RCN, MY RCN WEB
   Reformat M, 2003, PROC INT C TOOLS ART, P53, DOI 10.1109/TAI.2003.1250170
   SACKMAN H, 1968, COMMUN ACM, V11, P3, DOI 10.1145/362851.362858
   Schneidewind NF, 2001, PROC IEEE INT CONF S, P127, DOI 10.1109/ICSM.2001.972723
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Shin M, 2000, IEEE T SOFTWARE ENG, V26, P567, DOI 10.1109/32.852743
   SOLOWAY E, 1988, COMMUN ACM, V31, P1259, DOI 10.1145/50087.50088
   STONE M, 1974, J R STAT SOC B, V36, P111, DOI 10.1111/j.2517-6161.1974.tb00994.x
   *TPTP, ECL TEST PERF TOOLS
   VONMAYRHAUSER A, 1995, COMPUTER, V28, P44, DOI 10.1109/2.402076
   WOODS D, TRANSANA QUALITATIVE
   XU B, 2005, P 18 CAN C EL COMP E, P1320
   Yin RobertK., 2003, Case Study Research, V3rd, P19
NR 81
TC 7
Z9 7
U1 1
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2010
VL 15
IS 2
BP 166
EP 203
DI 10.1007/s10664-009-9118-8
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 570VH
UT WOS:000275705900003
DA 2024-07-18
ER

PT J
AU Azzeh, M
   Neagu, D
   Cowling, PI
AF Azzeh, Mohammad
   Neagu, Daniel
   Cowling, Peter I.
TI Fuzzy grey relational analysis for software effort estimation
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software effort estimation by analogy; Similarity measurement; Feature
   selection; Grey relational analysis; Fuzzy set theory
ID ANALOGY; REGRESSION; PREDICTION
AB Accurate and credible software effort estimation is a challenge for academic research and software industry. From many software effort estimation models in existence, Estimation by Analogy (EA) is still one of the preferred techniques by software engineering practitioners because it mimics the human problem solving approach. Accuracy of such a model depends on the characteristics of the dataset, which is subject to considerable uncertainty. The inherent uncertainty in software attribute measurement has significant impact on estimation accuracy because these attributes are measured based on human judgment and are often vague and imprecise. To overcome this challenge we propose a new formal EA model based on the integration of Fuzzy set theory with Grey Relational Analysis (GRA). Fuzzy set theory is employed to reduce uncertainty in distance measure between two tuples at the k(th) continuous feature (vertical bar(x(o)(k) - x(i)(k)vertical bar).GRA is a problem solving method that is used to assess the similarity between two tuples with M features. Since some of these features are not necessary to be continuous and may have nominal and ordinal scale type, aggregating different forms of similarity measures will increase uncertainty in the similarity degree. Thus the GRA is mainly used to reduce uncertainty in the distance measure between two software projects for both continuous and categorical features. Both techniques are suitable when relationship between effort and other effort drivers is complex. Experimental results showed that using integration of GRA with FL produced credible estimates when compared with the results obtained using Case-Based Reasoning, Multiple Linear Regression and Artificial Neural Networks methods.
C1 [Azzeh, Mohammad; Neagu, Daniel; Cowling, Peter I.] Univ Bradford, Dept Comp, AI Res Ctr, Bradford BD7 1DP, W Yorkshire, England.
C3 University of Bradford
RP Azzeh, M (corresponding author), Univ Bradford, Dept Comp, AI Res Ctr, Bradford BD7 1DP, W Yorkshire, England.
EM M.Y.A.Azzeh@bradford.ac.uk; D.Neagu@bradford.ac.uk;
   P.I.Cowling@bradford.ac.uk
RI Neagu, Daniel/AAJ-9766-2021; Azzeh, Mohammad/G-5472-2017; Cowling,
   Peter/L-4732-2017
OI Neagu, Daniel/0000-0002-7038-106X; Azzeh, Mohammad/0000-0002-0323-6452;
   Cowling, Peter/0000-0003-1310-6683
CR ALBRECHT AJ, 1983, IEEE T SOFTWARE ENG, V9, P639, DOI 10.1109/TSE.1983.235271
   [Anonymous], 2007, The promise repository of empirical software engineering data
   AUER S, 2004, P INT S EMP SOFTW EN, P147
   Azzeb M, 2008, LECT NOTES COMPUT SC, V5007, P123, DOI 10.1007/978-3-540-79588-9_12
   AZZEH M, 2008, INT WORKSH SOFTW PRE, P71
   BRIAND L, 2000, 22 IEEE INT C SOFTW
   Chen HH, 2005, WIREL COMMUN MOB COM, V5, P1, DOI 10.1002/wcm.287
   Chiu NH, 2007, J SYST SOFTWARE, V80, P628, DOI 10.1016/j.jss.2006.06.006
   Deng Julong, 1989, Journal of Grey Systems, V1, P1
   Dolado JJ, 2001, INFORM SOFTWARE TECH, V43, P61, DOI 10.1016/S0950-5849(00)00137-3
   Haykin S., 1999, NEURAL NETWORKS COMP, DOI [10.1017/S0269888998214044, DOI 10.1017/S0269888998214044]
   Hsu CJ, 2007, 14TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P534, DOI 10.1109/ASPEC.2007.62
   Huang SJ, 2008, EUR J OPER RES, V188, P898, DOI 10.1016/j.ejor.2007.07.002
   Huang SJ, 2006, INFORM SOFTWARE TECH, V48, P1034, DOI 10.1016/j.infsof.2005.12.020
   IDRI A, 2001, 11 INT WORKSH SOFTW, P93
   *ISBSG, 2007, DAT REP REL 10
   Jorgensen M, 2003, J SYST SOFTWARE, V68, P253, DOI 10.1016/S0164-1212(03)00066-9
   KEMERER CF, 1987, COMMUN ACM, V30, P416, DOI 10.1145/22899.22906
   Keung J, 2008, ASWEC 2008: 19TH AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P229
   KIRSOPP C, 2002, P 22 INT C KNOWL BAS
   Kirsopp Colin., 2002, GECCO 02, P1367
   LI J, 2008, INT WORKSH SOFTW PRE, P55
   Li JZ, 2008, EMPIR SOFTW ENG, V13, P63, DOI 10.1007/s10664-007-9054-4
   Liebchen G. A., 2008, P 4 INT WORKSH PRED, P39, DOI [10.1145/1370788.1370799, DOI 10.1145/1370788.1370799]
   Mair C, 2000, J SYST SOFTWARE, V53, P23, DOI 10.1016/S0164-1212(00)00005-4
   Martín CL, 2005, SIXTH MEXICAN INTERNATIONAL CONFERENCE ON COMPUTER SCIENCE, PROCEEDINGS, P113, DOI 10.1109/ENC.2005.47
   Mendes E, 2003, EMPIR SOFTW ENG, V8, P163, DOI 10.1023/A:1023062629183
   Mendes E, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P100, DOI 10.1109/ISESE.2003.1237969
   MITTAS N, 2007, J INFORM SOFTWARE TE
   Myrtveit I, 1999, IEEE T SOFTWARE ENG, V25, P510, DOI 10.1109/32.799947
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   Song Q., 2005, METRICS'05: Proceedings of the 11th IEEE International Software Metrics Symposium, P35
   Tadayon N, 2005, ITCC 2005: INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: CODING AND COMPUTING, VOL 2, P815, DOI 10.1109/ITCC.2005.210
   XIE XLL, 1991, IEEE T PATTERN ANAL, V13, P841, DOI 10.1109/34.85677
   Xu ZW, 2004, FUZZY SET SYST, V145, P141, DOI 10.1016/j.fss.2003.10.008
   Zadeh LA, 1997, FUZZY SET SYST, V90, P111, DOI 10.1016/S0165-0114(97)00077-8
NR 36
TC 67
Z9 75
U1 3
U2 24
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2010
VL 15
IS 1
BP 60
EP 90
DI 10.1007/s10664-009-9113-0
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 549GU
UT WOS:000274036300003
DA 2024-07-18
ER

PT J
AU Tairas, R
   Gray, J
AF Tairas, Robert
   Gray, Jeff
TI An information retrieval process to aid in the analysis of code clones
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Information retrieval; Program comprehension; Latent semantic indexing;
   Code clone analysis
ID CCFINDER
AB The advent of new static analysis tools has automated the searching for code clones, which are duplicated or similar code fragments in a program. However, clone detection tools can report many clones if the source code that is being searched is large. Programmers may have difficulty comprehending the extensive results from the detection tool, which may inhibit the ability to maintain the identified clones. Latent Semantic Indexing (LSI) is an information retrieval technique that attempts to find relationships in a corpus based on the analysis of the documents in the corpus and the terms in the documents. In this paper, LSI is used to cluster clone classes that have been identified initially by a clone detection tool. The goal of this paper is to detect trends and associations among the clustered clone classes and determine if they provide further comprehension to assist in the maintenance of clones. Experimental evaluation of the approach is reported from a sequence of tools that are chained together to perform an analysis of clones detected in the Microsoft Windows NT kernel source code.
C1 [Tairas, Robert; Gray, Jeff] Univ Alabama Birmingham, Dept Comp & Informat Sci, Birmingham, AL 35294 USA.
C3 University of Alabama System; University of Alabama Birmingham
RP Tairas, R (corresponding author), Univ Alabama Birmingham, Dept Comp & Informat Sci, 1300 Univ Blvd, Birmingham, AL 35294 USA.
EM tairasr@cis.uab.edu; gray@cis.uab.edu
OI Gray, Jeff/0000-0003-0082-6753
FU National Science Foundation [CPA-0702764]
FX This project is supported by National Science Foundation grant
   CPA-0702764.
CR [Anonymous], 2004, PROC SET
   Antoniol G, 2002, INFORM SOFTWARE TECH, V44, P755, DOI 10.1016/S0950-5849(02)00123-4
   Balazinska M., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P292, DOI 10.1109/METRIC.1999.809750
   Baxter ID, 1998, PROC IEEE INT CONF S, P368, DOI 10.1109/ICSM.1998.738528
   Bellon S, 2007, IEEE T SOFTWARE ENG, V33, P577, DOI 10.1109/TSE.2007.70725
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   Han J., 2006, DATA MINING CONCEPTS, DOI 10.1016/C2009-0-61819-5
   Jiang LX, 2007, PROC INT CONF SOFTW, P96
   Jiang ZM, 2007, SEVENTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P203, DOI 10.1109/SCAM.2007.19
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kapser C, 2004, 7TH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, P85, DOI 10.1109/IWPSE.2004.1334772
   KONINSAPU G, 2001, THESIS U BERN BERN
   Kuhn A, 2007, INFORM SOFTWARE TECH, V49, P230, DOI 10.1016/j.infsof.2006.10.017
   Li ZM, 2006, IEEE T SOFTWARE ENG, V32, P176, DOI 10.1109/TSE.2006.28
   LIVIERI S, 2007, P INT WORKSH MIN SOF
   Livieri S, 2007, PROC INT CONF SOFTW, P106
   Marcus A, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P107, DOI 10.1109/ASE.2001.989796
   Rieger M, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P100, DOI 10.1109/WCRE.2004.25
   Rieger M, 1998, LECT NOTES COMPUT SC, V1543, P75
   Russinovich M.E., 2005, MICROSOFT WINDOWS IN, V4th
   Tairas R., 2006, P 2006 OOPSLA WORKSH, P50
   Zhao Y, 2005, SIAM PROC S, P358
NR 22
TC 27
Z9 38
U1 0
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2009
VL 14
IS 1
BP 33
EP 56
DI 10.1007/s10664-008-9089-1
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 414UU
UT WOS:000263891500003
DA 2024-07-18
ER

PT J
AU Anda, B
   Hansen, K
   Gullesen, I
   Thorsen, HK
AF Anda, Bente
   Hansen, Kai
   Gullesen, Ingolf
   Thorsen, Hanne Kristin
TI Experiences from introducing UML-based development in a large
   safety-critical project
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE UML; model-driven development; embedded software; safety-critical
   software; case study
AB UML and UML-based development methods have become de facto standards in industry, and there are many claims for the positive effects of modelling object-oriented systems using methods based on UML. However, there is no reported empirical evaluation of UML-based development in large, industrial projects. This paper reports a case study in ABB, a global company with 120,000 employees, conducted to identify immediate benefits as well as difficulties and their causes when introducing UML-based development in large projects. ABB decided to use UML-based development in the company's system development projects as part of an effort to enable certification according to the IEC 61508 safety standard. A UML-based development method was first applied in a large, international project with 230 system developers, testers and managers. The goal of the project was to build a new version of a safety-critical process control system. Most of the software was embedded. The project members were mostly newcomers to the use of UML. Interviews with 16 system developers and project managers at their sites in Sweden and Norway were conducted to identify the extent to which the introduction of UML-based development had improved their development process. The interviewees had experienced improvements with traceability from requirements to code, design of the code, and development of test cases as well as in communication and documentation. These results thus support claims in the literature regarding improvements that may be obtained through the use of UML. However, the results also show that the positive effects of UML-based development were reduced due to (1) legacy code that it was not feasible to reverse engineer into UML, (2) the distribution of requirements to development teams based on physical units and not on functionality, (3) training that was not particularly adapted to this project and considered too expensive to give to project members not directly involved in development with UML, and (4) a choice of modelling tools with functionality that was not in accordance with the needs of the project. The results from this study should be useful in enabling other UML adopters to have more realistic expectations and a better basis for making project management decisions.
C1 Simula Res Lab, NO-1325 Lysaker, Norway.
   ABB Corp Res Ctr, NO-1361 Billingstad, Norway.
   Univ Oslo, Dept Informat, NO-0316 Oslo, Norway.
C3 ABB; University of Oslo
RP Anda, B (corresponding author), Simula Res Lab, POB 134, NO-1325 Lysaker, Norway.
EM bentea@simula.no; kai.hansen@no.abb.com; ingolf.gullesen@no.abb.com;
   hannekt@ifi.uio.no
RI Fritola, Renato/AAU-4721-2021
CR *ABB, 2001, 9AAD102113 ABBGPPMI
   *ABB, 2001, SOFTW HARDW DEV
   *ABB, 2003, GUID US SEM METH SOF
   Agarwal R, 2003, COMMUN ACM, V46, P248, DOI 10.1145/903893.903944
   ARMOUR F, 2000, ADV USE CASE MODELLI
   BOOCH G, 1998, UNIFIED MODELING LAN
   Cockburn A, 2001, Writing effective use cases, the crystal collection for software professionals
   Cox K., 2000, Empirical Software Engineering, V5, P245, DOI 10.1023/A:1026542700033
   Douglass BrucePowell., 2004, REAL TIME UML ADV UM
   EISENHARDT KM, 1989, ACAD MANAGE REV, V14, P532, DOI 10.2307/258557
   Fitzgerald B, 1997, INFORM SYST J, V7, P201, DOI 10.1046/j.1365-2575.1997.d01-18.x
   Fowler M., 2015, UML Distilled: A Brief Guide to the Standard Object Modeling Language
   HANSEN KT, 2002, UML 02 SAT WORKSH P
   HOVE SE, 2005, IN PRESS METRICS
   Huberman M., 2002, QUALITATIVE RES COMP, DOI DOI 10.4135/9781412986274
   *IEC, 1998, 61508 IEC
   Kulak D., 2000, USE CASES REQUIREMEN, V1st
   MALAN R, 1995, P OOPSLA 95 AUST TX, P33
   MAXWELL JA, 1992, HARVARD EDUC REV, V62, P279, DOI 10.17763/haer.62.3.8323320856251826
   Otero M. C., 2002, Empirical Software Engineering, V7, P27, DOI 10.1023/A:1014819010099
   Peleg M, 2000, IEEE T SOFTWARE ENG, V26, P742, DOI 10.1109/32.879812
   Pettit RG, 2004, SECOND IEEE WORKSHOP ON SOFTWARE TECHNOLOGIES FOR FUTURE EMBEDDED AND UBIQUITOUS SYSTEMS, PROCEEDINGS, P75, DOI 10.1109/WSTFES.2004.1300418
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Selic B, 2003, IEEE SOFTWARE, V20, P19, DOI 10.1109/MS.2003.1231146
   SJOBERG DIK, 2005, IN PRESS IEEE T SOFT
   Strauss E, 1998, CLIN ORTHOP RELAT R, P2
   Yin R.K., 2003, CASE STUDY RES DESIG
   Zendler A, 2001, J SYST SOFTWARE, V57, P21, DOI 10.1016/S0164-1212(00)00114-X
NR 28
TC 49
Z9 56
U1 0
U2 7
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2006
VL 11
IS 4
BP 555
EP 581
DI 10.1007/s10664-006-9020-6
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 116LS
UT WOS:000242805000004
DA 2024-07-18
ER

PT J
AU Mäntylä, MV
   Lassenius, C
AF Mantyla, Mika V.
   Lassenius, Casper
TI Subjective evaluation of software evolvability using code smells:: An
   empirical study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 20th IEEE International Conference on Software Maintenance (ICSM 2004)
CY SEP 11-14, 2004
CL Chicago, IL
SP IEEE Comp Soc
DE code smells; subjective evaluation; perceived evaluation;
   maintainability; evolvability; code metrics; software metrics; human
   factors
ID OBJECT-ORIENTED DESIGN; METRICS SUITE; COMPLEXITY METRICS;
   MAINTAINABILITY; QUALITY; MAINTENANCE; CHIDAMBER; TAXONOMY; SYSTEMS;
   MODEL
AB This paper presents the results of an empirical study on the subjective evaluation of code smells that identify poorly evolvable structures in software. We propose use of the term software evolvability to describe the ease of further developing a piece of software and outline the research area based on four different viewpoints. Furthermore, we describe the differences between human evaluations and automatic program analysis based on software evolvability metrics. The empirical component is based on a case study in a Finnish software product company, in which we studied two topics. First, we looked at the effect of the evaluator when subjectively evaluating the existence of smells in code modules. We found that the use of smells for code evaluation purposes can be difficult due to conflicting perceptions of different evaluators. However, the demographics of the evaluators partly explain the variation. Second, we applied selected source code metrics for identifying four smells and compared these results to the subjective evaluations. The metrics based on automatic program analysis and the human-based smell evaluations did not fully correlate. Based upon our results, we suggest that organizations should make decisions regarding software evolvability improvement based on a combination of subjective evaluations and code metrics. Due to the limitations of the study we also recognize the need for conducting more refined studies and experiments in the area of software evolvability.
C1 Aalto Univ, Helsinki, Finland.
C3 Aalto University
RP Mäntylä, MV (corresponding author), Aalto Univ, Helsinki, Finland.
EM mika.mantyla@tkk.fi; casper.lassenius@tkk.fi
RI Mäntylä, Mika V/E-7644-2012; Lassenius, Casper C/A-4339-2013
OI Mantyla, Mika/0000-0002-2841-5879
CR *AFOTEC, 1996, SOFTW MAINT EV GUID
   [Anonymous], 1994, Object-oriented software metrics: a practical guide
   [Anonymous], 2002, ACM SIGSOFT SOFTW EN, DOI DOI 10.1145/571681.571686
   [Anonymous], 1980, Winthrop computer systems series
   ARNOLD RS, 1989, P IEEE, V77, P607, DOI 10.1109/5.24146
   Balazinska M, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P98, DOI 10.1109/WCRE.2000.891457
   Bandi RK, 2003, IEEE T SOFTWARE ENG, V29, P77, DOI 10.1109/TSE.2003.1166590
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   Beck K., 2011, MANIFESTO AGILE SOFT
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P91, DOI 10.1109/32.748920
   Briand LC, 1997, FOURTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P43, DOI 10.1109/METRIC.1997.637164
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Chidamber SR, 1998, IEEE T SOFTWARE ENG, V24, P629, DOI 10.1109/32.707698
   CHIKOFSKY EJ, 1990, IEEE SOFTWARE, V7, P13, DOI 10.1109/52.43044
   COLEMAN D, 1994, COMPUTER, V27, P44, DOI 10.1109/2.303623
   COLEMAN D, 1995, J SYST SOFTWARE, V29, P3, DOI 10.1016/0164-1212(94)00125-7
   Cusumano M.A., 1995, MICROSOFT SECRETS
   CUSUMANO MA, 1998, COMPETING INTERNET T, P180
   Ducasse S., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P109, DOI 10.1109/ICSM.1999.792593
   Fowler M., 2000, REFACTORING, P75
   Fowler M., 2000, Refactoring: Improving the Design of Existing Code
   GARVIN DA, 1984, SLOAN MANAGE REV, V26, P25
   GRADY RB, 1994, COMPUTER, V27, P18, DOI 10.1109/2.312034
   Halstead M. H., 1977, ELEMENTS SOFTWARE SC
   Harrison R, 1998, IEEE T SOFTWARE ENG, V24, P491, DOI 10.1109/32.689404
   Henderson-Sellers B., 1996, Object-Oriented Metrics, measures of complexity
   Hitz M, 1996, IEEE T SOFTWARE ENG, V22, P267, DOI 10.1109/32.491650
   *IEEE INC, 1998, IEEE STAND SOFTW MAI
   Iio K, 1997, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P242, DOI 10.1109/ICSM.1997.624251
   KAFURA D, 1987, IEEE T SOFTWARE ENG, V13, P335, DOI 10.1109/TSE.1987.233164
   Kataoka Y, 2002, PROC IEEE INT CONF S, P576, DOI 10.1109/ICSM.2002.1167822
   Kataoka Y, 2001, PROC IEEE INT CONF S, P736, DOI 10.1109/ICSM.2001.972794
   KENDALL M, 1948, RANK CORRELATION MET, P117
   Kitchenham B., 2002, Software Engineering Notes, V27, P20, DOI 10.1145/638574.638580
   Kitchenham B, 1996, IEEE SOFTWARE, V13, P12, DOI 10.1109/52.476281
   Kitchenham B.A., 2002, ACM SIGSOFT Software Engineering Notes, V27, P18, DOI [DOI 10.1145/566493.566495, 10.1145/566493.566495]
   Lehman M. M., 1980, Journal of Systems and Software, V1, P213, DOI 10.1016/0164-1212(79)90022-0
   LI W, 1993, J SYST SOFTWARE, V23, P111, DOI 10.1016/0164-1212(93)90077-B
   Mäntylä M, 2003, PROC IEEE INT CONF S, P381, DOI 10.1109/ICSM.2003.1235447
   Marinescu R, 2004, PROC IEEE INT CONF S, P350, DOI 10.1109/ICSM.2004.1357820
   Maruyama K., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P236, DOI 10.1109/ICSE.1999.841013
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   MCCONNELL S, 2004, CODE COMPLETTE, V2, P161
   MCCONNELL S., 1993, CODE COMPLETE
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Muthanna S, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P248, DOI 10.1109/WCRE.2000.891476
   OMAN P, 1994, J SYST SOFTWARE, V24, P251, DOI 10.1016/0164-1212(94)90067-1
   OMAN PW, 1991, DEFINITION TAXONOMY, P91
   Pfleeger Shari Lawrence, 2001, ACM SIGSOFT Software Engineering Notes, V26, P16, DOI DOI 10.1145/505532.505535
   Pigoski TM., 1996, Practical Software Maintenance: Best Practices for Managing Your Software Investment
   Rajlich VT, 2000, COMPUTER, V33, P66, DOI 10.1109/2.869374
   Robillard MP, 2004, IEEE T SOFTWARE ENG, V30, P889, DOI 10.1109/TSE.2004.101
   ROMBACH HD, 1987, IEEE T SOFTWARE ENG, V13, P344, DOI 10.1109/TSE.1987.233165
   SCHWANKE RW, 1994, MACH LEARN, V15, P137, DOI 10.1007/BF00993275
   SHEPPERD MJ, 1990, IEE C SOFTW METR
   Siegel S., 1956, Nonparametric statistics for the behavioral sciences
   Simon F, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P30, DOI 10.1109/CSMR.2001.914965
   Sommerville I, 2001, Software Engineering
   STEVENS WP, 1974, IBM SYST J, V13, P115, DOI 10.1147/sj.132.0115
   Subramanyam R, 2003, IEEE T SOFTWARE ENG, V29, P297, DOI 10.1109/TSE.2003.1191795
   Succi G, 2005, EMPIR SOFTW ENG, V10, P81, DOI 10.1023/B:EMSE.0000048324.12188.a2
   *SUN MICR, 1999, SUN MICR DAT ONL
   SZULEWSKI PA, 1996, CROSSTALK J DEFENCE
   The Institute of Electrical and Electronics Engineers Inc., 1990, IEEE STAND GLOSS SOF
   Tourwé T, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P91, DOI 10.1109/CSMR.2003.1192416
   Wake W.C., 2003, Refactoring Workbook, V1st
   Welker KD, 1997, J SOFTW MAINT-RES PR, V9, P127, DOI 10.1002/(SICI)1096-908X(199705)9:3<127::AID-SMR149>3.0.CO;2-S
   Yu He, 1994, Proceedings The Second International Conference on Expert Systems for Development (Cat. No.94TH0643-7), P192, DOI 10.1109/ICESD.1994.302282
NR 69
TC 101
Z9 114
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2006
VL 11
IS 3
BP 395
EP 431
DI 10.1007/s10664-006-9002-8
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 063MB
UT WOS:000239021200004
DA 2024-07-18
ER

PT J
AU Anda, B
   Sjoberg, DIK
AF Anda, B
   Sjoberg, DIK
TI Investigating the role of use cases in the construction of class
   diagrams
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE UML; use cases; object-oriented design; modelling tool; controlled
   experiment; replicated experiment
AB Several approaches have been proposed for the transition from functional requirements to object-oriented design. In a use case-driven development process, the use cases are important input for the identification of classes and their methods. There is, however, no established, empirically validated technique for the transition from use cases to class diagrams. One recommended technique is to derive classes by analyzing the use cases. It has, nevertheless, been reported that this technique leads to problems, such as the developers missing requirements and mistaking requirements for design. An alternative technique is to identify classes from a textual requirements specification and subsequently apply the use case model to validate the resulting class diagram. This paper describes two controlled experiments conducted to investigate these two approaches to applying use case models in an object-oriented design process. The first experiment was conducted with 53 students as subjects. Half of the subjects used a professional modelling tool; the other half used pen and paper. The second experiment was conducted with 22 professional software developers as subjects, all of whom used one of several modelling tools. The first experiment showed that applying use cases to validate class diagrams constructed from textual requirements led to more complete class diagrams than did the derivation of classes from a use case model. In the second experiment, however, we found no such difference between the two techniques. In both experiments, deriving class diagrams from the use cases led to a better structure of the class diagrams. The results of the experiments therefore show that the technique chosen for the transition from use cases to class diagrams affects the quality of the class diagrams, but also that the effects of the techniques depend on the categories of developer applying it and on the tool with which the technique is applied.
C1 Simula Res Lab, N-1325 Lysaker, Norway.
RP Simula Res Lab, POB 134, N-1325 Lysaker, Norway.
EM bentea@simula.no; dagsj@simula.no
CR ANDA B, 2004, UNPUB EMPIRICAL SOFT
   [Anonymous], 1992, Object Oriented Software Engineering: A Use Case Driven Approach
   [Anonymous], UNIFIED SOFTWARE DEV
   [Anonymous], 2001, APPL USE CASE DRIVEN
   [Anonymous], SAS VERS 8
   [Anonymous], USING UML SOFTWARE E
   Arisholm E., 2002, Nordic Journal of Computing, V9, P231
   Arlow Jim., 2002, UML UNIFIED PROCESS
   Bahrami A, 1999, OBJECT ORIENTED SYST
   BATRA D, 1990, COMMUN ACM, V33, P126, DOI 10.1145/75577.75579
   Bennett S., 1999, OBJECT ORIENTED SYST
   Booch Grady, 1999, UNIFIED MODELING LAN, DOI DOI 10.1007/3-540-40011-7_10
   Briand L. C., 1998, Empirical Software Engineering, V3, P65, DOI 10.1023/A:1009783721306
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P91, DOI 10.1109/32.748920
   Cockburn A, 2001, Writing effective use cases, the crystal collection for software professionals
   Dobing B., 2000, Journal of Database Management, V11, P28, DOI 10.4018/jdm.2000100103
   Freund R J., 1991, SAS System for linear Models
   HARRISON W, 2000, WORKSH 5 JUN 2000 22, P39
   Karahasanovi A, 2005, EMPIR SOFTW ENG, V10, P113, DOI 10.1007/s10664-004-6189-4
   Larman C., 2002, APPL UML PATTERNS, V2nd
   Lethbridge T.C., 2001, Object-oriented Software Engineering: Practical Software Development Using UML and Java
   Liang Y, 2003, INFORM SOFTWARE TECH, V45, P83, DOI 10.1016/S0950-5849(02)00164-7
   LINDSAY RM, 1993, AM STAT, V47, P217, DOI 10.2307/2684982
   Maciaszek L., 2001, REQUIREMENTS DESIGN
   Meyer B., 1999, OBJECT ORIENTED SOFT
   Richter C., 1999, DESIGNING FLEXIBLE O
   Sharble R. C., 1993, SIGSOFT Software Engineering Notes, V18, P60, DOI 10.1145/159420.155839
   Shull F., 1999, CSTR4070 U MAR
   Sjoberg DIK, 2003, LECT NOTES COMPUT SC, V2765, P24
   Sjoberg DIK, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P17, DOI 10.1109/ISESE.2002.1166921
   SYVERSEN E, 2003, HAW INT C SYST SCI
   WIRFSBROCK R, 1990, DEISGNING OBJECT ORI
NR 32
TC 20
Z9 24
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2005
VL 10
IS 3
BP 285
EP 309
DI 10.1007/s10664-005-1289-3
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 936ZU
UT WOS:000229895100002
DA 2024-07-18
ER

PT J
AU Antoniol, G
   Fiutem, R
   Lokan, C
AF Antoniol, G
   Fiutem, R
   Lokan, C
TI Object-oriented function points: An empirical validation
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE size prediction; OO size estimation; software metrics
ID SOFTWARE
AB We present an empirical validation of object-oriented size estimation models. In previous work we proposed object oriented function points (OOFP), an adaptation of the function points approach to object-oriented systems. In a small pilot study, we used the OOFP method to estimate lines of code (LOC). In this paper we extend the empirical validation of OOFP substantially, using a larger data set and comparing OOFP with alternative predictors of LOC. The aim of the paper is to gain an understanding of which factors contribute to accurate size prediction for OO software, and to position OOFP within that knowledge.
   A cross validation approach was adopted to build and evaluate linear models where the independent variable was either a traditional OO entity (classes, methods, association, inheritance, or a combination of them) or an OOFP-related measure.
   Using the full OOFP process, the best size predictor achieved a normalized mean squared error of 38%. By removing function point weighting tables from the OOFP process, and carefully analyzing collected data points and developer practices, we identified several factors that influence size estimation. Our empirical evidence demonstrates that by controlling these factors size estimates could be substantially improved, decreasing the normalized mean squared error to 15%-in relative terms, a 56% reduction.
C1 Univ Sannio, RCOST, Dept Engn, I-82100 Benevento, Italy.
   Sodalia SpA, Res & Technol Dept, I-38100 Trento, Italy.
   Univ New S Wales, Australian Def Force Acad, Sch Comp Sci, Canberra, ACT 2600, Australia.
C3 University of Sannio; University of New South Wales Sydney; Australian
   Defense Force Academy
RP Univ Sannio, RCOST, Dept Engn, Palazzo Ex Poste,Via Traiano, I-82100 Benevento, Italy.
EM antoniol@ieee.org; fiutem@sodalia.it; cjl@cs.adfa.edu.au
CR ABRAN A, 1993, P IEEE INT C SOFTW M, P134
   Albrecht A.J., 1979, Em Proceedings of the Joint SHARE, GUIDE, and IBM Application Development Symposium, P83
   [Anonymous], 1986, Software Engineering Metrics and Models
   [Anonymous], 1993, MONOGR STAT APPL PRO
   [Anonymous], SOFTWARE ENG PRODUCT
   Antoniol G., 1999, Empirical Software Engineering, V4, P263, DOI 10.1023/A:1009834811663
   Antoniol G, 2000, ANN SOFTW ENG, V9, P35, DOI 10.1023/A:1018916522804
   Boehm BW., 1981, Software Engineering Economics
   Caldiera G, 1998, FIFTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 1998, PROCEEDINGS, P167, DOI 10.1109/METRIC.1998.731242
   CALDIERA G, P 4 AUSTR C SOFTW ME
   CARD DN, 2001, MEASUREMENT OBJECT O
   Conte SD, 1989, SERCTR33P PURD U
   DEMARCO T, 1982, CONTROLLING SOFTWARE
   Fetcke T., 1997, P IFPUG 1997 SPRING, P134
   Fiutem R, 1998, PROC IEEE INT CONF S, P94, DOI 10.1109/ICSM.1998.738497
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Graham I., 1996, Object Magazine, V6, P68
   HASTINGS T, 1995, P 2 AUSTR C SOFTW ME
   *IFPUG, 1994, FUNCT POINT COUNT PR
   Jacobsen I., 1992, OBJECT ORIENTED SOFT
   JEFFERY DR, 1996, EMPIR SOFTW ENG, V1, P11
   Khoshgoftaar T. M., 1996, Empirical Software Engineering, V1, P31, DOI 10.1007/BF00125810
   KITCHENHAM B, 1993, PROC INT CONF SOFTW, P477, DOI 10.1109/ICSE.1993.346018
   KITCHENHAM B, 1995, IEEE T SOFTWARE ENG, V21, P929, DOI 10.1109/32.489070
   Mehler H., 1997, P ASM 97 APPL SOFTW
   MINKIEWICZ A, 1997, P 8 EUR SOFTW CONTR
   Rawlings J. O., 1998, APPL REGRESSION ANAL
   SCHOONEVELDT M, 1995, P 2 AUSTR C SOFTW ME
   SNEED H, 1996, P 7 EUR SOFTW CONTR
   STONE M, 1974, J R STAT SOC B, V36, P111, DOI 10.1111/j.2517-6161.1974.tb00994.x
   Verner J. M., 1989, Proceedings. 11th International Conference on Software Engineering (Cat. No.89CH2718-5), P375, DOI 10.1145/74587.74639
   Vicinanza SS, 1991, INFORM SYST RES, V2, P243, DOI 10.1287/isre.2.4.243
NR 32
TC 24
Z9 25
U1 0
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2003
VL 8
IS 3
BP 225
EP 254
DI 10.1023/A:1024472727275
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 803WF
UT WOS:000220260500001
DA 2024-07-18
ER

PT J
AU Pighin, M
   Podgorelec, V
   Kokol, P
AF Pighin, M
   Podgorelec, V
   Kokol, P
TI Fault-threshold prediction with linear programming methodologies
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE predictive metric; linear programming; risk evaluation
ID SOFTWARE METRICS
AB This paper presents a new experimental methodology that operates on a series of programs structural parameters. We calculated some simple metrics on these parameters and then we applied linear programming techniques on them. It was therefore possible to define a model that can predict the risk level of a program, namely how prone it is to containing faults.
   The new system represents the software files as points on an n-dimensional space (every dimension is one of the structural attributes for each file). Starting from this model the problem to find out the more dangerous files is brought back to the problem to separate two sets in R-n. A solution to this linear programming problem was achieved by using the MSM-T method (multisurface method tree), a greedy algorithm, which iterative divides the space in polyhedral regions till it reaches an empty set. The classification procedure is divided in two steps: the learning phase, which is used to tune the model on the specified environment and the effective selection. It is, therefore, possible to divide the n-dimensional space and find out the risk-regions of the space, which represent the dangerous files.
   All the process was tested in an industrial application, to validate the soundness of the methodology experimentally. A comparison between linear programming and other risk definition techniques was provided.
C1 Univ Udine, Dept Math & Comp Sci, I-33100 Udine, Italy.
   Univ Maribor, Lab Syst Design, Maribor, Slovenia.
C3 University of Udine; University of Maribor
RP Univ Udine, Dept Math & Comp Sci, I-33100 Udine, Italy.
RI Kokol, Peter/I-1542-2019; Podgorelec, Vili/M-7665-2014
OI Kokol, Peter/0000-0003-4073-6488; Podgorelec, Vili/0000-0001-6955-7868
CR ALJAHDALI SH, 2001, P ACS IEEE INT C COM
   [Anonymous], P AAAI FALL S REL NE
   [Anonymous], P ESCOMSCOPE 99
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   BENBASSAT M, 1992, P 4 MIDW ART INT COG, P97
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P91, DOI 10.1109/32.748920
   BRIAND LC, 1998, J SYSTEMS SOFTWARE
   Bucci G, 1998, IEEE INT C ENG COMP, P36, DOI 10.1109/ICECCS.1998.706654
   BUSH M, 1994, SOFTWARE QUALITY MAN, V1, P417
   BUSH ME, 1990, J SYST SOFTWARE, V12, P223, DOI 10.1016/0164-1212(90)90043-L
   COLEMAN D, 1994, COMPUTER, V27, P44, DOI 10.1109/2.303623
   ELEMAM K, 2001, J SYSTEMS SOFTWARE, V55
   Fenton NE, 2000, IEEE T SOFTWARE ENG, V26, P797, DOI 10.1109/32.879815
   FENTON NE, 1197, SOFTWARE METRICS RIG
   Fioravanti F, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P121, DOI 10.1109/CSMR.2001.914976
   Fioravanti F, 1998, PROC INT CONF SOFTW, P456, DOI 10.1109/ICSE.1998.671605
   GRADY RB, 1993, COMMUN ACM, V36, P62, DOI 10.1145/163359.163369
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   KHOSHGOFTAAR TM, 1994, COMPUTER, V27, P13
   KOKOL P, 2001, P SYST CYB INF C SCI, P229
   KONRAD E, 1992, SIGPLAN NOTICES, V27, P13, DOI 10.1145/142181.142186
   LANUBILE F, 1995, SEKE '95, PROCEEDINGS, P312
   MANGASARIAN OL, 1992, OPTIMIZATION METHODS, P1
   MANGASARIAN OL, 1994, 9410 U WINSC
   Mockus A, 2000, BELL LABS TECH J, V5, P169, DOI 10.1002/bltj.2229
   MONTANARI A, 1994, P SQM 94, P335
   MUNSON JC, 1992, IEEE T SOFTWARE ENG, V18, P423, DOI 10.1109/32.135775
   Nesi P, 1998, J SYST SOFTWARE, V42, P89, DOI 10.1016/S0164-1212(97)10021-8
   PAULISH DJ, 1994, COMPUTER, V27, P50, DOI 10.1109/2.312039
   Pighin M, 1997, PROC INT CONF SOFTW, P262, DOI 10.1145/253228.253285
   PIGHIN M, 1998, P EUR SOFTW MEAS C F, P247
   PIGHIN M, 1995, P ICQS 95, P91
   PIGHIN M, 1999, P EUR SOFTW MEAS C F, P459
   Podgorelec V, 2002, INFORM PROCESS LETT, V82, P31, DOI 10.1016/S0020-0190(01)00284-8
   Quinlan J.R.C., 1993, C4 5 PROGRAMS MACHIN
   ROCHE JM, 1994, ACM SIGSOFT SE NOTES, V19, P2
   Sprogar M., 2000, Intelligent Data Analysis, V4, P305
   THELIN T, 2000, J SYSTEMS SOFTWARE, V52
   THOMSON HE, 1994, SOFTWARE QUALITY MAN, V1, P149
   ZHIWEI X, 2000, P 5 IEEE INT S HIGH
   1992, IEEE T SOFTWARE ENG
NR 41
TC 2
Z9 2
U1 0
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2003
VL 8
IS 2
BP 117
EP 138
DI 10.1023/A:1023006528274
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 803OV
UT WOS:000220241300001
DA 2024-07-18
ER

PT J
AU Labunets, K
   Massacci, F
   Paci, F
   Tuma, K
AF Labunets, Katsiaryna
   Massacci, Fabio
   Paci, Federica
   Tuma, Katja
TI A new, evidence-based, theory for knowledge reuse in security risk
   analysis
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Information security; Risk assessment; Empirical study; Knowledge reuse
ID THREAT ANALYSIS; ATTACK TREES; MANAGEMENT; COMMUNITIES; DISCOURSES;
   SYSTEMS; IF
AB Security risk analysis (SRA) is a key activity in software engineering but requires heavy manual effort. Community knowledge in the form of security patterns or security catalogs can be used to support the identification of threats and security controls. However, no evidence-based theory exists about the effectiveness of security catalogs when used for security risk analysis. We adopt a grounded theory approach to propose a conceptual, revised and refined theory of SRA knowledge reuse. The theory refinement is backed by evidence gathered from conducting interviews with experts (20) and controlled experiments with both experts (15) and novice analysts (18). We conclude the paper by providing insights into the use of catalogs and managerial implications.
C1 [Labunets, Katsiaryna] Univ Utrecht, Utrecht, Netherlands.
   [Massacci, Fabio; Tuma, Katja] Vrije Univ Amsterdam, Amsterdam, Netherlands.
   [Massacci, Fabio] Univ Trento, Trento, Italy.
   [Paci, Federica] Univ Verona, Verona, Italy.
C3 Utrecht University; Vrije Universiteit Amsterdam; University of Trento;
   University of Verona
RP Tuma, K (corresponding author), Vrije Univ Amsterdam, Amsterdam, Netherlands.
EM k.labunets@uu.nl; f.massacci@ieee.org;
   federicamariafrancesca.paci@univr.it; k.tuma@vu.nl
RI Tuma, Katja/JXW-6562-2024; Labunets, Katsiaryna/ABF-8775-2020
OI Tuma, Katja/0000-0001-7189-2817; Labunets,
   Katsiaryna/0000-0003-0884-2440
FU SESAR project EMFASE; FP7 project [285223]; European Union
FX The authors would first like to express gratitude to the participants of
   this study who have generously contributed. We would also like to thank
   our past-co-authors Martina De Gramatica and Le Minh Sang Tran from
   UTrento, Bjorn Sohaug and Ketil Stoelen from SINTEF, Alessandra Tedeschi
   and Martina Ragosta from DeepBlue, John Hird and Rainer Koehele from
   Eurocontrol for helping us with the data collection and organizing the
   focus groups and the trainings. Without everybody's time and expertise
   this paper would not have been possible.Part of the the work was done
   while K. Labunets and F.M. Paci were at the University of Trento. This
   research was partially supported by the SESAR project EMFASE and the
   European Union and the FP7 project 285223 (SECONOMICS).The datasets
   generated and analysed during the study are not publicly available due
   confidentiality constraints with industrial partners but example data
   can be made available from the corresponding author on reasonable
   request.
CR Abe T, 2013, ASIA PAC SOFWR ENG, P58, DOI 10.1109/APSEC.2013.19
   Agency CIS, 2023, CIS SEC B
   Almorsy M, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P662, DOI 10.1109/ICSE.2013.6606612
   [Anonymous], 2001, GUID IND STAT APPR E
   [Anonymous], 2007, Tech. Rep. CMU/SEI-2007-TR-012
   [Anonymous], 2015, REQ ENG, P1
   Arce I., 2014, Avoiding the top 10 software security design flaws
   Arora A, 2015, KNOWLEDGE SHARING AL
   Barnum S, 2005, IEEE SECUR PRIV, V3, P74, DOI 10.1109/MSP.2005.45
   Barnum S., 2008, Common attack pattern enumeration and classification (capec) schema description
   Berger Bernhard J., 2016, Engineering Secure Software and Systems. 8th International Symposium, ESSoS 2016. Proceedings: LNCS 9639, P56, DOI 10.1007/978-3-319-30806-7_4
   Bharadwaj AS, 2000, MIS QUART, V24, P169, DOI 10.2307/3250983
   Blai, 2021, CYBERSECURITY THREAT
   Boh WF, 2008, INFORM MANAGE-AMSTER, V45, P365, DOI 10.1016/j.im.2008.06.001
   Boh WF, 2014, DATA BASE ADV INF SY, V45, P8
   BSI G, 2017, 1001 BSI G, P100
   Center NCS, 2021, 10 STEPS CYB SEC
   Cruzes DS, 2018, 2018 25TH AUSTRALASIAN SOFTWARE ENGINEERING CONFERENCE (ASWEC), P111, DOI 10.1109/ASWEC.2018.00023
   CyberSeek, 2019, CYB SUPPL DEM HEAT M
   daSilvaSantos JC, 2016, ESTABLISHING CATALOG
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   Deng MN, 2011, REQUIR ENG, V16, P3, DOI 10.1007/s00766-010-0115-7
   Dixon N., 2002, IVEY BUSINESS J, V66, P35
   Fredriksen R., 2002, Computer Safety, Reliability and Security. 21st International Conference, SAFECOMP 2002. Proceedings (Lecture Notes in Computer Science Vol.2434), P94
   Gamma Erich, 1995, DESIGN PATTERNS ELEM
   Garicano L, 2012, ORGAN SCI, V23, P1382, DOI 10.1287/orsc.1110.0723
   Gray PH, 2004, MANAGE SCI, V50, P821, DOI 10.1287/mnsc.1030.0192
   Gritzalis D, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3145905
   Group SSI, 2021, BUILD SEC MAT MOD BS
   Guest G., 2011, sage publications
   Hibshi H, 2016, J CYBERSECURITY, V2, P147, DOI 10.1093/cybsec/tyw010
   InternetSecurity C, 2023, CIS CRIT SEC CONTR
   Jafari AJ, 2020, J COMPUT LANG, V56, DOI 10.1016/j.cola.2019.100938
   Jedlitschka A, 2014, EMPIR SOFTW ENG, V19, P1921, DOI 10.1007/s10664-013-9268-6
   Kankanhalli A, 2011, INFORM MANAGE-AMSTER, V48, P106, DOI 10.1016/j.im.2011.02.002
   Karahasanovic A., 2017, 2017 IEEE 13 INT C W, P1
   Karpati P, 2015, J SYST SOFTWARE, V104, P90, DOI 10.1016/j.jss.2015.02.040
   Karpati P, 2014, INFORM SOFTWARE TECH, V56, P294, DOI 10.1016/j.infsof.2013.10.004
   Knowles M.S., 1980, MODERN PRACTICE ADUL, V2nd
   Labunets Katsiaryna, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P163, DOI 10.1109/ESEM.2013.29
   Labunets K, 2014, P 4 SESAR INN DAYS
   Labunets K, 2017, INT SYMP EMP SOFTWAR, P267, DOI 10.1109/ESEM.2017.40
   Labunets K, 2017, EMPIR SOFTW ENG, V22, P3017, DOI 10.1007/s10664-017-9502-8
   Labunets K, 2014, IEEE INT WORKS EMPIR, P28, DOI 10.1109/EmpiRE.2014.6890113
   laSecurite Des Systemes D'information(ANSSI), 2019, EB RISK MAN
   Leach Matthew J, 2006, Int J Nurs Pract, V12, P248, DOI 10.1111/j.1440-172X.2006.00587.x
   Lund MS, 2011, MODEL-DRIVEN RISK ANALYSIS: THE CORAS APPROACH, P3, DOI 10.1007/978-3-642-12323-8
   Markus ML, 2001, J MANAGE INFORM SYST, V18, P57
   Massacci Fabio, 2012, Secure IT Systems. 17th Nordic Conference, NordSec 2012. Proceedings, P89, DOI 10.1007/978-3-642-34210-3_7
   Meyer JP, 2013, J EXP EDUC, V81, P139, DOI 10.1080/00220973.2012.699904
   Meyners M, 2012, FOOD QUAL PREFER, V26, P231, DOI 10.1016/j.foodqual.2012.05.003
   MITRE, 2020, CVE COMM VULN EXP
   MITRE, 2022, MITRE ATT&CK-Enteprise Matrix
   MITRE, 2020, CWE COMM WEAKN EN
   Mouaffo A, 2014, P 18 INT C EV ASS SO, P1
   NEWELL A, 1982, ARTIF INTELL, V18, P87, DOI 10.1016/0004-3702(82)90012-1
   O'Dell C, 1998, CALIF MANAGE REV, V40, P154, DOI 10.2307/41165948
   ofStandards NI Technologies, 2023, CYB SEC FRAM V1 1
   ofStandards NI Technology, 2020, NIST SPECIAL PUBLICA
   ofStandards NI Technology, 2012, NIST SPECIAL PUBLICA
   Opdahl AL, 2009, INFORM SOFTWARE TECH, V51, P916, DOI 10.1016/j.infsof.2008.05.013
   OWASP, 2021, OWASP TOP 10
   Pilat L, 2011, P 5 INT C RES CHALL, P1
   Publicas MDA, 2012, MAG METH INF SYST RI
   Raman R, 2010, KNOWLEDGE AGENCY BAS
   Riaz M, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962599
   Riaz M, 2017, EMPIR SOFTW ENG, V22, P2127, DOI 10.1007/s10664-016-9481-1
   Rus I, 2002, IEEE SOFTWARE, V19, P26, DOI 10.1109/MS.2002.1003450
   SANS, 2011, SANS TOP 25 SOFTW ER
   Santos JCS, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE WORKSHOPS (ICSAW), P220, DOI 10.1109/ICSAW.2017.25
   Scandariato R., 2014, REJ, P1
   Scandariato R, 2015, REQUIR ENG, V20, P163, DOI 10.1007/s00766-013-0195-2
   SCHUIRMANN DL, 1981, BIOMETRICS, V37, P617
   Schultze U, 2004, J MANAGE STUD, V41, P549, DOI 10.1111/j.1467-6486.2004.00444.x
   Schultze U, 2002, MIS QUART, V26, P213, DOI 10.2307/4132331
   Schumacher M., 2005, Security Patterns: Integrating Security and Systems Engineering, V1st
   Shostack A., 2014, Threat Modeling: Designing for Security
   Sindre G, 2005, REQUIR ENG, V10, P34, DOI 10.1007/s00766-004-0194-4
   Stålhane T, 2014, INT J INF SYST MODEL, V5, P1, DOI 10.4018/ijismd.2014010101
   Tuma K, 2018, J SYST SOFTWARE, V144, P275, DOI 10.1016/j.jss.2018.06.073
   Tuma K., 2020, P 23 ACM IEEE INT C, P332, DOI [DOI 10.1145/3365438.3410954, 10.1145/3365438.3410954]
   Tuma K, 2021, IEEE SECUR PRIV, V19, P78, DOI 10.1109/MSEC.2021.3093137
   Tuma K, 2021, J SYST SOFTWARE, V179, DOI 10.1016/j.jss.2021.111003
   Tuma K, 2018, LECT NOTES COMPUT SC, V11048, P347, DOI 10.1007/978-3-030-00761-4_23
   Wasko MM, 2000, J STRATEGIC INF SYST, V9, P155, DOI 10.1016/S0963-8687(00)00045-7
   Wuyts K, 2014, J SYST SOFTWARE, V96, P122, DOI 10.1016/j.jss.2014.05.075
   Yin R.K., 2011, Qualitative research from start to finish
   Yskout K, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P292, DOI 10.1109/ICSE.2015.49
   Zhang C, 2012, IEEE T SOFTWARE ENG, V38, P1213, DOI 10.1109/TSE.2011.79
NR 89
TC 0
Z9 0
U1 2
U2 14
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2023
VL 28
IS 4
AR 90
DI 10.1007/s10664-023-10321-y
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA H3FT8
UT WOS:000994865100002
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Abyane, AE
   Zhu, DR
   Souza, R
   Ma, L
   Hemmati, H
AF Abyane, Amin Eslami
   Zhu, Derui
   Souza, Roberto
   Ma, Lei
   Hemmati, Hadi
TI Towards understanding quality challenges of the federated learning for
   neural networks: a first look from the lens of robustness
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Federated learning; Robustness; Byzantine attacks; Mutation testing;
   Defense methods
AB Federated learning (FL) is a distributed learning paradigm that preserves users' data privacy while leveraging the entire dataset of all participants. In FL, multiple models are trained independently on the clients and aggregated centrally to update a global model in an iterative process. Although this approach is excellent at preserving privacy, FL still suffers from quality issues such as attacks or byzantine faults. Recent attempts have been made to address such quality challenges on the robust aggregation techniques for FL. However, the effectiveness of state-of-the-art (SOTA) robust FL techniques is still unclear and lacks a comprehensive study. Therefore, to better understand the current quality status and challenges of these SOTA FL techniques in the presence of attacks and faults, we perform a large-scale empirical study to investigate the SOTA FL's quality from multiple angles of attacks, simulated faults (via mutation operators), and aggregation (defense) methods. In particular, we study FL's performance on the image classification tasks and use Deep Neural Networks as our model type. Furthermore, we perform our study on two generic image datasets and one real-world federated medical image dataset. We also systematically investigate the effect of the proportion of affected clients and the dataset distribution factors on the robustness of FL. After a large-scale analysis with 496 configurations, we find that most mutators on each user have a negligible effect on the final model in the generic datasets, and only one of them is effective in the medical dataset. Furthermore, we show that model poisoning attacks are more effective than data poisoning attacks. Moreover, choosing the most robust FL aggregator depends on the attacks and datasets. Finally, we illustrate that a simple ensemble of aggregators achieves a more robust solution than any single aggregator and is the best choice in 75% of the cases.
C1 [Abyane, Amin Eslami; Souza, Roberto; Hemmati, Hadi] Univ Calgary, Calgary, AB, Canada.
   [Zhu, Derui] Tech Univ Munich, Munich, Germany.
   [Ma, Lei] Univ Alberta, Edmonton, AB, Canada.
   [Hemmati, Hadi] York Univ, Toronto, ON, Canada.
C3 University of Calgary; Technical University of Munich; University of
   Alberta; York University - Canada
RP Abyane, AE (corresponding author), Univ Calgary, Calgary, AB, Canada.
EM amin.eslamiabyane@ucalgary.ca; derui.zhu@tum.de;
   roberto.medeirosdeso@ucalgary.ca; ma.lei@acm.org; hemmati@yorku.ca
RI Zhu, Derui/JXM-9163-2024
OI Eslami Abyane, Amin/0000-0002-3126-6800
FU Natural Sciences and Engineering Research Council of Canada
   [ALLRP/556396-2020, ALLRP/568643-2021, 212200865]; Canada CIFAR AI
   Chairs Program, the Natural Sciences and Engineering Research Council of
   Canada [RGPIN-2021-02549, RGPAS-2021-00034, DGECR-2021-00019]; JSPS
   KAKENHI [JP20H04168]; ST-Mirai Program [JPMJMI20B8]
FX This work is partially supported by the Natural Sciences and Engineering
   Research Council of Canada [ALLRP/556396-2020 and ALLRP/568643-2021] and
   Alberta Innovates [212200865]. Lei Ma's research was supported in part
   by Canada CIFAR AI Chairs Program, the Natural Sciences and Engineering
   Research Council of Canada (NSERC No.RGPIN-2021-02549,
   No.RGPAS-2021-00034, No.DGECR-2021-00019), as well as JSPS KAKENHI Grant
   No.JP20H04168, JST-Mirai Program Grant No.JPMJMI20B8.
CR Abadi M, 2016, PROCEEDINGS OF OSDI'16: 12TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P265
   Bagdasaryan E, 2020, PR MACH LEARN RES, V108, P2938
   Bhagoji AN, 2019, PR MACH LEARN RES, V97
   Blanchard P, 2017, ADV NEUR IN, V30
   Bonawitz K, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1175, DOI 10.1145/3133956.3133982
   Chen XY, 2017, Arxiv, DOI arXiv:1712.05526
   Fang MH, 2020, PROCEEDINGS OF THE 29TH USENIX SECURITY SYMPOSIUM, P1623
   Fu SH, 2021, Arxiv, DOI arXiv:1912.11464
   Fung C., 2020, 23 INT S RES ATT INT, P301
   Goodfellow I.J., 2015, PROC 3 INT C LEARN R
   Gu TY, 2019, IEEE ACCESS, V7, P47230, DOI 10.1109/ACCESS.2019.2909068
   Hu Q, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1158, DOI 10.1109/ASE.2019.00126
   Humbatova N, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P67, DOI 10.1145/3460319.3464825
   Kairouz P, 2021, FOUND TRENDS MACH LE, V14, P1, DOI 10.1561/2200000083
   Keras, 2021, SIMPL MNIST CONVN
   Keras, 2021, KER CIFAR10 CNN PY M
   Krizhevsky A., 2009, LEARNING MULTIPLE LA
   Lai F, 2021, PROCEEDINGS OF THE 15TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDI '21), P19
   Lamport Leslie, 2019, The Byzantine generals problem, P203, DOI 10.1145/3335772.3335936
   Li LP, 2019, AAAI CONF ARTIF INTE, P1544
   Li T., 2020, PROC MACH LEARN SYST, V2, P429, DOI DOI 10.48550/ARXIV.1812.06127
   Li T, 2021, PR MACH LEARN RES, V139
   Li T, 2020, IEEE SIGNAL PROC MAG, V37, P50, DOI 10.1109/MSP.2020.2975749
   Lyu L, 2022, Arxiv, DOI arXiv:2012.06337
   Madry A., 2018, ARXIV
   McMahan HB, 2017, PR MACH LEARN RES, V54, P1273
   Mueller SG, 2005, NEUROIMAG CLIN N AM, V15, P869, DOI 10.1016/j.nic.2005.09.008
   Munoz-Gonzalez L., 2017, PROC 10 ACMWORKSHOP, P27, DOI 10.1145/3128572.3140451
   Nishio T, 2019, IEEE ICC
   Pillutla K, 2022, Arxiv, DOI arXiv:1912.13445
   Russakovsky O, 2015, INT J COMPUT VISION, V115, P211, DOI 10.1007/s11263-015-0816-y
   Shen WJ, 2018, 2018 IEEE 18TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY COMPANION (QRS-C), P108, DOI 10.1109/QRS-C.2018.00032
   Simonyan K, 2015, Arxiv, DOI arXiv:1409.1556
   Sun ZT, 2019, Arxiv, DOI arXiv:1911.07963
   Wan CP, 2021, Arxiv, DOI arXiv:2102.05257
   Wang Hongyi, 2020, INT C LEARN REPR ICL
   Wang JY, 2019, PROC INT CONF SOFTW, P1245, DOI 10.1109/ICSE.2019.00126
   Xia Q, 2021, HIGH-CONFID COMPUT, V1, DOI 10.1016/j.hcc.2021.100008
   Xiao H, 2017, Arxiv, DOI [arXiv:1708.07747, DOI 10.48550/ARXIV.1708.07747]
   Yin D, 2018, PR MACH LEARN RES, V80
   Zhao LC, 2022, IEEE T DEPEND SECURE, V19, P3329, DOI 10.1109/TDSC.2021.3093711
   Zheng Chai, 2020, HPDC '20: Proceedings of the 29th International Symposium on High-Performance Parallel and Distributed Computing, P125, DOI 10.1145/3369583.3392686
NR 42
TC 0
Z9 0
U1 0
U2 11
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2023
VL 28
IS 2
AR 44
DI 10.1007/s10664-022-10262-y
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 9C8SX
UT WOS:000935681500001
DA 2024-07-18
ER

PT J
AU Rocha, T
   Borba, P
AF Rocha, Thais
   Borba, Paulo
TI Using acceptance tests to predict merge conflict risk
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Collaborative development; Task prioritization; Behaviour-driven
   development; Prediction of conflict risk
ID CODE
AB Merge conflict resolution might be time-consuming and lead to defects, compromising development productivity and system quality. Developers might reduce such adverse impacts by avoiding concurrent programming tasks that are more likely to change the same files and cause merge conflicts. As manually predicting such risk is hard, we propose the TAITIr tool, which approximates the set of files changed by a task (task interface) and reports conflict risk whenever there is an intersection between task interfaces. TAITIr uses as input the acceptance tests related to the tasks for predicting file changes, deriving test-based task interfaces. To assess TAITIr's conflict risk predictions, we measure precision and recall of 6,360 task pairs from 19 Rails projects on GitHub. Our results confirm that the intersection among task interfaces is associated with a higher probability of merge conflict risk. A minimal intersection predicts conflict risk with 0.59 precision and 0.98 recall. We observe that the higher the intersection size, the higher the number of files changed by both tasks. This way, developers might use the intersection size between interfaces as a degree of conflict risk between tasks, choosing a task to work on depending on it. We also find that TAITIr's predictions outperform predictions based on changed files by similar past tasks. Our analysis derives several other results, considering variations of our notion of an interface in two dimensions: parts of the test code considered for computing interfaces, kinds of files abstracted by the interfaces.
C1 [Rocha, Thais] Fed Univ Agreste Pernambuco, Garanhuns, Brazil.
   [Borba, Paulo] Univ Fed Pernambuco, Informat Ctr, Recife, PE, Brazil.
C3 Universidade Federal de Pernambuco
RP Rocha, T (corresponding author), Fed Univ Agreste Pernambuco, Garanhuns, Brazil.
EM thais.burity@ufape.edu.br; phmb@cin.ufpe.br
RI Rocha, Thais/KIL-6816-2024
FU INES (National Software Engineering Institute); Brazilian research
   funding agency CNPq [309741/2013-0]; Brazilian research funding agency
   FACEPE [IBPG-0546-1.03/15, APQ/0388-1.03/14]; Brazilian research funding
   agency CAPES
FX Partial financial support was received from INES (National Software
   Engineering Institute) and the Brazilian research funding agencies CNPq
   (grant 309741/2013-0), FACEPE (grants IBPG-0546-1.03/15 and
   APQ/0388-1.03/14), and CAPES.
CR Accioly P, 2018, EMPIR SOFTW ENG, V23, P2051, DOI 10.1007/s10664-017-9586-1
   Adams B, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 5, P78, DOI 10.1109/SANER.2016.108
   Ahmed I, 2017, INT SYMP EMP SOFTWAR, P58, DOI 10.1109/ESEM.2017.12
   Apel S., 2011, P 19 ACM SIGSOFT S 1, P190, DOI DOI 10.1145/2025113.2025141
   Apel S, 2012, IEEE INT CONF AUTOM, P120, DOI 10.1145/2351676.2351694
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Bailey M, 2012, P 50 ANN SE REGIONAL, P106, DOI [10.1145/2184512.2184538, DOI 10.1145/2184512.2184538]
   Bass L, 2016, A Software Architect's Perspective
   Berry DanielM., 2017, EVALUATION TOOLS HAI
   Biehl JT, 2007, CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1 AND 2, P1313
   Borges H, 2016, PROC IEEE INT CONF S, P334, DOI 10.1109/ICSME.2016.31
   Borici A., 2012, 2012 5th International Workshop on Cooperative and Human Aspects of Software Engineering, P5, DOI 10.1109/CHASE.2012.6223024
   Brun Y, 2013, IEEE T SOFTWARE ENG, V39, P1358, DOI 10.1109/TSE.2013.28
   Cavalcanti G, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133883
   Cubranic D, 2005, IEEE T SOFTWARE ENG, V31, P446, DOI 10.1109/TSE.2005.71
   de Souza Cleidson R. B., 2003, P 2003 INT ACM SIGGR, P105, DOI DOI 10.1145/958160.958177
   Denninger O., 2012, 2012 Third International Workshop on Recommendation Systems for Software Engineering (RSSE), P78, DOI 10.1109/RSSE.2012.6233416
   Dewan P, 2007, ECSCW 2007: PROCEEDINGS OF THE 10TH EUROPEAN CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK, P159, DOI 10.1007/978-1-84800-031-5_9
   Dias K, 2020, INFORM SOFTWARE TECH, V121, DOI 10.1016/j.infsof.2020.106256
   Dias M, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P341, DOI 10.1109/SANER.2015.7081844
   Fowler M, 2010, Feature toggle
   Fowler M, 2020, Feature Branch
   Giger E., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P217, DOI 10.1109/MSR.2012.6224284
   Grinter R. E., 1996, Computer Supported Cooperative Work (CSCW), V5, P447, DOI 10.1007/BF00136714
   Guimaraes ML, 2012, PROC INT CONF SOFTW, P342, DOI 10.1109/ICSE.2012.6227180
   Henderson F, 2020, Arxiv, DOI arXiv:1702.01715
   Hodgson P, 2017, Tech. rep., DevOps Blog
   Hodgson P, 2017, Feature toggles (aka Feature Flags)
   Kasi BK, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P732, DOI 10.1109/ICSE.2013.6606619
   Kersten Mik, 2006, P 14 ACM SIGSOFT INT, P1
   Lessenich O, 2018, AUTOMAT SOFTW ENG, V25, P279, DOI 10.1007/s10515-017-0227-0
   Nagappan M, 2013, 2013 9 JOINT M EUR S, P466, DOI [DOI 10.1145/2491411.2491415, 10.1145/2491411.2491415]
   Potvin R, 2016, COMMUN ACM, V59, P78, DOI 10.1145/2854146
   Rocha T, 2019, Online Appendix
   Rocha T, 2019, J SYST SOFTWARE, V154, P176, DOI 10.1016/j.jss.2019.04.060
   Salton G, 1986, Introduction to Modern Information Retrieval
   Sarma A, 2012, IEEE T SOFTWARE ENG, V38, P889, DOI 10.1109/TSE.2011.64
   Smart J.F., 2014, BDD ACTION BEHAV DRI
   Stray V, 2016, J SYST SOFTWARE, V114, P101, DOI 10.1016/j.jss.2016.01.004
   Thompson C, 2014, 4 INT WORKSHOP RECOM, DOI [10.1145/2593822.2593824, DOI 10.1145/2593822.2593824]
   Ying ATT, 2004, IEEE T SOFTWARE ENG, V30, P574, DOI 10.1109/TSE.2004.52
   Zampetti F, 2020, INFORM SOFTWARE TECH, V123, DOI 10.1016/j.infsof.2020.106311
   Zimmermann T, 2004, PROC INT CONF SOFTW, P563, DOI 10.1109/ICSE.2004.1317478
NR 43
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2023
VL 28
IS 2
DI 10.1007/s10664-022-10266-8
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FR6R3
UT WOS:001147626100001
DA 2024-07-18
ER

PT J
AU Sundermann, C
   Hess, T
   Nieke, M
   Bittner, PM
   Young, JM
   Thüm, T
   Schaefer, I
AF Sundermann, Chico
   Hess, Tobias
   Nieke, Michael
   Bittner, Paul Maximilian
   Young, Jeffrey M.
   Thuem, Thomas
   Schaefer, Ina
TI Evaluating state-of-the-art # SAT solvers on industrial configuration
   spaces
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Configurable systems; Feature models; Product lines; Model counting;
   Configuration counting; #SAT; Benchmark
ID EXACT MODEL; ALGORITHMS
AB Product lines are widely used to manage families of products that share a common base of features. Typically, not every combination (configuration) of features is valid. Feature models are a de facto standard to specify valid configurations and allow standardized analyses on the variability of the underlying system. A large variety of such analyses depends on computing the number of valid configurations. To analyze feature models, they are typically translated to propositional logic. This allows to employ # SAT solvers that compute the number of satisfying assignments of the propositional formula translated from a feature model. However, the # SAT problem is generally assumed to be even harder than SAT and its scalability when applied to feature models has only been explored sparsely. Our main contribution is an investigation of the performance of off-the-shelf # SAT solvers on computing the number of valid configurations for industrial feature models. We empirically evaluate 21 publicly available # SAT solvers on 130 feature models from 15 subject systems. Our results indicate that current solvers master a majority of the evaluated systems (13/15) with the fastest solvers requiring less than one second for each successfully evaluated feature model. However, there are two complex systems for which none of the evaluated solvers scales. For the given experiment design, the solvers that consumed the least runtime are sharpSAT (2.5 seconds in sum for the 13 systems) and Ganak (3.5 seconds).
C1 [Sundermann, Chico; Hess, Tobias; Bittner, Paul Maximilian; Thuem, Thomas] Univ Ulm, Ulm, Germany.
   [Nieke, Michael; Schaefer, Ina] Tech Univ Carolo Wilhelmina Braunschweig, Braunschweig, Germany.
   [Young, Jeffrey M.] IOHK, Longmont, CO USA.
C3 Ulm University; Braunschweig University of Technology
RP Sundermann, C (corresponding author), Univ Ulm, Ulm, Germany.
EM chico.sundermann@uni-ulm.de; tobias.hess@uni-ulm.de; m.nieke@tu-bs.de;
   paul.bittner@uni-ulm.de; jeffrey.young@iohk.io; thomas.thuem@uni-ulm.de;
   i.schaefer@tu-bs.de
OI Sundermann, Chico/0000-0002-5239-3307
FU German Research Foundation [TH 2387/1-1]
FX We sincerely thank the reviewers and editors for their valuable feedback
   on our work. Further, we thank Heiko Raab and Rahel Arens for their help
   in improving the manuscript. This work has been partially supported by
   the German Research Foundation within the project VariantSync (TH
   2387/1-1).
CR Acher M, 2013, SCI COMPUT PROGRAM, V78, P657, DOI 10.1016/j.scico.2012.12.004
   Ananieva S, 2016, PROCEEDINGS OF THE 7TH INTERNATIONAL WORKSHOP ON FEATURE-ORIENTED SOFTWARE DEVELOPMENT (FOSD'16), P18, DOI 10.1145/3001867.3001870
   [Anonymous], 2010, J SATISFIABIL BOOLEA, DOI DOI 10.3233/SAT190075
   [Anonymous], 2008, J. Satisf. Boolean Model. Comput., DOI 10.3233/sat190039
   Ansótegui C, 2009, LECT NOTES COMPUT SC, V5732, P127, DOI 10.1007/978-3-642-04244-7_13
   Apel S., 2013, Feature-Oriented Software Development: Concepts and Implementation
   Artusi R, 2002, INT J BIOL MARKER, V17, P148, DOI 10.1177/172460080201700213
   Bagheri E, 2012, J SOFTW-EVOL PROC, V24, P375, DOI 10.1002/smr.534
   Bagheri E, 2011, SOFTWARE QUAL J, V19, P579, DOI 10.1007/s11219-010-9127-2
   Baranov E, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1114, DOI 10.1145/3368089.3409744
   Batory D, 2005, LECT NOTES COMPUT SC, V3714, P7
   Bayardo RJ, 2000, SEVENTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-2001) / TWELFTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE (IAAI-2000), P157
   Benavides D., 2007, PROCEEDING 1 INT WOR, P129
   Benavides D., 2005, P INT C SOFTW ENG KN, P677
   Benavides D, 2006, LECT NOTES COMPUT SC, V4143, P399
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Bezerra Carla I. M., 2014, Software Reuse for Dynamic Systems in the Cloud and Beyond 14th International Conference on Software Reuse, ICSR 2015. Proceedings: LNCS 8919, P282, DOI 10.1007/978-3-319-14130-5_20
   Biere A, 2009, FRONT ARTIF INTEL AP, V185, P457, DOI 10.3233/978-1-58603-929-5-457
   Bosch J, 2002, LECT NOTES COMPUT SC, V2290, P13
   Bryant R.E., 2018, Handbook of Model Checking, P191, DOI [DOI 10.1007/978-3-319-10575-8_7, 10.1007/978-3-319-10575-87, DOI 10.1007/978-3-319-10575-87]
   BRYANT RE, 1986, IEEE T COMPUT, V35, P677, DOI 10.1109/TC.1986.1676819
   Burchard J, 2015, LECT NOTES COMPUT SC, V9340, P46, DOI 10.1007/978-3-319-24318-4_5
   Chakraborty S, 2013, LECT NOTES COMPUT SC, V8124, P200, DOI 10.1007/978-3-642-40627-0_18
   CONOVER WJ, 1981, AM STAT, V35, P124, DOI 10.2307/2683975
   Czarnecki K, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P23, DOI 10.1109/SPLINE.2007.24
   Darwiche A, 2004, FRONT ARTIF INTEL AP, V110, P328
   Darwiche A, 2002, EIGHTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-02)/FOURTEENTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE (IAAI-02), PROCEEDINGS, P627
   Darwiche A, 2002, J ARTIF INTELL RES, V17, P229, DOI 10.1613/jair.989
   Darwiche A., 2011, IJCAI, DOI DOI 10.5591/978-1-57735-516-8/IJCAI11-143
   Darwiche A., 2001, Journal of Applied Non-Classical Logics, V11, P11, DOI DOI 10.3166/JANCL.11.11-34
   Fernandez-Amoros D, 2014, IEEE T SOFTWARE ENG, V40, P895, DOI 10.1109/TSE.2014.2331073
   Fichte J. K., 2021, ACM Journal of Experimental Algorithmics, V26a, P1
   Fichte JK, 2019, LECT NOTES COMPUT SC, V11802, P491, DOI 10.1007/978-3-030-30048-7_29
   Fritsch Claudia, 2020, SPLC '20: Proceedings of the 24th ACM Conference on Systems and Software Product Line: Volume A, DOI 10.1145/3382025.3414946
   Galindo J, 2016, SPLC 16, P74, DOI [10.1145/2934466.2934478, DOI 10.1145/2934466.2934478]
   Gomes Carla P, 2006, AAAI, P54
   Hadzic T., 2004, P INT C EC TECHN ORG, P131
   Heradio R, 2019, PROC INT CONF SOFTW, P843, DOI 10.1109/ICSE.2019.00091
   Heradio R, 2016, FRONT ARTIF INTEL AP, V286, P139, DOI 10.3233/978-1-61499-674-3-139
   Heradio R, 2013, INT J SOFTW ENG KNOW, V23, P1177, DOI 10.1142/S0218194013500368
   Heradio-Gil R, 2011, IET SOFTW, V5, P496, DOI 10.1049/iet-sen.2010.0022
   HeSS Tobias, 2021, SPLC '21: Proceedings of the 25th ACM International Systems and Software Product Line Conference - Volume A, P131, DOI 10.1145/3461001.3474452
   Huang JB, 2005, 19TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-05), P156
   Huth Michael, 2004, Logic in Computer Science: Modelling and reasoning about systems
   Israeli A, 2010, J SYST SOFTWARE, V83, P485, DOI 10.1016/j.jss.2009.09.042
   Kästner C, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P223, DOI 10.1109/SPLINE.2007.12
   Kästner C, 2009, PROC INT CONF SOFTW, P611, DOI 10.1109/ICSE.2009.5070568
   Klebanov Vladimir, 2013, Quantitative Evaluation of Systems. 10th International Conference, QEST 2013. Proceedings: LNCS 8054, P177, DOI 10.1007/978-3-642-40196-1_16
   Knüppel A, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P291, DOI 10.1145/3106237.3106252
   Koriche F., 2013, PROC INT JOINT C ART
   Kowal M, 2017, ACM SIGPLAN NOTICES, V52, P132, DOI [10.1145/3093335.2993248, 10.1145/2993236.2993248]
   Krieter S, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P898, DOI 10.1145/3180155.3180159
   Krieter S, 2017, 21ST INTERNATIONAL SYSTEM & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 2, P42, DOI 10.1145/3109729.3109751
   Kübler AJ, 2010, ELECTRON PROC THEOR, P44, DOI 10.4204/EPTCS.29.5
   Lagniez JM, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1331
   Lagniez JM, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P667
   McKight P. E., 2010, The Corsini Encyclopedia of Psychology, DOI 10.1002/9780470479216.corpsy0524
   Mendonca M., 2009, THESIS U WATERLOO
   Mendonca M., 2009, P 24 ACM SIGPLAN C C, P761, DOI [10.1145/1639950.1640002, DOI 10.1145/1639950.1640002]
   Mendonca M, 2010, SCI COMPUT PROGRAM, V75, P311, DOI 10.1016/j.scico.2009.12.004
   Mendonca Marcilio, 2009, SPLC' 09, P231
   Muise C, 2010, PROC C ARTIFICIAL IN
   Munoz D.-J., 2019, P 23 INT SYSTEMS SOF, VA, P289
   Nieke M, 2018, PROCEEDINGS OF THE 17TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING: CONCEPTS AND EXPERIENCES (GPCE'18), P188, DOI 10.1145/3278122.3278123
   Oh J, 2016, TECHNICAL REPORT
   Oh J., 2019, Technical Report TR-19-02
   Oh J, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P61, DOI 10.1145/3106237.3106273
   Oztok U, 2015, PROCEEDINGS OF THE TWENTY-FOURTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI), P3141
   Oztok U, 2014, LECT NOTES COMPUT SC, V8656, P42, DOI 10.1007/978-3-319-10428-7_7
   Perez Morago HJ, 2016, THESIS U NACL EDUCAC
   Perrouin Gilles, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P459, DOI 10.1109/ICST.2010.43
   Pett Tobias, 2021, VaMoS'21: Proceedings of the15th International Working Conference on Variability Modelling of Software-Intensive Systems, DOI 10.1145/3442391.3442410
   Pett T, 2020, SPLC'19: PROCEEDINGS OF THE 23RD INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL A, P78, DOI 10.1145/3336294.3336322
   Plazar Q, 2019, IEEE INT CONF SOFTW, P240, DOI 10.1109/ICST.2019.00032
   Pohl Richard, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P313, DOI 10.1109/ASE.2011.6100068
   RUDELL R, 1993, 1993 IEEE/ACM INTERNATIONAL CONFERENCE ON COMPUTER-AIDED DESIGN - DIGEST OF TECHNICAL PAPERS, P42, DOI 10.1109/ICCAD.1993.580029
   Sang T, 2005, LECT NOTES COMPUT SC, V3569, P226
   Sang Tian., 2004, THEORY APPL SATISFIA
   Schröter R, 2016, PROC INT CONF SOFTW, P667, DOI 10.1145/2884781.2884823
   Segura Sergio., 2008, 1st Workshop on Analyses of Software Product Lines (SPLC'08), P201
   Sharma S, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1169
   Sharma Shubham, 2018, P INT C LOG PROGR AR
   Sheng Chen, 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P35, DOI 10.1109/SPLC.2011.47
   Sobernig S, 2016, EMPIR SOFTW ENG, V21, P1670, DOI 10.1007/s10664-014-9336-6
   Sprey J, 2020, PROCEEDINGS OF THE 14TH INTERNATIONAL WORKING CONFERENCE ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS (VAMOS '20), DOI 10.1145/3377024.3377036
   Sullivan Gail M, 2012, J Grad Med Educ, V4, P279, DOI 10.4300/JGME-D-12-00156.1
   Sundermann C, 2021, PROCEEDINGS OF 15TH INTERNATIONAL WORKING CONFERENCE ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS, VAMOS 2021, DOI 10.1145/3442391.3442404
   Sundermann C, 2020, PROCEEDINGS OF THE 14TH INTERNATIONAL WORKING CONFERENCE ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS (VAMOS '20), DOI 10.1145/3377024.3377025
   Svahnberg M, 1999, J SOFTW MAINT-RES PR, V11, P391, DOI 10.1002/(SICI)1096-908X(199911/12)11:6<391::AID-SMR199>3.0.CO;2-8
   Thum T., 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P191, DOI 10.1109/SPLC.2011.53
   Thurley M, 2006, LECT NOTES COMPUT SC, V4121, P424
   Toda Takahisa, 2016, Journal of Experimental Algorithmics (JEA), V21, P1, DOI DOI 10.1145/2975585
   Valiant L. G., 1979, Theoretical Computer Science, V8, P189, DOI 10.1016/0304-3975(79)90044-6
   Wei W, 2005, LECT NOTES COMPUT SC, V3569, P324
   Xu L, 2008, J ARTIF INTELL RES, V32, P565, DOI 10.1613/jair.2490
   ZAR JH, 1972, J AM STAT ASSOC, V67, P578, DOI 10.2307/2284441
NR 96
TC 1
Z9 1
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2023
VL 28
IS 2
AR 29
DI 10.1007/s10664-022-10265-9
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 7W6JI
UT WOS:000913617500001
OA hybrid
DA 2024-07-18
ER

PT J
AU Ramasamy, D
   Sarasua, C
   Bacchelli, A
   Bernstein, A
AF Ramasamy, Dhivyabharathi
   Sarasua, Cristina
   Bacchelli, Alberto
   Bernstein, Abraham
TI Workflow analysis of data science code in public GitHub repositories
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Data science; Data science workflow; Data science workflow; Workflow
   analysis; Data science life cycle; Source code classification;
   Notebooks; Jupyter notebooks
ID AUTOMATION; MODEL
AB Despite the ubiquity of data science, we are far from rigorously understanding how coding in data science is performed. Even though the scientific literature has hinted at the iterative and explorative nature of data science coding, we need further empirical evidence to understand this practice and its workflows in detail. Such understanding is critical to recognise the needs of data scientists and, for instance, inform tooling support. To obtain a deeper understanding of the iterative and explorative nature of data science coding, we analysed 470 Jupyter notebooks publicly available in GitHub repositories. We focused on the extent to which data scientists transition between different types of data science activities, or steps (such as data preprocessing and modelling), as well as the frequency and co-occurrence of such transitions. For our analysis, we developed a dataset with the help of five data science experts, who manually annotated the data science steps for each code cell within the aforementioned 470 notebooks. Using the first-order Markov chain model, we extracted the transitions and analysed the transition probabilities between the different steps. In addition to providing deeper insights into the implementation practices of data science coding, our results provide evidence that the steps in a data science workflow are indeed iterative and reveal specific patterns. We also evaluated the use of the annotated dataset to train machine-learning classifiers to predict the data science step(s) of a given code cell. We investigate the representativeness of the classification by comparing the workflow analysis applied to (a) the predicted data set and (b) the data set labelled by experts, finding an F1-score of about 71% for the 10-class data science step prediction problem.
C1 [Ramasamy, Dhivyabharathi; Sarasua, Cristina; Bacchelli, Alberto; Bernstein, Abraham] Univ Zurich, Dept Informat, Zurich, Switzerland.
C3 University of Zurich
RP Ramasamy, D (corresponding author), Univ Zurich, Dept Informat, Zurich, Switzerland.
EM ramasamy@ifi.uzh.ch; sarasua@ifi.uzh.ch; bacchelli@ifi.uzh.ch;
   bernstein@ifi.uzh.ch
RI Bacchelli, Alberto/ABG-5379-2020
OI Bacchelli, Alberto/0000-0003-0193-6823; Ramasamy,
   Dhivyabharathi/0009-0002-9056-6907
FU University of Zurich - Swiss National Science Foundation (SNSF) [200020
   184994, 407540 167303, PP00P2 170529]; Swiss National Science Foundation
   (SNF) [200020_184994, 407540_167303] Funding Source: Swiss National
   Science Foundation (SNF)
FX Open access funding provided by University of Zurich. This research work
   was partly funded by the Swiss National Science Foundation (SNSF) under
   contract numbers 200020 184994, 407540 167303 and PP00P2 170529.
CR Aggarwal C, 2019, Arxiv, DOI arXiv:1910.14436
   Altman DG, 1991, PRACTICAL STAT MED R
   [Anonymous], PLATEAU WORKSH EV US
   Aragon C, 2016, PROCEEDINGS OF THE 19TH ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING COMPANION, P529, DOI 10.1145/2818052.2855518
   Bacchelli A, 2012, PROC INT CONF SOFTW, P375, DOI 10.1109/ICSE.2012.6227177
   Barstad V., 2014, NORSK IKT KONFERANSE
   Bennett KP, 2016, P ART INT DAT SCI WO
   Berthold Michael R., 2009, SIGKDD Explor. Newsl., V11, P26, DOI [10.1145/1656274.1656280, DOI 10.1145/1656274.1656280, :10.1145/1656274.1656280]
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Carvalho LAMC etal, 2017, P K CAP, P12
   Carvalho LAMC, 2018, P IEEE INT C E-SCI, P431, DOI 10.1109/eScience.2018.00132
   Chan DKC, 1997, EIGHTH INTERNATIONAL WORKSHOP ON DATABASE AND EXPERT SYSTEMS APPLICATIONS, PROCEEDINGS, P62, DOI 10.1109/DEXA.1997.617237
   Chattopadhyay S, 2020, PROCEEDINGS OF THE 2020 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'20), DOI 10.1145/3313831.3376729
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Colombo A, 2006, J SYST ARCHITECT, V52, P684, DOI 10.1016/j.sysarc.2006.06.012
   Desmond Y, 2020, STRUCTURING JUPYTER
   Dong H, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING WORKSHOPS (ASEW 2021), P114, DOI 10.1109/ASEW52652.2021.00032
   Drori I, 2021, Alphad3m: Machine learning pipeline synthesis
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Garijo D, 2014, FUTURE GENER COMP SY, V36, P338, DOI 10.1016/j.future.2013.09.018
   Garijo Daniel., 2013, P 7 INT C KNOWLEDGE, P33
   Gelman A, 2014, AM SCI, V102, P460, DOI 10.1511/2014.111.460
   Gil Y, 2011, IEEE INTELL SYST, V26, P62, DOI 10.1109/MIS.2010.9
   Head A, 2019, CHI 2019: PROCEEDINGS OF THE 2019 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, DOI 10.1145/3290605.3300500
   Heffetz Y, 2020, KDD '20: PROCEEDINGS OF THE 26TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY & DATA MINING, P2103, DOI 10.1145/3394486.3403261
   Hernández-Orallo J, 2019, AIES '19: PROCEEDINGS OF THE 2019 AAAI/ACM CONFERENCE ON AI, ETHICS, AND SOCIETY, P507, DOI 10.1145/3306618.3314238
   Hofmann M., 2016, RapidMiner: Data Mining Use Cases and Business Analytics Applications
   Hohman F, 2020, PROCEEDINGS OF THE 2020 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'20), DOI 10.1145/3313831.3376177
   Jupyter P, 2015, PROJECT JUPYTER COMP
   Källén M, 2021, Arxiv, DOI arXiv:2007.10146
   Kandel S, 2012, IEEE T VIS COMPUT GR, V18, P2917, DOI 10.1109/TVCG.2012.219
   Keith B, 2016, INT C SOFTW PROC IMP, P47
   Kery MB, 2019, CHI 2019: PROCEEDINGS OF THE 2019 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, DOI 10.1145/3290605.3300322
   Kery MB, 2018, PROCEEDINGS OF THE 2018 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2018), DOI 10.1145/3173574.3173748
   Kery MB, 2017, PROCEEDINGS OF THE 2017 ACM SIGCHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'17), P1265, DOI 10.1145/3025453.3025626
   Kim M, 2016, PROC INT CONF SOFTW, P96, DOI 10.1145/2884781.2884783
   Knab P., 2006, P 2006 INT WORKSHOP, P119
   Koenzen AP, 2020, S VIS LANG HUM CEN C, DOI 10.1109/vl/hcc50065.2020.9127202
   Kramer Jan-Peter, 2013, P SIGCHI C HUM FACT, P3073, DOI [10.1145/2470654.2466419, DOI 10.1145/2470654.2466419]
   Kross S, 2019, CHI 2019: PROCEEDINGS OF THE 2019 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, DOI 10.1145/3290605.3300493
   Kun Peter, 2018, P 32 INT BCS HUMAN C, V32, P1, DOI DOI 10.14236/EWIC/HCI2018.32
   Lee AEL, 2020, Arxiv, DOI arXiv:2005.01520
   Lever J, 2016, NAT METHODS, V13, P703, DOI 10.1038/nmeth.3968
   Liu J, 2015, J GRID COMPUT, V13, P457, DOI 10.1007/s10723-015-9329-8
   Liu JL, 2020, IEEE T VIS COMPUT GR, V26, P66, DOI 10.1109/TVCG.2019.2934593
   McCormick Edward., 2004, Proceedings of the 19th Annual ACM SIGPLAN Conference on Object-Oriented Programming, Systems, Languages, and Applications, OOPSLA 200f, P9
   Meena H.K., 2005, ECLIPSE 05, P85
   Menzies T, 2016, PERSPECTIVES ON DATA SCIENCE FOR SOFTWARE ENGINEERING, P3
   Microsoft, 2020, WHAT IS TEAM DATA SC
   Miller Steven., 2017, Burning Glass Technologies
   Missier P, 2010, LECT NOTES COMPUT SC, V6187, P471, DOI 10.1007/978-3-642-13818-8_33
   MUIR BM, 1994, ERGONOMICS, V37, P1905, DOI 10.1080/00140139408964957
   Muller M, 2019, CHI 2019: PROCEEDINGS OF THE 2019 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, DOI 10.1145/3290605.3300356
   Muller Michael, 2019, Extended Abstracts of the 2019 CHI Conference on Human Factors in Computing Systems, P1
   Neill CJ., 2011, ANTIPATTERNS MANAGIN, DOI [10.1201/b11509, DOI 10.1201/B11509]
   NORMAN DA, 1990, PHILOS T R SOC B, V327, P585, DOI 10.1098/rstb.1990.0101
   O'Neil C., 2013, DOING DATA SCI STRAI
   Olabarriaga SD, 2014, P IEEE INT C E-SCI, P298, DOI 10.1109/eScience.2014.8
   Parasuraman R, 2000, IEEE T SYST MAN CY A, V30, P286, DOI 10.1109/3468.844354
   Park LAF, 2019, LECT NOTES ARTIF INT, V11051, P719, DOI 10.1007/978-3-030-10925-7_44
   Pascarella L, 2019, J SYST SOFTWARE, V150, P22, DOI 10.1016/j.jss.2018.12.001
   Pascarella L, 2017, IEEE WORK CONF MIN S, P227, DOI 10.1109/MSR.2017.63
   Passi Samir, 2018, Proceedings of the ACM on Human-Computer Interaction, V2, DOI 10.1145/3274405
   Patterson E, 2017, IBM J RES DEV, V61, DOI 10.1147/JRD.2017.2736278
   Pellin B. N, 2000, Using Classification Techniques to Determine Source Code Authorship
   Pimentel Joao Felipe, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P507, DOI 10.1109/MSR.2019.00077
   PriceWaterhouseCoopers, 2017, BUSINESS HIGHER ED F
   Rahman F, 2012, EMPIR SOFTW ENG, V17, P503, DOI 10.1007/s10664-011-9195-3
   Robillard MP, 2004, IEEE T SOFTWARE ENG, V30, P889, DOI 10.1109/TSE.2004.101
   Roy J. R., 2007, QUEENS SCH COMPUTING, V541, P64
   Rubin V, 2007, LECT NOTES COMPUT SC, V4470, P169
   Rule A, 2018, PROCEEDINGS OF THE 2018 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2018), DOI 10.1145/3173574.3173606
   Schweinsberg M, 2021, ORGAN BEHAV HUM DEC, V165, P228, DOI 10.1016/j.obhdp.2021.02.003
   Seltzer Margo, 2012, 4 USENIX WORKSH THEO, P7
   Smith B., 2005, PROC 2 INT WORKSHOP, P65
   Souza R, 2020, WORKFLOW PROVENANCE
   Springboard, 2016, DATA SCI PROCESS
   Storey MA, 2009, IEEE T SOFTWARE ENG, V35, P470, DOI 10.1109/TSE.2009.15
   Svyatkovskiy A, 2019, KDD'19: PROCEEDINGS OF THE 25TH ACM SIGKDD INTERNATIONAL CONFERENCCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P2727, DOI 10.1145/3292500.3330699
   Titov S, 2022, EUR CON SFTWR MTNCE, P492, DOI 10.1109/SANER53432.2022.00066
   Trcka N, 2008, COMPUTER SCI REPORT
   Tsoumakas G, 2007, LECT NOTES ARTIF INT, V4701, P406
   UCSD C, 2021, INTR BIG DAT STEPS D
   Ugurel S, 2002, P 8 ACM SIGKDD INT C, P632, DOI DOI 10.1145/775047.775141
   Vassiliadis P., 2009, Proceeding of the ACM Twelfth International Workshop on Data Warehousing and OLAP, P25, DOI DOI 10.1145/1651291.1651297
   Wang D., 2019, P ACM HUMAN COMPUTER, V3, P1, DOI [10.1145/3359313, DOI 10.1145/3359313]
   Wang DK, 2021, Arxiv, DOI arXiv:2101.03970
   Wang J, 2019, BETTER CODE BETTER S
   Wang JW, 2021, PROC INT CONF SOFTW, P1622, DOI 10.1109/ICSE43902.2021.00144
   Watson A., 2019, EDBT ICDT WORKSH
   Yaoli Mao, 2019, Proceedings of the ACM on Human-Computer Interaction, V3, DOI 10.1145/3361118
   Zevin S, 2017, Arxiv, DOI arXiv:1703.07638
   Zhang AX, 2020, DO DATA SCI WORKERS, V2001
   Zhang G, 2020, Arxiv, DOI arXiv:2008.12828
   Zheng NN, 2017, FRONT INFORM TECH EL, V18, P153, DOI 10.1631/FITEE.1700053
NR 95
TC 0
Z9 0
U1 1
U2 10
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN
PY 2023
VL 28
IS 1
AR 7
DI 10.1007/s10664-022-10229-z
PG 47
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 6I4VW
UT WOS:000886127200001
PM 36420321
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Di Gregorio, M
   Di Nucci, D
   Palomba, F
   Vitiello, G
AF Di Gregorio, Marianna
   Di Nucci, Dario
   Palomba, Fabio
   Vitiello, Giuliana
TI The making of accessible Android applications: an empirical study on the
   state of the practice
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Mobile accessibility; Mobile app evolution; Universal design
AB Nowadays, mobile applications represent the principal means to enable human interaction. Being so pervasive, these applications should be made usable for all users: accessibility collects the guidelines that developers should follow to include features allowing users with disabilities (e.g., visual impairments) to better interact with an application. While research in this field is gaining interest, there is still a notable lack of knowledge on how developers practically deal with the problem: (i) whether they are aware and take accessibility guidelines into account when developing apps, (ii) which guidelines are harder for them to implement, and (iii) which tools they use to be supported in this task. To bridge the gap of knowledge on the state of the practice concerning the accessibility of mobile applications, we adopt a mixed-method research approach with a twofold goal. We aim to (i) verify how accessibility guidelines are implemented in mobile applications through a coding strategy and (ii) survey mobile developers on the issues and challenges of dealing with accessibility in practice. The key results of the study show that most accessibility guidelines are ignored when developing mobile apps. This behavior is mainly due to the lack of developers' awareness of accessibility concerns and the lack of tools to support them during the development.
C1 [Di Gregorio, Marianna; Di Nucci, Dario; Palomba, Fabio; Vitiello, Giuliana] Univ Salerno, Fisciano, Italy.
C3 University of Salerno
RP Di Gregorio, M (corresponding author), Univ Salerno, Fisciano, Italy.
EM madigregorio@unisa.it; ddinucci@unisa.it; fpalomba@unisa.it;
   gvitiello@unisa.it
RI Vitiello, Giuliana/AAU-9132-2020; Di Nucci, Dario/Y-9679-2019
OI Vitiello, Giuliana/0000-0001-7130-996X; Di Nucci,
   Dario/0000-0002-3861-1902; Palomba, Fabio/0000-0001-9337-5116
FU Universita degli Studi di Salerno within the CRUI-CARE Agreement
FX Open access funding provided by Universita degli Studi di Salerno within
   the CRUI-CARE Agreement.
CR Al-Subaihin Afnan A., 2013, International Conference on Mobile Web and Information Systems, P35
   Alshayban A, 2020, PROC INT CONF SOFTW, P1323, DOI 10.1145/3377811.3380392
   Android, 2021, ACC DEV GUID
   [Anonymous], 2014, STATISTA
   [Anonymous], 2021, BBC
   Apple, 2021, Accessibility developer guideline
   Araújo MCC, 2017, LECT NOTES COMPUT SC, V10278, P242, DOI 10.1007/978-3-319-58703-5_18
   Armaly A, 2018, PROC IEEE INT CONF S, P206, DOI 10.1109/ICSME.2018.00030
   Armaly A, 2018, IEEE T SOFTWARE ENG, V44, P712, DOI 10.1109/TSE.2017.2729548
   Armaly A, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P683, DOI 10.1145/2889160.2891041
   Ballantyne M, 2018, 17TH INTERNATIONAL CONFERENCE ON MOBILE AND UBIQUITOUS MULTIMEDIA (MUM 2018), P305, DOI 10.1145/3282894.3282921
   CRESWEL J., 2009, Research Design, Qualitative, Quantitative and mixed Approaches
   Darvishy A, 2014, LECT NOTES COMPUT SC, V8520, P133, DOI 10.1007/978-3-319-07638-6_14
   de Almeida V L, 2021 IEEE ACM 13 INT, P127
   Di Gregorio M, 2021, MAKING ACCESSIBLE AN
   Di Gregorio M, 2020, PROC IEEE INT CONF S, P857, DOI 10.1109/ICSME46990.2020.00112
   Diaz-Bossini Jose-Manuel, 2014, Universal Access in Human-Computer Interaction. Aging and Assistive Environments. 8th International Conference, UAHCI 2014, Held as Part of HCI International 2014. Proceedings: LNCS 8515, P58, DOI 10.1007/978-3-319-07446-7_6
   Díaz-Bossini JM, 2014, PROCEDIA COMPUT SCI, V27, P57, DOI 10.1016/j.procs.2014.02.008
   Eler MM, 2019, PROCEEDINGS OF THE 18TH BRAZILIAN SYMPOSIUM ON HUMAN FACTORS IN COMPUTING SYSTEMS (IHC 2019), DOI 10.1145/3357155.3358477
   Flatla D R, 2011, P 24 ANN ACM S ADJ U, P31
   Friedmen M.G., 2007, Technology and Disability, V19, P205, DOI [DOI 10.3233/TAD-2007-19406, 10.3233/tad-2007-19406]
   Geiger FX, 2018, IEEE WORK CONF MIN S, P30, DOI 10.1145/3196398.3196460
   Harper S, 2012, WORLD WIDE WEB, V15, P61, DOI 10.1007/s11280-011-0130-8
   Harper S, 2008, HUM-COMPUT INT-SPRIN, P61, DOI 10.1007/978-1-84800-050-6_6
   IBM, 2020, IBM MAN IBM SPSS STA
   Ichioka S, 2020, LECT NOTES COMPUT SC, V12583, P101, DOI 10.1007/978-3-030-65299-9_8
   Iwarsson S, 2003, DISABIL REHABIL, V25, P57, DOI 10.1080/0963828021000007969
   Jia L, 2021, 2021 CHI C HUMAN FAC, P1
   Kocielinski D, 2013, FED CONF COMPUT SCI, P655
   Krainz E, 2018, LECT NOTES COMPUT SC, V10896, P64, DOI 10.1007/978-3-319-94277-3_12
   Kruchten P, 2012, IEEE SOFTWARE, V29, P18, DOI 10.1109/MS.2012.167
   Lawrence S., 2000, Intelligence, V11, P32, DOI 10.1145/333175.333181
   Leporini B., 2012, P 24 AUSTR COMPUTER, P339
   Martin W, 2017, IEEE T SOFTWARE ENG, V43, P817, DOI 10.1109/TSE.2016.2630689
   McMillan C, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P360, DOI 10.1145/2889160.2889188
   Mehta Y, 2016, PROCEEDINGS OF THE 8TH INDIAN CONFERENCE ON HUMAN COMPUTER INTERACTION (INDIA HCI 2016), P64, DOI 10.1145/3014362.3014368
   Milne Lauren R, 2014, INT TECHN PERS DIS C, P166
   Paciello M.G., 2000, WEB ACCESSIBILITY PE
   Park K., 2014, Proceedings of HCI Korea (Seoul, KOR), HCIK'15, P31
   Patil N, 2016, 2016 INTERNATIONAL CONFERENCE ON AUTOMATIC CONTROL AND DYNAMIC OPTIMIZATION TECHNIQUES (ICACDOT), P977, DOI 10.1109/ICACDOT.2016.7877733
   Quispe FEM, 2020, PROCEEDINGS OF THE 22ND INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS (ICEIS), VOL 2, P563, DOI 10.5220/0009393405630570
   Ross AS, 2020, ACM T ACCESS COMPUT, V13, DOI 10.1145/3348797
   Ross AS, 2018, ASSETS'18: PROCEEDINGS OF THE 20TH INTERNATIONAL ACM SIGACCESS CONFERENCE ON COMPUTERS AND ACCESSIBILITY, P119, DOI 10.1145/3234695.3236364
   Rossi P.H., 2013, Handbook of survey research
   Rutter R., 2007, Web accessibility: Web standards and regulatory compliance: Apress
   Serra LC, 2015, PROCEDIA COMPUT SCI, V67, P348, DOI 10.1016/j.procs.2015.09.279
   Sevilla J, 2007, ACM T COMPUT-HUM INT, V14, DOI 10.1145/1279700.1279702
   Sierkowski B., 2002, SIGUCCS 2002 Conference Proceedings. Charting Bold Courses: New Worlds in User Services, P288
   Sloan D., 2006, P 2006 INT CROSS DIS, P121, DOI DOI 10.1145/1133219.1133242
   Topp L, 2004, DRUG ALCOHOL DEPEN, V73, P33, DOI 10.1016/j.drugalcdep.2003.09.001
   Turkle S., 2011, EVOCATIVE OBJECTS TH
   Vassallo C, 2020, EMPIR SOFTW ENG, V25, P1419, DOI 10.1007/s10664-019-09750-5
   Vaughn P, 2016, J LIBR ADM, V56, P41, DOI 10.1080/01930826.2015.1105035
   Vendome C, 2019, PROC IEEE INT CONF S, P41, DOI 10.1109/ICSME.2019.00014
   Vitiello G, 2018, GOODTECHS '18: PROCEEDINGS OF THE 4TH EAI INTERNATIONAL CONFERENCE ON SMART OBJECTS AND TECHNOLOGIES FOR SOCIAL GOOD (GOODTECHS), P249, DOI 10.1145/3284869.3284908
   W3C, 2020, MOBILE ACCESSIBILITY
   Walker BN, 2017, LECT NOTES COMPUT SC, V10277, P113, DOI 10.1007/978-3-319-58706-6_9
   Waller A, 2009, ASSETS'09: PROCEEDINGS OF THE 11TH INTERNATIONAL ACM SIGACCESS CONFERENCE ON COMPUTERS AND ACCESSIBILITY, P155
   Wasserman A.I., 2010, Proceedings of the FSE/SDP Workshop on Future of Software Engineering Research, P397, DOI [DOI 10.1145/1882362.1882443, 10.1145/1882362.1882443]
   Wentz B., 2017, First Monday, V22, DOI DOI 10.5210/FM.V22I3.7036
   Xie ZH, 2015, 2015 International Conference on Computer and Computational Sciences (ICCCS), P110, DOI 10.1109/ICCACS.2015.7361333
   Yan SG, 2019, ACM T ACCESS COMPUT, V12, DOI 10.1145/3300176
   Zhong Yu., 2015, P 12 INT WEB ALL C F, P1, DOI [DOI 10.1145/2745555.2747277, 10.1145/2745555.2747277]
NR 63
TC 5
Z9 5
U1 2
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2022
VL 27
IS 6
AR 145
DI 10.1007/s10664-022-10182-x
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 3O4IB
UT WOS:000836798500005
PM 35949521
OA hybrid, Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Even-Mendoza, K
   Cadar, C
   Donaldson, AF
AF Even-Mendoza, Karine
   Cadar, Cristian
   Donaldson, Alastair F.
TI CsmithEdge: more effective compiler testing by handling undefined
   behaviour less conservatively
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Compilers; Fuzzing; Csmith; GCC; LLVM; MSVC
ID AUTOMATIC-GENERATION; BUGS
AB Compiler fuzzing techniques require a means of generating programs that are free from undefined behaviour (UB) to reliably reveal miscompilation bugs. Existing program generators such as Csmith achieve UB-freedom by heavily restricting the form of generated programs. The idiomatic nature of the resulting programs risks limiting the test coverage they can offer, and thus the compiler bugs they can discover. We investigate the idea of adapting existing fuzzers to be less restrictive concerning UB, in the practical setting of C compiler testing via a new tool, CsmithEdge, which extends Csmith. CsmithEdge probabilistically weakens the constraints used to enforce UB-freedom, thus generated programs are no longer guaranteed to be UB-free. It then employs several off-the-shelf UB detection tools and a novel dynamic analysis to (a) detect cases where the generated program exhibits UB and (b) determine where Csmith has been too conservative in its use of safe math wrappers that guarantee UB-freedom for arithmetic operations, removing the use of redundant ones. The resulting UB-free programs can be used to test for miscompilation bugs via differential testing. The non-UB-free programs can still be used to check that the compiler under test does not crash or hang. Our experiments on recent versions of GCC, LLVM and the Microsoft Visual Studio Compiler show that CsmithEdge was able to discover 7 previously unknown miscompilation bugs (5 already fixed in response to our reports) that could not be found via intensive testing using Csmith, and 2 compiler-hang bugs that were fixed independently shortly before we considered reporting them.
C1 [Even-Mendoza, Karine; Cadar, Cristian; Donaldson, Alastair F.] Imperial Coll London, Dept Comp, London, England.
C3 Imperial College London
RP Even-Mendoza, K (corresponding author), Imperial Coll London, Dept Comp, London, England.
EM k.even-mendoza@imperial.ac.uk; c.cadar@imperial.ac.uk;
   alastair.donaldson@imperial.ac.uk
RI Even-Mendoza, Karine/HDL-7182-2022
OI Even-Mendoza, Karine/0000-0002-3099-1189; Cadar,
   Cristian/0000-0002-3599-7264
FU UK Engineering and Physical Sciences Research Council [EP/R011605/1,
   EP/R006865/1]; European Research Council under the European Union
   [819141]; EPSRC [EP/R011605/1, EP/R006865/1] Funding Source: UKRI;
   European Research Council (ERC) [819141] Funding Source: European
   Research Council (ERC)
FX This project has received funding from the UK Engineering and Physical
   Sciences Research Council through grants EP/R011605/1 and EP/R006865/1,
   and from the European Research Council under the European Union's
   Horizon 2020 research and innovation program (grant agreement 819141).
CR [Anonymous], 2012, ADDRESS SANITIZER
   [Anonymous], 2017, UNDEFINED BEHAV SANI
   [Anonymous], 1999, 98991999 ISOIEC
   [Anonymous], 2015, MEMORY SANITIZER
   [Anonymous], 2020, BUG 96549
   [Anonymous], BUGZILLA GCC 2020C B
   [Anonymous], 1962, P SPRING JOINT COMP, DOI DOI 10.1145/1460833.1460869
   [Anonymous], 2022, CSMITHEDGE HOMEPAGE
   [Anonymous], 2007, FRAMA C EVA PLUGIN
   Barr ET, 2015, IEEE T SOFTWARE ENG, V41, P507, DOI 10.1109/TSE.2014.2372785
   Bugzilla GCC, 2020, BUG 94809
   Bugzilla GCC, 2020, BUG 93744
   Bugzilla GCC, 2020, BUG 96760
   Bugzilla LLVM, 2020, BUG 47578
   Burgess CJ, 1996, INFORM SOFTWARE TECH, V38, P111, DOI 10.1016/0950-5849(95)01055-6
   Chen JJ, 2020, ACM COMPUT SURV, V53, DOI 10.1145/3363562
   Chen JJ, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P305, DOI 10.1109/ASE.2019.00037
   Chen JJ, 2016, PROC INT CONF SOFTW, P180, DOI 10.1145/2884781.2884878
   Chen T. Y., 1998, Technical Report hkust-cs98-01
   Csmith Homepage, 2021, CSMITH HOMEPAGE
   Cuoq Pascal, 2012, NASA Formal Methods. Proceedings of the 4th International Symposium, NFM 2012, P120, DOI 10.1007/978-3-642-28891-3_12
   Cuoq P, 2012, PROC 10 INT C SOFTWA
   Donaldson AF, 2021, PROC C PROGRAMING LA
   Donaldson AF, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133917
   Even-Mendoza Karine, 2020, 2020 35th IEEE/ACM International Conference on Automated Software Engineering (ASE), P1219, DOI 10.1145/3324884.3418933
   FAO, 2019, ON YEAR CLOS 5 MILL
   GitHub, 2021, CSMITHEDGE REP
   GitHub, 2018, GIT REP GFAUT
   GitHub, 2011, GIT REP CSMITH
   GitHub, 2020, CSMITH PULL REQ 86
   GitHub, 2021, CSMITHEDGE BUGS DET
   Groce A., 2012, P INT S SOFTW TEST A, P78, DOI DOI 10.1145/2338965.2336763
   Groce A, 2007, PROC INT CONF SOFTW, P621
   HANFORD KV, 1970, IBM SYST J, V9, P242, DOI 10.1147/sj.94.0242
   Kivela M., 2018, PYMNET GITHUB REPOSI
   Klees G, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P2123, DOI 10.1145/3243734.3243804
   Le V, 2015, ACM SIGPLAN NOTICES, V50, P386, DOI [10.1145/2814270.2814319, 10.1145/2858965.2814319]
   Leroy X, 2009, COMMUN ACM, V52, P107, DOI 10.1145/1538788.1538814
   Lidbury C, 2015, ACM SIGPLAN NOTICES, V50, P65, DOI [10.1145/2737924.2737986, 10.1145/2813885.2737986]
   Livinskii V, 2020, P ACM PROGRAM LANG, V4, DOI 10.1145/3428264
   Marcozzi M, 2019, PROC ACM PROGRAMMING
   McKeeman William M., 1998, DIGIT TECH J, V10, P100
   Nagai E, 2014, IPSJ T SYSTEM LSI DE, V7, P91, DOI DOI 10.2197/IPSJTSLDM.7.91
   Nakamura K, 2016, 2016 IEEE ASIA PACIFIC CONFERENCE ON CIRCUITS AND SYSTEMS (APCCAS), P676, DOI 10.1109/APCCAS.2016.7804063
   Regehr J., 2019, COMMENT RUNNING ONE
   Regehr J, 2012, ACM SIGPLAN NOTICES, V47, P335, DOI 10.1145/2345156.2254104
   Segura S, 2016, IEEE T SOFTWARE ENG, V42, P805, DOI 10.1109/TSE.2016.2532875
   Serebryany K., 2012, 2012 USENIX ANN TECH
   Stepanov E, 2015, INT SYM CODE GENER, P46, DOI 10.1109/CGO.2015.7054186
   Sun CN, 2016, ACM SIGPLAN NOTICES, V51, P849, DOI 10.1145/3022671.2984038
   Visual Studio Developer Community, 2021, BUG 1485361 MSVC MIS
   Le V, 2014, ACM SIGPLAN NOTICES, V49, P216, DOI [10.1145/2666356.2594334, 10.1145/2594291.2594334]
   Wang X, 2013, SOSP'13: PROCEEDINGS OF THE TWENTY-FOURTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P260, DOI 10.1145/2517349.2522728
   Yang XJ, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P283
NR 54
TC 6
Z9 6
U1 2
U2 7
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2022
VL 27
IS 6
AR 129
DI 10.1007/s10664-022-10146-1
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 2T3AL
UT WOS:000822348600002
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Maes-Bermejo, M
   Gallego, M
   Gortázar, F
   Robles, G
   Gonzalez-Barahona, JM
AF Maes-Bermejo, Michel
   Gallego, Micael
   Gortazar, Francisco
   Robles, Gregorio
   Gonzalez-Barahona, Jesus M.
TI Revisiting the building of past snapshots - a replication and
   reproduction study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Compilability; Buildability; Build failures; Software reconstruction;
   Software builds; Software maintenance; Software evolution
AB Context Building past source code snapshots of a software product is necessary both for research (analyzing the past state of a program) and industry (increasing trustability by reproducibility of past versions, finding bugs by bisecting, backporting bug fixes, among others). A study by Tufano et al. showed in 2016 that many past snapshots cannot be built. Objective We replicate Tufano et al.'s study in 2020, to verify its results and to study what has changed during this time in terms of compilability of a project. Also, we extend it by studying a different set of projects, using additional techniques for building past snapshots, with the aim of extending the validity of its results. Method (i) Replication of the original study, obtaining past snapshots from 79 repositories (with a total of 139,389 commits); and (ii) Reproduction of the original study on a different set of 80 large Java projects, extending the heuristics for building snapshots (300,873 commits). Results We observed degradation of compilability over time, due to vanishing of dependencies and other external artifacts. We validated that the most influential error causing failures in builds are missing external artifacts, and the less influential is compiling errors. We observed some facts that could lead to the effect of the build tool on past compilability. Conclusions We provide details on what aspects have a strong and a shallow influence on past compilability, giving ideas of how to improve it. We could extend previous research on the matter, but could not validate some of the previous results. We offer recommendations on how to make this kind of studies more replicable.
C1 [Maes-Bermejo, Michel; Gallego, Micael; Gortazar, Francisco] Univ Rey Juan Carlos, Dept Comp Sci, Mostoles, Spain.
   [Robles, Gregorio; Gonzalez-Barahona, Jesus M.] Univ Rey Juan Carlos, Dept Signal Theory & Commun & Telemat Syst & Comp, Madrid, Spain.
C3 Universidad Rey Juan Carlos; Universidad Rey Juan Carlos
RP Robles, G (corresponding author), Univ Rey Juan Carlos, Dept Signal Theory & Commun & Telemat Syst & Comp, Madrid, Spain.
EM michel.maes@urjc.es; micael.gallego@urjc.es; francisco.gortazar@urjc.es;
   gregorio.robles@urjc.es; jesus.gonzalez.barahona@urjc.es
RI Robles, Gregorio/I-2507-2012; Bermejo, Michel Maes/AEO-7928-2022;
   Gortázar, Francisco/H-8219-2015; Gonzalez-Barahona, Jesus M./L-5646-2017
OI Robles, Gregorio/0000-0002-1442-6761; Bermejo, Michel
   Maes/0000-0002-8138-9702; Gortázar, Francisco/0000-0002-2183-0869;
   Gonzalez-Barahona, Jesus M./0000-0001-9682-460X; Gallego,
   Micael/0000-0002-2875-7342
FU CRUE-CSIC agreement; Springer Nature
FX Open Access funding provided thanks to the CRUE-CSIC agreement with
   Springer Nature.
CR [Anonymous], 2017, REPRODUCIBLE BUILDS
   [Anonymous], 2018, REPRODUCIBLE BUILDS
   Asaduzzaman M., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P116, DOI 10.1109/MSR.2012.6224267
   Bavota G, 2015, EMPIR SOFTW ENG, V20, P1275, DOI 10.1007/s10664-014-9325-9
   CARTWRIGHT N, 1991, HIST POLIT ECON, V23, P143, DOI 10.1215/00182702-23-1-143
   Cito J, 2017, IEEE WORK CONF MIN S, P323, DOI 10.1109/MSR.2017.67
   de Carnavalet Xavierde Carne., 2014, Proceedings of the 30th Annual Computer Security Applications Conference, P16, DOI [10.1145/2664243.2664288, DOI 10.1145/2664243.2664288]
   Di Cosmo R, 2018, PROC INT CONF SOFTW, P2
   Di Cosmo Roberto, 2017, SOFTWARE HERITAGE WH
   Glukhova M, 2017, THESIS LAPPEENRANTA
   Hassan F, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1078, DOI 10.1145/3180155.3180181
   Hassan F, 2017, INT SYMP EMP SOFTWAR, P38, DOI 10.1109/ESEM.2017.11
   Juristo N, 2012, LECT NOTES COMPUT SC, V7007, P60
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Just R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P654, DOI 10.1145/2635868.2635929
   Kalliamvakou E, 2016, EMPIR SOFTW ENG, V21, P2035, DOI 10.1007/s10664-015-9393-5
   Macho C, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P106, DOI 10.1109/SANER.2018.8330201
   Manacero A, 2011, USING BINARY CODE BU
   Maudoux G, 2018, IEEE SOFTWARE, V35, P32, DOI 10.1109/MS.2018.111095025
   Meneely Andrew, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P65, DOI 10.1109/ESEM.2013.19
   Murgia A, 2010, P 2010 ACM IEEE INT, DOI [10.1145/1852786.1852794, DOI 10.1145/1852786.1852794]
   Nikitin K, 2017, PROCEEDINGS OF THE 26TH USENIX SECURITY SYMPOSIUM (USENIX SECURITY '17), P1271
   Perry Mike, 2014, CHAOS COMM C
   Raemaekers S, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P378, DOI 10.1109/ICSM.2012.6405296
   Rausch T, 2017, IEEE WORK CONF MIN S, P345, DOI 10.1109/MSR.2017.54
   Ren ZL, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P71, DOI 10.1145/3180155.3180224
   Seo H, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P724, DOI 10.1145/2568225.2568255
   Skrimstad Y, 2018, THESIS U OSLO
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Spinellis D, 2012, IEEE SOFTWARE, V29, P100, DOI 10.1109/MS.2012.61
   Sulir M, 2016, PLATEAU'16: PROCEEDINGS OF THE 7TH INTERNATIONAL WORKSHOP ON EVALUATION AND USABILITY OF PROGRAMMING LANGUAGES AND TOOLS, P17, DOI 10.1145/3001878.3001882
   Tian Y, 2017, THESIS SINGAPORE MAN
   Tufano M, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1838
   Vassallo C, 2020, EMPIR SOFTW ENG, V25, P2218, DOI 10.1007/s10664-019-09765-y
   Zimmermann T., 2006, P 2006 INT WORKSHOP, P72, DOI DOI 10.1145/1137983.1138001
   Zimmermann T., 2008, PREDICTING BUGS HIST, P69, DOI [10.1007/978-3-540-76440-3_4, DOI 10.1007/978-3-540-76440-3_4]
NR 36
TC 5
Z9 5
U1 0
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAY
PY 2022
VL 27
IS 3
AR 65
DI 10.1007/s10664-022-10117-6
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZV2BV
UT WOS:000770339500009
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Perera, A
   Aleti, A
   Tantithamthavorn, C
   Jiarpakdee, J
   Turhan, B
   Kuhn, L
   Walker, K
AF Perera, Anjana
   Aleti, Aldeida
   Tantithamthavorn, Chakkrit
   Jiarpakdee, Jirayus
   Turhan, Burak
   Kuhn, Lisa
   Walker, Katie
TI Search-based fairness testing for regression-based machine learning
   systems
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Fairness testing; Software testing; Search-based software testing;
   Software fairness; Machine learning; Bias
ID EMERGENCY-DEPARTMENT; DISEASE; STATE; TIME; BIAS
AB Context Machine learning (ML) software systems are permeating many aspects of our life, such as healthcare, transportation, banking, and recruitment. These systems are trained with data that is often biased, resulting in biased behaviour. To address this issue, fairness testing approaches have been proposed to test ML systems for fairness, which predominantly focus on assessing classification-based ML systems. These methods are not applicable to regression-based systems, for example, they do not quantify the magnitude of the disparity in predicted outcomes, which we identify as important in the context of regression-based ML systems. Method: We conduct this study as design science research. We identify the problem instance in the context of emergency department (ED) wait-time prediction. In this paper, we develop an effective and efficient fairness testing approach to evaluate the fairness of regression-based ML systems. We propose fairness degree, which is a new fairness measure for regression-based ML systems, and a novel search-based fairness testing (SBFT) approach for testing regression-based machine learning systems. We apply the proposed solutions to ED wait-time prediction software. Results: We experimentally evaluate the effectiveness and efficiency of the proposed approach with ML systems trained on real observational data from the healthcare domain. We demonstrate that SBFT significantly outperforms existing fairness testing approaches, with up to 111% and 190% increase in effectiveness and efficiency of SBFT compared to the best performing existing approaches. Conclusion: These findings indicate that our novel fairness measure and the new approach for fairness testing of regression-based ML systems can identify the degree of fairness in predictions, which can help software teams to make data-informed decisions about whether such software systems are ready to deploy. The scientific knowledge gained from our work can be phrased as a technological rule; to measure the fairness of the regression-based ML systems in the context of emergency department wait-time prediction use fairness degree and search-based techniques to approximate it.
C1 [Perera, Anjana; Aleti, Aldeida; Tantithamthavorn, Chakkrit; Jiarpakdee, Jirayus] Monash Univ, Fac Informat Technol, Melbourne, Vic, Australia.
   [Turhan, Burak] Univ Oulu, Fac Informat Technol & Elect Engn, Oulu, Finland.
   [Kuhn, Lisa; Walker, Katie] Monash Univ, Fac Med Nursing & Hlth Sci, Melbourne, Vic, Australia.
C3 Monash University; University of Oulu; Monash University
RP Perera, A (corresponding author), Monash Univ, Fac Informat Technol, Melbourne, Vic, Australia.; Turhan, B (corresponding author), Univ Oulu, Fac Informat Technol & Elect Engn, Oulu, Finland.
EM Anjana.Perera@monash.edu; Aldeida.Aleti@monash.edu; Chakkrit@monash.edu;
   Jirayus.Jiarpakdee@monash.edu; burak.turhan@oulu.fi;
   Lisa.Kuhn@monash.edu; Katie.Walker@monash.edu
RI Walker, Katie/L-8581-2018; Perera, Anjana/GYA-3893-2022; Aleti,
   Aldeida/AAE-8486-2019; Turhan, Burak/G-7400-2011
OI Walker, Katie/0000-0002-5313-5852; Aleti, Aldeida/0000-0002-1716-690X;
   Turhan, Burak/0000-0003-1511-2163; Perera, Anjana/0000-0002-5080-9276
FU University of Oulu; Australian government; Australian Research Council's
   Discovery Early Career Researcher Award (DECRA) funding scheme
   [DE200100941]; Oulu University Hospital
FX Open Access funding provided by University of Oulu including Oulu
   University Hospital. The Australian government, Medical Research Future
   Fund, via Monash Partners, funded this study. Researchers contributed
   in-kind donations of time. The Cabrini Institute and Monash University
   provided research infrastructure support. Chakkrit Tantithamthavorn was
   partially supported by the Australian Research Council's Discovery Early
   Career Researcher Award (DECRA) funding scheme (DE200100941).
CR Aggarwal A, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P625, DOI 10.1145/3338906.3338937
   Alshahwan N, 2018, LECT NOTES COMPUT SC, V11036, P3, DOI 10.1007/978-3-319-99241-9_1
   Angwin Julia, 2016, ProPublica
   [Anonymous], 2016, LANCET, V387, P506, DOI 10.1016/S0140-6736(16)00267-1
   [Anonymous], 2018, P 1 C FAIRNESS ACCOU, V81, P149
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Barocas S., 2018, Fairness and Machine Learning
   Bellamy RKE, 2019, IBM J RES DEV, V63, DOI 10.1147/JRD.2019.2942287
   Bendick M., 2007, SITUATION TESTING EM
   Berk Richard, 2017, A convex framework for fair regression
   Bishop PG, 2002, 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P295, DOI 10.1109/ISSRE.2002.1173274
   Biswas S., 2020, ARXIV 200512379
   Calmon FP, 2017, ADV NEUR IN, V30
   Caton S., 2020, FAIRNESS MACHINE LEA
   Chakraborty J, 2021, ARXIV 210512195
   Chakraborty J, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P654, DOI 10.1145/3368089.3409697
   Chiappa S, 2019, AAAI CONF ARTIF INTE, P7801
   Chouldechova A., 2018, P 1 C FAIRNESS ACCOU, P134
   Corbett-Davies S, 2017, KDD'17: PROCEEDINGS OF THE 23RD ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P797, DOI 10.1145/3097983.3098095
   Corbett-Davies Sam, 2018, ARXIV 180800023
   Cortellessa V, 2005, IEEE T SOFTWARE ENG, V31, P3, DOI 10.1109/TSE.2005.12
   Del Grosso C, 2005, GECCO 2005: Genetic and Evolutionary Computation Conference, Vols 1 and 2, P1037
   Di Somma S, 2015, INTERN EMERG MED, V10, P171, DOI 10.1007/s11739-014-1154-8
   Dieterich W., 2016, Northpointe Inc, V7, P1
   Dwork C., 2012, P 3 INNOVATIONS THEO, P214
   Feldman M, 2015, KDD'15: PROCEEDINGS OF THE 21ST ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P259, DOI 10.1145/2783258.2783311
   Ferral K., WISCONSIN SUPREME CO
   Fraser G, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P362, DOI 10.1109/ICST.2013.51
   Friedman B, 1996, ACM T INFORM SYST, V14, P330, DOI 10.1145/230538.230561
   Galhotra S, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P498, DOI 10.1145/3106237.3106277
   Ghaffary S., 2019, ALGORITHMS DETECT HA
   Grgic-Hlaca N., 2016, NIPS S MACH LEARN LA, V1, P2
   Hardawar D., 2012, STAPLES HOME DEPOT O
   Hardt M, 2016, ADV NEUR IN, V29
   Hern A. ., 2020, Twitter apologises for 'racist' image-cropping algorithm
   Horkoff J, 2019, INT REQUIR ENG CONF, P386, DOI 10.1109/RE.2019.00050
   Ingold David., 2016, Bloomberg News
   Johnson B, 2020, ARXIV 201209951
   Juergens CP, 2016, MED J AUSTRALIA, V204, DOI 10.5694/mja15.00812
   Kamiran F, 2012, KNOWL INF SYST, V33, P1, DOI 10.1007/s10115-011-0463-8
   Kamishima T., 2011, 2011 IEEE International Conference on Data Mining Workshops, P643, DOI 10.1109/ICDMW.2011.83
   Klare BF, 2012, IEEE T INF FOREN SEC, V7, P1789, DOI 10.1109/TIFS.2012.2214212
   Lakhotia K, 2013, INFORM SOFTWARE TECH, V55, P112, DOI 10.1016/j.infsof.2012.03.009
   Ledford H, 2019, NATURE, V574, P608, DOI 10.1038/d41586-019-03228-6
   López-Ibáñez M, 2016, OPER RES PERSPECT, V3, P43, DOI 10.1016/j.orp.2016.09.002
   Mahdawi A., 2018, IS YOUR FRIEND GETTI
   Mao K., 2016, P 25 INT S SOFTW TES, P94
   Mattioli D., 2012, ORBITZ MAC USERS STE
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   McSweeney JC, 2016, CIRCULATION, V133, P1302, DOI 10.1161/CIR.0000000000000381
   Mehrabi N, 2021, ACM COMPUT SURV, V54, DOI 10.1145/3457607
   Merz CNB, 2017, J AM COLL CARDIOL, V70, P123, DOI 10.1016/j.jacc.2017.05.024
   Mullainathan S., 2019, BIASED ALGORITHMS AR
   Olson P., 2011, CNN Money
   Panichella A, 2018, INFORM SOFTWARE TECH, V104, P236, DOI 10.1016/j.infsof.2018.08.009
   Panichella A, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL SYMPOSIUM ON SOFTWARE AND SYSTEMS TRACEABILITY, P15, DOI 10.1109/SST.2015.10
   Perera A, 2020, IEEE INT CONF AUTOM, P448, DOI 10.1145/3324884.3416612
   Puschner P, 2000, REAL-TIME SYST, V18, P115, DOI 10.1023/A:1008119029962
   RAMAMOORTHY CV, 1980, IEEE T SOFTWARE ENG, V6, P440, DOI 10.1109/TSE.1980.230492
   Ribeiro MT, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1135, DOI 10.1145/2939672.2939778
   Runeson Per, 2020, Contemporary Empirical Methods in Software Engineering, P127, DOI [DOI 10.1007/978-3-030-32489-6_5, DOI 10.1007/978-3-030-32489-65]
   Selbst AD, 2019, FAT*'19: PROCEEDINGS OF THE 2019 CONFERENCE ON FAIRNESS, ACCOUNTABILITY, AND TRANSPARENCY, P59, DOI 10.1145/3287560.3287598
   Shah S., 2015, Patient Experience Journal, V2, P31, DOI [10.35680/2372-0247.1090, DOI 10.35680/2372-0247.1090]
   Sharkey A., 2020, CARE ROBOTS ELDERLY
   Sharma A, 2019, IEEE INT CONF SOFTW, P125, DOI 10.1109/ICST.2019.00022
   Siegel RB, 2004, HARVARD LAW REV, V117, P1470, DOI 10.2307/4093259
   Soremekun OA, 2011, J EMERG MED, V41, P686, DOI 10.1016/j.jemermed.2011.01.018
   Stehli J, 2021, HEART LUNG CIRC, V30, P18, DOI 10.1016/j.hlc.2020.06.025
   Strickland E, 2016, IEEE SPECTRUM, V53, P32, DOI 10.1109/MSPEC.2016.7473150
   Strobel S, 2021, ANN EMERG MED
   Sun J, 2017, BMC PUBLIC HEALTH, V17, DOI 10.1186/s12889-017-4667-z
   Tatman R, 2017, P 1 ACL WORKSH ETH N, P53, DOI [DOI 10.18653/V1/W17-1606, 10.18653/v1/w17-1606, 10.18653/v1/W17-1606]
   Thanh Binh Luong, 2011, P 17 ACM SIGKDD INT, P502
   Tramèr F, 2017, 2017 IEEE EUROPEAN SYMPOSIUM ON SECURITY AND PRIVACY (EUROS&P), P401, DOI 10.1109/EuroSP.2017.29
   Udell JA, 2018, CLIN CARDIOL, V41, P758, DOI 10.1002/clc.22938
   Udeshi S, 2018, IEEE INT CONF AUTOM, P98, DOI 10.1145/3238147.3238165
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Vogel B, 2021, LANCET, V397, P2385, DOI 10.1016/S0140-6736(21)00684-X
   Walker K, 2020, EMERG MED AUSTRALAS
   Walker K, 2022, EMERG MED J, V39, P386, DOI 10.1136/emermed-2020-211000
   Wechkunanukul K, 2016, INT J CARDIOL, V220, P901, DOI 10.1016/j.ijcard.2016.06.244
   Wegener J, 2004, LECT NOTES COMPUT SC, V3103, P1400
   Zhang BH, 2018, PROCEEDINGS OF THE 2018 AAAI/ACM CONFERENCE ON AI, ETHICS, AND SOCIETY (AIES'18), P335, DOI 10.1145/3278721.3278779
   Zhang JM, 2021, PROC INT CONF SOFTW, P1436, DOI 10.1109/ICSE43902.2021.00129
   Zhang JM, 2022, IEEE T SOFTWARE ENG, V48, P1, DOI 10.1109/TSE.2019.2962027
   Zhang L, 2016, SITUATION TESTING BA
   Zhang PX, 2020, PROC INT CONF SOFTW, P949, DOI 10.1145/3377811.3380331
NR 87
TC 10
Z9 11
U1 4
U2 13
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAY
PY 2022
VL 27
IS 3
AR 79
DI 10.1007/s10664-022-10116-7
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0D8GR
UT WOS:000776227600001
OA hybrid
DA 2024-07-18
ER

PT J
AU Laaber, C
   Basmaci, M
   Salza, P
AF Laaber, Christoph
   Basmaci, Mikael
   Salza, Pasquale
TI Predicting unstable software benchmarks using static source code
   features
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Performance testing; Software benchmarking; Performance variability;
   Source code features; Machine learning for software engineering; Go
ID PERFORMANCE; STATISTICS; IMPUTATION; VARIANCE; AREA
AB Software benchmarks are only as good as the performance measurements they yield. Unstable benchmarks show high variability among repeated measurements, which causes uncertainty about the actual performance and complicates reliable change assessment. However, if a benchmark is stable or unstable only becomes evident after it has been executed and its results are available. In this paper, we introduce a machine-learning-based approach to predict a benchmark's stability without having to execute it. Our approach relies on 58 statically-computed source code features, extracted for benchmark code and code called by a benchmark, related to (1) meta information, e.g., lines of code (LOC), (2) programming language elements, e.g., conditionals or loops, and (3) potentially performance-impacting standard library calls, e.g., file and network input/output (I/O). To assess our approach's effectiveness, we perform a large-scale experiment on 4,461 Go benchmarks coming from 230 open-source software (OSS) projects. First, we assess the prediction performance of our machine learning models using 11 binary classification algorithms. We find that Random Forest performs best with good prediction performance from 0.79 to 0.90, and 0.43 to 0.68, in terms of AUC and MCC, respectively. Second, we perform feature importance analyses for individual features and feature categories. We find that 7 features related to meta-information, slice usage, nested loops, and synchronization application programming interfaces (APIs) are individually important for good predictions; and that the combination of all features of the called source code is paramount for our model, while the combination of features of the benchmark itself is less important. Our results show that although benchmark stability is affected by more than just the source code, we can effectively utilize machine learning models to predict whether a benchmark will be stable or not ahead of execution. This enables spending precious testing time on reliable benchmarks, supporting developers to identify unstable benchmarks during development, allowing unstable benchmarks to be repeated more often, estimating stability in scenarios where repeated benchmark execution is infeasible or impossible, and warning developers if new benchmarks or existing benchmarks executed in new environments will be unstable.
C1 [Laaber, Christoph; Basmaci, Mikael; Salza, Pasquale] Univ Zurich, Dept Informat, Zurich, Switzerland.
C3 University of Zurich
RP Laaber, C (corresponding author), Univ Zurich, Dept Informat, Zurich, Switzerland.
EM laaber@ifi.uzh.ch
RI Laaber, Christoph/AAU-8240-2021; Salza, Pasquale/P-1355-2017
OI Laaber, Christoph/0000-0001-6817-331X; Salza,
   Pasquale/0000-0002-8687-052X
FU Charles University in Prague; Swiss National Science Foundation (SNSF)
   [165546]
FX We are grateful for the anonymous reviewers' comments and feedback that
   helped to significantly improve the paper. Further, we would like to
   thank Petr Tuma and Vojtech Horky from the Charles University in Prague,
   who provided the infrastructure to execute the benchmarks. The research
   leading to these results has received funding from the Swiss National
   Science Foundation (SNSF) under project number 165546.
CR Abedi Ali, 2017, P ACM SPEC ICPE
   Akinshin A., UNBIASED MEDIAN ABSO
   Akinshin A, 2020, QUANTILE CONFIDENCE
   Akinshin A, 2020, QUANTILE RESPECTFUL
   AlGhamdi HM, 2023, J SOFTW-EVOL PROC, V35, DOI 10.1002/smr.2276
   AlGhmadi HM, 2016, PROC IEEE INT CONF S, P279, DOI 10.1109/ICSME.2016.46
   Alshoaibi D, 2019, LECT NOTES COMPUT SC, V11664, P75, DOI 10.1007/978-3-030-27455-9_6
   Altmann A, 2010, BIOINFORMATICS, V26, P1340, DOI 10.1093/bioinformatics/btq134
   Andersen L. O., 1994, Ph.D. thesis
   [Anonymous], 2020, GO FREQ ASK QUEST FA
   [Anonymous], 2004, P JOINT INT C MEAS M
   Arachchige CNPG, 2022, J APPL STAT, V49, P268, DOI 10.1080/02664763.2020.1808599
   Arif MM, 2018, EMPIR SOFTW ENG, V23, P1490, DOI 10.1007/s10664-017-9553-x
   Bacon DF, 1996, ACM SIGPLAN NOTICES, V31, P324, DOI 10.1145/236338.236371
   Basmaci M, 2021, PREDICTING UNSTABLE, DOI [10.5281/zenodo.4783139, DOI 10.5281/ZENODO.4783139]
   Bezemer CP, 2019, PROCEEDINGS OF THE 2019 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE '19), P45, DOI 10.1145/3297663.3309672
   Blackburn SM, 2016, ACM T PROGR LANG SYS, V38, DOI 10.1145/2983574
   Bradley AP, 1997, PATTERN RECOGN, V30, P1145, DOI 10.1016/S0031-3203(96)00142-2
   Breiman L, 2001, MACH LEARN, V45, P5, DOI 10.1023/A:1010933404324
   BUCKLAND M, 1994, J AM SOC INFORM SCI, V45, P12, DOI 10.1002/(SICI)1097-4571(199401)45:1<12::AID-ASI2>3.0.CO;2-L
   Bulej L, 2020, PROCEEDINGS OF THE ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE'20), P100, DOI 10.1145/3358960.3379132
   Bulej L, 2017, ICPE'17: COMPANION OF THE 2017 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING, P186, DOI 10.1145/3053600.3053638
   Bulej L, 2017, AUTOMAT SOFTW ENG, V24, P139, DOI 10.1007/s10515-015-0188-0
   Bulej Lubomir., 2012, P 3 ACMSPEC INT C PE, P311, DOI DOI 10.1145/2188286.2188345
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chen JF, 2022, IEEE T SOFTWARE ENG, V48, P1529, DOI 10.1109/TSE.2020.3023955
   Chen JF, 2017, PROC IEEE INT CONF S, P341, DOI 10.1109/ICSME.2017.13
   Chen TH, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P243, DOI 10.1109/ICSE-SEIP.2017.26
   Chicco D, 2020, BMC GENOMICS, V21, DOI 10.1186/s12864-019-6413-7
   CHINCHOR N, 1992, FOURTH MESSAGE UNDERSTANDING CONFERENCE (MUC-4), P22
   Cliff N., 2014, Ordinal Methods for Behavioral Data Analysis
   CORTES C, 1995, MACH LEARN, V20, P273, DOI 10.1007/BF00994018
   Costa D., 2017, P 8 ACM SPEC INT C P, P389, DOI [10.1145/3030207.3030221, DOI 10.1145/3030207.3030221]
   Costa D, 2021, IEEE T SOFTWARE ENG, V47, P1452, DOI 10.1109/TSE.2019.2925345
   Curtsinger C, 2013, ACM SIGPLAN NOTICES, V48, P219, DOI 10.1145/2499368.2451141
   DAGOSTINO RB, 1990, AM STAT, V44, P316, DOI 10.2307/2684359
   Davison AC, 1997, J AM STAT ASSOC, V94
   de Oliveira AB, 2017, IEEE INT CONF SOFTW, P103, DOI 10.1109/ICST.2017.17
   de Oliveira AugustoBorn., 2013, Proceedings of the 4th ACM/SPEC International Conference on Performance Engineering, ICPE'13, P137
   Dean J, 1995, LECT NOTES COMPUT SC, V952, P77, DOI 10.1007/3-540-49538-x_5
   Dilley N, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P377, DOI [10.1109/SANER.2019.8668036, 10.1109/saner.2019.8668036]
   Ding ZS, 2020, PROC INT CONF SOFTW, P1435, DOI 10.1145/3377811.3380351
   DUNN OJ, 1964, TECHNOMETRICS, V6, P241, DOI 10.2307/1266041
   Flora Parminder, 2014, P 11 WORK C MIN SOFT, P232, DOI [DOI 10.1145/2597073.2597092EVENT-PLACE, 10.1145/2597073.2597092event-place:Hyderabad,India, DOI 10.1145/2597073.2597092EVENT-PLACE:HYDERABAD,INDIA]
   Foo KC, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P159, DOI 10.1109/ICSE.2015.144
   Fox J., 2011, Applied Regression Analysis and Generalized Linear Models, V2
   Fraser Gordon, 2011, PROC 19 ACM SIGSOFT, P416, DOI 10.1145/2025113.2025179
   Freund Y, 1997, J COMPUT SYST SCI, V55, P119, DOI 10.1006/jcss.1997.1504
   Friedman JH, 2001, ANN STAT, V29, P1189, DOI 10.1214/aos/1013203451
   FRIEDMAN JH, 1991, ANN STAT, V19, P1, DOI 10.1214/aos/1176347963
   Gao R, 2017, EXPLORATORY STUDY AS, DOI [10.1109/msr.2017.22, DOI 10.1109/MSR.2017.22]
   Georges A, 2007, OOPSLA: 22ND INTERNATIONAL CONFERENCE ON OBJECT-ORIENTED PROGRAMMING, SYSTEMS, LANGUAGES, AND APPLICATIONS, PROCEEDINGS, P57
   Gillam L, 2013, J CLOUD COMPUT-ADV S, V2, DOI 10.1186/2192-113X-2-6
   Gligoric M., 2015, P 2015 INT S SOFTWAR, P211, DOI 10.1145/2771783.2771784
   Go Authors, 2020, GO PROGR LANG SPEC
   Goldberger J., 2004, P INT C NEUR INF PRO, V17, P513
   Grove D, 2001, ACM T PROGR LANG SYS, V23, P685, DOI 10.1145/506315.506316
   HANLEY JA, 1982, RADIOLOGY, V143, P29, DOI 10.1148/radiology.143.1.7063747
   HARRELL FE, 1982, BIOMETRIKA, V69, P635
   Hauke J, 2011, QUAEST GEOGR, V30, P87, DOI 10.2478/v10117-011-0021-1
   He S, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P188, DOI 10.1145/3338906.3338912
   Hess M. R., 2004, ANN M AM ED RES ASS, P1
   Hesterberg TC, 2015, AM STAT, V69, P371, DOI 10.1080/00031305.2015.1089789
   Hind M, 2001, ACM SIGPLAN NOTICES, P54
   Horky Vojtech, 2015, P 6 ACM SPEC INT C P, P289, DOI DOI 10.1145/2668930.2688051
   Hosmer DW, 2013, WILEY SER PROBAB ST, P1, DOI 10.1002/9781118548387
   Huang P, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P60, DOI 10.1145/2568225.2568232
   Hudson R., 2018, GETTING GO JOURNEY G
   Iosup A., 2011, 2011 Proceedings of 11th IEEE/ACM International Symposium on Cluster, Cloud and Grid Computing (CCGrid 2011), P104, DOI 10.1109/CCGrid.2011.22
   Jangda A, 2019, PROCEEDINGS OF THE 2019 USENIX ANNUAL TECHNICAL CONFERENCE, P107
   Jiang ZM, 2015, IEEE T SOFTWARE ENG, V41, P1091, DOI 10.1109/TSE.2015.2445340
   Jiarpakdee J, 2020, EMPIR SOFTW ENG, V25, P3590, DOI 10.1007/s10664-020-09848-1
   Jiarpakdee J, 2021, IEEE T SOFTWARE ENG, V47, P320, DOI 10.1109/TSE.2019.2891758
   Jiarpakdee J, 2018, PROC IEEE INT CONF S, P92, DOI 10.1109/ICSME.2018.00018
   Jimenez I, 2018, PROCEEDINGS OF THE 2018 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE '18), P273, DOI 10.1145/3184407.3184422
   Jin GL, 2012, ACM SIGPLAN NOTICES, V47, P77, DOI 10.1145/2345156.2254075
   John G. H., 1995, P 11 ANN C UNC ART I, P384
   Kalibera T, 2012, TECHNICAL REPORT 4 1
   Kalibera T, 2013, PROCEEDINGS OF THE ACM SIGPLAN INTERNATIONAL SYMPOSIUM ON MEMORY MANAGEMENT (ISMM '13), P63
   Kaltenecker C, 2019, PROC INT CONF SOFTW, P1084, DOI 10.1109/ICSE.2019.00112
   Kraemer HC, 2003, J AM ACAD CHILD PSY, V42, P1524, DOI 10.1097/00004583-200312000-00022
   KRUSKAL WH, 1952, J AM STAT ASSOC, V47, P583, DOI 10.1080/01621459.1952.10483441
   Laaber C, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P989, DOI 10.1145/3368089.3409683
   Laaber C, 2019, EMPIR SOFTW ENG, V24, P2469, DOI 10.1007/s10664-019-09681-1
   Laaber C, 2018, IEEE WORK CONF MIN S, P119, DOI 10.1145/3196398.3196407
   Leitner P., 2017, P 8 ACMSPEC INT C PE, P373
   Leitner P, 2016, ACM T INTERNET TECHN, V16, DOI 10.1145/2885497
   Liu YP, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1013, DOI 10.1145/2568225.2568229
   Luo QZ, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P643, DOI 10.1145/2635868.2635920
   Machalica M, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P91, DOI 10.1109/ICSE-SEIP.2019.00018
   Maricq A, 2018, PROCEEDINGS OF THE 13TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P409
   MARITZ JS, 1978, J AM STAT ASSOC, V73, P194, DOI 10.2307/2286545
   MATTHEWS BW, 1975, BIOCHIM BIOPHYS ACTA, V405, P442, DOI 10.1016/0005-2795(75)90109-9
   Mazuera-Rozo A, 2020, EMPIR SOFTW ENG, V25, P1644, DOI 10.1007/s10664-019-09795-6
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Menascé DA, 2002, IEEE INTERNET COMPUT, V6, P70, DOI 10.1109/MIC.2002.1020328
   Mostafa S, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P23, DOI 10.1145/3092703.3092725
   Mühlbauer S, 2020, IEEE INT CONF AUTOM, P611, DOI 10.1145/3324884.3416573
   Mytkowicz T, 2009, ACM SIGPLAN NOTICES, V44, P265, DOI 10.1145/1508284.1508275
   Nistor A, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P902, DOI 10.1109/ICSE.2015.100
   Nistor A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P562, DOI 10.1109/ICSE.2013.6606602
   Park C, 2022, COMMUN STAT-SIMUL C, V51, P2619, DOI 10.1080/03610918.2019.1699114
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Quinlan J. R., 1986, Machine Learning, V1, P81, DOI 10.1007/BF00116251
   Rodriguez-Cancio M, 2016, IEEE INT CONF AUTOM, P132, DOI 10.1145/2970276.2970346
   Romano J., 2006, ANN M FLORIDA ASS IN
   Rubin DonaldB., 1987, MULTIPLE IMPUTATIONS
   Ruck D W, 1990, IEEE Trans Neural Netw, V1, P296, DOI 10.1109/72.80266
   Alcocer JPS, 2020, SCI COMPUT PROGRAM, V191, DOI 10.1016/j.scico.2020.102415
   Alcocer JPS, 2016, PROCEEDINGS OF THE 2016 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE'16), P37, DOI 10.1145/2851553.2851571
   Alcocer JPS, 2016, ACM SIGPLAN NOTICES, V51, P129, DOI [10.1145/2816707.2816718, 10.1145/2936313.2816718]
   Scheuner J, 2018, PROCEEDINGS 2018 IEEE 11TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING (CLOUD), P90, DOI 10.1109/CLOUD.2018.00019
   Selakovic M, 2016, PROC INT CONF SOFTW, P61, DOI 10.1145/2884781.2884829
   Shipilev A., 2018, RECONSIDER DEFAULTS
   SHIVERS O, 1988, SIGPLAN NOTICES, V23, P164, DOI 10.1145/960116.54007
   Siegmund N, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P284, DOI 10.1145/2786805.2786845
   Song LH, 2017, PROC INT CONF SOFTW, P370, DOI 10.1109/ICSE.2017.41
   Stefan P., 2017, P 8 ACM SPEC INT C P, P401, DOI [DOI 10.1145/3030207.3030226, 10. 1145/3030207.3030226]
   Stol KJ, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3241743
   Tantithamthavorn C, 2020, IEEE T SOFTWARE ENG, V46, P1200, DOI 10.1109/TSE.2018.2876537
   Tantithamthavorn C, 2019, IEEE T SOFTWARE ENG, V45, P683, DOI 10.1109/TSE.2018.2794977
   Thomas Zimmermann., 2009, P THE 7 JOINT M EURO, P91, DOI DOI 10.1145/1595696.1595713
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   ul Alam MM, 2017, PROCEEDINGS OF THE TWELFTH EUROPEAN CONFERENCE ON COMPUTER SYSTEMS (EUROSYS 2017), P298, DOI 10.1145/3064176.3064186
   van Buuren S, 2007, STAT METHODS MED RES, V16, P219, DOI 10.1177/0962280206074463
   van Buuren S, 2011, J STAT SOFTW, V45, P1
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Wang W, 2018, IEEE INT CONF SOFTW, P81, DOI 10.1109/ICST.2018.00018
   Weyuker EJ, 2000, IEEE T SOFTWARE ENG, V26, P1147, DOI 10.1109/32.888628
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Woodside M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P171, DOI 10.1109/FOSE.2007.32
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Yu TT, 2018, EMPIR SOFTW ENG, V23, P3034, DOI 10.1007/s10664-017-9578-1
   Zhang LM, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P199, DOI 10.1145/3180155.3180198
   Zhao YT, 2020, PROCEEDINGS OF THE ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE'20), P181, DOI 10.1145/3358960.3379130
NR 135
TC 8
Z9 9
U1 0
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2021
VL 26
IS 6
AR 114
DI 10.1007/s10664-021-09996-y
PG 53
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UC6WX
UT WOS:000686665100001
OA hybrid
DA 2024-07-18
ER

PT J
AU Zhou, C
   Li, B
   Sun, XB
   Bo, LL
AF Zhou, Cheng
   Li, Bin
   Sun, Xiaobing
   Bo, Lili
TI Why and what happened? Aiding bug comprehension with automated category
   and causal link identification
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Bug comprehension; Bug classification; Causal link; Hierarchical
   attention network
ID DEFECT CLASSIFICATION; REPAIR; MODEL
AB When a new bug report is assigned to developers, they first need to understand what the bug report expresses (what) and why this bug occurs (why). To do so, developers usually explore different bug related data sources to investigate whether there are historical bugs with similar symptoms and causes related to the bug at hand. Automatic bug classification with respect to what and why information of bugs would enable developers to narrow down their search of bug resources and improve the bug fixing productivity. To achieve this goal, we propose an approach, BugClass, which applies a deep neural network classification approach based on Hierarchical Attention Networks (HAN) to automatically classify the bugs into different what and why categories by exploiting the bug repository and commit repository. Then, we explore the causal link relationship between what and why categories to further improve the accuracy of the bug classification. Experimental results demonstrate that BugClass is effective to classify the given bug reports into what and why categories, and can be also effectively used for identifying the why category for new bugs based on the causal link relations.
C1 [Zhou, Cheng; Li, Bin; Sun, Xiaobing; Bo, Lili] Yangzhou Univ, Sch Informat Engn, Yangzhou, Jiangsu, Peoples R China.
   [Zhou, Cheng] Taizhou Univ, Taizhou, Peoples R China.
   [Sun, Xiaobing; Bo, Lili] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Jiangsu, Peoples R China.
C3 Yangzhou University; Nanjing University
RP Sun, XB (corresponding author), Yangzhou Univ, Sch Informat Engn, Yangzhou, Jiangsu, Peoples R China.; Sun, XB (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Jiangsu, Peoples R China.
EM canorcheng@foxmail.com; lb@yzu.edu.cn; xbsun@yzu.edu.cn;
   lilibo@yzu.edu.cn
RI CHENG, ZHOU/ISV-0676-2023
OI Sun, Xiaobing/0000-0001-5165-5080
FU National Natural Science Foundation of China [61872312, 61972335,
   62002309]; Yangzhou city-Yangzhou University Science and Technology
   Cooperation Fund Project [YZU201902, YZU201803]; Six Talent Peaks
   Project in Jiangsu Province [RJFW-053]; Jiangsu "333" Project; Natural
   Science Foundation of the Jiangsu Higher Education Institutions of China
   [20KJB520016]; Open Funds of State Key Laboratory for Novel Software
   Technology of Nanjing University [KFKT2020B15, KFKT2020B16]; Yangzhou
   University Top-level Talents Support Program (2019)
FX This work is supported by the National Natural Science Foundation of
   China (No.61872312, No.61972335, No.62002309); the Yangzhou
   city-Yangzhou University Science and Technology Cooperation Fund Project
   (No.YZU201803, No. YZU201902); the Six Talent Peaks Project in Jiangsu
   Province (No. RJFW-053), the Jiangsu "333" Project; the Natural Science
   Foundation of the Jiangsu Higher Education Institutions of China (No.
   20KJB520016); the Open Funds of State Key Laboratory for Novel Software
   Technology of Nanjing University (No.KFKT2020B15, No.KFKT2020B16) and
   Yangzhou University Top-level Talents Support Program (2019).
CR ADAMSON GW, 1974, INFORM STORAGE RET, V10, P253, DOI 10.1016/0020-0271(74)90020-5
   Agrawal R., 1994, P INT VLDB C VLDB 94, P487, DOI DOI 10.5555/645920.672836
   [Anonymous], 2014, Proceedings of the 2014 conference on empirical methods in natural language processing (EMNLP), DOI [DOI 10.3115/V1/D14-1181, 10.3115/v1/D14-1181]
   [Anonymous], 1990, Software testing techniques {
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   Azmi M, 2019, INFORM SCIENCES, V483, P313, DOI 10.1016/j.ins.2019.01.047
   BASILI VR, 1987, IEEE T SOFTWARE ENG, V13, P1278, DOI 10.1109/TSE.1987.232881
   Bian P, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P411, DOI 10.1145/3236024.3236032
   Böhme M, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P117, DOI 10.1145/3106237.3106255
   Bugde S, 2008, 2008 3RD IEEE INTERNATIONAL CONFERENCE GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P182, DOI 10.1109/ICGSE.2008.18
   Campos EC, 2017, INT SYMP EMP SOFTWAR, P404, DOI 10.1109/ESEM.2017.55
   Catolino G, 2019, J SYST SOFTWARE, V152, P165, DOI 10.1016/j.jss.2019.03.002
   Chaparro O, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P396, DOI 10.1145/3106237.3106285
   Chawathe S. S., 1996, SIGMOD Record, V25, P493, DOI 10.1145/235968.233366
   CHILLAREGE R, 1992, IEEE T SOFTWARE ENG, V18, P943, DOI 10.1109/32.177364
   Davies S, 2014, P 8 ACM IEEE INT S E, DOI [10.1145/2652524.2652541, DOI 10.1145/2652524.2652541]
   Dey R, 2017, MIDWEST SYMP CIRCUIT, P1597, DOI 10.1109/MWSCAS.2017.8053243
   Falleri Jean-Remy, 2014, P 29 ACM IEEE INT C, P313
   Gao S, 2018, J AM MED INFORM ASSN, V25, P321, DOI 10.1093/jamia/ocx131
   Ge R., 2015, P 28 C LEARN THEOR, P797, DOI DOI 10.1109/ICMTMA.2015.197
   Hamill M, 2015, SOFTWARE QUAL J, V23, P229, DOI 10.1007/s11219-014-9235-5
   Han J, 2012, MOR KAUF D, P1
   He JQ, 2019, IEEE ACCESS, V7, P18871, DOI 10.1109/ACCESS.2019.2892730
   Hermann KM, 2014, PROCEEDINGS OF THE 52ND ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P58
   Hochreiter S, 1997, NEURAL COMPUT, V9, P1735, DOI [10.1162/neco.1997.9.1.1, 10.1007/978-3-642-24797-2]
   Hu X, 2018, INT C PROGRAM COMPRE, P200, DOI 10.1145/3196321.3196334
   Huang LG, 2015, AUTOMAT SOFTW ENG, V22, P3, DOI 10.1007/s10515-014-0155-1
   Humphrey W S, 1995, A discipline for software engineering
   IEEE standard classification for software anomalies, 10442009 IEEE, P1
   Jiang JJ, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P298, DOI 10.1145/3213846.3213871
   Joachims Thorsten, 1998, EUROPEAN C MACHINE L, P137, DOI 10.1007/
   Kalchbrenner N, 2014, PROCEEDINGS OF THE 52ND ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P655, DOI 10.3115/v1/p14-1062
   Kim S, 2006, Proceedings of the 2006 international workshop on Mining software repositories, P173
   Le Goues C, 2015, IEEE T SOFTWARE ENG, V41, P1236, DOI 10.1109/TSE.2015.2454513
   Le XBD, 2018, EMPIR SOFTW ENG, V23, P3007, DOI 10.1007/s10664-017-9577-2
   Le XBD, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P593, DOI 10.1145/3106237.3106309
   Li Zhenmin, 2005, P ACM SIGSOFT SOFTW, P306, DOI DOI 10.1145/1081706.1081755
   Liang B, 2016, PROC INT CONF SOFTW, P333, DOI 10.1145/2884781.2884870
   Liu L, 2018, INT J COMMUN SYST, V31, DOI 10.1002/dac.3453
   Mäntylä MV, 2009, IEEE T SOFTWARE ENG, V35, P430, DOI 10.1109/TSE.2008.71
   Motwani M, 2018, EMPIR SOFTW ENG, V23, P2901, DOI [10.1007/s10664-017-9550-0, 10.1145/3180155.3182533]
   Murphy-Hill E, 2015, IEEE T SOFTWARE ENG, V41, P65, DOI 10.1109/TSE.2014.2357438
   Nayrolles M, 2018, 2018 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON SOFTWARE QUALITIES AND THEIR DEPENDENCIES (SQUADE), P25
   Ni Z, 2020, J SYST SOFTWARE, V163, DOI 10.1016/j.jss.2020.110538
   Ocariza FS, 2017, IEEE T SOFTWARE ENG, V43, P128, DOI 10.1109/TSE.2016.2586066
   Pappas N, 2017, POPESCU BELIS MULTIL
   Patil S, 2017, IEEE WORK CONF MIN S, P182, DOI 10.1109/MSR.2017.20
   Podgurski A, 2003, PROC INT CONF SOFTW, P465, DOI 10.1109/ICSE.2003.1201224
   Qin HM, 2018, INTERNETWARE'18: PROCEEDINGS OF THE TENTH ASIA-PACIFIC SYMPOSIUM ON INTERNETWARE, DOI 10.1145/3275219.3275239
   Shan L, 2005, WORKSH EV SOFTW DEF
   Shao YX, 2020, KNOWL-BASED SYST, V196, DOI 10.1016/j.knosys.2020.105742
   Sharma M, 2018, ARXIV180708906
   Shepperd MJ, 1993, INF SOFTW TECHNOL, V35, P701, DOI [10.1016/0950-5849(93)90091-G, DOI 10.1016/0950-5849(93)90091-G]
   Shu R., 2019, INT C AUTOMATED SOFT
   Song QB, 2006, IEEE T SOFTWARE ENG, V32, P69, DOI 10.1109/TSE.2006.1599417
   Soto M, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P221, DOI 10.1109/SANER.2018.8330211
   Su Y, 2017, J SYST SOFTWARE, V125, P197, DOI 10.1016/j.jss.2016.12.005
   Sun XB, 2019, SCI CHINA INFORM SCI, V62, DOI 10.1007/s11432-017-9459-5
   Tan L, 2014, EMPIR SOFTW ENG, V19, P1665, DOI 10.1007/s10664-013-9258-8
   Tarnpradab S, 2018, ARXIV180510390
   Terdchanakul P, 2017, PROC IEEE INT CONF S, P534, DOI 10.1109/ICSME.2017.14
   Thung F., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P205, DOI 10.1109/WCRE.2012.30
   Thung F, 2015, INT C PROGRAM COMPRE, P60, DOI 10.1109/ICPC.2015.15
   Timperley CS, 2018, PROC IEEE ACM INT C, P446, DOI 10.1145/3183440.3195050
   van Tonder R, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P151, DOI 10.1145/3180155.3180250
   Vieira SM, 2010, IEEE INT CONF FUZZY, DOI 10.1109/FUZZY.2010.5584447
   Wang L, 2017, PROC IEEE ACM INT C, P189, DOI 10.1109/ICSE-C.2017.102
   Wang SH, 2016, EMPIR SOFTW ENG, V21, P337, DOI [10.1007/s11356-014-3525-0, 10.1007/s10664-014-9333-9]
   Wang SQ, 2012, 2012 2ND INTERNATIONAL CONFERENCE ON UNCERTAINTY REASONING AND KNOWLEDGE ENGINEERING (URKE), P90, DOI 10.1109/URKE.2012.6319592
   Wen M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/3180155.3180233
   Xia X, 2017, AUTOMAT SOFTW ENG, V24, P455, DOI 10.1007/s10515-016-0204-z
   Xie Q, 2018, ASIA PAC SOFWR ENG, P416, DOI 10.1109/APSEC.2018.00056
   Xiong YF, 2017, PROC INT CONF SOFTW, P416, DOI 10.1109/ICSE.2017.45
   Yang Z., 2016, P 2016 C N AM CHAPT, P1480, DOI [DOI 10.18653/V1/N16-1174, 10.18653/v1/n16-1174]
   Ye X, 2018, 2018 17TH IEEE INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA), P1438, DOI 10.1109/ICMLA.2018.00234
   Zafar S, 2019, 219 ACM IEEE INT S E, P1
   Zhang YH, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P129, DOI 10.1145/3213846.3213866
   Zhong H, 2018, J SYST SOFTWARE, V141, P16, DOI 10.1016/j.jss.2018.03.046
   Zhou C, 2020, J SYST SOFTWARE, V165, DOI 10.1016/j.jss.2020.110572
   Zhou C, 2018, INT C PROGRAM COMPRE, P108, DOI 10.1145/3196321.3196335
   Zhou TC, 2019, INFORM SOFTWARE TECH, V114, P204, DOI 10.1016/j.infsof.2019.07.003
NR 81
TC 10
Z9 10
U1 2
U2 13
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2021
VL 26
IS 6
AR 118
DI 10.1007/s10664-021-10010-8
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UF2ZG
UT WOS:000688446300002
DA 2024-07-18
ER

PT J
AU Lima, LP
   Rocha, LS
   Bezerra, CIM
   Paixao, M
AF Lima, Luan P.
   Rocha, Lincoln S.
   Bezerra, Carla I. M.
   Paixao, Matheus
TI Assessing exception handling testing practices in open-source libraries
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Exception handling testing; Mutation analysis; Adequacy measurement;
   Effectiveness measurement; Exploratory study
ID LARGE-SCALE; COVERAGE; JAVA
AB Modern programming languages (e.g., Java and C#) provide features to separate error-handling code from regular code, seeking to enhance software comprehensibility and maintainability. Nevertheless, the way exception handling (EH) code is structured in such languages may lead to multiple, different, and complex control flows, which may affect the software testability. Previous studies have reported that EH code is typically neglected, not well tested, and its misuse can lead to reliability degradation and catastrophic failures. However, little is known about the relationship between testing practices and EH testing effectiveness. In this exploratory study, we (i) measured the adequacy degree of EH testing concerning code coverage (instruction, branch, and method) criteria; and (ii) evaluated the effectiveness of the EH testing by measuring its capability to detect artificially injected faults (i.e., mutants) using 7 EH mutation operators. Our study was performed using test suites of 27 long-lived Java libraries from open-source ecosystems. Our results show that instructions and branches within catch blocks and throw instructions are less covered, with statistical significance, than the overall instructions and branches. Nevertheless, most of the studied libraries presented test suites capable of detecting more than 70% of the injected faults. From a total of 12,331 mutants created in this study, the test suites were able to detect 68% of them.
C1 [Lima, Luan P.; Rocha, Lincoln S.] Univ Fed Ceara, Fortaleza, CE, Brazil.
   [Bezerra, Carla I. M.] Univ Fed Ceara, Quixada, CE, Brazil.
   [Paixao, Matheus] Univ Estadual Ceara, Fortaleza, CE, Brazil.
C3 Universidade Federal do Ceara; Universidade Federal do Ceara;
   Universidade Estadual do Ceara
RP Rocha, LS (corresponding author), Univ Fed Ceara, Fortaleza, CE, Brazil.
EM luanpereira@great.ufc.br; lincoln@dc.ufc.br; carlailane@ufc.br;
   matheus.paixao@uece.br
OI Paixao, Matheus/0000-0002-1775-7259; Rocha, Lincoln/0000-0001-5402-8744
CR Ahmed I, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P547, DOI 10.1145/2950290.2950324
   Ammann P., 2016, Introduction to software testing, DOI DOI 10.1017/9781316771273
   Antinyan V, 2018, IEEE SOFTWARE, V35, P73, DOI 10.1109/MS.2017.3281318
   Barbosa EA, 2014, 2014 28TH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2014), P11, DOI 10.1109/SBES.2014.19
   Bavota G, 2015, J SYST SOFTWARE, V107, P1, DOI 10.1016/j.jss.2015.05.024
   Benjamini Y, 2001, ANN STAT, V29, P1165
   Bloch J., 2008, EFFECTIVE JAVA JAVA
   Cacho N, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P584, DOI 10.1145/2568225.2568308
   Cacho N, 2014, PROC IEEE INT CONF S, P31, DOI 10.1109/ICSME.2014.25
   Chang BM, 2016, INFORM SOFTWARE TECH, V77, P1, DOI 10.1016/j.infsof.2016.05.003
   Changbing Ji, 2009, 2009 33rd Annual IEEE International Computer Software and Applications Conference (COMPSAC 2009), P556, DOI 10.1109/COMPSAC.2009.192
   Chekam TT, 2017, PROC INT CONF SOFTW, P597, DOI 10.1109/ICSE.2017.61
   Chen H, 2019, P 34 ACM IEEE INT C
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Coelho R, 2017, EMPIR SOFTW ENG, V22, P1264, DOI 10.1007/s10664-016-9443-7
   Dalton Francisco, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P170, DOI 10.1145/3383219.3383237
   de Padua GB, 2018, IEEE WORK CONF MIN S, P564, DOI 10.1145/3196398.3196435
   de Pádua GB, 2017, IEEE INT WORK C SO, P11, DOI 10.1109/SCAM.2017.16
   de Pádua GB, 2017, INT C PROGRAM COMPRE, P328, DOI 10.1109/ICPC.2017.1
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   Digkas G, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P153, DOI 10.1109/SANER.2018.8330205
   Ebert F, 2015, J SYST SOFTWARE, V106, P82, DOI 10.1016/j.jss.2015.04.066
   Eck M, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P830, DOI 10.1145/3338906.3338945
   Filho JLM, 2017, LECT NOTES COMPUT SC, V10475, P67, DOI 10.1007/978-3-319-65831-5_5
   Friedman M, 1940, ANN MATH STAT, V11, P86, DOI 10.1214/aoms/1177731944
   Gallardo R., 2014, JAVA TUTORIAL SHORT, V6
   Garcia AF, 2001, J SYST SOFTWARE, V59, P197, DOI 10.1016/S0164-1212(01)00062-0
   Gligoric M., 2013, P 2013 INT S SOFTW T, P302, DOI DOI 10.1145/2483760.2483769
   Goffi A., 2016, P 25 INT S SOFTW TES, P213, DOI DOI 10.1145/2931037.2931061
   Goodenough J. B., 1975, IEEE Transactions on Software Engineering, VSE-1, P156, DOI 10.1109/TSE.1975.6312836
   Gopinath R, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P72, DOI 10.1145/2568225.2568278
   Gulati S., 2017, JAVA UNIT TESTING JU, V1, DOI [10.1007/978-1-4842-3015-2, DOI 10.1007/978-1-4842-3015-2]
   Harrold M.J., 2008, Proceedings of the 4th International Workshop on Exception Handling, P62, DOI DOI 10.1145/1454268.1454277
   Hilton M, 2018, IEEE INT CONF AUTOM, P53, DOI 10.1145/3238147.3238183
   Hongyu Zhai, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P116, DOI 10.1109/MSR.2019.00027
   Hunt Andy., 2003, Pragmatic Unit Testing in Java with JUnit
   Inozemtseva L, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P435, DOI 10.1145/2568225.2568271
   Ivankovic M, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P955, DOI 10.1145/3338906.3340459
   Jenkov J, 2013, JAVA EXCEPTION HANDL
   Just R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P654, DOI 10.1145/2635868.2635929
   Kechagia M., 2014, Proceedings of the 11th ACM Working Conference on Mining Software Repositories, P312
   Koch S, 2007, J SOFTW MAINT EVOL-R, V19, P361, DOI 10.1002/smr.348
   Kochhar PS, 2017, IEEE T RELIAB, V66, P1213, DOI 10.1109/TR.2017.2727062
   Kochhar PS, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P560, DOI 10.1109/SANER.2015.7081877
   Kumar K, 2011, COMM COM INF SC, V142, P290
   Lima L, 2021, REPLICATION PACKAGE
   Luo QZ, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P643, DOI 10.1145/2635868.2635920
   Marinescu C., 2011, Proceedings of the 12th International Workshop on Principles of Software Evolution and the 7th Annual ERCIM Workshop on Software Evolution, IWPSE-EVOL'11, page, P56
   Marinescu C, 2014, INT SYMP SYMB NUMERI, P250, DOI 10.1109/SYNASC.2013.40
   Martins AL, 2014, 2014 38TH ANNUAL IEEE INTERNATIONAL COMPUTER SOFTWARE AND APPLICATIONS CONFERENCE WORKSHOPS (COMPSACW 2014), P626, DOI 10.1109/COMPSACW.2014.105
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   Nagappan M, 2013, 2013 9 JOINT M EUR S, P466, DOI [DOI 10.1145/2491411.2491415, 10.1145/2491411.2491415]
   Oliveira J, 2018, J SYST SOFTWARE, V136, P1, DOI 10.1016/j.jss.2017.10.032
   Osman H, 2017, IEEE WORK CONF MIN S, P302, DOI 10.1109/MSR.2017.21
   Paixao M, 2017, IEEE INT CONF AUTOM, P95, DOI 10.1109/ASE.2017.8115622
   Papadakis M, 2019, ADV COMPUT, V112, P275, DOI 10.1016/bs.adcom.2018.03.015
   Papadakis M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P537, DOI 10.1145/3180155.3180183
   Pawlak R, 2016, SOFTWARE PRACT EXPER, V46, P1155, DOI 10.1002/spe.2346
   Rashkovits R, 2012, LECT NOTES BUS INF P, V129, P1
   Reales P, 2014, IEEE SOFTWARE, V31, P30, DOI 10.1109/MS.2014.68
   Romano Daniele, 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P160, DOI 10.1109/ICST.2011.49
   Saha RK, 2018, IEEE WORK CONF MIN S, P10, DOI 10.1145/3196398.3196473
   Sawadpong P, 2016, IEEE HI ASS SYS ENGR, P55, DOI 10.1109/HASE.2016.13
   Schwartz A, 2018, J SYST SOFTWARE, V144, P106, DOI 10.1016/j.jss.2018.06.024
   Shah H, 2009, 2009 ICSE WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING, P80, DOI 10.1109/CHASE.2009.5071417
   Shah HB, 2010, IEEE T SOFTWARE ENG, V36, P150, DOI 10.1109/TSE.2010.7
   Shahrokni A, 2013, INFORM SOFTWARE TECH, V55, P1, DOI 10.1016/j.infsof.2012.06.002
   Shi L, 2011, LECT NOTES COMPUT SC, V6603, P416, DOI 10.1007/978-3-642-19811-3_29
   Sinha S, 2000, IEEE T SOFTWARE ENG, V26, P849, DOI 10.1109/32.877846
   Turner AJ, 2016, LECT NOTES COMPUT SC, V9962, P244, DOI 10.1007/978-3-319-47106-8_19
   Vieira R, 2019, 15TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING (PROMISE'19), P80, DOI 10.1145/3345629.3345639
   Wirfs-Brock RJ, 2006, IEEE SOFTWARE, V23, P11, DOI 10.1109/MS.2006.144
   Wohlin C., 2012, Experimentation in Software Engineering
   Yang YB, 2019, PROC INT CONF SOFTW, P488, DOI 10.1109/ICSE.2019.00061
   Zhang PY, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2652483
   Zhong H, 2019, IEEE T SOFTWARE ENG, V45, P319, DOI 10.1109/TSE.2017.2782280
   Zhu H, 1997, ACM COMPUT SURV, V29, P366, DOI 10.1145/267580.267590
NR 77
TC 4
Z9 4
U1 0
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2021
VL 26
IS 5
AR 85
DI 10.1007/s10664-021-09983-3
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SY2CD
UT WOS:000665699100001
DA 2024-07-18
ER

PT J
AU Mohamad, M
   Steghöfer, JP
   Scandariato, R
AF Mohamad, Mazen
   Steghofer, Jan-Philipp
   Scandariato, Riccardo
TI Security assurance cases-state of the art of an emerging approach
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Security; Assurance cases; Systematic literature review
ID ARGUMENTATION
AB Security Assurance Cases (SAC) are a form of structured argumentation used to reason about the security properties of a system. After the successful adoption of assurance cases for safety, SAC are getting significant traction in recent years, especially in safety-critical industries (e.g., automotive), where there is an increasing pressure to be compliant with several security standards and regulations. Accordingly, research in the field of SAC has flourished in the past decade, with different approaches being investigated. In an effort to systematize this active field of research, we conducted a systematic literature review (SLR) of the existing academic studies on SAC. Our review resulted in an in-depth analysis and comparison of 51 papers. Our results indicate that, while there are numerous papers discussing the importance of SAC and their usage scenarios, the literature is still immature with respect to concrete support for practitioners on how to build and maintain a SAC. More importantly, even though some methodologies are available, their validation and tool support is still lacking.
C1 [Mohamad, Mazen; Steghofer, Jan-Philipp] Univ Gothenburg, Dept Comp Sci & Engn, SE-41296 Gothenburg, Sweden.
   [Mohamad, Mazen; Steghofer, Jan-Philipp] Chalmers Univ Technol, SE-41296 Gothenburg, Sweden.
   [Scandariato, Riccardo] Hamburg Univ Technol TUHH, Inst Software Secur, Blohmstr 15, D-21079 Hamburg, Germany.
C3 University of Gothenburg; Chalmers University of Technology; Hamburg
   University of Technology
RP Mohamad, M (corresponding author), Univ Gothenburg, Dept Comp Sci & Engn, SE-41296 Gothenburg, Sweden.; Mohamad, M (corresponding author), Chalmers Univ Technol, SE-41296 Gothenburg, Sweden.
EM mazen.mohamad@gu.se; jan-philipp.steghofer@cse.gu.se;
   riccardo.scandariato@tuhh.de
RI Steghöfer, Jan-Philipp/AAM-2555-2020; Steghöfer,
   Jan-Philipp/CAC-0554-2022
OI Steghöfer, Jan-Philipp/0000-0003-1694-0972; Steghöfer,
   Jan-Philipp/0000-0003-1694-0972; Mohamad, Mazen/0000-0002-3446-1265
FU CASUS research project - VINNOVA, a Swedish funding agency
FX This work is partially supported by the CASUS research project funded by
   VINNOVA, a Swedish funding agency. We sincerely thank three anonymous
   reviewers whose comments and suggestions helped improve and clarify this
   manuscript.
CR Adelard, 1998, ADELARD SAFETY CASE
   Adelard, 2003, ADELARD SAFETY CASE
   Agudo I., 2009, P INT C COMP TECHN W, P20
   Alexander R., 2011, Technical Report
   Ali A, 2016, PROCEEDINGS OF 2016 11TH INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY AND SECURITY, (ARES 2016), P564, DOI 10.1109/ARES.2016.86
   Ankrum TS, 2005, Ninth IEEE International Symposium on High-Assurance Systems Engineering, P99, DOI 10.1109/HASE.2005.20
   [Anonymous], 2005, 3 S REQTS ENGR INFO
   Australian Research Council, 2018, EXCELLENCE RES AUSTR
   Behrmann G., 2006, 3 INT C QUANT EV SYS
   ben Othmane L, 2015, 2014 NINTH INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY AND SECURITY (ARES), P490, DOI 10.1109/ARES.2014.73
   Birch John, 2013, Computer Safety, Reliability and Security. 32nd International Conference, SAFECOMP 2013. Proceedings: LNCS 8153, P154, DOI 10.1007/978-3-642-40793-2_15
   Bloomfield R, 2017, INT C COMP SAF REL S, P27
   Bloomfield R, 2010, MAKING SYSTEMS SAFER, P51, DOI 10.1007/978-1-84996-086-1_4
   Calinescu R, 2018, IEEE T SOFTWARE ENG, V44, P1039, DOI 10.1109/TSE.2017.2738640
   Campbell D.T., 2015, EXPT QUASIEXPERIMENT
   Cheah M, 2018, COMPUT SECUR, V77, P360, DOI 10.1016/j.cose.2018.04.008
   Chindamaikul K, 2014, 2014 IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING WORKSHOPS (ISSREW), P198, DOI 10.1109/ISSREW.2014.65
   Cockram T.J., 2007, COMBINING SECURITY S, P159, DOI [10.1049/cp:20070458, DOI 10.1049/CP:20070458]
   Coffey JW., 2014, PROC IMCIC, V14, P173
   Computing Research and Education Association of Australasia, 2018, CORE RANKING PORTAL
   Cyra L, 2007, DEPCOS - RELCOMEX '07: INTERNATIONAL CONFERENCE ON DEPENDABILITY OF COMPUTER SYSTEMS, PROCEEDINGS, P91, DOI 10.1109/DEPCOS-RELCOMEX.2007.44
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Feiler PH., 2012, Model-based engineering with AADL: An introduction to the SAE architecture analysis design language
   Finnegan A, 2013, INT C SOFTW PROC IMP, P25
   Finnegan A, 2014, 2014 IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING WORKSHOPS (ISSREW), P220, DOI 10.1109/ISSREW.2014.89
   Fung NLS, 2018, LECT NOTES COMPUT SC, V11094, P60, DOI 10.1007/978-3-319-99229-7_7
   G.U. of Technology, 2010, NOR STA
   Gacek Andrew., 2014, P 2014 ACM SIGADA AN, P19
   Gade D, 2015, INT J ADV RES COMPUT, V4, P82
   Gallo R, 2015, IFIP ADV INF COMM TE, V453, P15, DOI 10.1007/978-3-319-18500-2_2
   GessNet, 2011, TURBOAC TM ASSURANCE
   Gorski Janusz, 2012, Computer Safety, Reliability,and Security. Proceedings of SAFECOMP 2012 Workshops: Sassur, ASCoMS, DESEC4LCCI, ERCIM/EWICS, IWDE, P417, DOI 10.1007/978-3-642-33675-1_39
   Graydon PJ, 2013, INFORM SOFTWARE TECH, V55, P1551, DOI 10.1016/j.infsof.2013.02.008
   Group GCSW, 2011, GSN COMMUNITY STANDA
   Hawkins R, 2015, IEEE HI ASS SYS ENGR, P110, DOI 10.1109/HASE.2015.25
   He Y., 2012, 7 IET INT C SYST SAF, P1
   International Organization for Standardization, 2011, ISO 26262 ROAD VEHIC
   International Organization for Standardization and Society of Automotive Engineers, 2018, ISOSAE 21434 ROAD VE
   Ionita D., 2017, INT WORKSH GRAP MOD, P1
   Ionita D, 2016, 2016 IEEE 24TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW), P74, DOI [10.1109/REW.2016.027, 10.1109/REW.2016.19]
   Kitchenham B., 2007, TECH REP EBSE 2007 1
   Knight J, 2015, IEEE SECUR PRIV, V13, P73, DOI 10.1109/MSP.2015.68
   Knowles J, 2012, 7 IET INT C SYST SAF
   Lipson H., 2008, TECH REP
   Vivas JL, 2011, REQUIR ENG, V16, P55, DOI 10.1007/s00766-010-0114-8
   Maksimov M, 2019, ACM COMPUT SURV, V52, DOI 10.1145/3342481
   Maksimov M, 2018, LECT NOTES COMPUT SC, V11094, P49, DOI 10.1007/978-3-319-99229-7_6
   Masumoto M, 2013, 2013 IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING WORKSHOPS (ISSREW), P311, DOI 10.1109/ISSREW.2013.6688912
   Matsuno Yutaka, 2010, Proceedings 2010 IEEE 12th International Symposium on High-Assurance Systems Engineering (HASE), P170, DOI 10.1109/HASE.2010.26
   McCaffery F., 2014, INT C COMPUTER SAFET, P197
   Mohamad Mazen, 2020, 15 INT C AVAILABILIT, DOI [10.1145/3407023.3407033, DOI 10.1145/3407023.3407033]
   Mohammadi NG, 2018, LECT NOTES COMPUT SC, V11033, P244, DOI 10.1007/978-3-319-98385-1_17
   Nair S, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P94, DOI 10.1109/ICST.2013.30
   Netkachova Kateryna, 2015, 2015 IEEE/AIAA 34th Digital Avionics Systems Conference (DASC). Proceedings, DOI 10.1109/DASC.2015.7311447
   Netkachova K., 2014, INT C COMP SAF REL S, P345
   Netkachova K, 2016, COMPUTER, V49, P98, DOI 10.1109/MC.2016.158
   Object Management Group (OMG), 2020, OMG DOCUMENT NUMBER
   Patu V, 2013, PROCEDIA COMPUT SCI, V22, P954, DOI 10.1016/j.procs.2013.09.179
   Patu V, 2013, IEEE INT C COMPUT, P138, DOI 10.1109/CSE.2013.31
   Piètre-Cambacédès L, 2013, RELIAB ENG SYST SAFE, V110, P110, DOI 10.1016/j.ress.2012.09.011
   Poreddy BR, 2011, PROCEDIA COMPUT SCI, V6, DOI 10.1016/j.procs.2011.08.092
   Ray A, 2015, IEEE DES TEST, V32, P56, DOI 10.1109/MDAT.2015.2468222
   Rivett R, 2011, 6 IET INT C SYST SAF
   Rodes BenjaminD., 2014, Proceedings of the 5th International Workshop on Emerging Trends in Software Metrics, WETSoM 2014, P66, DOI DOI 10.1145/2593868.2593880
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sein MK, 2011, MIS QUART, V35, P37
   Shortt C., 2015, P INT C INT SOFTW ME, P453
   Singapore A D S C., 2015, CYBERSAGE
   SKLYAR V, 2019, GREEN IT ENG SOCIAL, P351
   Sklyar V V., 2017, ICTERI, P670
   Sklyar V, 2017, PROCEEDINGS OF THE 2017 9TH IEEE INTERNATIONAL CONFERENCE ON INTELLIGENT DATA ACQUISITION AND ADVANCED COMPUTING SYSTEMS: TECHNOLOGY AND APPLICATIONS (IDAACS), VOL 2, P736, DOI 10.1109/IDAACS.2017.8095187
   Sklyar V, 2016, PROCEEDINGS OF THE 3RD INTERNATIONAL CONFERENCE ON MATHEMATICS AND COMPUTERS IN SCIENCES AND IN INDUSTRY (MCSI 2016), P308, DOI [10.1109/MCSI.2016.57, 10.1109/MCSI.2016.063]
   Sljivo I., 2016, PROCC 10 EUR C SOFTW, P39
   Spriggs J, 2012, GSN THE GOAL STRUCTU
   Strielkina Anastasiia, 2018, 2018 IEEE 9th International Conference on Dependable Systems, Services and Technologies (DESSERT), P67, DOI 10.1109/DESSERT.2018.8409101
   Taguchi K., 2014, INT C COMP SAF REL S, P27
   Tippenhauer NO, 2014, IEEE PAC RIM INT SYM, P33, DOI 10.1109/PRDC.2014.13
   Toulmin S., 2003, The uses of argument, DOI DOI 10.1017/CBO9780511840005
   Weinstock CB., 2007, TECH REP
   Willadsen K., 2011, MELD
   Wohlin C., 2012, Experimentation in Software Engineering
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Xu B, 2017, IEEE INT SYMP SOFTW, P331, DOI 10.1109/ISSREW.2017.52
   Yamamoto S, 2015, INT CONF IT CONVERGE
   Yin R., 2003, Case study Research, 3rd Ed
   Yu YJ, 2011, INT REQUIR ENG CONF, P351, DOI 10.1109/RE.2011.6051671
NR 86
TC 2
Z9 2
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2021
VL 26
IS 4
AR 70
DI 10.1007/s10664-021-09971-7
PG 43
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SE1DH
UT WOS:000651814600001
OA hybrid
DA 2024-07-18
ER

PT J
AU Pizard, S
   Acerenza, F
   Otegui, X
   Moreno, S
   Vallespir, D
   Kitchenham, B
AF Pizard, Sebastian
   Acerenza, Fernando
   Otegui, Ximena
   Moreno, Silvana
   Vallespir, Diego
   Kitchenham, Barbara
TI Training students in evidence-based software engineering and systematic
   reviews: a systematic review and empirical study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Review
DE Evidence-based software engineering; Learning outcomes; Training
   evaluation; Systematic literature review
ID EVIDENCE-BASED MEDICINE; OCCUPATIONAL THERAPISTS; AGREEMENT; ATTITUDES;
   BARRIERS; KAPPA
AB ContextAlthough influential in academia, evidence-based software engineering (EBSE) has had little impact on industry practice. We found that other disciplines have identified lack of training as a significant barrier to Evidence-Based Practice.ObjectiveTo build and assess an EBSE training proposal suitable for students with more than 3 years of computer science/software engineering university-level training.MethodWe performed a systematic literature review (SLR) of EBSE teaching initiatives and used the SLR results to help us to develop and evaluate an EBSE training proposal. The course was based on the theory of learning outcomes and incorporated a large practical content related to performing an SLR. We ran the course with 10 students and based course evaluation on student performance and opinions of both students and teachers. We assessed knowledge of EBSE principles from the mid-term and final tests, as well as evaluating the SLRs produced by the student teams. We solicited student opinions about the course and its value via a student survey, a team survey, and a focus group. The teachers' viewpoint was collected in a debriefing meeting.ResultsOur SLR identified 14 relevant primary studies. The primary studies emphasized the importance of practical examples (usually based on the SLR process) and used a variety of evaluation methods, but lacked any formal education methodology. We identified 54 learning outcomes covering aspects of EBSE and the SLR method. All 10 students passed the course. Our course evaluation showed that a large percentage of the learning outcomes established for training were accomplished.ConclusionsThe course proved suitable for students to understand the EBSE paradigm and to be able to apply it to a limited-scope practical assignment. Our learning outcomes, course structure, and course evaluation process should help to improve the effectiveness and comparability of future studies of EBSE training. However, future courses should increase EBSE training related to the use of SLR results.
C1 [Pizard, Sebastian; Acerenza, Fernando; Moreno, Silvana; Vallespir, Diego] Univ Republica, Engn Sch, Montevideo, Uruguay.
   [Otegui, Ximena] Univ Republica, Teaching Dept, Engn Sch, Montevideo, Uruguay.
   [Kitchenham, Barbara] Keele Univ, Sch Comp & Math, Keele ST5 5BG, Staffs, England.
C3 Universidad de la Republica, Uruguay; Universidad de la Republica,
   Uruguay; Keele University
RP Pizard, S (corresponding author), Univ Republica, Engn Sch, Montevideo, Uruguay.
EM spizard@fing.edu.uy; acerenza@fing.edu.uy; xotegui@fing.edu.uy;
   smoreno@fing.edu.uy; dvallesp@fing.edu.uy; b.a.kitchenham@keele.ac.uk
RI Pizard, Sebastián/HTP-0759-2023
OI Pizard, Sebastián/0000-0002-5535-8646; Moreno,
   Silvana/0000-0002-1677-6212; Otegui, Ximena/0000-0002-9638-6678;
   Vallespir, Diego/0000-0003-1701-353X; Kitchenham,
   Barbara/0000-0002-6134-8460
FU government of Uruguay
FX All authors apart from Kitchenham are employees of the Universidad de la
   Rep ' ublica funded by the government of Uruguay. Kitchenham is an
   unpaid Emeritus Professor and received no funding.
CR Adam S, 2004, NAT INT LEV C BACKGR
   Adelman C, 2015, LANGUAGE SYNTAX LEAR
   Aglen B, 2016, NURS EDUC TODAY, V36, P255, DOI 10.1016/j.nedt.2015.08.025
   Albarqouni L, 2018, JAMA NETW OPEN, V1, DOI 10.1001/jamanetworkopen.2018.0281
   [Anonymous], 2005, Technical report CMU/SEI-2005-HB- 004
   [Anonymous], 2013, Technical Report
   [Anonymous], 2014, SOFTW ENG 2014 CURR
   Badampudi D, 2019, INT S EMP SOFTW ENG, P1
   Badampudi D, 2019, PROCEEDINGS OF EASE 2019 - EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING, P306, DOI 10.1145/3319008.3319358
   Baldassarre MT, 2008, LECT NOTES COMPUT SC, V5089, P415, DOI 10.1007/978-3-540-69566-0_33
   Barkley E., 2016, LEARNING ASSESSMENT
   Basili V, 2018, IEEE SOFTWARE, V35, P44, DOI 10.1109/MS.2018.290110216
   Beall J, 2013, POTENTIAL POSSIBLE P, DOI [12125427/https://scholarlyoa.com/publishers/, DOI 12125427/HTTPS://SCHOLARLYOA.COM/PUBLISHERS]
   Beall J., 2012, CRITERIA DETERMINING
   Beidas RS, 2010, CLIN PSYCHOL-SCI PR, V17, P1, DOI 10.1111/j.1468-2850.2009.01187.x
   Biggs J.D., 2009, Teaching for quality learning at university: What the student does
   Bloom B, 1956, TAXONOMY ED OBJECTIV
   Boggs GR, 1999, AM ASS HIGHER ED B, V51
   Brereton P, 2011, IEEE T EDUC, V54, P558, DOI 10.1109/TE.2010.2090662
   Brereton P, 2009, CONF SOFTW ENG EDUC, P240, DOI 10.1109/CSEET.2009.11
   Brettle A, 2013, NURS EDUC TODAY, V33, P103, DOI 10.1016/j.nedt.2011.12.003
   Britto R, 2015, IEEE FRONT ED C, P1
   Budgen D, 2020, E-INFORMATICA, V14, P7, DOI 10.37190/e-Inf200101
   Cartaxo B., 2016, Proceedings of the 10th ACM/IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), V57, P1
   Cartaxo B, 2018, INT C EV ASS SOFTW E, P2434
   Carver Jeffrey C., 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P203, DOI 10.1109/ESEM.2013.28
   Castelluccia Daniela, 2013, Software Engineering Notes, V38, P52, DOI 10.1145/2532780.2532803
   Catal Cagatay, 2013, ACM SIGSOFT SOFTWARE, V38, P1
   Charters S., 2007, GUIDELINES PERFORMIN
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   da Silva FQB, 2011, INFORM SOFTWARE TECH, V53, P899, DOI 10.1016/j.infsof.2011.04.004
   de Franca B. B., 2015, P 18 CONFERENCIA IBE, P351
   DeFranco JF, 2017, INNOV SYST SOFTW ENG, V13, P129, DOI 10.1007/s11334-017-0287-0
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Elo S, 2008, J ADV NURS, V62, P107, DOI 10.1111/j.1365-2648.2007.04569.x
   Emerson RM, 2001, PARTICIPANT OBSERVAT, P352
   FEINSTEIN AR, 1990, J CLIN EPIDEMIOL, V43, P543, DOI 10.1016/0895-4356(90)90158-L
   Garousi V., 2017, P 21 INT C EV ASS SO, P170
   Hassler E., 2014, P 18 INT C EV ASS SO, P1
   Havnes A, 2016, EDUC ASSESS EVAL ACC, V28, P205, DOI 10.1007/s11092-016-9243-z
   Janzen DS, 2008, CONF SOFTW ENG EDUC, P223, DOI 10.1109/CSEET.2008.29
   Janzen DS, 2009, J SYST SOFTWARE, V82, P563, DOI 10.1016/j.jss.2008.12.047
   Jorgensen Magne, 2005, INT SOFTWARE METRICS, V24, P1
   Juristo N, 2007, LECT NOTES COMPUT SC, V4336, P143
   Kasoju A, 2013, INFORM SOFTWARE TECH, V55, P1237, DOI 10.1016/j.infsof.2013.01.005
   Kennedy D, 2007, WRITING USING LEARNI, P1
   Kitchenham B., 2015, Evidence-Based Software Engineering and Systematic Reviews
   Kitchenham B., 2010, P ACM IEEE INT C SOF, P589, DOI DOI 10.1145/1806799.1806887
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Kitchenham B, 2013, INFORM SOFTWARE TECH, V55, P2049, DOI 10.1016/j.infsof.2013.07.010
   Ko AJ, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P3, DOI 10.1109/ICSE-SEIP.2017.29
   Kontio J., 2008, FOCUS GROUP METHOD E, P93, DOI [DOI 10.1007/978-1-84800-044-5_4, DOI 10.1007/978-1-84800-044-5]
   Lavallée M, 2014, IEEE T EDUC, V57, P175, DOI 10.1109/TE.2013.2292570
   Likert R., 1932, ARCH PSYCHOL, V22, P55
   Miles M.B., 2014, Qualitative data analysis: A methods sourcebook, V3rd
   Mulder AE, 2019, 13 IDEAS ARE TRANSFO, DOI [10.1080/10668926.2019.1604196, DOI 10.1080/10668926.2019.1604196]
   Oates B. J., 2009, P 13 INT C EVALUATIO, P79
   Rainer A., 2008, INT C EV ASS SOFTW E, P78
   Rainer Austen, 2006, INT C EV ASS SOFTW E, P91
   Ribeiro TV, 2018, EMPIR SOFTW ENG, V23, P1594, DOI 10.1007/s10664-017-9556-7
   Rice W., 2006, Moodle E-Learning Course Development: A complete guide to successful learning using Moodle
   Rosnow R.L., 1997, People studying people: Artifacts and ethics in behavioral research
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sadeghi-Bazargani H, 2014, J EVAL CLIN PRACT, V20, P793, DOI 10.1111/jep.12222
   Santos Ronnie E. S., 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P292, DOI 10.1109/ESEM.2013.36
   Saunders H, 2019, WORLDV EVID-BASED NU, V16, P176, DOI 10.1111/wvn.12363
   Schoepp K, 2019, STUD HIGH EDUC, V44, P615, DOI 10.1080/03075079.2017.1392500
   Scurlock-Evans L, 2015, J EVID-INFORM SOC WO, V12, P369, DOI 10.1080/15433714.2013.853014
   Smith E, 2013, 2013 6TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P89, DOI 10.1109/CHASE.2013.6614738
   Stanny CJ, 2016, EDUC SCI, V6, DOI 10.3390/educsci6040037
   Stol KJ, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3241743
   Torchiano M, 2017, IEEE-ACM INT WKSP CO, P33, DOI 10.1109/CESI.2017.5
   Turner Mark, 2008, ANN M PSCHOLOGY PROG
   Upton D, 2014, BRIT J OCCUP THER, V77, P24, DOI 10.4276/030802214X13887685335544
   Vachon B, 2010, WORK, V37, P119, DOI 10.3233/WOR-2010-1063
   Venning J, 2013, ASSESS EVAL HIGH EDU, V38, P567, DOI 10.1080/02602938.2012.661842
   Viera AJ, 2005, FAM MED, V37, P360
   Wohlin C, 2014, 18 INT C EV ASS SOFT, P1, DOI DOI 10.1145/2601248.2601268
   Zwolsman S, 2012, BRIT J GEN PRACT, V62, DOI 10.3399/bjgp12X652382
NR 79
TC 6
Z9 6
U1 1
U2 11
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAY
PY 2021
VL 26
IS 3
AR 50
DI 10.1007/s10664-021-09953-9
PG 53
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA RH6UU
UT WOS:000636351900003
DA 2024-07-18
ER

PT J
AU Riccio, V
   Jahangirova, G
   Stocco, A
   Humbatova, N
   Weiss, M
   Tonella, P
AF Riccio, Vincenzo
   Jahangirova, Gunel
   Stocco, Andrea
   Humbatova, Nargiz
   Weiss, Michael
   Tonella, Paolo
TI Testing machine learning based systems: a systematic mapping
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Systematic mapping; Systematic review; Software testing; Machine
   learning
ID GENERATION
AB Context: A Machine Learning based System (MLS) is a software system including one or more components that learn how to perform a task from a given data set. The increasing adoption of MLSs in safety critical domains such as autonomous driving, healthcare, and finance has fostered much attention towards the quality assurance of such systems. Despite the advances in software testing, MLSs bring novel and unprecedented challenges, since their behaviour is defined jointly by the code that implements them and the data used for training them. Objective: To identify the existing solutions for functional testing of MLSs, and classify them from three different perspectives: (1) the context of the problem they address, (2) their features, and (3) their empirical evaluation. To report demographic information about the ongoing research. To identify open challenges for future research. Method: We conducted a systematic mapping study about testing techniques for MLSs driven by 33 research questions. We followed existing guidelines when defining our research protocol so as to increase the repeatability and reliability of our results. Results: We identified 70 relevant primary studies, mostly published in the last years. We identified 11 problems addressed in the literature. We investigated multiple aspects of the testing approaches, such as the used/proposed adequacy criteria, the algorithms for test input generation, and the test oracles. Conclusions: The most active research areas in MLS testing address automated scenario/input generation and test oracle creation. MLS testing is a rapidly growing and developing research area, with many open challenges, such as the generation of realistic inputs and the definition of reliable evaluation metrics and benchmarks.
C1 [Riccio, Vincenzo; Jahangirova, Gunel; Stocco, Andrea; Humbatova, Nargiz; Weiss, Michael; Tonella, Paolo] Univ Svizzera Italiana USI, Software Inst, Via Buffi 13, Lugano, Switzerland.
C3 Universita della Svizzera Italiana
RP Riccio, V (corresponding author), Univ Svizzera Italiana USI, Software Inst, Via Buffi 13, Lugano, Switzerland.
EM vincenzo.riccio@usi.ch; gunel.jahangirova@usi.ch; andrea.stocco@usi.ch;
   nargiz.humbatova@usi.ch; michael.weiss@usi.ch; paolo.tonella@usi.ch
RI Stocco, Andrea/GVT-6917-2022; Stocco, Andrea/I-7081-2019; Tonella,
   Paolo/C-1702-2015; Riccio, Vincenzo/AAI-1905-2020
OI Stocco, Andrea/0000-0001-8956-3894; Stocco, Andrea/0000-0001-8956-3894;
   Riccio, Vincenzo/0000-0002-6229-8231; Weiss, Michael/0000-0002-8944-389X
FU Universita della Svizzera italiana
FX Open access funding provided by Universita della Svizzera italiana.
CR Abeysirigoonawardena Y, 2019, IEEE INT CONF ROBOT, P8271, DOI [10.1109/icra.2019.8793740, 10.1109/ICRA.2019.8793740]
   Ali NB, 2014, P 8 ACM IEEE INT S E, P1, DOI [10.1145/2652524.2652557, DOI 10.1145/2652524.2652557]
   ALTMAN NS, 1992, AM STAT, V46, P175, DOI 10.2307/2685209
   Aniculaesei A, 2018, PROCEEDINGS 2018 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR AI IN AUTONOMOUS SYSTEMS (SEFAIAS), P23, DOI 10.1145/3194085.3194091
   [Anonymous], 1990, IEEE Std 610.12-1990, V42, P112, DOI [10.1109/IEEESTD.1990.101064, DOI 10.1109/IEEESTD.1990.101064]
   Arp D, 2014, 21ST ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2014), DOI 10.14722/ndss.2014.23247
   Arthur D, 2007, PROCEEDINGS OF THE EIGHTEENTH ANNUAL ACM-SIAM SYMPOSIUM ON DISCRETE ALGORITHMS, P1027
   BEGLEROVIC H, 2017, 2017 IEEE 20 INT C I, P1, DOI DOI 10.1109/ITSC.2017.8317768
   Ben Abdessalem R, 2018, IEEE INT CONF AUTOM, P143, DOI 10.1145/3238147.3238192
   Ben Abdessalem R, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1016, DOI 10.1145/3180155.3180160
   Ben Abdessalem R, 2016, IEEE INT CONF AUTOM, P63, DOI 10.1145/2970276.2970311
   Bishop Christopher M., 2006, Pattern Recognition and Machine Learning, V4
   BLASHFIELD RK, 1991, J CLASSIF, V8, P277
   Bolte JA, 2019, IEEE INT VEH SYM, P438, DOI 10.1109/IVS.2019.8813817
   Borg M., 2019, J AUTOMOT SOFTW ENG, V1, P1, DOI DOI 10.2991/JASE.D.190131.001
   Braiek HB, 2018, TESTING MACHINE LEA
   Briand L. C., 1998, Empirical Software Engineering, V3, P65, DOI 10.1023/A:1009783721306
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P91, DOI 10.1109/32.748920
   Buhler O, 2004, TECHNICAL REPORT SA
   Byun T, 2019, INPUT PRIORITIZATIO
   Campos GO, 2016, DATA MIN KNOWL DISC, V30, P891, DOI 10.1007/s10618-015-0444-8
   Cerf VG, 2018, COMMUN ACM, V61, P7, DOI 10.1145/3177753
   Cheng DW, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2018), P313, DOI 10.1109/QRS.2018.00044
   Cordts M, 2016, PROC CVPR IEEE, P3213, DOI 10.1109/CVPR.2016.350
   CORTES C, 1995, MACH LEARN, V20, P273, DOI 10.1007/BF00994018
   Davis M. D., 1981, P ACM 81 C, P254, DOI DOI 10.1145/800175.809889
   Ding JH, 2017, 2017 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON METAMORPHIC TESTING (MET 2017), P28, DOI 10.1109/MET.2017.2
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Dosovitskiy A., 2017, P 1 ANN C ROB LEARN, P1, DOI DOI 10.48550/ARXIV.1711.03938
   Du XN, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P477, DOI 10.1145/3338906.3338954
   Dua D., 2017, UCI MACHINE LEARNING
   Dwarakanath A, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P118, DOI 10.1145/3213846.3213858
   Eniser HF, 2019, LECT NOTES COMPUT SC, V11424, P171, DOI 10.1007/978-3-030-16722-6_10
   Fraser G, 2012, PROC INT CONF SOFTW, P178, DOI 10.1109/ICSE.2012.6227195
   Fremont DJ, 2019, PROCEEDINGS OF THE 40TH ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '19), P63, DOI 10.1145/3314221.3314633
   Gal Yarin, 2016, Uncertainty in deep learning
   Garousi V, 2019, BENEFITTING GREY LI
   Gopinath D, 2018, CORR ARXIV 180710439
   Groce A, 2014, IEEE T SOFTWARE ENG, V40, P307, DOI 10.1109/TSE.2013.59
   Gross Philip., 2006, Proceedings of the National Conference on Artificial Intelligence, V21, P1705
   Guo JM, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P739, DOI 10.1145/3236024.3264835
   Gyimesi P, 2019, IEEE INT CONF SOFTW, P90, DOI 10.1109/ICST.2019.00019
   Hains G, 2018, ANN IEEE SYST CONF, P230
   Hastie T., 2009, The Elements of Statistical Learning
   He K., 2016, PROC CVPR IEEE, P770, DOI [10.1109/CVPR.2016.90, DOI 10.1109/CVPR.2016.90]
   Henriksson J, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE TESTING (AITEST), P27, DOI 10.1109/AITest.2019.00-12
   Huang X, 2018, SURVEY SAFETY TRUST
   Humbatova N, 2020, PROC INT CONF SOFTW, P1110, DOI 10.1145/3377811.3380395
   International T, 2017, PRESC SIM AD ACT SAF
   Islam MJ, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P510, DOI 10.1145/3338906.3338955
   Jahangirova G, 2020, IEEE INT CONF SOFTW, P74, DOI 10.1109/ICST46399.2020.00018
   James G, 2013, SPRINGER TEXTS STAT, V103, P1, DOI [10.1007/978-1-4614-7138-7, 10.1007/978-1-4614-7138-7_1]
   Just R, 2014, P ISSTA 14, P2014
   Kaufman L., 1987, Statistical Data Analysis Based on the L1-Norm and Related Methods. First International Conference, P405
   Kim J, 2019, PROC INT CONF SOFTW, P1039, DOI 10.1109/ICSE.2019.00108
   Kitchenham B., 2007, GUIDELINES PERFORMIN
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kitchenham BA, 2007, IEEE T SOFTWARE ENG, V33, P316, DOI 10.1109/TSE.2007.1101
   Klück F, 2018, IEEE INT SYMP SOFTW, P118, DOI 10.1109/ISSREW.2018.00-20
   Krizhevsky A., 2009, LEARNING MULTIPLE LA, DOI DOI 10.1145/3065386
   Lecun Y, 1998, P IEEE, V86, P2278, DOI 10.1109/5.726791
   LeCun Y., 2010, MNIST HANDWRITTEN DI
   Li GP, 2018, IEEE INT SYMP SOFTW, P313, DOI [10.1109/1SSREW.2018.00024, 10.1109/ISSREW.2018.00024]
   Li L, 2016, IEEE T INTELL VEHICL, V1, P158, DOI 10.1109/TIV.2016.2608003
   Long PM, 2005, LECT NOTES COMPUT SC, V3559, P79, DOI 10.1007/11503415_6
   Lyu YP, 2018, ASIA PACIF MICROWAVE, P1265, DOI 10.23919/APMC.2018.8617140
   Ma L, 2018, SECURE DEEP LEARNIN
   Ma L, 2018, IEEE INT CONF AUTOM, P120, DOI 10.1145/3238147.3238202
   Ma L, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P614, DOI [10.1109/saner.2019.8668044, 10.1109/SANER.2019.8668044]
   Ma L, 2018, PROC INT SYMP SOFTW, P100, DOI 10.1109/ISSRE.2018.00021
   Ma SQ, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P175, DOI 10.1145/3236024.3236082
   Majumdar R, 2019, PARACOSM LANGUAGE T
   Masuda S, 2018, IEEE ICST WORKSHOP, P279, DOI 10.1109/ICSTW.2018.00061
   McLachlan G.J., 1988, Statistics: Textbooks and Monographs
   Mullins GE, 2018, J SYST SOFTWARE, V137, P197, DOI 10.1016/j.jss.2017.10.031
   Murphy C., 2007, P INT WORKSH RAND TE, P38
   Murphy C., 2007, P INT C SOFTW ENG KN, P167
   Murphy C, 2008, IMPROVING DEPENDABI
   Murphy C., 2008, 20 INT C SOFTWARE EN, P867
   Murphy C, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P189
   Nakajima Shin, 2019, Structured Object-Oriented Formal Language and Method. 8th International Workshop, SOFL+MSVL 2018. Revised Selected Papers. Lecture Notes in Computer Science (LNCS 11392), P21, DOI 10.1007/978-3-030-13651-2_2
   Nakajima S, 2018, LECT NOTES COMPUT SC, V10729, P174, DOI 10.1007/978-3-319-74781-1_13
   Nakajima S, 2016, ASIA PAC SOFWR ENG, P297, DOI [10.1109/APSEC.2016.049, 10.1109/APSEC.2016.19]
   Neves VD, 2016, INT J EMBED SYST, V8, P464, DOI 10.1504/IJES.2016.10001345
   Odena A, 2019, PR MACH LEARN RES, V97
   Patel N, 2018, IEEE INT C INT ROBOT, P6149, DOI 10.1109/IROS.2018.8593375
   Pei KX, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P1, DOI 10.1145/3132747.3132785
   Petersen K, 2008, 12 INT C EV ASS SOFT, P1, DOI 10.5555/2227115.2227123
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Qin Y, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2018), P171, DOI 10.1109/QRS.2018.00031
   Riccio V, 2019, REPLICATION PACKAGE
   Riccio V, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P876, DOI 10.1145/3368089.3409730
   Rokach L, 2014, DATA MINING DECISIO
   ROUSSEEUW PJ, 1987, J COMPUT APPL MATH, V20, P53, DOI 10.1016/0377-0427(87)90125-7
   Rubaiyat AM, 2018, IEEE PAC RIM INT SYM, P54, DOI 10.1109/PRDC.2018.00016
   Ruderman Avraham, 2019, INT C LEARNING REPRE
   Saha P, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE TESTING (AITEST), P157, DOI 10.1109/AITest.2019.00019
   Sanderson M, 2010, NAT LANG ENG, V16, P100, DOI 10.1017/S1351324909005129
   Schmidhuber J, 2015, NEURAL NETWORKS, V61, P85, DOI 10.1016/j.neunet.2014.09.003
   Sekhon J, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2019), P85, DOI 10.1109/ICSE-NIER.2019.00030
   Shen WJ, 2018, 2018 IEEE 18TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY COMPANION (QRS-C), P108, DOI 10.1109/QRS-C.2018.00032
   Sherin S, 2019, SYSTEMATIC MAPPING S
   Shi Q, 2019, DEEPGINI PRIORITIZI
   Simonyan K, 2015, Arxiv, DOI arXiv:1409.1556
   Speed T., 2010, Int Stat Rev, V78, P457, DOI [10.1111/j.1751-5823.2010.00122_11.x, DOI 10.1111/J.1751-5823.2010.00122_11.X]
   Spieker H, 2019, CORR ARXIV 190104169
   Stocco A, 2020, PROC INT CONF SOFTW, P359, DOI 10.1145/3377811.3380353
   Strickland M, 2018, IEEE INT CONF ROBOT, P4685
   Stuart H, 2016, GLOB MENT HEALTH, V3, DOI 10.1017/gmh.2016.11
   Sun Y, 2018, TESTING DEEP NEURA
   Sun YC, 2018, IEEE INT CONF AUTOM, P109, DOI 10.1145/3238147.3238172
   Tian YC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P303, DOI 10.1145/3180155.3180220
   Tuncali CE, 2019, CORR ARXIV 190310629
   Tuncali CE, 2018, IEEE INT VEH SYM, P1555
   Turing A. M., 1950, Mind, London, N. S., V59, P433, DOI [DOI 10.1007/978-1-4020-6710-5_3, DOI 10.1093/MIND/LIX.236.433]
   Udeshi S, 2019, GRAMMAR BASED DIREC
   Udeshi S, 2018, IEEE INT CONF AUTOM, P98, DOI 10.1145/3238147.3238165
   Wang JY, 2019, PROC INT CONF SOFTW, P1245, DOI 10.1109/ICSE.2019.00126
   Wieringa R, 2006, REQUIR ENG, V11, P102, DOI 10.1007/s00766-005-0021-6
   Wohlin C, 2014, P 18 INT C EVALUATIO, DOI DOI 10.1145/2601248.2601268
   Wolschke C., 2018, COMMERCIAL VEHICLE T, P102
   Wolschke C, 2017, IEEE INT SYMP SOFTW, P294, DOI 10.1109/ISSREW.2017.46
   Xie X, 2018, ARXIV 180710453
   Xie XF, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P146, DOI 10.1145/3293882.3330579
   Xie XY, 2011, J SYST SOFTWARE, V84, P544, DOI 10.1016/j.jss.2010.11.920
   Young M, 2005, SOFTWARE TESTING AN
   Zhang JM, 2022, IEEE T SOFTWARE ENG, V48, P1, DOI 10.1109/TSE.2019.2962027
   Zhang JH, 2016, 2016 INTERNATIONAL SYMPOSIUM ON SYSTEM AND SOFTWARE RELIABILITY (ISSSR), P137, DOI [10.1109/ISSSR.2016.029, 10.1109/ISSSR.2016.29]
   Zhang L, 2019, CORR ARXIV 190100054
   Zhang MS, 2018, IEEE INT CONF AUTOM, P132, DOI 10.1145/3238147.3238187
   Zhang YH, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P129, DOI 10.1145/3213846.3213866
   Zhao XH, 2018, 2018 IEEE 18TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY COMPANION (QRS-C), P14, DOI 10.1109/QRS-C.2018.00017
   Zheng WJ, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P314, DOI 10.1109/ICSE-Companion.2019.00131
NR 133
TC 97
Z9 102
U1 2
U2 21
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2020
VL 25
IS 6
BP 5193
EP 5254
DI 10.1007/s10664-020-09881-0
EA SEP 2020
PG 62
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA OI4BB
UT WOS:000569540600001
OA hybrid
DA 2024-07-18
ER

PT J
AU Iung, A
   Carbonell, J
   Marchezan, L
   Rodrigues, E
   Bernardino, M
   Basso, FP
   Medeiros, B
AF Iung, Anibal
   Carbonell, Joao
   Marchezan, Luciano
   Rodrigues, Elder
   Bernardino, Maicon
   Basso, Fabio Paulo
   Medeiros, Bruno
TI Systematic mapping study on domain-specific language development tools
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE DSL; Domain-specific language; Language workbench; Model driven
   engineering; DSL-supporting tools; Systematic mapping study; Systematic
   review
ID MODEL-DRIVEN DEVELOPMENT; FRAMEWORK; DSL; GENERATION; DEFINITION;
   MANAGEMENT; SUPPORT; DESIGN; REQUIREMENTS; ARCHITECTURE
AB Domain-specific languages (DSL) are programming or modeling languages devoted to a given application domain. There are many tools used to support the implementation of a DSL, making hard the decision-making process for one or another. In this sense, identifying and mapping their features is relevant for decision-making by academic and industrial initiative on DSL development. Objective: The goal of this work is to identify and map the tools, Language Workbenches (LW), or frameworks that were proposed to develop DSLs discussed and referenced in publications between 2012 and 2019. Method: A Systematic Mapping Study (SMS) of the literature scoping tools for DSL development. Results: We identified 59 tools, including 9 under a commercial license and 41 with non-commercial licenses, and analyzed their features from 230 papers. Conclusion: There is a substantial amount of tools that cover a large number of features. Furthermore, we observed that usually, the developer adopts one type of notation to implement the DSL: textual or graphical. We also discuss research gaps, such as a lack of tools that allow meta-meta model transformations and that support modeling tools interoperability.
C1 [Iung, Anibal; Carbonell, Joao; Marchezan, Luciano; Rodrigues, Elder; Bernardino, Maicon; Basso, Fabio Paulo; Medeiros, Bruno] Fed Univ Pampa Unipampa, Av Tiaraju, BR-97546550 Alegrete, RS, Brazil.
C3 Universidade Federal do Pampa
RP Iung, A (corresponding author), Fed Univ Pampa Unipampa, Av Tiaraju, BR-97546550 Alegrete, RS, Brazil.
EM netoiiung@gmail.com; joaocarbonellpc@gmail.com; lucianomarchp@gmail.com;
   eldermr@gmail.com; bernardino@acm.org; fabiopbasso@gmail.com;
   brunobragamedeiros@gmail.com
RI de Paula, Luciano Marchezan/AAJ-3752-2020; Bernardino,
   Maicon/G-5670-2011
OI Bernardino, Maicon/0000-0003-2776-8020; Carbonell,
   Joao/0000-0003-4572-9957; Marchezan, Luciano/0000-0003-3096-580X; Iung,
   Anibal/0000-0001-5362-1562
CR Akhundov J, 2016, AEROSP CONF PROC
   Alvarez A, 2013, MATH FINANC ECON, V7, P1, DOI 10.1007/s11579-012-0074-5
   Angel MS, 2018, COMPUT LANG SYST STR, V53, P90, DOI 10.1016/j.cl.2018.02.002
   [Anonymous], 2013, PROC MODELS2013
   Antonelli HL, 2015, PROCEDIA COMPUT SCI, V67, P95, DOI 10.1016/j.procs.2015.09.253
   Arcaini P, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE COMPANION (ICSA-C 2019), P166, DOI 10.1109/ICSA-C.2019.00037
   Arendt T, 2013, CEUR WORKSHOP P, V1092, P1
   Arkin E, 2014, ACM INT C P SER ICPS
   Azevedo AT, 2019, PROCEEDINGS OF THE 21ST INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS (ICEIS), VOL 1, P525, DOI 10.5220/0007727905250534
   Barais O, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE WORKSHOPS (ICSAW), P189, DOI 10.1109/ICSAW.2017.61
   Barii A, 2017, COMPUTER LANGUAGES S, V51, P1339
   Barisic A, 2017, SLE'17: PROCEEDINGS OF THE 10TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING, P115, DOI 10.1145/3136014.3136027
   Bartman B, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P467, DOI 10.1109/SANER.2017.7884655
   Basso F.P., 2017, THESIS
   Basso FP, 2017, 2017 IEEE/ACM JOINT 5TH INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR SYSTEMS-OF-SYSTEMS AND 11TH WORKSHOP ON DISTRIBUTED SOFTWARE DEVELOPMENT, SOFTWARE ECOSYSTEMS AND SYSTEMS-OF-SYSTEMS( JSOS 2017), P27, DOI 10.1109/JSOS.2017.14
   Ben Jrad A, 2019, FUTURE GENER COMP SY, V97, P69, DOI 10.1016/j.future.2018.10.055
   Bencharqui H, 2019, 2019 INT C ADV EL EN, P1, DOI DOI 10.1109/ICSRESA49121.2019.9182412
   Bennani S, 2018, INT C COMP SUPP COOP, P443, DOI 10.1109/CSCWD.2018.8465228
   Bergenti F, 2014, PROC INT C TOOLS ART, P974, DOI 10.1109/ICTAI.2014.147
   Ruiz FJB, 2017, J SYST SOFTWARE, V128, P106, DOI 10.1016/j.jss.2017.03.009
   Bernardino M, 2017, IET SOFTW, V11, P141, DOI 10.1049/iet-sen.2015.0154
   Bernardino M, 2016, IEEE INT CONF SOFTW, P157, DOI 10.1109/ICST.2016.13
   Bettini Lorenzo, 2014, Proceedings of the 9th International Conference on Software Paradigm Trends ICSOFT-PT 2014, P58
   Bettini L, 2019, OPEN COMPUT SCI, V9, P52, DOI 10.1515/comp-2019-0003
   Bocciarelli Paolo, 2018, CIISE, P71
   Bolfe Guilherme, 2019, INT SYMP EMP SOFTWAR, V1, P3, DOI [10.1109/ESEM.2019.8870160, DOI 10.1109/esem.2019.8870160]
   Bonny SPF, 2017, ANIMAL, V11, P1389, DOI 10.1017/S1751731116002305
   Bosselmann Steve, 2018, Leveraging Applications of Formal Methods, Verification and Validation. Modeling. 8th International Symposium, ISoLA 2018. Proceedings: Lecture Notes in Computer Science (LNCS 11244), P340, DOI 10.1007/978-3-030-03418-4_20
   Boubeta-Puig J, 2019, INFORM SYST, V81, P267, DOI 10.1016/j.is.2017.11.005
   Bousse E, 2019, SOFTW SYST MODEL, V18, P385, DOI 10.1007/s10270-017-0598-5
   Bousse E, 2018, J SYST SOFTWARE, V137, P261, DOI 10.1016/j.jss.2017.11.025
   Brdjanin D, 2018, P 8 INT C WEB INT MI, P16
   Brunelière H, 2010, LECT NOTES COMPUT SC, V6138, P32, DOI 10.1007/978-3-642-13595-8_5
   Bünder H, 2019, MODELSWARD: PROCEEDINGS OF THE 7TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, 2019, P129, DOI 10.5220/0007556301290140
   Buisson J, 2019, LECT NOTE NETW SYST, V64, P259, DOI 10.1007/978-3-030-05481-6_20
   Burdusel A, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS: COMPANION PROCEEDINGS (MODELS-COMPANION '18), P12, DOI 10.1145/3270112.3270130
   Butting A, 2017, ACM INT CONF PR SER, P75, DOI 10.1145/3168365.3168368
   Butting A, 2018, PROCEEDINGS OF THE 11TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING (SLE '18), P187, DOI 10.1145/3276604.3276621
   Caramujo J, 2019, REQUIR ENG, V24, P1, DOI 10.1007/s00766-018-0305-2
   Cariou Eric, 2018, MODELS WORKSH, P251
   Challenger M, 2014, ENG APPL ARTIF INTEL, V28, P111, DOI 10.1016/j.engappai.2013.11.012
   Chen Z, 2012, PROC INT SYMP POWER, P25, DOI 10.1109/ISPSD.2012.6229014
   Chlipala A, 2017, LEIBNIZ INT P INFORM, V71
   Combemale B, 2018, COMPUT LANG SYST STR, V54, P139, DOI 10.1016/j.cl.2018.05.004
   Cook T. D., 1979, QUASIEXPERIMENTATION
   Córdoba-Sánchez I, 2016, COMPUT LANG SYST STR, V45, P164, DOI 10.1016/j.cl.2016.02.002
   Corral Diaz MA, 2018, P 2017 5 INT C SOFTW, V2018
   Coulon F, 2018, PROCEEDINGS OF THE 11TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING (SLE '18), P215, DOI 10.1145/3276604.3276623
   Crapo AW, 2019, IEEE INT C SEMANT CO, P361, DOI [10.1109/ICOSC.2019.8665630, 10.1109/ICSC.2019.00071]
   Barbosa AFD, 2019, PROCEEDINGS OF THE 14TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL APPROACHES TO SOFTWARE ENGINEERING (ENASE), P104, DOI 10.5220/0007728101040113
   De F CD, 2017, SECURITY MODELING E
   de la Vega A, 2018, COMPUT LANG SYST STR, V54, P316, DOI 10.1016/j.cl.2018.07.002
   de Sousa LM, 2018, COGENT ENG, V5, DOI 10.1080/23311916.2018.1436889
   de Sousa LM, 2016, GEOINFORMATICA, V20, P117, DOI 10.1007/s10707-015-0233-y
   Dejanovic I, 2017, KNOWL-BASED SYST, V115, P1, DOI 10.1016/j.knosys.2016.10.023
   Demirkol S, 2013, COMPUT SCI INF SYST, V10, P1525, DOI 10.2298/CSIS121105044D
   Denkers J, 2018, PROCEEDINGS OF THE 11TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING (SLE '18), P205, DOI 10.1145/3276604.3276608
   Derakhshanmanesh M, 2019, SOFTW SYST MODEL, V18, P2557, DOI 10.1007/s10270-018-0682-5
   do NascimentoL.M., 2012, 7 INT C SOFTWARE ENG, P179
   Dörndorfer J, 2019, LECT NOTES BUS INF P, V350, P75, DOI 10.1007/978-3-030-21297-1_7
   Dupont G, 2018, IEEE ACM INT WORKS M, P49, DOI 10.1145/3193954.3193962
   Dwarakanath A, 2017, IEEE INT CONF SOFTW, P460, DOI 10.1109/ICST.2017.52
   Eclipse F, 2020, XBASE
   Eclipse F, 2017, SIRIUS
   Eclipse F, 2020, ACCELEO
   Eclipse Foundation, 2020, ACC
   Efftinge S, 2013, ACM SIGPLAN NOTICES, V48, P112, DOI 10.1145/2480361.2371419
   Elaasar M, 2018, INT C MOD DRIV ENG S, P236
   Montenegro-Marín CE, 2012, J WEB ENG, V11, P23
   Erdweg S, 2015, COMPUT LANG SYST STR, V44, P24, DOI 10.1016/j.cl.2015.08.007
   Erdweg S, 2013, LECT NOTES COMPUT SC, V8225, P197, DOI 10.1007/978-3-319-02654-1_11
   Essadi N, 2018, 2018 IEEE 5TH INTERNATIONAL CONGRESS ON INFORMATION SCIENCE AND TECHNOLOGY (IEEE CIST'18), P12, DOI 10.1109/CIST.2018.8596540
   Falkner K, 2013, MIL COMM INF SYST C, P1
   Ferreiro-Vila E, 2019, APL MATER, V7, DOI 10.1063/1.5087559
   Forbrig P, 2018, P 2018 WORKSH PHD SO
   Fowler M., 2010, Domain-specific languages
   Gamboa M, 2019, SOFTW SYST MODEL, V18, P2441, DOI 10.1007/s10270-018-0678-1
   García-Díaz V, 2018, APPL SOFT COMPUT, V67, P822, DOI 10.1016/j.asoc.2017.05.038
   Gargantini A., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P559, DOI 10.1109/ICST.2012.141
   Gargantini A, 2018, IEEE ICST WORKSHOP, P308, DOI 10.1109/ICSTW.2018.00066
   Garmendia A, 2019, INFORM SOFTWARE TECH, V115, P97, DOI 10.1016/j.infsof.2019.05.010
   Gavran I, 2018, ONWARD!'18: PROCEEDINGS OF THE 2018 ACM SIGPLAN INTERNATIONAL SYMPOSIUM ON NEW IDEAS, NEW PARADIGMS, AND REFLECTIONS ON PROGRAMMING AND SOFTWARE, P44, DOI 10.1145/3276954.3276961
   Gibbs I, 2015, J SYST SOFTWARE, V101, P69, DOI 10.1016/j.jss.2014.11.039
   Gómez-Abajo P, 2018, SCI COMPUT PROGRAM, V163, P85, DOI 10.1016/j.scico.2018.01.008
   Gonnord L, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS: COMPANION PROCEEDINGS (MODELS-COMPANION '18), P106, DOI 10.1145/3270112.3270116
   Gossen Frederik, 2018, Leveraging Applications of Formal Methods, Verification and Validation. Modeling. 8th International Symposium, ISoLA 2018. Proceedings: Lecture Notes in Computer Science (LNCS 11244), P546, DOI 10.1007/978-3-030-03418-4_33
   Granchelli G, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE WORKSHOPS (ICSAW), P46, DOI 10.1109/ICSAW.2017.48
   Guelfi N, 2017, INFORMATION SWITZERL, V8, P1
   Haitzer T, 2014, SCI COMPUT PROGRAM, V90, P135, DOI 10.1016/j.scico.2013.10.004
   Hasan S, 2017, WKSP MODEL SIM CYBER
   Haser Florian, 2018, Software Quality: Methods and Tools for Better Software and Systems. 10th International Conference, SWQD 2018. Proceedings. Lecture Notes in Business Information Processing (LNBIP 302), P147, DOI 10.1007/978-3-319-71440-0_9
   Haser F, 2016, ACM INT C P SER ICPS
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Heinrich R, 2019, IEEE T SOFTWARE ENG
   Heitkotter Henning, 2012, Proceedings of the ICSOFT 2012. 7th International Conference on Software Paradigm Trends, P127
   Henriques Pedro Rangel., 2002, Electronic notes in theoretical computer science, V65, P77, DOI [10.1016/S1571-0661(04)80428-6, DOI 10.1016/S1571-0661(04)80428-6]
   Herrera AS-B, 2014, CEUR WORKSHOP P, V1321
   Hinkel G, 2019, SOFTW SYST MODEL, V18, P129, DOI 10.1007/s10270-017-0578-9
   Hoffmann B, 2018, LECT NOTES ARTIF INT, V10978, P187, DOI 10.1007/978-3-319-94580-4_15
   Hoisl B, 2017, INFORM SOFTWARE TECH, V92, P49, DOI 10.1016/j.infsof.2017.07.008
   Hojaji F, 2020, SOFTW SYST MODEL, V19, P199, DOI 10.1007/s10270-019-00737-w
   Hosein Doost S., 2017, SOFTW SYST MODEL, V18, P1
   Hoyos JR, 2013, J SYST SOFTWARE, V86, P2890, DOI 10.1016/j.jss.2013.07.008
   Huang CY, 2015, MODELSWARD 2015 PROCEEDINGS OF THE 3RD INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, P247
   Idani A, 2019, LECT NOTES COMPUT SC, V11495, P23, DOI 10.1007/978-3-030-18744-6_2
   Iliasov A, 2012, 2012 WORKSHOP ON DEPENDABLE TRANSPORTATION SYSTEMS/RECENT ADVANCES IN SOFTWARE DEPENDABILITY (WDTS-RASD 2012), P1, DOI 10.1109/WDTS-RASD.2012.11
   Jacob F, 2014, COMPUT SCI ENG, V16, P52, DOI 10.1109/MCSE.2013.97
   Jafer S, 2017, AIAA MOD SIM TECHN C
   Jager S, 2016, 10 ANN INT SYST C SY
   Jakumeit' E, 2014, SCI COMPUT PROGRAM, V85, P41, DOI 10.1016/j.scico.2013.10.009
   Jeusfeld ManfredA., 2009, Encyclopedia of Database Systems, P1727
   Jézéquel JM, 2015, SOFTW SYST MODEL, V14, P905, DOI 10.1007/s10270-013-0354-4
   Jinzhi L, 2017, 1 WORKSH FORM COS CY
   Johnson RE, 1997, COMMUN ACM, V40, P39, DOI 10.1145/262793.262799
   Kahani N, 2018, PROC IEEE ACM INT C, P515, DOI 10.1145/3183440.3190333
   Kalnins A, 2019, SOFTW SYST MODEL, V18, P1699, DOI 10.1007/s10270-018-0668-3
   Kanav S, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS: COMPANION PROCEEDINGS (MODELS-COMPANION '18), P150, DOI 10.1145/3270112.3275334
   Karol S, 2018, ACM T MATH SOFTWARE, V44, DOI 10.1145/3175659
   Kelly S, 1996, LECT NOTES COMPUT SC, V1080, P1
   Kern H., 2016, THESIS
   kesson A, 2017, JATTE TUNABLE TREE E, V2
   Kitchenham Barbara., 2010, EASE'10 Proceedings of the 14th international conference on Evaluation and Assessment in Software Engineering, P25, DOI DOI 10.14236/EWIC/EASE2010.4
   Kitchenham BA, 2011, INFORM SOFTWARE TECH, V53, P638, DOI 10.1016/j.infsof.2010.12.011
   Köster N, 2018, 2018 SECOND IEEE INTERNATIONAL CONFERENCE ON ROBOTIC COMPUTING (IRC), P113, DOI 10.1109/IRC.2018.00025
   Korenkov Y, 2015, PROC CONF OPEN INNOV, P75, DOI 10.1109/FRUCT.2015.7117975
   Kosar T, 2016, INFORM SOFTWARE TECH, V71, P77, DOI 10.1016/j.infsof.2015.11.001
   Koschke R, 2018, IEEE INT WORK C SO, P165, DOI 10.1109/SCAM.2018.00026
   Kövesdán G, 2019, SOFTW SYST MODEL, V18, P2421, DOI 10.1007/s10270-018-0673-6
   Kowalski M, 2012, E-INFORMATICA, V6, P7, DOI 10.5277/e-Inf120101
   Krasts O., 2012, 2012 Second International Conference on Digital Information Processing and Communications (ICDIPC), P80, DOI 10.1109/ICDIPC.2012.6257291
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Le DM, 2018, DOMAIN DRIVEN DESIGN
   Le Goaer O., 2013, Proceedings of the First Workshop on the globalization of domain specific languages, P28, DOI DOI 10.1145/2489812.2489819
   Lelandais B, 2018, PROCEEDINGS OF THE 11TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING (SLE '18), P200, DOI 10.1145/3276604.3276620
   Lemazurier L, 2017, IFAC PAPERSONLINE, V50, P7260, DOI 10.1016/j.ifacol.2017.08.1376
   Li XS, 2018, J COMPUT SCI TECH-CH, V33, P900, DOI 10.1007/s11390-018-1865-9
   Liebel G, 2014, LECT NOTES COMPUT SC, V8767, P166, DOI 10.1007/978-3-319-11653-2_11
   López-Fernández JJ, 2019, SOFTW SYST MODEL, V18, P961, DOI 10.1007/s10270-017-0632-7
   Ma TY, 2017, PROCEDIA COMPUT SCI, V108, P1232, DOI 10.1016/j.procs.2017.05.114
   Macías F, 2019, J LOG ALGEBR METHODS, V106, P167, DOI 10.1016/j.jlamp.2018.12.005
   Makedonski P, 2019, SOFTW QUAL J, P1
   Marand EA, 2015, COMPUT LANG SYST STR, V44, P319, DOI 10.1016/j.cl.2015.09.002
   Maro S., 2015, P 2015 ACM SIGPLAN I, P1, DOI [10.1145/2814251.2814253, DOI 10.1145/2814251.2814253]
   Maroti M., 2014, MPM@ MoDELS, V1237, P41
   Maschotta R, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON MECHATRONICS (ICM), P402, DOI [10.1109/icmech.2019.8722951, 10.1109/ICMECH.2019.8722951]
   Mavridou A, 2018, CEUR WORKSHOP P, V2245, P416
   Mavropoulos O, 2017, 2017 IEEE/ACIS 15TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGEMENT AND APPLICATIONS (SERA), P395, DOI 10.1109/SERA.2017.7965757
   Mayr-Dorn C, 2017, 2017 43RD EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P57, DOI 10.1109/SEAA.2017.33
   Méndez-Acuña D, 2016, COMPUT LANG SYST STR, V46, P206, DOI 10.1016/j.cl.2016.09.004
   Mendivelso Luis F., 2018, Journal of Software Engineering Research and Development, V6, DOI 10.1186/s40411-018-0060-6
   Merino MV, 2018, PROCEEDINGS OF THE 11TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING (SLE '18), P210, DOI 10.1145/3276604.3276981
   Mernik M, 2005, ACM COMPUT SURV, V37, P316, DOI 10.1145/1118890.1118892
   Mettouris C, 2018, LECT NOTES COMPUT SC, V11249, P37, DOI 10.1007/978-3-030-03062-9_3
   Mezhuyev V, 2018, IEEE ACCESS, V6, P49476, DOI 10.1109/ACCESS.2018.2867559
   Mohamad RP, 2015, P INT C CLOUD COMP T, P632
   Molina A, 2019, QUANTUM-AUSTRIA, V3, DOI 10.22331/q-2019-01-25-117
   Molina AI, 2013, J SYST SOFTWARE, V86, P1772, DOI 10.1016/j.jss.2012.07.049
   Monthe VM, 2016, CEUR WORKSHOP P, V1697
   Montrieux L, 2013, 2013 3RD INTERNATIONAL WORKSHOP ON DEVELOPING TOOLS AS PLUG-INS (TOPI), P1, DOI 10.1109/TOPI.2013.6597186
   Morgan R, 2018, LECT NOTES COMPUT SC, V10816, P440, DOI 10.1007/978-3-319-91563-0_27
   Mosteller D, 2018, PNSE PETRI NETS ACSD, P57
   Mussbacher G, 2014, LECT NOTES COMPUT SC, V8767, P183, DOI 10.1007/978-3-319-11653-2_12
   Nägele T, 2017, 2017 43RD EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P247, DOI 10.1109/SEAA.2017.29
   Naujokat S, 2018, INT J SOFTW TOOLS TE, V20, P327, DOI 10.1007/s10009-017-0453-6
   Nazir A, 2017, CLUSTER COMPUT, V20, P2423, DOI 10.1007/s10586-017-0819-2
   Neubauer P, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P127, DOI 10.1109/SANER.2017.7884615
   Nordmann A, 2015, IEEE INT CONF ROBOT, P5032, DOI 10.1109/ICRA.2015.7139899
   Ober I, 2018, SOFTW SYST MODEL, V17, P319, DOI 10.1007/s10270-016-0518-0
   Oliveira B, 2017, EXPERT SYST, V34, DOI 10.1111/exsy.12168
   OMG, 2019, MET OBJ FAC
   Ouared A, 2018, COMPUT LANG SYST STR, V54, P236, DOI 10.1016/j.cl.2018.05.002
   Pasternak M, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS: COMPANION PROCEEDINGS (MODELS-COMPANION '18), P42, DOI 10.1145/3270112.3270135
   Pereira DID, 2018, COMM COM INF SC, V929, P17, DOI 10.1007/978-3-030-02852-7
   Pérez F, 2013, S VIS LANG HUM CEN C, P99, DOI 10.1109/VLHCC.2013.6645251
   Pérez-Berenguer D, 2019, IEEE ACCESS, V7, P51396, DOI 10.1109/ACCESS.2019.2911884
   Pescador A, 2016, IEEE INT CONF AUTOM, P438, DOI 10.1145/2970276.2970328
   Pescador A, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P166, DOI 10.1109/MODELS.2015.7338247
   Petersen K, 2008, 12 INT C EV ASS SOFT, P1, DOI 10.5555/2227115.2227123
   Pietrusewicz K, 2019, APPL SCI-BASEL, V9, DOI 10.3390/app9030376
   Pomante L, 2015, 2015 IEEE AEROSPACE CONFERENCE, DOI 10.1109/AERO.2015.7119032
   Proll R., 2018, Communications in Computer and Information Science, V880, P247, DOI [10.1007/978-3-319-94764-8_11, DOI 10.1007/978-3-319-94764-8_11]
   Rabiser R, 2018, AUTOMAT SOFTW ENG, V25, P875, DOI 10.1007/s10515-018-0241-x
   Rapos EJ, 2019, MODELSWARD: PROCEEDINGS OF THE 7TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, 2019, P417, DOI 10.5220/0007485204170425
   Ratiu D, 2019, INT J SOFTW TOOLS TE, V21, P267, DOI 10.1007/s10009-019-00510-w
   Ratiu D, 2017, SPIN'17: PROCEEDINGS OF THE 24TH ACM SIGSOFT INTERNATIONAL SPIN SYMPOSIUM ON MODEL CHECKING OF SOFTWARE, P60, DOI 10.1145/3092282.3092283
   Ratiu D, 2016, 2016 IEEE/ACM 11TH INTERNATIONAL WORKSHOP IN AUTOMATION OF SOFTWARE TEST (AST), P15, DOI [10.1109/AST.2016.011, 10.1145/2896921.2896922]
   Rein P, 2016, ONWARD!'16: PROCEEDINGS OF THE 2016 ACM INTERNATIONAL SYMPOSIUM ON NEW IDEAS, NEW PARADIGMS, AND REFLECTIONS ON PROGRAMMING AND SOFTWARE, P165, DOI 10.1145/2986012.2986022
   Rensink A, 2018, SOFTWARE TECHNOLOGIE, V748, P30
   Ribeiro A, 2014, P 29 ANN ACM S APPL, P1316, DOI DOI 10.1145/2554850.2554926
   Ribeiro A, 2017, ICEIS: PROCEEDINGS OF THE 19TH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS - VOL 2, P52, DOI 10.5220/0006310400520063
   Ribeiro A, 2016, PROCEEDINGS OF THE 4TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT (MODELSWARD 2016), P323
   Ribic S, 2018, COMPUT LANG SYST STR, V54, P252, DOI 10.1016/j.cl.2018.07.001
   Rieger C, 2018, COMPUT LANG SYST STR, V53, P43, DOI 10.1016/j.cl.2018.01.001
   Ries B, 2018, PROCEEDINGS OF THE 11TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING (SLE '18), P103, DOI 10.1145/3276604.3276614
   Risti S, 2017, 2017 IEEE 14 INT SCI, P6
   Rocha H, 2017, J BRAZILIAN COMPUTER, V23
   Rodriguez-Echeverria R, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P370, DOI 10.1145/3239372.3239383
   Rose L.M., 2012, Proceedings of the 2012 Extreme Modeling Workshop, P15
   Ruiz-Rube I., 2019, SOFTWARE SYSTEMS MOD, P1
   Salehi P, 2018, INNOV SYST SOFTW ENG, V14, P273, DOI 10.1007/s11334-018-0320-y
   J L, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SERVICES COMPUTING (SCC), P354, DOI 10.1109/SCC.2017.52
   Santos AL, 2016, PROCEEDINGS OF THE 2016 ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING (SLE'16), P253, DOI 10.1145/2997364.2997377
   Savic D, 2014, 2014 9TH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY (QUATIC), P134, DOI 10.1109/QUATIC.2014.24
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Schwaiger WSA, 2016, CAISE FORUM
   Selgrad K, 2016, P 9TH EUROPEAN LISP
   Semeráth O, 2018, LECT NOTES COMPUT SC, V10802, P227, DOI 10.1007/978-3-319-89363-1_13
   Sirgy MJ, 2018, INT HANDB QUALITY, P3, DOI 10.1007/978-3-319-75529-8_1
   Smits J, 2017, SLE'17: PROCEEDINGS OF THE 10TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING, P221, DOI 10.1145/3136014.3136029
   Sorgalla Jonas, 2018, P 12 EUROPEAN C SOFT
   Stevanetic S, 2018, EMPIR SOFTW ENG, V23, P3578, DOI 10.1007/s10664-017-9583-4
   Stöcker K, 2017, IEEE ICST WORKSHOP, P304, DOI 10.1109/ICSTW.2017.56
   Strömbäck F, 2018, PROCEEDINGS OF THE 11TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING (SLE '18), P60, DOI 10.1145/3276604.3276982
   Sutii AM, 2017, COMPUTER LANGUAGES S
   Svore K, 2018, RWDSL2018: PROCEEDINGS OF THE REAL WORLD DOMAIN SPECIFIC LANGUAGES WORKSHOP 2018, DOI 10.1145/3183895.3183901
   Szabó T, 2016, IEEE INT CONF AUTOM, P870, DOI 10.1145/2970276.2970296
   Tairas R, 2015, SOFTW SYST MODEL, V14, P889, DOI 10.1007/s10270-013-0352-6
   Tariq MU, 2014, ACESMB MODELS, V1250, P6
   Tekinerdogan B, 2019, SOFTW SYST MODEL, V18, P2907, DOI 10.1007/s10270-018-00705-w
   Terzic B, 2018, ENTERP INF SYST-UK, V12, P1034, DOI 10.1080/17517575.2018.1460766
   Tezel B, 2018, 12 TURK NAT SOFTW EN
   Theobald M, 2018, INT J ELECT ELECT EN, V7, P70, DOI [10.18178/ijeetc.7.2.70-75, DOI 10.18178/IJEETC.7.2.70-75]
   Tikhonova U, 2017, SOFTWARE SYSTEMS MOD, P1
   Tisi M, 2018, LECT NOTES COMPUT SC, V10888, P142, DOI 10.1007/978-3-319-93317-7_7
   Tolvanen JP, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P235, DOI 10.1145/3239372.3239410
   Tragatschnig S, 2018, INFORM SOFTWARE TECH, V100, P133, DOI 10.1016/j.infsof.2018.04.005
   Tran NH, 2017, ASIA PAC SOFWR ENG, P417, DOI 10.1109/APSEC.2017.48
   Trobo IP, 2019, J AMB INTEL HUM COMP, V10, P2683, DOI 10.1007/s12652-018-0969-y
   Uhnak P, 2016, PROCEEDINGS OF THE 11TH EDITION OF THE INTERNATIONAL WORKSHOP ON SMALLTALK TECHNOLOGIES, (IWST 2016), DOI 10.1145/2991041.2991055
   Vaderna R, 2018, SCI PROGRAMMING, P2018
   van den Berg F, 2018, 2018 13TH ANNUAL CONFERENCE ON SYSTEM OF SYSTEMS ENGINEERING (SOSE), P225, DOI 10.1109/SYSOSE.2018.8428770
   van den Berg F, 2018, LECT NOTES COMPUT SC, V10740, P295, DOI 10.1007/978-3-319-74947-1_21
   van Rozen R, 2019, SOFTW SYST MODEL, V18, P195, DOI 10.1007/s10270-017-0608-7
   vanRozen R, 2017, SOFTWARE SYSTEMS MOD, V18, P1
   Viana M, 2013, 2013 27TH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2013), P89, DOI 10.1109/SBES.2013.15
   Viana MC, 2013, J SYST SOFTWARE, V86, P3123, DOI 10.1016/j.jss.2013.07.030
   Vieira MA, 2017, P 23 BRAZ S MULT WEB, P29
   Vinogradov S, 2015, 2015 IEEE INTERNATIONAL SYMPOSIUM ON SYSTEMS ENGINEERING (ISSE) PROCEEDINGS, P56, DOI 10.1109/SysEng.2015.7302512
   Visic N, 2015, INT CONF RES CHAL, P286, DOI 10.1109/RCIS.2015.7128889
   Vissers Y, 2017, SPECIFICATION DESIGN, P1
   Vistbakka Inna, 2018, Abstract State Machines, Alloy, B, TLA, VDM, and Z. 6th International Conference, ABZ 2018. Proceedings: LNCS 10817, P386, DOI 10.1007/978-3-319-91271-4_28
   Voelter Markus, 2018, Leveraging Applications of Formal Methods, Verification and Validation. Modeling. 8th International Symposium, ISoLA 2018. Proceedings: Lecture Notes in Computer Science (LNCS 11244), P309, DOI 10.1007/978-3-030-03418-4_19
   Voelter M, 2019, SOFTW SYST MODEL, V18, P2507, DOI 10.1007/s10270-018-0679-0
   Voelter Markus., 2012, PROC C SYSTEMS PROGR, P121, DOI DOI 10.1145/2384716.2384767
   Vogele Christian, 2018, Softw Syst Model, V17, P443, DOI 10.1007/s10270-016-0566-5
   Volter Markus, 2017, SOFTW SYST MODEL, P1
   Vujovic V, 2014, IEEE INT CONF INTELL, P233, DOI 10.1109/INES.2014.6909375
   Wachsmuth GH, 2014, IEEE SOFTWARE, V31, P35, DOI 10.1109/MS.2014.100
   Walter T, 2014, SOFTW SYST MODEL, V13, P83, DOI 10.1007/s10270-012-0249-9
   Whittle J, 2017, SOFTW SYST MODEL, V16, P313, DOI 10.1007/s10270-015-0487-8
   Wienke J, 2018, 2018 SECOND IEEE INTERNATIONAL CONFERENCE ON ROBOTIC COMPUTING (IRC), P25, DOI 10.1109/IRC.2018.00013
   Wigand DL, 2017, 2017 FIRST IEEE INTERNATIONAL CONFERENCE ON ROBOTIC COMPUTING (IRC), P164, DOI 10.1109/IRC.2017.34
   Wu H, 2008, SOFTWARE PRACT EXPER, V38, P1073, DOI 10.1002/spe.863
   Yakymets N, 2018, IEEE INT C INT ROBOT, P6136, DOI 10.1109/IROS.2018.8594115
   Yigitbas E, 2018, LECT NOTES COMPUT SC, V10890, P97, DOI 10.1007/978-3-319-92997-2_7
   Zabawa P, 2017, CDMM F DOMAIN LANGUA
   Zarrin B, 2018, INT C MOD DRIV ENG S, P159
   Zarrin B, 2014, P 14 WORKSH DOM SPEC, P23, DOI [10.1145/2688447.2688452., DOI 10.1145/2688447.2688452]
   Zarrin B, 2018, PROCEEDINGS OF THE 6TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, P83, DOI 10.5220/0006555800830094
   Zhao T, 2018, COMPUT LANG SYST STR, V54, P39, DOI 10.1016/j.cl.2018.04.004
   Zhou N, 2017, IEEE ACCESS, V5, P19909, DOI 10.1109/ACCESS.2017.2754507
   Zhu M, 2017, INT C ADV COMP ENT, P868
   Zhu Z, 2017, IEEE ACCESS, V5, P21694, DOI 10.1109/ACCESS.2017.2760060
   Zikra I, 2012, LECT NOTES BUS INF P, V134, P172
   Zweihoff P, 2019, LECT NOTES COMPUT SC, V11424, P101, DOI 10.1007/978-3-030-16722-6_6
NR 265
TC 35
Z9 36
U1 3
U2 14
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2020
VL 25
IS 5
BP 4205
EP 4249
DI 10.1007/s10664-020-09872-1
EA AUG 2020
PG 45
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NJ1FD
UT WOS:000563602900001
DA 2024-07-18
ER

PT J
AU Hajri, I
   Goknil, A
   Pastore, F
   Briand, LC
AF Hajri, Ines
   Goknil, Arda
   Pastore, Fabrizio
   Briand, Lionel C.
TI Automating system test case classification and prioritization for use
   case-driven testing in product lines
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Product Line Engineering; Use case driven development; Regression
   testing; Test case selection and prioritization; Automotive;
   Requirements engineering
ID REGRESSION TEST SELECTION; TEST-GENERATION; REQUIREMENTS; MODELS;
   MINIMIZATION; METHODOLOGY
AB Product Line Engineering (PLE) is a crucial practice in many software development environments where software systems are complex and developed for multiple customers with varying needs. At the same time, many development processes are use case-driven and this strongly influences their requirements engineering and system testing practices. In this paper, we propose, apply, and assess an automated system test case classification and prioritization approach specifically targeting system testing in the context of use case-driven development of product families. Our approach provides: (i) automated support to classify, for a new product in a product family, relevant and valid system test cases associated with previous products, and (ii) automated prioritization of system test cases using multiple risk factors such as fault-proneness of requirements and requirements volatility in a product family. Our evaluation was performed in the context of an industrial product family in the automotive domain. Results provide empirical evidence that we propose a practical and beneficial way to classify and prioritize system test cases for industrial product lines.
C1 [Hajri, Ines; Goknil, Arda; Pastore, Fabrizio; Briand, Lionel C.] Univ Luxembourg, SnT Ctr, Luxembourg, Luxembourg.
   [Briand, Lionel C.] Univ Ottawa, Sch EECS, Ottawa, ON, Canada.
C3 University of Luxembourg; University of Ottawa
RP Pastore, F (corresponding author), Univ Luxembourg, SnT Ctr, Luxembourg, Luxembourg.
EM ines.hajri.svv@gmail.com; ar.goknil@gmail.com; fabrizio.pastore@uni.lu;
   lionel.briand@uni.lu
RI Pastore, Fabrizio/ABY-9262-2022
OI Pastore, Fabrizio/0000-0003-3541-3641
FU FNR; IEE S.A. Luxembourg [FNR/P10/03, FNR10045046]; Canada Research
   Chair program; European Research Council (ERC) under the European
   Union's Horizon 2020 research and innovation programme [694277]
FX We gratefully acknowledge funding from FNR and IEE S.A. Luxembourg, the
   grants FNR/P10/03 and FNR10045046, the Canada Research Chair program,
   and the European Research Council (ERC) under the European Union's
   Horizon 2020 research and innovation programme (grant agreement No
   694277).
CR Al-Hajjaji Mustafa, 2017, 2017 IEEE/ACM 2nd International Workshop on Variability and Complexity in Software Design (VACE). Proceedings, P34, DOI 10.1109/VACE.2017.8
   Al-Hajjaji M, 2016, SOFTW SYST MODEL
   Al-Hajjaji M, 2017, 2017 IEEE/ACM 12TH INTERNATIONAL WORKSHOP ON AUTOMATION OF SOFTWARE TESTING (AST), P16, DOI 10.1109/AST.2017.7
   Al-Hajjaji M, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P197, DOI 10.1145/2648511.2648532
   [Anonymous], 2017, VAMOS 17
   [Anonymous], 2018, ISO 26262
   [Anonymous], 2004, SIGSOFT SOFTWARE ENG
   Arafeen MJ, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P312, DOI 10.1109/ICST.2013.12
   Arrieta A, 2019, J SYST SOFTWARE, V149, P1, DOI 10.1016/j.jss.2018.09.055
   Arrieta A, 2017, SOFTWARE QUAL J, V25, P1041, DOI 10.1007/s11219-016-9341-7
   Arrieta A, 2016, GECCO'16: PROCEEDINGS OF THE 2016 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1053, DOI 10.1145/2908812.2908871
   Baller H, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P303, DOI 10.1109/ICST.2014.43
   BERTOLINO A, 2003, P 5 SOFTW PROD FAM E, P181
   Binkley D, 1997, IEEE T SOFTWARE ENG, V23, P498, DOI 10.1109/32.624306
   Briand LC, 2009, INFORM SOFTWARE TECH, V51, P16, DOI 10.1016/j.infsof.2008.09.010
   Buhne S, 2003, P 9 INT WORKSH REQ E, P59
   Cabral I, 2010, LECT NOTES COMPUT SC, V6287, P241, DOI 10.1007/978-3-642-15579-6_17
   Chen Y, 2002, TECTONICS, V21, DOI 10.1029/2001TC901030
   Clarke D, 2011, ACM SIGPLAN NOTICES, V46, P13, DOI 10.1145/1942788.1868298
   COLEMAN D, 1980, ACM T MATH SOFTWARE, V6, P327, DOI 10.1145/355900.355905
   Neto PADS, 2011, INFORM SOFTWARE TECH, V53, P407, DOI 10.1016/j.infsof.2010.12.003
   Devroey X, 2014, P 8 INT WORKSH VAR M, P1
   Devroey X, 2017, SOFTW SYST MODEL, V16, P153, DOI 10.1007/s10270-015-0479-8
   Di Nardo D, 2015, SOFTW TEST VERIF REL, V25, P371, DOI 10.1002/stvr.1572
   Do H, 2016, ADV COMPUT, V103, P53, DOI 10.1016/bs.adcom.2016.04.004
   Do H, 2006, IEEE T SOFTWARE ENG, V32, P733, DOI 10.1109/TSE.2006.92
   Dukaczewski M, 2013, 2013 4TH INTERNATIONAL WORKSHOP ON PRODUCT LINE APPROACHES IN SOFTWARE ENGINEERING (PLEASE), P49, DOI 10.1109/PLEASE.2013.6608665
   Engstrom E., 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P367, DOI 10.1109/ICST.2011.27
   Engstrom E, 2013, THESIS
   Engström E, 2011, INFORM SOFTWARE TECH, V53, P2, DOI 10.1016/j.infsof.2010.05.011
   Engström E, 2010, INFORM SOFTWARE TECH, V52, P14, DOI 10.1016/j.infsof.2009.07.001
   Ensan A., 2011, Proceedings of the 2011 Eighth International Conference on Information Technology: New Generations (ITNG), P291, DOI 10.1109/ITNG.2011.58
   Geppert B, 2004, LECT NOTES COMPUT SC, V3107, P35
   Goknil A., 2015, Proceedings of the 2015 International Symposium on Software Testing and Analysis, P385
   Gonzalez-Sanchez A, 2011, SOFTWARE PRACT EXPER, V41, P1105, DOI 10.1002/spe.1065
   Haidry SEZ, 2013, IEEE T SOFTWARE ENG, V39, P258, DOI 10.1109/TSE.2012.26
   Hajri I, 2018, SOFTW SYST MODEL, V17, P939, DOI 10.1007/s10270-016-0539-8
   Hajri I, 2018, J SYST SOFTWARE, V139, P211, DOI 10.1016/j.jss.2018.02.021
   Hajri I, 2017, LECT NOTES COMPUT SC, V10153, P3, DOI 10.1007/978-3-319-54045-0_1
   Hajri I, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P1008, DOI 10.1145/2950290.2983935
   Hajri I, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P338, DOI 10.1109/MODELS.2015.7338265
   Halmans Gunter., 2003, SOFTWARE SYSTEM MODE, V2, P15
   Harrold M.-J., 2001, OOPSLA 01
   Hemmati H, 2017, SOFTW TEST VERIF REL, V27, DOI 10.1002/stvr.1609
   Hemmati Hadi., 2010, Proceedings of the Eighteenth ACM SIGSOFT International Symposium on Foundations of Software Engineering, P267
   Henard C, 2014, IEEE T SOFTWARE ENG, V40, P650, DOI 10.1109/TSE.2014.2327020
   Henry J., 1993, Proceedings of the 1993 ACM conference on Computer science, P346
   Hosmer DW, 2013, WILEY SER PROBAB ST, P89
   Johansen M. F., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P266, DOI 10.1109/ICSTW.2011.53
   Kamsties E, 2004, LECT NOTES COMPUT SC, V3014, P6
   Khatibsyarbini M, 2018, INFORM SOFTWARE TECH, V93, P74, DOI 10.1016/j.infsof.2017.08.014
   Knapp A, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P247, DOI 10.1145/2648511.2648539
   Korel B, 2008, PROC IEEE INT CONF S, P247, DOI 10.1109/ICSM.2008.4658073
   Krishnamoorthi R, 2009, INFORM SOFTWARE TECH, V51, P799, DOI 10.1016/j.infsof.2008.08.007
   Kundu D, 2009, SOFTW TEST VERIF REL, V19, P297, DOI 10.1002/stvr.407
   KUNG DC, 1995, J OBJECT-ORIENT PROG, V8, P51
   Lachmann R, 2016, FOSD 16
   Lachmann R., 2015, P 19 INT C SOFTW PRO, P81
   Lachmann R, 2016, 2016 15TH IEEE INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA 2016), P361, DOI [10.1109/ICMLA.2016.0065, 10.1109/ICMLA.2016.163]
   Larman C., 2002, APPL UML PATTERNS, V2nd
   Lee Jihyun, 2012, P 16 INT SOFTW PROD, P31
   Li Z, 2007, IEEE T SOFTWARE ENG, V33, P225, DOI 10.1109/TSE.2007.38
   Lity S., 2012, 2012 Proceedings of the 3rd International Workshop on Product LinE Approaches in Software Engineering (PLEASE 2012), P53, DOI 10.1109/PLEASE.2012.6229772
   Lity S., 2017, P 11 INT WORKSH VAR, P60, DOI DOI 10.1145/3023956.3023961
   Lity S, 2016, LECT NOTES COMPUT SC, V9679, P3, DOI 10.1007/978-3-319-35122-3_1
   Lochau M, 2014, J SYST SOFTWARE, V91, P63, DOI 10.1016/j.jss.2013.11.1096
   Machado ID, 2014, INFORM SOFTWARE TECH, V56, P1183, DOI 10.1016/j.infsof.2014.04.002
   MAFFI I, 2017, ANNEE MAGHREB, V17
   Mai PX, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P55, DOI 10.1109/ICSE-Companion.2019.00037
   Mai PX, 2018, PROC INT SYMP SOFTW, P58, DOI [10.1109/1SSRE.2018.00017, 10.1109/ISSRE.2018.00017]
   Mai PX, 2018, INFORM SOFTWARE TECH, V100, P165, DOI 10.1016/j.infsof.2018.04.007
   Malaiya Y. K., 1999, Proceedings 10th International Symposium on Software Reliability Engineering (Cat. No.PR00443), P285, DOI 10.1109/ISSRE.1999.809334
   Mirarab S, 2008, PROC IEEE INT CONF S, P452, DOI 10.1109/ICSM.2008.4658102
   Muccini H, 2007, SEAA 07
   Muccini H, 2006, J SYST SOFTWARE, V79, P1379, DOI 10.1016/j.jss.2006.02.059
   Nebut C, 2006, IEEE T SOFTWARE ENG, V32, P140, DOI 10.1109/TSE.2006.22
   Nebut C., 2006, SOFTWARE PRODUCT LIN
   Oster S., 2011, MODEL BASED TESTING, P338
   Parejo JA, 2016, J SYST SOFTWARE, V122, P287, DOI 10.1016/j.jss.2016.09.045
   Pohl K., 2005, Software Product Line Engineering: Foundations, Principles and Techniques, V1, DOI [10.1007/3-540-28901-1, DOI 10.1007/3-540-28901-1]
   Qu X, 2011, 22ND IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P140, DOI 10.1109/ISSRE.2011.9
   Ramesh B, 2001, IEEE T SOFTWARE ENG, V27, P58, DOI 10.1109/32.895989
   Reuys A, 2005, LECT NOTES COMPUT SC, V3520, P519
   Reuys A., 2006, Software Product Lines, P479
   Rice J. A., 2006, MATH STAT DATA ANAL
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Rothermel G, 1996, IEEE T SOFTWARE ENG, V22, P529, DOI 10.1109/32.536955
   Rothermel G., 1997, ACM Transactions on Software Engineering and Methodology, V6, P173, DOI 10.1145/248233.248262
   Rothermel G, 2000, SOFTW TEST VERIF REL, V10, P77, DOI 10.1002/1099-1689(200006)10:2<77::AID-STVR197>3.0.CO;2-E
   RTCA, 2018, D3178C RTCA EUROCAE
   Runeson P, 2012, ADV COMPUT, V86, P223, DOI 10.1016/B978-0-12-396535-6.00007-7
   Schuerr A, 2010, LECT NOTES COMPUT SC, V5901, P112
   Sokolova M, 2009, INFORM PROCESS MANAG, V45, P427, DOI 10.1016/j.ipm.2009.03.002
   Srikanth H, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P62, DOI 10.1109/ISESE.2005.1541815
   Srikanth H, 2016, INFORM SOFTWARE TECH, V69, P71, DOI 10.1016/j.infsof.2015.09.002
   Srikanth H, 2014, SOFTW TEST VERIF REL, V24, P320, DOI 10.1002/stvr.1500
   Srikanth H, 2012, J SYST SOFTWARE, V85, P1176, DOI 10.1016/j.jss.2012.01.007
   Stricker V, 2010, LECT NOTES COMPUT SC, V6287, P226, DOI 10.1007/978-3-642-15579-6_16
   Tahat L, 2012, SOFTW TEST VERIF REL, V22, P481, DOI 10.1002/stvr.461
   Tonella P, 2006, PROC IEEE INT CONF S, P123
   Uzuncaova Engin, 2008, 2008 IEEE International Symposium on Software Reliability Engineering, P249, DOI 10.1109/ISSRE.2008.56
   Uzuncaova E, 2010, IEEE T SOFTWARE ENG, V36, P309, DOI 10.1109/TSE.2010.30
   Vaysburg B., 2002, Software Engineering Notes, V27, P107, DOI 10.1145/566171.566188
   von Mayrhauser A, 1999, J SOFTW MAINT-RES PR, V11, P93, DOI 10.1002/(SICI)1096-908X(199903/04)11:2<93::AID-SMR188>3.0.CO;2-5
   Wang C, 2020, IEEE T SOFTW ENG
   Wang CH, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P942, DOI 10.1145/2786805.2803187
   Wang S, 2017, SOFTW SYST MODEL, V16, P417, DOI 10.1007/s10270-015-0462-4
   Wang S, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P32, DOI 10.1145/2648511.2648515
   Wang S, 2016, EMPIR SOFTW ENG, V21, P1586, DOI 10.1007/s10664-014-9345-5
   Wang WE, 1997, EIGHTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P264, DOI 10.1109/ISSRE.1997.630875
   Yang Q, 2009, COMPUT J, V52, P589, DOI 10.1093/comjnl/bxm021
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Yue T, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2430536.2430539
   Zhang M, 2018, J SYST SOFTWARE, V144, P573, DOI 10.1016/j.jss.2018.06.075
NR 114
TC 11
Z9 12
U1 1
U2 8
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2020
VL 25
IS 5
BP 3711
EP 3769
DI 10.1007/s10664-020-09853-4
EA AUG 2020
PG 59
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NJ1FD
UT WOS:000561985000003
DA 2024-07-18
ER

PT J
AU Pudlitz, F
   Brokhausen, F
   Vogelsang, A
AF Pudlitz, Florian
   Brokhausen, Florian
   Vogelsang, Andreas
TI What am I testing and where? Comparing testing procedures based on
   lightweight requirements annotations
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Markup language; Requirements modeling; Simulation; Test stage
   evaluation; Test stage comparison
ID MODELS
AB Context The testing of software-intensive systems is performed in different test stages each having a large number of test cases. These test cases are commonly derived from requirements. Each test stages exhibits specific demands and constraints with respect to their degree of detail and what can be tested. Therefore, specific test suites are defined for each test stage. In this paper, the focus is on the domain of embedded systems, where, among others, typical test stages are Software- and Hardware-in-the-loop. Objective Monitoring and controlling which requirements are verified in which detail and in which test stage is a challenge for engineers. However, this information is necessary to assure a certain test coverage, to minimize redundant testing procedures, and to avoid inconsistencies between test stages. In addition, engineers are reluctant to state their requirements in terms of structured languages or models that would facilitate the relation of requirements to test executions. Method With our approach, we close the gap between requirements specifications and test executions. Previously, we have proposed a lightweight markup language for requirements which provides a set of annotations that can be applied to natural language requirements. The annotations are mapped to events and signals in test executions. As a result, meaningful insights from a set of test executions can be directly related to artifacts in the requirements specification. In this paper, we use the markup language to compare different test stages with one another. Results We annotate 443 natural language requirements of a driver assistance system with the means of our lightweight markup language. The annotations are then linked to 1300 test executions from a simulation environment and 53 test executions from test drives with human drivers. Based on the annotations, we are able to analyze how similar the test stages are and how well test stages and test cases are aligned with the requirements. Further, we highlight the general applicability of our approach through this extensive experimental evaluation. Conclusion With our approach, the results of several test levels are linked to the requirements and enable the evaluation of complex test executions. By this means, practitioners can easily evaluate how well a systems performs with regards to its specification and, additionally, can reason about the expressiveness of the applied test stage.
C1 [Pudlitz, Florian; Brokhausen, Florian; Vogelsang, Andreas] Tech Univ Berlin, Berlin, Germany.
C3 Technical University of Berlin
RP Pudlitz, F (corresponding author), Tech Univ Berlin, Berlin, Germany.
EM Florian.Pudlitz@tu-berlin.de; Horian.Brokhausen@tu-berlin.de;
   Andreas.Vogelsang@tu-berlin.de
OI Vogelsang, Andreas/0000-0003-1041-0815; Brokhausen,
   Florian/0000-0002-8003-4344; Pudlitz, Florian/0000-0002-0006-1853
FU Projekt DEAL
FX Open Access funding provided by Projekt DEAL. We would like to thank
   Patrick Ebel for helping us implement the BSM system and the VSimRTI
   team for helping us set up the simulation environment.
CR [Anonymous], 2011, ISO 262622011
   Banks J., 2000, Discrete-Event System Simulation, V3rd
   BARMI ZA, 2011, IEEE INT C SOFTW TES
   Bjarnason E, 2014, EMPIR SOFTW ENG, V19, P1809, DOI 10.1007/s10664-013-9263-y
   Cleland-Huang J, 2003, IEEE T SOFTWARE ENG, V29, P796, DOI 10.1109/TSE.2003.1232285
   Codeca L, 2015, IEEE VEHIC NETW CONF, P1, DOI 10.1109/VNC.2015.7385539
   *DIN, 2012, 50128 DIN EN
   Eckhardt J, 2016, INT REQUIR ENG CONF, P46, DOI 10.1109/RE.2016.24
   Galko C, 2014, 2014 INTERNATIONAL CONFERENCE ON EMBEDDED COMPUTER SYSTEMS: ARCHITECTURES, MODELING, AND SIMULATION (SAMOS XIV), P329, DOI 10.1109/SAMOS.2014.6893229
   Gotel O. C. Z., 1994, Proceedings of the First International Conference on Requirements Engineering (Cat. No.94TH0613-0), P94, DOI 10.1109/ICRE.1994.292398
   Gunter CA, 2000, IEEE SOFTWARE, V17, P37, DOI 10.1109/52.896248
   Hasling Bill, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P367, DOI 10.1109/ICST.2008.9
   Huang WL, 2016, 2016 IEEE 19TH INTERNATIONAL CONFERENCE ON INTELLIGENT TRANSPORTATION SYSTEMS (ITSC), P163, DOI 10.1109/ITSC.2016.7795548
   Jedlitschka A, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P92, DOI 10.1109/ISESE.2005.1541818
   Kassab M, 2014, INNOV SYST SOFTW ENG, V10, P235, DOI 10.1007/s11334-014-0232-4
   Lopez PA, 2018, IEEE INT C INTELL TR, P2575, DOI 10.1109/ITSC.2018.8569938
   Lucassen G, 2017, REQUIR ENG, V22, P339, DOI 10.1007/s00766-017-0270-1
   Mavin A, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P317, DOI 10.1109/RE.2009.9
   Mich L, 2004, REQUIR ENG, V9, P40, DOI 10.1007/s00766-003-0179-8
   Murukannaiah PK, 2017, INT REQUIR ENG CONF, P512, DOI 10.1109/RE.2017.74
   Nebut C, 2006, IEEE T SOFTWARE ENG, V32, P140, DOI 10.1109/TSE.2006.22
   Protzmann R, 2017, NETW TELECOMMUN SER, P1
   PUDLITZ F, 2019, 27 IEEE INT REQ ENG
   Pudlitz F, 2019, LECT NOTES COMPUT SC, V11412, P151, DOI 10.1007/978-3-030-15538-4_11
   Ramesh B, 2001, IEEE T SOFTWARE ENG, V27, P58, DOI 10.1109/32.895989
   Rancourt AJ, 2006, PROC MONOGR ENG WATE, P25, DOI 10.1201/9781439833650.pt2
   *RTCA, 2012, DO178C RTCA EUROCAE
   Utting M, 2012, SOFTW TEST VERIF REL, V22, P297, DOI 10.1002/stvr.456
   Uusitalo EJ, 2008, INT REQUIR ENG CONF, P265, DOI 10.1109/RE.2008.30
   Wüest D, 2019, SOFTW SYST MODEL, V18, P1513, DOI 10.1007/s10270-017-0623-8
   Zhu H, 1997, ACM COMPUT SURV, V29, P366, DOI 10.1145/267580.267590
NR 31
TC 4
Z9 4
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2020
VL 25
IS 4
BP 2809
EP 2843
DI 10.1007/s10664-020-09815-w
EA MAY 2020
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MD8CQ
UT WOS:000530810500001
OA hybrid
DA 2024-07-18
ER

PT J
AU Li, SS
   Niu, X
   Jia, ZY
   Liao, XK
   Wang, J
   Li, T
AF Li, Shanshan
   Niu, Xu
   Jia, Zhouyang
   Liao, Xiangke
   Wang, Ji
   Li, Tao
TI Guiding log revisions by learning from software evolution history
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 26th IEEE/ACM International Conference on Program Comprehension
CY 2018
CL Gothenburg, SWEDEN
SP IEEE, ACM
DE Log revision; Software evolution; Failure diagnose; Empirical study
ID CHARACTERIZING LOGGING PRACTICES; FRAMEWORK; CODE
AB Despite the importance of log statements in postmortem debugging, developers are difficult to establish good logging practices. There are mainly two reasons. First, there are no rigorous specifications or systematic processes to instruct logging practices. Second, logging code evolves with bug fixes or feature updates. Without considering the impact of software evolution, previous works on log enhancement can partially release the first problem but are hard to solve the latter. To fill this gap, this paper proposes to guide log revisions by learning from evolution history. Motivated by code clones, we assume that logging code with similar context is pervasive and deserves similar modifications and conduct an empirical study on 12 open-source projects to validate our assumption. Upon this, we design and implement LogTracker, an automatic tool that learns log revision rules by mining the correlation between logging context and modifications and recommends candidate log revisions by applying these rules. With an enhanced modeling of logging context, LogTracker can instruct more intricate log revisions that cannot be covered by existing tools. Our experiments show that LogTracker can detect 369 instances of candidates when applied to the latest versions of software. So far, we have reported 79 of them, and 52 have been accepted.
C1 [Li, Shanshan; Niu, Xu; Jia, Zhouyang; Liao, Xiangke; Wang, Ji] Natl Univ Def Technol, Sch Comp, Changsha, Peoples R China.
   [Li, Tao] Nankai Univ, Sch Comp Sci & Technol, Tianjin, Peoples R China.
C3 National University of Defense Technology - China; Nankai University
RP Li, SS (corresponding author), Natl Univ Def Technol, Sch Comp, Changsha, Peoples R China.
EM shanshanli@nudt.edu.cn; niuxu16@nudt.edu.cn; jiazhouyang@nudt.edu.cn;
   xkliao@nudt.edu.cn; wj@nudt.edu.cn; litao@nankai.edu.cn
RI Li, Shanshan/HLH-7747-2023
CR [Anonymous], 2018, GIT
   [Anonymous], 2018, MUTT E MAIL CLIENT
   Arnold M, 2001, ACM SIGPLAN NOTICES, V36, P168, DOI 10.1145/381694.378832
   Chen BY, 2017, PROC INT CONF SOFTW, P71, DOI 10.1109/ICSE.2017.15
   Chen BY, 2017, EMPIR SOFTW ENG, V22, P330, DOI 10.1007/s10664-016-9429-5
   Collard ML, 2013, PROC IEEE INT CONF S, P516, DOI 10.1109/ICSM.2013.85
   Collectd, 2017, START PAG COLL THE S
   Davison W, 2018, RSYNC
   DEFAYS D, 1977, COMPUT J, V20, P364, DOI 10.1093/comjnl/20.4.364
   Ding R, 2015, LOG 2 COST AWARE LOG
   Falleri Jean-Remy, 2014, P 29 ACM IEEE INT C, P313
   Foundation FS, 2017, TAR GNU PROJ FREE SO
   Foundation FS, 2017, WGET GNU PROJ FREE S
   Foundation FS, 2016, DIFF GNU PROJ FREE S
   Foundation PS, 2018, BUILT IN FUNCT PYTH
   Foundation TAS, 2017, HTTPD AP HYP TRANSF
   Foundation W, 2019, WIR GO DEEP
   Fu Q, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P24, DOI 10.1145/2591062.2591175
   Gabel M, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P321, DOI 10.1145/1368088.1368132
   Github, 2019, NIUXU18 LOGTR AUT TO
   GitHub, 2018, SKYH DECK COD CLON D
   Github, 2018, GITH GUMTR GUMTR NEA
   Hassan MK, 2019, ECON PAP, V38, P345, DOI 10.1111/1759-3441.12230
   Ice, 2018, IC COMPR RPC FRAM
   Jiang LX, 2007, PROC INT CONF SOFTW, P96
   Juergens E, 2009, PROC INT CONF SOFTW, P603, DOI 10.1109/ICSE.2009.5070566
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kawrykow D, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P351, DOI 10.1145/1985793.1985842
   Kim Miryung, 2005, ESEC/FSE- 13), P187, DOI [10.1145/1081706.1081737, DOI 10.1145/1081706.1081737]
   Li H, 2017, EMPIR SOFTW ENG, V22, P1831, DOI 10.1007/s10664-016-9467-z
   Li S, 2018, P IEEE ACM INT C PRO
   [李章大 Li Zhangda], 2004, [中国工程科学, Engineering science], V6, P20
   Media S, 2018, SLOCC DOWNL SOURC NE
   Meng N, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P329
   Meng Na, 2013, LASE LOCATING APPL S
   Mondal M, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P50, DOI 10.1109/SANER.2018.8330196
   Pecchia A, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P169, DOI 10.1109/ICSE.2015.145
   Polozov O, 2015, ACM SIGPLAN NOTICES, V50, P107, DOI [10.1145/2814270.2814310, 10.1145/2858965.2814310]
   Rolim R, 2017, PROC INT CONF SOFTW, P404, DOI 10.1109/ICSE.2017.44
   Sigelman Benjamin H., 2010, Dapper, a large-scale distributed systems tracing infrastructure
   Systems CR, 2019, SAMPL SIZ CALC
   Team TG, 2019, GIMP GNU IM MAN PROG
   Venema W, 2013, POSTFIX HOME PAGE
   Yuan D., 2012, P 2012 USENIX S OP S, P293
   Yuan D, 2012, PROC INT CONF SOFTW, P102, DOI 10.1109/ICSE.2012.6227202
   Yuan D, 2012, ACM T COMPUT SYST, V30, DOI 10.1145/2110356.2110360
   Zhao X, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P565, DOI 10.1145/3132747.3132778
   Zhu JM, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P415, DOI 10.1109/ICSE.2015.60
NR 48
TC 5
Z9 6
U1 2
U2 15
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAY
PY 2020
VL 25
IS 3
SI SI
BP 2302
EP 2340
DI 10.1007/s10664-019-09757-y
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA LL7FD
UT WOS:000531720100017
DA 2024-07-18
ER

PT J
AU Engström, E
   Storey, MA
   Runeson, P
   Höst, M
   Baldassarre, MT
AF Engstrom, Emelie
   Storey, Margaret-Anne
   Runeson, Per
   Host, Martin
   Baldassarre, Maria Teresa
TI How software engineering research aligns with design science: a review
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Review
DE Design science; Research review; Empirical software engineering
ID REPLICATIONS; MANAGEMENT
AB Background Assessing and communicating software engineering research can be challenging. Design science is recognized as an appropriate research paradigm for applied research, but is rarely explicitly used as a way to present planned or achieved research contributions in software engineering. Applying the design science lens to software engineering research may improve the assessment and communication of research contributions. Aim The aim of this study is 1) to understand whether the design science lens helps summarize and assess software engineering research contributions, and 2) to characterize different types of design science contributions in the software engineering literature. Method In previous research, we developed a visual abstract template, summarizing the core constructs of the design science paradigm. In this study, we use this template in a review of a set of 38 award winning software engineering publications to extract, analyze and characterize their design science contributions. Results We identified five clusters of papers, classifying them according to their different types of design science contributions. Conclusions The design science lens helps emphasize the theoretical contribution of research output-in terms of technological rules-and reflect on the practical relevance, novelty and rigor of the rules proposed by the research.
C1 [Engstrom, Emelie] Lund Univ, Lund, Sweden.
   [Runeson, Per; Host, Martin] Lund Univ, Software Engn, Lund, Sweden.
   [Storey, Margaret-Anne] Univ Victoria, Comp Sci, Victoria, BC, Canada.
   [Baldassarre, Maria Teresa] Univ Bari, Bari, Italy.
   [Baldassarre, Maria Teresa] Univ Bari, ISERN, Bari, Italy.
C3 Lund University; Lund University; University of Victoria; Universita
   degli Studi di Bari Aldo Moro; Universita degli Studi di Bari Aldo Moro
RP Engström, E (corresponding author), Lund Univ, Lund, Sweden.
EM emelie.engstrom@cs.lth.se; mstorey@uvic.ca; per.runeson@cs.lth.se;
   martin.host@cs.lth.se; mariateresa.baldassarre@uniba.it
RI Höst, Martin/KDN-4323-2024; Runeson, Per/H-5113-2019; Engström,
   Emelie/AAG-7808-2019
OI Höst, Martin/0000-0002-9360-8693; Runeson, Per/0000-0003-2795-4851;
   Engström, Emelie/0000-0001-6736-9425; baldassarre, maria
   teresa/0000-0001-8589-2850
FU Lund University
FX Open access funding provided by Lund University.
CR Alimadadi S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P367, DOI 10.1145/2568225.2568268
   Avgerinos T, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1083, DOI 10.1145/2568225.2568293
   Beecham S, 2014, COMPUTER, V47, P80, DOI 10.1109/MC.2014.92
   Bell J, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P550, DOI 10.1145/2568225.2568248
   Bersani MM, 2016, PROC INT CONF SOFTW, P888, DOI 10.1145/2884781.2884832
   Budgen D, 2008, EMPIR SOFTW ENG, V13, P435, DOI 10.1007/s10664-008-9075-7
   Cacho N, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P584, DOI 10.1145/2568225.2568308
   Cartaxo B, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962603
   Carver JC, 2014, EMPIR SOFTW ENG, V19, P267, DOI 10.1007/s10664-013-9290-8
   Christakis M, 2016, PROC INT CONF SOFTW, P144, DOI 10.1145/2884781.2884843
   Deng Q, 2017, AMCIS 2017 PROCEEDINGS
   Deng Q, 2018, PAC ASIA J ASSOC INF, V10, P1, DOI 10.17705/1PAIS.10101
   Dybå T, 2012, INT SYMP EMP SOFTWAR, P19, DOI 10.1145/2372251.2372256
   Fan LL, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P408, DOI 10.1145/3180155.3180222
   Floyd B, 2017, PROC INT CONF SOFTW, P175, DOI 10.1109/ICSE.2017.24
   Gousios G, 2016, PROC INT CONF SOFTW, P285, DOI 10.1145/2884781.2884826
   Gregor S, 2013, MIS QUART, V37, P337, DOI 10.25300/MISQ/2013/37.2.01
   Grigoleit Florian, 2015, 2015 ACM/IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM). Proceedings, P1, DOI 10.1109/ESEM.2015.7321203
   Hannay JE, 2007, IEEE T SOFTWARE ENG, V33, P87, DOI 10.1109/TSE.2007.12
   Hasan S, 2016, PROC INT CONF SOFTW, P225, DOI 10.1145/2884781.2884869
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Hoda R, 2017, PROC INT CONF SOFTW, P141, DOI 10.1109/ICSE.2017.21
   INDULSKA M, 2008, 4 BIENN ANU WORKSH I
   Inozemtseva L, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P435, DOI 10.1145/2568225.2568271
   Johannesson P., 2014, An Introduction to Design Science, DOI [10.1007/978-3-319-10632-8, DOI 10.1007/978-3-319-10632-8]
   Juristo N, 2012, LECT NOTES COMPUT SC, V7007, P60
   Landman D, 2017, PROC INT CONF SOFTW, P507, DOI 10.1109/ICSE.2017.53
   Lavallee M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P677, DOI 10.1109/ICSE.2015.83
   Liu YP, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1013, DOI 10.1145/2568225.2568229
   Loncaric C, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P958, DOI 10.1145/3180155.3180211
   Madsen M, 2016, PROC INT CONF SOFTW, P899, DOI 10.1145/2884781.2884846
   Menendez D, 2016, PROC INT CONF SOFTW, P191, DOI 10.1145/2884781.2884809
   Milicevic A, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P609, DOI [10.1109/ICSE.2015.77, 10.1007/s10703-016-0267-2]
   Murphy-Hill E, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1, DOI 10.1145/2568225.2568226
   Nistor A, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P902, DOI 10.1109/ICSE.2015.100
   Okur S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1117, DOI 10.1145/2568225.2568309
   Petersen K, 2008, 12 INT C EV ASS SOFT, P1, DOI 10.5555/2227115.2227123
   Rainer A, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P326, DOI 10.1109/ISESE.2003.1237993
   Rath M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P834, DOI 10.1145/3180155.3180207
   Ren ZL, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P71, DOI 10.1145/3180155.3180224
   Rizzi EF, 2016, PROC INT CONF SOFTW, P132, DOI 10.1145/2884781.2884835
   Rodeghero P, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P390, DOI 10.1145/2568225.2568247
   Rojas JM, 2017, PROC INT CONF SOFTW, P677, DOI 10.1109/ICSE.2017.68
   Sedlmair M, 2012, IEEE T VIS COMPUT GR, V18, P2431, DOI 10.1109/TVCG.2012.213
   Sein MK, 2011, MIS QUART, V35, P37
   Shi A, 2017, PROC INT CONF SOFTW, P689, DOI 10.1109/ICSE.2017.69
   Shneiderman Ben, 2016, The new ABCs of research: Achieving breakthrough collaborations
   Shull FJ, 2008, EMPIR SOFTW ENG, V13, P211, DOI 10.1007/s10664-008-9060-1
   Siegmund J, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P9, DOI 10.1109/ICSE.2015.24
   Sjoberg D. I. K., 2008, Guide to Advanced Empirical Software Engineering, P312
   Sousa L, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P921, DOI 10.1145/3180155.3180239
   Stol KJ, 2015, SCI COMPUT PROGRAM, V101, P79, DOI 10.1016/j.scico.2014.11.010
   Stol KJ, 2013, 2013 2ND SEMAT WORKSHOP ON A GENERAL THEORY OF SOFTWARE ENGINEERING (GTSE), P5, DOI 10.1109/GTSE.2013.6613863
   Storey MA, 2017, INT SYMP EMP SOFTWAR, P181, DOI 10.1109/ESEM.2017.28
   Tsantalis N, 2017, PROC INT CONF SOFTW, P60, DOI 10.1109/ICSE.2017.14
   Tufano M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P403, DOI 10.1109/ICSE.2015.59
   van Aken JE, 2005, BRIT J MANAGE, V16, P19, DOI 10.1111/j.1467-8551.2005.00437.x
   van Aken JE, 2004, J MANAGE STUD, V41, P219, DOI 10.1111/j.1467-6486.2004.00430.x
   van Tonder R, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P151, DOI 10.1145/3180155.3180250
   Wang XY, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P291, DOI 10.1145/3180155.3180177
   Waterman M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P347, DOI 10.1109/ICSE.2015.54
   Wieringa Roel, 2012, Design Science Research in Information Systems. Advances in Theory and Practice. Proceedings 7th International Conference, DESRIST 2012, P220, DOI 10.1007/978-3-642-29863-9_17
   Wieringa R, 2011, INT SYMP EMP SOFTWAR, P295, DOI 10.1109/ESEM.2011.38
   Wieringa Roel., 2009, Proceedings of the 4th international conference on design science research in information systems and technology, P8
   Wieringa Roel J., 2014, Design science methodology for information systems and software engineering
   Wohlin C, 2015, EMPIR SOFTW ENG, V20, P1427, DOI 10.1007/s10664-014-9319-7
   Yan H, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P327, DOI 10.1145/3180155.3180178
   Ye X, 2016, PROC INT CONF SOFTW, P404, DOI 10.1145/2884781.2884862
   Yu TT, 2016, PROC INT CONF SOFTW, P583, DOI 10.1145/2884781.2884866
NR 69
TC 22
Z9 24
U1 5
U2 37
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2020
VL 25
IS 4
BP 2630
EP 2660
DI 10.1007/s10664-020-09818-7
EA APR 2020
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA MD8CQ
UT WOS:000527507500001
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Bettaieb, S
   Shin, SY
   Sabetzadeh, M
   Briand, LC
   Garceau, M
   Meyers, A
AF Bettaieb, Seifeddine
   Shin, Seung Yeob
   Sabetzadeh, Mehrdad
   Briand, Lionel C.
   Garceau, Michael
   Meyers, Antoine
TI Using machine learning to assist with the selection of security controls
   during security assessment
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Security requirements engineering; Security assessment; Automated
   decision support; Machine learning
ID REQUIREMENTS
AB Context In many domains such as healthcare and banking, IT systems need to fulfill various requirements related to security. The elaboration of security requirements for a given system is in part guided by the controls envisaged by the applicable security standards and best practices. An important difficulty that analysts have to contend with during security requirements elaboration is sifting through a large number of security controls and determining which ones have a bearing on the security requirements for a given system. This challenge is often exacerbated by the scarce security expertise available in most organizations. Objective In this article, we develop automated decision support for the identification of security controls that are relevant to a specific system in a particular context. Method and Results Our approach, which is based on machine learning, leverages historical data from security assessments performed over past systems in order to recommend security controls for a new system. We operationalize and empirically evaluate our approach using real historical data from the banking domain. Our results show that, when one excludes security controls that are rare in the historical data, our approach has an average recall of approximate to 94% and average precision of approximate to 63%. We further examine through a survey the perceptions of security analysts about the usefulness of the classification models derived from historical data. Conclusions The high recall - indicating only a few relevant security controls are missed - combined with the reasonable level of precision - indicating that the effort required to confirm recommendations is not excessive - suggests that our approach is a useful aid to analysts for more efficiently identifying the relevant security controls, and also for decreasing the likelihood that important controls would be overlooked. Further, our survey results suggest that the generated classification models help provide a documented and explicit rationale for choosing the applicable security controls.
C1 [Bettaieb, Seifeddine; Shin, Seung Yeob; Sabetzadeh, Mehrdad; Briand, Lionel C.] Univ Luxembourg, SnT Ctr, Luxembourg, Luxembourg.
   [Sabetzadeh, Mehrdad; Briand, Lionel C.] Univ Ottawa, Ottawa, ON, Canada.
   [Garceau, Michael; Meyers, Antoine] BGL BNP Paribas, Luxembourg, Luxembourg.
C3 University of Luxembourg; University of Ottawa
RP Shin, SY (corresponding author), Univ Luxembourg, SnT Ctr, Luxembourg, Luxembourg.
EM seifeddine.bettaieb@uni.lu; seungyeob.shin@uni.lu; msabetza@uottawa.ca;
   lbriand@uottawa.ca; mgarceau@cipherquest.com;
   antoine.meyers@bnpparibas.com
RI Shin, Seung Yeob/ACP-8090-2022
OI Shin, Seung Yeob/0000-0001-9025-7173
FU Alphonse Weicker Foundation
FX Financial support for this work was provided by the Alphonse Weicker
   Foundation.
CR Almeida L, 2018, J DECIS SYST, V27, P173, DOI 10.1080/12460125.2018.1468177
   [Anonymous], 2018, 270002018 ISOIEC
   [Anonymous], 2007, Tech. Rep. CMU/SEI-2007-TR-012
   [Anonymous], 1995, 11 C UNC ART INT SAN, DOI DOI 10.1109/TGRS.2004.834800
   [Anonymous], 2012, NIST SPEC PUBL
   [Anonymous], 2005, 270022005 ISOIEC
   [Anonymous], 2018, 31000 ISO
   Batista G. E., 2004, ACM SIGKDD EXPL NEWS, V6, P20, DOI DOI 10.1145/1007730.1007735
   Bettaieb S, 2019, LECT NOTES COMPUT SC, V11412, P3, DOI 10.1007/978-3-030-15538-4_1
   Blewitt ME, 2008, NAT GENET, V40, P663, DOI 10.1038/ng.142
   Boutell MR, 2004, PATTERN RECOGN, V37, P1757, DOI 10.1016/j.patcog.2004.03.009
   Casamayor A, 2010, INFORM SOFTWARE TECH, V52, P436, DOI 10.1016/j.infsof.2009.10.010
   CASES, 2018, METH OPT AN RISKS CA
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   CLUSIF, 2018, METH HARM AN RISK
   Cohen W.W., 1995, P 12 INT C MACH LEAR, P115, DOI [DOI 10.1016/B978-1-55860-377-6.50023-2, 10.1016/B978-1-55860-377-6.50023-2]
   Cyber Threat Institute, 2019, VECT MATR RISK ASS M
   Dalpiaz F., 2016, Security Requirements Engineering: Designing Secure Socio-Technical Systems
   Dowd M., 2006, The Art of Software Security Assessment: Identifying and Preventing Software Vulnerabilities
   Elkan C., 2001, IJCAI 2001, V17, P973, DOI DOI 10.5555/1642194.1642224
   Frank E., 1998, Machine Learning. Proceedings of the Fifteenth International Conference (ICML'98), P144
   Furnell S, 2008, COMPUT FRAUD SECUR, P6, DOI 10.1016/S1361-3723(08)70175-1
   Grinstein G., 2001, P VIS DAT MIN WORKSH, V2, P120
   Haley CB, 2008, IEEE T SOFTWARE ENG, V34, P133, DOI 10.1109/TSE.2007.70754
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Ionita D, 2016, JOINT P REFSQ 2016 W, P3
   ISACA, 2018, FRAM IT GOV CONTR
   Jufri MT, 2017, P 2 INT C INF COMP I, P1
   Kiesling E, 2016, EURO J DECIS PROCESS, V4, P85, DOI 10.1007/s40070-016-0055-7
   Kitchenham B., 2002, Software Engineering Notes, V27, P20, DOI 10.1145/638574.638580
   Kurtanovic Z, 2017, INT REQUIR ENG CONF, P61, DOI 10.1109/RE.2017.86
   LECESSIE S, 1992, APPL STAT-J ROY ST C, V41, P191
   Li T, 2017, ASIA PAC SOFWR ENG, P388, DOI 10.1109/APSEC.2017.45
   Likert R., 1932, Arch. Psychol., V22, P44, DOI DOI 10.4135/9781412961288.N454
   Meier J, 2003, TECH REP
   Mitchell TM, 1999, COMMUN ACM, V42, P30, DOI 10.1145/319382.319388
   Myagmar S., 2005, S REQ ENG INF SEC SR, P1
   Nasrabadi N.M, 2007, Pattern recognition and machine learning, V16
   OSA, 2018, OP SEC ARCH
   Park SH, 2007, LECT NOTES ARTIF INT, V4701, P658
   Quinlan J. R., 1986, Machine Learning, V1, P81, DOI 10.1007/BF00116251
   Quinlan J.R., 1993, C4 5 PROGRAMS MACHIN
   Read J, 2009, LECT NOTES ARTIF INT, V5782, P254, DOI 10.1007/978-3-642-04174-7_17
   Rodeghero P, 2017, PROC INT CONF SOFTW, P49, DOI 10.1109/ICSE.2017.13
   Rogers EM, 2003, DIFFUSION INNOVATION
   Schmitt C, 2015, JOINT P REFSQ 2015 W, P34
   Sihwi SW, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON KNOWLEDGE ENGINEERING AND APPLICATIONS (ICKEA 2016), P56, DOI 10.1109/ICKEA.2016.7802992
   Sindre G, 2005, REQUIR ENG, V10, P34, DOI 10.1007/s00766-004-0194-4
   Tsoumakas G, 2007, LECT NOTES ARTIF INT, V4701, P406
   Türpe S, 2017, INT REQUIR ENG CONF, P122, DOI 10.1109/RE.2017.13
   WILSON DL, 1972, IEEE T SYST MAN CYB, VSMC2, P408, DOI 10.1109/TSMC.1972.4309137
   Yevseyeva I, 2016, PROCEDIA COMPUT SCI, V100, P971, DOI 10.1016/j.procs.2016.09.261
   Yevseyeva I, 2015, PROCEDIA COMPUT SCI, V64, P1035, DOI 10.1016/j.procs.2015.08.625
   Yu YJ, 2015, J SYST SOFTWARE, V106, P102, DOI 10.1016/j.jss.2015.04.065
   Zhang ML, 2014, IEEE T KNOWL DATA EN, V26, P1819, DOI 10.1109/TKDE.2013.39
NR 55
TC 4
Z9 4
U1 0
U2 7
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2020
VL 25
IS 4
BP 2550
EP 2582
DI 10.1007/s10664-020-09814-x
EA APR 2020
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MD8CQ
UT WOS:000526196600001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Sawant, AA
   Robbes, R
   Bacchelli, A
AF Sawant, Anand Ashok
   Robbes, Romain
   Bacchelli, Alberto
TI To react, or not to react: Patterns of reaction to API deprecation
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Deprecation; Application programming interface; API usage; Java
ID SOCIAL DESIRABILITY; SUPPORT; BIAS
AB Application Programming Interfaces (API) provide reusable functionality to aid developers in the development process. The features provided by these APIs might change over time as the API evolves. To allow API consumers to peacefully transition from older obsolete features to new features, API producers make use of the deprecation mechanism that allows them to indicate to the consumer that a feature should no longer be used. The Java language designers noticed that no one was taking these deprecation warnings seriously and continued using outdated features. Due to this, they decided to change the implementation of this feature in Java 9. We question as to what extent this issue exists and whether the Java language designers have a case. We start by identifying the various ways in which an API consumer can react to deprecation. Following this we benchmark the frequency of the reaction patterns by creating a dataset consisting of data mined from 50 API consumers totalling 297,254 GitHub based projects and 1,322,612,567 type-checked method invocations. We see that predominantly consumers do not react to deprecation and we try to explain this behavior by surveying API consumers and by analyzing if the API's deprecation policy has an impact on the consumers' decision to react.
C1 [Sawant, Anand Ashok] Delft Univ Technol, Software Engn Res Grp, Delft, Netherlands.
   [Robbes, Romain] Free Univ Bozen Bolz, Software & Syst Engn Res Grp, Bozen Bolzano, Italy.
   [Bacchelli, Alberto] Univ Zurich, Dept Informat, Zurich, Switzerland.
C3 Delft University of Technology; University of Zurich
RP Sawant, AA (corresponding author), Delft Univ Technol, Software Engn Res Grp, Delft, Netherlands.
EM A.A.Sawant@tudelft.nl; rrobbes@unibz.it; bacchelli@ifi.uzh.ch
RI Robbes, Romain/H-3771-2013; Bacchelli, Alberto/ABG-5379-2020
OI Bacchelli, Alberto/0000-0003-0193-6823; Sawant,
   Anand/0000-0002-5816-8020
CR [Anonymous], 2010, FORUM QUALITATIVE SO
   [Anonymous], 2012, P 20 ACM SIGSOFT S F
   [Anonymous], P ACM SIGSOFT 20 INT
   Bajracharya S., 2006, COMP 21 ACM SIGPLAN, P681, DOI DOI 10.1145/1176617.1176671
   Bavota G, 2015, EMPIR SOFTW ENG, V20, P1275, DOI 10.1007/s10664-014-9325-9
   Bavota G, 2015, IEEE T SOFTWARE ENG, V41, P384, DOI 10.1109/TSE.2014.2367027
   Bholowalia P., 2014, International Journal of Computer Applications, P105
   Bogart C, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P109, DOI 10.1145/2950290.2950325
   Brito G, 2016, 23 IEEE INT C SOFTW
   Brito G, 2018, J SYST SOFTWARE, V137, P306, DOI 10.1016/j.jss.2017.12.007
   Brito G, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P360, DOI 10.1109/SANER.2016.99
   Brooks F.P., 1975, SOFTWARE STATE OF TH, P14
   Brooks Frederick P., 1995, The mythical man-month
   Businge J., 2013, SOFTW QUAL J, V23, P107, DOI DOI 10.1007/s11219-013-9221-3
   Businge J, 2013, EUR CON SFTWR MTNCE, P37, DOI 10.1109/CSMR.2013.14
   Chacon S, 2014, PRO GIT, DOI DOI 10.1007/978-1-4842-0076-6
   Chow KS, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P359, DOI 10.1109/ICSM.1996.565039
   d'Amorim M, 2006, IEEE INT CONF AUTOM, P59
   Dagenais B, 2009, PROC INT CONF SOFTW, P599, DOI 10.1109/ICSE.2009.5070565
   Dagenais Barthelemy, 2008, P 30 INT C SOFTW ENG
   Daqing Hou, 2011, 2011 18th Working Conference on Reverse Engineering, P131, DOI 10.1109/WCRE.2011.24
   Decan A, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P2, DOI 10.1109/SANER.2017.7884604
   Decan A, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P493, DOI 10.1109/SANER.2016.12
   Dig D, 2006, J SOFTW MAINT EVOL-R, V18, P83, DOI 10.1002/smr.328
   Dig D, 2007, PROC INT CONF SOFTW, P427
   Eclipse foundation, 2018, ECL ID
   Espinha T, 2015, 2ND ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS MOBILESOFT 2015, P12, DOI 10.1109/MobileSoft.2015.9
   Espinha T, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P84, DOI 10.1109/CSMR-WCRE.2014.6747228
   FISHER RJ, 1993, J CONSUM RES, V20, P303, DOI 10.1086/209351
   FURNHAM A, 1986, PERS INDIV DIFFER, V7, P385, DOI 10.1016/0191-8869(86)90014-0
   Gousios Georgios, 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P12, DOI 10.1109/MSR.2012.6224294
   Henkel J, 2005, PROC INT CONF SOFTW, P274
   Hoan AN, 2010, ACM SIGPLAN NOTICES, V45, P302, DOI 10.1145/1932682.1869486
   Holmes Reid., 2010, Proc. ICSE, P465
   Hora A, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P278, DOI 10.1145/2950290.2950306
   Hora A, 2015, PROC IEEE INT CONF S, P251, DOI 10.1109/ICSM.2015.7332471
   Kalliamvakou E., 2014, P 11 WORKING C MININ, P92, DOI DOI 10.1145/2597073.2597074
   Kapur Puneet, 2010, REFACTORING REFERENC, V45
   Kula RG, 2018, EMPIR SOFTW ENG, V23, P384, DOI 10.1007/s10664-017-9521-5
   Linares-Vasquez M, 2014, P 22 INT C PROGR C, P83
   Marks S., 2017, JEP 277 ENHANCED DEP
   McDonnell T, 2013, PROC IEEE INT CONF S, P70, DOI 10.1109/ICSM.2013.18
   Perkins Jeff H., 2005, PASTE 05, P111, DOI DOI 10.1145/1108768.1108818
   Raemaekers S, 2017, J SYST SOFTWARE, V129, P140, DOI 10.1016/j.jss.2016.04.008
   Raemaekers S, 2014, 14 IEEE INT WORK C S
   Raemaekers S, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P378, DOI 10.1109/ICSM.2012.6405296
   Rose JR, 2017, DEPRECATE APIS
   Savga Ilie, 2007, P 6 INT C GEN PROGR, P175
   Sawant A. A., 2017, EMPIR SOFTW ENG, P1
   Sawant AA, 2018, P 34 IEEE INT C SOFT
   Sawant AA, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P561, DOI 10.1145/3180155.3180170
   Sawant AA, 2018, EMPIR SOFTW ENG, V23, P2158, DOI 10.1007/s10664-017-9554-9
   Sawant AA, 2016, PROC IEEE INT CONF S, P400, DOI 10.1109/ICSME.2016.64
   Schäfer T, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P471, DOI 10.1145/1368088.1368153
   Spencer Donna., 2004, Boxes_and_Arrows, V2
   Teyton C, 2014, J SOFTW-EVOL PROC, V26, P1030, DOI 10.1002/smr.1660
   Wang SH, 2014, LECT NOTES COMPUT SC, V8831, P245, DOI 10.1007/978-3-662-45391-9_17
   Wu W, 2016, EMPIR SOFTW ENG, V21, P2366, DOI 10.1007/s10664-015-9411-7
   Wu W, 2014, IEEE INT WORK C SO, P89, DOI 10.1109/SCAM.2014.33
   Wu Wei, 2010, P 32 ACMIEEE INT C S, P325, DOI DOI 10.1145/1806799.1806848
   Xavier L, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P138, DOI 10.1109/SANER.2017.7884616
   Xing ZC, 2007, IEEE T SOFTWARE ENG, V33, P818, DOI 10.1109/TSE.2007.70747
NR 62
TC 17
Z9 21
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2019
VL 24
IS 6
BP 3824
EP 3870
DI 10.1007/s10664-019-09713-w
PG 47
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JT6XW
UT WOS:000501131100019
OA hybrid, Green Accepted
DA 2024-07-18
ER

PT J
AU Germans, DM
   Adams, B
   Stewart, K
AF Germans, Daniel M.
   Adams, Bram
   Stewart, Kate
TI cregit: Token-level blame information in git version control
   repositories
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
ID CODE; ALGORITHM; TRACKING; TOOL
AB The blame feature of version control systems is widely used-both by practitioners and researchers-to determine who has last modified a given line of code, and the commit where this contribution was made. The main disadvantage of blame is that, when a line is modified several times, it only shows the last commit that modified it-occluding previous changes to other areas of the same line. In this paper, we developed a method to increase the granularity of blame in git: instead of tracking lines of code, this method is capable of tracking tokens in source code. We evaluate its effectiveness with an empirical study in which we compare the accuracy of blame in git (per line) with our proposed blame-per-token method. We demonstrate that, in 5 large open source systems, blame-per-token is capable of properly identifying the commit that introduced a token with an accuracy between 94.5% and 99.2%, while blame-per-line can only achieve an accuracy between 75% and 91% (with a margin of error of +/-5% and a confidence interval of 95%). We also classify the reasons why either blame method fails, highlighting each method's weaknesses. The blame-per-token method has been implemented in an open source tool called cregit, which is currently in use by the Linux Foundation to identify the persons who have contributed to the source code of the Linux kernel.
C1 [Germans, Daniel M.] Univ Victoria, Dept Comp Sci, Victoria, BC V8P 5C2, Canada.
   [Adams, Bram] Polytech Montreal, Montreal, PQ H3T 1J4, Canada.
   [Stewart, Kate] Linux Fdn, San Francisco, CA 94129 USA.
C3 University of Victoria; Universite de Montreal; Polytechnique Montreal
RP Germans, DM (corresponding author), Univ Victoria, Dept Comp Sci, Victoria, BC V8P 5C2, Canada.
EM dmg@uvic.ca; bram.adams@polymtl.ca; kstewart@linuxfoundation.org
OI Adams, Bram/0000-0001-7213-4006
CR [Anonymous], P 40 INT C SOFTW ENG
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Asaduzzaman M, 2013, PROC IEEE INT CONF S, P230, DOI 10.1109/ICSM.2013.34
   Asenov D, 2017, LECT NOTES COMPUT SC, V10202, P152, DOI 10.1007/978-3-662-54494-5_9
   Ayuso PN, 2017, FREQUENTLY ASKED QUE
   Bhattacharya P, 2014, PROC IEEE INT CONF S, P11, DOI 10.1109/ICSME.2014.23
   Bille P, 2005, THEOR COMPUT SCI, V337, P217, DOI 10.1016/j.tcs.2004.12.030
   Bird C., 2011, P 19 ACM SIGSOFT S 1, P4, DOI DOI 10.1145/2025113.2025119
   Canfora G, 2009, IEEE SOFTWARE, V26, P50, DOI 10.1109/MS.2009.26
   Chacon S, 2014, PRO GIT, DOI DOI 10.1007/978-1-4842-0076-6
   Chawathe S. S., 1996, SIGMOD Record, V25, P493, DOI 10.1145/235968.233366
   Collard ML, 2013, PROC IEEE INT CONF S, P516, DOI 10.1109/ICSM.2013.85
   Collard ML, 2011, IEEE INT WORK C SO, P173, DOI 10.1109/SCAM.2011.19
   Dotzler G, 2016, IEEE INT CONF AUTOM, P660, DOI 10.1145/2970276.2970315
   Falleri Jean-Remy, 2014, P 29 ACM IEEE INT C, P313
   Feist MD, 2016, 2016 IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION, P11, DOI 10.1109/VISSOFT.2016.6
   Fluri B, 2007, IEEE T SOFTWARE ENG, V33, P725, DOI 10.1109/TSE.2007.70731
   Fritz T., 2007, ESEC-FSE '07: Proceedings of the the 6th joint meeting of the European software engineering conference and the ACM SIGSOFT symposium on The foundations of software engineering September 2007, P341, DOI [10.1145/ 1287624.1287673, DOI 10.1145/1287624.1287673]
   Fritz T., 2010, P 32 ACMIEEE INT C S, P385
   German D., 2006, MSR: Proceedings of the Third International Workshop on Mining Software Repositories, P163
   German DM, 2009, INFORM SOFTWARE TECH, V51, P1394, DOI 10.1016/j.infsof.2009.04.018
   Gîrba T, 2005, EIGHTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P113, DOI 10.1109/IWPSE.2005.21
   Godfrey MW, 2005, IEEE T SOFTWARE ENG, V31, P166, DOI 10.1109/TSE.2005.28
   Hashimoto M, 2008, WORK CONF REVERSE EN, P279, DOI 10.1109/WCRE.2008.44
   Hassan AE, 2004, TECHNICAL REPORT
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Hata H, 2012, PROC INT CONF SOFTW, P200, DOI 10.1109/ICSE.2012.6227193
   Hattori LP, 2012, EMPIR SOFTW ENG, V17, P467, DOI 10.1007/s10664-010-9145-5
   Heinisch O., 1963, Sampling Techniques, V2, DOI [10.1002/bimj.19650070312, DOI 10.1002/BIMJ.19650070312]
   Higo Y, 2017, IEEE INT CONF AUTOM, P532, DOI 10.1109/ASE.2017.8115664
   Ihara A, 2014, INT CONF QUAL SOFTW, P47, DOI 10.1109/QSIC.2014.30
   Kawrykow D, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P351, DOI 10.1145/1985793.1985842
   Khan S, 2018, WHO MADE CHANGE USIN
   Kim M, 2009, PROC INT CONF SOFTW, P309, DOI 10.1109/ICSE.2009.5070531
   Kim S, 2006, IEEE INT CONF AUTOM, P81
   Ma D, 2009, PROC IEEE INT CONF S, P535, DOI 10.1109/ICSM.2009.5306386
   Macho C, 2017, IEEE WORK CONF MIN S, P368, DOI 10.1109/MSR.2017.65
   McDonald D. W., 2000, CSCW 2000. ACM 2000 Conference on Computer Supported Cooperative Work, P231, DOI 10.1145/358916.358994
   Meeker H, 2017, OPEN SOURCE
   Meng XZ, 2013, PROC IEEE INT CONF S, P250, DOI 10.1109/ICSM.2013.36
   MILLER W, 1985, SOFTWARE PRACT EXPER, V15, P1025, DOI 10.1002/spe.4380151102
   Minto Shawn, 2007, 4 INT WORKSH MIN SOF, P5
   Miraldo VC, 2017, PROCEEDINGS OF THE 2ND ACM SIGPLAN INTERNATIONAL WORKSHOP ON TYPE-DRIVEN DEVELOPMENT (TYDE' 17), P2, DOI 10.1145/3122975.3122976
   Mockus A, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P503, DOI 10.1109/ICSE.2002.1007994
   Myers EW, 1986, ALGORITHMICA, V1, P251, DOI 10.1007/BF01840446
   Palix N, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P43, DOI 10.1109/SANER.2015.7081814
   Panciera K, 2009, GROUP 2009 PROCEEDINGS, P51
   Raghavan S, 2004, PROC IEEE INT CONF S, P188, DOI 10.1109/ICSM.2004.1357803
   Rahman F, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P491, DOI 10.1145/1985793.1985860
   Reiss SP, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P11, DOI 10.1145/1368088.1368091
   Schindelin J, 2009, PATCH 0 3 TEACH GIT
   Schuler D., 2008, P 2008 INT WORKING C, P121
   SERVANT F, 2012, P ACM SIGSOFT 20 INT
   Servant F, 2017, PROC INT CONF SOFTW, P746, DOI 10.1109/ICSE.2017.74
   Sharwood Simon, 2017, REGISTER
   Shihab E., 2011, Proceedings of the ACM SIGSOFT symposium and the European Conference on Foundations of Software Engineering, P300
   Spacco J, 2009, IEEE INT WORK C SO, P99, DOI 10.1109/SCAM.2009.19
   Tantithamthavorn C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P812, DOI 10.1109/ICSE.2015.93
   The Linux Foundation, 2017, LIN FDN FREE SOFTW F
   THONGTANUNAM P, 2016, PROC INT CONF SOFTW, P1039, DOI DOI 10.1145/2884781.2884852
   Tsikerdekis M, 2018, EMPIR SOFTW ENG, V23, P1871, DOI 10.1007/s10664-017-9575-4
   UKKONEN E, 1985, INFORM CONTROL, V64, P100, DOI 10.1016/S0019-9958(85)80046-2
   Weissgerber P, 2006, IEEE INT CONF AUTOM, P231
   Welsh A, 2011, LANDSLIDES, V8, P183, DOI 10.1007/s10346-010-0238-4
   Xing Z., 2005, 20 IEEEACM INT C AUT, P54, DOI DOI 10.1145/1101908.1101919
   Ye YW, 2003, PROC INT CONF SOFTW, P419
   Zhou MH, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P27, DOI 10.1145/3106237.3106287
NR 67
TC 11
Z9 11
U1 1
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2019
VL 24
IS 4
BP 2725
EP 2763
DI 10.1007/s10664-019-09704-x
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IL9CL
UT WOS:000477582700028
DA 2024-07-18
ER

PT J
AU Ghaleb, TA
   da Costa, DA
   Zou, Y
AF Ghaleb, Taher Ahmed
   da Costa, Daniel Alencar
   Zou, Ying
TI An empirical study of the long duration of continuous integration builds
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Continuous integration; CI build duration; Mining software repositories;
   Empirical software engineering
ID MULTIPLE COMPARISONS
AB Continuous Integration (CI) is a set of software development practices that allow software development teams to generate software builds more quickly and periodically (e.g., daily or even hourly). CI brings many advantages, such as the early identification of errors when integrating code. When builds are generated frequently, a long build duration may hold developers from performing other important tasks. Recent research has shown that a considerable amount of development time is invested on optimizing the generation of builds. However, the reasons behind long build durations are still vague and need an in-depth study. Our initial investigation shows that many projects have build durations that far exceed the acceptable build duration (i.e., 10 minutes) as reported by recent studies. In this paper, we study several characteristics of CI builds that may be associated with the long duration of CI builds. We perform an empirical study on 104,442 CI builds from 67 GitHub projects. We use mixed-effects logistic models to model long build durations across projects. Our results reveal that, in addition to common wisdom factors (e.g., project size, team size, build configuration size, and test density), there are other highly important factors to explain long build durations. We observe that rerunning failed commands multiple times is most likely to be associated with long build durations. We also find that builds may run faster if they are configured (a) to cache content that does not change often or (b) to finish as soon as all the required jobs finish. However, we observe that about 40% of the studied projects do not use or misuse such configurations in their builds. In addition, we observe that triggering builds on weekdays or at daytime is most likely to have a direct relationship with long build durations. Our results suggest that developers should use proper CI build configurations to maintain successful builds and to avoid long build durations. Tool builders should supply development teams with tools to identify cacheable spots of the project in order to accelerate the generation of CI builds.
C1 [Ghaleb, Taher Ahmed] Queens Univ, Sch Comp, Kingston, ON K7L 3N6, Canada.
   [da Costa, Daniel Alencar] Univ Otago, Dept Informat Sci, Otago, New Zealand.
   [Zou, Ying] Queens Univ, Dept Elect & Comp Engn, Kingston, ON K7L 3N6, Canada.
C3 Queens University - Canada; University of Otago; Queens University -
   Canada
RP Ghaleb, TA (corresponding author), Queens Univ, Sch Comp, Kingston, ON K7L 3N6, Canada.
EM taher.ghaleb@queensu.ca; danielcalencar@otago.ac.nz; ying.zou@queensu.ca
RI Ghaleb, Taher A/I-9457-2018; Zou, Ying/KLC-9380-2024
OI Ghaleb, Taher A/0000-0001-9336-7298; 
CR AGRESTI A, 1989, PSYCHOL BULL, V105, P290, DOI 10.1037/0033-2909.105.2.290
   Amlekar R, 2018, IEEE WORK CONF MIN S, P86, DOI 10.1145/3196398.3196471
   Ammons G., 2006, P 2006 INT WORKSH DY, P81, DOI [10.1145/1138912.1138928, DOI 10.1145/1138912.1138928]
   [Anonymous], 2017, J SOFTWARE EVOLUTION
   Astels D, 2018, ONE ASSERTION PER TE
   Atchison A, 2017, IEEE WORK CONF MIN S, P463, DOI 10.1109/MSR.2017.29
   Beck K., 2000, EXTREME PROGRAMMING
   Beller M, 2017, IEEE WORK CONF MIN S, P356, DOI 10.1109/MSR.2017.62
   Beller M, 2017, IEEE WORK CONF MIN S, P447, DOI 10.1109/MSR.2017.24
   Bernardo JH, 2018, IEEE WORK CONF MIN S, P131, DOI 10.1145/3196398.3196421
   Bisong E, 2017, IEEE WORK CONF MIN S, P487, DOI 10.1109/MSR.2017.36
   Brooks G, 2008, AGILE 2008, PROCEEDINGS, P294, DOI 10.1109/Agile.2008.41
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Domingos P, 2012, COMMUN ACM, V55, P78, DOI 10.1145/2347736.2347755
   DUNN OJ, 1964, TECHNOMETRICS, V6, P241, DOI 10.2307/1266041
   DUNN OJ, 1961, J AM STAT ASSOC, V56, P52, DOI 10.2307/2282330
   Duvall Paul M., 2007, Continuous integration: improving software quality and reducing risk
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Elbaum S, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P235, DOI 10.1145/2635868.2635910
   Eyolfson J., 2011, WORKING C MINING SOF, P153, DOI DOI 10.1145/1985441.1985464
   Faraway JulianJ., 2016, EXTENDING LINEAR MOD, V124
   FELDMAN SI, 1979, SOFTWARE PRACT EXPER, V9, P255, DOI 10.1002/spe.4380090402
   Fisher R. A., 1946, Statistical methods for research workers.
   Fowler M., 2006, Continuous integration
   Gallaba K, 2020, IEEE T SOFTWARE ENG, V46, P33, DOI 10.1109/TSE.2018.2838131
   HANLEY JA, 1982, RADIOLOGY, V143, P29, DOI 10.1148/radiology.143.1.7063747
   Harrell FE, 2015, SPRINGER SER STAT, DOI 10.1007/978-3-319-19425-7
   Hilton M, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P197, DOI 10.1145/3106237.3106270
   Hilton M, 2016, IEEE INT CONF AUTOM, P426, DOI 10.1145/2970276.2970358
   HOLM S, 1979, SCAND J STAT, V6, P65
   Howell D.C., 2014, MEDIAN ABSOLUTE DEVI
   Huo C, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P621, DOI 10.1145/2635868.2635917
   Kampstra P., 2008, Journal of Statistical Software, V28, P1, DOI [10.18637/jss.v028.c01, DOI 10.18637/JSS.V028.C01, 10.18637/jss.v028.c01.papers3://publication/uuid/692988CE-7E10-498E-96EC-E7A0CE3620A3]
   KRUSKAL WH, 1952, J AM STAT ASSOC, V47, P583, DOI 10.1080/01621459.1952.10483441
   Kumfert G, 2002, TECH REP
   Laukkanen E, 2015, 2015 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON RAPID CONTINUOUS SOFTWARE ENGINEERING (RCOSE), P1, DOI 10.1109/RCoSE.2015.8
   Lei Y, 2005, SOFTW REL ENG 2005 I, P10
   Leitner Andreas, 2007, 22 IEEE ACM INT C AU, P417, DOI 10.1145/1321631.1321698
   Lewis A. J., 2009, MIXED EFFECTS MODELS
   Liang JJ, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P688, DOI 10.1145/3180155.3180213
   liwerski J, 2005, ACM SIGSOFT SOFTWARE, V30, P1, DOI [10.1145/1082983.1083147, DOI 10.1145/1083142.1083147, DOI 10.1145/1082983.1083147]
   McIntosh S, 2015, EMPIR SOFTW ENG, V20, P1587, DOI 10.1007/s10664-014-9324-x
   McIntosh S, 2012, EMPIR SOFTW ENG, V17, P578, DOI 10.1007/s10664-011-9169-5
   Meszaros G., 2007, Xunit test patterns: refactoring test code
   Meyer M, 2014, IEEE SOFTWARE, V31, P14, DOI 10.1109/MS.2014.58
   Mokhov A, 2016, ACM SIGPLAN NOTICES, V51, P170, DOI [10.1145/3241625.2976011, 10.1145/2976002.2976011]
   Moonen Leon, 2001, P 2 INT C EXTR PROGR
   Nakagawa S, 2013, METHODS ECOL EVOL, V4, P133, DOI 10.1111/j.2041-210x.2012.00261.x
   Ni AS, 2017, IEEE WORK CONF MIN S, P455, DOI 10.1109/MSR.2017.26
   Peduzzi P, 1996, J CLIN EPIDEMIOL, V49, P1373, DOI 10.1016/S0895-4356(96)00236-3
   Pinheiro P, 2010, LINEAR NONLINEAR MIX, P1
   Rasmusson J., 2004, PROC EXTREME PROGRAM, P557
   Rausch T, 2017, IEEE WORK CONF MIN S, P345, DOI 10.1109/MSR.2017.54
   Rogers RO, 2004, LECT NOTES COMPUT SC, V3092, P68
   Romano J, 2006, SHOULD WE REALLY BE
   Sarle W., 1990, VARCLUS PROCEDURE SA
   Seo H, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P724, DOI 10.1145/2568225.2568255
   Smith P, 2011, Software build systems: principles and experience
   Sulir M, 2016, PLATEAU'16: PROCEEDINGS OF THE 7TH INTERNATIONAL WORKSHOP ON EVALUATION AND USABILITY OF PROGRAMMING LANGUAGES AND TOOLS, P17, DOI 10.1145/3001878.3001882
   Vandekerckhove Joachim, 2015, The Oxford Handbook of Computational and Mathematical Psychology, P300, DOI DOI 10.1093/OXFORDHB/9780199957996.013.14
   Vasilescu B, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P805, DOI 10.1145/2786805.2786850
   Vasilescu B, 2014, PROC IEEE INT CONF S, P401, DOI 10.1109/ICSME.2014.62
   Vassallo C, 2017, P 33 INT C SOFTW MAI
   Winter B., 2013, A very basic tutorial for performing linear mixed effects analyses
   Xia J, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY COMPANION (QRS-C), P311, DOI 10.1109/QRS-C.2017.59
   Xuan JF, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P52, DOI 10.1145/2635868.2635906
   Zoltagharinia M, 2017, IEEE WORK CONF MIN S, P312, DOI 10.1109/MSR.2017.7
NR 67
TC 39
Z9 41
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2019
VL 24
IS 4
BP 2102
EP 2139
DI 10.1007/s10664-019-09695-9
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IL9CL
UT WOS:000477582700012
DA 2024-07-18
ER

PT J
AU Khan, MU
   Sartaj, H
   Iqbal, MZ
   Usman, M
   Arshad, N
AF Khan, Muhammad Uzair
   Sartaj, Hassan
   Iqbal, Muhammad Zohaib
   Usman, Muhammad
   Arshad, Numra
TI AspectOCL: using aspects to ease maintenance of evolving constraint
   specification
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Model-Driven Software Engineering (MDSE); Aspect-orientation;
   Cross-cutting constraints; Object Constraint Language (OCL); Empirical
   evaluation
ID OCL; UML; TRANSFORMATION
AB Constraints play an important role in Model-Driven Software Engineering. Industrial systems commonly exhibit cross-cutting behaviors in design artifacts. Aspect-orientation is a well-established approach to deal with cross-cutting behaviors and has been successfully used for programming and design languages. In model-driven software engineering, the presence of cross-cutting constraints makes it difficult to maintain constraints defined on the models of large-scale industrial systems. In this work, we improve our previous work on AspectOCL, which is an extension of OCL that allows modeling of cross-cutting constraints. We provide the abstract and concrete syntax of the language. We add support for new constructs such as composite aspects and invariant specification on a package. We also provide tool support for writing cross-cutting constraints using AspectOCL. To evaluate AspectOCL, we apply it on benchmark case studies from the OCL repository. The results show that by separating the cross-cutting constraints, the number of constructs in the constraint specifications can be reduced to a large amount. AspectOCL reduces the maintenance effort by up to 55% in one case study. To explore the impact on maintenance time and accuracy, we also perform a controlled experiment with 90 student subjects. The results show that AspectOCL has a small magnitude of improvement in terms of maintenance time when compared to OCL, whereas modifications to OCL specification are more accurate. The post-experiment survey indicates that the majority of subjects favored AspectOCL, but faced challenges in applying aspect-orientation to constraint specification due to a lack of prior exposure.
C1 [Khan, Muhammad Uzair; Sartaj, Hassan; Iqbal, Muhammad Zohaib; Usman, Muhammad; Arshad, Numra] Natl Univ Comp & Emerging Sci, Quest UAV Dependabil Lab, Islamabad, Pakistan.
RP Khan, MU (corresponding author), Natl Univ Comp & Emerging Sci, Quest UAV Dependabil Lab, Islamabad, Pakistan.
EM uzair.khan@nu.edu.pk; hassan.sartaj@questlab.pk; zohaib.iqbal@nu.edu.pk;
   m.usman@questlab.pk; numra.irfan92@gmail.com
RI Khan, Muhammad Sarwar/Q-8307-2019; Sartaj, Hassan/HSE-1352-2023
OI Sartaj, Hassan/0000-0001-5212-9787; Iqbal, Muhammad Zohaib
   Z/0000-0001-8190-5327
CR Aldawud O., 2003, P 3 INT WORKSH ASP O
   Ali S, 2016, EMPIR SOFTW ENG, V21, P2459, DOI 10.1007/s10664-015-9392-6
   Ali S, 2014, LECT NOTES COMPUT SC, V8769, P223, DOI 10.1007/978-3-319-11743-0_16
   Ali S, 2014, SOFTW SYST MODEL, V13, P1189, DOI 10.1007/s10270-012-0293-5
   Ali S, 2013, IEEE T SOFTWARE ENG, V39, P1376, DOI 10.1109/TSE.2013.17
   Ali S, 2012, SOFTW SYST MODEL, V11, P633, DOI 10.1007/s10270-011-0206-z
   [Anonymous], 2012, Synthesis Lectures on Software Engineering, DOI [DOI 10.2200/S00751ED2V01Y201701SWE004, DOI 10.2200/S00441ED1V01Y201208SWE001]
   Cabot J, 2007, SCI COMPUT PROGRAM, V68, P179, DOI 10.1016/j.scico.2007.05.001
   Cabot Jordi, 2012, Formal Methods for Model-Driven Engineering. 12th International School of Formal Methods for the Design of Computer, Communication and Software Systems (SFM 2012). Advanced Lectures, P58, DOI 10.1007/978-3-642-30982-3_3
   Cabot J., 2014, OCL REPOSITORY
   Cabot J, 2007, LECT NOTES COMPUT SC, V4801, P198
   Clarke S., 2005, ASPECT ORIENTED ANAL
   Correa A, 2009, IET SOFTW, V3, P69, DOI 10.1049/iet-sen.2008.0022
   Correa A, 2007, SOFTW SYST MODEL, V6, P113, DOI 10.1007/s10270-006-0023-y
   Correa A, 2007, LECT NOTES COMPUT SC, V4735, P76
   Costal D, 2008, SOFTW SYST MODEL, V7, P469, DOI 10.1007/s10270-007-0078-4
   Dou W, 2014, LECT NOTES COMPUT SC, V8569, P51
   Elrad T, 2001, COMMUN ACM, V44, P28
   France R, 2004, IEE P-SOFTW, V151, P173, DOI 10.1049/ip-sen:20040920
   Frias L., 2003, EU-Rent car rentals specification (Tech. Rep.)
   Grant E.S., 2012, P INT MULT ENG COMP, V1, P780
   Gray J, 2001, COMMUN ACM, V44, P87, DOI 10.1145/383845.383864
   Hearnden D, 2003, SEVENTH IEEE INTERNATIONAL ENTERPRISE DISTRIBUTED OBJECT COMPUTING CONFERENCE, PROCEEDINGS, P264, DOI 10.1109/EDOC.2003.1233855
   Hong L, 2017, IEEE T SOFTWARE ENG, V45, P2
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   Khan MU, 2015, LECT NOTES COMPUT SC, V9153, P92, DOI 10.1007/978-3-319-21151-0_7
   Khan MU, 2014, PROC IEEE INT CONF S, P557, DOI 10.1109/ICSME.2014.94
   Kuhlmann M, 2008, FORM ASP COMPUT, V20, P79, DOI 10.1007/s00165-007-0062-3
   Kunioshi CT, 2004, SURFACES AND INTERFACES IN NANOSTRUCTURED MATERIALS AND TRENDS IN LIGA, MINIATURIZATION, AND NANOSCALE MATERIALS, P173
   Laddad R., 2003, ASPECTJ ACTION PRACT
   Lengyel L, 2006, ELECTRON NOTES THEOR, V152, P111, DOI 10.1016/j.entcs.2005.10.020
   Markovic S, 2008, SOFTW SYST MODEL, V7, P25, DOI 10.1007/s10270-007-0056-x
   Mguni K, 2013, ISRN SOFTWARE ENG
   Object Management Group (OMG), 2008, MOF Model to Text Transformation Language; Version 1.0, Document Formal/2008-01-16
   OMG, 2017, OBJ CONSTR LANG SPEC
   Przybylek, 2017, EMPIR SOFTW ENG, V23, P1
   Richters M., 2003, AOSD MOD UML WORKSH
   Rumpe B, 2002, OBJECT MODELING OCL
   Salman I, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P666, DOI 10.1109/ICSE.2015.82
   Stahl T., 2006, Model-driven software development: technology, engineering, management
   Storrle Harald, 2013, Modelling Foundations and Applications. 9th European Conference, ECMFA 2013. Proceedings. LNCS 7949, P3, DOI 10.1007/978-3-642-39013-5_2
   Tairas R., 2011, LECT NOTES COMPUTER, P60
   Vain J, 2017, 2017 INTERNATIONAL CONFERENCE ON INFOCOM TECHNOLOGIES AND UNMANNED SYSTEMS (TRENDS AND FUTURE DIRECTIONS) (ICTUS), P84, DOI 10.1109/ICTUS.2017.8285981
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Vegas S, 2016, IEEE T SOFTWARE ENG, V42, P120, DOI 10.1109/TSE.2015.2467378
   Warmer J., 2003, OBJECT CONSTRAINT LA, Vsecond
   Warmer Jos B, 1998, ADDISON WESLEY OBJEC
   Weber D, 2016, LECT NOTES COMPUT SC, V9974, P221, DOI 10.1007/978-3-319-46397-1_17
   Wimmer M, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1978802.1978807
   Wohlin C., 2012, Experimentation in Software Engineering
   Yonemori K, 2003, ACTA HORTIC, P189, DOI 10.17660/ActaHortic.2003.622.16
NR 51
TC 6
Z9 6
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2019
VL 24
IS 4
BP 2674
EP 2724
DI 10.1007/s10664-019-09717-6
PG 51
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IL9CL
UT WOS:000477582700027
DA 2024-07-18
ER

PT J
AU Hassani, M
   Shang, WY
   Shihab, E
   Tsantalis, N
AF Hassani, Mehran
   Shang, Weiyi
   Shihab, Emad
   Tsantalis, Nikolaos
TI Studying and detecting log-related issues
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Empirical study; Log; Software bug; Mining software repositories
ID LINES; CODE
AB Logs capture valuable information throughout the execution of software systems. The rich knowledge conveyed in logs is highly leveraged by researchers and practitioners in performing various tasks, both in software development and its operation. Log-related issues, such as missing or having outdated information, may have a large impact on the users who depend on these logs. In this paper, we first perform an empirical study on log-related issues in two large-scale, open source software systems. We find that the files with log-related issues have undergone statistically significantly more frequent prior changes, and bug fixes. We also find that developers fixing these log-related issues are often not the ones who introduced the logging statement nor the owner of the method containing the logging statement. Maintaining logs is more challenging without clear experts. Finally, we find that most of the defective logging statements remain unreported for a long period (median 320 days). Once reported, the issues are fixed quickly (median five days). Our empirical findings suggest the need for automated tools that can detect log-related issues promptly. We conducted a manual study and identified seven root-causes of the log-related issues. Based on these root causes, we developed an automated tool that detects four evident types of log-related issues. Our tool can detect 75 existing inappropriate logging statements reported in 40 log-related issues. We also reported new issues found by our tool to developers and 38 previously unknown issues in the latest release of the subject systems were accepted by developers.
C1 [Hassani, Mehran; Shang, Weiyi; Shihab, Emad; Tsantalis, Nikolaos] Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ, Canada.
C3 Concordia University - Canada
RP Hassani, M (corresponding author), Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ, Canada.
EM m_assani@encs.concordia.ca; shang@encs.concordia.ca;
   shihab@encs.concordia.ca; tsantalis@encs.concordia.ca
RI Tsantalis, Nikolaos/AAR-7845-2020
OI Tsantalis, Nikolaos/0000-0003-2508-3845
CR [Anonymous], 1964, Some rapid approximate statistical procedures
   [Anonymous], 2008, PROC 1 USENIX C ANAL
   [Anonymous], 2017, OPEN SOURCE ELASTIC
   BAKER C, 1992, J ADV NURS, V17, P1355, DOI 10.1111/j.1365-2648.1992.tb01859.x
   Barik T, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P92, DOI 10.1145/2889160.2889231
   Bird C., 2011, P 19 ACM SIGSOFT S 1, P4, DOI DOI 10.1145/2025113.2025119
   Bird C, 2009, COMMUN ACM, V52, P85, DOI 10.1145/1536616.1536639
   Boulon J., 2008, P CCA, V8, P1
   Carasso David., 2012, Exploring splunk
   Chen B, 2017, 2017 IEEE ACM 39 IEE
   Chen TH, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P71, DOI 10.1145/2889160.2889228
   Chen TH, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1001, DOI 10.1145/2568225.2568259
   Ding Rui, 2015, P 2015 USENIX TECHN, P139
   Dmitrienko A., 2005, ANAL CLIN TRIALS USI
   Fu Q, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P24, DOI 10.1145/2591062.2591175
   Fu XY, 2012, SYM REL DIST SYST, P71, DOI 10.1109/SRDS.2012.40
   Gousios G, 2017, JAVA CALLGRAPH JAVA
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Herraiz I., 2006, 10th European Conference on Software Maintenance and Reengineering
   Herraiz I., 2010, Making Software: What Really Works, and Why We Believe It, P125
   Kabinna S, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P154, DOI [10.1145/2901739.2901769, 10.1109/MSR.2016.025]
   Kabinna S, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P326, DOI 10.1109/SANER.2016.29
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Kernighan B. W., 1999, The Practice of Programming, V1st
   Li H, 2017, EMPIR SOFTW ENG, V22, P1684, DOI 10.1007/s10664-016-9456-2
   Li H, 2017, EMPIR SOFTW ENG, V22, P1831, DOI 10.1007/s10664-016-9467-z
   Malik H, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1012, DOI 10.1109/ICSE.2013.6606651
   Nagappan Nachiappan, 2008, SOFTW ENG 2008 ICSE, P521
   Nagaraj K, 2012, P 9 USENIX C NETW SY, P353
   Oliner A, 2012, COMMUN ACM, V55, P63, DOI 10.1145/2076450.2076466
   Oliner AJ, 2011, I C DEPEND SYS NETWO, P49, DOI 10.1109/DSN.2011.5958206
   Shang WY, 2014, PROC IEEE INT CONF S, P21, DOI 10.1109/ICSME.2014.24
   Shang WY, 2015, EMPIR SOFTW ENG, V20, P1, DOI 10.1007/s10664-013-9274-8
   Shang WY, 2014, J SOFTW-EVOL PROC, V26, P3, DOI 10.1002/smr.1579
   Stol KJ, 2016, PROC INT CONF SOFTW, P120, DOI 10.1145/2884781.2884833
   Weiyi Shang, 2011, 2011 18th Working Conference on Reverse Engineering, P335, DOI 10.1109/WCRE.2011.48
   Xu W, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P117
   Yao K, 2018, P 9 ACM SPEC INT C P
   Yin D.R. K., 2017, Case Study Research and Applications: Design and Methods
   Yuan D., 2012, P 2012 USENIX S OP S, P293
   Yuan D, 2012, PROC INT CONF SOFTW, P102, DOI 10.1109/ICSE.2012.6227202
   Yuan D, 2012, ACM T COMPUT SYST, V30, DOI 10.1145/2110356.2110360
   Yuan D, 2010, ASPLOS XV: FIFTEENTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS, P143
   Zhang HY, 2009, PROC IEEE INT CONF S, P274, DOI 10.1109/ICSM.2009.5306304
   Zhu JM, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P415, DOI 10.1109/ICSE.2015.60
NR 45
TC 32
Z9 35
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2018
VL 23
IS 6
BP 3248
EP 3280
DI 10.1007/s10664-018-9603-z
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HC1WE
UT WOS:000451593200006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Mondal, M
   Rahman, MS
   Roy, CK
   Schneider, KA
AF Mondal, Manishankar
   Rahman, Md Saidur
   Roy, Chanchal K.
   Schneider, Kevin A.
TI Is cloned code really stable?
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Code clones; Code stability; Software maintenance and evolution
ID NICAD
AB Clone has emerged as a controversial term in software engineering research and practice. The impact of clones is of great importance from software maintenance perspectives. Stability is a well investigated term in assessing the impacts of clones on software maintenance. If code clones appear to exhibit a higher instability (i.e., higher change-proneness) than non-cloned code, then we can expect that code clones require higher maintenance effort and cost than non-cloned code. A number of studies have been done on the comparative stability of cloned and non-cloned code. However, these studies could not come to a consensus. While some studies show that code clones are more stable than non-cloned code, the other studies provide empirical evidence of higher instability of code clones. The possible reasons behind these contradictory findings are that different studies investigated different aspects of stability using different clone detection tools on different subject systems using different experimental setups. Also, the subject systems were not of wide varieties. Emphasizing these issues (with several others mentioned in the motivation) we have conducted a comprehensive empirical study where we have - (i) implemented and investigated seven existing methodologies that explored different aspects of stability, (ii) used two clone detection tools (NiCad and CCFinderX) to implement each of these seven methodologies, and (iii) investigated the stability of three types (Type-1, Type-2, Type-3) of clones. Our investigation on 12 diverse subject systems covering three programming languages (Java, C, C#) with a list of 8 stability assessment metrics suggest that (i) cloned code is often more unstable (change-prone) than non-cloned code in the maintenance phase, (ii) both Type 1 and Type 3 clones appear to exhibit higher instability than Type 2 clones, (iii) clones in Java and C programming languages are more change-prone than the clones in C#, and (iv) changes to the clones in procedural programming languages seem to be more dispersed than the changes to the clones in object oriented languages. We also systematically replicated the original studies with their original settings and found mostly equivalent results as of the original studies. We believe that our findings are important for prioritizing code clones from management perspectives.
C1 [Mondal, Manishankar] Univ Saskatchewan, Dept Comp Sci, Software Engn, Saskatoon, SK, Canada.
   [Rahman, Md Saidur; Roy, Chanchal K.; Schneider, Kevin A.] Univ Saskatchewan, Dept Comp Sci, Saskatoon, SK, Canada.
C3 University of Saskatchewan; University of Saskatchewan
RP Mondal, M (corresponding author), Univ Saskatchewan, Dept Comp Sci, Software Engn, Saskatoon, SK, Canada.
EM mshankar.mondal@usask.ca; saeed.cs@usask.ca; chanchal.roy@usask.ca;
   kevin.schneider@usask.ca
RI Schneider, Kevin/KQV-5113-2024
OI Schneider, Kevin/0000-0003-1113-1754
CR [Anonymous], 2010, P JOINT ERCIM WORKSH
   Aversano L, 2007, CSMR 2007: 11TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P81
   Bakota Tibor, 2007, 2007 IEEE International Conference on Software Maintenance, P24, DOI 10.1109/ICSM.2007.4362615
   Barbour L., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P273, DOI 10.1109/ICSM.2011.6080794
   Barbour L, 2013, J SOFTW-EVOL PROC, V25, P1139, DOI 10.1002/smr.1597
   Bettenburg N, 2009, WORK CONF REVERSE EN, P85, DOI 10.1109/WCRE.2009.51
   Cai DX, 2011, LECT NOTES COMPUT SC, V6603, P432, DOI 10.1007/978-3-642-19811-3_30
   Chatterji D, 2016, EMPIR SOFTW ENG, V21, P1476, DOI 10.1007/s10664-015-9394-4
   Cordy JR, 2011, CONF PROC INT SYMP C, P219, DOI 10.1109/ICPC.2011.26
   Gode N., 2010, JSME, V25, P165
   Göde N, 2011, EUR CON SFTWR MTNCE, P65, DOI 10.1109/CSMR.2011.11
   Göde N, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P311, DOI 10.1145/1985793.1985836
   Göde N, 2009, EUR CON SFTWR MTNCE, P219, DOI 10.1109/CSMR.2009.20
   Harder Jan, 2013, Journal of Software: Evolution and Process, V25, P1063, DOI 10.1002/smr.1551
   Higo Y, 2009, WORK CONF REVERSE EN, P315, DOI 10.1109/WCRE.2009.39
   Hordijk W, 2009, P 13 EASE, P88
   Islam JF, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P68, DOI 10.1109/SANER.2016.78
   Jarzabek S., 2010, Proceedings of the 4th International Workshop on Software Clones, P73
   Juergens E, 2009, PROC INT CONF SOFTW, P485, DOI 10.1109/ICSE.2009.5070547
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kapser CJ, 2008, EMPIR SOFTW ENG, V13, P645, DOI 10.1007/s10664-008-9076-6
   Kim Miryung, 2005, ESEC/FSE- 13), P187, DOI [10.1145/1081706.1081737, DOI 10.1145/1081706.1081737]
   Krinke J., 2011, P 5 INT WORKSHOP SOF, P28
   Krinke J, 2008, EIGHTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P57, DOI 10.1109/SCAM.2008.14
   Krinke J, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P170, DOI 10.1109/WCRE.2007.7
   Li J., 2011, UWCSE110502
   Lozano A., 2007, PROC 4 INT WORKSHOP, P18, DOI DOI 10.1109/MSR.2007.8
   Lozano A., 2010, IWSC, V10, P65, DOI [10.1145/1808901.1808910, DOI 10.1145/1808901.1808910]
   Lozano A, 2008, PROC IEEE INT CONF S, P227, DOI 10.1109/ICSM.2008.4658071
   Mondal M., 2012, 2012 Proceedings of the 6th International Workshop on Software Clones (IWSC 2012), P29, DOI 10.1109/IWSC.2012.6227863
   Mondal M., 2012, P ACM S APPL COMPUTI, P1227, DOI DOI 10.1145/2245276.2231969
   Mondal M, 2014, P 8 INT WORKSH SOFTW, P1
   Mondal M, 2016, SOFTWARE QUAL J, V24, P883, DOI 10.1007/s11219-016-9305-y
   Mondal M, 2015, PROC IEEE INT CONF S, P91, DOI 10.1109/ICSM.2015.7332455
   Mondal M, 2012, APPL COMPUT REV, V12, P20, DOI 10.1145/2387358.2387360
   Mondal M, 2014, SCI COMPUT PROGRAM, V95, P445, DOI 10.1016/j.scico.2013.11.027
   Mondal M, 2011, CONF PROC INT SYMP C, P242, DOI 10.1109/ICPC.2011.14
   Rahman Foyzur, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P72, DOI 10.1109/MSR.2010.5463343
   Rahman MS, 2014, IEEE INT WORK C SO, P31, DOI 10.1109/SCAM.2014.13
   Rahman MS, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1265, DOI 10.1109/ICSE.2013.6606694
   Roy C. K., 2008, P 15 WORK C REV ENG, P81
   Roy CK, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P18, DOI 10.1109/CSMR-WCRE.2014.6747168
   Roy CK, 2009, IEEE ICST WORKSHOP, P157, DOI 10.1109/ICSTW.2009.18
   Roy CK, 2008, INT C PROGRAM COMPRE, P172, DOI 10.1109/ICPC.2008.41
   Roy CK, 2008, INT C PROGRAM COMPRE, P153, DOI 10.1109/ICPC.2008.42
   Roy CK, 2009, SCI COMPUT PROGRAM, V74, P470, DOI 10.1016/j.scico.2009.02.007
   Saha R. K., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P293, DOI 10.1109/ICSM.2011.6080796
   Saha RK, 2010, IEEE INT WORK C SO, P87, DOI 10.1109/SCAM.2010.32
   Selim G. M. K., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P13, DOI 10.1109/WCRE.2010.11
   Thummalapenta S, 2010, EMPIR SOFTW ENG, V15, P1, DOI 10.1007/s10664-009-9108-x
   Wang Tiantian, 2013, P 2013 9 JOINT M FDN, P455
   Wang XY, 2012, IEEE INT CONF AUTOM, P170, DOI 10.1145/2351676.2351701
NR 52
TC 17
Z9 23
U1 2
U2 7
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2018
VL 23
IS 2
BP 693
EP 770
DI 10.1007/s10664-017-9528-y
PG 78
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GC1OI
UT WOS:000429551000003
DA 2024-07-18
ER

PT J
AU Dingsoyr, T
   Moe, NB
   Fægri, TE
   Seim, EA
AF Dingsoyr, Torgeir
   Moe, Nils Brede
   Faegri, Tor Erlend
   Seim, Eva Amdahl
TI Exploring software development at the very large-scale: a revelatory
   case study and research agenda for agile method adaptation
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Very large-scale software development; Software engineering;
   Requirements engineering; Project management; Portfolio management;
   Knowledge management; Customer involvement; Agile software development;
   Multi team systems; Inter-team coordination; Software architecture;
   Scrum; Extreme programming
ID ARCHITECTURE; METHODOLOGIES; CHALLENGES; PRINCIPLES; MANAGEMENT;
   PROJECTS; TEAMS
AB Agile development methods were believed to best suit small, co-located teams, but the success in small teams has inspired use in large and very large-scale software development. However, fundamental assumptions of agile development are challenged when applying the methods at a very large scale. An interpretative revelatory case study on one of the largest software development programmes in Norway shows how agile methods were adapted and complemented with practices from traditional methods to handle the scale. The programme ran over four years with 12 co-located development teams and a total of 175 people involved. The case study was conducted retrospectively using group interviews with 24 participants and documents. Findings on key challenging areas are reported: customer involvement, software architecture, and inter-team coordination. The revelatory study also suggests refinements of a research agenda for very large-scale agile development.
C1 [Dingsoyr, Torgeir; Moe, Nils Brede; Faegri, Tor Erlend] SINTEF, Dept Software Engn Safety & Secur, Box 4760 Sluppen, N-7465 Trondheim, Norway.
   [Dingsoyr, Torgeir] Norwegian Univ Sci & Technol, Dept Comp Sci, Trondheim, Norway.
   [Seim, Eva Amdahl] SINTEF, Dept Ind Management, Box 4760 Sluppen, Trondheim, PO, Norway.
C3 SINTEF; Norwegian University of Science & Technology (NTNU); SINTEF
RP Dingsoyr, T (corresponding author), SINTEF, Dept Software Engn Safety & Secur, Box 4760 Sluppen, N-7465 Trondheim, Norway.; Dingsoyr, T (corresponding author), Norwegian Univ Sci & Technol, Dept Comp Sci, Trondheim, Norway.
EM torgeird@sintef.no; nils.b.moe@sintef.no; tor.e.faegri@sintef.no;
   eva.amdahl.seim@sintef.no
RI Moe, Nils Brede/AAD-8183-2021; Dingsøyr, Torgeir/AAJ-7360-2020
OI Dingsøyr, Torgeir/0000-0003-0725-345X
FU strategic internal projects at SINTEF on large-scale agile development;
   project Agile 2.0 - Research council of Norway [236759]; Kantega;
   Kongsberg Defence Aerospace; Sopra Steria; Sticos
FX We are very grateful to all participants in the group interviews.
   Further, we would like to thank colleagues Svein Hallsteinsen for taking
   part in data collection and analysis of software architecture and Tore
   Dyba for taking part in data collection and analysis of inter-team
   coordination, and both for taking part in discussions of the case.
   Thanks to master student Espen Andreassen at the Norwegian University of
   Science and Technology for conducting an independent analysis on parts
   of the material used in this article. We also thank Knut Rolland at
   SINTEF and Saskia Bick at the University of Mannheim for comments on
   earlier versions of this manuscript. Darja Smite at SINTEF provided
   great assistance in redesigning the figures to improve clarity. We would
   also like to thank anonymous reviewers for a number of suggestions for
   improvements. The work was supported by strategic internal projects at
   SINTEF on large-scale agile development and the project Agile 2.0
   supported by the Research council of Norway through grant 236759 and by
   the companies Kantega, Kongsberg Defence & Aerospace, Sopra Steria, and
   Sticos.
CR Abrahamsson P, 2010, IEEE SOFTWARE, V27, P16, DOI 10.1109/MS.2010.36
   Barlow J. B., 2011, CAIS, V29, P25, DOI [10.17705/1CAIS.02902, DOI 10.17705/1CAIS.02902]
   Barney S, 2009, LECT NOTES COMPUTER, V5543
   Bass JM, 2015, EMPIR SOFTW ENG, V20, P1525, DOI 10.1007/s10664-014-9322-z
   Batra D, 2010, COMMUN ASSOC INF SYS, V27, P379
   Begel A, 2009, 2009 ICSE WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING, P1, DOI 10.1109/CHASE.2009.5071401
   Bjarnason E, 2012, INFORM SOFTWARE TECH, V54, P1107, DOI 10.1016/j.infsof.2012.04.006
   Blichfeldt Bodil Stilling, 2008, International Journal of Project Management, V26, P357, DOI 10.1016/j.ijproman.2007.06.004
   Boehm B, 2002, COMPUTER, V35, P64, DOI 10.1109/2.976920
   Boehm B., 2003, BALANCING AGILITY DI
   Conboy K, 2009, INFORM SYST RES, V20, P329, DOI 10.1287/isre.1090.0236
   Daneva M, 2013, J SYST SOFTWARE, V86, P1333, DOI 10.1016/j.jss.2012.12.046
   Dingsoyr T, 2014, LECT NOTES BUS INF P, V199, P1
   Dingsoyr T, 2014, LECT NOTES COMPUT SC, V8892, P273, DOI 10.1007/978-3-319-13835-0_20
   Dingsoyr T, 2012, J SYST SOFTWARE, V85, P1213, DOI 10.1016/j.jss.2012.02.033
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Eckstein J., 2004, Agile Software Development in Large . Diving into the Deep
   Eckstein J, 2014, LECT NOTES BUS INF P, V199, P21
   Faber R, 2010, IEEE SOFTWARE, V27, P33, DOI 10.1109/MS.2010.37
   Fitzgerald B, 2006, EUR J INFORM SYST, V15, P200, DOI 10.1057/palgrave.ejis.3000605
   Fitzgerald B, 2017, J SYST SOFTWARE, V123, P176, DOI 10.1016/j.jss.2015.06.063
   Flyvbjerg B, 2014, PROJ MANAG J, V45, P6, DOI 10.1002/pmj.21409
   Freudenberg S, 2010, IEEE SOFTWARE, V27, P8, DOI 10.1109/MS.2010.129
   Giezen M, 2012, INT J PROJ MANAG, V30, P781, DOI 10.1016/j.ijproman.2012.01.010
   Gregory P, 2016, INFORM SOFTWARE TECH, V77, P92, DOI 10.1016/j.infsof.2016.04.006
   Hackman JR, 1986, THE PSYCHOLOGY OF SE
   Hopkins R, 2014, AGILE SOFTWARE ARCHI, P291
   Ingvaldsen JA, 2012, HUM RELAT, V65, P861, DOI 10.1177/0018726712448203
   Jarzabkowski PA, 2012, ORGAN SCI, V23, P907, DOI 10.1287/orsc.1110.0693
   Klein HK, 1999, MIS QUART, V23, P67, DOI 10.2307/249410
   KNIBERG Henrik., 2011, Lean from the Trenches, Managing Large-Scale Projects with Kanban, s/l
   Lagerberg Lina, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P348, DOI 10.1109/ESEM.2013.53
   Larman C., 2017, Large-scale Scrum: More with LeSS
   Larman C, 2013, CROSSTALK, P9
   Leffingwell D., 2017, SAFE REFERENCE GUIDE
   Maiden N, 2010, IEEE SOFTWARE, V27, P87, DOI 10.1109/MS.2010.67
   MALONE TW, 1994, ACM COMPUT SURV, V26, P87, DOI 10.1145/174666.174668
   Moe NB, 2014, P 8 ACM IEEE INT S E, P12
   Moe NB, 2009, IEEE SOFTWARE, V26, P20, DOI 10.1109/MS.2009.182
   Myers M. D., 2007, Information and Organization, V17, P2, DOI 10.1016/j.infoandorg.2006.11.001
   Nerur S, 2005, COMMUN ACM, V48, P72, DOI 10.1145/1060710.1060712
   Nerur S, 2007, COMMUN ACM, V50, P79, DOI 10.1145/1226736.1226739
   Nord RL, 2014, LECT NOTES BUS INF P, V199, P43
   Olsson HH, 2014, IEEE SOFTWARE, V31, P87, DOI 10.1109/MS.2013.139
   Paasivaara M, 2014, INFORM SOFTWARE TECH, V56, P1556, DOI 10.1016/j.infsof.2014.06.008
   Paasivaara M, 2012, INT SYMP EMP SOFTWAR, P235, DOI 10.1145/2372251.2372294
   Petersen K, 2010, EMPIR SOFTW ENG, V15, P654, DOI 10.1007/s10664-010-9136-6
   Rajlich V, 2006, COMMUN ACM, V49, P67, DOI 10.1145/1145287.1145289
   Ramesh B, 2010, INFORM SYST J, V20, P449, DOI 10.1111/j.1365-2575.2007.00259.x
   Rolland Knut H., 2016, 39 INT C INF SYST DU
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Saldana J., 2016, CODING MANUAL QUALIT, DOI DOI 10.1017/CBO9781107415324.004
   Scheerer A., 2014, 35 INT C INF SYST AU
   Scheerer A, 2014, P ANN HICSS, P4780, DOI 10.1109/HICSS.2014.587
   Smite D, 2017, INFORM SOFTWARE TECH, V86, P71, DOI 10.1016/j.infsof.2017.01.003
   Smolander K, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P211, DOI 10.1109/ISESE.2002.1166942
   Stettina CJ, 2015, INT J PROJ MANAG, V33, P140, DOI 10.1016/j.ijproman.2014.03.008
   Strode DE, 2012, J SYST SOFTWARE, V85, P1222, DOI 10.1016/j.jss.2012.02.017
   Unphon H, 2010, J SYST SOFTWARE, V83, P2211, DOI 10.1016/j.jss.2010.06.043
   Vinekar V, 2006, INFORM SYST MANAGE, V23, P31, DOI 10.1201/1078.10580530/46108.23.3.20060601/93705.4
   Vlietland J, 2015, INFORM SOFTWARE TECH, V57, P52, DOI 10.1016/j.infsof.2014.08.008
   Wenger E., 1998, Communities of Practise:Learning, Meaning and Identity, DOI [10.1017/CBO9780511803932, DOI 10.1017/CBO9780511803932]
   Williams L, 2003, COMPUTER, V36, P39, DOI 10.1109/MC.2003.1204373
   Wohlin C, 2015, J SYST SOFTWARE, V109, P229, DOI 10.1016/j.jss.2015.08.009
   Yin R. K., 2017, CASE STUDY RES DESIG
NR 65
TC 109
Z9 128
U1 15
U2 71
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2018
VL 23
IS 1
BP 490
EP 520
DI 10.1007/s10664-017-9524-2
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA FU9TG
UT WOS:000424199400013
OA Green Accepted, hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Munaiah, N
   Kroh, S
   Cabrey, C
   Nagappan, M
AF Munaiah, Nuthan
   Kroh, Steven
   Cabrey, Craig
   Nagappan, Meiyappan
TI Curating GitHub for engineered software projects
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Mining software repositories; GitHub; Data curation; Curation tools
AB Software forges like GitHub host millions of repositories. Software engineering researchers have been able to take advantage of such a large corpora of potential study subjects with the help of tools like GHTorrent and Boa. However, the simplicity in querying comes with a caveat: there are limited means of separating the signal (e.g. repositories containing engineered software projects) from the noise (e.g. repositories containing home work assignments). The proportion of noise in a random sample of repositories could skew the study and may lead to researchers reaching unrealistic, potentially inaccurate, conclusions. We argue that it is imperative to have the ability to sieve out the noise in such large repository forges. We propose a framework, and present a reference implementation of the framework as a tool called reaper, to enable researchers to select GitHub repositories that contain evidence of an engineered software project. We identify software engineering practices (called dimensions) and propose means for validating their existence in a GitHub repository. We used reaper to measure the dimensions of 1,857,423 GitHub repositories. We then used manually classified data sets of repositories to train classifiers capable of predicting if a given GitHub repository contains an engineered software project. The performance of the classifiers was evaluated using a set of 200 repositories with known ground truth classification. We also compared the performance of the classifiers to other approaches to classification (e.g. number of GitHub Stargazers) and found our classifiers to outperform existing approaches. We found stargazers-based classifier (with 10 as the threshold for number of stargazers) to exhibit high precision (97%) but an inversely proportional recall (32%). On the other hand, our best classifier exhibited a high precision (82%) and a high recall (86%). The stargazer-based criteria offers precision but fails to recall a significant portion of the population.
C1 [Munaiah, Nuthan; Kroh, Steven; Cabrey, Craig] Rochester Inst Technol, Dept Software Engn, 134 Lomb Mem Dr, Rochester, NY 14623 USA.
   [Nagappan, Meiyappan] Univ Waterloo, David R Cheriton Sch Comp Sci, 200 Univ Ave West, Waterloo, ON N2L 3G1, Canada.
C3 Rochester Institute of Technology; University of Waterloo
RP Munaiah, N (corresponding author), Rochester Inst Technol, Dept Software Engn, 134 Lomb Mem Dr, Rochester, NY 14623 USA.
EM nm6061@rit.edu; skk8768@rit.edu; cac2573@rit.edu;
   mei.nagappan@uwaterloo.ca
RI Munaiah, Nuthan/AAR-6905-2021
OI Munaiah, Nuthan/0000-0003-2071-664X
CR Allamanis M, 2013, IEEE WORK CONF MIN S, P207, DOI 10.1109/MSR.2013.6624029
   BELADY LA, 1976, IBM SYST J, V15, P225, DOI 10.1147/sj.153.0225
   Bird C., 2011, P 19 ACM SIGSOFT S 1, P4, DOI DOI 10.1145/2025113.2025119
   Bissyandé TF, 2013, PROC INT SYMP SOFTW, P188, DOI 10.1109/ISSRE.2013.6698918
   Bissyandé TF, 2013, P INT COMP SOFTW APP, P303, DOI 10.1109/COMPSAC.2013.55
   Bissyandé TF, 2013, IEEE INT C ENG COMP, P242, DOI 10.1109/ICECCS.2013.42
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   CA Technologies, 2016, WAFFL IO WORK BETT G
   Carlo Z, 2016, GITHUT PROGRAMMING L
   Codetree Studios, 2016, COD GITHUB ISS MAN
   Danial A, 2014, CLOC COUNT LINES COD
   de Souza S.C.B., 2005, P 23 ANN INT C DES C, P68, DOI [10.1145/1085313, 10.1145/1085313.1085331]
   Dyer R, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P422, DOI 10.1109/ICSE.2013.6606588
   Eick SG, 2001, IEEE T SOFTWARE ENG, V27, P1, DOI 10.1109/32.895984
   Emam KE, 2001, IEEE T SOFTWARE ENG, V27, P630, DOI 10.1109/32.935855
   GHTorrent, 2016, REL DB SCHEM
   GHTorrent, 2016, HALL OF FAM
   GitHub Inc, 2016, GITH ARCH
   GitHub Inc, 2016, GITH API V3 GITH DEV
   GitHub Inc, 2016, NO LIC CHOOS LIC
   Gousios G, 2013, IEEE WORK CONF MIN S, P233, DOI 10.1109/MSR.2013.6624034
   Guzman E., 2014, Association for Computing Machinery, P352
   HuBoard Inc, 2016, HUB GITH ISS MAD AW
   Jarczyk O, 2014, LECT NOTES COMPUT SC, V8851, P80, DOI 10.1007/978-3-319-13734-6_6
   Kalliamvakou E., 2014, P 11 WORKING C MININ, P92, DOI DOI 10.1145/2597073.2597074
   Kochhar PS, 2013, EUR CON SFTWR MTNCE, P353, DOI 10.1109/CSMR.2013.48
   Kofink A., 2015, COMPANION P 2015 ACM, P83
   Laplante P.A., 2007, What every engineer should know about software engineering
   Mockus A., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P263, DOI 10.1109/ICSE.2000.870417
   Munaiah N, 2016, HOME REPOREAPERS
   Munaiah N, 2016, REAPER REFERENCE IMP
   Nagappan N, 2007, LECT NOTES COMPUT SC, V4336, P103
   Nagappan N, 2005, 16TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P85, DOI 10.1109/ISSRE.2005.35
   Ray B, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P155, DOI 10.1145/2635868.2635922
   Rosenberg J, 1997, FOURTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P137, DOI 10.1109/METRIC.1997.637174
   Ross SM, 2003, J ENG TECHNOL, V20, P38
   Sajnani H, 2014, PROC IEEE INT CONF S, P231, DOI 10.1109/ICSME.2014.45
   Syer MarkD., 2013, Proceedings of the 2013 Conference of the Center for Advanced Studies on Collaborative Research, CASCON '13, P283
   Tung Y.-H., 2014, The 16th Asia-Pacific Network Operations and Management Symposium, P1, DOI [DOI 10.1109/APNOMS.2014.6996525, 10.1109/APNOMS.2014.6996525]
   Vasilescu B, 2014, PROC IEEE INT CONF S, P401, DOI 10.1109/ICSME.2014.62
   Vendome C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P772, DOI 10.1109/ICSE.2015.245
   Whitehead J, 2010, COLLABORATIVE SOFTWARE ENGINEERING, P1, DOI 10.1007/978-3-642-10294-3_1
   Zaidman Andy, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P220, DOI 10.1109/ICST.2008.47
   Zenhub, 2016, ZENH PROJ MAN AG TEA
   Zhu H, 1997, ACM COMPUT SURV, V29, P366, DOI 10.1145/267580.267590
NR 45
TC 202
Z9 221
U1 4
U2 22
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2017
VL 22
IS 6
BP 3219
EP 3253
DI 10.1007/s10664-017-9512-6
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FI3MB
UT WOS:000411865400014
DA 2024-07-18
ER

PT J
AU MacLeod, L
   Bergen, A
   Storey, MA
AF MacLeod, Laura
   Bergen, Andreas
   Storey, Margaret-Anne
TI Documenting and sharing software knowledge using screencasts
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software engineering; Screencasting; Social media
ID YOUTUBE; COMPREHENSION
AB Screencasts are used to capture a developer's screen while they narrate how a piece of software works or how the software can be extended. They have recently become a popular alternative to traditional text-based documentation. This paper describes our investigation into how developers produce and share developer-focused screencasts. In this study, we identified and analyzed a set of development screencasts from YouTube to explore what kinds of software knowledge are shared in video walkthroughs of code and what techniques are used for sharing software knowledge. We also interviewed YouTube screencast producers to understand their motivations for creating screencasts as well as to discover the challenges they face while producing code-focused videos. Finally, we compared YouTube screencasts to videos hosted on the professional RailsCasts website to better understand the differences and practices of this more curated ecosystem with the YouTube platform. Our three-phase study showed that video is a useful medium for communicating program knowledge between developers and that developers build their online persona and reputation by sharing videos through social channels. These findings led to a number of best practices for future screencast creators.
C1 [MacLeod, Laura; Bergen, Andreas; Storey, Margaret-Anne] Univ Victoria, Victoria, BC, Canada.
C3 University of Victoria
RP MacLeod, L (corresponding author), Univ Victoria, Victoria, BC, Canada.
EM lmacleod@uvic.ca; andib@uvic.ca; mstorey@uvic.ca
CR Adamic LA, 2008, P 17 INT C WORLD WID, P665, DOI DOI 10.1145/1367497.1367587
   Adolph S, 2011, EMPIR SOFTW ENG, V16, P487, DOI 10.1007/s10664-010-9152-6
   [Anonymous], 2012, FUTURE COLLABORATIVE
   Azer SA, 2012, SURG RADIOL ANAT, V34, P465, DOI 10.1007/s00276-012-0935-x
   BIGGERSTAFF TJ, 1993, PROC INT CONF SOFTW, P482, DOI 10.1109/ICSE.1993.346017
   Boyd DM, 2007, J COMPUT-MEDIAT COMM, V13, P210, DOI 10.1111/j.1083-6101.2007.00393.x
   BROOKS R, 1983, INT J MAN MACH STUD, V18, P543, DOI 10.1016/S0020-7373(83)80031-5
   Capiluppi A, 2013, IEEE SOFTWARE, V30, P45, DOI 10.1109/MS.2012.169
   Charmaz K., 2006, CONSTRUCTING GROUNDE, DOI DOI 10.7748/NR.13.4.84.S4
   Dabbish L, 2012, P ACM 2012 C COMP SU, P1277, DOI [10.1145/2145204.2145396, DOI 10.1145/2145204.2145396]
   Dagenais B., 2010, P 18 INT S FDN SOFTW, P127
   Duffy P, 2007, 6TH EUROPEAN CONFERENCE ON E-LEARNING, P173
   Duncan I, 2013, NURS EDUC TODAY, V33, P1576, DOI 10.1016/j.nedt.2012.12.013
   Gubrium J.F., 2012, The SAGE Handbook of Interview Research: The Complexity of the Craft, V2nd, DOI DOI 10.4135/9781452218403
   Guo P.J., 2014, P 1 ACM C LEARN SCAL, P41, DOI DOI 10.1145/2556325.2566239
   Krippendorff K., 2018, CONTENT ANAL INTRO I
   Lankshear C., 2010, DIY Media: A contextual background and some contemporary themes. DIY media: Creating, P1
   Lee MJW, 2008, J INF TECHNOL EDUC-R, V7, P61
   Lethbridge TC, 2003, IEEE SOFTWARE, V20, P35, DOI 10.1109/MS.2003.1241364
   Levy M, 2009, J KNOWL MANAG, V13, P120, DOI 10.1108/13673270910931215
   MacLeod L, 2015, THESIS
   MacLeod L, 2015, INT C PROGRAM COMPRE, P104, DOI 10.1109/ICPC.2015.19
   MacQueen K. M., 1998, Cam Journal, V10, P31, DOI [DOI 10.1177/1525822X980100020301, 10.1177/1525822X980100020301]
   Mamykina L, 2011, 29TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P2857
   Mohorovicic S., 2012, 2012 35th International Convention on Information and Communication Technology, Electronics and Microelectronics, P1293
   Oud J, 2009, REF SERV REV, V37, P164, DOI 10.1108/00907320910957206
   Paek HJ, 2011, INT J ADVERT, V30, P161, DOI 10.2501/IJA-30-1-161-188
   Panahi S., 2012, World Academy of Science, Engineering and Technology, World Academy of Science, Engineering and Technology WASET, P1095
   Ponzanelli L, 2016, PROC INT CONF SOFTW, P261, DOI 10.1145/2884781.2884824
   Porter LV, 2007, PUBLIC RELAT REV, V33, P92, DOI 10.1016/j.pubrev.2006.11.018
   Raisanen R., 2008, Information Modeling and Knowledge Bases, VXIX, P217
   Richardson W., 2010, Blogs, wikis, podcasts, and other powerful web tools for classrooms
   Rus I, 2002, IEEE SOFTWARE, V19, P26, DOI 10.1109/MS.2002.1003450
   Singer L, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P211, DOI 10.1145/2568225.2568305
   Snelson C., 2011, MERLOT J ONLINE LEAR, P158
   Storey MA., 2010, P FSE SDP WORKSH FUT, P359, DOI DOI 10.1145/1882362.1882435
   Storey Margaret-Anne, 2012, Crowd Documentation: Exploring the Coverage and the Dynamics of API Discussions on Stack Overflow, V11
   Storey Margaret-Anne, 2013, P 2013 C COMPUTER SU, P103
   Storey Margaret-Anne, 2014, FUT SOFTW ENG P, P100, DOI 10.1145/2593882.2593887
   Sugar W, 2010, INT REV RES OPEN DIS, V11, P1
   Swart J., 2003, HUM RESOUR MANAG J, V13, P60, DOI DOI 10.1111/J.1748-8583.2003.TB00091.X
   Treude C., 2011, Proceedings of the 19th Symposium and the 13th European Conference on Foundations of Software Engineering, ESEC/FSE '11, P91
   Treude C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P804, DOI 10.1145/1985793.1985907
   Udell J., 2004, Name that genre: Screencast
   VONMAYRHAUSER A, 1995, COMPUTER, V28, P44, DOI 10.1109/2.402076
   Wenger E, 2000, ORGANIZATION, V7, P225, DOI 10.1177/135050840072002
NR 46
TC 16
Z9 20
U1 0
U2 8
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2017
VL 22
IS 3
BP 1478
EP 1507
DI 10.1007/s10664-017-9501-9
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA EW4GE
UT WOS:000402459200018
DA 2024-07-18
ER

PT J
AU Zogaan, W
   Mujhid, I
   Santos, JCS
   Gonzalez, D
   Mirakhorli, M
AF Zogaan, Waleed
   Mujhid, Ibrahim
   Santos, Joanna C. S.
   Gonzalez, Danielle
   Mirakhorli, Mehdi
TI Automated training-set creation for software architecture traceability
   problem
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Architecture traceability; Dataset generation; Architecturally
   significant requirements; Automation
ID CLASSIFICATION; SELECTION; REDUCTION
AB Automated trace retrieval methods based on machine-learning algorithms can significantly reduce the cost and effort needed to create and maintain traceability links between requirements, architecture and source code. However, there is always an upfront cost to train such algorithms to detect relevant architectural information for each quality attribute in the code. In practice, training supervised or semi-supervised algorithms requires the expert to collect several files of architectural tactics that implement a quality requirement and train a learning method. Establishing such a training set can take weeks to months to complete. Furthermore, the effectiveness of this approach is largely dependent upon the knowledge of the expert. In this paper, we present three baseline approaches for the creation of training data. These approaches are (i) Manual Expert-Based, (ii) Automated Web-Mining, which generates training sets by automatically mining tactic's APIs from technical programming websites, and lastly (iii) Automated Big-Data Analysis, which mines ultra-large scale code repositories to generate training sets. We compare the trace-link creation accuracy achieved using each of these three baseline approaches and discuss the costs and benefits associated with them. Additionally, in a separate study, we investigate the impact of training set size on the accuracy of recovering trace links. The results indicate that automated techniques can create a reliable training set for the problem of tracing architectural tactics.
C1 [Zogaan, Waleed; Mujhid, Ibrahim; Santos, Joanna C. S.; Gonzalez, Danielle; Mirakhorli, Mehdi] Rochester Inst Technol, Software Engn Dept, Rochester, NY 14623 USA.
C3 Rochester Institute of Technology
RP Zogaan, W (corresponding author), Rochester Inst Technol, Software Engn Dept, Rochester, NY 14623 USA.
EM waz7355@rit.edu; ijm9654@rit.edu; jds5109@rit.edu; dng2551@rit.edu;
   mxmvse@rit.edu
RI da Silva Santos, Joanna Cecilia/AAF-7544-2021; Zogaan, Waleed
   Abdu/JGM-6769-2023
OI da Silva Santos, Joanna Cecilia/0000-0001-8743-2516; Zogaan, Waleed
   Abdu/0000-0002-1087-7549
FU Division of Computing and Communication Foundations; Direct For Computer
   & Info Scie & Enginr [1543176] Funding Source: National Science
   Foundation
CR Anish PR, 2015, 2015 IEEE/ACM 5TH INTERNATIONAL WORKSHOP ON THE TWIN PEAKS OF REQUIREMENTS AND ARCHITECTURE (TWINPEAKS), P3, DOI 10.1109/TwinPeaks.2015.9
   [Anonymous], SOURC PROJ
   [Anonymous], P 8 ACM IEEE INT S E
   [Anonymous], 2012, INT C SOFTW ENG ICSE
   [Anonymous], THESIS
   [Anonymous], 2014, CM SIGSOFT INT S FDN
   [Anonymous], 2012, SIGSOFT FSE
   [Anonymous], QUEUE
   [Anonymous], P 36 INT C SOFTW ENG
   [Anonymous], IEEE T SOFTWARE ENG
   [Anonymous], 2010, COVERS APACHE LUCENE
   [Anonymous], PAYM CARD IND PCI DA
   Bachmann Felix., 2003, TECHNICAL REPORT
   Bass L., 2013, SOFTWARE ARCHITECTUR
   Brodley CarlaE., 1993, ADDRESSING SELECTIVE
   Cano JR, 2003, IEEE T EVOLUT COMPUT, V7, P561, DOI 10.1109/TEVC.2003.819265
   Cleland-Huang J, 2007, REQUIR ENG, V12, P103, DOI 10.1007/s00766-007-0045-1
   de Winter JCF, 2013, USING STUDENTS T TES
   Dyer R, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P779, DOI 10.1145/2568225.2568295
   Emenecker J., 2010, P 32 ACM IEEE INT C, V1, P155, DOI DOI 10.1145/1806799.1806825
   GATES GW, 1972, IEEE T INFORM THEORY, V18, P431, DOI 10.1109/TIT.1972.1054809
   Gethers M., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P133, DOI 10.1109/ICSM.2011.6080780
   Gibiec M., 2010, Proceedings of the IEEE/ACM International Conference on Automated Software Engineering, ASE '10, P245
   Kohavi R., 1995, A study of crossvalidation and bootstrap for accuracy estimation and model selection
   Liebchen G. A., 2008, P 4 INT WORKSH PRED, P39, DOI [10.1145/1370788.1370799, DOI 10.1145/1370788.1370799]
   Mahmoud A, 2015, INT REQUIR ENG CONF, P36, DOI 10.1109/RE.2015.7320406
   Mirakhorli M., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P123, DOI 10.1109/ICSM.2011.6080779
   Mirakhorli Mehdi., 2011, Software and Systems Traceability
   Molina LC, 2002, 2002 IEEE INTERNATIONAL CONFERENCE ON DATA MINING, PROCEEDINGS, P306, DOI 10.1109/ICDM.2002.1183917
   Passini MLC, 2013, INT J ADV COMPUT SC, V4, P54
   Salton G., 1989, Automatic Text Processing: The Transformation, Analysis, and Retrieval of Information by Computer
   Skalak D., 1994, Proceedings of the Eleventh International Conference on Machine Learning, P293, DOI [https://doi.org/10.1016/B978-1-55860-335-6.50043-X, DOI 10.1016/B978-1-55860-335-6.50043-X, 10.1016/B978-1-55860-335-6.50043-X]
   Wilson DR, 2000, MACH LEARN, V38, P257, DOI 10.1023/A:1007626913721
NR 33
TC 4
Z9 5
U1 0
U2 13
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2017
VL 22
IS 3
BP 1028
EP 1062
DI 10.1007/s10664-016-9476-y
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EW4GE
UT WOS:000402459200004
DA 2024-07-18
ER

PT J
AU Sobernig, S
   Apel, S
   Kolesnikov, S
   Siegmund, N
AF Sobernig, Stefan
   Apel, Sven
   Kolesnikov, Sergiy
   Siegmund, Norbert
TI Quantifying structural attributes of system decompositions in 28
   feature-oriented software product lines
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software product lines; Feature-oriented programming; Fuji; Structural
   coupling; Structural cohesion; Software measurement
ID METRICS
AB A key idea of feature orientation is to decompose a software product line along the features it provides. Feature decomposition is orthogonal to object-oriented decomposition-it crosscuts the underlying package and class structure. It has been argued often that feature decomposition improves system structure by reducing coupling and by increasing cohesion. However, recent empirical findings suggest that this is not necessarily the case. In this exploratory, observational study, we investigate the decompositions of 28 feature-oriented software product lines into classes, features, and feature-specific class fragments. The product lines under investigation are implemented using the feature-oriented programming language Fuji. In particular, we quantify and compare the internal attributes import coupling and cohesion of the different product-line decompositions in a systematic, reproducible manner. For this purpose, we adopt three established software measures (e.g., coupling between units, CBU; internal-ratio unit dependency, IUD) as well as standard concentration statistics (e.g., Gini coefficient). In our study, we found that feature decomposition can be associated with higher levels of structural coupling in a product line than a decomposition into classes. Although coupling can be concentrated in very few features in most feature decompositions, there are not necessarily hot-spot features in all product lines. Interestingly, feature cohesion is not necessarily higher than class cohesion, whereas features are more equal in serving dependencies internally than classes of a product line. Our empirical study raises critical questions about alleged advantages of feature decomposition. At the same time, we demonstrate how our measurement approach of coupling and cohesion has potential to support static and dynamic analyses of software product lines (i.e., type checking and feature-interaction detection) by facilitating product sampling.
C1 [Sobernig, Stefan] WU Vienna, Vienna, Austria.
   [Apel, Sven; Kolesnikov, Sergiy; Siegmund, Norbert] Univ Passau, Passau, Germany.
C3 University of Passau
RP Sobernig, S (corresponding author), WU Vienna, Vienna, Austria.
EM stefan.sobernig@wu.ac.at
RI Siegmund, Norbert/U-1325-2019
OI Siegmund, Norbert/0000-0001-7741-7777; Apel, Sven/0000-0003-3687-2233
FU German Research Foundation [AP 206/2, AP 206/4, AP 206/5, AP 206/6]
FX This work has been supported by the German Research Foundation (AP
   206/2, AP 206/4, AP 206/5, and AP 206/6).
CR Ajila SA, 2007, J SYST SOFTWARE, V80, P74, DOI 10.1016/j.jss.2006.05.034
   [Anonymous], 1993, DETECT HANDLE OUTLIE
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   Apel S., 2013, IEEE Transactions on Software Engineering, V39, P63, DOI 10.1109/TSE.2011.120
   Apel S., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P372, DOI 10.1109/ASE.2011.6100075
   Apel S., 2013, Feature-Oriented Software Development: Concepts and Implementation
   Apel S, 2008, IEEE T SOFTWARE ENG, V34, P162, DOI 10.1109/TSE.2007.70770
   Apel S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P482, DOI 10.1109/ICSE.2013.6606594
   Apel S, 2012, SCI COMPUT PROGRAM, V77, P174, DOI 10.1016/j.scico.2010.07.005
   Apel S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P421, DOI 10.1145/1985793.1985851
   Apel S, 2009, J OBJECT TECHNOL, V8, P49, DOI 10.5381/jot.2009.8.5.c5
   Apel S, 2010, AUTOMAT SOFTW ENG, V17, P251, DOI 10.1007/s10515-010-0066-8
   Apel Sven., 2013, P 5 INT WORKSHOP FEA, P1, DOI [10.1145/2528265.2528267, DOI 10.1145/2528265.2528267]
   Batory D, 2004, IEEE T SOFTWARE ENG, V30, P355, DOI 10.1109/TSE.2004.23
   Berger T., 2014, P VAMOS, DOI [10.1145/2556624.2556641, DOI 10.1145/2556624.2556641]
   Bouwers E, 2011, 2011 9TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P83, DOI 10.1109/WICSA.2011.20
   Briand L. C., 1998, Empirical Software Engineering, V3, P65, DOI 10.1023/A:1009783721306
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P91, DOI 10.1109/32.748920
   Burrows R., 2010, Proceedings of the 2010 ICSE Workshop on Emerging Trends in Software Metrics, P53
   Clauset A, 2009, SIAM REV, V51, P661, DOI 10.1137/070710111
   Clements P, 2002, IEEE SOFTWARE, V19, P28, DOI 10.1109/MS.2002.1020283
   D'Ambros Marco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P31, DOI 10.1109/MSR.2010.5463279
   Eaddy M., 2007, 1 INT WORKSHOP ASSES, P2, DOI [10.1109/ACOM.2007.4, DOI 10.1109/ACOM.2007.4]
   Eaddy M, 2008, INT C PROGRAM COMPRE, P53, DOI 10.1109/ICPC.2008.39
   El Emam K, 2001, J SYST SOFTWARE, V56, P63, DOI 10.1016/S0164-1212(00)00086-8
   Ferreira KAM, 2012, J SYST SOFTWARE, V85, P244, DOI 10.1016/j.jss.2011.05.044
   Figueiredo E, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P261, DOI 10.1145/1368088.1368124
   Garvin BJ, 2011, 22ND IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P90, DOI 10.1109/ISSRE.2011.25
   Nguyen HV, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P907, DOI 10.1145/2568225.2568300
   Kästner C, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2211616.2211617
   Kakwani N., 1980, INCOME INEQUALITY PO
   Kastner Christian, 2011, P 15 INT SOFTWARE PR, DOI 10.1145/2019136.2019142
   Kiczales G, 2005, PROC INT CONF SOFTW, P49
   Kolesnikov S.S., 2013, P VAMOS, DOI [10.1145/2430502.2430511, DOI 10.1145/2430502.2430511]
   Kolesnikov S, 2014, ACM SIGPLAN NOTICES, V49, P115, DOI [10.1145/2637365.2517213, 10.1145/2517208.2517213]
   Liebig Jorg, 2010, P 32 ACM IEEE INT C, V1, P105
   Lilienthal C, 2009, EUR CON SFTWR MTNCE, P17, DOI 10.1109/CSMR.2009.16
   Lopez-Herrejon R. E., 2001, Generative and Component-Based Software Engineering. Third International Conference, GCSE 2001. Proceedings (Lecture Notes in Computer Science Vol.2186), P10
   Lopez-Herrejon RE, 2007, LECT NOTES COMPUT SC, V4422, P423
   Louridas P, 2008, ACM T SOFTW ENG METH, V18, DOI 10.1145/1391984.1391986
   Marchesi M, 2004, P ESUG JOINT EV ESUG
   Montagud S, 2012, SOFTWARE QUAL J, V20, P425, DOI 10.1007/s11219-011-9146-7
   Oster S, 2010, LECT NOTES COMPUT SC, V6287, P196, DOI 10.1007/978-3-642-15579-6_14
   Potanin A, 2005, COMMUN ACM, V48, P99, DOI 10.1145/1060710.1060716
   Revelle M, 2011, EMPIR SOFTW ENG, V16, P773, DOI 10.1007/s10664-011-9159-7
   Robillard MP, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1189748.1189751
   Sant' Anna C, 2003, P BSSE
   Sarkar S, 2008, IEEE T SOFTWARE ENG, V34, P700, DOI 10.1109/TSE.2008.43
   Shatnawi R, 2010, J SOFTW MAINT EVOL-R, V22, P1, DOI 10.1002/smr.404
   Siegmund N., 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P160, DOI 10.1109/SPLC.2011.20
   Siegmund N, 2014, ACM SIGPLAN NOTICES, V49, P95, DOI [10.1145/2517208.2517209, 10.1145/2637365.2517209]
   Siegmund N, 2012, PROC INT CONF SOFTW, P167, DOI 10.1109/ICSE.2012.6227196
   Smaragdakis Y, 2002, ACM T SOFTW ENG METH, V11, P215, DOI 10.1145/505145.505148
   Sobernig S, 2014, TECHNICAL REPORTS
   Sobernig S, 2010, P SAC, P2360, DOI [10.1145/1774088.1774574, DOI 10.1145/1774088.1774574]
   Stevens WP, 1999, IBM SYST J, V38, P231, DOI 10.1147/sj.382.0231
   Taube-Schock C, 2011, LECT NOTES COMPUT SC, V6813, P204, DOI 10.1007/978-3-642-22655-7_10
   Thüm T, 2014, ACM COMPUT SURV, V47, DOI 10.1145/2580950
   Vasilescu B., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P313, DOI 10.1109/ICSM.2011.6080798
   Wheeldon R, 2003, THIRD IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION - PROCEEDINGS, P45, DOI 10.1109/SCAM.2003.1238030
   Wong WE, 2000, J SYST SOFTWARE, V54, P87, DOI 10.1016/S0164-1212(00)00029-7
   Yilmaz C, 2006, IEEE T SOFTWARE ENG, V32, P20, DOI 10.1109/TSE.2006.8
NR 62
TC 6
Z9 7
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2016
VL 21
IS 4
BP 1670
EP 1705
DI 10.1007/s10664-014-9336-6
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DQ2VF
UT WOS:000379060700008
DA 2024-07-18
ER

PT J
AU Abebe, SL
   Ali, N
   Hassan, AE
AF Abebe, Surafel Lemma
   Ali, Nasir
   Hassan, Ahmed E.
TI An empirical study of software release notes
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software release notes; Machine learning techniques; Empirical study
ID BUGS
AB Release notes are an important source of information about a new software release. Such notes contain information regarding what is new, changed, and/or got fixed in a release. Despite the importance of release notes, they are rarely explored in the research literature. Little is known about the contained information, e.g., contents and structure, in release notes. To better understand the types of contained information in release notes, we manually analyzed 85 release notes across 15 different software systems. In our manual analysis, we identify six different types of information (e.g., caveats and addressed issues) that are contained in release notes. Addressed issues refer to new features, bugs, and improvements that were integrated in that particular release. We observe that most release notes list only a selected number of addressed issues (i.e., 6-26% of all addressed issues in a release). We investigated nine different factors (e.g., issue priority and type) to better understand the likelihood of an issue being listed in release notes. The investigation is conducted on eight release notes of three software systems using four machine learning techniques. Results show that certain factors, e.g., issue type, have higher influence on the likelihood of an issue to be listed in release notes. We use machine learning techniques to automatically suggest the issues to be listed in release notes. Our results show that issues listed in all release notes can be automatically determined with an average precision of 84 % and an average recall of 90 %. To train and build the classification models, we also explored three scenarios: (a) having the user label some issues for a release and automatically suggest the remaining issues for that particular release, (b) using the previous release notes for the same software system, and (c) using prior releases for the current software system and the rest of the studied software systems. Our results show that the content of release notes vary between software systems and across the versions of the same software system. Nevertheless, automated techniques can provide reasonable support to the writers of such notes with little training data. Our study provides developers with empirically-supported advice about release notes instead of simply relying on adhoc advice from on-line inquiries.
C1 [Abebe, Surafel Lemma; Ali, Nasir; Hassan, Ahmed E.] Queens Univ, Sch Comp, SAIL, Kingston, ON, Canada.
C3 Queens University - Canada
RP Abebe, SL (corresponding author), Queens Univ, Sch Comp, SAIL, Kingston, ON, Canada.
EM surafel@cs.queensu.ca; nasir@cs.queensu.ca; ahmed@cs.queensu.ca
RI Ali, Ahmed/HOF-4672-2023; KHALIFA, AHMED khalifa/HKF-2246-2023; Hassan,
   Ahmed/AAB-7241-2019
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; Abebe, Surafel
   Lemma/0000-0002-2137-8673
CR Abebe S. L., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P235, DOI 10.1109/WCRE.2012.33
   [Abran A. IEEE Computer Society IEEE Computer Society], 2004, GUIDE SOFTWARE ENG B
   Ahsan Syed Nadeem, 2009, Proceedings 21st International Conference on Software Engineering & Knowledge Engineering (SEKE 2009), P129
   Alali A, 2008, INT C PROGRAM COMPRE, P182, DOI 10.1109/ICPC.2008.24
   [Anonymous], CLEI ELECT J
   [Anonymous], P 7 INT C PRED MOD S
   [Anonymous], THESIS
   [Anonymous], CONVERGENCE Q A ANSW
   [Anonymous], BEN SOFTW REL NOT WH
   [Anonymous], P 17 INT C PRED MOD
   [Anonymous], J SOFTWARE MAINTENAN
   Barandela R, 2003, PATTERN RECOGN, V36, P849, DOI 10.1016/S0031-3203(02)00257-1
   Bernstein A., 2010, P 18 ACM SIGSOFT INT, P97
   Bird Christian, 2008, Proceedings of the 2008 ACM SIGSOFT Symposium on the Foundations of Software Engineering, P24
   Breiman L., 2001, Mach. Learn., V45, P5
   Cheung S.-C., 2011, P 19 ACM SIGSOFT S 1, P15
   Creswell J. W., 2013, RES DESIGN QUALITATI
   D'Ambros Marco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P31, DOI 10.1109/MSR.2010.5463279
   Eyolfson J., 2011, WORKING C MINING SOF, P153, DOI DOI 10.1145/1985441.1985464
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   He ZM, 2012, AUTOMAT SOFTW ENG, V19, P167, DOI 10.1007/s10515-011-0090-3
   Hothorn T, 2004, STAT MED, V23, P77, DOI 10.1002/sim.1593
   Hothorn T, 2006, J COMPUT GRAPH STAT, V15, P651, DOI 10.1198/106186006X133933
   Kamei Y., 2010, Proceedings of the 26th International Conference on Software Maintenance, P1, DOI 10.1109/ICSM.2010.5609530
   Keerthi SS, 2001, NEURAL COMPUT, V13, P637, DOI 10.1162/089976601300014493
   Khomh F., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P179, DOI 10.1109/MSR.2012.6224279
   Liu KP, 2013, WORK CONF REVERSE EN, P82, DOI 10.1109/WCRE.2013.6671283
   Maalej Walid, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P191, DOI 10.1109/MSR.2010.5463344
   MARTIN PY, 1986, J APPL BEHAV SCI, V22, P141, DOI 10.1177/002188638602200207
   Mende T, 2010, EUR CON SFTWR MTNCE, P107, DOI 10.1109/CSMR.2010.18
   Mockus A, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P503, DOI 10.1109/ICSE.2002.1007994
   Quinlan J.R., 1993, C4.5 : programs for machine learning
   Rahman F, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P491, DOI 10.1145/1985793.1985860
   Shihab E., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P249, DOI 10.1109/WCRE.2010.36
   Shihab E, 2013, EMPIR SOFTW ENG, V18, P1005, DOI 10.1007/s10664-012-9228-6
   Sing T, 2005, BIOINFORMATICS, V21, P3940, DOI 10.1093/bioinformatics/bti623
   Sumner M, 2005, LECT NOTES ARTIF INT, V3721, P675
   Tian Y, 2013, PROC IEEE INT CONF S, P200, DOI 10.1109/ICSM.2013.31
   Zhang F., 2014, P 11 WORK C MIN SOFT, P182, DOI [10.1145/2597073.2597078, DOI 10.1145/2597073.2597078]
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
NR 40
TC 24
Z9 29
U1 2
U2 11
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2016
VL 21
IS 3
BP 1107
EP 1142
DI 10.1007/s10664-015-9377-5
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DQ2VO
UT WOS:000379061700012
DA 2024-07-18
ER

PT J
AU Herzig, K
   Just, S
   Zeller, A
AF Herzig, Kim
   Just, Sascha
   Zeller, Andreas
TI The impact of tangled code changes on defect prediction models
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Defect prediction; Untangling; Data noise
ID SOFTWARE CHANGES
AB When interacting with source control management system, developers often commit unrelated or loosely related code changes in a single transaction. When analyzing version histories, such tangled changes will make all changes to all modules appear related, possibly compromising the resulting analyses through noise and bias. In an investigation of five open-source Java projects, we found between 7 % and 20 % of all bug fixes to consist of multiple tangled changes. Using a multi-predictor approach to untangle changes, we show that on average at least 16.6 % of all source files are incorrectly associated with bug reports. These incorrect bug file associations seem to not significantly impact models classifying source files to have at least one bug or no bugs. But our experiments show that untangling tangled code changes can result in more accurate regression bug prediction models when compared to models trained and tested on tangled bug datasets-in our experiments, the statistically significant accuracy improvements lies between 5 % and 200 %. We recommend better change organization to limit the impact of tangled changes.
C1 [Herzig, Kim] Microsoft Res, Empir Software Engn Grp, 21 Stn Rd, Cambridge CB1 2DZ, England.
   [Just, Sascha] Univ Saarland, Software Engn Chair, Campus E1-1, D-66123 Saarbrucken, Germany.
   [Zeller, Andreas] Univ Saarland, Software Engn, Campus E1-1, D-66123 Saarbrucken, Germany.
C3 Microsoft; Saarland University; Saarland University
RP Herzig, K (corresponding author), Microsoft Res, Empir Software Engn Grp, 21 Stn Rd, Cambridge CB1 2DZ, England.
EM kimh@microsoft.com; just@st.cs.uni-saarland.de;
   zeller@cs.uni-saarland.de
OI Zeller, Andreas/0000-0003-4719-8803
CR Alam O, 2009, PROC IEEE INT CONF S, P329, DOI 10.1109/ICSM.2009.5306313
   [Anonymous], 2010, R LANG ENV STAT COMP
   [Anonymous], P 5 INT C PRED MOD S
   [Anonymous], AUTOMAT SOFTW ENG
   [Anonymous], P 1995 ACM IEEE C SU
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Bernstein A., 2010, P 18 ACM SIGSOFT INT, P97
   Bhattacharya P, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1122, DOI 10.1145/1985793.1986012
   Bird Christian, 2009, 2009 20th International Symposium on Software Reliability Engineering (ISSRE 2009), P109, DOI 10.1109/ISSRE.2009.17
   Bird C, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P121, DOI 10.1145/1595696.1595716
   BONACICH P, 1987, AM J SOCIOLOGY
   Csardi G., 2006, InterJournal, (Complex Systems), V1695, P1
   Dagenais B, 2008, OOPSLA 2008 NASHVILLE, CONFERENCE PROCEEDINGS, P313
   DALLMEIER V, 2010, THESIS U SAARLANDES
   Herzig K., 2013, P 2013 IEEE 24 INT S
   Herzig K, 2013, IEEE WORK CONF MIN S, P121, DOI 10.1109/MSR.2013.6624018
   Herzig K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P392, DOI 10.1109/ICSE.2013.6606585
   Hindle A, 2009, INT C PROGRAM COMPRE, P30, DOI 10.1109/ICPC.2009.5090025
   Hindle Abram, 2008, P 2008 INT WORKING C, P99
   Jaccard P., 1901, B SOCIT VAUDOISE SCI, V37, P547, DOI [10.5169/seals-266440, DOI 10.5169/SEALS-266440]
   Karypis G, 1998, SIAM J SCI COMPUT, V20, P359, DOI 10.1137/S1064827595287997
   Karypis George, 1995, MeTis: Unstructured Graph Partitioning and Sparse Matrix Ordering System
   KAWRYKOW D, 2011, THESIS MCGILL U
   Kawrykow D, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P351, DOI 10.1145/1985793.1985842
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kim S, 2007, PROC INT CONF SOFTW, P489
   Kim S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P481, DOI 10.1145/1985793.1985859
   Kuhn M., 2011, CARET CLASSIFICATION
   Li PL, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P716, DOI 10.1145/1985793.1985894
   Mockus A, 2000, PROC IEEE INT CONF S, P120, DOI 10.1109/ICSM.2000.883028
   Murphy-Bill E, 2008, IEEE SOFTWARE, V25, P38, DOI 10.1109/MS.2008.123
   Murphy-Hill E, 2009, PROC INT CONF SOFTW, P287, DOI 10.1109/ICSE.2009.5070529
   Nagappan N, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P521, DOI 10.1145/1368088.1368160
   Nguyen T. H. D., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P259, DOI 10.1109/WCRE.2010.37
   Premraj R, 2011, INT SYMP EMP SOFTWAR, P215, DOI 10.1109/ESEM.2011.30
   Robbes R, 2007, LECT NOTES COMPUT SC, V4422, P27
   Stoerzer Maximilian., 2006, P 14 ACM SIGSOFT INT, P57
   Williams BJ, 2010, INFORM SOFTWARE TECH, V52, P31, DOI 10.1016/j.infsof.2009.07.002
   Witten I., 2002, ACM Sigmod Rec., V31, P76, DOI [10.1145/507338.507355, DOI 10.1145/507338.507355]
   Wloka J, 2009, PROC INT CONF SOFTW, P507, DOI 10.1109/ICSE.2009.5070549
   Zimmermann T, 2004, PROC INT CONF SOFTW, P563, DOI 10.1109/ICSE.2004.1317478
   Zimmermann T, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P531, DOI 10.1145/1368088.1368161
   [No title captured]
   [No title captured]
NR 44
TC 52
Z9 54
U1 2
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2016
VL 21
IS 2
BP 303
EP 336
DI 10.1007/s10664-015-9376-6
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DI2ST
UT WOS:000373349700002
DA 2024-07-18
ER

PT J
AU Arnaoudova, V
   Di Penta, M
   Antoniol, G
AF Arnaoudova, Venera
   Di Penta, Massimiliano
   Antoniol, Giuliano
TI Linguistic antipatterns: what they are and how developers perceive them
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Source code identifiers; Linguistic antipatterns; Empirical study;
   Developers' perception
ID IDENTIFIER NAMES; CODE; COMPREHENSION; LEXICON; IMPACT; SMELLS
AB Antipatterns are known as poor solutions to recurring problems. For example, Brown et al. and Fowler define practices concerning poor design or implementation solutions. However, we know that the source code lexicon is part of the factors that affect the psychological complexity of a program, i.e., factors that make a program difficult to understand and maintain by humans. The aim of this work is to identify recurring poor practices related to inconsistencies among the naming, documentation, and implementation of an entity-called Linguistic Antipatterns (LAs)-that may impair program understanding. To this end, we first mine examples of such inconsistencies in real open-source projects and abstract them into a catalog of 17 recurring LAs related to methods and attributes. Then, to understand the relevancy of LAs, we perform two empirical studies with developers-30 external (i.e., not familiar with the code) and 14 internal (i.e., people developing or maintaining the code). Results indicate that the majority of the participants perceive LAs as poor practices and therefore must be avoided-69% and 51% of the external and internal developers, respectively. As further evidence of LAs' validity, open source developers that were made aware of LAs reacted to the issue by making code changes in 10% of the cases. Finally, in order to facilitate the use of LAs in practice, we identified a subset of LAs which were universally agreed upon as being problematic; those which had a clear dissonance between code behavior and lexicon.
C1 [Arnaoudova, Venera] Polytech Montreal, DGIGL, Soccer Lab, 2900,Blvd Edouard Montpetit 2700, Quebec City, PQ H3T 1J4, Canada.
   [Di Penta, Massimiliano] Univ Sannio, Dept Engn, Benevento, Italy.
   [Antoniol, Giuliano] Polytech Montreal, DGIGL, Soccer Lab, Montreal, PQ, Canada.
C3 Universite de Montreal; Polytechnique Montreal; University of Sannio;
   Universite de Montreal; Polytechnique Montreal
RP Arnaoudova, V (corresponding author), Polytech Montreal, DGIGL, Soccer Lab, 2900,Blvd Edouard Montpetit 2700, Quebec City, PQ H3T 1J4, Canada.
EM venera.arnaoudova@polymtl.ca; dipenta@unisannio.it; antoniol@ieee.org
RI Di Penta, Massimiliano/AAF-9656-2021; Arnaoudova, Venera/X-6403-2019
OI Di Penta, Massimiliano/0000-0002-0340-9747
CR Abbes M, 2011, EUR CON SFTWR MTNCE, P181, DOI 10.1109/CSMR.2011.24
   Abebe S. L., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P235, DOI 10.1109/WCRE.2012.33
   Abebe S. L., 2011, 2011 18th Working Conference on Reverse Engineering, P77, DOI 10.1109/WCRE.2011.19
   Abebe SL, 2013, EUR CON SFTWR MTNCE, P263, DOI 10.1109/CSMR.2013.35
   Abebe SL, 2011, IEEE INT WORK C SO, P125, DOI 10.1109/SCAM.2011.18
   [Anonymous], 2007, GUIDE ADV EMPIRICAL
   Anquetil N., 1998, PROC ANN IBM CTR ADV, P213
   Arnaoudova V, 2014, IEEE T SOFTWARE ENG, V40, P502, DOI 10.1109/TSE.2014.2312942
   Arnaoudova V, 2013, EUR CON SFTWR MTNCE, P187, DOI 10.1109/CSMR.2013.28
   BROOKS R, 1983, INT J MAN MACH STUD, V18, P543, DOI 10.1016/S0020-7373(83)80031-5
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Caprile B, 2000, PROC IEEE INT CONF S, P97, DOI 10.1109/ICSM.2000.883022
   Caprile C., 1999, Sixth Working Conference on Reverse Engineering (Cat. No.PR00303), P112, DOI 10.1109/WCRE.1999.806952
   Chaudhary B. D., 1980, Proceedings of the ACM Annual Conference, P457, DOI [10.1145/800176.810001, DOI 10.1145/800176.810001]
   De Lucia A, 2011, IEEE T SOFTWARE ENG, V37, P205, DOI 10.1109/TSE.2010.89
   Deissenböck F, 2005, PROG COMPREHEN, P97, DOI 10.1109/WPC.2005.14
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Glaser Barney G., 1992, Basic of grounded theory analysis: emergence vs. forcing
   Grissom R. J., 2005, EFFECT SIZES RES BRO
   Groves R.M., 2009, Survey Methodology, V2nd
   Hintze JL, 1998, AM STAT, V52, P181, DOI 10.2307/2685478
   Jedlitschka A., 2005, INT S EMP SOFTW ENG
   Khomh F, 2012, EMPIR SOFTW ENG, V17, P243, DOI 10.1007/s10664-011-9171-y
   Khomh F, 2009, WORK CONF REVERSE EN, P75, DOI 10.1109/WCRE.2009.28
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Lawrie D, 2006, INT C PROGRAM COMPRE, P3, DOI 10.1109/ICPC.2006.51
   Lawrie D, 2007, INNOV SYST SOFTW ENG, V3, P303, DOI 10.1007/s11334-007-0031-2
   Lin Tan, 2007, Operating Systems Review, V41, P145, DOI 10.1145/1323293.1294276
   Merlo E, 2003, J SOFTW MAINT EVOL-R, V15, P205, DOI 10.1002/smr.274
   MILLER GA, 1995, COMMUN ACM, V38, P39, DOI 10.1145/219717.219748
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Nagappan M, 2013, 2013 9 JOINT M EUR S, P466, DOI [DOI 10.1145/2491411.2491415, 10.1145/2491411.2491415]
   Oppenheim A.N., 1992, QUESTIONNAIRE DESIGN
   Palomba F, 2014, INT C SOFTW MAINT EV
   Palomba F, 2013, IEEE INT CONF AUTOM, P268, DOI 10.1109/ASE.2013.6693086
   Parsons J, 2004, IEEE T SOFTWARE ENG, V30, P873, DOI 10.1109/TSE.2004.94
   Prechelt L, 2002, IEEE T SOFTWARE ENG, V28, P595, DOI 10.1109/TSE.2002.1010061
   Ratiu D, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P223
   SHEIL BA, 1981, COMPUT SURV, V13, P101, DOI 10.1145/356835.356840
   Shin Hwei Tan, 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P260, DOI 10.1109/ICST.2012.106
   SHNEIDERMAN B, 1977, INT J MAN MACH STUD, V9, P465, DOI 10.1016/S0020-7373(77)80014-X
   Shneiderman B, 1975, COGNITIVE MODEL PROG, V37
   Strauss A.L., 2003, QUALITATIVE ANAL SOC
   Takang AA, 1996, J PROGRAM LANG, V4, P143
   Tan L, 2011, P INT C SOFTW ENG IC
   Torchiano M, 2002, PROC IEEE INT CONF S, P230, DOI 10.1109/ICSM.2002.1167770
   Toutanova K, 2000, PROCEEDINGS OF THE 2000 JOINT SIGDAT CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING AND VERY LARGE CORPORA, P63, DOI 10.3115/1117794.1117802
   Weissman L., 1974, SIGPLAN Notices, V9, P25, DOI 10.1145/953233.953237
   Weissman LM, 1974, THESIS
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Woodfield S. N., 1981, 5th International Conference on Software Engineering, P215
   Yamashita A, 2013, WORK CONF REVERSE EN, P242, DOI 10.1109/WCRE.2013.6671299
   Zhong H, 2011, AUTOMAT SOFTW ENG, V18, P227, DOI 10.1007/s10515-011-0082-3
NR 54
TC 71
Z9 80
U1 1
U2 7
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2016
VL 21
IS 1
BP 104
EP 158
DI 10.1007/s10664-014-9350-8
PG 55
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DI2SQ
UT WOS:000373349300005
DA 2024-07-18
ER

PT J
AU Fraser, G
   Arcuri, A
AF Fraser, Gordon
   Arcuri, Andrea
TI Achieving scalable mutation-based generation of whole test suites
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Mutation testing; Test case generation; Search-based testing; Testing
   classes; Unit testing
ID TOOL
AB Without complete formal specification, automatically generated software tests need to be manually checked in order to detect faults. This makes it desirable to produce the strongest possible test set while keeping the number of tests as small as possible. As commonly applied coverage criteria like branch coverage are potentially weak, mutation testing has been proposed as a stronger criterion. However, mutation based test generation is hampered because usually there are simply too many mutants, and too many of these are either trivially killed or equivalent. On such mutants, any effort spent on test generation would per definition be wasted. To overcome this problem, our search-based EvoSuite test generation tool integrates two novel optimizations: First, we avoid redundant test executions on mutants by monitoring state infection conditions, and second we use whole test suite generation to optimize test suites towards killing the highest number of mutants, rather than selecting individual mutants. These optimizations allowed us to apply EvoSuite to a random sample of 100 open source projects, consisting of a total of 8,963 classes and more than two million lines of code, leading to a total of 1,380,302 mutants. The experiment demonstrates that our approach scales well, making mutation testing a viable test criterion for automated test case generation tools, and allowing us to analyze the relationship of branch coverage and mutation testing in detail.
C1 [Fraser, Gordon] Univ Sheffield, Dept Comp Sci, Sheffield S1 4DP, S Yorkshire, England.
   [Arcuri, Andrea] Simula Res Lab, Certus Software V&V Ctr, Lysaker, Norway.
C3 University of Sheffield
RP Fraser, G (corresponding author), Univ Sheffield, Dept Comp Sci, 211 Portobello, Sheffield S1 4DP, S Yorkshire, England.
EM gordon.fraser@sheffield.ac.uk; arcuri@simula.no
FU Google Focused Research Award on "Test Amplification"; Norwegian
   Research Council
FX This project has been funded by a Google Focused Research Award on "Test
   Amplification" and the Norwegian Research Council.
CR Acree A. T., 1980, On Mutation
   Adamopoulos K, 2004, LECT NOTES COMPUT SC, V3103, P1338
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   [Anonymous], 2011, P 8 EUR SOFTW ENG C, DOI DOI 10.1145/2025113.2025144
   [Anonymous], 1980, THESIS YALE U NEW HA
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Arcuri A, 2013, EMPIR SOFTW ENG, V18, P594, DOI 10.1007/s10664-013-9249-9
   Arcuri A, 2013, SOFTW TEST VERIF REL, V23, P119, DOI 10.1002/stvr.457
   Ayari K, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1074
   Baker R, 2012, IEEE T SOFTWARE ENG
   Baldwin D, 1979, 276 YAL U
   Baudry B, 2005, IEEE SOFTWARE, V22, P76, DOI 10.1109/MS.2005.30
   Bauersfeld S, 2013, IEEE ICST WORKSHOP, P414, DOI 10.1109/ICSTW.2013.55
   Bottaci L., 2001, P INT WORKSH SOFTW E, P3
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   DEMILLO RA, 1991, IEEE T SOFTWARE ENG, V17, P900, DOI 10.1109/32.92910
   Deng L, 2013, IEEE INT C SOFTW TES
   Fleyshgakker V. N., 1994, SIGSOFT Software Engineering Notes, P185
   Frankl PG, 1997, J SYST SOFTWARE, V38, P235, DOI 10.1016/S0164-1212(96)00154-9
   Fraser G., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P121, DOI 10.1109/ICST.2012.92
   Fraser G., 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P150, DOI 10.1109/ICST.2011.54
   FRASER G., 2013, Software Testing Verification and Validation Workshop, IEEE International Conference on, P406
   Fraser G, 2013, GENETIC EVOLUTIONARY
   Fraser G, 2013, IEEE INT C SOFTW TES
   Fraser G, 2013, WHOLE TESR SUITE GEN, V39
   Fraser G, 2012, IEEE T SOFTWARE ENG, V38, P278, DOI 10.1109/TSE.2011.93
   Fraser G, 2012, PROC INT CONF SOFTW, P178, DOI 10.1109/ICSE.2012.6227195
   Fraser Gordon, 2011, PROC 19 ACM SIGSOFT, P416, DOI 10.1145/2025113.2025179
   Godefroid P, 2005, P 2005 ACM SIGPLAN C
   HAMLET RG, 1977, IEEE T SOFTWARE ENG, V3, P279, DOI 10.1109/TSE.1977.231145
   Hierons R.M., 1999, J SOFTW TEST VERIFIC, V9, P233, DOI 10.1002/(SICI)1099-1689(199912)9:43.0.CO;2-3
   HOWDEN WE, 1982, IEEE T SOFTWARE ENG, V8, P371, DOI 10.1109/TSE.1982.235571
   Jia Y, 2009, INFORM SOFTWARE TECH, V51, P1379, DOI 10.1016/j.infsof.2009.04.016
   Just R., 2012, Proceedings of the 2012 IEEE 23rd International Symposium on Software Reliability Engineering (ISSRE), P11, DOI 10.1109/ISSRE.2012.31
   Just R, 2013, ARXIV13032784
   KOREL B, 1990, IEEE T SOFTWARE ENG, V16, P870, DOI 10.1109/32.57624
   Mateo PR, 2012, IEEE T SOFTWARE ENG
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   Offut A. J., 1997, Software Testing, Verification and Reliability, V7, P165, DOI 10.1002/(SICI)1099-1689(199709)7:3<165::AID-STVR143>3.0.CO;2-U
   Offutt A., 1991, Proceedings of the symposium on Testing, analysis, and verification, P200
   Offutt A. J., 1992, ACM Transactions on Software Engineering and Methodology, V1, P5, DOI 10.1145/125489.125473
   Offutt A. J., 1994, Software Testing, Verification and Reliability, V4, P131, DOI 10.1002/stvr.4370040303
   Offutt AJ, 2001, KLUW INT S ADV DATA, V24, P34
   OFFUTT AJ, 1994, IEEE T SOFTWARE ENG, V20, P337, DOI 10.1109/32.286422
   OFFUTT AJ, 1993, PROC INT CONF SOFTW, P100, DOI 10.1109/ICSE.1993.346062
   Pacheco C, 2007, 22 ACM SIGPLAN C OB
   Papadakis Mike, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P121, DOI 10.1109/ISSRE.2010.38
   Patrick M, 2013, INT WORKSH MUT AN
   Schuler David, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P45, DOI 10.1109/ICST.2010.30
   Staats M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P391, DOI 10.1145/1985793.1985847
   Untch R., 1992, P 30 ANN SE REGIONAL, P285
   Walsh PJ, 1985, THESIS STATE U NEW Y
   Wong W. E., 1995, SOFTWARE QUALITY PRO, P258
   Xu Jeff Offutt andWuzhi, 2004, SIGSOFT Softw. Eng. Notes, V29, P1, DOI [10.1145/1022494.1022529, DOI 10.1145/1022494.1022529]
   Yue Jia, 2011, IEEE Transactions on Software Engineering, V37, P649, DOI 10.1109/TSE.2010.62
   Zhang Liu-ze, 2010, Instrument Techniques and Sensor, P1
NR 56
TC 74
Z9 82
U1 1
U2 8
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2015
VL 20
IS 3
BP 783
EP 812
DI 10.1007/s10664-013-9299-z
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CI1DF
UT WOS:000354480800006
DA 2024-07-18
ER

PT J
AU Hermans, F
   Pinzger, M
   van Deursen, A
AF Hermans, Felienne
   Pinzger, Martin
   van Deursen, Arie
TI Detecting and refactoring code smells in spreadsheet formulas
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Spreadsheets; Code smells; Refactoring
AB Spreadsheets are used extensively in business processes around the world and just like software, spreadsheets are changed throughout their lifetime causing understandability and maintainability issues. This paper adapts known code smells to spreadsheet formulas. To that end we present a list of metrics by which we can detect smelly formulas; a visualization technique to highlight these formulas in spreadsheets and a method to automatically suggest refactorings to resolve smells. We implemented the metrics, visualization and refactoring suggestions techniques in a prototype tool and evaluated our approach in three studies. Firstly, we analyze the EUSES spreadsheet corpus, to study the occurrence of the formula smells. Secondly, we analyze ten real life spreadsheets, and interview the spreadsheet owners about the identified smells. Finally, we generate refactoring suggestions for those ten spreadsheets and study the implications. The results of these evaluations indicate that formula smells are common, that they can reveal real errors and weaknesses in spreadsheet formulas and that in simple cases they can be refactored.
C1 [Hermans, Felienne; Pinzger, Martin; van Deursen, Arie] Delft Univ Technol, NL-2628 CD Delft, Netherlands.
C3 Delft University of Technology
RP Hermans, F (corresponding author), Delft Univ Technol, Mekelweg 4, NL-2628 CD Delft, Netherlands.
EM F.F.J.Hermans@tudelft.nl; m.pinzger@tudelft.nl;
   arie.vandeursen@tudelft.nl
RI Hermans, Felienne/AAS-2175-2021; van Deursen, Arie/G-3084-2011
OI van Deursen, Arie/0000-0003-4850-3312
CR Abraham R., 2006, 28th International Conference on Software Engineering Proceedings, P182, DOI 10.1145/1134285.1134312
   Abraham R, 2007, J VISUAL LANG COMPUT, V18, P71, DOI 10.1016/j.jvlc.2006.06.001
   Abrahamsen R., 2005, Proceedings of the Conference on International Politics, and the Economic and Social Research Council, P1
   [Anonymous], 2010, IEEE INT C SOFTW MAI
   [Anonymous], 2006, DECISION LINE
   Ayalew Y., 2000, SPREADSHEET RISKS AU, P51
   Badame S, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P399, DOI 10.1109/ICSM.2012.6405299
   Bregar A, 2004, P EUSPRIG 04, P9
   Chambers C, 2009, J VISUAL LANG COMPUT, V20, P269, DOI 10.1016/j.jvlc.2009.04.002
   Cunha J., 2012, LNCS
   Cunha J, 2012, 2012 EIGHTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY (QUATIC 2012), P231, DOI 10.1109/QUATIC.2012.16
   Cunha J, 2009, S VIS LANG HUM CEN C, P233, DOI 10.1109/VLHCC.2009.5295255
   Erwig M, 2009, IEEE SOFTWARE, V26, P25, DOI 10.1109/MS.2009.140
   Fisher Marc., 2005, P 1 WORKSHOP END USE, P47
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   HENDRY DG, 1994, INT J HUM-COMPUT ST, V40, P1033, DOI 10.1006/ijhc.1994.1047
   Hermans F., 2011, P EUSPRIG 2011 S, P63
   Hermans F, 2012, P EUSPRIG 12
   Hermans F, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P409, DOI 10.1109/ICSM.2012.6405300
   Hermans F, 2012, PROC INT CONF SOFTW, P441, DOI 10.1109/ICSE.2012.6227171
   Hermans F, 2010, LECT NOTES COMPUT SC, V6183, P52, DOI 10.1007/978-3-642-14107-2_4
   Hodnigg K, 2008, P EUSPRIG 08, P16
   Hole Stephen, 2009, Proceedings of the 2009 International Conference on Data Mining. DMIN 2009, P573
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Lanza Michele., OBJECT ORIENTED METR
   Marinescu R, 2001, TOOLS, V39, P173, DOI 10.1109/TOOLS.2001.941671
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   NARDI BA, 1990, HUMAN-COMPUTER INTERACTION : INTERACT 90, P977
   Olbrich S, 2009, INT SYMP EMP SOFTWAR, P391
   Panko R. R., 1998, Journal of End User Computing, V10, P15
   Powell S.G., 2009, Hawaii International Conference on System Sciences, P1
   Raffensperger J., 2009, INT J BUS EC, V2, P141
   Rajalingham K., 2000, P HICSS 00, P133
   Wettel R, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P551, DOI 10.1145/1985793.1985868
   Wettel R, 2008, SOFTVIS 2008: PROCEEDINGS OF THE 4TH ACM SYMPOSIUM ON SOFTWARE VISUALIZATION, P155
   Winston W.L., 2001, OR MS TODAY, V28
NR 36
TC 34
Z9 36
U1 0
U2 9
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2015
VL 20
IS 2
BP 549
EP 575
DI 10.1007/s10664-013-9296-2
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CH2AB
UT WOS:000353824000010
DA 2024-07-18
ER

PT J
AU Shang, WY
   Nagappan, M
   Hassan, AE
AF Shang, Weiyi
   Nagappan, Meiyappan
   Hassan, Ahmed E.
TI Studying the relationship between logging characteristics and the code
   quality of platform software
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Mining software repositories; Software logs; Software quality
AB Platform software plays an important role in speeding up the development of large scale applications. Such platforms provide functionalities and abstraction on which applications can be rapidly developed and easily deployed. Hadoop and JBoss are examples of popular open source platform software. Such platform software generate logs to assist operators in monitoring the applications that run on them. These logs capture the doubts, concerns, and needs of developers and operators of platform software. We believe that such logs can be used to better understand code quality. However, logging characteristics and their relation to quality has never been explored. In this paper, we sought to empirically study this relation through a case study on four releases of Hadoop and JBoss. Our findings show that files with logging statements have higher post-release defect densities than those without logging statements in 7 out of 8 studied releases. Inspired by prior studies on code quality, we defined log-related product metrics, such as the number of log lines in a file, and log-related process metrics such as the number of changed log lines. We find that the correlations between our log-related metrics and post-release defects are as strong as their correlations with traditional process metrics, such as the number of pre-release defects, which is known to be one the metrics with the strongest correlation with post-release defects. We also find that log-related metrics can complement traditional product and process metrics resulting in up to 40 % improvement in explanatory power of defect proneness. Our results show that logging characteristics provide strong indicators of defect-prone source code files. However, we note that removing logs is not the answer to better code quality. Instead, our results show that it might be the case that developers often relay their concerns about a piece of code through logs. Hence, code quality improvement efforts (e.g., testing and inspection) should focus more on the source code files with large amounts of logs or with large amounts of log churn.
C1 [Shang, Weiyi; Nagappan, Meiyappan; Hassan, Ahmed E.] Queens Univ, SAIL, Kingston, ON, Canada.
C3 Queens University - Canada
RP Shang, WY (corresponding author), Queens Univ, SAIL, Kingston, ON, Canada.
EM swy@cs.queensu.ca; mei@cs.queensu.ca; ahmed@cs.queensu.ca
RI Ali, Ahmed/HOF-4672-2023; Hassan, Ahmed/AAB-7241-2019; KHALIFA, AHMED
   khalifa/HKF-2246-2023
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572
CR [Anonymous], 2007, PROMISE 07, DOI DOI 10.1109/PROMISE.2007.10
   Bacchelli A, 2010, LECT NOTES COMPUT SC, V6013, P59
   Barbour L., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P273, DOI 10.1109/ICSM.2011.6080794
   BESCHASTNIKH I., 2011, P 19 ACM SIGSOFT S 1, P267, DOI DOI 10.1145/2025113.2025151
   Bettenburg Nicolas, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P124, DOI 10.1109/ICPC.2010.46
   Bettenburg N, 2013, EMPIR SOFTW ENG, V18, P375, DOI 10.1007/s10664-012-9205-0
   Bird C, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P121, DOI 10.1145/1595696.1595716
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Cataldo M, 2009, IEEE T SOFTWARE ENG, V35, P864, DOI 10.1109/TSE.2009.42
   Dean J, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDE '04), P137
   Feng Zhang, 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P456, DOI 10.1109/WCRE.2012.55
   Fenton NE, 1999, IEEE T SOFTWARE ENG, V25, P675, DOI 10.1109/32.815326
   Gilstrap BR, 2002, INTRO JAVA LOGGING A
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Harrell F.E., 2001, Regression modeling strategies: with applications to linear models, logistic regression, and survival analysis
   Hassan AE, 2005, THESIS U WATERLOO
   HASSAN AE, 2008, SAC, P837
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Herraiz I., 2010, Making Software: What Really Works, and Why We Believe It?
   Ibrahim WM, 2012, J SYST SOFTWARE, V85, P2293, DOI 10.1016/j.jss.2011.09.019
   Ihaka R., 1996, J COMPUTATIONAL GRAP, V5, P299, DOI [DOI 10.1080/10618600.1996.10474713, 10.2307/1390807, DOI 10.2307/1390807]
   Jackson J.E., 1991, A user's guide to principal components, V19
   Jiang W., 2009, Proccedings of the 7th conference on File and storage technologies, P43
   Jiang ZM, 2009, PROC IEEE INT CONF S, P125, DOI 10.1109/ICSM.2009.5306331
   Jiang ZM, 2008, PROC IEEE INT CONF S, P307, DOI 10.1109/ICSM.2008.4658079
   Liu YX, 2009, PROC IEEE INT CONF S, P233, DOI 10.1109/ICSM.2009.5306318
   Meneely A., 2008, P 16 ACM SIGSOFT INT, P13, DOI DOI 10.1145/1453101.1453106
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Mockus A, 2000, PROC IEEE INT CONF S, P120, DOI 10.1109/ICSM.2000.883028
   Mockus A, 2000, BELL LABS TECH J, V5, P169, DOI 10.1002/bltj.2229
   Mockus A, 2010, Proc. of the 18th Symposium on the Foundations of Software Engineering (FSE), P117
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Nagappan Nachiappan, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P364
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Nguyen T.N. D., 2010, Proceedings of the International Conference on Software Maintenance, P1, DOI DOI 10.1109/ICSM.2010.5609560
   Ohlsson N, 1996, IEEE T SOFTWARE ENG, V22, P886, DOI 10.1109/32.553637
   Pinzger Martin, 2008, P 16 ACM SIGSOFT INT, P2, DOI DOI 10.1145/1453101.1453105
   Posnett D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P452, DOI 10.1109/ICSE.2013.6606591
   Rabkin A., 2010, Proceedings of the 24th International Conference on Large Installation System Administration, P1
   Rahman F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P432, DOI 10.1109/ICSE.2013.6606589
   Rahman F, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P491, DOI 10.1145/1985793.1985860
   Seaman C, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P149
   Shang W., 2011, P 2011 18 WORKING C, P335, DOI DOI 10.1109/WCRE.2011.48
   Shang WY, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P21, DOI 10.1109/MSR.2009.5069477
   Shihab E, 2012, An exploration of challenges limiting pragmaticsoftware defect prediction
   Shihab E., 2011, Proceedings of the ACM SIGSOFT symposium and the European Conference on Foundations of Software Engineering, P300
   Shihab E, 2010, ESEM 10 P 2010 ACM I
   Smithson M., 2003, Confidence Intervals
   Tan J., 2008, WASL, V8, P6, DOI DOI 10.1109/UPEC.2008.4651594
   Tse-Hsun Chen, 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P189, DOI 10.1109/MSR.2012.6224280
   Nguyen TT, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P932, DOI 10.1145/1985793.1985950
   Wolf T, 2009, PROC INT CONF SOFTW, P1, DOI 10.1109/ICSE.2009.5070503
   Xu W, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P117
   Yuan D, 2012, PROC INT CONF SOFTW, P102, DOI 10.1109/ICSE.2012.6227202
   Yuan D, 2011, ACM SIGPLAN NOTICES, V46, P3, DOI 10.1145/1961296.1950369
   Zimmermann Thomas, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P421, DOI 10.1109/ICST.2010.32
   Zimmermann T, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P531, DOI 10.1145/1368088.1368161
NR 59
TC 44
Z9 52
U1 0
U2 19
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2015
VL 20
IS 1
BP 1
EP 27
DI 10.1007/s10664-013-9274-8
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AZ7EN
UT WOS:000348381800001
DA 2024-07-18
ER

PT J
AU Chen, N
   Hoi, SCH
   Xiao, XK
AF Chen, Ning
   Hoi, Steven C. H.
   Xiao, Xiaokui
TI Software process evaluation: a machine learning framework with
   application to defect management process
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software process evaluation; Defect management process; Sequence
   classification; Machine learning
ID PROCESS SIMULATION; PRODUCTIVITY; QUALITY
AB Software process evaluation is important to improve software development and the quality of software products in a software organization. Conventional approaches based on manual qualitative evaluations (e. g., artifacts inspection) are deficient in the sense that (i) they are time-consuming, (ii) they usually suffer from the authority constraints, and (iii) they are often subjective. To overcome these limitations, this paper presents a novel semi-automated approach to software process evaluation using machine learning techniques. In this study, we mainly focus on the procedure aspect of software processes, and formulate the problem as a sequence (with additional information, e. g., time, roles, etc.) classification task, which is solved by applying machine learning algorithms. Based on the framework, we define a new quantitative indicator to evaluate the execution of a software process more objectively. To validate the efficacy of our approach, we apply it to evaluate the execution of a defect management (DM) process in nine real industrial software projects. Our empirical results show that our approach is effective and promising in providing a more objective and quantitative measurement for the DM process evaluation task. Furthermore, we conduct a comprehensive empirical study to compare our proposed machine learning approach with an existing conventional approach (i. e., artifacts inspection). Finally, we analyze the advantages and disadvantages of both approaches in detail.
C1 [Chen, Ning; Hoi, Steven C. H.; Xiao, Xiaokui] Nanyang Technol Univ, Sch Comp Engn, Singapore 639798, Singapore.
C3 Nanyang Technological University
RP Chen, N (corresponding author), Nanyang Technol Univ, Sch Comp Engn, Singapore 639798, Singapore.
EM nchen1@ntu.edu.sg; chhoi@ntu.edu.sg; xkxiao@ntu.edu.sg
RI HOI, Steven C. H./A-3736-2011; Xiao, Xiaokui/A-3739-2011
OI Hoi, Steven/0000-0002-4584-3453; Xiao, Xiaokui/0000-0003-0914-4580
FU Nanyang Technological University SUG Grant [M58020016]; AcRF Tier 1
   Grant [RG 35/09]; MOE Academic Tier-1 Grant [RG 33/11]
FX This work was supported by Nanyang Technological University SUG Grant
   M58020016, AcRF Tier 1 Grant RG 35/09 and MOE Academic Tier-1 Grant RG
   33/11. We appreciate Quanxi Mi for sharing the raw data sets and the
   great help in the comparative study.
CR Abrahamsson Pekka., 2004, Companion to the 19th Annual ACM SIGPLAN Conference on Object-oriented Programming Systems, Languages, P174, DOI DOI 10.1145/1028664.1028736
   Acharya Mithun, 2007, P 6 JOINT M EUROPEAN, P25, DOI [DOI 10.1145/1287624.1287630, 10.1145/1287624.1287630]
   Ammons G, 2002, ACM SIGPLAN NOTICES, V37, P4, DOI 10.1145/565816.503275
   [Anonymous], 2004, Software Engineering and Knowledge Engineering
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   BOEHM BW, 1988, COMPUTER, V21, P61, DOI 10.1145/12944.12948
   Cataldo M, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P101, DOI 10.1145/1595696.1595714
   Cavnar W.B., 1994, Proceedings of SDAIR-94, 3rd Annual Symposium on Document Analysis and Information Retrieval, V48113, P161
   Cheng BYM, 2005, PROTEINS, V58, P955, DOI 10.1002/prot.20373
   Chrissis MB, 2004, CMMI GUIDELINES PROC
   Cleland-Huang J., 2006, P 14 IEEE INT REQUIR, P36
   Cook J. E., 1998, ACM Transactions on Software Engineering and Methodology, V7, P215, DOI 10.1145/287000.287001
   Cook JE, 1999, ACM T SOFTW ENG METH, V8, P147, DOI 10.1145/304399.304401
   da Silva M. A. A., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P528, DOI 10.1109/ASE.2011.6100116
   Damian D, 2006, IEEE T SOFTWARE ENG, V32, P433, DOI 10.1109/TSE.2006.61
   Di Lucca GA, 2002, PROC IEEE INT CONF S, P93, DOI 10.1109/ICSM.2002.1167756
   Dong Guozhu., 2009, Sequence data mining
   Dongen B, 2005, LECT NOTES COMPUTER, V3536, P1105
   Dybå T, 2011, EMPIR SOFTW ENG, V16, P425, DOI 10.1007/s10664-011-9163-y
   ELEMAM K, 1998, SPICE THEORY PRACTIC
   ELRAMLY M, 2002, P 8 ACM SIGKDD INT C, P315
   Fuggetta A., 2000, P C LIM IR FUT SOFTW, P25, DOI DOI 10.1145/336512.336521
   GOLDENSON D., 2003, DEMONSTRATING IMPACT
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   HANLEY JA, 1982, RADIOLOGY, V143, P29, DOI 10.1148/radiology.143.1.7063747
   Harter DE, 2012, IEEE T SOFTWARE ENG, V38, P810, DOI 10.1109/TSE.2011.63
   Hoda R, 2012, EMPIR SOFTW ENG, V17, P609, DOI 10.1007/s10664-011-9161-0
   Hofmeyr S. A., 1998, Journal of Computer Security, V6, P151
   Kellner MI, 1999, J SYST SOFTWARE, V46, P91, DOI 10.1016/S0164-1212(99)00003-5
   Kohavi R., 1995, IJCAI-95. Proceedings of the Fourteenth International Joint Conference on Artificial Intelligence, P1137
   Krishnan MS, 2000, MANAGE SCI, V46, P745, DOI 10.1287/mnsc.46.6.745.11941
   Lee S, 2010, EMPIR SOFTW ENG, V15, P204, DOI 10.1007/s10664-009-9119-7
   Li J, 2006, EMPIR SOFTW ENG, V11, P433, DOI 10.1007/s10664-006-9005-5
   Lo D, 2007, KDD-2007 PROCEEDINGS OF THE THIRTEENTH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P460
   Martin R. C., 2002, AGILE SOFTWARE DEV P
   Moor Ad, 2006, P WORKSH EXPL MOD ME, P533
   Ning Chen, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P333, DOI 10.1109/ASE.2011.6100070
   Osterweil L., 1987, Proceedings of the 9th International Conference on Software Engineering (Cat. No.87CH2432-3), P2
   Osterweil LJ, 1997, PROC INT CONF SOFTW, P540, DOI 10.1145/253228.253440
   Patton M. Q., 2002, QUALITATIVE RES EVAL, V3rd
   Pino FJ, 2010, INFORM SOFTWARE TECH, V52, P1044, DOI 10.1016/j.infsof.2010.04.004
   Poncin W, 2011, EUR CON SFTWR MTNCE, P5, DOI 10.1109/CSMR.2011.5
   Pressman R. S., 2010, Software Engineering: A Practitioner's Approach
   Raffo DM, 1999, J SYST SOFTWARE, V46, P163, DOI 10.1016/S0164-1212(99)00009-6
   Ramasubbu N, 2009, PROC INT CONF SOFTW, P529, DOI 10.1109/ICSE.2009.5070551
   Rozinat A, 2008, INFORM SYST, V33, P64, DOI 10.1016/j.is.2007.07.001
   Rubin V, 2007, LECT NOTES COMPUT SC, V4470, P169
   Samalikova J, 2011, SOFTWARE QUAL J, V19, P101, DOI 10.1007/s11219-010-9105-8
   Sarawagi S, 2005, ADV INFO KNOW PROC, P153, DOI 10.1007/1-84628-284-5_6
   SCAMPI Upgrade Team, 2011, HDB CARN MELL U
   Sommerville I, 2005, ACM T SOFTW ENG METH, V14, P85, DOI 10.1145/1044834.1044837
   van Beest NRTP, 2007, NINTH INTERNATIONAL SYMPOSIUM ON SYMBOLIC AND NUMERIC ALGORITHMS FOR SCIENTIFIC COMPUTING, PROCEEDINGS, P541, DOI 10.1109/SYNASC.2007.50
   van der Aalst WMP, 2007, INFORM SYST, V32, P713, DOI 10.1016/j.is.2006.05.003
   von Wangenheim CG, 2006, IEEE SOFTWARE, V23, P91, DOI 10.1109/MS.2006.13
   Witten I. H., 2005, DATA MINING PRACTICA
   Xie T, 2009, COMPUTER, V42, P55, DOI 10.1109/MC.2009.256
   Xing F, 2005, 16TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P213
   Xing Z., 2010, ACM SIGKDD EXPLOR NE, V12, P40, DOI [DOI 10.1145/1882471.1882478, 10.1145/1882471.1882478]
   Yuan D, 2008, SDM
   Zhang H, 2008, LECT NOTES COMPUT SC, V5007, P345, DOI 10.1007/978-3-540-79588-9_30
NR 60
TC 12
Z9 13
U1 1
U2 17
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2014
VL 19
IS 6
BP 1531
EP 1564
DI 10.1007/s10664-013-9254-z
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AR9QU
UT WOS:000343910700001
DA 2024-07-18
ER

PT J
AU Al Dallal, J
   Morasca, S
AF Al Dallal, Jehad
   Morasca, Sandro
TI Predicting object-oriented class reuse-proneness using internal quality
   attributes
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Internal and external quality attributes; Quality measures; Class
   cohesion; Class coupling; Class size; Class reuse-proneness;
   Object-oriented software; Inheritance; Instantiation
ID PRACT.-EXPER. 2000; CLASS COHESION; FAULT PREDICTION; METRICS SUITE;
   SOFTWARE; CHAE,HEUNG,SEOK; KWON,YONG,RAE; REUSABILITY
AB Class reuse-proneness is the likelihood that a class can be reused and is a key quality characteristic in object-oriented design. Because it is clearly impossible to know with certainty when, where, how, and how often a class will be reused, this likelihood can only be estimated when a class is developed. At that stage, the internal quality attributes of a class such as cohesion, coupling, and size can be measured. In this paper, we empirically study the ability of 29 internal class quality measures, individually and in combination, to estimate class reuse-proneness. Specifically, we take into account both class inheritance and class instantiation, which are two ways in which a class can be reused. Our results show that most of the considered measures are predictors for the considered reuse-proneness attributes to some degree. The capability of the considered internal quality measures to predict class reuse-proneness is enhanced when the measures are combined using an optimized multivariate statistical model. The results also show that the size and coupling attributes of a class have positive impacts on its reuse-proneness via inheritance and instantiation. The cohesion of a class has a negative impact on its inheritance reuse-proneness and a positive impact on its instantiation reuse-proneness. The overall results of the empirical study show that software developers can use a number of predictors to assess the reuse-proneness of classes and possibly improve the reuse-proneness of the classes by controlling their internal quality attributes. Our results contribute to the evaluation of the quality of a class, but a comprehensive evaluation of the quality of a class should take into account many more qualities. Also, not all classes in a software system are built with reuse-proneness in mind, so our results should be applied only to those that are designed and implemented to be reusable.
C1 [Al Dallal, Jehad] Kuwait Univ, Dept Informat Sci, Safat 13060, Kuwait.
   [Morasca, Sandro] Univ Insubria, Dept Theoret & Appl Sci, I-22100 Como, Italy.
C3 Kuwait University; University of Insubria
RP Al Dallal, J (corresponding author), Kuwait Univ, Dept Informat Sci, POB 5969, Safat 13060, Kuwait.
EM j.aldallal@ku.edu.kw; sandro.morasca@uninsubria.it
RI Al Dallal, Jehad/HTL-9247-2023
OI Al Dallal, Jehad/0000-0003-3679-4351; Morasca,
   Sandro/0000-0003-4598-7024
FU Kuwait University [WI03/11]
FX The authors would like to acknowledge the support of this work by Kuwait
   University Research Grant WI03/11. In addition, the authors would like
   to thank Anas Abdin for assisting in collecting the required data.
CR ABREU FBE, 1994, J SYST SOFTWARE, V26, P87, DOI 10.1016/0164-1212(94)90099-X
   Aggarwal KK, 2005, THIRD ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGMENT AND APPLICATIONS, PROCEEDINGS, P48, DOI 10.1109/SERA.2005.60
   Al Dallal J, 2009, IET SOFTW, V3, P46, DOI 10.1049/iet-sen:20080054
   Al Dallal J., 2010, INT J COMPUTER SCI, V4, P45
   Al Dallal J, 2013, SOFTWARE PRACT EXPER, V43, P685, DOI 10.1002/spe.2127
   Al Dallal J, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2089116.2089118
   Al Dallal J, 2012, J SYST SOFTWARE, V85, P1042, DOI 10.1016/j.jss.2011.12.006
   Al Dallal J, 2012, INFORM SOFTWARE TECH, V54, P396, DOI 10.1016/j.infsof.2011.11.007
   Al Dallal J, 2011, INFORM SOFTWARE TECH, V53, P914, DOI 10.1016/j.infsof.2011.03.004
   Al Dallal J, 2011, IEEE T SOFTWARE ENG, V37, P788, DOI 10.1109/TSE.2010.97
   Al Dallal J, 2010, INFORM SOFTWARE TECH, V52, P1346, DOI 10.1016/j.infsof.2010.08.006
   Al Dallal J, 2007, PROC WRLD ACAD SCI E, V25, P448
   [Anonymous], CSTR9620 VICT U WELL
   [Anonymous], P BCS FACS WORKSH NO
   [Anonymous], ACM SIGSOFT SOFTWARE
   [Anonymous], 1979, Encyclopedia of Mathematics and its Applications
   [Anonymous], 1997, Software metrics: A rigorous and practical approach
   [Anonymous], P 1995 S SOFTW REUS
   [Anonymous], P IEEE INT SOFTW MET
   [Anonymous], TRANSITION OBJECT OR
   [Anonymous], 2002, THESIS SE U
   [Anonymous], P 38 ANN SE REG C US
   [Anonymous], 2012, P 27 S APPL COMP SAC
   [Anonymous], 9 PANH C INF THESS
   [Anonymous], 2006, INT J INF THEOR APPL
   Bacchelli A., 2010, Proceedings of the 32nd International Conference on Software Engineering, P375
   Badri L., 2004, J OBJECT TECHNOL, V3, P145
   Bansiya J, 1999, J OBJECT-ORIENT PROG, V11, P47
   Barnard J, 1998, SOFTWARE QUAL J, V7, P35, DOI 10.1023/A:1008892825725
   Bieman JM, 1998, IEEE T SOFTWARE ENG, V24, P111, DOI 10.1109/32.666825
   BIEMAN JM, 1994, IEEE T SOFTWARE ENG, V20, P644, DOI 10.1109/32.310673
   Bonja C., 2006, ACM SE 44 P 44 ANN S, P91
   Briand L, 1997, PROC INT CONF SOFTW, P412, DOI 10.1145/253228.253367
   Briand L. C., 2001, Empirical Software Engineering, V6, P11, DOI 10.1023/A:1009815306478
   Briand L. C., 1998, Empirical Software Engineering, V3, P65, DOI 10.1023/A:1009783721306
   Briand LC, 1996, IEEE T SOFTWARE ENG, V22, P68, DOI 10.1109/32.481535
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P91, DOI 10.1109/32.748920
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P722, DOI 10.1109/32.815329
   Chae HS, 2004, IEEE T SOFTWARE ENG, V30, P826, DOI 10.1109/TSE.2004.88
   Chen ZQ, 2002, PROC IEEE INT CONF S, P377, DOI 10.1109/ICSM.2002.1167794
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   CHIDAMBER SR, 1991, SIGPLAN NOTICES, V26, P197
   Counsell S, 2006, ACM T SOFTW ENG METH, V15, P123, DOI 10.1145/1131421.1131422
   Emerson T. J., 1984, Proceedings of the 7th International Conference on Software Engineering (cat. no. 84CH2011-5), P294
   Etzkorn LH, 2004, INFORM SOFTWARE TECH, V46, P677, DOI 10.1016/j.infsof.2003.12.002
   Gui G, 2009, J COMPUT, V4, P797
   Henderson-Sellers B., 1996, Object-Oriented Metrics, measures of complexity
   Hitz M., 1995, International Symposium on Applied Corporate Computing, P25
   Hosmer W., 2000, Applied Logistic Regression, VSecond
   JOHNSON RE, 1988, J OBJECT-ORIENT PROG, V1, P22
   KARLSSON EA, 1995, SOFTWARE REUSE HOLIS
   Krantz D. H., 1971, Foundations of Measurement, V1
   LAKHOTIA A, 1993, PROC INT CONF SOFTW, P35, DOI 10.1109/ICSE.1993.346057
   Lee YS., 1995, Proc. International Conference on Software Quality, Maribor, P81
   LI W, 1993, J SYST SOFTWARE, V23, P111, DOI 10.1016/0164-1212(93)90077-B
   Marcus A, 2008, IEEE T SOFTWARE ENG, V34, P287, DOI 10.1109/TSE.2007.70768
   Meyers TM, 2007, ACM T SOFTW ENG METH, V17, DOI 10.1145/1314493.1314495
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Morasca S, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P46, DOI 10.1109/METRIC.2004.1357890
   Morasca S, 2000, J SYST SOFTWARE, V53, P225, DOI 10.1016/S0164-1212(00)00014-5
   Morasca S, 2009, INT SYMP EMP SOFTWAR, P44, DOI 10.1109/ESEM.2009.5316048
   Morasca S, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P188
   Ott L. M., 1993, Proceedings First International Software Metrics Symposium (Cat. No.93TH0518-1), P71, DOI 10.1109/METRIC.1993.263799
   Samoladas I, 2008, INT FED INFO PROC, V275, P237
   Spinellis D, 2009, ELECTRON NOTES THEOR, V233, P5, DOI 10.1016/j.entcs.2009.02.058
   TROY DA, 1981, J SYST SOFTWARE, V2, P113, DOI 10.1016/0164-1212(81)90031-5
   Wang JM, 2005, INFORM SOFTWARE TECH, V47, P167, DOI 10.1016/j.infsof.2004.07.001
   WEYUKER EJ, 1988, IEEE T SOFTWARE ENG, V14, P1357, DOI 10.1109/32.6178
   Xu BW, 2003, SOFTWARE PRACT EXPER, V33, P583, DOI 10.1002/spe.505
   Xu BW, 2001, SOFTWARE PRACT EXPER, V31, P1381, DOI 10.1002/spe.413
   Yourdon E., 1979, STRUCTURED DESIGN
   Zhou YM, 2002, PROC IEEE INT CONF S, P44, DOI 10.1109/ICSM.2002.1167746
NR 72
TC 18
Z9 22
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2014
VL 19
IS 4
BP 775
EP 821
DI 10.1007/s10664-012-9239-3
PG 47
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AH8LE
UT WOS:000336388500001
DA 2024-07-18
ER

PT J
AU Monperrus, M
   Eichberg, M
   Tekes, E
   Mezini, M
AF Monperrus, Martin
   Eichberg, Michael
   Tekes, Elif
   Mezini, Mira
TI What should developers be aware of? An empirical study on the directives
   of API documentation
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
ID USABILITY
AB Application Programming Interfaces (API) are exposed to developers in order to reuse software libraries. API directives are natural-language statements in API documentation that make developers aware of constraints and guidelines related to the usage of an API. This paper presents the design and the results of an empirical study on the directives of API documentation of object-oriented libraries. Its main contribution is to propose and extensively discuss a taxonomy of 23 kinds of API directives.
C1 [Monperrus, Martin] Univ Lille, ADAM, F-59655 Villeneuve Dascq, France.
   [Eichberg, Michael; Mezini, Mira] Tech Univ Darmstadt, Software Technol Grp, D-64289 Darmstadt, Germany.
   [Tekes, Elif] PSI Logist GmBh, D-63741 Aschaffenburg, Germany.
C3 Universite de Lille; Technical University of Darmstadt
RP Monperrus, M (corresponding author), Univ Lille, ADAM, F-59655 Villeneuve Dascq, France.
EM martin.monperrus@univ-lille1.fr
RI Monperrus, Martin/I-3640-2012
OI Monperrus, Martin/0000-0003-3505-3383
CR Alexander C., 1977, PATTERN LANGUAGE TOW
   [Anonymous], TUT ECLIPSECON C
   [Anonymous], THESIS CARNEGIE MELL
   [Anonymous], P IEEE S VIS LANG HU
   [Anonymous], P S OP SYST PRINC
   [Anonymous], 1996, Elements of survey sampling
   [Anonymous], TUT ECLIPSECON C
   [Anonymous], D91 SECURESCM
   [Anonymous], P EUR C OBJ OR PROGR
   [Anonymous], 2008, Practical API design: Confessions of a Java framework architect
   [Anonymous], P ACM IEEE 30 INT C
   [Anonymous], 2009, CHI 09 EXTENDED ABST, DOI [10.1145/1520340.1520678, DOI 10.1145/1520340.1520678]
   [Anonymous], THESIS CARNEGIE MELL
   [Anonymous], WHAT SHOULD DEV BE A
   [Anonymous], 2011, P 2 INT WORKSHOP WEB
   [Anonymous], D91 SECURESCM
   [Anonymous], P 7 IEEE WORK C MIN
   Arnout K, 2003, COMPUTER, V36, P48, DOI 10.1109/MC.2003.1244535
   Bierhoff K, 2009, LECT NOTES COMPUT SC, V5653, P195, DOI 10.1007/978-3-642-03013-0_10
   Bloch J., 2016, Effective Java
   Brooks Frederick P., 1995, The mythical man-month
   Clarke S, 2004, DR DOBBS J, V29, pS6
   Cockburn A, 2001, Writing effective use cases, the crystal collection for software professionals
   Dekel U, 2009, PROC INT CONF SOFTW, P320, DOI 10.1109/ICSE.2009.5070532
   Easterbrook S., 2007, SELECTING EMPIRICAL
   Ellis B, 2007, PROC INT CONF SOFTW, P302
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Hovemeyer D., 2005, ACM SIGSOFT Software Engineering Notes, P13
   Jiang Zhen Ming, 2006, MSR '06: Proceedings of the 2006 international workshop on Mining software repositories, P179, DOI DOI 10.1145/1137983.1138030
   Kramer D., 1999, Seventeenth Annual International Conference on Computer Documentation. Conference Proceedings, P147, DOI 10.1145/318372.318577
   Nanda MG, 2009, PROC INT CONF SOFTW, P133, DOI 10.1109/ICSE.2009.5070515
   Padioleau Y, 2009, PROC INT CONF SOFTW, P331, DOI 10.1109/ICSE.2009.5070533
   Robillard MP, 2009, IEEE SOFTWARE, V26, P27, DOI 10.1109/MS.2009.193
   Shi L, 2011, LECT NOTES COMPUT SC, V6603, P416, DOI 10.1007/978-3-642-19811-3_29
   Stylos J, 2008, 2008 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P189, DOI 10.1109/VLHCC.2008.4639083
   Stylos Jeffrey., 2008, Proc. of the 16th International Symposium on Foundations of Software Eng, P105
   Thummalapenta Suresh, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P327, DOI 10.1109/ASE.2008.43
   Watson RB, 2009, P PROFESSIONAL COMMU, P1
   Ying A. T., 2005, ACM SIGSOFT software engineering notes, V30, P1
   Zhong H, 2009, IEEE INT CONF AUTOM, P307, DOI 10.1109/ASE.2009.94
NR 40
TC 52
Z9 57
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2012
VL 17
IS 6
BP 703
EP 737
DI 10.1007/s10664-011-9186-4
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 994VN
UT WOS:000307962100004
DA 2024-07-18
ER

PT J
AU Corazza, A
   Di Martino, S
   Ferrucci, F
   Gravino, C
   Mendes, E
AF Corazza, Anna
   Di Martino, Sergio
   Ferrucci, Filomena
   Gravino, Carmine
   Mendes, Emilia
TI Investigating the use of Support Vector Regression for web effort
   estimation
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Effort estimation; Support Vector Regression
ID COST ESTIMATION; MODELS; CROSS
AB Support Vector Regression (SVR) is a new generation of Machine Learning algorithms, suitable for predictive data modeling problems. The objective of this paper is twofold: first, to investigate the effectiveness of SVR for Web effort estimation using a cross-company dataset; second, to compare different SVR configurations looking at the one that presents the best performance. In particular, we took into account three variables' preprocessing strategies (no-preprocessing, normalization, and logarithmic), in combination with two different dependent variables (effort and inverse effort). As a result, SVR was applied using six different data configurations. Moreover, to understand the suitability of kernel functions to handle non-linear problems, SVR was applied without a kernel, and in combination with the Radial Basis Function (RBF) and the Polynomial kernels, thus obtaining 18 different SVR configurations. To identify, for each configuration, which were the best values for each of the parameters we defined a procedure based on a leave-one-out cross-validation approach. The dataset employed was the Tukutuku database, which has been adopted in many previous Web effort estimation studies. Three different training and test set splits were used, including respectively 130 and 65 projects. The SVR-based predictions were also benchmarked against predictions obtained using Manual StepWise Regression and Case-Based Reasoning. Our results showed that the configuration corresponding to the logarithmic features' preprocessing, in combination with the RBF kernel provided the best results for all three data splits. In addition, SVR provided significantly superior prediction accuracy than all the considered benchmarking techniques.
C1 [Ferrucci, Filomena; Gravino, Carmine] Univ Salerno, I-84084 Fisciano, SA, Italy.
   [Corazza, Anna; Di Martino, Sergio] Univ Naples Federico II, I-80126 Naples, Italy.
   [Mendes, Emilia] Univ Auckland, Auckland 92019, New Zealand.
C3 University of Salerno; University of Naples Federico II; University of
   Auckland
RP Ferrucci, F (corresponding author), Univ Salerno, Via Ponte Don Melillo, I-84084 Fisciano, SA, Italy.
EM corazza@na.infn.it; dimartino@na.infn.it; fferrucci@unisa.it;
   gravino@unisa.it; emilia@cs.auckland.ac.nz
RI Ferrucci, Filomena/AAG-6799-2020; Di Martino, Sergio/F-2602-2012;
   Mendes, Maria E/B-4207-2015
OI Ferrucci, Filomena/0000-0002-0975-8972; Di Martino,
   Sergio/0000-0002-1019-9004; Gravino, Carmine/0000-0002-4394-9035;
   Mendes, Emilia/0000-0003-0449-5322; CORAZZA, Anna/0000-0002-9156-5079
CR [Anonymous], PRACTICAL NONPARAMET
   [Anonymous], 1986, Software Engineering Metrics and Models
   [Anonymous], 1999, Advances in kernel methods: Support vector learning
   [Anonymous], P EASE
   [Anonymous], 1998, STAT LEARNING THEORY
   [Anonymous], 1997, Support Vector Learning R
   [Anonymous], P 7 INT SOFTW METR S
   BAILEY JW, 1981, P 5 INT C SOFTW ENG, P107
   Braga PL, 2008, APPLIED COMPUTING 2008, VOLS 1-3, P1788
   BRAGA PL, 2007, SOFTWARE EFFORT ESTI, P352
   Briand L. C., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P377, DOI 10.1109/ICSE.2000.870428
   Briand LC, 2005, IEEE T SOFTWARE ENG, V31, P833, DOI 10.1109/TSE.2005.105
   CHRISTODOULOU SP, 2000, P 2 ICSE WORKSH WEB, P75
   Chulani S, 1999, IEEE T SOFTWARE ENG, V25, P573, DOI 10.1109/32.799958
   COOK RD, 1977, TECHNOMETRICS, V19, P15, DOI 10.2307/1268249
   CORAZZA A, 2009, P EMP SOFTW ENG MEAS, P17
   CORTES C, 1995, MACH LEARN, V20, P273, DOI 10.1007/BF00994018
   COSTAGLIOLA G, 2006, P INT C WEB ENG ICWE, P9
   Desharnais J. M., 1989, Analyse statistique de la productivitie des projects informatique a partie de la technique des point des function
   DIMARTINO S, 2007, P EMP SOFTW ENG MEAS, P324
   Hofmann T, 2008, ANN STAT, V36, P1171, DOI 10.1214/009053607000000677
   Huang CL, 2006, EXPERT SYST APPL, V31, P231, DOI 10.1016/j.eswa.2005.09.024
   KITCHENHAM B, 1995, IEEE SOFTWARE, V12, P52, DOI 10.1109/52.391832
   Kitchenham B, 1998, IEEE T SOFTWARE ENG, V24, P278, DOI 10.1109/32.677185
   Kitchenham B. A., 2001, IEE Proceedings-Software, V148, P81, DOI 10.1049/ip-sen:20010506
   KITCHENHAM BA, 2006, P EMP ASS SOFTW ENG, P89
   Kitchenham BA, 2007, IEEE T SOFTWARE ENG, V33, P316, DOI 10.1109/TSE.2007.1101
   MAXWELL K, 2002, SOFTWARE QUALITY I S
   Mendes E, 2005, J SYST SOFTWARE, V77, P157, DOI 10.1016/j.jss.2004.08.034
   Mendes E, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P348, DOI 10.1109/METRIC.2004.1357920
   Mendes E., 2002, IEE Proceedings-Software, V149, P86, DOI 10.1049/ip-sen:20020337
   Mendes E, 2003, EMPIR SOFTW ENG, V8, P163, DOI 10.1023/A:1023062629183
   MENDES E, 2008, P INT C WEB ENG
   Mendes E, 2008, J SYST SOFTWARE, V81, P673, DOI 10.1016/j.jss.2007.07.044
   Mendes E, 2008, IEEE T SOFTWARE ENG, V34, P723, DOI 10.1109/TSE.2008.64
   MENDES EMILIA., 2005, WEB ENG
   Oliveira ALI, 2006, NEUROCOMPUTING, V69, P1749, DOI 10.1016/j.neucom.2005.12.119
   Scholkopf B., 2002, Encyclopedia of Biostatistics
   Smola AJ, 2004, STAT COMPUT, V14, P199, DOI 10.1023/B:STCO.0000035301.49549.88
   Standish Group Int, 1994, Technical Report
   Vapnik V, 1964, AUTOMATICS REMOTE CO, V25
   Vapnik V., 1963, AUTOMAT REM CONTR, V24, P774, DOI DOI 10.12691/JGG-2-3-9
NR 42
TC 30
Z9 31
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2011
VL 16
IS 2
BP 211
EP 243
DI 10.1007/s10664-010-9138-4
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 732VM
UT WOS:000288217800002
DA 2024-07-18
ER

PT J
AU Dieste, O
   Grimán, A
   Juristo, N
AF Dieste, Oscar
   Griman, Anna
   Juristo, Natalia
TI Developing search strategies for detecting relevant experiments
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Evidence-based software engineering; Systematic review; Controlled
   experiment
ID SOFTWARE
AB Our goal is to analyze the optimality of search strategies for use in systematic reviews of software engineering experiments. Studies retrieval is an important problem in any evidence-based discipline. This question has not been examined for evidence-based software engineering as yet. We have run several searches exercising different terms denoting experiments to evaluate their recall and precision. Based on our evaluation, we propose using a high recall strategy when there are plenty of resources or the results need to be exhaustive. For any other case, we propose optimal, or even acceptable, search strategies. As a secondary goal, we have analysed trends and weaknesses in terminology used in articles reporting software engineering experiments. We have found that it is impossible for a search strategy to retrieve 100% of the experiments of interest (as happens in other experimental disciplines), because of the shortage of reporting standards in the community.
C1 [Griman, Anna] Univ Simon Bolivar, Caracas 1080A, Venezuela.
   [Dieste, Oscar; Juristo, Natalia] Univ Politecn Madrid, Fac Informat, Boadilla Del Monte 28660, Spain.
C3 Simon Bolivar University; Universidad Politecnica de Madrid
RP Grimán, A (corresponding author), Univ Simon Bolivar, Apartado Postal 89000, Caracas 1080A, Venezuela.
EM odieste@fi.upm.es; agriman@usb.ve; natalia@fi.upm.es
RI Dieste, Oscar/K-6193-2014
OI Dieste, Oscar/0000-0002-3060-7853; Griman Padua,
   Anna/0000-0002-9092-6952
CR Bailey J., 2007, 2 INT WORKSHOP REALI, P2
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Davis A, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P179
   Dyba T, 2005, IEEE SOFTWARE, V22, P58, DOI 10.1109/MS.2005.6
   Dyba T., 2007, Proc. of the First Int. Symp. on Empirical Software Engineering and Measurement, P225
   Dybå T, 2007, IEEE SOFTWARE, V24, P12, DOI 10.1109/MS.2007.158
   Dybå T, 2006, INFORM SOFTWARE TECH, V48, P745, DOI 10.1016/j.infsof.2005.08.009
   GUYATT G, 1992, JAMA-J AM MED ASSOC, V268, P2420, DOI 10.1001/jama.1992.03490170092032
   Hannay JE, 2007, IEEE T SOFTWARE ENG, V33, P87, DOI 10.1109/TSE.2007.12
   Higgins J PT., 2006, The Cochrane Library, V4
   Jedlitschka A, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P92, DOI 10.1109/ISESE.2005.1541818
   Jorgensen M, 2004, J SYST SOFTWARE, V70, P37, DOI 10.1016/S0164-1212(02)00156-5
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Juristo N, 2004, EMPIR SOFTW ENG, V9, P7, DOI 10.1023/B:EMSE.0000013513.48963.1b
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   KEMPENES VB, 2007, THESIS U OSLO
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Kitchenham BA, 2007, IEEE T SOFTWARE ENG, V33, P316, DOI 10.1109/TSE.2007.1101
   Lajeunesse MJ, 2003, ECOL LETT, V6, P448, DOI 10.1046/j.1461-0248.2003.00448.x
   Melia S., 2010, P INT S EMP SOFTW EN, P505
   Petitti D.B., 2000, META ANAL DECISION A, V2nd
   SINGH J, 1999, PAKISSTANS 4 WAR KAS, P2
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Straus SE., 2005, Evidence-Based Medicine: How to Practice and Teach EBM, V3rd
   van Rijsbergen C. J, 1979, Information Retrieval, V2nd
   Zelkowitz MV, 1998, COMPUTER, V31, P23, DOI 10.1109/2.675630
NR 27
TC 87
Z9 90
U1 1
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2009
VL 14
IS 5
BP 513
EP 539
DI 10.1007/s10664-008-9091-7
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 477UG
UT WOS:000268543800002
DA 2024-07-18
ER

PT J
AU Falke, R
   Frenzel, P
   Koschke, R
AF Falke, Rainiar
   Frenzel, Pierre
   Koschke, Rainer
TI Empirical evaluation of clone detection using syntax suffix trees
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software clone detection; Redundancy; Duplication; Software maintenance;
   Software evolution; Program analysis
AB Reusing software through copying and pasting is a continuous plague in software development despite the fact that it creates serious maintenance problems. Various techniques have been proposed to find duplicated redundant code (also known as software clones). A recent study has compared these techniques and shown that token-based clone detection based on suffix trees is fast but yields clone candidates that are often not syntactic units. Current techniques based on abstract syntax trees-on the other hand-find syntactic clones but are considerably less efficient. This paper describes how we can make use of suffix trees to find syntactic clones in abstract syntax trees. This new approach is able to find syntactic clones in linear time and space. The paper reports the results of a large case study in which we empirically compare the new technique to other techniques using the Bellon benchmark for clone detectors. The Bellon benchmark consists of clone pairs validated by humans for eight software systems written in C or Java from different application domains. The new contributions of this paper over the conference paper are the additional analysis of Java programs, the exploration of an alternative path that uses parse trees instead of abstract syntax trees, and the investigation of the impact on recall and precision when clone analyses insist on consistent parameter renaming.
C1 [Falke, Rainiar; Frenzel, Pierre; Koschke, Rainer] Univ Bremen, Bremen, Germany.
C3 University of Bremen
RP Koschke, R (corresponding author), Univ Bremen, Bremen, Germany.
EM rfalke@informatik.uni-bremen.de; saint@inforniatik.uni-bremen.de;
   koschke@informatik.uni-bremen.de
CR [Anonymous], 1991, SOFTWARE-PRACTICE AND EXPERIENCE, DOI DOI 10.1002/SPE.4380210706
   Antoniol G, 2001, PROC IEEE INT CONF S, P273, DOI 10.1109/ICSM.2001.972740
   Antoniol G, 2002, INFORM SOFTWARE TECH, V44, P755, DOI 10.1016/S0950-5849(02)00123-4
   BAILEY J, 2002, SCAM
   BAKER B, 1995, WORK C REV ENG
   Baker BS, 2007, IEEE T SOFTWARE ENG, V33, P608, DOI 10.1109/TSE.2007.70720
   Baker BS, 2002, J ALGORITHM, V42, P231, DOI 10.1006/jagm.2002.1214
   BAKER BS, 1996, PARAMETERIZED PATTER
   BAKER BS, 1992, COMPUTER SCI STAT, V24
   Balazinska M., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P292, DOI 10.1109/METRIC.1999.809750
   Balazinska M, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P98, DOI 10.1109/WCRE.2000.891457
   Baxter Ira D., 1998, ICSM
   BELLON S, 2002, THESIS U STUTTGART G
   Bellon S, 2007, IEEE T SOFTWARE ENG, V33, P577, DOI 10.1109/TSE.2007.70725
   BENTLEY JL, 1979, IEEE T COMPUT, V28, P643, DOI 10.1109/TC.1979.1675432
   Bruntink M, 2005, IEEE T SOFTWARE ENG, V31, P804, DOI 10.1109/TSE.2005.114
   Bruntink M, 2004, PROC IEEE INT CONF S, P200, DOI 10.1109/ICSM.2004.1357804
   Chou Andy, 2001, SOSP, P73, DOI 10.1145/502034.502042
   CORDY JR, 2004, CASCON
   CORDY JR, 2003, INT WORKSH PROGR COM
   DILUCCA G, 2002, COMPSAC
   Ducasse Stephane, 1999, ICSM
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   GITCHELL D, 1999, SIGCSE
   Godfrey M., 2003, WORK C REV ENG
   GODFREY M, 2001, WORKSH PRINC SOFTW E
   HIGO Y, 2002, LECT NOTES COMPUTER, V2559
   JOHNSON J, 1993, CASCON
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   KAPSER C, 2005, P 21 IEEE INT C SOFT
   Kapser C, 2006, WORK CONF REVERSE EN, P19
   Kim M, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P83
   KIM M, 2005, EUR SOFTW ENG C FDN
   KOMONDOOR R, 2001, P INT S STAT AN
   KONTOGIANNIS K, 1996, AUTOMAT SOFTW ENG, V3, P79
   Koschke R, 1998, FIFTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P241, DOI 10.1109/WCRE.1998.723194
   Koschke R, 2006, WORK CONF REVERSE EN, P253
   Krinke Jens, 2001, WCRE
   Lague B, 1997, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P314, DOI 10.1109/ICSM.1997.624264
   LAGUE B, 1997, ICSM
   LANUBILE F, 2003, C SOFTW MAINT REENG
   LEITAO A, 2003, WORKSH SOURC COD AN
   Li ZM, 2006, IEEE T SOFTWARE ENG, V32, P176, DOI 10.1109/TSE.2006.28
   Li ZM, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDE '04), P289
   MANBER U, 1993, SIAM J COMPUT, V22, P935, DOI 10.1137/0222058
   MARCUS A, 2001, C AUT SOFTW ENG
   MCCREIGHT EM, 1976, J ACM, V23, P262, DOI 10.1145/321941.321946
   Monden A, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P87, DOI 10.1109/METRIC.2002.1011328
   Prechelt L., 2000, JPlag: Finding plagiarisms among a set of programs
   Rieger M., 2005, THESIS U BERN SWITZE
   Schleimer Saul, 2003, P 2003 ACM SIGMOD IN, P76, DOI [10.1145/872757.872770, DOI 10.1145/872757.872770]
   SHANNON CE, 1948, BELL SYST TECH J, V27, P623, DOI 10.1002/j.1538-7305.1948.tb00917.x
   UKKONEN E, 1995, ALGORITHMICA, V14, P249, DOI 10.1007/BF01206331
   VANRYSSELBERGHE F, 2004, C AUT SOFTW ENG
   WALTER V, 2004, WORKSH SOURC COD AN
   [No title captured]
   [No title captured]
NR 57
TC 45
Z9 52
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2008
VL 13
IS 6
BP 601
EP 643
DI 10.1007/s10664-008-9073-9
PG 43
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 398IL
UT WOS:000262725700002
DA 2024-07-18
ER

PT J
AU Knodel, J
   Muthig, D
   Naab, M
AF Knodel, Jens
   Muthig, Dirk
   Naab, Matthias
TI An experiment on the role of graphical elements in architecture
   visualization
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Architecture; Configurability; Experiment; Graphical elements;
   Maintenance; Program comprehension; SAVE; Visualization
AB The evolution and maintenance of large-scale software systems requires first an understanding of its architecture before delving into lower-level details. Tools facilitating the architecture comprehension tasks by visualization provide different sets of configurable, graphical elements to present information to their users. We conducted a controlled experiment that exemplifies the critical role of such graphical elements when aiming at understanding the architecture. In our setting, a different configuration of graphical elements had significant influence on program comprehension tasks. In particular, a 63% gain in effectiveness in architectural analysis tasks was achieved simply by changing the configuration of the graphical elements of the same tool. Based on the results, we claim that significant effort should be spent on the configuration of architecture visualization tools and that configurability should be a requirement for such tools.
C1 [Knodel, Jens; Muthig, Dirk; Naab, Matthias] Fraunhofer Inst Expt Software Engn IESE, D-67663 Kaiserslautern, Germany.
C3 Fraunhofer Gesellschaft
RP Naab, M (corresponding author), Fraunhofer Inst Expt Software Engn IESE, Fraunhofer Pl 1, D-67663 Kaiserslautern, Germany.
EM jens.knodel@iese.fraunhofer.de; dirk.muthig@iese.fraunhofer.de;
   matthias.naab@iese.fraunhofer.de
CR *AP TOMC, 2005, JAK SIT
   BALZER M, 2004, JOINT EUR IEEE TCVG, P261
   BASILI VR, 1988, IEEE T SOFTWARE ENG, V14, P758, DOI 10.1109/32.6156
   *BAUH, 2005, SOFTW REENG PROGR SO
   Bayer J., 2004, VIEW BASED SOFTWARE
   Beyer D, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P216, DOI 10.1109/WCRE.2003.1287252
   COHEN J, 1992, PSYCHOL BULL, V112, P155, DOI 10.1037/0033-2909.112.1.155
   CORBI TA, 1989, IBM SYST J, V28, P294, DOI 10.1147/sj.282.0294
   Davis PK, 2003, CANCER BIOL THER, V2, P22
   DEARMAN D, 2005, ADDING CONTROL FLOW, P297
   ERBEN N, 2005, VISSOFT 2005 3 IEEE, P1
   Fjeldstad Richard K., 1983, P GUIDE, V48
   Furnas G. W., 1986, ACM Sigchi Bull., V17, P16, DOI DOI 10.1145/22339.22342
   Hedges LV., 2014, STAT METHODS META AN
   HOLT R, 2002, INTRO GROK PROGRAMMI
   IEEE, 2000, 14712000 ANSIIEEE
   KNODEL J, 2006, STATIC ARCHITECTURE
   KNODEL J, 2006, P 2006 ACM S SOFTW V, P187
   Knodel J, 2006, WORK CONF REVERSE EN, P39
   Knodel J, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P277
   KOLB R, 2006, 10 INT SOFTW PROD LI, P172
   Koschke R, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P36, DOI 10.1109/WCRE.2003.1287235
   Koschke R, 2003, J SOFTW MAINT EVOL-R, V15, P87, DOI 10.1002/smr.270
   Krikhaar R., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P371, DOI 10.1109/ICSM.1999.792635
   Lanza M, 2003, OBJECT ORIENTED REVE
   Lehman M. M., 1985, Program Evolution: Processes of Software Change
   Lintern R., 2003, ACM S SOFTWARE VISUA, P47
   MALETIC JI, 2001, P 9 IEEE INT WORKSH
   Murphy GC, 2001, IEEE T SOFTWARE ENG, V27, P364, DOI 10.1109/32.917525
   NAAB M, 2005, 07805E IESE
   Navarro-Prieto R, 2001, INT J HUM-COMPUT ST, V54, P799, DOI 10.1006/ijhc.2000.0465
   Nosek J. T., 1990, Journal of Software Maintenance: Research and Practice, V2, P157, DOI 10.1002/smr.4360020303
   PACIONE MJ, 2004, EVALUATING MODEL SOF
   Panas T, 2003, SERP'03: PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH AND PRACTICE, VOLS 1 AND 2, P854
   *RIG, 2005, RIG VIS TOOL UND LEG
   Rugaber S., 1995, ENCY COMPUTER SCI TE, V35, P341
   Rus I, 2002, IEEE SOFTWARE, V19, P26, DOI 10.1109/MS.2002.1003450
   SERVLETS J, 2007, JAVA SERVLET TECHNOL
   Sim SE, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P184, DOI 10.1109/WCRE.2000.891465
   Sim SE, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P210, DOI 10.1109/WCRE.2000.891471
   SIM SE, 1999, P INT C SOFTW MAINT, P381, DOI DOI 10.1109/ICSM.1999.792636
   Storey MAD, 1995, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, 1995 PROCEEDINGS, P275, DOI 10.1109/ICSM.1995.526549
   Storey MAD, 1997, PROCEEDINGS OF THE FOURTH WORKING CONFERENCE ON REVERSE ENGINEERING, P12, DOI 10.1109/WCRE.1997.624572
   Storey MAD, 1997, IEEE SYMPOSIUM ON INFORMATION VISUALIZATION, PROCEEDINGS, P38, DOI 10.1109/INFVIS.1997.636784
   Systa Tarja., 1999, P WORKSHOP OBJECT OR, P304
   TERMEER M, 2005, VISSOFT 2005 3 IEEE, P1
   Weggeman M., 1999, WISSENSMANAGEMENT RI
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   WU J, 2000, P 2000 C CTR ADV STU, P15
   2005, IMAGIX4D
NR 50
TC 3
Z9 4
U1 0
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2008
VL 13
IS 6
BP 693
EP 726
DI 10.1007/s10664-008-9069-5
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 398IL
UT WOS:000262725700004
DA 2024-07-18
ER

PT J
AU Genero, M
   Manso, E
   Visaggio, A
   Canfora, G
   Piattini, M
AF Genero, Marcela
   Manso, Esperanza
   Visaggio, Aaron
   Canfora, Gerardo
   Piattini, Mario
TI Building measure-based prediction models for UML class diagram
   maintainability
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE maintainability; understandability; modifiability; UML; class diagrams;
   structural complexity; size; measures; empirical validation; controlled
   experiments; prediction model
ID METHODOLOGY; GUIDELINES; METRICS
AB The usefulness of measures for the analysis and design of object oriented (OO) software is increasingly being recognized in the field of software engineering research. In particular, recognition of the need for early indicators of external quality attributes is increasing. We investigate through experimentation whether a collection of UML class diagram measures could be good predictors of two main subcharacteristics of the maintainability of class diagrams: understandability and modifiability. Results obtained from a controlled experiment and a replica support the idea that useful prediction models for class diagrams understandability and modifiability can be built on the basis of early measures, in particular, measures that capture structural complexity through associations and generalizations. Moreover, these measures seem to be correlated with the subjective perception of the subjects about the complexity of the diagrams. This fact shows, to some extent, that the objective measures capture the same aspects as the subjective ones. However, despite our encouraging findings, further empirical studies, especially using data taken from real projects performed in industrial settings, are needed. Such further study will yield a comprehensive body of knowledge and experience about building prediction models for understandability and modifiability.
C1 Univ Castilla La Mancha, Dept Technol & Informat Syst, ALARCOS Res Grp, E-13071 Ciudad Real, Spain.
   Univ Valladolid, Dept Comp Sci, GIRO Res Grp, E-47011 Valladolid, Spain.
   Univ Sannio, RCOST, I-82100 Benevento, Italy.
C3 Universidad de Castilla-La Mancha; Universidad de Valladolid; University
   of Sannio
RP Genero, M (corresponding author), Univ Castilla La Mancha, Dept Technol & Informat Syst, ALARCOS Res Grp, Paseo Univ 4, E-13071 Ciudad Real, Spain.
EM Marcela.Genero@uclm.es; manso@infor.uva.es; visaggio@unisannio.it;
   canfora@unisannio.it; Mario.Piattini@uclm.es
RI Piattini, Mario/F-6271-2013; GENERO, MARCELA/L-6480-2014
OI Piattini, Mario/0000-0002-7212-8279; GENERO,
   MARCELA/0000-0002-6868-7465; Canfora, Gerardo/0000-0003-0049-1279;
   visaggio, Corrado Aaron/0000-0002-0558-4450
CR [Anonymous], 1996, ISERN9610 U STRATHCL
   [Anonymous], LECT NOTES COMPUTER
   [Anonymous], 1994, Object-oriented software metrics: a practical guide
   [Anonymous], 1997, Software metrics: A rigorous and practical approach
   [Anonymous], NRCERB1064
   [Anonymous], 1994, P 4 INT C SOFTWARE Q
   Atkinson C, 2003, IEEE SOFTWARE, V20, P36, DOI 10.1109/MS.2003.1231149
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   BASILI VR, 1984, IEEE T SOFTWARE ENG, V10, P728, DOI 10.1109/TSE.1984.5010301
   BASILI VR, 1988, IEEE T SOFTWARE ENG, V14, P758, DOI 10.1109/32.6156
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   BRAIND L, 2000, EMPIR SOFTW ENG, V4, P387
   Briand L, 1997, PROC INT CONF SOFTW, P412, DOI 10.1145/253228.253367
   BRIAND L, 1998, ISERN 9829
   Briand L. C., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P345, DOI 10.1109/ICSE.1999.841025
   Briand LC, 2002, ADV COMPUT, V56, P97, DOI 10.1016/S0065-2458(02)80005-5
   Briand LC, 2001, IEEE T SOFTWARE ENG, V27, P963, DOI 10.1109/32.965338
   Briand LC, 2001, IEEE T SOFTWARE ENG, V27, P513, DOI 10.1109/32.926174
   CALERO C, 2001, P 3 INT C ENT INF SY, P779
   Cantone G, 2000, INT J SOFTW ENG KNOW, V10, P605, DOI 10.1142/S0218194000000328
   CARD C, 2001, SOFTWARE PRODUCTIVIT
   Chapin N, 2001, J SOFTW MAINT EVOL-R, V13, P3, DOI 10.1002/smr.220
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Clyne Michael George, 2002, Tech. Rep., P1267, DOI 10.1007/978-0-387-30424-3_97
   Cook T., 1979, Quasi experimental design and analysis
   ELEMAM K, 2001, NRCERB 1085
   ERICKSON J, 2004, 10 AM C INF SYST NY, P1669
   Fioravanti F, 2001, IEEE T SOFTWARE ENG, V27, P1062, DOI 10.1109/32.988708
   GARCIA F, 2003, LECT NOTES COMPUTER, V2786, P129
   Genero M, 2003, LECT NOTES COMPUT SC, V2784, P288
   Genero M, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P263, DOI 10.1109/METRIC.2003.1232473
   Genero M, 2002, LECT NOTES COMPUT SC, V2425, P372
   GENERO M, 1998, EMPIR SOFTW ENG, V3, P255
   GENERO M, 2002, THESIS U CASTILLALA
   Genero M., 2000, EARLY MEASURES UML C, V6, P489
   HARDIN JM, 2002, GENERALIZED ESTIMATI
   Harrison R, 2000, J SYST SOFTWARE, V52, P173, DOI 10.1016/S0164-1212(99)00144-2
   HENDERSONSELLER.B, 1996, OBJECT ORIENTED METR, P489
   *ISO IEC, 2001, 912612 ISO IEC
   JOHNSON DE, 2001, APPL MULTIVARIATE ME
   Juristo N., 2013, BASICS SOFTWARE ENG
   Kiewkanya M., 2004, "Second Workshop on Software Quality" W13S Workshop - 26th International Conference on Software Engineering, P53, DOI 10.1049/ic:20040327
   Kiewkanya M, 2004, QSIC 2004: PROCEEDINGS OF THE FOURTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, P206
   KIM H, 2002, P 6 ECOOP WORKSH QUA
   KITCHENHAM B, 1995, IEEE T SOFTWARE ENG, V21, P929, DOI 10.1109/32.489070
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kleinbaum D., 1987, Applied Regression Analysis and Other Multivariable Methods, V2nd
   LI W, 1993, J SYST SOFTW, V23
   Manso E, 2003, LECT NOTES COMPUT SC, V2681, P127
   Marchesi M, 1998, SECOND EUROMICRO CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P67, DOI 10.1109/CSMR.1998.665739
   Mendes E, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P131, DOI 10.1109/METRIC.2002.1011332
   Miller J, 2000, J SYST SOFTWARE, V54, P29, DOI 10.1016/S0164-1212(00)00024-8
   *OMG, 2001, UNIF MOD LANG UML SP
   *OMG, 2005, OBJ MAN GROUP UML 2
   POELS G, 2000, INF SOFTW TECHNOL, V42, P5
   *SAS I, 1999, SASSTAT US GUID VERS
   SCHNEIDEWIND NF, 1992, IEEE T SOFTWARE ENG, V18, P410, DOI 10.1109/32.135774
   Schneidewind NF, 2002, COMPUTER, V35, P77, DOI 10.1109/2.982919
   Selic B, 2003, IEEE SOFTWARE, V20, P19, DOI 10.1109/MS.2003.1231146
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   SISAID C, 2002, 21 INT C CONC MOD, V2503, P499
   Snedecor GW, 1983, Statistical Methods, V6th
   *SPSS INC, 2002, SPSS 11 5 SYNT REF G
   Van Solingen Rini, 1999, The Goal/ Question/ Metric Method: a practical guide for quality improvement of software development
   Vokác M, 2004, EMPIR SOFTW ENG, V9, P149, DOI 10.1023/B:EMSE.0000027778.69251.1f
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
NR 66
TC 39
Z9 41
U1 0
U2 7
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2007
VL 12
IS 5
BP 517
EP 549
DI 10.1007/s10664-007-9038-4
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 213DU
UT WOS:000249647100004
DA 2024-07-18
ER

PT J
AU Karlström, D
   Runeson, P
AF Karlström, D
   Runeson, P
TI Integrating agile software development into stage-gate managed product
   development
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE agile methods; stage-gate project management; qualitative study; extreme
   programming; case studies
ID XP
AB Agile methods have evolved as a bottom-up approach to software development. However, as the software in embedded products is only one part of development projects, agile methods must coexist with project management models typically of the stage-gate type. This paper presents a qualitative case study of two large independent software system projects that have used eXtreme Programming (XP) for software development within contexts of stage-gate project management models. The study is comprised of open ended interviews with managers as well as practitioners, followed by a structured, fully traceable, qualitative analysis. We conclude that it is possible to integrate XP in a gate model context. Key issues for success are the interfaces towards the agile subproject and management attitudes towards the agile approach.
C1 Lund Univ, Dept Commun Syst, SE-22100 Lund, Sweden.
C3 Lund University
RP Lund Univ, Dept Commun Syst, Box 118, SE-22100 Lund, Sweden.
EM daniel.karlstrom@telecom.lth.se
RI Runeson, Per/H-5113-2019
OI Runeson, Per/0000-0003-2795-4851
CR [Anonymous], 1995, The Capability Maturity Model: Guidelines for Improving the Software Process
   Beck K., 2000, EXTREME PROGRAMMING
   Boehm B.W., 2004, Balancing Agility and Discipline: A Guide for the Perplexed
   Cooper RobertG., 2001, Winning at New Products: Accelerating the Process from Idea to Launch, V3rd
   FUQUA AM, 2003, 4 INT C XP 2003 GEN
   GILB T, 1998, PRINCIPLES SOFTWARE
   Grenning J, 2001, IEEE SOFTWARE, V18, P27, DOI 10.1109/52.965799
   Karlström D, 2005, IEEE SOFTWARE, V22, P43, DOI 10.1109/MS.2005.59
   Karlstrom D., 2002, P 3 INT C EXTREME PR
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Mulder L, 1997, R&D MANAGE, V27, P189, DOI 10.1111/1467-9310.00056
   Murru O, 2003, IEEE SOFTWARE, V20, P37, DOI 10.1109/MS.2003.1196318
   Patton M. Q, 2004, Qualitative research & evaluation methods, V4
   Paulk Mark., 1993, Encyclopedia of Software Engineering
   Paulk MC, 2001, IEEE SOFTWARE, V18, P19, DOI 10.1109/52.965798
   PAULK MC, 1999, 11 SOFTW ENG PROC GR, P8
   Poole C, 2001, IEEE SOFTWARE, V18, P42, DOI 10.1109/52.965801
   Rainer A, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P326, DOI 10.1109/ISESE.2003.1237993
   Rasmusson J, 2003, IEEE SOFTWARE, V20, P21, DOI 10.1109/MS.2003.1196316
   Robson C., 2002, Real world research
   Royce W.E., 1998, AW OBJ TECHNOL S
   Schuh P, 2001, IEEE SOFTWARE, V18, P34, DOI 10.1109/52.965800
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Sharp H, 2004, EMPIR SOFTW ENG, V9, P353, DOI 10.1023/B:EMSE.0000039884.79385.54
   VANHANEN J, 2003, 4 INT C XP 2003 GEN
   Wallin C, 2002, IEEE SOFTWARE, V19, P28, DOI 10.1109/MS.2002.1049384
   Yin R., 1994, CASE STUDY RES DESIG
NR 27
TC 67
Z9 78
U1 3
U2 45
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2006
VL 11
IS 2
BP 203
EP 225
DI 10.1007/s10664-006-6402-8
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 020RV
UT WOS:000235928900002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Khoshgoftaar, TM
   Seliya, N
AF Khoshgoftaar, TM
   Seliya, N
TI Comparative assessment of software quality classification techniques: An
   empirical case study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE software quality classification; decision trees; case-based reasoning;
   logistic regression; expected cost of misclassification; analysis of
   variance
ID MODELS; TREES
AB Software metrics-based quality classification models predict a software module as either faultprone (fp) or not fault-prone (nfp). Timely application of such models can assist in directing quality improvement efforts to modules that are likely to be fp during operations, thereby cost-effectively utilizing the software quality testing and enhancement resources. Since several classification techniques are available, a relative comparative study of some commonly used classification techniques can be useful to practitioners.
   We present a comprehensive evaluation of the relative performances of seven classification techniques and/or tools. These include logistic regression, case-based reasoning, classification and regression trees (CART), tree-based classification with S-PLUS, and the Sprint-Sliq, C4.5, and Treedisc algorithms. The use of expected cost of inisclassification (ECM), is introduced as a singular unified measure to compare the performances of different software quality classification models. A function of the costs of the Type I (a nfp module misclassified as fp) and Type II (a fp module misclassified as nfp) misclassifications, ECM is computed for different cost ratios. Evaluating software quality classification models in the presence of varying cost ratios is important, because the usefulness of a model is dependent on the system-specific costs of misclassifications. Moreover, models should be compared and preferred for cost ratios that fall within the range of interest for the given system and project domain. Software metrics were collected from four successive releases of a large legacy telecommunications system. A two-way ANOVA randomized complete block design modeling approach is used, in which the system release is treated as a block, while the modeling method is treated as a factor. It is observed that predictive performances of the models is significantly different across the system releases, implying that in the software engineering domain prediction models are influenced by the characteristics of the data and the system being modeled. Multiple pairwise comparisons are performed to evaluate the relative performances of the seven models for the cost ratios of interest to the case study. In addition, the performance of the seven classification techniques is also compared with a classification based on lines of code. The comparative approach presented in this paper can also be applied to other software systems.
C1 Florida Atlantic Univ, Dept Comp Sci & Engn, Empir Software Engn Lab, Boca Raton, FL 33431 USA.
C3 State University System of Florida; Florida Atlantic University
RP Florida Atlantic Univ, Dept Comp Sci & Engn, Empir Software Engn Lab, Boca Raton, FL 33431 USA.
EM taghi@cse.fau.edu
CR [Anonymous], 1996, CASE BASED REASONING
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Beaumont GP., 1996, Statistical Tests: An introduction with MINITAB commentary
   Berenson M.L., 1983, INTERMEDIATE STAT ME
   Breiman L, 1998, BIOMETRICS, DOI [10.1201/9781315139470, DOI 10.2307/2530946]
   Briand LC, 2002, IEEE T SOFTWARE ENG, V28, P706, DOI 10.1109/TSE.2002.1019484
   BRIAND LC, 1993, IEEE T SOFTWARE ENG, V19, P1028, DOI 10.1109/32.256851
   Clark L.A., 2017, Statistical models in S, P377, DOI [DOI 10.1201/9780203738535, 10.1201/9780203738535]
   Ebert C, 1996, SOFTWARE QUAL J, V5, P255, DOI 10.1007/BF00209184
   Fayyad UM, 1996, IEEE EXPERT, V11, P20, DOI 10.1109/64.539013
   JOHNSON RA, 1992, APPL MULRIVARITAE ST
   Khoshgoftaar T., 1999, International Journal of Reliability, Quality and Safety Engineering, V6, P303
   Khoshgoftaar T. G., 2001, Empirical Software Engineering, V6, P59, DOI 10.1023/A:1009803004576
   Khoshgoftaar TM, 2000, IEEE T RELIAB, V49, P209, DOI 10.1109/24.877340
   Khoshgoftaar TM, 2002, IEEE T RELIAB, V51, P455, DOI 10.1109/TR.2002.804488
   Khoshgoftaar TM, 2002, PROC INT C TOOLS ART, P365, DOI 10.1109/TAI.2002.1180826
   Khoshgoftaar TM, 2000, IEEE T RELIAB, V49, P4, DOI 10.1109/24.855532
   Khoshgoftaar TM, 1997, IEEE T NEURAL NETWOR, V8, P902, DOI 10.1109/72.595888
   Kolodner J.L., 1993, Case-Based Reasoning
   MEHTA M, 1996, IBM WHITE PAPER SERI
   Myers R. H., 1990, CLASSICAL MODERN REG
   Neter J., 1996, APPL LINEAR STAT MOD, V81, P1126
   Ohlsson MC, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P217, DOI 10.1109/METRIC.2002.1011340
   OHLSSON MC, 1996, P INT C SOFTW QUAL O, P1
   Ohlsson N, 1998, SOFTWARE QUAL J, V7, P51, DOI 10.1023/A:1008844909795
   Paul R., 1992, Proceedings. Fourth International Conference on Tools with Artificial Intelligence, TAI '92 (Cat. No. 92CH3203-7), P108, DOI 10.1109/TAI.1992.246366
   Ping Yu, 2002, Proceedings of the Sixth European Conference on Software Maintenance and Reengineering, P99, DOI 10.1109/CSMR.2002.995794
   Pizzi NJ, 2002, IEEE IJCNN, P2405, DOI 10.1109/IJCNN.2002.1007518
   PONNUSWAMY V, 2001, THESIS FLORIDA ATLAN
   Quinlan J. R., 1993, PROGRAMS MACHINE LEA
   ROSS FD, 2001, THESIS FLORIDA ATLAN
   Schneidewind N. F., 1995, Annals of Software Engineering, V1, P287, DOI 10.1007/BF02249054
   Schneidewind NF, 2000, SEVENTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 2001, PROCEEDINGS, P328, DOI 10.1109/METRIC.2001.915540
   SHAFER J, 1996, IBM WHITE PAPER SERI
   Shepperd M, 2001, IEEE T SOFTWARE ENG, V27, P1014, DOI 10.1109/32.965341
   STEINBERG D, 1995, CART SUPPLEMENTARY M
   Suárez A, 1999, IEEE T PATTERN ANAL, V21, P1297, DOI 10.1109/34.817409
   Takahashi R, 1997, EIGHTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P222, DOI 10.1109/ISSRE.1997.630869
   VOTTA LG, 1995, PROC INT CONF SOFTW, P277, DOI 10.1145/225014.225040
NR 39
TC 113
Z9 123
U1 0
U2 10
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2004
VL 9
IS 3
BP 229
EP 257
DI 10.1023/B:EMSE.0000027781.18360.9b
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 836LM
UT WOS:000222557200004
DA 2024-07-18
ER

PT J
AU Stensrud, E
   Foss, T
   Kitchenham, B
   Myrtveit, I
AF Stensrud, E
   Foss, T
   Kitchenham, B
   Myrtveit, I
TI A further empirical investigation of the relationship between MRE and
   project size
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE software engineering; project cost estimation; evaluation metrics;
   magnitude of relative error; empirical validation
ID REGRESSION
AB The mean magnitude of relative error, MM RE, is the de facto standard evaluation criterion to assess the accuracy of software project prediction models. The fundamental metric of MMRE is MRE, a relative residual error. For MMRE to be a meaningful summary statistic, it is a necessary, but not sufficient. condition that MRE and project size are uncorrelated. Except for two previous conference studies done by the same authors, it has never been empirically validated that M RE and project size really are uncorrelated. In this paper, we extend the previous studies using the same data sets as before: Albrecht, Kemerer, Finnish, DMR and Accenture-ERP. Unlike the previous studies, we plot MIZE against the predicted effort rather than against the actual effort and, in so doing, we obtain very different results from the previous studies. The results of this study suggest that MRE and project size are uncorrelated, which apparently is contradictory to the previous results where we found a negative correlation. The explanation for these seemingly contradictory results is presented in this study.
C1 Norwegian Sch Management, Sandvika, Norway.
   Keele Univ, Keele, Staffs, England.
C3 BI Norwegian Business School; Keele University
RP Norwegian Sch Management, Sandvika, Norway.
EM erik.stensrud@bi.no; tron.foss@bi.no; b.a.kitchenham@cs.keele.ac.uk;
   ingunn.myrtveit@bi.no
RI Kitchenham, Barbara/AAL-4311-2020
OI Kitchenham, Barbara/0000-0002-6134-8460
CR ALBRECHT AJ, 1983, IEEE T SOFTWARE ENG, V9, P639, DOI 10.1109/TSE.1983.235271
   [Anonymous], 1986, Software Engineering Metrics and Models
   [Anonymous], 1989, THESIS U QUEBEC MONT
   BRIAND LC, 2001, ENCY SOFTWARE ENG
   FOSS T, 2002, 32002 NORW SCH MAN
   FOSS T, 2001, P ESCOM, P157
   FOSS T, 2001, P 12 EUR SOFTW CONTR, P9
   Gujarati D.N., 1995, Basic Econometric, VThird
   Gujarati D.N., 2003, BASIC ECONOMETRICS, V4th
   KEMERER CF, 1987, COMMUN ACM, V30, P416, DOI 10.1145/22899.22906
   Kitchenham B., 1993, Proceedings First International Software Metrics Symposium (Cat. No.93TH0518-1), P11, DOI 10.1109/METRIC.1993.263805
   Kitchenham B. A., 2001, IEE Proceedings-Software, V148, P81, DOI 10.1049/ip-sen:20010506
   Little RJ, 1987, STAT ANAL MISSING DA
   MIYAZAKI Y, 1994, J SYST SOFTWARE, V27, P3, DOI 10.1016/0164-1212(94)90110-4
   Myrtveit I, 2001, IEEE T SOFTWARE ENG, V27, P999, DOI 10.1109/32.965340
   Myrtveit I, 1999, IEEE T SOFTWARE ENG, V25, P510, DOI 10.1109/32.799947
   Rosenberg J, 1997, FOURTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P137, DOI 10.1109/METRIC.1997.637174
   Stensrud E, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P3, DOI 10.1109/METRIC.2002.1011320
   Stensrud E, 1998, FIFTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 1998, PROCEEDINGS, P205, DOI 10.1109/METRIC.1998.731247
   STENSRUD E, 1998, P COCOMO 13
NR 20
TC 24
Z9 26
U1 1
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2003
VL 8
IS 2
BP 139
EP 161
DI 10.1023/A:1023010612345
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 803OV
UT WOS:000220241300002
DA 2024-07-18
ER

PT J
AU Giraudo, G
   Tonella, P
AF Giraudo, G
   Tonella, P
TI Designing and conducting an empirical study on test management
   automation
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE test management; process improvement; empirical study
AB ATest management aims at organizing, documenting and executing test cases, and at generating execution reports. The adoption of a support tool and of a standard process for such activities is expected to improve the current practice. ITALO is a European project devoted to the evaluation of the benefits coming from test management automation.
   In this paper the experiences collected and the lessons learned during ITALO are summarized. A formal methodology was adopted for the selection of a support tool among those available from the market. A survey of the current practice in component testing was conducted to adapt the existing process model so as to obtain the greatest benefits from automation. An empirical study was then designed to measure the effects that are expected to be produced by the new test process complemented with the introduction of the support tool.
   Three pilot projects were conducted to measure the benefits obtained from tool usage and process modification. Results are presented and discussed in this paper.
C1 Sodalia SpA, I-38100 Trent, Italy.
   ITC Irst, I-38050 Trent, Italy.
RP Giraudo, G (corresponding author), Sodalia SpA, Via V Zambra,1, I-38100 Trent, Italy.
EM griselda.giraudo@sodalia.it; tonella@itc.it
RI Tonella, Paolo/C-1702-2015
OI Tonella, Paolo/0000-0003-3088-0339
CR ANTONIOL G, 1999, P PROF 99 INT C PROD, P103
   BAILI VR, 1993, LECT NOTES COMPUTER, V717
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   BOLZAN E, 1996, VERIFICATION VALIDAT
   GABURRO P, 1996, 10824 ESSI PIE SIMTE
   GIRAUDO G, 1998, 27912 ESSI PIE ITALO
   KEMERER CF, 1992, IEEE SOFTWARE, V9, P23, DOI 10.1109/52.136161
   KITCHENHAM B, 1995, IEEE SOFTWARE, V12, P52, DOI 10.1109/52.391832
   Kitchenham B., 1996, DESMET METHOD EVALUA
   LACOMMARE G, 2000, P EWPST 2000 EUR WOR, P156
   MARTIN M, 1996, 10360 ESSI PIE PHOEN
   PFLEEGER SL, 1994, EXPT DESIGN ANAL S 1
   TONELLA P, 1998, 27912 ESSI PIE ITALO
   Wright T.P., 1936, Journal of Aeronautical Science, V3
NR 14
TC 5
Z9 6
U1 0
U2 2
PU KLUWER ACADEMIC PUBL
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2003
VL 8
IS 1
BP 59
EP 81
DI 10.1023/A:1021720916127
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 803OU
UT WOS:000220241200003
DA 2024-07-18
ER

PT J
AU Wu, XF
   Li, H
   Khomh, F
AF Wu, Xingfang
   Li, Heng
   Khomh, Foutse
TI On the effectiveness of log representation for log-based anomaly
   detection
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Log representation; Anomaly detection; Automated log analysis
AB Logs are an essential source of information for people to understand the running status of a software system. Due to the evolving modern software architecture and maintenance methods, more research efforts have been devoted to automated log analysis. In particular, machine learning (ML) has been widely used in log analysis tasks. In ML-based log analysis tasks, converting textual log data into numerical feature vectors is a critical and indispensable step. However, the impact of using different log representation techniques on the performance of the downstream models is not clear, which limits researchers and practitioners' opportunities of choosing the optimal log representation techniques in their automated log analysis workflows. Therefore, this work investigates and compares the commonly adopted log representation techniques from previous log analysis research. Particularly, we select six log representation techniques and evaluate them with seven ML models and four public log datasets (i.e., HDFS, BGL, Spirit and Thunderbird) in the context of log-based anomaly detection.We also examine the impacts of the log parsing process and the different feature aggregation approaches when they are employed with log representation techniques. From the experiments, we provide some heuristic guidelines for future researchers and developers to follow when designing an automated log analysis workflow. We believe our comprehensive comparison of log representation techniques can help researchers and practitioners better understand the characteristics of different log representation techniques and provide them with guidance for selecting the most suitable ones for their ML-based log analysis workflow.
C1 [Wu, Xingfang; Li, Heng; Khomh, Foutse] Polytech Montreal, Dept Comp Engn & Software Engn, Montreal, PQ, Canada.
C3 Universite de Montreal; Polytechnique Montreal
RP Wu, XF (corresponding author), Polytech Montreal, Dept Comp Engn & Software Engn, Montreal, PQ, Canada.
EM xingfang.wu@polymtl.ca; heng.li@polymtl.ca; foutse.khomh@polymtl.ca
OI Wu, Xingfang/0000-0001-7040-3751; Li, Heng/0000-0001-5441-6763
CR Nguyen KA, 2016, Arxiv, DOI arXiv:1605.07766
   Chen M, 2004, INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING, PROCEEDINGS, P36, DOI 10.1109/ICAC.2004.1301345
   Chen ZB, 2022, Arxiv, DOI arXiv:2107.05908
   Chow Michael, 2014, P 11 S OP SYST DES I, P217
   Dai HT, 2022, IEEE T SOFTWARE ENG, V48, P879, DOI 10.1109/TSE.2020.3007554
   Devlin J, 2019, Arxiv, DOI arXiv:1810.04805
   Du M, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1285, DOI 10.1145/3133956.3134015
   El-Sayed N, 2017, INT CON DISTR COMP S, P1333, DOI 10.1109/ICDCS.2017.317
   Fu Q, 2013, IEEE WORK CONF MIN S, P397, DOI 10.1109/MSR.2013.6624054
   Fu QA, 2009, IEEE DATA MINING, P149, DOI 10.1109/ICDM.2009.60
   Grave E, 2018, PROCEEDINGS OF THE ELEVENTH INTERNATIONAL CONFERENCE ON LANGUAGE RESOURCES AND EVALUATION (LREC 2018), P3483
   HANSEN SE, 1993, PROCEEDINGS OF THE SEVENTH SYSTEMS ADMINISTRATION CONFERENCE (LISA VII), P145
   He PJ, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2017), P33, DOI 10.1109/ICWS.2017.13
   He SL, 2021, ACM COMPUT SURV, V54, DOI 10.1145/3460345
   He SL, 2016, PROC INT SYMP SOFTW, P207, DOI 10.1109/ISSRE.2016.21
   Jarry R, 2021, P INT COMP SOFTW APP, P1437, DOI 10.1109/COMPSAC51774.2021.00213
   Katkar DGS, 2014, Current Trends in Technology and Science, V3
   Khan ZA, 2022, PROC INT CONF SOFTW, P1095, DOI 10.1145/3510003.3510101
   Le VH, 2023, Arxiv, DOI arXiv:2302.07435
   Le VH, 2022, PROC INT CONF SOFTW, P1356, DOI 10.1145/3510003.3510155
   Li XY, 2020, PROC INT SYMP SOFTW, P92, DOI 10.1109/ISSRE5003.2020.00018
   Liang YL, 2007, IEEE DATA MINING, P583, DOI 10.1109/ICDM.2007.46
   Liao LZ, 2020, EMPIR SOFTW ENG, V25, P4130, DOI 10.1007/s10664-020-09866-z
   Liu FT, 2012, ACM T KNOWL DISCOV D, V6, DOI 10.1145/2133360.2133363
   Liu YD, 2022, PROCEEDINGS OF THE ACM WEB CONFERENCE 2022 (WWW'22), P1893, DOI 10.1145/3485447.3511993
   Lou J. G., 2010, 2010 USENIX ANN TECH
   Lu SY, 2018, 2018 16TH IEEE INT CONF ON DEPENDABLE, AUTONOM AND SECURE COMP, 16TH IEEE INT CONF ON PERVAS INTELLIGENCE AND COMP, 4TH IEEE INT CONF ON BIG DATA INTELLIGENCE AND COMP, 3RD IEEE CYBER SCI AND TECHNOL CONGRESS (DASC/PICOM/DATACOM/CYBERSCITECH), P151, DOI 10.1109/DASC/PiCom/DataCom/CyberSciTec.2018.00037
   Lyu YZ, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3447876
   Meng WB, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P4739
   Meng WB, 2021, IEEE T NETW SERV MAN, V18, P1870, DOI 10.1109/TNSM.2021.3055425
   Nagaraj K, 2012, P 9 USENIX C NETW SY, P353
   Nedelkoski S, 2020, IEEE DATA MINING, P1196, DOI 10.1109/ICDM50108.2020.00148
   Oliner A, 2012, COMMUN ACM, V55, P63, DOI 10.1145/2076450.2076466
   Oliner A, 2007, I C DEPEND SYS NETWO, P575, DOI 10.1109/DSN.2007.103
   Pinjia He, 2016, 2016 46th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN). Proceedings, P654, DOI 10.1109/DSN.2016.66
   Prewett J. E., 2003, P 4 ANN C LIN CLUST
   Rouillard JP, 2004, USENIX Association Proceedings of the Eighteenth Large Installation System Administration Conference, P133
   Rusticus S. A., 2019, Practical Assessment, Research, and Evaluation, V19, P11, DOI [DOI 10.7275/4S9M-4E81, 10.7275/4s9m-4e81]
   SALTON G, 1988, INFORM PROCESS MANAG, V24, P513, DOI 10.1016/0306-4573(88)90021-0
   Schroeder B, 2007, USENIX ASSOCIATION PROCEEDINGS OF THE 5TH USENIX CONFERENCE ON FILE AND STORAGE TECHNOLOGIES ( FAST '07), P1
   Shang WY, 2014, J SOFTW-EVOL PROC, V26, P3, DOI 10.1002/smr.1579
   Tantithamthavorn C, 2019, IEEE T SOFTWARE ENG, V45, P683, DOI 10.1109/TSE.2018.2794977
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Turc I, 2019, Arxiv, DOI arXiv:1908.08962
   van der Maaten L, 2008, J MACH LEARN RES, V9, P2579
   Le VH, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P492, DOI 10.1109/ASE51524.2021.9678773
   Vaswani A, 2017, ADV NEUR IN, V30
   Wan Y, 2021, LECT NOTES ARTIF INT, V12712, P66, DOI 10.1007/978-3-030-75762-5_6
   Wang MY, 2018, 2018 4TH INTERNATIONAL CONFERENCE ON FRONTIERS OF SIGNAL PROCESSING (ICFSP 2018), P140, DOI 10.1109/ICFSP.2018.8552075
   Xie YZ, 2022, Arxiv, DOI arXiv:2209.07869
   Xu W, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P117
   Yuan D, 2012, PROC INT CONF SOFTW, P102, DOI 10.1109/ICSE.2012.6227202
   Yuan D, 2010, ASPLOS XV: FIFTEENTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS, P143
   Zhang X, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P807, DOI 10.1145/3338906.3338931
   Zhu JM, 2023, Arxiv, DOI arXiv:2008.06448
   Zhu JM, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P121, DOI 10.1109/ICSE-SEIP.2019.00021
NR 56
TC 1
Z9 1
U1 2
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2023
VL 28
IS 6
AR 137
DI 10.1007/s10664-023-10364-1
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA T7HH5
UT WOS:001079649400001
DA 2024-07-18
ER

PT J
AU Sharma, T
   Georgiou, S
   Kechagia, M
   Ghaleb, TA
   Sarro, F
AF Sharma, Tushar
   Georgiou, Stefanos
   Kechagia, Maria
   Ghaleb, Taher A.
   Sarro, Federica
TI Investigating developers' perception on software testability and its
   effects
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software testability; Software test quality; Testability smells;
   Developers' opinions and perspectives; Software quality
ID THRESHOLDS; METRICS; DESIGN; CODE
AB The opinions and perspectives of software developers are highly regarded in software engineering research. The experience and knowledge of software practitioners are frequently sought to validate assumptions and evaluate software engineering tools, techniques, and methods. However, experimental evidence may unveil further or different insights, and in some cases even contradict developers' perspectives. In this work, we investigate the correlation between software developers' perspectives and experimental evidence about testability smells (i.e., programming practices that may reduce the testability of a software system). Specifically, we first elicit opinions and perspectives of software developers through a questionnaire survey on a catalog of four testability smells, we curated for this work. We also extend our tool DesigniteJava to automatically detect these smells in order to gather empirical evidence on testability smells. To this end we conduct a large-scale empirical study on 1, 115 Java repositories containing approximately 46 million lines of code to investigate the relationship of testability smells with test quality, number of tests, and reported bugs. Our results show that testability smells do not correlate with test smells at the class granularity or with test suit size. Furthermore, we do not find a causal relationship between testability smells and bugs. Moreover, our results highlight that the empirical evidence does not match developers' perspective on testability smells. Thus, suggesting that despite developers' invaluable experience, their opinions and perspectives might need to be complemented with empirical evidence before bringing it into practice. This further confirms the importance of data-driven software engineering, which advocates the need and value of ensuring that all design and development decisions are supported by data.
C1 [Sharma, Tushar] Dalhousie Univ, Halifax, NS, Canada.
   [Georgiou, Stefanos] simpleTechs, Berlin, Germany.
   [Kechagia, Maria; Sarro, Federica] UCL, London, England.
   [Ghaleb, Taher A.] Univ Ottawa, Ottawa, ON, Canada.
C3 Dalhousie University; University of London; University College London;
   University of Ottawa
RP Sharma, T (corresponding author), Dalhousie Univ, Halifax, NS, Canada.
EM tushar@dal.ca; stefanos1316@gmail.com; m.kechagia@ucl.ac.uk;
   taher.a.ghaleb@gmail.com; f.sarro@ucl.ac.uk
OI Sharma, Tushar/0000-0002-0538-052X
FU ERC [741278]
FX Maria Kechagia and Federica Sarro are supported by the ERC grant no.
   741278 (EPIC).
CR Al-Subaihin AA, 2021, IEEE T SOFTWARE ENG, V47, P300, DOI 10.1109/TSE.2019.2891715
   Alenezi M, 2018, i-Manager's Journal on Software Engineering, V12, P12
   Aljedaani W, 2021, PROCEEDINGS OF EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING (EASE 2021), P170, DOI 10.1145/3463274.3463335
   Arar ÖF, 2016, EXPERT SYST APPL, V61, P106, DOI 10.1016/j.eswa.2016.05.018
   Bavota G, 2015, EMPIR SOFTW ENG, V20, P1052, DOI 10.1007/s10664-014-9313-0
   Bavota G, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P56, DOI 10.1109/ICSM.2012.6405253
   BERRY KJ, 1988, EDUC PSYCHOL MEAS, V48, P921, DOI 10.1177/0013164488484007
   BINDER RV, 1994, COMMUN ACM, V37, P87, DOI 10.1145/182987.184077
   Bruntink M, 2006, J SYST SOFTWARE, V79, P1219, DOI 10.1016/j.jss.2006.02.036
   Chowdhary V, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P260, DOI 10.1109/ICST.2009.53
   Couto C, 2013, Bugmaps-granger: A tool for causality analysis between source code metrics and bugs
   Cox D. R., 1965, THEORY STOCHASTIC PR
   Devanbu P, 2016, PROC INT CONF SOFTW, P108, DOI 10.1145/2884781.2884812
   Eck M, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P830, DOI 10.1145/3338906.3338945
   Eposhi A, 2019, INT C PROGRAM COMPRE, P148, DOI 10.1109/ICPC.2019.00032
   Fatima S, 2022, IEEE Trans Softw Eng
   Feathers Michael, 2004, Working Effectively With Legacy Code: Work Effect Leg Code
   Filho FGS, 2020, 19 BRAZ S SOFTW QUAL
   FREEDMAN RS, 1991, IEEE T SOFTWARE ENG, V17, P553, DOI 10.1109/32.87281
   FULLER WA, 1976, INTRO STAT TIME SERI
   Garousi V, 2018, Guidelines for including grey literature and conducting multivocal literature reviews in software engineering
   Garousi V, 2019, INFORM SOFTWARE TECH, V108, P35, DOI 10.1016/j.infsof.2018.12.003
   Garousi V, 2018, J SYST SOFTWARE, V138, P52, DOI 10.1016/j.jss.2017.12.013
   GRANGER CWJ, 1969, ECONOMETRICA, V37, P424, DOI 10.2307/1912791
   Hassan MM, 2015, PROCEEDINGS 41ST EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS SEAA 2015, P341, DOI 10.1109/SEAA.2015.47
   Hevery M, 2008, Writing Testable Code
   Human M, 2022, Why You Should Be Replacing Full Stack Tests with Ember Tests
   Janes A.A., 2012, Proceedings of the ACM international symposium on New ideas, new paradigms, and reflections on programming and software, P215
   Jeffrey VM, 1991, Technical report
   Junior NS, 2020, A survey on test practitioners' awareness of test smells
   Kaczanowski T, 2013, Practical Unit Testing with JUnit and Mockito. Tomasz Kaczanowski
   Khan R.A., 2009, ACM SIGSOFT Software Eng. Notes, V34, P1, DOI [10.1145/1507195.1507204, DOI 10.1145/1507195.1507204, DOI 10.1145/1507195.15072]
   Kim DJ, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09969-1
   Kolb R., 2006, Proceedings of the ISSTA 2006 Workshop on Role of Software Architecture for Testing and Analysis, P22
   KWIATKOWSKI D, 1992, J ECONOMETRICS, V54, P159, DOI 10.1016/0304-4076(92)90104-Y
   LeTraon Y, 1995, PROCEEDINGS - INTERNATIONAL TEST CONFERENCE 1995, P710, DOI 10.1109/TEST.1995.529901
   LeTraon Y, 1997, FOURTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P91, DOI 10.1109/METRIC.1997.637169
   Liang Zhao, 2006, 28th International Conference on Software Engineering Proceedings, P985, DOI 10.1145/1134285.1134469
   LIEBERHERR KJ, 1989, SIGPLAN NOTICES, V24, P67, DOI 10.1145/66083.66089
   Lo BWN, 1998, 1998 INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: EDUCATION & PRACTICE, PROCEEDINGS, P330, DOI 10.1109/SEEP.1998.707667
   Marshall L, 2000, Department of Computing Science Technical Report Series
   Moonen Leon, 2001, P 2 INT C EXTR PROGR
   Mouchawrab S, 2005, INFORM SOFTWARE TECH, V47, P979, DOI 10.1016/j.infsof.2005.09.003
   Munaiah N, 2017, EMPIR SOFTW ENG, V22, P3219, DOI 10.1007/s10664-017-9512-6
   Murphy-Hill E, 2012, IEEE T SOFTWARE ENG, V38, P5, DOI 10.1109/TSE.2011.41
   Nguyen TB, 2002, PROC IEEE INT CONF S, P422, DOI 10.1109/ICSM.2002.1167799
   Oizumi W, 2019, PROC INT SYMP SOFTW, P346, DOI 10.1109/ISSRE.2019.00042
   Oliveira P, 2014, PROC IEEE INT CONF S, P629, DOI 10.1109/ICSME.2014.112
   Oliveira P, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P254, DOI 10.1109/CSMR-WCRE.2014.6747177
   Palomba F, 2018, INFORM SOFTWARE TECH, V99, P1, DOI 10.1016/j.infsof.2018.02.004
   Payne J. E., 1997, Object Magazine, V7, P34
   Peruma A, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1650, DOI 10.1145/3368089.3417921
   Pettichord B, 2002, PAC NW SOFTW QUAL C, P1
   Pina D, 2022, INTERNATIONAL CONFERENCE ON TECHNICAL DEBT 2022 (TECHDEBT 2022), P46, DOI 10.1145/3524843.3528096
   Rahman Foyzur, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P72, DOI 10.1109/MSR.2010.5463343
   Ribeiro DM, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962624
   Sharma T, 2018, DesigniteJava
   Sharma T, 2022, Replication Package for Testability Study
   Sharma T, 2020, EMPIR SOFTW ENG, V25, P4020, DOI 10.1007/s10664-020-09847-2
   Singh Pradeep Kumar, 2015, International Journal of Information Technology and Computer Science, V7, P18, DOI 10.5815/ijitcs.2015.03.03
   Spadini D, 2018, PROC IEEE INT CONF S, P1, DOI 10.1109/ICSME.2018.00010
   Spearman, 1961, PROOF MEASUREMENT AS
   Suryanarayana G., 2014, Refactoring for Software Design Smells: Managing Technical Debt
   Sward R. E., 2004, Ada Letters, V24, P29
   Terragni V, 2020, INT C PROGRAM COMPRE, P241, DOI 10.1145/3387904.3389273
   Nguyen TB, 2005, ELECTRON NOTES THEOR, V116, P213, DOI 10.1016/j.entcs.2004.02.078
   Thomas D., 2019, The Pragmatic Programmer
   TONER B, 1987, J SOC PSYCHOL, V127, P221, DOI 10.1080/00224545.1987.9713684
   Tufano M, 2016, IEEE INT CONF AUTOM, P4, DOI 10.1145/2970276.2970340
   Uchôa A, 2020, PROC IEEE INT CONF S, P511, DOI 10.1109/ICSME46990.2020.00055
   Vincent J, 2002, SOFTWARE QUAL J, V10, P115, DOI 10.1023/A:1020571806877
   Virginio Tassio, 2020, SBES '20: Proceedings of the 34th Brazilian Symposium on Software Engineering, P564, DOI 10.1145/3422392.3422499
   Voas JM, 1996, Object-Oriented Software Testability, P279
   Vranken HPE, 1996, IEEE DES TEST COMPUT, V13, P79, DOI 10.1109/54.536098
   Zhou YM, 2012, SCI CHINA INFORM SCI, V55, P2800, DOI 10.1007/s11432-012-4745-x
   Zilberfeld G, 2012, Design for Testability-The True Story
NR 76
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2023
VL 28
IS 5
AR 120
DI 10.1007/s10664-023-10373-0
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA R9JE8
UT WOS:001067434600003
DA 2024-07-18
ER

PT J
AU Özkan, O
   Babur, Ö
   van den Brand, M
AF Ozkan, Ozan
   Babur, Onder
   van den Brand, Mark
TI Refactoring with domain-driven design in an industrial context An action
   research report
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Domain-driven design; Action research; Software refactoring; Software
   architecture; Microservices
AB ContextSoftware developers need to constantly work on evolving the structure and the stability of the code due to changing business needs of the product. There are various refactoring approaches in industry which promise improvements over source code composition and maintainability.ObjectiveIn our research, we want to improve the maintainability of an existing system through refactoring using Domain-Driven Design (DDD) as a software design approach. We also aim for providing empirical evidence on its effect on maintainability and the challenges as perceived by developers.MethodIn this study, we applied the action research methodology, which facilitates close academia-industry collaboration and regular presence in the studied product. We utilized focus groups to discover problems of the existing system with a qualitative approach. We reviewed the subject codebase to construct our own expert opinion as well and identified problems in the codebase and matched them with the ones raised by engineers in the team. We refactored the existing software system according to DDD principles. To measure the effects of our actions, we utilized Technology Acceptance Model (mTAM) questionnaire, and also semi-structured interviews with the development team for data collection, and card sorting methodology for qualitative analysis. For minimizing bias that might affect our results with the existing software engineers in the team, we extended our measurement with three new joiner software engineers in the team through the think aloud protocol.ResultsWe have identified that engineers mostly gave positive answers to our interview questions, which are mapped to software maintainability metrics defined by ISO/IEC 25010. Our DDD refactoring scored 85 in PU and 83 in PEU, leading to an overall mTAM score of 84. This means acceptable on the acceptability scale, B on the grade scale, and good on the adjective rating scale.ConclusionOur research led us to conclude that a powerful design approach, like DDD, is an effective tool for restructuring and resolving software issues in this situation. It offers standardization to the software and the refactoring efforts. We realized that DDD entails a certain degree of complexity and cognitive load, which is a barrier for software engineers, but they are aware of its benefits.
C1 [Ozkan, Ozan; Babur, Onder; van den Brand, Mark] Eindhoven Univ Technol, Dept Math & Comp Sci, Eindhoven, Netherlands.
   [Babur, Onder] Wageningen Univ & Res, Informat Technol Grp, Wageningen, Netherlands.
C3 Eindhoven University of Technology; Wageningen University & Research
RP Özkan, O (corresponding author), Eindhoven Univ Technol, Dept Math & Comp Sci, Eindhoven, Netherlands.
EM o.ozkan@tue.nl; onder.babur@wur.nl; m.g.j.v.d.brand@tue.nl
OI van den Brand, Mark/0000-0003-3529-6182; Babur,
   Onder/0000-0002-1460-2825; Ozkan, Ozan/0000-0002-1582-2395
CR Abid C, 2020, Arxiv, DOI arXiv:2007.02194
   [Anonymous], 2011, ISO/IEC 25010:2011
   Bangor A, 2009, J USABILITY STUD, V4, P114
   Bjorner D., 2017, TRYPTYCH SOFTWARE EN
   Braun Susanne, 2021, PaPoC '21: Proceedings of the 8th Workshop on Principles and Practice of Consistency for Distributed Data, DOI 10.1145/3447865.3457969
   Brooke J, 1996, USABILITY EVALUATION, V189, P4
   Brydon-Miller M., 2003, WHY ACTION RES
   Cagan M., 2017, INSPIRED: How to Create Tech Products Customers Love
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   Domain, 2022, OXFORD ONLINE DICT
   Evans E., 2003, Domain-Driven Design
   Fowler M, 2003, ANEMICDOMAINMODEL
   Fowler M., 1999, Refactoring: Improving the Design of Existing Code
   FowlerM, 2003, ANEMICDOMAINMODEL
   Hai Dinh-Tuan, 2020, ESSE 2020: Proceedings of the 2020 European Symposium on Software Engineering, P12, DOI 10.1145/3393822.3432339
   Hasselbring Wilhelm, 2017, 2017 IEEE International Conference on Software Architecture: Workshops (ICSAW), P243, DOI 10.1109/ICSAW.2017.11
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Janis I.L., 1965, LANGUAGE POLITICS
   Kapferer S., 2020, SERVICE ORIENTED COM
   Karfakis P, 2018, Institutions, economic freedom and structural transformation in 11 sub-Saharan African countries, P1, DOI DOI 10.1145/3242163.3242164
   Kontio J, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P271
   Lah U, 2020, INT J HUM-COMPUT INT, V36, P1216, DOI 10.1080/10447318.2020.1727262
   Landre E., 2007, PAPER PRESENTED OOPS, P983, DOI [10.1145/1297846.1297967, DOI 10.1145/1297846.1297967]
   LEHMAN MM, 1980, P IEEE, V68, P1060, DOI 10.1109/PROC.1980.11805
   Martin Robert C., 2000, Object Mentor, V34, P597
   Mazlami G, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2017), P524, DOI 10.1109/ICWS.2017.61
   Dos Santos PSM, 2011, ADV COMPUT, V83, P205, DOI 10.1016/B978-0-12-385510-7.00005-9
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Mens T, 2016, PROC IEEE INT CONF S, P1, DOI 10.1109/ICSME.2016.19
   Moiseev A., 2018, ANGULAR DEV TYPESCRI
   Oukes P, 2021, LAND USE POLICY, V104, DOI 10.1016/j.landusepol.2021.105379
   Rademacher F, 2018, P 19 INT C AG SOFTW, P1
   Reason P., 2001, HDB ACTION RES PARTI
   Roy J. R., 2007, QUEENS SCH COMPUTING, V541, P64
   Santos Paulo, 2009, 2009 3rd International Symposium on Empirical Software Engineering and Measurement (ESEM), P414, DOI 10.1109/ESEM.2009.5316013
   Schach S.R., 2011, Object-oriented and classical software engineering
   Staron M., 2020, Action Research in Software Engineering, DOI DOI 10.1007/978-3-030-32610-4
   Tirkkonen-Condit S, 1990, THINK AL PROT STUD L, V2
   Van Deursen Arie., 2001, Refactoring Test Code
   Wade S, 2009, P WORLD ACAD SCI
   Zimmerman DE, 2002, IPCC 2002, REFLECTIONS ON COMMUNICATION, PROCEEDINGS, P437, DOI 10.1109/IPCC.2002.1049127
NR 41
TC 0
Z9 0
U1 2
U2 7
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2023
VL 28
IS 4
AR 94
DI 10.1007/s10664-023-10310-1
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA J0KJ1
UT WOS:001006577700001
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Vidoni, M
   Codabux, Z
AF Vidoni, Melina
   Codabux, Zadia
TI Towards a taxonomy of Roxygen documentation in R packages
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE R Programming; Package documentation; Scientific software; Documentation
   taxonomy
ID SOFTWARE ECOSYSTEM; KNOWLEDGE; IMPACT; EVOLUTION
AB Software documentation is often neglected, impacting maintenance and reuse and leading to technical issues. In particular, when working with scientific software, such issues in the documentation pose a risk to producing reliable scientific results as they may cause improper or incorrect use of the software. R is a popular programming language for scientific software with a prolific package-based ecosystem, where users contribute packages (i.e., libraries). R packages are intended to be reused, and their users rely extensively on the available documentation. Thus, understanding what information developers provide in their packages' documentation (generally, through a system known as Roxygen, based on Javadoc) is essential to contribute to it. This study mined 379 GitHub repositories of R packages and analysed a sample to develop a taxonomy of natural language descriptions used in Roxygen documentation. This was done through hybrid card sorting, which included two experienced R developers. The resulting taxonomy covers parameters, returns, and descriptions, providing a baseline for further studies. Our taxonomy is the first of its kind for R. Based on previous studies in pure object-oriented languages, our taxonomy could be extensible to other dynamically-typed languages used in scientific programming.
C1 [Vidoni, Melina] Australian Natl Univ, CECC Sch Comp, Canberra, Australia.
   [Codabux, Zadia] Univ Saskatchewan, Dept Comp Sci, Saskatoon, SK, Canada.
C3 Australian National University; University of Saskatchewan
RP Vidoni, M (corresponding author), Australian Natl Univ, CECC Sch Comp, Canberra, Australia.
EM melina.vidoni@anu.edu.au; zcodabux@ieee.org
FU Natural Sciences and Engineering Research Council of Canada
   [RGPIN-2021-04232]; University of Saskatchewan [DGECR-2021-00283]
FX The authors gratefully acknowledge the involved developers (O.G. and
   S.P. who requested their names to be blinded) for the feedback provided
   on the taxonomy's emerging results. This study was partly supported by
   the Natural Sciences and Engineering Research Council of Canada,
   RGPIN-2021-04232 and DGECR-2021-00283 at the University of Saskatchewan.
CR Aghajani E, 2020, PROC INT CONF SOFTW, P590, DOI 10.1145/3377811.3380405
   Aghajani E, 2019, PROC INT CONF SOFTW, P1199, DOI 10.1109/ICSE.2019.00122
   Ahalt S, 2014, COMPUT SCI ENG, V16, P18, DOI 10.1109/MCSE.2014.5
   Amezquita RA, 2020, NAT METHODS, V17, P137, DOI 10.1038/s41592-019-0654-x
   Ampatzoglou A, 2019, INFORM SOFTWARE TECH, V106, P201, DOI 10.1016/j.infsof.2018.10.006
   Arnaoudova V, 2013, EUR CON SFTWR MTNCE, P187, DOI 10.1109/CSMR.2013.28
   Auker LA, 2020, ECOSPHERE, V11, DOI 10.1002/ecs2.3060
   Barbez A, 2020, J SYST SOFTWARE, V161, DOI 10.1016/j.jss.2019.110486
   Barone Antonio Valerio Miceli, 2017, P 8 INT JOINT C NAT, V2, P314
   Bird C, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P1, DOI 10.1109/MSR.2009.5069475
   Blanthorn OA, 2019, APPL NETW SCI, V4, DOI 10.1007/s41109-019-0193-5
   Blasi A, 2017, P SEM SER ADV TECHN, P1
   Brabra H, 2019, INFORM SOFTWARE TECH, V107, P65, DOI 10.1016/j.infsof.2018.10.012
   Broy Manfred, 2022, Leveraging Applications of Formal Methods, Verification and Validation. Software Engineering: 11th International Symposium, ISoLA 2022, Proceedings. Lecture Notes in Computer Science (13702), P10, DOI 10.1007/978-3-031-19756-7_2
   Bryan J, 2021, HAPPY GIT GITHUB USE
   Bryan J, 2018, AM STAT, V72, P20, DOI 10.1080/00031305.2017.1399928
   Budgen David., 2003, SOFTWARE DESIGN
   Chambers J.M., 2008, Software for Data analysis: Programming with R, V2, DOI [10.1007/978-0-387-75936-4, DOI 10.1007/978-0-387-75936-4]
   Cho W, 2014, P 2014 INT C BIG DAT, P1, DOI [10.1145/2640087.2644168, DOI 10.1145/2640087.2644168]
   Claes M, 2015, INT WORKS SOFTW CLON, P19, DOI 10.1109/IWSC.2015.7069885
   Codabux Z, 2021, IEEE WORK CONF MIN S, P195, DOI 10.1109/MSR52588.2021.00032
   Datta S, 2017, INT CONF SOFT COMP, P1, DOI 10.1109/ISCMI.2017.8279587
   Decan A., 2015, P 2015 EUR C SOFTW A, P1, DOI [10.1145/2797433.2797476, DOI 10.1145/2797433.2797476]
   Decan A, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P493, DOI 10.1109/SANER.2016.12
   Dekel U, 2009, PROC INT CONF SOFTW, P320, DOI 10.1109/ICSE.2009.5070532
   Fucci D, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P109, DOI 10.1145/3338906.3338943
   German DM, 2013, EUR CON SFTWR MTNCE, P243, DOI 10.1109/CSMR.2013.33
   Groher I, 2017, 2017 43RD EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P350, DOI 10.1109/SEAA.2017.70
   Hinsen K, 2009, COMPUT SCI ENG, V11, P86, DOI 10.1109/MCSE.2009.129
   Hornik K, 2012, AUST J STAT, V41, P59
   Howison J, 2015, RES EVALUAT, V24, P454, DOI 10.1093/reseval/rvv014
   Huang Q, 2018, EMPIR SOFTW ENG, V23, P418, DOI 10.1007/s10664-017-9522-4
   Ihaka R, 2017, R PROJECT BRIEF HIST
   Königstorfer F, 2021, DIGIT POLICY REGUL G, V23, P475, DOI 10.1108/DPRG-03-2021-0047
   Korkmaz G, 2018, 2018 IEEE/ACM INTERNATIONAL CONFERENCE ON ADVANCES IN SOCIAL NETWORKS ANALYSIS AND MINING (ASONAM), P511, DOI 10.1109/ASONAM.2018.8508255
   Kross S, 2020, AM STAT, V74, P1, DOI 10.1080/00031305.2019.1668849
   Li K, 2019, J INFORMETR, V13, P449, DOI 10.1016/j.joi.2019.02.007
   Liu JK, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN SOCIETY (ICSE-SEIS 2021), P1, DOI 10.1145/3377815.3381377
   Liu XY, 2021, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, EMNLP 2021, P4473
   Maalej W, 2013, IEEE T SOFTWARE ENG, V39, P1264, DOI 10.1109/TSE.2013.12
   Maddumage C, 2018, 2018 3 INT C INFORM, P1, DOI [10.1109/ICITR.2018.8736142, DOI 10.1109/ICITR.2018.8736142]
   McHugh ML, 2012, BIOCHEM MEDICA, V22, P276, DOI 10.11613/bm.2012.031
   Meng Michael, 2019, Communication Design Quarterly Review, V7, P40, DOI 10.1145/3358931.3358937
   Milewicz Reed, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P421, DOI 10.1109/MSR.2019.00069
   Monperrus M, 2012, EMPIR SOFTW ENG, V17, P703, DOI 10.1007/s10664-011-9186-4
   Morandat F, 2012, LECT NOTES COMPUT SC, V7313, P104, DOI 10.1007/978-3-642-31057-7_6
   Nayebi M, 2018, IEEE WORK CONF MIN S, P243, DOI 10.1145/3196398.3196410
   Nybom K, 2018, EUROMICRO CONF PROC, P462, DOI 10.1109/SEAA.2018.00081
   Ooms J, 2013, R J, V5, P197
   Palma F, 2015, LECT NOTES COMPUT SC, V9435, P171, DOI 10.1007/978-3-662-48616-0_11
   Perperoglou A, 2019, BMC MED RES METHODOL, V19, DOI 10.1186/s12874-019-0666-3
   Pinto G, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P582, DOI 10.1109/SANER.2018.8330263
   Plakidas K, 2017, J SYST SOFTWARE, V132, P119, DOI 10.1016/j.jss.2017.06.095
   Robillard MP, 2011, EMPIR SOFTW ENG, V16, P703, DOI 10.1007/s10664-010-9150-8
   Robillard MP, 2009, IEEE SOFTWARE, V26, P27, DOI 10.1109/MS.2009.193
   Shin Hwei Tan, 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P260, DOI 10.1109/ICST.2012.106
   Shyam R., 2021, Journal of Advancements in Robotics, V8, P18
   Souza R, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS TRACK (ICSE-NIER), P31, DOI 10.1109/ICSE-NIER.2017.10
   Storer T, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3084225
   Stulova N, 2020, IEEE INT WORK C SO, P65, DOI 10.1109/SCAM51674.2020.00012
   Tan L, 2015, ART SCI ANAL SOFTWAR
   Thieme N., 2018, SIGNIFICANCE, V15, P14, DOI [10.1111/j.1740-9713.2018.01169.x, DOI 10.1111/J.1740-9713.2018.01169.X]
   Treude C, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1509, DOI 10.1145/3368089.3417045
   Turcotte A, 2019, PROCEEDINGS OF THE 12TH WORKSHOP ON IMPLEMENTATION, COMPILATION AND OPTIMIZATION OF OBJECT-ORIENTED LANGUAGES, PROGRAMS AND SYSTEMS (ICOOOLPS' 19), DOI 10.1145/3340670.3342426
   Uddin G, 2015, IEEE SOFTWARE, V32, P68, DOI 10.1109/MS.2014.80
   Vidoni M, 2022, INFORM SOFTWARE TECH, V144, DOI 10.1016/j.infsof.2021.106791
   Vidoni M, P 43 INT C SOFTW ENG, P1
   Vidoni M, 2022, J SYST SOFTWARE, V188, DOI 10.1016/j.jss.2022.111265
   Vidoni M, 2021, IEEE WORK CONF MIN S, P179, DOI 10.1109/MSR52588.2021.00030
   Villegas E., 2019, NEW KNOWLEDGE INFORM, P392, DOI [10.1007/978-3-030-16187-3_38, DOI 10.1007/978-3-030-16187-3_38]
   Wang XK, 2019, 2019 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING WORKSHOPS (ASEW 2019), P94, DOI 10.1109/ASEW.2019.00037
   Whitworth B., 2006, ENCY HUMAN COMPUTER
   Wickham H., 2015, Advanced R
   Wickham H, 2019, ROXYGEN2 7 0 0
   Wickham Hadley, 2017, R for Data Science
   Zagalsky A, 2018, EMPIR SOFTW ENG, V23, P953, DOI 10.1007/s10664-017-9536-y
   Zampetti F, 2022, J SYST SOFTWARE, V192, DOI 10.1016/j.jss.2022.111425
   Zanella G., 2020, HAWAII INT C SYSTEM, P471, DOI [10.24251/HICSS.2020.058, DOI 10.24251/HICSS.2020.058]
   Zhou X, 2016, ASIA PAC SOFWR ENG, P153, DOI [10.1109/APSEC.2016.031, 10.1109/APSEC.2016.62]
NR 79
TC 0
Z9 0
U1 1
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2023
VL 28
IS 4
AR 106
DI 10.1007/s10664-023-10345-4
PG 48
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA M3IC4
UT WOS:001029138800001
OA hybrid
DA 2024-07-18
ER

PT J
AU Devine, P
   Koh, YS
   Blincoe, K
AF Devine, Peter
   Koh, Yun Sing
   Blincoe, Kelly
TI Evaluating software user feedback classifier performance on unseen apps,
   datasets, and metadata
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software user feedback; User feedback classification; Unseen data
   domains; Machine learning; requirements engineering; Software quality
ID REQUIREMENTS; QUALITY
AB Understanding users' needs is crucial to building and maintaining high quality software. Online software user feedback has been shown to contain large amounts of information useful to requirements engineering (RE). Previous studies have created machine learning classifiers for parsing this feedback for development insight. While these classifiers report generally good performance when evaluated on a test set, questions remain as to how well they extend to unseen data in various forms. This study evaluates machine learning classifiers' performance on feedback for two common classification tasks (classifying bug reports and feature requests). Using seven datasets from prior research studies, we investigate the performance of classifiers when evaluated on feedback from different apps than those contained in the training set and when evaluated on completely different datasets (coming from different feedback channels and/or labelled by different researchers). We also measure the difference in performance of using channel-specific metadata as a feature in classification. We find that using metadata as features in classifying bug reports and feature requests does not lead to a statistically significant improvement in the majority of datasets tested. We also demonstrate that classification performance is similar on feedback from unseen apps compared to seen apps in the majority of cases tested. However, the classifiers evaluated do not perform well on unseen datasets. We show that multi-dataset training or zero shot classification approaches can somewhat mitigate this performance decrease. We discuss the implications of these results on developing user feedback classification models to analyse and extract software requirements.
C1 [Devine, Peter; Blincoe, Kelly] Univ Auckland, Human Aspects Software Engn Lab, Auckland, New Zealand.
   [Koh, Yun Sing] Univ Auckland, Sch Comp Sci, Auckland, New Zealand.
C3 University of Auckland; University of Auckland
RP Devine, P (corresponding author), Univ Auckland, Human Aspects Software Engn Lab, Auckland, New Zealand.
EM pdev438@aucklanduni.ac.nz; k.blincoe@auckland.ac.nz
OI Devine, Peter/0000-0002-8083-320X
FU Faculty of Engineering at The University of Auckland
FX The work was conducted in the course of a PhD study by the lead author
   (Peter Devine), which is funded by the Faculty of Engineering at The
   University of Auckland.
CR Araujo Adailton., 2020, Anais do Encontro Nacional de Inteligencia Artificial e Computacional (ENIAC), SBC, P378, DOI DOI 10.5753/ENIAC.2020.12144
   Batista G. E., 2004, ACM SIGKDD EXPL NEWS, V6, P20, DOI DOI 10.1145/1007730.1007735
   Berki E, 2004, SOFTWARE QUAL J, V12, P265, DOI 10.1023/B:SQJO.0000034711.87241.f0
   Broy M, 2006, LECT NOTES COMPUT SC, V4263, P24
   Ciurumelea A, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P91, DOI 10.1109/SANER.2017.7884612
   Cleland-Huang J, 2007, REQUIR ENG, V12, P103, DOI 10.1007/s00766-007-0045-1
   Damian D, 2006, IEEE T SOFTWARE ENG, V32, P433, DOI 10.1109/TSE.2006.61
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   Dhinakaran VT, 2018, INT REQUIR ENG CONF, P170, DOI 10.1109/RE.2018.00026
   Di Sorbo A, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2316
   Gillies A., 2011, Software quality: Theory and management
   Guzman E, 2017, INT REQUIR ENG CONF, P11, DOI 10.1109/RE.2017.88
   Guzman E, 2016, INT REQUIR ENG CONF, P96, DOI 10.1109/RE.2016.67
   Guzman E, 2015, IEEE INT CONF AUTOM, P771, DOI 10.1109/ASE.2015.88
   Hadi M. A., 2021, ARXIV
   Henao PR, 2021, 29TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW 2021), P80, DOI 10.1109/REW53955.2021.00019
   Iacob C., 2014, Mobile Computing, Applications, and Services. MobiCASE 2013. Lecture Notes of the Institute for Computer Sciences, V130, DOI [10.1007/978-3-319-05452-0_4., DOI 10.1007/978-3-319-05452-0_4]
   Iqbal T, 2021, INT REQUIR ENG CONF, P128, DOI 10.1109/RE51729.2021.00019
   Kassab M, 2014, INNOV SYST SOFTW ENG, V10, P235, DOI 10.1007/s11334-014-0232-4
   Khan JA, 2020, J SOFTW-EVOL PROC, V32, DOI 10.1002/smr.2309
   Lim S., 2021, SN Computer Science, V2, P1
   Lin DY, 2019, EMPIR SOFTW ENG, V24, P170, DOI 10.1007/s10664-018-9627-4
   Maalej W, 2016, REQUIR ENG, V21, P311, DOI 10.1007/s00766-016-0251-9
   Magalhaes C, 2021, RE NEXT TRACK 29 IEE
   Nayebi M, 2018, EMPIR SOFTW ENG, V23, P2764, DOI 10.1007/s10664-018-9601-1
   Nuseibeh B., 2000, P C FUTURE SOFTWARE, P35, DOI [10.1145/336512.336523, DOI 10.1145/336512.336523]
   Pagano D, 2013, S VIS LANG HUM CEN C, P125, DOI 10.1109/RE.2013.6636712
   Panichella S, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P1023, DOI 10.1145/2950290.2983938
   Radlinski Lukasz, 2012, Requirements Engineering: Foundation for Software Quality. Proceedings 18th International Working Conference, REFSQ 2012, P232, DOI 10.1007/978-3-642-28714-5_21
   Rempel P, 2017, IEEE T SOFTWARE ENG, V43, P777, DOI 10.1109/TSE.2016.2622264
   Sanh V, 2020, Arxiv, DOI arXiv:1910.01108
   Scalabrino S, 2019, IEEE T SOFTWARE ENG, V45, P68, DOI 10.1109/TSE.2017.2759112
   Stanik C, 2019, 2019 IEEE 27TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW 2019), P220, DOI 10.1109/REW.2019.00046
   Sultan Md Arafat, 2014, Transactions of the Association for Computational Linguistics, V2, P219
   Tizard J, 2022, REQUIR ENG, V27, P293, DOI 10.1007/s00766-021-00357-1
   Tizard J, 2019, INT REQUIR ENG CONF, P17, DOI 10.1109/RE.2019.00014
   Williams G, 2017, INT REQUIR ENG CONF, P1, DOI 10.1109/RE.2017.14
   Yin WP, 2019, Arxiv, DOI arXiv:1909.00161
NR 38
TC 2
Z9 2
U1 1
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2023
VL 28
IS 2
AR 26
DI 10.1007/s10664-022-10254-y
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 7S5YM
UT WOS:000910828600001
DA 2024-07-18
ER

PT J
AU Lukasczyk, S
   Kroiss, F
   Fraser, G
AF Lukasczyk, Stephan
   Kroiss, Florian
   Fraser, Gordon
TI An empirical study of automated unit test generation for Python
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Dynamic typing; Python; Automated Test Generation
ID EVOLUTIONARY ALGORITHMS
AB Various mature automated test generation tools exist for statically typed programming languages such as Java. Automatically generating unit tests for dynamically typed programming languages such as Python, however, is substantially more difficult due to the dynamic nature of these languages as well as the lack of type information. Our Pynguin framework provides automated unit test generation for Python. In this paper, we extend our previous work on Pynguin to support more aspects of the Python language, and by studying a larger variety of well-established state of the art test-generation algorithms, namely DynaMOSA, MIO, and MOSA. Furthermore, we improved our Pynguin tool to generate regression assertions, whose quality we also evaluate. Our experiments confirm that evolutionary algorithms can outperform random test generation also in the context of Python, and similar to the Java world, DynaMOSA yields the highest coverage results. However, our results also demonstrate that there are still fundamental remaining issues, such as inferring type information for code without this information, currently limiting the effectiveness of test generation for Python.
C1 [Lukasczyk, Stephan; Kroiss, Florian; Fraser, Gordon] Univ Passau, Innstr 33, D-94032 Passau, Germany.
C3 University of Passau
RP Lukasczyk, S (corresponding author), Univ Passau, Innstr 33, D-94032 Passau, Germany.
EM stephan.lukasczyk@uni-passau.de; kroiss@fim.uni-passau.de;
   gordon.fraser@uni-passau.de
OI Lukasczyk, Stephan/0000-0002-0092-3476
FU Projekt DEAL
FX Open Access funding enabled and organized by Projekt DEAL.
CR Abdi M, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10169-8
   Acree AT., 1978, GITICS7908
   Andrews JH, 2011, IEEE T SOFTWARE ENG, V37, P80, DOI 10.1109/TSE.2010.46
   Arcuri A, 2018, INFORM SOFTWARE TECH, V104, P195, DOI 10.1016/j.infsof.2018.05.003
   Arcuri A, 2017, LECT NOTES COMPUT SC, V10452, P3, DOI 10.1007/978-3-319-66299-2_1
   Arcuri A, 2013, EMPIR SOFTW ENG, V18, P594, DOI 10.1007/s10664-013-9249-9
   Arcuri A, 2013, SOFTW TEST VERIF REL, V23, P119, DOI 10.1002/stvr.457
   Artzi S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P571, DOI 10.1145/1985793.1985871
   Baresi L., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P281, DOI 10.1145/1810295.1810353
   Campos J, 2018, INFORM SOFTWARE TECH, V104, P207, DOI 10.1016/j.infsof.2018.08.010
   Chen ZF, 2018, SCI CHINA INFORM SCI, V61, DOI 10.1007/s11432-017-9153-3
   Csallner C, 2004, SOFTWARE PRACT EXPER, V34, P1025, DOI 10.1002/spe.602
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   Derezinska A, 2014, IEEE ICST WORKSHOP, P156, DOI 10.1109/ICSTW.2014.24
   FERRANTE J, 1987, ACM T PROGR LANG SYS, V9, P319, DOI 10.1145/24039.24041
   Fraser G., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P121, DOI 10.1109/ICST.2012.92
   Fraser G, 2013, IEEE T SOFTWARE ENG, V39, P276, DOI 10.1109/TSE.2012.14
   Fraser G, 2012, IEEE T SOFTWARE ENG, V38, P278, DOI 10.1109/TSE.2011.93
   Gao Z, 2017, PROC INT CONF SOFTW, P758, DOI 10.1109/ICSE.2017.75
   Gong Liang, 2015, P 2015 INT S SOFTW T, P94
   Groce A, 2015, LECT NOTES COMPUT SC, V9058, P204, DOI 10.1007/978-3-319-17524-9_15
   Gruber M, 2021, IEEE INT CONF SOFTW, P148, DOI 10.1109/ICST49551.2021.00026
   Holmes J, 2018, INT J SOFTW TOOLS TE, V20, P57, DOI 10.1007/s10009-016-0445-y
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Just R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P654, DOI 10.1145/2635868.2635929
   Kleinschmager S., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P153
   LEVENSHT.VI, 1965, DOKL AKAD NAUK SSSR+, V163, P845
   Li GD, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P449, DOI 10.1145/2635868.2635913
   Lukasczyk Stephan, 2020, Search-Based Software Engineering. 12th International Symposium, SSBSE 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12420), P9, DOI 10.1007/978-3-030-59762-7_2
   Lukasczyk S, 2022, SE2P PYNGUIN PYNGUIN, DOI 10.105381/zenodo.6836225
   Lukasczyk Stephan, 2022, Zenodo, DOI 10.5281/ZENODO.6838658
   Lukasczyk S, 2022, PROC IEEE ACM INT C, P168, DOI [10.1145/3510454.3516829, 10.1109/ICSE-Companion55297.2022.9793730]
   Ma L, 2015, IEEE INT CONF AUTOM, P212, DOI 10.1109/ASE.2015.49
   MacIver D.R, 2020, TEST CASE REDUCTION, V166
   MacIver David R., 2019, Journal of Open Source Software, V4, P1891, DOI DOI 10.21105/JOSS.01891
   Mairhofer S, 2011, GECCO-2011: PROCEEDINGS OF THE 13TH ANNUAL GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1859
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Mayer C, 2012, ACM SIGPLAN NOTICES, V47, P683, DOI 10.1145/2398857.2384666
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Meyerovich LA, 2013, ACM SIGPLAN NOTICES, V48, P1, DOI 10.1145/2509136.2509515
   Mir AM, 2021, IEEE WORK CONF MIN S, P585, DOI 10.1109/MSR52588.2021.00079
   Mirshokraie Shabnam, 2015, 2015 IEEE 8th International Conference on Software Testing, Verification and Validation (ICST), DOI 10.1109/ICST.2015.7102595
   Pacheco C, 2007, PROC INT CONF SOFTW, P75
   Panichella A, 2018, INFORM SOFTWARE TECH, V104, P236, DOI 10.1016/j.infsof.2018.08.009
   Panichella A, 2018, IEEE T SOFTWARE ENG, V44, P122, DOI 10.1109/TSE.2017.2663435
   Panichella A, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL SYMPOSIUM ON SOFTWARE AND SYSTEMS TRACEABILITY, P15, DOI 10.1109/SST.2015.10
   Papadakis M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P537, DOI 10.1145/3180155.3180183
   Parry O, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3476105
   Pearson K., 1895, P R SOC LOND, V58, P240, DOI [DOI 10.1098/RSPL.1895.0041, 10.1098/rspl.1895.0041]
   Rak-amnouykit I, 2020, DLS '2020: PROCEEDINGS OF THE 16TH ACM SIGPLAN INTERNATIONAL SYMPOSIUM ON DYNAMIC LANGUAGES, P57, DOI 10.1145/3426422.3426981
   Sakti A, 2015, IEEE T SOFTWARE ENG, V41, P294, DOI 10.1109/TSE.2014.2363479
   Schoofs Ebert, 2021, arXiv
   Selakovic M, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3276531
   Tonella P., 2004, Software Engineering Notes, V29, P119, DOI 10.1145/1013886.1007528
   Trübenbach D, 2022, 15TH SEARCH-BASED SOFTWARE TESTING WORKSHOP (SBST 2022), P6, DOI 10.1145/3526072.3527523
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   von Lücken C, 2014, COMPUT OPTIM APPL, V58, P707, DOI 10.1007/s10589-014-9644-1
   Wappler S, 2005, GECCO 2005: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOLS 1 AND 2, P1053
   Wibowo JTP, 2015, 2015 INTERNATIONAL CONFERENCE ON DATA AND SOFTWARE ENGINEERING (ICODSE), P241, DOI 10.1109/ICODSE.2015.7437005
   Widyasari R, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1556, DOI 10.1145/3368089.3417943
   Xie T, 2006, LECT NOTES COMPUT SC, V4067, P380
   Xu ZG, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P121, DOI 10.1145/2950290.2950357
NR 62
TC 4
Z9 4
U1 5
U2 8
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2023
VL 28
IS 2
AR 36
DI 10.1007/s10664-022-10248-w
PG 46
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 8J5PA
UT WOS:000922466200002
OA hybrid
DA 2024-07-18
ER

PT J
AU Hou, F
   Jansen, S
AF Hou, Fang
   Jansen, Slinger
TI A systematic literature review on trust in the software ecosystem
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Review
DE Software ecosystem; Software trust; Software package evaluation;
   Literature review
ID QUALITY; REPUTATION; PERCEPTIONS; KNOWLEDGE; SELECTION; PACKAGES;
   ADOPTION; IMPACT; MODEL; REUSE
AB The worldwide software ecosystem is a trust-rich part of the world. Throughout the software life cycle, software engineers, end-users, and other stakeholders collaboratively place their trust in major hubs in the ecosystem, such as package managers, repository services, and software components. However, as our reliance on software grows, this trust is frequently violated by bad actors and crippling vulnerabilities in the software supply chain. This study aims to define software trust in the worldwide SECO, that is, to determine what signifies a trustworthy system, actor, or hub. We conduct a systematic literature review on the concept of trust in the software ecosystem. We acknowledge that trust is something between two actors in the software ecosystem, and we examine what role trust plays in the relationships between end-users and (1) software products, (2) package managers, (3) software producing organizations, and (4) software engineers. Two major findings emerged from the systematic literature review. To begin, we define trust in the software ecosystem by examining the definition and characteristics of trust. Second, we provide a list of trust factors that can be used to assemble an overview of software trust. Trust is critical in the communication between actors in the worldwide software ecosystem, particularly regarding software selection and evaluation. With this comprehensive overview of trust, software engineering researchers have a new foundation to understand and use trust to create a trustworthy software ecosystem.
C1 [Hou, Fang; Jansen, Slinger] Univ Utrecht, Dept Informat & Comp Sci, Utrecht, Netherlands.
   [Jansen, Slinger] Lappeenranta Univ Technol, Sch Engn Sci, Lappeenranta, Finland.
C3 Utrecht University; Lappeenranta-Lahti University of Technology LUT
RP Hou, F (corresponding author), Univ Utrecht, Dept Informat & Comp Sci, Utrecht, Netherlands.
EM f.hou@uu.nl; slinger.jansen@uu.nl
RI ; Jansen, Slinger/Y-4244-2019
OI Hou, Fang/0000-0002-8042-3278; Jansen, Slinger/0000-0003-3752-2868
FU European Union [957228]; H2020 - Industrial Leadership [957228] Funding
   Source: H2020 - Industrial Leadership
FX This project received funding from the TruBlo project the third Open
   Call (sub-grant agreement), under European Union's Horizon 2020 Research
   and Innovation program under the Grant Agreement Number 957228.
CR Abu Talib M, 2020, J CASES INF TECHNOL, V22, P34, DOI 10.4018/JCIT.2020040103
   Alarcon GM, 2020, SYSTEMS-BASEL, V8, DOI 10.3390/systems8030028
   Alexy O, 2013, RES POLICY, V42, P1325, DOI 10.1016/j.respol.2013.04.007
   AMOROSO E, 1991, 1991 IEEE COMPUTER SOCIETY SYMPOSIUM ON RESEARCH IN SECURITY AND PRIVACY, P198
   Androutsellis-Theotokis Stephanos, 2010, Foundations and Trends in Technology, Information and Operations Management, V4, P187, DOI 10.1561/0200000026
   [Anonymous], 2013, Comput Sci Discov, DOI DOI 10.1088/1749-4699/6/1/015010
   Badampudi D, 2016, J SYST SOFTWARE, V121, P105, DOI 10.1016/j.jss.2016.07.027
   Bauer PC., 2019, POLITICAL CONCEPTS W
   Bauer V, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P483, DOI 10.1109/ICSM.2012.6405311
   Becerra M, 2008, J MANAGE STUD, V45, P691, DOI 10.1111/j.1467-6486.2008.00766.x
   Bennett K, 2000, SEVENTH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P214, DOI 10.1109/APSEC.2000.896702
   Berander P., 2005, BLEKINGE I TECHNOLOG, V97, P19
   Bogart C, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P109, DOI 10.1145/2950290.2950325
   Bourque Pierre, 2014, SWEBOK: Guide to the Software Engineering Body of Knowledge, V3rd
   Boyes H.A., 2014, 9 IET INT C SYST SAF
   Bugiel S., 2011, P 6 ACM WORKSH SCAL, P15
   Buscemi N, 2006, J CLIN EPIDEMIOL, V59, P697, DOI 10.1016/j.jclinepi.2005.11.010
   Cai YF, 2016, DECIS SUPPORT SYST, V91, P103, DOI 10.1016/j.dss.2016.08.004
   Cappos J., 2008, University of Arizona Technical Report, P08
   Cappos J, 2008, CCS'08: PROCEEDINGS OF THE 15TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P565
   Capra E, 2011, J SYST SOFTWARE, V84, P144, DOI 10.1016/j.jss.2010.09.004
   Catuogno L, 2020, IEEE T DEPEND SECURE, V17, P377, DOI 10.1109/TDSC.2017.2777991
   Challa JS, 2011, J INF PROCESS SYST, V7, P473, DOI 10.3745/JIPS.2011.7.3.473
   Chandra Y., 2019, QUALITATIVE RES USIN, DOI DOI 10.1007/978-981-13-3170-1_8
   Chau PYC, 1994, EUR J INFORM SYST, V3, P292, DOI 10.1057/ejis.1994.34
   Cho JH, 2019, ACM COMPUT SURV, V51, DOI 10.1145/3277666
   Cho JH, 2015, ACM COMPUT SURV, V48, DOI 10.1145/2815595
   Cooper H.M., 2008, SAGE HDB APPL SOCIAL, V2nd, P344
   Crowston K., 2003, P 24 INT C INF SYST
   Cruz D., 2006, Software Process Improvement and Practice, V11, P107, DOI 10.1002/spip.257
   Das TK, 2001, ORGAN STUD, V22, P251, DOI 10.1177/0170840601222004
   Decan A, 2019, IEEE T SOFTWARE ENG
   Decan A, 2018, IEEE WORK CONF MIN S, P181, DOI 10.1145/3196398.3196401
   del Bianco V, 2011, IEEE SOFTWARE, V28, P67, DOI 10.1109/MS.2011.93
   Donohue SK, 2005, 29TH ANNUAL IEEE/NASA SOFTWARE ENGINEERING WORKSHOP, PROCEEDINGS, P5, DOI 10.1109/SEW.2005.30
   Drucker AM, 2016, J INVEST DERMATOL, V136, pE109, DOI 10.1016/j.jid.2016.08.021
   Duan R, 2021, 28TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2021), DOI 10.14722/ndss.2021.23055
   Durach CF, 2017, J SUPPLY CHAIN MANAG, V53, P67, DOI 10.1111/jscm.12145
   Ellison R, 2016, P INT COMP SOFTW APP, P359, DOI 10.1109/COMPSAC.2016.231
   Farooq U, 2016, COMPUT IND, V83, P55, DOI 10.1016/j.compind.2016.08.002
   Farshidi S, 2021, INFORM SOFTWARE TECH, V139, DOI 10.1016/j.infsof.2021.106640
   Gefen D., 1996, Academy of Management Proceedings, P313
   Ghapanchi AH, 2015, INFORM SYST MANAGE, V32, P285, DOI 10.1080/10580530.2015.1079999
   Godse M, 2009, IEEE INT CONF CLOUD, P155, DOI 10.1109/CLOUD.2009.74
   Goode S, 2015, DECIS SUPPORT SYST, V70, P73, DOI 10.1016/j.dss.2014.12.005
   Grandison T, 2000, IEEE Communications Surveys Tutorials, V3, P2, DOI [DOI 10.1109/COMST.2000.5340804, 10.1109/COMST.2000.5340804]
   Grodzinsky FS, 2011, ETHICS INF TECHNOL, V13, P17, DOI 10.1007/s10676-010-9255-1
   Guo G., 2014, Proceedings of the 29th Annual ACM Symposium on Applied Computing, P248
   Haefliger S, 2008, MANAGE SCI, V54, P180, DOI 10.1287/mnsc.1070.0748
   Haenni N., 2013, Proceedings of the 2013 International Workshop on Ecosystem Architectures, P1
   Haenni N, 2014, P 2014 EUR C SOFTW A, P1
   Hanus M., 2018, TECHNICAL COMMUNICAT
   Harris JS, 2004, IEEE SOFTWARE, V21, P42, DOI 10.1109/MS.2004.1259211
   Hayes P, 2020, AI SOC, V35, P533, DOI 10.1007/s00146-019-00932-9
   He JS, 2009, 2009 SECOND INTERNATIONAL CONFERENCE ON FUTURE INFORMATION TECHNOLOGY AND MANAGEMENT ENGINEERING, FITME 2009, P136, DOI 10.1109/FITME.2009.39
   Heiskanen A, 2008, J STRATEGIC INF SYST, V17, P268, DOI 10.1016/j.jsis.2008.10.001
   Hejderup J, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS (ICSE-NIER), P101, DOI 10.1145/3183399.3183417
   Heyns M, 2015, SA J IND PSYCHOL, V41, DOI 10.4102/sajip.v41i1.1263
   Hill C.W. L., 2013, Intern at ion a 1 Business COMPETING IN THE GLOBAL MARKETPLACE, P1
   Hou F, 2021, LECT NOTES BUS INF P, V423, P121, DOI 10.1007/978-3-030-79022-6_11
   Hoxmeier JA, 2000, J MANAGE INFORM SYST, V17, P115
   Huang Hong, 2011, Proceedings of the 2011 International Conference on Network Computing and Information Security (NCIS), P311, DOI 10.1109/NCIS.2011.70
   Hunter P, 2013, INT FREE OPEN SOURCE, V5, P31
   Immonen A, 2007, USIC 2007: PROCEEDINGS OF THE SEVENTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, P316
   Jackson D, 2009, COMMUN ACM, V52, P78, DOI 10.1145/1498765.1498787
   Jadhav AS, 2011, J SYST SOFTWARE, V84, P1394, DOI 10.1016/j.jss.2011.03.034
   Jadhav AS, 2009, INFORM SOFTWARE TECH, V51, P555, DOI 10.1016/j.infsof.2008.09.003
   Jansen F, 2021, Arxiv, DOI arXiv:2101.06138
   Jansen S, 2013, SOFTWARE ECOSYSTEMS: ANALYZING AND MANAGING BUSINESS NETWORKS IN THE SOFTWARE INDUSTRY, P1, DOI 10.4337/9781781955635
   Jansen S, 2014, INFORM SOFTWARE TECH, V56, P1508, DOI 10.1016/j.infsof.2014.04.006
   Jansen S, 2012, J SYST SOFTWARE, V85, P1495, DOI 10.1016/j.jss.2011.12.007
   Kitchenham B., 2004, PROCEDURES PERFORMIN, V33, P1
   Koch S, 2008, J DATABASE MANAGE, V19, P31, DOI 10.4018/jdm.2008040102
   Kula RG, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P520, DOI 10.1109/SANER.2015.7081869
   Lai IKW, 2011, ELECTRON COMMER R A, V10, P85, DOI 10.1016/j.elerap.2010.07.001
   Li XZ, 2022, J SYST SOFTWARE, V188, DOI 10.1016/j.jss.2022.111255
   Limam N, 2010, IEEE T SOFTWARE ENG, V36, P559, DOI 10.1109/TSE.2010.2
   Liu X., 2007, INT C INFORM SYSTEMS, P90
   Madanmoban TR, 2004, IEEE SOFTWARE, V21, P62, DOI 10.1109/MS.2004.45
   Manikas K, 2013, J SYST SOFTWARE, V86, P1294, DOI 10.1016/j.jss.2012.12.026
   McKnight D. H., 2011, Trans. Manag. Inf. Syst., V2, P1, DOI [10.1145/1985347.1985353, DOI 10.1145/1985347.1985353]
   McKnight D.H., 2005, BLACKWELL ENCY MANAG, P329
   Meline T., 2006, CONT ISSUES COMMUNIC, V33, P21
   Midha V, 2012, J SYST SOFTWARE, V85, P895, DOI 10.1016/j.jss.2011.11.010
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Mohagheghi P, 2007, EMPIR SOFTW ENG, V12, P471, DOI 10.1007/s10664-007-9040-x
   Moyano F, 2016, J NETW COMPUT APPL, V69, P134, DOI 10.1016/j.jnca.2016.04.018
   Pollock Neil, 2007, Information and Organization, V17, P131, DOI 10.1016/j.infoandorg.2007.05.001
   Public Affairs Council, 2021, 2021 PUBL AFF PULS S
   Qiangxian Huang, 2009, Proceedings of the 2009 9th International Conference on Electronic Measurement & Instruments (ICEMI 2009), P1, DOI 10.1109/ICEMI.2009.5274280
   Roumani Y, 2017, J SYST SOFTWARE, V125, P256, DOI 10.1016/j.jss.2016.12.006
   Sarrab M, 2014, ADV ENG SOFTW, V69, P1, DOI 10.1016/j.advengsoft.2013.12.001
   Scacchi W., 2007, Advances in Computers, V69, P243, DOI [DOI 10.1016/S0065-2458(06)69005-0, 10.1016/S0065-2458(06)69005-0]
   Schuur Hvd, 2011, P INT C MANAGEMENT E, P76, DOI DOI 10.1145/20774892077503
   Sen R, 2012, DECIS SUPPORT SYST, V52, P364, DOI 10.1016/j.dss.2011.09.003
   Sonatype, 2021, 2021 state of the software supply chain
   Staffs Keele, 2007, Tech. Rep.
   StephenWalli Dave Gynn, 2005, Technical report
   Tavakolifard Mozhgan, 2012, Journal of Communications, V7, P538, DOI 10.4304/jcm.7.7.538-551
   van de Poel I, 2020, The Ethics of Cybersecurity
   van den Berk Ivo., 2010, Proceedings of the Fourth European Conference on Software Architecture: Companion Volume, P127, DOI DOI 10.1145/1842752.1842781
   Vargas EL, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P245, DOI 10.1145/3368089.3409711
   Wang BH, 2019, IEEE ACCESS, V7, P60199, DOI 10.1109/ACCESS.2019.2892518
   Wang HM, 2015, PROGR IS, P165, DOI 10.1007/978-3-662-47011-4_10
   Wang HM, 2011, IEEE INT CONF TRUST, P3, DOI 10.1109/TrustCom.2011.2
   Wang J, 2015, INFORM SOFTWARE TECH, V67, P1, DOI 10.1016/j.infsof.2015.06.002
   Wright S, 2010, PHILOSOPHIA, V38, P615, DOI 10.1007/s11406-009-9218-0
   Xu L, 2007, EUR J INFORM SYST, V16, P531, DOI 10.1057/palgrave.ejis.3000703
   Yan Zheng., 2008, P 4 INT WORKSHOP SEC, P1
   Zerouali A, 2018, LECT NOTES COMPUT SC, V10826, P95, DOI 10.1007/978-3-319-90421-4_6
   Zhu MX, 2012, INFORM SCIENCES, V191, P61, DOI 10.1016/j.ins.2011.07.046
NR 111
TC 4
Z9 4
U1 6
U2 31
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN
PY 2023
VL 28
IS 1
AR 8
DI 10.1007/s10664-022-10238-y
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 6J6UY
UT WOS:000886958700001
OA Green Submitted, hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Alami, A
   Krancher, O
AF Alami, Adam
   Krancher, Oliver
TI How Scrum adds value to achieving software quality?
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Agile methods; Scrum; Software quality; Case studies
ID PSYCHOLOGICAL CONDITIONS; ACCOUNTABILITY; METHODOLOGY; VALIDITY;
   BEHAVIOR; SAFETY; IMPACT
AB Scrum remains the most popular agile software development method implementation for a variety of reasons; one important motive is to improve software quality. Yet many organizations fail to achieve quality improvements through the use of Scrum, and existing research sheds little light on the value-add of Scrum for software quality. More specifically, (1) how notions of software quality among Scrum practitioners relate to established quality perspectives, (2) how Scrum helps teams to achieve higher software quality and (3) why some teams fail to meet the objective of higher quality. We addressed these gaps through a two-phased qualitative study based on 39 interviews and two in-depth case studies. We find that Scrum practitioners emphasize established notions of external quality comprising of conformity to business needs and absence of defects, while they also value internal quality, especially sustainable software design. Our results show that Scrum helps teams achieve both dimensions of quality by promoting some social antecedents (collaboration, psychological safety, accountability, transparency) and process-induced advantages (iterative development, formal inspection, and adaptation). Our findings unveil how these factors contribute to achieving software quality and under what conditions their effects can fail to materialize. These conditions include inconsistent Scrum implementations, cultural constraints, team tensions, and inaccessibility of end-users. In addition, the complexity of the project aggravates the impact of these conditions. Taken together, these findings show that Scrum can complement established quality assurance and software engineering practices by promoting a social environment that is conducive to creating high-quality software. Based on our findings, we provide specific recommendations for how practitioners can create such an environment.
C1 [Alami, Adam] Aalborg Univ, Dept Comp Sci, Selma Lagerlofs Vej 300, DK-9220 Aalborg, Denmark.
   [Krancher, Oliver] IT Univ Copenhagen, Rued Langgaards Vej 7, DK-2300 Copenhagen S, Denmark.
C3 Aalborg University; IT University Copenhagen
RP Alami, A (corresponding author), Aalborg Univ, Dept Comp Sci, Selma Lagerlofs Vej 300, DK-9220 Aalborg, Denmark.
EM adal@cs.aau.dk; olik@itu.dk
RI Alami, Adam/KBR-2703-2024
OI Alami, Adam/0000-0003-4483-0105
CR Abbas Noura, 2010, Proceedings of the 2010 Agile Conference (AGILE 2010), P11, DOI 10.1109/AGILE.2010.15
   Abbas N., 2010, Proceedings of the 2010 Agile Conference (AGILE 2010), P77, DOI 10.1109/AGILE.2010.16
   Alami Adam, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P220, DOI 10.1145/3383219.3383242
   Alami A., 2022, INFORM SOFTWARE TECH
   Alami A, 2021, PROCEEDINGS OF EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING (EASE 2021), P10, DOI 10.1145/3463274.3463322
   Ambler SW, 2008, US
   Arcos-Medina G, 2019, INT J SYST ASSUR ENG, V10, P867, DOI 10.1007/s13198-019-00840-7
   Bag PK, 2011, J PUBLIC ECON, V95, P531, DOI 10.1016/j.jpubeco.2011.01.009
   BENBASAT I, 1987, MIS QUART, V11, P369, DOI 10.2307/248684
   Bjarnason E, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10027-z
   Bovens M, 2007, EUR LAW J, V13, P447, DOI 10.1111/j.1468-0386.2007.00378.x
   Burga R, 2021, INT J PROJECT MANAG
   Çaglayan B, 2016, J SYST SOFTWARE, V118, P288, DOI 10.1016/j.jss.2016.03.055
   Chong J, 2005, AGILE 2005, PROCEEDINGS, P39, DOI 10.1109/ADC.2005.40
   Chuang SW, 2014, J SYST SOFTWARE, V93, P84, DOI 10.1016/j.jss.2014.03.006
   Cohn Mike., 2004, User Stories Applied: For Agile Software Development
   Creswell JW, 2000, THEOR PRACT, V39, P124, DOI 10.1207/s15430421tip3903_2
   Deemer P., 2012, A Lightweight Guide to the Theory and Practice of Scrum
   digital.ai, 2021, 15 STAT AG REP AG LE
   Dingsoyr T, 2012, J SYST SOFTWARE, V85, P1213, DOI 10.1016/j.jss.2012.02.033
   Duhigg C., 2016, New York Times
   Edmondson A, 1999, RES MANAG GRP TEAM, V2, P179
   Edmondson A, 1999, ADMIN SCI QUART, V44, P350, DOI 10.2307/2666999
   Edmondson A.C., 2018, The Fearless Organization
   EISENHARDT KM, 1989, ACAD MANAGE REV, V14, P57, DOI 10.2307/258191
   El Alami A, 2019, 2019 INTERNATIONAL CONFERENCE ON WIRELESS TECHNOLOGIES, EMBEDDED AND INTELLIGENT SYSTEMS (WITS), DOI 10.1109/wits.2019.8723788
   Eloranta VP, 2016, INFORM SOFTWARE TECH, V74, P194, DOI 10.1016/j.infsof.2015.12.003
   Emigh RJ, 1997, THEOR SOC, V26, P649, DOI 10.1023/A:1006896217647
   English M, 2016, SOFTWARE QUALITY ASSURANCE: IN LARGE SCALE AND COMPLEX SOFTWARE-INTENSIVE SYSTEMS, P177, DOI 10.1016/B978-0-12-802301-3.00008-9
   Fowler M., 2001, Software Development, V9, P28
   Gibson CB, 2006, ADMIN SCI QUART, V51, P451, DOI 10.2189/asqu.51.3.451
   Green P., 2011, 2011 44th Hawaii International Conference on System Sciences, P1, DOI DOI 10.1109/HICSS.2011.306
   Hanson A., 2017, INT ENCY COMMUNICATI, DOI [10.1002/9781118901731.iecrm0165, DOI 10.1002/9781118901731.IECRM0165]
   Hanssen G.K., 2006, Proceedings of the 2006 ACM/IEEE international symposium on Empirical software engineering, P164
   Hassani-Alaoui S, 2020, HAW INT C SYST SCI
   Hennel P, 2021, PROJ MANAG J, V52, P11, DOI 10.1177/8756972820933057
   Hoda R, 2017, PROC INT CONF SOFTW, P141, DOI 10.1109/ICSE.2017.21
   Hoda R, 2011, INFORM SOFTWARE TECH, V53, P521, DOI 10.1016/j.infsof.2010.10.009
   Hofstede G., 1980, Culture's consequences: International differences in work-related values
   Hofstede G., 1991, Cultures and organizations, DOI DOI 10.1016/S0005-7967(02)00184-5
   Ilieva S, 2004, EUROMICRO CONF PROC, P326, DOI 10.1109/EURMIC.2004.1333387
   ISO/IEC, 2011, ISO/IEC 25010:2011 Systems and software engineering-Systems and Software Quality Requirements and Evaluation (SQuaRE)-System and Software Quality models
   Issac G, 2003, TOTAL QUAL MANAG BUS, V14, P1053, DOI 10.1080/1478336032000090950
   Jain P, 2018, INT CONF RELI INFO, P812, DOI 10.1109/ICRITO.2018.8748529
   Jalote P, 2005, ENABLING TECHNOLOGIES FOR THE NEW KNOWLEDGE SOCIETY, P703
   Khadjavi Menusch., 2014, The Social Value of Transparency and Accountability: Experimental Evidence from Asymmetric Public Goods Games
   Kitchenham B, 1996, IEEE SOFTWARE, V13, P12, DOI 10.1109/52.476281
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Krancher O, 2020, LECT NOTES BUS INF P, V383, P56, DOI 10.1007/978-3-030-49392-9_4
   Krancher O, 2018, J MANAGE INFORM SYST, V35, P776, DOI 10.1080/07421222.2018.1481636
   Krasner H, 2018, RES REPORT
   Kraus WA., 1980, Collaboration in organizations: Alternatives to hierarchy
   Layman L, 2004, PROCEEDINGS OF THE AGILE DEVELOPMENT CONFERENCE, P32
   Lewis S, 2015, HEALTH PROMOT PRACT, V16, P473, DOI 10.1177/1524839915580941
   Li J, 2010, P 2010 IEEE INT S AP, P3, DOI [DOI 10.1109/ICIECS.2010.5678245, 10.1109/ISAF.2010.5712271, DOI 10.1109/ISAF.2010.5712271, 10.1145/1852786.1852804, DOI 10.1145/1852786.1852804]
   Lincoln, 1985, NATURALISTIC INQUIRY, P289, DOI DOI 10.1016/0147-1767(85)90062-8
   Mahoney J, 2004, AM POLIT SCI REV, V98, P653, DOI 10.1017/S0003055404041401
   Maximilien EM, 2003, PROC INT CONF SOFTW, P564, DOI 10.1109/ICSE.2003.1201238
   MAXWELL JA, 1992, HARVARD EDUC REV, V62, P279, DOI 10.17763/haer.62.3.8323320856251826
   Maxwell JosephA., 2013, Qualitative Research Design: An Interactive Approach, P1
   May DR, 2004, J OCCUP ORGAN PSYCH, V77, P11, DOI 10.1348/096317904322915892
   McHugh O, 2012, IEEE SOFTWARE, V29, P71, DOI 10.1109/MS.2011.118
   Mero-Jaffe I, 2011, INT J QUAL METH, V10, P231, DOI 10.1177/160940691101000304
   Messner M, 2009, ACCOUNT ORG SOC, V34, P918, DOI 10.1016/j.aos.2009.07.003
   Miles M.B., 2014, Qualitative data analysis: A methods sourcebook, V3rd
   Muller R, 2010, PROJECT GOVERNANCE
   Oliver G, 2011, CHANDOS INF PROF SER, P1
   Patton M. Q., 2002, QUALITATIVE RES EVAL
   Patton MQ, 1999, HEALTH SERV RES, V34, P1189
   Prechelt L, 2016, PROC INT CONF SOFTW, P1017, DOI 10.1145/2884781.2884789
   ROBERTS J, 1991, ACCOUNT ORG SOC, V16, P355, DOI 10.1016/0361-3682(91)90027-C
   Rodríguez P, 2012, INT SYMP EMP SOFTWAR, P139, DOI 10.1145/2372251.2372275
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Saldana J., 2016, CODING MANUAL QUALIT, DOI DOI 10.1017/CBO9781107415324.004
   Schein E.H., 1965, PERSONAL ORG CHANGE
   Schwaber K., 2017, The Scrum Guide: The Definitive The Rules of the Game, DOI [10.1053/j.jrn.2009.08.012, DOI 10.1053/J.JRN.2009.08.012]
   Schwaber K., 2011, Scrum Alliance, V21, P1
   Sharp H, 2016, IEEE T SOFTWARE ENG, V42, P786, DOI 10.1109/TSE.2016.2519887
   Sutherland J., 2015, CURRENCY
   Sutherland J., 2009, P 42 HAW INT C SYST
   Tarhan A, 2014, INFORM SOFTWARE TECH, V56, P477, DOI 10.1016/j.infsof.2013.12.002
   Teasley S., 2000, CSCW 2000. ACM 2000 Conference on Computer Supported Cooperative Work, P339, DOI 10.1145/358916.359005
   Tucker AL, 2007, MANAGE SCI, V53, P894, DOI 10.1287/mnsc.1060.0692
   ul Musawir A, 2020, INT J PROJ MANAG, V38, P1, DOI 10.1016/j.ijproman.2019.09.007
   Vijayasarathy L., 2008, Journal of Information Technology Management, V19, P1, DOI DOI 10.3998/3336451.0011.104
   Williams L, 2011, INT SYMP EMP SOFTWAR, P463, DOI 10.1109/ESEM.2011.65
   Wolcott H., 1990, QUAL INQ
   YARNOLD PR, 1988, J RES PERS, V22, P353, DOI 10.1016/0092-6566(88)90035-9
   Yin R. K., 2018, Case Study Research and Applications: Design and Methods, DOI DOI 10.1016/J.TECHFORE.2018.10.013
NR 89
TC 10
Z9 11
U1 15
U2 48
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2022
VL 27
IS 7
AR 165
DI 10.1007/s10664-022-10208-4
PG 68
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4V4SY
UT WOS:000859469500020
PM 36159897
OA Green Published, Bronze
DA 2024-07-18
ER

PT J
AU Mahmoud, ASI
   Dey, T
   Nolte, A
   Mockus, A
   Herbsleb, JD
AF Mahmoud, Ahmed Samir Imam
   Dey, Tapajit
   Nolte, Alexander
   Mockus, Audris
   Herbsleb, James D.
TI One-off events? An empirical study of hackathon code creation and reuse
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Hackathon; Code reuse; Mining software repositories; Empirical study;
   Survey; World of code
AB Context Hackathons have become popular events for teams to collaborate on projects and develop software prototypes. Most existing research focuses on activities during an event with limited attention to the evolution of the hackathon code. Objective We aim to understand the evolution of code used in and created during hackathon events, with a particular focus on the code blobs, specifically, how frequently hackathon teams reuse pre-existing code, how much new code they develop, if that code gets reused afterwards, and what factors affect reuse. Method We collected information about 22,183 hackathon projects from Devpost and obtained related code blobs, authors, project characteristics, original author, code creation time, language, and size information from World of Code. We tracked the reuse of code blobs by identifying all commits containing blobs created during hackathons and identifying all projects that contain those commits. We also conducted a series of surveys in order to gain a deeper understanding of hackathon code evolution that we sent out to hackathon participants whose code was reused, whose code was not reused, and developers who reused some hackathon code. Result 9.14% of the code blobs in hackathon repositories and 8% of the lines of code (LOC) are created during hackathons and around a third of the hackathon code gets reused in other projects by both blob count and LOC. The number of associated technologies and the number of participants in hackathons increase reuse probability. Conclusion The results of our study demonstrates hackathons are not always "one-off" events as the common knowledge dictates and it can serve as a starting point for further studies in this area.
C1 [Mahmoud, Ahmed Samir Imam; Nolte, Alexander] Univ Tartu, Tartu, Estonia.
   [Dey, Tapajit] Univ Limerick, Lero Irish Software Res Ctr, Limerick, Ireland.
   [Nolte, Alexander; Herbsleb, James D.] Carnegie Mellon Univ, Pittsburgh, PA 15213 USA.
   [Mockus, Audris] Univ Tennessee, Knoxville, TN USA.
C3 University of Tartu; University of Limerick; Carnegie Mellon University;
   University of Tennessee System; University of Tennessee Knoxville
RP Dey, T (corresponding author), Univ Limerick, Lero Irish Software Res Ctr, Limerick, Ireland.
EM ahmed.imam.mahmoud@ut.ee; tapajit.dey@lero.ie; alexander.nolte@ut.ee;
   audris@utk.edu; jdh@cs.cmu.edu
RI Dey, Tapajit/AAY-9483-2020; Hossam El-Deen, Ahmed Mahmoud/HZJ-3469-2023
OI Dey, Tapajit/0000-0002-1379-8539; Nolte, Alexander/0000-0003-1255-824X;
   Mockus, Audris/0000-0002-7987-7598
FU Science Foundation Ireland [13/RC/2094 P2]; NSF [1633437, 2120429,
   1901102, 1925615]; IReL Consortium; Direct For Computer & Info Scie &
   Enginr; Division Of Computer and Network Systems [2120429, 1925615]
   Funding Source: National Science Foundation; Direct For Computer & Info
   Scie & Enginr; Div Of Information & Intelligent Systems [1901102]
   Funding Source: National Science Foundation; Direct For Computer & Info
   Scie & Enginr; Div Of Information & Intelligent Systems [1633437]
   Funding Source: National Science Foundation
FX Open Access funding provided by the IReL Consortium. The work was
   supported, in part, by Science Foundation Ireland grant 13/RC/2094 P2
   and by NSF awards 1633437, 2120429, 1901102, and 1925615.
CR Abdalkareem R, 2017, INFORM SOFTWARE TECH, V88, P148, DOI 10.1016/j.infsof.2017.04.005
   Amreen Sadika, 2019, ENG FREELIBRE OP ENS, P1
   Angarita MAM, 2020, LECT NOTES COMPUT SC, V12324, P50, DOI 10.1007/978-3-030-58157-2_4
   [Anonymous], 2014, INTERDISCIPLINARY ST
   Bhattacherjee A, 2001, MIS QUART, V25, P351, DOI 10.2307/3250921
   Busby Ben, 2016, F1000Res, V5, P672, DOI 10.12688/f1000research.8382.2
   Ciaghi A, 2016, 2016 IST-AFRICA WEEK CONFERENCE
   Cobham D, 2017, INTED PROC, P522
   Craddock RC, 2016, GIGASCIENCE, V5, DOI 10.1186/s13742-016-0121-x
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   Dey T, 2020, THESISU TENNESSEE
   Dey T, 2020, P IEEE ACM 42 INT C, P61
   Dey T, 2020, P 14 ACM IEEE INT S, P1
   Dey T, 2021, PROC INT CONF SOFTW, P995, DOI 10.1109/ICSE43902.2021.00094
   Dey T, 2019, 15TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING (PROMISE'19), P36, DOI 10.1145/3345629.3345634
   Dey T, 2020, EMPIR SOFTW ENG, V25, P1596, DOI 10.1007/s10664-019-09791-w
   Dey T, 2018, PROMISE'18: PROCEEDINGS OF THE 14TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING, P56, DOI 10.1145/3273934.3273941
   Dey T, 2018, PROMISE'18: PROCEEDINGS OF THE 14TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING, P66, DOI 10.1145/3273934.3273942
   Dey Tapajit, 2020, P IEEEACM 42 INT C S, P209, DOI DOI 10.1145/3387940.3391502
   Feitosa D, 2020, J SYST SOFTWARE, V167, DOI 10.1016/j.jss.2020.110618
   Filippova A, 2017, PROC INT CONF SOFTW, P152, DOI 10.1109/ICSE.2017.22
   Fowler A., 2016, P INT C GAME JAMS HA, P38, DOI DOI 10.1145/2897167.2897179
   Fry T, 2020, IEEE WORK CONF MIN S, P518, DOI 10.1145/3379597.3387500
   Gama K., 2018, 2018 IEEE FRONT ED C, P1
   German D. M., 2007, MIN SOFTW REP 2007 I, P24, DOI DOI 10.1109/MSR.2007.32
   Haefliger S, 2008, MANAGE SCI, V54, P180, DOI 10.1287/mnsc.1070.0748
   Hartemink A.J., 2001, THESIS MIT
   Hope A, 2019, CHI 2019: PROCEEDINGS OF THE 2019 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, DOI 10.1145/3290605.3300291
   Huppenkothen D, 2018, P NATL ACAD SCI USA, V115, P8872, DOI 10.1073/pnas.1717196115
   Imam A, 2021 IEEEACM 18 INT, V1, P615
   Imam A, 2021, REPLICATION PACKAGE
   Imam A, 2021, IEEE WORK CONF MIN S, P68, DOI 10.1109/MSR52588.2021.00020
   Kawamitsu N, 2014, IEEE INT WORK C SO, P305, DOI 10.1109/SCAM.2014.17
   Kienzler H, 2017, TEACH HIGH EDUC, V22, P129, DOI 10.1080/13562517.2016.1221805
   Komssi M, 2015, IEEE SOFTWARE, V32, P60, DOI 10.1109/MS.2014.78
   Lapp H, 2007, EVOL BIOINFORM, V3, P287
   Ma YX, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09905-9
   Mahmoud ASI, 2022, SECRET LIFE HACKATHO, DOI [10.5281/zenodo.6578707, DOI 10.5281/ZENODO.6578707]
   Mockus A, 2020, IEEE WORK CONF MIN S, P513, DOI 10.1145/3379597.3387499
   Mockus Audris, 2007, International Workshop on Emerging Trends in FLOSS Research and Development, P7, DOI [10.1109/FLOSS.2007.10, DOI 10.1109/FLOSS.2007.10]
   Möller S, 2014, BMC BIOINFORMATICS, V15, DOI 10.1186/1471-2105-15-S14-S7
   Nandi A., 2016, SIGCSE 16, P346, DOI [10.1145/2839509.2844590, DOI 10.1145/2839509.2844590, https://doi.org/10.1145/2839509.2844590, 10.1145/2839509]
   Nolte Alexander, 2020, Proceedings of the ACM on Human-Computer Interaction, V4, DOI 10.1145/3392830
   Nolte Alexander, 2018, Proceedings of the ACM on Human-Computer Interaction, V2, DOI 10.1145/3274398
   Nolte A., 2020, PROC ACM HUM COMPUT, V4, P1, DOI DOI 10.1145/3415216
   Nolte A, 2020, Arxiv, DOI arXiv:2008.08025
   Nolte A, 2019, PROCEEDINGS OF THE 2ND ACM SIGSOFT INTERNATIONAL WORKSHOP ON SOFTWARE-INTENSIVE BUSINESS: START-UPS, PLATFORMS, AND ECOSYSTEMS (IWSIB '19), P31, DOI 10.1145/3340481.3342735
   Olesen JF, 2020, PROCEEDINGS OF THE 2020 ACM DESIGNING INTERACTIVE SYSTEMS CONFERENCE (DIS 2020), P1073, DOI 10.1145/3357236.3395543
   Paganini L, 2020, PROCEEDINGS OF THE 5TH INTERNATIONAL CONFERENCE ON GAME JAMS, HACKATHONS AND GAME CREATION EVENTS, ICGJ 2020, P8, DOI 10.1145/3409456.3409458
   Pe-Than Ei Pa Pa, 2019, Information in Contemporary Society. 14th International Conference, iConference 2019. Proceedings: Lecture Notes in Computer Science (LNCS 11420), P27, DOI 10.1007/978-3-030-15742-5_3
   Pe-Than EPP, 2019, IEEE SOFTWARE, V36, P15, DOI 10.1109/MS.2018.290110547
   Porras J, 2019, PROCEEDINGS OF THE 52ND ANNUAL HAWAII INTERNATIONAL CONFERENCE ON SYSTEM SCIENCES, P7750
   Reinig BA, 2003, J MANAGE INFORM SYST, V19, P65
   Rosell B, 2014, 2014 IEEE INNOVATIONS IN TECHNOLOGY CONFERENCE (INNOTEK)
   Shmueli G, 2010, STAT SCI, V25, P289, DOI 10.1214/10-STS330
   Sojer M, 2010, J ASSOC INF SYST, V11, P868
   Stoltzfus A., 2017, F1000Research, V6, P786, DOI [10.12688/f1000research.11429.1, DOI 10.12688/F1000RESEARCH.11429.1]
   Tavakol M, 2011, INT J MED EDUC, V2, P53, DOI 10.5116/ijme.4dfb.8dfd
   Taylor N, 2018, PROCEEDINGS OF THE 2018 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2018), DOI 10.1145/3173574.3173746
   Taylor N, 2018, PROCEEDINGS OF THE 2018 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2018), DOI 10.1145/3173574.3174081
   Trainer EH, 2016, ACM CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING (CSCW 2016), P1118, DOI 10.1145/2818048.2819946
   von Krogh Georg, 2005, P 38 ANN HAWAII INT, p198b, DOI DOI 10.1109/HICSS.2005.378
   Williams MD., 2021, PEPLOT PLOTTING PART
   Xu BW, 2020, EMPIR SOFTW ENG, V25, P755, DOI 10.1007/s10664-019-09771-0
   Youyang Hou, 2017, Proceedings of the ACM on Human-Computer Interaction, V1, DOI 10.1145/3134688
   Yuxing Ma, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P143, DOI 10.1109/MSR.2019.00031
NR 66
TC 1
Z9 2
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2022
VL 27
IS 7
AR 167
DI 10.1007/s10664-022-10201-x
PG 49
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4V4SY
UT WOS:000859469500011
PM 36159898
OA Green Submitted, Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Namavar, M
   Nashid, N
   Mesbah, A
AF Namavar, Marjane
   Nashid, Noor
   Mesbah, Ali
TI A controlled experiment of different code representations for
   learning-based program repair
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Program repair; Deep learning; Code representation; Controlled
   experiment
ID TOOL
AB Training a deep learning model on source code has gained significant traction recently. Since such models reason about vectors of numbers, source code needs to be converted to a code representation before vectorization. Numerous approaches have been proposed to represent source code, from sequences of tokens to abstract syntax trees. However, there is no systematic study to understand the effect of code representation on learning performance. Through a controlled experiment, we examine the impact of various code representations on model accuracy and usefulness in deep learning-based program repair. We train 21 different generative models that suggest fixes for name-based bugs, including 14 different homogeneous code representations, four mixed representations for the buggy and fixed code, and three different embeddings. We assess if fix suggestions produced by the model in various code representations are automatically patchable, meaning they can be transformed to a valid code that is ready to be applied to the buggy code to fix it. We also conduct a developer study to qualitatively evaluate the usefulness of inferred fixes in different code representations. Our results highlight the importance of code representation and its impact on learning and usefulness. Our findings indicate that (1) while code abstractions help the learning process, they can adversely impact the usefulness of inferred fixes from a developer's point of view; this emphasizes the need to look at the patches generated from the practitioner's perspective, which is often neglected in the literature, (2) mixed representations can outperform homogeneous code representations, (3) bug type can affect the effectiveness of different code representations; although current techniques use a single code representation for all bug types, there is no single best code representation applicable to all bug types.
C1 [Namavar, Marjane; Nashid, Noor; Mesbah, Ali] Univ British Columbia, Vancouver, BC, Canada.
C3 University of British Columbia
RP Namavar, M (corresponding author), Univ British Columbia, Vancouver, BC, Canada.
EM marjane@ece.ubc.ca; nashid@ece.ubc.ca; amesbah@ece.ubc.ca
RI Mesbah, Ali/C-3675-2013
OI Mesbah, Ali/0000-0002-8783-7967; Namavar, Marjane/0000-0002-5650-7658
CR Ahmed T, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09942-y
   Allamams M, 2019, PROCEEDINGS OF THE 2019 ACM SIGPLAN INTERNATIONAL SYMPOSIUM ON NEW IDEAS, NEW PARADIGMS, AND REFLECTIONS ON PROGRAMMING AND SOFTWARE (ONWARD!' 19), P143, DOI 10.1145/3359591.3359735
   Allamanis M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P38, DOI 10.1145/2786805.2786849
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   Nguyen AT, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P858, DOI 10.1109/ICSE.2015.336
   [Anonymous], 2017, Neural machine translation (seq2seq) tutorial
   [Anonymous], 2015, P 2015 C EMP METH NA, DOI [10.18653/v1/D15-1166, DOI 10.48550/ARXIV.1508.04025]
   Bader J, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360585
   Bahdanau D, 2016, Arxiv, DOI [arXiv:1409.0473, 10.48550/arXiv.1409.0473]
   Bengio Yoshua, 2012, Neural Networks: Tricks of the Trade. Second Edition: LNCS 7700, P437, DOI 10.1007/978-3-642-35289-8_26
   Bielik P, 2016, PR MACH LEARN RES, V48
   Bojanowski P., 2017, Transactions of the Association for Computational Linguistics, V5, P135, DOI DOI 10.1162/TACLA00051
   Briem J A, 2020, P IEEEACM 42 INT C S, P203
   Brody S, 2020, P ACM PROGRAM LANG, V4, DOI 10.1145/3428283
   Chakraborty S, 2022, IEEE T SOFTWARE ENG, V48, P1385, DOI 10.1109/TSE.2020.3020502
   Chandra S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P121, DOI 10.1145/1985793.1985811
   Chen ZM, 2019, Arxiv, DOI arXiv:1811.05703
   Chen ZM, 2019, Arxiv, DOI arXiv:1904.03061
   Chen ZM, 2021, IEEE T SOFTWARE ENG, V47, P1943, DOI 10.1109/TSE.2019.2940179
   Devlin J, 2017, Arxiv, DOI arXiv:1710.11054
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   Dinella E., 2020, 8 INT C LEARNING REP
   Ding YRB, 2020, IEEE INT CONF AUTOM, P275, DOI 10.1145/3324884.3416587
   Dolan-Gavitt B, 2016, P IEEE S SECUR PRIV, P110, DOI 10.1109/SP.2016.15
   Durieux T, 2016, 2016 IEEE/ACM 11TH INTERNATIONAL WORKSHOP IN AUTOMATION OF SOFTWARE TEST (AST), P85, DOI [10.1145/2896921.2896931, 10.1109/AST.2016.021]
   Eshkevari LM, 2011, Proceedings of the 8th International Working Conference on Mining Software Repositories (MSR 2011), P33
   Feng ZY, 2020, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, EMNLP 2020, P1536
   Gopinath R, 2014, PROC INT SYMP SOFTW, P189, DOI 10.1109/ISSRE.2014.40
   Gupta R, 2018, Arxiv, DOI arXiv:1801.10467
   Gupta R, 2017, AAAI CONF ARTIF INTE, P1345
   Hajipour H, 2020, ABS190610502 CORR
   Hamilton WL, 2017, ADV NEUR IN, V30
   Hanam Q, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P144, DOI 10.1145/2950290.2950308
   Haque S., 2020, INT C MINING SOFTWAR, P300
   Hartmann B, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P1019
   Hata H, 2019, Arxiv, DOI arXiv:1812.07170
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hu X, 2018, INT C PROGRAM COMPRE, P200, DOI 10.1145/3196321.3196334
   Jeffrey D, 2009, INT C PROGRAM COMPRE, P70, DOI 10.1109/ICPC.2009.5090029
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Jiang N, 2021, PROC INT CONF SOFTW, P1161, DOI 10.1109/ICSE43902.2021.00107
   Just R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P654, DOI 10.1145/2635868.2635929
   Kaleeswaran S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P266, DOI 10.1145/2568225.2568258
   Kanade A, 2020, PR MACH LEARN RES, V119
   Karampatsis RM, 2020, IEEE WORK CONF MIN S, P573, DOI 10.1145/3379597.3387491
   Kingma D. P., 2015, PROC INT C LEARN REP, P1
   Koyuncu A, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P314, DOI 10.1145/3338906.3338935
   Le Goues C, 2012, IEEE T SOFTWARE ENG, V38, P54, DOI 10.1109/TSE.2011.104
   Li GJ, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P480, DOI [10.1109/SANER48275.2020.9054826, 10.1109/saner48275.2020.9054826]
   Li X, 2020, APPL SCI-BASEL, V10, DOI 10.3390/app10051692
   Li Y, 2020, PROC INT CONF SOFTW, P602, DOI 10.1145/3377811.3380345
   Lin C.-Y., 2004, COLING 2004 P 20 INT, P501, DOI DOI 10.3115/1220355.1220427
   Liu H, 2016, PROC INT CONF SOFTW, P1063, DOI 10.1145/2884781.2884841
   Liu K, 2019, IEEE INT CONF SOFTW, P102, DOI 10.1109/ICST.2019.00020
   Liu K, 2018, ASIA PAC SOFWR ENG, P658, DOI 10.1109/APSEC.2018.00085
   Liu Q, 2020, Arxiv, DOI arXiv:2003.07278
   Long F, 2016, ACM SIGPLAN NOTICES, V51, P298, DOI 10.1145/2914770.2837617
   Lutellier Thibaud, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P101, DOI 10.1145/3395363.3397369
   Malik M. Z., 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P190, DOI 10.1109/ICST.2011.65
   Malik RS, 2019, PROC INT CONF SOFTW, P304, DOI 10.1109/ICSE.2019.00045
   Marginean A, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P269, DOI 10.1109/ICSE-SEIP.2019.00039
   McCann B., 2017, Advances in neural information processing systems, P1
   Mehne B, 2018, IEEE INT CONF SOFTW, P227, DOI 10.1109/ICST.2018.00031
   Mesbah A, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P925, DOI 10.1145/3338906.3340455
   Karampatsis RM, 2020, Arxiv, DOI arXiv:2004.13214
   Mikolov T., 2013, ADV NEURAL INFORM PR, V26, P3111, DOI DOI 10.5555/2999792.2999959
   Mikolov T, 2013, ICLR WORKSHOP POSTER
   Monperrus M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3105906
   Monperrus M, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P234, DOI 10.1145/2568225.2568324
   Nguyen X, 2020, 8 INT C LEARNING REP
   Pan K, 2009, EMPIR SOFTW ENG, V14, P286, DOI 10.1007/s10664-008-9077-5
   Pandita R, 2016, PROC IEEE INT CONF S, P378, DOI 10.1109/ICSME.2016.59
   Pandita R, 2012, PROC INT CONF SOFTW, P815, DOI 10.1109/ICSE.2012.6227137
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Pennington J., 2014, P 2014 C EMP METH NA, P1532
   Pewny J, 2016, ANN COMPUT SECURITY, P214, DOI 10.1145/2991079.2991103
   Pradel M, 2018, P ACM PROGRAM LANG
   Pradel M, 2013, IEEE T SOFTWARE ENG, V39, P1127, DOI 10.1109/TSE.2013.7
   Pradel Michael, 2011, P 2011 INT S SOFTW T, P232
   Radford Alec, 2018, IMPROVING LANGUAGE U, DOI DOI 10.18653/V1/N18-1202
   Raychev V, 2016, ACM SIGPLAN NOTICES, V51, P761, DOI 10.1145/2914770.2837671
   Raychev V, 2015, ACM SIGPLAN NOTICES, V50, P111, DOI [10.1145/2775051.2677009, 10.1145/2676726.2677009]
   Reimers N, 2019, 2019 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING AND THE 9TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING (EMNLP-IJCNLP 2019), P3982
   Rice A, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133928
   Samimi H, 2012, PROC INT CONF SOFTW, P277, DOI 10.1109/ICSE.2012.6227186
   Sato R, 2020, Arxiv, DOI arXiv:2003.04078
   Schramm L, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P1071, DOI 10.1145/3106237.3121281
   Scott R, 2020, IEEE INT WORK C SO, P227, DOI 10.1109/SCAM51674.2020.00031
   Sellik H, 2021, IEEE WORK CONF MIN S, P58, DOI 10.1109/MSR52588.2021.00019
   Tang G, 2020, 2020 INT S THEORETIC, P1
   Tarlow D., 2020, P IEEEACM 42 INT C S, P19, DOI 10.1145/3387940.3392181
   Tufano M, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3340544
   Tufano M, 2019, PROC INT CONF SOFTW, P25, DOI 10.1109/ICSE.2019.00021
   Tufano M, 2018, IEEE INT CONF AUTOM, P832, DOI 10.1145/3238147.3240732
   Tufano M, 2018, IEEE WORK CONF MIN S, P542, DOI 10.1145/3196398.3196431
   Tufano R, 2021, PROC INT CONF SOFTW, P163, DOI 10.1109/ICSE43902.2021.00027
   Vasic M., 2019, 7 INT C LEARNING REP
   Vaswani A, 2017, ADV NEUR IN, V30
   Velickovic Petar, 2018, INT C LEARN REPR
   Wainakh Y, 2021, PROC INT CONF SOFTW, P562, DOI 10.1109/ICSE43902.2021.00059
   Wang K, 2019, Arxiv, DOI [arXiv:1905.11445, DOI 10.48550/ARXIV.1905.11445]
   Watson C, 2020, PROC INT CONF SOFTW, P1398, DOI 10.1145/3377811.3380429
   White M, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P479, DOI [10.1109/saner.2019.8668043, 10.1109/SANER.2019.8668043]
   Wotawa F, 2012, J LOGIC ALGEBR PROGR, V81, P390, DOI 10.1016/j.jlap.2012.03.002
   Wu ZH, 2021, IEEE T NEUR NET LEAR, V32, P4, DOI 10.1109/TNNLS.2020.2978386
   Zhang J, 2019, PROC INT CONF SOFTW, P783, DOI 10.1109/ICSE.2019.00086
   Zhao R, 2019, Arxiv, DOI arXiv:1904.02818
   Zhou J, 2020, AI OPEN, V1, P57, DOI 10.1016/j.aiopen.2021.01.001
NR 108
TC 4
Z9 4
U1 1
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2022
VL 27
IS 7
AR 190
DI 10.1007/s10664-022-10223-5
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 5B5MB
UT WOS:000863612500001
DA 2024-07-18
ER

PT J
AU Ananieva, S
   Greiner, S
   Kehrer, T
   Krüger, J
   Kühn, T
   Linsbauer, L
   Grüner, S
   Koziolek, A
   Lönn, H
   Ramesh, S
   Reussner, R
AF Ananieva, Sofia
   Greiner, Sandra
   Kehrer, Timo
   Krueger, Jacob
   Kuehn, Thomas
   Linsbauer, Lukas
   Gruener, Sten
   Koziolek, Anne
   Lonn, Henrik
   Ramesh, S.
   Reussner, Ralf
TI A conceptual model for unifying variability in space and time:
   Rationale, validation, and illustrative applications
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Product lines; Variability; Version control; Revision management
ID SOFTWARE; FRAMEWORK; REUSE
AB With the increasing demand for customized systems and rapidly evolving technology, software engineering faces many challenges. A particular challenge is the development and maintenance of systems that are highly variable both in space (concurrent variations of the system at one point in time) and time (sequential variations of the system, due to its evolution). Recent research aims to address this challenge by managing variability in space and time simultaneously. However, this research originates from two different areas, software product line engineering and software configuration management, resulting in non-uniform terminologies and a varying understanding of concepts. These problems hamper the communication and understanding of involved concepts, as well as the development of techniques that unify variability in space and time. To tackle these problems, we performed an iterative, expert-driven analysis of existing tools from both research areas to derive a conceptual model that integrates and unifies concepts of both dimensions of variability. In this article, we first explain the construction process and present the resulting conceptual model. We validate the model and discuss its coverage and granularity with respect to established concepts of variability in space and time. Furthermore, we perform a formal concept analysis to discuss the commonalities and differences among the tools we considered. Finally, we show illustrative applications to explain how the conceptual model can be used in practice to derive conforming tools. The conceptual model unifies concepts and relations used in software product line engineering and software configuration management, provides a unified terminology and common ground for researchers and developers for comparing their works, clarifies communication, and prevents redundant developments.
C1 [Ananieva, Sofia] FZI Res Ctr Informat Technol Berlin, Berlin, Germany.
   [Greiner, Sandra] Univ Bayreuth, Bayreuth, Germany.
   [Kehrer, Timo] Humboldt Univ, Berlin, Germany.
   [Kehrer, Timo] Univ Bern, Bern, Switzerland.
   [Krueger, Jacob] Otto von Guericke Univ, Magdeburg, Germany.
   [Krueger, Jacob] Ruhr Univ Bochum, Bochum, Germany.
   [Kuehn, Thomas; Koziolek, Anne; Reussner, Ralf] Karlsruhe Inst Technol, Karlsruhe, Germany.
   [Linsbauer, Lukas] Tech Univ Carolo Wilhelmina Braunschweig, Braunschweig, Germany.
   [Gruener, Sten] ABB Corp Res Ctr, Ladenburg, Germany.
   [Lonn, Henrik] Volvo Grp Trucks Technol, Gothenburg, Sweden.
   [Ramesh, S.] Gen Motors Global R&D Bangalore, Bangalore, Karnataka, India.
C3 University of Bayreuth; Humboldt University of Berlin; University of
   Bern; Otto von Guericke University; Ruhr University Bochum; Helmholtz
   Association; Karlsruhe Institute of Technology; Braunschweig University
   of Technology; ABB; Volvo
RP Ananieva, S (corresponding author), FZI Res Ctr Informat Technol Berlin, Berlin, Germany.
EM ananieva@fzi.de; Sandra1.Greiner@uni-bayreuth.de;
   timo.kehrer@informatik.hu-berlin.de; jacob.krueger@rub.de;
   thomas.kuehn@kit.edu; l.linsbauer@tu-braunschweig.de;
   sten.gruener@de.abb.com; koziolek@kit.edu; Henrik.Lonn@volvo.com;
   ramesh.s@gm.com; reussner@kit.edu
RI Kehrer, Timo/AAI-6563-2020; Koziolek, Anne/T-2305-2019
OI Kehrer, Timo/0000-0002-2582-5557; Linsbauer, Sofia/0000-0001-8481-8288;
   Greiner, Sandra/0000-0001-8950-0092
FU Projekt DEAL
FX Open Access funding enabled and organized by Projekt DEAL.
CR Ahlemann F, 2008, WIRTSCHAFTSINF, V50, P88, DOI 10.1365/s11576-008-0028-y
   Alves Pereira Juliana, 2014, Software Reuse for Dynamic Systems in the Cloud and Beyond 14th International Conference on Software Reuse, ICSR 2015. Proceedings: LNCS 8919, P73, DOI 10.1007/978-3-319-14130-5_6
   Ananieva, 2020, INT SYST SOFTW PROD, DOI DOI 10.1145/3382025.3414955
   Ananieva S, 2019, SOFTWARE EVOLUTION T, DOI [10.4230/DagRep.9.5.1, DOI 10.4230/DAGREP.9.5.1]
   Ananieva S, 2019, 23RD INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE(SPLC 2019), VOL B, P44, DOI 10.1145/3307630.3342412
   Ananieva Sofia, 2018, P 12 INT WORKSH VAR, P3, DOI [10.1145/3168365.3168377, DOI 10.1145/3168365.3168377]
   Anastasopoulos M., 2001, Software Engineering Notes, V26, P109, DOI 10.1145/379377.375269
   [Anonymous], 2013, SYSTEMS SOFTWARE VAR, DOI DOI 10.1007/978-3-642-36583-6_12
   [Anonymous], 2014, OBJECT CONSTRAINT LA
   [Anonymous], 2012, 16 INT SOFTWARE PROD, DOI DOI 10.1145/2362536.2362556
   Apel S., 2013, Feature-Oriented Software Development: Concepts and Implementation
   Apel S, 2009, J OBJECT TECHNOL, V8, P49, DOI 10.5381/jot.2009.8.5.c5
   Apel S, 2009, PROC INT CONF SOFTW, P221, DOI 10.1109/ICSE.2009.5070523
   Apel S, 2009, LECT NOTES COMPUT SC, V5563, P4, DOI 10.1007/978-3-642-02408-5_2
   Asikainen T, 2006, SPLC 2006: 10TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P31, DOI 10.1109/SPLINE.2006.1691575
   Bashroush R, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3034827
   Batory D, 2005, LECT NOTES COMPUT SC, V3714, P7
   Berger Thorsten, 2019, DAGSTUHL REPORTS, V9, P1, DOI 10.4230/DagRep.9.5.1
   Bosch J, 2010, IEEE SOFTWARE, V27, P29, DOI 10.1109/MS.2010.32
   Collins-Sussman Ben., 2008, VERSION CONTROL SUBV
   Conradi R, 1998, ACM COMPUT SURV, V30, P232, DOI 10.1145/280277.280280
   Czarnecki K, 2006, SPLC 2006: 10TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P41, DOI 10.1109/SPLINE.2006.1691576
   Czarnecki Krzysztof., 2012, P 6 INT WORKSHOP VAR, P173, DOI DOI 10.1145/2110147.2110167
   Dintzner N, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P85, DOI [10.1109/MSR.2016.018, 10.1145/2901739.2901755]
   Dubinsky Y, 2013, EUR CON SFTWR MTNCE, P25, DOI 10.1109/CSMR.2013.13
   Estublier J, 2000, C FUT SOFTW ENG ICSE, DOI [10.1145/336512.336576, DOI 10.1145/336512.336576]
   Fischer S, 2015, 2015 IEEE/ACM 37th IEEE International Conference on Software Engineering, Vol 2, P665, DOI 10.1109/ICSE.2015.218
   Fischer S, 2014, PROC IEEE INT CONF S, P391, DOI 10.1109/ICSME.2014.61
   Galster M, 2014, IEEE T SOFTWARE ENG, V40, P282, DOI 10.1109/TSE.2013.56
   Gamez Nadia, 2011, Top Productivity through Software Reuse. Proceedings of the 12th International Conference on Software Reuse, ICSR 2011, P102, DOI 10.1007/978-3-642-21347-2_9
   Ganter B, 2005, LECT NOTES ARTIF INT, V3626, P101
   Ganter B., 1999, Formal Concept Analysis: Mathematical Foundations, DOI [10.1007/978-3-642-59830-2, DOI 10.1007/978-3-642-59830-2]
   Gheyi R, 2008, J UNIVERS COMPUT SCI, V14, P3573
   Guizzardi G, 2005, LECT NOTES COMPUT SC, V3713, P691, DOI 10.1007/11557432_51
   Horcas JM, 2020, SPLC'19: PROCEEDINGS OF THE 23RD INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL A, P164, DOI 10.1145/3336294.3336304
   Johansen M.F., 2010, SPLC 10, P163
   Kästner C, 2009, PROC INT CONF SOFTW, P611, DOI 10.1109/ICSE.2009.5070568
   Kang K. C., 1990, Technical Report
   Kang KC, 1998, ANN SOFTW ENG, V5, P143, DOI 10.1023/A:1018980625587
   Kehrer T, 2021, 2021 ACM/IEEE 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2021), P21, DOI 10.1109/ICSE-NIER52604.2021.00013
   Kehrer T, 2014, AT-AUTOM, V62, P803, DOI 10.1515/auto-2014-1102
   Kehrer T, 2013, IEEE INT CONF AUTOM, P191, DOI 10.1109/ASE.2013.6693079
   Klare H, 2021, J SYST SOFTWARE, V171, DOI 10.1016/j.jss.2020.110815
   Kramer MaxE., 2013, P 1 WORKSHOP VIEW BA, DOI DOI 10.1145/2489861.2489864
   Krger J, 2020, INT SYSTEMS SOFTWARE, P1, DOI [10.1145/3382025.3414944, DOI 10.1145/3382025.3414944]
   Kröher C, 2018, SPLC'18: PROCEEDINGS OF THE 22ND INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL 1, P54, DOI 10.1145/3233027.3233032
   Krueger C, 2013, PROCEEDINGS OF THE 17TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE CO-LOCATED WORKSHOPS (SPLC'13 WORKSHOPS), P136
   Krüger J, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P432, DOI 10.1145/3368089.3409684
   Krüger J, 2019, PROCEEDINGS OF THE 13TH INTERNATIONAL WORKSHOP ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS (VAMOS '19), DOI 10.1145/3302333.3302348
   Linsbauer L, 2021, J SYST SOFTWARE, V171, DOI 10.1016/j.jss.2020.110796
   Linsbauer L, 2018, SPLC'18: PROCEEDINGS OF THE 22ND INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL 1, P294, DOI 10.1145/3233027.3241372
   Linsbauer L, 2017, PROCEEDINGS OF THE 16TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING: CONCEPTS AND EXPERIENCES (GPCE'17), P49, DOI 10.1145/3136040.3136054
   Linsbauer L, 2017, SOFTW SYST MODEL, V16, P1179, DOI 10.1007/s10270-015-0512-y
   Linsbauer L, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P803, DOI 10.1145/2889160.2889262
   Loeliger J, 2012, Version Control with Git
   MacKay S. A., 1995, Software Configuration Management. ICSE SCM-4 and SCM-5 Workshops. Selected Papers, P180
   Meinicke Jens, 2017, Mastering Software Variability with FeatureIDE, DOI [10.1007/978-3-319-61443-4, DOI 10.1007/978-3-319-61443-4]
   Nesic D, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P62, DOI 10.1145/3338906.3338974
   Nieke Michael., 2017, P 11 INT WORKSHOP VA, P92, DOI DOI 10.1145/3023956.3023962
   Nieke Michael, 2019, INT SYSTEMS SOFTWARE, P320
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Northrop LM, 2002, IEEE SOFTWARE, V19, P32, DOI 10.1109/MS.2002.1020285
   Parnas D. L., 1976, IEEE Transactions on Software Engineering, VSe-2, P1, DOI 10.1109/TSE.1976.233797
   Passos Leonardo, 2013, VaMoS, P1
   Pietsch C, 2020, MODEL MANAGEMENT AND ANALYTICS FOR LARGE SCALE SYSTEMS, P167, DOI 10.1016/B978-0-12-816649-9.00017-X
   Pietsch C, 2015, IEEE INT CONF AUTOM, P852, DOI 10.1109/ASE.2015.106
   Pietsch Christopher, 2019, P INT SYST SOFTW PRO
   Pohl K., 2005, Software Product Line Engineering: Foundations, Principles and Techniques, V1, DOI [10.1007/3-540-28901-1, DOI 10.1007/3-540-28901-1]
   Rubin J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1233, DOI 10.1109/ICSE.2013.6606686
   Ruparelia N.B., 2010, SIGSOFT SOFTW ENG NO, V35, P5, DOI DOI 10.1145/1668862.1668876
   Schaefer I., 2012, International Journal on Software Tools for Technology Transfer (STTT), V14, P477, DOI [DOI 10.1007/S10009-012-0253-Y, 10.1007/s10009-012-0253-y]
   Schaefer I, 2010, LECT NOTES COMPUT SC, V6287, P77, DOI 10.1007/978-3-642-15579-6_6
   Schobbens PY, 2007, COMPUT NETW, V51, P456, DOI 10.1016/j.comnet.2006.08.008
   Schulze S, 2016, TENTH INTERNATIONAL WORKSHOP ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS (VAMOS 2016), P9, DOI 10.1145/2866614.2866616
   Schwäger F, 2019, SOFTW SYST MODEL, V18, P3373, DOI 10.1007/s10270-019-00722-3
   Schwägerl F, 2016, IEEE INT CONF AUTOM, P822, DOI 10.1145/2970276.2970288
   Schwagerl Felix, 2018, Ph.D. Dissertation
   Seidl C, 2014, MODELLIERUNG MODELLI
   Seidl C, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P22, DOI 10.1145/2648511.2648514
   Seidl Christoph., 2014, P 8 INT WORKSHOP VAR, V6, P1, DOI [DOI 10.1145/2556624.2556625, 10.1145/2556624.2556625]
   Stanciulescu S, 2015, PROC IEEE INT CONF S, P151, DOI 10.1109/ICSM.2015.7332461
   Strüber D, 2020, SPLC'19: PROCEEDINGS OF THE 23RD INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL A, P177, DOI 10.1145/3336294.3336302
   Svahnberg M, 2005, SOFTWARE PRACT EXPER, V35, P705, DOI 10.1002/spe.652
   ter Beek MH, 2019, 23RD INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE(SPLC 2019), VOL B, P151, DOI 10.1145/3307630.3342398
   Thüm T, 2019, 23RD INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE(SPLC 2019), VOL B, P57, DOI 10.1145/3307630.3342414
   Vogel-Heuser B., 2014, Researching Evolution in Industrial Plant Automation: Scenarios and Documentation of the Pick and Place Unit
   Westfechtel B, 2001, IEEE T SOFTWARE ENG, V27, P1111, DOI 10.1109/32.988710
NR 87
TC 1
Z9 2
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2022
VL 27
IS 5
AR 101
DI 10.1007/s10664-021-10097-z
PG 53
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 1U7GT
UT WOS:000805577100014
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Haryono, SA
   Thung, F
   Lo, D
   Jiang, LX
   Lawall, J
   Kang, HJ
   Serrano, L
   Muller, G
AF Haryono, Stefanus A.
   Thung, Ferdian
   Lo, David
   Jiang, Lingxiao
   Lawall, Julia
   Kang, Hong Jin
   Serrano, Lucas
   Muller, Gilles
TI AndroEvolve: automated Android API update with data flow analysis and
   variable denormalization
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Program transformation; Android; Data flow analysis; Readability; API
   deprecation; API update
ID AGREEMENT
AB The Android operating system is frequently updated, with each version bringing a new set of APIs. New versions may involve API deprecation; Android apps using deprecated APIs need to be updated to ensure the apps' compatibility with old and new Android versions. Updating deprecated APIs is a time-consuming endeavor. Hence, automating the updates of Android APIs can be beneficial for developers. CocciEvolve is the state-of-the-art approach for this automation. However, it has several limitations, including its inability to resolve out-of-method variables and the low code readability of its updates due to the addition of temporary variables. In an attempt to further improve the performance of automated Android API update, we propose an approach named AndroEvolve, that addresses the limitations of CocciEvolve through the addition of data flow analysis and variable name denormalization. Data flow analysis enables AndroEvolve to resolve the value of any variable within the file scope. Variable name denormalization replaces temporary variables that may present in the CocciEvolve update with appropriate values in the target file. We have evaluated the performance of AndroEvolve and the readability of its updates on 372 target files containing 565 deprecated API usages. Each target file represents a file from an Android application that uses a deprecated API in its code. AndroEvolve successfully updates 481 out of 565 deprecated API invocations correctly, achieving an accuracy of 85.1%. Compared to CocciEvolve, AndroEvolve produces 32.9% more instances of correct updates. Moreover, our manual and automated evaluation shows that AndroEvolve updates are more readable than CocciEvolve updates.
C1 [Haryono, Stefanus A.; Thung, Ferdian; Lo, David; Jiang, Lingxiao; Kang, Hong Jin] Singapore Management Univ, Sch Comp & Informat Syst, Singapore, Singapore.
   [Lawall, Julia; Muller, Gilles] Inria, Paris, France.
   [Serrano, Lucas] Sorbonne Univ, Inria, LIP6, Paris, France.
C3 Singapore Management University; Inria; Sorbonne Universite; Inria
RP Haryono, SA (corresponding author), Singapore Management Univ, Sch Comp & Informat Syst, Singapore, Singapore.
EM stefanusah@smu.edu.sg; ferdianthung@smu.edu.sg; davidlo@smu.edu.sg;
   lxjiang@smu.edu.sg; Julia.Lawall@inria.fr; hjkang.2018@smu.edu.sg;
   Lucas.Serrano@lip6.fr; Gilles.Muller@inria.fr
RI Thung, Ferdian/AAX-9321-2020; Jiang, Lingxiao/E-8553-2012; Lo,
   David/A-2493-2012
OI Jiang, Lingxiao/0000-0002-4336-8548; Agus, Stefanus/0000-0003-1625-3777;
   Lo, David/0000-0002-4367-7201
FU Singapore National Research Foundation [NRF2016-NRF-ANR003]; ANR ITrans
   project
FX This research is supported by the Singapore National Research Foundation
   (award number: NRF2016-NRF-ANR003) and the ANR ITrans project.
CR Asyrofi MH, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P637, DOI [10.1109/SANER48275.2020.9054809, 10.1109/saner48275.2020.9054809]
   Bakeman R., 1986, OBSERVING INTERACTIO
   Bodik R, 1997, ACM SIGPLAN NOTICES, V32, P159, DOI 10.1145/258916.258930
   Brito G, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P360, DOI 10.1109/SANER.2016.99
   Brunel J, 2009, ACM SIGPLAN NOTICES, V44, P114, DOI 10.1145/1594834.1480897
   Buse RPL, 2010, IEEE T SOFTWARE ENG, V36, P546, DOI 10.1109/TSE.2009.70
   COHEN J, 1968, PSYCHOL BULL, V70, P213, DOI 10.1037/h0026256
   Cui ZQ, 2020, IEEE ACCESS, V8, P172296, DOI 10.1109/ACCESS.2020.3025460
   Dan Han, 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P83, DOI 10.1109/WCRE.2012.18
   Fazzini M, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P204, DOI 10.1145/3293882.3330571
   Ghandour WJ, 2010, PACT 2010: PROCEEDINGS OF THE NINETEENTH INTERNATIONAL CONFERENCE ON PARALLEL ARCHITECTURES AND COMPILATION TECHNIQUES, P431, DOI 10.1145/1854273.1854327
   Gokhale A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P82, DOI 10.1109/ICSE.2013.6606554
   Gupta R, 1997, 1997 INTERNATIONAL CONFERENCE ON PARALLEL ARCHITECTURES AND COMPILATION TECHNIQUES, PROCEEDINGS, P102, DOI 10.1109/PACT.1997.644007
   Haryono SA, 2020, INT C PROGRAM COMPRE, P401, DOI 10.1145/3387904.3389285
   Hoffmann J., 2013, P 28 ANN ACM S APPL, P1844
   Hora A, 2015, PROC IEEE INT CONF S, P251, DOI 10.1109/ICSM.2015.7332471
   Jacobellis J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1319, DOI 10.1109/ICSE.2013.6606707
   Kang Hong Jin, 2019, 33 EUR C OBJ OR PROG
   Khedker U., 2009, Data Flow Analysis: Theory and Practice, V1st
   Kim Y, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3345628
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Lawall J, 2018, PROCEEDINGS OF THE 2018 USENIX ANNUAL TECHNICAL CONFERENCE, P601
   Li J, 2015, PROCEEDINGS OF THE 2015 ACM SIGPLAN WORKSHOP ON PARTIAL EVALUATION AND PROGRAM MANIPULATION (PEPM'15), P91, DOI 10.1145/2678015.2682534
   Li L, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P153, DOI 10.1145/3213846.3213857
   Li L, 2018, IEEE WORK CONF MIN S, P254, DOI 10.1145/3196398.3196419
   McDonnell T, 2013, PROC IEEE INT CONF S, P70, DOI 10.1109/ICSM.2013.18
   Meng N, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P502, DOI 10.1109/ICSE.2013.6606596
   Mi Q, 2018, INFORM SOFTWARE TECH, V104, P60, DOI 10.1016/j.infsof.2018.07.006
   Padioleau Y, 2008, EUROSYS'08: PROCEEDINGS OF THE EUROSYS 2008 CONFERENCE, P247, DOI 10.1145/1357010.1352618
   Pandita R, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1845
   Posnett D, 2011, P 8 WORKING C MINING, P73
   Robbes R., 2012, P ACM SIGSOFT 20 INT, P1, DOI 10.1145/2393596.2393662
   Rolim R, 2017, PROC INT CONF SOFTW, P404, DOI 10.1109/ICSE.2017.44
   Sawant AA, 2018, EMPIR SOFTW ENG, V23, P2158, DOI 10.1007/s10664-017-9554-9
   Scalabrino S, 2016, 2016 IEEE 24TH INTERNATIONAL CONFERENCE ON PROGRAM COMPREHENSION (ICPC)
   Scalabrino S, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1958
   Scalabrino S, 2017, IEEE INT CONF AUTOM, P417, DOI 10.1109/ASE.2017.8115654
   Strobl R, 2013, MIGRATION DEPRECATED, P85, DOI [10.1145/2508075.2508093, DOI 10.1145/2508075.2508093]
   Thung F, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P602, DOI [10.1109/SANER48275.2020.9054860, 10.1109/saner48275.2020.9054860]
   UPTON GJG, 1992, J ROY STAT SOC A STA, V155, P395, DOI 10.2307/2982890
   Visser E., 2001, Rewriting Techniques and Applications. 12th International Conference, RTA 2001. Proceedings (Lecture Notes in Computer Science Vol.2051), P357
   Wei LL, 2016, IEEE INT CONF AUTOM, P226, DOI 10.1145/2970276.2970312
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
   Xi YG, 2019, 11TH ASIA-PACIFIC SYMPOSIUM ON INTERNETWARE (INTERNETWARE 2019), DOI 10.1145/3361242.3361246
   Yang GW, 2018, 2018 IEEE/ACM 5TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT), P156, DOI 10.1145/3197231.3197258
   Zhang MS, 2021, IEEE T SOFTWARE ENG, V47, P1089, DOI 10.1109/TSE.2019.2911283
   Zhou J, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P266, DOI 10.1145/2950290.2950298
   Zhou XY, 2014, P IEEE S SECUR PRIV, P409, DOI 10.1109/SP.2014.33
NR 48
TC 7
Z9 7
U1 1
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAY
PY 2022
VL 27
IS 3
AR 73
DI 10.1007/s10664-021-10096-0
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZV2BV
UT WOS:000770339500015
DA 2024-07-18
ER

PT J
AU Karakatic, S
   Milosevic, A
   Hericko, T
AF Karakatic, Saso
   Milosevic, Aleksej
   Hericko, Tjasa
TI Software system comparison with semantic source code embeddings
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Source code embeddings; Software comparison; Code similarity; code2vec;
   Machine learning
ID SIMILARITY; PLAGIARISM; ACCURATE; DISTANCE
AB This paper presents a novel approach for comparing software systems by calculating the robust Hausdorff distance between semantic source code embeddings of individual software components, i.e., methods. The proposed approach represents each software as a set of vectors, where every vector is a semantic source code embedding of a particular method. The code embeddings are constructed from abstract syntax trees of the methods with the help of attention-based neural network models that capture the semantics of the methods. Previous research has shown that comparing semantic source code embeddings can reveal semantic relationships between the two methods. We utilize this characteristic to estimate the semantic similarity between the two software systems by computing the robust Hausdorff distance. In the experiment, a pre-trained code2vec neural network model is used to create the source code vector representations of several open-source Java-based libraries. Several variations of the robust Hausdorff distance are evaluated. The results show that the proposed approach can effectively estimate the semantic similarity, reflecting the software library's scopes, software evolution, and individual parts (e.g., packages) of those libraries.
C1 [Karakatic, Saso; Milosevic, Aleksej; Hericko, Tjasa] Univ Maribor, Fac Elect Engn & Comp Sci, Koroska Cesta 46, Maribor 2000, Slovenia.
C3 University of Maribor
RP Hericko, T (corresponding author), Univ Maribor, Fac Elect Engn & Comp Sci, Koroska Cesta 46, Maribor 2000, Slovenia.
EM saso.karakatic@um.si; milosevic.aleksej@gmail.com; tjasa.hericko@um.si
RI Heričko, Tjaša/AHE-8335-2022; Karakatič, Sašo/J-8339-2019
OI Heričko, Tjaša/0000-0002-0410-7724; Karakatič, Sašo/0000-0003-4441-9690
FU Slovenian Research Agency [P2-0057]
FX This work was supported by the Slovenian Research Agency (Research Core
   Funding No. P2-0057).
CR Al-Debagy O, 2021, SCALABLE COMPUT-PRAC, V22, P39, DOI 10.12694/scpe.v22i1.1836
   Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   Alon U, 2018, ACM SIGPLAN NOTICES, V53, P404, DOI [10.1145/3192366.3192412, 10.1145/3296979.3192412]
   Alon Uri, 2019, INT C LEARN REPR
   [Anonymous], 2018, UMAP UNIFORM MANIFOL, DOI DOI 10.21105/JOSS.00861
   Barr JR, 2020, 2020 SECOND INTERNATIONAL CONFERENCE ON TRANSDISCIPLINARY AI (TRANSAI 2020), P80, DOI 10.1109/TransAI49837.2020.00017
   Baxter ID, 1998, PROC IEEE INT CONF S, P368, DOI 10.1109/ICSM.1998.738528
   Becht E, 2019, NAT BIOTECHNOL, V37, P38, DOI 10.1038/nbt.4314
   Bellon S, 2007, IEEE T SOFTWARE ENG, V33, P577, DOI 10.1109/TSE.2007.70725
   Ben-Nun Tal, 2018, P 32 INT C NEURAL IN, V31, P3589
   Capiluppi A, 2020, INFORM SOFTWARE TECH, V122, DOI 10.1016/j.infsof.2020.106279
   Chae DK, 2013, PROCEEDINGS OF THE 22ND ACM INTERNATIONAL CONFERENCE ON INFORMATION & KNOWLEDGE MANAGEMENT (CIKM'13), P1577, DOI 10.1145/2505515.2507848
   Chen K, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P175, DOI 10.1145/2568225.2568286
   Compton R, 2020, IEEE WORK CONF MIN S, P243, DOI 10.1145/3379597.3387445
   Csuvik V, 2019, LECT NOTES COMPUT SC, V11622, P529, DOI 10.1007/978-3-030-24305-0_40
   Dann A, 2019, SOAP'19: PROCEEDINGS OF THE 8TH ACM SIGPLAN INTERNATIONAL WORKSHOP ON STATE OF THE ART IN PROGRAM ANALYSIS, P14, DOI 10.1145/3315568.3329966
   Decker MJ, 2020, J SOFTW-EVOL PROC, V32, DOI 10.1002/smr.2226
   DeFreez D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P423, DOI 10.1145/3236024.3236059
   Deza MM, 2009, Encyclopedia of distances, P1, DOI [10.1007/978-3-642-00234-2, DOI 10.1007/978-3-642-00234-2]
   DUBUISSON MP, 1994, INT C PATT RECOG, P566, DOI 10.1109/ICPR.1994.576361
   Duric Z, 2013, COMPUT J, V56, P70, DOI 10.1093/comjnl/bxs018
   FAIDHI JAW, 1987, COMPUT EDUC, V11, P11, DOI 10.1016/0360-1315(87)90042-X
   Falleri Jean-Remy, 2014, P 29 ACM IEEE INT C, P313
   Figalli A, 2010, J MATH PURE APPL, V94, P107, DOI 10.1016/j.matpur.2009.11.005
   Gardner A, 2014, PROC CVPR IEEE, P137, DOI 10.1109/CVPR.2014.25
   Halstead M. H., 1977, ELEMENTS SOFTWARE SC
   Hemel A., 2011, P 8 WORK C MIN SOFTW, P63
   Henkel J, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P163, DOI 10.1145/3236024.3236085
   HUTTENLOCHER DP, 1993, IEEE T PATTERN ANAL, V15, P850, DOI 10.1109/34.232073
   Jhi YC, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P756, DOI 10.1145/1985793.1985899
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kang HJ, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1, DOI 10.1109/ASE.2019.00011
   Kapser C., 2003, Evolution of large scale industrial software architectures, V16, P107
   Kobak D, 2021, NAT BIOTECHNOL, V39, DOI 10.1038/s41587-020-00809-z
   Kovalenko Vladimir, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P13, DOI 10.1109/MSR.2019.00013
   Krinke J, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P301, DOI 10.1109/WCRE.2001.957835
   Levina E, 2001, EIGHTH IEEE INTERNATIONAL CONFERENCE ON COMPUTER VISION, VOL II, PROCEEDINGS, P251, DOI 10.1109/ICCV.2001.937632
   Li LQ, 2017, PROC IEEE INT CONF S, P249, DOI 10.1109/ICSME.2017.46
   Luan SF, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360578
   Luo LN, 2017, IEEE T SOFTWARE ENG, V43, P1157, DOI 10.1109/TSE.2017.2655046
   Mathur A, 2012, IEEE ANNU SOFTW ENG, P168, DOI 10.1109/SEW.2012.24
   McInnes L, 2018, J OPEN SOURCE SOFTWA, V3, P861, DOI [DOI 10.21105/JOSS.00861, 10.21105/joss.00861]
   Mikolov Tomas, 2013, Preprints
   Nafi KW, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1026, DOI 10.1109/ASE.2019.00099
   Nguyen PT, 2020, SOFTWARE QUAL J, V28, P595, DOI 10.1007/s11219-019-09483-0
   Ottenstein K. J., 1976, ACM SIGCSE Bulletin, V8, P30, DOI [DOI 10.1145/382222.382462, 10.1145/382222.382462]
   Palo H.K., 2021, Data Analytics in Bioinformatics: A Machine Learning Perspective, P77, DOI 10.1002/9781119785620.CH4
   Pauzi Zaki, 2020, Intelligent Data Engineering and Automated Learning - IDEAL 2020. 21st International Conference. Proceedings. Lecture Notes in Computer Science (LNCS 12489), P124, DOI 10.1007/978-3-030-62362-3_12
   Pennington J., 2014, P 2014 C EMP METH NA, P1532
   Pigazzini I, 2019, 13TH EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE (ECSA 2019), VOL 2, P59, DOI 10.1145/3344948.3344951
   Prechelt L, 2002, J UNIVERS COMPUT SCI, V8, P1016
   Rabin Md Rafiqul Islam, 2020, RL+SE&PL 2020: Proceedings of the 1st ACM SIGSOFT International Workshop on Representation Learning for Software Engineering and Program Languages, P29, DOI 10.1145/3416506.3423580
   Ragkhitwetsagul C, 2018, EMPIR SOFTW ENG, V23, P2464, DOI 10.1007/s10664-017-9564-7
   Roy CK, 2008, INT C PROGRAM COMPRE, P172, DOI 10.1109/ICPC.2008.41
   Sajnani H, 2016, PROC INT CONF SOFTW, P1157, DOI 10.1145/2884781.2884877
   Schleimer Saul, 2003, P 2003 ACM SIGMOD IN, P76, DOI [10.1145/872757.872770, DOI 10.1145/872757.872770]
   Shan SQ, 2014, APPL MECH MATER, V667, P32, DOI 10.4028/www.scientific.net/AMM.667.32
   Sheneamer A, 2016, 2016 15TH IEEE INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA 2016), P1024, DOI [10.1109/ICMLA.2016.156, 10.1109/ICMLA.2016.0185]
   Shi K, 2020, J COMPUT LANG, V59, DOI 10.1016/j.cola.2020.100979
   Smith SP, 2019, 2019 IEEE 10 INT C S, P1
   Tufano M, 2018, IEEE WORK CONF MIN S, P542, DOI 10.1145/3196398.3196431
   Turian J, 2010, ACL 2010: 48TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, P384
   Ul Ain Q, 2019, IEEE ACCESS, V7, P86121, DOI 10.1109/ACCESS.2019.2918202
   White M, 2016, IEEE INT CONF AUTOM, P87, DOI 10.1145/2970276.2970326
   Xiao Li, 2010, Proceedings 2010 International Symposium on Intelligence Information Processing and Trusted Computing (IPTC 2010), P406, DOI 10.1109/IPTC.2010.90
   Ye F, 2021, MISIM NOVEL CODE SIM
   Yuan Y, 2012, IEEE INT CONF AUTOM, P286, DOI 10.1145/2351676.2351725
   Zhang J, 2019, PROC INT CONF SOFTW, P783, DOI 10.1109/ICSE.2019.00086
   Zhao JL, 2015, 2015 10TH INTERNATIONAL CONFERENCE ON BROADBAND AND WIRELESS COMPUTING, COMMUNICATION AND APPLICATIONS (BWCCA 2015), P178, DOI 10.1109/BWCCA.2015.52
NR 69
TC 4
Z9 4
U1 1
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAY
PY 2022
VL 27
IS 3
AR 70
DI 10.1007/s10664-022-10122-9
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZV2BV
UT WOS:000770339500001
DA 2024-07-18
ER

PT J
AU Pecorelli, F
   Lujan, S
   Lenarduzzi, V
   Palomba, F
   De Lucia, A
AF Pecorelli, Fabiano
   Lujan, Savanna
   Lenarduzzi, Valentina
   Palomba, Fabio
   De Lucia, Andrea
TI On the adequacy of static analysis warnings with respect to code smell
   prediction
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Code Smells; Static Analysis Tools; Machine Learning
ID IMPACT
AB Code smells are poor implementation choices that developers apply while evolving source code and that affect program maintainability. Multiple automated code smell detectors have been proposed: while most of them relied on heuristics applied over software metrics, a recent trend concerns the definition of machine learning techniques. However, machine learning-based code smell detectors still suffer from low accuracy: one of the causes is the lack of adequate features to feed machine learners. In this paper, we face this issue by investigating the role of static analysis warnings generated by three state-of-the-art tools to be used as features of machine learning models for the detection of seven code smell types. We conduct a three-step study in which we (1) verify the relation between static analysis warnings and code smells and the potential predictive power of these warnings; (2) build code smell prediction models exploiting and combining the most relevant features coming from the first analysis; (3) compare and combine the performance of the best code smell prediction model with the one achieved by a state of the art approach. The results reveal the low performance of the models exploiting static analysis warnings alone, while we observe significant improvements when combining the warnings with additional code metrics. Nonetheless, we still find that the best model does not perform better than a random model, hence leaving open the challenges related to the definition of ad-hoc features for code smell prediction.
C1 [Pecorelli, Fabiano; Lujan, Savanna] Tampere Univ, Tampere, Finland.
   [Lenarduzzi, Valentina] LUT Univ, Lappeenranta, Finland.
   [Lenarduzzi, Valentina] Univ Oulu, Oulu, Finland.
   [Palomba, Fabio; De Lucia, Andrea] Univ Salerno, SeSa Lab, Fisciano, Italy.
C3 Tampere University; Lappeenranta-Lahti University of Technology LUT;
   University of Oulu; University of Salerno
RP Pecorelli, F (corresponding author), Tampere Univ, Tampere, Finland.
EM fabiano.pecorelli@tuni.fi; savanna.lujan@tuni.fi;
   valentina.lenarduzzi@oulu.fi; fpalomba@unisa.it; adelucia@unisa.it
RI Pecorelli, Fabiano/HKO-8789-2023; De Lucia, Andrea/AAG-6781-2020
OI Pecorelli, Fabiano/0000-0003-2446-4291; 
FU Swiss National Science Foundation through the SNF [PZ00P2 186090]
FX The authors would like to sincerely thank the Associate Editor and
   anonymous Reviewers for the insightful comments and feedback provided
   during the review process. Fabio acknowledges the support of the Swiss
   National Science Foundation through the SNF Project No. PZ00P2 186090
   (TED).
CR Abbes M, 2011, EUR CON SFTWR MTNCE, P181, DOI 10.1109/CSMR.2011.24
   Al-Shaaby A, 2020, ARAB J SCI ENG, V45, P2341, DOI 10.1007/s13369-019-04311-w
   Amorim L, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P261, DOI 10.1109/ISSRE.2015.7381819
   [Anonymous], 1998, REFACTORING SOFTWARE
   Azeem MI, 2019, INFORM SOFTWARE TECH, V108, P115, DOI 10.1016/j.infsof.2018.12.009
   BANKER RD, 1993, COMMUN ACM, V36, P81, DOI 10.1145/163359.163375
   Carver JC, 2014, REPLICATIONS SOFTWAR
   Catolino G, 2020, EMPIR SOFTW ENG, V25, P49, DOI 10.1007/s10664-019-09739-0
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Cunningham W., 1993, OOPS Messenger, V4, P29
   Das AK, 2019, TENCON IEEE REGION, P2081, DOI [10.1109/tencon.2019.8929628, 10.1109/TENCON.2019.8929628]
   Sobrinho EVD, 2021, IEEE T SOFTWARE ENG, V47, P17, DOI 10.1109/TSE.2018.2880977
   Di Nucci D, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P612, DOI 10.1109/SANER.2018.8330266
   Emanuelsson P, 2008, ELECTRON NOTES THEOR, V217, P5, DOI 10.1016/j.entcs.2008.06.039
   Falessi D, 2017, INT SYMP EMP SOFTWAR, P78, DOI 10.1109/ESEM.2017.14
   Fontana FA, 2016, EMPIR SOFTW ENG, V21, P1143, DOI 10.1007/s10664-015-9378-4
   Fontana FA, 2017, KNOWL-BASED SYST, V128, P43, DOI 10.1016/j.knosys.2017.04.014
   Fontana FA, 2015, INT WORKS EMERG TREN, P44, DOI 10.1109/WETSoM.2015.14
   Fontana FA, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P609, DOI 10.1109/SANER.2016.84
   Fontana FA, 2012, J OBJECT TECHNOL, V11, DOI 10.5381/jot.2012.11.2.a5
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Haiduc S, 2012, IEEE INT CONF AUTOM, P90, DOI 10.1145/2351676.2351690
   Johnson B, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P672, DOI 10.1109/ICSE.2013.6606613
   Kaur A, 2021, RECENT ADV ELECTR EL, V14, P290, DOI 10.2174/2352096513999200922125839
   Khomh F, 2012, EMPIR SOFTW ENG, V17, P243, DOI 10.1007/s10664-011-9171-y
   Khomh F, 2011, J SYST SOFTWARE, V84, P559, DOI 10.1016/j.jss.2010.11.921
   Khomh F, 2009, INT CONF QUAL SOFTW, P305, DOI 10.1109/QSIC.2009.47
   Kreimer J, 2005, ELECTRON NOTES THEOR, V141, P117, DOI 10.1016/j.entcs.2005.02.059
   Lehman M. M., 1996, Software Process Technology. 5th European Workshop, EWSPT '96 Proceedings, P108, DOI 10.1007/BFb0017737
   Lenarduzzi Valentina, 2020, Proceedings of 6th International Conference in Software Engineering for Defence Applications (SEDA 2018). Advances in Intelligent Systems and Computing (AISC 925), P165, DOI 10.1007/978-3-030-14687-0_15
   Lenarduzzi V, 2019, 27 INT C SOFTW AN EV
   Lenarduzzi V, 2021, J SYST SOFTWARE, V171, DOI 10.1016/j.jss.2020.110806
   Lenarduzzi V, 2019, PROCEEDINGS OF THE 3RD ACM SIGSOFT INTERNATIONAL WORKSHOP ON MACHINE LEARNING TECHNIQUES FOR SOFTWARE QUALITY EVALUATION (MALTESQUE '19), P37, DOI 10.1145/3340482.3342747
   Liu H, 2019, IEEE T SOFTWARE ENG
   Lujan Savanna, 2020, MaLTeSQuE 2020: Proceedings of the 4th ACM SIGSOFT International Workshop on Machine-Learning Techniques for Software-Quality Evaluation, P1, DOI 10.1145/3416505.3423559
   Lujan S, PRELIMINARY STUDY AD, P1
   Ma WWY, 2016, 2016 INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, TESTING AND EVOLUTION (SATE 2016), P24, DOI 10.1109/SATE.2016.11
   Maiga A., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P466, DOI 10.1109/WCRE.2012.56
   Maiga A, 2012, IEEE INT CONF AUTOM, P278, DOI 10.1145/2351676.2351723
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   NEMENYI P, 1962, BIOMETRICS, V18, P263
   Oliveto Rocco, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P68, DOI 10.1109/ICPC.2010.20
   Palomba F, 2016, 2016 IEEE 24TH INTERNATIONAL CONFERENCE ON PROGRAM COMPREHENSION (ICPC)
   Palomba F, 2019, IEEE T SOFTWARE ENG, V45, P194, DOI 10.1109/TSE.2017.2770122
   Palomba F, 2018, EMPIR SOFTW ENG, V23, P1188, DOI 10.1007/s10664-017-9535-z
   Palomba F, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P482, DOI 10.1109/MSR.2015.69
   Palomba F, 2015, IEEE T SOFTWARE ENG, V41, P462, DOI 10.1109/TSE.2014.2372760
   Palomba F, 2014, PROC IEEE INT CONF S, P101, DOI 10.1109/ICSME.2014.32
   Pascarella L, 2019, J SYST SOFTWARE, V150, P22, DOI 10.1016/j.jss.2018.12.001
   Pecorelli F, 2021, ADEQUACY STATIC ANAL
   Pecorelli F, 2020, IEEE WORK CONF MIN S, P220, DOI 10.1145/3379597.3387457
   Pecorelli F, 2020, J SYST SOFTWARE, V169, DOI 10.1016/j.jss.2020.110693
   Pecorelli F, 2019, INT C PROGRAM COMPRE, P93, DOI 10.1109/ICPC.2019.00023
   Politowski C, 2020, INFORM SOFTWARE TECH, V122, DOI 10.1016/j.infsof.2020.106278
   Quinlan J. R., 1986, Machine Learning, V1, P81, DOI 10.1007/BF00116251
   Shcherban S, 2020, 14 ACM IEEE INT S EM
   Sjoberg DIK, 2013, IEEE T SOFTWARE ENG, V39, P1144, DOI 10.1109/TSE.2012.89
   Soh Z, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P393, DOI 10.1109/SANER.2016.103
   Taibi D, 2017, INFORM SOFTWARE TECH, V92, P223, DOI 10.1016/j.infsof.2017.08.008
   Tantithamthavorn C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P286, DOI 10.1145/3183519.3183547
   Tao Ye, 2003, Performance Evaluation Review, V31, P196, DOI 10.1145/885651.781052
   Tollin I., 2017, 21 INT C EV ASS SOFT, P61
   Tufano M, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1838
   Vassallo C., 2019, EMPIR SOFTW ENG
   Vassallo C, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P38, DOI 10.1109/SANER.2018.8330195
   Wedyan F, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P141, DOI 10.1109/ICST.2009.21
   White M, 2016, IEEE INT CONF AUTOM, P87, DOI 10.1145/2970276.2970326
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Yamashita A, 2013, WORK CONF REVERSE EN, P242, DOI 10.1109/WCRE.2013.6671299
   Yamashita A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P306, DOI 10.1109/ICSM.2012.6405287
NR 71
TC 6
Z9 6
U1 1
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAY
PY 2022
VL 27
IS 3
AR 64
DI 10.1007/s10664-022-10126-5
PG 44
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZV2BV
UT WOS:000770339500002
PM 35370447
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Heradio, R
   Fernandez-Amoros, D
   Galindo, JA
   Benavides, D
   Batory, D
AF Heradio, Ruben
   Fernandez-Amoros, David
   Galindo, Jose A.
   Benavides, David
   Batory, Don
TI Uniform and scalable sampling of highly configurable systems
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Uniform sampling; Configurable systems; Software product lines; Binary
   decision diagrams; SAT-solvers
ID PERFORMANCE; MODELS; VARIABILITY; PROGRAM
AB Many analyses on configurable software systems are intractable when confronted with colossal and highly-constrained configuration spaces. These analyses could instead use statistical inference, where a tractable sample accurately predicts results for the entire space. To do so, the laws of statistical inference requires each member of the population to be equally likely to be included in the sample, i.e., the sampling process needs to be "uniform". SAT-samplers have been developed to generate uniform random samples at a reasonable computational cost. However, there is a lack of experimental validation over colossal spaces to show whether the samplers indeed produce uniform samples or not. This paper (i) proposes a new sampler named BDDSampler, (ii) presents a new statistical test to verify sampler uniformity, and (iii) reports the evaluation of BDDSampler and five other state-of-the-art samplers: KUS, QuickSampler, Smarch, Spur, and Unigen2. Our experimental results show only BDDSampler satisfies both scalability and uniformity.
C1 [Heradio, Ruben; Fernandez-Amoros, David] Univ Nacl Educ Distancia, Madrid, Spain.
   [Galindo, Jose A.; Benavides, David] Univ Seville, Seville, Spain.
   [Batory, Don] Univ Texas Austin, Austin, TX 78712 USA.
C3 Universidad Nacional de Educacion a Distancia (UNED); University of
   Sevilla; University of Texas System; University of Texas Austin
RP Heradio, R (corresponding author), Univ Nacl Educ Distancia, Madrid, Spain.
EM rheradio@issi.uned.es; david@issi.uned.es; jagalindo@us.es;
   benavides@us.es; batory@cs.utexas.edu
RI Heradio, Ruben/D-3675-2013
OI Heradio, Ruben/0000-0002-7131-0482
FU Universidad Nacional de Educacion a Distancia [OPTIVAC 096-034091
   2021V/PUNED/008]; Spanish Ministry of Science, Innovation and
   Universities [OPHELIA RTI2018-101204-B-C22]; Community of Madrid
   [ROBOCITY2030-DIH-CM S2018/NMT-4331]; TASOVA network [MCIU-AEI
   TIN2017-90644-REDT]; Junta de Andalucia (METAMORFOSIS project)
FX This work has been partially funded by the Universidad Nacional de
   Educacion a Distancia (project OPTIVAC 096-034091 2021V/PUNED/008); the
   Spanish Ministry of Science, Innovation and Universities (project
   OPHELIA RTI2018-101204-B-C22); the Community of Madrid (research network
   ROBOCITY2030-DIH-CM S2018/NMT-4331); the TASOVA network (MCIU-AEI
   TIN2017-90644-REDT); and the Junta de Andalucia (METAMORFOSIS project).
CR Acher M, 2021, SPLC '21 - PROCEEDINGS OF THE 25TH ACM INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL B, P36, DOI 10.1145/3461002.3473070
   Achlioptas D, 2018, LECT NOTES COMPUT SC, V10929, P135, DOI 10.1007/978-3-319-94144-8_9
   Alférez M, 2019, SOFTWARE QUAL J, V27, P307, DOI 10.1007/s11219-017-9400-8
   [Anonymous], 2016, CONSTRAINTS, DOI DOI 10.1007/s10601-015-9204-z
   [Anonymous], 2018, DEEP LEARNING WITH R
   Batory D, 2005, LECT NOTES COMPUT SC, V3714, P7
   Bellare M, 2000, INFORM COMPUT, V163, P510, DOI 10.1006/inco2000.2885
   Berger T, 2013, IEEE T SOFTWARE ENG, V39, P1611, DOI 10.1109/TSE.2013.34
   Biere A, 2009, FRONT ARTIF INTEL AP, V185, P457, DOI 10.3233/978-1-58603-929-5-457
   Brace KS, 1990, IEEE ACM DES AUT C D, P40
   BRYANT RE, 1986, IEEE T COMPUT, V35, P677, DOI 10.1109/TC.1986.1676819
   Chakraborty Supratik, 2015, Tools and Algorithms for the Construction and Analysis of Systems. 21st International Conference, TACAS 2015, held as part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2015. Proceedings: LNCS 9035, P304, DOI 10.1007/978-3-662-46681-0_25
   Chakraborty Supratik, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P608, DOI 10.1007/978-3-642-39799-8_40
   Chakraborty S, 2019, AAAI CONF ARTIF INTE, P7777
   Chihara L. M., 2018, Mathematical Statistics with Resampling and R, DOI 10.1002/9781119505969
   Cohen J., 1988, STAT POWER ANAL BEHA
   Cover T. M., 1991, ELEMENTS INFORM THEO
   D'Agostino RB., 1986, GOODNESS OF FIT TECH
   DAVIS M, 1962, COMMUN ACM, V5, P394, DOI 10.1145/368273.368557
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Dutra R, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P549, DOI 10.1145/3180155.3180248
   Faul F, 2007, BEHAV RES METHODS, V39, P175, DOI 10.3758/BF03193146
   Fernandez-Amoros D, 2020, MATHEMATICS-BASEL, V8, DOI 10.3390/math8081253
   Fernandez-Amoros D, 2020, SPLC'19: PROCEEDINGS OF THE 23RD INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL A, P303, DOI 10.1145/3336294.3336313
   Goodfellow I, 2016, ADAPT COMPUT MACH LE, P1
   Grosse I, 2002, PHYS REV E, V65, DOI 10.1103/PhysRevE.65.041905
   Guo JM, 2018, EMPIR SOFTW ENG, V23, P1826, DOI 10.1007/s10664-017-9573-6
   Halin A, 2019, EMPIR SOFTW ENG, V24, P674, DOI 10.1007/s10664-018-9635-4
   Hebner M., 2011, MULTIPROCESSOR SYSTE, DOI [10.1007/978-1-4419-6460-1, DOI 10.1007/978-1-4419-6460-1]
   Heradio Ruben, 2020, SPLC '20: Proceedings of the 24th ACM Conference on Systems and Software Product Line: Volume A, DOI 10.1145/3382025.3414951
   Heradio R, 2019, PROC INT CONF SOFTW, P843, DOI 10.1109/ICSE.2019.00091
   Kabacoff R.I., 2011, R in Action: Data Analysis and Graphics with R
   Kaltenecker C, 2020, IEEE SOFTWARE, V37, P58, DOI 10.1109/MS.2020.2987024
   Kaltenecker C, 2019, PROC INT CONF SOFTW, P1084, DOI 10.1109/ICSE.2019.00112
   Kaplan D., 2012, STAT MODELING FRESH
   Knuth D. E, 2009, ART COMPUTER PROGRAM, V4
   Kolesnikov S, 2019, SOFTW SYST MODEL, V18, P2265, DOI 10.1007/s10270-018-0662-9
   Krieter S, 2019, 23RD INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE(SPLC 2019), VOL B, P215, DOI 10.1145/3307630.3342705
   Krieter S, 2020, PROCEEDINGS OF THE 14TH INTERNATIONAL WORKING CONFERENCE ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS (VAMOS '20), DOI 10.1145/3377024.3377042
   Krieter S, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P898, DOI 10.1145/3180155.3180159
   Lagniez JM, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P667
   Lakens D, 2013, FRONT PSYCHOL, V4, DOI 10.3389/fpsyg.2013.00863
   LIN JH, 1991, IEEE T INFORM THEORY, V37, P145, DOI 10.1109/18.61115
   Meinel C., 1998, ALGORITHMS DATA STRU, DOI [10.1007/978-3-642-58940-9, DOI 10.1007/978-3-642-58940-9]
   Mendonca M., 2009, THESIS U WATERLOO
   Munoz D.-J., 2019, P 23 INT SYSTEMS SOF, VA, P289
   Nair V, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P257, DOI 10.1145/3106237.3106238
   Narodytska N, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P149
   Naveh Y., 2006, Proc. of AAAI, P1720
   Nöhrer A, 2013, AUTOMAT SOFTW ENG, V20, P265, DOI 10.1007/s10515-012-0117-4
   Oh J, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P61, DOI 10.1145/3106237.3106273
   Oh Jeho, 2019, P 23 INT SYSTEMS SOF, VA, DOI DOI 10.1145/3336294.3342359
   Pereira JA, 2020, PROCEEDINGS OF THE ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE'20), P277, DOI 10.1145/3358960.3379137
   Pett T, 2021, SPLC '21 - PROCEEDINGS OF THE 25TH ACM INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL B, P41, DOI 10.1145/3461002.3473073
   Pett T, 2020, SPLC'19: PROCEEDINGS OF THE 23RD INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL A, P78, DOI 10.1145/3336294.3336322
   Plazar Q, 2019, IEEE INT CONF SOFTW, P240, DOI 10.1109/ICST.2019.00032
   Roy S, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P224, DOI 10.1145/3236024.3236084
   Sharma Shubham, 2018, P INT C LOG PROGR AR
   Temple Paul, 2016, P 20 INT SYST SOFTW, P209
   Thurley M, 2006, LECT NOTES COMPUT SC, V4121, P424
   Trochim W, 2015, Research methods: The essential knowledge base, V2nd
   van Dijk T., 2016, THESIS U TWENTE
   Van Solingen Rini, 1999, The Goal/ Question/ Metric Method: a practical guide for quality improvement of software development
   Varshosaz M, 2018, SPLC'18: PROCEEDINGS OF THE 22ND INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL 1, P1, DOI 10.1145/3233027.3233035
   Vasishth Shravan, 2011, FDN STAT SIMULATION, DOI [10.1007/978-3-642-16313-5, DOI 10.1007/978-3-642-16313-5]
   Weckesser M, 2018, SPLC'18: PROCEEDINGS OF THE 22ND INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL 1, P98, DOI 10.1145/3233027.3233030
   Winter Bodo, 2020, STAT LINGUISTS INTRO
   Yuan Jun, 2002, 11 IEEE ACM INT WORK, P185
NR 68
TC 12
Z9 12
U1 0
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2022
VL 27
IS 2
AR 44
DI 10.1007/s10664-021-10102-5
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YK7WZ
UT WOS:000745419900002
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Przybylek, A
   Albecka, M
   Springer, O
   Kowalski, W
AF Przybylek, Adam
   Albecka, Marta
   Springer, Olga
   Kowalski, Wojciech
TI Game-based Sprint retrospectives: multiple action research
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Collaborative games; Serious games; Retrospective; Agile; Scrum;
   Software process improvement; Team communication
ID SOFTWARE-DEVELOPMENT PRACTICES; SYSTEMS ACTION RESEARCH;
   INFORMATION-SYSTEMS; IDEA-GENERATION; QUANTITATIVE METHODS; PROCESS
   IMPROVEMENT; SOCIAL-INFLUENCE; DECISION-MAKING; SERIOUS GAMES;
   CREATIVITY
AB In today's fast-paced world of rapid technological change, software development teams need to constantly revise their work practices. Not surprisingly, regular reflection on how to become more effective is perceived as one of the most important principles of Agile Software Development. Nevertheless, running an effective and enjoyable retrospective meeting is still a challenge in real environments. As reported by several studies, the Sprint Retrospective is an agile practice most likely to be implemented improperly or sacrificed when teams perform under pressure to deliver. To facilitate the implementation of the practice, some agile coaches have proposed to set up retrospective meetings in the form of retrospective games. However, there has been little research-based evidence to support the positive effects of retrospective games. Our aim is to investigate whether the adoption of retrospective games can improve retrospective meetings in general and lead to positive societal outcomes. In this paper, we report on an Action Research project in which we implemented six retrospective games in six Scrum teams that had experienced common retrospective problems. The received feedback indicates that the approach helped the teams to mitigate many of the "accidental difficulties" pertaining to the Sprint Retrospective, such as lack of structure, dullness, too many complaints, or unequal participation and made the meetings more productive to some degree. Moreover, depending on their individual preferences, different participants perceived different games as having a positive impact on their communication, motivation-and-involvement, and/or creativity, even though there were others, less numerous, who had an opposite view. The advantages and disadvantages of each game as well as eight lessons learned are presented in the paper.
C1 [Przybylek, Adam; Springer, Olga] Gdansk Univ Technol, Fac Elect Telecommun & Informat, Narutowicza 11-12, PL-80233 Gdansk, Poland.
   [Albecka, Marta] Dynatrace Sp Zoo, Aleja Grunwaldzka 411, PL-80309 Gdansk, Poland.
   [Kowalski, Wojciech] OKE Poland Sp Zoo, Jana Heweliusza 11, PL-80890 Gdansk, Poland.
C3 Fahrenheit Universities; Gdansk University of Technology
RP Przybylek, A (corresponding author), Gdansk Univ Technol, Fac Elect Telecommun & Informat, Narutowicza 11-12, PL-80233 Gdansk, Poland.
EM adam.przybylek@gmail.com
RI Przybylek, Adam/AFR-3682-2022
OI Przybylek, Adam/0000-0002-8231-709X; Springer, Olga/0000-0001-7051-008X
CR Abt ClarkC., 1970, SERIOUS GAMES
   Akarsu Z, 2018, COMM COM INF SC, V896, P254, DOI 10.1007/978-3-319-97925-0_21
   AMABILE TM, 1983, J PERS SOC PSYCHOL, V45, P357, DOI 10.1037/0022-3514.45.2.357
   Andriyani Y, 2017, LECT NOTES BUS INF P, V283, P3, DOI 10.1007/978-3-319-57633-6_1
   [Anonymous], 2017, The scrum guide: the definitive guide to scrum
   [Anonymous], REAL WORLD RES RESOU
   [Anonymous], 2004, XP Ser
   [Anonymous], 2011, REALITY IS BROKEN
   [Anonymous], 2007, Group genius: The creative power of collaboration
   [Anonymous], 2006, Innovation Games: Creating Breakthrough Products Through Collaborative Play
   [Anonymous], 2001, SOFTW DEV MAG
   [Anonymous], 1970, RES ACT SOCIOLOGY TH
   ASCH SE, 1956, PSYCHOL MONOGR, V70, P1, DOI 10.1037/h0093718
   Avison D., 2001, Information Technology & People, V14, P28, DOI 10.1108/09593840110384762
   Avison D, 2007, INTEGR SER INFORM SY, V13, P19, DOI 10.1007/978-0-387-36060-7_2
   Avison DE, 2017, INFORM MANAGE-AMSTER
   Babb J, 2014, IEEE SOFTWARE, V31, P51, DOI 10.1109/MS.2014.54
   BABUROGLU ON, 1992, ORGAN STUD, V13, P19, DOI 10.1177/017084069201300104
   Baldauf C, 2018, LEANPUB
   Baruah J, 2008, SMALL GR RES, V39, P523, DOI 10.1177/1046496408320049
   Baskerville R, 1998, EUR J INFORM SYST, V7, P90, DOI 10.1057/palgrave.ejis.3000298
   Baskerville R, 2004, MIS QUART, V28, P329
   Baskerville R., 1999, Communications of the Association for Information Systems, V19
   Boden Margaret., 1990, The Creative Mind: Myths and Mechanisms
   Boehm B, 2001, IEEE SOFTWARE, V18, P46, DOI 10.1109/52.922725
   Boehm Barry., 2005, FDN EMPIRICAL SOFTWA
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   Briand L, 2017, IEEE SOFTWARE, V34, P72, DOI 10.1109/MS.2017.3571562
   Briand L, 2012, IEEE SOFTWARE, V29, P96, DOI 10.1109/MS.2012.86
   BROOKS FP, 1987, COMPUTER, V20, P10, DOI 10.1109/MC.1987.1663532
   Butt Shariq Aziz, 2021, Lean and Agile Software Development. 5th International Conference, LASD 2021. Proceedings. Lecture Notes in Business Information Processing (LNBIP 408), P59, DOI 10.1007/978-3-030-67084-9_4
   Butt SA., 2021, DIGITAL ENTERTAINMEN, DOI [10.1007/978-981-15-9724-4_4, DOI 10.1007/978-981-15-9724-4_4]
   Butt SA, 2019, IEEE ACCESS, V7, P99273, DOI 10.1109/ACCESS.2019.2929169
   Campbell J, 2016, 47 ACM TECHN S COMP
   Cao L, 2009, EUR J INFORM SYST, V18, P332, DOI 10.1057/ejis.2009.26
   Carlson R., 2013, RETROSPECTIVES ARE H
   Caroli P., 2016, FUN RETROSPECTIVES A
   Cho JY, 2014, QUAL REP, V19
   Chua RYJ, 2008, J CREATIVE BEHAV, V42, P164, DOI 10.1002/j.2162-6057.2008.tb01293.x
   Clason D.L., 1994, Journal of Agricultural Education, V35, P31
   Coghlan D.Brannick., 2005, DOING ACTION RES YOU, V2nd
   Collier B, 1996, IEEE SOFTWARE, V13, P65, DOI 10.1109/52.526833
   Cook T. D., 1979, QUASIEXPERIMENTAL DE
   Csikszentmihalyi M., 1991, Flow: The Psychology of Optimal Experience, DOI DOI 10.5465/AMR.1991.4279513
   Dal Sasso T, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P261, DOI 10.1109/SANER.2017.7884627
   Davis J, 2003, 36 ANN HAW INT C SYS, DOI [10.1109/HICSS.2003.1173812, DOI 10.1109/HICSS.2003.1173812]
   Davison R, 2004, INFORM SYST J, V14, P65, DOI 10.1111/j.1365-2575.2004.00162.x
   Daylamani-Zad D, 2020, ARTIF INTELL REV, V53, P429, DOI 10.1007/s10462-018-9665-8
   De Dreu CKW, 2008, PERS SOC PSYCHOL REV, V12, P22, DOI 10.1177/1088868307304092
   DeFranco JF, 2017, INNOV SYST SOFTW ENG, V13, P129, DOI 10.1007/s11334-017-0287-0
   DeLuca D, 2008, J ASSOC INF SYST, V9, P48
   Derby Esther., 2006, AGILE RETROSPECTIVES
   DIEHL M, 1987, J PERS SOC PSYCHOL, V53, P497, DOI 10.1037/0022-3514.53.3.497
   Dingsoyr T., 2003, ADV LEARNING SOFTWAR
   Dingsoyr T, 2018, LECT NOTES BUS INF P, V314, P191, DOI 10.1007/978-3-319-91602-6_13
   Draegert A, 2016, THESIS AALBORG U
   Drury M, 2012, J SYST SOFTWARE, V85, P1239, DOI 10.1016/j.jss.2012.01.058
   Dybå T, 2014, IEEE SOFTWARE, V31, P32, DOI 10.1109/MS.2014.97
   Dyba Tore, 2014, Software project management in a changing world, P277, DOI DOI 10.1007/978-3-642-55035-5_11
   Dzieciatek A., 2019, THESIS GDANSK U TECH
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Ellis S, 2014, CURR DIR PSYCHOL SCI, V23, P67, DOI 10.1177/0963721413504106
   Elo S, 2008, J ADV NURS, V62, P107, DOI 10.1111/j.1365-2648.2007.04569.x
   Eloranta VP, 2016, INFORM SOFTWARE TECH, V74, P194, DOI 10.1016/j.infsof.2015.12.003
   Fredrickson B.L., 1998, J DIVISION 1 AM PSYC, P300, DOI [https://doi.org/10.1037/1089-2680.2.3.300, DOI 10.1037/1089-2680.2.3.300]
   Fruhling A. L., 2008, BEST PRACTICES IMPLE
   Gaikwad PK, 2019, PROCEDIA COMPUT SCI, V159, P2414, DOI 10.1016/j.procs.2019.09.416
   Garousi V, 2020, EMPIR SOFTW ENG, V25, P1687, DOI 10.1007/s10664-020-09803-0
   Gelperin D, 2011, INCOSE INT S DENV CO
   Ghaisas S, 2013, IEEE-ACM INT WKSP CO, P37, DOI 10.1109/CESI.2013.6618468
   Ghanbari H, 2015, J SYST SOFTWARE, V109, P32, DOI 10.1016/j.jss.2015.07.017
   GLASS RL, 1994, IEEE SOFTWARE, V11, P42, DOI 10.1109/52.329400
   Goncalo JA., 2009, CREATIVITY GROUPS, DOI [10.1108/S1534-0856(2009)12, DOI 10.1108/S1534-0856(2009)12]
   Goncalves L, 2014, LEANPUB
   Gray D., 2010, Gamestorming: A Playbook for Innovators, Rulebreakers, and Changemakers
   Griffin Leigh, 2021, Lean and Agile Software Development. 5th International Conference, LASD 2021. Proceedings. Lecture Notes in Business Information Processing (LNBIP 408), P177, DOI 10.1007/978-3-030-67084-9_11
   Guckenbiehl P, 2020, LECT NOTES COMPUT SC, V12562, P53, DOI 10.1007/978-3-030-64148-1_4
   Gupta M, 2019, INT J INFORM MANAGE, V44, P13, DOI 10.1016/j.ijinfomgt.2018.09.006
   Hanslo R, 2018, FED CONF COMPUT SCI, P949, DOI 10.15439/2018F270
   Heron J., 1981, HUMAN INQUIRY SOURCE
   Hoda R, 2013, IEEE SOFTWARE, V30, P95, DOI 10.1109/MS.2013.90
   Hoegl M, 2007, J ENG TECHNOL MANAGE, V24, P148, DOI 10.1016/j.jengtecman.2007.01.008
   Hsieh HF, 2005, QUAL HEALTH RES, V15, P1277, DOI 10.1177/1049732305276687
   HULT M, 1980, J MANAGE STUD, V17, P241, DOI 10.1111/j.1467-6486.1980.tb00087.x
   Ilyés E, 2019, FED CONF COMPUT SCI, P823, DOI 10.15439/2019F209
   International Institute of Business Analysis, 2015, GUID BUS AN BOD KNOW
   Jarzebowicz A, 2019, LECT NOTES BUS INF P, V359, P147, DOI 10.1007/978-3-030-29608-7_12
   Jeffries R, 2013, FRACTIONAL SCRUM SCR
   JICK TD, 1979, ADMIN SCI QUART, V24, P602, DOI 10.2307/2392366
   Jovanovic M, 2016, J UNIVERS COMPUT SCI, V22, P1489
   KAPLAN B, 1988, MIS QUART, V12, P571, DOI 10.2307/249133
   KARAU SJ, 1993, J PERS SOC PSYCHOL, V65, P681, DOI 10.1037/0022-3514.65.4.681
   Khanna D, 2018, 19TH INTERNATIONAL CONFERENCE ON AGILE SOFTWARE DEVELOPMENT (XP '18), DOI 10.1145/3234152.3314992
   Khorram F, 2021, PROCEEDINGS OF THE 9TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT (MODELSWARD), P139, DOI 10.5220/0010198801390146
   Kidder L., 1987, NEW DIRECTIONS PROGR, V35, P57, DOI [DOI 10.1002/EV.1459, 10.1002/ev.1459]
   Kontio J., 2008, Guide to Advanced Empirical Software Engineering, P93, DOI [DOI 10.1007/978-1-84800-044-5_4, 10.1007/978-1-84800-044-54, DOI 10.1007/978-1-84800-044-54]
   Korde R, 2017, J EXP SOC PSYCHOL, V70, P177, DOI 10.1016/j.jesp.2016.11.002
   Krein JL, 2016, IEEE T SOFTWARE ENG, V42, P302, DOI 10.1109/TSE.2015.2488625
   Krivitsky A., 2015, AGILE RETROSPECTIVE
   Kua P., 2013, The retrospective handbook: A guide for agile teams
   Kupper S, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.2182
   Lamoreux M, 2005, AGILE 2005, Proceedings, P139, DOI 10.1109/ADC.2005.29
   Lamrani R, 2020, COMPUT SCI INF SYST, V17, P339, DOI [10.2298/CS1S190511043L, 10.2298/CSIS190511043L]
   Lamrani R, 2017, ADV INTELL SYST, V520, P77, DOI 10.1007/978-3-319-46568-5_8
   Lehtinen TOA, 2017, EMPIR SOFTW ENG, V22, P2409, DOI 10.1007/s10664-016-9464-2
   Lehtinen TOA, 2015, J SYST SOFTWARE, V103, P17, DOI 10.1016/j.jss.2015.01.020
   Lehtinen TOA, 2014, INFORM SOFTWARE TECH, V56, P408, DOI 10.1016/j.infsof.2014.01.004
   Lenberg P, 2017, EMPIR SOFTW ENG, V22, P2179, DOI 10.1007/s10664-016-9482-0
   Lin LH, 2010, 5 IEEE INT C MAN INN
   Loeffler M., 2017, IMPROVING AGILE RETR
   López-Martínez J, 2016, 2016 FOURTH INTERNATIONAL CONFERENCE IN SOFTWARE ENGINEERING RESEARCH AND INNOVATION - CONISOFT 2016, P141, DOI 10.1109/CONISOFT.2016.30
   Madeyski L, 2017, J INTELL FUZZY SYST, V32, P1509, DOI 10.3233/JIFS-169146
   MADSEN DB, 1978, J APPL PSYCHOL, V63, P120, DOI 10.1037/0021-9010.63.1.120
   Marcinkowski B, 2019, INFORM TECHNOL PEOPL, V32, P118, DOI 10.1108/ITP-03-2018-0142
   Marek Krzysztof, 2021, Lean and Agile Software Development. 5th International Conference, LASD 2021. Proceedings. Lecture Notes in Business Information Processing (LNBIP 408), P24, DOI 10.1007/978-3-030-67084-9_2
   Marijan D, 2021, INFORM SOFTWARE TECH, V132, DOI 10.1016/j.infsof.2020.106473
   Marshburn D, 2018, SAIS 2018 P
   Mas A, 2018, COMM COM INF SC, V896, P456, DOI 10.1007/978-3-319-97925-0_39
   Matthies C, 2021, LECT NOTES BUSINESS, V408, DOI [10.1007/978-3-030-67084-9_8, DOI 10.1007/978-3-030-67084-9_8]
   Matthies Ch, 2020, 53 HAW INT C SYST SC
   Matthies C, 2020, PROC INT CONF SOFTW, P113, DOI 10.1145/3377812.3382164
   Matthies C, 2019, COMM COM INF SC, V1060, P532, DOI 10.1007/978-3-030-28005-5_41
   Matthies Christoph, 2020, ICSE 20 42 INT C SOF, P189, DOI DOI 10.1145/3387940.3392168
   Mayring P., 2004, Qualitative content analysis: theoretical foundation, basic procedures and software solution, V1, P159
   Mesquida AL, 2019, IET SOFTW, V13, P106, DOI 10.1049/iet-sen.2018.5096
   Meyer J, 2000, Age Ageing, V29 Suppl 2, P8
   Mich D, 2020, FEDCSIS 2020 P, DOI [10.15439/2020F62, DOI 10.15439/2020F62]
   Michinov N, 2012, J APPL SOC PSYCHOL, V42, pE222, DOI 10.1111/j.1559-1816.2012.01024.x
   Miler Jakub, 2020, Advances in Agile and User-Centred Software Engineering. Third International Conference on Lean and Agile Software Development, LASD 2019, and 7th Conference on Multimedia, Interaction, Design and Innovation, MIDI 2019. Revised Selected Papers. Lecture Notes in Business Information Processing (LNBIP 376), P41, DOI 10.1007/978-3-030-37534-8_3
   Moe NB, 2012, INFORM SOFTWARE TECH, V54, P853, DOI 10.1016/j.infsof.2011.11.006
   Mundra A, 2013, PROCEEDINGS OF THE 2013 13TH INTERNATIONAL CONFERENCE ON COMPUTATIONAL SCIENCE AND ITS APPLICATIONS (ICCSA 2013), P119, DOI 10.1109/ICCSA.2013.25
   Nerur S, 2005, COMMUN ACM, V48, P72, DOI 10.1145/1060710.1060712
   Neto FGD, 2019, J SYST SOFTWARE, V156, P246, DOI 10.1016/j.jss.2019.07.002
   Neumann Michael, 2021, Lean and Agile Software Development. 5th International Conference, LASD 2021. Proceedings. Lecture Notes in Business Information Processing (LNBIP 408), P40, DOI 10.1007/978-3-030-67084-9_3
   Ng YY, 2020, LECT NOTES BUS INF P, V376, P133, DOI 10.1007/978-3-030-37534-8_7
   Nguyen L., 2003, Requirements Engineering, V8, P55, DOI 10.1007/s00766-002-0136-y
   Nijstad B.A., 2003, GROUP CREATIVITY INN, P137, DOI [DOI 10.1093/ACPR0F:0S0/9780195147308.003.0007, DOI 10.1093/ACPROF:OSO/9780195147308.003.0007]
   Nijstad B.A., 2003, GROUP CREATIVITY, P326, DOI DOI 10.1093/ACPROF:OSO/9780195147308.003.0015
   Nijstad BA, 2006, PERS SOC PSYCHOL REV, V10, P186, DOI 10.1207/s15327957pspr1003_1
   Nikitina Natalja, 2012, Proceedings 2012 International Conference on Software and System Process (ICSSP 2012), P140, DOI 10.1109/ICSSP.2012.6225959
   Nunamaker J. F.  Jr., 1987, Journal of Management Information Systems, V3, P5
   Olgun S, 2017, COMM COM INF SC, V770, P384, DOI 10.1007/978-3-319-67383-7_28
   Osborn A., 1957, Applied Imagination
   Ozkan N., 2020, P 2020 FEDERATED C C, DOI 10.15439/2020F46
   Pallot M, 2012, HDB RES SERIOUS GAME, P1
   Paulus P.B., 2003, Group Creativity: Innovation through Collaboration, P110, DOI [10.1093/acprof:oso/9780195147308.001.0001, DOI 10.1093/ACPROF:OSO/9780195147308.003.0006]
   Paulus PB, 2007, SOC PERSONAL PSYCHOL, V1, P248, DOI 10.1111/j.1751-9004.2007.00006.x
   Paulus PB, 2008, SOC INFLUENCE, V3, P228, DOI 10.1080/15534510802341082
   PAULUS PB, 1993, J PERS SOC PSYCHOL, V64, P575, DOI 10.1037/0022-3514.64.4.575
   Paulus PB, 2003, OXFORD SCHOLARSHIP O, DOI [10.1093/acprof:oso/9780195147308.001.0001, DOI 10.1093/ACPROF:OSO/9780195147308.001.0001]
   Paulus PB., 2019, OXFORD HDB GROUP CRE, DOI [10.1093/oxfordhb/9780190648077.001.0001, DOI 10.1093/OXFORDHB/9780190648077.001.0001]
   Petersen K, 2009, INT SYMP EMP SOFTWAR, P402
   Poth A, 2020, INT REQUIR ENG CONF, P238, DOI 10.1109/RE48521.2020.00034
   POTTS C, 1993, IEEE SOFTWARE, V10, P19, DOI 10.1109/52.232392
   Prechelt L, 2015, IEEE-ACM INT WKSP CO, P19, DOI 10.1109/CESI.2015.11
   Przybylek A, 2018, PROCEEDINGS OF THE 13TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL APPROACHES TO SOFTWARE ENGINEERING, P54, DOI 10.5220/0006681900540064
   Przybylek A, 2018, FED CONF COMPUT SCI, P811, DOI 10.15439/2018F347
   Przybylek A, 2017, FED CONF COMPUT SCI, P1211, DOI 10.15439/2017F423
   Przybylek A, 2016, ACSIS-ANN COMPUT SCI, V8, P1539, DOI 10.15439/2016F509
   Ramírez-Mora SL, 2020, J SOFTW-EVOL PROC, V32, DOI 10.1002/smr.2232
   Reason P., 2006, HDB ACTION RES
   Ringstad MA, 2011, COMM COM INF SC, V172, P167
   Robbins N., 2011, P 2011 JOINT STAT M, DOI DOI 10.1002/LT.25677
   Robey D, 2002, J MANAGE INFORM SYST, V19, P17, DOI 10.1080/07421222.2002.11045713
   Roden T., 2015, Fifty Quick Ideas to Improve Your Retrospectives
   Root-Bernstein R., 1989, Discovering, inventing and solving problems at the frontiers of science
   Rubin Kenneth S., 2012, Essential Scrum: A practical guide to the most popular Agile process, V1st
   Santanen E. L., 2000, Proceedings of the 33rd Annual Hawaii International Conference on System Sciences
   Santos PSMD, 2009, PROC 3 INT S EMPIRIC, DOI [10.1109/esem.2009.5316013, 10.1109/ESEM.2009.5316013]
   Schön EM, 2017, LECT NOTES BUS INF P, V283, P37, DOI 10.1007/978-3-319-57633-6_3
   Schwaber Ken., 2004, Agile Project Management With Scrum (Developer Best Practices)
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Shin Y, 2014, SMALL GR RES, V45, P337, DOI 10.1177/1046496414533618
   Sjoberg DIK, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P358, DOI 10.1109/FOSE.2007.30
   Spiegler SV, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09949-5
   Spradley J. P., 2016, PARTICIPANT OBSERVAT
   Staron M., 2020, Action Research in Software Engineering, DOI DOI 10.1007/978-3-030-32610-4
   Sternberg R.J., 1999, Handbook of Creativity, DOI [10.1017/cbo9780511807916.003, DOI 10.1017/CBO9780511807916.003]
   Stettina CJ, 2018, INT ICE CONF ENG
   Susman G.I., 1983, Beyond method: Strategies for social research, P95
   SUSMAN GI, 1978, ADMIN SCI QUART, V23, P582, DOI 10.2307/2392581
   Sutherland J., 2015, Scrum: The Art of Doing Twice the Work in Half the Time, V2A
   Sutherland J., 2020, SCRUM GUIDE DEFINITI
   TAYLOR DW, 1958, ADMIN SCI QUART, V3, P23, DOI 10.2307/2390603
   Theobald S, 2020, LECT NOTES COMPUT SC, V12562, P20, DOI 10.1007/978-3-030-64148-1_2
   Torrance G W, 1989, Int J Technol Assess Health Care, V5, P559
   Trujillo MM, 2014, 9 INT C EV NOV APPR
   Trujillo MM, 2018, 2018 FED C COMP SCI
   Üsfekes Ç, 2019, IET SOFTW, V13, P386, DOI 10.1049/iet-sen.2018.5144
   VersionOne, 2020, 14th Annual State of Agile Report
   Wawryk M, 2019, FED CONF COMPUT SCI, P871, DOI 10.15439/2019F284
   Westera W, 2017, J COMPUT SCI-NETH, V18, P32, DOI 10.1016/j.jocs.2016.12.002
   Wieringa R, 2015, SCI COMPUT PROGRAM, V101, P136, DOI 10.1016/j.scico.2014.11.013
   Wohlin C, 2013, P INT JOINT C SOFTW
   Yilmaz M., 2013, THESIS DCU
   Yilmaz M, 2019, IET SOFTW, V13, P97, DOI 10.1049/iet-sen.2019.0052
   Yilmaz M, 2016, J UNIVERS COMPUT SCI, V22, P1487
   Yilmaz M, 2016, TEH VJESN, V23, P237, DOI 10.17559/TV-20140922220409
   Yin K., 2018, Case study research and applications: Design and methods
   Yu XD, 2014, INFORM SOFTWARE TECH, V56, P911, DOI 10.1016/j.infsof.2014.02.010
   Zagal JP, 2006, SIMULAT GAMING, V37, P24, DOI 10.1177/1046878105282279
NR 201
TC 14
Z9 14
U1 5
U2 29
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN
PY 2022
VL 27
IS 1
AR 1
DI 10.1007/s10664-021-10043-z
PG 56
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA WJ9AY
UT WOS:000709330400001
PM 34697534
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Brito, A
   Hora, A
   Valente, MT
AF Brito, Aline
   Hora, Andre
   Valente, Marco Tulio
TI Characterizing refactoring graphs in Java and JavaScript projects
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Refactoring; Refactoring graphs; Mining software repositories; Software
   evolution
ID REPOSITORY; TOOL
AB Refactoring is an essential activity during software evolution. Frequently, practitioners rely on such transformations to improve source code maintainability and quality. As a consequence, this process may produce new source code entities or change the structure of existing ones. Sometimes, the transformations are atomic, i.e., performed in a single commit. In other cases, they generate sequences of modifications performed over time. To study and reason about refactorings over time, we rely on refactoring graphs. Using this abstraction, we provide quantitative and qualitative investigation on 20 popular open-source Java and JavaScript-based projects. After eliminating trivial graphs, we characterize a large sample of 1,525 refactoring graphs, providing quantitative data on their size, commits, age, refactoring composition, ownership, operations over time, and refactoring graph patterns. Besides, we contact the authors of subgraphs describing large refactoring operations to understand the reasons behind their operations. We conclude by discussing applications and implications of refactoring graphs, for example, to improve code comprehension, detect refactoring patterns, and support software evolution studies.
C1 [Brito, Aline; Hora, Andre; Valente, Marco Tulio] Fed Univ Minas Gerais UFMG, Dept Comp Sci DCC, Belo Horizonte, MG, Brazil.
C3 Universidade Federal de Minas Gerais
RP Brito, A (corresponding author), Fed Univ Minas Gerais UFMG, Dept Comp Sci DCC, Belo Horizonte, MG, Brazil.
EM alinebrito@dcc.ufmg.br; andrehora@dcc.ufmg.br; mtov@dcc.ufmg.br
RI Hora, Andre/HTP-0699-2023
OI Hora, Andre/0000-0003-4900-1330; Valente, Marco
   Tulio/0000-0002-8180-7548
FU FAPEMIG; CNPq; CAPES
FX This research is supported by grants from FAPEMIG, CNPq, and CAPES.
CR AlOmar EA, 2021, J SYST SOFTWARE, V171, DOI 10.1016/j.jss.2020.110821
   Alves ELG, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P751, DOI 10.1145/2635868.2661674
   [Anonymous], 2012, Software Engineering Notes
   Avelino Guilherme, 2016, Proceedings of IEEE 24th International Conference on Program Comprehension (ICPC), P1
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Bavota G., 2012, 2012 12th IEEE Working Conference on Source Code Analysis and Manipulation (SCAM 2012), P104, DOI 10.1109/SCAM.2012.20
   Bavota G, 2015, J SYST SOFTWARE, V107, P1, DOI 10.1016/j.jss.2015.05.024
   Bibiano AC, 2019, INT SYMP EMP SOFTWAR, P31
   Bibiano AC, 2020, INT C PROGRAM COMPRE, P149, DOI 10.1145/3387904.3389264
   Borges H, 2018, J SYST SOFTWARE, V146, P112, DOI 10.1016/j.jss.2018.09.016
   Borges H, 2016, PROC IEEE INT CONF S, P334, DOI 10.1109/ICSME.2016.31
   Brito A, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P367, DOI [10.1109/SANER48275.2020.9054864, 10.1109/saner48275.2020.9054864]
   Brito A, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P507, DOI 10.1109/SANER.2018.8330249
   Brito Rodrigo, 2020, SBCARS '20: Proceedings of the 14th Brazilian Symposium on Software Components, Architectures, and Reuse, P101, DOI 10.1145/3425269.3425274
   Brito R, 2021, INT C PROGRAM COMPRE, P265, DOI 10.1109/ICPC52881.2021.00033
   Neto EC, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P380, DOI 10.1109/SANER.2018.8330225
   Catolino G, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN SOCIETY (ICSE-SEIS 2021), P25, DOI 10.1145/3377815.3381380
   Cedrim D., 2018, THESIS
   Chaparro O, 2014, PROC IEEE INT CONF S, P456, DOI 10.1109/ICSME.2014.73
   Chen T.-H., 2014, 11 WORK C MIN SOFTW
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   da Costa DA, 2017, IEEE T SOFTWARE ENG, V43, P641, DOI 10.1109/TSE.2016.2616306
   Di Penta M, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P556, DOI 10.1145/3368089.3409695
   Dig D, 2006, J SOFTW MAINT EVOL-R, V18, P83, DOI 10.1002/smr.328
   Dig D, 2006, LECT NOTES COMPUT SC, V4067, P404
   Fernandes E, 2019, 2019 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON REFACTORING (IWOR 2019), P9, DOI 10.1109/IWoR.2019.00009
   Fernandes E, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P206, DOI 10.1109/ICSE-Companion.2019.00083
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Ge X, 2017, S VIS LANG HUM CEN C, P71, DOI 10.1109/VLHCC.2017.8103453
   Ge Xi, 2014, P 7 INT WORKSHOP COO, P99, DOI 10.1145/2593702
   Gómez VU, 2015, SCI COMPUT PROGRAM, V98, P376, DOI 10.1016/j.scico.2013.08.002
   Gomez VU., 2010, 17 WORK C REV ENG WC
   Grund F, 2021, PROC INT CONF SOFTW, P1510, DOI 10.1109/ICSE43902.2021.00135
   Hattori L, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P141, DOI 10.1109/MSR.2009.5069492
   Hayashi S, 2013, WORK CONF REVERSE EN, P487, DOI 10.1109/WCRE.2013.6671331
   Higo Y, 2020, J SYST SOFTWARE, V165, DOI 10.1016/j.jss.2020.110571
   Hinkle D.E., 2003, Applied statistics for the behavioral sciences
   Hora A, 2020, EMPIR SOFTW ENG, V25, P1798, DOI 10.1007/s10664-020-09809-8
   Hora A, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1102, DOI 10.1145/3180155.3180212
   Iammarino M, 2019, PROC IEEE INT CONF S, P186, DOI 10.1109/ICSME.2019.00029
   Jiang YJ, 2021, PROC INT CONF SOFTW, P686, DOI 10.1109/ICSE43902.2021.00069
   Jiau HC, 2013, IEEE T SOFTWARE ENG, V39, P1245, DOI 10.1109/TSE.2013.19
   Kim J, 2016, PROC INT CONF SOFTW, P1145, DOI 10.1145/2884781.2884802
   Kim M., 2010, PROC 18 ACM SIGSOFT, P371, DOI [10.1145/1882291.1882353, DOI 10.1145/1882291.1882353]
   Kim M, 2014, IEEE T SOFTWARE ENG, V40, P633, DOI 10.1109/TSE.2014.2318734
   Kim Miryung, 2012, P 20 INT S FDN SOFTW, DOI [10.1145/'2393596.2393655, DOI 10.1145/2393596.2393655]
   Kim S, 2006, IEEE INT CONF AUTOM, P81
   Leung C.W.-K., 2010, TECHNICAL NOTES EXTE
   Lin B, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P594, DOI [10.1109/SANER.2019.8667992, 10.1109/saner.2019.8667992]
   Lin Y, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P535, DOI 10.1145/2950290.2950317
   Mahmoudi M, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P151, DOI [10.1109/saner.2019.8668012, 10.1109/SANER.2019.8668012]
   Mazinanian D, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133909
   Meananeatra P, 2012, IEEE INT CONF AUTOM, P406, DOI 10.1145/2351676.2351760
   Murphy-Hill E, 2009, PROC INT CONF SOFTW, P287, DOI 10.1109/ICSE.2009.5070529
   Negara S, 2013, LECT NOTES COMPUT SC, V7920, P552, DOI 10.1007/978-3-642-39038-8_23
   Oliveira D, 2019, 2019 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON REFACTORING (IWOR 2019), P13, DOI 10.1109/IWoR.2019.00010
   Paixao M, 2020, IEEE WORK CONF MIN S, P125, DOI 10.1145/3379597.3387475
   Palomba F, 2017, INT C PROGRAM COMPRE, P176, DOI 10.1109/ICPC.2017.38
   Pantiuchina J, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3408302
   Peruma Anthony, 2018, P 2 INT W REF MONTP, P26, DOI DOI 10.1145/3242163.3242169
   Rahman F, 2011, Proceedings of the 19th ACM SIGSOFT Symposium and the 13th European Conference on Foundations of Software Engineering, ESEC/FSE '11, P322, DOI DOI 10.1145/2025113
   Rahman F, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P491, DOI 10.1145/1985793.1985860
   Ray B, 2016, PROC INT CONF SOFTW, P428, DOI 10.1145/2884781.2884848
   Shen B, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360596
   Silva D., 2021, IEEE T SOFTW ENG, V1, P1, DOI [10.1109/TSE.2021.3088759, DOI 10.1109/TSE.2021.3088759]
   Silva D, 2017, IEEE WORK CONF MIN S, P269, DOI 10.1109/MSR.2017.14
   Silva D, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P858, DOI 10.1145/2950290.2950305
   Sousa L, 2020, IEEE WORK CONF MIN S, P186, DOI 10.1145/3379597.3387477
   Spadini D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P908, DOI 10.1145/3236024.3264598
   Spinellis D, 2017, EMPIR SOFTW ENG, V22, P1372, DOI 10.1007/s10664-016-9445-5
   Szoke G, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P693, DOI 10.1109/SANER.2016.17
   Terra R, 2018, J SYST SOFTWARE, V138, P19, DOI 10.1016/j.jss.2017.11.073
   Tsantalis N., 2013, C CTR ADV STUD COLL, P132, DOI [10.5555/2555523.2555539, DOI 10.5555/2555523.2555539]
   Tsantalis N, 2022, IEEE T SOFTWARE ENG, V48, P930, DOI 10.1109/TSE.2020.3007722
   Tsantalis N, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P483, DOI 10.1145/3180155.3180206
   Vassallo C, 2019, SCI COMPUT PROGRAM, V180, P1, DOI 10.1016/j.scico.2019.05.002
   Wang Y, 2009, PROC IEEE INT CONF S, P413, DOI 10.1109/ICSM.2009.5306290
   Yan XF, 2002, 2002 IEEE INTERNATIONAL CONFERENCE ON DATA MINING, PROCEEDINGS, P721, DOI 10.1109/ICDM.2002.1184038
   Zimmermann T., 2006, P 2006 INT WORKSHOP, P72, DOI DOI 10.1145/1137983.1138001
NR 79
TC 4
Z9 4
U1 0
U2 7
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2021
VL 26
IS 6
AR 125
DI 10.1007/s10664-021-10023-3
PG 43
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UR5VS
UT WOS:000696817500001
DA 2024-07-18
ER

PT J
AU Daun, M
   Brings, J
   Obe, PA
   Stenkova, V
AF Daun, Marian
   Brings, Jennifer
   Obe, Patricia Aluko
   Stenkova, Viktoria
TI Reliability of self-rated experience and confidence as predictors for
   students' performance in software engineering: Results from multiple
   controlled experiments on model comprehension with graduate and
   undergraduate students
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Student performance; Self-rated Experience; Confidence; Model
   comprehension; Conceptual models
ID HIGHER-EDUCATION; REVIEWS
AB Students' experience is used in empirical software engineering research as well as in software engineering education to group students in either homogeneous or heterogeneous groups. To do so, students are commonly asked to self-rate their experience, as self-rated experience has been shown to be a good predictor for performance in programming tasks. Another experience-related measurement is participants' confidence (i.e., how confident is the person that their given answer is correct). Hence, self-rated experience and confidence are used as selector or control variables throughout empirical software engineering research and software engineering education. In this paper, we analyze data from several student experiments conducted in the past years to investigate whether self-rated experience and confidence are also good predictors for students' performance in model comprehension tasks. Our results show that while students can somewhat assess the correctness of a particular answer to one concrete question regarding a conceptual model (i.e., their confidence), their overall self-rated experience does not correlate with their actual performance. Hence, the use of the commonly used measurement of self-rated experience as a selector or control variable must be considered unreliable for model comprehension tasks.
C1 [Daun, Marian; Brings, Jennifer; Obe, Patricia Aluko; Stenkova, Viktoria] Univ Duisburg Essen, Essen, Germany.
C3 University of Duisburg Essen
RP Daun, M (corresponding author), Univ Duisburg Essen, Essen, Germany.
EM marian.daun@paluno.uni-due.de; jennifer.brings@paluno.uni-due.de;
   patricia.aluko-obe@paluno.uni-due.de;
   viktoria.stenkova@paluno.uni-due.de
FU German Federal Ministry for Education and Research (BMBF) [01IS16043V]
FX This work was partially funded by the German Federal Ministry for
   Education and Research (BMBF) under grant no. 01IS16043V. We thank our
   Industry Partners for their support with the experiment materials used
   in the original experiments. Namely we thank Frank Houdek from Daimler,
   Peter Heidl and Jens Hofflinger from Bosch, and Stefan Beck and Arnaud
   Boyer from Airbus for their support.
CR [Anonymous], 2003, Proceedings of the 7th International Conference on Empirical Assessment in Software Engineering
   [Anonymous], 1999, Weka: Practical machine learning tools and techniques with java implementations
   [Anonymous], 2010, ISOMECIEEE 24765:2010, P1, DOI [DOI 10.1109/IEEESTD.2010.5733835, 10.1109/IEEESTD.2010.5733835]
   Arisholm E, 2007, IEEE T SOFTWARE ENG, V33, P65, DOI 10.1109/TSE.2007.17
   Berander P, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P167
   Bergersen GR, 2014, IEEE T SOFTWARE ENG, V40, P1163, DOI 10.1109/TSE.2014.2348997
   Bergersen GR, 2011, INT SYMP EMP SOFTWAR, P305, DOI 10.1109/ESEM.2011.39
   Bergersen GR, 2011, J INDIVID DIFFER, V32, P201, DOI 10.1027/1614-0001/a000052
   Biffl S, 2003, J SYST SOFTWARE, V65, P13, DOI 10.1016/S0164-1212(02)00025-0
   BOUD D, 1989, HIGH EDUC, V18, P529, DOI 10.1007/BF00138746
   Bunse C, 2006, EMPIR SOFTW ENG, V11, P227, DOI 10.1007/s10664-006-6403-7
   Byrne P., 2001, SIGCSE Bulletin, V33, P49, DOI 10.1145/507758.377467
   Campbell DT., 1963, EXPT QUASIEXPERIMENT
   Carver J, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P239
   Bastarrica MC, 2019, 2019 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON GENDER EQUALITY IN SOFTWARE ENGINEERING (GE 2019), P29, DOI 10.1109/GE.2019.00014
   Cen L, 2015, 2015 IEEE FRONT ED C, P1, DOI [10.1109/FIE.2015.7344266, DOI 10.1109/FIE.2015.7344266]
   Cook T. D., 1979, Quasi-experimentation: Design analysis issues for field settings
   Cushion CJ, 2003, QUEST, V55, P215, DOI 10.1080/00336297.2003.10491800
   Dan Zhang, 2014, 2014 IEEE Frontiers in Education Conference (FIE). Proceedings, P1, DOI 10.1109/FIE.2014.7044078
   Daun M, 2020, P INT C SOFTW SYST P, P10, DOI [10.1145/3379177.3388893, DOI 10.1145/3379177.3388893]
   Daun M, 2019, SOFTW SYST MODEL, V18, P3421, DOI 10.1007/s10270-019-00723-2
   Daun M, 2019, 2019 IEEE/ACM INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESSES (ICSSP 2019), P44, DOI 10.1109/ICSSP.2019.00016
   Daun M, 2017, LECT NOTES COMPUT SC, V10650, P466, DOI 10.1007/978-3-319-69904-2_35
   DeVellis R.F., 2017, SCALE DEV, V4th
   Dick M, 2001, 14TH CONFERENCE ON SOFTWARE ENGINEERING EDUCATION AND TRAINING, PROCEEDINGS, P143, DOI 10.1109/CSEE.2001.913835
   Diedenhofen B, 2015, PLOS ONE, V10, DOI 10.1371/journal.pone.0121945
   El Emam K., 1996, Empirical Software Engineering, V1, P201, DOI 10.1007/BF00127446
   ESKEW RK, 1988, ACCOUNT REV, V63, P137
   FALCHIKOV N, 1989, REV EDUC RES, V59, P395, DOI 10.3102/00346543059004395
   Farnsworth V, 2016, BRIT J EDUC STUD, V64, P139, DOI 10.1080/00071005.2015.1133799
   Feigenspan J., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P73
   Feldt R, 2018, EMPIR SOFTW ENG, V23, P3801, DOI 10.1007/s10664-018-9655-0
   Field A., 2013, Sage, DOI DOI 10.1016/B978-012691360-6/50012-4
   Fucci D, 2015, EASE 15 P 19 INT C E, DOI [10.1145/2745802.2745826, DOI 10.1145/2745802.2745826]
   Goodwin C.J., 2016, Research in psychology: Methods and design, V8th
   Hagan D, 2000, SIGCSE BULL, V32, P25, DOI 10.1145/353519.343063
   Hannay JE, 2010, IEEE T SOFTWARE ENG, V36, P61, DOI 10.1109/TSE.2009.41
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   ITU, 2016, Z120 ITU
   James T, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P13, DOI 10.1109/ICSE-SEIP.2017.31
   Jamieson Susan, 2004, Med Educ, V38, P1217, DOI 10.1111/j.1365-2929.2004.02012.x
   Jedlitschka A., 2008, Guide to advanced empirical software engineering, P201, DOI DOI 10.1007/978-1-84800-044-5_8
   Jensen LP., 2015, P 43 SEFI ANN C 2015
   Jorgensen M, 2004, J SYST SOFTWARE, V70, P79, DOI 10.1016/S0164-1212(02)00160-7
   Karsten R., 1998, Journal of Research on Computing in Education, V31, P14
   Katira N., 2004, SIGCSE Bulletin, V36, P7, DOI 10.1145/1028174.971307
   Kirschner P.A., 1992, Science Education, V1, P273, DOI DOI 10.1007/BF00430277
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kumar AN, 2008, SIGCSE'08: PROCEEDINGS OF THE 39TH ACM TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION, P523, DOI 10.1145/1352322.1352309
   LAYMAN L, 2005, P FRONT ED 35 ANN C, DOI DOI 10.1109/FIE.2005.1611964
   Likert R., 1932, Arch. Psychol., V22, P44, DOI DOI 10.4135/9781412961288.N454
   Lumley T, 2002, ANNU REV PUBL HEALTH, V23, P151, DOI 10.1146/annurev.publhealth.23.100901.140546
   Marshall L, 2016, ACM T COMPUT EDUC, V16, DOI 10.1145/2791396
   McDowell C, 2003, PROC INT CONF SOFTW, P602, DOI 10.1109/ICSE.2003.1201243
   Mishra T, 2014, INT C ADV COMPUT COM, P255, DOI 10.1109/ACCT.2014.105
   Mkpojiogu EOC, 2017, AIP CONF PROC, V1891, DOI 10.1063/1.5005425
   Morgan PJ, 2002, MED EDUC, V36, P534, DOI 10.1046/j.1365-2923.2002.01228.x
   Müller MM, 2004, EMPIR SOFTW ENG, V9, P335, DOI 10.1023/B:EMSE.0000039883.47173.39
   Newhall T, 2014, PROCEEDINGS OF THE 45TH ACM TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION (SIGCSE'14), P433, DOI 10.1145/2538862.2538923
   Nugroho A, 2009, INFORM SOFTWARE TECH, V51, P1670, DOI 10.1016/j.infsof.2009.04.007
   Osgood C. E., 1957, The measurement of meaning
   Pinto G, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING EDUCATION AND TRAINING (ICSE-SEET), P147, DOI 10.1109/ICSE-SEET.2019.00024
   Polancic G, 2010, J SYST SOFTWARE, V83, P574, DOI 10.1016/j.jss.2009.10.036
   Raza M, 2017, PROC IEEE ACM INT C, P241, DOI 10.1109/ICSE-C.2017.61
   Rea L.M., 2014, Designing and conducting survey research: A comprehensive guide
   Ricca F, 2007, PROC INT CONF SOFTW, P375
   Salman I, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P666, DOI 10.1109/ICSE.2015.82
   Sillito J, 2008, IEEE T SOFTWARE ENG, V34, P434, DOI 10.1109/TSE.2008.26
   Sinha A, 2006, EMPIR SOFTW ENG, V11, P173, DOI 10.1007/s10664-006-6401-9
   Sjoberg DIK, 2003, LECT NOTES COMPUT SC, V2765, P24
   Sjoberg DIK, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P17, DOI 10.1109/ISESE.2002.1166921
   Tichy W. F., 2000, Empirical Software Engineering, V5, P309, DOI 10.1023/A:1009844119158
   Venkatesh V, 2008, DECISION SCI, V39, P273, DOI 10.1111/j.1540-5915.2008.00192.x
   Webb NM, 1998, AM EDUC RES J, V35, P607, DOI 10.2307/1163461
   Wieringa R., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P493, DOI 10.1145/1810295.1810446
   Wohlin C., 2000, KLUWER INT SERIES SO, V6, DOI [10.1007/978-1-4615-4625-2, DOI 10.1007/978-1-4615-4625-2]
NR 76
TC 4
Z9 4
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2021
VL 26
IS 4
AR 80
DI 10.1007/s10664-021-09972-6
PG 41
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA ZA4FG
UT WOS:000756120800001
OA hybrid
DA 2024-07-18
ER

PT J
AU Ma, T
   Ali, S
   Yue, T
AF Ma, Tao
   Ali, Shaukat
   Yue, Tao
TI Testing self-healing cyber-physical systems under uncertainty with
   reinforcement learning: an empirical study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Cyber-physical systems; Uncertainty; Self-healing; Model execution;
   Reinforcement learning; Empirical evaluation
ID MODEL
AB Self-healing is becoming an essential feature of Cyber-Physical Systems (CPSs). CPSs with this feature are named Self-Healing CPSs (SH-CPSs). SH-CPSs detect and recover from errors caused by hardware or software faults at runtime and handle uncertainties arising from their interactions with environments. Therefore, it is critical to test if SH-CPSs can still behave as expected under uncertainties. By testing an SH-CPS in various conditions and learning from testing results, reinforcement learning algorithms can gradually optimize their testing policies and apply the policies to detect failures, i.e., cases that the SH-CPS fails to behave as expected. However, there is insufficient evidence to know which reinforcement learning algorithms perform the best in terms of testing SH-CPSs behaviors including their self-healing behaviors under uncertainties. To this end, we conducted an empirical study to evaluate the performance of 14 combinations of reinforcement learning algorithms, with two value function learning based methods for operation invocations and seven policy optimization based algorithms for introducing uncertainties. Experimental results reveal that the 14 combinations of the algorithms achieved similar coverage of system states and transitions, and the combination of Q-learning and Uncertainty Policy Optimization (UPO) detected the most failures among the 14 combinations. On average, the Q-Learning and UPO combination managed to discover two times more failures than the others. Meanwhile, the combination took 52% less time to find a failure. Regarding scalability, the time and space costs of the value function learning based methods grow, as the number of states and transitions of the system under test increases. In contrast, increasing the system's complexity has little impact on policy optimization based algorithms.
C1 [Ma, Tao; Ali, Shaukat; Yue, Tao] Simula Res Lab, POB 134, N-1325 Lysaker, Norway.
   [Ma, Tao] Univ Oslo, POB 1072, N-0316 Oslo, Norway.
   [Yue, Tao] Nanjing Univ Aeronaut & Astronaut, Nanjing, Peoples R China.
C3 University of Oslo; Nanjing University of Aeronautics & Astronautics
RP Yue, T (corresponding author), Simula Res Lab, POB 134, N-1325 Lysaker, Norway.; Yue, T (corresponding author), Nanjing Univ Aeronaut & Astronaut, Nanjing, Peoples R China.
EM taoma@simula.no; shaukat@simula.no; taoyue@ieee.org
RI yue, tao/H-6783-2013
OI Yue, Tao/0000-0003-3262-5577
FU Research Council of Norway [240013/O70]; Co-evolver project - Research
   Council of Norway under the FRIPO funding scheme [286898/LIS]; National
   Nature Science Foundation of China [61872182]
FX This work was supported by the Research Council of Norway funded MBT4CPS
   (grant no. 240013/O70) project. Tao Yue and Shaukat Ali are also
   supported by the Co-evolver project funded by the Research Council of
   Norway (grant no. 286898/LIS) under the category of Researcher Projects
   of the FRIPO funding scheme. Tao Yue is also supported by the National
   Nature Science Foundation of China (grant no. 61872182).
CR Ali S, 2013, IEEE T SOFTWARE ENG, V39, P1376, DOI 10.1109/TSE.2013.17
   [Anonymous], 2013, COMPUT SCI
   Arulkumaran K, 2017, IEEE SIGNAL PROC MAG, V34, P26, DOI 10.1109/MSP.2017.2743240
   BASILI VR, 1986, IEEE T SOFTWARE ENG, V12, P733, DOI 10.1109/TSE.1986.6312975
   BENJAMINI Y, 1995, J R STAT SOC B, V57, P289, DOI 10.1111/j.2517-6161.1995.tb02031.x
   Brandsoetter M, 2007, 2007 IEEE/RSJ INTERNATIONAL CONFERENCE ON INTELLIGENT ROBOTS AND SYSTEMS, VOLS 1-9, P1209
   Camilli M, 2020, SOFTW TEST VERIF REL, V30, DOI 10.1002/stvr.1730
   Derderian KA, 2006, THESIS BRUNEL U
   Duan Y, 2016, PR MACH LEARN RES, V48
   DUNN OJ, 1964, TECHNOMETRICS, V6, P241, DOI 10.2307/1266041
   Groce A., 2012, Proceedings of the 2012 IEEE 23rd International Symposium on Software Reliability Engineering (ISSRE), P161, DOI 10.1109/ISSRE.2012.1
   Gudemann M, 2006, 2 INT S LEVERAGING A, V2006, P177, DOI 10.1109/ISoLA.2006.38
   Heess N., 2015, ARXIV PREPRINT ARXIV
   Henderson P, 2018, AAAI CONF ARTIF INTE, P3207
   Jedlitschka A., 2008, Guide to advanced empirical software engineering, P201, DOI DOI 10.1007/978-1-84800-044-5_8
   Ji RH, 2018, IEEE INT CONF SOFTW, P204, DOI 10.1109/ICST.2018.00029
   Kavukcuoglu K, 2016, ARXIV PREPRINT ARXIV
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kiumarsi B, 2018, IEEE T NEUR NET LEAR, V29, P2042, DOI 10.1109/TNNLS.2017.2773458
   Kober J, 2013, INT J ROBOT RES, V32, P1238, DOI 10.1177/0278364913495721
   KRUSKAL WH, 1952, J AM STAT ASSOC, V47, P583, DOI 10.1080/01621459.1952.10483441
   Lefticaru R, 2007, NINTH INTERNATIONAL SYMPOSIUM ON SYMBOLIC AND NUMERIC ALGORITHMS FOR SCIENTIFIC COMPUTING, PROCEEDINGS, P188, DOI 10.1109/SYNASC.2007.47
   Lehre PK, 2014, INFORM SCIENCES, V259, P510, DOI 10.1016/j.ins.2010.01.031
   Ma T, 2019, SOFTW SYST MODEL, V18, P2843, DOI 10.1007/s10270-018-00703-y
   Ma T, 2019, SOFTWARE QUAL J, V27, P615, DOI 10.1007/s11219-018-9437-3
   Mariani L., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P81, DOI 10.1109/ICST.2012.88
   Martens J, 2015, PR MACH LEARN RES, V37, P2408
   Minnerup P, 2016, IFAC PAPERSONLINE, V49, P38, DOI 10.1016/j.ifacol.2016.07.611
   Mnih V, 2016, PR MACH LEARN RES, V48
   Mnih V, 2015, NATURE, V518, P529, DOI 10.1038/nature14236
   Munos R, 2016, ARXIV PREPRINT ARXIV
   OMG Specification, 2006, OBJECT CONSTRAINT LA
   OMG Specification, 2016, SEMANTICS FDN SUBSET
   OMG Specification, 2017, PREC SEM UML STAT MA
   Pollard D., 2000, ASYMPTOPIA EXPOSITIO
   Priesterjahn C., 2013, TIMED HAZARD ANAL SE, DOI [10.1007/978-3-642-36249-1_5, DOI 10.1007/978-3-642-36249-1_5]
   Ramirez Andres J., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P568, DOI 10.1109/ASE.2011.6100127
   Razavi A, 2017, ARXIV PREPRINT ARXIV
   Reichstaller A, 2018, INT CONF SELF SELF, P80, DOI 10.1109/SASO.2018.00019
   Reichstaller A, 2016, LECT NOTES COMPUT SC, V9976, P52, DOI 10.1007/978-3-319-47443-4_4
   ROYSTON P, 1995, APPL STAT-J ROY ST C, V44, P547, DOI 10.2307/2986146
   Schulman J, 2017, ARXIV PREPRINT ARXIV
   Schulman J, 2015, PR MACH LEARN RES, V37, P1889
   Singh S, 2000, MACH LEARN, V38, P287, DOI 10.1023/A:1007678930559
   Spieker H, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P12, DOI 10.1145/3092703.3092709
   Steinbauer G, 2006, LECT NOTES ARTIF INT, V4020, P13
   Sutton RS, 2018, ADAPT COMPUT MACH LE, P1
   Tumer K., 2018, ARXIV PREPRINT ARXIV
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Veanes M, 2006, LECT NOTES COMPUT SC, V4262, P240
   Venkatasubramanian V, 2003, COMPUT CHEM ENG, V27, P313, DOI 10.1016/S0098-1354(02)00161-8
   Walkinshaw N, 2017, IEEE INT CONF SOFTW, P253, DOI 10.1109/ICST.2017.30
   Whiteson S, 2006, J MACH LEARN RES, V7, P877
   Wu YH, 2017, ADV NEUR IN, V30
   Zhang M, 2019, J SYST SOFTWARE, V153, P1, DOI 10.1016/j.jss.2019.03.011
NR 55
TC 11
Z9 12
U1 2
U2 13
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAY
PY 2021
VL 26
IS 3
AR 52
DI 10.1007/s10664-021-09941-z
PG 54
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RH6SM
UT WOS:000636345900002
DA 2024-07-18
ER

PT J
AU Shastri, Y
   Hoda, R
   Amor, R
AF Shastri, Yogeshwar
   Hoda, Rashina
   Amor, Robert
TI Spearheading agile: the role of the scrum master in agile projects
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Grounded theory; Mixed methods; Scrum master; Agile software
   development; Agile project management; Scrum; Agile
ID SOFTWARE-DEVELOPMENT
AB Scrum innovated the role of the scrum master in software engineering. The scrum master is envisioned in agile literature as the "servant leader" who serves the team in a multitude of different ways, which include promoting scrum, facilitating the team's functioning, and removing obstacles. However, empirical studies focusing on the role of the scrum master in practice are scarce. To address this gap, a Grounded Theory study with a mixed methods approach was carried out which included semi-structured interviews with 39 software practitioners and a questionnaire with 47 respondents. In this study, we present and describe the scrum master's role in agile projects in terms of (a) the grounded theory of the role of the scrum master which involves everyday activities of facilitating, mentoring, negotiating, process adapting, coordinating, and protecting; (b) the varying involvement of the scrum master in selected agile practices carried out by the team; and (c) a positive association between the presence of the scrum master and the frequency with which agile practices are carried out by the team. This study presents for the first time a multifaceted study of the multiple dimensions of the scrum master role and will enable practitioners to better manage expectations of this role in practice.
C1 [Shastri, Yogeshwar] Eastern Inst Technol, Sch Comp, Napier, New Zealand.
   [Shastri, Yogeshwar] Univ Auckland, Dept Elect Comp & Software Engn, Auckland, New Zealand.
   [Hoda, Rashina] Monash Univ, Acad Workforce, Fac Informat Technol, Melbourne, Vic, Australia.
   [Amor, Robert] Univ Auckland, Sch Comp Sci, Auckland, New Zealand.
C3 University of Auckland; Monash University; University of Auckland
RP Shastri, Y (corresponding author), Eastern Inst Technol, Sch Comp, Napier, New Zealand.; Shastri, Y (corresponding author), Univ Auckland, Dept Elect Comp & Software Engn, Auckland, New Zealand.
EM ysha962@auckland.ac.nz; Rashina.Hoda@monash.edu;
   trebor@cs.auckland.ac.nz
RI Amor, Robert/L-9611-2019
OI Amor, Robert/0000-0002-4329-9044; SHASTRI, YOGESHWAR/0000-0001-6931-8947
CR Anderson D.J., 2016, Essential Kanban condensed
   [Anonymous], 2018, The 12th Annual State of Agile Report
   [Anonymous], 2005, Extreme programming explained: Embrace change
   [Anonymous], 2014, INT C SOFTWARE PROCE, DOI DOI 10.1007/978-3-319-13036-1_16
   Bass JM, 2013, 2013 IEEE 8TH INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING (ICGSE 2013), P154, DOI 10.1109/ICGSE.2013.27
   Birks M, 2008, J RES NURS, V13, P68, DOI 10.1177/1744987107081254
   Brewer J., 1989, MULTIMETHOD RES SYNT, V175
   Chow T, 2008, J SYST SOFTWARE, V81, P961, DOI 10.1016/j.jss.2007.08.020
   Cockburn A, 2001, COMPUTER, V34, P131, DOI 10.1109/2.963450
   Creswell J. W., 2007, DESIGNING CONDUCTING
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Fowler M., 2001, Software Development, V9, P28
   Glaser B. G., 1978, [No title captured]
   Glaser Barney G., 1992, Basic of grounded theory analysis: emergence vs. forcing
   Glaser Barney G., 2004, Forum: Qualitative Social Research, V5, DOI [DOI 10.17169/FQS-5.2.607, 10.17169/fqs-5.2.607]
   Hoda R, 2017, PROC INT CONF SOFTW, P141, DOI 10.1109/ICSE.2017.21
   Hoda R, 2013, IEEE T SOFTWARE ENG, V39, P422, DOI 10.1109/TSE.2012.30
   Hoda R, 2012, EMPIR SOFTW ENG, V17, P609, DOI 10.1007/s10664-011-9161-0
   Hoda R, 2011, INFORM SOFTWARE TECH, V53, P521, DOI 10.1016/j.infsof.2010.10.009
   Howe K., 1988, EDUC RESEARCHER, V17, P10
   James W., 1975, PRAGMATISM
   Johnson R. B., 2004, ED RES, V33, P14, DOI DOI 10.3102/0013189X033007014
   Kovach M., 2017, The Sage Handbook of Qualitative Research, P214
   Lewis S, 2015, HEALTH PROMOT PRACT, V16, P473, DOI 10.1177/1524839915580941
   Martin A, 2010, AGILE SOFTWARE DEVELOPMENT: CURRENT RESEARCH AND FUTURE DIRECTIONS, P111, DOI 10.1007/978-3-642-12575-1_6
   Noll J, 2017, LECT NOTES COMPUT SC, V10611, P307, DOI 10.1007/978-3-319-69926-4_22
   Palmer S.R., 2001, A Practical Guide to Feature-Driven Development, V1st
   Schwaber K., 2002, AGILE SOFTWARE DEV S
   Scott J., 2006, Social theory: Central issues in sociology
   Shastri Y, 2020, **DATA OBJECT**, DOI [10.7910/DVN/QEASRH, DOI 10.7910/DVN/QEASRH]
   Shastri Y, 2017, PROCEEDINGS OF THE 10TH INNOVATIONS IN SOFTWARE ENGINEERING CONFERENCE, P45, DOI 10.1145/3021460.3021465
   Siddique L., 2016, Journal of Engineering, Project, and Production Management, V6, P120, DOI [https://doi.org/10.32738/JEPPM.201607.0005, DOI 10.32738/JEPPM.201607.0005]
   Stapleton Jennifer., 2003, DSDM: Business focused development
   Stol KJ, 2016, PROC INT CONF SOFTW, P120, DOI 10.1145/2884781.2884833
   Stray V, 2016, J SYST SOFTWARE, V114, P101, DOI 10.1016/j.jss.2016.01.004
   STRUTZEL E, 1968, NURS RES, V17, P364
   Sutherland J., 2017, The Definitive Guide to Scrum: The Rules of the Game
   Tashakkori A., 1998, Mixed Methodology: Combining Qualitative and Quantitative Approaches (vol. 46)
   Tavakol M, 2011, INT J MED EDUC, V2, P1, DOI [10.5116/ijme.4d27.32ff, 10.5116/ijme.4dfb.8dfd]
   Waterman M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P347, DOI 10.1109/ICSE.2015.54
NR 41
TC 14
Z9 18
U1 15
U2 71
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN 6
PY 2021
VL 26
IS 1
AR 3
DI 10.1007/s10664-020-09899-4
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA PW0HG
UT WOS:000610357200001
DA 2024-07-18
ER

PT J
AU Wang, T
   Yu, X
   Qiu, ZY
   Jin, GL
   Mueller, F
AF Wang, Tao
   Yu, Xiao
   Qiu, Zhengyi
   Jin, Guoliang
   Mueller, Frank
TI BarrierFinder: recognizing ad hoc barriers
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Ad hoc synchronizations; Barriers; Program slicing; Symbolic execution;
   Temporal invariants
ID CONCURRENCY ANALYSIS; DYNAMIC DETECTION; PROGRAMS; BUGS
AB Ad hoc synchronizations are pervasive in multi-threaded programs. Due to their diversity and complexity, understanding the enforced synchronization relationships of ad hoc synchronizations is challenging but crucial to multi-threaded program development and maintenance. Existing techniques can partially detect primitive ad hoc synchronizations, but they cannot recognize complete implementations or infer the enforced synchronization relationships. In this paper, we propose a framework to automatically identify complex ad hoc synchronizations in full and infer their synchronization relationships. We instantiate the framework with a tool calledBarrierFinder, which features various techniques, including program slicing and bounded symbolic execution, to efficiently explore the interleaving space of ad hoc synchronizations within multi-threaded programs and collect execution traces.BarrierFinderthen uses these traces to characterize ad hoc synchronizations into different types with a focus on recognizing barriers. Our evaluation shows thatBarrierFinderis both effective and efficient in doing this, andBarrierFinderis also helpful for programmers to understand the correctness of their implemented ad hoc synchronizations.
C1 [Wang, Tao; Yu, Xiao; Qiu, Zhengyi; Jin, Guoliang; Mueller, Frank] North Carolina State Univ, Dept Comp Sci, 3266 EB2, Raleigh, NC 27695 USA.
C3 North Carolina State University
RP Jin, GL; Mueller, F (corresponding author), North Carolina State Univ, Dept Comp Sci, 3266 EB2, Raleigh, NC 27695 USA.
EM twang15@ncsu.edu; xyu10@ncsu.edu; zqiu2@ncsu.edu; guoliang_jin@ncsu.edu;
   mueller@cs.ncsu.edu
RI Wang, Tao/JCN-6184-2023
OI Wang, Tao/0000-0002-0865-0062; Mueller, Frank/0000-0002-0258-0294
FU Air Force Office of Scientific Research [AFOSR-FA9550-12-1-0442,
   AFOSR-FA9550-17-1-0205]; NSF [1217748, 1525609]; Lawrence Livermore
   National Laboratory [LLNL-B627261, LLNL-B631308]; DOE [1403482]
FX This work was supported in part by the following grants: Air Force
   Office of Scientific Research AFOSR-FA9550-12-1-0442 and
   AFOSR-FA9550-17-1-0205, NSF 1217748 and 1525609, DOE 1403482, Lawrence
   Livermore National Laboratory subcontracts LLNL-B627261 and
   LLNL-B631308.
CR [Anonymous], 1994, Program analysis and specialization for the C programming language
   [Anonymous], 2010, P 9 USENIX C OP SYST
   Beschastnikh I, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P468, DOI 10.1145/2568225.2568246
   Beschastnikh Ivan, 2011, Managing LargeScale Systems via the Analysis of System Logs and the Application of Machine Learning Techniques (Cascais, Portugal) (SLAML ' 11), DOI [10.1145/2038633.2038636, DOI 10.1145/2038633.2038636]
   Bessey A, 2010, COMMUN ACM, V53, P66, DOI 10.1145/1646353.1646374
   Bindal S., 2013, Proceedings of the International Symposium on Software Testing and Analysis, P145, DOI DOI 10.1145/2483760.2483764
   Blum B, 2016, ACM SIGPLAN NOTICES, V51, P477, DOI 10.1145/3022671.2984036
   Bucur S, 2011, EUROSYS 11: PROCEEDINGS OF THE EUROSYS 2011 CONFERENCE, P183
   Chalupa M, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3158119
   Chen CM, 2012, INT CONFER PARA, P469
   Chen GC, 2012, INT CONF HIGH PERFOR
   Cui HM, 2013, SOSP'13: PROCEEDINGS OF THE TWENTY-FOURTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P388, DOI 10.1145/2517349.2522735
   Das M, 2015, ACM T ARCHIT CODE OP, V12, DOI 10.1145/2766451
   Di P, 2015, PROC INT CONF PARAL, P889, DOI 10.1109/ICPP.2015.98
   Ernst MD, 2007, SCI COMPUT PROGRAM, V69, P35, DOI 10.1016/j.scico.2007.01.015
   Farchi E., 2003, Proceedings International Parallel and Distributed Processing Symposium, DOI 10.1109/IPDPS.2003.1213511
   Gallagher KB, 2004, FOURTH IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P36
   Giffhorn D, 2009, AUTOMAT SOFTW ENG, V16, P197, DOI 10.1007/s10515-009-0048-x
   Gu R, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P426, DOI 10.1145/2786805.2786815
   Hardekopf B, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P290, DOI 10.1145/1250734.1250767
   Herb S, 2005, FREE LUNCH IS FUNDAM
   Hind M., 2000, Software Engineering Notes, V25, P113, DOI 10.1145/347636.348916
   HORWITZ S, 1990, ACM T PROGR LANG SYS, V12, P26, DOI [10.1145/77606.77608, 10.1145/960116.53994]
   IBM corporation, 1998, SOFTW MOD MULT PROGR
   Jannesari A, 2014, IEEE T PARALL DISTR, V25, P2606, DOI 10.1109/TPDS.2013.209
   Jannesari Ali., 2010, Parallel Distributed Processing (IPDPS), 2010 IEEE International Symposium on, P1
   Jin G., 2012, 10 USENIX S OP SYST, P221
   Jin GL, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P389
   Kamil A, 2006, LECT NOTES COMPUT SC, V4339, P185, DOI 10.1007/978-3-540-69330-7_13
   Krinke J., 2003, Software Engineering Notes, V28, P178, DOI 10.1145/949952.940096
   Li L, 2005, PRACTICAL MHP INFORM, P194
   Lu S, 2008, ACM SIGPLAN NOTICES, V43, P329, DOI 10.1145/1353536.1346323
   Lucia B, 2010, CONF PROC INT SYMP C, P222, DOI 10.1145/1816038.1815988
   Malkis A, 2014, J AUTOM REASONING, V52, P275, DOI 10.1007/s10817-013-9290-9
   March WB, 2012, CH CRC DATA MIN KNOW, P463
   MAZURKIEWICZ A, 1987, LECT NOTES COMPUT SC, V255, P279
   Musuvathi M, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P446, DOI 10.1145/1250734.1250785
   Nanda MG, 2006, ACM T PROGR LANG SYS, V28, P1088, DOI 10.1145/1186632.1186636
   Park S, 2009, ACM SIGPLAN NOTICES, V44, P25, DOI 10.1145/1508284.1508249
   Pinto G, 2015, J SYST SOFTWARE, V106, P59, DOI 10.1016/j.jss.2015.04.064
   Raman Raghavan., 2012, Proceedings of the Thirty-third ACM SIGPLAN Conference on Programming Language Design and Implementation, PLDI '12, P531, DOI DOI 10.1145/2254064.2254127
   Sadowski Caitlin, 2014, P 5 WORKSHOP EVALUAT, DOI DOI 10.1145/2688204.2688205
   Shapiro Marc, 1997, P 24 ANN ACM SIGPLAN, P1, DOI DOI 10.1145/263699.263703
   Slaby J, 2015, LLVM SLICER
   Steensgaard B., 1996, Conference Record of POPL '96: The 23rd ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P32, DOI 10.1145/237721.237727
   Surendran R, 2014, ACM SIGPLAN NOTICES, V49, P15, DOI [10.1145/2666356.2594335, 10.1145/2594291.2594335]
   Sutter H., 2005, ACM Queue, V3, P54, DOI 10.1145/1095408.1095421
   Taubenfeld Gadi, 2006, SYNCHRONIZATION ALGO
   Tian C, 2009, SOFTWARE PRACT EXPER, V39, P947, DOI 10.1002/spe.922
   Tian Chen., 2008, Proceedings of the 2008 international Symposium on Software Testing and Analysis, P143, DOI DOI 10.1145/1390630.1390649
   Wang C, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P23, DOI 10.1145/1595696.1595702
   Wang T, 2019, PROC IEEE INT CONF S, P323, DOI 10.1109/ICSME.2019.00049
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
   Weiser M., 1981, 5th International Conference on Software Engineering, P439
   WOO SC, 1995, ACM COMP AR, P24, DOI 10.1109/ISCA.1995.524546
   Wu D, 2016, INFORM SOFTWARE TECH, V76, P1, DOI 10.1016/j.infsof.2016.04.004
   Yin L., 2013, International Workshop on Languages and Compilers for Parallel Computing, P187
   Yu T., 2016, P 25 INT S SOFTW TES, P389
   Yu X, 2016, ACM SIGPLAN NOTICES, V51, P489, DOI 10.1145/2954679.2872407
   Yuan X, 2013, P 19 INT C PAR PROC, P4, DOI [10.1007/978-3-642-40047-6_3, DOI 10.1007/978-3-642-40047-6_3]
   Zhang W, 2011, ACM SIGPLAN NOTICES, V46, P251, DOI 10.1145/1961296.1950395
   Zhang W, 2010, ASPLOS XV: FIFTEENTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS, P179
   Zhang Y, 2008, LECT NOTES COMPUT SC, V5234, P95, DOI 10.1007/978-3-540-85261-2_7
   Zhao Q, 2019, PROCEEDINGS OF THE 24TH SYMPOSIUM ON PRINCIPLES AND PRACTICE OF PARALLEL PROGRAMMING (PPOPP '19), P242, DOI 10.1145/3293883.3295731
NR 64
TC 0
Z9 0
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2020
VL 25
IS 6
BP 4676
EP 4706
DI 10.1007/s10664-020-09862-3
EA SEP 2020
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA OI4BB
UT WOS:000565114300001
DA 2024-07-18
ER

PT J
AU Nyamawe, AS
   Liu, H
   Niu, N
   Umer, Q
   Niu, ZD
AF Nyamawe, Ally S.
   Liu, Hui
   Niu, Nan
   Umer, Qasim
   Niu, Zhendong
TI Feature requests-based recommendation of software refactorings
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Feature requests; Code smells; Machine learning; Recommendation;
   Software refactoring
ID IMPACT; IDENTIFICATION; TRACEABILITY
AB Software requirements are ever-changing which often leads to software evolution. Consequently, throughout software lifetime, developers receive new requirements often expressed as feature requests. To implement the requested features, developers sometimes apply refactorings to make their systems adapt to the new requirements. However, deciding what refactorings to apply is often challenging and there is still lack of automated support to recommend refactorings given a feature request. To this end, we propose a learning-based approach that recommends refactorings based on the history of the previously requested features, applied refactorings, and code smells information. First, the state-of-the-art refactoring detection tools are leveraged to identify the previous refactorings applied to implement the past feature requests. Second, a machine classifier is trained with the history data of the feature requests, code smells, and refactorings applied on the respective commits. Consequently, the machine classifier is used to predict refactorings for new feature requests. The proposed approach is evaluated on the dataset of 55 open source Java projects and the results suggest that it can accurately recommend refactorings (accuracy is up to 83.19%).
C1 [Nyamawe, Ally S.; Liu, Hui; Umer, Qasim; Niu, Zhendong] Beijing Inst Technol, Sch Comp Sci & Technol, Beijing, Peoples R China.
   [Niu, Nan] Univ Cincinnati, Dept Elect Engn & Comp Sci, Cincinnati, OH USA.
C3 Beijing Institute of Technology; University System of Ohio; University
   of Cincinnati
RP Liu, H (corresponding author), Beijing Inst Technol, Sch Comp Sci & Technol, Beijing, Peoples R China.
EM nyamawe@udom.ac.tz; liuhui08@bit.edu.cn; nan.niu@uc.edu;
   qasimumer667@hotmail.com; zniu@bit.edu.cn
RI Umer, Qasim/ABE-3384-2021; niu, zhendong/KIJ-1559-2024
OI Umer, Qasim/0000-0002-0237-3025; Nyamawe, Ally/0000-0002-5210-259X; Niu,
   Zhendong/0000-0002-0576-7572
FU National Natural Science Foundation of China [61772071, 61690205]; U.S.
   National Science Foundation Award [CCF-1350487]
FX The authors would like to say thanks to the anonymous reviewers of this
   manuscript as well as to the program chairs and the anonymous reviewers
   of RE'19 conference for their insightful comments and constructive
   suggestions. This work is partially supported by the National Natural
   Science Foundation of China (No. 61772071 and No. 61690205), and the
   U.S. National Science Foundation Award (CCF-1350487).
CR Aggarwal CharuC., 2012, MINING TEXT DATA, DOI [10.1007/978-1-4614-3223-4_6, DOI 10.1007/978-1-4614-3223-4_6]
   AlOmar EA, 2019, 2019 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON REFACTORING (IWOR 2019), P51, DOI 10.1109/IWoR.2019.00017
   Alspaugh TA, 2013, S VIS LANG HUM CEN C, P165, DOI 10.1109/RE.2013.6636716
   Angerer F, 2019, AUTOMAT SOFTW ENG, V26, P417, DOI 10.1007/s10515-019-00253-7
   [Anonymous], 2014, AUTOM SOFTW ENG, DOI DOI 10.1007/S10515-014-0175-X
   Bavota G., 2014, Recommendation Systems in Software Engineering, P387
   Bavota G, 2014, EMPIR SOFTW ENG, V19, P1617, DOI 10.1007/s10664-013-9256-x
   Chaparro O, 2014, PROC IEEE INT CONF S, P456, DOI 10.1109/ICSME.2014.73
   Chen JN, 2009, EXPERT SYST APPL, V36, P5432, DOI 10.1016/j.eswa.2008.06.054
   Feng WM, 2016, IEEE IPCCC, DOI 10.1109/PCCC.2016.7820655
   Fokaefs Marios, 2007, 2007 IEEE International Conference on Software Maintenance, P519, DOI 10.1109/ICSM.2007.4362679
   Fokaefs M, 2012, J SYST SOFTWARE, V85, P2241, DOI 10.1016/j.jss.2012.04.013
   Fokaefs M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1037, DOI 10.1145/1985793.1985989
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gibaja E, 2015, ACM COMPUT SURV, V47, DOI 10.1145/2716262
   Godbole S, 2004, LECT NOTES ARTIF INT, V3056, P22
   Heck P., 2013, PROC WORKSHOP PRINC, P43
   Hegedus P, 2018, INFORM SOFTWARE TECH, V95, P313, DOI 10.1016/j.infsof.2017.11.012
   Jayatilleke S, 2018, REQUIR ENG, V23, P493, DOI 10.1007/s00766-017-0277-7
   Jiang LX, 2013, J EXP THEOR ARTIF IN, V25, P273, DOI 10.1080/0952813X.2012.721010
   Kessentini M, 2017, PROCEEDINGS OF THE 2017 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE (GECCO'17), P1303, DOI 10.1145/3071178.3071334
   Khan Aurangzeb, 2010, Journal of Advances in Information Technology, V1, P4, DOI 10.4304/jait.1.1.4-20
   Kim M., 2012, P ACM SIGSOFT 20 INT, P1
   Kim M., 2010, PROC 18 ACM SIGSOFT, P371, DOI [10.1145/1882291.1882353, DOI 10.1145/1882291.1882353]
   Lin Y, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P535, DOI 10.1145/2950290.2950317
   Liu H, 2018, IEEE INT CONF AUTOM, P385, DOI 10.1145/3238147.3238166
   Liu H, 2013, IEEE T SOFTWARE ENG, V39, P1112, DOI 10.1109/TSE.2013.4
   Liu H, 2012, IEEE T SOFTWARE ENG, V38, P220, DOI 10.1109/TSE.2011.9
   Loper E, 2002, ETMTNLP 02 P ACL 02, P63, DOI [10.3115/1225403.1225421, DOI 10.3115/1225403.1225421, DOI 10.3115/1118108.1118117]
   Mahmoud A, 2014, REQUIR ENG, V19, P309, DOI 10.1007/s00766-013-0197-0
   Manning Christopher D., 2008, INTRO INFORM RETRIEV
   Manning Christopher D., 2001, Foundations of Statistical Natural Language Processing
   Mei H, 2018, SCI CHINA INFORM SCI, V61, DOI 10.1007/s11432-017-9355-3
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Mohan Michael, 2018, Journal of Software Engineering Research and Development, V6, DOI 10.1186/s40411-018-0046-4
   Murphy-Hill E, 2012, IEEE T SOFTWARE ENG, V38, P5, DOI 10.1109/TSE.2011.41
   Niu N, 2014, INT REQUIR ENG CONF, P133, DOI 10.1109/RE.2014.6912255
   Nizamani ZA, 2018, AUTOMAT SOFTW ENG, V25, P347, DOI 10.1007/s10515-017-0229-y
   Nyamawe AS, 2019, INT REQUIR ENG CONF, P187, DOI 10.1109/RE.2019.00029
   Nyamawe AS, 2018, IEEE ACCESS, V6, P49460, DOI 10.1109/ACCESS.2018.2868990
   Ouni A, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1843
   Ouni A, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2932631
   Ouni A, 2015, J SYST SOFTWARE, V105, P18, DOI 10.1016/j.jss.2015.03.040
   Ouni A, 2013, GECCO'13: PROCEEDINGS OF THE 2013 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1461
   Palomba F, 2017, PROC INT CONF SOFTW, P106, DOI 10.1109/ICSE.2017.18
   Palomba F, 2017, INT C PROGRAM COMPRE, P176, DOI 10.1109/ICPC.2017.38
   Pantiuchina J, 2018, INT C PROGRAM COMPRE, P312, DOI 10.1145/3196321.3196365
   Porter MF, 2006, PROGRAM-ELECTRON LIB, V40, P211, DOI [10.1108/00330330610681286, 10.1108/eb046814]
   Rath M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P834, DOI 10.1145/3180155.3180207
   Ratzinger Jacek, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P354
   Runeson P, 2007, PROC INT CONF SOFTW, P499
   Schapire RE, 2000, MACH LEARN, V39, P135, DOI 10.1023/A:1007649029923
   Silva D, 2017, IEEE WORK CONF MIN S, P269, DOI 10.1109/MSR.2017.14
   Silva D, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P858, DOI 10.1145/2950290.2950305
   Simon F, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P30, DOI 10.1109/CSMR.2001.914965
   Soares G., 2011, Proceedings of the 2011 25th Brazilian Symposium on Software Engineering (SBES 2011), P164, DOI 10.1109/SBES.2011.21
   Sun Chengnian, 2010, P 32 ACMIEEE INT C S, V1, P45, DOI [DOI 10.1145/1806799, 10.1145/1806799.1806811]
   Tan Liang., 2019, SOFTWARE ENG WORKSHO, P100
   Terra R, 2018, J SYST SOFTWARE, V138, P19, DOI 10.1016/j.jss.2017.11.073
   Thung F., 2014, P 29 ACM IEEE INT C, P871
   Thung F, 2013, IEEE INT CONF AUTOM, P290, DOI 10.1109/ASE.2013.6693088
   Tsantalis N, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P483, DOI 10.1145/3180155.3180206
   Tsantalis N, 2011, EUR CON SFTWR MTNCE, P25, DOI 10.1109/CSMR.2011.7
   Tsantalis N, 2009, IEEE T SOFTWARE ENG, V35, P347, DOI 10.1109/TSE.2009.1
   Uysal AK, 2014, INFORM PROCESS MANAG, V50, P104, DOI 10.1016/j.ipm.2013.08.006
   Xu SH, 2017, PROC INT SYMP SOFTW, P24, DOI 10.1109/ISSRE.2017.35
   Yue RR, 2018, PROC IEEE INT CONF S, P115, DOI 10.1109/ICSME.2018.00021
   Zhang ML, 2014, IEEE T KNOWL DATA EN, V26, P1819, DOI 10.1109/TKDE.2013.39
NR 69
TC 14
Z9 17
U1 0
U2 8
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2020
VL 25
IS 5
BP 4315
EP 4347
DI 10.1007/s10664-020-09871-2
EA AUG 2020
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NJ1FD
UT WOS:000563602900004
DA 2024-07-18
ER

PT J
AU Chen, X
   Jiang, H
   Li, XC
   Nie, LM
   Yu, DJ
   He, TK
   Chen, ZY
AF Chen, Xin
   Jiang, He
   Li, Xiaochen
   Nie, Liming
   Yu, Dongjin
   He, Tieke
   Chen, Zhenyu
TI A systemic framework for crowdsourced test report quality assessment
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Crowdsourced testing; Test report quality; Desirable properties; Quality
   indicators; Natural language processing
ID REQUIREMENTS; CLASSIFICATION; SET
AB In crowdsourced mobile application testing, crowd workers perform test tasks for developers and submit test reports to report the observed abnormal behaviors. These test reports usually provide important information to improve the quality of software. However, due to the poor expertise of workers and the inconvenience of editing on mobile devices, some test reports usually lack necessary information for understanding and reproducing the revealed bugs. Sometimes developers have to spend a significant part of available resources to handle the low-quality test reports, thus severely reducing the inspection efficiency. In this paper, to help developers determine whether a test report should be selected for inspection within limited resources, we issue a new problem of test report quality assessment. Aiming to model the quality of test reports, we propose a new framework named TERQAF. First, we systematically summarize some desirable properties to characterize expected test reports and define a set of measurable indicators to quantify these properties. Then, we determine the numerical values of indicators according to the contained contents of test reports. Finally, we train a classifier by using logistic regression to predict the quality of test reports. To validate the effectiveness of TERQAF, we conduct extensive experiments over five crowdsourced test report datasets. Experimental results show that TERQAF can achieve 85.18% in terms of Macro-average Precision (MacroP), 75.87% in terms of Macro-average Recall (MacroR), and 80.01% in terms of Macro-average F-measure (MacroF) on average in test report quality assessment. Meanwhile, the empirical results also demonstrate that test report quality assessment can help developers handle test reports more efficiently.
C1 [Chen, Xin; Yu, Dongjin] Hangzhou Dianzi Univ, Coll Comp Sci & Technol, Hangzhou, Peoples R China.
   [Jiang, He; Li, Xiaochen] Dalian Univ Technol, Sch Software, Dalian, Peoples R China.
   [Nie, Liming] Zhejiang Sci Tech Univ, Sch Informat Sci & Technol, Hangzhou, Peoples R China.
   [He, Tieke; Chen, Zhenyu] Nanjing Univ, Sch Software, Nanjing, Peoples R China.
C3 Hangzhou Dianzi University; Dalian University of Technology; Zhejiang
   Sci-Tech University; Nanjing University
RP Chen, X (corresponding author), Hangzhou Dianzi Univ, Coll Comp Sci & Technol, Hangzhou, Peoples R China.
EM chenxin4391@hdu.edu.cn
RI He, Tieke/JUF-6558-2023; Alidadi, Mehdi/HJZ-0235-2023
OI He, Tieke/0000-0001-9649-1796; Alidadi, Mehdi/0000-0001-5183-7829
FU National Key Research and Development Program of China
   [2018YF-B1003900]; National Natural Science Foundation of China
   [61902096, 61972359, 61370144, 61722202, 61403057, 61772107]
FX We greatly thank the developers who devote their precious time on
   evaluating and inspecting the quality of test reports. We would thank
   Jose M. Fuentes who provides help for us to conduct this work. This work
   is partially supported by the National Key Research and Development
   Program of China under grant no. 2018YF-B1003900, and the National
   Natural Science Foundation of China under Grants No. 61902096, 61972359,
   61370144, 61722202, 61403057, and 61772107.
CR Aceto G, 2018, J NETW COMPUT APPL, V103, P131, DOI 10.1016/j.jnca.2017.11.007
   [Anonymous], 2007, P 22 IEEE ACM INT C, DOI DOI 10.1145/1321631.1321639
   [Anonymous], 2016, RES PAPERS
   Arce-Ferrer A, 2014, INT J TEST, V14, P195, DOI 10.1080/15305058.2014.918040
   Bettenburg N., 2008, P 16 ACM SIGSOFT INT, P308
   Bettenburg N, 2008, PROC IEEE INT CONF S, P337, DOI 10.1109/ICSM.2008.4658082
   Carlson N, 2014, INNOV SYST SOFTW ENG, V10, P77, DOI 10.1007/s11334-013-0225-8
   Chen X, 2019, FRONT COMPUT SCI-CHI, V13, P943, DOI 10.1007/s11704-018-7308-5
   Chen X, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P368, DOI 10.1109/SANER.2018.8330224
   Chen ZY, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P272, DOI 10.1145/2591062.2591153
   Cui Q., 2017, P SEKE, P218
   de Sousa T.C., 2010, ACM SIGSOFT SOFTW EN, V35, P1, DOI [http://dx.doi.org/10.1145/1734103.1734114, DOI 10.1145/1734103.1734114]
   Denoeux T, 2018, LECT NOTES ARTIF INT, V11069, P57, DOI 10.1007/978-3-319-99383-6_8
   Dolstra E, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P332, DOI 10.1109/ICST.2013.44
   Feng Y, 2016, IEEE INT CONF AUTOM, P202, DOI 10.1145/2970276.2970367
   Feng Y, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P225, DOI 10.1145/2786805.2786862
   Fernandez-Huerta J., 1959, CONSIGNA, V214, P29
   Flesch R, 1948, J APPL PSYCHOL, V32, P221, DOI 10.1037/h0057532
   Génova G, 2013, REQUIR ENG, V18, P25, DOI 10.1007/s00766-011-0134-z
   Gomide VHM., 2014, INT J COMPUTER SCI I, V5, P575
   Guaiani F, 2015, SECOND INTERNATIONAL WORKSHOP ON CROWDSOURCING IN SOFTWARE ENGINEERING CSI-SE 2015, P32, DOI 10.1109/CSI-SE.2015.14
   Guo SK, 2017, SYMMETRY-BASEL, V9, DOI 10.3390/sym9080161
   Guo Wei, 2010, THESIS
   Heck P., 2016, SOFTW QUAL J, P1
   Howe J, 2006, WIRED, V14, P1, DOI DOI 10.1086/599595
   Hsu HL, 2019, COMPUT STAT DATA AN, V129, P119, DOI 10.1016/j.csda.2018.08.013
   Jiang H, 2018, ACM T INTERNET TECHN, V18, DOI 10.1145/3106164
   Jiang H, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P157, DOI 10.1109/SANER.2016.59
   Joorabchi ME, 2014, P 11 WORK C MIN SOFT, P62, DOI [10.1145/2597073.2597098, DOI 10.1145/2597073.2597098]
   Kiyavitskaya N, 2008, REQUIR ENG, V13, P207, DOI 10.1007/s00766-008-0063-7
   Ko AJ, 2006, IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P127
   Li XL, 2018, EMPIR SOFTW ENG, V23, P1, DOI 10.1007/s10664-016-9494-9
   Liu D, 2012, AM SOC INFORM SCI TE, V49, P332
   Mao K., 2015, RN, V15, P01
   Nazar N, 2016, FRONT COMPUT SCI-CHI, V10, P504, DOI 10.1007/s11704-015-4409-2
   Nebeling Michael, 2012, Web Engineering. Proceedings 12th International Conference, ICWE 2012, P494, DOI 10.1007/978-3-642-31753-8_52
   Parra E, 2015, INFORM SOFTWARE TECH, V67, P180, DOI 10.1016/j.infsof.2015.07.006
   Perry W.E., 2006, EFFECTIVE METHODS SO, VThird
   Petrosyan G, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P869, DOI 10.1109/ICSE.2015.97
   Popescu Daniel, 2007, Innovations for Requirements Analysis. From Stakeholders' Needs to Formal Designs.14th Monterey Workshop 2007. Revised Selected Papers, P103
   Rastkar S, 2014, IEEE T SOFTWARE ENG, V40, P366, DOI 10.1109/TSE.2013.2297712
   Rosenberg L., 1999, METHODOLOGY WRITING
   Sardinha A, 2013, AUTOMAT SOFTW ENG, V20, P111, DOI 10.1007/s10515-012-0106-7
   Starov O., 2013, Cloud platform for research crowdsourcing in mobile testing
   Thakurta R, 2013, SOFTWARE QUAL J, V21, P573, DOI 10.1007/s11219-012-9188-5
   Vliegendhart R., 2012, P ACM MULT 2012 WORK, P21, DOI DOI 10.1145/2390803.2390813
   Wang J, 2016, P 10 ACM IEEE INT S, P6
   Wang JJ, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P83, DOI 10.1109/ICSE-SEIP.2017.8
   Wang JJ, 2016, IEEE INT CONF AUTOM, P190, DOI 10.1145/2970276.2970300
   Wilson WM, 1996, FOURTEENTH ANNUAL PACIFIC NORTHWEST SOFTWARE QUALITY CONFERENCE, P140
   Wu CC, 2013, IEEE T MULTIMEDIA, V15, P1121, DOI 10.1109/TMM.2013.2241043
   Yang S., 1970, READABILITY FORMULA
   Zhang T, 2017, 2017 11TH IEEE SYMPOSIUM ON SERVICE-ORIENTED SYSTEM ENGINEERING (SOSE), P75, DOI 10.1109/SOSE.2017.28
   Zhang X, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P752, DOI 10.1145/2889160.2892659
   Zhifang Liu, 2010, 2010 2nd International Conference on Computer Engineering and Technology (ICCET), P297, DOI 10.1109/ICCET.2010.5485442
   Zimmermann T, 2010, IEEE T SOFTWARE ENG, V36, P618, DOI 10.1109/TSE.2010.63
   Zogaj S., 2014, J BUSINESS EC, V84, P375
NR 57
TC 5
Z9 6
U1 0
U2 12
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2020
VL 25
IS 2
SI SI
BP 1382
EP 1418
DI 10.1007/s10664-019-09793-8
EA FEB 2020
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KT0VU
UT WOS:000516790000001
DA 2024-07-18
ER

PT J
AU Soltani, M
   Derakhshanfar, P
   Devroey, X
   van Deursen, A
AF Soltani, Mozhan
   Derakhshanfar, Pouria
   Devroey, Xavier
   Van Deursen, Arie
TI A benchmark-based evaluation of search-based crash reproduction
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Crash reproduction; Empirical evaluation; Search-based software testing
ID SOFTWARE; GENERATION; FAILURES; JAVA
AB Crash reproduction approaches help developers during debugging by generating a test case that reproduces a given crash. Several solutions have been proposed to automate this task. However, the proposed solutions have been evaluated on a limited number of projects, making comparison difficult. In this paper, we enhance this line of research by proposing JCrashPack, an extensible benchmark for Java crash reproduction, together with ExRunner, a tool to simply and systematically run evaluations. JCrashPack contains 200 stack traces from various Java projects, including industrial open source ones, on which we run an extensive evaluation of EvoCrash, the state-of-the-art tool for search-based crash reproduction. EvoCrash successfully reproduced 43% of the crashes. Furthermore, we observed that reproducing NullPointerException, IllegalArgumentException, and IllegalStateException is relatively easier than reproducing ClassCastException, ArrayIndexOutOfBoundsException and StringIndexOutOfBoundsException. Our results include a detailed manual analysis of EvoCrash outputs, from which we derive 14 current challenges for crash reproduction, among which the generation of input data and the handling of abstract and anonymous classes are the most frequents. Finally, based on those challenges, we discuss future research directions for search-based crash reproduction for Java.
C1 [Soltani, Mozhan; Derakhshanfar, Pouria; Devroey, Xavier; Van Deursen, Arie] Delft Univ Technol, Postbus 5, Delft, AA, Netherlands.
   [Soltani, Mozhan] Leiden Univ, Rapenburg 70, NL-2311 EZ Leiden, Netherlands.
C3 Delft University of Technology; Leiden University; Leiden University -
   Excl LUMC
RP Devroey, X (corresponding author), Delft Univ Technol, Postbus 5, Delft, AA, Netherlands.
EM x.d.m.devroey@tudelft.nl
RI Devroey, Xavier/I-3918-2019; van Deursen, Arie/G-3084-2011
OI Devroey, Xavier/0000-0002-0831-7606; van Deursen,
   Arie/0000-0003-4850-3312
CR Alshahwan N, 2018, LECT NOTES COMPUT SC, V11036, P3, DOI 10.1007/978-3-319-99241-9_1
   [Anonymous], 2018, IEEE T SOFTW ENG
   [Anonymous], ANT
   [Anonymous], LOG4J
   [Anonymous], WHATS NEW JDK 8
   [Anonymous], 2014, P ACM IEEE INT C AUT, DOI DOI 10.1145/2642937.2642986
   [Anonymous], HIGH PERV JAV BAS OP
   [Anonymous], COMM COLL
   [Anonymous], STACK TRAC HAS INV N
   [Anonymous], DESIGN PATTERNS IMPL
   [Anonymous], P 6 JOINT M EUR SOFT
   [Anonymous], ADV OP SOURC ENT APP
   [Anonymous], REACTIVE EXTENSIONS
   [Anonymous], EL RESTFUL DISTR SEA
   Arcuri A, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P9, DOI 10.1109/QRS.2017.11
   Arcuri A, 2017, IEEE INT CONF SOFTW, P126, DOI 10.1109/ICST.2017.19
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Arcuri A, 2011, LECT NOTES COMPUT SC, V6956, P33, DOI 10.1007/978-3-642-23716-4_6
   Artzi S, 2008, LECT NOTES COMPUT SC, V5142, P542, DOI 10.1007/978-3-540-70592-5_23
   Baresel A., 2004, Software Engineering Notes, V29, P108, DOI 10.1145/1013886.1007527
   Bell J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P362, DOI 10.1109/ICSE.2013.6606582
   Bianchi FA, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P705, DOI 10.1145/3106237.3106292
   Braione P, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P90, DOI 10.1145/3092703.3092715
   Briand L, 2017, IEEE SOFTWARE, V34, P72, DOI 10.1109/MS.2017.3571562
   Cabral B, 2007, LECT NOTES COMPUT SC, V4609, P151
   Cao Y., 2014, Proceedings of the ACM/IEEE International Conference on Automated Software Engineering ASE, P791
   Chen N, 2015, IEEE T SOFTWARE ENG, V41, P198, DOI 10.1109/TSE.2014.2363469
   Clause J, 2007, PROC INT CONF SOFTW, P261
   Coelho R, 2017, EMPIR SOFTW ENG, V22, P1264, DOI 10.1007/s10664-016-9443-7
   Fraser G, 2014, LECT NOTES BUS INF P, V166, P185
   Fraser G, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2685612
   Fraser G, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P362, DOI 10.1109/ICST.2013.51
   Fraser G, 2013, IEEE T SOFTWARE ENG, V39, P276, DOI 10.1109/TSE.2012.14
   Gómez M, 2016, 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2016), P88, DOI [10.1109/MobileSoft.2016.033, 10.1145/2897073.2897088]
   Harman M, 2004, IEEE T SOFTWARE ENG, V30, P3, DOI 10.1109/TSE.2004.1265732
   Harman M., 2002, P GENETIC EVOLUTIONA, P1359
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Jin W, 2012, PROC INT CONF SOFTW, P474, DOI 10.1109/ICSE.2012.6227168
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Kifetew FM, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P163, DOI 10.1109/ICST.2014.29
   Kifetew FM, 2013, IEEE INT CONF AUTOM, P604, DOI 10.1109/ASE.2013.6693120
   Leitner A, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P416, DOI 10.1109/ICST.2009.30
   Li YC, 2011, LECT NOTES COMPUT SC, V6956, P237, DOI 10.1007/978-3-642-23716-4_21
   Liskov B., 2000, PROGRAM DEV JAVA ABS
   Luo QZ, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P643, DOI 10.1145/2635868.2635920
   Maiga A, 2015, PROC IEEE INT CONF S, P342, DOI 10.1109/ICSM.2015.7332485
   Malburg J., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P436, DOI 10.1109/ASE.2011.6100092
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   McMinn P., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P153, DOI 10.1109/ICSTW.2011.100
   Narayanasamy S, 2005, CONF PROC INT SYMP C, P284, DOI 10.1109/ISCA.2005.16
   Nayrolles M, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1789
   Nayrolles M, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P649, DOI 10.1109/SANER.2016.71
   Roche J, 2013, COMMUN ACM, V56, P38, DOI 10.1145/2524713.2524721
   Rössler J, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P114, DOI 10.1109/ICST.2013.18
   Rojas JM, 2016, SOFTW TEST VERIF REL, V26, P366, DOI 10.1002/stvr.1601
   Sim SE, 2003, PROC INT CONF SOFTW, P74, DOI 10.1109/ICSE.2003.1201189
   Soltani M, 2017, PROC INT CONF SOFTW, P209, DOI 10.1109/ICSE.2017.27
   Steven J., 2000, PROC INT S SOFTWARE, P158
   Weeratunge D, 2010, ASPLOS XV: FIFTEENTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS, P155
   Xiao XS, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P611, DOI 10.1145/1985793.1985876
   Xuan JF, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P910, DOI 10.1145/2786805.2803206
   Yu TT, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P694, DOI 10.1145/3106237.3106266
   Zamfir C, 2010, EUROSYS'10: PROCEEDINGS OF THE EUROSYS 2010 CONFERENCE, P321
   Zeller A, 2009, WHY PROGRAMS FAIL: A GUIDE TO SYSTEMATIC DEBUGGING, 2ND EDITION
NR 65
TC 19
Z9 20
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN
PY 2020
VL 25
IS 1
BP 96
EP 138
DI 10.1007/s10664-019-09762-1
PG 43
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KP0WS
UT WOS:000515965100003
OA hybrid
DA 2024-07-18
ER

PT J
AU Cotroneo, D
   Iannillo, AK
   Natella, R
AF Cotroneo, Domenico
   Iannillo, Antonio Ken
   Natella, Roberto
TI Evolutionary Fuzzing of Android OS Vendor System Services
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Fuzz testing; Evolutionary algorithms; Android OS
ID ALGORITHMS
AB Android devices are shipped in several flavors by more than 100 manufacturer partners, which extend the Android "vanilla" OS with new system services, and modify the existing ones. These proprietary extensions expose Android devices to reliability and security issues. In this paper, we propose a coverage-guided fuzzing platform (Chizpurfle) based on evolutionary algorithms to test proprietary Android system services. A key feature of this platform is the ability to profile coverage on the actual, unmodified Android device, by taking advantage of dynamic binary re-writing techniques. We applied this solution on three high-end commercial Android smartphones. The results confirmed that evolutionary fuzzing is able to test Android OS system services more efficiently than blind fuzzing. Furthermore, we evaluate the impact of different choices for the fitness function and selection algorithm.
C1 [Cotroneo, Domenico; Iannillo, Antonio Ken; Natella, Roberto] Univ Napoli Federico II, Via Claudio 21, I-80125 Naples, Italy.
   [Iannillo, Antonio Ken] Univ Luxembourg, SnT, 29 Ave JF Kennedy, L-1855 Esch Sur Alzette, Luxembourg.
C3 University of Naples Federico II; University of Luxembourg
RP Natella, R (corresponding author), Univ Napoli Federico II, Via Claudio 21, I-80125 Naples, Italy.
EM cotroneo@unina.it; antonioken.iannillo@unina.it;
   roberto.natella@unina.it
RI Natella, Roberto/AAT-7087-2020
OI Natella, Roberto/0000-0003-1084-4824; Iannillo, Antonio
   Ken/0000-0001-9358-7100
CR [Anonymous], 2015, P 31 ANN COMP SEC AP
   [Anonymous], 2018, GLOB MARK SHAR HELD
   [Anonymous], 2016, AM FUZZY LOP AFL
   [Anonymous], P DEP COMP CRIT APPL
   [Anonymous], WHAT AR ADV S PEN
   [Anonymous], P JOINT INT WKSP DYN
   [Anonymous], CROSS REF AIDL SERV
   [Anonymous], WE VOIP APPL BUS
   [Anonymous], 2012, P ACM C COMP COMM SE
   [Anonymous], ANDR DEB BRIDG
   [Anonymous], P 9 ACM S INF COMP C
   [Anonymous], P 32 ANN C COMP SEC
   [Anonymous], 2005, P 16 IEEE INT S SOFT
   [Anonymous], 1991, F GENETIC ALGORITHMS
   [Anonymous], P 24 INT S SOFTW REL
   [Anonymous], CROSS REF INT JAV
   [Anonymous], EVOSUITE AUTOMATIC T
   [Anonymous], 2006, P 2 INT C VIRT EX EN
   [Anonymous], P 7 INT WKSP AUT SOF
   [Anonymous], ARXIV170808437
   [Anonymous], 2017, P 2017 ACM SIGSAC C
   [Anonymous], F R IDA
   [Anonymous], 2008, NDSS
   [Anonymous], 2013, MOMM
   [Anonymous], IEEE C SOFTW TEST VA
   [Anonymous], P 28 INT S SOFTW REL
   [Anonymous], 2017, OSS FUZZ CONT FUZZ O
   [Anonymous], WHAT IS SYST ANDR
   [Anonymous], P 11 INT WKSP AUT SO
   [Anonymous], CROSS REF INP JAV IN
   [Anonymous], ANDR CERT PARTN
   [Anonymous], 2009, FUZZING PHONE YOUR P
   [Anonymous], P IEEE ACM 28 INT C
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Back T., 1991, Extended selection mechanisms in genetic algorithms, P92
   Back T, 1998, GENETIC ALGORITHMST
   Böhme M, 2019, IEEE T SOFTWARE ENG, V45, P489, DOI 10.1109/TSE.2017.2785841
   Bounimova E, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P122, DOI 10.1109/ICSE.2013.6606558
   Cadar C., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, (USA), P209
   Fisher RA, 1922, J R STAT SOC, V85, P87, DOI 10.2307/2340521
   Fraser G., 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P150, DOI 10.1109/ICST.2011.54
   Fraser G, 2015, EMPIR SOFTW ENG, V20, P611, DOI 10.1007/s10664-013-9288-2
   Fraser Gordon, 2011, PROC 19 ACM SIGSOFT, P416, DOI 10.1145/2025113.2025179
   Giuffrida Cristiano, 2017, NETW DISTR SYST SEC
   GREFENSTETTE JJ, 1986, IEEE T SYST MAN CYB, V16, P122, DOI 10.1109/TSMC.1986.289288
   Harman M, 2012, LECT NOTES COMPUT SC, V7007, P1
   Klees G, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P2123, DOI 10.1145/3243734.3243804
   Kochhar PS, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P560, DOI 10.1109/SANER.2015.7081877
   Koopman P, 2000, IEEE T SOFTWARE ENG, V26, P837, DOI 10.1109/32.877845
   KRUSKAL WH, 1952, J AM STAT ASSOC, V47, P583, DOI 10.1080/01621459.1952.10483441
   Levin J., 2015, Android Internals: a Confectioner's Cookbook: Volume 1: the Power Users's View
   Luk CK, 2005, ACM SIGPLAN NOTICES, V40, P190, DOI 10.1145/1064978.1065034
   Maji AK, 2012, I C DEPEND SYS NETWO
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   MILLER BP, 1990, COMMUN ACM, V33, P32, DOI 10.1145/96267.96279
   Mitchell M., 1992, Toward a Practice of Autonomous Systems. Proceedings of the First European Conference on Artificial Life, P245
   Naudts B, 2000, IEEE T EVOLUT COMPUT, V4, P1, DOI 10.1109/4235.843491
   Nethercote N, 2007, ACM SIGPLAN NOTICES, V42, P89, DOI 10.1145/1273442.1250746
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Veggalam S, 2016, LECT NOTES COMPUT SC, V9878, P581, DOI 10.1007/978-3-319-45744-4_29
   Whitley D, 2001, INFORM SOFTWARE TECH, V43, P817, DOI 10.1016/S0950-5849(01)00188-4
   Xu M, 2016, ACM COMPUT SURV, V49, DOI 10.1145/2963145
   Yaghmour K., 2013, Embedded Android: Porting, Extending, and Customizing
NR 63
TC 8
Z9 8
U1 3
U2 17
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2019
VL 24
IS 6
BP 3630
EP 3658
DI 10.1007/s10664-019-09725-6
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JT6XW
UT WOS:000501131100012
DA 2024-07-18
ER

PT J
AU Martens, D
   Maalej, W
AF Martens, Daniel
   Maalej, Walid
TI Towards understanding and detecting fake reviews in app stores
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Fake reviews; App reviews; User feedback; App stores
AB App stores include an increasing amount of user feedback in form of app ratings and reviews. Research and recently also tool vendors have proposed analytics and data mining solutions to leverage this feedback to developers and analysts, e.g., for supporting release decisions. Research also showed that positive feedback improves apps' downloads and sales figures and thus their success. As a side effect, a market for fake, incentivized app reviews emerged with yet unclear consequences for developers, app users, and app store operators. This paper studies fake reviews, their providers, characteristics, and how well they can be automatically detected. We conducted disguised questionnaires with 43 fake review providers and studied their review policies to understand their strategies and offers. By comparing 60,000 fake reviews with 62 million reviews from the Apple App Store we found significant differences, e.g., between the corresponding apps, reviewers, rating distribution, and frequency. This inspired the development of a simple classifier to automatically detect fake reviews in app stores. On a labelled and imbalanced dataset including one-tenth of fake reviews, as reported in other domains, our classifier achieved a recall of 91% and an AUC/ROC value of 98%. We discuss our findings and their impact on software engineering, app users, and app store operators.
C1 [Martens, Daniel; Maalej, Walid] Univ Hamburg, Dept Informat, Hamburg, Germany.
C3 University of Hamburg
RP Martens, D; Maalej, W (corresponding author), Univ Hamburg, Dept Informat, Hamburg, Germany.
EM martens@informatik.uni-hamburg.de; maalej@informatik.uni-hamburg.de
CR 9to5Mac, 2017, BELL FAC 1 25M FIN P
   Aizerman M. A., 1964, Automation and Remote Control, V25, P821
   [Anonymous], 2017, TIMES NY
   [Anonymous], 2014, LNICST, DOI DOI 10.1007/978-3-319-05452-04
   [Anonymous], 2005, AIRWEB
   [Anonymous], 2017, Data mining with R: Learning with case studies
   Apple, 2017, APP STOR REV GUID
   Bird S., 2009, NATURAL LANGUAGE PRO
   Calefato F., 2017, ARXIV170803892
   Carreño LVG, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P582, DOI 10.1109/ICSE.2013.6606604
   Chen N, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P767, DOI 10.1145/2568225.2568263
   Cohen J., 1988, STAT POWER ANAL BEHA
   CORTES C, 1995, MACH LEARN, V20, P273, DOI 10.1007/BF00994018
   Dickerson JP, 2014, 2014 PROCEEDINGS OF THE IEEE/ACM INTERNATIONAL CONFERENCE ON ADVANCES IN SOCIAL NETWORKS ANALYSIS AND MINING (ASONAM 2014), P620, DOI 10.1109/ASONAM.2014.6921650
   DigitalTrends, 2018, CAN YOU REALL TRUST
   Feng S., 2012, ICWSM, V12, P98
   Ferrara E, 2014, CORR ARXIV 1407 5225
   Finkelstein A, 2017, INFORM SOFTWARE TECH, V87, P119, DOI 10.1016/j.infsof.2017.03.002
   Fritz CO, 2012, J EXP PSYCHOL GEN, V141, P2, DOI 10.1037/a0024338
   Fu B, 2013, 19TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'13), P1276
   Gao CY, 2015, 9TH IEEE INTERNATIONAL SYMPOSIUM ON SERVICE-ORIENTED SYSTEM ENGINEERING (SOSE 2015), P284, DOI 10.1109/SOSE.2015.13
   Guzman E, 2014, INT REQUIR ENG CONF, P153, DOI 10.1109/RE.2014.6912257
   Harman M., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P108, DOI 10.1109/MSR.2012.6224306
   Holte R. C., 2003, Workshop on learning from imbalanced datasets II, V11, P1
   Hoon L., 2013, TECH REP
   Iacob C, 2013, IEEE WORK CONF MIN S, P41, DOI 10.1109/MSR.2013.6624001
   Iacob Claudia, 2013, 27 INT BCS HUM COMP, DOI DOI 10.14236/EWIC/HCI2013.38
   Jindal N., 2008, P WSDM, P219, DOI [DOI 10.1145/1341531.1341560, 10.1145/1341531.1341560]
   Johann T, 2017, INT REQUIR ENG CONF, P21, DOI 10.1109/RE.2017.71
   Khalid H, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1474, DOI 10.1109/ICSE.2013.6606749
   Kolcz A., 2004, ACM SIGKDD EXPLORATI, V6, P1, DOI [10.2973/odp.proc.ir.207.2004, DOI 10.1145/1007730.1007733]
   Luca M, 2016, MANAGE SCI, V62, P3412, DOI 10.1287/mnsc.2015.2304
   Maalej W, 2016, REQUIR ENG, V21, P311, DOI 10.1007/s00766-016-0251-9
   Maalej W, 2016, IEEE SOFTWARE, V33, P48, DOI 10.1109/MS.2015.153
   Martens D, 2017, 2017 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON EMOTION AWARENESS IN SOFTWARE ENGINEERING (SEMOTION 2017), P8, DOI 10.1109/SEmotion.2017.6
   Martens W., 2016, IEEE T SOFTWARE ENG, P1
   Martin W, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P123, DOI 10.1109/MSR.2015.19
   Mukherjee A., 2013, FAKE REV DETECTION C
   Mukherjee Arjun, 2013, What Yelp Fake Review Filter Might Be Doing?
   Nayebi M, 2017, INT REQUIR ENG CONF, P388, DOI 10.1109/RE.2017.72
   Nayebi M, 2017, PROC INT CONF SOFTW, P57, DOI 10.1109/ICSE-SEIS.2017.8
   Oh Jeungmin, 2013, Proceedings of the ACM SIGCHI Conference on Human Factors in Computing Systems, CHI'13, P1809
   Ott M., 2011, ACL HLT 2011 P 49 AN, V1, P309, DOI DOI 10.1145/2567948.2577293
   Pagano D, 2013, USER FEEDBACK APPSTO, P125, DOI [10.1109/RE.2013.6636712, DOI 10.1109/RE.2013.6636712]
   Pagano D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P953, DOI 10.1109/ICSE.2013.6606645
   Palomba F, 2015, PROC IEEE INT CONF S, P291, DOI 10.1109/ICSM.2015.7332475
   Panichella S, 2015, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSM.2015.7332474
   Park D, 2016, 34TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, CHI 2016, P1114, DOI 10.1145/2858036.2858389
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Saito H., 2007, P 3 INT WORKSH ADV I, P45
   SciKit, 2018, SCIKIT LEARN 4 3 PRE
   Seneviratne S, 2017, ACM T WEB, V11, DOI 10.1145/3007901
   Stringhini Gianluca., 2013, Proceedings of the 2013 Conference on Internet Measurement Conference, IMC '13, P163, DOI DOI 10.1145/2504730.2504731
   Subrahmanian VS, 2016, ARXIV160105140 CORR
   Sussin J, 2018, CONSEQUENCES FAKE FA
   Svedic Zorana., 2015, EFFECT INFORMATIONAL
   Tin Kam Ho, 1995, Proceedings of the Third International Conference on Document Analysis and Recognition, P278, DOI 10.1109/ICDAR.1995.598994
   Villarroel L, 2016, PROC INT CONF SOFTW, P14, DOI 10.1145/2884781.2884818
   Wang SY, 2019, IEEE T PATTERN ANAL, V41, P2783, DOI [10.1109/INTMAG.2018.8508542, 10.1109/TNNLS.2017.2771290, 10.1109/TPAMI.2018.2861871]
   Young KW, 2010, ORTHOPEDICS, V33, DOI 10.3928/01477447-20101021-34
NR 60
TC 60
Z9 60
U1 0
U2 29
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2019
VL 24
IS 6
BP 3316
EP 3355
DI 10.1007/s10664-019-09706-9
PG 40
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JT6XW
UT WOS:000501131100004
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Bosu, A
   Iqbal, A
   Shahriyar, R
   Chakraborty, P
AF Bosu, Amiangshu
   Iqbal, Anindya
   Shahriyar, Rifat
   Chakraborty, Partha
TI Understanding the motivations, challenges and needs of Blockchain
   software developers: a survey
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Blockchain; Cryptocurrency; Survey; Bitcoin; Ethereum; Motivation;
   Challenges
ID SMART CONTRACTS; AGREEMENT; INTERNET; INSIGHTS; IMPACT; FUTURE; APACHE;
   WORK
AB The blockchain technology has potential applications in various areas such as smart-contracts, Internet of Things (IoT), land registry, supply chain management, storing medical data, and identity management. Although GitHub currently hosts more than six thousand active Blockchain software (BCS) projects, few software engineering researchers have investigated these projects and their contributors. Although the number of BCS projects is growing rapidly, the motivations, challenges, and needs of BCS developers remain a puzzle. Therefore, the primary objective of this study is to understand the motivations, challenges, and needs of BCS developers and analyze the differences between BCS and non-BCS development. On this goal, we sent an online survey to 1,604 active BCS developers identified by mining the GitHub repositories of 145 popular BCS projects. The survey received 156 responses that met our criteria for analysis. The results suggest that the majority of the BCS developers are experienced in non-BCS development and are primarily motivated by the ideology of creating a decentralized financial system. Although most of the BCS projects are Open Source Software (OSS) projects by nature, more than 93% of our respondents found BCS development somewhat different from a non-BCS development as BCS projects have higher emphasis on security and reliability than most of the non-BCS projects. Other differences include: higher costs of defects, decentralized and hostile environment, technological complexity, and difficulty in upgrading the software after release. These differences were also the primary sources of challenges to them. Software development tools that are tuned for non-BCS development are inadequate for BCS and the ecosystem needs an array of new or improved tools, such as: customized IDE for BCS development tasks, debuggers for smart-contracts, testing support, easily deployable simulators, and BCS domain specific design notations.
C1 [Bosu, Amiangshu] Wayne State Univ, Dept Comp Sci, Detroit, MI 48202 USA.
   [Iqbal, Anindya; Shahriyar, Rifat; Chakraborty, Partha] Bangladesh Univ Engn & Technol, Dept Comp Sci & Engn, Dhaka, Bangladesh.
C3 Wayne State University; Bangladesh University of Engineering &
   Technology (BUET)
RP Bosu, A (corresponding author), Wayne State Univ, Dept Comp Sci, Detroit, MI 48202 USA.
EM amiangshu.bosu@wayne.edu; anindya@cse.buet.ac.bd; rifat@cse.buet.ac.bd;
   shuvopartho@gmail.com
RI Bosu, Amiangshu/AAB-1259-2020; Chakraborty, Partha/HHN-7199-2022;
   Shahriyar, Rifat/HJA-5303-2022
OI Chakraborty, Partha/0000-0001-5965-615X; Bosu,
   Amiangshu/0000-0002-3178-6232
CR Abran Alain, 2004, Software engineering body of knowledge
   Adhami S., 2018, Journal of Economics and Business
   [Anonymous], 2019, Cryptocurrency Market Capitalizations
   [Anonymous], 2003, OPEN SOURCE SOFTWARE
   [Anonymous], 2017, The parity wallet hack explained
   Arkin B, 2005, IEEE SECUR PRIV, V3, P84, DOI 10.1109/MSP.2005.23
   ARMSTRONG JS, 1977, J MARKETING RES, V14, P396, DOI 10.2307/3150783
   Azaria A, 2016, PROCEEDINGS 2016 2ND INTERNATIONAL CONFERENCE ON OPEN AND BIG DATA - OBD 2016, P25, DOI 10.1109/OBD.2016.11
   Beier ME, 2005, PSYCHOL AGING, V20, P341, DOI 10.1037/0882-7974.20.2.341
   BENJAMINI Y, 1995, J R STAT SOC B, V57, P289, DOI 10.1111/j.2517-6161.1995.tb02031.x
   Bosu A, 2017, IEEE T SOFTWARE ENG, V43, P56, DOI 10.1109/TSE.2016.2576451
   Bosu A, 2014, J SYST SOFTWARE, V94, P4, DOI 10.1016/j.jss.2014.03.061
   Bosu Amiangshu, 2014, P 8 ACM IEEE INT S E, P33
   Brooke S, 2018, INS OUTS TESTING BLO
   Campion S, 2013, US Patent, Patent No. [8,621,434, 8621434]
   Chakraborty P, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3240298
   Chen C, 2018, LECT NOTES COMPUT SC, V10699, P289, DOI 10.1007/978-3-319-73830-7_29
   Chess B, 2004, IEEE SECUR PRIV, V2, P76, DOI 10.1109/MSP.2004.111
   Chi-Jung L., 2008, INT J MULTIPLE RES, V2, P105, DOI [10.5172/mra.455.2.1.105, DOI 10.5172/MRA.455.2.1.105]
   Chuen D., 2015, Handbook of digital currency: Bitcoin, innovation, financial instruments, and big data
   Clack CD, 2016, ARXIV PREPRINT ARXIV
   Clarke EM, 1996, ACM COMPUT SURV, V28, P626, DOI 10.1145/242223.242257
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Dahlander L, 2005, ECON INNOV NEW TECH, V14, P617, DOI 10.1080/1043859052000344705
   David PA, 2008, INF ECON POLICY, V20, P364, DOI 10.1016/j.infoecopol.2008.10.001
   De Filippi P, 2016, INTERNET POLICY REV, V5, DOI 10.14763/2016.3.427
   Deci E.L., 1985, INTRINSIC MOTIVATION, DOI [10.1007/978-1-4899-2271-7, DOI 10.1007/978-1-4899-2271-7]
   Delmolino K, 2016, LECT NOTES COMPUT SC, V9604, P79, DOI 10.1007/978-3-662-53357-4_6
   Destefanis G, 2018, 2018 IEEE 1ST INTERNATIONAL WORKSHOP ON BLOCKCHAIN ORIENTED SOFTWARE ENGINEERING (IWBOSE), P19, DOI 10.1109/IWBOSE.2018.8327567
   Documentation BD, 2018, MAINN BIC MAIN NETW
   Elliott MR, 2005, J ROY STAT SOC C-APP, V54, P595, DOI 10.1111/j.1467-9876.2005.05459.x
   Fanning K, 2016, J CORP ACCOUNT FINAN, V27, P53, DOI 10.1002/jcaf.22179
   Galati F, 2019, BLOCKCHAIN PROCESS I
   Garfinkel SL, 1996, COMPUTER, V29, P101, DOI 10.1109/2.507642
   Gilbertson T, 2017, LARRYS CRYPTOCOIN RI
   Hars A, 2002, INT J ELECTRON COMM, V6, P25
   Hennessey BA, 1998, AM PSYCHOL, V51, P1153
   Herndon JB, 2018, COMP LINKING SURVEY
   Hertel G, 2003, RES POLICY, V32, P1159, DOI 10.1016/S0048-7333(03)00047-7
   Hildenbrandt E, 2018, P IEEE COMPUT SECUR, P204, DOI 10.1109/CSF.2018.00022
   Hitka M., 2015, Journal Business: Theory and Practice, V16, P113, DOI DOI 10.3846/BTP.2015.433
   Howell S.T., 2018, TECHNICAL REPORT
   Huh S, 2017, INT CONF ADV COMMUN, P464, DOI 10.23919/ICACT.2017.7890132
   Humphrey SE, 2007, J APPL PSYCHOL, V92, P1332, DOI 10.1037/0021-9010.92.5.1332
   IBM Corp. Released, 2021, IBM SPSS STAT WINDOW
   Jacobovitz O., 2016, Blockchain for Identity Management, The Lynne and William Frankel Center for Computer Science Department of Computer Science
   Jakobsson M, 1999, INT FED INFO PROC, V23, P258
   Jiang B, 2018, IEEE INT CONF AUTOM, P259, DOI 10.1145/3238147.3238177
   Kononenko O, 2016, PROC INT CONF SOFTW, P1028, DOI 10.1145/2884781.2884840
   Korpela K, 2017, PROCEEDINGS OF THE 50TH ANNUAL HAWAII INTERNATIONAL CONFERENCE ON SYSTEM SCIENCES, P4182
   Krafft PM, 2018, PROCEEDINGS OF THE 2018 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2018), DOI 10.1145/3173574.3174179
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Lansiti M, 2017, HARVARD BUS REV, V95, P119
   Lee A, 2017, PROC INT CONF SOFTW, P187, DOI 10.1109/ICSE.2017.25
   Lohr SL, 2000, J AM STAT ASSOC, V95, P271, DOI 10.2307/2669544
   Luu L, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P254, DOI 10.1145/2976749.2978309
   Mcdonald MP, 2007, PUBLIC OPIN QUART, V71, P588, DOI 10.1093/poq/nfm046
   Meece JL, 2006, J SCHOOL PSYCHOL, V44, P351, DOI 10.1016/j.jsp.2006.04.004
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Murphy-Hill E, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1, DOI 10.1145/2568225.2568226
   Nakamoto S, 2008, BITCOIN PEER TO PEER, DOI DOI 10.1007/S10838-008-9062-0
   Narayanan Arvind, 2016, Bitcoin and cryptocurrency technologies: a comprehensive introduction
   Nikolic I, 2018, 34TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2018), P653, DOI 10.1145/3274694.3274743
   Overflow S, 2017, STACK OVERFLOW ANN D
   Park D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P912, DOI 10.1145/3236024.3264591
   Peters GW, 2016, NEW ECON WINDOWS, P239, DOI 10.1007/978-3-319-42448-4_13
   Porru S, 2017, PROC IEEE ACM INT C, P169, DOI 10.1109/ICSE-C.2017.142
   Posel D., 2006, Baba: Men and fatherhood in South Africa, P38
   Raghunathan TE, 2007, J AM STAT ASSOC, V102, P474, DOI 10.1198/016214506000001293
   Reijers W., 2018, Philosophy Technology, V31, P103, DOI DOI 10.1007/S13347-016-0239-X
   Roberts JA, 2006, MANAGE SCI, V52, P984, DOI 10.1287/mnsc.1060.0554
   Rosenthal JA, 1996, J SOC SERV RES, V21, P37, DOI 10.1300/J079v21n04_02
   Rosenthal R., 1994, The handbook of research synthesis, P231, DOI DOI 10.7758/9781610441377
   Ross J., 2010, CHI 10 EXTENDED ABST, P2863, DOI [10.1145/1753846.1753873, DOI 10.1145/1753846.1753873]
   Sadana R, 2002, SUMMARY MEASURES OF POPULATION HEALTH: CONCEPTS, ETHICS, MEASUREMENT AND APPLICATIONS, P369
   Schenker N, 2016, PUBLIC HLTH REPORTS
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   SIMMONS GJ, 1979, COMPUT SURV, V11, P305, DOI 10.1145/356789.356793
   Snow J., 2013, QUALTRICS SURVEY SOF
   Stallman R, 2003, FREE SOFTWARE FDN FS
   Stewart KJ, 2006, MIS QUART, V30, P291
   Stoykov Lyubomir., 2017, Proceedings of the 18th ACM/I-FIP/USENIX Middleware Conference: Posters and Demos, P19, DOI DOI 10.1145/3155016.3155020
   Suiche M., 2017, DEF CON, V25, P30
   Swan Melanie, 2015, BLOCKCHAIN BLUEPRINT
   Technologies P, 2017, POSTM PAR MULT LIB S
   Underwood S, 2016, COMMUN ACM, V59, P15, DOI 10.1145/2994581
   von Krogh G, 2012, MIS QUART, V36, P649
   Wan ZY, 2017, IEEE WORK CONF MIN S, P413, DOI 10.1109/MSR.2017.59
   West J, 2006, R&D MANAGE, V36, P319, DOI 10.1111/j.1467-9310.2006.00436.x
   Yamane T., 1973, STAT INTRO ANAL
   Ye YW, 2003, PROC INT CONF SOFTW, P419
   Zheng ZB, 2018, INT J WEB GRID SERV, V14, P352, DOI 10.1504/IJWGS.2018.095647
NR 92
TC 36
Z9 37
U1 1
U2 54
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2019
VL 24
IS 4
BP 2636
EP 2673
DI 10.1007/s10664-019-09708-7
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA IL9CL
UT WOS:000477582700026
DA 2024-07-18
ER

PT J
AU Salman, I
   Turhan, B
   Vegas, S
AF Salman, Iflaah
   Turhan, Burak
   Vegas, Sira
TI A controlled experiment on time pressure and confirmation bias in
   functional software testing
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Test quality; Software testing; Cognitive biases; Confirmation bias;
   Time pressure; Experiment; Human factors
ID QUALITY; SIZE
AB ContextConfirmation bias is a person's tendency to look for evidence that strengthens his/her prior beliefs rather than refutes them. Manifestation of confirmation bias in software testing may have adverse effects on software quality. Psychology research suggests that time pressure could trigger confirmation bias.ObjectiveIn the software industry, this phenomenon may deteriorate software quality. In this study, we investigate whether testers manifest confirmation bias and how it is affected by time pressure in functional software testing.MethodWe performed a controlled experiment with 42 graduate students to assess manifestation of confirmation bias in terms of the conformity of their designed test cases to the provided requirements specification. We employed a one factor with two treatments between-subjects experimental design.ResultsWe observed, overall, participants designed significantly more confirmatory test cases as compared to disconfirmatory ones, which is in line with previous research. However, we did not observe time pressure as an antecedent to an increased rate of confirmatory testing behaviour.ConclusionPeople tend to design confirmatory test cases regardless of time pressure. For practice, we find it necessary that testers develop self-awareness of confirmation bias and counter its potential adverse effects with a disconfirmatory attitude. We recommend further replications to investigate the effect of time pressure as a potential contributor to the manifestation of confirmation bias.
C1 [Salman, Iflaah] Univ Oulu, Grp M3S, Oulu, Finland.
   [Turhan, Burak] Monash Univ, Clayton, Vic, Australia.
   [Vegas, Sira] Univ Politecn Madrid, Escuela Tecn Super Ingn Informat, Madrid, Spain.
C3 University of Oulu; Monash University; Universidad Politecnica de Madrid
RP Salman, I (corresponding author), Univ Oulu, Grp M3S, Oulu, Finland.
EM iflaah.salman@oulu.fi; burak.turhan@monash.edu; svegas@fi.upm.es
RI Turhan, Burak/G-7400-2011; Vegas, Sira/R-6742-2018
OI Turhan, Burak/0000-0003-1511-2163; 
FU University of Oulu including Oulu University Hospital; Infotech Oulu
   Doctoral grant at the University of Oulu
FX Open access funding provided by University of Oulu including Oulu
   University Hospital. The authors would like to thank the associate
   editor and three anonymous reviewers for their suggestions on earlier
   versions of this paper. This study was supported in part by the Infotech
   Oulu Doctoral grant at the University of Oulu to Iflaah Salman.
CR Albayrak Ö, 2009, ASIA PAC SOFWR ENG, P333, DOI 10.1109/APSEC.2009.39
   [Anonymous], 22 ANN PSYCH PROGR I
   [Anonymous], 2000, EXPT SOFTWARE ENG IN
   [Anonymous], 2005, J STAT SOFTW
   [Anonymous], TECH REP
   [Anonymous], P INT C SOFTW ENG
   [Anonymous], ETH POL ISS INT RES
   [Anonymous], 1 INT SOFTW METR S
   [Anonymous], 15 AM C INF SYST 200
   [Anonymous], P 32 ACM IEEE INT C
   [Anonymous], NASA TASK LOAD INDEX
   Arnott D, 2006, INFORM SYST J, V16, P55, DOI 10.1111/j.1365-2575.2006.00208.x
   Ask K, 2007, J APPL SOC PSYCHOL, V37, P561, DOI 10.1111/j.1559-1816.2007.00175.x
   Austin RD, 2001, INFORM SYST RES, V12, P195, DOI 10.1287/isre.12.2.195.9699
   Baddoo N, 2003, J SYST SOFTWARE, V66, P23, DOI 10.1016/S0164-1212(02)00060-2
   Basili Victor R., 1994, The Goal Question Metric Approach, VI
   Calikli Gul, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P363, DOI 10.1109/ESEM.2013.47
   Calikli G, 2015, SOFTWARE QUAL J, V23, P695, DOI 10.1007/s11219-014-9250-6
   Çalikli G, 2013, SOFTWARE QUAL J, V21, P377, DOI 10.1007/s11219-012-9180-0
   Calikli Gul., 2010, PROC 6 INT C PREDICT, DOI DOI 10.1145/1868328.1868344
   Cataldo M, 2010, 2010 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, P281
   Causevic A, 2013, LECT NOTES BUS INF P, V149, P91
   Ellis P.D., 2009, THRESHOLDS INTERPRET
   Fritz CO, 2012, J EXP PSYCHOL GEN, V141, P2, DOI 10.1037/a0024338
   Fucci D, 2015, INFORM SOFTWARE TECH, V68, P82, DOI 10.1016/j.infsof.2015.08.004
   Gilovich T., 2002, HEURISTICS BIASES
   Hazzan O., 2007, SOFTWARE SCI TECHNOL, P95, DOI DOI 10.1109/SWSTE.2007
   Hernandez I, 2013, J EXP SOC PSYCHOL, V49, P178, DOI 10.1016/j.jesp.2012.08.010
   HULLAND JS, 1994, J BEHAV DECIS MAKING, V7, P79, DOI 10.1002/bdm.3960070202
   KLAYMAN J, 1989, J EXP PSYCHOL LEARN, V15, P596, DOI 10.1037/0278-7393.15.4.596
   Kuutila M, 2017, 2017 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON EMOTION AWARENESS IN SOFTWARE ENGINEERING (SEMOTION 2017), P54, DOI 10.1109/SEmotion.2017.11
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Leventhal L.-M., 1993, Human-Computer Interaction. Third International Conference, EWHCI '93. Selected Papers, P210
   LEVENTHAL LN, 1994, INT J HUM-COMPUT ST, V41, P717, DOI 10.1006/ijhc.1994.1079
   Mäntylä MV, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P83, DOI 10.1145/2568225.2568245
   Mäntylä MV, 2013, INFORM SOFTWARE TECH, V55, P986, DOI 10.1016/j.infsof.2012.12.004
   Mohanani R, 2020, IEEE T SOFTWARE ENG, V46, P1318, DOI 10.1109/TSE.2018.2877759
   Nan N, 2009, IEEE T SOFTWARE ENG, V35, P624, DOI 10.1109/TSE.2009.18
   Nickerson R. S., 1998, REV GEN PSYCHOL, V2, P175, DOI DOI 10.1037/1089-2680.2.2.175
   Paetsch F., 2003, WET ICE 2003 P 12 IE, P1
   Pham R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P30, DOI 10.1145/2635868.2635925
   Randolph J., 2008, ONLINE KAPPA CALCULA
   Randolph J. J., 2005, Free-Marginal Multirater Kappa (multirater K free): An Alternative to Fleiss' Fixed-Marginal Multirater Kappa
   Salman I, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P666, DOI 10.1109/ICSE.2015.82
   Shah H, 2014, INFORM SOFTWARE TECH, V56, P6, DOI 10.1016/j.infsof.2013.04.005
   Sjoberg DIK, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P17, DOI 10.1109/ISESE.2002.1166921
   STACY W, 1995, COMMUN ACM, V38, P57, DOI 10.1145/203241.203256
   TEASLEY BE, 1994, J APPL PSYCHOL, V79, P142, DOI 10.1037/0021-9010.79.1.142
   Topi H, 2005, INT J HUM-COMPUT ST, V62, P349, DOI 10.1016/j.ijhcs.2004.10.003
   Tversky A., 1974, Science, V185, P1124, DOI DOI 10.1126/SCIENCE.185.4157.1124
   WASON PC, 1960, Q J EXP PSYCHOL, V12, P129, DOI 10.1080/17470216008416717
   Wilson DN, 1998, SOFTWARE QUAL J, V7, P67, DOI 10.1023/B:SQJO.0000042060.88173.fe
NR 52
TC 12
Z9 12
U1 3
U2 13
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2019
VL 24
IS 4
BP 1727
EP 1761
DI 10.1007/s10664-018-9668-8
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA IL9CL
UT WOS:000477582700002
OA hybrid
DA 2024-07-18
ER

PT J
AU Malgonde, O
   Chari, K
AF Malgonde, Onkar
   Chari, Kaushal
TI An ensemble-based model for predicting agile software development effort
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Agile; Effort prediction; Ensemble; Machine learning; Scrum; Sprint
   planning
ID SIZE; IMPACT
AB To support agile software development projects, an array of tools and systems is available to plan, design, track, and manage the development process. In this paper, we explore a critical aspect of agile development i.e., effort prediction, that cuts across these tools and agile project teams. Accurate effort prediction can improve the planning of a sprint by enabling optimal assignments of both stories and developers. We develop a model for story-effort prediction using variables that are readily available when a story is created. We use seven predictive algorithms to predict a story's effort. Interestingly, none of the predictive algorithms consistently outperforms others in predicting story effort across our test data of 423 stories. We develop an ensemble-based method based on our model for predicting story effort. We conduct computational experiments to show that our ensemble-based approach performs better in comparison to other ensemble-based benchmarking approaches. We then demonstrate the practical application of our predictive model and our ensemble-based approach by optimizing sprint planning for two projects from our dataset using an optimization model.
C1 [Malgonde, Onkar] Northern Illinois Univ, Operat Management & Informat Syst, Coll Business, De Kalb, IL 60115 USA.
   [Chari, Kaushal] Univ S Florida, Muma Coll Business, Informat Syst & Decis Sci, Tampa, FL USA.
C3 Northern Illinois University; State University System of Florida;
   University of South Florida
RP Malgonde, O (corresponding author), Northern Illinois Univ, Operat Management & Informat Syst, Coll Business, De Kalb, IL 60115 USA.
EM omalgonde@niu.edu; kchari@usf.edu
CR Abrahamsson Pekka, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P344
   Abrahamsson P, 2002, REPORT
   Abrahamsson P, 2011, INT SYMP EMP SOFTWAR, P400, DOI 10.1109/ESEM.2011.58
   [Anonymous], ACM IEEE INT S EMP S
   [Anonymous], 2004, XP Ser
   [Anonymous], 2015, Data mining: the textbook
   [Anonymous], 19 INT C EV ASS SOFT
   [Anonymous], THE SCRUM GUIDE 2013
   [Anonymous], 16 ACM SIGSOFT
   [Anonymous], ACM IEEE INT S EMP S
   [Anonymous], AG C 2006
   [Anonymous], 2016, Data Mining for Business Analytics: Concepts, Techniques, and Applications with XLMiner
   [Anonymous], RESOURCE ESTIMATION
   [Anonymous], THESIS
   [Anonymous], 10 ANN STAT AG REP T
   Azzeh M, 2015, J SYST SOFTWARE, V103, P36, DOI 10.1016/j.jss.2015.01.028
   Bayley S, 2018, ARXIV180107194
   BENJAMINI Y, 1995, J R STAT SOC B, V57, P289, DOI 10.1111/j.2517-6161.1995.tb02031.x
   Bergmeir C., 2011, Proceedings of the 2011 11th International Conference on Intelligent Systems Design and Applications (ISDA), P849, DOI 10.1109/ISDA.2011.6121763
   Chari K, 2018, EMPIR SOFTW ENG, V23, P165, DOI 10.1007/s10664-017-9506-4
   Chowdhury S, 2018, EMPIR SOFTW ENG, V23, P1422, DOI 10.1007/s10664-017-9545-x
   Cinnéide MO, 2017, EMPIR SOFTW ENG, V22, P292, DOI 10.1007/s10664-016-9427-7
   Conboy K, 2009, INFORM SYST RES, V20, P329, DOI 10.1287/isre.1090.0236
   Dejaeger K, 2012, IEEE T SOFTWARE ENG, V38, P375, DOI 10.1109/TSE.2011.55
   Grenning J., 2002, PLANNING POKER AVOID
   Hearty P, 2009, IEEE T SOFTWARE ENG, V35, P124, DOI 10.1109/TSE.2008.76
   Hussain I, 2013, DATA KNOWL ENG, V85, P2, DOI 10.1016/j.datak.2012.06.005
   Idri A, 2016, J SYST SOFTWARE, V118, P151, DOI 10.1016/j.jss.2016.05.016
   James G., 2015, SPRINGER TEXTS STAT
   Jonsson L, 2016, EMPIR SOFTW ENG, V21, P1533, DOI 10.1007/s10664-015-9401-9
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Kazman R, 2011, IEEE SOFTWARE, V28, P64, DOI 10.1109/MS.2010.111
   Kocaguneli E, 2012, IEEE T SOFTWARE ENG, V38, P1403, DOI 10.1109/TSE.2011.111
   Lee DK, 2016, KOREAN J ANESTHESIOL, V69, P555, DOI 10.4097/kjae.2016.69.6.555
   Li Y, 2017, EMPIR SOFTW ENG, V22, P175, DOI 10.1007/s10664-015-9418-0
   Logue K., 2007, 4 PROC SOFTW MEAS EU, P275
   Lokan C, 2014, INFORM SOFTWARE TECH, V56, P1063, DOI 10.1016/j.infsof.2014.02.008
   Magazinius A, 2012, J SYST SOFTWARE, V85, P1770, DOI 10.1016/j.jss.2012.03.026
   Mahnic V, 2012, J SYST SOFTWARE, V85, P2086, DOI 10.1016/j.jss.2012.04.005
   Minku LL, 2013, INFORM SOFTWARE TECH, V55, P1512, DOI 10.1016/j.infsof.2012.09.012
   MIYAZAKI Y, 1991, INFORM SOFTWARE TECH, V33, P239, DOI 10.1016/0950-5849(91)90139-3
   Neill J., 2008, Why use effect sizes instead of significance testing in program tvaluation?
   Palmer S.R., 2002, PRACTICAL GUIDE FEAT
   Papatheocharous E., 2010, ENG INTELLIGENT, V18, P233
   Pedregosa F, 2011, J. Mach. Learn. Res., V12, P2825
   Pendharkar PC, 2005, IEEE T SOFTWARE ENG, V31, P615, DOI 10.1109/TSE.2005.75
   Perols J, 2009, MANAGE SCI, V55, P827, DOI 10.1287/mnsc.1080.0977
   Pikkarainen M, 2008, EMPIR SOFTW ENG, V13, P303, DOI 10.1007/s10664-008-9065-9
   Santana C, 2011, LECT NOTES BUS INF P, V77, P176
   Stapleton J., 1997, DYNAMIC SYSTEMS DEV
   Trevor H., 2009, The Elements of Statistical Learning: Data Mining, Inference, and Prediction
   Usman M., 2014, PROMISE '14: Proceedings of the 10th International Conference on Predictive Models in Software Engineering, page, P82
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Vidgen R, 2009, INFORM SYST RES, V20, P355, DOI 10.1287/isre.1090.0237
   Wen JF, 2012, INFORM SOFTWARE TECH, V54, P41, DOI 10.1016/j.infsof.2011.09.002
   WOLPERT DH, 1992, NEURAL NETWORKS, V5, P241, DOI 10.1016/S0893-6080(05)80023-1
NR 56
TC 30
Z9 32
U1 1
U2 20
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2019
VL 24
IS 2
BP 1017
EP 1055
DI 10.1007/s10664-018-9647-0
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA HQ8DM
UT WOS:000462654200014
DA 2024-07-18
ER

PT J
AU Rakha, MS
   Bezemer, CP
   Hassan, AE
AF Rakha, Mohamed Sami
   Bezemer, Cor-Paul
   Hassan, Ahmed E.
TI Revisiting the performance of automated approaches for the retrieval of
   duplicate reports in issue tracking systems that perform just-in-time
   duplicate retrieval
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Duplicate issue report retrieval; Duplicate bug reports; Just-in-time
   duplicate issue report retrieval
ID BUG REPORT DETECTION; NATURAL-LANGUAGE
AB Issue tracking systems (ITSs) allow software end-users and developers to file issue reports and change requests. Reports are frequently duplicately filed for the same software issue. The retrieval of these duplicate issue reports is a tedious manual task. Prior research proposed several automated approaches for the retrieval of duplicate issue reports. Recent versions of ITSs added a feature that does basic retrieval of duplicate issue reports at the filing time of an issue report in an effort to avoid the filing of duplicates as early as possible. This paper investigates the impact of this just-in-time duplicate retrieval on the duplicate reports that end up in the ITS of an open source project. In particular, we study the differences between duplicate reports for open source projects before and after the activation of this new feature. We show how the experimental results of prior research would vary given the new data after the activation of the just-in-time duplicate retrieval feature. We study duplicate issue reports from the Mozilla-Firefox, Mozilla-Core and Eclipse-Platform projects. In addition, we compare the performance of the state of the art of the automated retrieval of duplicate reports using two popular approaches (i.e., BM25F and REP). We find that duplicate issue reports after the activation of the just-in-time duplicate retrieval feature are less textually similar, have a greater identification delay and require more discussion to be retrieved as duplicate reports than duplicates before the activation of the feature. Prior work showed that REP outperforms BM25F in terms of Recall rate and Mean average precision. We observe that the performance gap between BM25F and REP becomes even larger after the activation of the just-in-time duplicate retrieval feature. We recommend that future studies focus on duplicates that were reported after the activation of the just-in-time duplicate retrieval feature as these duplicates are more representative of future incoming issue reports and therefore, give a better representation of the future performance of proposed approaches.
C1 [Rakha, Mohamed Sami; Bezemer, Cor-Paul; Hassan, Ahmed E.] Queens Univ, Sch Comp, SAIL, Kingston, ON, Canada.
C3 Queens University - Canada
RP Rakha, MS (corresponding author), Queens Univ, Sch Comp, SAIL, Kingston, ON, Canada.
EM rakha@cs.queensu.ca; bezemer@cs.queensu.ca; ahmed@cs.queensu.ca
RI Hassan, Ahmed/AAB-7241-2019; KHALIFA, AHMED khalifa/HKF-2246-2023; Ali,
   Ahmed/HOF-4672-2023
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; Bezemer,
   Cor-Paul/0000-0002-0474-5718
CR Aggarwal K, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P211, DOI 10.1109/SANER.2015.7081831
   Alipour A, 2013, IEEE WORK CONF MIN S, P183, DOI 10.1109/MSR.2013.6624026
   Nguyen AT, 2012, IEEE INT CONF AUTOM, P70, DOI 10.1145/2351676.2351687
   [Anonymous], 2007, P 2014 WORKSH ECL TE, DOI 10.1145/1328279.1328284
   [Anonymous], 2017, BUGZILLA RELEASE NOT
   [Anonymous], 2017, REDMINE FLEXIBLE PRO
   [Anonymous], 2012, Proceedings of_the_21st_ACM_international_conference_on_Information_and_knowledge management
   Anvik John, 2005, P 2005 OOPSLA WORKSH, P35
   Banerjee S, 2017, INFORM SOFTWARE TECH, V89, P1, DOI 10.1016/j.infsof.2016.09.006
   Berry M. W., 2004, COMPUTING REV, V45, P548
   Bettenburg N., 2008, P 16 ACM SIGSOFT INT, P308
   Bettenburg N, 2008, PROC IEEE INT CONF S, P337, DOI 10.1109/ICSM.2008.4658082
   Borg M., 2014, P 8 ACM IEEE INT S E
   Borg M, 2014, CHANGES EVOLUTION BU, P477
   Cavalcanti YC, 2014, J SOFTW-EVOL PROC, V26, P620, DOI 10.1002/smr.1639
   Cavalcanti YC, 2013, SOFTWARE QUAL J, V21, P39, DOI 10.1007/s11219-011-9164-5
   Chengnian Sun, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P253, DOI 10.1109/ASE.2011.6100061
   Chowdhury G. G., 2010, Introduction to modern information retrieval
   GEHAN EA, 1965, BIOMETRIKA, V52, P203, DOI 10.1093/biomet/52.1-2.203
   HAMERS L, 1989, INFORM PROCESS MANAG, V25, P315, DOI 10.1016/0306-4573(89)90048-4
   Hassan AE, 2008, 2008 FRONTIERS OF SOFTWARE MAINTENANCE, P48, DOI 10.1109/FOSM.2008.4659248
   Hindle A, 2016, PEERJ PREPR, V4
   Hindle A, 2016, EMPIR SOFTW ENG, V21, P368, DOI 10.1007/s10664-015-9387-3
   Jalbert N, 2008, I C DEPEND SYS NETWO, P52, DOI 10.1109/DSN.2008.4630070
   Jira Duplicate Detection, 2017, JIRA DUPLICATE DETEC
   Koponen T, 2006, INT FED INFO PROC, V203, P195
   Lazar A., 2014, P 11 WORKING C MININ, P308
   Long J.D., 2003, Handbook of psychology
   Nagwani NK, 2009, P 1 INT C ADV COMP C, P202
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Rakha MS, 2016, EMPIR SOFTW ENG, V21, P1960, DOI 10.1007/s10664-015-9404-6
   Rakha MS, 2017, REVISITING PERFORMAN
   Rakha MS, 2017, IEEE T SOFTWARE ENG, VPP, P1
   Robertson S., 2004, P 13 ACM INT C INF K, P42
   Romano J., 2006, P ANN M SO ASS I RES
   Runeson P, 2007, PROC INT CONF SOFTW, P499
   Somasundaram K., 2012, Proceedings of the 5th India Software Engineering Conference, ISEC '12, P125, DOI DOI 10.1145/2134254.2134276
   Strzalkowski T, 1999, TEXT SPEECH LANG TEC, V7, P113
   Sun Chengnian, 2016, P 25 INT S SOFTW TES, P294
   Sun Chengnian, 2010, P 32 ACMIEEE INT C S, V1, P45, DOI [DOI 10.1145/1806799, 10.1145/1806799.1806811]
   Sureka A, 2010, ASIA PAC SOFWR ENG, P366, DOI 10.1109/APSEC.2010.49
   Taylor Michael, 2006, Proceedings of the 15th ACM international conference on Information and knowledge management, CIKM '06, P585
   The Trac Project, 2017, P 30 INT C SOFTW ENG
   Wang XY, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P461, DOI 10.1145/1368088.1368151
   Zou J, 2016, IEICE T INF SYST, VE99D, P1762, DOI 10.1587/transinf.2016EDP7052
NR 45
TC 12
Z9 16
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2018
VL 23
IS 5
BP 2597
EP 2621
DI 10.1007/s10664-017-9590-5
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GO5AW
UT WOS:000440031100003
DA 2024-07-18
ER

PT J
AU Washizaki, H
   Guéhéneuc, YG
   Khomh, F
AF Washizaki, Hironori
   Gueheneuc, Yann-Gael
   Khomh, Foutse
TI ProMeTA: a taxonomy for program metamodels in program reverse
   engineering
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Reverse engineering; Program metamodels; Program comprehension and
   analysis; Taxonomy
ID SOURCE CODE; SOFTWARE; MODEL; EXTRACTION; TRANSFORMATION; ARCHITECTURE;
   EXCHANGE; SCHEMA; FORMAT; TOOLS
AB To support program comprehension, maintenance, and evolution, metamodels are frequently used during program reverse engineering activities to describe and analyze constituents of a program and their relations. Reverse engineering tools often define their own metamodels according to the intended purposes and features. Although each metamodel has its own advantages, its limitations may be addressed by other metamodels. Existing works have evaluated and compared metamodels and tools, but none have considered all the possible characteristics and limitations to provide a comprehensive guideline for classifying, comparing, reusing, and extending program metamodels. To aid practitioners and researchers in classifying, comparing, reusing, and extending program metamodels and their corresponding reverse engineering tools according to the intended goals, we establish a conceptual framework with definitions of program metamodels and related concepts. We confirmed that any reverse engineering activity can be clearly described as a pattern based on the framework from the viewpoint of program metamodels. Then the framework is used to provide a comprehensive taxonomy, named Program Metamodel TAxonomy (ProMeTA), which incorporates newly identified characteristics into those stated in previous works, which were identified via a systematic literature review (SLR) on program metamodels, while keeping the orthogonality of the entire taxonomy. Additionally, we validate the taxonomy in terms of its orthogonality and usefulness through the classification of popular metamodels.
C1 [Washizaki, Hironori] Waseda Univ, Dept Comp Sci & Engn, Tokyo, Japan.
   [Washizaki, Hironori] Natl Inst Informat, Tokyo, Japan.
   [Washizaki, Hironori] Syst Informat Co Ltd, Tokyo, Japan.
   [Gueheneuc, Yann-Gael; Khomh, Foutse] Polytech Montreal, PTIDEJ SWAT, DGIGL, Montreal, PQ, Canada.
   [Washizaki, Hironori] eXmot Co Ltd, Tokyo, Japan.
C3 Waseda University; Research Organization of Information & Systems
   (ROIS); National Institute of Informatics (NII) - Japan; Universite de
   Montreal; Polytechnique Montreal
RP Washizaki, H (corresponding author), Waseda Univ, Dept Comp Sci & Engn, Tokyo, Japan.; Washizaki, H (corresponding author), Natl Inst Informat, Tokyo, Japan.; Washizaki, H (corresponding author), Syst Informat Co Ltd, Tokyo, Japan.; Washizaki, H (corresponding author), eXmot Co Ltd, Tokyo, Japan.
EM washizaki@waseda.jp; yann-gael.gueheneuc@polymtl.ca;
   foutse.khomh@polymtl.ca
RI Guéhéneuc, Yann-Gaël/K-9371-2019; 鷲崎, 弘宜/AAG-1448-2019
OI 鷲崎, 弘宜/0000-0002-1417-9879
FU JSPS KAKENHI [16H02804]; IISF SSR Forum; Grants-in-Aid for Scientific
   Research [16H02804] Funding Source: KAKEN
FX We thank reviewers as well as the original developers of the metamodels
   addressed in the paper for their valuable comments, which significantly
   improved our paper. This work was supported by JSPS KAKENHI Grant Number
   16H02804, IISF SSR Forum 2015 and 2016.
CR Abdi MK, 2006, EUROMICRO CONF PROC, P310, DOI 10.1109/EUROMICRO.2006.20
   Alanen M, 2003, TUCS TECHNICAL REPOR, V606, P1
   Alikacem E, 2009, IEEE INT WORK C SO, P159, DOI 10.1109/SCAM.2009.27
   Amelunxen C, 2006, IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P81
   Amelunxen C, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P807, DOI 10.1145/1368088.1368206
   [Anonymous], 2011, ISO/IEC 25010:2011
   [Anonymous], 2002, 4 INT S DISTR OBJ AP
   [Anonymous], 2011, ISO/IEC JTC 1/SC 7, DOI DOI 10.1007/BF01077867
   [Anonymous], 2006, COMPILERS PRINCIPLES
   Antoniol G, 2003, PROG COMPREHEN, P13
   Antoniol G, 2005, ELECTRON NOTES THEOR, V127, P87, DOI 10.1016/j.entcs.2004.08.036
   Arcelli F, 2005, 2005 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P262, DOI 10.1109/ASWEC.2005.5
   Arcelli F, 2010, 16TH INTERNATIONAL CONFERENCE ON DISTRIBUTED MULTIMEDIA SYSTEMS (DMS 2010), P23
   Armstrong MN, 1998, FIFTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P30, DOI 10.1109/WCRE.1998.723173
   Bellay B, 1997, PROCEEDINGS OF THE FOURTH WORKING CONFERENCE ON REVERSE ENGINEERING, P2, DOI 10.1109/WCRE.1997.624571
   Bergmayr Alexander, 2013, CEUR WORKSHOP PROC, V1104, P22
   Bravenboer M, 2008, SCI COMPUT PROGRAM, V72, P52, DOI 10.1016/j.scico.2007.11.003
   Bruehlmann A, 2008, LECT NOTES COMPUT SC, V5301, P660, DOI 10.1007/978-3-540-87875-9_46
   Brunelière H, 2014, INFORM SOFTWARE TECH, V56, P1012, DOI 10.1016/j.infsof.2014.04.007
   Budgen D, 2011, SOFTWARE PRACT EXPER, V41, P363, DOI 10.1002/spe.1009
   Büchner T, 2006, LECT NOTES COMPUT SC, V4344, P33
   Call HC, 2009, IEEE SOFTWARE, V26, P26, DOI 10.1109/MS.2009.6
   Canfora G, 2011, COMMUN ACM, V54, P142, DOI 10.1145/1924421.1924451
   Izquierdo JLC, 2014, SOFTW SYST MODEL, V13, P713, DOI 10.1007/s10270-012-0270-z
   Izquierdo JLC, 2010, IEEE SOFTWARE, V27, P37, DOI 10.1109/MS.2010.61
   Izquierdo JLC, 2009, LECT NOTES COMPUT SC, V5562, P82, DOI 10.1007/978-3-642-02674-4_7
   CHIKOFSKY EJ, 1990, IEEE SOFTWARE, V7, P13, DOI 10.1109/52.43044
   Chirila Ciprian-Bogdan, 2010, IEEE International Joint Conference on Computational Cybernetics and Technical Informatics (ICCC-CONTI 2010). IEEE 8th International Conference on Computational Cybernetics and 9th International Conference on Technical Informatics, P107, DOI 10.1109/ICCCYB.2010.5491319
   Cho ES, 2005, LECT NOTES COMPUT SC, V3482, P868
   Christopher CN, 2006, EVALUATING STATIC AN
   Clark T., 2015, AM ED RES, P1
   Collard ML, 2011, IEEE INT WORK C SO, P173, DOI 10.1109/SCAM.2011.19
   Czarnecki K., 2003, P 2 OOPSLA WORKSH GE, V45, P1
   Czeranski J, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P293, DOI 10.1109/WCRE.2000.891484
   Demeyer S, 1999, LECT NOTES COMPUT SC, V1723, P630
   Ducasse S, 2000, PROCEEDINGS OF THE S, P1
   Ducasse S, 2011, 00646884 HAL, P1
   Durelli RS, 2014, 2014 IEEE 15TH INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION (IRI), P569, DOI 10.1109/IRI.2014.7051940
   EARLEY J, 1970, COMMUN ACM, V13, P94, DOI 10.1145/362007.362035
   Ebert J., 1999, Sixth Working Conference on Reverse Engineering (Cat. No.PR00303), P89, DOI 10.1109/WCRE.1999.806950
   Ebert J., 2002, Electronic Notes in Theoretical Computer Science, V72, P47
   Ebert J, 2008, P 12 EUR C SOFTW MAI, P2
   Ebraert P., 2007, P 2007 INT C DYN LAN, P3, DOI DOI 10.1145/1352678.1352680
   Engstrom E., 2015, 2015 IEEE Eighth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), IEEE, 2015, P1, DOI DOI 10.1109/ICSTW.2015
   Favre JM, 2005, ELECTRON NOTES THEOR, V127, P59, DOI 10.1016/j.entcs.2004.08.034
   Favre JM, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P366, DOI 10.1109/WCRE.2003.1287268
   Favre L, 2008, SERA 2008: 6TH ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGEMENT AND APPLICATIONS, PROCEEDINGS, P153, DOI 10.1109/SERA.2008.21
   Ferenc R, 2002, PROC IEEE INT CONF S, P172, DOI 10.1109/ICSM.2002.1167764
   Ferenc R, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P49, DOI 10.1109/WCRE.2001.957809
   GARWICK JV, 1968, COMMUN ACM, V11, P634, DOI 10.1145/364063.364092
   Gîrba T, 2006, J SOFTW MAINT EVOL-R, V18, P207, DOI 10.1002/smr.325
   Glass RL, 2002, COMMUN ACM, V45, P19
   Gómez VU, 2012, COMPUT LANG SYST STR, V38, P44, DOI 10.1016/j.cl.2011.11.001
   Gómez VU, 2009, IWPSE-EVOL 09: ERCIM WORKSHOP ON SOFTWARE EVOLUTION (EVOL) AND INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION (IWPSE), P79
   Gray J, 2004, LECT NOTES COMPUT SC, V3286, P361
   Guéhéneuc YG, 2001, TOOLS, V39, P296, DOI 10.1109/TOOLS.2001.941682
   Harmer TJ, 2002, SCAM 2002: SECOND IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS MANIPULATION, PROCEEDINGS, P26, DOI 10.1109/SCAM.2002.1134102
   Heidenreich F, 2010, LECT NOTES COMPUT SC, V5969, P374
   Holt R, 1998, INTRO TA TUPLE ATTRI, P1
   Holt RC, 2006, SCI COMPUT PROGRAM, V60, P149, DOI 10.1016/j.scico.2005.10.003
   IMBER M, 1991, INFORM SOFTWARE TECH, V33, P647, DOI 10.1016/0950-5849(91)90038-D
   Ishizue R, 2016, 2016 IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION, P71, DOI 10.1109/VISSOFT.2016.12
   ISO/IEC, 1996, 149771996 ISO IEC
   Jin D, 2002, PROG COMPREHEN, P65, DOI 10.1109/WPC.2002.1021320
   Jin D, 2006, INT C PROGRAM COMPRE, P94, DOI 10.1109/ICPC.2006.30
   Jin Dui, 2001, THE LONG MARCH 1 CHI, V1
   Jouault F., 2006, 5 INT C GEN PROGR CO, P249, DOI DOI 10.1145/1173706.1173744
   Jouault F, 2006, LECT NOTES COMPUT SC, V4037, P171
   Kang K.C., 1990, Tech. Rep. CMU/SEI-90-TR-021, P1
   Keller R. K., 2001, Advanced Information Systems Engineering. 13th International Conference, CAiSE 2001. Proceedings (Lecture Notes in Computer Science Vol.2068), P448
   Kienle HM, 2010, SCI COMPUT PROGRAM, V75, P247, DOI 10.1016/j.scico.2009.10.007
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   KNODEL J, 2004, ELECT NOTES THEORETI, V94, P19
   Kollmann R, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P58, DOI 10.1109/CSMR.2001.914969
   Krasovec G., 1995, Journal of Systems Integration, V5, P309, DOI 10.1007/BF01975183
   Kunert A., 2008, ACM SIGSOFT SOFTWARE, V211, P111
   Kunert A, 2008, ELECTRON NOTES THEOR, V211, P111, DOI 10.1016/j.entcs.2008.04.034
   Lanza M, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P409, DOI 10.1109/CSMR.2003.1192450
   Laval J, 2011, SCI COMPUT PROGRAM, V76, P1177, DOI 10.1016/j.scico.2010.11.014
   Lethbridge T.C., 2004, Electronic Notes in Theoretical Computer Science, V94, P7
   Lethbridge TC, 1998, REQUIREMENTS PROPOSA
   Lin T, 1998, P INT SIMTECT C, P303
   Lin Y., 2004, ELECT NOTES THEORETI, V94, P93, DOI DOI 10.1016/I.ENTCS.2004.01.001
   Martinez L, 2014, PROCEEDINGS OF THE 9TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL APPROACHES TO SOFTWARE ENGINEERING (ENASE 2014), P188
   Meng C, 2004, ELECT NOTES THEOR CO, V94, P29
   Mens T., 2002, Electronic Notes in Theoretical Computer Science, V72, P57
   MINAS M, 2006, P 4 FUJ DAYS, P35
   Naik R, 2004, ELECT NOTES THEOR CO, V94, P39
   Nierstrasz O, 1998, P OOPSLA WORKSH MOD, P1
   OMG, 2011, ARCH DRIV MOD KNOWL
   OMG, 2011, ARCH DRIV MOD ABSTR
   OMG, 2015, MET FAC MOF COR SPEC
   OMG, 2015, XML MET INT XMI VERS
   Ossher J, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P183, DOI 10.1109/MSR.2009.5069501
   Owens Darryl, 2013, 2013 Science and Information Conference (SAI), P207
   PAlrez-Castillo R., 2013, 25 INT C SOFTW ENG K, P516
   Pedro L, 2009, LECT NOTES COMPUT SC, V5611, P889, DOI 10.1007/978-3-642-02577-8_97
   Pinzger M, 2005, ELECTRON NOTES THEOR, V127, P183, DOI 10.1016/j.entcs.2004.08.043
   Reus T, 2006, LECT NOTES COMPUT SC, V4066, P213
   Saint-Denis G, 2000, 33 ANN HAW INT C SYS, P1
   Santibanez D. S. Martin, 2015, J BRAZ COMPUT SOC, V21, P1
   Schauer R, 2002, ADVANCES IN SOFTWARE ENGINEERING, P269
   Schurr A, 1997, PROC INT CONF SOFTW, P618, DOI 10.1145/253228.253502
   Sharafi Z, 2015, INFORM SOFTWARE TECH, V67, P79, DOI 10.1016/j.infsof.2015.06.008
   Sim SE, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P210, DOI 10.1109/WCRE.2000.891471
   SIM SE, 2001, ACM SIGSOFT SOFTWARE, V26, P44
   Smite D, 2014, EMPIR SOFTW ENG, V19, P105, DOI 10.1007/s10664-012-9217-9
   Soden M, 2007, P 2 INT WORKSH ENT M, P75
   Sora Ioana, 2012, Proceedings of the 7th International Conference on Evaluation of Novel Approaches to Software Engineering (ENASE 2012), P65
   Sora I, 2015, P 10 INT C EV NOV AP, V599
   Sora I, 2013, COMM COM INF SC, V410, P95
   Sora I, 2016, 2016 IEEE 11TH INTERNATIONAL SYMPOSIUM ON APPLIED COMPUTATIONAL INTELLIGENCE AND INFORMATICS (SACI), P317, DOI 10.1109/SACI.2016.7507393
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Strein D, 2006, SIXTH IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P207
   Tichelaar S, 2000, INTERNATIONAL SYMPOSIUM ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P154, DOI 10.1109/ISPSE.2000.913233
   TILLEY SR, 1994, INT J SOFTW ENG KNOW, V4, P501, DOI 10.1142/S0218194094000246
   Tripathi Vikas, 2009, 2009 IEEE International Advance Computing Conference. IACC 2009, P1639, DOI 10.1109/IADCC.2009.4809263
   Unterkalmsteiner M., 2014, T SOFTW ENG METHODOL, V23, P1
   van den Brand MGJ, 2007, INFORM SOFTWARE TECH, V49, P55, DOI 10.1016/j.infsof.2006.08.009
   Vidacs Laszlo, 2009, Proceedings of the 4th International Conference on Software and Data Technologies, P232
   *W3C, 2000, EXT MARK LANG XML
   Washizaki H, 2005, SCI COMPUT PROGRAM, V56, P99, DOI 10.1016/j.scico.2004.11.007
   Washizaki H, 2016, P 23 C PATT LANG PRO, P1
   Washizaki H, 2016, PROC IEEE INT CONF S, P44, DOI 10.1109/ICSME.2016.82
   Wimmer M, 2006, LECT NOTES COMPUT SC, V3844, P159
   Wu H, 2010, P 1 DOCT S INT C SOF, V64, P27
NR 127
TC 4
Z9 4
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2018
VL 23
IS 4
BP 2323
EP 2358
DI 10.1007/s10664-017-9592-3
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GK0MK
UT WOS:000435804100015
OA Green Accepted, hybrid
DA 2024-07-18
ER

PT J
AU Squire, M
AF Squire, Megan
TI Data sets describing the circle of life in Ruby hosting, 2003-2016
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Open source software; Forge; Repository; Projecthosting; RubyForge;
   RubyGems; Ruby; Software evolution; Project metadata; Developer
   metadata; Data; Dataset
AB Studying software repositories and hosting services can provide valuable insights into the behaviors of large groups of software developers and their projects. Traditionally, most analysis of metadata collected from software project hosting services has been conducted by specifying some short window of time, typically just a few years. To date, few - if any - studies have been built from data comprising the entirety of a hosting facility's lifespan: from its birth to its death, and rebirth in another form. Thus, the first contribution of this paper is to present two data sets that support the historical analysis of over ten years of collected metadata from the now-defunct RubyForge project hosting site, as well as the follow-on successor to RubyForge, the RubyGems package ("gem") hosting facility. The data sets and samples of usage demonstrated in this paper include: analyses of overall forge growth over time, presentation of data and analyses of project-level characteristics on both forges and their changes over time (for example in licenses, languages, and so on), and demonstration of how to use developer-level metadata (for example counts of new developers and calculation of developer-project density) to assess changes in person-level activity on both sites over time. Finally, because RubyForge was phased out and the gem-hosting portion of it was replaced by RubyGems, all the gems within RubyForge projects were transferred by project owners and by the site owners themselves into the RubyGems hosting facility. Thus, the data sets in this paper represent a unique opportunity to study projects as they moved from one ecosystem to another, and as such we show several methods for locating related projects between the two forges, and for building a cross-forge, longitudinal project history using information from both forges. These data sets and sample analyses in this paper will be relevant to researchers studying long-term software evolution, and distributed, hosted, or collaborative software development environments.
C1 [Squire, Megan] Elon Univ, Elon, NC 27244 USA.
C3 Elon University
RP Squire, M (corresponding author), Elon Univ, Elon, NC 27244 USA.
EM msquire@elon.edu
OI Squire, Megan/0000-0002-5335-8423
FU National Science Foundation [NSF-1405643]
FX We gratefully acknowledge the National Science Foundation (grant number
   NSF-1405643) for supporting this work.
CR Blair P, 2010, RUBYGEMS ORG REPLACE
   Booch G, 2003, ADV COMPUT, V59, P1, DOI 10.1016/S0065-2458(03)59001-5
   Cooper P, 2009, GEMCUTTER IS NEW OFF
   Delorey D.P., 2007, P 2 WORKSH PUBL DAT
   DiBona C, 2015, GOOGLE OPEN SOU 0312
   GitHub, 2017, AB GITHUB
   Gousios G, 2013, IEEE WORK CONF MIN S, P233, DOI 10.1109/MSR.2013.6624034
   Harry B, 2017, B HARRYS BLOG   0331
   Howison J, 2006, INT J INF TECHNOL WE, V1, P17, DOI 10.4018/jitwe.2006070102
   Hyett PJ, 2008, GITHUB BLOG
   Knuth Donald, 1973, SORTING SEARCHING, V3, P391
   Krein Jonathan L., 2010, International Journal of Open Source Software & Processes, V2, P41, DOI 10.4018/jossp.2010040104
   Krein J.L., 2009, P 4 WORKSH PUBL DAT
   Lerner J, 2005, J LAW ECON ORGAN, V21, P20, DOI 10.1093/jleo/ewi002
   Levenshtein V.I., 1966, Sov. Phys. Dokl, V163, P845
   McAlister N., 2013, REGISTER
   Miller J, 2012, HIST CANONICAL GEM H
   Phipps S., 2014, InfoWorld
   Phoenix E, 2013, TWEET
   Roberts R, 2009, GEMCUTTER FAST EASY
   Ruby Rogues Podcast, 2012, RUBYGEMS NICK QUAR
   RubyGems, 2016, RUBYGEMS DAT DUMPS
   RubyGems, 2016, AB RUBYGEMS
   RubyGems, 2016, RUBYGEMS GUID MAK YO
   Schuster W, 2009, RUBYFORGE BE PHASED
   Squire Megan, 2009, International Journal of Open Source Software & Processes, V1, P46, DOI 10.4018/jossp.2009010103
   Squire M., 2016, Mastering Data Mining with Python - Find Patterns hidden in your Data
   Squire M, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P452, DOI [10.1109/MSR.2016.053, 10.1145/2901739.2903509]
   Stocker M, 2008, PROS CONS GITHUB VS
   Vasilescu B., 2015, P CHI
   Vendome C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P772, DOI 10.1109/ICSE.2015.245
   Villa L., 2013, YOUNGER DEV REJECT L
   Wanstrath C., 2009, GITHUB GEM BUILDING
NR 33
TC 2
Z9 2
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2018
VL 23
IS 2
BP 1123
EP 1152
DI 10.1007/s10664-017-9581-6
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GC1OI
UT WOS:000429551000013
DA 2024-07-18
ER

PT J
AU Xu, BW
   Xing, ZC
   Xia, X
   Lo, D
   Li, SP
AF Xu, Bowen
   Xing, Zhenchang
   Xia, Xin
   Lo, David
   Li, Shanping
TI Domain-specific cross-language relevant question retrieval
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Domain-specific translation; Cross-language question retrieval
AB Chinese developers often cannot effectively search questions in English, because they may have difficulties in translating technical words from Chinese to English and formulating proper English queries. For the purpose of helping Chinese developers take advantage of the rich knowledge base of Stack Overflow and simplify the question retrieval process, we propose an automated cross-language relevant question retrieval (CLRQR) system to retrieve relevant English questions for a given Chinese question. CLRQR first extracts essential information (both Chinese and English) from the title and description of the input Chinese question, then performs domain-specific translation of the essential Chinese information into English, and finally formulates an English query for retrieving relevant questions in a repository of English questions from Stack Overflow. We propose three different retrieval algorithms (word-embedding, word-matching, and vector-space-model based methods) that exploit different document representations and similarity metrics for question retrieval. To evaluate the performance of our approach and investigate the effectiveness of different retrieval algorithms, we propose four baseline approaches based on the combination of different sources of query words, query formulation mechanisms and search engines. We randomly select 80 Java, 20 Python and 20 .NET questions in SegmentFault and V2EX (two Chinese Q&A websites for computer programming) as the query Chinese questions. We conduct a user study to evaluate the relevance of the retrieved English questions using CLRQR with different retrieval algorithms and the four baseline approaches. The experiment results show that CLRQR with word-embedding based retrieval achieves the best performance.
C1 [Xu, Bowen; Li, Shanping] Zhejiang Univ, Coll Comp Sci & Technol, Hangzhou, Zhejiang, Peoples R China.
   [Xing, Zhenchang] Australian Natl Univ, Res Sch Comp Sci, Canberra, ACT, Australia.
   [Xia, Xin] Monash Univ, Fac Informat Technol, Melbourne, Vic, Australia.
   [Xia, Xin] Zhejiang Univ, Australia Coll Comp Sci & Technol, Hangzhou, Zhejiang, Peoples R China.
   [Lo, David] Singapore Management Univ, Sch Informat Syst, Singapore, Singapore.
C3 Zhejiang University; Australian National University; Monash University;
   Zhejiang University; Singapore Management University
RP Xia, X (corresponding author), Zhejiang Univ, Australia Coll Comp Sci & Technol, Hangzhou, Zhejiang, Peoples R China.
EM max_xbw@zju.edu.cn; Zhenchang.Xing@anu.edu.au; xxia@zju.edu.cn;
   davidlo@smu.edu.sg; shan@zju.edu.cn
RI Xia, Xin/AAD-6217-2022; BOWEN, XU/AGF-1611-2022; Xu,
   Bowen/JRR-9142-2023; Lo, David/A-2493-2012
OI Xia, Xin/0000-0002-6302-3256; Lo, David/0000-0002-4367-7201
FU NSFC [61602403, 61572426]
FX This work was partially supported by NSFC Program (No. 61602403 and
   61572426).
CR Aceves-Pérez RM, 2007, LECT NOTES COMPUT SC, V4394, P485
   [Anonymous], 2014, P 22 INT C PROGR COM
   Baeza-Yates R., 1999, MODERN INFORM RETRIE, V463
   Bao LF, 2017, SCI CHINA INFORM SCI, V60, DOI 10.1007/s11432-016-9072-3
   Canfora Gerardo., 2005, STEP 2005, P99
   Chen K., 2013, EFFICIENT ESTIMATION, P2
   Cohen J., 1988, STAT POWER ANAL BEHA
   Cubranic D, 2003, PROC INT CONF SOFTW, P408, DOI 10.1109/ICSE.2003.1201219
   Cui H., 2002, Proceed- ings of the 11th International Conference on World Wide Web, P325
   Haiduc S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1307, DOI 10.1109/ICSE.2013.6606704
   Haiduc S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P842, DOI 10.1109/ICSE.2013.6606630
   Harkness, 2017, WHY ARE SOME CHINESE
   Harris ZS, 1954, WORD, V10, P146, DOI 10.1080/00437956.1954.11659520
   Hayes J. H., 2011, P 6 INT WORKSH TRAC, P50
   Hiemstra Djoerd, 1997, COMPUTER ASSISTED IN, P255
   Hill E, 2009, PROC INT CONF SOFTW, P232, DOI 10.1109/ICSE.2009.5070524
   Hull D., 1996, P ACM SIGIR, P49
   Jinqiu Yang, 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P161, DOI 10.1109/MSR.2012.6224276
   Jones G, 1999, SIGIR'99: PROCEEDINGS OF 22ND INTERNATIONAL CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P269, DOI 10.1145/312624.312690
   JUI S.-L., 2010, Innovation in China: the Chinese Software Industry
   Kluck M., 2001, Cross-Language Information Retrieval and Evaluation. Workshop of the Cross-Language Evaluation Forum, CLEF 2000. Revised Papers (Lecture Notes in Computer Science Vol.2069), P48
   Kraaij W, 2003, COMPUT LINGUIST, V29, P381, DOI 10.1162/089120103322711587
   Kumar V., 2006, Introduction to Data Mining
   Lucia A. D., 2007, ACM T SOFTW ENG METH, V16, P50
   Marcus A, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P214, DOI 10.1109/WCRE.2004.10
   Mihalcea R., 2006, P 21 NAT C ART INT, V6, P775
   Mihalcea R., 2004, P 2004 C EMPIRICAL M, P404, DOI DOI 10.3115/1219044.1219064
   Mikolov Tomas, 2013, Advances in Neural Information Processing Systems, P3111, DOI DOI 10.48550/ARXIV.1310.4546
   Peñas A, 2012, LANG RESOUR EVAL, V46, P177, DOI 10.1007/s10579-012-9177-0
   Porter MF, 2006, PROGRAM-ELECTRON LIB, V40, P211, DOI [10.1108/00330330610681286, 10.1108/eb046814]
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI [10.1109/TSE.2007.1016, 10.1109/TSE.2007.1016.]
   Rehurek R., 2010, P LREC 2010 WORKSH N, P45, DOI DOI 10.13140/2.1.2393.1847
   Resnik P., 1997, Proceedings of the 5th ACL Conference on Applied natural Language Processing, P340
   Saggion H, 2002, DEV INFRASTRUCTURE E, V1001, P109
   SALTON G, 1988, INFORM PROCESS MANAG, V24, P513, DOI 10.1016/0306-4573(88)90021-0
   Shepherd D., 2007, P 6 INT C ASP OR SOF, P212, DOI 10.1145/1218563.1218587
   Shepherd David., 2005, MACS 05, P1
   Tang YB, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON CONSUMER ELECTRONICS-TAIWAN (ICCE-TW), P101
   Thai P, 2007, INTRO CROSS LANGUAGE
   van der Maaten L, 2008, J MACH LEARN RES, V9, P2579
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Xia X, 2017, AUTOMAT SOFTW ENG, V24, P455, DOI 10.1007/s10515-016-0204-z
   Xia X, 2015, PROC IEEE INT CONF S, P261, DOI 10.1109/ICSM.2015.7332472
   Xin Liu, 2002, Proceedings of SIGIR 2002. Twenty-Fifth Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, P191
   Xu B, 2017, P 32 IEEE ACM INT C
   Xu BW, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P1009, DOI 10.1145/3106237.3122820
   Xu BW, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P413, DOI [10.1109/MSR.2016.049, 10.1145/2901739.2901746]
   Yang XL, 2016, PROC INT SYMP SOFTW, P127, DOI 10.1109/ISSRE.2016.33
   Zhang Y, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P13, DOI 10.1109/SANER.2017.7884605
   Zhang Y, 2015, J COMPUT SCI TECH-CH, V30, P981, DOI 10.1007/s11390-015-1576-4
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
NR 51
TC 9
Z9 11
U1 0
U2 7
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2018
VL 23
IS 2
BP 1084
EP 1122
DI 10.1007/s10664-017-9568-3
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GC1OI
UT WOS:000429551000012
DA 2024-07-18
ER

PT J
AU Spinellis, D
AF Spinellis, Diomidis
TI A repository of Unix history and evolution
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software archeology; Unix; Configuration management; Git
ID PROGRAM
AB The history and evolution of the Unix operating system is made available as a revision management repository, covering the period from its inception in 1972 as a five thousand line kernel, to 2016 as a widely-used 27 million line system. The 1.1gb repository contains 496 thousand commits and 2,523 branch merges. The repository employs the commonly used Git version control system for its storage, and is hosted on the popular GitHub archive. It has been created by synthesizing with custom software 24 snapshots of systems developed at Bell Labs, the University of California at Berkeley, and the 386bsd team, two legacy repositories, and the modern repository of the open source Freebsd system. In total, 973 individual contributors are identified, the early ones through primary research. The data set can be used for empirical research in software engineering, information systems, and software archaeology.
C1 [Spinellis, Diomidis] Athens Univ Econ & Business, Dept Management Sci & Technol, Patision 76, Athens 10434, Greece.
C3 Athens University of Economics & Business
RP Spinellis, D (corresponding author), Athens Univ Econ & Business, Dept Management Sci & Technol, Patision 76, Athens 10434, Greece.
EM dds@aueb.gr
RI Spinellis, Diomidis/E-3600-2010
OI Spinellis, Diomidis/0000-0003-4231-1897
FU Research Centre of the Athens University of Economics and Business
   [EP-2279-01]; Greek Research & Technology Network (GRNET) in the
   National HPC facility - ARIS [PA003005-CDOLPOT]
FX The work has been partially funded by the Research Centre of the Athens
   University of Economics and Business, under the Original Scientific
   Publications framework (project code EP-2279-01) and supported by
   computational time granted from the Greek Research & Technology Network
   (GRNET) in the National HPC facility - ARIS - under project ID
   PA003005-CDOLPOT.
CR AHO AV, 1979, SOFTWARE PRACT EXPER, V9, P267, DOI 10.1002/spe.4380090403
   [Anonymous], 2003, The art of UNIX programming
   [Anonymous], 65 BELL LAB
   [Anonymous], 1975, 39 BELL LAB
   Babaoglu O., 1981, Operating Systems Review, V15, P78, DOI 10.1145/1067627.806595
   Bashkow TR, 1972, STUDY UNIX BELL LABO
   Bird Christian, 2006, P MSR, P137, DOI DOI 10.1145/1137983.1138016
   BOURNE SR, 1978, AT&T TECH J, V57, P1971, DOI 10.1002/j.1538-7305.1978.tb02139.x
   Bourne SR, 1979, UNIX PROGRAMMERS MAN, V2
   DOLOTTA TA, 1978, AT&T TECH J, V57, P2177, DOI 10.1002/j.1538-7305.1978.tb02148.x
   FELDMAN SI, 1979, SOFTWARE PRACT EXPER, V9, P255, DOI 10.1002/spe.4380090402
   FreeBSD, 2015, FREEBSD HDB
   Gall H, 2014, DAGSTUHL REPORTS, V4, P64, DOI [10.4230/DagRep.4.6.64.http://drops.dagstuhl.de/opus/volltexte/2014/4763, DOI 10.4230/DAGREP.4.6.64]
   Gehani N, 2003, BELL LABS LIFE IN TH
   JOHNSON SC, 1978, AT&T TECH J, V57, P2155, DOI 10.1002/j.1538-7305.1978.tb02147.x
   JOHNSON SC, 1978, AT&T TECH J, V57, P2021, DOI 10.1002/j.1538-7305.1978.tb02141.x
   Johnson StephenC., 1975, YACC YET ANOTHER COM
   Jolitz, 1991, DR DOBBS J, V16
   Kernighan Brian W., 1979, UNIX PROGRAMMERS MAN, V2
   KERNIGHAN BW, 1978, AT&T TECH J, V57, P2115, DOI 10.1002/j.1538-7305.1978.tb02145.x
   Kernighan BW, 1982, 97 BELL LAB
   Kernighan BW, 1974, 17 BELL LAB
   Lesk ME, 1979, UNIX PROGRAMMERS MAN, V2
   Lewis Anthony, 1956, NY TIMES, p[1, 1]
   Libes D, 1989, LIFE WITH UNIX
   Lions John, 1996, LIONS COMMENTARY UNI
   Mashey J. R., 1976, 2nd International Conference on Software Engineering, P177
   MCILROY MD, 1978, AT&T TECH J, V57, P1899, DOI 10.1002/j.1538-7305.1978.tb02135.x
   McKusick Marshall., 2004, DESIGN IMPLEMENTATIO
   Mcmahon L.E., 1979, UNIX PROGRAMMERS MAN, V2
   Nowitz DA, 1979, UNIX PROGRAMMERS MAN, V2
   Ossanna J. F., 1979, UNIX PROGRAMMERS MAN, V2
   PIKE R, 1984, AT&T TECH J, V63, P1595, DOI 10.1002/j.1538-7305.1984.tb00055.x
   QUARTERMAN JS, 1986, COMMUN ACM, V29, P932, DOI 10.1145/6617.6618
   Resnick P, 2008, 5322 RFC, DOI [10.17487/RFC5322, DOI 10.17487/RFC5322]
   RITCHIE DM, 1978, AT&T TECH J, V57, P1905, DOI 10.1002/j.1538-7305.1978.tb02136.x
   RITCHIE DM, 1978, AT&T TECH J, V57, P1947, DOI 10.1002/j.1538-7305.1978.tb02138.x
   RITCHIE DM, 1984, AT&T TECH J, V63, P1577, DOI 10.1002/j.1538-7305.1984.tb00054.x
   RITCHIE DM, 1974, COMMUN ACM, V17, P365, DOI 10.1145/361011.361061
   RITCHIE DM, 1993, SIGPLAN NOTICES, V28, P201, DOI 10.1145/155360.155580
   Ritchie DM, 1978, BELL SYST TECH J, V57
   Rochkind MJ, 1975, IEEE T SOFTWARE ENG, V1, P255
   Rosler L, 1984, BELL SYST TECH J, V63
   Salus P. H., 1994, A Quarter Century of UNIX
   Spinellis D, 2016, ICSE 16 PROCEEDINGS, P1973, DOI [10.1145/2884781.2884799, DOI 10.1145/2884781.2884799]
   Spinellis D, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P462, DOI 10.1109/MSR.2015.64
   Spinellis D, 2015, INT SYMP EMP SOFTWAR, P54
   Stevens W.R., 1990, UNIX NETWORK PROGRAM
   Stone M, 1999, OPEN SOURCES VOICES, P31
   STROUSTRUP B, 1984, AT&T TECH J, V63, P1701, DOI 10.1002/j.1538-7305.1984.tb00061.x
   Stroustrup B., 1994, The Design and Evolution of C++
   Takamatsu, 2013, ANN BUS ADMIN SCI, V12, P123
   Tichy W. F., 1982, P 6 INT C SOFTW ENG
   Toomey W, 2010, IEEE ANN HIST COMPUT, V32, P74, DOI 10.1109/MAHC.2009.55
   Toomey Warren, 2009, P 2009 USENIX ANN TE, P20
   WALL L, 1990, PROGRAMMING PERL
   Yoo AB, 2003, LECT NOTES COMPUT SC, V2862, P44
NR 57
TC 14
Z9 14
U1 2
U2 10
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2017
VL 22
IS 3
BP 1372
EP 1404
DI 10.1007/s10664-016-9445-5
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EW4GE
UT WOS:000402459200014
DA 2024-07-18
ER

PT J
AU Rojas, JM
   Vivanti, M
   Arcuri, A
   Fraser, G
AF Rojas, Jose Miguel
   Vivanti, Mattia
   Arcuri, Andrea
   Fraser, Gordon
TI A detailed investigation of the effectiveness of <i>whole</i> test suite
   generation
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Automated test generation; Unit testing; Search-based testing; EvoSuite
AB A common application of search-based software testing is to generate test cases for all goals defined by a coverage criterion (e.g., lines, branches, mutants). Rather than generating one test case at a time for each of these goals individually, whole test suite generation optimizes entire test suites towards satisfying all goals at the same time. There is evidence that the overall coverage achieved with this approach is superior to that of targeting individual coverage goals. Nevertheless, there remains some uncertainty on (a) whether the results generalize beyond branch coverage, (b) whether the whole test suite approach might be inferior to a more focused search for some particular coverage goals, and (c) whether generating whole test suites could be optimized by only targeting coverage goals not already covered. In this paper, we perform an in-depth analysis to study these questions. An empirical study on 100 Java classes using three different coverage criteria reveals that indeed there are some testing goals that are only covered by the traditional approach, although their number is only very small in comparison with those which are exclusively covered by the whole test suite approach. We find that keeping an archive of already covered goals along with the tests covering them and focusing the search on uncovered goals overcomes this small drawback on larger classes, leading to an improved overall effectiveness of whole test suite generation.
C1 [Rojas, Jose Miguel; Fraser, Gordon] Univ Sheffield, Dept Comp Sci, Regent Court, 211 Portobello, Sheffield S1 4DP, S Yorkshire, England.
   [Vivanti, Mattia] Univ Svizzera Italiana, Lugano, Switzerland.
   [Arcuri, Andrea] Scienta, Oslo, Norway.
   [Arcuri, Andrea] Univ Luxembourg, SnT Ctr, Esch Sur Alzette, Luxembourg.
C3 University of Sheffield; Universita della Svizzera Italiana; University
   of Luxembourg
RP Fraser, G (corresponding author), Univ Sheffield, Dept Comp Sci, Regent Court, 211 Portobello, Sheffield S1 4DP, S Yorkshire, England.
EM j.rojas@sheffield.ac.uk; mattia.vivanti@usi.ch; aa@scienta.no;
   gordon.fraser@sheffield.ac.uk
RI Rojas, José Miguel/B-5267-2012
OI Rojas, Jose Miguel/0000-0002-0079-5355
FU EPSRC [EP/K030353/1]; Google Focused Research Award on "Test
   Amplification"; National Research Fund, Luxembourg [FNR/P10/03]; EPSRC
   [EP/K030353/1, EP/N023978/1] Funding Source: UKRI
FX This project has been funded by the EPSRC project "EXOGEN"
   (EP/K030353/1), a Google Focused Research Award on "Test Amplification",
   and by the National Research Fund, Luxembourg (FNR/P10/03).
CR Ali S, 2010, IEEE T SOFTWARE ENG, V36, P742, DOI 10.1109/TSE.2009.52
   Arcuri A, 2008, INFORM SCIENCES, V178, P3075, DOI 10.1016/j.ins.2007.11.024
   Arcuri A, 2014, LECT NOTES COMPUT SC, V8636, P1
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Arcuri A, 2013, SOFTW TEST VERIF REL, V23, P119, DOI 10.1002/stvr.457
   Arcuri A, 2012, IEEE T SOFTWARE ENG, V38, P497, DOI 10.1109/TSE.2011.44
   Arcuri A, 2012, IEEE T SOFTWARE ENG, V38, P258, DOI 10.1109/TSE.2011.121
   Baresi Luciano, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P185, DOI 10.1109/ICST.2010.54
   Fraser G, 2015, EMPIR SOFTW ENG, V20, P783, DOI 10.1007/s10664-013-9299-z
   Fraser G, 2013, SOFTW TEST VERIF REL, V23, P553, DOI 10.1002/stvr.1495
   Fraser G, 2013, IEEE T SOFTWARE ENG, V39, P276, DOI 10.1109/TSE.2012.14
   Fraser G, 2012, IEEE T SOFTWARE ENG, V38, P278, DOI 10.1109/TSE.2011.93
   Fraser G, 2012, PROC INT CONF SOFTW, P178, DOI 10.1109/ICSE.2012.6227195
   Fraser Gordon, 2011, PROC 19 ACM SIGSOFT, P416, DOI 10.1145/2025113.2025179
   Harman M, 2010, INT WORKSH SEARCH BA
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Jia Y, 2009, TR0906 KINGS COLL LO
   KOREL B, 1990, IEEE T SOFTWARE ENG, V16, P870, DOI 10.1109/32.57624
   Kotrlik J. W., 2003, Information Technology, Learning, and Performance Journal, V21, P1
   Lakhotia K, 2010, J SYST SOFTW, V83
   Li N, 2013, PROC INT SYMP SOFTW, P380, DOI 10.1109/ISSRE.2013.6698891
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   Miller W., 1976, IEEE Transactions on Software Engineering, VSE-2, P223, DOI 10.1109/TSE.1976.233818
   Panichella A, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL SYMPOSIUM ON SOFTWARE AND SYSTEMS TRACEABILITY, P15, DOI 10.1109/SST.2015.10
   Ribeiro J.C.B., 2008, GEN EV COMP C GECCO, P1819, DOI DOI 10.1145/1388969.1388979
   Tonella P., 2004, Software Engineering Notes, V29, P119, DOI 10.1145/1013886.1007528
   Wappler S, 2005, GECCO 2005: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOLS 1 AND 2, P1053
   Wegener J, 2001, INFORM SOFTWARE TECH, V43, P841, DOI 10.1016/S0950-5849(01)00190-2
NR 28
TC 52
Z9 53
U1 0
U2 9
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2017
VL 22
IS 2
BP 852
EP 893
DI 10.1007/s10664-015-9424-2
PG 42
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ES9PL
UT WOS:000399891400009
OA Green Accepted, hybrid
DA 2024-07-18
ER

PT J
AU Zhang, F
   Mockus, A
   Keivanloo, I
   Zou, Y
AF Zhang, Feng
   Mockus, Audris
   Keivanloo, Iman
   Zou, Ying
TI Towards building a universal defect prediction model with rank
   transformed predictors
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Universal defect prediction model; Defect prediction; Context factors;
   Rank transformation; Large-scale; Software quality
ID STATIC CODE ATTRIBUTES; SOFTWARE; BENCHMARKING; METRICS
AB Software defects can lead to undesired results. Correcting defects costs 50 % to 75 % of the total software development budgets. To predict defective files, a prediction model must be built with predictors (e.g., software metrics) obtained from either a project itself (within-project) or from other projects (cross-project). A universal defect prediction model that is built from a large set of diverse projects would relieve the need to build and tailor prediction models for an individual project. A formidable obstacle to build a universal model is the variations in the distribution of predictors among projects of diverse contexts (e.g., size and programming language). Hence, we propose to cluster projects based on the similarity of the distribution of predictors, and derive the rank transformations using quantiles of predictors for a cluster. We fit the universal model on the transformed data of 1,385 open source projects hosted on SourceForge and GoogleCode. The universal model obtains prediction performance comparable to the within-project models, yields similar results when applied on five external projects (one Apache and four Eclipse projects), and performs similarly among projects with different context factors. At last, we investigate what predictors should be included in the universal model. We expect that this work could form a basis for future work on building a universal model and would lead to software support tools that incorporate it into a regular development workflow.
C1 [Zhang, Feng] Queens Univ, Sch Comp, Kingston, ON, Canada.
   [Mockus, Audris] Univ Tennessee, Dept Elect Engn & Comp Sci, Knoxville, TN 37996 USA.
   [Keivanloo, Iman; Zou, Ying] Queens Univ, Dept Elect & Comp Engn, Kingston, ON, Canada.
C3 Queens University - Canada; University of Tennessee System; University
   of Tennessee Knoxville; Queens University - Canada
RP Zhang, F (corresponding author), Queens Univ, Sch Comp, Kingston, ON, Canada.
EM feng@cs.queensu.ca; audris@utk.edu; iman.keivanloo@queensu.ca;
   ying.zou@queensu.ca
RI Mockus, Audris/AEY-3361-2022; Zhang, Feng/AAQ-3506-2021; Zou,
   Ying/KLC-9380-2024
OI Zhang, Feng/0000-0001-9805-395X
CR Akiyama F., 1971, IFIP C, P353
   Alves T, 2010, P 26 IEEE INT C SOFT, P1
   [Anonymous], 2005, P INT S EMP SOFTW EN
   [Anonymous], 2010, PROC ACMIEEE INT S E
   [Anonymous], P 21 ACM SIGSOFT S 1
   [Anonymous], UND 3 1 BUILD 726
   [Anonymous], 2000, HDB PARAMETRIC NONPA
   [Anonymous], 1988, Statistical Power Analysis for the Behavioral Sciences
   [Anonymous], 2007, PROMISE 07, DOI DOI 10.1109/PROMISE.2007.10
   [Anonymous], 2002, EC IMPACTS INADEQUAT
   [Anonymous], 2012, P ACM SIGSOFT 20 INT
   Arisholm E, 2010, J SYST SOFTWARE, V83, P2, DOI 10.1016/j.jss.2009.06.055
   Baggen R, 2012, SOFTWARE QUAL J, V20, P287, DOI 10.1007/s11219-011-9144-9
   Bettenburg Nicolas, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P124, DOI 10.1109/ICPC.2010.46
   Bird C, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P121, DOI 10.1145/1595696.1595716
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   COHEN J, 1992, PSYCHOL BULL, V112, P155, DOI 10.1037/0033-2909.112.1.155
   Cruz AEC, 2009, INT SYMP EMP SOFTWAR, P461
   D'Ambros Marco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P31, DOI 10.1109/MSR.2010.5463279
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   Denaro G, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P241, DOI 10.1109/ICSE.2002.1007972
   Hailpern B, 2002, IBM SYST J, V41, P4, DOI 10.1147/sj.411.0004
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   He ZM, 2012, AUTOMAT SOFTW ENG, V19, P167, DOI 10.1007/s10515-011-0090-3
   Herzig K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P392, DOI 10.1109/ICSE.2013.6606585
   Hosmer DW, 2013, WILEY SER PROBAB ST, P49
   Jiang Y., 2008, DEFECTS 08 P 2008 WO, P16, DOI [DOI 10.1145/1390817.1390822, 10.1145/1390817.1390822]
   Kim S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P481, DOI 10.1145/1985793.1985859
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Li M, 2012, AUTOMAT SOFTW ENG, V19, P201, DOI 10.1007/s10515-011-0092-1
   Ma Y, 2012, INFORM SOFTWARE TECH, V54, P248, DOI 10.1016/j.infsof.2011.09.007
   Menzies T., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P343, DOI 10.1109/ASE.2011.6100072
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P637, DOI 10.1109/TSE.2007.70721
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Mockus A, 2000, PROC IEEE INT CONF S, P120, DOI 10.1109/ICSM.2000.883028
   Mockus A, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P11, DOI 10.1109/MSR.2009.5069476
   Nagappan M, 2013, 2013 9 JOINT M EUR S, P466, DOI [DOI 10.1145/2491411.2491415, 10.1145/2491411.2491415]
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Nam J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P382, DOI 10.1109/ICSE.2013.6606584
   Pan SJ, 2010, IEEE T KNOWL DATA EN, V22, P1345, DOI 10.1109/TKDE.2009.191
   Peters F, 2013, IEEE WORK CONF MIN S, P409, DOI 10.1109/MSR.2013.6624057
   Peters F, 2013, IEEE T SOFTWARE ENG, V39, P1054, DOI 10.1109/TSE.2013.6
   Posnett D., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P362, DOI 10.1109/ASE.2011.6100074
   Premraj R, 2011, INT SYMP EMP SOFTWAR, P215, DOI 10.1109/ESEM.2011.30
   Radjenovic D, 2013, INFORM SOFTWARE TECH, V55, P1397, DOI 10.1016/j.infsof.2013.02.009
   Romano J, 2006, ANN M FLOR ASS I RES, P1
   Sarro F., 2012, Proceedings of the 27th Annual ACM Symposium on Applied Computing, SAC '12, P1215, DOI DOI 10.1145/2245276.2231967
   Shatnawi R, 2008, J SYST SOFTWARE, V81, P1868, DOI 10.1016/j.jss.2007.12.794
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Nguyen TT, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P932, DOI 10.1145/1985793.1985950
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Watanabe S., 2008, P 4 INT WORKSH PRED, P19
   Yin RK, 2002, Applied Social Research Methods Series, V34
   Zhang F, 2013, PROC IEEE INT CONF S, P350, DOI 10.1109/ICSM.2013.46
   Zhang FM, 2014, CRYST GROWTH DES, V14, P2014, DOI 10.1021/cg5001254
   Zhimin He, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P45, DOI 10.1109/ESEM.2013.20
   Zhou YM, 2007, J SYST SOFTWARE, V80, P1349, DOI 10.1016/j.jss.2006.10.049
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
   Zimmermann T, 2012, PROC INT CONF SOFTW, P1074, DOI 10.1109/ICSE.2012.6227112
   Zimmermann T, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P531, DOI 10.1145/1368088.1368161
NR 61
TC 70
Z9 76
U1 1
U2 19
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2016
VL 21
IS 5
BP 2107
EP 2145
DI 10.1007/s10664-015-9396-2
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DU2BX
UT WOS:000382017100008
DA 2024-07-18
ER

PT J
AU Bécan, G
   Acher, M
   Baudry, B
   Ben Nasr, S
AF Becan, Guillaume
   Acher, Mathieu
   Baudry, Benoit
   Ben Nasr, Sana
TI Breathing ontological knowledge into feature model synthesis: an
   empirical study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software product lines; Feature model; Variability; Model management;
   Reverse engineering; Refactoring
ID SOFTWARE PRODUCT LINE; VARIABILITY; SEMANTICS; WORDNET
AB Feature Models (FMs) are a popular formalism for modeling and reasoning about the configurations of a software product line. As the manual construction of an FM is time-consuming and error-prone, management operations have been developed for reverse engineering, merging, slicing, or refactoring FMs from a set of configurations/dependencies. Yet the synthesis of meaningless ontological relations in the FM - as defined by its feature hierarchy and feature groups - may arise and cause severe difficulties when reading, maintaining or exploiting it. Numerous synthesis techniques and tools have been proposed, but only a few consider both configuration and ontological semantics of an FM. There are also few empirical studies investigating ontological aspects when synthesizing FMs. In this article, we define a generic, ontologic-aware synthesis procedure that computes the likely siblings or parent candidates for a given feature. We develop six heuristics for clustering and weighting the logical, syntactical and semantical relationships between feature names. We then perform an empirical evaluation on hundreds of FMs, coming from the SPLOT repository and Wikipedia. We provide evidence that a fully automated synthesis (i.e., without any user intervention) is likely to produce FMs far from the ground truths. As the role of the user is crucial, we empirically analyze the strengths and weaknesses of heuristics for computing ranking lists and different kinds of clusters. We show that a hybrid approach mixing logical and ontological techniques outperforms state-of-the-art solutions. We believe our approach, environment, and empirical results support researchers and practitioners working on reverse engineering and management of FMs.
C1 [Becan, Guillaume; Acher, Mathieu; Baudry, Benoit; Ben Nasr, Sana] Univ Rennes 1, Inria, IRISA, Rennes, France.
C3 Universite de Rennes; Inria
RP Bécan, G (corresponding author), Univ Rennes 1, Inria, IRISA, Rennes, France.
EM guillaume.becan@inria.fr; mathieu.acher@inria.fr;
   benoit.baudry@inria.fr; sana.ben-nasr@inria.fr
OI Acher, Mathieu/0000-0003-1483-3858
CR Abbasi E. K., 2014, CSMR WRCE 14
   Acher M., 2013, VAMOS 13
   ACHER M., 2012, P 6 INT WORKSH VAR M, P45, DOI DOI 10.1145/2110147.2110153
   Acher M, 2014, SOFTWARE SYSTEMS MOD
   Acher M, 2013, LECT NOTES COMPUT SC, V8107, P352, DOI 10.1007/978-3-642-41533-3_22
   Acher M, 2013, SCI COMPUT PROGRAM, V78, P657, DOI 10.1016/j.scico.2012.12.004
   Acher M, 2011, LECT NOTES COMPUT SC, V6903, P220, DOI 10.1007/978-3-642-23798-0_25
   Ahnassay A., 2013, TRLS3130084R4T RYERS
   Aho A. V., 1972, SIAM Journal on Computing, V1, P131, DOI 10.1137/0201008
   Alves V, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P67, DOI 10.1109/SPLC.2008.18
   Andersen N., 2012, P SPLC 12, P97
   [Anonymous], VAMOS 13
   [Anonymous], P 36 INT C SOFTW ENG
   [Anonymous], 2007, COMPANION 22 ACM SIG
   [Anonymous], 2013, THESIS
   [Anonymous], 2016, Feature-Oriented Software Product Lines
   [Anonymous], 2007, SOFTWARE PRODUCT LIN
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   Apel S., 2013, IEEE Transactions on Software Engineering, V39, P63, DOI 10.1109/TSE.2011.120
   Apel S., 2013, ICSE 13
   Apel S, 2009, J OBJECT TECHNOL, V8, P49, DOI 10.5381/jot.2009.8.5.c5
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Baader F, 2003, DESCRIPTION LOGIC HANDBOOK: THEORY, IMPLEMENTATION AND APPLICATIONS, P43
   Bagheri E, 2012, AUTOMAT SOFTW ENG, V19, P335, DOI 10.1007/s10515-011-0099-7
   Bagheri E, 2011, SOFTWARE QUAL J, V19, P579, DOI 10.1007/s11219-010-9127-2
   Becan G, 2013, RT0441 INRIA
   Becan G, 2014, SPLC 14
   Becan Guillaume, 2014, P 29 ACM IEEE INT C, P433
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Berger T, 2013, IEEE T SOFTWARE ENG, V39, P1611, DOI 10.1109/TSE.2013.34
   Boucher Q, 2012, PLEASE 12 INT WORKSH
   Budanitsky A, 2006, COMPUT LINGUIST, V32, P13, DOI 10.1162/coli.2006.32.1.13
   CAMERINI PM, 1979, NETWORKS, V9, P309, DOI 10.1002/net.3230090403
   Chen K, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P31
   Classen A., 2010, ICSE 10, V1, P335, DOI DOI 10.1145/1806799.1806850
   Classen A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P321, DOI 10.1145/1985793.1985838
   Cordy M, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P472, DOI 10.1109/ICSE.2013.6606593
   Czarnecki K., 2006, GPCE, P211
   Czarnecki K, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P22, DOI 10.1109/SPLC.2008.49
   Czarnecki K, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P23, DOI 10.1109/SPLINE.2007.24
   Czarnecki K, 2006, SPLC 2006: 10TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P41, DOI 10.1109/SPLINE.2006.1691576
   Davril J. -M., 2013, ESEC FSE 13
   Dietrich C., 2012, Em: Proceedings of the 16th International Software Product Line Conference-Volume, V1, P21
   Fan SF, 2006, LECT NOTES ARTIF INT, V4252, P1144
   Ferrari A., 2013, Proceedings of the 17th International Software Product Line Conference, P116, DOI [10.1145/2491627.2491634, DOI 10.1145/2491627.2491634]
   GRUBER TR, 1993, KNOWL ACQUIS, V5, P199, DOI 10.1006/knac.1993.1008
   Hariri N, 2013, IEEE T SOFTW ENG
   Haslinger E. N., 2011, 2011 18th Working Conference on Reverse Engineering, P308, DOI 10.1109/WCRE.2011.45
   Haslinger EN, 2013, LECT NOTES COMPUT SC, V7793, P53, DOI 10.1007/978-3-642-37057-1_5
   Heidenreich F, 2010, LECT NOTES COMPUT SC, V6210, P69
   Heule MJH, 2011, LECT NOTES COMPUT SC, V6695, P201
   Hubaux A, 2013, SEPARATING CONCERNS, V45, P51
   Hubaux A, 2013, ACM COMPUT SURV, V45, DOI 10.1145/2501654.2501665
   Janota M, 2008, LECT NOTES COMPUT SC, V5301, P431, DOI 10.1007/978-3-540-87875-9_31
   Kästner C, 2014, IEEE T SOFTWARE ENG, V40, P67, DOI 10.1109/TSE.2013.45
   Kang KC, 2002, IEEE SOFTWARE, V19, P58, DOI 10.1109/MS.2002.1020288
   Li Yi, 2012, 2012 IEEE 20th International Requirements Engineering Conference (RE 2012), P141, DOI 10.1109/RE.2012.6345798
   Lopez-Herrejon Roberto Erick, 2012, Search Based Software Engineering. Proceedings of the 4th International Symposium (SSBSE 2012), P168, DOI 10.1007/978-3-642-33119-0_13
   Lopez-Herrejon RE, 2015, J SYST SOFTWARE, V103, P353, DOI 10.1016/j.jss.2014.10.037
   Medelyan O, 2009, INT J HUM-COMPUT ST, V67, P716, DOI 10.1016/j.ijhcs.2009.05.004
   Mendonca M, 2009, OOPSLA 09 COMPANION
   Mendonca Marcilio, 2009, SPLC' 09, P231
   Metzger A, 2007, INT REQUIR ENG CONF, P243, DOI 10.1109/RE.2007.61
   MILLER GA, 1995, COMMUN ACM, V38, P39, DOI 10.1145/219717.219748
   Milne D., 2007, NZ COMP SCI RES STUD
   Milne D, 2013, ARTIF INTELL, V194, P222, DOI 10.1016/j.artint.2012.06.007
   Mussbacher G, 2012, SOFTWARE QUAL J, V20, P645, DOI 10.1007/s11219-011-9153-8
   Niu N, 2009, AOSD'09: 8TH INTERNATIONAL CONFERENCE ON ASPECT-ORIENTED SOFTWARE DEVELOPMENT, P137
   Pleuss Andreas, 2012, International Journal on Software Tools for Technology Transfer, V14, P497, DOI 10.1007/s10009-012-0252-z
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Pohl Richard, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P313, DOI 10.1109/ASE.2011.6100068
   Pohl R, 2013, ASE 13 PURE VARIANTS
   Rabkin A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P131, DOI 10.1145/1985793.1985812
   Rubin J, 2013, DOMAIN ENG PRODUCT L
   Rubin J, 2012, IEEE INT CONF AUTOM, P242, DOI 10.1145/2351676.2351712
   Ryssel U., 2011, P INT SOFTW PROD LIN, V2, P1, DOI [DOI 10.1145/2019136.2019141, 10.1145/2019136.2019141]
   Sannier N., 2013, ASE 13
   Sayyad AS, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P492, DOI 10.1109/ICSE.2013.6606595
   Schobbens PY, 2007, COMPUT NETW, V51, P456, DOI 10.1016/j.comnet.2006.08.008
   She S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P461, DOI 10.1145/1985793.1985856
   SMITH TF, 1981, J MOL BIOL, V147, P195, DOI 10.1016/0022-2836(81)90087-5
   TARJAN RE, 1977, NETWORKS, V7, P25, DOI 10.1002/net.3230070103
   Thaker Sahil., 2007, P 6 INT C GENERATIVE, P95
   Thüm T, 2009, PROC INT CONF SOFTW, P254, DOI 10.1109/ICSE.2009.5070526
   Thum T., 2012, SCI COMPUT PROGRAM, V79, P70
   Vacchi E, 2014, 18 INT SOFTW PROD LI
   Valente MT, 2012, IEEE T SOFTWARE ENG, V38, P737, DOI 10.1109/TSE.2011.57
   WAGNER RA, 1974, J ACM, V21, P168, DOI 10.1145/321796.321811
   Wang HH, 2007, J WEB SEMANT, V5, P117, DOI 10.1016/j.websem.2006.11.006
   WESTON N., 2009, P 13 INT SOFTWARE PR, P211
   WU ZB, 1994, 32ND ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, P133
   Wulf-Hadash O., 2013, VAMOS 13, P21
NR 92
TC 15
Z9 15
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2016
VL 21
IS 4
BP 1794
EP 1841
DI 10.1007/s10664-014-9357-1
PG 48
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DQ2VF
UT WOS:000379060700011
DA 2024-07-18
ER

PT J
AU DiGiuseppe, N
   Jones, JA
AF DiGiuseppe, Nicholas
   Jones, James A.
TI Fault density, fault types, and spectra-based fault localization
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Debugging; Fault localization; Fault behavior
AB This paper presents multiple empirical experiments that investigate the impact of fault quantity and fault type on statistical, coverage-based fault localization techniques and fault-localization interference. Fault-localization interference is a phenomenon revealed in earlier studies of coverage-based fault localization that causes faults to obstruct, or interfere, with other faults' ability to be localized. Previously, it had been asserted that a fault-localization technique's effectiveness was negatively correlated to the quantity of faults in the program. To investigate these beliefs, we conducted an experiment on six programs consisting of more than 72,000 multiple-fault versions. Our data suggests that the impact of multiple faults exerts a significant, but slight influence on fault-localization effectiveness. In addition, faults were categorized according to four existing fault-taxonomies and found no correlation between fault type and fault-localization interference. In general, even in the presence of many faults, at least one fault was found by fault localization with similar effectiveness. Additionally, our data exhibits that fault-localization interference is prevalent and exerts a meaningful influence that may cause a fault's localizability to vary greatly. Because almost all real-world software contains multiple faults, these results affect the practical use and understanding of statistical fault-localization techniques.
C1 [DiGiuseppe, Nicholas; Jones, James A.] Univ Calif Irvine, Irvine, CA 92697 USA.
C3 University of California System; University of California Irvine
RP DiGiuseppe, N (corresponding author), Univ Calif Irvine, Irvine, CA 92697 USA.
EM nicholas.digiuseppe@uci.edu; jajones@uci.edu
FU National Science Foundation [CCF-1116943, DGE-0808392]; Division of
   Computing and Communication Foundations; Direct For Computer & Info Scie
   & Enginr [1116943] Funding Source: National Science Foundation
FX This material is based upon work supported by the National Science
   Foundation, through Award CCF-1116943 and through Graduate Research
   Fellowship under Grant No. DGE-0808392.
CR Abreu R, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P89, DOI 10.1109/TAIC.PART.2007.13
   Ali S, 2009, IEEE INT CONF AUTOM, P76, DOI 10.1109/ASE.2009.89
   [Anonymous], 2009, UTDCS45 U TEX DALL
   [Anonymous], 2012, SIGSOFT FSE
   [Anonymous], THESIS GEORGIA I TEC
   [Anonymous], 1998, TESTING OBJECT ORIEN
   [Anonymous], 2010, ICSE
   Clark S. R., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P213, DOI 10.1109/ASE.2011.6100056
   Cleve H, 2005, PROC INT CONF SOFTW, P342
   Debroy Vidroha, 2009, 2009 20th International Symposium on Software Reliability Engineering (ISSRE 2009), P165, DOI 10.1109/ISSRE.2009.14
   Denmat T., 2005, Data mining and cross-checking of execution traces: a re-interpretation of jones, harrold and stasko test information
   Dickinson W., 2001, P INT C SOFTW ENG
   DiGiuseppe N., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P191, DOI 10.1109/ICST.2012.99
   DiGiuseppe N., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P3, DOI 10.1109/ICSM.2011.6080767
   DiGiuseppe N., 2011, P 20 INT S SOFTW TES, P210, DOI DOI 10.1145/2001420.2001446
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Hayes J. H., 1994, Object-Oriented Methodologies and Systems. International Symposium, ISOOMS'94 Proceedings, P205
   Hayes JH, 2011, SOFTW TEST VERIF REL, V21, P299, DOI 10.1002/stvr.426
   Jones J A., 2007, Debugging in parallel, P16
   Jones J.A., 2005, P 20 IEEE ACM INT C, P273, DOI [10.1145/1101908.1101949, DOI 10.1145/1101908.1101949]
   Jones JA, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P467, DOI 10.1109/ICSE.2002.1007991
   Liblit B, 2005, ACM SIGPLAN NOTICES, V40, P15, DOI 10.1145/1064978.1065014
   Liu C, 2006, P 14 ACM SIGSOFT INT, P46
   Liu C., 2005, P EUR SOFTW ENG C HE, V30, P286
   Offutt A. J., 1996, ACM Transactions on Software Engineering and Methodology, V5, P99, DOI 10.1145/227607.227610
   Parnin C., 2011, P 2011 INT S SOFTWAR, P199, DOI [10.1145/2001420.2001445, DOI 10.1145/2001420.2001445]
   Podgurski A, 2003, PROC INT CONF SOFTW, P465, DOI 10.1109/ICSE.2003.1201224
   Renieris M, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P30, DOI 10.1109/ASE.2003.1240292
   Santelices R, 2009, PROC INT CONF SOFTW, P56, DOI 10.1109/ICSE.2009.5070508
   SMITH MD, 1992, J OBJECT-ORIENT PROG, V5, P45
   Srivastav Maneesha, 2010, Proceedings Second International Conference on Computer Research and Development (ICCRD 2010), P223, DOI 10.1109/ICCRD.2010.14
   VESSEY I, 1985, INT J MAN MACH STUD, V23, P459, DOI 10.1016/S0020-7373(85)80054-7
   VOAS JM, 1992, IEEE T SOFTWARE ENG, V18, P717, DOI 10.1109/32.153381
   Yu YB, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P201, DOI 10.1145/1368088.1368116
   Zeller A, 2009, WHY PROGRAMS FAIL: A GUIDE TO SYSTEMATIC DEBUGGING, 2ND EDITION
   Zeller A., 2002, Software Engineering Notes, V27, P1, DOI 10.1145/605466.605468
   Zheng Alice X., 2006, INT C MACH LEARN, P1105, DOI DOI 10.1145/1143844.1143983
NR 37
TC 39
Z9 42
U1 8
U2 80
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2015
VL 20
IS 4
BP 928
EP 967
DI 10.1007/s10664-014-9304-1
PG 40
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CJ8MB
UT WOS:000355754500002
DA 2024-07-18
ER

PT J
AU Latorre, R
AF Latorre, Roberto
TI A successful application of a Test-Driven Development strategy in the
   industrial environment
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Test-first design; Acceptance Test-Driven Development (ATDD); Unit
   Test-Driven Development (UTDD); Software engineering process; Software
   quality/SQA; Software construction; Experience report
ID REQUIREMENTS; KNOWLEDGE; QUALITY; TDD
AB Unit Test-Driven Development (UTDD) and Acceptance Test-Driven Development (ATDD) are software development techniques to incrementally develop software where the test cases, unit or acceptance tests respectively, are specified before the functional code. There are little empirical evidences supporting or refuting the utility of these techniques in an industrial context. Just a few case studies can be found in literature within the industrial environment and they show conflicting results (positive, negative and neutral). In this report, we present a successful application of UTDD in combination with ATDD in a commercial project. By successful we mean that the project goals are reached without an extra economic cost. All the UTDD and ATDD implementations are based on the same basic concepts, but they may differ in specific adaptations to each project or team. In the implementation presented here, the business requirements are specified by means of executable acceptance tests, which then are the input of a development process where the functional code is written in response to specific unit tests. Our goal is to share our successful experience in a specific project from an empirical point of view. We highlight the advantages and disadvantages of adopting UTDD and ATDD and identify some conditions that facilitate success. The main conclusions we draw from this project are that ATDD contributes to clearly capture and validate the business requirements, but it requires an extensive cooperation from the customer; and that UTDD has not a significant impact neither on productivity nor on software quality. These results cannot be generalized, but they point out that under some circumstances a test-driven development strategy can be a possible option to take into account by software professionals.
C1 [Latorre, Roberto] Univ Autonoma Madrid, Escuela Politecn Super, Dpto Ingn Informat, E-28049 Madrid, Spain.
   [Latorre, Roberto] NeuroLog Soluc Informat, Madrid 28037, Spain.
C3 Autonomous University of Madrid
RP Latorre, R (corresponding author), Univ Autonoma Madrid, Escuela Politecn Super, Dpto Ingn Informat, E-28049 Madrid, Spain.
EM roberto.latorre@uam.es
RI Latorre, Roberto/F-9436-2012
OI Latorre, Roberto/0000-0003-3835-7905
CR Adzic G., 2011, Specification by Example: How Successful Teams Deliver the Right Software
   Andersson J., 2003, Extreme Programming and Agile Processes in Software Engineering. 4th International Conference, XP 2003. Proceedings (Lecture Notes in Computer Science Vol.2675), P180
   [Anonymous], 2002, Agile software development
   [Anonymous], 2003, ALAN APT SERIES
   [Anonymous], 1996, Pattern oriented software architecture: a system of patters
   [Anonymous], 2004, XP Ser
   [Anonymous], 2003, TEST DRIVEN DEV EXAM
   Astels Dave, 2003, Test-Driven Development: A Practical Guide
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Beck K, 2001, IEEE SOFTWARE, V18, P87, DOI 10.1109/52.951502
   Bhat T., 2006, Proceedings of the 2006 ACM/IEEE International Symposium on Empirical Software Engineering (ISESE '06), P356, DOI [DOI 10.1145/1159733.1159787, 10.1145/1159733.1159787]
   Campbell D.T., 2001, Experimental and quasiexperimental designs for generalized causal inference
   Cao L, 2008, IEEE SOFTWARE, V25, P60, DOI 10.1109/MS.2008.1
   Causevic A., 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P337, DOI 10.1109/ICST.2011.19
   Crispin I, 2006, IEEE SOFTWARE, V23, P70, DOI 10.1109/MS.2006.157
   Damm LO, 2006, J SYST SOFTWARE, V79, P1001, DOI 10.1016/j.jss.2005.10.015
   Dustin E., 1999, AUTOMATED SOFTWARE T
   Erdogmus H, 2005, IEEE T SOFTWARE ENG, V31, P226, DOI 10.1109/TSE.2005.37
   Erdogmus Hakan, 2010, Encyclopedia of Software Engineering, P1211
   Ficco Massimo, 2011, Advances in Software Engineering, DOI 10.1155/2011/492757
   Flohr T, 2006, LECT NOTES COMPUT SC, V4034, P305
   Gartner M., 2012, ATDD EXAMPLE PRACTIC
   George B., 2003, Proc. of the ACM SAC 2003. SAC 03, P1135, DOI [DOI 10.1145/952532.952753, 10.1145/952532.952753$, DOI 10.1145/952532.952753$]
   Gupta Atul, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P285
   Haugset B., 2012, 2012 45th Hawaii International Conference on System Sciences (HICSS), P5289, DOI 10.1109/HICSS.2012.127
   Hendricksons E, 2008, 7 SOFTWARE TESTING A
   Höfer A, 2009, LECT NOTES BUS INF P, V31, P33
   Janzen D, 2005, COMPUTER, V38, P43, DOI 10.1109/MC.2005.314
   Janzen DS, 2008, IEEE SOFTWARE, V25, P77, DOI 10.1109/MS.2008.34
   Janzen DS, 2006, CONF SOFTW ENG EDUC, P141, DOI 10.1109/CSEET.2006.25
   Jeffries R, 2007, IEEE SOFTWARE, V24, P24, DOI 10.1109/MS.2007.75
   Kaufmann R., 2003, Companion of the 18th annual ACM SIGPLAN conference on Object-oriented programming, systems, languages, and applications, P298
   Koskela L., 2007, Test Driven: Practical TDD and Acceptance TDD for Java Developers
   Larman C, 2003, COMPUTER, V36, P47, DOI 10.1109/MC.2003.1204375
   Latorre R, 2005, SOFTWARE PRACT EXPER, V35, P301, DOI 10.1002/spe.636
   Leffingwell D., 2010, Agile Software Requirements: Lean Requirements Practices for Teams, Programs, and the Enterprise
   Madeyski L, 2005, FRONT ARTIF INTEL AP, V130, P113
   Martin R. C., 2008, Clean Code: A Handbook of Agile Software Craftsmanship
   Martin RC, 2007, IEEE SOFTWARE, V24, P32, DOI 10.1109/MS.2007.85
   Maximilien EM, 2003, PROC INT CONF SOFTW, P564, DOI 10.1109/ICSE.2003.1201238
   Muller M. M., 2002, IEE Proceedings-Software, V149, P131, DOI 10.1049/ip-sen:20020540
   Nagappan N, 2008, EMPIR SOFTW ENG, V13, P289, DOI 10.1007/s10664-008-9062-z
   Newkirk J., 2004, Test-driven development in microsoft NET
   Park S, 2009, LECT NOTES BUS INF P, V31, P23
   Pugh K., 2010, Lean-Agile Acceptance Test-Driven-Development
   Rafique Y, 2013, IEEE T SOFTWARE ENG, V39, P835, DOI 10.1109/TSE.2012.28
   Ricca F, 2009, INFORM SOFTWARE TECH, V51, P270, DOI 10.1016/j.infsof.2008.01.007
   Sanchez JC, 2007, AGILE 2007, PROCEEDINGS, P5, DOI 10.1109/AGILE.2007.43
   Williams L, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P34, DOI 10.1109/ISSRE.2003.1251029
NR 49
TC 10
Z9 12
U1 2
U2 25
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2014
VL 19
IS 3
BP 753
EP 773
DI 10.1007/s10664-013-9281-9
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AF0ZA
UT WOS:000334442700010
DA 2024-07-18
ER

PT J
AU Mittas, N
   Angelis, L
AF Mittas, Nikolaos
   Angelis, Lefteris
TI A permutation test based on regression error characteristic curves for
   software cost estimation models
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Cost prediction models; Accuracy measures; Graphical comparison;
   Hypothesis test; Permutation test; REC curves
AB Background Regression Error Characteristic (REC) curves provide a visualization tool, able to characterize graphically the prediction power of alternative predictive models. Due to the benefits of using such a visualization description of the whole distribution of error, REC analysis was recently introduced in software cost estimation to aid the decision of choosing the most appropriate cost estimation model during the management of a forthcoming project.
   Aims Although significant information can be retrieved from a readable graph, REC curves are not able to assess whether the divergences between the alternative error functions can constitute evidence for a statistically significant difference.
   Method In this paper, we propose a graphical procedure that utilizes (a) the process of repetitive permutations and (b) and the maximum vertical deviation between two comparative Regression Error Characteristic curves in order to conduct a hypothesis test for assessing the statistical significance of error functions.
   Results In our case studies, the data used come from software projects and the models compared are cost prediction models. The results clearly showed that the proposed statistical test is necessary in order to assess the significance of the superiority of a prediction model, since it provides an objective criterion for the distances between the REC curves. Moreover, the procedure can be easily applied to any dataset where the objective is the prediction of a response variable of interest and the comparison of alternative prediction techniques in order to select the best strategy.
   Conclusions The proposed hypothesis test, accompanying an informative graphical tool, is more easily interpretable than the conventional parametric and non-parametric statistical procedures. Moreover, it is free from normality assumptions of the error distributions when the samples are small-sized and highly skewed. Finally, the proposed graphical test can be applied to the comparisons of any alternative prediction methods and models and also to any other validation procedure.
C1 [Mittas, Nikolaos; Angelis, Lefteris] Aristotle Univ Thessaloniki, Dept Informat, Thessaloniki 54124, Greece.
C3 Aristotle University of Thessaloniki
RP Angelis, L (corresponding author), Aristotle Univ Thessaloniki, Dept Informat, Thessaloniki 54124, Greece.
EM nmittas@csd.auth.gr; lef@csd.auth.gr
RI Mittas, Nikolaos/AAL-6645-2021
OI Mittas, Nikolaos/0000-0003-3061-7864
CR [Anonymous], 2005, P INT S EMP SOFTW EN
   [Anonymous], 2008, Proceedings of the 4th international workshop on Predictor models in software engineering, DOI [DOI 10.1145/1370788.1370804, 10.1145/1370788.1370804]
   [Anonymous], 2007, NASA93 DATASET
   [Anonymous], 2007, EARLY ESTIMATE CHECK
   Bi J., 2003, P 20 INT C MACH LEAR, P43
   Briand L. C., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P377, DOI 10.1109/ICSE.2000.870428
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   Efron B., 1993, INTRO BOOTSTRAP, VVolume 914, DOI DOI 10.1007/978-1-4899-4541-9
   Egan J.P., 1975, SERIES COGNITION PER
   Fawcett T, 2006, PATTERN RECOGN LETT, V27, P861, DOI 10.1016/j.patrec.2005.10.010
   Good I., 2000, SPRINGER SERIES STAT
   Green D., 1966, SIGNAL DETECTION THE
   *ISBSG, 2007, ISBSG DAT 10
   Jeffery R, 2000, SEVENTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 2001, PROCEEDINGS, P16, DOI 10.1109/METRIC.2001.915512
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Kitchenham B, 2002, J SYST SOFTWARE, V64, P57, DOI 10.1016/S0164-1212(02)00021-3
   Kitchenham B, 2009, P ACM 5 INT C PRED M
   Kitchenham B. A., 2001, IEE Proceedings-Software, V148, P81, DOI 10.1049/ip-sen:20010506
   Kitchenham B. A., 2004, "8th Internation Conference on Empirical Assessment in Software Engineering (EASE 2004)" Workshop - 26th International Conference on Software Engineering, P47, DOI 10.1049/ic:20040398
   Liebchen G. A., 2008, P 4 INT WORKSH PRED, P39, DOI [10.1145/1370788.1370799, DOI 10.1145/1370788.1370799]
   LUSTED LB, 1978, SEMIN NUCL MED, V8, P299, DOI 10.1016/S0001-2998(78)80015-4
   Mendes E, 2008, J SYST SOFTWARE, V81, P673, DOI 10.1016/j.jss.2007.07.044
   METZ CE, 1978, SEMIN NUCL MED, V8, P283, DOI 10.1016/S0001-2998(78)80014-2
   Mittas N, 2010, LSEBA LEAST SQUARES
   Mittas N, 2008, J SYST SOFTWARE, V81, P616, DOI 10.1016/j.jss.2007.07.039
   Mittas N, 2008, INFORM SOFTWARE TECH, V50, P221, DOI 10.1016/j.infsof.2007.04.001
   Mittas N, 2010, J SYST SOFTWARE, V83, P621, DOI 10.1016/j.jss.2009.10.044
   Mittas N, 2008, PROCEEDINGS OF THE 34TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, P433, DOI 10.1109/SEAA.2008.23
   MIYAZAKI Y, 1994, J SYST SOFTWARE, V27, P3, DOI 10.1016/0164-1212(94)90110-4
   Moore D.S., 2003, PRACTICE BUSINESS ST
   Myrtveit I, 2005, IEEE T SOFTWARE ENG, V31, P380, DOI 10.1109/TSE.2005.58
   Obuchowski NA, 2003, RADIOLOGY, V229, P3, DOI 10.1148/radiol.2291010898
   Port D, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P51
   Sheskin David, 2011, Handbook of Parametric and Nonparametric Statistical Procedures
   SIDAK Z, 1967, J AM STAT ASSOC, V62, P626, DOI 10.2307/2283989
   Stensrud E, 1998, FIFTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 1998, PROCEEDINGS, P205, DOI 10.1109/METRIC.1998.731247
   ZWEIG MH, 1993, CLIN CHEM, V39, P561
NR 37
TC 8
Z9 8
U1 0
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2012
VL 17
IS 1-2
SI SI
BP 34
EP 61
DI 10.1007/s10664-011-9177-5
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 893GG
UT WOS:000300343600004
DA 2024-07-18
ER

PT J
AU Posnett, D
   Bird, C
   Dévanbu, P
AF Posnett, Daryl
   Bird, Christian
   Devanbu, Prem
TI An empirical study on the influence of pattern roles on change-proneness
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Design patterns; Empirical software engineering
ID DESIGN PATTERNS
AB Identifying change-prone sections of code can help managers plan and allocate maintenance effort. Design patterns have been used to study change-proneness and are widely believed to support certain kinds of changes, while inhibiting others. Recently, several studies have analyzed recorded changes to classes playing design pattern roles and find that the patterns "folklore" offers a reasonable explanation for the reality: certain pattern roles do seem to be less change-prone than others. We push this analysis on two fronts: first, we deploy W. Pree's metapatterns, which group patterns purely by structure (rather than intent), and argue that metapatterns are a simpler model to explain recent findings by Di Penta et al. (2008). Second, we study the effect of the size of the classes playing the design pattern and metapattern roles. We find that size explains more of the variance in change-proneness than either design pattern or metapattern roles. We also find that both design pattern and metapattern roles were strong determinants of size. We conclude, therefore, that size appears to be a stronger determinant of change-proneness than either design pattern or metapattern roles, and observed differences in change-proneness between roles might be due to differences in the sizes of the classes playing those roles. The size of a class can be found much more quickly, easily and accurately than its pattern-roles. Thus, while identifying design pattern roles may be important for other reasons, as far as identifying change-prone classes, sheer size might be a better indicator.
C1 [Bird, Christian] Empir Software Engn Grp, New York, NY USA.
RP Posnett, D (corresponding author), Univ Calif Davis, Davis, CA 95616 USA.
EM dpposnett@ucdavis.edu; cabird@ucdavis.edu; ptdevanbu@ucdavis.edu
RI /AAZ-7265-2020
OI Devanbu, Prem/0000-0002-4346-5276
CR Aversano Lerina., 2007, PROC THE 6 EUROPEAN, P385, DOI [DOI 10.1145/1287624.1287680, 10.1145/1287624.1287680.]
   BASILI V, 2006, ICSE 06, P32, DOI DOI 10.1145/1134285.1134291
   BENJAMINI Y, 1995, J R STAT SOC B, V57, P289, DOI 10.1111/j.2517-6161.1995.tb02031.x
   Bieman JM, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P40, DOI 10.1109/METRIC.2003.1232454
   Bieman JM, 2001, PROC IEEE INT CONF S, P580, DOI 10.1109/ICSM.2001.972775
   BIRD C, 2009, P INT C SOFTW ENG
   Briand LC, 2002, ADV COMPUT, V56, P97, DOI 10.1016/S0065-2458(02)80005-5
   Brooks C., 2019, INTRO ECONOMETRICS F, DOI DOI 10.1017/CBO9780511841644
   Bruneton E., 2002, Adaptable and extensible component systems, V30
   Burton Swanson E., 1976, Proceedings of International Conference on Software Engineering (ICSE), P492
   Cataldo Marcelo, 2006, P 2006 20 ANNIVERSAR, P353, DOI DOI 10.1145/1180875.1180929
   Cohen J., 2013, APPL MULTIPLE REGRES
   Di Penta M, 2008, PROC IEEE INT CONF S, P217, DOI 10.1109/ICSM.2008.4658070
   Emam KE, 2001, IEEE T SOFTWARE ENG, V27, P630, DOI 10.1109/32.935855
   Fluri B, 2007, IEEE T SOFTWARE ENG, V33, P725, DOI 10.1109/TSE.2007.70731
   Gamma Erich, 1995, DESIGN PATTERNS ELEM
   Guéhéneuc YG, 2008, IEEE T SOFTWARE ENG, V34, P667, DOI 10.1109/TSE.2008.48
   Hayashi S, 2008, IEICE T INF SYST, VE91D, P933, DOI 10.1093/ietisy/e91-d.4.933
   JUSSIEN N, 2000, P TRICS TECHN IMPL C, P118
   Khomh F., 2009, Playing roles in design patterns: An empirical descriptive and analytic study
   Koru AG, 2007, J SYST SOFTWARE, V80, P63, DOI 10.1016/j.jss.2006.05.017
   Lindeman RH, 1980, Introduction to bivariate and multivariate analysis, DOI DOI 10.2307/2287559
   Ng T., 2006, P 14 ACM SIGSOFT INT, P12
   Ng TH, 2007, PROC INT CONF SOFTW, P168
   PERRY D, 2000, EMPIRICAL STUDIES SO, P345
   POSNETT D, 2010, MIN SOFTW REP MSR 20, P122
   Prechelt L, 2001, IEEE T SOFTWARE ENG, V27, P1134, DOI 10.1109/32.988711
   PREE W, 1994, LECT NOTES COMPUTER, V821, P150, DOI DOI 10.1007/BFB0052181.[
   Rosenberg J, 1997, FOURTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P137, DOI 10.1109/METRIC.1997.637174
   *SCI TOOLS, 2010, UND JAV 1 4
   Tourwé T, 2003, PROC IEEE INT CONF S, P148, DOI 10.1109/ICSM.2003.1235416
   TOUTENBURG H, 2002, STAT ANAL DESIGN EXP
   Vokác M, 2004, EMPIR SOFTW ENG, V9, P149, DOI 10.1023/B:EMSE.0000027778.69251.1f
   Zhang HY, 2007, 14TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P230, DOI 10.1109/ASPEC.2007.64
NR 34
TC 16
Z9 17
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2011
VL 16
IS 3
BP 396
EP 423
DI 10.1007/s10664-010-9148-2
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 746NS
UT WOS:000289254600004
OA hybrid
DA 2024-07-18
ER

PT J
AU Budgen, D
   Burn, AJ
   Kitchenham, B
AF Budgen, David
   Burn, Andy J.
   Kitchenham, Barbara
TI Reporting computing projects through structured abstracts: a
   quasi-experiment
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Evidence-based; Systematic literature review; Structured abstract
ID READABILITY
AB Previous work has demonstrated that the use of structured abstracts can lead to greater completeness and clarity of information, making it easier for researchers to extract information about a study. In academic year 2007/08, Durham University's Computer Science Department revised the format of the project report that final year students were required to write, from a 'traditional dissertation' format, using a conventional abstract, to that of a 20-page technical paper, together with a structured abstract. This study set out to determine whether inexperienced authors (students writing their final project reports for computing topics) find it easier to produce good abstracts, in terms of completeness and clarity, when using a structured form rather than a conventional form. We performed a controlled quasi-experiment in which a set of 'judges' each assessed one conventional and one structured abstract for its completeness and clarity. These abstracts were drawn from those produced by four cohorts of final year students: two preceding the change, and the two following. The assessments were performed using a form of checklist that is similar to those used for previous experimental studies. We used 40 abstracts (10 per cohort) and 20 student 'judges' to perform the evaluation. Scored on a scale of 0.1-1.0, the mean for completeness increased from 0.37 to 0.61 when using a structured form. For clarity, using a scale of 1-10, the mean score increased from 5.1 to 7.2. For a minimum goal of scoring 50% for both completeness and clarity, only 3 from 19 conventional abstracts achieved this level, while only 3 from 20 structured abstracts failed to reach it. We conclude that the use of a structured form for organising the material of an abstract can assist inexperienced authors with writing technical abstracts that are clearer and more complete than those produced without the framework provided by such a mechanism.
C1 [Budgen, David; Burn, Andy J.] Univ Durham, Sch Engn & Comp Sci, Durham DH1 3LE, England.
   [Kitchenham, Barbara] Univ Keele, Sch Comp & Maths, Keele ST5 5BG, Staffs, England.
C3 Durham University; Keele University
RP Budgen, D (corresponding author), Univ Durham, Sch Engn & Comp Sci, Durham DH1 3LE, England.
EM david.budgen@durham.ac.uk; a.j.burn@durham.ac.uk;
   b.a.kitchenham@cs.keele.ac.uk
RI Kitchenham, Barbara/AAL-4311-2020
OI Kitchenham, Barbara/0000-0002-6134-8460; Budgen,
   David/0000-0001-7143-0241
FU UK's Engineering & Physical Sciences Research Council (EPSRC); EPSRC
   [EP/E046983/1] Funding Source: UKRI
FX This work was performed as part of the EPIC (Evidence-based Practices
   Informing Computing) project, funded by the UK's Engineering & Physical
   Sciences Research Council (EPSRC). We would like to thank those students
   who took part in the study as judges, the anonymous referees for their
   helpful comments and suggestions and Professor Jim Hartley of Keele
   University for his advice about structured abstracts.
CR [Anonymous], 2003, HYPOTHESIS
   Berkenkotter C., 1995, Genre Knowledge in Disciplinary Communication: Cognition/Culture/Power, P27
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   BUDGEN D, 2007, EASE 2007, P64
   Budgen D, 2008, EMPIR SOFTW ENG, V13, P435, DOI 10.1007/s10664-008-9075-7
   Dixon-Woods Mary, 2005, J Health Serv Res Policy, V10, P45, DOI 10.1258/1355819052801804
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Flesch R, 1948, J APPL PSYCHOL, V32, P221, DOI 10.1037/h0057532
   Glass RL, 2004, COMMUN ACM, V47, P89, DOI 10.1145/990680.990686
   Gunning R, 1952, TECHNIQUE CLEAR WRIT
   Hartley J, 2004, J MED LIBR ASSOC, V92, P368
   Hartley J, 2003, SCI COMMUN, V24, P366, DOI 10.1177/1075547002250301
   Hartley J, 2002, J INF SCI, V28, P417
   Hartley J, 1998, BRIT J EDUC PSYCHOL, V68, P443, DOI 10.1111/j.2044-8279.1998.tb01303.x
   Hartley J., 1997, Journal of Research in Reading, V20, P122, DOI DOI 10.1111/1467-9817.00025
   HARTLEY J, 2005, PSYCHOL TEACHING REV, V11, P2
   Hartley J, 2009, J AM SOC INF SCI TEC, V60, P2010, DOI 10.1002/asi.21102
   Jedlitschka A, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P92, DOI 10.1109/ISESE.2005.1541818
   Jedlitschka A., 2008, Guide to advanced empirical software engineering, P201, DOI DOI 10.1007/978-1-84800-044-5_8
   Kitchenham B., 2007, Joint Report
   Kitchenham B., 2004, Procedures for undertaking systematic reviews
   Kitchenham BA, 2008, IET SOFTW, V2, P37, DOI 10.1049/iet-sen:20070044
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Petersen K, 2008, P INT C EV ASS SOFTW, P1
   Sharma S, 2006, AM J ORTHOD DENTOFAC, V130, P523, DOI 10.1016/j.ajodo.2005.10.023
   Shaw M, 2003, PROC INT CONF SOFTW, P726, DOI 10.1109/ICSE.2003.1201262
   VANDERTOL M, 2001, DOCUMENT DESIGN, V2, P76
   Webster J, 2002, MIS QUART, V26, pXIII
NR 28
TC 12
Z9 14
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2011
VL 16
IS 2
BP 244
EP 277
DI 10.1007/s10664-010-9139-3
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 732VM
UT WOS:000288217800003
DA 2024-07-18
ER

PT J
AU Kpodjedo, S
   Ricca, F
   Galinier, P
   Guéhéneuc, YG
   Antoniol, G
AF Kpodjedo, Segla
   Ricca, Filippo
   Galinier, Philippe
   Gueheneuc, Yann-Gael
   Antoniol, Giuliano
TI Design evolution metrics for defect prediction in object oriented
   systems
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Defect prediction; Design evolution metrics; Error tolerant graph
   matching
ID CODE CHURN; SOFTWARE; VALIDATION; FAULTS
AB Testing is the most widely adopted practice to ensure software quality. However, this activity is often a compromise between the available resources and software quality. In object-oriented development, testing effort should be focused on defective classes. Unfortunately, identifying those classes is a challenging and difficult activity on which many metrics, techniques, and models have been tried. In this paper, we investigate the usefulness of elementary design evolution metrics to identify defective classes. The metrics include the numbers of added, deleted, and modified attributes, methods, and relations. The metrics are used to recommend a ranked list of classes likely to contain defects for a system. They are compared to Chidamber and Kemerer's metrics on several versions of Rhino and of ArgoUML. Further comparison is conducted with the complexity metrics computed by Zimmermann et al. on several releases of Eclipse. The comparisons are made according to three criteria: presence of defects, number of defects, and defect density in the top-ranked classes. They show that the design evolution metrics, when used in conjunction with known metrics, improve the identification of defective classes. In addition, they show that the design evolution metrics make significantly better predictions of defect density than other metrics and, thus, can help in reducing the testing effort by focusing test activity on a reduced volume of code.
C1 [Kpodjedo, Segla; Gueheneuc, Yann-Gael] Ecole Polytech Montreal, DGIGL, SOCCER Lab, Dept Comp & Software Engn, Quebec City, PQ, Canada.
   [Ricca, Filippo] Univ Genoa, DISI, Software Engn Grp, Dept Informat & Comp Sci, Genoa, Italy.
C3 Universite de Montreal; Polytechnique Montreal; University of Genoa
RP Kpodjedo, S (corresponding author), Ecole Polytech Montreal, DGIGL, SOCCER Lab, Dept Comp & Software Engn, Quebec City, PQ, Canada.
EM segla.kpodjedo@polymtl.ca; filippo.ricca@disi.unige.it;
   philippe.galinier@polymtl.ca; yann-gael.gueheneuc@polymtl.ca;
   antoniol@ieee.org
RI Ricca, Filippo/ABB-3276-2020; Guéhéneuc, Yann-Gaël/K-9371-2019
FU Natural Sciences and Engineering Research Council of Canada; G. Antoniol
   Individual Discovery Grant
FX This research was partially supported by the Natural Sciences and
   Engineering Research Council of Canada (Research Chairs in Software
   Evolution and in Software Patterns and Patterns of Software) and by G.
   Antoniol Individual Discovery Grant.
CR [Anonymous], 1997, Software metrics: A rigorous and practical approach
   [Anonymous], 1988, STAT POWER ANAL BEHA
   AYARI K, 2007, IBM CTR ADV STUD C T, P215
   Basili V., 1994, The Goal Question Metric Approach, P528
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Bird Christian., 2009, ESEC/SIGSOFT FSE, P121, DOI DOI 10.1145/1595696.1595716
   Briand L. C., 1998, Empirical Software Engineering, V3, P65, DOI 10.1023/A:1009783721306
   Briand LC, 2003, IEEE T SOFTWARE ENG, V29, P594, DOI 10.1109/TSE.2003.1214324
   Briand LC, 2002, IEEE T SOFTWARE ENG, V28, P706, DOI 10.1109/TSE.2002.1019484
   Cartwright M, 2000, IEEE T SOFTWARE ENG, V26, P786, DOI 10.1109/32.879814
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Eaddy M, 2008, IEEE T SOFTWARE ENG, V34, P497, DOI 10.1109/TSE.2008.36
   *ECMA, 2007, ECMA262V3
   Emam KE, 2001, IEEE T SOFTWARE ENG, V27, P630, DOI 10.1109/32.935855
   Evanco WM, 1997, J SYST SOFTWARE, V38, P27, DOI 10.1016/S0164-1212(97)00063-0
   GLOVER F, 1986, COMPUT OPER RES, V13, P533, DOI 10.1016/0305-0548(86)90048-1
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   GRINDAL JOM, 2006, P TEST AC IND C PRAC, P171
   Guéhéneuc YG, 2008, IEEE T SOFTWARE ENG, V34, P667, DOI 10.1109/TSE.2008.48
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Hosmer W., 2000, Applied Logistic Regression, VSecond
   Kpodjedo S, 2013, J SOFTW-EVOL PROC, V25, P139, DOI 10.1002/smr.519
   Kpodjedo S, 2008, WORK CONF REVERSE EN, P289, DOI 10.1109/WCRE.2008.48
   Kpodjedo S, 2009, 1ST INTERNATIONAL SYMPOSIUM ON SEARCH BASED SOFTWARE ENGINEERING, PROCEEDINGS, P23, DOI 10.1109/SSBSE.2009.24
   MOSER GSR, 2008, ICSE, P181
   Munson JC, 1998, PROC IEEE INT CONF S, P24, DOI 10.1109/ICSM.1998.738486
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   Page L., 1999, PAGERANK CITATION RA
   TSAI WH, 1979, IEEE T SYST MAN CYB, V9, P757, DOI 10.1109/TSMC.1979.4310127
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Zimmermann T., 2007, P ICSE 2007 WORK 3 I, DOI [10.1109/PROMISE.2007.10, DOI 10.1109/PROMISE.2007.10]
NR 33
TC 27
Z9 32
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2011
VL 16
IS 1
BP 141
EP 175
DI 10.1007/s10664-010-9151-7
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 718CJ
UT WOS:000287097200006
DA 2024-07-18
ER

PT J
AU Zheng, ZB
   Lyu, MR
AF Zheng, Zibin
   Lyu, Michael R.
TI An adaptive QoS-aware fault tolerance strategy for web services
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 19th International Symposium on Software Reliability Engineering
CY 2008
CL Microsoft Campus, Redmond, WA
HO Microsoft Campus
DE Web service; Fault tolerance; QoS; Middleware
C1 [Zheng, Zibin; Lyu, Michael R.] Chinese Univ Hong Kong, Dept Comp Sci & Engn, Hong Kong, Hong Kong, Peoples R China.
C3 Chinese University of Hong Kong
RP Zheng, ZB (corresponding author), Chinese Univ Hong Kong, Dept Comp Sci & Engn, Hong Kong, Hong Kong, Peoples R China.
EM zbzheng@cse.cuhk.edu.hk; lyu@cse.cuhk.edu.hk
RI Zheng, Zibin/E-3024-2014
OI Zheng, Zibin/0000-0002-7878-4330
CR [Anonymous], 2006, 15 INT C WORLD WID W
   [Anonymous], 1996, HDB SOFTWARE RELIABI
   [Anonymous], 2008, Axis2
   [Anonymous], ELECT COMMERCE RES
   Ardagna D, 2007, IEEE T SOFTWARE ENG, V33, P369, DOI 10.1109/TSE.2007.1011.
   Avizienis A., 1995, The methodology of n-version programming, P23
   BENATALLAH B, 2002, P 18 INT C DAT ENG I
   BRAM C, 2003, P 1 WORKSH EC PEER T, P1
   Chan PW, 2007, 2007 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P679
   CHEN X, 2003, 6 INT S AUT DEC SYST, P107
   Deora V, 2003, LECT NOTES COMPUT SC, V2910, P104
   Fang CL, 2007, J SYST ARCHITECT, V53, P21, DOI 10.1016/j.sysarc.2006.06.001
   Foster H., 2003, MODEL BASED VERIFICA
   Jaeger MC, 2004, EIGHTH IEEE INTERNATIONAL ENTERPRISE DISTRIBUTED OBJECT COMPUTING CONFERENCE, PROCEEDINGS, P149, DOI 10.1109/EDOC.2004.1342512
   Kavianpour M, 2007, LECT NOTES COMPUT SC, V4749, P530
   Keller A., 2002, IBM Research Division
   LEU DR, 1990, IEEE T RELIAB, V39, P209, DOI 10.1109/24.55884
   LOOKER N, 2003, P 9 INT WORKSH OBJ O
   Lyu M. R., 1995, TRENDS SOFTWARE
   Maximilien IM, 2002, SIGMOD REC, V31, P36, DOI 10.1145/637411.637417
   Menascé DA, 2002, IEEE INTERNET COMPUT, V6, P72, DOI 10.1109/MIC.2002.1067740
   Merideth MG, 2005, 24TH IEEE SYMPOSIUM ON RELIABLE DISTRIBUTED SYSTEMS, PROCEEDINGS, P131, DOI 10.1109/RELDIS.2005.28
   O'Sullivan J, 2002, DISTRIB PARALLEL DAT, V12, P117, DOI 10.1023/A:1016547000822
   Ouzzani M, 2004, IEEE INTERNET COMPUT, V8, P34
   Randell Brian., 1995, SOFTWARE FAULT TOLER, P1
   Sahai Akhil., 2002, AUTOMATED SLA MANAGE
   Salatge N, 2007, I C DEPEND SYS NETWO, P51, DOI 10.1109/DSN.2007.48
   Santos GT, 2005, NINTH IEEE INTERNATIONAL EDOC ENTERPRISE COMPUTING CONFERENCE, PROCEEDINGS, P95, DOI 10.1109/EDOC.2005.15
   Sheu GW, 1997, INT CON DISTR COMP S, P393, DOI 10.1109/ICDCS.1997.598073
   Thio N, 2005, 2005 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P202, DOI 10.1109/ASWEC.2005.16
   Tsai WT, 2003, IEICE T INF SYST, VE86D, P2130
   Vieira M, 2007, I C DEPEND SYS NETWO, P131, DOI 10.1109/DSN.2007.16
   Wu GQ, 2007, P IEEE I C SERV COMP, P498, DOI 10.1109/NANO.2007.4601240
   Wu J, 2005, P IEEE I C SERV COMP, P287
   Zeng LZ, 2004, IEEE T SOFTWARE ENG, V30, P311, DOI 10.1109/TSE.2004.11
   Zheng WJ, 2009, PROC INT CONF SOFTW, P219, DOI 10.1109/ICSE-COMPANION.2009.5070986
   ZHENG Z, 2008, P INT S SOFTW REL EN, P97
   ZHENG Z, 2008, P 6 INT C WEB SERV I, P145
   Zheng ZB, 2009, 2009 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, VOLS 1 AND 2, P437, DOI 10.1109/ICWS.2009.30
   Zheng ZB, 2009, I C DEPEND SYS NETWO, P239, DOI 10.1109/DSN.2009.5270332
   [No title captured]
   [No title captured]
NR 42
TC 38
Z9 44
U1 0
U2 10
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2010
VL 15
IS 4
BP 323
EP 345
DI 10.1007/s10664-009-9126-8
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 593EN
UT WOS:000277435500002
DA 2024-07-18
ER

PT J
AU Gokhale, SS
   Mullen, RE
AF Gokhale, Swapna S.
   Mullen, Robert E.
TI A multiplicative model of software defect repair times
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software defect repair; Lognormal; Multiplicative effect
ID REMOVAL
AB We hypothesize that software defect repair times can be characterized by the Laplace Transform of the Lognormal (LTLN) distribution. This hypothesis is rooted in the observation that software defect repair times are influenced by the multiplicative interplay of several factors, and the lognormal distribution is a natural choice to model rates of occurrence of such phenomenon. Conversion of the lognormal rate distribution to an occurrence time distribution yields the LTLN. We analyzed a total of more than 10,000 software defect repair times collected over nine products at Cisco Systems to confirm our LTLN hypothesis. Our results also demonstrate that the LTLN distribution provides a statistically better fit to the observed repair times than either of the two most widely used repair time distributions, namely, the lognormal and the exponential. Moreover, we show that the repair times of subsets of defects, partitioned according to the Orthogonal Defect Classification (ODC) scheme also follow the LTLN distribution. Finally, we describe how the insights that lead to the LTLN repair time model allow us to consider and evaluate alternative process improvement strategies.
C1 [Gokhale, Swapna S.] Univ Connecticut, Dept Comp Sci & Engn, Storrs, CT 06269 USA.
   [Mullen, Robert E.] Cisco Syst, Corp Qual Metr, Boxboro, MA 01719 USA.
C3 University of Connecticut; Cisco Systems Inc
RP Gokhale, SS (corresponding author), Univ Connecticut, Dept Comp Sci & Engn, Storrs, CT 06269 USA.
EM ssg@engr.uconn.edu; bomullen@cisco.com
FU National Science Foundation [CNS-064371]
FX We thank Cisco management, especially David Hsiao, for their support.
   The research at the Univ. of Connecticut was supported in part by a
   CAREER award from the National Science Foundation (# CNS-064371). We
   also thank the anonymous reviewers for their insightful comments and
   suggestions.
CR Aitchison J., 1969, LOGNORMAL DISTRIBUTI
   AKAIKE H, 1982, 2397 NTIS
   [Anonymous], E HDB STAT METH
   Bishop PG, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P237, DOI 10.1109/ISSRE.2003.1251046
   BOEHM B, 1981, SOFTWARE COST ESTIMA
   Boehm BW., 1981, Software Engineering Economics
   Chillarege R., 1996, Orthogonal Defect Classification
   Crow E., 1988, LOGNORMAL DISTRIBUTI
   DALAL SR, 1990, IEEE J SEL AREA COMM, V8, P169, DOI 10.1109/49.46868
   Gibson Garth A., 2006, P INT C DEP SYST NET, P10
   GOKHALE S, 2008, P PRED MOD SOFTW ENG
   GOKHALE S, 2006, P INT S SOFTW REL EN
   Gokhale SS, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P295, DOI 10.1109/ISSRE.2004.20
   Gokhale SS, 2004, SOFTWARE QUAL J, V12, P211, DOI 10.1023/B:SQJO.0000034709.63615.8b
   Gokhale SS, 2006, IEEE T RELIAB, V55, P281, DOI 10.1109/TR.2006.874911
   Hewett R, 2009, EMPIR SOFTW ENG, V14, P165, DOI 10.1007/s10664-008-9064-x
   Johnson N., 1994, Continuous Univariate Distributions
   KEYES J, 2003, SOFTWARE ENG HDB
   KREMER W, 1983, IEEE T RELIAB, V32, P37, DOI 10.1109/TR.1983.5221472
   LEVENDEL Y, 1990, IEEE T SOFTWARE ENG, V16, P141, DOI 10.1109/32.44378
   LOEVE M., 2017, Probability theory
   MILLER DR, 1985, 3909 NASA NTIS
   Mullen RE, 1998, NINTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P124, DOI 10.1109/ISSRE.1998.730863
   Mullen RE, 1998, NINTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P134, DOI 10.1109/ISSRE.1998.730872
   MULLEN RE, 2006, P INT S SOFTW REL EN
   Mullen RE, 2005, 16TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P203, DOI 10.1109/ISSRE.2005.37
   Patel J.K., 1996, Handbook of the normal distribution
   Petrov V.V., 1975, Sums of independent random variables
   Sakamoto Y., 1986, AKAIKE INFORM CRITER, DOI DOI 10.1080/01621459.1988.10478680
   Schneidewind NF, 2002, PROC IEEE INT CONF S, P238, DOI 10.1109/ICSM.2002.1167772
   Stutzke MA, 2001, IEEE T RELIAB, V50, P184, DOI 10.1109/24.963126
   Weiss C, 2007, P 4 INT WORKSH MIN S, P1, DOI [10.1109/MSR.2007.13, DOI 10.1109/MSR.2007.13]
NR 32
TC 8
Z9 9
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2010
VL 15
IS 3
BP 296
EP 319
DI 10.1007/s10664-009-9115-y
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 580WD
UT WOS:000276480300004
DA 2024-07-18
ER

PT J
AU Li, YF
   Xie, M
   Goh, TN
AF Li, Y. F.
   Xie, M.
   Goh, T. N.
TI A study of the non-linear adjustment for analogy based software cost
   estimation
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software cost estimation; Analogy based estimation; Case based
   reasoning; Non-linear adjustment; Artificial neural network; Artificial
   datasets
ID EFFORT PREDICTION; NEURAL-NETWORK; MISSING DATA; DATA SETS; IMPUTATION;
   MODELS; REGRESSION; WEIGHTS
AB Cost estimation is one of the most important but most difficult tasks in software project management. Many methods have been proposed for software cost estimation. Analogy Based Estimation (ABE), which is essentially a case-based reasoning (CBR) approach, is one popular technique. To improve the accuracy of ABE method, several studies have been focusing on the adjustments to the original solutions. However, most published adjustment mechanisms are based on linear forms and are restricted to numerical type of project features. On the other hand, software project datasets often exhibit non-normal characteristics with large proportions of categorical features. To explore the possibilities for a better adjustment mechanism, this paper proposes Artificial Neural Network (ANN) for Non-linear adjustment to ABE (NABE) with the learning ability to approximate complex relationships and incorporating the categorical features. The proposed NABE is validated on four real world datasets and compared against the linear adjusted ABEs, CART, ANN and SWR. Subsequently, eight artificial datasets are generated for a systematic investigation on the relationship between model accuracies and dataset properties. The comparisons and analysis show that non-linear adjustment could generally extend ABE's flexibility on complex datasets with large number of categorical features and improve the accuracies of adjustment techniques.
C1 [Li, Y. F.; Xie, M.; Goh, T. N.] Natl Univ Singapore, Dept Ind & Syst Engn, Singapore 119260, Singapore.
C3 National University of Singapore
RP Li, YF (corresponding author), Natl Univ Singapore, Dept Ind & Syst Engn, Singapore 119260, Singapore.
EM liyanfu@nus.edu.sg; isexiem@nus.edu.sg; isegohtn@nus.edu.sg
RI Keung, Jacky/ABA-7089-2020; Li, Yan-Fu/B-6610-2014; Xie,
   Min/IUQ-1412-2023; Xie, Min/A-5552-2011
OI Li, Yan-Fu/0000-0001-5755-7115; Xie, Min/0000-0002-8500-8364
CR ALBRECHT AJ, 1983, IEEE T SOFTWARE ENG, V9, P639, DOI 10.1109/TSE.1983.235271
   Angelis L, 2000, SEVENTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 2001, PROCEEDINGS, P4
   Angelis L., 2000, Empirical Software Engineering, V5, P35, DOI 10.1023/A:1009897800559
   [Anonymous], 1986, Software Engineering Metrics and Models
   [Anonymous], 1989, ANAL STAT PRODUCTIVI
   [Anonymous], 1997, NEURAL NETWORK DESIG
   [Anonymous], 1984, WADSWORTH INC
   [Anonymous], 2002, Applied Statistics for Software Managers
   Auer M, 2006, IEEE T SOFTWARE ENG, V32, P83, DOI 10.1109/TSE.2006.1599418
   Briand L. C., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P313, DOI 10.1109/ICSE.1999.841022
   Burgess CJ, 2001, INFORM SOFTWARE TECH, V43, P863, DOI 10.1016/S0950-5849(01)00192-6
   Cannon AJ, 2007, NEURAL NETWORKS, V20, P444, DOI 10.1016/j.neunet.2007.04.002
   Chang SI, 1999, INT J PROD RES, V37, P1581, DOI 10.1080/002075499191148
   Chiu NH, 2007, J SYST SOFTWARE, V80, P628, DOI 10.1016/j.jss.2006.06.006
   EFRON B, 1983, AM STAT, V37, P36, DOI 10.2307/2685844
   Foss T, 2003, IEEE T SOFTWARE ENG, V29, P985, DOI 10.1109/TSE.2003.1245300
   Gray A, 1997, INFORM SOFTWARE TECH, V39, P425, DOI 10.1016/S0950-5849(96)00006-7
   Guh R.S., 2002, International Journal of Quality Reliability Management, V19, P97
   HARDY RL, 1971, J GEOPHYS RES, V76, P1905, DOI 10.1029/JB076i008p01905
   Heiat A, 2002, INFORM SOFTWARE TECH, V44, P911, DOI 10.1016/S0950-5849(02)00128-3
   Huang SJ, 2006, INFORM SOFTWARE TECH, V48, P1034, DOI 10.1016/j.infsof.2005.12.020
   *ISBSG, 2007, INT SOFTW BENCHM STA
   *ISBSG, 2007, GUID US ISBSE DAT
   Jeffery R, 2000, SEVENTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 2001, PROCEEDINGS, P16, DOI 10.1109/METRIC.2001.915512
   Jönsson P, 2006, EMPIR SOFTW ENG, V11, P463, DOI 10.1007/s10664-006-9001-9
   Jorgensen M, 2005, IEEE T SOFTWARE ENG, V31, P942, DOI 10.1109/TSE.2005.128
   Jorgensen M, 2003, J SYST SOFTWARE, V68, P253, DOI 10.1016/S0164-1212(03)00066-9
   JORGENSEN M, 1995, J SOFTW MAINT-RES PR, V7, P27, DOI 10.1002/smr.4360070104
   Jorgensen M, 2004, J SYST SOFTWARE, V70, P37, DOI 10.1016/S0164-1212(02)00156-5
   Jorgensen M, 2007, INT J FORECASTING, V23, P449, DOI 10.1016/j.ijforecast.2007.05.008
   Jun ES, 2001, EXPERT SYST APPL, V21, P1, DOI 10.1016/S0957-4174(01)00021-5
   Kendall M.K., 1976, The advanced theory of statistics, V1
   KIRSOPP C, 2003, EMPIRICAL ANAL LINEA, P231
   Kitchenham B. A., 2001, IEE Proceedings-Software, V148, P81, DOI 10.1049/ip-sen:20010506
   Kolodner J.L., 1993, Case-Based Reasoning
   Lawrence J., 1994, Introduction to Neural Networks, Design, Theory, and Applications
   Lee JK, 2006, EXPERT SYST APPL, V30, P190, DOI 10.1016/j.eswa.2005.06.021
   Li JZ, 2008, EMPIR SOFTW ENG, V13, P63, DOI 10.1007/s10664-007-9054-4
   Li JZ, 2007, EMPIR SOFTW ENG, V12, P65, DOI 10.1007/s10664-006-7552-4
   LI YF, 2008, J SYST SOFT IN PRESS
   LI YR, 2008, EXPERT SYST IN PRESS
   Liu Q, 2005, SOFTWARE QUAL J, V13, P91, DOI 10.1007/s11219-004-5262-y
   Mair C, 2000, J SYST SOFTWARE, V53, P23, DOI 10.1016/S0164-1212(00)00005-4
   Mendes E, 2003, EMPIR SOFTW ENG, V8, P163, DOI 10.1023/A:1023062629183
   MENDES E, 2001, WEB METRICS ESTIMATI, P50
   Myrtveit I, 2005, IEEE T SOFTWARE ENG, V31, P380, DOI 10.1109/TSE.2005.58
   Myrtveit I, 2001, IEEE T SOFTWARE ENG, V27, P999, DOI 10.1109/32.965340
   Myrtveit I, 1999, IEEE T SOFTWARE ENG, V25, P510, DOI 10.1109/32.799947
   Pendharkar PC, 2005, IEEE T SOFTWARE ENG, V31, P615, DOI 10.1109/TSE.2005.75
   Pickard L., 2001, IEE Proceedings-Software, V148, P165, DOI 10.1049/ip-sen:20010621
   Sentas P, 2006, J SYST SOFTWARE, V79, P404, DOI 10.1016/j.jss.2005.02.026
   Sentas P, 2005, INFORM SOFTWARE TECH, V47, P17, DOI 10.1016/j.infsof.2004.05.001
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   Shepperd M, 2001, IEEE T SOFTWARE ENG, V27, P1014, DOI 10.1109/32.965341
   Song QB, 2007, J SYST SOFTWARE, V80, P51, DOI 10.1016/j.jss.2006.05.003
   SRINIVASAN K, 1995, IEEE T SOFTWARE ENG, V21, P126, DOI 10.1109/32.345828
   Stensrud E, 2003, EMPIR SOFTW ENG, V8, P139, DOI 10.1023/A:1023010612345
   Stensrud E, 2001, INFORM SOFTWARE TECH, V43, P413, DOI 10.1016/S0950-5849(01)00147-1
   Strike K, 2001, IEEE T SOFTWARE ENG, V27, P890, DOI 10.1109/32.962560
   TRONTO IFD, 2007, J SYST SOFT IN PRESS
   van Koten C, 2006, INFORM SOFTWARE TECH, V48, P1056, DOI 10.1016/j.infsof.2006.01.001
   Vapnik V., 1999, NATURE STAT LEARNING
   Walkerden F., 1999, Empirical Software Engineering, V4, P135, DOI 10.1023/A:1009872202035
NR 63
TC 52
Z9 57
U1 0
U2 8
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2009
VL 14
IS 6
BP 603
EP 643
DI 10.1007/s10664-008-9104-6
PG 41
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 495IG
UT WOS:000269883800001
DA 2024-07-18
ER

PT J
AU Kapser, CJ
   Godfrey, MW
AF Kapser, Cory J.
   Godfrey, Michael W.
TI "Cloning considered harmful" considered harmful: patterns of cloning in
   software
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Clone detection; Clone analysis; Reverse engineering; Case study
ID EVOLUTION; CLONES
AB Literature on the topic of code cloning often asserts that duplicating code within a software system is a bad practice, that it causes harm to the system's design and should be avoided. However, in our studies, we have found significant evidence that cloning is often used in a variety of ways as a principled engineering tool. For example, one way to evaluate possible new features for a system is to clone the affected subsystems and introduce the new features there, in a kind of sandbox testbed. As features mature and become stable within the experimental subsystems, they can be migrated incrementally into the stable code base; in this way, the risk of introducing instabilities in the stable version is minimized. This paper describes several patterns of cloning that we have observed in our case studies and discusses the advantages and disadvantages associated with using them. We also examine through a case study the frequencies of these clones in two medium-sized open source software systems, the Apache web server and the Gnumeric spreadsheet application. In this study, we found that as many as 71% of the clones could be considered to have a positive impact on the maintainability of the software system.
C1 [Kapser, Cory J.; Godfrey, Michael W.] Univ Waterloo, David R Cheriton Sch Comp Sci, Software Architecture Grp SWAG, Waterloo, ON N2L 3G1, Canada.
C3 University of Waterloo
RP Kapser, CJ (corresponding author), Univ Waterloo, David R Cheriton Sch Comp Sci, Software Architecture Grp SWAG, Waterloo, ON N2L 3G1, Canada.
EM cjkapser@uwaterloo.ca; migod@uwaterloo.ca
RI Godfrey, Michael W/A-1068-2008
CR [Anonymous], 1997, ACM SIGACT NEWS
   Antoniol G, 2002, INFORM SOFTWARE TECH, V44, P755, DOI 10.1016/S0950-5849(02)00123-4
   Aversano L, 2007, CSMR 2007: 11TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P81
   BAKER BS, 1995, SECOND WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P86, DOI 10.1109/WCRE.1995.514697
   Balazinska M., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P292, DOI 10.1109/METRIC.1999.809750
   Balazinska M, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P98, DOI 10.1109/WCRE.2000.891457
   BALAZINSKA M, 1999, P 6 WORK C REV ENG, P326
   Basit HA, 2005, PROC INT CONF SOFTW, P451
   Baxter ID, 1998, PROC IEEE INT CONF S, P368, DOI 10.1109/ICSM.1998.738528
   BELLON S, 2002, INT WORKSH SOURC COD
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Casazza G, 2001, FIRST IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P90, DOI 10.1109/SCAM.2001.972670
   COPLIEN JO, 1992, ADV C PLUS PLUS PROG
   Cordy JR, 2003, PROG COMPREHEN, P196
   Duala-Ekoko E, 2007, PROC INT CONF SOFTW, P158
   Ducasse S., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P109, DOI 10.1109/ICSM.1999.792593
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Geiger R, 2006, LECT NOTES COMPUT SC, V3922, P411
   Godfrey MW, 2005, IEEE T SOFTWARE ENG, V31, P166, DOI 10.1109/TSE.2005.28
   Godfrey MW, 2000, PROC IEEE INT CONF S, P131, DOI 10.1109/ICSM.2000.883030
   GODFREY MW, 2000, 2000 CASCON WORKSH D
   Higo Yoshiki., 2004, The 8th IASTED International Conference on Software Engineering and ApplicationsSEA 2004, P222
   JARZABEK S, 2003, EUR SOFTW ENG C ACM, P237
   Jiang LX, 2007, PROC INT CONF SOFTW, P96
   JOHNSON JH, 1994, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P120, DOI 10.1109/ICSM.1994.336783
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kapser C, 2005, PROC IEEE INT CONF S, P305
   Kapser C, 2004, 7TH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, P85, DOI 10.1109/IWPSE.2004.1334772
   Kapser CJ, 2006, J SOFTW MAINT EVOL-R, V18, P61, DOI 10.1002/smr.327
   Kapser C, 2006, WORK CONF REVERSE EN, P19
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kim M, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P83
   KIM M, 2005, ISEC FSE 13, P187
   Komondoor R, 2001, LECT NOTES COMPUT SC, V2126, P40
   Kontogiannis K. A., 1996, Automated Software Engineering, V3, P77, DOI 10.1007/BF00126960
   Koschke R, 2006, WORK CONF REVERSE EN, P253
   Krinke J, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P301, DOI 10.1109/WCRE.2001.957835
   LATOZA TD, 2006, ICSE 06, P492
   Lozano Angela., 2007, MSR 07, P18
   Mayrand J, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P244, DOI 10.1109/ICSM.1996.565012
   Mockus A., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P263, DOI 10.1109/ICSE.2000.870417
   Rajaraman R., 2007, International Journal of Human Genetics, V7, P29
   RYSSELBERGHE FV, 2003, IWPSE 03, P126
   Toomim M, 2004, 2004 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN CENTRIC COMPUTING: PROCEEDINGS, P173, DOI 10.1109/VLHCC.2004.35
   UKKONEN E, 1995, ALGORITHMICA, V14, P249, DOI 10.1007/BF01206331
   Walenstein A, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P285, DOI 10.1109/WCRE.2003.1287259
   [No title captured]
NR 48
TC 210
Z9 234
U1 0
U2 12
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2008
VL 13
IS 6
BP 645
EP 692
DI 10.1007/s10664-008-9076-6
PG 48
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 398IL
UT WOS:000262725700003
DA 2024-07-18
ER

PT J
AU Pikkarainen, M
   Haikara, J
   Salo, O
   Abrahamsson, P
   Still, J
AF Pikkarainen, M.
   Haikara, J.
   Salo, O.
   Abrahamsson, P.
   Still, J.
TI The impact of agile practices on communication in software development
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE agile software development practices; communication; coordination theory
ID SCRUM; XP; COORDINATION; PRINCIPLES; MANAGEMENT; DISTANCE
AB Agile software development practices such as eXtreme Programming (XP) and SCRUM have increasingly been adopted to respond to the challenges of volatile business environments, where the markets and technologies evolve rapidly and present the unexpected. In spite of the encouraging results so far, little is known about how agile practices affect communication. This article presents the results from a study which examined the impact of XP and SCRUM practices on communication within software development teams and within the focal organization. The research was carried out as a case study in F-Secure where two agile software development projects were compared from the communication perspective. The goal of the study is to increase the understanding of communication in the context of agile software development: internally among the developers and project leaders and in the interface between the development team and stakeholders (i.e. customers, testers, other development teams). The study shows that agile practices improve both informal and formal communication. However, it further indicates that, in larger development situations involving multiple external stakeholders, a mismatch of adequate communication mechanisms can sometimes even hinder the communication. The study highlights the fact that hurdles and improvements in the communication process can both affect the feature requirements and task subtask dependencies as described in coordination theory. While the use of SCRUM and some XP practices facilitate team and organizational communication of the dependencies between product features and working tasks, the use of agile practices requires that the team and organization use also additional plan-driven practices to ensure the efficiency of external communication between all the actors of software development.
C1 [Pikkarainen, M.; Salo, O.; Abrahamsson, P.] Tech Res Ctr Finland, Oulu 90571, Finland.
   [Haikara, J.] Polar Electro Oy, FIN-90440 Kempele, Finland.
   [Still, J.] F Secure Corp, Oulu 90570, Finland.
C3 VTT Technical Research Center Finland
RP Pikkarainen, M (corresponding author), Tech Res Ctr Finland, Kaitovayla 1,Box 1100, Oulu 90571, Finland.
EM minna.pikkarainen@vtt.fi; jukka.haikara@polar.fi; salo.outi@vtt.fi;
   pekka.abrahamsson@vtt.fi; Jari.Still@f-secure.com
RI mchugh, fearghal/D-1070-2012; Abrahamsson, Pekka/A-5559-2018
OI Abrahamsson, Pekka/0000-0002-4360-2226
CR [Anonymous], IEEE COMPUTER
   [Anonymous], 2006, EUROPEAN J INFORM SY
   [Anonymous], IEEE COMPUTER
   [Anonymous], IEEE
   BACHARACH SB, 1989, ACAD MANAGE REV, V14, P496, DOI 10.2307/258555
   Boehm B, 2005, IEEE SOFTWARE, V22, P30, DOI 10.1109/MS.2005.129
   Boehm B.W., 2003, SIGSOFT Software Engineering Notes, V28, P1
   BOEHM BW, 1989, IEEE T SOFTWARE ENG, V15, P902, DOI 10.1109/32.29489
   Börjesson A, 2004, IEEE SOFTWARE, V21, P36, DOI 10.1109/MS.2004.27
   Carmel E, 2001, IEEE SOFTWARE, V18, P22, DOI 10.1109/52.914734
   COHN M, 2003, IEEE COMPUTER SOC, V0036, P00074
   Crowston K, 1998, IBM SYST J, V37, P227, DOI 10.1147/sj.372.0227
   Damian DEH, 2000, IEEE SOFTWARE, V17, P28, DOI 10.1109/52.896247
   Dingsoyr T, 2006, LECT NOTES COMPUT SC, V4257, P5
   Drobka J, 2004, IEEE SOFTWARE, V21, P70, DOI 10.1109/MS.2004.47
   EISENHARDT KM, 1989, ACAD MANAGE REV, V14, P532, DOI 10.2307/258557
   Espinosa J. A., 2003, Software Process Improvement and Practice, V8, P249, DOI 10.1002/spip.185
   GOLES T, 2005, DATA BASE ADV INF SY, V36, P47, DOI DOI 10.1145/1104004.1104009
   Harbring C, 2006, MANAG DECIS ECON, V27, P333, DOI 10.1002/mde.1266
   Henttonen K, 2005, STRATEG CHANG, V14, P107, DOI 10.1002/jsc.714
   Herbsleb J., 2003, IEEE T SOFTWARE ENG, V29, P1
   Highsmith J, 2001, COMPUTER, V34, P120, DOI 10.1109/2.947100
   Karlström D, 2006, EMPIR SOFTW ENG, V11, P203, DOI 10.1007/s10664-006-6402-8
   Klein HK, 1999, MIS QUART, V23, P67, DOI 10.2307/249410
   Korkala M, 2006, AGILE 2006, PROCEEDINGS, P76, DOI 10.1109/AGILE.2006.1
   KRAUT RE, 1995, COMMUN ACM, V38, P69, DOI 10.1145/203330.203345
   Layman L, 2006, J SYST ARCHITECT, V52, P654, DOI 10.1016/j.sysarc.2006.06.009
   Layman L, 2006, INFORM SOFTWARE TECH, V48, P781, DOI 10.1016/j.infsof.2006.01.004
   Lindvall M, 2004, COMPUTER, V37, P26, DOI 10.1109/MC.2004.231
   Lycett M, 2003, COMPUTER, V36, P79, DOI 10.1109/MC.2003.1185220
   MALONE TW, 1994, ACM COMPUT SURV, V26, P87, DOI 10.1145/174666.174668
   Murru O, 2003, IEEE SOFTWARE, V20, P37, DOI 10.1109/MS.2003.1196318
   Paasivaara M., 2003, Software Process Improvement and Practice, V8, P183, DOI 10.1002/spip.187
   PARNAS DL, 1986, IEEE T SOFTWARE ENG, V12, P251, DOI 10.1109/TSE.1986.6312940
   Rasmusson J, 2003, IEEE SOFTWARE, V20, P21, DOI 10.1109/MS.2003.1196316
   Rising L, 2000, IEEE SOFTWARE, V17, P26, DOI 10.1109/52.854065
   Smite D., 2006, Software Process Improvement and Practice, V11, P61, DOI 10.1002/spip.252
   Stelzer D., 1998, Software Process Improvement and Practice, V4, P227, DOI 10.1002/(SICI)1099-1670(199812)4:4<227::AID-SPIP106>3.0.CO;2-1
   Sutherland J., 2001, Cutter IT Journal, V14, P5
   Svensson H, 2005, LECT NOTES COMPUT SC, V3547, P487
   WEICK KE, 1995, ADMIN SCI QUART, V40, P385, DOI 10.2307/2393789
   Williams L, 2003, COMPUTER, V36, P39, DOI 10.1109/MC.2003.1204373
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 47
TC 165
Z9 224
U1 6
U2 132
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2008
VL 13
IS 3
BP 303
EP 337
DI 10.1007/s10664-008-9065-9
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 316RE
UT WOS:000256966600004
DA 2024-07-18
ER

PT J
AU Sentas, P
   Angelis, L
   Stamelos, I
AF Sentas, Panagiotis
   Angelis, Lefteris
   Stamelos, Ioannis
TI A statistical framework for analyzing the duration of software projects
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE duration of a software project; survival analysis; software cost
   estimation; project cancellation
AB The duration of a software project is a very important feature, closely related to its cost. Various methods and models have been proposed in order to predict not only the cost of a software project but also its duration. Since duration is essentially the random length of a time interval from a starting to a terminating event, in this paper we present a framework of statistical tools, appropriate for studying and modeling the distribution of the duration. The idea for our approach comes from the parallelism of duration to the life of an entity which is frequently studied in biostatistics by a certain statistical methodology known as survival analysis. This type of analysis offers great flexibility in modeling the duration and in computing various statistics useful for inference and estimation. As in any other statistical methodology, the approach is based on datasets of measurements on projects. However, one of the most important advantages is that we can use in our data information not only from completed projects, but also from ongoing projects. In this paper we present the general principles of the methodology for a comprehensive duration analysis and we also illustrate it with applications to known data sets. The analysis showed that duration is affected by various factors such as customer participation, use of tools, software logical complexity, user requirements volatility and staff tool skills.
C1 [Sentas, Panagiotis; Angelis, Lefteris; Stamelos, Ioannis] Aristotle Univ Thessaloniki, Dept Informat, Thessaloniki 54124, Greece.
C3 Aristotle University of Thessaloniki
RP Angelis, L (corresponding author), Aristotle Univ Thessaloniki, Dept Informat, Thessaloniki 54124, Greece.
EM psentas@csd.auth.gr; lef@csd.auth.gr; stamelos@csd.auth.gr
RI Stamelos, Ioannis/AAK-7207-2020
CR Angelis L, 2000, SEVENTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 2001, PROCEEDINGS, P4
   ANGELIS L, 2005, P 10 PANH C INF, P258
   [Anonymous], 2000, Software Cost Estimation with COCOMO II
   [Anonymous], 2002, Applied Statistics for Software Managers
   AYAL M, 2004, THESIS TEL AVIV U
   Barry E. J., 2002, Information Technology & Management, V3, P113, DOI 10.1023/A:1013168927238
   Boehm B, 2000, COMPUTER, V33, P94, DOI 10.1109/2.868706
   Boehm BW., 1981, Software Engineering Economics
   Clark B, 1998, PROC INT CONF SOFTW, P477, DOI 10.1109/ICSE.1998.671610
   Collet D., 1994, MODELLING SURVIVAL D, V1st
   Hosmer D., 1999, WILEY PS TX
   JAIN G, 2002, THESIS INDIAN I TECH
   KAPLAN EL, 1958, J AM STAT ASSOC, V53, P457, DOI 10.2307/2281868
   Kitchenham B, 1998, IEEE T SOFTWARE ENG, V24, P278, DOI 10.1109/32.677185
   KORU AG, 2007, P IFIP 3 INT C OP SO, P271
   Lee E.T., 2003, Statistical Methods for Survival Data Analysis, V476
   Lind MR, 2000, COMPUT OPER RES, V27, P1153, DOI 10.1016/S0305-0548(99)00150-1
   MAXWELL K, 2000, P 22 INT C SOFTW ENG, P377
   Mizuno O, 2001, SECOND ASIA-PACIFIC CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P120, DOI 10.1109/APAQS.2001.990010
   Oligny Serge., 2000, Proceedings of the World Computer Congress, P175
   Parmar M.K. B., 1995, SURVIVAL ANAL PRACTI
   Putnam LawrenceH., 2003, Five core metrics : the intelligence behind successful software management
   Rainer A., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P72, DOI 10.1109/METRIC.1999.809728
   Rainer A, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P184, DOI 10.1109/METRIC.2004.1357902
   Rainer A, 2003, J SYST SOFTWARE, V66, P7, DOI 10.1016/S0164-1212(02)00059-6
   SENTAS P, 2005, P 11 IEEE INT SOFTW
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   Venables W. N., 2002, Modern Applied Statistics with S, P271, DOI [10.1007/978-0-387-21706-2, DOI 10.1007/978-0-387-21706-2]
NR 28
TC 12
Z9 13
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2008
VL 13
IS 2
BP 147
EP 184
DI 10.1007/s10664-007-9051-7
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 284YB
UT WOS:000254743000003
DA 2024-07-18
ER

PT J
AU Grindall, M
   Lindström, B
   Offutt, J
   Andler, SF
AF Grindall, Mats
   Lindstroem, Birgitta
   Offutt, Jeff
   Andler, Sten F.
TI An evaluation of combination strategies for test case selection
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE combination strategies; orthogonal arrays; AETG; test case selection;
   testing experiment
ID DESIGN
AB This paper presents results from a comparative evaluation of five combination strategies. Combination strategies are test case selection methods that combine "interesting" values of the input parameters of a test subject to form test cases. This research comparatively evaluated five combination strategies; the All Combination strategy (AC), the Each Choice strategy (EC), the Base Choice strategy (BC), Orthogonal Arrays (OA) and the algorithm from the Automatic Efficient Test Generator (AETG). AC satisfies n-wise coverage, EC and BC satisfy 1-wise coverage, and OA and AETG satisfy pair-wise coverage. The All Combinations strategy was used as a "gold standard" strategy; it subsumes the others but is usually too expensive for practical use. The others were used in an experiment that used five programs seeded with 128 faults. The combination strategies were evaluated with respect to the number of test cases, the number of faults found, failure size, and number of decisions covered. The strategy that requires the least number of tests, Each Choice, found the smallest number of faults. Although the Base Choice strategy requires fewer test cases than Orthogonal Arrays and AETG, it found as many faults. Analysis also shows some properties of the combination strategies that appear significant. The two most important results are that the Each Choice strategy is unpredictable in terms of which faults will be revealed, possibly indicating that faults are found by chance, and that the Base Choice and the pair-wise combination strategies to some extent target different types of faults.
C1 Univ Skovde, Sch Humanities & Informat, Skovde, Sweden.
   George Mason Univ, Dept Informat & Software Engn, Fairfax, VA 22030 USA.
C3 University of Skovde; George Mason University
RP Grindall, M (corresponding author), Univ Skovde, Sch Humanities & Informat, Skovde, Sweden.
EM mats.grindal@his.se; birgitta.lindstrom@his.se; offutt@ise.gmu.edu;
   sten.f.andler@his.se
RI Lindström, Birgitta/I-2805-2019
OI Lindström, Birgitta/0000-0002-1039-5830
CR AMMANN P, 1994, COMPASS '94 - PROCEEDINGS OF THE NINTH ANNUAL CONFERENCE ON COMPUTER ASSURANCE, P69, DOI 10.1109/CMPASS.1994.318466
   ANDERSON T, 1994, 104 IFIP WG
   [Anonymous], P INT A ERSH MEM C P
   Archibald R.D., 1992, MANAGING HIGH TECHNO, V2nd
   BACHE R, 1997, J SOFTWARE TESTING V, V7, P139
   BASILI VR, 1987, IEEE T SOFTWARE ENG, V13, P1278, DOI 10.1109/TSE.1987.232881
   BASILI VR, 1988, IEEE T SOFTWARE ENG, V14, P758, DOI 10.1109/32.6156
   Briand L. C., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P475, DOI 10.1109/ICSM.1999.792645
   BROWNLIE R, 1992, AT&T TECH J, V71, P41, DOI 10.1002/j.1538-7305.1992.tb00164.x
   BURR K, 1998, P INT C SOFTW TEST A, P26
   Cohen D. M., 1994, Proceedings. 5th International Symposium on Software Reliability Engineering (Cat. No.94TH8017), P303, DOI 10.1109/ISSRE.1994.341392
   Cohen DM, 1997, IEEE T SOFTWARE ENG, V23, P437, DOI 10.1109/32.605761
   Cohen DM, 1996, IEEE SOFTWARE, V13, P83, DOI 10.1109/52.536462
   Cohen MB, 2003, PROC INT CONF SOFTW, P38, DOI 10.1109/ICSE.2003.1201186
   Dalal SR, 1998, TECHNOMETRICS, V40, P234, DOI 10.2307/1271179
   Dunietz IS, 1997, PROC INT CONF SOFTW, P205, DOI 10.1145/253228.253271
   Frankl PG, 1998, IEEE T SOFTWARE ENG, V24, P586, DOI 10.1109/32.707695
   Grindal M, 2005, SOFTW TEST VERIF REL, V15, P167, DOI 10.1002/stvr.319
   GRINDAL M, 2003, HSIDATR03001 U SKOVD
   HARMAN M, 1999, P 5 WORKSH EMP STUD
   KAMSTIES E, 1995, P 5 EUR SOFTW ENG C
   Kamsties E., 1995, 9502 ISERN U KAIS DE
   Kropp NP, 1998, DIG PAP INT SYMP FAU, P230, DOI 10.1109/FTCS.1998.689474
   Lei Y, 1998, THIRD IEEE INTERNATIONAL HIGH-ASSURANCE SYSTEMS ENGINEERING SYMPOSIUM, PROCEEDINGS, P254, DOI 10.1109/HASE.1998.731623
   LEI Y, 2001, TR200103 N CAR STAT
   LINDSTROM B, 2004, WORKSH EMP RES SOFTW
   Lott C., REPEATABLE SOFTWARE
   Lott C. M., 1996, Empirical Software Engineering, V1, P241, DOI 10.1007/BF00127447
   MANDL R, 1985, COMMUN ACM, V28, P1054, DOI 10.1145/4372.4375
   MILLER J, 1995, INFORM SOFTWARE TECH, V37, P5, DOI 10.1016/0950-5849(94)00456-3
   MUSA JD, 1993, IEEE SOFTWARE, V10, P14, DOI 10.1109/52.199724
   Myers Glenford J., 2011, The Art of Software Testing
   NTAFOS SC, 1984, IEEE T SOFTWARE ENG, V10, P795, DOI 10.1109/TSE.1984.5010308
   Offutt A. J., 1996, SIGSOFT Software Engineering Notes, V21, P195, DOI [10.1145/229000.226317, 10.1145/226295.226317]
   OFFUTT AJ, 1999, 5 IEEE INT C ENG COM, P119
   OSTRAND TJ, 1988, COMMUN ACM, V31, P676, DOI 10.1145/62959.62964
   PIWOWARSKI P, 1993, PROC INT CONF SOFTW, P287, DOI 10.1109/ICSE.1993.346035
   Reid SC, 1997, FOURTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P64, DOI 10.1109/METRIC.1997.637166
   Shiba T., 2004, Proceedings of the 28th Annual International Computer Software and Applications Conference. COMPSAC 2004, P72, DOI 10.1109/CMPSAC.2004.1342808
   So SS, 2002, SOFTW TEST VERIF REL, V12, P155, DOI 10.1002/stvr.248
   Wallace DoloresR., 2001, International Journal of Reliability Quality and Safety Engineering, V8, P351, DOI DOI 10.1142/S021853930100058X
   Williams AW, 1996, SEVENTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P246, DOI 10.1109/ISSRE.1996.558835
   Williams AW, 2000, INT FED INFO PROC, V48, P59
   Wood M, 1997, LECT NOTES COMPUT SC, V1301, P262, DOI 10.1145/267896.267915
   Woodward M.R., 2000, Proc. of the 2000 ACM SIGSOFT Int'l Symp. on Software Testing and Analysis, P168
   Zweben S., 1992, Software Testing, Verification, and Reliability, V1, P39
   CS97116 COL STAT U
NR 47
TC 56
Z9 63
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2006
VL 11
IS 4
BP 583
EP 611
DI 10.1007/s10664-006-9024-2
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 116LS
UT WOS:000242805000005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Reinhartz-Berger, I
   Dori, D
AF Reinhartz-Berger, I
   Dori, D
TI OPM vs. UML - Experimenting with comprehension and construction of web
   application models
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Object-Process Methodology; Unified Modeling Language; web applications;
   software development; IS development methodologies; object-oriented
   design; functional design
ID OBJECT-PROCESS METHODOLOGY; SYSTEMS; OPM/WEB
AB Object-Process Methodology (OPM), which is a holistic approach to modeling and evolving systems, views objects and processes as two equally important entities that describe the system's structure and behavior in a single model. Unified Modeling Language (UML), which is the standard object-oriented modeling language for software systems, separates the system model into various aspects, each of which is represented in a different view (diagram type).
   The exponential growth of the Web and the progress of Internet-based architectures have set the stage for the proliferation of a variety of Web applications, which are classified as hybrids between hypermedia and information systems. Such applications require a modeling approach that is capable of clearly specifying aspects of their architecture, communication, and distributive nature. Since UML and OPM are two candidates for this task, this study has been designed to establish the level of comprehension and the quality of the constructed Web application models using each one of these two approaches.
   In the experiment we carried out, third year undergraduate information systems engineering students were asked to respond to comprehension and construction questions about two representative Web application models. The comprehension questions related to the system's structure, dynamics, and distribution aspects. The results suggest that OPM is better than UML in modeling the dynamics aspect of the Web applications. In specifying structure and distribution aspects, there were no significant differences. The results further suggest that the quality of the OPM models students built in the construction part were superior to that of the corresponding UML models.
C1 Univ Haifa, IL-31905 Haifa, Israel.
   Technion Israel Inst Technol, IL-32000 Haifa, Israel.
C3 University of Haifa; Technion Israel Institute of Technology
RP Univ Haifa, IL-31905 Haifa, Israel.
EM iris@mis.hevra.haifa.ac.il; dori@ie.technion.ac.il
OI Dori, Dov/0000-0002-2393-3124
CR [Anonymous], 1991, OBJECT ORIENTED DESI
   [Anonymous], 1996, SAS SYSTEMS MIXED MO
   *AOSD, 2003, ASP OR SOFTW DEV SIT
   Conallen J., 1999, BUILDING WEB APPL UM
   DEMARCO T, 1978, STRUCTURED SYSTEM SP
   Dori D, 2002, COMMUN ACM, V45, P82, DOI 10.1145/581571.581599
   Dori D., 1995, Journal of Logic and Computation, V5, P227, DOI 10.1093/logcom/5.2.227
   Dori D., 2011, OBJECT PROCESS METHO, P1208
   Dori D., 2003, 5th International Conference on Enterprise Information Systems (ICEIS 2003), P286
   GILAT D, 2003, THESIS TECHNION ISRA
   HALPIN T, 1998, P 3 INT WORKSH EV MO
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   HILLEGERSBERG JV, 1998, P 31 HAW INT C SYST
   KIM YG, 1995, COMMUN ACM, V38, P103, DOI 10.1145/203241.203265
   Mezini M., 1998, Conference Proceedings OOPSLA'98. Conference on Object-Oriented Programming, Systems, Languages and Applications, P97
   *OMG, 2002, OBJ MAN GROUP SIT
   Otero M. C., 2002, Empirical Software Engineering, V7, P27, DOI 10.1023/A:1014819010099
   Peleg M, 2000, IEEE T SOFTWARE ENG, V26, P742, DOI 10.1109/32.879812
   Peleg M, 1999, J OBJECT-ORIENT PROG, V11, P53
   Peterson J., 1981, Petri Nets Theory and the Modeling of Systems
   Reinhartz-Berger I, 2002, P INT COMP SOFTW APP, P19, DOI 10.1109/CMPSAC.2002.1044528
   Reinhartz-Berger I, 2002, ANN SOFTW ENG, V13, P141, DOI 10.1023/A:1016597410642
   REINHARTZBERGER I, 2003, THESIS TECHNION ISRA
   REINHARTZBERGER I, 2003, IN PRESS INT J WEB E
   RUMBAUGH J, 1991, OBJECTIVE ORIENTED M
   Shoval P, 1997, DATA KNOWL ENG, V21, P297, DOI 10.1016/S0169-023X(97)88935-5
   Siau K., 2001, Journal of Database Management, V12, P26, DOI 10.4018/jdm.2001010103
   VERHEJEN GMA, 1982, INFORMATION SYSTEMS, P289
   YOURDON Y., 1979, STRUCTURED DESIGN
NR 29
TC 28
Z9 30
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN
PY 2005
VL 10
IS 1
BP 57
EP 79
DI 10.1023/B:EMSE.0000048323.40484.e0
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 895IY
UT WOS:000226855600003
DA 2024-07-18
ER

PT J
AU Khoshgoftaar, TM
   Seliya, N
AF Khoshgoftaar, TM
   Seliya, N
TI Fault prediction modeling for software quality estimation: Comparing
   commonly used techniques
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE software quality prediction; software metrics; fault prediction; CART;
   S-PLUS; multiple linear regression; neural networks; case-based
   reasoning
ID HIGH-RISK
AB High-assurance and complex mission-critical software systems are heavily dependent on reliability of their underlying software applications. An early software fault prediction is a proven technique in achieving high software reliability. Prediction models based on software metrics can predict number of faults in software modules. Timely predictions of such models can be used to direct cost-effective quality enhancement efforts to modules that are likely to have a high number of faults.
   We evaluate the predictive performance of six commonly used fault prediction techniques: CART-LS (least squares), CART-LAD (least absolute deviation), S-PLUS, multiple linear regression, artificial neural networks, and case-based reasoning. The case study consists of software metrics collected over four releases of a very large telecommunications system. Performance metrics, average absolute and average relative errors, are utilized to gauge the accuracy of different prediction models. Models were built using both, original software metrics (RAW) and their principle components (PCA). Two-way ANOVA randomized-complete block design models with two blocking variables are designed with average absolute and average relative errors as response variables. System release and the model type (RAW or PCA) form the blocking variables and the prediction technique is treated as a factor. Using multiple-pairwise comparisons, the performance order of prediction models is determined. We observe that for both average absolute and average relative errors, the CART-LAD model performs the best while the S-PLUS model is ranked sixth.
C1 Florida Atlantic Univ, Boca Raton, FL 33431 USA.
C3 State University System of Florida; Florida Atlantic University
RP Florida Atlantic Univ, Boca Raton, FL 33431 USA.
EM taghi@cse.fau.edu; nseliya@cse.fau.edu
CR [Anonymous], 1962, PRINCIPLES NEURODYNA
   [Anonymous], 1997, Software metrics: A rigorous and practical approach
   Beaumont GP., 1996, Statistical Tests: An introduction with MINITAB commentary
   Berenson M.L., 1983, INTERMEDIATE STAT ME
   Breiman L, 1998, BIOMETRICS, DOI [10.1201/9781315139470, DOI 10.2307/2530946]
   Briand L. C., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P377, DOI 10.1109/ICSE.2000.870428
   BRIAND LC, 1993, IEEE T SOFTWARE ENG, V19, P1028, DOI 10.1109/32.256851
   Clark L.A., 2017, Statistical models in S, P377, DOI [DOI 10.1201/9780203738535, 10.1201/9780203738535]
   Deng J., 2001, P 7 INT, P190, DOI 10.1109/METRIC.2001.915528
   Finnie GR, 1997, J SYST SOFTWARE, V39, P281, DOI 10.1016/S0164-1212(97)00055-1
   Ganesan K, 2000, INT J SOFTW ENG KNOW, V10, P139, DOI 10.1142/S0218194000000092
   Gokhale S.S., 1997, PROC 3 ISSAT INT C R, P31
   Gray A. R., 1999, Empirical Software Engineering, V4, P297, DOI 10.1023/A:1009849100780
   Hudepohl JP, 1996, IEEE SOFTWARE, V13, P56, DOI 10.1109/52.536459
   Jones WD, 1999, PROCEEDINGS OF THE THIRD EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P148, DOI 10.1109/CSMR.1999.756692
   Khoshgoftaar TM, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P203, DOI 10.1109/METRIC.2002.1011339
   KHOSHGOFTAAR TM, 1995, J SYST SOFTWARE, V29, P85, DOI 10.1016/0164-1212(94)00130-F
   KHOSHGOFTAAR TM, 1992, IEEE T SOFTWARE ENG, V18, P979, DOI 10.1109/32.177367
   Khoshgoftaar TM, 2000, PROC INT C TOOLS ART, P54, DOI 10.1109/TAI.2000.889846
   Khoshgoftaar TM, 2000, ANN SOFTW ENG, V9, P103, DOI 10.1023/A:1018972607783
   Khoshgoftaar TM, 2000, 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P198, DOI 10.1109/ISSRE.2000.885872
   KHOSHGOFTAAR TM, 2001, RECENT ADV RELIABILI, V15, P247
   Kolodner J.L., 1993, Case-Based Reasoning
   Lin C.-.T., 1996, Neural Fuzzy Systems: A Neuro-Fuzzy Synergism to Intelligent Systems
   Lippmann R. P., 1988, Computer Architecture News, V16, P7, DOI [10.1109/MASSP.1987.1165576, 10.1145/44571.44572]
   Minsky M., 1969, Perceptrons
   Neter J., 1996, APPL LINEAR STAT MOD, V81, P1126
   NIELSEN RH, 1987, APPL OPTICS J, V26
   Ohlsson MC, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P217, DOI 10.1109/METRIC.2002.1011340
   RUMELHART DE, 1962, PARALLEL DISTRIBUTED, V1
   Schneidewind N. F., 1995, Annals of Software Engineering, V1, P287, DOI 10.1007/BF02249054
   Schneidewind NF, 1997, EIGHTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P402, DOI 10.1109/ISSRE.1997.630888
   SELIYA N, 2001, THESIS FLORIDA ATLAN
   SUNDARESH N, 2001, THESIS FLORIDA ATLAN
   Takahashi R, 1997, EIGHTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P222, DOI 10.1109/ISSRE.1997.630869
   Troster J., 1995, Annals of Software Engineering, V1, P95, DOI 10.1007/BF02249047
   XU Z, 2001, THESIS FLORIDA ATLAN
NR 37
TC 89
Z9 99
U1 0
U2 10
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2003
VL 8
IS 3
BP 255
EP 283
DI 10.1023/A:1024424811345
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 803WF
UT WOS:000220260500002
DA 2024-07-18
ER

PT J
AU Bree, DC
   Cinneide, MO
AF Bree, Deaglan Connolly
   O Cinneide, Mel
TI Energy efficiency of the Visitor Pattern: contrasting Java and C plus
   plus implementations
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Empirical; Design patterns; Visitor pattern; Green technology; Energy
   efficiency; Refactoring; Software transformation; Software design;
   Object-Oriented programming
ID IMPACT
AB Design patterns are applied frequently during software evolution in order to make the software more flexible and amenable to extension. One little-studied aspect of design patterns is their propensity to increase run-time energy consumption due to the indirection and additional structure they introduce. In this paper we study the impact of the Visitor pattern on energy efficiency. The Visitor pattern separates an algorithm from the objects it acts upon and improves maintainability by placing each algorithm within a single visitor class. This is at the cost of increased indirection due to the double dispatch required when the algorithm is invoked. We experimentally investigate the energy impact of varying the implementation of this pattern, and of removing the pattern entirely from software written in Java and C++. In our results we observe energy consumption reductions greater than 7% in a Java-based textbook example when the pattern is implemented using reflective dispatch, and reductions of over 10% when experimenting with an open source Java project, JavaParser. The complete removal of the pattern yields more complex results, with little impact in the textbook example but reductions of over 7% in the JavaParser study. To explore the generalisability of our findings, we subsequently apply the same transformations to the C++ based CppParser. Total pattern removal here sees energy consumption reductions of over 66% while the reflective dispatch approach increases energy consumption by up to 2012%. Our results highlight the energy savings that can be achieved when the Visitor pattern is removed both in Java and C++ implementations, and also show that some language specific features can allow for further energy savings when the implementation of the pattern is varied.
C1 [Bree, Deaglan Connolly; O Cinneide, Mel] Univ Coll Dublin, Sch Comp Sci, Dublin, Ireland.
C3 University College Dublin
RP Bree, DC (corresponding author), Univ Coll Dublin, Sch Comp Sci, Dublin, Ireland.
EM deaglan.connolly-bree@ucdconnect.ie
FU The authors gratefully acknowledge the support of the Irish Research
   Council through a Government of Ireland Postgraduate Scholarship
   GOIPG/2019/3779, and the support of Lero - the Science Foundation
   Ireland Research Centre for Software. [GOIPG/2019/3779]; Irish Research
   Council through a Government of Ireland Postgraduate Scholarship; Lero -
   the Science Foundation Ireland Research Centre for Software
FX The authors gratefully acknowledge the support of the Irish Research
   Council through a Government of Ireland Postgraduate Scholarship
   GOIPG/2019/3779, and the support of Lero - the Science Foundation
   Ireland Research Centre for Software.
CR Abtahizadeh S. Amirhossein, 2015, 2015 IEEE 34th International Performance Computing and Communications Conference (IPCCC), P1, DOI 10.1109/PCCC.2015.7410295
   Alexander C., 1977, PATTERN LANGUAGE TOW
   Andrae A. S., 2015, CHALLENGES, V6, P117
   [Anonymous], 2023, Generated data sets/replication package., DOI [10.6084/m9.figshare.22191283.v1, DOI 10.6084/M9.FIGSHARE.22191283.V1]
   [Anonymous], 1996, Javasoft ships java 1.0
   [Anonymous], Amazon best sellers: Best software reuse.
   Avgerinou M, 2017, ENERGIES, V10, DOI 10.3390/en10101470
   Ayala I, 2019, SCI PROGRAMMING-NETH, V2019, DOI 10.1155/2019/8235458
   Bree DC, 2022, PROC IEEE INT CONF S, P317, DOI 10.1109/ICSME55016.2022.00036
   Bttner Fabian., 2004, PROC IEEE 16 INT C S, P135
   Bunse C., 2013, SOFTWARETECHNIK TREN, V33
   Connolly Bree D, 2021, PROC IEEE INT CONF S, P689, DOI 10.1109/ICSME52107.2021.00082
   ConnollyBree D, 2022, 2022 IEEE INT C SOFT
   ConnollyBree D, 2020, P IEEE ACM 42 INT C, P323, DOI [10.1145/3387940.3392192, DOI 10.1145/3387940.3392192]
   Couto M, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P217, DOI [10.1109/SANER48275.2020.9054858, 10.1109/saner48275.2020.9054858]
   Crestani Antoine, 2021, 2021 8th International Conference on Future Internet of Things and Cloud (FiCloud), P383, DOI 10.1109/FiCloud49777.2021.00062
   Cruz Luis, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P46, DOI 10.1109/MOBILESoft.2017.19
   Cruz L, 2019, EMPIR SOFTW ENG, V24, P2209, DOI 10.1007/s10664-019-09682-0
   da Silva W. G., 2010, 1.Workshop de Sistemas Embarcados, P145
   Feitosa D, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1851
   Flucker S, 2013, BUILD SERV ENG RES T, V34, P103, DOI 10.1177/0143624412467196
   Fowler M., 1999, Refactoring: Improving the Design of Existing Code
   Gamma E., 1993, ECOOP '93 - Object-Oriented Programming. 7th European Conference Proceedings, P406
   Gamma Erich, 1995, DESIGN PATTERNS ELEM
   Georgiou S, 2019, ACM COMPUT SURV, V52, DOI 10.1145/3337773
   Gottschalk Marion., 2014, EnviroInfo, P437
   Hasan S, 2016, PROC INT CONF SOFTW, P225, DOI 10.1145/2884781.2884869
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hecht G, 2016, 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2016), P59, DOI [10.1145/2897073.2897100, 10.1109/MobileSoft.2016.030]
   Hindle A, 2015, EMPIR SOFTW ENG, V20, P374, DOI 10.1007/s10664-013-9276-6
   Hurbungs V., 2022, 2022 INT C EL COMP C, P1
   Kerievsky J., 2005, Refactoring to Patterns
   Li D., 2014, P 3 INT WORKSHOP GRE, P46, DOI DOI 10.1145/2593743.2593750
   Litke A., 2005, Proceedings of the International Conference on Machine Learning and Software Engineering, P86
   Maleki S, 2017, 2017 EIGHTH INTERNATIONAL GREEN AND SUSTAINABLE COMPUTING CONFERENCE (IGSC)
   Malmodin J, 2018, SUSTAINABILITY-BASEL, V10, DOI 10.3390/su10093027
   Mancebo J, 2021, SOFTWARE QUAL J, V29, P101, DOI 10.1007/s11219-020-09536-9
   Manotas I, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P503, DOI 10.11455/2568225.2568297
   Menghin M, 2015, P 18 EUR C PATT LANG, P1
   Morales R, 2018, IEEE T SOFTWARE ENG, V44, P1176, DOI 10.1109/TSE.2017.2757486
   Nayak J, 2021, COMM COM INF SC, V1498, P51, DOI 10.1007/978-3-030-90176-9_8
   Noureddine A, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P623, DOI 10.1109/ICSE.2015.208
   Paleczny M, 2001, USENIX ASSOCIATION PROCEEDINGS JAVA(TM) VIRTUAL MACHINE RESEARCH AND TECHNOLOGY SYMPOSIUM, P1
   Palomba F, 2019, INFORM SOFTWARE TECH, V105, P43, DOI 10.1016/j.infsof.2018.08.004
   Palomba F, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P487, DOI 10.1109/SANER.2017.7884659
   Park J.J., 2014, SEKE, P717
   Pereira Rui, 2016, 2016 IEEE/ACM 5th International Workshop on Green and Sustainable Software (GREENS), P15, DOI 10.1109/GREENS.2016.011
   Pereira R, 2021, SCI COMPUT PROGRAM, V205, DOI 10.1016/j.scico.2021.102609
   Perez-Castillo R, 2014, IEEE SOFTWARE, V31, P48, DOI 10.1109/MS.2014.23
   Pinto G, 2015, 2015 IEEE/ACM FOURTH INTERNATIONAL WORKSHOP ON GREEN AND SUSTAINABLE SOFTWARE (GREENS), P29, DOI 10.1109/GREENS.2015.12
   refactoring.guru, Visitor in Java
   Rodriguez A, 2012, 13 ARG S TECHN AST
   Rodriguez A., 2015, S ARG ING SOFTW ASSE
   Sahin C., 2012, 2012 First International Workshop on Green and Sustainable Software (GREENS), P55, DOI 10.1109/GREENS.2012.6224257
   Sahin C, 2014, P 8 ACM IEEE INT S E, P1
   Sahin C, 2012, 2012 IEEE ENERGYTECH, P1
   Schaarschmidt M, 2020, INT C EV NOV APPR SO, P182
   Tonini A, 2013, BRAZ SYM COMPUT SYST, P157, DOI 10.1109/SBESC.2013.39
   Verdecchia R., 2018, 5 INT C INF COMM TEC, V52, P365, DOI [10.29007/dz83, DOI 10.29007/DZ83]
   Vetro Antonio., 2013, P ENERGY 2013 3 INT, P34
NR 60
TC 0
Z9 0
U1 0
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2023
VL 28
IS 6
AR 145
DI 10.1007/s10664-023-10387-8
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA W0PD0
UT WOS:001088727900001
OA hybrid
DA 2024-07-18
ER

PT J
AU Chakraborty, S
   Liebel, G
AF Chakraborty, Shalini
   Liebel, Grischa
TI We do not understand what it says - studying student perceptions of
   software modelling
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software modelling; Case study; UML; Education
ID UML; EXPERIENCES; DOMAIN; STATE
AB BackgroundDespite the potential benefits of software modelling, developers have shown a considerable reluctance towards its application. There is substantial existing research studying industrial use and technical challenges of modelling. However, there is a lack of detailed empirical work investigating how students perceive modelling.AimWe investigate the perceptions of students towards modelling in a university environment.MethodWe conducted a multiple case study with 5 cases (5 courses from 3 universities) and two units of analysis (student and instructor). We collected data through 21 semi-structured interviews, which we analysed using in-vivo coding and thematic analysis.ResultsStudents see some benefits of modelling, e.g., using models for planning and communicating within the group. However, several factors negatively influence their understanding of modelling, e.g., assignments with unclear expectations, irregular and insufficient feedback on their models, and lack of experience with the problem domains.ConclusionsOur findings help in understanding better why students struggle with software modelling, and might be reluctant to adopt it later on. Our recommendations on modelling education could help to improve education and training in software modelling, both at university and in industry. Specifically, we recommend that educators try to provide feedback beyond syntactical issues, and to consider using problem domains that students are knowledgeable about.
C1 [Chakraborty, Shalini; Liebel, Grischa] Reykjavik Univ, Sch Technol, Dept Comp Sci, Menntavegur 1, IS-102 Reykjavik, Iceland.
C3 Reykjavik University
RP Liebel, G (corresponding author), Reykjavik Univ, Sch Technol, Dept Comp Sci, Menntavegur 1, IS-102 Reykjavik, Iceland.
EM shalini19@ru.is; grischal@ru.is
OI Liebel, Grischa/0000-0002-3884-815X
CR Agner LTW, 2019, SOFTW SYST MODEL, V18, P3025, DOI 10.1007/s10270-018-00709-6
   Akayama S, 2013, EDUSYMP MODELS
   Anda B, 2006, EMPIR SOFTW ENG, V11, P555, DOI 10.1007/s10664-006-9020-6
   [Anonymous], 2003, Proceedings of the 7th International Conference on Empirical Assessment in Software Engineering
   Baker P, 2005, LECT NOTES COMPUT SC, V3713, P476, DOI 10.1007/11557432_36
   Bernonville S, 2005, INTERNET INFORM TECH, P119
   Burgueño L, 2018, COMPUT SCI EDUC, V28, P23, DOI 10.1080/08993408.2018.1462000
   Chakraborty Shalini, 2022, Zenodo, DOI 10.5281/ZENODO.6913780
   Ciccozzi F, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS: COMPANION PROCEEDINGS (MODELS-COMPANION '18), P122, DOI 10.1145/3270112.3270129
   Dobing B, 2008, J DATABASE MANAGE, V19, P1, DOI 10.4018/jdm.2008010101
   Falessi D, 2018, EMPIR SOFTW ENG, V23, P452, DOI 10.1007/s10664-017-9523-3
   Forward A., 2010, 5th workshop from code centric to model centric: evaluating the effectiveness of MDD (C2M: EEMDD)
   Garzón MA, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P494, DOI 10.1109/SANER.2015.7081863
   Gilson F, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS: COMPANION PROCEEDINGS (MODELS-COMPANION '18), P98, DOI 10.1145/3270112.3270124
   Gonnord L, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS: COMPANION PROCEEDINGS (MODELS-COMPANION '18), P106, DOI 10.1145/3270112.3270116
   Gorschek T, 2014, J SYST SOFTWARE, V95, P176, DOI 10.1016/j.jss.2014.03.082
   Hammouda I, 2014, ACMIEEE 17 INT C MOD
   Hiller J., 2016, Epistemological foundations of objectivist and interpretivist research
   Hutchinson J, 2014, SCI COMPUT PROGRAM, V89, P144, DOI 10.1016/j.scico.2013.03.017
   Hutchinson J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P633, DOI 10.1145/1985793.1985882
   Hutchinson J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P471, DOI 10.1145/1985793.1985858
   Kirstan S, 2010, WORKSHOP C2M EEMDD C
   Kolovos DS, 2016, EDUSYMPOSS4MDE MODEL, P14
   Kopach-Konrad R, 2007, J GEN INTERN MED, V22, P431, DOI 10.1007/s11606-007-0292-3
   Krajcik JS, 2006, CAMB HANDB PSYCHOL, P317
   Lethbridge TC, 2011, 2011 24TH IEEE-CS CONFERENCE ON SOFTWARE ENGINEERING EDUCATION AND TRAINING (CSEET), P421, DOI 10.1109/CSEET.2011.5876118
   Liebel G, 2019, SOFTW SYST MODEL, V18, P2587, DOI 10.1007/s10270-018-0683-4
   Liebel G, 2018, SOFTW SYST MODEL, V17, P91, DOI 10.1007/s10270-016-0523-3
   Liebel G, 2017, CONF SOFTW ENG EDUC, P124, DOI 10.1109/CSEET.2017.29
   Liebel G, 2016, CONF SOFTW ENG EDUC, P18, DOI 10.1109/CSEET.2016.18
   Mohagheghi P, 2008, LECT NOTES COMPUT SC, V5095, P432, DOI 10.1007/978-3-540-69100-6_31
   Mohagheghi P, 2013, SOFTW SYST MODEL, V12, P619, DOI 10.1007/s10270-011-0219-7
   Moody D. L., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P485, DOI 10.1145/1810295.1810442
   Oliveira K, 2000, Tech. rep.
   Paige RF, 2014, EDUSYMP MODELS, P1
   Pascale C., 2011, CARTOGRAPHIES KNOWLE
   Petersen K, 2013, 2013 JOINT CONFERENCE OF THE 23RD INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE 2013 EIGHTH INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA), P81, DOI 10.1109/IWSM-Mensura.2013.22
   Raistrick C, 2005, LECT NOTES COMPUT SC, V3297, P203
   Reuter R, 2020, IEEE GLOB ENG EDUC C, P592, DOI 10.1109/EDUCON45650.2020.9125110
   Rugaber S, 2000, ANN SOFTW ENG, V9, P143, DOI 10.1023/A:1018976708691
   Runeson Per, 2012, Case study research in software engineering: Guidelines and examples
   Saldana J., 2016, CODING MANUAL QUALIT, DOI DOI 10.1017/CBO9781107415324.004
   Salman I, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P666, DOI 10.1109/ICSE.2015.82
   Schmidt A., 2014, Proceedings of the sixteenth Australasian computing education conference-vol, V148, P97
   Siau K, 2006, INFORM SYST MANAGE, V23, P43, DOI 10.1201/1078.10580530/46108.23.3.20060601/93706.5
   Sjoberg DIK, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P17, DOI 10.1109/ISESE.2002.1166921
   Stikkolorum DR, 2015, PROCEEDINGS 41ST EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS SEAA 2015, P275, DOI 10.1109/SEAA.2015.77
   Stol KJ, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3241743
   Storrle Harald., 2017, Proceedings of the 21st International Conference on Evaluation and Assessment in Software Engineering, P160, DOI DOI 10.1145/3084226.3084256
   Torchiano M, 2013, J SYST SOFTWARE, V86, P2110, DOI 10.1016/j.jss.2013.03.084
   Walderhaug S, 2009, LECT NOTES COMPUT SC, V5421, P199, DOI 10.1007/978-3-642-01648-6_22
   Westphal B, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2019), P690, DOI 10.1109/MODELS-C.2019.00105
   Whittle Jon, 2012, Models in Software Engineering. Workshops and Symposia at MODELS 2011. Reports and Revised Selected Papers, P40, DOI 10.1007/978-3-642-29645-1_6
   Whittle J, 2014, IEEE SOFTWARE, V31, P79, DOI 10.1109/MS.2013.65
   Whittle J, 2013, LECT NOTES COMPUT SC, V8107, P1, DOI 10.1007/978-3-642-41533-3_1
   Agner LTW, 2013, J SYST SOFTWARE, V86, P997, DOI 10.1016/j.jss.2012.11.023
   Wohlin C, 2021, INFORM SOFTWARE TECH, V133, DOI 10.1016/j.infsof.2021.106514
NR 57
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2023
VL 28
IS 6
AR 149
DI 10.1007/s10664-023-10404-w
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IU7E5
UT WOS:001168907900002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Gonzalez-Barahona, JM
   Montes-Leon, S
   Robles, G
   Zacchiroli, S
AF Gonzalez-Barahona, Jesus M.
   Montes-Leon, Sergio
   Robles, Gregorio
   Zacchiroli, Stefano
TI The software heritage license dataset (2022 edition)
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Dataset; Open source; Software license; Copyright; Intellectual
   property; Software engineering; Natural language processing
AB Context:When software is released publicly, it is common to include with it either the full text of the license or licenses under which it is published, or a detailed reference to them. Therefore public licenses, including FOSS (free, open source software) licenses, are usually publicly available in source code repositoriesObjective:To compile a dataset containing as many documents as possible that contain the text of software licenses, or references to the license terms. Once compiled, characterize the dataset so that it can be used for further research, or practical purposes related to license analysisMethod:Retrieve from Software Heritage-the largest publicly available archive of FOSS source code-all versions of all files whose names are commonly used to convey licensing terms. All retrieved documents will be characterized in various ways, using automated and manual analysesResults:The dataset consists of 6.9 million unique license files. Additional metadata about shipped license files is also provided, making the dataset ready to use in various contexts, including: file length measures, MIME type, SPDX license (detected using ScanCode), and oldest appearance. The results of a manual analysis of 8102 documents is also included, providing a ground truth for further analysis. The dataset is released as open data as an archive file containing all deduplicated license files, plus several portable CSV files with metadata, referencing files via cryptographic checksumsConclusions:Thanks to the extensive coverage of Software Heritage, the dataset presented in this paper covers a very large fraction of all software licenses for public code. We have assembled a large body of software licenses, characterized it quantitatively and qualitatively, and validated that it is mostly composed of licensing information and includes almost all known license texts. The dataset can be used to conduct empirical studies on open source licensing, training of automated license classifiers, natural language processing (NLP) analyses of legal texts, as well as historical and phylogenetic studies on FOSS licensing. It can also be used in practice to improve tools detecting licenses in source code
C1 [Gonzalez-Barahona, Jesus M.; Montes-Leon, Sergio; Robles, Gregorio] Univ Rey Juan Carlos, Madrid, Spain.
   [Zacchiroli, Stefano] Inst Polytech Paris, LTCI, Telecom Paris, Paris, France.
C3 Universidad Rey Juan Carlos; IMT - Institut Mines-Telecom; Institut
   Polytechnique de Paris; Telecom Paris
RP Zacchiroli, S (corresponding author), Inst Polytech Paris, LTCI, Telecom Paris, Paris, France.
EM jesus.gonzalez.barahona@urjc.es; s.montesl@alumnos.urjc.es;
   gregorio.robles@urjc.es; stefano.zacchiroli@telecom-paris.fr
RI Robles, Gregorio/I-2507-2012; Gonzalez-Barahona, Jesus M./L-5646-2017
OI Robles, Gregorio/0000-0002-1442-6761; Zacchiroli,
   Stefano/0000-0002-4576-136X; Gonzalez-Barahona, Jesus
   M./0000-0001-9682-460X
CR Abramatic JF, 2018, COMMUN ACM, V61, P29, DOI 10.1145/3183558
   Allançon T, 2021, PROC IEEE ACM INT C, P45, DOI 10.1109/ICSE-Companion52605.2021.00032
   [Anonymous], 2022, nexB ScanCode
   Bird Steven., 2006, ACL 2006 21 INT C CO
   Boldi PL, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P184, DOI [10.1109/saner48275.2020.9054827, 10.1109/SANER48275.2020.9054827]
   Caneill M, 2017, EMPIR SOFTW ENG, V22, P1405, DOI 10.1007/s10664-016-9461-5
   ClearlyDefined, 2023, ClearlyDefined, 2023
   Collet Y, 2021, RFC 8878-Zstandard compression and the "application/zstd"media type
   Di Cosmo Roberto, 2017, IPRES 2017, P1
   Di Penta Massimiliano, 2010, P 32 ACMIEEE INT C S, P145, DOI [10.1145/1806799.1806824, DOI 10.1145/1806799.1806824]
   DiCosmo R, 2018, P 15 INT C DIG PRES
   Dyer R, 2015, ACM T SOFTW ENG METH, V25, DOI 10.1145/2803171
   Flint SW, 2021, IEEE WORK CONF MIN S, P85, DOI 10.1109/MSR52588.2021.00022
   Gandhi R, 2018, PROCEEDINGS OF THE 2018 ACM INTERNATIONAL CONFERENCE ON SUPPORTING GROUP WORK, GROUP 2018, P219, DOI 10.1145/3148330.3148333
   German Daniel M., 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P84, DOI 10.1109/ICPC.2010.48
   German DM, 2012, IEEE SOFTWARE, V29, P58, DOI 10.1109/MS.2012.50
   German DM, 2009, PROC INT CONF SOFTW, P188, DOI 10.1109/ICSE.2009.5070520
   German DM, 2009, INT FED INFO PROC, V299, P185
   German Daniel M., 2010, P 25 IEEE ACM INT C, P437, DOI [10.1145/1858996.1859088, DOI 10.1145/1858996.1859088]
   GitHub, 2023, Licensee
   Gobeille R, 2008, P 2008 INT WORK C MI, P47, DOI DOI 10.1145/1370750.1370763
   Gomulkiewicz R.W., 2009, WASHINGTON U J LAW P, V30, P261
   Gonzalez-Barahona Jesus M, 2023, Zenodo, DOI 10.5281/ZENODO.8200352
   Gousios Georgios, 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P12, DOI 10.1109/MSR.2012.6224294
   Harutyunyan N, 2020, COMPUTER, V53, P77, DOI 10.1109/MC.2020.2983530
   Libraries.io, 2023, Libraries.io
   Lindberg V., 2008, Intellectual Property and Open Source: A Practical Guide to Protecting Code
   Ma YX, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09905-9
   Manabe Y, 2010, P JOINT ERCIM WORKSH, P83
   Manabe Y, 2014, IFIP ADV INF COMM TE, V427, P51
   Maryka T, 2015, IFIP ADV INF COMM TE, V451, P146, DOI 10.1007/978-3-319-17837-0_14
   McKinney Wes, 2011, Python for high performance and scientific computing, V14, P1, DOI DOI 10.1002/MMCE.20381
   nexB, 2022, ScanCode LicenseDB
   Ombredanne P, 2020, COMPUTER, V53, P105, DOI 10.1109/MC.2020.3011082
   Open Source Initiative, 2022, Machine readable OSI license information
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Phipps S, 2020, COMPUTER, V53, P115, DOI 10.1109/MC.2020.3024403
   Pietri Antoine, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P138, DOI 10.1109/MSR.2019.00030
   Rosen L., 2005, OPEN SOURCE LICENSIN
   Rousseau G, 2020, EMPIR SOFTW ENG, V25, P2930, DOI 10.1007/s10664-020-09828-5
   Shafranovich Y, 2005, RFC 4180-common format and MIME type for comma-separated values (CSV) files
   SPDX Workgroup, 2020, Software package data exchange licence list, 2019
   Srinivasa-Desikan B., 2018, Natural Language Processing and Computational Linguistics
   Stewart K., 2010, International Free and Open Source Software Law Review, V2, P191
   The CodeMeta Project, 2023, The CodeMeta Project
   The Open Group, 2018, file: determine file type, 2018
   Vendome C, 2017, PROC INT CONF SOFTW, P118, DOI 10.1109/ICSE.2017.19
   Vendome C, 2017, EMPIR SOFTW ENG, V22, P1537, DOI 10.1007/s10664-016-9438-4
   Vendome C, 2015, PROC IEEE INT CONF S, P31, DOI 10.1109/ICSM.2015.7332449
   Xu SH, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3518994
   Zacchiroli S, 2022, IEEE WORK CONF MIN S, P757, DOI 10.1145/3524842.3528491
   Zhang D, 2020, IEEE INT CONF AUTOM, P1312, DOI 10.1145/3324884.3415303
NR 52
TC 0
Z9 0
U1 0
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2023
VL 28
IS 6
AR 147
DI 10.1007/s10664-023-10377-w
PG 43
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA X3GU0
UT WOS:001097378100001
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Guglielmi, E
   Scalabrino, S
   Bavota, G
   Oliveto, R
AF Guglielmi, Emanuela
   Scalabrino, Simone
   Bavota, Gabriele
   Oliveto, Rocco
TI Using gameplay videos for detecting issues in video games
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Video games; Gameplay videos; Mining software repositories
AB ContextThe game industry is increasingly growing in recent years. Every day, millions of people play video games, not only as a hobby, but also for professional competitions ( e.g., e-sports or speed-running) or for making business by entertaining others ( e.g., streamers). The latter daily produce a large amount of gameplay videos in which they also comment live what they experience. But no software and, thus, no video game is perfect: Streamers may encounter several problems (such as bugs, glitches, or performance issues) while they play. Also, it is unlikely that they explicitly report such issues to developers. The identified problems may negatively impact the user's gaming experience and, in turn, can harm the reputation of the game and of the producer.ObjectiveIn this paper, we propose and empirically evaluate GELID, an approach for automatically extracting relevant information from gameplay videos by (i) identifying video segments in which streamers experienced anomalies; (ii) categorizing them based on their type ( e.g., logic or presentation); clustering them based on (iii) the context in which appear ( e.g., level or game area) and (iv) on the specific issue type ( e.g., game crashes).MethodWe manually defined a training set for step 2 of GELID (categorization) and a test set for validating in isolation the four components of GELID. In total, we manually segmented, labeled, and clustered 170 videos related to 3 video games, defining a dataset containing 604 segments.ResultsWhile in steps 1 (segmentation) and 4 (specific issue clustering) GELID achieves satisfactory results, it shows limitations on step 3 (game context clustering) and, above all, step 2 (categorization).
C1 [Guglielmi, Emanuela; Scalabrino, Simone; Oliveto, Rocco] Univ Molise, Stake Lab, I-86090 Pesche, IS, Italy.
   [Bavota, Gabriele] Univ Svizzera Italiana, Via Giuseppe Buffi 13, CH-6900 Lugano, Switzerland.
C3 University of Molise; Universita della Svizzera Italiana
RP Guglielmi, E (corresponding author), Univ Molise, Stake Lab, I-86090 Pesche, IS, Italy.
EM emanuela.guglielmi@unimol.it; simone.scalabrino@unimol.it;
   gabriele.bavota@usi.ch; rocco.oliveto@unimol.it
CR Ankerst M, 1999, SIGMOD RECORD, VOL 28, NO 2 - JUNE 1999, P49
   BENJAMINI Y, 1995, J R STAT SOC B, V57, P289, DOI 10.1111/j.2517-6161.1995.tb02031.x
   Bradley AP, 1997, PATTERN RECOGN, V30, P1145, DOI 10.1016/S0031-3203(96)00142-2
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chen N, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P767, DOI 10.1145/2568225.2568263
   Choudhury S, 2015, 2015 INTERNATIONAL CONFERENCE ON SMART TECHNOLOGIES AND MANAGEMENT FOR COMPUTING, COMMUNICATION, CONTROLS, ENERGY AND MATERIALS (ICSTM), P89, DOI 10.1109/ICSTM.2015.7225395
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Ester M., 1996, KDD 96, P226, DOI DOI 10.5555/3001460.3001507
   Flach P. A, 2016, Encyclopedia of Machine Learning and Data Mining, DOI 10.1007/978-1-4899-7502-7_739-1
   FUKUNAGA K, 1975, IEEE T INFORM THEORY, V21, P32, DOI 10.1109/TIT.1975.1055330
   Gnanambal S., 2018, International Journal of Advanced Networking and Applications, V9, P3640
   Guglielmi E, 2023, Replication package of "using gameplay videos for detecting issues in video games
   Guglielmi E, 2022, arXiv
   Guzdial M, 2018, Arxiv, DOI arXiv:1809.09424
   Hearst MA, 1998, IEEE INTELL SYST APP, V13, P18, DOI 10.1109/5254.708428
   Jones S. E., 2008, The Meaning of Video Games: Gaming and Textual Strategies
   Karvelis P, 2018, IEEE IJCNN
   Lewis Chris, 2010, Proceedings of the 5th International Conference on the Foundations of Digital Games FDG, P108
   Li CX, 2019, PROCEEDINGS OF THE 14TH INTERNATIONAL CONFERENCE ON THE FOUNDATIONS OF DIGITAL GAMES (FDG'19), DOI 10.1145/3337722.3341870
   Lin DY, 2019, EMPIR SOFTW ENG, V24, P4006, DOI 10.1007/s10664-019-09733-6
   Lin D, 2017, EMPIR SOFTW ENG, V22, P2095, DOI 10.1007/s10664-016-9480-2
   MacFarland T.W., 2016, Introduction to Nonparametric Statistics for the Biological Sciences Using R, P103, DOI [10.1007/978-3-319-30634-6_4, DOI 10.1007/978-3-319-30634-6_4]
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   MILLER GA, 1995, COMMUN ACM, V38, P39, DOI 10.1145/219717.219748
   Murphy-Hill E, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1, DOI 10.1145/2568225.2568226
   Ozkok F. O., 2017, INT J INTELL SYST, V5, P247, DOI DOI 10.18201/IJISAE.2017533899
   Python, 2023, spacy
   Python, 2023, Opencv
   Python, 2023, Video-kf
   Ramchoun H, 2016, INT J INTERACT MULTI, V4, P26, DOI 10.9781/ijimai.2016.415
   Rong X, 2016, Arxiv, DOI arXiv:1411.2738
   Santos RES, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3268923
   Scalabrino S, 2019, IEEE T SOFTWARE ENG, V45, P68, DOI 10.1109/TSE.2017.2759112
   Shah S, 2019, arXiv
   Soucek T., 2020, Transnet v2: An effective deep network architecture for fast shot transition detection
   Steam, 2023, Conan exiles
   Steam, 2023, Dayz
   Steam, 2023, New world
   Tang ST, 2019, LECT NOTES COMPUT SC, V11361, P577, DOI 10.1007/978-3-030-20887-5_36
   Tang Wan, 2015, Shanghai Arch Psychiatry, V27, P62, DOI 10.11919/j.issn.1002-0829.215010
   Tian Y, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P568, DOI 10.1145/2591062.2591071
   Tin Kam Ho, 1995, Proceedings of the Third International Conference on Document Analysis and Recognition, P278, DOI 10.1109/ICDAR.1995.598994
   Toy Eric J., 2018, 2018 5th International Conference on Computational Science and Computational Intelligence (CSCI), P1054, DOI 10.1109/CSCI46756.2018.00205
   Truelove A, 2021, PROC IEEE ACM INT C, P258, DOI 10.1109/ICSE-Companion52605.2021.00120
   Wang Z, 2004, IEEE T IMAGE PROCESS, V13, P600, DOI 10.1109/TIP.2003.819861
   Wen Z, 2004, PROG COMPREHEN, P194, DOI 10.1109/WPC.2004.1311061
   Zhang Y, 2010, INT J MACH LEARN CYB, V1, P43, DOI 10.1007/s13042-010-0001-0
NR 48
TC 0
Z9 0
U1 2
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2023
VL 28
IS 6
AR 136
DI 10.1007/s10664-023-10365-0
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA U1HD2
UT WOS:001082374400001
DA 2024-07-18
ER

PT J
AU Itzik, D
   Roy, G
AF Itzik, David
   Roy, Gelbard
TI Does agile methodology fit all characteristics of software projects?
   Review and analysis
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Review
DE Agile methodology; Agile software development; Software project
   management; Sentiment analysis; Systematic literature review
ID OF-THE-ART; DECISION-MAKING; SUCCESS FACTORS; COLLABORATION;
   ARCHITECTURE; CHALLENGES; PRODUCTIVITY; QUALITY; IMPACT; WORK
AB The agile paradigm for software projects has significantly impacted software development worldwide. It is currently widely accepted as having advantages in accommodating changes due to volatile requirements. However, several aspects of the agile paradigm and its compatibility with various software project characteristics remain empirically under-researched. In this paper, we employ a systematic literature review (SLR) to assess the compatibility of agile methodology with the characteristics of software development projects. We have mapped the characteristics to create a two-dimensional decision-making framework comprised of the software development life cycle (SDLC) phases (the y-axis) and knowledge areas derived from the Project Management Body of Knowledge (PMBOK) (the x-axis). We have then explored the position-sentiment regarding each cell of the decision-making framework as it is expressed in a wide set of academic articles, to help researchers and practitioners evaluate the compatibility of the agile methodology with the software project they are dealing with. Predictably, this would assist them in effectively assigning the agile methodology to suitable projects.
C1 [Itzik, David; Roy, Gelbard] Bar Ilan Univ, Grad Sch Business Adm, Informat Syst Program, Ramat Gan 5900, Israel.
C3 Bar Ilan University
RP Roy, G (corresponding author), Bar Ilan Univ, Grad Sch Business Adm, Informat Syst Program, Ramat Gan 5900, Israel.
EM Itsikdav@gmail.com; roy.gelbard@biu.ac.il
CR Abrahamsson P, 2003, PROC INT CONF SOFTW, P244, DOI 10.1109/ICSE.2003.1201204
   Abrahamsson P, 2017, Arxiv, DOI arXiv:1709.08439
   Abrahamsson P, 2010, IEEE SOFTWARE, V27, P16, DOI 10.1109/MS.2010.36
   Ahimbisibwe A., 2015, Journal of Enterprise Information Management
   Ahmad S, 2013, J PROD INNOVAT MANAG, V30, P331, DOI 10.1111/j.1540-5885.2012.01002.x
   Al-Saqqa Samar, 2020, International Journal of Interactive Mobile Technologies, V14, P246, DOI 10.3991/ijim.v14i11.13269
   Alaidaros H., 2019, INT J SUPPLY CHAIN M, V8, P1
   Alami A, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10208-4
   Alqudah M., 2017, International Journal on Advanced Science, Engineering and Information Technology, V7, P526, DOI 10.18517/ijaseit.7.2.1830
   Alzoubi Y, 2021, IEEE T PROF COMMUN, V64, P322, DOI 10.1109/TPC.2021.3110396
   [Anonymous], 2012, Disciplined agile delivery: A practitioner's guide to agile software delivery in the enterprise
   Axelsson J, 2016, J SYST SOFTWARE, V114, P69, DOI 10.1016/j.jss.2015.12.020
   Babar M.A., 2013, AGILE SOFTWARE ARCHI
   Bass JM, 2016, INFORM SOFTWARE TECH, V75, P1, DOI 10.1016/j.infsof.2016.03.001
   Bass JulianM., 2013, Journal of International Technology and Information Management, V22, P5
   Batra D, 2017, COMMUN ASSOC INF SYS, V41, P429, DOI 10.17705/1CAIS.04120
   Batra D, 2010, COMMUN ASSOC INF SYS, V27, P379
   Beck K., 2000, EXTREME PROGRAMMING
   Beecham S, 2021, J SYST SOFTWARE, V171, DOI 10.1016/j.jss.2020.110823
   Behutiye W, 2022, J SYST SOFTWARE, V183, DOI 10.1016/j.jss.2021.111112
   Berlowski J, 2016, E-INFORMATICA, V10
   Boehm B, 2004, PROC INT CONF SOFTW, P718, DOI 10.1109/ICSE.2004.1317503
   Boehm B, 2002, COMPUTER, V35, P64, DOI 10.1109/2.976920
   Borque Pierre., 2014, Guide to the Software Engineering Body of Knowledge (SWEBOK), Vv3.0
   Campanelli AS, 2015, J SYST SOFTWARE, V110, P85, DOI 10.1016/j.jss.2015.08.035
   Capilla R, 2016, J SYST SOFTWARE, V116, P191, DOI 10.1016/j.jss.2015.08.054
   Chan FKY, 2009, DECIS SUPPORT SYST, V46, P803, DOI 10.1016/j.dss.2008.11.009
   Chow T, 2008, J SYST SOFTWARE, V81, P961, DOI 10.1016/j.jss.2007.08.020
   CMMI Institute, 2018, INTR CMMI V2 0
   Cockburn A., 2004, Crystal clear: A human-powered methodology for small teams: A human-powered methodology for small teams
   Conforto EC, 2016, INT J PROJ MANAG, V34, P660, DOI 10.1016/j.ijproman.2016.01.007
   Coram M, 2005, 12TH IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P363, DOI 10.1109/ECBS.2005.68
   Cornide-Reyes H, 2021, IEEE ACCESS, V9, P84724, DOI 10.1109/ACCESS.2021.3087717
   Dikert K, 2016, J SYST SOFTWARE, V119, P87, DOI 10.1016/j.jss.2016.06.013
   Dingsoyr T, 2018, EMPIR SOFTW ENG, V23, P490, DOI 10.1007/s10664-017-9524-2
   Drury M, 2012, J SYST SOFTWARE, V85, P1239, DOI 10.1016/j.jss.2012.01.058
   Dvir D, 1998, RES POLICY, V27, P915, DOI 10.1016/S0048-7333(98)00085-7
   Dyba Tore, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P225
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Dyck Sebastian, 2012, 2012 45th Hawaii International Conference on System Sciences (HICSS), P5299, DOI 10.1109/HICSS.2012.310
   Felsing JM., 2002, IEEE SOFTWARE, V7, P67
   Fowler M., 2001, Software Development, V9, P28
   Gartner Inc, 2019, GARTN SAYS GLOB IT S
   Gehlenborg N, 2012, NAT METHODS, V9, P213, DOI 10.1038/nmeth.1902
   Ghobadi S, 2016, INFORM SYST J, V26, P95, DOI 10.1111/isj.12053
   Gilb T, 2005, COMPETITIVE ENGINEERING: A HANDBOOK FOR SYSTEMS ENGINEERING, REQUIREMENTS ENGINEERING, AND SOFTWARE ENGINEERING USING PLANGUAGE, P1, DOI 10.1016/B978-075066507-0/50005-2
   Glass RL, 2004, COMMUN ACM, V47, P19, DOI 10.1145/986213.986228
   Heeager LT, 2015, EMPIR SOFTW ENG, V20, P1762, DOI 10.1007/s10664-014-9335-7
   Highsmith J, 2001, CUTTER IT J, V14, P2
   Hoda R, 2010, ACM SIGPLAN NOTICES, V45, P74, DOI 10.1145/1932682.1869467
   Howell D, 2010, INT J PROJ MANAG, V28, P256, DOI 10.1016/j.ijproman.2009.06.002
   Jalali S, 2012, INT SYMP EMP SOFTWAR, P29, DOI 10.1145/2372251.2372257
   Jalali S, 2012, J SOFTW-EVOL PROC, V24, P643, DOI 10.1002/smr.561
   Karhapää P, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09903-x
   Kasauli R, 2021, J SYST SOFTWARE, V172, DOI 10.1016/j.jss.2020.110851
   Kitchenham B., 2007, GUIDELINES PERFORMIN
   Korhonen K, 2013, SOFTWARE QUAL J, V21, P599, DOI 10.1007/s11219-012-9189-4
   Kropp M., 2016, Product-Focused Software Process Improvement, P416, DOI [DOI 10.1007/978-3, DOI 10.1007/978-3-319-49094-628, 10.1007/978-3-319-49094-6%2028]
   Kula E, 2022, IEEE T SOFTWARE ENG, V48, P3573, DOI 10.1109/TSE.2021.3101192
   Larman C., 2016, Large-Scale Scrum: More with LeSS
   Larusdottir M, 2017, J SYST SOFTWARE, V123, P214, DOI 10.1016/j.jss.2016.01.024
   Lee G, 2010, MIS QUART, V34, P87
   Leffingwell D., 2016, SAFe 4.0 Reference Guide: Scaled Agile Framework for Lean Software and Systems Engineering
   Lehman M. M., 1996, Software Process Technology. 5th European Workshop, EWSPT '96 Proceedings, P108, DOI 10.1007/BFb0017737
   Lehman T. J., 2011, 2011 Annual SRII Global Conference (SRII), P749, DOI 10.1109/SRII.2011.82
   Lenarduzzi V, 2017, PROC IEEE ACM INT C, P146, DOI 10.1109/ICSE-C.2017.122
   Lindsjorn Y, 2016, J SYST SOFTWARE, V122, P274, DOI 10.1016/j.jss.2016.09.028
   Martini A, 2015, INFORM SOFTWARE TECH, V67, P237, DOI 10.1016/j.infsof.2015.07.005
   McLeod L, 2012, PROJ MANAG J, V43, P68, DOI 10.1002/pmj.21290
   Melo CD, 2013, INFORM SOFTWARE TECH, V55, P412, DOI 10.1016/j.infsof.2012.09.004
   Meredith Jack, 2019, IEEE Engineering Management Review, V47, P127, DOI 10.1109/EMR.2019.2928961
   Ming Huo, 2004, Proceedings of the 28th Annual International Computer Software and Applications Conference. COMPSAC 2004, P520, DOI 10.1109/CMPSAC.2004.1342889
   Mishra D, 2012, INFORM SOFTWARE TECH, V54, P1067, DOI 10.1016/j.infsof.2012.04.002
   Moe NB., 2015, 2015 IEEE 10 INT C G
   Moe NB, 2012, INFORM SOFTWARE TECH, V54, P853, DOI 10.1016/j.infsof.2011.11.006
   Muhammad A, 2021, INTELL AUTOM SOFT CO, V27, P15, DOI 10.32604/iasc.2021.014427
   Naldi M, 2019, Arxiv, DOI [arXiv:1901.08319, DOI 10.48550/ARXIV.1901.08319]
   Nurdiani I, 2016, J SYST SOFTWARE, V119, P162, DOI 10.1016/j.jss.2016.06.043
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Petersen K, 2009, J SYST SOFTWARE, V82, P1479, DOI 10.1016/j.jss.2009.03.036
   Rahy S, 2022, IET SOFTW, V16, P60, DOI 10.1049/sfw2.12037
   Ramesh B, 2012, INFORM SYST RES, V23, P323, DOI 10.1287/isre.1110.0351
   Ramesh B, 2010, INFORM SYST J, V20, P449, DOI 10.1111/j.1365-2575.2007.00259.x
   Rinker T., 2017, Package "sentimentr."
   Rose KH, 2013, PROJ MANAG J, V44, pe1, DOI 10.1002/pmj.21345
   Russo D, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3464938
   Salija K, 2016, INT J ADV SCI ENG IN, V6
   Santos A, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09907-7
   Schwaber K., 2002, AGILE SOFTWARE DEV S
   Serrador P, 2015, INT J PROJ MANAG, V33, P1040, DOI 10.1016/j.ijproman.2015.01.006
   Sharif B., 2012, INT J COMPUT SCI ISS, V9, P170
   Sheffield J, 2013, INT J PROJ MANAG, V31, P459, DOI 10.1016/j.ijproman.2012.09.011
   Shenhar A, 2007, Reinventing project management: the diamond approach to successful growth and innovation
   Silva FS, 2015, INFORM SOFTWARE TECH, V58, P20, DOI 10.1016/j.infsof.2014.09.012
   Smite D, 2009, LECT NOTES BUS INF P, V32, P87
   Smith Laurajane., 2009, INTANGIBLE HERITAGE, P1
   Sommerville Ian, 2016, Software engineering 8
   Standards Coordinating Committee of the Computer Society, 1990, 61012 IEEE STAND COO
   Stapleton Jennifer., 2003, DSDM: Business focused development
   Stavru S, 2014, J SYST SOFTWARE, V94, P87, DOI 10.1016/j.jss.2014.03.041
   Stray V, 2022, SOFTWARE QUAL J, V30, P455, DOI 10.1007/s11219-021-09561-2
   Sutherland J., 2008, P 41 ANN HAWAII INT, P466, DOI [10.1109/HICSS.2008.384, DOI 10.1109/HICSS.2008.384]
   Tam C, 2020, INT J PROJ MANAG, V38, P165, DOI 10.1016/j.ijproman.2020.02.001
   Tavares BG, 2021, J COMPUT INFORM SYST, V61, P561, DOI 10.1080/08874417.2020.1839813
   Team C. P, 2010, CMMI SERV
   Tessem B, 2017, PROCEDIA COMPUT SCI, V121, P244, DOI 10.1016/j.procs.2017.11.034
   The Standish Group, 2020, STANDISH GROUP CHAOS
   Tiky Y.T.W., 2016, Software Development Life Cycle. Research Report
   Tiwana A, 2004, COMMUN ACM, V47, P73, DOI 10.1145/1029496.1029497
   Traini L, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10069-3
   Trendowicz A, 2009, ADV COMPUT, V77, P185, DOI 10.1016/S0065-2458(09)01206-6
   Turetken O, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1796
   Van Wessel RM, 2022, IEEE T ENG MANAGE, V69, P3489, DOI 10.1109/TEM.2021.3128278
   VersionOne Inc, 2007, ANN STAT AG DEV SURV
   Wafa R, 2022, APPL SCI-BASEL, V12, DOI 10.3390/app122110698
   Yang C, 2016, J SYST SOFTWARE, V111, P157, DOI 10.1016/j.jss.2015.09.028
   Yang LR, 2011, INT J PROJ MANAG, V29, P258, DOI 10.1016/j.ijproman.2010.03.006
   Young DK, 2016, COMMUN ASSOC INF SYS, V39, P267, DOI 10.17705/1CAIS.03914
   Zwikael O, 2019, INT J OPER PROD MAN, V39, P503, DOI 10.1108/IJOPM-02-2018-0086
NR 119
TC 2
Z9 2
U1 21
U2 40
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2023
VL 28
IS 4
AR 105
DI 10.1007/s10664-023-10334-7
PG 89
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA M2SY0
UT WOS:001028741600001
DA 2024-07-18
ER

PT J
AU Maeprasart, V
   Wattanakriengkrai, S
   Kula, RG
   Treude, C
   Matsumoto, K
AF Maeprasart, Vittunyuta
   Wattanakriengkrai, Supatsara
   Kula, Raula Gaikovina
   Treude, Christoph
   Matsumoto, Kenichi
TI Understanding the role of external pull requests in the NPM ecosystem
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Third-party libraries; Pull requests; OSS sustainability; Software
   ecosystems
ID SOFTWARE DEVELOPERS; CRITERION
AB The risk to using third-party libraries in a software application is that much needed maintenance is solely carried out by library maintainers. These libraries may rely on a core team of maintainers (who might be a single maintainer that is unpaid and overworked) to serve a massive client user-base. On the other hand, being open source has the benefit of receiving contributions (in the form of External PRs) to help fix bugs and add new features. In this paper, we investigate the role by which External PRs (contributions from outside the core team of maintainers) contribute to a library. Through a preliminary analysis, we find that External PRs are prevalent, and just as likely to be accepted as maintainer PRs. We find that 26.75% of External PRs submitted fix existing issues. Moreover, fixes also belong to labels such as breaking changes, urgent, and on-hold. Differently from Internal PRs, External PRs cover documentation changes (44 out of 384 PRs), while not having as much refactoring (34 out of 384 PRs). On the other hand, External PRs also cover new features (380 out of 384 PRs) and bugs (120 out of 384 PRs). Our results lay the groundwork for understanding how maintainers decide which external contributions they select to evolve their libraries and what role they play in reducing the workload.
C1 [Maeprasart, Vittunyuta; Wattanakriengkrai, Supatsara; Kula, Raula Gaikovina; Matsumoto, Kenichi] Nara Inst Sci & Technol, Nara, Japan.
   [Treude, Christoph] Univ Melbourne, Melbourne, Australia.
C3 Nara Institute of Science & Technology; University of Melbourne
RP Maeprasart, V (corresponding author), Nara Inst Sci & Technol, Nara, Japan.
EM maeprasart.vittunyuta.mn2@is.naist.jp;
   wattanakri.supatsara.ws3@is.naist.jp; raula-k@is.naist.jp;
   ctreude@gmail.com; matumoto@is.naist.jp
RI Treude, Christoph/AAZ-6257-2021; Kula, Raula/AAD-6079-2019
OI Kula, Raula/0000-0003-2324-0608; Treude, Christoph/0000-0002-6919-2149
FU Japanese Society for the Promotion of Science (JSPS) KAKENHI [20K19774,
   20H05706]
FX AcknowledgementsThis work is supported by Japanese Society for the
   Promotion of Science (JSPS) KAKENHI Grant Numbers 20K19774 and 20H05706.
CR Abdalkareem R, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P385, DOI 10.1145/3106237.3106267
   Alfadel M, 2021, IEEE WORK CONF MIN S, P254, DOI 10.1109/MSR52588.2021.00037
   Alrubaye H, 2020, APPL SOFT COMPUT, V90, DOI 10.1016/j.asoc.2020.106140
   [Anonymous], 2019, MAJ REF SZMARCZ PULL
   [Anonymous], 2022, LIB IO OP SOURC DISC
   [Anonymous], 2017, UPD WRIT MD MATTM PU
   [Anonymous], 2017, MERG CARDS THEM MAST
   [Anonymous], 2017, REM TLS ACC CREAT TE
   [Anonymous], 2019, FEAT ADD TWITCH IC A
   [Anonymous], 2016, BIG 21501 EU COOK WA
   [Anonymous], 2019, MARK PACK HAV NO SID
   Assavakamhaenghan N, 2021, P 18 INT C MIN SOFTW, DOI 10.48550/arXiv.2104.02933
   Berger A, 2021, LOG4J VULNERABILITY
   Bonaccorsi A., 2006, Knowledge Technology & Policy, V18, P40, DOI 10.1007/s12130-006-1003-9
   Chinthanet B, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09951-x
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Cogo FR, 2021, IEEE T SOFTWARE ENG, V47, P2457, DOI 10.1109/TSE.2019.2952130
   Cohen J., 1988, STAT POWER ANAL BEHA
   Cramer H., 1946, Mathematical methods of statistics.
   Decan A, 2018, IEEE WORK CONF MIN S, P181, DOI 10.1145/3196398.3196401
   Dey T, 2020, P 14 ACM IEEE INT S, P1
   Dey T, 2020, IEEE WORK CONF MIN S, P209, DOI 10.1145/3379597.3387478
   Dey T, 2019, 15TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING (PROMISE'19), P36, DOI 10.1145/3345629.3345634
   Dinno A, 2015, STATA J, V15, P292, DOI 10.1177/1536867X1501500117
   Durumeric Z, 2014, PROCEEDINGS OF THE 2014 ACM INTERNET MEASUREMENT CONFERENCE (IMC'14), P475, DOI 10.1145/2663716.2663755
   Fagerholm F., 2014, P 8 ACM IEEE INT S E, P1
   Friedman N, 2020, GITHUB BLOG
   Golzadeh M, 2020, P 2020 IEEE ACM 42 I, P6, DOI [10.1145/3387940.3391503, DOI 10.1145/3387940.3391503]
   Gousios G, 2016, PROC INT CONF SOFTW, P285, DOI 10.1145/2884781.2884826
   Gousios G, 2013, IEEE WORK CONF MIN S, P233, DOI 10.1109/MSR.2013.6624034
   Hars A, 2002, INT J ELECTRON COMM, V6, P25
   Hata H, 2019, PROC INT CONF SOFTW, P1211, DOI 10.1109/ICSE.2019.00123
   He H, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P478, DOI 10.1145/3468264.3468571
   Heinemann Lars, 2011, Top Productivity through Software Reuse. Proceedings of the 12th International Conference on Software Reuse, ICSR 2011, P207, DOI 10.1007/978-3-642-21347-2_16
   Huang KF, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P518, DOI 10.1145/3368089.3409689
   Iaffaldano G, 2019, 2019 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON SOFTWARE HEALTH (SOHEAL 2019), P9, DOI 10.1109/SoHeal.2019.00009
   Islam S, 2021, PROC IEEE INT CONF S, P664, DOI 10.1109/ICSME52107.2021.00077
   KRUSKAL WH, 1952, J AM STAT ASSOC, V47, P583, DOI 10.1080/01621459.1952.10483441
   Kula RG, 2018, EMPIR SOFTW ENG, V23, P384, DOI 10.1007/s10664-017-9521-5
   Lee A, 2017, PROC INT CONF SOFTW, P187, DOI 10.1109/ICSE.2017.25
   Li ZX, 2022, IEEE T SOFTWARE ENG, V48, P2173, DOI 10.1109/TSE.2021.3053403
   Mäntylä MV, 2017, IEEE WORK CONF MIN S, P198, DOI 10.1109/MSR.2017.47
   McHugh ML, 2012, BIOCHEM MEDICA, V22, P276, DOI 10.11613/bm.2012.031
   Mirhosseini S, 2017, IEEE INT CONF AUTOM, P84, DOI 10.1109/ASE.2017.8115621
   Nakakoji K, 2003, INT WORKSHOP PRINCIP
   Nichols S, 2022, LOG4SHELL VULNERABIL
   OpenSSF, 2022, OP ANN ALPH OM PROJ
   Pearson K, 1900, PHILOS MAG, V50, P157, DOI 10.1080/14786440009463897
   Pinto G, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P112, DOI 10.1109/SANER.2016.68
   Raymond Eric, 1999, KNOWLEDGE TECHNOLOGY, V12, P23, DOI DOI 10.1007/S12130-999-1026-0
   Rehman I, 2020, P 36 INT C SOFTW MAI
   Roberts JA, 2006, MANAGE SCI, V52, P984, DOI 10.1287/mnsc.1060.0554
   Rombaut B, 2022, ACM T SOFTW ENG METH
   Roth E, 2022, OPEN SOURCE DEV CORR
   Samoladas I, 2010, INFORM SOFTWARE TECH, V52, P902, DOI 10.1016/j.infsof.2010.05.001
   Schilling A., 2012, 2012 45th Hawaii International Conference on System Sciences (HICSS), P3446, DOI 10.1109/HICSS.2012.644
   Sharma A, 2022, NPM LIB COLORS FAKER
   Steinmacher I, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P256, DOI 10.1145/3180155.3180208
   Steinmacher I, 2013, 2013 6TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P25, DOI 10.1109/CHASE.2013.6614728
   Subramanian VN, 2022, IEEE SOFTWARE, V39, P93, DOI 10.1109/MS.2020.3041241
   Thung F, 2016, IEEE INT CONF AUTOM, P896, DOI 10.1145/2970276.2975940
   Valiev M, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P644, DOI 10.1145/3236024.3236062
   Viera AJ, 2005, FAM MED, V37, P360
   Wang D, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09997-x
   Wattanakriengkrai S, 2023, IEEE T SOFTWARE ENG, V49, P2566, DOI 10.1109/TSE.2022.3225197
   Wattanakriengkrai S, 2022, J SYST SOFTWARE, V183, DOI 10.1016/j.jss.2021.111117
   Wessel Mairieli, 2018, Proceedings of the ACM on Human-Computer Interaction, V2, DOI 10.1145/3274451
   Xu BW, 2020, EMPIR SOFTW ENG, V25, P755, DOI 10.1007/s10664-019-09771-0
   YaziciV, 2021, VOLK YAZ TWITT LOG4J
   Zerouali A, 2018, LECT NOTES COMPUT SC, V10826, P95, DOI 10.1007/978-3-319-90421-4_6
   Zhou MH, 2012, PROC INT CONF SOFTW, P518, DOI 10.1109/ICSE.2012.6227164
NR 71
TC 1
Z9 1
U1 4
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2023
VL 28
IS 4
AR 84
DI 10.1007/s10664-023-10315-w
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA G7XE3
UT WOS:000991234200002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Yang, N
   Cuijpers, P
   Hendriks, D
   Schiffelers, R
   Lukkien, J
   Serebrenik, A
AF Yang, Nan
   Cuijpers, Pieter
   Hendriks, Dennis
   Schiffelers, Ramon
   Lukkien, Johan
   Serebrenik, Alexander
TI An interview study about the use of logs in embedded software
   engineering
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Log analysis practice; Embedded software enigineering
ID CHARACTERIZING LOGGING PRACTICES; KNOWLEDGE; STATE
AB ContextExecution logs capture the run-time behavior of software systems. To assist developers in their maintenance tasks, many studies have proposed tools to analyze execution information from logs. However, it is as yet unknown how industry developers use logs in embedded software engineering.ObjectiveIn this study, we aim to understand how developers use logs in an embedded software engineering context. Specifically, we would like to gain insights into the type of logs developers analyze, the purposes for which developers analyze logs, the information developers need from logs and their expectation on tool support.MethodIn order to achieve the aim, we conducted these interview studies. First, we interviewed 25 software developers from ASML, which is a leading company in developing lithography machines. This exploratory case study provides the preliminary findings. Next, we validated and refined our findings by conducting a replication study. We involved 14 interviewees from four companies who have different software engineering roles in their daily work.ResultsAs the result of our first study, we compile a preliminary taxonomy which consists of four types of logs used by developers in practice, 18 purposes of using logs, 13 types of information developers search in logs, 13 challenges faced by developers in log analysis and three suggestions for tool support provided by developers. This taxonomy is refined in the replication study with three additional purposes, one additional information need, four additional challenges and three additional suggestions of tool support. In addition, with these two studies, we observed that text-based editors and self-made scripts are commonly used when it comes to tooling in log analysis practice. As indicated by the interviewees, the development of automatic analysis tools is hindered by the quality of the logs, which further suggests several challenges in log instrumentation and management.ConclusionsBased on our study, we provide suggestions for practitioners on logging practices. We provide implications for tool builders on how to further improve tools based on existing techniques. Finally, we suggest some research directions and studies for researchers to further study software logging.
C1 [Yang, Nan; Cuijpers, Pieter; Schiffelers, Ramon; Lukkien, Johan; Serebrenik, Alexander] Eindhoven Univ Technol, Eindhoven, Netherlands.
   [Cuijpers, Pieter] Aalborg Univ, Aalborg, Denmark.
   [Hendriks, Dennis] ESI TNO, Eindhoven, Netherlands.
   [Hendriks, Dennis] Radboud Univ Nijmegen, Nijmegen, Netherlands.
   [Schiffelers, Ramon] ASML, Veldhoven, Netherlands.
C3 Eindhoven University of Technology; Aalborg University; Radboud
   University Nijmegen; ASML Holding
RP Yang, N (corresponding author), Eindhoven Univ Technol, Eindhoven, Netherlands.
EM n.yang1@tue.nl; p.j.l.cuijpers@tue.nl; dennis.hendriks@tno.nl;
   r.r.h.schiffelers@tue.nl; j.j.lukkien@tue.nl; a.serebrenik@tue.nl
OI Serebrenik, Alexander/0000-0002-1418-0095; Cuijpers,
   Pieter/0000-0002-5487-4972
CR Aggarwal K, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1821
   Amar H, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P49, DOI 10.1145/3236024.3236069
   [Anonymous], 2016, P 10 WORKSHOP MODELS
   Antonino PO, 2016, IEEE SOFTWARE, V33, P56, DOI 10.1109/MS.2016.142
   Artho C, 2007, P INT COMP SOFTW APP, P541
   Asadollah SA, 2015, LECT NOTES COMPUT SC, V9447, P194, DOI 10.1007/978-3-319-25945-1_12
   Asuncion HU, 2010, 2010 ACM IEEE 32 INT, V1, P95
   Baltes S, 2021, Arxiv, DOI arXiv:2002.07764
   Bao LF, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P851, DOI 10.1109/ASE.2019.00084
   Barik T, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P92, DOI 10.1145/2889160.2889231
   Beschastnikh I, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3375633
   BIERMANN AW, 1972, IEEE T COMPUT, VC 21, P592, DOI 10.1109/TC.1972.5009015
   Bird Christian., 2016, Perspectives on Data Science for Software Engineering
   Broadfoot GH, 2005, LECT NOTES COMPUT SC, V3582, P548
   Buchbinder E, 2011, QUAL SOC WORK, V10, P106, DOI 10.1177/1473325010370189
   Chen BY, 2021, ACM COMPUT SURV, V54, DOI 10.1145/3448976
   Chen BY, 2017, EMPIR SOFTW ENG, V22, P330, DOI 10.1007/s10664-016-9429-5
   Cicchetti A, 2008, IEEE INT ENTERP DIST, P222, DOI 10.1109/EDOC.2008.44
   da Silva AJ, 2006, IEEE SYS MAN CYBERN, P4569, DOI 10.1109/ICSMC.2006.384866
   Dallmeier V., 2010, P 19 INT S SOFTWARE, P85, DOI [DOI 10.1145/1831708.1831719, 10.1145/1831708.1831719]
   Edwards D, 2006, J SYST SOFTWARE, V79, P57, DOI 10.1016/j.jss.2004.12.018
   El-Masri D, 2020, INFORM SOFTWARE TECH, V122, DOI 10.1016/j.infsof.2020.106276
   Etien A, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P125, DOI 10.1109/RE.2005.37
   Feng Y, 2018, INT C PROGRAM COMPRE, P86, DOI 10.1145/3196321.3196343
   Fidge Colin J., 1987, Timestamps in Message-Passing Systems That Preserve the Partial Ordering
   Fleming ScottD., 2009, Successful Strategies for Debugging Concurrent Software: An Empirical Investigation
   Fluri B, 2007, IEEE T SOFTWARE ENG, V33, P725, DOI 10.1109/TSE.2007.70731
   Flyvbjerg B, 2006, QUAL INQ, V12, P219, DOI 10.1177/1077800405284363
   Fu Q, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P24, DOI 10.1145/2591062.2591175
   GAIT J, 1986, SOFTWARE PRACT EXPER, V16, P225, DOI 10.1002/spe.4380160304
   Gholamian S, 2021, ARXIV
   Gholamian S, 2021, SYM REL DIST SYST, P222, DOI 10.1109/SRDS53918.2021.00030
   Goldstein M, 2017, PROC INT SYMP SOFTW, P282, DOI 10.1109/ISSRE.2017.14
   Graaf H, 2003, IEEE SOFTWARE, V20, P61, DOI 10.1109/MS.2003.1241368
   GrayLog, 2020, LEAD CENTR LOG MAN S
   Gu S, 2022, IEEE T SOFTWARE ENG
   Gulzar MA, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P71, DOI 10.1109/ICSE-SEIP.2019.00016
   Gupta M, 2018, LECT NOTES COMPUT SC, V11236, P812, DOI 10.1007/978-3-030-03596-9_58
   Harty J, 2021, 2021 IEEE/ACM 8TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2021), P56, DOI 10.1109/MobileSoft52590.2021.00013
   He SL, 2021, ACM COMPUT SURV, V54, DOI 10.1145/3460345
   Hendriks D, 2022, LECT NOTES COMPUT SC, V13487, P226, DOI 10.1007/978-3-031-15008-1_15
   Henzinger TA, 2007, COMPUTER, V40, P32, DOI 10.1109/MC.2007.364
   Holton JA, 2010, GROUNDED THEORY REV, V9, P21
   Hooimeijer B, 2022, PROCEEDINGS OF THE 17TH INTERNATIONAL CONFERENCE ON SOFTWARE TECHNOLOGIES (ICSOFT), P146, DOI 10.5220/0011145700003266
   Jerding DF, 1997, PROC INT CONF SOFTW, P360, DOI 10.1145/253228.253356
   Kabinna S, 2018, EMPIR SOFTW ENG, V23, P290, DOI 10.1007/s10664-017-9518-0
   Kabinna S, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P154, DOI [10.1145/2901739.2901769, 10.1109/MSR.2016.025]
   Kagdi H., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P119, DOI 10.1109/WCRE.2010.21
   Krka I, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P178, DOI 10.1145/2635868.2635890
   Kurfess T R., 2007, MICROMANUFACTURING, P89, DOI [10.1007/978-1-4020-5949-0_5, DOI 10.1007/978-1-4020-5949-0_5]
   Lee EA, 2008, ISORC 2008: 11TH IEEE SYMPOSIUM ON OBJECT/COMPONENT/SERVICE-ORIENTED REAL-TIME DISTRIBUTED COMPUTING - PROCEEDINGS, P363, DOI 10.1109/ISORC.2008.25
   Legunsen O, 2016, IEEE INT CONF AUTOM, P602, DOI 10.1145/2970276.2970356
   Lemieux C, 2015, IEEE INT CONF AUTOM, P81, DOI 10.1109/ASE.2015.71
   Levy O, 2019, INT C PROGRAM COMPRE, P283, DOI 10.1109/ICPC.2019.00047
   Li H, 2018, EMPIR SOFTW ENG, V23, P2655, DOI 10.1007/s10664-018-9595-8
   Li H, 2020, LEUKEMIA, V34, P1503, DOI 10.1038/s41375-020-0848-3
   Li SS, 2020, EMPIR SOFTW ENG, V25, P2302, DOI 10.1007/s10664-019-09757-y
   Lian XL, 2016, INT REQUIR ENG CONF, P156, DOI 10.1109/RE.2016.50
   Liu X., 2007, P C NETW SYST DES IM, P257
   Lo D, 2012, AUTOMAT SOFTW ENG, V19, P423, DOI 10.1007/s10515-012-0103-x
   Lo D, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P345, DOI 10.1145/1595696.1595761
   Luo QZ, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P643, DOI 10.1145/2635868.2635920
   Maoz Shahar, 2010, Models in Software Engineering. Workshops and Symposia at MODELS 2010. Reports and Revised Selected Papers, P194, DOI 10.1007/978-3-642-21210-9_19
   Mashhadi MJ, 2019, INT C PROGRAM COMPRE, P65, DOI 10.1109/ICPC.2019.00020
   Mashhadi MJ, 2019, INFORM SOFTWARE TECH, V113, P20, DOI 10.1016/j.infsof.2019.05.002
   Mattern F., 1989, Parallel and Distributed Algorithms. Proceedings of the International Workshop, P215
   McBurney P.W., 2014, P 22 INT C PROGRAM C, P291
   Mishra Deepti, 2008, 2008 First International Conference on the Applications of Digital Information and Web Technologies, P258, DOI 10.1109/ICADIWT.2008.4664355
   Noergaard T., 2012, Embedded systems architecture: a comprehensive guide for engineers and programmers, VSecond
   Pandey D., 2010, Proceedings of 2010 International Conference on Advances in Recent Technologies in Communication and Computing (ARTCom 2010), P287, DOI 10.1109/ARTCom.2010.24
   Pecchia A, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P169, DOI 10.1109/ICSE.2015.145
   Pradel M, 2012, PROC INT CONF SOFTW, P288, DOI 10.1109/ICSE.2012.6227185
   Rong GP, 2020, PROC IEEE INT CONF S, P12, DOI 10.1109/ICSME46990.2020.00012
   Rong GP, 2018, 2018 25TH AUSTRALASIAN SOFTWARE ENGINEERING CONFERENCE (ASWEC), P171, DOI 10.1109/ASWEC.2018.00031
   Rong GP, 2017, ASIA PAC SOFWR ENG, P534, DOI 10.1109/APSEC.2017.61
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Said W, 2018, PROCEEDINGS OF THE 6TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, P117, DOI 10.5220/0006593501170128
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   SHAFT TM, 1995, INFORM SYST RES, V6, P286, DOI 10.1287/isre.6.3.286
   Shang WY, 2014, PROC IEEE INT CONF S, P21, DOI 10.1109/ICSME.2014.24
   Shull FJ, 2008, EMPIR SOFTW ENG, V13, P211, DOI 10.1007/s10664-008-9060-1
   Silva E. T.  Jr., 2006, Ninth IEEE International Symposium on Object and Component-Oriented Real-Time Distributed Computing
   Splunk, 2005, US
   Storey MA, 2020, EMPIR SOFTW ENG, V25, P4097, DOI 10.1007/s10664-020-09858-z
   Strandberg PE, 2019, IEEE ACCESS, V7, P46434, DOI 10.1109/ACCESS.2019.2909093
   Strauss A. L., 1997, Grounded Theory in Practice
   Tan Liang., 2019, SOFTWARE ENG WORKSHO, P100
   van der Werf JMEM, 2009, FUND INFORM, V94, P387, DOI 10.3233/FI-2009-136
   Vogel-Heuser B, 2015, J SYST SOFTWARE, V110, P54, DOI 10.1016/j.jss.2015.08.026
   Walkinshaw N, 2016, EMPIR SOFTW ENG, V21, P811, DOI 10.1007/s10664-015-9367-7
   Yang N, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P253, DOI [10.1109/SANER.2019.8668007, 10.1109/saner.2019.8668007]
   Yang N, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2021), P61, DOI 10.1109/ICSE-SEIP52600.2021.00015
   Ye X, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P689, DOI 10.1145/2635868.2635874
   Yuan D, 2012, PROC INT CONF SOFTW, P102, DOI 10.1109/ICSE.2012.6227202
   Zaidman A, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P329, DOI 10.1109/CSMR.2004.1281435
   Zaidman A, 2011, EMPIR SOFTW ENG, V16, P325, DOI 10.1007/s10664-010-9143-7
   Zeng Y, 2019, EMPIR SOFTW ENG, V24, P3394, DOI 10.1007/s10664-019-09687-9
   Zhu JM, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P415, DOI 10.1109/ICSE.2015.60
NR 98
TC 1
Z9 1
U1 1
U2 8
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2023
VL 28
IS 2
AR 43
DI 10.1007/s10664-022-10258-8
PG 56
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 9C8SX
UT WOS:000935681500002
DA 2024-07-18
ER

PT J
AU Dingsoyr, T
   Bjornson, FO
   Schrof, J
   Sporsem, T
AF Dingsoyr, Torgeir
   Bjornson, Finn Olav
   Schrof, Julian
   Sporsem, Tor
TI A longitudinal explanatory case study of coordination in a very large
   development programme: the impact of transitioning from a first- to a
   second-generation large-scale agile development method
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Large-scale agile development; Coordination mechanisms; Inter-team
   coordination; Multiteam systems; Software development process; Software
   engineering
ID INTER-TEAM COORDINATION; SOFTWARE-DEVELOPMENT; KNOWLEDGE; CHALLENGES;
   PROJECTS
AB Large-scale agile development has gained widespread interest in the software industry, but it is a topic with few empirical studies of practice. Development projects at scale introduce a range of new challenges in managing a large number of people and teams, often with high uncertainty about product requirements and technical solutions. The coordination of teams has been identified as one of the main challenges. This study presents a rich longitudinal explanatory case study of a very large software development programme with 10 development teams. We focus on inter-team coordination in two phases: one that applies a first-generation agile development method and another that uses a second-generation one. We identified 27 coordination mechanisms in the first phase, and 14 coordination mechanisms in the second. Based on an analysis of coordination strategies and mechanisms, we develop five propositions on how the transition from a first- to a second-generation method impacts coordination. These propositions have implications for theory and practice.
C1 [Dingsoyr, Torgeir; Bjornson, Finn Olav] Norwegian Univ Sci & Technol, Dept Comp Sci, NO-7491 Trondheim, Norway.
   [Dingsoyr, Torgeir] SimulaMet, Dept IT Management, POB 134, N-1325 Lysaker, Norway.
   [Schrof, Julian] Univ Bundeswehr Munchen, Werner Heisenberg Weg 39, D-85577 Neubiberg, Germany.
   [Sporsem, Tor] SINTEF Digital, POB 4760, NO-7465 Trondheim, Norway.
C3 Norwegian University of Science & Technology (NTNU); Bundeswehr
   University Munich; SINTEF
RP Dingsoyr, T (corresponding author), Norwegian Univ Sci & Technol, Dept Comp Sci, NO-7491 Trondheim, Norway.; Dingsoyr, T (corresponding author), SimulaMet, Dept IT Management, POB 134, N-1325 Lysaker, Norway.
EM torgeir.dingsoyr@ntnu.no; Finn.o.bjornson@sintef.no;
   julian.schrof@bmw.de; Tor.sporsem@sintef.no
RI Sporsem, Tor/GWZ-6907-2022; Dingsoyr, Torgeir/J-5862-2012
OI Dingsoyr, Torgeir/0000-0003-0725-345X; Sporsem, Tor/0000-0002-5230-7480;
   Bjornson, Finn Olav/0000-0002-9111-7241
FU Research Council of Norway [236759]; DNV GL; Equinor; Kantega; Kongsberg
   Defence Aerospace; Sopra Steria; Sticos; NTNU Concept
FX The data collection and first analysis were done in the
   competence-building project Agile 2.0, supported by the Research Council
   of Norway through grant 236759 and by the companies DNV GL, Equinor,
   Kantega, Kongsberg Defence & Aerospace, Sopra Steria and Sticos. NTNU
   Concept funded further analysis through the project on organizing
   digital projects. SimulaMet also supported the analysis and writing of
   the article through the first author's adjunct position.
CR Ågerfalk PJ, 2006, COMMUN ACM, V49, P26, DOI 10.1145/1164394.1164416
   [Anonymous], 2009, REV BUS INF SYST
   Baham C, 2022, INFORM SYST J, V32, P103, DOI 10.1111/isj.12336
   Bass JM, 2019, LECT NOTES BUS INF P, V364, P75, DOI 10.1007/978-3-030-30126-2_9
   Batra D, 2010, COMMUN ASSOC INF SYS, V27, P379
   Begel A, 2009, 2009 ICSE WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING, P1, DOI 10.1109/CHASE.2009.5071401
   Bentley C., 2010, PRINCE2 revealed, V2nd edn
   Bernhardt HB, 2022, DIGITAL TRANSFORMATI, P115
   Berntzen M, 2023, IEEE T SOFTWARE ENG, V49, P699, DOI 10.1109/TSE.2022.3160873
   Berntzen M, 2021, LECT NOTES BUS INF P, V419, P140, DOI 10.1007/978-3-030-78098-2_9
   Bick S, 2018, IEEE T SOFTWARE ENG, V44, P932, DOI 10.1109/TSE.2017.2730870
   Biesialska K, 2021, PROCEEDINGS OF EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING (EASE 2021), P20, DOI 10.1145/3463274.3463323
   Bjornson FO, 2018, LECT NOTES BUS INF P, V314, P216, DOI 10.1007/978-3-319-91602-6_15
   Boehm B, 2002, COMPUTER, V35, P64, DOI 10.1109/2.976920
   Boehm B., 2003, BALANCING AGILITY DI
   Brede N, 2018, IJISPM-INT J INF SYS, V6, P45, DOI 10.12821/ijispm060303
   Carroll N, 2020, INT C AGILE SOFTWARE
   Cataldo M, 2013, IEEE T SOFTWARE ENG, V39, P343, DOI 10.1109/TSE.2012.32
   Dikert K, 2016, J SYST SOFTWARE, V119, P87, DOI 10.1016/j.jss.2016.06.013
   Dingsoyr Torgeir, 2013, Software Engineering Notes, V38, P33, DOI 10.1145/2507288.2507322
   Dingsoyr T, 2022, IEEE IT PROFESSIONAL
   Dingsoyr T, 2018, RETHINKING COORDINAT
   Dingsoyr T, 2019, IT PROF, V21, P34, DOI 10.1109/MITP.2018.2876984
   Dingsoyr T, 2019, IEEE SOFTWARE, V36, P30, DOI 10.1109/MS.2018.2884884
   Dingsoyr T, 2018, PROJ MANAG J, V49, P64, DOI 10.1177/8756972818798980
   Dingsoyr T, 2018, EMPIR SOFTW ENG, V23, P490, DOI 10.1007/s10664-017-9524-2
   Dingsoyr T, 2014, LECT NOTES COMPUT SC, V8892, P273, DOI 10.1007/978-3-319-13835-0_20
   Dingsoyr T, 2012, J SYST SOFTWARE, V85, P1213, DOI 10.1016/j.jss.2012.02.033
   Duncan WR., 2017, GUID PROJ MAN BOD KN, V6
   Edison H, 2022, IEEE T SOFTWARE ENG, V48, P2709, DOI 10.1109/TSE.2021.3069039
   EISENHARDT KM, 1989, ACAD MANAGE REV, V14, P532, DOI 10.2307/258557
   Espinosa JA, 2007, J MANAGE INFORM SYST, V24, P135, DOI 10.2753/MIS0742-1222240104
   Firth BM, 2015, ACAD MANAGE J, V58, P813, DOI 10.5465/amj.2013.0216
   Fitzgerald B, 2017, J SYST SOFTWARE, V123, P176, DOI 10.1016/j.jss.2015.06.063
   Forsgren Nicole, 2021, ACM Queue, V19, P20, DOI 10.1145/3454122.3454124
   Gustavsson T, 2019, P 27 EUROPEAN C INFO
   Herbsleb JD, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P188, DOI 10.1109/FOSE.2007.11
   Hobbs B, 2017, PROJ MANAG J, V48, P3, DOI 10.1177/875697281704800301
   Hoda R, 2018, IEEE SOFTWARE, V35, P58, DOI 10.1109/MS.2018.290111318
   Ika LA, 2009, PROJ MANAG J, V40, P6, DOI 10.1002/pmj.20137
   Jarzabkowski PA, 2012, ORGAN SCI, V23, P907, DOI 10.1287/orsc.1110.0693
   Johnson P., 2012, IEEE Software, V29, P94, DOI 10.1109/MS.2012.127
   KRAUT RE, 1995, COMMUN ACM, V38, P69, DOI 10.1145/203330.203345
   Kula E, 2022, IEEE T SOFTWARE ENG, V48, P3573, DOI 10.1109/TSE.2021.3101192
   Langley A, 1999, ACAD MANAGE REV, V24, P691, DOI 10.2307/259349
   MALONE TW, 1994, ACM COMPUT SURV, V26, P87, DOI 10.1145/174666.174668
   Marks MA, 2005, J APPL PSYCHOL, V90, P964, DOI 10.1037/0021-9010.90.5.964
   Mintzberg H., 1989, MINTZBERG MANAGEMENT, DOI DOI 10.1111/j.1468-0432.2009.00465.x
   Mohagheghi P, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1444, DOI 10.1145/3468264.3473937
   Nerur S, 2005, COMMUN ACM, V48, P72, DOI 10.1145/1060710.1060712
   Okhuysen GA, 2009, ACAD MANAG ANN, V3, P463, DOI 10.1080/19416520903047533
   Paasivaara M, 2017, INT CONF GLOBAL SOFT, P36, DOI 10.1109/ICGSE.2017.15
   Paasivaara M, 2014, INFORM SOFTWARE TECH, V56, P1556, DOI 10.1016/j.infsof.2014.06.008
   Paasivaara M, 2012, INT SYMP EMP SOFTWAR, P235, DOI 10.1145/2372251.2372294
   Pries-Heje L., 2011, Proceedings of the 2011 Agile Conference, P20, DOI 10.1109/AGILE.2011.34
   Ribes David., 2014, Proceedings of the 17th ACM Conference on Computer Supported Cooperative Work Social Computing, P158, DOI [10.1145/2531602.2531624, DOI 10.1145/2531602.2531624]
   Rolland Knut H., 2016, 39 INT C INF SYST DU
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sablis A, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2297
   Schwaber K., 2001, Agile software development with scrum
   Sharp H, 2008, INT J HUM-COMPUT ST, V66, P506, DOI 10.1016/j.ijhcs.2007.10.004
   Sharp H, 2010, AGILE SOFTWARE DEVELOPMENT: CURRENT RESEARCH AND FUTURE DIRECTIONS, P61, DOI 10.1007/978-3-642-12575-1_4
   Sjoberg D. I. K., 2008, Guide to Advanced Empirical Software Engineering, P312
   Skelton M, 2019, TEAM TOPOLOGIES ORG, P216
   Smite D, 2010, AGILITY ACROSS TIME AND SPACE: IMPLEMENTING AGILE METHODS IN GLOBAL SOFTWARE PROJECTS, P1
   Smite D, 2019, IEEE SOFTWARE, V36, P51, DOI 10.1109/MS.2018.2886178
   Stol KJ, 2016, INFORM SOFTWARE TECH, V70, P176, DOI 10.1016/j.infsof.2015.07.010
   Stray V, 2020, J SYST SOFTWARE, V170, DOI 10.1016/j.jss.2020.110717
   Stray V, 2018, 19TH INTERNATIONAL CONFERENCE ON AGILE SOFTWARE DEVELOPMENT (XP '18), DOI 10.1145/3234152.3234178
   Strode DE, 2016, INFORM SYST FRONT, V18, P23, DOI 10.1007/s10796-015-9574-1
   Strode DE, 2012, J SYST SOFTWARE, V85, P1222, DOI 10.1016/j.jss.2012.02.017
   Uludag Ö, 2021, LECT NOTES BUS INF P, V419, P123, DOI 10.1007/978-3-030-78098-2_8
   VANDEVEN AH, 1976, AM SOCIOL REV, V41, P322
   Vestues K., 2021, SCAND J INF SYST, V33, P103
   Vestues K., 2021, USING DIGITAL PLATFO
   Vlietland J, 2016, J SYST SOFTWARE, V113, P418, DOI 10.1016/j.jss.2015.11.010
   Williams L, 2003, COMPUTER, V36, P39, DOI 10.1109/MC.2003.1204373
   Yin R.K., 2014, Applications of case study research, V2nd
   Zaitsev A, 2020, INFORM ORGAN-UK, V30, DOI 10.1016/j.infoandorg.2020.100288
NR 79
TC 9
Z9 9
U1 6
U2 20
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2023
VL 28
IS 1
AR 1
DI 10.1007/s10664-022-10230-6
PG 49
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 6A0EO
UT WOS:000880336500002
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU de Farias, I
   Marczak, S
   Santos, R
   Rodrigues, C
   Moura, H
AF de Farias Junior, Ivaldir
   Marczak, Sabrina
   Santos, Rodrigo
   Rodrigues, Cleyton
   Moura, Hermano
TI C2M: a maturity model for the evaluation of communication in distributed
   software development
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Communication; Maturity model; Distributed Software Development;
   Empirical study; C2M
ID AGILE PRACTICES; MANAGEMENT; FRAMEWORK; OUTCOMES
AB Communication is essential in any software development project, particularly those globally distributed where geographical, temporal, and cultural distance may hinder the effectiveness of communication. The challenges imposed by distance often characterize communication as still one of the main drawbacks of globally distributed projects. Therefore, establishing communication processes and practices is relevant to support a team's work. These processes and practices need to be updated and aligned with the team's needs. Thus, assessing and evaluating the maturity of such communication processes and practices is paramount. This article presents a Communication Maturity Model called C2M which aims to help organizations identify the maturity of communication-related aspects by providing an approach for revealing what practices need to be improved. The model is composed of 4 levels of maturity (causal, partially managed, managed and reflective) and 4 areas of maturity (people, project, organizational and engineering) which are organized into 15 maturity factors, each factor comprising a set of practices. The model has 58 practices and each has its specific objectives. The model was empirically developed and evaluated in three well-defined phases. In the conception phase, methodological procedures (Tertiary Study, Systematic Literature Review, and Interviews) were carried out in order to gather relevant information for designing the first version of the C2M model (alpha version). Then, in the refinement phase, two focus group meetings were held in two organizations in order to identify how effectively the model attends its purpose. The results led to a second version of the C2M model (beta version), analyzed by a survey with experts who assessed the representation of the third version of the C2M model-omega version (evaluation phase). All results achieved so far suggest that the model can assist in discovering the maturity level of the communication processes and practices in globally distributed projects. Future works will focus on developing a software tool to help with self-assessment.
C1 [de Farias Junior, Ivaldir; Rodrigues, Cleyton] Univ Pernambuco, Campus Garanhuns UPE Multicampi, Recife, PE, Brazil.
   [Marczak, Sabrina] Pontificia Univ Catolica Rio Grande Sul PUCRS, Sch Comp Sci, Porto Alegre, RS, Brazil.
   [Santos, Rodrigo] Fed Univ State Rio de Janeiro UNIRIO, Rio De Janeiro, Brazil.
   [Moura, Hermano] Fed Univ Pernambuco CIN UFPE, Ctr Informat, Recife, PE, Brazil.
C3 Universidade de Pernambuco (UPE); Pontificia Universidade Catolica Do
   Rio Grande Do Sul; Universidade Federal do Estado do Rio de Janeiro;
   Universidade Federal de Pernambuco
RP de Farias, I (corresponding author), Univ Pernambuco, Campus Garanhuns UPE Multicampi, Recife, PE, Brazil.
EM ivaldir.farias@upe.br; sabrina.marczak@pucrs.br; rps@uniriotec.br;
   cleyton.rodrigues@upe.br; hermano@cin.ufpe.br
RI Santos, Rodrigo Rodrigues da Silva/HJH-6210-2023; Santos, Rodrigo
   Pereira dos/AAA-5620-2021
OI Santos, Rodrigo Pereira dos/0000-0003-4749-2551; Garcia Junior, Idelmo
   Rangel/0009-0006-3690-8936; de Farias Junior,
   Ivaldir/0000-0001-9860-8206; RODRIGUES, CLEYTON/0000-0003-3816-656X
CR [Anonymous], 2008, Software Process: Improvement and Practice, DOI DOI 10.1002/SPIP.378
   [Anonymous], 2002, PEOPLE CAPABILITY MA
   [Anonymous], 2006, CMMI FOR DEV
   [Anonymous], 2013, GUID PROJ MAN BOD KN
   Aoyama M, 1998, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.1998.671097
   Barros Alexandre Moço, 2010, Cad. EBAPE.BR, V8, P71
   Basile Kelly A., 2016, Strategic HR Review, V15, P106, DOI 10.1108/SHR-03-2016-0024
   Beecham S, 2005, J SYST SOFTWARE, V76, P251, DOI 10.1016/j.jss.2004.06.004
   Beecham S, 2021, J SYST SOFTWARE, V171, DOI 10.1016/j.jss.2020.110823
   Bietz M J, 2013, TECHNOLOGY ENHANCED, P48
   Bietz MJ, 2012, TRANSL BEHAV MED, V2, P480, DOI 10.1007/s13142-012-0174-z
   Bietz MJ, 2008, CSCW: 2008 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, CONFERENCE PROCEEDINGS, P467
   Bjornson FO, 2018, LECT NOTES BUS INF P, V314, P216, DOI 10.1007/978-3-319-91602-6_15
   Britto R, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1921
   CarliniCotrim B, 1996, REV SAUDE PUBL, V30, P285, DOI 10.1590/S0034-89101996000300013
   Cataldo M, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P2
   Coutinho C.P., 2005, Percursos da Investigacao em Tecnologia Educativa em Portugal: uma Abordagem Tematica e Metodologica a Publicacoes Cientificas
   Da Silva F, 2011, SUBMETIDO J SOFTWARE
   da Silva Fabio Q. B., 2010, Proceedings of the 2010 Fifth IEEE International Conference Global Software Engineering (ICGSE 2010), P87, DOI 10.1109/ICGSE.2010.18
   DAFT RL, 1984, RES ORGAN BEHAV, V6, P191
   Damian D, 2007, IEEE SOFTWARE, V24, P21, DOI 10.1109/MS.2007.55
   Damian DE, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P319, DOI 10.1109/ICRE.2002.1048545
   de Farias Junior Ivaldir H., 2012, 2012 Seventh IEEE International Conference on Global Software Engineering Workshops (ICGSEW 2012), P37, DOI 10.1109/ICGSEW.2012.18
   de Farias IH, 2013, 2013 IEEE 8TH INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING WORKSHOPS (ICGSEW 2013), P81, DOI 10.1109/ICGSEW.2013.18
   de Oliveira W.A., 2006, MUNDO PM, V1, P6
   De Souza C R, 2002, P ICSE 2002 INT WORK
   Deshpande Sadhana, 2010, Proceedings of the 2010 Fifth IEEE International Conference Global Software Engineering (ICGSE 2010), P67, DOI 10.1109/ICGSE.2010.16
   dos Santos Alinne C. C., 2012, 2012 7th IEEE International Conference on Global Software Engineering (ICGSE 2012), DOI 10.1109/ICGSE.2012.42
   Earthy JV, 1999, IEE CONF PUBL, P320, DOI 10.1049/cp:19990208
   Evaristo R., 2003, Journal of Global Information Management, V11, P58
   Farias Junior IHD, 2021, REV MESTRADOS PROFIS, V10, DOI [10.51359/2317-0115.2021.249072, DOI 10.51359/2317-0115.2021.249072]
   Farias I, 2016, INT CONF GLOBAL SOFT, P164, DOI 10.1109/ICGSE.2016.31
   Ferreira T, 2014, REV IBERO AMERICANA, P2182
   Fidler Roger., 1997, MEDIAMORPHOSIS UNDER, DOI 10.4135/9781452233413
   Fontana RM, 2018, COMM COM INF SC, V896, P3, DOI 10.1007/978-3-319-97925-0_1
   Fontana RM, 2015, J SYST SOFTWARE, V102, P88, DOI 10.1016/j.jss.2014.12.032
   Garcia Vinicius Cardoso, 2010, RiSE reference model for software reuse adoption in Brazilian companies
   Greer TW, 2014, PSYCHOL-MANAG J, V17, P87, DOI 10.1037/mgr0000014
   Herbsleb JD, 2001, IEEE SOFTWARE, V18, P16, DOI 10.1109/52.914732
   Jalali S, 2012, J SOFTW-EVOL PROC, V24, P643, DOI 10.1002/smr.561
   Jusoh YY, 2018, INT CONF INFORM RETR, P216
   Khan RA, 2019, IEEE ACCESS, V7, P112879, DOI 10.1109/ACCESS.2019.2924404
   Kitchenham B., 2007, ENGINEERING, V45, P1051
   Kneuper R, 2008, CMMI IMPROVING SOFTW
   Kontio J, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P271
   Korkala M, 2014, J SYST SOFTWARE, V95, P122, DOI 10.1016/j.jss.2014.03.080
   Lasswell H. D., 1948, The Communication of Ideas: A Series of Addresses, V37, P136
   Leitao Junior N, 2015, WORKSHOP ANUAL MPS W, P49
   Li M, 2003, IEEE T SOFTWARE ENG, V29, P811, DOI 10.1109/TSE.2003.1232286
   Lockamy A, 2004, SUPPLY CHAIN MANAG, V9, P272, DOI 10.1108/13598540410550019
   Mafra S, 2006, P SBC 20 BRAZILIAN S, P239
   Merriam S. B., 2015, Qualitative research: A guide to design and implementation
   Morstead S., 2003, OFFSHORE READY STRAT
   Munaretto LF., 2013, Revista Adm. UFSM, V6, P9, DOI DOI 10.5902/198346596243
   Newcomb TM., 1966, COMMUN CULTURE, V1, P79
   Nohara JJ., 2010, INMR-Innovation Management Review, V7, P150, DOI [DOI 10.5585/RAI.V7I2.424, 10.5585/rai.v7i2.424]
   Olson GM, 2000, HUM-COMPUT INTERACT, V15, P139, DOI 10.1207/S15327051HCI1523_4
   Ozcan-Top O., 2013, Software Process Improvement and Capability Determination, V349, P130, DOI [10.1007/978-3-642-38833-0_12, DOI 10.1007/978-3-642-38833-0_12]
   PERRY DE, 1994, IEEE SOFTWARE, V11, P36, DOI 10.1109/52.300082
   Pikkarainen M, 2008, EMPIR SOFTW ENG, V13, P303, DOI 10.1007/s10664-008-9065-9
   Pilatti L S M, 2006, ESTRUTURA CARACTERIS
   Prikladnicki R, 2011, BRAZ S SOFTW QUAL CU
   Prikladnicki R, 2009, PADROES EVOLUCAO PRA
   Prikladnicki R, 2003, THESIS PONTIFICIA U
   Ramasubbu N, 2005, IEEE SOFTWARE, V22, P80, DOI 10.1109/MS.2005.69
   Rendon R G, 2005, CONTRACT
   Saleem N, 2019, INT CONF GLOBAL SOFT, P76, DOI 10.1109/ICGSE.2019.00027
   SHANNON CE, 1948, BELL SYST TECH J, V27, P379, DOI 10.1002/j.1538-7305.1948.tb01338.x
   Sinha R, 2020, ISOFT: PROCEEDINGS OF THE 13TH INNOVATIONS IN SOFTWARE ENGINEERING CONFERENCE, DOI 10.1145/3385032.3385037
   Spinola R, 2010, 13 IB AM C SOFTW ENG
   Spínola RO, 2008, COMM COM INF SC, V17, P587
   Stojanov I, 2015, PROCEEDINGS 41ST EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS SEAA 2015, P446, DOI 10.1109/SEAA.2015.29
   Stray V, 2020, J SYST SOFTWARE, V170, DOI 10.1016/j.jss.2020.110717
   Stray V, 2019, INT CONF GLOBAL SOFT, P111, DOI 10.1109/ICGSE.2019.00031
   Tremblay MC, 2010, COMMUN ASSOC INF SYS, V26, P599
   Vieira J. K., 2020, Journal of Information Systems Engineering and Management, V5
   Visconti M, 1998, SOFTWARE QUAL J, V7, P223, DOI 10.1023/A:1008979221881
   Wheeler T, 1989, ANAL CORE DAMAGE FRE
   Wilbur S, 1966, COMMUNICATION WORKS
   Yin R. K., 2017, CASE STUDY RES DESIG
NR 80
TC 1
Z9 1
U1 1
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2022
VL 27
IS 7
AR 188
DI 10.1007/s10664-022-10211-9
PG 49
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 5A0CE
UT WOS:000862564000004
PM 36212673
OA Bronze, Green Published
DA 2024-07-18
ER

PT J
AU Prestat, D
   Moha, N
   Villemaire, R
AF Prestat, Dimitri
   Moha, Naouel
   Villemaire, Roger
TI An empirical study of Android behavioural code smells detection
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Android; Code smells; Detection; Empirical study; Mobile apps;
   Behavioural
AB Mobile applications (apps) are developed quickly and evolve continuously. Each development iteration may introduce poor design choices, and therefore produce code smells. Code smells complexify source code and may impede the evolution and performance of mobile apps. In addition to common object-oriented code smells, mobile apps have their own code smells because of their limitations and constraints on resources like memory, performance and energy consumption. Some of these mobile-specific smells are behavioural because they describe an inappropriate behaviour that may negatively impact software quality. Many tools exist to detect code smells in mobile apps, based specifically on static analysis techniques. In this paper, we are especially interested in two tools: Paprika and aDoctor. Both tools use representative techniques from the literature and contain behavioural code smells. We analyse the effectiveness of behavioural code smells detection in practice within the tools of concern by performing an empirical study of code smells detected in apps. This empirical study aims to answer two research questions. First, are the detection tools effective in detecting behavioural code smells? Second, are the behavioural code smells detected by the tools consistent with their original literal definition? We emphasise the limitations of detection using only static techniques and the lessons learned from our empirical study. This study shows that established static analysis methods deemed to be effective for code smells detection are inadequate for behavioural mobile code smells detection.
C1 [Prestat, Dimitri; Moha, Naouel; Villemaire, Roger] Univ Quebec Montreal, Montreal, PQ, Canada.
   [Moha, Naouel] Ecole Technol Super, Montreal, PQ, Canada.
C3 University of Quebec; University of Quebec Montreal; University of
   Quebec; Ecole de Technologie Superieure - Canada
RP Prestat, D (corresponding author), Univ Quebec Montreal, Montreal, PQ, Canada.
EM prestat.dimitri@courrier.uqam.ca
OI Prestat, Dimitri/0000-0002-2914-9066
CR Almalki K, 2018, THESIS ROCHESTER I T
   [Anonymous], 2021, STUDY ARTIFACTS
   Banerjee A, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P588, DOI 10.1145/2635868.2635871
   Dennis Colton, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P219, DOI 10.1109/MOBILESoft.2017.24
   Developer, 2020, ARR
   Developer, 2022, ONL
   Elsayed EK, 2019, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.212
   Fard AM, 2013, IEEE INT WORK C SO, P116, DOI 10.1109/SCAM.2013.6648192
   Fowler M., 1999, Refactoring: Improving the Design of Existing Code
   Gadient P, 2019, EMPIR SOFTW ENG, V24, P3046, DOI 10.1007/s10664-018-9673-y
   Ghafari M, 2017, IEEE INT WORK C SO, P121, DOI 10.1109/SCAM.2017.24
   Gottschalk M, 2012, GI JAHRESTAGUNG
   Haase C, 2015, DEV ANDROID 2 RUL ME
   Habchi Sarra, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P445, DOI 10.1109/MSR.2019.00071
   Habchi Sarra, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P110, DOI 10.1109/MOBILESoft.2017.11
   Habchi S, 2018, IEEE INT CONF AUTOM, P6, DOI 10.1145/3238147.3238197
   Habchi S, 2019, 2019 IEEE/ACM 6TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2019), P87, DOI 10.1109/MOBILESoft.2019.00022
   Hecht G., 2016, Ph.D. dissertation
   Hecht G, 2015, 2ND ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS MOBILESOFT 2015, P148, DOI 10.1109/MobileSoft.2015.38
   Iannone E, 2020, INT C PROGRAM COMPRE, P451, DOI 10.1145/3387904.3389298
   Ibrahim R, 2020, J KING SAUD UNIV-COM, V32, P367, DOI 10.1016/j.jksuci.2018.06.005
   Johnson B, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P672, DOI 10.1109/ICSE.2013.6606613
   Kessentini Marouane, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P122, DOI 10.1109/MOBILESoft.2017.29
   Kumar Swati, 2014, 2014 5th International Conference on Computer and Communication Technology (ICCCT), P41, DOI 10.1109/ICCCT.2014.7001467
   Lim D, 2018, THESIS TU DELFT
   Lin Y, 2015, IEEE INT CONF AUTOM, P224, DOI 10.1109/ASE.2015.50
   Malavolta I, 2018, PROC IEEE INT CONF S, P334, DOI 10.1109/ICSME.2018.00042
   Mannan UA, 2016, 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2016), P225, DOI [10.1109/MobileSoft.2016.048, 10.1145/2897073.2897094]
   Marinescu C., 2005, ICSM
   Mariotti G, 2013, ANTIPATTERN FREEZING
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Morales R, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P59, DOI 10.1145/3180155.3182524
   Ni-Lewis I., 2015, Avoiding Allocations in OnDraw() (100 Days of Google Dev)
   Oracle, 2020, JAV THREAD PRIM DEPR
   Palomba F, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P487, DOI 10.1109/SANER.2017.7884659
   Paternò F, 2017, PROCEEDINGS OF THE 19TH INTERNATIONAL CONFERENCE ON HUMAN-COMPUTER INTERACTION WITH MOBILE DEVICES AND SERVICES (MOBILEHCI '17), DOI 10.1145/3098279.3098558
   Peruma ASA, 2018, WHAT SMELL EMPIRICAL
   Rasool G, 2020, ARAB J SCI ENG, V45, P3289, DOI 10.1007/s13369-020-04365-1
   Reimann Jan., 2014, Softwaretechnik-Trends, V34
   Rubin J, 2019, 2019 IEEE/ACM 6TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2019), P123, DOI 10.1109/MOBILESoft.2019.00025
   Statista, 2020, NUMB MOB APP DOWNL W
   Statista, 2020, Number of Apps Available in Leading App Stores 2019
   van Emden E, 2002, NINTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P97, DOI 10.1109/WCRE.2002.1173068
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
NR 44
TC 3
Z9 3
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2022
VL 27
IS 7
AR 179
DI 10.1007/s10664-022-10212-8
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4V4SY
UT WOS:000859469500010
DA 2024-07-18
ER

PT J
AU Henning, S
   Hasselbring, W
AF Henning, Soeren
   Hasselbring, Wilhelm
TI A configurable method for benchmarking scalability of cloud-native
   applications
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Scalability; Benchmarking; Performance engineering; Cloud-Native
ID MICROSERVICES
AB Cloud-native applications constitute a recent trend for designing large-scale software systems. However, even though several cloud-native tools and patterns have emerged to support scalability, there is no commonly accepted method to empirically benchmark their scalability. In this study, we present a benchmarking method, allowing researchers and practitioners to conduct empirical scalability evaluations of cloud-native applications, frameworks, and deployment options. Our benchmarking method consists of scalability metrics, measurement methods, and an architecture for a scalability benchmarking tool, particularly suited for cloud-native applications. Following fundamental scalability definitions and established benchmarking best practices, we propose to quantify scalability by performing isolated experiments for different load and resource combinations, which asses whether specified service level objectives (SLOs) are achieved. To balance usability and reproducibility, our benchmarking method provides configuration options, controlling the trade-off between overall execution time and statistical grounding. We perform an extensive experimental evaluation of our method's configuration options for the special case of event-driven microservices. For this purpose, we use benchmark implementations of the two stream processing frameworks Kafka Streams and Flink and run our experiments in two public clouds and one private cloud. We find that, independent of the cloud platform, it only takes a few repetitions (<= 5) and short execution times (<= 5 minutes) to assess whether SLOs are achieved. Combined with our findings from evaluating different search strategies, we conclude that our method allows to benchmark scalability in reasonable time.
C1 [Henning, Soeren; Hasselbring, Wilhelm] Univ Kiel, Software Engn Grp, D-24098 Kiel, Germany.
C3 University of Kiel
RP Henning, S (corresponding author), Univ Kiel, Software Engn Grp, D-24098 Kiel, Germany.
EM soeren.henning@email.uni-kiel.de; hasselbring@email.uni-kiel.de
RI Henning, Soeren/KPB-7911-2024; Hasselbring, Wilhelm/G-4794-2011
OI Henning, Soeren/0000-0001-6912-2549; Hasselbring,
   Wilhelm/0000-0001-6625-4335
FU Projekt DEAL
FX Open Access funding enabled and organized by Projekt DEAL.
CR Abedi A, 2017, P 8 ACM SPEC INT C P
   Ahmad AA, 2019, J CLOUD COMPUT-ADV S, V8, DOI 10.1186/s13677-019-0134-y
   [Anonymous], 2010, P SIGMOD INT C MAN D, DOI DOI 10.1145/1807167.1807231
   [Anonymous], 2015, P 6 ACMSPEC INT C PE
   [Anonymous], 2014, CLOUD COMPUTING DATA
   [Anonymous], 2007, P EUR SOFTW ENG C S, DOI DOI 10.1145/1287624.1287679
   [Anonymous], 2014, P INT WORKSH HOT TOP, DOI DOI 10.1145/2649563.2649571
   [Anonymous], 2015, B IEEE COMPUTER SOC
   Avritzer A, 2021, 2021 IEEE 18TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE COMPANION (ICSA-C), P62, DOI 10.1109/ICSA-C52384.2021.00016
   Avritzer A, 2020, J SYST SOFTWARE, V165, DOI 10.1016/j.jss.2020.110564
   Balalaie A, 2016, IEEE SOFTWARE, V33, P42, DOI 10.1109/MS.2016.64
   Bermbach, 2017, CLOUD SERVICE BENCHM
   Bondi A. B., 2000, Proceedings Second International Workshop on Software and Performance. WOSP2000, P195, DOI 10.1145/350391.350432
   Brataas G, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON AUTOMATIC COMPUTING (ICAC), P285, DOI 10.1109/ICAC.2017.34
   Brataas G, 2021, J SYST SOFTWARE, V182, DOI 10.1016/j.jss.2021.111064
   Brunner S, 2015, INT CONF UTIL CLOUD, P488, DOI 10.1109/UCC.2015.87
   Bulej L, 2020, PROCEEDINGS OF THE ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE'20), P100, DOI 10.1145/3358960.3379132
   Burns B, 2016, COMMUN ACM, V59, P50, DOI 10.1145/2890784
   CNCF, 2018, CNCF Cloud Native Definition v1.0.
   Cunha M, 2017, CONCURR COMP-PRACT E, V29, DOI 10.1002/cpe.3825
   DENNING PJ, 1978, COMPUT SURV, V10, P225, DOI 10.1145/356733.356735
   Folkerts Enno, 2013, Selected Topics in Performance Evaluation and Benchmarking. 4th TPC Technology Conference, TPCTC 2012. Revised Selected Papers, P173, DOI 10.1007/978-3-642-36727-4_12
   Fragkoulis M, 2020, Arxiv, DOI arXiv:2008.00842
   Gannon D, 2017, IEEE CLOUD COMPUT, V4, P16, DOI 10.1109/MCC.2017.4250939
   Gorton Ian, 2022, Foundations of Scalable Systems
   Gunther N.J., 2007, GUERRILLA CAPACITY P, DOI [10.1007/978-3-540-31010-5, DOI 10.1007/978-3-540-31010-5]
   Gunther NJ, 2015, COMMUN ACM, V58, P46, DOI 10.1145/2719919
   Hasselbring W, 2021, PROCEEDINGS OF EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING (EASE 2021), P365, DOI 10.1145/3463274.3463361
   Hasselbring W, 2020, COMPUTER, V53, P84, DOI 10.1109/MC.2020.2998235
   He S, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P666, DOI 10.1109/ASE51524.2021.9678687
   He S, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P188, DOI 10.1145/3338906.3338912
   Henning S., 2021, J. Data Inf. Manage., V3, P65, DOI DOI 10.1007/S42488-021-00043-5
   Henning S., 2020, DATA ENABLED DISCOVE, V4, P1, DOI [10.1007/s41688-020-00041-3, DOI 10.1007/S41688-020-00041-3]
   Henning S, 2021, **DATA OBJECT**, DOI 10.5281/zenodo.5596982
   Henning S., 2021, P COMP ACM SPEC INT, P85, DOI [10.1145/3447545.3451190, DOI 10.1145/3447545.3451190]
   Henning S, 2021, BIG DATA RES, V25, DOI 10.1016/j.bdr.2021.100209
   Herbst NR, 2013, INT C AUT COMP SAN J
   Hoefler T, 2015, PROCEEDINGS OF SC15: THE INTERNATIONAL CONFERENCE FOR HIGH PERFORMANCE COMPUTING, NETWORKING, STORAGE AND ANALYSIS, DOI 10.1145/2807591.2807644
   Huppler K, 2009, LECT NOTES COMPUT SC, V5895, P18, DOI 10.1007/978-3-642-10424-4_3
   Ibryam Bilgin, 2019, Kubernetes Patterns
   Iosup A., 2011, 2011 Proceedings of 11th IEEE/ACM International Symposium on Cluster, Cloud and Grid Computing (CCGrid 2011), P104, DOI 10.1109/CCGrid.2011.22
   Islam S., 2012, ICPE
   Jogalekar P, 2000, IEEE T PARALL DISTR, V11, P589, DOI 10.1109/71.862209
   Karakaya Z, 2017, 2017 INTERNATIONAL CONFERENCE ON COMPUTER AND APPLICATIONS (ICCA), P1, DOI 10.1109/COMAPP.2017.8079733
   Karimov J, 2018, PROC INT CONF DATA, P1507, DOI 10.1109/ICDE.2018.00169
   Kistowski Joakim v., 2015, P 6 ACMSPEC INT C PE, P333, DOI DOI 10.1145/2668930.2688819
   Kleppmann M., 2017, Designing data-intensive applications: The big ideas behind reliable, scalable, and maintainable systems
   Knoche H, 2019, ENTERP MODELLING INF, V14, DOI 10.18417/emisa.14.1
   Kounev Samuel, 2020, Systems Benchmarking
   Kratzke N, 2017, J SYST SOFTWARE, V126, P1, DOI 10.1016/j.jss.2017.01.001
   Kuhlenkamp J, 2014, PROC VLDB ENDOW, V7, P1219, DOI 10.14778/2732977.2732995
   Laaber C, 2019, EMPIR SOFTW ENG, V24, P2469, DOI 10.1007/s10664-019-09681-1
   Lehrig S, 2018, FUTURE GENER COMP SY, V78, P115, DOI 10.1016/j.future.2017.04.018
   Lehrig S, 2015, QOSA'15 PROCEEDINGS OF THE 11TH INTERNATIONAL ACM SIGSOFT CONFERENCE ON QUALITY OF SOFTWARE ARCHITECTURES, P83, DOI 10.1145/2737182.2737185
   Leitner P, 2016, ACM T INTERNET TECHN, V16, DOI 10.1145/2885497
   Maricq A, 2018, PROCEEDINGS OF THE 13TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P409
   Merenstein A., 2020, 12 USENIX WORKSH HOT
   Michael M, 2007, 2007 IEEE INT PAR DI, DOI [10.1109/IPDPS.2007.370631, DOI 10.1109/IPDPS.2007.370631]
   Nasiri H, 2019, J BIG DATA-GER, V6, DOI 10.1186/s40537-019-0215-2
   Papadopoulos AV, 2021, IEEE T SOFTWARE ENG, V47, P1528, DOI 10.1109/TSE.2019.2927908
   Ralph P, 2021, Arxiv, DOI arXiv:2010.03525
   Sim SE, 2003, PROC INT CONF SOFTW, P74, DOI 10.1109/ICSE.2003.1201189
   Soldani J, 2018, J SYST SOFTWARE, V146, P215, DOI 10.1016/j.jss.2018.09.082
   Tichy Walter F., 2014, UBIQUITY 2014, V2014, DOI DOI 10.1145/2590528.2590529
   Tsai W.-T., 2011, P IEEE INT C SERVICE, P1, DOI 10.1109/SOCA.20
   Wang G, 2021, P 2021 INT C MAN DAT, DOI [10.1145/3448016.3457556, DOI 10.1145/3448016.3457556]
NR 66
TC 8
Z9 8
U1 4
U2 13
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2022
VL 27
IS 6
AR 143
DI 10.1007/s10664-022-10162-1
PG 42
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 3O4IB
UT WOS:000836798500003
OA hybrid, Green Accepted
DA 2024-07-18
ER

PT J
AU Loriot, B
   Madeiral, F
   Monperrus, M
AF Loriot, Benjamin
   Madeiral, Fernanda
   Monperrus, Martin
TI Styler: learning formatting conventions to repair Checkstyle violations
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Coding conventions; Linter; Format checker; Checkstyle; Formatting
   violations; Automatic repair
AB Ensuring the consistent usage of formatting conventions is an important aspect of modern software quality assurance. To do so, the source code of a project should be checked against the formatting conventions (or rules) adopted by its development team, and then the detected violations should be repaired if any. While the former task can be automatically done by format checkers implemented in linters, there is no satisfactory solution for the latter. Manually fixing formatting convention violations is a waste of developer time and code formatters do not take into account the conventions adopted and configured by developers for the used linter. In this paper, we present Styler, a tool dedicated to fixing formatting rule violations raised by format checkers using a machine learning approach. For a given project, Styler first generates training data by injecting violations of the project-specific rules in violation-free source code files. Then, it learns fixes by feeding long short-term memory neural networks with the training data encoded into token sequences. Finally, it predicts fixes for real formatting violations with the trained models. Currently, Styler supports a single checker, Checkstyle, which is a highly configurable and popular format checker for Java. In an empirical evaluation, Styler repaired 41% of 26,791 Checkstyle violations mined from 104 GitHub projects. Moreover, we compared Styler with the IntelliJ plugin CheckStyle-IDEA and the machine-learning-based code formatters Naturalize and CodeBuff. We found out that Styler fixes violations of a diverse set of Checkstyle rules (24/25 rules), generates smaller repairs in comparison to the other systems, and predicts repairs in seconds once trained on a project. Through a manual analysis, we identified cases in which Styler does not succeed to generate correct repairs, which can guide further improvements in Styler. Finally, the results suggest that Styler can be useful to help developers repair Checkstyle formatting violations.
C1 [Loriot, Benjamin] Univ Technol Compiegne, Compiegne, France.
   [Madeiral, Fernanda] KTH Royal Inst Technol, Stockholm, Sweden.
   [Monperrus, Martin] KTH Royal Inst Technol, Software Technol, Stockholm, Sweden.
C3 Universite de Technologie de Compiegne; Royal Institute of Technology;
   Royal Institute of Technology
RP Madeiral, F (corresponding author), KTH Royal Inst Technol, Stockholm, Sweden.
EM bloriot97@gmail.com; fer.madeiral@gmail.com; martin.monperrus@csc.kth.se
RI Monperrus, Martin/I-3640-2012
OI Monperrus, Martin/0000-0003-3505-3383
FU Royal Institute of Technology
FX Open access funding provided by Royal Institute of Technology.
CR Aftandilian E., 2012, 2012 12th IEEE Working Conference on Source Code Analysis and Manipulation (SCAM 2012), P14, DOI 10.1109/SCAM.2012.28
   Ahmed UZ, 2018, PROC INT CONF SOFTW, P78, DOI 10.1145/3183377.3183383
   Allamanis M, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P281, DOI 10.1145/2635868.2635883
   Ayewah N, 2008, IEEE SOFTWARE, V25, P22, DOI 10.1109/MS.2008.130
   Bader J, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360585
   Bavishi R, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P613, DOI 10.1145/3338906.3338952
   Beller M, 2017, IEEE WORK CONF MIN S, P356, DOI 10.1109/MSR.2017.62
   Beller M, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P470, DOI 10.1109/SANER.2016.105
   Bhatia S, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P60, DOI 10.1145/3180155.3180219
   Calcagno C, 2015, LECT NOTES COMPUT SC, V9058, P3, DOI 10.1007/978-3-319-17524-9_1
   Carvalho A, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P161, DOI [10.1109/saner48275.2020.9054842, 10.1109/SANER48275.2020.9054842]
   CheckStyle-IDEA, 2021, CHECKSTYLE IDEA
   Chen ZM, 2021, IEEE T SOFTWARE ENG, V47, P1943, DOI 10.1109/TSE.2019.2940179
   Dias H, 2020, ANATOMY PERFECT PULL
   dos Santos RM, 2018, INT C PROGRAM COMPRE, P277, DOI 10.1145/3196321.3196342
   Gupta R, 2017, AAAI CONF ARTIF INTE, P1345
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Marcilio D, 2020, J SYST SOFTWARE, V168, DOI 10.1016/j.jss.2020.110671
   Marcilio D, 2019, INT C PROGRAM COMPRE, P209, DOI 10.1109/ICPC.2019.00040
   Markovtsev Vadim, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P468, DOI 10.1109/MSR.2019.00073
   Monperrus M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3105906
   Parr T, 2016, PROCEEDINGS OF THE 2016 ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING (SLE'16), P137, DOI 10.1145/2997364.2997383
   Prause CR, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P649, DOI 10.1145/2786805.2786806
   Reiss S. P, 2007, 22 IEEEACM INT C AUT, P74
   Santos EA, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P311, DOI 10.1109/SANER.2018.8330219
   Spinellis D, 2011, IEEE SOFTWARE, V28, P104, DOI 10.1109/MS.2011.31
   Tufano M, 2018, IEEE INT CONF AUTOM, P832, DOI 10.1145/3238147.3240732
   Vassallo C, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P38, DOI 10.1109/SANER.2018.8330195
   Yasunaga M, 2020, INT C MACHINE LEARNI, P10799
   Zampetti F, 2017, IEEE WORK CONF MIN S, P334, DOI 10.1109/MSR.2017.2
NR 30
TC 6
Z9 6
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2022
VL 27
IS 6
AR 149
DI 10.1007/s10664-021-10107-0
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 3O4IB
UT WOS:000836798500010
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Pasuksmit, J
   Thongtanunam, P
   Karunasekera, S
AF Pasuksmit, Jirat
   Thongtanunam, Patanamon
   Karunasekera, Shanika
TI Story points changes in agile iterative development An empirical study
   and a prediction approach
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software effort estimation; Story points; Mining software repositories
ID SOFTWARE; PARTICIPATION; RELIABILITY; IMPACT; RULES
AB Story Points (SP) are an effort unit that is used to represent the relative effort of a work item. In Agile software development, SP allows a development team to estimate their delivery capacity and facilitate the sprint planning activities. Although Agile embraces changes, SP changes after the sprint planning may negatively impact the sprint plan. To minimize the impact, there is a need to better understand the SP changes and an automated approach to predict the SP changes. Hence, to better understand the SP changes, we examine the prevalence, accuracy, and impact of information changes on SP changes. Through the analyses based on 19,349 work items spread across seven open-source projects, we find that on average, 10% of the work items have SP changes. These work items typically have SP value increased by 58%-100% relative to the initial SP value when they were assigned to a sprint. We also find that the unchanged SP reflect the development time better than the changed SP. Our qualitative analysis shows that the work items with changed SP often have the information changes relating to updating the scope of work. Our empirical results suggest that SP and the scope of work should be reviewed prior or during sprint planning to achieve a reliable sprint plan. Yet, it could be a tedious task to review all work items in the product (or sprint) backlog. Therefore, we develop a classifier to predict whether a work item will have SP changes after being assigned to a sprint. Our classifier achieves an AUC of 0.69-0.8, which is significantly better than the baselines. Our results suggest that to better manage and prepare for the unreliability in SP estimation, the team can leverage our insights and the classifier during the sprint planning. To facilitate future studies, we provide the replication package and the datasets, which are available online.
C1 [Pasuksmit, Jirat; Thongtanunam, Patanamon; Karunasekera, Shanika] Univ Melbourne, Sch Comp & Informat Syst, Melbourne, Vic, Australia.
C3 University of Melbourne
RP Pasuksmit, J (corresponding author), Univ Melbourne, Sch Comp & Informat Syst, Melbourne, Vic, Australia.
EM jpasuksmit@student.unimelb.edu.au; patanamon.t@unimelb.edu.au;
   karus@unimelb.edu.au
RI Pasuksmit, Jirat/HGD-8599-2022
OI Pasuksmit, Jirat/0000-0003-4059-757X
FU Australian Research Council's Discovery Early Career Researcher Award
   (DECRA) [DE210101091]; CAUL; Australian Research Council [DE210101091]
   Funding Source: Australian Research Council
FX Open Access funding enabled and organized by CAUL and its Member
   Institutions. P. Thongtanunam was partially supported by the Australian
   Research Council's Discovery Early Career Researcher Award (DECRA)
   funding scheme (DE210101091).
CR Agrawal A, 2019, COMPLEX SOFTWARE ANA
   Alhamed M, 2021, PROC INT CONF SOFTW, P1, DOI 10.1109/ICSE43902.2021.00014
   ANDERSON J, 1983, J READING, V26, P490
   [Anonymous], 2015, Package rpart
   [Anonymous], 2017, IEEE T SOFTWARE ENG, DOI DOI 10.1109/TSE.2016.2584050
   Basri S, 2016, PROCEEDINGS OF THE SEVENTH SYMPOSIUM ON INFORMATION AND COMMUNICATION TECHNOLOGY (SOICT 2016), P380, DOI 10.1145/3011077.3011096
   Bick S, 2018, IEEE T SOFTWARE ENG, V44, P932, DOI 10.1109/TSE.2017.2730870
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Britto R, 2015, INT CONF GLOBAL SOFT, P38, DOI 10.1109/ICGSE.2015.10
   Cerpa N, 2010, INFORM SOFTWARE TECH, V52, P934, DOI 10.1016/j.infsof.2010.03.011
   Chaparro O, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P396, DOI 10.1145/3106237.3106285
   Charmaz K., 2014, Introducing Qualitative Methods
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Choetkiertikul M, 2019, IEEE T SOFTWARE ENG, V45, P637, DOI 10.1109/TSE.2018.2792473
   Choetkiertikul M, 2018, IEEE T SOFTWARE ENG, V44, P551, DOI 10.1109/TSE.2017.2693989
   Choetkiertikul M, 2017, EMPIR SOFTW ENG, V22, P1223, DOI 10.1007/s10664-016-9496-7
   Coelho E., 2012, DEVELOPMENT, V3, P7, DOI DOI 10.5120/IJAIS12-450574
   Cohen J., 1988, STAT POWER ANAL BEHA
   Cohn Mike, 2006, AGILE ESTIMATING PLA
   COLEMAN M, 1975, J APPL PSYCHOL, V60, P283, DOI 10.1037/h0076540
   Corazza A, 2013, EMPIR SOFTW ENG, V18, P506, DOI 10.1007/s10664-011-9187-3
   Dehghan A, 2017, IEEE WORK CONF MIN S, P124, DOI 10.1109/MSR.2017.53
   EFRON B, 1983, J AM STAT ASSOC, V78, P316, DOI 10.2307/2288636
   El Zanaty F, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3239525
   Fan YR, 2020, IEEE T SOFTWARE ENG, V46, P495, DOI 10.1109/TSE.2018.2864217
   Fisher R. A., 1946, Statistical methods for research workers.
   Flesch R, 1948, J APPL PSYCHOL, V32, P221, DOI 10.1037/h0057532
   Fowler Martin, 2019, NAVIGATING HYBRID SC
   Fox J., 2018, Predictor effects graphics gallery
   Fu M, 2022, IEEE T SOFTWARE 2022
   Geiger D., 1994, Uncertainty in Artificial Intelligence. Proceedings of the Tenth Conference (1994), P235
   Gralha C, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P823, DOI 10.1145/3180155.3180158
   Grenning J., 2002, Hawthorn Woods, Renaissance Softw. Consulting, V3, P22
   Gunning R, 1952, TECHNIQUE CLEAR WRIT
   HANLEY JA, 1982, RADIOLOGY, V143, P29, DOI 10.1148/radiology.143.1.7063747
   Harrell FE, 2015, SPRINGER SER STAT, P1, DOI 10.1007/978-3-319-19425-7_1
   Harrell Jr F E, 2019, **DATA OBJECT**
   Haugen N. C., 2006, AGILE 2006
   Dam HK, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2019), P41, DOI 10.1109/ICSE-NIER.2019.00019
   Hoda R, 2016, J SYST SOFTWARE, V117, P245, DOI 10.1016/j.jss.2016.02.049
   HOLTE RC, 1993, MACH LEARN, V11, P63, DOI 10.1023/A:1022631118932
   Hothorn T., 2019, LMTEST TESTING LINEA
   Hothorn T, 2006, AM STAT, V60, P257, DOI 10.1198/000313006X118430
   Jiarpakdee J, 2018, PROC IEEE INT CONF S, P92, DOI 10.1109/ICSME.2018.00018
   Jorgensen M, 2009, IEEE T SOFTWARE ENG, V35, P368, DOI 10.1109/TSE.2009.2
   Jouanne-Diedrich H. von, 2017, ONER ONE RULE MACHIN
   Kincaid J.P., 1975, Derivation of New Readability Formulas (Automated Readability Index, Fog Count and Flesch Reading Ease Formula) for Navy Enlisted Personnel, DOI [DOI 10.21236/ADA006655, 10.21236/ADA006655]
   Kirmani MM, 2015, INT J ADV COMPUT SC, V6, P65
   Kocaguneli E, 2012, IEEE T SOFTWARE ENG, V38, P1403, DOI 10.1109/TSE.2011.111
   KRUSKAL WH, 1952, J AM STAT ASSOC, V47, P583, DOI 10.1080/01621459.1952.10483441
   Kuan S., 2017, Int. J. Softw. Eng. Appl., V8, P23
   Liaw A., 2018, Package'randomForest'. Breiman and Cutlers Random Forests for classification and regression
   Macbeth G, 2011, UNIV PSYCHOL, V10, P545, DOI 10.11144/Javeriana.upsy10-2.cdcp
   Madampe K, 2020, Arxiv, DOI arXiv:2012.03423
   Manga I., 2014, IJES, V3, P30
   Masood Z, 2022, IEEE T SOFTWARE ENG, V48, P1579, DOI 10.1109/TSE.2020.3025317
   McCallum A., 1998, AAAI 98 WORKSH LEARN, V752, P41, DOI DOI 10.1109/TSMC.1985.6313426
   McConnell S., 2006, Software Estimation: Demystifying the Black Art
   McHugh ML, 2012, BIOCHEM MEDICA, V22, P276, DOI 10.11613/bm.2012.031
   McIntosh S, 2018, IEEE T SOFTWARE ENG, V44, P412, DOI 10.1109/TSE.2017.2693980
   MCLAUGHLIN GH, 1969, J READING, V12, P639
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P637, DOI 10.1109/TSE.2007.70721
   Meyer D., 2019, E1071 MISC FUNCTIONS
   Mullen KM, 2011, J STAT SOFTW, V40, P1
   Pasuksmit Jirat, 2021, 2021 IEEE International Conference on Software Maintenance and Evolution (ICSME), P114, DOI 10.1109/ICSME52107.2021.00017
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Pinheiro J, 2021, NLME LINEAR NONLINEA
   Popli R, 2015, 2015 2ND INTERNATIONAL CONFERENCE ON COMPUTING FOR SUSTAINABLE GLOBAL DEVELOPMENT (INDIACOM), P1357
   Porru S., 2016, PROC 12 INT C PREDIC, P1
   Prikladnicki R, 2019, IEEE SOFTWARE, V36, P95, DOI 10.1109/MS.2018.2875649
   R Development Core Team, 2017, R LANG ENV STAT COMP, DOI DOI 10.1890/0012-9658(2002)083[3097:CFHIWS]2.0.CO;2
   Ramessur Melvina Autar, 2021, International Journal of Information Technology, V13, P1101, DOI 10.1007/s41870-021-00669-z
   Rehurek R., 2011, GENSIM STAT SEMANTIC
   Rennie JD. M., 1973, Proceedings of the Twentieth International Conference on Machine Learning (ICML)-2003), V20, P616, DOI DOI 10.1186/1477-3155-8-16
   Ribeiro MT, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1135, DOI 10.1145/2939672.2939778
   Rigby PC, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P541, DOI 10.1145/1985793.1985867
   Ruangwan S, 2019, EMPIR SOFTW ENG, V24, P973, DOI 10.1007/s10664-018-9646-1
   Rubin K.S., 2013, ESSENTIAL SCRUM PRAC
   Sarro F, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3234940
   Sarro F, 2016, PROC INT CONF SOFTW, P619, DOI 10.1145/2884781.2884830
   Sawilowsky SS, 2009, J MOD APPL STAT METH, V8, P597, DOI 10.22237/jmasm/1257035100
   Schwaber K., 2020, The Scrum Guide. The Definitive Guide to Scrum: The Rules of the Game
   Scott E, 2018, PROCEEDINGS OF THE 2018 INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESS (ICSSP 2018), P106, DOI 10.1145/3202710.3203160
   Sedano T, 2019, PROC INT CONF SOFTW, P200, DOI 10.1109/ICSE.2019.00036
   Shah J, 2018, IJSEA, V9
   Smith E A, 1967, AMRL TR, P1
   Svensson RB, 2019, LECT NOTES BUS INF P, V355, P53, DOI 10.1007/978-3-030-19034-7_4
   Syed M, 2015, EMERG ADULTHOOD, V3, P375, DOI 10.1177/2167696815587648
   Tantithamthavorn C, 2020, IEEE T SOFTWARE ENG, V46, P1200, DOI 10.1109/TSE.2018.2876537
   Tantithamthavorn C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P286, DOI 10.1145/3183519.3183547
   Tantithamthavorn C, 2019, IEEE T SOFTWARE ENG, V45, P683, DOI 10.1109/TSE.2018.2794977
   Tawosi V, 2021, MULTIOBJECTIVE SOFTW
   Tawosi V, 2022, P 29 IEEE INT C SOFT
   Thiele C, 2021, J STAT SOFTW, V98, DOI 10.18637/jss.v098.i11
   Thongtanunam P, 2017, EMPIR SOFTW ENG, V22, P768, DOI 10.1007/s10664-016-9452-6
   Timofeev R., 2004, Classification and regression trees (CART) theory and applications
   Tiwari NM, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P759, DOI [10.1145/2889160/2892662, 10.1145/2889160.2892662]
   Tomczak M., 2014, NEED REPORT EFFECT S, DOI DOI 10.1186/S13054-016-1208-6
   Torgo L., 2010, Data Mining with R: Learning with Case Studies, DOI 10.1201/b10328
   Usman M, 2018, J SYST SOFTWARE, V146, P286, DOI 10.1016/j.jss.2018.09.054
   Usman M, 2018, INFORM SOFTWARE TECH, V99, P21, DOI 10.1016/j.infsof.2018.02.009
   Usman M, 2016, PROCEEDINGS OF 2016 JOINT CONFERENCE OF THE INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA), P219, DOI [10.1109/IWSM-Mensura.2016.14, 10.1109/IWSM-Mensura.2016.042]
   Vargas EL, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS (ICSE-NIER), P21, DOI 10.1145/3183399.3183416
   Velez DR, 2007, GENET EPIDEMIOL, V31, P306, DOI 10.1002/gepi.20211
   Wilcoxon Frank, 1992, BREAKTHROUGHS STAT, P196, DOI [DOI 10.1007/978-1-4612-4380-9_16, 10.1007/978-1-4612-4380-9_16, DOI 10.1007/978-1-4612-4380-9]
   Xia T., 2020, Sequential model optimization for software effort estimation
   Zanetti MS, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1032, DOI 10.1109/ICSE.2013.6606653
   Zimmermann T, 2010, IEEE T SOFTWARE ENG, V36, P618, DOI 10.1109/TSE.2010.63
NR 108
TC 2
Z9 2
U1 5
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2022
VL 27
IS 6
AR 156
DI 10.1007/s10664-022-10192-9
PG 55
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 3T9BO
UT WOS:000840563300001
OA hybrid
DA 2024-07-18
ER

PT J
AU Jebnoun, H
   Rahman, MS
   Khomh, F
   Muse, BA
AF Jebnoun, Hadhemi
   Rahman, Md Saidur
   Khomh, Foutse
   Muse, Biruk Asmare
TI Clones in deep learning code: what, where, and why?
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Code clones; Deep learning; Clone taxonomy
ID LARGE-SCALE; SOFTWARE; QUALITY; FRAMEWORK; NICAD
AB Deep Learning applications are becoming increasingly popular worldwide. Developers of deep learning systems like in every other context of software development strive to write more efficient code in terms of performance, complexity, and maintenance. The continuous evolution of deep learning systems imposing tighter development timelines and their increasing complexity may result in bad design decisions by the developers. Besides, due to the use of common frameworks and repetitive implementation of similar tasks, deep learning developers are likely to use the copy-paste practice leading to clones in deep learning code. Code clone is considered to be a bad software development practice since developers can inadvertently fail to properly propagate changes to all clones fragments during a maintenance activity. However, to the best of our knowledge, no study has investigated code cloning practices in deep learning development. The majority of research on deep learning systems mostly focusing on improving the dependability of the models. Given the negative impacts of clones on software quality reported in the studies on traditional systems and the inherent complexity of maintaining deep learning systems (e.g., bug fixing), it is very important to understand the characteristics and potential impacts of code clones on deep learning systems. This paper examines the frequency, distribution, and impacts of code clones and the code cloning practices in deep learning systems. To accomplish this, we use the NiCad clone detection tool to detect clones from 59 Python, 14 C#, and 6 Java based deep learning systems and an equal number of traditional software systems. We then analyze the comparative frequency and distribution of code clones in deep learning systems and the traditional ones. Further, we study the distribution of the detected code clones by applying a location based taxonomy. In addition, we study the correlation between bugs and code clones to assess the impacts of clones on the quality of the studied systems. Finally, we introduce a code clone taxonomy related to deep learning programs based on 6 DL software systems (from 59 DL systems) and identify the deep learning system development phases in which cloning has the highest risk of faults. Our results show that code cloning is a frequent practice in deep learning systems and that deep learning developers often clone code from files contain in distant repositories in the system. In addition, we found that code cloning occurs more frequently during DL model construction, model training, and data pre-processing. And that hyperparameters setting is the phase of deep learning model construction during which cloning is the riskiest, since it often leads to faults.
C1 [Jebnoun, Hadhemi; Rahman, Md Saidur; Khomh, Foutse; Muse, Biruk Asmare] Polytech Montreal, DGIGL, Montreal, PQ, Canada.
C3 Universite de Montreal; Polytechnique Montreal
RP Jebnoun, H (corresponding author), Polytech Montreal, DGIGL, Montreal, PQ, Canada.
EM hadhemi.jebnoun@polymtl.ca; saidur.rahman@polymtl.ca;
   foutse.khomh@polymtl.ca; biruk-asmare.muse@polymtl.ca
FU Fonds de Recherche du Quebec (FRQ); Natural Sciences and Engineering
   Research Council of Canada (NSERC)
FX This work is supported by Fonds de Recherche du Quebec (FRQ) and the
   Natural Sciences and Engineering Research Council of Canada (NSERC). We
   would like to thank Dr. Amin Nikanjam for his valuable comments on the
   manuscript.
CR Al Dallal J, 2018, IEEE T SOFTWARE ENG, V44, P44, DOI 10.1109/TSE.2017.2658573
   Amershi S, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P291, DOI 10.1109/ICSE-SEIP.2019.00042
   Anwar H, 2019, EUROMICRO CONF PROC, P82, DOI 10.1109/SEAA.2019.00021
   Aversano L, 2007, CSMR 2007: 11TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P81
   Barbour L., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P273, DOI 10.1109/ICSM.2011.6080794
   Barbour L, 2018, SOFTWARE QUAL J, V26, P1187, DOI 10.1007/s11219-017-9375-5
   Barbour L, 2013, J SOFTW-EVOL PROC, V25, P1139, DOI 10.1002/smr.1597
   Ben Braiek H., 2020, P 17 INT C MIN SOFTW, P1
   Ben Braiek H, 2020, J SYST SOFTWARE, V164, DOI 10.1016/j.jss.2020.110542
   Ben Braiek H, 2019, PROC IEEE INT CONF S, P454, DOI 10.1109/ICSME.2019.00078
   Ben Braiek H, 2018, IEEE WORK CONF MIN S, P353, DOI 10.1145/3196398.3196445
   Bergstra J, 2012, J MACH LEARN RES, V13, P281
   Bordes Antoine, 2014, P C EMP METH NAT LAN, P615
   Breck E, 2017, IEEE INT CONF BIG DA, P1123, DOI 10.1109/BigData.2017.8258038
   BUCKLEY FJ, 1984, IEEE T SOFTWARE ENG, V10, P36, DOI 10.1109/TSE.1984.5010196
   Chen B., 2019, BERRYNET DEEP LEARNI
   Chen Z., 2020, ARXIV200500760
   Chen ZF, 2018, INFORM SOFTWARE TECH, V94, P14, DOI 10.1016/j.infsof.2017.09.011
   Collobert R, 2011, J MACH LEARN RES, V12, P2493
   Cordy J.R., 2019, NiCad clone detector
   Cordy JR, 2011, CONF PROC INT SYMP C, P219, DOI 10.1109/ICPC.2011.26
   Ernst N., 2019, CLIFFS DELTA IMPLEME
   Farabet C, 2013, IEEE T PATTERN ANAL, V35, P1915, DOI 10.1109/TPAMI.2012.231
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Göde N, 2011, EUR CON SFTWR MTNCE, P65, DOI 10.1109/CSMR.2011.11
   Göde N, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P311, DOI 10.1145/1985793.1985836
   Goodfellow I, 2016, ADAPT COMPUT MACH LE, P163
   Gottschalk M., 2012, INFORMATIK
   Gupta R, 2017, AAAI CONF ARTIF INTE, P1345
   Hadhemii, 2019, DLCODESMELLS
   Hamdan S, 2015, PROCEDIA MANUF, V3, P2019, DOI 10.1016/j.promfg.2015.07.249
   Han JX, 2020, EMPIR SOFTW ENG, V25, P2694, DOI 10.1007/s10664-020-09819-6
   Heaton JB, 2017, APPL STOCH MODEL BUS, V33, P3, DOI 10.1002/asmb.2209
   Hinton G, 2012, IEEE SIGNAL PROC MAG, V29, P82, DOI 10.1109/MSP.2012.2205597
   Nguyen H, 2018, IET INTELL TRANSP SY, V12, P998, DOI 10.1049/iet-its.2018.0064
   Hotta K., 2010, JOINT ERCIM WORK SHO, P73
   Islam J.F., 2017, SEKE, P436
   Islam JF, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P68, DOI 10.1109/SANER.2016.78
   Islam MJ, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P510, DOI 10.1145/3338906.3338955
   Jebnoun H., 2020, CLONES DEEP LEARNING
   Jebnoun H., 2020, 6DLREPOSDATA
   Jiang Lingxiao, 2007, P THE 6 JOINT M EURO, P55, DOI DOI 10.1145/1287624.1287634
   Juergens E, 2009, PROC INT CONF SOFTW, P485, DOI 10.1109/ICSE.2009.5070547
   Kapser C., 2003, Evolution of large scale industrial software architectures, V16, P107
   Kapser CJ, 2008, EMPIR SOFTW ENG, V13, P645, DOI 10.1007/s10664-008-9076-6
   Kery MB, 2018, PROCEEDINGS OF THE 2018 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2018), DOI 10.1145/3173574.3173748
   Kim Miryung, 2005, ESEC/FSE- 13), P187, DOI [10.1145/1081706.1081737, DOI 10.1145/1081706.1081737]
   Kim S, 2006, Proceedings of the 2006 international workshop on Mining software repositories, P173
   Koenzen A., 2020, ARXIV200513709
   Koschke R., 2007, P DUPLICATION REDUND
   Krinke J., 2011, P 5 INT WORKSHOP SOF, P28
   Kumlander D, 2010, ADVANCES TECHNIQUES IN COMPUTING SCIENCES AND SOFTWARE ENGINEERING, P487, DOI 10.1007/978-90-481-3660-5_84
   Lecun Y, 1998, P IEEE, V86, P2278, DOI 10.1109/5.726791
   LeCun Y., 1990, ADV NEURAL INFORM PR, P396
   Li JY, 2012, PROC INT CONF SOFTW, P310, DOI 10.1109/ICSE.2012.6227183
   Li ZM, 2006, IEEE T SOFTWARE ENG, V32, P176, DOI 10.1109/TSE.2006.28
   Liu JK, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN SOCIETY (ICSE-SEIS 2021), P1, DOI 10.1145/3377815.3381377
   Lozano A., 2010, IWSC, V10, P65, DOI [10.1145/1808901.1808910, DOI 10.1145/1808901.1808910]
   Lozano A, 2008, PROC IEEE INT CONF S, P227, DOI 10.1109/ICSM.2008.4658071
   Macbeth G, 2011, UNIV PSYCHOL, V10, P545, DOI 10.11144/Javeriana.upsy10-2.cdcp
   Miotto R, 2018, BRIEF BIOINFORM, V19, P1236, DOI 10.1093/bib/bbx044
   Mondal M., 2012, P ACM S APPL COMPUTI, P1227, DOI DOI 10.1145/2245276.2231969
   Mondal M, 2019, PROC IEEE INT CONF S, P157, DOI 10.1109/ICSME.2019.00026
   Mondal M, 2018, EMPIR SOFTW ENG, V23, P693, DOI 10.1007/s10664-017-9528-y
   Mondal M, 2017, INT WORKS SOFTW CLON, P38
   Mondal M, 2015, PROC IEEE INT CONF S, P91, DOI 10.1109/ICSM.2015.7332455
   Neuhauser M., 2001, WILCOXON MANN WHITNE, P1656, DOI [DOI 10.1007/978-3-642-04898-2_615, 10.1007/978-3-642-04898-2_615]
   Pasumarthi RK, 2019, TENSORFLOW RANKING
   Pimentel Joao Felipe, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P507, DOI 10.1109/MSR.2019.00077
   Psallidas F, 2019, ABS191209536 CORR
   Rahman F, 2012, EMPIR SOFTW ENG, V17, P503, DOI 10.1007/s10664-011-9195-3
   Rahman MS, 2017, IEEE INT WORK C SO, P131, DOI 10.1109/SCAM.2017.26
   Rahman MS, 2014, IEEE INT WORK C SO, P31, DOI 10.1109/SCAM.2014.13
   Raj A, 2019, EUROMICRO CONF PROC, P140, DOI 10.1109/SEAA.2019.00030
   Rampasek Ladislav, 2016, Cell Syst, V2, P12, DOI 10.1016/j.cels.2016.01.009
   Redmon J., 2016, 2016 IEEE Conf. Comp. Vis. Patt. Recog. (CVPR), P779
   Rochimah S., 2015, International Journal of Software Engineering and Its Applications, V9, P197
   Rosen C, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P966, DOI 10.1145/2786805.2803183
   Roy CK, 2010, J SOFTW MAINT EVOL-R, V22, P165, DOI 10.1002/smr.416
   Roy CK, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P18, DOI 10.1109/CSMR-WCRE.2014.6747168
   Roy CK, 2009, IEEE ICST WORKSHOP, P157, DOI 10.1109/ICSTW.2009.18
   Roy CK, 2008, INT C PROGRAM COMPRE, P172, DOI 10.1109/ICPC.2008.41
   Roy J. R., 2007, QUEENS SCH COMPUTING, V541, P64
   Sainath TN, 2013, INT CONF ACOUST SPEE, P8614, DOI 10.1109/ICASSP.2013.6639347
   Saini V, 2018, EMPIR SOFTW ENG, V23, P2232, DOI 10.1007/s10664-017-9572-7
   Sajnani H, 2014, IEEE INT WORK C SO, P21, DOI 10.1109/SCAM.2014.12
   Samek W., 2017, ARXIV PREPRINT ARXIV
   Sculley D, 2015, ADV NEUR IN, V28
   Selim G. M. K., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P13, DOI 10.1109/WCRE.2010.11
   Shen H, 2014, NATURE, V515, P151, DOI 10.1038/515151a
   Spadini D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P908, DOI 10.1145/3236024.3264598
   Suryanarayana G., 2014, Refactoring for Software Design Smells: Managing Technical Debt
   Svajlenko J, 2014, PROC IEEE INT CONF S, P321, DOI 10.1109/ICSME.2014.54
   Szegedy C, 2016, PROC CVPR IEEE, P2818, DOI 10.1109/CVPR.2016.308
   Tompson J, 2014, ADV NEUR IN, V27
   Vetro A., 2013, Definition, implementation and validation of energy code smells: an exploratory study on an embedded system
   Wagner S, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P79, DOI 10.1109/SANER.2016.94
   Wan ZY, 2021, IEEE T SOFTWARE ENG, V47, P1857, DOI 10.1109/TSE.2019.2937083
   Wang Tiantian, 2013, P 2013 9 JOINT M FDN, P455
   Weill C, 2019, ADANET
   Wheeler D.A., 2004, SLOCCOUNT
   White M, 2016, IEEE INT CONF AUTOM, P87, DOI 10.1145/2970276.2970326
   Zhang JM, 2022, IEEE T SOFTWARE ENG, V48, P1, DOI 10.1109/TSE.2019.2962027
   Zhang Jingxuan, 2018, ARXIV180504825
   Zhang X, 2019, ARXIV191003156
   Zhang YH, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P129, DOI 10.1145/3213846.3213866
NR 106
TC 2
Z9 2
U1 2
U2 7
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2022
VL 27
IS 4
AR 84
DI 10.1007/s10664-021-10099-x
PG 75
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0I7MA
UT WOS:000779599100001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Penzenstadler, B
   Torkar, R
   Montes, CM
AF Penzenstadler, Birgit
   Torkar, Richard
   Montes, Cristina Martinez
TI Take a deep breath: Benefits of neuroplasticity practices for software
   developers and computer workers in a family of experiments
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Sustainability; Resilience; Neuroplasticity; Breathing; Longitudinal
   study
ID NEGATIVE AFFECT; MINDFULNESS; STRESS; HEALTH; VALIDATION; SCALE;
   QUESTIONNAIRE; VALIDITY; ANXIETY
AB Context Computer workers in general, and software developers specifically, are under a high amount of stress due to continuous deadlines and, often, over-commitment. Objective This study investigates the effects of a neuroplasticity practice, a specific breathing practice, on the attention awareness, well-being, perceived productivity, and self-efficacy of computer workers. Method The intervention was a 12-week program with a weekly live session that included a talk on a well-being topic and a facilitated group breathing session. During the intervention period, we solicited one daily journal note and one weekly well-being rating. We created a questionnaire mainly from existing, validated scales as entry and exit survey for data points for comparison before and after the intervention. We replicated the intervention in a similarly structured 8-week program. The data was analyzed using Bayesian multi-level models for the quantitative part and thematic analysis for the qualitative part. Results The intervention showed improvements in participants' experienced inner states despite an ongoing pandemic and intense outer circumstances for most. Over the course of the study, we found an improvement in the participants' ratings of how often they found themselves in good spirits as well as in a calm and relaxed state. We also aggregate a large number of deep inner reflections and growth processes that may not have surfaced for the participants without deliberate engagement in such a program. Conclusion The data indicates usefulness and effectiveness of an intervention for computer workers in terms of increasing well-being and resilience. Everyone needs a way to deliberately relax, unplug, and recover. A breathing practice is a simple way to do so, and the results call for establishing a larger body of work to make this common practice.
C1 [Penzenstadler, Birgit; Torkar, Richard; Montes, Cristina Martinez] Chalmers Gothenburg Univ, Gothenburg, Sweden.
   [Penzenstadler, Birgit] Lappeenranta Lahti Univ, Lappeenranta, Finland.
   [Torkar, Richard] Stellenbosch Univ, Stellenbosch Inst Adv Study STIAS, Wallenberg Res Ctr, Stellenbosch, South Africa.
C3 Stellenbosch University
RP Penzenstadler, B (corresponding author), Chalmers Gothenburg Univ, Gothenburg, Sweden.; Penzenstadler, B (corresponding author), Lappeenranta Lahti Univ, Lappeenranta, Finland.
EM birgitp@chalmers.se; Richard.Torkar@cse.gu.se; montesc@chalmers.se
RI Martinez Montes, Cristina/JNS-2631-2023; Penzenstadler, Birgit
   S/B-1582-2015
OI Martinez Montes, Cristina/0000-0003-1150-6931; Penzenstadler, Birgit
   S/0000-0002-5771-0455
FU Chalmers University of Technology
FX Open access funding provided by Chalmers University of Technology.
CR Amin A., 2011, 2011 NAT POSTGR C, P14
   [Anonymous], ENCY HUMAN BEHAV
   [Anonymous], 2008, 4 INT S MAN ENG INF
   [Anonymous], 2014, SPEED FACING OUR ADD
   [Anonymous], 1971, Be here now
   [Anonymous], 1996, PSYCHOL MIND BRAIN C
   [Anonymous], 2001, The Stanford Encyclopedia of Philosophy
   Baer RA, 2006, ASSESSMENT, V13, P27, DOI 10.1177/1073191105283504
   Baltes S., 2020, CORR ARXIV
   Bandura A., 1997, SELF EFFICACY EXERCI
   Barajas Santiago, 2014, Clínica y Salud, V25, P49
   Barrett FS, 2015, J PSYCHOPHARMACOL, V29, P1182, DOI 10.1177/0269881115609019
   Bech P, 1999, ACTA ANAESTH SCAND, V43, P893, DOI 10.1034/j.1399-6576.1999.430906.x
   Bernárdez B, 2018, J SYST SOFTWARE, V136, P153, DOI 10.1016/j.jss.2016.06.104
   Bernrdez B., 2014, P 8 ACM IEEE INT S E, P110
   Braun V., 2012, Thematic analysis. APA handbook of research methods in psychology, DOI [DOI 10.1037/13620-004, 10.1037/13620-000, DOI 10.1037/13620-000]
   Braun V, 2021, QUAL RES SPORT EXERC, V13, P201, DOI 10.1080/2159676X.2019.1704846
   BROOME BJ, 1991, COMMUN EDUC, V40, P235, DOI 10.1080/03634529109378847
   Brown KW, 2003, J PERS SOC PSYCHOL, V84, P822, DOI 10.1037/0022-3514.84.4.822
   Brown RP, 2005, J ALTERN COMPLEM MED, V11, P189, DOI 10.1089/acm.2005.11.189
   Brul D., 2017, JUST BREATHE MASTERI
   Busseri MA, 2018, PERS INDIV DIFFER, V122, P68, DOI 10.1016/j.paid.2017.10.003
   Buxton OM, 2012, SCI TRANSL MED, V4, DOI 10.1126/scitranslmed.3003200
   Capretz LF, 2003, INT J HUM-COMPUT ST, V58, P207, DOI 10.1016/S1071-5819(02)00137-4
   Carmody J, 2008, J PSYCHOSOM RES, V64, P393, DOI 10.1016/j.jpsychores.2007.06.015
   Chalmers, 1996, CONSCIOUS MIND SEARC
   Cheng L, 2019, NAT COMMUN, V10, DOI 10.1038/s41467-019-09785-8
   Chlebak C, 2013, COUNSELING SPIRITUAL, V32, P79
   Cockburn A., 2006, AGILE SOFTWARE DEV C
   Creswell JD, 2014, PSYCHONEUROENDOCRINO, V44, P1, DOI 10.1016/j.psyneuen.2014.02.007
   Dagenais-Desmarais V, 2012, J HAPPINESS STUD, V13, P659, DOI 10.1007/s10902-011-9285-3
   den Heijer P, 2017, LECT NOTES BUS INF P, V283, P103, DOI 10.1007/978-3-319-57633-6_7
   Deng YQ, 2012, MINDFULNESS, V3, P10, DOI 10.1007/s12671-011-0074-1
   Derksen F, 2013, BRIT J GEN PRACT, V63, DOI [10.3399/bjgp13X660814, 10.3399/bjgpbjgp13X660814]
   Diener E, 2009, ASSESSING WELL BEING, P47266
   Dillman DA., 2014, INTERNET PHONE MAIL, V4th
   Donnelly N, 2015, NEW TECH WORK EMPLOY, V30, P47, DOI 10.1111/ntwe.12040
   Easterbrook S., 2014, 2 INT C ICT SUST ICT
   Elliot D., 2005, RELUCTANT HEALER
   Evans S., 2009, J COMPLEMENT INTEGR, V6
   Evans S, 2008, J ANXIETY DISORD, V22, P716, DOI 10.1016/j.janxdis.2007.07.005
   Feldmann-Barrett L., 2020, 7 HALF LESSONS BRAIN
   Feldt R., 2008, P 2008 INT WORKSH CO, P4952
   Fisher M., 2019, BMC PUBLIC HEALTH, P19
   Fletcher C., 2003, J MANAGE PSYCHOL
   Fucci D, 2018, IEEE T SOFTW ENG
   Graziotin D, 2018, J SYST SOFTWARE, V140, P32, DOI 10.1016/j.jss.2018.02.041
   Gren L, 2018, P14
   Hafner Marco, 2017, Rand Health Q, V6, P11
   Haus EL, 2013, SLEEP MED REV, V17, P273, DOI 10.1016/j.smrv.2012.08.003
   Herbsleb JD, 2001, IEEE SOFTWARE, V18, P16, DOI 10.1109/52.914732
   Herrman H, 2011, CAN J PSYCHIAT, V56, P258, DOI 10.1177/070674371105600504
   Hfling V., 2011, EUR J PSYCHOL ASSESS
   Hofmann SG, 2013, BEHAV THER, V44, P199, DOI 10.1016/j.beth.2009.01.007
   Houben M, 2015, PSYCHOL BULL, V141, P901, DOI 10.1037/a0038822
   Jahoda M., 1958, Current Concepts of Positive Mental Health, DOI DOI 10.1037/11258-000
   James W., 1911, Memories and Studies
   James W., 2007, PRINCIPLES PSYCHOL, V1
   Jovanovic V, 2015, PERS INDIV DIFFER, V86, P487, DOI 10.1016/j.paid.2015.07.015
   Kabat-Zinn J, 2003, CLIN PSYCHOL-SCI PR, V10, P144, DOI 10.1093/clipsy/bpg016
   Kabat-Zinn J, 2021, MINDFULNESS, V12, P784, DOI 10.1007/s12671-020-01578-1
   Kahneman Daniel, 2011, Thinking, fast and slow (macmillan)
   Kessler RC, 2003, J OCCUP ENVIRON MED, V45, P156, DOI 10.1097/01.jom.0000052967.43131.51
   Konrath S, 2013, HDB RES TECHNOSELF I, P4228
   Kotler S., 2021, The art of the impossible
   Krishnan P, 2018, NURSE RES, V26, P37, DOI 10.7748/nr.2018.e1582
   Lavallee M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P677, DOI 10.1109/ICSE.2015.83
   Lenberg P, 2015, J SYST SOFTWARE, V107, P15, DOI 10.1016/j.jss.2015.04.084
   Lucas JJ, 2021, QUAL SOC WORK, V20, P214, DOI 10.1177/1473325020973302
   MacKillop J, 2007, J PSYCHOPATHOL BEHAV, V29, P289, DOI 10.1007/s10862-007-9045-1
   Marek T., 2017, Professional Burnout: Recent Developments in Theory and Research
   Maudgalya T, 2006, THEOR ISS ERGON SCI, V7, P285, DOI 10.1080/14639220500090638
   McElreath R, 2018, Statistical rethinking: a Bayesian course with examples in R and Stan. Chapman and Hall/CRC
   Medvedyk T, 2019, 2019 IEEE 20TH INTERNATIONAL CONFERENCE ON COMPUTATIONAL PROBLEMS OF ELECTRICAL ENGINEERING (CPEE), P150, DOI 10.1109/cpee47179.2019.8949157
   Meyer A N, 2019, THESIS U ZURICH
   Nestor J., 2020, Breath, The New Science of a Lost Art
   Ostberg JP, 2020, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.286
   Paananen T, 2019, P MACHINE LEARNING R, V89, P31752
   Panikkar R., 1994, VEDIC EXPERIENCE MAN
   Pavot W., 2004, AGEING INT, V29, P113, DOI [10.1007/s12126-004-1013-4, DOI 10.1007/S12126-004-1013-4]
   Penzenstadler B, 2021, RISE 2 FLOW REPLICAT
   Penzenstadler B., 2020, IEEE SOFTWARE BLOG
   Ralph P, 2020, EMPIR SOFTW ENG, V25, P4927, DOI 10.1007/s10664-020-09875-y
   Rieken B., 2019, HARVARD BUS REV
   Riess Helen, 2017, J Patient Exp, V4, P74, DOI 10.1177/2374373517699267
   Samuelson M, 2007, PRISON J, V87, P254, DOI 10.1177/0032885507303753
   Schwarzer R., 1999, Skalen zur Erfassung von Lehrerund Schulermerkmalen: Dokumentation der psychometrischen Verfahren im Rahmen der wissenschaftlichen Begleitung des Modellversuchs Selbstwirksame Schulen Scales for the assessment of teacher and student characteristics: Documentation of the psychometric procedures within the scientific monitoring of the pilot project Self-Efficacious Schools
   Scuffham PA, 2014, MED DECIS MAKING, V34, P127, DOI 10.1177/0272989X13497996
   SELYE H, 1956, METABOLISM, V5, P525
   Seppälä EM, 2020, FRONT PSYCHIATRY, V11, DOI 10.3389/fpsyt.2020.00590
   Shapiro SL, 2008, J CLIN PSYCHOL, V64, P840, DOI 10.1002/jclp.20491
   Sharma Promila, 2015, Adv Mind Body Med, V29, P18
   Sheppard S. D., 2010, Exploring the engineering student experience: Findings from the academic pathways of people learning engineering survey (APPLES)
   Smith J M, 2021, EXPANDING GLOBAL HOR, P91201
   Squire Larry, 2012, FUNDAMENTAL NEUROSCI
   Sutton A, 2016, EUR J PSYCHOL, V12, P645, DOI 10.5964/ejop.v12i4.1178
   Tan C M., 2012, HARPERCOLLINS
   Topp CW, 2015, PSYCHOTHER PSYCHOSOM, V84, DOI 10.1159/000376585
   Van Dam NT, 2010, PERS INDIV DIFFER, V49, P805, DOI 10.1016/j.paid.2010.07.020
   Vanhatalo J, 2013, J MACH LEARN RES, V14, P1175
   Wagner S., 2020, CONT EMPIRICAL METHO, P93125
   Walker J, 2017, MED ACUPUNCT, V29, P232, DOI 10.1089/acu.2017.1215
   Wasserstein R L., 2016, The asa statement on p-values: context, process and purpose
   WATSON D, 1988, J PERS SOC PSYCHOL, V54, P1063, DOI 10.1037/0022-3514.54.6.1063
NR 104
TC 4
Z9 4
U1 3
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2022
VL 27
IS 4
AR 98
DI 10.1007/s10664-022-10148-z
PG 64
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0Z9HQ
UT WOS:000791380900001
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Laaber, C
   Gall, HC
   Leitner, P
AF Laaber, Christoph
   Gall, Harald C.
   Leitner, Philipp
TI Applying test case prioritization to software microbenchmarks
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE performance testing; software microbenchmarking; test case
   prioritization; regression testing; JMH
ID PERFORMANCE; SYSTEMS
AB Regression testing comprises techniques which are applied during software evolution to uncover faults effectively and efficiently. While regression testing is widely studied for functional tests, performance regression testing, e.g., with software microbenchmarks, is hardly investigated. Applying test case prioritization (TCP), a regression testing technique, to software microbenchmarks may help capturing large performance regressions sooner upon new versions. This may especially be beneficial for microbenchmark suites, because they take considerably longer to execute than unit test suites. However, it is unclear whether traditional unit testing TCP techniques work equally well for software microbenchmarks. In this paper, we empirically study coverage-based TCP techniques, employing total and additional greedy strategies, applied to software microbenchmarks along multiple parameterization dimensions, leading to 54 unique technique instantiations. We find that TCP techniques have a mean APFD-P (average percentage of fault-detection on performance) effectiveness between 0.54 and 0.71 and are able to capture the three largest performance changes after executing 29% to 66% of the whole microbenchmark suite. Our efficiency analysis reveals that the runtime overhead of TCP varies considerably depending on the exact parameterization. The most effective technique has an overhead of 11% of the total microbenchmark suite execution time, making TCP a viable option for performance regression testing. The results demonstrate that the total strategy is superior to the additional strategy. Finally, dynamic-coverage techniques should be favored over static-coverage techniques due to their acceptable analysis overhead; however, in settings where the time for prioritzation is limited, static-coverage techniques provide an attractive alternative.
C1 [Laaber, Christoph; Gall, Harald C.] Univ Zurich, Dept Informat, Zurich, Switzerland.
   [Leitner, Philipp] Chalmers Univ Gothenburg, Software Engn Div, Gothenburg, Sweden.
C3 University of Zurich; Chalmers University of Technology
RP Laaber, C (corresponding author), Univ Zurich, Dept Informat, Zurich, Switzerland.
EM laaber@ifi.uzh.ch; gall@ifi.uzh.ch; philipp.leitner@chalmers.se
RI Laaber, Christoph/AAU-8240-2021
OI Laaber, Christoph/0000-0001-6817-331X; Gall, Harald/0000-0002-3874-5628
FU Swiss National Science Foundation (SNSF) [165546]; Swedish Research
   Council (VR) [2018-04127]; Swedish Research Council [2018-04127] Funding
   Source: Swedish Research Council
FX We are grateful for the anonymous reviewers' comments and feedback that
   helped to improve the paper. The research leading to these results has
   received funding from the Swiss National Science Foundation (SNSF) under
   project number 165546 and the Swedish Research Council (VR) under grant
   number 2018-04127.
CR AlGhamdi HM, 2023, J SOFTW-EVOL PROC, V35, DOI 10.1002/smr.2276
   AlGhmadi HM, 2016, PROC IEEE INT CONF S, P279, DOI 10.1109/ICSME.2016.46
   Alshoaibi D, 2019, LECT NOTES COMPUT SC, V11664, P75, DOI 10.1007/978-3-030-27455-9_6
   Alspaugh S, 2007, P 1 ACM INT WORKSH E, P13, DOI 10.1145/1353673.1353676
   [Anonymous], 2012, 412 U KENT
   Bacon DF, 1996, ACM SIGPLAN NOTICES, V31, P324, DOI 10.1145/236338.236371
   Baltes Sebastian, 2020, ARXIV200207764
   Blackburn SM, 2006, ACM SIGPLAN NOTICES, V41, P169, DOI 10.1145/1167515.1167488
   Blackburn SM, 2016, ACM T PROGR LANG SYS, V38, DOI 10.1145/2983574
   Bulej L, 2019, I S MOD ANAL SIM COM, P249, DOI 10.1109/MASCOTS.2019.00035
   Bulej L, 2017, AUTOMAT SOFTW ENG, V24, P139, DOI 10.1007/s10515-015-0188-0
   Bulej Lubomir., 2012, P 3 ACMSPEC INT C PE, P311, DOI DOI 10.1145/2188286.2188345
   Chen JF, 2022, IEEE T SOFTWARE ENG, V48, P1529, DOI 10.1109/TSE.2020.3023955
   Chen JF, 2017, PROC IEEE INT CONF S, P341, DOI 10.1109/ICSME.2017.13
   COHEN J, 1992, PSYCHOL BULL, V112, P155, DOI 10.1037/0033-2909.112.1.155
   Costa D, 2021, IEEE T SOFTWARE ENG, V47, P1452, DOI 10.1109/TSE.2019.2925345
   Curtsinger C, 2013, ACM SIGPLAN NOTICES, V48, P219, DOI 10.1145/2499368.2451141
   de Oliveira AB, 2017, IEEE INT CONF SOFTW, P103, DOI 10.1109/ICST.2017.17
   de Oliveira AugustoBorn., 2013, Proceedings of the 4th ACM/SPEC International Conference on Performance Engineering, ICPE'13, P137
   Ding ZS, 2020, PROC INT CONF SOFTW, P1435, DOI 10.1145/3377811.3380351
   Do H, 2010, IEEE T SOFTWARE ENG, V36, P593, DOI 10.1109/TSE.2010.58
   Elbaum S, 2002, IEEE T SOFTWARE ENG, V28, P159, DOI 10.1109/32.988497
   Elbaum S, 2001, PROC INT CONF SOFTW, P329, DOI 10.1109/ICSE.2001.919106
   Elbaum S, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P235, DOI 10.1145/2635868.2635910
   Flora Parminder, 2014, P 11 WORK C MIN SOFT, P232, DOI [DOI 10.1145/2597073.2597092EVENT-PLACE, 10.1145/2597073.2597092event-place:Hyderabad,India, DOI 10.1145/2597073.2597092EVENT-PLACE:HYDERABAD,INDIA]
   Foo KC, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P159, DOI 10.1109/ICSE.2015.144
   Georges A, 2007, OOPSLA: 22ND INTERNATIONAL CONFERENCE ON OBJECT-ORIENTED PROGRAMMING, SYSTEMS, LANGUAGES, AND APPLICATIONS, PROCEEDINGS, P57
   Grambow M, 2021, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.548
   Grove D, 2001, ACM T PROGR LANG SYS, V23, P685, DOI 10.1145/506315.506316
   Haghighatkhah A, 2018, J SYST SOFTWARE, V146, P80, DOI 10.1016/j.jss.2018.08.061
   Hao D, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2685614
   He S, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P188, DOI 10.1145/3338906.3338912
   Henard C, 2016, PROC INT CONF SOFTW, P523, DOI 10.1145/2884781.2884791
   Hesterberg TC, 2015, AM STAT, V69, P371, DOI 10.1080/00031305.2015.1089789
   Horky Vojtech, 2015, P 6 ACM SPEC INT C P, P289, DOI DOI 10.1145/2668930.2688051
   Huang P, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P60, DOI 10.1145/2568225.2568232
   Jiang ZM, 2015, IEEE T SOFTWARE ENG, V41, P1091, DOI 10.1109/TSE.2015.2445340
   Jin GL, 2012, ACM SIGPLAN NOTICES, V47, P77, DOI 10.1145/2345156.2254075
   Kalibera T, 2013, PROCEEDINGS OF THE ACM SIGPLAN INTERNATIONAL SYMPOSIUM ON MEMORY MANAGEMENT (ISMM '13), P63
   Laaber C., BENCHER JMH BENCHMAR
   Laaber C, PA PERFORMANCE CHANG
   Laaber C, 2021, **DATA OBJECT**, DOI [10.5281/zenodo.5206117, DOI 10.5281/ZENODO.5206117]
   Laaber C, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09996-y
   Laaber C, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P989, DOI 10.1145/3368089.3409683
   Laaber C, 2019, EMPIR SOFTW ENG, V24, P2469, DOI 10.1007/s10664-019-09681-1
   Laaber C, 2018, IEEE WORK CONF MIN S, P119, DOI 10.1145/3196398.3196407
   Leitner P., 2017, P 8 ACMSPEC INT C PE, P373
   Li Z, 2007, IEEE T SOFTWARE ENG, V33, P225, DOI 10.1109/TSE.2007.38
   Liang JJ, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P688, DOI 10.1145/3180155.3180213
   Lu YF, 2016, PROC INT CONF SOFTW, P535, DOI 10.1145/2884781.2884874
   Luo Q, 2019, IEEE T SOFTWARE ENG, V45, P1054, DOI 10.1109/TSE.2018.2822270
   Luo Q, 2018, PROC IEEE INT CONF S, P240, DOI 10.1109/ICSME.2018.00033
   Luo Q, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P559, DOI 10.1145/2950290.2950344
   Mei H, 2012, IEEE T SOFTWARE ENG, V38, P1258, DOI 10.1109/TSE.2011.106
   Menascé DA, 2002, IEEE INTERNET COMPUT, V6, P70, DOI 10.1109/MIC.2002.1020328
   Mostafa S, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P23, DOI 10.1145/3092703.3092725
   Mühlbauer S, 2020, IEEE INT CONF AUTOM, P611, DOI 10.1145/3324884.3416573
   Mytkowicz T, 2009, ACM SIGPLAN NOTICES, V44, P265, DOI 10.1145/1508284.1508275
   Papadopoulos AV, 2021, IEEE T SOFTWARE ENG, V47, P1528, DOI 10.1109/TSE.2019.2927908
   Pradel Michael, 2014, Proceedings of the 2014 International Symposium on Software Testing and Analysis, P13, DOI DOI 10.1145/2610384.2610393
   Prokopec A, 2019, PROCEEDINGS OF THE 40TH ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '19), P31, DOI 10.1145/3314221.3314637
   Reif M, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P251, DOI 10.1145/3293882.3330555
   Reif M, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P474, DOI 10.1145/2950290.2950312
   Ren SQ, 2010, J APPL STAT, V37, P1487, DOI 10.1080/02664760903046102
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Rothermel G., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P179, DOI 10.1109/ICSM.1999.792604
   Alcocer JPS, 2016, PROCEEDINGS OF THE 2016 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE'16), P37, DOI 10.1145/2851553.2851571
   Sawant AA, 2017, EMPIR SOFTW ENG, V22, P1348, DOI 10.1007/s10664-016-9444-6
   Sewe A, 2011, OOPSLA 11: PROCEEDINGS OF THE 2011 ACM INTERNATIONAL CONFERENCE ON OBJECT ORIENTED PROGRAMMING SYSTEMS LANGUAGES AND APPLICATIONS, P657
   SHIVERS O, 1988, SIGPLAN NOTICES, V23, P164, DOI 10.1145/960116.54007
   Siegmund N, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P284, DOI 10.1145/2786805.2786845
   Singh Y., 2010, ACM SIGSOFT Software Engineering Notes, V35, P1, DOI [DOI 10.1145/1668862.1668869, 10.1145/1811226.1811238]
   Standard Performance Evaluation Corporation (SPEC), 2008, SPECJVM2008
   Stefan P., 2017, P 8 ACM SPEC INT C P, P401, DOI [DOI 10.1145/3030207.3030226, 10. 1145/3030207.3030226]
   Stine RA, 2001, SOCIOL METHOD RES, V30, P124, DOI 10.1177/0049124101030001011
   Stol KJ, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3241743
   Tantithamthavorn C, 2019, IEEE T SOFTWARE ENG, V45, P683, DOI 10.1109/TSE.2018.2794977
   Tonella P, 2006, PROC IEEE INT CONF S, P123
   Walcott K.R., 2006, P INT S SOFTW TEST A, P1, DOI DOI 10.1145/1146238.1146240
   Wang W, 2018, IEEE INT CONF SOFTW, P81, DOI 10.1109/ICST.2018.00018
   Weyuker EJ, 2000, IEEE T SOFTWARE ENG, V26, P1147, DOI 10.1109/32.888628
   Woodside M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P171, DOI 10.1109/FOSE.2007.32
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   You D., 2011, P 2011 ACM S APPL CO, P1451
   Yu TT, 2018, EMPIR SOFTW ENG, V23, P3034, DOI 10.1007/s10664-017-9578-1
   Zhang LM, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P192, DOI 10.1109/ICSE.2013.6606565
   Zhang LM, 2009, PROC IEEE INT CONF S, P19, DOI 10.1109/ICSM.2009.5306350
   Zhang L, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P213
NR 88
TC 4
Z9 5
U1 0
U2 14
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2021
VL 26
IS 6
AR 133
DI 10.1007/s10664-021-10037-x
PG 48
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UZ7FQ
UT WOS:000702368100001
PM 34776757
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Moraes, JP
   Polato, I
   Wiese, I
   Saraiva, F
   Pinto, G
AF Moraes, Joao Pedro
   Polato, Ivanilton
   Wiese, Igor
   Saraiva, Filipe
   Pinto, Gustavo
TI From one to hundreds: multi-licensing in the JavaScript ecosystem
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Open source licenses; Multi-licensing; JavaScript projects
AB Open source licenses create a legal framework that plays a crucial role in the widespread adoption of open source projects. Without a license, any source code available on the internet could not be openly (re)distributed. Although recent studies provide evidence that most popular open source projects have a license, developers might lack confidence or expertise when they need to combine software licenses, leading to a mistaken project license unification. This license usage is challenged by the high degree of reuse that occurs in the heart of modern software development practices, in which third-party libraries and frameworks are easily and quickly integrated into a software codebase. This scenario creates what we call "multi-licensed" projects, which happens when one project has components that are licensed under more than one license. Although these components exist at the file-level, they naturally impact licensing decisions at the project-level. In this paper, we conducted a mix-method study to shed some light on these questions. We started by parsing 1,426,263 (source code and non-source code) files available on 1,552 JavaScript projects, looking for license information. Among these projects, we observed that 947 projects (61%) employ more than one license. On average, there are 4.7 licenses per studied project (max: 256). Among the reasons for multi-licensing is to incorporate the source code of third-party libraries into the project's codebase. When doing so, we observed that 373 of the multi-licensed projects introduced at least one license incompatibility issue. We also surveyed with 83 maintainers of these projects aimed to cross-validate our findings. We observed that 63% of the surveyed maintainers are not aware of the multi-licensing implications. For those that are aware, they adopt multiple licenses mostly to conform with third-party libraries' licenses.
C1 [Moraes, Joao Pedro] Fed Univ Para UFPA, Belem, Para, Brazil.
   [Polato, Ivanilton; Wiese, Igor] Fed Technol Univ Parana UTFPR, Dept Comp, Apucarana, Brazil.
   [Saraiva, Filipe] Fed Univ Para, Fac Comp, Belem, Para, Brazil.
   [Saraiva, Filipe] KDE EV, Berlin, Germany.
   [Pinto, Gustavo] Fed Univ Para UFPA, Comp Sci, Belem, Para, Brazil.
C3 Universidade Federal do Para; Universidade Tecnologica Federal do
   Parana; Universidade Federal do Para; Universidade Federal do Para
RP Pinto, G (corresponding author), Fed Univ Para UFPA, Comp Sci, Belem, Para, Brazil.
EM joaopedromoraes94@gmail.com; ipolato@utfpr.edu.br; igor@utfpr.edu.br;
   saraiva@ufpa.br; gpinto@ufpa.br
OI Polato, Ivanilton/0000-0003-1762-7742; Pinto,
   Gustavo/0000-0001-7598-2799
FU CNPq [309032/2019-9]; FAPESPA; UFPA
FX We thank the survey participants who collaborated with our research and
   the reviewers for their helpful comments. This work is partially
   supported by CNPq (#309032/2019-9), FAPESPA, and UFPA.
CR Abdalkareem R, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P385, DOI 10.1145/3106237.3106267
   Almeida DA, 2017, INT C PROGRAM COMPRE, P1, DOI 10.1109/ICPC.2017.7
   [Anonymous], 2007, Basics of qualitative research: techniques and procedures for developing grounded theory
   Borges H, 2016, PROC IEEE INT CONF S, P334, DOI 10.1109/ICSME.2016.31
   Chebbi A, 2019, Choosing the best programming language for mobile app development
   Comino S, 2011, INF ECON POLICY, V23, P234, DOI 10.1016/j.infoecopol.2011.07.001
   Di Penta Massimiliano, 2010, P 32 ACMIEEE INT C S, P145, DOI [10.1145/1806799.1806824, DOI 10.1145/1806799.1806824]
   Dorner M, 2019, THESIS FRIEDRICH ALE
   Duan R, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2169, DOI 10.1145/3133956.3134048
   Elliott E., 2019, How popular is Javascript in 2019?
   Evenrud A, 2019, OSJS IS OPEN SOURCE
   Ferreira Campos Uriel, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P195, DOI 10.1109/MSR.2019.00039
   Fortuna P, 2016, JAVASCRIPT LINGUAGEM
   German DM, 2009, PROC INT CONF SOFTW, P188, DOI 10.1109/ICSE.2009.5070520
   Gobeille R, 2008, P 2008 INT WORK C MI, P47, DOI DOI 10.1145/1370750.1370763
   Harvey D, 2019, DATABASE SYNCS
   Kapitsaki GM, 2017, J SYST SOFTWARE, V131, P386, DOI 10.1016/j.jss.2016.06.064
   Kapitsaki GM, 2015, J SYST SOFTWARE, V102, P72, DOI 10.1016/j.jss.2014.12.050
   Kechagia M., 2010, Proceedings of the 14th Panhellenic Conference on Informatics (PCI 2010), P27, DOI 10.1109/PCI.2010.28
   Kitchenham BA, 2008, Guide to advanced empirical software engineering, P63, DOI [DOI 10.1007/978-1-84800-044-5_3, 10.1007/ 978-1-84800-044-5_3]
   Koski HA, 2005, REV EC RES COPYRIGHT, V2, P111
   Laurent A.M. S., 2004, UNDERSTANDING OPEN S
   Maryka T, 2015, P IFIP ADV INFORM CO, V451, P146, DOI [10.1007/978-3-319-17837-0_14, DOI 10.1007/978-3-319-17837-0_14]
   McIntosh S, 2012, EMPIR SOFTW ENG, V17, P578, DOI 10.1007/s10664-011-9169-5
   Meeker Heather., 2017, Open source for business: a practical guide to open source software licensing
   Meloca R, 2018, IEEE WORK CONF MIN S, P270, DOI 10.1145/3196398.3196427
   Oliveira Wellington, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P160, DOI 10.1109/MSR.2019.00033
   Oliveira W, 2017, IEEE WORK CONF MIN S, P42, DOI 10.1109/MSR.2017.66
   Paschalides D, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P1047, DOI 10.1145/2950290.2983939
   Storey MA, 2017, IEEE T SOFTWARE ENG, V43, P185, DOI 10.1109/TSE.2016.2584053
   Valimaki M., 2003, Systemes d'Information et Management, V8, P63
   Vendome C, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P268, DOI 10.1145/3180155.3180221
   Vendome C, 2017, PROC INT CONF SOFTW, P118, DOI 10.1109/ICSE.2017.19
   Vendome C, 2017, EMPIR SOFTW ENG, V22, P1537, DOI 10.1007/s10664-016-9438-4
   Vendome C, 2015, PROC IEEE INT CONF S, P31, DOI 10.1109/ICSM.2015.7332449
   Vendome C, 2015, INT C PROGRAM COMPRE, P218, DOI 10.1109/ICPC.2015.32
   Wu YH, 2017, EMPIR SOFTW ENG, V22, P1194, DOI 10.1007/s10664-016-9487-8
   Wu YH, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P324, DOI 10.1109/MSR.2015.37
   Zhang TY, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P886, DOI 10.1145/3180155.3180260
   Zicari RV, 2007, FRAMEWORK ANAL BUSIN
NR 40
TC 5
Z9 7
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR 20
PY 2021
VL 26
IS 3
AR 39
DI 10.1007/s10664-020-09936-2
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RA0BV
UT WOS:000631084500002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Díaz, J
   López-Fernández, D
   Pérez, J
   González-Prieto, A
AF Diaz, Jessica
   Lopez-Fernandez, Daniel
   Perez, Jorge
   Gonzalez-Prieto, Angel
TI Why are many businesses instilling a DevOps culture into their
   organization?
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE DevOps; Empirical software engineering; Exploratory case study
AB ContextDevOps can be defined as a cultural movement to improve and accelerate the delivery of business value by making the collaboration between development and operations effective. Although this movement is relatively recent, there exist an intensive research around DevOps. However, the real reasons why companies move to DevOps and the results they expect to obtain have been paid little attention in real contexts.ObjectiveThis paper aims to help practitioners and researchers to better understand the context and the problems that many companies face day to day in their organizations when they try to accelerate software delivery and the main drivers that move these companies to adopting DevOps.MethodWe conducted an exploratory study by leveraging in depth, semi-structured interviews to relevant stakeholders of 30 multinational software-intensive companies, together with industrial workshops and observations at organizations' facilities that supported triangulation. Additionally, we conducted an inter-coder agreement analysis, which is not usually addressed in qualitative studies in software engineering, to increase reliability and reduce authors bias of the drawn findings.ResultsThe research explores the problems and expected outcomes that moved companies to adopt DevOps and reveals a set of patterns and anti-patterns about the reasons why companies are instilling a DevOps culture.ConclusionsThis study aims to strengthen evidence and support practitioners in making better informed about which problems trigger a DevOps transition and most common expected results.
C1 [Diaz, Jessica; Lopez-Fernandez, Daniel; Perez, Jorge; Gonzalez-Prieto, Angel] Univ Politecn Madrid, Madrid 28031, Spain.
C3 Universidad Politecnica de Madrid
RP Díaz, J (corresponding author), Univ Politecn Madrid, Madrid 28031, Spain.
EM yesica.diaz@upm.es; daniel.lopez@upm.es; jorgeenrique.perez@upm.es;
   angel.gonzalez.prieto@upm.es
RI González-Prieto, Ángel/ABD-2755-2021; Diaz, Jessica/J-9751-2012;
   Pérez-Martínez, Jorge Enrique/AAS-5194-2020
OI González-Prieto, Ángel/0000-0003-2326-6752; Diaz,
   Jessica/0000-0001-6738-9370; Pérez-Martínez, Jorge
   Enrique/0000-0003-3349-6017; Lopez Fernandez, Daniel/0000-0003-1265-010X
CR Allspaw John, 2009, VEL WEB PERF OP C
   ATLAS.ti, 2019, SCI SOFTW DEV GMBH I
   Bonif├icio, 2019, J SYST SOFTW, V110384, P157
   Bosch J, 2012, LECT NOTES BUS INF P, V114, P27
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Corbin J., 2015, BASICS QUALITATIVE R
   Creswell J. W., 2013, RES DESIGN QUALITATI
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Debois P, 2008, AGILE 2008, PROCEEDINGS, P202, DOI 10.1109/Agile.2008.42
   Díaz J, 2019, LECT NOTES COMPUT SC, V11915, P323, DOI 10.1007/978-3-030-35333-9_23
   Díaz J, 2018, 19TH INTERNATIONAL CONFERENCE ON AGILE SOFTWARE DEVELOPMENT (XP '18), DOI 10.1145/3234152.3234199
   Dingsoyr T, 2012, J SYST SOFTWARE, V85, P1213, DOI 10.1016/j.jss.2012.02.033
   Dyck, 2015, 2015 IEEE ACM 3 INT
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Ebert C, 2016, IEEE SOFTWARE, V33, P94, DOI 10.1109/MS.2016.68
   Erich FMA, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1885
   Erich F, 2019, LECT NOTES COMPUT SC, V11350, P89, DOI 10.1007/978-3-030-06019-0_7
   Erich F, 2014, LECT NOTES COMPUT SC, V8892, P277, DOI 10.1007/978-3-319-13835-0_21
   Feitelson DG, 2013, IEEE INTERNET COMPUT, V17, P8, DOI 10.1109/MIC.2013.25
   Fitzgerald B, 2017, J SYST SOFTWARE, V123, P176, DOI 10.1016/j.jss.2015.06.063
   FLEISS JL, 1971, PSYCHOL BULL, V76, P378, DOI 10.1037/h0031619
   Floersch J., 2010, QUALITATIVE SOCIAL W, V9, P407, DOI DOI 10.1177/1473325010362330
   Fowler M., 2001, Software Development, V9, P28
   Fowler M., 2013, Continuous Delivery
   Friese Susanne., 2019, QUALITATIVE DATA ANA
   Gamma Erich, 1995, DESIGN PATTERNS ELEM
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   HAYES A, 2007, PSYCHOL BULL, V1, P77, DOI DOI 10.1080/19312450709336664
   IDEN J, 2011, COMMUN METHODS MEAS, V53, P394, DOI DOI 10.1016/j.infsof.2010.12.002
   Jabbari R, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1957
   Jabbari R, 2016, PROCEEDINGS OF THE XP2016 SCIENTIFIC WORKSHOPS, DOI 10.1145/2962695.2962707
   Kim Gene, 2016, The DevOps Handbook: How to Create WorldClass Agility, Reliability, and Security in Technology Organizations
   KRIPPENDORFF K, 2004, INFORM SOFTWARE TECH, V30, P411
   Krippendorff K., 2018, CONTENT ANAL INTRO I
   KRIPPENDORFF K, 2016, HUM COMMUN RES, V50, P2347, DOI DOI 10.1007/s11135-015-0266-1
   Krippendorff Klaus, 2011, COMPUTING KRIPPENDOR, DOI DOI 10.1002/9781405186407.WBIECR029
   Kuusinen K, 2018, EUROMICRO CONF PROC, P60, DOI 10.1109/SEAA.2018.00019
   Leite L., 2020, IEEE ACM 42 INT C SO, P505, DOI 10.1145/3387940.3391455
   LEITE L, 2019, EUROMICRO CONF PROC, V52, P35, DOI DOI 10.1145/3359981
   Leppanen Marko, 2015, IEEE Software, V32, P64, DOI 10.1109/MS.2015.50
   LETHBRIDGE T, 2005, ACM COMPUT SURV, V10, P311, DOI DOI 10.1007/s10664-005-1290-x
   Lwakatare L E., 2016, ICSEA 2016: The Eleventh International Conference on Software Engineering Advances, IARIA, 2016, P91
   Lwakatare LE, 2016, LECT NOTES COMPUT SC, V10027, P399, DOI 10.1007/978-3-319-49094-6_27
   MAKINEN S, 2016, COMPUT LINGUIST, V80, P175, DOI DOI 10.1016/j.infsof.2016.09.001
   Mathet Y, 2015, COMPUT LINGUIST, V41, P437, DOI 10.1162/COLI_a_00227
   Miles M. B., 1984, Qualitative data analysis: An expanded sourcebook
   de França BBN, 2016, THIRTIETH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2016), P53, DOI 10.1145/2973839.2973845
   Parnin C, 2017, IEEE SOFTWARE, V34, P86, DOI 10.1109/MS.2017.86
   Poppendieck M, 2006, IMPLEMENTING LEAN SO
   Rafi Saima, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P457, DOI 10.1145/3383219.3383285
   Research and Assessment D, 2018, ACC STAT DEV 2018 ST
   Riungu-Kalliosaari L, 2016, LECT NOTES COMPUT SC, V10027, P590, DOI 10.1007/978-3-319-49094-6_44
   Rodríguez P, 2019, ADV COMPUT, V113, P135, DOI 10.1016/bs.adcom.2018.03.014
   RUNESON P, 2008, IEEE SOFTWARE, V14, P131, DOI DOI 10.1007/s10664-008-9102-8
   Salameh A, 2019, LECT NOTES BUS INF P, V364, P20, DOI 10.1007/978-3-030-30126-2_3
   Sanchez-Gordon M., 2018, SOFTWARE PROCESS IMP, V918, P3, DOI [DOI 10.1007/978-3-030-00623-5_1, https://doi.org/10.1007/978-3-030-00623-5_1]
   Scott WA, 1955, PUBLIC OPIN QUART, V19, P321, DOI 10.1086/266577
   Senapathi M., 2018, ser. EASE'18, P57
   Smeds J, 2015, LECT NOTES BUS INF P, V212, P166, DOI 10.1007/978-3-319-18612-2_14
   Spearman C, 1904, AM J PSYCHOL, V15, P72, DOI 10.2307/1412159
   STAMELOS I, 2010, AM J PSYCHOL, V83, P52, DOI DOI 10.1016/j.jss.2009.09.016
   Thomas J, 2008, BMC MED RES METHODOL, V8, DOI 10.1186/1471-2288-8-45
   Webteam P, 2018, STATE DEVOPS REPORT
   Yin R. K., 2018, Case Study Research and Applications: Design and Methods, DOI DOI 10.1016/J.TECHFORE.2018.10.013
NR 64
TC 15
Z9 17
U1 2
U2 16
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR 2
PY 2021
VL 26
IS 2
AR 25
DI 10.1007/s10664-020-09919-3
PG 50
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA QR7CF
UT WOS:000625372100002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Mahdavi-Hezaveh, R
   Dremann, J
   Williams, L
AF Mahdavi-Hezaveh, Rezvan
   Dremann, Jacob
   Williams, Laurie
TI Software development with feature toggles: practices used by
   practitioners
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Continuous integration; Continuous delivery; Feature toggle; Practice
ID DEPLOYMENT
AB Background Using feature toggles is a technique that allows developers to either turn a feature on or off with a variable in a conditional statement. Feature toggles are increasingly used by software companies to facilitate continuous integration and continuous delivery. However, using feature toggles inappropriately may cause problems which can have a severe impact, such as code complexity, dead code, and system failure. For example, the erroneous repurposing of an old feature toggle caused Knight Capital Group, an American global financial services firm, to go bankrupt due to the implications of the resultant incorrect system behavior. Aim The goal of this research project is to aid software practitioners in the use of practices to support software development with feature toggles through an empirical study of feature toggle practice usage by practitioners. Method We conducted a qualitative analysis of 99 artifacts from the grey literature and 10 peer-reviewed papers about feature toggles. We conducted a survey of practitioners from 38 companies. Results We identified 17 practices in 4 categories: Management practices, Initialization practices, Implementation practices, and Clean-up practices. We observed that all of the survey respondents use a dedicated tool to create and manage feature toggles in their code. Documenting feature toggle's metadata, setting up the default value for feature toggles, and logging the changes made on feature toggles are also frequently-observed practices. Conclusions The feature toggle development practices discovered and enumerated in this work can help practitioners more effectively use feature toggles. This work can enable future mining of code repositories to automatically identify feature toggle practices.
C1 [Mahdavi-Hezaveh, Rezvan; Dremann, Jacob; Williams, Laurie] North Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
C3 North Carolina State University
RP Mahdavi-Hezaveh, R (corresponding author), North Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
EM rmahdav@ncsu.edu; jtdreman@ncsu.edu; laurie_williams@ncsu.edu
OI Mahdavi-Hezaveh, Rezvan/0000-0002-9761-4361
CR Bird J, 2014, FEATURE TOGGLES ARE
   Dale N.B., 2003, INTRO JAVA SOFTWARE
   Day B, 2020, GET GOOD DEVOPS FEAT
   featureflags.io, 2020, FEAT FLAGS TOGGL CON
   Feitelson DG, 2013, IEEE INTERNET COMPUT, V17, P8, DOI 10.1109/MIC.2013.25
   Fowler M, 2010, Feature toggle
   Fowler M., 2013, ContinuousDelivery
   Garousi V, 2019, INFORM SOFTWARE TECH, V106, P101, DOI 10.1016/j.infsof.2018.09.006
   Garousi V, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2916008
   Google, 2019, CHROM FLAGS
   Hammarberg M., 2014, KANBAN ACTION
   Harmes R., 2009, FLIPPING OUT
   Hodges B, 2017, PROGRESSIVE EXPERIME
   Hodgson P, 2018, LEAN PRODUCT DEV MAN
   Hodgson P, 2017, Feature toggles (aka Feature Flags)
   Humble Jez, 2010, Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation
   Instagram Engineering, 2015, FLE FEAT CONTR INSTR
   Johnny Saldana., 2013, The coding manual for qualitative researchers + qualitative data analysis: A methods sourcebook
   Kieser G, 2017, REMOVING RISK PRODUC
   Knight Capital Group, 2014, KNIGHTMARE DEVOPS CA
   Kohavi R, 2009, DATA MIN KNOWL DISC, V18, P140, DOI 10.1007/s10618-008-0114-1
   Launchdarkly, 2018, BEST PRACTICES
   Leena SN, 2017, PIP C 2017
   Lefebvre C, 2008, Cochrane handbook for systematic reviews of interventions: Cochrane book series, P95, DOI [DOI 10.1002/9780470712184.CH6, 10.1002/9780470712184.ch6]
   Likert R., 1932, Arch. Psychol., V22, P44, DOI DOI 10.4135/9781412961288.N454
   Mclaughlin T, 2017, INTRO STORMCROW
   Meinicke J, 2020, P 42 INT C SOFTW ENG
   Meyer M, 2014, USING FEATURE FLAGS
   Moore G.A., 2009, CROSSING CHASM MARKE
   Nadel B, 2018, LAUNCHDARKLY LUNCH A
   Nadel B, 2018, USING LAUNCHDARKLY D
   Neely S, 2013, 2013 AGILE CONFERENCE (AGILE), P121, DOI 10.1109/AGILE.2013.17
   Osthus I., 2017, CONTINUOUS DEPLOYMEN
   Parnin C, 2017, IEEE SOFTWARE, V34, P86, DOI 10.1109/MS.2017.86
   Piessens D, 2015, ITS MORE FEATURE TOG
   Rahman M.T., 2018, EMPIR SOFTW ENG, V22, P1
   Rahman MT, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P201, DOI [10.1145/2901739.2901745, 10.1109/MSR.2016.029]
   Rainer A, 2019, ARXIV191112038
   Roberts J, 2019, FEATURETOGGLE IN NET
   Rodriguez P, 2017, J SYST SOFTWARE, V123, P263, DOI 10.1016/j.jss.2015.12.015
   Rollout, 2018, YOUR FEATURE FLAG MA
   Rusovsky E, 2017, FEATURE FLAG MANAGEM
   Sayagh M, 2020, IEEE T SOFTWARE ENG, V46, P646, DOI 10.1109/TSE.2018.2867847
   Schermann G, 2018, INFORM SOFTWARE TECH, V99, P41, DOI 10.1016/j.infsof.2018.02.010
   Schermann G, 2018, IEEE SOFTWARE, V35, P26, DOI 10.1109/MS.2018.111094748
   Schneid K., 2017, CSE@ SE, P28
   Sowa RLE, 2010, FEATURE BITS ENABLIN
   Split, 2019, AUD LOGS
   Stephens R., 2015, BEGINNING SOFTWARE E
   Tang CQ, 2015, SOSP'15: PROCEEDINGS OF THE TWENTY-FIFTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P328, DOI 10.1145/2815400.2815401
   Tejaswini UL, 2019, THERE IS NO DEVOPS F
   Tiwari A, 2013, DECOUPLING DEPLOYMEN
   Tsvetkov A, 2017, FEATURE TOGGLES NET
   Ur Rahman AA, 2015, 2015 AGILE CONFERENCE, P1, DOI 10.1109/Agile.2015.12
   Wohlin C, 2014, P 18 INT C EVALUATIO, DOI DOI 10.1145/2601248.2601268
NR 55
TC 14
Z9 15
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN 8
PY 2021
VL 26
IS 1
AR 1
DI 10.1007/s10664-020-09901-z
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA PV7UQ
UT WOS:000610189100001
DA 2024-07-18
ER

PT J
AU Cotroneo, D
   Iannillo, AK
   Natella, R
   Pietrantuono, R
AF Cotroneo, Domenico
   Iannillo, Antonio Ken
   Natella, Roberto
   Pietrantuono, Roberto
TI A comprehensive study on software aging across android versions and
   vendors
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Android; Operating systems; Software aging; Stress testing
ID MEMORY LEAK DETECTION; REJUVENATION; FRAMEWORK
AB This paper analyzes the phenomenon of software aging - namely, the gradual performance degradation and resource exhaustion in the long run - in the Android OS. The study intends to highlight if, and to what extent, devices from different vendors, under various usage conditions and configurations, are affected by software aging and which parts of the system are the main contributors. The results demonstrate that software aging systematically determines a gradual loss of responsiveness perceived by the user, and an unjustified depletion of physical memory. The analysis reveals differences in the aging trends due to the workload factors and to the type of running applications, as well as differences due to vendors' customization. Moreover, we analyze several system-level metrics to trace back the software aging effects to their main causes. We show that bloated Java containers are a significant contributor to software aging, and that it is feasible to mitigate aging through a micro-rejuvenation solution at the container level.
C1 [Cotroneo, Domenico; Iannillo, Antonio Ken; Natella, Roberto; Pietrantuono, Roberto] Univ Luxembourg, SnT, 29 Ave JF Kennedy, L-1855 Luxembourg, Luxembourg.
C3 University of Luxembourg
RP Iannillo, AK (corresponding author), Univ Luxembourg, SnT, 29 Ave JF Kennedy, L-1855 Luxembourg, Luxembourg.
EM cotroneo@unina.it; antonioken.iannillo@uni.lu; roberto.natella@unina.it;
   roberto.pietrantuono@unina.it
RI Natella, Roberto/AAT-7087-2020
OI Natella, Roberto/0000-0003-1084-4824; Pietrantuono,
   Roberto/0000-0003-2449-1724; Iannillo, Antonio Ken/0000-0001-9358-7100
CR Alonso J, 2010, I C DEPEND SYS NETWO, P507, DOI 10.1109/DSN.2010.5544275
   Amalfitano D, 2012, IEEE INT CONF AUTOM, P258, DOI 10.1145/2351676.2351717
   Android, 2018, DEV KEEP YOUR APP RE
   Android, 2019, UI APPL EX MONK
   Android, 2018, APP START TIM
   Android, 2019, DISTR DASHB ANDR DEV
   Android, 2016, DEV INV YOUR RAM US
   Android Central, 2015, HTC ON SER SPECS
   Andrzejak A, 2017, IEEE INT SYMP SOFTW, P252, DOI 10.1109/ISSREW.2017.72
   [Anonymous], 1990, Applied Nonparametric Statistics
   ANSCOMBE FJ, 1948, J ROY STAT SOC A, V111, P181, DOI 10.2307/2984159
   Araujo J, 2014, ACM J EMERG TECH COM, V10, DOI 10.1145/2539122
   Araujo J, 2013, IEEE SYS MAN CYBERN, P1229, DOI 10.1109/SMC.2013.213
   Bovenzi A, 2011, WORKLOAD CHARACTERIZ
   Carrozza G, 2010, J SYST SOFTWARE, V83, P1556, DOI 10.1016/j.jss.2010.05.027
   Cotroneo D, 2016, P 27 IEEE INT S SOFT
   Cotroneo D, 2014, ACM J EMERG TECH COM, V10, DOI 10.1145/2539117
   Cotroneo D, 2013, PROC INT SYMP SOFTW, P178, DOI 10.1109/ISSRE.2013.6698917
   Cotroneo D, 2013, SOFTW TEST VERIF REL, V23, P199, DOI 10.1002/stvr.467
   Dohi T, 2000, 2000 PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P77, DOI 10.1109/PRDC.2000.897287
   DURBIN J, 1951, BIOMETRIKA, V38, P159, DOI 10.1093/biomet/38.1-2.159
   Fang L, 2016, 29 EUR C OBJ OR PROG
   Gallo Roberto, 2015, ASS COMPUTING MACHIN, DOI 10.1145/2766498.2766519
   GARG S, 1998, P 9 INT S SOFTW REL
   Ghanavati M, 2020, EMPIR SOFTW ENG, V25, P678, DOI 10.1007/s10664-019-09731-8
   Grottke M, 2007, COMPUTER, V40, P107, DOI 10.1109/MC.2007.55
   Grottke M, 2006, IEEE T RELIAB, V55, P411, DOI 10.1109/TR.2006.879609
   Grottke M, 2016, IEEE T RELIAB, V65, P70, DOI 10.1109/TR.2015.2452933
   Grottke M, 2010, I C DEPEND SYS NETWO, P447, DOI 10.1109/DSN.2010.5544284
   GSMArena, 2016, COUNT HUAW REACH ALL
   Hamed KH, 1998, J HYDROL, V204, P182, DOI 10.1016/S0022-1694(97)00125-X
   HUANG YN, 1995, DIG PAP INT SYMP FAU, P381, DOI 10.1109/FTCS.1995.466961
   Huo SY, 2018, PROCEEDINGS OF 2018 TENTH INTERNATIONAL CONFERENCE ON ADVANCED COMPUTATIONAL INTELLIGENCE (ICACI), P741, DOI 10.1109/ICACI.2018.8377553
   Iannillo Antonio Ken, 2017, P 28 IEEE INT S SOFT
   Jump M, 2007, ACM SIGPLAN NOTICES, V42, P31, DOI 10.1145/1190215.1190224
   Kang Y, 2016, 151207950 ARXIV
   Li L, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P153, DOI 10.1145/3213846.3213857
   Love Robert, 2010, Linux Kernel Development
   Machida F, 2016, 2013 IEEE INT S SOFT
   Machida F, 2017, IEEE T RELIAB, V66, P123, DOI 10.1109/TR.2016.2615880
   Machida F, 2012, PROC INT SYMP SOFTW, P287, DOI 10.1109/ISSREW.2012.97
   Machiry A., 2013, P 2013 9 JOINT M FDN, P224
   Mao K., 2016, P 25 INT S SOFTW TES, P94
   Montgomery D., 2013, DESIGN ANAL EXPT, V8
   Nagappan M, 2013, 2013 9 JOINT M EUR S, P466, DOI [DOI 10.1145/2491411.2491415, 10.1145/2491411.2491415]
   Nethercote N, 2007, ACM SIGPLAN NOTICES, V42, P89, DOI 10.1145/1273442.1250746
   Onoz B., 2003, Turkish Journal of Engineering and Environmental Sciences, V27, P247
   Pfening A, 1996, PERFORM EVALUATION, V27-8, P491, DOI 10.1016/S0166-5316(96)90042-5
   Pirie W., 1988, ENCY STAT SCI
   Qiao Y, 2016, SOFTW REL ENG WORKSH
   Qiao Y, 2019, IEEE T RELIAB, V68, P633, DOI 10.1109/TR.2018.2881306
   Qiao Y, 2018, IEEE INT SYMP SOFTW, P271, DOI [10.1109/ISSREW.2018.00018, 10.1109/1SSREW.2018.00018]
   Qin FY, 2017, IEEE PAC RIM INT SYM, P135, DOI 10.1109/PRDC.2017.27
   Scalabrino Simone, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P288, DOI 10.1109/MSR.2019.00055
   SEN PK, 1968, J AM STAT ASSOC, V63, P1379
   Serebryany Konstantin, 2012, USENIX, P309
   Silva L, 2006, NCA 2006: FIFTH IEEE INTERNATIONAL SYMPOSIUM ON NETWORK COMPUTING AND APPLICATIONS, PROCEEDINGS, P56
   Sor V, 2013, PROC IEEE INT CONF S, P544, DOI 10.1109/ICSM.2013.92
   Tanenbaum A., 2014, MODERN OPERATING SYS
   Theil H., 1950, Henri Theil's Contributions to Economics and Econometrics, Adv. Stud. Theor. Appl. Econom., V53, P386
   Vaidyanathan K, 2005, IEEE T DEPEND SECURE, V2, P124, DOI 10.1109/TDSC.2005.15
   Wei L., 2018, IEEE T SOFTWARE ENG
   Wei LL, 2016, IEEE INT CONF AUTOM, P226, DOI 10.1145/2970276.2970312
   Weng C, 2016, SOFTW REL ENG WORKSH
   Weng CS, 2017, IEEE INT SYMP SOFTW, P273, DOI 10.1109/ISSREW.2017.50
   Wheeler D. A, 2016, SLOCCOUNT
   Wu HM, 2015, 2015 IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING WORKSHOPS (ISSREW), P125, DOI 10.1109/ISSREW.2015.7392057
   Wu L., 2013, PROC 20 SIGSAC C COM, P623, DOI DOI 10.1145/2508859.2516728
   Xiang JW, 2018, IEEE INT SYMP SOFTW, P293, DOI [10.1109/1SSREW.2018.00021, 10.1109/ISSREW.2018.00021]
   Xu GQ, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2491509.2491511
   Xu GQ, 2011, ACM SIGPLAN NOTICES, V46, P270, DOI 10.1145/1993316.1993530
   Xu GQ, 2010, ACM SIGPLAN NOTICES, V45, P160, DOI 10.1145/1809028.1806616
   Xu GQ, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P151, DOI 10.1145/1368088.1368110
   Yang Y, 2015, AVIAN RES, V6, DOI 10.1186/s40657-015-0013-2
   Zheng PF, 2014, IEEE T RELIAB, V63, P927, DOI 10.1109/TR.2014.2338255
NR 75
TC 12
Z9 12
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2020
VL 25
IS 5
BP 3357
EP 3395
DI 10.1007/s10664-020-09838-3
EA JUN 2020
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NJ1FD
UT WOS:000544134000001
DA 2024-07-18
ER

PT J
AU Amasaki, S
AF Amasaki, Sousuke
TI Cross-version defect prediction: use historical data, cross-project
   data, or both?
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Cross-version defect prediction; Cross-project defect prediction;
   Comparative study
ID SOFTWARE; QUALITY; CLASSIFICATION; SELECTION; MODELS; CODE
AB Context Although a long-running project has experienced many releases, removing defects from a product is still a challenge. Cross-version defect prediction (CVDP) regards project data of prior releases as a useful source for predicting fault-prone modules based on defect prediction techniques. Recent studies have explored cross-project defect prediction (CPDP) that uses the project data from outside a project for defect prediction. While CPDP techniques and CPDP data can be diverted to CVDP, its effectiveness has not been investigated. Objective To investigate whether CPDP approaches and CPDP data are useful for CVDP. The investigation also compared the usage of prior release data. Method We chose a style of replication of a previous comparative study on CPDP approaches. Results Some CPDP approaches could improve the performance of CVDP. The use of the latest prior release was the best choice. If one has no CVDP data, the use of CPDP data for CVDP was found to be effective. Conclusions 1) Some CPDP approaches could improve CVDP, 2), if one can access project data from the latest release, project data from older releases would not bring clear benefit, and 3) even if one has no CVDP data, appropriate CPDP approaches would be able to deliver quality prediction with CPDP data.
C1 [Amasaki, Sousuke] Okayama Prefectural Univ, 111 Kuboki, Soja 7191197, Japan.
C3 Okayama Prefectural University
RP Amasaki, S (corresponding author), Okayama Prefectural Univ, 111 Kuboki, Soja 7191197, Japan.
EM amasaki@cse.oka-pu.ac.jp
FU JSPS KAKENHI [18K11246]; Grants-in-Aid for Scientific Research
   [18K11246] Funding Source: KAKEN
FX This work was partially supported by JSPS KAKENHI under Grant No.
   18K11246.
CR Amasaki S, 2018, PROMISE'18: PROCEEDINGS OF THE 14TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING, P32, DOI 10.1145/3273934.3273938
   Amasaki S, 2015, PROCEEDINGS 41ST EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS SEAA 2015, P96, DOI 10.1109/SEAA.2015.25
   [Anonymous], 2013, P 9 INT C PRED MOD S, DOI DOI 10.1145/2499393.2499395
   [Anonymous], 2012, P ACM SIGSOFT 20 INT
   ARISHOLM E, 2006, P ISESE 06, P1
   Bennin KE, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2016), P214, DOI 10.1109/QRS.2016.33
   Bin Y, 2017, INT SYMP EMP SOFTWAR, P354, DOI 10.1109/ESEM.2017.49
   Boucher A, 2018, INFORM SOFTWARE TECH, V96, P38, DOI 10.1016/j.infsof.2017.11.005
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Briand LC, 2002, IEEE T SOFTWARE ENG, V28, P706, DOI 10.1109/TSE.2002.1019484
   Broomhead D. S., 1988, Complex Systems, V2, P321
   Canfora G, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P252, DOI 10.1109/ICST.2013.38
   Chen L, 2015, INFORM SOFTWARE TECH, V62, P67, DOI 10.1016/j.infsof.2015.01.014
   Cheng M, 2016, INT J SOFTW ENG KNOW, V26, P1571, DOI 10.1142/S0218194016710017
   Cheung S.-C., 2011, P 19 ACM SIGSOFT S 1, P15
   CORTES C, 1995, MACH LEARN, V20, P273, DOI 10.1007/BF00994018
   COX DR, 1958, BIOMETRIKA, V45, P562, DOI 10.2307/2333203
   Cruz AEC, 2009, INT SYMP EMP SOFTWAR, P461
   D'Ambros Marco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P31, DOI 10.1109/MSR.2010.5463279
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   Domingos P, 1997, MACH LEARN, V29, P103, DOI 10.1023/A:1007413511361
   Harman M, 2014, LECT NOTES COMPUT SC, V8636, P240
   HE P, 2014, 14114228 CORR
   He P, 2015, INFORM SOFTWARE TECH, V59, P170, DOI 10.1016/j.infsof.2014.11.006
   He ZM, 2012, AUTOMAT SOFTW ENG, V19, P167, DOI 10.1007/s10515-011-0090-3
   Herbold S, 2019, IEEE T SOFTWARE ENG, V45, P632, DOI 10.1109/TSE.2018.2790413
   Herbold S, 2015, 2015 30th IEEE/ACM International Conference on Automated Software Engineering Workshop (ASEW), P90, DOI 10.1109/ASEW.2015.8
   Herzig K, 2013, PROC INT SYMP SOFTW, P118, DOI 10.1109/ISSRE.2013.6698911
   Holschuh T, 2009, PROC INT CONF SOFTW, P172, DOI 10.1109/ICSE-COMPANION.2009.5070975
   Hosseini S, 2018, INFORM SOFTWARE TECH, V95, P296, DOI 10.1016/j.infsof.2017.06.004
   Jing XY, 2017, IEEE T SOFTWARE ENG, V43, P321, DOI 10.1109/TSE.2016.2597849
   Jing XY, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P496, DOI 10.1145/2786805.2786813
   Jureczko M, 2010, P 6 INT C PREDICTIVE, DOI DOI 10.1145/1868328.1868342
   Kawata K, 2015, 3RD INTERNATIONAL CONFERENCE ON APPLIED COMPUTING AND INFORMATION TECHNOLOGY (ACIT 2015) 2ND INTERNATIONAL CONFERENCE ON COMPUTATIONAL SCIENCE AND INTELLIGENCE (CSI 2015), P2, DOI 10.1109/ACIT-CSI.2015.104
   Khoshgoftaar TM, 2009, SOFTWARE QUAL J, V17, P25, DOI 10.1007/s11219-008-9058-3
   Khoshgoftaar TM, 2003, EMPIR SOFTW ENG, V8, P325, DOI 10.1023/A:1025316301168
   Li Z, 2017, IEEE INT SYM BROADB, P111
   Liu Y, 2010, IEEE T SOFTWARE ENG, V36, P852, DOI 10.1109/TSE.2010.51
   Lu HH, 2014, PROC INT SYMP SOFTW, P312, DOI 10.1109/ISSRE.2014.35
   Ma Y, 2012, INFORM SOFTWARE TECH, V54, P248, DOI 10.1016/j.infsof.2011.09.007
   Madeyski L, 2015, SOFTWARE QUAL J, V23, P393, DOI 10.1007/s11219-014-9241-7
   Menzies T., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P343, DOI 10.1109/ASE.2011.6100072
   Monden A, 2013, IEEE T SOFTWARE ENG, V39, P1345, DOI 10.1109/TSE.2013.21
   Nam J, 2018, IEEE T SOFTWARE ENG, V44, P874, DOI 10.1109/TSE.2017.2720603
   Nam J, 2015, IEEE INT CONF AUTOM, P452, DOI 10.1109/ASE.2015.56
   Nam J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P382, DOI 10.1109/ICSE.2013.6606584
   Panichella A, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P164, DOI 10.1109/CSMR-WCRE.2014.6747166
   Peters F, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P801, DOI 10.1109/ICSE.2015.92
   Peters F, 2013, IEEE WORK CONF MIN S, P409, DOI 10.1109/MSR.2013.6624057
   Peters F, 2013, IEEE T SOFTWARE ENG, V39, P1054, DOI 10.1109/TSE.2013.6
   Peters F, 2012, PROC INT CONF SOFTW, P189, DOI 10.1109/ICSE.2012.6227194
   Premraj R, 2011, INT SYMP EMP SOFTWAR, P215, DOI 10.1109/ESEM.2011.30
   Quinlan J.R., 1993, C4 5 PROGRAMS MACHIN
   Rana R, 2014, COMM COM INF SC, V466, P270
   Ryu D, 2016, EMPIR SOFTW ENG, V21, P43, DOI 10.1007/s10664-014-9346-4
   Ryu D, 2015, J COMPUT SCI TECH-CH, V30, P969, DOI 10.1007/s11390-015-1575-5
   Sarro F., 2012, Proceedings of the 27th Annual ACM Symposium on Applied Computing, SAC '12, P1215, DOI DOI 10.1145/2245276.2231967
   Shen Y, 2013, IEEE IMTC P, P1045
   Shepperd M, 2013, IEEE T SOFTWARE ENG, V39, P1208, DOI 10.1109/TSE.2013.11
   Thomas Zimmermann., 2009, P THE 7 JOINT M EURO, P91, DOI DOI 10.1145/1595696.1595713
   Tosun A, 2010, INFORM SOFTWARE TECH, V52, P1242, DOI 10.1016/j.infsof.2010.06.006
   Turhan B, 2013, INFORM SOFTWARE TECH, V55, P1101, DOI 10.1016/j.infsof.2012.10.003
   Turhan B, 2012, EMPIR SOFTW ENG, V17, P62, DOI 10.1007/s10664-011-9182-8
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Uchigaki S., 2012, Proceedings of the 2012 13th ACIS International Conference on Software Engineering, Artificial Intelligence, Networking and Parallel & Distributed Computing (SNPD 2012), P476, DOI 10.1109/SNPD.2012.34
   Watanabe S., 2008, P 4 INT WORKSH PRED, P19
   Xia X, 2016, IEEE T SOFTWARE ENG, V42, P977, DOI 10.1109/TSE.2016.2543218
   Xu ZQ, 2018, PROCEEDINGS OF 2018 IEEE WORLD SYMPOSIUM ON COMMUNICATION ENGINEERING (WSCE), P1, DOI 10.1109/WSCE.2018.8690540
   Xu Z, 2018, PROCEEDINGS OF THE 2018 2ND INTERNATIONAL CONFERENCE ON BIG DATA RESEARCH (ICBDR 2018), P206, DOI 10.1145/3291801.3291821
   Yu Q, 2017, J SYST SOFTWARE, V132, P366, DOI 10.1016/j.jss.2017.06.070
   Yu X, 2018, SOFT COMPUT, V22, P3461, DOI 10.1007/s00500-018-3093-1
   Zhang F, 2016, PROC INT CONF SOFTW, P309, DOI 10.1145/2884781.2884839
   Zhang Y, 2018, FRONT COMPUT SCI-CHI, V12, P280, DOI 10.1007/s11704-017-6015-y
   Zhang Y, 2015, P INT COMP SOFTW APP, P264, DOI 10.1109/COMPSAC.2015.58
   Zhao YY, 2017, AUTOMAT SOFTW ENG, V24, P393, DOI 10.1007/s10515-016-0198-6
   Zhou YM, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3183339
NR 76
TC 24
Z9 27
U1 0
U2 13
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2020
VL 25
IS 2
SI SI
BP 1573
EP 1595
DI 10.1007/s10664-019-09777-8
EA JAN 2020
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KT0VU
UT WOS:000515631300001
DA 2024-07-18
ER

PT J
AU El Mezouar, M
   Zhang, F
   Zou, Y
AF El Mezouar, Mariam
   Zhang, Feng
   Zou, Ying
TI An empirical study on the teams structures in social coding using GitHub
   projects
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Pull request; Social coding; Team structure; Github
ID CENTRALITY; GOVERNANCE
AB Social coding enables collaborative software development in virtual and distributed communities. Social coding platforms (e.g., GitHub) provide the pull request feature that allows developers to clone a project, make code changes, and request the project owners to review and integrate the code changes to the main stream of a project. The pull request feature has been widely adopted by a large number of GitHub projects, as it minimizes the risk of exposing the projects to the open communities. The efficiency of the pull requests review process depends both on technical (e.g., the code quality) and social (e.g., the connection of a contributor to the project maintainer) factors. However, it is still unclear which social factors have the most impact on the efficiency of the review process. To identify the social factors, we study the team structures formed by the developers within the projects that adopt the pull-based development model. We build the pull-based networks, where two developers are linked if one has integrated a pull request submitted by the other. We investigate the 7,850 most popular projects on GitHub that are developed in ten programming languages. We identify the network metrics that have a significant association with the speed of processing the pull requests. Specifically, maintaining a strong core of contributors and denser interactions among the developers is associated with faster response and processing of the pull requests. We further find that more than 90% of the studied projects follow 8 dominant team structures out of 18 possible team structures. In the larger projects, only a set of developers is granted review and integration privileges of the pull requests, reflecting a strict decision making process. The small to medium projects are characterized by a small number of core contributors who maintain repeated interactions, and are able to process the incoming pull requests more efficiently. The evolution of the team structures of projects over time reveals that only a low percentage of the projects witnesses a change towards team structures associated to faster pull requests processing (e.g., stronger centralization).
C1 [El Mezouar, Mariam; Zhang, Feng] Queens Univ, Sch Comp, Kingston, ON, Canada.
   [Zou, Ying] Queens Univ, Dept Elect & Comp Engn, Kingston, ON, Canada.
C3 Queens University - Canada; Queens University - Canada
RP El Mezouar, M (corresponding author), Queens Univ, Sch Comp, Kingston, ON, Canada.
EM mariam@cs.queensu.ca; feng@cs.queensu.ca; ying.zou@queensu.ca
RI Zou, Ying/KLC-9380-2024; Zhang, Feng/AAQ-3506-2021
OI El Mezouar, Mariam/0000-0002-3317-7051
CR Anderson BS, 1999, SOC NETWORKS, V21, P239, DOI 10.1016/S0378-8733(99)00011-8
   Barr ET, 2012, LECT NOTES COMPUT SC, V7212, P316, DOI 10.1007/978-3-642-28872-2_22
   Bersani FS, 2016, J AFFECT DISORDERS, V190, P537, DOI 10.1016/j.jad.2015.10.037
   Bettenburg Nicolas, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P124, DOI 10.1109/ICPC.2010.46
   Bird M, 2007, TLS-TIMES LIT SUPPL, P6
   Capra E, 2008, IEEE T SOFTWARE ENG, V34, P765, DOI 10.1109/TSE.2008.68
   Caravaca D, 2008, MATER WORLD, V16, P24
   Choi HY, 2012, ECON REC, V88, P2, DOI 10.1111/j.1475-4932.2012.00809.x
   Crowston K., 2006, Knowledge Technology & Policy, V18, P65, DOI 10.1007/s12130-006-1004-8
   Crowston K., 2005, First Monday, V10, DOI 10.5210/fm.v10i2.1207
   Dabbish L, 2012, P ACM 2012 C COMP SU, P1277, DOI [10.1145/2145204.2145396, DOI 10.1145/2145204.2145396]
   de Reus MA, 2013, NEUROIMAGE, V80, P397, DOI 10.1016/j.neuroimage.2013.03.053
   Dinh-Trong TT, 2005, IEEE T SOFTWARE ENG, V31, P481, DOI 10.1109/TSE.2005.73
   Ducheneaut N., 2005, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V14, P323, DOI 10.1007/s10606-005-9000-1
   Ehrlich Kate, 2012, Proceedings of the ACM 2012 Conference on Computer Supported Cooperative Work, CSCW '12, P945
   FREEMAN LC, 1979, SOC NETWORKS, V1, P215, DOI 10.1016/0378-8733(78)90021-7
   FREEMAN LC, 1977, SOCIOMETRY, V40, P35, DOI 10.2307/3033543
   Gacek C, 2004, IEEE SOFTWARE, V21, P34, DOI 10.1109/MS.2004.1259206
   Garlaschelli D, 2004, PHYS REV LETT, V93, DOI 10.1103/PhysRevLett.93.268701
   Gharehyazie M, 2015, EMPIR SOFTW ENG, V20, P1318, DOI 10.1007/s10664-014-9332-x
   Gousios G, 2016, PROC INT CONF SOFTW, P285, DOI 10.1145/2884781.2884826
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   Gousios G, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P358, DOI 10.1109/ICSE.2015.55
   Gousios G, 2013, IEEE WORK CONF MIN S, P233, DOI 10.1109/MSR.2013.6624034
   Handcock Mark S, 2008, J Stat Softw, V24, P1548
   Howison J, 2006, INT FED INFO PROC, V203, P319
   Jiang YJ, 2013, IEEE WORK CONF MIN S, P101, DOI 10.1109/MSR.2013.6624016
   Joblin M, 2017, PROC INT CONF SOFTW, P164, DOI 10.1109/ICSE.2017.23
   Krackhardt D., 1994, Computational organization theory, P89
   KRUSKAL WH, 1952, J AM STAT ASSOC, V47, P583, DOI 10.1080/01621459.1952.10483441
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Marlow Jennifer, 2013, Proc. Conf. Computer Supported Cooperative Work (CSCW 13), P117, DOI [10.1145/2441776.2441792, DOI 10.1145/2441776.2441792]
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Nagappan Nachiappan, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P364
   O'Mahony S, 2007, ACAD MANAGE J, V50, P1079
   Rick, 2013, VIEW LONG RUNNING PU
   Rigby PC, 2013, 2013 1ST INTERNATIONAL WORKSHOP ON RELEASE ENGINEERING (RELENG), P29, DOI 10.1109/RELENG.2013.6607694
   Rigby PC, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P541, DOI 10.1145/1985793.1985867
   Roberts J, 2006, INT FED INFO PROC, V203, P297
   Schall D, 2014, INFORM SOFTWARE TECH, V56, P1543, DOI 10.1016/j.infsof.2013.12.003
   Sheskin DJ., 2003, HDB PARAMETRIC NONPA, DOI [10.1201/9781420036268, DOI 10.1201/9781420036268]
   Siegel S., 1956, Nonparametric statistics for the behavioral sciences
   Steel R. G. D., 1996, PRINCIPLES PROCEDURE
   Tsay J, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P356, DOI 10.1145/2568225.2568315
   Tsay J, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P144, DOI 10.1145/2635868.2635882
   Vasilescu B, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P805, DOI 10.1145/2786805.2786850
   von Krogh G, 2003, RES POLICY, V32, P1217, DOI 10.1016/S0048-7333(03)00050-7
   Wasserman S., 1994, Social network analysis: Methods and applications'
   Wolf T, 2009, PROC INT CONF SOFTW, P1, DOI 10.1109/ICSE.2009.5070503
   Yu Y, 2014, 2014 IEEE PHOTONICS SOCIETY SUMMER TOPICAL MEETING SERIES, P39, DOI 10.1109/SUM.2014.31
   Yu Y, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P367, DOI 10.1109/MSR.2015.42
   Yue Yu, 2014, 2014 21st Asia-Pacific Software Engineering Conference (APSEC), P335, DOI 10.1109/APSEC.2014.57
   Zanetti MS, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1032, DOI 10.1109/ICSE.2013.6606653
   Zar JH, 2005, ENCY BIOSTAT, V7, DOI DOI 10.1002/0470011815.B2A15150
NR 55
TC 7
Z9 8
U1 5
U2 12
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2019
VL 24
IS 6
BP 3790
EP 3823
DI 10.1007/s10664-019-09700-1
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA JT6XW
UT WOS:000501131100018
OA Bronze
DA 2024-07-18
ER

PT J
AU Huang, Q
   Xia, X
   Lo, D
AF Huang, Qiao
   Xia, Xin
   Lo, David
TI Revisiting supervised and unsupervised models for effort-aware
   just-in-time defect prediction
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Defect prediction; Evaluation metrics; Research bias
ID SOFTWARE; BUGS
AB Effort-aware just-in-time (JIT) defect prediction aims at finding more defective software changes with limited code inspection cost. Traditionally, supervised models have been used; however, they require sufficient labelled training data, which is difficult to obtain, especially for new projects. Recently, Yang et al. proposed an unsupervised model (i.e., LT) and applied it to projects with rich historical bug data. Interestingly, they reported that, under the same inspection cost (i.e., 20 percent of the total lines of code modified by all changes), it could find about 12% - 27% more defective changes than a state-of-the-art supervised model (i.e., EALR) when using different evaluation settings. This is surprising as supervised models that benefit from historical data are expected to perform better than unsupervised ones. Their finding suggests that previous studies on defect prediction had made a simple problem too complex. Considering the potential high impact of Yang et al.'s work, in this paper, we perform a replication study and present the following new findings: (1) Under the same inspection budget, LT requires developers to inspect a large number of changes necessitating many more context switches. (2) Although LT finds more defective changes, many highly ranked changes are false alarms. These initial false alarms may negatively impact practitioners' patience and confidence. (3) LT does not outperform EALR when the harmonic mean of Recall and Precision (i.e., F1-score) is considered. Aside from highlighting the above findings, we propose a simple but improved supervised model called CBS+, which leverages the idea of both EALR and LT. We investigate the performance of CBS+ using three different evaluation settings, including time-wise cross-validation, 10-times 10-fold cross-validation and cross-project validation. When compared with EALR, CBS+ detects about 15% - 26% more defective changes, while keeping the number of context switches and initial false alarms close to those of EALR. When compared with LT, the number of defective changes detected by CBS+ is comparable to LT's result, while CBS+ significantly reduces context switches and initial false alarms before first success. Finally, we discuss how to balance the tradeoff between the number of inspected defects and context switches, and present the implications of our findings for practitioners and researchers.
C1 [Huang, Qiao] Zhejiang Univ, Coll Comp Sci & Technol, Hangzhou, Zhejiang, Peoples R China.
   [Xia, Xin] Monash Univ, Fac Informat Technol, Melbourne, Vic, Australia.
   [Lo, David] Singapore Management Univ, Sch Informat Syst, Singapore, Singapore.
C3 Zhejiang University; Monash University; Singapore Management University
RP Xia, X (corresponding author), Monash Univ, Fac Informat Technol, Melbourne, Vic, Australia.
EM tkdsheep@zju.edu.cn; davidlo@smu.edu.sg
RI Xia, Xin/AAD-6217-2022; Lo, David/A-2493-2012
OI Xia, Xin/0000-0002-6302-3256; Lo, David/0000-0002-4367-7201
FU National Key Research and Development Program of China [2018YFB1003904];
   NSFC [61602403]
FX We would like to thank Kamei et al. (2013) and Yang et al. (2016) for
   providing us the datasets and source code used in their study. Finally,
   to enable other researchers replicate and extend our study, we have
   published the replication package in Zenodo.<SUP>5</SUP> This research
   was partially supported by the National Key Research and Development
   Program of China (2018YFB1003904) and NSFC Program (No. 61602403).
CR Agrawal Amritanshu, 2018, 2018 IEEE/ACM 40th International Conference on Software Engineering (ICSE). Proceedings, P1050, DOI 10.1145/3180155.3180197
   [Anonymous], 2011, Proceedings of the 19th ACM SIGSOFT symposium and the 13th European conference on Foundations of software engineering (FSE'11), DOI [10.1145/2025113.2025121, DOI 10.1145/2025113.2025121]
   [Anonymous], 2018, EMPIR SOFTW ENG, DOI DOI 10.1007/s10664-017-9522-4
   [Anonymous], 2007, ENCY MEASUREMENT STA, DOI DOI 10.4135/9781412952644
   Arisholm E, 2007, ISSRE 2007: 18TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P215, DOI 10.1109/ISSRE.2007.22
   Arisholm E, 2010, J SYST SOFTWARE, V83, P2, DOI 10.1016/j.jss.2009.06.055
   Buntru A, 2009, BMC BIOL, V7, DOI 10.1186/1741-7007-7-81
   Neto EC, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P380, DOI 10.1109/SANER.2018.8330225
   Cliff N., 2014, Ordinal Methods for Behavioral Data Analysis
   D'Ambros Marco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P31, DOI 10.1109/MSR.2010.5463279
   da Costa DA, 2017, IEEE T SOFTWARE ENG, V43, P641, DOI 10.1109/TSE.2016.2616306
   Fu W., 2017, P 2017 25 ACM SIGSOF
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Guo PJ, 2010, Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering, P495
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Hamill M, 2009, IEEE T SOFTWARE ENG, V35, P484, DOI 10.1109/TSE.2009.3
   Han J, 2012, MOR KAUF D, P1
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Hintze JL, 1998, AM STAT, V52, P181, DOI 10.2307/2685478
   Huang Q, 2017, IEEE INT C SOFTW MAI
   Jiang T, 2013, IEEE INT CONF AUTOM, P279, DOI 10.1109/ASE.2013.6693087
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kim S, 2006, IEEE INT CONF AUTOM, P81
   Kochhar Pavneet Singh, 2016, 25 INT S SOFTWARE TE, P165, DOI 10.1145/2931037.2931051
   Koru AG, 2009, IEEE T SOFTWARE ENG, V35, P293, DOI 10.1109/TSE.2008.90
   Koru G, 2010, EMPIR SOFTW ENG, V15, P577, DOI [10.1007/s10664-010-9132-X, 10.1007/s10664-010-9132-x]
   Luo Li P., 2006, 28th International Conference on Software Engineering Proceedings, P413, DOI 10.1145/1134285.1134343
   Matsumoto S, 2010, P 6 INT C PREDICTIVE, P1, DOI DOI 10.1145/1868328.1868356
   Mende T, 2010, EUR CON SFTWR MTNCE, P107, DOI 10.1109/CSMR.2010.18
   Menzies T, 2004, EIGHTH IEEE INTERNATIONAL SYMPOSIUM ON HIGH ASSURANCE SYSTEMS ENGINEERING, PROCEEDINGS, P129, DOI 10.1109/HASE.2004.1281737
   Menzies T, 2010, AUTOMAT SOFTW ENG, V17, P375, DOI 10.1007/s10515-010-0069-5
   Meyer AN, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P19, DOI 10.1145/2635868.2635892
   Mockus A, 2000, BELL LABS TECH J, V5, P169, DOI 10.1002/bltj.2229
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   MUNSON JC, 1992, IEEE T SOFTWARE ENG, V18, P423, DOI 10.1109/32.135775
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Nagappan N, 2006, ISSRE 2006:17TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P62
   Nam J, 2015, IEEE INT CONF AUTOM, P452, DOI 10.1109/ASE.2015.56
   Ostrand TJ., 2004, Proceedings of the 2004 ACM SIGSOFT International Symposium on Software Testing and Analysis, ISSTA '04, V29, P86, DOI [DOI 10.1145/1013886.1007524, 10.1145/1013886.1007524]
   Parnin C, 2011, CONF PROC INT SYMP C, P197, DOI 10.1109/ICPC.2011.49
   Purushothaman R, 2005, IEEE T SOFTWARE ENG, V31, P511, DOI 10.1109/TSE.2005.74
   Rahman F, 2012, Proceedings of the ACM SIGSOFT 20th International Symposium on the Foundations of Software Engineering, FSE '12, P61
   Rahman F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P432, DOI 10.1109/ICSE.2013.6606589
   Shihab E., 2012, P ACM SIGSOFT 20 INT, P1
   Shihab E, 2013, EMPIR SOFTW ENG, V18, P1005, DOI 10.1007/s10664-012-9228-6
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Tantithamthavorn C, 2016, PROC INT CONF SOFTW, P321, DOI 10.1145/2884781.2884857
   Thongmak M, 2003, SERP'03: PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH AND PRACTICE, VOLS 1 AND 2, P621
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Valdivia-Garcia Harold., 2014, P 11 WORKING C MININ, P72
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Xia X, 2016, PROC IEEE INT CONF S, P268, DOI 10.1109/ICSME.2016.67
   Xia X, 2016, IEEE T RELIAB, V65, P1810, DOI 10.1109/TR.2016.2588139
   Xia X, 2016, IEEE T SOFTWARE ENG, V42, P977, DOI 10.1109/TSE.2016.2543218
   Yan Q, 2017, J BIOL ENG, V11, DOI 10.1186/s13036-017-0075-2
   Yang XL, 2017, INFORM SOFTWARE TECH, V87, P206, DOI 10.1016/j.infsof.2017.03.007
   Yang XL, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P17, DOI 10.1109/QRS.2015.14
   Yang YB, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P157, DOI 10.1145/2950290.2950353
   Zhou YM, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3183339
NR 64
TC 74
Z9 75
U1 0
U2 15
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2019
VL 24
IS 5
SI SI
BP 2823
EP 2862
DI 10.1007/s10664-018-9661-2
PG 40
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IS1CL
UT WOS:000481889700002
OA Green Published
DA 2024-07-18
ER

PT J
AU Minku, LL
AF Minku, Leandro L.
TI A novel online supervised hyperparameter tuning procedure applied to
   cross-company software effort estimation
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software effort estimation; Cross-company learning; Transfer learning;
   Concept drift; Online learning; Hyperparameter tuning
ID PREDICTION; MODELS
AB Software effort estimation is an online supervised learning problem, where new training projects may become available over time. In this scenario, the Cross-Company (CC) approach Dycom can drastically reduce the number of Within-Company (WC) projects needed for training, saving their collection cost. However, Dycom requires CC projects to be split into subsets. Both the number and composition of such subsets can affect Dycom's predictive performance. Even though clustering methods could be used to automatically create CC subsets, there are no procedures for automatically tuning the number of clusters over time in online supervised scenarios. This paper proposes the first procedure for that. An investigation of Dycom using six clustering methods and three automated tuning procedures is performed, to check whether clustering with automated tuning can create well performing CC splits. A case study with the ISBSG Repository shows that the proposed tuning procedure in combination with a simple threshold-based clustering method is the most successful in enabling Dycom to drastically reduce (by a factor of 10) the number of required WC training projects, while maintaining (or even improving) predictive performance in comparison with a corresponding WC model. A detailed analysis is provided to understand the conditions under which this approach does or does not work well. Overall, the proposed online supervised tuning procedure was generally successful in enabling a very simple threshold-based clustering approach to obtain the most competitive Dycom results. This demonstrates the value of automatically tuning hyperparameters over time in a supervised way.
C1 [Minku, Leandro L.] Univ Birmingham, Sch Comp Sci, Birmingham B15 2TT, W Midlands, England.
C3 University of Birmingham
RP Minku, LL (corresponding author), Univ Birmingham, Sch Comp Sci, Birmingham B15 2TT, W Midlands, England.
EM L.L.Minku@cs.bham.ac.uk
OI Minku, Leandro/0000-0002-2639-0671
FU EPSRC [EP/R006660/1]; EPSRC [EP/R006660/1] Funding Source: UKRI
FX The author is thankful to Siqing Hou for the implementation of the
   initial version of the code to integrate Dycom with WEKA's clustering
   algorithms, which was created during his internship at the University of
   Birmingham (UK). The author is thankful to Tim Menzies, for sharing his
   Scott-Knott and Bootstrap implementation, as well as his latex commands
   for creating quartile plots. The author is thankful to Luigi Dragone,
   for making his Spectral Clustering code available. The author is also
   thankful to the editors and anonymous reviewers, for their constructive
   comments. This work was supported by EPSRC Grant No. EP/R006660/1.
CR Agrawal Amritanshu, 2018, 2018 IEEE/ACM 40th International Conference on Software Engineering (ICSE). Proceedings, P1050, DOI 10.1145/3180155.3180197
   Amasaki S., 2011, 2011 Proceedings of Joint Conf of 21st Int'l Workshop on Software Measurement and the 6th Int'l Conference on Software Process and Product Measurement (IWSM-MENSURA 2011), P188, DOI 10.1109/IWSM-MENSURA.2011.29
   [Anonymous], TECH REP
   [Anonymous], 2012, P PROMISE 12
   Bishop Christopher M, 2006, PATTERN RECOGN, V128, P1
   Boehm BW., 1981, Software Engineering Economics
   Breiman L, 2001, MACH LEARN, V45, P5, DOI 10.1023/A:1010933404324
   Briand L, 2000, ICSE, P377
   COHEN J, 1992, PSYCHOL BULL, V112, P155, DOI 10.1037/0033-2909.112.1.155
   Corazza A, 2013, EMPIR SOFTW ENG, V18, P506, DOI 10.1007/s10664-011-9187-3
   Gallego JJC, 2007, J COMPUT SCI TECH-CH, V22, P371, DOI 10.1007/s11390-007-9043-5
   Dejaeger K, 2012, IEEE T SOFTWARE ENG, V38, P375, DOI 10.1109/TSE.2011.55
   Ditzler G, 2015, IEEE COMPUT INTELL M, V10, P12, DOI 10.1109/MCI.2015.2471196
   Fu W, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P49, DOI 10.1145/3106237.3106256
   Fu W, 2016, INFORM SOFTWARE TECH, V76, P135, DOI 10.1016/j.infsof.2016.04.017
   Gama J, 2004, LECT NOTES ARTIF INT, V3171, P286
   Gama J, 2009, KDD-09: 15TH ACM SIGKDD CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P329
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Huang SJ, 2008, INFORM SOFTWARE TECH, V50, P879, DOI 10.1016/j.infsof.2008.02.005
   Jeffery R, 2000, INFORM SOFTWARE TECH, V42, P1009, DOI 10.1016/S0950-5849(00)00153-1
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Kitchenham BA, 2007, IEEE T SOFTWARE ENG, V33, P316, DOI 10.1109/TSE.2007.1101
   Kocaguneli E, 2010, Proceedings of the IEEE/ACM international conference on Automated software engineering, P321, DOI DOI 10.1145/1858996.1859061
   Kocaguneli E, 2013, INTERNATIONAL CONFER
   Kocaguneli E, 2015, EMPIR SOFTW ENG, V20, P813, DOI 10.1007/s10664-014-9300-5
   Kocaguneli E, 2012, IEEE T SOFTWARE ENG, V38, P425, DOI 10.1109/TSE.2011.27
   Lavesson N, 2006, P 21 NAT C ART INT V, V1
   Lefley M, 2003, LECT NOTES COMPUT SC, V2724, P2477
   Lokan C, 2017, EMPIR SOFTW ENG, V22, P716, DOI 10.1007/s10664-016-9446-4
   MacDonell Stephen G., 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P401
   Mendes E, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P348, DOI 10.1109/METRIC.2004.1357920
   Menzies T., 2017, The SEACRAFT Repository of Empirical Software Engineering Data
   Menzies T, 2017, EMPIR SOFTW ENG, V22, P2658, DOI 10.1007/s10664-016-9472-2
   Menzies T, 2013, IEEE T SOFTWARE ENG, V39, P822, DOI 10.1109/TSE.2012.83
   Menzies T, 2012, EMPIR SOFTW ENG, V17, P1, DOI 10.1007/s10664-011-9193-5
   Minku L, 2018, OATES FULLY DYNAMIC
   Minku L, 2015, INT S EMP SOFTW ENG
   Minku L, 2016, INT C PRED MOD DAT A
   Minku LL, 2017, AUTOMAT SOFTW ENG, V24, P499, DOI 10.1007/s10515-016-0209-7
   Minku LL, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P446, DOI 10.1145/2568225.2568228
   Minku LL, 2013, INFORM SOFTWARE TECH, V55, P1512, DOI 10.1016/j.infsof.2012.09.012
   Minku Leandro L., 2017, P PROMISE 17, P12, DOI [10.1145/3127005.3127007, DOI 10.1145/3127005.3127007]
   Mittas N, 2013, IEEE T SOFTWARE ENG, V39, P537, DOI 10.1109/TSE.2012.45
   Nair V, 2018, IEEE WORK CONF MIN S, P341, DOI 10.1145/3196398.3196442
   Oliveira ALI, 2010, INFORM SOFTWARE TECH, V52, P1155, DOI 10.1016/j.infsof.2010.05.009
   Pelleg D., 2000, P 17 INT C MACH LEAR, DOI DOI 10.1007/3-540-44491-2_3
   Rokach L, 2005, DATA MINING AND KNOWLEDGE DISCOVERY HANDBOOK, P321, DOI 10.1007/0-387-25465-X_15
   Sarro F, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3234940
   Sarro F, 2016, PROC INT CONF SOFTW, P619, DOI 10.1145/2884781.2884830
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   Shepperd M, 2012, INFORM SOFTWARE TECH, V54, P820, DOI 10.1016/j.infsof.2011.12.008
   Shi JB, 2000, IEEE T PATTERN ANAL, V22, P888, DOI 10.1109/34.868688
   Song L, 2018, SYMPOSIUM ON THE FOU
   Song LM, 2013, SCI WORLD J, DOI 10.1155/2013/917506
   Tantithamthavorn C, 2018, IEEE T SOFTW ENG TSE
   Tantithamthavorn C, 2016, INT C SOFTW ENG ICSE
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Turhan B, 2014, EUROMICRO CONF PROC, P285, DOI 10.1109/SEAA.2014.41
   Usman M., 2014, PROMISE '14: Proceedings of the 10th International Conference on Predictive Models in Software Engineering, page, P82
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Wang S, 2015, IEEE T KNOWL DATA EN, V27, P1356, DOI 10.1109/TKDE.2014.2345380
   Wieczorek I, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P237, DOI 10.1109/METRIC.2002.1011342
   Xia T, 2018, ARXIV180400626V1
   Xia T, 2018, ARXIV180500336V2
NR 64
TC 19
Z9 19
U1 1
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2019
VL 24
IS 5
SI SI
BP 3153
EP 3204
DI 10.1007/s10664-019-09686-w
PG 52
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IS1CL
UT WOS:000481889700012
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Yu, ZX
   Martinez, M
   Danglot, B
   Durieux, T
   Monperrus, M
AF Yu, Zhongxing
   Martinez, Matias
   Danglot, Benjamin
   Durieux, Thomas
   Monperrus, Martin
TI Alleviating patch overfitting with automatic test generation: a study of
   feasibility and effectiveness for the Nopol repair system
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Program repair; Synthesis-based repair; Patch overfitting; Automatic
   test case generation
AB Among the many different kinds of program repair techniques, one widely studied family of techniques is called test suite based repair. However, test suites are in essence input-output specifications and are thus typically inadequate for completely specifying the expected behavior of the program under repair. Consequently, the patches generated by test suite based repair techniques can just overfit to the used test suite, and fail to generalize to other tests. We deeply analyze the overfitting problem in program repair and give a classification of this problem. This classification will help the community to better understand and design techniques to defeat the overfitting problem. We further propose and evaluate an approach called UnsatGuided, which aims to alleviate the overfitting problem for synthesis-based repair techniques with automatic test case generation. The approach uses additional automatically generated tests to strengthen the repair constraint used by synthesis-based repair techniques. We analyze the effectiveness of UnsatGuided: 1) analytically with respect to alleviating two different kinds of overfitting issues; 2) empirically based on an experiment over the 224 bugs of the Defects4J repository. The main result is that automatic test generation is effective in alleviating one kind of overfitting, issue-regression introduction, but due to oracle problem, has minimal positive impact on alleviating the other kind of overfitting issue-incomplete fixing.
C1 [Yu, Zhongxing; Danglot, Benjamin; Durieux, Thomas] Inria Lille Nord Europe, Ave Halley, F-59650 Villeneuve Dascq, France.
   [Martinez, Matias] Univ Valenciennes, Malvache Bldg,Campus Mont Houy, F-59313 Valenciennes 9, France.
   [Monperrus, Martin] KTH Royal Inst Technol, Sch Comp Sci & Commun, Stockholm, Sweden.
C3 Universite Polytechnique Hauts-de-France; Royal Institute of Technology
RP Yu, ZX (corresponding author), Inria Lille Nord Europe, Ave Halley, F-59650 Villeneuve Dascq, France.
EM zhoyu@kth.se; matias.martinez@univ-valenciennes.fr;
   benjamin.danglot@inria.fr; thomas.durieux@inria.fr;
   martin.monperrus@csc.kth.se
RI Durieux, Thomas/AAM-9269-2020; Monperrus, Martin/I-3640-2012; Yu,
   Zhongxing/AAH-1064-2019; Martinez, Matias/ABA-8871-2021
OI Durieux, Thomas/0000-0002-1996-6134; Monperrus,
   Martin/0000-0003-3505-3383; Martinez, Matias/0000-0002-2945-866X; Yu,
   Zhongxing/0000-0003-3718-8476
CR Almasi MM, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P263, DOI 10.1109/ICSE-SEIP.2017.27
   [Anonymous], 2017, IDENTIFYING PATCH CO
   [Anonymous], 2007, ESEC FSE 2007, DOI DOI 10.1145/1287624.1287707
   [Anonymous], 2007, S NETW DISTR SYST SE
   [Anonymous], 2014, T3 COMBINATOR BASED, DOI DOI 10.1007/978-3-319-07785-7_7
   [Anonymous], P ISSTA ACM
   [Anonymous], 2017, Overfitting in semantics-based automated program repair.
   [Anonymous], 2017, ACM Computing Surveys
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Baresi Luciano, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P185, DOI 10.1109/ICST.2010.54
   Cadar C., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, (USA), P209
   Csallner C, 2004, SOFTWARE PRACT EXPER, V34, P1025, DOI 10.1002/spe.602
   Durieux T, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P349, DOI 10.1109/SANER.2017.7884635
   Fraser Gordon, 2011, PROC 19 ACM SIGSOFT, P416, DOI 10.1145/2025113.2025179
   Gao Q, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P459, DOI 10.1109/ICSE.2015.64
   Godefroid P, 2005, ACM SIGPLAN NOTICES, V40, P213, DOI 10.1145/1064978.1065036
   Gu Z., 2010, ICSE 10, V1, P55, DOI DOI 10.1145/1806799.1806812
   Nguyen HDT, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P772, DOI 10.1109/ICSE.2013.6606623
   Islam Mainul., 2010, WODA, P26
   Jha S., 2010, P 32 ACM IEEE INT C, V1, P215, DOI DOI 10.1145/1806799.1806833
   Jones J.A., 2005, P 20 IEEE ACM INT C, P273, DOI [10.1145/1101908.1101949, DOI 10.1145/1101908.1101949]
   Jooyong Yi, 2018, Empirical Software Engineering, V23, P2948, DOI 10.1007/s10664-017-9552-y
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Just R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P654, DOI 10.1145/2635868.2635929
   Kim D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P802, DOI 10.1109/ICSE.2013.6606626
   Laghari G, 2016, IEEE INT CONF AUTOM, P274, DOI 10.1145/2970276.2970308
   Le Goues C, 2012, IEEE T SOFTWARE ENG, V38, P54, DOI 10.1109/TSE.2011.104
   Le T.-D. B., 2016, P 25 INT S SOFTW TES, P177, DOI DOI 10.1145/2931037.2931049
   Le XBD, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P593, DOI 10.1145/3106237.3106309
   Liu C, 2006, IEEE T SOFTWARE ENG, V32, P831, DOI 10.1109/TSE.2006.105
   Long F, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P727, DOI 10.1145/3106237.3106253
   Long F, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P166, DOI 10.1145/2786805.2786811
   Long F, 2016, ACM SIGPLAN NOTICES, V51, P298, DOI 10.1145/2914770.2837617
   Martinez M., 2016, P 25 INT S SOFTWARE, P441, DOI 10.1145/2931037
   Martinez M, 2017, EMPIR SOFTW ENG, V22, P1936, DOI 10.1007/s10664-016-9470-4
   Mechtaev S, 2016, PROC INT CONF SOFTW, P691, DOI 10.1145/2884781.2884807
   Mechtaev S, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P448, DOI 10.1109/ICSE.2015.63
   Pacheco C., 2007, OOPSLA 2007 COMPANIO, P815
   Pasareanu Corina S., 2010, P 25 IEEE ACM INT C, P179, DOI [10.1145/1858996.1859035, DOI 10.1145/1858996.1859035]
   Pearson S, 2017, PROC INT CONF SOFTW, P609, DOI 10.1109/ICSE.2017.62
   Pei Y, 2014, IEEE T SOFTWARE ENG, V40, P427, DOI 10.1109/TSE.2014.2312918
   Perkins JH, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P87
   Qi YH, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P254, DOI 10.1145/2568225.2568254
   Sen K., 2005, P 10 EUR SOFTW ENG C, V30, P263, DOI DOI 10.1145/1081706.1081750
   Shamshiri S, 2015, IEEE INT CONF AUTOM, P201, DOI 10.1109/ASE.2015.86
   Shaw A, 2014, I C DEPEND SYS NETWO, P124, DOI 10.1109/DSN.2014.25
   Smith EK, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P532, DOI 10.1145/2786805.2786825
   Taneja Kunal, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P407, DOI 10.1109/ASE.2008.60
   Tian Y, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P752, DOI 10.1145/3106237.3106300
   Tillmann N, 2008, LECT NOTES COMPUT SC, V4966, P134
   Tonella P., 2004, Software Engineering Notes, V29, P119, DOI 10.1145/1013886.1007528
   Weimer W, 2013, IEEE INT CONF AUTOM, P356, DOI 10.1109/ASE.2013.6693094
   Xiangyu Zhang, 2006, 28th International Conference on Software Engineering Proceedings, P272, DOI 10.1145/1134285.1134324
   Xie T, 2006, LECT NOTES COMPUT SC, V4067, P380
   Xin Q, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P226, DOI 10.1145/3092703.3092718
   Xiong YF, 2017, PROC INT CONF SOFTW, P416, DOI 10.1109/ICSE.2017.45
   Xuan JF, 2017, IEEE T SOFTWARE ENG, V43, P34, DOI 10.1109/TSE.2016.2560811
   Yang JQ, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P831, DOI 10.1145/3106237.3106274
   Yu ZX, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P924, DOI 10.1109/ICSE.2015.102
   Yu ZX, 2013, INFORM SOFTWARE TECH, V55, P2076, DOI 10.1016/j.infsof.2013.07.004
   Yu Zhongxing, 2017, ARXIV170300198
   Zhongxing Yu, 2011, Proceedings of the 2011 IEEE 13th International Symposium on High-Assurance Systems Engineering (HASE 2011), P325, DOI 10.1109/HASE.2011.29
NR 62
TC 35
Z9 38
U1 0
U2 15
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2019
VL 24
IS 1
BP 33
EP 67
DI 10.1007/s10664-018-9619-4
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HL3RV
UT WOS:000458634400002
DA 2024-07-18
ER

PT J
AU Palomba, F
   Bavota, G
   Di Penta, M
   Fasano, F
   Oliveto, R
   De Lucia, A
AF Palomba, Fabio
   Bavota, Gabriele
   Di Penta, Massimiliano
   Fasano, Fausto
   Oliveto, Rocco
   De Lucia, Andrea
TI On the diffuseness and the impact on maintainability of code smells: a
   large scale empirical investigation
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Code smells; Empirical studies; Mining software repositories
ID BAD; NUMBER
AB Code smells are symptoms of poor design and implementation choices that may hinder code comprehensibility and maintainability. Despite the effort devoted by the research community in studying code smells, the extent to which code smells in software systems affect software maintainability remains still unclear. In this paper we present a large scale empirical investigation on the diffuseness of code smells and their impact on code change- and fault-proneness. The study was conducted across a total of 395 releases of 30 open source projects and considering 17,350 manually validated instances of 13 different code smell kinds. The results show that smells characterized by long and/or complex code (e.g., Complex Class) are highly diffused, and that smelly classes have a higher change- and fault-proneness than smell-free classes.
C1 [Palomba, Fabio] Delft Univ Technol, Delft, Netherlands.
   [Bavota, Gabriele] USI, Lugano, Switzerland.
   [Di Penta, Massimiliano] Univ Sannio, Benevento, Italy.
   [Fasano, Fausto] Univ Molise, Comp Sci & Informat Syst, Campobasso, Italy.
   [Oliveto, Rocco] Univ Molise, Campobasso, Italy.
   [Oliveto, Rocco] Univ Molise, Comp Sci Bachelor & Master Programs, Campobasso, Italy.
   [De Lucia, Andrea] Univ Salerno, Dept Comp Sci, Software Engn, Fisciano, Italy.
C3 Delft University of Technology; University of Sannio; University of
   Molise; University of Molise; University of Molise; University of
   Salerno
RP Palomba, F (corresponding author), Delft Univ Technol, Delft, Netherlands.
EM f.palomba@tudelft.nl; gabriele.bavota@usi.ch; dipenta@unisannio.it;
   fausto.fasano@unimol.it; rocco.oliveto@unimol.it; adelucia@unisa.it
RI De Lucia, Andrea/AAG-6781-2020; Di Penta, Massimiliano/AAF-9656-2021
OI BAVOTA, Gabriele/0000-0002-2216-3148; De Lucia,
   Andrea/0000-0002-4238-1425; Palomba, Fabio/0000-0001-9337-5116
CR Abbes M, 2011, EUR CON SFTWR MTNCE, P181, DOI 10.1109/CSMR.2011.24
   [Anonymous], 2007, P INT WORKSH PRINC S
   [Anonymous], 2010, 2010 IEEE International Conference on Software Maintenance, DOI [10.1109/ICSM.2010.5609564, DOI 10.1109/ICSM.2010.5609564]
   [Anonymous], 2016, 2016 IEEE 24th International Conference on Program Comprehension (ICPC)
   Antoniol G, 2008, P 2008 C CTR ADV STU, P304
   Arcoverde R., 2011, WORKSH REF TOOLS, P33
   Bavota G, 2015, J SYST SOFTWARE, V107, P1, DOI 10.1016/j.jss.2015.05.024
   Bavota G, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P56, DOI 10.1109/ICSM.2012.6405253
   Chatzigeorgiou A, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P106, DOI 10.1109/QUATIC.2010.16
   Cohen J., 1988, STAT POWER ANAL BEHA
   Conover W. J., 1998, PRACTICAL NONPARAMET, V3rd
   Cunningham W., 1993, OOPS MESSENGER, V4, P29, DOI DOI 10.1145/157710.157715
   D'Ambros Marco, 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P23, DOI 10.1109/QSIC.2010.58
   Deligiannis I, 2004, J SYST SOFTWARE, V72, P129, DOI 10.1016/S0164-1212(03)00240-1
   Fernandes E, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2915984
   Fowler M., 1999, Refactoring: Improving the Design of Existing Code
   Gatrell M, 2015, SCI COMPUT PROGRAM, V102, P44, DOI 10.1016/j.scico.2014.12.002
   Grissom R. J., 2005, EFFECT SIZES RES BRO
   HOLM S, 1979, SCAND J STAT, V6, P65
   Hosmer D W., 2004, Applied Logistic Regression
   Kessentini M., 2010, Proceedings of the IEEE/ACM international conference on Automated software engineering, P113
   Khomh F, 2012, EMPIR SOFTW ENG, V17, P243, DOI 10.1007/s10664-011-9171-y
   Khomh F, 2009, WORK CONF REVERSE EN, P75, DOI 10.1109/WCRE.2009.28
   Khomh F, 2009, INT CONF QUAL SOFTW, P305, DOI 10.1109/QSIC.2009.47
   Kruchten P, 2012, IEEE SOFTWARE, V29, P18, DOI 10.1109/MS.2012.167
   Lanza Michele, 2006, Objectoriented metrics in practice: using software metrics to characterize, evaluate, and improve the design of object-oriented systems
   Li W, 2007, J SYST SOFTWARE, V80, P1120, DOI 10.1016/j.jss.2006.10.018
   Lopez M, 2015, SOFTW MEASUR EUR FOR
   Lozano Angelo., 2007, Ninth International Workshop on Principles of software evolution, P31
   Marinescu R, 2004, PROC IEEE INT CONF S, P350, DOI 10.1109/ICSM.2004.1357820
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Moonen L, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P13, DOI 10.1109/WCRE.2001.957806
   Munro M.J, 2005, P 11 INT SOFTW METR
   Olbrich S, 2009, INT SYMP EMP SOFTWAR, P391
   Oliveto R, 2010, EUR CON SFTWR MTNCE, P248, DOI 10.1109/CSMR.2010.47
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   Palomba F, 2017, BAD CODE SMELLS STUD
   Palomba F, 2016, P 9 INT WORKSH SEARC
   Palomba F, 2015, IEEE T SOFTWARE ENG, V41, P462, DOI 10.1109/TSE.2014.2372760
   Palomba F, 2014, PROC IEEE INT CONF S, P101, DOI 10.1109/ICSME.2014.32
   Palomba F, 2014, ADV COMPUT, V95, P201, DOI 10.1016/B978-0-12-800160-8.00004-8
   Peters R, 2012, EUR CON SFTWR MTNCE, P411, DOI 10.1109/CSMR.2012.79
   Ratiu D, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P223
   Saboury A, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P294, DOI 10.1109/SANER.2017.7884630
   Sahin D, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2675067
   Sjoberg DIK, 2013, IEEE T SOFTWARE ENG, V39, P1144, DOI 10.1109/TSE.2012.89
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Student, 1921, Biometrika, V13, P263, DOI 10.1093/biomet/13.2-3.263
   Tsantalis N, 2009, IEEE T SOFTWARE ENG, V35, P347, DOI 10.1109/TSE.2009.1
   Tufano M, 2017, IEEE T SOFTWARE ENG, V43, P1063, DOI 10.1109/TSE.2017.2653105
   Tufano M, 2016, IEEE INT CONF AUTOM, P4, DOI 10.1145/2970276.2970340
   Tufano M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P403, DOI 10.1109/ICSE.2015.59
   Vaucher S, 2009, WORK CONF REVERSE EN, P145, DOI 10.1109/WCRE.2009.23
   Yamashita A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P682, DOI 10.1109/ICSE.2013.6606614
   Yamashita A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P306, DOI 10.1109/ICSM.2012.6405287
NR 55
TC 160
Z9 174
U1 0
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2018
VL 23
IS 3
BP 1188
EP 1221
DI 10.1007/s10664-017-9535-z
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GH6DH
UT WOS:000433532300002
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Kula, RG
   German, DM
   Ouni, A
   Ishio, T
   Inoue, K
AF Kula, Raula Gaikovina
   German, Daniel M.
   Ouni, Ali
   Ishio, Takashi
   Inoue, Katsuro
TI Do developers update their library dependencies? An empirical study on
   the impact of security advisories on library migration
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software reuse; Software maintenance; Security vulnerabilities
ID SUPPORT; CODE
AB Third-party library reuse has become common practice in contemporary software development, as it includes several benefits for developers. Library dependencies are constantly evolving, with newly added features and patches that fix bugs in older versions. To take full advantage of third-party reuse, developers should always keep up to date with the latest versions of their library dependencies. In this paper, we investigate the extent of which developers update their library dependencies. Specifically, we conducted an empirical study on library migration that covers over 4,600 GitHub software projects and 2,700 library dependencies. Results show that although many of these systems rely heavily on dependencies, 81.5% of the studied systems still keep their outdated dependencies. In the case of updating a vulnerable dependency, the study reveals that affected developers are not likely to respond to a security advisory. Surveying these developers, we find that 69% of the interviewees claimed to be unaware of their vulnerable dependencies. Moreover, developers are not likely to prioritize a library update, as it is perceived to be extra workload and responsibility. This study concludes that even though third-party reuse is common practice, updating a dependency is not as common for many developers.
C1 [Ouni, Ali] Osaka Univ, Suita, Osaka, Japan.
   [Inoue, Katsuro] Osaka Univ, Dept Comp Sci, Grad Sch Informat Sci & Technol, Suita, Osaka, Japan.
   [German, Daniel M.] Univ Victoria, Dept Comp Sci, Victoria, BC, Canada.
   [Kula, Raula Gaikovina; Ishio, Takashi] Osaka Univ, Nara Inst Sci & Technol, Takayama, Ikoma, Japan.
   [Ouni, Ali] UAE Univ, Sheikh Khalifa Bin Zayed St, Abu Dhabi, U Arab Emirates.
C3 Osaka University; Osaka University; University of Victoria; Nara
   Institute of Science & Technology; Osaka University; United Arab
   Emirates University
RP Kula, RG (corresponding author), Osaka Univ, Nara Inst Sci & Technol, Takayama, Ikoma, Japan.
EM raula-k@is.naist.jp; dmg@uvic.ca; aliouni@gmail.com; ishio@is.naist.jp;
   inoue@ist.osaka-u.ac.jp
RI Ouni, Ali/Y-8280-2019; Kula, Raula/AAD-6079-2019
OI Ouni, Ali/0000-0003-4708-0362; Kula, Raula/0000-0003-2324-0608; Ishio,
   Takashi/0000-0003-4106-699X
FU JSPS KANENHI [JP25220003, JP26280021]; "Osaka University Program for
   Promoting International Joint Research"; 'Research Start-up Grant' - UAE
   University [G00002211]; Grants-in-Aid for Scientific Research [26280021]
   Funding Source: KAKEN
FX This work is supported by JSPS KANENHI (Grant Numbers JP25220003 and
   JP26280021) and the "Osaka University Program for Promoting
   International Joint Research." Ali Ouni is supported by the 'Research
   Start-up (2) 2016 Grant G00002211' funded by UAE University.
CR Balaban I, 2005, ACM SIGPLAN NOTICES, V40, P265, DOI 10.1145/1103845.1094832
   Bavota G, 2015, EMPIR SOFTW ENG, V20, P1275, DOI 10.1007/s10664-014-9325-9
   Bogart C, 2015, P ASE WORKSH SOFTW S, P11
   Chow K, 1996, P 1996 INT C SOFTW M
   Cossette BE, 2012, P ACM SIGSOFT INT S
   Cox J, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P109, DOI 10.1109/ICSE.2015.140
   Dagenais B, 2009, PROC INT CONF SOFTW, P599, DOI 10.1109/ICSE.2009.5070565
   De Roover C, 2013, CONF PROC INT SYMP C, P152, DOI 10.1109/ICPC.2013.6613843
   EDGELL SE, 1984, PSYCHOL BULL, V95, P576, DOI 10.1037/0033-2909.95.3.576
   Eisenberg Daniel S., 2010, Proceedings 2010 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC 2010), P23, DOI 10.1109/VLHCC.2010.13
   German DM, 2013, EUR CON SFTWR MTNCE, P243, DOI 10.1109/CSMR.2013.33
   Godfrey MW, 2005, IEEE T SOFTWARE ENG, V31, P166, DOI 10.1109/TSE.2005.28
   Haenni N., 2013, Proceedings of the 2013 International Workshop on Ecosystem Architectures, P1
   Hora A., 2015, INT C SOFTW MAINT EV
   Hora A, 2015, PROC IEEE INT CONF S, P251, DOI 10.1109/ICSM.2015.7332471
   Jezek K, 2015, INFORM SOFTWARE TECH, V65, P129, DOI 10.1016/j.infsof.2015.02.014
   Kabinna S, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P154, DOI [10.1145/2901739.2901769, 10.1109/MSR.2016.025]
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kawamitsu N, 2014, P SCAM
   Kula R. G., 2014, P IEEE WORK C SOFT V
   Kula RG, 2015, 22 IEEE INT C SOFTW
   Lehman M. M., 1996, Software Process Technology. 5th European Workshop, EWSPT '96 Proceedings, P108, DOI 10.1007/BFb0017737
   Mens T, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P403, DOI 10.1109/CSMR-WCRE.2014.6747205
   Mileva YM, 2009, IWPSE-EVOL 09: ERCIM WORKSHOP ON SOFTWARE EVOLUTION (EVOL) AND INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION (IWPSE), P57
   Plate H, 2015, P 31 INT C SOFTW MAI
   Raemaekers S, 2014, IEEE INT WORK C SO, P215, DOI 10.1109/SCAM.2014.30
   Raemaekers S, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P378, DOI 10.1109/ICSM.2012.6405296
   Robbes R., 2012, P ACM SIGSOFT 20 INT
   Rogers EM, 2003, DIFFUSION INNOVATION, V5
   Sawant A. A., 2016, P 1 IEEE INT C POW
   Schäfer T, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P471, DOI 10.1145/1368088.1368153
   Teyton C, 2014, J SOFTW-EVOL PROC, V26, P11
   Wittern E, 2016, P WORK C MIN SOFT RE
   Wu W, 2016, EMPIR SOFTW ENG, V21, P2366, DOI 10.1007/s10664-015-9411-7
   Wu W, 2015, EMPIR SOFTW ENG, V20, P1126, DOI 10.1007/s10664-014-9317-9
   Xia P., 2013, JSSST COMPUTER SOFTW, V30, P98
   Xing ZC, 2007, IEEE T SOFTWARE ENG, V33, P818, DOI 10.1109/TSE.2007.70747
NR 37
TC 141
Z9 144
U1 0
U2 7
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2018
VL 23
IS 1
BP 384
EP 417
DI 10.1007/s10664-017-9521-5
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FU9TG
UT WOS:000424199400010
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Zhang, HH
   Wang, S
   Yue, T
   Ali, S
   Liu, C
AF Zhang, Huihui
   Wang, Shuai
   Yue, Tao
   Ali, Shaukat
   Liu, Chao
TI Search and similarity based selection of use case scenarios: An
   empirical study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Use case modeling; Use case scenario selection; Search algorithms;
   Similarity functions; Empirical study
ID SOFTWARE INSPECTIONS; RELEASE PROBLEM; SYSTEM; PRIORITIZATION;
   OPTIMIZATION; EVOLUTIONARY; VERIFICATION; ALGORITHMS; QUALITY; REDUCE
AB Use case modeling is a well-known requirements specification method and has been widely applied in practice. Use case scenarios of use case models are input elements for requirements inspection and analysis, requirements-based testing, and other downstream activities. It is, however, a practical challenge to inspect all use case scenarios that can be obtained from any non-trivial use case model, as such an inspection activity is often performed manually by domain experts. Therefore, it is needed to propose an automated solution for selecting a subset of use case scenarios with the ultimate aim of enabling cost-effective requirements (use case) inspection, analysis, and other relevant activities. Our solution is built on a natural language based, restricted use case modeling methodology (named as RUCM), in the sense that requirements specifications are specified as RUCM use case models. Use case scenarios can be automatically derived from RUCM use case models with the already established Zen-RUCM framework. In this paper, we propose a search-based and similarity-based approach called (SRCUM)-R-3, through an empirical study, to select most diverse use case scenarios to enable cost-effective use case inspections. The empirical study was designed to evaluate the performance of three search algorithms together with eight similarity functions, through one real-world case study and six case studies from literature. Results show that (1+1) Evolutionary Algorithm together with Needleman-Wunsch similarity function significantly outperformed the other 31 combinations of the search algorithms and similarity functions. The combination managed to select 50% of all the generated RUCM use case scenarios for all the case studies to detect all the seeded defects.
C1 [Zhang, Huihui; Liu, Chao] Beihang Univ, Sch Comp Sci & Engn, Beijing, Peoples R China.
   [Wang, Shuai; Yue, Tao] Simula Res Lab, Oslo, Norway.
   [Ali, Shaukat] Simula Res Lab, Software Engn Dept, Oslo, Norway.
   [Yue, Tao] Univ Oslo, Oslo, Norway.
C3 Beihang University; University of Oslo
RP Yue, T (corresponding author), Simula Res Lab, Oslo, Norway.; Yue, T (corresponding author), Univ Oslo, Oslo, Norway.
EM zhhui@buaa.edu.cn; shuai@simula.no; tao@simula.no; shaukat@simula.no;
   liuchao@buaa.edu.cn
RI Liu, Chao/AAA-3493-2022; yue, tao/H-6783-2013
OI Liu, Chao/0000-0002-5286-6944; Yue, Tao/0000-0003-3262-5577
FU Research Council of Norway [249086]; China Scholarship Council [249086];
   RCN; EU; RFF Hovedstaden; EU COST action [MPM4CPS]; Ministry of Industry
   and Information Technology, China [MJ-S-2012-05]
FX Huihui Zhang was supported by the exchange program between the Research
   Council of Norway and China Scholarship Council (project number:
   249086). Tao Yue and Shaukat Ali were supported by RCN funded
   Zen-Configurator project, the EU Horizon 2020 funded project on testing
   cyber-physical systems under uncertainty, RFF Hovedstaden funded MBE-CR
   project, RCN funded MBT4CPS project, RCN funded Certus SFI, and the EU
   COST action MPM4CPS. The work was also partially supported by Ministry
   of Industry and Information Technology, China (project number:
   MJ-S-2012-05). We acknowledge the Abel computer cluster for supporting
   the conducting of the experiments.
CR AAMODT A, 1994, AI COMMUN, V7, P39
   ACKERMAN AF, 1989, IEEE SOFTWARE, V6, P31, DOI 10.1109/52.28121
   Ali S, 2013, IEEE T SOFTWARE ENG, V39, P1376, DOI 10.1109/TSE.2013.17
   Ali S, 2010, IEEE T SOFTWARE ENG, V36, P742, DOI 10.1109/TSE.2009.52
   Allenby K, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P228
   Anda B., 2002, SEKE 02, P127
   [Anonymous], FACILITATING REQUIRE
   [Anonymous], 2011, BUSINESS PROCESS MOD
   [Anonymous], 1989, CHOICE REV ONLINE, DOI DOI 10.5860/CHOICE.27-0936
   [Anonymous], 1998, Biological Sequence Analysis: Probabilistic Models of Proteins and Nucleic Acids
   [Anonymous], 2011, INT ENCY STAT SCI
   [Anonymous], 2004, Wiley InterScience electronic collection.
   [Anonymous], 1997, ACM SIGACT NEWS
   Arcuri A, 2013, SOFTW TEST VERIF REL, V23, P119, DOI 10.1002/stvr.457
   Arcuri A, 2011, LECT NOTES COMPUT SC, V6956, P33, DOI 10.1007/978-3-642-23716-4_6
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Arcuri A, 2009, 1ST INTERNATIONAL SYMPOSIUM ON SEARCH BASED SOFTWARE ENGINEERING, PROCEEDINGS, P113, DOI 10.1109/SSBSE.2009.16
   Aurum A, 2002, SOFTW TEST VERIF REL, V12, P133, DOI 10.1002/stvr.243
   Bagnall AJ, 2001, INFORM SOFTWARE TECH, V43, P883, DOI 10.1016/S0950-5849(01)00194-X
   Baker P, 2006, PROC IEEE INT CONF S, P176
   Basili V. R., 1996, Empirical Software Engineering, V1, P133, DOI 10.1007/BF00368702
   Bernández B, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P257, DOI 10.1109/METRIC.2004.1357908
   Bernárdez B, 2004, J RES PRACT INF TECH, V36, P247
   Blok MC, 1998, 1998 ASIA PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P196, DOI 10.1109/APSEC.1998.733719
   Bonferroni Carlo E., 1936, PUBBLICAZIONI R I SU
   Capozucca A, 2011, REQUIREMENTS DEFINIT
   Carlshamre P., 2002, Requirements Engineering, V7, P139, DOI 10.1007/s007660200010
   Cartaxo EG, 2011, SOFTW TEST VERIF REL, V21, P75, DOI 10.1002/stvr.413
   Cox K, 2004, J RES PRACT INF TECH, V36, P211
   Cox K, 2004, UNSWCSETR0414
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Deb K., 1995, Complex Systems, V9, P431
   Deb K., 2001, MULTIOBJECTIVE OPTIM
   del Sagrado J, 2015, EMPIR SOFTW ENG, V20, P577, DOI 10.1007/s10664-013-9287-3
   Denger C, 2005, COMPUT SCI-RES DEV, V20, P11, DOI 10.1007/s00450-005-0198-4
   Dong G, 2007, SPRINGER SCI BUS MED, V33, DOI [10.1007/978-0-387-69937-0, DOI 10.1007/978-0-387-69937-0]
   Droste S, 2002, THEOR COMPUT SCI, V276, P51, DOI 10.1016/S0304-3975(01)00182-7
   Durán A, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P165, DOI 10.1109/ICRE.2002.1048519
   Durillo JJ, 2011, ADV ENG SOFTW, V42, P760, DOI 10.1016/j.advengsoft.2011.05.014
   FAGAN ME, 1986, IEEE T SOFTWARE ENG, V12, P744, DOI 10.1109/TSE.1986.6312976
   FAGAN ME, 1976, IBM SYST J, V15, P182, DOI 10.1147/sj.153.0182
   Fantechi A., 2003, Requirements Engineering, V8, P161, DOI 10.1007/s00766-003-0174-0
   Finkelstein A, 2009, REQUIR ENG, V14, P231, DOI 10.1007/s00766-009-0075-y
   Fusaro P., 1997, Empirical Software Engineering, V2, P39, DOI 10.1023/A:1009742216007
   Gilb Tom, 1993, Software inspections
   Gomaa H, 2001, PROC INT CONF SOFTW, P737
   Greer D, 2004, INFORM SOFTWARE TECH, V46, P243, DOI 10.1016/j.infsof.2003.07.002
   HAIMES YY, 1971, IEEE T SYST MAN CYB, VSMC1, P296
   Hajri I, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P338, DOI 10.1109/MODELS.2015.7338265
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Harman M., 2009, TR0903 KINGS COLL LO
   Harman M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P342, DOI 10.1109/FOSE.2007.29
   Harman M, 2010, IEEE T SOFTWARE ENG, V36, P226, DOI 10.1109/TSE.2009.71
   Hemmati Hadi, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P141, DOI 10.1109/ISSRE.2010.9
   Hemmati H, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2430536.2430540
   Henard C, 2014, IEEE T SOFTWARE ENG, V40, P650, DOI 10.1109/TSE.2014.2327020
   Holland I.H., 1975, ADAPTATION NATURAL A
   IEC, 2001, 618822001 IEC
   IEEE, 1998, 8301998 IEEE
   Jaccard P, 1901, B SOC VAUDOISE SCI N, V3
   Jacobson I., 2011, USE CASE 2 0 GUIDE S
   Jedlitschka A., 2008, Guide to advanced empirical software engineering, P201, DOI DOI 10.1007/978-1-84800-044-5_8
   Karim MR, 2014, LECT NOTES COMPUT SC, V8636, P123
   Kendall MG, 1938, BIOMETRIKA, V30, P81, DOI 10.2307/2332226
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kollanus S., 2009, Open Softw Eng J, V3, P15, DOI [10.2174/1874107X00903010015, DOI 10.2174/1874107X00903010015]
   KOREL B, 1990, IEEE T SOFTWARE ENG, V16, P870, DOI 10.1109/32.57624
   KRUSKAL WH, 1952, J AM STAT ASSOC, V47, P583, DOI 10.1080/01621459.1952.10483441
   Kumari A. C., 2012, 2012 International Conference on Advances in Engineering, Science and Management (ICAESM), P782
   Laitenberger O., 2002, HDB SOFTWARE ENG KNO, P517
   Ledru Y, 2009, IEEE INT CONF AUTOM, P510, DOI 10.1109/ASE.2009.23
   Li C, 2010, REQUIR ENG, V15, P375, DOI 10.1007/s00766-010-0104-x
   Li YY, 2016, INT J POLYM SCI, V2016, DOI 10.1155/2016/8769360
   MARTIN J, 1990, COMMUN ACM, V33, P225, DOI 10.1145/75577.75587
   Miller J., 1998, Empirical Software Engineering, V3, P37, DOI 10.1023/A:1009735805377
   Naveed A, 2015, COMM COM INF SC, V558, P109, DOI 10.1007/978-3-662-48634-4_8
   NEEDLEMAN SB, 1970, J MOL BIOL, V48, P443, DOI 10.1016/0022-2836(70)90057-4
   Neill CJ, 2003, IEEE SOFTWARE, V20, P40, DOI 10.1109/MS.2003.1241365
   OMG, 2015, MET FAC MOF COR SPEC
   Phalp KT, 2007, SOFTWARE QUAL J, V15, P69, DOI 10.1007/s11219-006-9006-z
   Pohl K, 2010, REQUIREMENTS ENGINEERING: FUNDAMENTALS, PRINCIPLES, AND TECHNIQUES, P1, DOI 10.1007/978-3-642-12578-2
   PORTER AA, 1995, IEEE T SOFTWARE ENG, V21, P563, DOI 10.1109/32.391380
   PRASAD A, 1994, J SYST SOFTWARE, V27, P207, DOI 10.1016/0164-1212(94)90043-4
   Regnell B., 2000, Empirical Software Engineering, V5, P331, DOI 10.1023/A:1009848320066
   RTCA, 2011, Do-332 object-oriented technology and related techniques supplement to do-178c and do-278a
   RTCA, 2011, DO-178C Software Considerations in Airborne Systems and Equipment Certification
   Ruhe G, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P262, DOI 10.1109/ISESE.2003.1237987
   Ruhe G., 2004, International Journal of Hybrid Intelligent Systems, V1, P99
   Saliu M.O., 2007, P 6 JOINT M EUROPEAN, P105, DOI DOI 10.1145/1287624.1287641
   Salton G., 1989, Automatic Text Processing: The Transformation, Analysis, and Retrieval of Information by Computer
   Seong PH, 2009, SPRINGER SER RELIAB, P1, DOI 10.1007/978-1-84800-384-2
   Simao AD, 2006, P INT COMP SOFTW APP, P93
   Sinha Avik, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P155, DOI 10.1109/ICST.2010.19
   Srisura B., 2010, Journal of Theoretical and Applied Information Technology, V19, P68
   Udomchaiporn A, 2006, ASPEC 2006: 13th Asia-Pacific Software Engineering Conference, Proceedings, P113
   van Solingen R., 2002, Goal question metric (gqm) approach, DOI [10.1002/0471028959.sof142, DOI 10.1002/0471028959.SOF142]
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Vavak F, 1996, IEEE C EVOL COMPUTAT, P192, DOI 10.1109/ICEC.1996.542359
   Wang S, 2016, PROC INT CONF SOFTW, P631, DOI 10.1145/2884781.2884880
   WHITLEY D, 1989, PROCEEDINGS OF THE THIRD INTERNATIONAL CONFERENCE ON GENETIC ALGORITHMS, P116
   Wiegers KE, 2002, J OBJECT TECHNOL, V2, P121
   Wilcoxon Frank., 1963, CRITICAL VALUES PROB
   Wohlin C., 2012, Experimentation in Software Engineering
   Xu R, 2005, IEEE T NEURAL NETWOR, V16, P645, DOI 10.1109/TNN.2005.845141
   Yue T, 2014, GECCO'14: PROCEEDINGS OF THE 2014 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1295, DOI 10.1145/2576768.2598309
   Yue T, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2699697
   Yue T, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2430536.2430539
   Yue T, 2009, LECT NOTES COMPUT SC, V5795, P484
   Yue Tao, 2015, P 2015 INT S SOFTWAR, P397
   Zhang H., 2016, J CHEM-NY, V2016, DOI DOI 10.1007/S12374-016-0568-4
   Zhang M, 2014, LECT NOTES COMPUT SC, V8769, P142, DOI 10.1007/978-3-319-11743-0_10
   Zhang YY, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1129
NR 112
TC 7
Z9 7
U1 1
U2 19
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2018
VL 23
IS 1
BP 87
EP 164
DI 10.1007/s10664-017-9500-x
PG 78
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FU9TG
UT WOS:000424199400003
DA 2024-07-18
ER

PT J
AU Shi, Y
   Li, M
   Arndt, S
   Smidts, C
AF Shi, Ying
   Li, Ming
   Arndt, Steven
   Smidts, Carol
TI Metric-based software reliability prediction approach and its
   application
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software reliability prediction; Software metrics; Safety-critical
   software
ID RANKING
AB This paper proposes a software reliability prediction approach based on software metrics. Metrics measurement results are connected to quantitative reliability predictions through defect information and consideration of the operational environments. An application of the proposed approach to a safety critical software deployed in a nuclear power plant is discussed. Results show that the proposed prediction approach could be applied using a variety of software metrics at different stages of the software development life cycle and could be used as an indicator of software quality. Therefore the approach could also guide the development process and help make design decisions. Experiences and lessons learned from the application are also discussed.
C1 [Shi, Ying] NASA, Goddard Space Flight Ctr, Greenbelt, MD USA.
   [Li, Ming; Arndt, Steven] US Nucl Regulatory Commiss, Washington, DC 20555 USA.
   [Smidts, Carol] Ohio State Univ, 281 W Lane Ave, Columbus, OH 43210 USA.
C3 National Aeronautics & Space Administration (NASA); NASA Goddard Space
   Flight Center; University System of Ohio; Ohio State University
RP Smidts, C (corresponding author), Ohio State Univ, 281 W Lane Ave, Columbus, OH 43210 USA.
EM ying.shi@nasa.gov; Ming.Li@nrc.gov; Steven.Arndt@nrc.gov;
   Smidts.1@osu.edu
RI Arndt, Steven/J-7992-2019
OI Arndt, Steven/0000-0003-3468-6138; Smidts, Carol/0000-0001-7867-023X
FU U.S. Nuclear Regulatory Commission (NRC) [NRC-04-09-146]; agency of the
   U.S. Government
FX We would like to acknowledge the support for portions of this research
   through a contract with the U.S. Nuclear Regulatory Commission (NRC)
   (NRC-04-09-146). This paper was prepared as an account of work sponsored
   by an agency of the U.S. Government. Neither the U.S. Government nor any
   agency thereof, nor any of their employees, makes any warranty,
   expressed or implied, or assumes any legal liability or responsibility
   for any third party's use, or the results of such use, of any
   information, apparatus, product, or process disclosed in this report, or
   represents that its use by such third party would not infringe privately
   owned rights. The views expressed in this paper are not necessarily
   those of the U.S. Nuclear Regulatory Commission.
CR [Anonymous], 2011, TECH SALARY SURVEY R
   [Anonymous], 1997, Software metrics: A rigorous and practical approach
   [Anonymous], 1996, HDB SOFTWARE RELIABI
   [Anonymous], 1992, SOFTW CONS AIRB SYST
   BUTLER RW, 1993, IEEE T SOFTWARE ENG, V19, P3, DOI 10.1109/32.210303
   Campbell D.T., 1966, Experimental and quasi-experimental designs for research
   CARD DN, 1988, J SYST SOFTWARE, V8, P185, DOI 10.1016/0164-1212(88)90021-0
   Chapman M, 2002, SOFTWARE METRICS ERR
   Dougherty E.M., 1988, HUMAN RELIABILITY AN
   EMBREY DE, 1983, NUREGCR2986 US NUCL
   Eom HS, 2005, P KNS AUT M
   Fenton N., 1998, IEE Proceedings-Software, V145, P35, DOI 10.1049/ip-sen:19984895
   GAFFNEY JE, 1984, IEEE T SOFTWARE ENG, V10, P459, DOI 10.1109/TSE.1984.5010260
   Garg RK, 2013, SOFTW TEST VERIF REL, V23, P149, DOI 10.1002/stvr.459
   Herrmann D.S., 2000, SOFTWARE SAFETY RELI, VFirst
   Hong-Li Wu, 2010, 2010 2nd IEEE International Conference on Information Management and Engineering (ICIME 2010), P131, DOI 10.1109/ICIME.2010.5478245
   Huang CY, 2011, IEEE T RELIAB, V60, P498, DOI 10.1109/TR.2011.2134350
   IEEE, 2008, IEEE REC PRACT SOFTW
   IEEE, 1988, 9821 IEEE, V982, P1
   International Function Point Users Group, 2004, FUNCT POINT COUNT PR
   Ireson W.G., 1966, RELIABILITY HDB
   Jones C., 1995, MEASURING GLOBAL SOF
   Jones C., 1996, APPL SOFTWARE MEASUR
   Kapur PK, 2012, IEEE T RELIAB, V61, P758, DOI 10.1109/TR.2012.2207531
   Kapur PK, 2011, IEEE T RELIAB, V60, P331, DOI 10.1109/TR.2010.2103590
   Kaufman LM, 1998, NINTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P355, DOI 10.1109/ISSRE.1998.730901
   Kristiansen M, 2011, INT J RELIABILITY QU, V18, P209, DOI 10.1142/S021853931100410X
   Kumar C, 2017, INT J SYST ASSUR ENG, V8, P2109, DOI 10.1007/s13198-014-0326-2
   Lawrence J.D., 1998, ASSESSMENT SOFTWARE
   Lee W, 2011, P INT COMP SOFTW APP, P366, DOI 10.1109/COMPSAC.2011.55
   Li M, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P66, DOI 10.1109/ISSRE.2004.47
   Li M, 2003, IEEE T SOFTWARE ENG, V29, P811, DOI 10.1109/TSE.2003.1232286
   Lyu M R, 2007, FUTURE SOFTWARE ENG
   Malaiya Y. K., 1994, Proceedings. 5th International Symposium on Software Reliability Engineering (Cat. No.94TH8017), P186, DOI 10.1109/ISSRE.1994.341373
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   McCabe T.J., 1982, NATL BUREAU STANDARD, P500
   MILLER KW, 1992, IEEE T SOFTWARE ENG, V18, P33, DOI 10.1109/32.120314
   Misra RB, 2008, 2 INT C SEC SYST INT, V177
   MUNSON JC, 1992, IEEE T SOFTWARE ENG, V18, P423, DOI 10.1109/32.135775
   Murine GE, 1985, 4 ANN IEEE C SOFTW Q, V39
   Musa J, 1992, 3 INT S SOHTW REL EN, V140
   Musa J.D., 1990, SOFTWARE RELIABILITY
   NASA, 2004, 87398 NASA
   Okamura H, 2014, IEEE HI ASS SYS ENGR, P97, DOI 10.1109/HASE.2014.22
   Pandey AK., 2010, International Journal of Computer Applications, V11, P34, DOI [10.5120/1584-2124, DOI 10.5120/1584-2124]
   Pandey AK, 2013, INT J COMPUT APPL, V11, P34
   Reason J., 1991, HUMAN ERROR
   Sandfoss RV, 1997, EIGHTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P110, DOI 10.1109/ISSRE.1997.630852
   Schneidewind NF, 1997, IEEE T RELIAB, V46, P88, DOI 10.1109/24.589933
   Shi Y., 2009, 6 AM NUCL SOC INT TO
   Shi Y, 2007, RELIAB ANAL SYST FAI, V1
   Shi Y, 2010, INT J SYST ASSUR ENG, V1, P36, DOI 10.1007/s13198-010-0009-6
   Smidts C, 2000, NUREGGR0019 USNRC
   Smidts C. S., 2011, NUREGCR7042 US NUCL
   Smidts C, 2009, COMM COM INF SC, V59, P321
   Smidts CS, 2004, NUREGCR6848 US NUCL
   Sterritt R, 2010, 10 IEEE INT C WORKSH, V247
   Stutzke MA, 2001, IEEE T RELIAB, V50, P184, DOI 10.1109/24.963126
   Thomason M.G., 1999, PROPERTIES RARE FAIL
   Tukey J.W, 1953, TECHNICAL REPORT
   Ullah N, 2013, 2013 IEEE EUROCON, P460, DOI 10.1109/EUROCON.2013.6625022
   van Manen S, 2013, INT J QUALITY RELIAB, V31, P183
   Varkoi T, 2013, SOFTWARE PROCESS IMP, P1
   VOAS JM, 1992, IEEE T SOFTWARE ENG, V18, P717, DOI 10.1109/32.153381
   Welker E. L., 1974, Proceedings of the 1974 Annual Reliability and Maintainability Conference, P420
   Yadav D., 2012, International journal of performability engineering, V8, P399, DOI DOI 10.23940/IJPE.12.4.P399.MAG
   Yadav HB, 2017, INT J SYST ASSUR ENG, V8, P2097, DOI 10.1007/s13198-014-0325-3
   Yadav HB, 2015, INFORM SOFTWARE TECH, V63, P44, DOI 10.1016/j.infsof.2015.03.001
   Yadav HB, 2015, 4 INT C SOFT COMP PR, P122
   Zhang X, 2000, J SYST STWARE, V50, P14
NR 70
TC 9
Z9 9
U1 2
U2 25
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2017
VL 22
IS 4
BP 1579
EP 1633
DI 10.1007/s10664-016-9425-9
PG 55
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FB6ZI
UT WOS:000406290500001
DA 2024-07-18
ER

PT J
AU Kifetew, FM
   Tiella, R
   Tonella, P
AF Kifetew, Fitsum Meshesha
   Tiella, Roberto
   Tonella, Paolo
TI Generating valid grammar-based test inputs by means of genetic
   programming and annotated grammars
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Grammar based testing; Genetic programming; Grammar annotations
AB Automated generation of system level tests for grammar based systems requires the generation of complex and highly structured inputs, which must typically satisfy some formal grammar. In our previous work, we showed that genetic programming combined with probabilities learned from corpora gives significantly better results over the baseline (random) strategy. In this work, we extend our previous work by introducing grammar annotations as an alternative to learned probabilities, to be used when finding and preparing the corpus required for learning is not affordable. Experimental results carried out on six grammar based systems of varying levels of complexity show that grammar annotations produce a higher number of valid sentences and achieve similar levels of coverage and fault detection as learned probabilities.
C1 [Kifetew, Fitsum Meshesha; Tiella, Roberto; Tonella, Paolo] Fdn Bruno Kessler IRST, Trento, Italy.
C3 Fondazione Bruno Kessler; FBK-ICT - Center for Information &
   Communication Technology
RP Kifetew, FM (corresponding author), Fdn Bruno Kessler IRST, Trento, Italy.
EM kifetew@fbk.eu; tiella@fbk.eu; tonella@fbk.eu
RI Kifetew, Fitsum Meshesha/AFM-7847-2022; Tonella, Paolo/C-1702-2015
OI Kifetew, Fitsum Meshesha/0000-0003-1860-8666; 
CR [Anonymous], 2010, Proceedings of the 19th International Symposium on Software Testing and Analysis, ISSTA'10
   Beyene M., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P270, DOI 10.1109/ICST.2012.107
   BOOTH TL, 1973, IEEE T COMPUT, VC 22, P442, DOI 10.1109/T-C.1973.223746
   Claessen K, 2011, ACM SIGPLAN NOTICES, V46, P53, DOI 10.1145/1988042.1988046
   Duchon P, 2004, COMB PROBAB COMPUT, V13, P577, DOI 10.1017/S0963548304006315
   Feldt R, 2013, PROC INT SYMP SOFTW, P350, DOI 10.1109/ISSRE.2013.6698888
   Fraser G, 2013, IEEE T SOFTWARE ENG, V39, P276, DOI 10.1109/TSE.2012.14
   Fraser Gordon, 2011, PROC 19 ACM SIGSOFT, P416, DOI 10.1145/2025113.2025179
   Godefroid P, 2008, PLDI'08: PROCEEDINGS OF THE 2008 SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN & IMPLEMENTATION, P206, DOI 10.1145/1375581.1375607
   Grune D, 1990, SOFTWARE PRACTICE EX
   Guo HF, 2014, SOFTWARE PRACTICE EX
   Hennessy M., 2005, PROC 20 IEEEACM INT, P104
   Kifetew FM, 2014, LECT NOTES COMPUT SC, V8636, P138
   Lari K., 1990, Computer Speech and Language, V4, P35, DOI 10.1016/0885-2308(90)90022-X
   Majumdar Rupak, 2007, 22 IEEE ACM INT C AU, P134
   MAURER PM, 1990, IEEE SOFTWARE, V7, P50, DOI 10.1109/52.56422
   McKay RI, 2010, GENET PROGRAM EVOL M, V11, P365, DOI 10.1007/s10710-010-9109-y
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   Pargas R. P., 1999, Software Testing, Verification and Reliability, V9, P263, DOI 10.1002/(SICI)1099-1689(199912)9:4<263::AID-STVR190>3.0.CO;2-Y
   Poulding S, 2013, GECCO'13: PROCEEDINGS OF THE 2013 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1477
   Purdom P., 1972, BIT (Nordisk Tidskrift for Informationsbehandling), V12, P366, DOI 10.1007/BF01932308
NR 21
TC 16
Z9 17
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2017
VL 22
IS 2
BP 928
EP 961
DI 10.1007/s10664-015-9422-4
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ES9PL
UT WOS:000399891400011
DA 2024-07-18
ER

PT J
AU Rakha, MS
   Shang, WY
   Hassan, AE
AF Rakha, Mohamed Sami
   Shang, Weiyi
   Hassan, Ahmed E.
TI Studying the needed effort for identifying duplicate issues
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Mining software repositories; Automated detection of duplicate issues;
   Software issue reports; Effort based analysis; Duplicate bug reports
ID MODELS
AB Many recent software engineering papers have examined duplicate issue reports. Thus far, duplicate reports have been considered a hindrance to developers and a drain on their resources. As a result, prior research in this area focuses on proposing automated approaches to accurately identify duplicate reports. However, there exists no studies that attempt to quantify the actual effort that is spent on identifying duplicate issue reports. In this paper, we empirically examine the effort that is needed for manually identifying duplicate reports in four open source projects, i.e., Firefox, SeaMonkey, Bugzilla and Eclipse-Platform. Our results show that: (i) More than 50 % of the duplicate reports are identified within half a day. Most of the duplicate reports are identified without any discussion and with the involvement of very few people; (ii) A classification model built using a set of factors that are extracted from duplicate issue reports classifies duplicates according to the effort that is needed to identify them with a precision of 0.60 to 0.77, a recall of 0.23 to 0.96, and an ROC area of 0.68 to 0.80; and (iii) Factors that capture the developer awareness of the duplicate issue's peers (i.e., other duplicates of that issue) and textual similarity of a new report to prior reports are the most influential factors in our models. Our findings highlight the need for effort-aware evaluation of approaches that identify duplicate issue reports, since the identification of a considerable amount of duplicate reports (over 50 %) appear to be a relatively trivial task for developers. To better assist developers, research on identifying duplicate issue reports should put greater emphasis on assisting developers in identifying effort-consuming duplicate issues.
C1 [Rakha, Mohamed Sami; Shang, Weiyi; Hassan, Ahmed E.] Queens Univ, Sch Comp, SAIL, Kingston, ON, Canada.
C3 Queens University - Canada
RP Rakha, MS (corresponding author), Queens Univ, Sch Comp, SAIL, Kingston, ON, Canada.
EM rakha@cs.queensu.ca; swy@cs.queensu.ca; ahmed@cs.queensu.ca
RI Hassan, Ahmed/AAB-7241-2019; KHALIFA, AHMED khalifa/HKF-2246-2023; Ali,
   Ahmed/HOF-4672-2023
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; 
CR AGGARWAL K, 2015, SANER 2005, P211
   Alipour A, 2013, IEEE WORK CONF MIN S, P183, DOI 10.1109/MSR.2013.6624026
   Angrist JD, 2009, MOSTLY HARMLESS ECONOMETRICS: AN EMPIRICISTS COMPANION, P1
   [Anonymous], 2007, P 2014 WORKSH ECL TE, DOI 10.1145/1328279.1328284
   Anvik John, 2005, P 2005 OOPSLA WORKSH, P35
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Bertram D, 2010, 2010 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, P291
   Bettenburg N., 2008, P 16 ACM SIGSOFT INT, P308
   Bettenburg N, 2008, PROC IEEE INT CONF S, P337, DOI 10.1109/ICSM.2008.4658082
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Cavalcanti Yguarata Cerqueira, 2010, 2010 Proceedings of 24th Brazilian Symposium on Software Engineering (SBES 2010), P148, DOI 10.1109/SBES.2010.12
   Cavalcanti YC, 2013, SOFTWARE QUAL J, V21, P39, DOI 10.1007/s11219-011-9164-5
   Chavent M, 2015, VARIABLE CLUSTERING
   Davidson JL, 2011, S VIS LANG HUM CEN C, P101, DOI 10.1109/VLHCC.2011.6070386
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   Ghotra B, 2015, ICSE 2015
   Jalbert N, 2008, I C DEPEND SYS NETWO, P52, DOI 10.1109/DSN.2008.4630070
   Jiang Y., 2008, DEFECTS 08 P 2008 WO, P16, DOI [DOI 10.1145/1390817.1390822, 10.1145/1390817.1390822]
   Kamei Y., 2010, Proceedings of the 26th International Conference on Software Maintenance, P1, DOI 10.1109/ICSM.2010.5609530
   Kampstra P., 2008, BEANPLOT BOXPLOT ALT
   Kanaris I, 2007, INT J ARTIF INTELL T, V16, P1047, DOI 10.1142/S0218213007003692
   Kanerva P, 2000, PROCEEDINGS OF THE TWENTY-SECOND ANNUAL CONFERENCE OF THE COGNITIVE SCIENCE SOCIETY, P1036
   Kaushik N, 2012, EUR CON SFTWR MTNCE, P159, DOI 10.1109/CSMR.2012.78
   Koponen T, 2006, INT FED INFO PROC, V203, P195
   Lazar A., 2014, P 11 WORKING C MININ, P308
   Lerch J, 2013, EUR CON SFTWR MTNCE, P69, DOI 10.1109/CSMR.2013.17
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Liaw A, 2014, RANDOM FOREST R PACK
   McIntosh S, 2016, EMPIR SOFTW ENG, V21, P2146, DOI 10.1007/s10664-015-9381-9
   Mitchell M.W., 2011, OPEN J STAT, V1, P205, DOI [DOI 10.4236/OJS.2011.13024, 10.4236/ojs.2011.13024]
   Mockus A, 2000, BELL LABS TECH J, V5, P169, DOI 10.1002/bltj.2229
   Nagwani N.K., 2009, Proceedings of the International Conference on Advances in Computing, Communication and Control, P202
   Neter J., 1996, APPL LINEAR STAT MOD, V81, P1126
   Prifti T., 2011, Proceedings of the 7th International Conference on Predictive Models in Software Engineering, p8:1, DOI DOI 10.1145/2020390.2020398
   Robertson S., 2004, P 13 ACM INT C INF K, P42
   Robnik-Sikonja M, 2004, LECT NOTES COMPUT SC, V3201, P359
   Runeson P, 2007, PROC INT CONF SOFTW, P499
   SCOTT AJ, 1974, BIOMETRICS, V30, P507, DOI 10.2307/2529204
   Sun Chengnian, 2010, P 32 ACMIEEE INT C S, V1, P45, DOI [DOI 10.1145/1806799, 10.1145/1806799.1806811]
   Sun C, 2011, INT J CHEM ENG, V2011, DOI 10.1155/2011/545234
   Sureka A, 2010, ASIA PAC SOFWR ENG, P366, DOI 10.1109/APSEC.2010.49
   Tantithamthavorn C, 2015, ICSE 2015
   Wang XY, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P461, DOI 10.1145/1368088.1368151
   Xavier R, 2015, PROC R PACKAGE
NR 45
TC 24
Z9 25
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2016
VL 21
IS 5
BP 1960
EP 1989
DI 10.1007/s10664-015-9404-6
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DU2BX
UT WOS:000382017100003
DA 2024-07-18
ER

PT J
AU Myllärniemi, V
   Savolainen, J
   Raatikainen, M
   Männistö, T
AF Myllarniemi, Varvana
   Savolainen, Juha
   Raatikainen, Mikko
   Mannisto, Tomi
TI Performance variability in software product lines: proposing theories
   from a case study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Case study; Software product line; Variability; Software architecture
ID SYSTEMATIC LITERATURE-REVIEWS; REQUIREMENTS
AB In the software product line research, product variants typically differ by their functionality and quality attributes are not purposefully varied. The goal is to study purposeful performance variability in software product lines, in particular, the motivation to vary performance, and the strategy for realizing performance variability in the product line architecture. The research method was a theory-building case study that was augmented with a systematic literature review. The case was a mobile network base station product line with capacity variability. The data collection, analysis and theorizing were conducted in several stages: the initial case study results were augmented with accounts from the literature. We constructed three theoretical models to explain and characterize performance variability in software product lines: the models aim to be generalizable beyond the single case. The results describe capacity variability in a base station product line. Thereafter, theoretical models of performance variability in software product lines in general are proposed. Performance variability is motivated by customer needs and characteristics, by trade-offs and by varying operating environment constraints. Performance variability can be realized by hardware or software means; moreover, the software can either realize performance differences in an emergent way through impacts from other variability or by utilizing purposeful varying design tactics. The results point out two differences compared with the prevailing literature. Firstly, when the customer needs and characteristics enable price differentiation, performance may be varied even with no trade-offs or production cost differences involved. Secondly, due to the dominance of feature modeling, the literature focuses on the impact management realization. However, performance variability can be realized through purposeful design tactics to downgrade the available software resources and by having more efficient hardware.
C1 [Myllarniemi, Varvana; Raatikainen, Mikko] Aalto Univ, POB 15400, FI-00076 Espoo, Finland.
   [Savolainen, Juha] Danfoss Power Elect AS, Nordborg, Denmark.
   [Mannisto, Tomi] Univ Helsinki, Dept Comp Sci, Software Engn, Helsinki, Finland.
C3 Aalto University; University of Helsinki
RP Myllärniemi, V (corresponding author), Aalto Univ, POB 15400, FI-00076 Espoo, Finland.
EM varvana.myllarniemi@aalto.fi; juhaerik.savolainen@danfoss.com;
   mikko.raatikainen@aalto.fi; tomi.mannisto@cs.helsinki.fi
RI Männistö, Tomi/I-3999-2013; Männistö, Tomi/ABC-7781-2021; Llorente,
   Ignacio Martin/B-2093-2009
OI Männistö, Tomi/0000-0001-7470-5183; Männistö, Tomi/0000-0001-7470-5183;
   Raatikainen, Mikko/0000-0002-2410-0722
CR Ahnassay A, 2013, TRLS3130084R4T SEM R
   [Anonymous], 1990, QUALITATIVE EVALUATI, DOI DOI 10.1002/NUR.4770140111
   [Anonymous], 2001, 912612001 ISOIEC
   [Anonymous], 1998, 10611998 IEEE
   [Anonymous], 1990, IEEE Std 610.12-1990, V42, P112, DOI [10.1109/IEEESTD.1990.101064, DOI 10.1109/IEEESTD.1990.101064]
   [Anonymous], 2005, Pricing and Revenue Optimization
   Bagheri E, 2010, SOFTW PROD LIN C
   Bagheri E, 2012, J SOFTW-EVOL PROC, V24, P375, DOI 10.1002/smr.534
   Barbacci M., 1995, CMUSEI95TR021
   Bartholdt J, 2009, INT C SOFTW ENG ADV, DOI [10.1109/ICSEA.2009.59, DOI 10.1109/ICSEA.2009.59]
   Bass L., 2013, SOFTWARE ARCHITECTUR
   Belobaba P., 2009, The global airline industry
   Benavides D, 2005, LECT NOTES COMPUT SC, V3520, P491
   Boehm B.W., 1978, Characteristics of Software Quality
   Bosch J., 2000, Design and Use of Software Architectures: Adopting and Evolving a Product-Line Approach
   Botterweck G, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P77, DOI 10.1109/SPLC.2008.32
   Bu T, 2006, IEEE T MOBILE COMPUT, V5, P1103, DOI 10.1109/TMC.2006.108
   Cavalcanti RdO, 2011, JOINT C QUAL SOFTW A
   Czarnecki K., 2005, Software Process Improvement and Practice, V10, P7, DOI 10.1002/spip.213
   Dubé L, 2003, MIS QUART, V27, P597
   ETXEBERRIA L, 2007, VAMOS
   Etxeberria L, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P243, DOI 10.1109/SPLC.2008.37
   Fettke P, 2010, BUS INFORM SYST ENG+, V2, P347, DOI 10.1007/s12599-010-0126-4
   Galster M, 2012, WORK IEEE IFIP C SOF, DOI [10.1109/WICSA-ECSA.212.43, DOI 10.1109/WICSA-ECSA.212.43]
   Galster M, 2014, IEEE T SOFTWARE ENG, V40, P282, DOI 10.1109/TSE.2013.56
   Galster M, 2011, 2011 9TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P171, DOI 10.1109/WICSA.2011.30
   Gimenes IMD, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P265, DOI 10.1109/SPLC.2008.10
   Gonzalez-Baixauli B, 2007, VAMOS
   Gregor S, 2006, MIS QUART, V30, P611
   Guo JM, 2011, J SYST SOFTWARE, V84, P2208, DOI 10.1016/j.jss.2011.06.026
   Hallsteinsen S, 2006, SOFTWARE PRODUCT LIN
   Hallsteinsen S, 2003, SOFTWARE PRODUCT FAM, DOI DOI 10.1007/978-3-540-24667-119
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Holma Harri., 2000, WCDMA UMTS RADIO ACC
   Ishida Y, 2007, SOFTW PROD LIN C
   ISO/IEC, 2011, ISO/IEC 25010:2011 Systems and software engineering-Systems and Software Quality Requirements and Evaluation (SQuaRE)-System and Software Quality models
   Jaring M, 2004, SOFTWARE PRACT EXPER, V34, P69, DOI 10.1002/spe.558
   Jaring M, 2002, SOFTW PROD LIN C
   Jarzabek S, 2006, IEE P SOFTW, V153
   Kang K, 2002, IEEE SOFTW, V19
   Kang Kyo C, 1990, Technical Report
   Karatas AS, 2010, SOFTW PROD LIN C
   Kishi T, 2001, AS PAC SOFTW ENG C, DOI [10.1109/APSEC.2001.991466, DOI 10.1109/APSEC.2001.991466]
   Kishi T, 2002, SOFTW PROD LIN C
   Kishi T, 2000, SOFTW PROD LIN C
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kozuka N, 2011, SOFTW PROD LIN C
   Kuusela J, 2000, INT C SOFTW ENG ICSE
   Lee AS, 2003, INFORM SYST RES, V14, P221, DOI 10.1287/isre.14.3.221.16560
   Lee K, 2010, SOFTW PROD LIN C
   Linden F, 2003, SOFTWARE PRODUCT FAM
   Matinlassi M, 2005, WORK IEEE IFIP C SOF
   McCall JA, 1977, US ROME AIR DEV CTR
   Mellado D, 2008, COMPUT STAND INTER, V30, P361, DOI 10.1016/j.csi.2008.03.004
   Myllarniemi V, 2013, SOFTW PROD LIN C
   Myllarniemi V, 2006, INT C SOFTW REUS
   Myllarniemi V, 2006, QUALITY SOFTWARE ARC, V2
   Myllarniemi V, 2012, SOFTW PROD LIN C
   Mylopoulos J, 2001, IEEE SOFTWARE, V18, P92, DOI 10.1109/52.903174
   Mylopoulos J, 1992, IEEE T SOFTW ENG, V18
   Niemela E, 2004, SOFTW PROD LIN C
   Niemela E, 2007, INF SOFTW TECHNOLOGY, V49
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Ognjanovic I, 2012, INT C SERV COMP SCC
   Olaechea R, 2012, 4 INT WOKSH NONF SYS
   Regnell B, 2008, IEEE SOFTWARE, V25, P42, DOI 10.1109/MS.2008.48
   Roos-Frantz F, 2012, SOFTWARE QUAL J, V20, P519, DOI 10.1007/s11219-011-9156-5
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Shadish W. R., 2002, EXPT QUASI EXPT DESI
   Shaw M., 2002, International Journal on Software Tools for Technology Transfer, V4, P1, DOI 10.1007/s10009-002-0083-4
   Siegmund N, 2012, SOFTW QUALITY J, V20
   Siegmund N, 2013, INFORM SOFTWARE TECH, V55, P491, DOI 10.1016/j.infsof.2012.07.020
   Siegmund N, 2012, PROC INT CONF SOFTW, P167, DOI 10.1109/ICSE.2012.6227196
   Sincero J, 2009, HAW INT C SYST SCI H, DOI [10.1109/HICSS.2009.472, DOI 10.1109/HICSS.2009.472]
   Sincero J, 2010, ASIA PAC SOFWR ENG, P147, DOI 10.1109/APSEC.2010.26
   Sinnema M, 2006, ENG COMPUTER BASED S
   SMITH CU, 2002, PERFORMANCE SOLUTION
   Soltani S, 2012, SOFTW PROD LIN C
   Stol KJ, 2013, SEMAT WORKSH GEN THE
   Strauss E, 1998, CLIN ORTHOP RELAT R, P2
   Svahnberg M, 2005, SOFTW PRACTICE EXPER, V35
   Svensson RB, 2012, IEEE T SOFTWARE ENG, V38, P923, DOI 10.1109/TSE.2011.47
   Thiel S, 2002, IEEE SOFTWARE, V19, P66, DOI 10.1109/MS.2002.1020289
   Thum T, 2014, ACM COMPUT IN PRESS, V47
   Tun TT, 2009, SOFTW PROD LIN C
   Urquhart C, 2010, INFORM SYST J, V20, P357, DOI 10.1111/j.1365-2575.2009.00328.x
   van Gurp J, 2001, WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P45, DOI 10.1109/WICSA.2001.948406
   White J, 2007, SOFTW PROD LIN C
   White J, 2009, J SYST SOFTW, V82
   Wohlin C, 2014, C EV ASS SOFTW ENG
   Wohlin C, 2013, INFORM SOFTWARE TECH, V55, P919, DOI 10.1016/j.infsof.2013.02.002
   Yin R., 1994, CASE STUDY RES DESIG
   Yu Y, 2008, SAC
NR 93
TC 5
Z9 5
U1 0
U2 10
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2016
VL 21
IS 4
BP 1623
EP 1669
DI 10.1007/s10664-014-9359-z
PG 47
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DQ2VF
UT WOS:000379060700007
DA 2024-07-18
ER

PT J
AU Wang, S
   Ali, S
   Gotlieb, A
   Liaaen, M
AF Wang, Shuai
   Ali, Shaukat
   Gotlieb, Arnaud
   Liaaen, Marius
TI A systematic test case selection methodology for product lines: results
   and insights from an industrial case study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Test case selection; Product line; Feature model; Component family model
ID REGRESSION; SUPPORT
AB In the context of product lines, test case selection aims at obtaining a set of relevant test cases for a product from the entire set of test cases available for a product line. While working on a research-based innovation project on automated testing of product lines of Video Conferencing Systems (VCSs) developed by Cisco, we felt the need to devise a cost-effective way of selecting relevant test cases for a product. To fulfill such need, we propose a systematic and automated test selection methodology using: 1) Feature Model for Testing (FM_T) to capture commonalities and variabilities of a product line; 2) Component Family Model for Testing (CFM_T) to model the structure of test case repository; 3) A tool to automatically build restrictions from CFM_T to FM_T and traces from CFM_T to the actual test cases. Using our methodology, a test engineer is only required to select relevant features through FM_T at a higher level of abstraction for a product and the corresponding test cases will be obtained automatically. We evaluate our methodology by applying it to a VCS product line called Saturn with seven commercial products and the results show that our methodology can significantly reduce cost measured as test selection time and at the same time achieves higher effectiveness (feature coverage, feature pairwise coverage and fault detection) as compared with the current manual process. Moreover, we conduct a questionnaire-based study to solicit the views of test engineers who are involved in developing FM_T and CFM_T. The results show that test engineers are positive about adapting our methodology in their current practice. Finally, we present a set of lessons learnt while applying product line engineering at Cisco for test case selection.
C1 [Wang, Shuai; Ali, Shaukat; Gotlieb, Arnaud] Certus Software V&V Ctr, Simula Res Lab, Oslo, Norway.
   [Wang, Shuai] Univ Oslo, Dept Informat, Oslo, Norway.
   [Liaaen, Marius] Cisco Syst Inc, Oslo, Norway.
   [Wang, Shuai] POB 134, Lysaker, Norway.
C3 University of Oslo
RP Wang, S (corresponding author), Certus Software V&V Ctr, Simula Res Lab, Oslo, Norway.; Wang, S (corresponding author), Univ Oslo, Dept Informat, Oslo, Norway.; Wang, S (corresponding author), POB 134, Lysaker, Norway.
EM shuai@simula.no; shaukat@simula.no; arnaud@simula.no; marliaae@cisco.com
CR Alferez Mauricio, 2011, Top Productivity through Software Reuse. Proceedings of the 12th International Conference on Software Reuse, ICSR 2011, P20, DOI 10.1007/978-3-642-21347-2_3
   [Anonymous], CMUSEI2001TR022
   [Anonymous], 2012, P VAR YOU WORKSH VAR, DOI DOI 10.1145/2425415.2425422
   [Anonymous], CISC TEL COD C90 DAT
   Barros Mrciode Oliveira., 2011, RELATE DIA, V5
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Beuche D, 2011, P 15 INT SOFTW PROD, V2, P1
   Bible J, 2001, ACM T SOFTW ENG METH, V10, P149, DOI 10.1145/367008.367015
   Cabot J, 2014, J SYST SOFTWARE, V93, P1, DOI 10.1016/j.jss.2014.03.023
   Chen Yanping., 2002, P 2002 C CTR ADV STU, P1
   Cohen M.B., 2006, P ISSTA 2006 WORKSHO, P53, DOI DOI 10.1145/1147249.1147257
   Czarnecki K, 2005, LECT NOTES COMPUT SC, V3676, P422
   Czarnecki K., 2006, GPCE, P211
   Czarnecki K, 2006, SPLC 2006: 10TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P41, DOI 10.1109/SPLINE.2006.1691576
   Egyed A., 2006, 28th International Conference on Software Engineering Proceedings, P381, DOI 10.1145/1134285.1134339
   Engstrom E, 2010, 2010 3 INT C, P512
   Engström E, 2010, INFORM SOFTWARE TECH, V52, P14, DOI 10.1016/j.infsof.2009.07.001
   Gent IP, 2006, FRONT ARTIF INTEL AP, V141, P98
   Graves TL, 2001, ACM T SOFTW ENG METH, V10, P184, DOI 10.1145/367008.367020
   Harrold MJ, 1988, SOFTW MAINT 1988 P C, P362
   HARTMANN J, 1990, IEEE SOFTWARE, V7, P31, DOI 10.1109/52.43047
   Heidenreich F, 2010, LECT NOTES COMPUT SC, V6210, P69
   Heidenreich F, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P943
   Kang K. C., 1990, Technical Report
   Lauenroth K, 2008, INT REQUIR ENG CONF, P193, DOI 10.1109/RE.2008.21
   Mansour N, 2001, J SYST SOFTWARE, V57, P79, DOI 10.1016/S0164-1212(00)00119-9
   Muccini H., 2003, ELECT NOTES THEOR CO, V82, P99
   Nebut C., 2006, Software Product Lines, P447
   Orso A, 2001, PROC IEEE INT CONF S, P716, DOI 10.1109/ICSM.2001.972790
   Puresystems G, 2006, VARIANT MANAGEMENT P
   Scheidemann KD, 2006, SPLC 2006: 10TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P75, DOI 10.1109/SPLINE.2006.1691579
   Sheskin DJ., 2003, HDB PARAMETRIC NONPA, DOI [10.1201/9781420036268, DOI 10.1201/9781420036268]
   Thaker Sahil., 2007, P 6 INT C GENERATIVE, P95
   Vierhauser M., 2010, P IEEEACM INT C AUTO, P63
   Wang S, 2013, INT CONF QUAL SOFTW, P75, DOI 10.1109/QSIC.2013.51
   Wang S, 2013, LECT NOTES COMPUT SC, V8107, P237, DOI 10.1007/978-3-642-41533-3_15
   Wang SA, 2013, GECCO'13: PROCEEDINGS OF THE 2013 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1493
   Warners JP, 1998, INFORM PROCESS LETT, V68, P63, DOI 10.1016/S0020-0190(98)00144-6
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Yih-Farn C, 1994, P ICSE 16 16 INT C, P211
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Zschaler S, 2010, LECT NOTES COMPUT SC, V5969, P82
NR 42
TC 15
Z9 16
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2016
VL 21
IS 4
BP 1586
EP 1622
DI 10.1007/s10664-014-9345-5
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DQ2VF
UT WOS:000379060700006
DA 2024-07-18
ER

PT J
AU Rosen, C
   Shihab, E
AF Rosen, Christoffer
   Shihab, Emad
TI What are mobile developers asking about? A large scale study using stack
   overflow
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Mobile issues; Mobile software development; Stack overflow
ID TOPICS
AB The popularity of mobile devices has been steadily growing in recent years. These devices heavily depend on software from the underlying operating systems to the applications they run. Prior research showed that mobile software is different than traditional, large software systems. However, to date most of our research has been conducted on traditional software systems. Very little work has focused on the issues that mobile developers face. Therefore, in this paper, we use data from the popular online Q&A site, Stack Overflow, and analyze 13,232,821 posts to examine what mobile developers ask about. We employ Latent Dirichlet allocation-based topic models to help us summarize the mobile-related questions. Our findings show that developers are asking about app distribution, mobile APIs, data management, sensors and context, mobile tools, and user interface development. We also determine what popular mobile-related issues are the most difficult, explore platform specific issues, and investigate the types (e.g., what, how, or why) of questions mobile developers ask. Our findings help highlight the challenges facing mobile developers that require more attention from the software engineering research and development communities in the future and establish a novel approach for analyzing questions asked on Q&A forums.
C1 [Rosen, Christoffer] Rochester Inst Technol, Dept Software Engn, Rochester, NY 14623 USA.
   [Shihab, Emad] Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ, Canada.
C3 Rochester Institute of Technology; Concordia University - Canada
RP Shihab, E (corresponding author), Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ, Canada.
EM cbr4830@rit.edu; emadshihab@gmail.com
CR Agarwal S, 2010, HOTNETS 9
   Agarwal S, 2010, WORKSH HOT TOP NETW
   Al-Kofahi J.M., 2010, SOFTW MAINT ICSM 201, P1
   Allamanis M, 2013, IEEE WORK CONF MIN S, P53, DOI 10.1109/MSR.2013.6624004
   Amalfitano D., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P252, DOI 10.1109/ICSTW.2011.77
   [Anonymous], 2012, INSIGHT BERG
   [Anonymous], 2012, THESIS
   Bacchelli Alberto., 2013, The 10th Working Conference on Mining Software Repositories
   Bajaj K, 2014, P 11 WORK C MIN SOFT, P112
   Barua A, 2014, EMPIR SOFTW ENG, V19, P619, DOI 10.1007/s10664-012-9231-y
   Beyer S, 2014, PROC IEEE INT CONF S, P531, DOI 10.1109/ICSME.2014.88
   Biggers LR, 2014, EMPIR SOFTW ENG, V19, P465, DOI 10.1007/s10664-012-9224-x
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Dagenais B, 2009, PROC INT CONF SOFTW, P599, DOI 10.1109/ICSE.2009.5070565
   Felt AP, 2011, PROCEEDINGS OF THE 18TH ACM CONFERENCE ON COMPUTER & COMMUNICATIONS SECURITY (CCS 11), P627
   Henning M., 2007, ACM Queue, V5, P25, DOI 10.1145/1255421.1255422
   Hora A, 2014, SOFTWARE EVOLUTION W
   Hu Cuixiong, 2011, Proceedings of the 6th International Workshop on Automation of Software Test, P77
   Joorabchi Mona Erfani, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P15, DOI 10.1109/ESEM.2013.9
   Kim H, 2009, 2009 THIRD IEEE INTERNATIONAL CONFERENCE ON SECURE SOFTWARE INTEGRATION AND RELIABILITY IMPROVEMENT, PROCEEDINGS, P171, DOI 10.1109/SSIRI.2009.28
   Kuhn A, 2007, INFORM SOFTWARE TECH, V49, P230, DOI 10.1016/j.infsof.2006.10.017
   Li HW, 2013, WORK CONF REVERSE EN, P142, DOI 10.1109/WCRE.2013.6671289
   Linares-Vásquez M, 2013, IEEE WORK CONF MIN S, P93, DOI 10.1109/MSR.2013.6624014
   Linares-Vasquez Mario, 2013, P 2013 9 JOINT M FDN, P477, DOI DOI 10.1145/2491411.2491428
   Lukins SK, 2008, WORK CONF REVERSE EN, P155, DOI 10.1109/WCRE.2008.33
   Mamykina L, 2011, 29TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P2857
   McCallum A.K., 2002, MALLET MACHINE LEARN
   Minelli R, 2013, EUR CON SFTWR MTNCE, P144, DOI 10.1109/CSMR.2013.24
   Nasehi SM, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P25, DOI 10.1109/ICSM.2012.6405249
   Newman D, 2006, LECT NOTES COMPUT SC, V3975, P93
   Panichella A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P522, DOI 10.1109/ICSE.2013.6606598
   Panichella Sebastiano, 2012, 2012 IEEE 20th International Conference on Program Comprehension, P63
   Pletea D., 2014, 11 WORKING C MSR, P348, DOI [10.1145/2597073.2597117, DOI 10.1145/2597073.2597117]
   Ruiz I. J. M., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P113
   Sadeh B, 2011, COMM COM INF SC, V181, P163
   Syer MD, 2011, IEEE INT WORK C SO, P55, DOI 10.1109/SCAM.2011.25
   Tracy KW, 2012, IEEE POTENTIALS, V31, P30, DOI 10.1109/MPOT.2011.2182571
   Treude C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P804, DOI 10.1145/1985793.1985907
   Wallach Hanna M., 2009, Advances in neural information processing systems, P1973, DOI DOI 10.1007/S10708-008-9161-9
   Wang SW, 2014, PROC IEEE INT CONF S, P291, DOI 10.1109/ICSME.2014.51
   Wasserman T., 2010, FOSER 2010
   Xia X, 2013, IEEE WORK CONF MIN S, P287, DOI 10.1109/MSR.2013.6624040
   Zangerle E, 2011, LECT NOTES COMPUT SC, V6984, P113, DOI 10.1007/978-3-642-24704-0_16
NR 43
TC 164
Z9 184
U1 0
U2 11
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2016
VL 21
IS 3
BP 1192
EP 1223
DI 10.1007/s10664-015-9379-3
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DQ2VO
UT WOS:000379061700014
DA 2024-07-18
ER

PT J
AU Rodrigues, EM
   de Oliveira, FM
   Costa, LT
   Bernardino, M
   Zorzo, AF
   Souza, SDS
   Saad, R
AF Rodrigues, Elder Macedo
   de Oliveira, Flavio Moreira
   Costa, Leandro Teodoro
   Bernardino, Maicon
   Zorzo, Avelino Francisco
   Senger Souza, Simone do Rocio
   Saad, Rodrigo
TI An empirical comparison of model-based and capture and replay approaches
   for performance testing
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Empirical study; Experimental study; Model-based testing; Script
   generation; Testing automation; Performance testing
AB A variety of testing tools has been developed to support and automate the software testing activity. Some of them may use different techniques such as Model-based Testing (MBT) or Capture and Replay (CR). Model-based Testing is a technique for automatic generation of testing artifacts based on software models. One of the main benefits of using MBT is related to the easiness of maintaining models over code; hence, it is likely that using models as a source for automatic generation of scripts requires less effort and reduces the number of faults. Otherwise, CR-based tools basically record the user interaction with the System Under Test (SUT) and then playback the recorded test. This paper presents our effort on setting up and running an experimental study performed in order to evaluate the effort to use MBT and CR-based tools to generate performance scripts. Thus, we apply an MBT and a CR approaches for the purpose of evaluation with respect to the effort to generate scripts and scenarios from the perspective of the performance testers and the performance test engineers in the context of undergraduates, M.Sc. and Ph.D. students, performance testers and performance test engineers for the generation of performance test scripts and scenarios. Our results indicate that, for simple testing tasks, the effort of using a CR-based tool was lower than using an MBT tool, but as the complexity or size of the activities of the testing tasks increases, the advantage of using MBT increased significantly.
C1 [Rodrigues, Elder Macedo; de Oliveira, Flavio Moreira; Costa, Leandro Teodoro; Bernardino, Maicon; Zorzo, Avelino Francisco] Facin PUCRS, Porto Alegre, RS, Brazil.
   [Senger Souza, Simone do Rocio] Univ Sao Paulo, ICMC, BR-13560970 Sao Carlos, SP, Brazil.
   [Saad, Rodrigo] Dell Comp Ltda, Porto Alegre, RS, Brazil.
C3 Pontificia Universidade Catolica Do Rio Grande Do Sul; Universidade de
   Sao Paulo
RP Rodrigues, EM (corresponding author), Facin PUCRS, Av Ipiranga 6681, Porto Alegre, RS, Brazil.
EM eldermr@gmail.com; flavio.oliveira@pucrs.br;
   leandro.teodoro@acad.pucrs.br; bernardino@acm.org;
   avelino.zorzo@pucrs.br; srocio@icmc.usp.br; rodrigo_saad@dell.com
RI Zorzo, Avelino Francisco/X-6802-2019; Souza, Simone Senger
   R/G-7127-2011; Bernardino, Maicon/G-5670-2011; Oliveira,
   Flavio/F-5190-2017
OI Zorzo, Avelino Francisco/0000-0002-0790-6759; Bernardino,
   Maicon/0000-0003-2776-8020; Oliveira, Flavio/0000-0001-5353-5330; Souza,
   Simone Senger/0000-0001-9007-9821
FU PUCRS [PROCAD/CAPES 191/2007]; UEM [PROCAD/CAPES 191/2007]; USP
   [PROCAD/CAPES 191/2007]
FX Avelino Zorzo, Elder Rodrigues, Flavio Oliveira, Leandro Costa and
   Maicon Bernardino are researchers from the Center of Competence in
   Performance Testing at PUCRS, a partnership between Dell Computers of
   Brazil Ltd. and PUCRS. This study was also partially supported by the
   project PROCAD/CAPES 191/2007, a partnership between PUCRS, UEM and USP.
   The authors also would like to acknowledge the help of Dr. Dorival Leao
   Pinto Junior (Department of Applied Mathematics and Statistics,
   ICMC-USP) with the application of hypothesis tests.
CR Abbors Fredrik, 2010, Proceedings of the 2010 17th IEEE International Conference and Workshops on Engineering of Computer-Based Systems (ECBS 2010), P321, DOI 10.1109/ECBS.2010.46
   Abbors F., 2013, P 4 ACM SPEC INT C P, P423, DOI DOI 10.1145/2479871.2479937
   [Anonymous], 2013, P 2013 IEEE GRENOBLE
   [Anonymous], 2014, The R Project for Statistical Computing (Version 3.1.1)
   Apfelbaum L., 1997, SOFTW QUAL WEEK C CI, P296
   Chadwick D., 2008, USING RATIONAL PERFO
   Cook T. D., 1979, Quasi-experimentation: Design analysis issues for field settings
   Costa Leandro T., 2012, SEKE, P112
   El-Far I. K., 2001, MODEL BASED SOFTWARE
   Guckenheimer S., 2006, SOFTWARE ENG MICROSO
   Hemmati H, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2430536.2430540
   Hewlett Packard-HP, 2014, SOFTW HP LOADRUNNER
   Holmes A, 2006, AGILE 2006, Proceedings, P270, DOI 10.1109/AGILE.2006.19
   Li N, 2014, IEEE C ELEC DEVICES
   Meier J.D., 2007, Performance Testing Guidance for Web Applications: Patterns Practices
   Menascé DA, 2002, IEEE INTERNET COMPUT, V6, P83, DOI 10.1109/MIC.2002.1003136
   Misurda J, 2005, PROC INT CONF SOFTW, P156
   Portal Action, 2014, SYST ACT STAT PACK
   Rodrigues E. D.., 2013, PLETS A PRODUCT LINE
   Silva M., 2011, XXI Encontro Nacional de Engenharia de Porducao, P1, DOI DOI 10.1109/PES.2011.6038900
   Software BCM, 2007, PERF BENCHM KIT US I
   TestOptimal, 2014, TESTOPTIMAL MOD BAS
   Utting M., 2006, Practical Model-Based Testing
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Woodside M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P171, DOI 10.1109/FOSE.2007.32
   Xin Bai, 2010, Proceedings of the Seventh International Conference on Information Technology: New Generations (ITNG 2010), P986, DOI 10.1109/ITNG.2010.27
   You Jing, 2010, 2010 International Conference on Computer, Mechatronics, Control and Electronic Engineering (CMCE 2010), P282, DOI 10.1109/CMCE.2010.5609969
   Yu-Seung Ma, 2006, 28th International Conference on Software Engineering Proceedings, P827
   Zhang M, 2006, J COMPUT SCI COLL, V21, P6
NR 29
TC 2
Z9 3
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2015
VL 20
IS 6
BP 1831
EP 1860
DI 10.1007/s10664-014-9337-5
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CT7YX
UT WOS:000363032900012
DA 2024-07-18
ER

PT J
AU Tian, Y
   Lo, D
   Xia, X
   Sun, CN
AF Tian, Yuan
   Lo, David
   Xia, Xin
   Sun, Chengnian
TI Automated prediction of bug report priority using multi-factor analysis
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Bug report management; Priority prediction; Multi-factor analysis
AB Bugs are prevalent. To improve software quality, developers often allow users to report bugs that they found using a bug tracking system such as Bugzilla. Users would specify among other things, a description of the bug, the component that is affected by the bug, and the severity of the bug. Based on this information, bug triagers would then assign a priority level to the reported bug. As resources are limited, bug reports would be investigated based on their priority levels. This priority assignment process however is a manual one. Could we do better? In this paper, we propose an automated approach based on machine learning that would recommend a priority level based on information available in bug reports. Our approach considers multiple factors, temporal, textual, author, related-report, severity, and product, that potentially affect the priority level of a bug report. These factors are extracted as features which are then used to train a discriminative model via a new classification algorithm that handles ordinal class labels and imbalanced data. Experiments on more than a hundred thousands bug reports from Eclipse show that we can outperform baseline approaches in terms of average F-measure by a relative improvement of up to 209 %.
C1 [Tian, Yuan; Lo, David] Singapore Management Univ, Sch Informat Syst, Singapore 178902, Singapore.
   [Xia, Xin] Zhejiang Univ, Coll Comp Sci & Technol, Hangzhou 310003, Zhejiang, Peoples R China.
   [Sun, Chengnian] Univ Calif Davis, Dept Comp Sci, Davis, CA 95616 USA.
C3 Singapore Management University; Zhejiang University; University of
   California System; University of California Davis
RP Tian, Y (corresponding author), Singapore Management Univ, Sch Informat Syst, Singapore 178902, Singapore.
EM yuan.tian.2012@phdis.smu.edu.sg; davidlo@smu.edu.sg; xinxia@smu.edu.sg;
   chengniansun@gmail.com
RI Xia, Xin/AAD-6217-2022; Lo, David/A-2493-2012
OI Xia, Xin/0000-0002-6302-3256; Lo, David/0000-0002-4367-7201
CR [Anonymous], 2004, Software Engineering and Knowledge Engineering
   [Anonymous], 2006, THESIS U BRIT COLUMB
   [Anonymous], VASA, DOI DOI 10.1002/1521-3773(20010316)40:63.3.CO;2-C
   [Anonymous], 2011, ASE
   Anvik J, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000794
   Anvik John, 2005, P 2005 OOPSLA WORKSH, P35
   Bhattacharya P, 2012, J SYST SOFTWARE, V85, P2275, DOI 10.1016/j.jss.2012.04.053
   Cohen W., 1995, ICML
   Crammer K, 2001, J MACH LEARN RES, V2
   Duda R., 1973, Pattern Classification and Scene Analysis
   Forman George., 2008, CIKM
   Gegick M, 2010, MSR
   Hosseini H., 2012, CSMR
   Huang L, 2011, ASE
   Jalbert N., 2008, DSN
   Jeong G, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P111, DOI 10.1145/1595696.1595715
   Khomh F., 2011, WCRE
   Kim S., 2006, MSR
   Lamkanfi A, 2010, MSR
   Lamkanfi A, 2011, CSMR
   Manning Christopher D., 2008, INTRO INFORM RETRIEV
   Menzies T., 2008, ICSM
   Nguyen Anh Tuan, 2012, ASE
   Robertson S.E., 2004, CIKM
   Runeson P, 2007, PROC INT CONF SOFTW, P499
   Sun C., 2010, ICSE
   Tian Y., 2012, WCRE
   Wang XY, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P461, DOI 10.1145/1368088.1368151
   Weiss C, 2007, MSR, P1
   Xia X, 2014, CSMR WCRE
   [No title captured]
NR 31
TC 78
Z9 85
U1 0
U2 8
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2015
VL 20
IS 5
BP 1354
EP 1383
DI 10.1007/s10664-014-9331-y
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CQ5UP
UT WOS:000360671500006
OA Green Published
DA 2024-07-18
ER

PT J
AU Ali, N
   Sharafi, Z
   Guéhéneuc, YG
   Antoniol, G
AF Ali, Nasir
   Sharafi, Zohreh
   Gueheneuc, Yann-Gael
   Antoniol, Giuliano
TI An empirical study on the importance of source code entities for
   requirements traceability
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
ID LINKS
AB Requirements Traceability (RT) links help developers during program comprehension and maintenance tasks. However, creating RT links is a laborious and resource-consuming task. Information Retrieval (IR) techniques are useful to automatically create traceability links. However, IR-based techniques typically have low accuracy (precision, recall, or both) and thus, creating RT links remains a human intensive process. We conjecture that understanding how developers verify RT links could help improve the accuracy of IR-based RT techniques to create RT links. Consequently, we perform an empirical study consisting of four case studies. First, we use an eye-tracking system to capture developers' eye movements while they verify RT links. We analyse the obtained data to identify and rank developers' preferred types of Source Code Entities (SCEs), e.g., domain vs. implementation-level source code terms and class names vs. method names. Second, we perform another eye-tracking case study to confirm that it is the semantic content of the developers' preferred types of SCEs and not their locations that attract developers' attention and help them in their task to verify RT links. Third, we propose an improved term weighting scheme, i.e., Developers Preferred Term Frequency/Inverse Document Frequency (D P T F / I D F), that uses the knowledge of the developers' preferred types of SCEs to give more importance to these SCEs into the term weighting scheme. We integrate thisweighting scheme with an IR technique, i.e., Latent Semantic Indexing (LSI), to create a new technique to RT link recovery. Using three systems (iTrust, Lucene, and Pooka), we show that the proposed technique statistically improves the accuracy of the recovered RT links over a technique based on LSI and the usual Term Frequency/Inverse Document Frequency (T F / I D F) weighting scheme. Finally, we compare the newly proposed D P T F / I D F with our original Domain Or Implementation/Inverse Document Frequency (D O I / I D F) weighting scheme.
C1 [Ali, Nasir] Univ Waterloo, Dept Elect & Comp Engn, Kingston, ON, Canada.
   [Sharafi, Zohreh; Gueheneuc, Yann-Gael; Antoniol, Giuliano] Ecole Polytech, DGIGL, Montreal, PQ H3C 3A7, Canada.
C3 University of Waterloo; Universite de Montreal; Polytechnique Montreal
RP Ali, N (corresponding author), Univ Waterloo, Dept Elect & Comp Engn, Kingston, ON, Canada.
EM nasir.ali@uwaterloo.ca; zohreh.sharafi@polymtl.ca;
   yann-gael.gueheneuc@polymtl.ca; antoniol@ieee.org
RI Guéhéneuc, Yann-Gaël/K-9371-2019; Sharafi, Zohreh/HRC-2499-2023
FU NSERC Research Chairs on Software Cost-effective Change, Evolution and
   on Software Patterns and Patterns of Software; Fonds de recherche du
   Quebec - Nature et technologies (FRQNT)
FX The authors would like to thank all the participants of the case studies
   as this work would not be possible without their collaboration. This
   work has been partially supported by the NSERC Research Chairs on
   Software Cost-effective Change, Evolution and on Software Patterns and
   Patterns of Software, and by Fonds de recherche du Quebec - Nature et
   technologies (FRQNT).
CR Abadi A, 2008, INT C PROGRAM COMPRE, P103, DOI 10.1109/ICPC.2008.30
   Abebe S. L., 2011, 2011 18th Working Conference on Reverse Engineering, P77, DOI 10.1109/WCRE.2011.19
   Ali N., 2011, 2011 18th Working Conference on Reverse Engineering, P45, DOI 10.1109/WCRE.2011.16
   Ali N, 2011, SOFTWARE SYSTEMS TRA
   Ali N, 2011, P 19 IEEE INT C PROG, P10
   Ali N, 2012, IEEE T SOFTWARE ENG, V99, P1
   Ali N, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P191, DOI 10.1109/ICSM.2012.6405271
   [Anonymous], 2007, Eye tracking methodology: Theory and practice, DOI DOI 10.1007/978-3-319-57883-5
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Antoniol G, 2000, ANN SOFTW ENG, V9, P35, DOI 10.1023/A:1018916522804
   Baldi PF, 2008, ACM SIGPLAN NOTICES, V43, P543, DOI 10.1145/1449955.1449807
   Bednarik R., 2006, Proceedings. ETRA 2006. Symposium on Eye Tracking Research and Applications, P125, DOI 10.1145/1117309.1117356
   Bernstein A., 2010, P 18 ACM SIGSOFT INT, P97
   Bunge M., 1977, Treatise on Basic Philosophy Volume 3. Ontology I: The Furniture of the World., V3
   Busjahn Teresa, 2011, P 11 KOL CALL INT C, p1s9
   Dagenais B., 2010, Proc. of the ICSE 10, P275, DOI DOI 10.1145/1806799.1806842
   De Lucia A., 2012, SOFTWARE SYSTEMS TRA, P71, DOI [10.1007/978-1-4471- 2239-5_4, DOI 10.1007/978-1-4471-2239-5_4]
   De Lucia A, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1276933.1276934
   De Lucia A, 2011, CONF PROC INT SYMP C, P21, DOI 10.1109/ICPC.2011.34
   De Lucia A, 2011, IEEE T SOFTWARE ENG, V37, P205, DOI 10.1109/TSE.2010.89
   De Smet B., 2012, Science of Computer Programming
   Dit B, 2013, 2013 7TH INTERNATIONAL WORKSHOP ON TRACEABILITY IN EMERGING FORMS OF SOFTWARE ENGINEERING (TEFSE), P105, DOI 10.1109/TEFSE.2013.6620164
   Duchowski AT, 2002, BEHAV RES METH INS C, V34, P455, DOI 10.3758/BF03195475
   EROL B., 2006, Proceedings of the 14th annual ACM international conference on Multimedia, P231
   Gethers M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1034, DOI 10.1145/1985793.1985988
   Gotel O. C. Z., 1994, Proceedings of the First International Conference on Requirements Engineering (Cat. No.94TH0613-0), P94, DOI 10.1109/ICRE.1994.292398
   Griffiths TL, 2004, P NATL ACAD SCI USA, V101, P5228, DOI 10.1073/pnas.0307752101
   Gueheneuc Y.-G., 2006, Proceedings of the 2006 conference of the Center for Advanced Studies on Collaborative research, P1, DOI DOI 10.1145/1188966.1188968
   Jinshui Wang, 2011, 2011 IEEE 27th International Conference on Software Maintenance, P213, DOI 10.1109/ICSM.2011.6080788
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kowalski G., 2010, INFORM RETRIEVAL ARC
   Macbeth G, 2011, UNIV PSYCHOL, V10, P545, DOI 10.11144/Javeriana.upsy10-2.cdcp
   Marcus A, 2003, PROC INT CONF SOFTW, P125, DOI 10.1109/ICSE.2003.1201194
   Maskeri Girish, 2008, 1st India Software Engineering Conference. ISEC 2008, P113
   Pan B, 2007, J COMPUT-MEDIAT COMM, V12, P801, DOI 10.1111/j.1083-6101.2007.00351.x
   Panichella A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P522, DOI 10.1109/ICSE.2013.6606598
   Porras GC, 2010, EMPIR SOFTW ENG, V15, P493, DOI 10.1007/s10664-009-9125-9
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI [10.1109/TSE.2007.1016, 10.1109/TSE.2007.1016.]
   Rayner K, 1998, PSYCHOL BULL, V124, P372, DOI 10.1037/0033-2909.124.3.372
   Shard B., 2012, P S EYE TRACK RES AP, P381
   Sharif Bonita, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P196, DOI 10.1109/ICPC.2010.41
   SHARIF B., 2011, Proceedings of the 6th International Workshop on Traceability in Emerging Forms of Software Engineering (TEFSE), P67, DOI DOI 10.1145/1987856.1987872
   Sun YH, 2004, PROCEEDINGS OF THE 2004 INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND CYBERNETICS, VOLS 1-7, P1692
   Uwano H., 2005, Eye Tracking Research and Applications Symposium (ETRA), V2005, P133
   Yusuf S, 2007, INT C PROGRAM COMPRE, P113
NR 45
TC 21
Z9 28
U1 1
U2 11
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2015
VL 20
IS 2
BP 442
EP 478
DI 10.1007/s10664-014-9315-y
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CH2AB
UT WOS:000353824000007
DA 2024-07-18
ER

PT J
AU Vasilescu, B
   Serebrenik, A
   Goeminne, M
   Mens, T
AF Vasilescu, Bogdan
   Serebrenik, Alexander
   Goeminne, Mathieu
   Mens, Tom
TI On the variation and specialisation of workload-A case study of the
   GNOME ecosystem community
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Open source; Software ecosystem; Metrics; Developer community; Case
   study
ID MULTIPLE COMPARISONS; SOFTWARE-DEVELOPMENT; EVOLUTION; PROJECT; CODE
AB Most empirical studies of open source software repositories focus on the analysis of isolated projects, or restrict themselves to the study of the relationships between technical artifacts. In contrast, we have carried out a case study that focuses on the actual contributors to software ecosystems, being collections of software projects that are maintained by the same community. To this aim, we defined a new series of workload and involvement metrics, as well as a novel approach--graphs-for reporting the results of comparing multiple distributions. We used these techniques to statistically study how workload and involvement of ecosystem contributors varies across projects and across activity types, and we explored to which extent projects and contributors specialise in particular activity types. Using Gnome as a case study we observed that, next to coding, the activities of localization, development documentation and building are prevalent throughout the ecosystem. We also observed notable differences between frequent and occasional contributors in terms of the activity types they are involved in and the number of projects they contribute to. Occasional contributors and contributors that are involved in many different projects tend to be more involved in the localization activity, while frequent contributors tend to be more involved in the coding activity in a limited number of projects.
C1 [Vasilescu, Bogdan; Serebrenik, Alexander] Eindhoven Univ Technol, MDSE, NL-5600 MB Eindhoven, Netherlands.
   [Goeminne, Mathieu; Mens, Tom] Univ Mons, COMPLEXYS Res Inst, B-7000 Mons, Belgium.
C3 Eindhoven University of Technology; University of Mons
RP Mens, T (corresponding author), Univ Mons, COMPLEXYS Res Inst, Pl Parc 20, B-7000 Mons, Belgium.
EM b.n.vasilescu@tue.nl; a.serebrenik@tue.nl; mathieu.goeminne@umons.ac.be;
   tom.mens@umons.ac.be
RI Mens, Tom/B-6518-2013
OI Mens, Tom/0000-0003-3636-5020; Vasilescu, Bogdan/0000-0003-4418-5783;
   Serebrenik, Alexander/0000-0002-1418-0095
FU Fonds de la Recherche Scientifique (F.R.S-FNRS) [FRFC 2.4515.09,
   BSS-2012/V 6/5/015]; Ministere de la Communaute francaise-Direction
   generale de l'Enseignement non obligatoire et de la Recherche
   scientifique (Belgium) [ARC AUWB-08/12-UMH-3, AUWB-12/17-UMONS-3]; Dutch
   Science Foundation (Nederlandse Organisatie voor Wetenschappelijk
   Onderzoek, NWO) [NWO 600.065.120.10N235]
FX This research has been partially supported by research projects FRFC
   2.4515.09 financed by Fonds de la Recherche Scientifique (F.R.S-FNRS),
   ARC AUWB-08/12-UMH-3 and AUWB-12/17-UMONS-3 financed by the Ministere de
   la Communaute francaise-Direction generale de l'Enseignement non
   obligatoire et de la Recherche scientifique (Belgium), and NWO
   600.065.120.10N235 financed by the Dutch Science Foundation (Nederlandse
   Organisatie voor Wetenschappelijk Onderzoek, NWO). Part of this research
   has been carried out during the second author's stay at the Universite
   de Mons, supported by grant BSS-2012/V 6/5/015 of the Fonds de la
   Recherche Scientifique (F.R.S-FNRS).
CR Aho A. V., 1972, SIAM Journal on Computing, V1, P131, DOI 10.1137/0201008
   Akritas MG, 1997, J AM STAT ASSOC, V92, P258, DOI 10.2307/2291470
   ALLISON PD, 1978, AM SOCIOL REV, V43, P865, DOI 10.2307/2094626
   [Anonymous], 2002, Nichtparametrische Datenanalysen
   [Anonymous], 2002, Numerical Recipes in C++: The Art of Scientific Computing
   [Anonymous], 2010, R LANG ENV STAT COMP
   [Anonymous], INT WORKSH VIS SOFTW
   [Anonymous], RE HANDLING TRANSLAT
   [Anonymous], RE GIT VS SVN
   [Anonymous], 10 BELG NETH SOFTW E
   [Anonymous], 2011, IWSECO@ ICSOB
   [Anonymous], 99452009 ISOIECIEEE
   [Anonymous], 1973, NONPARAMETRIC STAT M
   [Anonymous], RE TRANSLATION REGRE
   [Anonymous], GNOME US DEV EUR C
   [Anonymous], INT WORKSH SOFTW QUA
   [Anonymous], FREE OPEN SOURCE SOF
   [Anonymous], GNOME COMMUNITY CELE
   [Anonymous], 1967, Studies in Mathematical and Mangerial Economics
   [Anonymous], NPARCOMP REFERENCE M
   [Anonymous], 1973, The art of computer programming
   [Anonymous], MIN SOFTW REPOS
   [Anonymous], 2002, P INT WORKSH PRINC S
   [Anonymous], AGRICOLAE PRACTICAL
   [Anonymous], RE GNOME PROJECT ORG
   [Anonymous], 2011, P 19 ACM SIGSOFT S 1
   Antoniol G, 2005, PROC IEEE INT CONF S, P240
   Baxter G, 2006, ACM SIGPLAN NOTICES, V41, P397, DOI 10.1145/1167515.1167507
   Bettenburg Nicolas, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P124, DOI 10.1109/ICPC.2010.46
   Bird Christian, 2006, P MSR, P137, DOI DOI 10.1145/1137983.1138016
   Bonaccorsi A, 2006, MANAGE SCI, V52, P1085, DOI 10.1287/mnsc.1060.0547
   Brown BM, 2002, AUST NZ J STAT, V44, P427, DOI 10.1111/1467-842X.00244
   Brunner E, 2000, BIOMETRICAL J, V42, P17, DOI 10.1002/(SICI)1521-4036(200001)42:1<17::AID-BIMJ17>3.0.CO;2-U
   Capiluppi A., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P251, DOI 10.1109/MSR.2012.6224288
   Capiluppi A, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P317, DOI 10.1109/CSMR.2003.1192440
   Capiluppi A, 2013, IEEE SOFTWARE, V30, P45, DOI 10.1109/MS.2012.169
   Casebolt JR, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P91, DOI 10.1109/MSR.2009.5069484
   Christen P, 2004, LECT NOTES ARTIF INT, V3056, P638
   Christen P, 2006, ICDM 2006: SIXTH IEEE INTERNATIONAL CONFERENCE ON DATA MINING, WORKSHOPS, P290
   Clauset A, 2009, SIAM REV, V51, P661, DOI 10.1137/070710111
   Cowell FA, 2000, HANDB ECON, V16, P87
   COWELL FA, 1995, ECON J, V105, P421, DOI 10.2307/2235501
   D'Ambros M, 2009, J SOFTW MAINT EVOL-R, V21, P217, DOI 10.1002/smr.407
   Davies Julius., 2011, MSR, P183, DOI DOI 10.1145/1985441.1985468
   Dinh-Trong TT, 2005, IEEE T SOFTWARE ENG, V31, P481, DOI 10.1109/TSE.2005.73
   DUNN OJ, 1961, J AM STAT ASSOC, V56, P52, DOI 10.2307/2282330
   DUNNETT CW, 1955, J AM STAT ASSOC, V50, P1096, DOI 10.2307/2281208
   Ernst NA, 2010, LECT NOTES COMPUT SC, V6182, P143, DOI 10.1007/978-3-642-14192-8_15
   GABRIEL KR, 1969, ANN MATH STAT, V40, P224, DOI 10.1214/aoms/1177697819
   German D. M., 2003, Software Process Improvement and Practice, V8, P201, DOI 10.1002/spip.189
   German DM, 2004, J SOFTW MAINT EVOL-R, V16, P367, DOI 10.1002/smr.301
   Gini C., 1921, ECON J, V31, P124, DOI [DOI 10.2307/2223319, 10.2307/2223319]
   Goeminne M, 2013, SOFTWARE ECOSYSTEMS: ANALYZING AND MANAGING BUSINESS NETWORKS IN THE SOFTWARE INDUSTRY, P247
   Goeminne M, 2013, SCI COMPUT PROGRAM, V78, P971, DOI 10.1016/j.scico.2011.11.004
   Gousios G., 2008, P 2008 INT WORKING C, P129, DOI [DOI 10.1145/1370750.1370781, 10.1145/1370750.1370781]
   Hindle Abram, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P82, DOI 10.1109/MSR.2010.5463350
   Hindle Abram, 2007, 2007 IEEE International Conference on Software Maintenance, P285, DOI 10.1109/ICSM.2007.4362641
   Iqbal A, 2012, 2012 IEEE 13TH INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION (IRI), P69, DOI 10.1109/IRI.2012.6302993
   Kendall MG, 1938, BIOMETRIKA, V30, P81, DOI 10.2307/2332226
   Khomh F, 2009, WORK CONF REVERSE EN, P75, DOI 10.1109/WCRE.2009.28
   Koch S, 2002, INFORM SYST J, V12, P27, DOI 10.1046/j.1365-2575.2002.00110.x
   Konietschke F, 2012, ELECTRON J STAT, V6, P738, DOI 10.1214/12-EJS691
   Kouters E, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P592, DOI 10.1109/ICSM.2012.6405329
   Krinke Jens, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P98, DOI 10.1109/MSR.2010.5463290
   KURTZ TE, 1965, BIOMETRIKA, V52, P485, DOI 10.2307/2333700
   Levenshtein V. I., 1966, SOV PHYS DOKL, V10, P707
   Linstead E, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P99, DOI 10.1109/MSR.2009.5069486
   Little T, 2006, IEEE SOFTWARE, V23, P48, DOI 10.1109/MS.2006.82
   López-Fernández L, 2006, INT J INF TECHNOL WE, V1, P27, DOI 10.4018/jitwe.2006070103
   Lorenz MO, 1905, J AM STAT ASSOC, V9, P209
   Louridas P, 2008, ACM T SOFTW ENG METH, V18, DOI 10.1145/1391984.1391986
   Luijten Bart, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P94, DOI 10.1109/MSR.2010.5463292
   Lungu M, 2010, SCI COMPUT PROGRAM, V75, P264, DOI 10.1016/j.scico.2009.09.004
   Lungu M, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P103, DOI 10.1109/MSR.2009.5069487
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Moon J.Y., 2000, 1 MONDAY, V5
   Mordal K, 2013, J SOFTW-EVOL PROC, V25, P1117, DOI 10.1002/smr.1558
   Noether G.E., 1981, TEACH STAT, V3, P41, DOI [10.1111/j.1467-9639.1981.tb00422.x, DOI 10.1111/J.1467-9639.1981.TB00422.X]
   Pearson K., 1895, Proceedings of the Royal Society London, Vlviii, P240
   Poncin W, 2011, EUR CON SFTWR MTNCE, P5, DOI 10.1109/CSMR.2011.5
   Robles Gregorio, 2009, International Journal of Open Source Software & Processes, V1, P24, DOI 10.4018/jossp.2009010102
   Robles G, 2006, J SYST SOFTWARE, V79, P1233, DOI 10.1016/j.jss.2006.02.048
   Schackmann H, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P95, DOI 10.1109/MSR.2009.5069485
   Sekhon JS, 2011, J STAT SOFTW, V42, P1
   Serebrenik Alexander., 2010, P 26 IEEE INT C SOFT, P1
   Sheskin DJ., 2003, HDB PARAMETRIC NONPA, DOI [10.1201/9781420036268, DOI 10.1201/9781420036268]
   Shibuya B, 2009, 2009 ICSE WORKSHOP ON EMERGING TRENDS IN FREE-LIBRE-OPEN SOURCE SOFTWARE RESEARCH AND DEVELOPMENT, P1, DOI 10.1109/FLOSS.2009.5071352
   Shihab E, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P107, DOI 10.1109/MSR.2009.5069488
   Spearman C, 1904, AM J PSYCHOL, V15, P72, DOI 10.2307/1412159
   Taube-Schock C, 2011, LECT NOTES COMPUT SC, V6813, P204, DOI 10.1007/978-3-642-22655-7_10
   Terceiro Antonio, 2010, 2010 Proceedings of 24th Brazilian Symposium on Software Engineering (SBES 2010), P21, DOI 10.1109/SBES.2010.26
   Theil H., 1971, Principles of Econometrics
   Tsay JasonT., 2012, Proceedings of the ACM 2012 Conference on Computer Supported Cooperative Work Companion - CSCW'12, P223
   Tukey J.W., 1951, Quick and dirty methods in statistics. Part II. Simple analyses for standard designs, P189
   Valverde S, 2007, EPL-EUROPHYS LETT, V77, DOI 10.1209/0295-5075/77/20002
   Vasa R, 2009, PROC IEEE INT CONF S, P179, DOI 10.1109/ICSM.2009.5306322
   Vasilescu B., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P313, DOI 10.1109/ICSM.2011.6080798
   Vasilescu Bogdan., 2011, Proceedings of the 2Nd International Workshop on Emerging Trends in Software Metrics, WETSoM '11, P23
   VUONG QH, 1989, ECONOMETRICA, V57, P307, DOI 10.2307/1912557
   Weber Steve, 2004, The Success of Open Source, DOI DOI 10.4159/9780674044999
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Yu L., 2007, 4 INT WORKSHOP MININ, P8, DOI 10.1109/msr.2007.19
   Zaidman A, 2011, EMPIR SOFTW ENG, V16, P325, DOI 10.1007/s10664-010-9143-7
   Zeileis A., 2009, Ineq: measuring inequality, concentration, and poverty
   ZIMMERMAN DW, 1992, PERCEPT MOTOR SKILL, V74, P835, DOI 10.2466/PMS.74.3.835-844
   Zobel J., 1996, SIGIR Forum, P166
NR 107
TC 49
Z9 52
U1 0
U2 8
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2014
VL 19
IS 4
BP 955
EP 1008
DI 10.1007/s10664-013-9244-1
PG 54
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AH8LE
UT WOS:000336388500006
DA 2024-07-18
ER

PT J
AU da Silva, FQB
   Suassuna, M
   França, ACC
   Grubb, AM
   Gouveia, TB
   Monteiro, CVF
   dos Santos, IE
AF da Silva, Fabio Q. B.
   Suassuna, Marcos
   Franca, A. Cesar C.
   Grubb, Alicia M.
   Gouveia, Tatiana B.
   Monteiro, Cleviton V. F.
   dos Santos, Igor Ebrahim
TI Replication of empirical studies in software engineering research: a
   systematic mapping study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Replications; Experiments; Empirical studies; Mapping study; Systematic
   literature review; Software engineering
ID QUANTITATIVE-ANALYSIS; LITERATURE-REVIEWS; DESIGN PATTERNS;
   MAINTAINABILITY; MODELS; MAINTENANCE; OBJECT; REQUIREMENTS; CONFIDENCE;
   REGRESSION
AB In this article, we present a systematic mapping study of replications in software engineering. The goal is to plot the landscape of current published replications of empirical studies in software engineering research. We applied the systematic review method to search and select published articles, and to extract and synthesize data from the selected articles that reported replications. Our search retrieved more than 16,000 articles, from which we selected 96 articles, reporting 133 replications performed between 1994 and 2010, of 72 original studies. Nearly 70 % of the replications were published after 2004 and 70 % of these studies were internal replications. The topics of software requirements, software construction, and software quality concentrated over 55 % of the replications, while software design, configuration management, and software tools and methods were the topics with the smallest number of replications. We conclude that the number of replications has grown in the last few years, but the absolute number of replications is still small, in particular considering the breadth of topics in software engineering. We still need incentives to perform external replications, better standards to report empirical studies and their replications, and collaborative research agendas that could speed up development and publication of replications.
C1 [da Silva, Fabio Q. B.; Suassuna, Marcos; Franca, A. Cesar C.; Gouveia, Tatiana B.; Monteiro, Cleviton V. F.; dos Santos, Igor Ebrahim] Univ Fed Pernambuco, Ctr Informat, Recife, PE, Brazil.
   [Grubb, Alicia M.] Univ Toronto, Dept Comp Sci, Toronto, ON, Canada.
C3 Universidade Federal de Pernambuco; University of Toronto
RP da Silva, FQB (corresponding author), Univ Fed Pernambuco, Ctr Informat, Recife, PE, Brazil.
EM fabio@cin.ufpe.br
RI da Silva, Fabio Queda Bueno/A-6524-2012
OI da Silva, Fabio Queda Bueno/0000-0002-3734-040X
FU Brazilian National Research Council (CNPq) [314523/2009-0,
   141156/2010-4]; CAPES [6441/10-6]; Samsung Institute for Development of
   Informatics (Samsung/SIDI)
FX Fabio Q. B. da Silva holds a research grant from the Brazilian National
   Research Council (CNPq), process #314523/2009-0. This article was
   written while Prof. Fabio Silva was in a sabbatical leave at the
   University of Toronto, receiving a CAPES research grant process #
   6441/10-6. A. Cesar C. Franca is a doctoral student at the Center of
   Informatics of the Federal University of Pernambuco where he receives a
   scholarship from the Brazilian National Research Council (CNPq), process
   #141156/2010-4. We would like to thank Prof. Steve Easterbrook, Jonathan
   Lung, and Elizabeth Patitsas for many discussions, comments, and
   criticisms that lead to important improvements in the content and
   structure of this article. We also thank Prof. Andre Santos, Rodrigo
   Lopes, Joao Paulo Oliveira, and Leonardo Oliveira, for their
   participation in the earlier version of this study published at
   RESER'2011. Finally, we are grateful for the partial support of the
   Samsung Institute for Development of Informatics (Samsung/SIDI) for this
   research.
CR Abrahao S, 2009, INT SYMP EMP SOFTWAR, P469
   Abrahao S, 2009, J SYST SOFTWARE, V82, P253, DOI 10.1016/j.jss.2008.06.031
   Abran A, 2004, IEEE COMPUTER SOC, P204
   Achour CB, 1998, 4 IEEE INT S REQ ENG
   Agarwal R, 1999, IEEE T SOFTWARE ENG, V25, P541, DOI 10.1109/32.799953
   Almqvist JPF, 2006, THESIS LUND U SWEDEN, P129
   Anda B, 2005, EMPIR SOFTW ENG, V10, P285, DOI 10.1007/s10664-005-1289-3
   Andersson C, 2007, IEEE T SOFTWARE ENG, V33, P273, DOI 10.1109/TSE.2007.1005
   Andersson C, 2007, EMPIR SOFTW ENG, V12, P161, DOI 10.1007/s10664-006-9018-0
   [Anonymous], 3 INT WORKSH SHAR RE
   [Anonymous], P 2010 ACM IEEE INT
   [Anonymous], 11 IEEE INT SOFTW ME
   [Anonymous], 2009, CASE STUDY RES DESIG
   Ardimento P, 2006, INFORM SOFTWARE TECH, V48, P313, DOI 10.1016/j.infsof.2005.09.010
   Arisholm E., 2001, Empirical Software Engineering, V6, P231, DOI 10.1023/A:1011439416657
   Arisholm E, 2004, IEEE T SOFTWARE ENG, V30, P521, DOI 10.1109/TSE.2004.43
   Arksey H., 2005, INT J SOC RES METHOD, V8, P19, DOI [10.1080/1364557032000119616, DOI 10.1080/1364557032000119616]
   Baldassarre MT, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P89, DOI 10.1109/ISESE.2003.1237968
   Baresi L, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1276933.1276936
   Basili V. R., 1996, Empirical Software Engineering, V1, P133, DOI 10.1007/BF00368702
   BASILI VR, 1987, IEEE T SOFTWARE ENG, V13, P1278, DOI 10.1109/TSE.1987.232881
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Bornat R, 2008, ACE 08 P 10 C AUSTR
   Briand L, 1997, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P130, DOI [10.1109/ICSM.1997.624239, 10.1023/A:1009720117601]
   Briand L. C., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P345, DOI 10.1109/ICSE.1999.841025
   Briand L. C., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P313, DOI 10.1109/ICSE.1999.841022
   Briand L. C., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P377, DOI 10.1109/ICSE.2000.870428
   Briand LC, 2001, IEEE T SOFTWARE ENG, V27, P513, DOI 10.1109/32.926174
   Briand LC, 1998, FIFTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 1998, PROCEEDINGS, P246, DOI 10.1109/METRIC.1998.731251
   Brooks A, 1995, TECHNICAL REPORT, P38
   Brooks A, 2007, GUIDE ADV EMPIRICAL, P365
   Canfora G, 2005, J SYST SOFTWARE, V77, P113, DOI 10.1016/j.jss.2004.11.007
   Canfora G, 2007, J SYST SOFTWARE, V80, P1317, DOI 10.1016/j.jss.2006.11.004
   Canfora G, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P195
   Cartwright M, 1998, INFORM SOFTWARE TECH, V40, P795, DOI 10.1016/S0950-5849(98)00105-0
   Carver J, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P239
   Carver J., 2010, 1st International Workshop on Replication in Empirical Software Engineering Research (RESER) [Held during ICSE 2010, P4
   CASPERSEN ME, 2007, ACM SIGCSE B, P206
   CECCATO M, 2009, 17 INT C, P178
   Ciolkowski M, 2004, EUROMICRO CONF PROC, P354, DOI 10.1109/EURMIC.2004.1333390
   Ciolkowski M., 1997, Empirical Investigation of Perspective-based Reading: A Replicated Experiment
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Counsell S, 2000, J SYST SOFTWARE, V53, P15, DOI 10.1016/S0164-1212(00)00004-2
   Cox K., 2000, Empirical Software Engineering, V5, P245, DOI 10.1023/A:1026542700033
   Cruz-Lemus JA, 2005, LECT NOTES COMPUT SC, V3713, P113, DOI 10.1007/11557432_9
   Cruz-Lemus JA, 2006, 5 ACM IEEE INT S EMP, P9
   Cruz-Lemus JA, 2010, INFORM SCIENCES, V180, P2209, DOI 10.1016/j.ins.2010.01.026
   Cruz-Lemus JA, 2009, EMPIR SOFTW ENG, V14, P685, DOI 10.1007/s10664-009-9106-z
   da Silva F. Q. B., 2011, Proceedings of the 2011 Second International Workshop on Replication in Empirical Software Engineering Research (RESER 2011), P61, DOI 10.1109/RESER.2011.14
   da Silva FQB, 2011, INFORM SOFTWARE TECH, V53, P899, DOI 10.1016/j.infsof.2011.04.004
   Daly J., 1996, Empirical Software Engineering, V1, P109, DOI 10.1007/BF00368701
   DALY J, 1994, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P50, DOI 10.1109/ICSM.1994.336790
   Davidsen MK, 2010, INFORM SOFTWARE TECH, V52, P707, DOI 10.1016/j.infsof.2010.03.003
   De Lucia A, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1276933.1276934
   De Lucia A, 2010, EMPIR SOFTW ENG, V15, P455, DOI 10.1007/s10664-009-9127-7
   De Lucia A, 2009, EMPIR SOFTW ENG, V14, P57, DOI 10.1007/s10664-008-9090-8
   Dehnadi S., 2006, The camel has two humps, P1
   Denger C, 2003, IEEE T SOFTWARE ENG, V29, P408
   Dias-Neto AC, 2009, INT SYMP EMP SOFTWAR, P270
   Dinh-Trong TT, 2005, IEEE T SOFTWARE ENG, V31, P481, DOI 10.1109/TSE.2005.73
   Do H, 2010, IEEE T SOFTWARE ENG, V36, P593, DOI 10.1109/TSE.2010.58
   DU G, 2006, P 5 ACM IEEE INT S E, P212
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Eisenbarth T, 2003, IEEE T SOFTWARE ENG, V29, P210, DOI 10.1109/TSE.2003.1183929
   English M, 2010, J SYST SOFTWARE, V83, P2275, DOI 10.1016/j.jss.2010.07.013
   Falessi D, 2008, SEVENTH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P189, DOI 10.1109/WICSA.2008.8
   Fenton NE, 2000, IEEE T SOFTWARE ENG, V26, P797, DOI 10.1109/32.879815
   Franca A, 2010, EASE 2010, P10
   Franca A. C. C., 2010, 14 INT C EV ASS SOFT, P1
   Fusaro P., 1997, Empirical Software Engineering, V2, P39, DOI 10.1023/A:1009742216007
   Genero M, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P207
   Genero M, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P263, DOI 10.1109/METRIC.2003.1232473
   Genero M, 2002, LECT NOTES COMPUT SC, V2425, P372
   Genero M, 2001, SCCC 2001: XXI INTERNATIONAL CONFERENCE OF THE CHILEAN COMPUTER SCIENCE SOCIETY, PROCEEDINGS, P95, DOI 10.1109/SCCC.2001.972637
   Genero M, 2001, ADV DATABASES INFORM
   Genero M, 2007, EMPIR SOFTW ENG, V12, P517, DOI 10.1007/s10664-007-9038-4
   Gomez G, 2010, RESER 2010, P42
   Gomez O.S., 2010, International Symposium on Empirical Software Engineering and Measurement, P1, DOI [DOI 10.1145/1852786.1852790, 10.1145/1852786.1852790]
   Gould J, 1964, DICT SOCIAL SCI, P761
   Gravino C, 2008, LECT NOTES COMPUT SC, V5301, P615, DOI 10.1007/978-3-540-87875-9_43
   Harrison R, 2000, J SYST SOFTWARE, V52, P173, DOI 10.1016/S0164-1212(99)00144-2
   Hayes W., 1997, PERSONAL SOFTWARE PR
   Herbsleb JD, 2003, IEEE T SOFTWARE ENG, V29, P481, DOI 10.1109/TSE.2003.1205177
   Hochstein L., 2005, SC 05, P35
   Holgeid KK, 2000, INFORM SOFTWARE TECH, V42, P687, DOI 10.1016/S0950-5849(00)00111-7
   Huynh T, 2009, EMPIR SOFTW ENG, V14, P371, DOI 10.1007/s10664-008-9084-6
   Jeffery R, 2000, SEVENTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 2001, PROCEEDINGS, P16, DOI 10.1109/METRIC.2001.915512
   Jorgensen M, 2004, J SYST SOFTWARE, V70, P79, DOI 10.1016/S0164-1212(02)00160-7
   Jorgensen M, 2003, J SYST SOFTWARE, V68, P253, DOI 10.1016/S0164-1212(03)00066-9
   Jorgensen M, 2010, INFORM SOFTWARE TECH, V52, P506, DOI 10.1016/j.infsof.2009.12.002
   Juristo N, 2009, INT SYMP EMP SOFTWAR, P357
   Kamsties E, 1995, INFORM SOFTWARE TECH, V39, P763
   Kiper J, 1997, VISUAL DEPICTION DEC
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Kitchenham BA, 2007, GUIDE ADV EMPIRICAL, P63
   Kitchenham B, 2008, EMPIR SOFTW ENG, V13, P219, DOI 10.1007/s10664-008-9061-0
   Kitchenham B, 2010, INFORM SOFTWARE TECH, V52, P792, DOI 10.1016/j.infsof.2010.03.006
   Koru AG, 2008, EMPIR SOFTW ENG, V13, P473, DOI 10.1007/s10664-008-9080-x
   Krein Jonathan L, 2010, RESER 2010, P10
   KROGSTIE J, 1994, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P304, DOI 10.1109/ICSM.1994.336764
   Krogstie J, 2006, INFORM SOFTWARE TECH, V48, P993, DOI 10.1016/j.infsof.2005.12.008
   La Sorte MA, 1972, SOCIO Q, V13, P219
   Laitenberger O, 2001, IEEE T SOFTWARE ENG, V27, P387, DOI 10.1109/32.922713
   Land LPW, 1997, AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE - PROCEEDINGS, P17, DOI 10.1109/ASWEC.1997.623751
   Land LPW, 1997, EUR SOFTW ENG C, P22
   Lanubile F, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P269, DOI 10.1109/METRIC.2004.1357909
   LINDSAY RM, 1993, AM STAT, V47, P217, DOI 10.2307/2684982
   Lindvall M, 2007, EMPIR SOFTW ENG, V12, P417, DOI 10.1007/s10664-006-9034-0
   Lokan C, 2008, 12 INT C EV ASS SOFT
   Lokan Chris., 2006, 2006 ACMIEEE INT S E, P75, DOI DOI 10.1145/1159733.1159747
   Lui KM, 2008, IEEE T SOFTWARE ENG, V34, P197, DOI 10.1109/TSE.2007.70755
   Lung J, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P191, DOI 10.1145/1368088.1368115
   Ma X, 2010, WORKSH REPL EMP SOFT
   Maldonado JC, 2006, EMPIR SOFTW ENG, V11, P119, DOI 10.1007/s10664-006-5967-6
   Mendes E, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P100, DOI 10.1109/ISESE.2003.1237969
   Mendes E, 2003, 14 ACM C HYP HYP, P174
   Mendes E, 2009, 32 AUSTR C COMP SCI
   Mendes E, 2005, 11 IEEE INT SOFTW ME, P331
   Mendes E, 2008, EMPIR SOFTW ENG, V13, P3, DOI 10.1007/s10664-007-9045-5
   Miller J., 1998, Empirical Software Engineering, V3, P37, DOI 10.1023/A:1009735805377
   Miller J., 1999, Software Testing, Verification and Reliability, V9, P167, DOI 10.1002/(SICI)1099-1689(199909)9:3<167::AID-STVR185>3.0.CO;2-E
   Miller J, 2000, J SYST SOFTWARE, V51, P19, DOI 10.1016/S0164-1212(99)00107-7
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Mockus A., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P263, DOI 10.1109/ICSE.2000.870417
   Müller MM, 2005, J SYST SOFTWARE, V78, P166, DOI 10.1016/j.jss.2004.12.019
   Myrtveit I, 1999, IEEE T SOFTWARE ENG, V25, P510, DOI 10.1109/32.799947
   Petticrew M, 2006, SYSTEMATIC REV SOCIA, P336
   Phongpaibul Monvorath, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P265
   PHONGPAIBUL M, 2006, ISESE 06, P85
   Popper K, 1959, LOGIC SCI DISCOVERY, P513
   Porter A., 1998, Empirical Software Engineering, V3, P355, DOI 10.1023/A:1009776104355
   PORTER AA, 1995, IEEE T SOFTWARE ENG, V21, P563, DOI 10.1109/32.391380
   Prechelt L, 2001, IEEE T SOFTWARE ENG, V27, P1134, DOI 10.1109/32.988711
   Prechelt L, 2002, IEEE T SOFTWARE ENG, V28, P595, DOI 10.1109/TSE.2002.1010061
   Prechelt L, 2001, J SYST SOFTWARE, V65, P115
   Regnell B, 2001, EMPIR SOFTW ENG, V5, P331
   Reynoso L, 2010, INFORM SCIENCES, V180, P3837, DOI 10.1016/j.ins.2010.06.028
   Ricca F, 2010, EMPIRICAL SOFTWARE E
   Ricca F, 2010, CAN SCREEN MOCKUPS I
   Ricca F, 2007, PROC INT CONF SOFTW, P375
   Ricca F, 2010, IEEE T SOFTWARE ENG, V36, P96, DOI 10.1109/TSE.2009.69
   Ricca F, 2009, INFORM SOFTWARE TECH, V51, P270, DOI 10.1016/j.infsof.2008.01.007
   Roper M, 1997, INFORM SOFTWARE TECH, V39, P763, DOI 10.1016/S0950-5849(97)00028-1
   Sandahl K., 1998, Empirical Software Engineering, V3, P327, DOI 10.1023/A:1009724120285
   Schmidt S, 2009, REV GEN PSYCHOL, V13, P90, DOI 10.1037/a0015108
   Shah HB, 2010, IEEE T SOFTWARE ENG, V36, P150, DOI 10.1109/TSE.2010.7
   Shepperd M, 1996, PROC INT CONF SOFTW, P170, DOI 10.1109/ICSE.1996.493413
   Shull F, 2002, ISESE 2002, P10
   Shull FJ, 2008, EMPIR SOFTW ENG, V13, P211, DOI 10.1007/s10664-008-9060-1
   Sjoberg DIK, 2010, COMMUN ACM, V53, P62, DOI 10.1145/1810891.1810911
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Staffs Keele, 2007, Tech. Rep.
   Staron M, 2006, J SYST SOFTWARE, V79, P727, DOI 10.1016/j.jss.2005.09.014
   Stringfellow C., 2002, Empirical Software Engineering, V7, P319, DOI 10.1023/A:1020515105175
   Thelin T, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P246, DOI 10.1109/METRIC.2004.1357907
   Thelin T, 2002, INFORM SOFTWARE TECH, V44, P683, DOI 10.1016/S0950-5849(02)00095-2
   Thelin T, 2003, IEEE T SOFTWARE ENG, V29, P687, DOI 10.1109/TSE.2003.1223644
   Tian J, 2004, IEEE T SOFTWARE ENG, V30, P754, DOI 10.1109/TSE.2004.87
   Treude C, 2009, PROC INT CONF SOFTW, P12, DOI 10.1109/ICSE.2009.5070504
   Van Geet J, 2009, PROC IEEE INT CONF S, P361, DOI 10.1109/ICSM.2009.5306312
   Vegas S, 2005, EMPIR SOFTW ENG, V10, P437, DOI 10.1007/s10664-005-3862-1
   Vegas S., 2006, International Symposium on Empirical Software Engineering, P28, DOI DOI 10.1145/1159733.1159741
   Verelst J, 2005, EMPIR SOFTW ENG, V10, P467, DOI 10.1007/s10664-005-3863-0
   Visaggio G, 1999, J SYST SOFTWARE, V44, P187, DOI 10.1016/S0164-1212(98)10056-0
   Vokác M, 2004, EMPIR SOFTW ENG, V9, P149, DOI 10.1023/B:EMSE.0000027778.69251.1f
   Wesslen A., 2000, Empirical Software Engineering, V5, P93, DOI 10.1023/A:1009811222725
   Wray S., 2007, PPIG, V7, P243
   Zhang H, 2011, INFORM SOFTWARE TECH, V53, P625, DOI 10.1016/j.infsof.2010.12.010
   Zhang HY, 2009, PROC IEEE INT CONF S, P274, DOI 10.1109/ICSM.2009.5306304
   ZWEBEN SH, 1995, IEEE T SOFTWARE ENG, V21, P200, DOI 10.1109/32.372147
NR 171
TC 58
Z9 62
U1 1
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2014
VL 19
IS 3
BP 501
EP 557
DI 10.1007/s10664-012-9227-7
PG 57
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AF0ZA
UT WOS:000334442700003
DA 2024-07-18
ER

PT J
AU Albayrak, Ö
   Carver, JC
AF Albayrak, Ozlem
   Carver, Jeffrey C.
TI Investigation of individual factors impacting the effectiveness of
   requirements inspections: a replicated experiment
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software inspections; Software engineering; Empirical studies;
   Replication; Requirements
ID SOFTWARE INSPECTIONS; EXPERIENCE; PROGRAM; DESIGN; PAPER
AB This paper presents a replication of an empirical study regarding the impact of individual factors on the effectiveness of requirements inspections. Experimental replications are important for verifying results and investigating the generality of empirical studies. We utilized the lab package and procedures from the original study, with some changes and additions, to conduct the replication with 69 professional developers in three different companies in Turkey. In general the results of the replication were consistent with those of the original study. The main result from the original study, which is supported in the replication, was that inspectors whose degree is in a field related to software engineering are less effective during a requirements inspection than inspectors whose degrees are in other fields. In addition, we found that Company, Experience, and English Proficiency impacted inspection effectiveness.
C1 [Albayrak, Ozlem] Bilkent Univ, Dept Comp Technol & Informat Syst, Ankara, Turkey.
   [Carver, Jeffrey C.] Univ Alabama, Dept Comp Sci, Tuscaloosa, AL 35487 USA.
C3 Ihsan Dogramaci Bilkent University; University of Alabama System;
   University of Alabama Tuscaloosa
RP Carver, JC (corresponding author), Univ Alabama, Dept Comp Sci, Tuscaloosa, AL 35487 USA.
EM ozlemal@bilkent.edu.tr; carver@cs.ua.edu
RI Albayrak, Özlem/HOF-9346-2023; Carver, Jeffrey/AAM-8202-2020; Albayrak,
   Özlem/AAE-8116-2019; Carver, Jeffrey/AFP-1987-2022
OI Carver, Jeffrey/0000-0002-7824-9151; Carver, Jeffrey/0000-0002-7824-9151
CR Aceituna D., 2011, 2011 First International Workshop on Empirical Requirements Engineering, P13, DOI 10.1109/EmpiRE.2011.6046248
   Andersson C, 2007, EMPIR SOFTW ENG, V12, P161, DOI 10.1007/s10664-006-9018-0
   Aurum A, 2005, J RES PRACT INF TECH, V37, P253
   Aurum A, 2002, SOFTW TEST VERIF REL, V12, P133, DOI 10.1002/stvr.243
   Basili V. R., 1996, Empirical Software Engineering, V1, P133, DOI 10.1007/BF00368702
   Biffl S, 2000, SEVENTH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P136, DOI 10.1109/APSEC.2000.896692
   Carver J, 2004, EMPIR SOFTW ENG, V9, P259, DOI 10.1023/B:EMSE.0000027786.04555.97
   Carver J, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P72, DOI 10.1109/ISESE.2003.1237966
   Carver J, 2005, P 4 INT S EMP SOFTW, P17
   Carver J, 2003, THESIS U MD
   Carver JC, 2006, EMPIR SOFTW ENG, V11, P523, DOI 10.1007/s10664-006-9021-5
   Carver JC, 2008, IEEE T SOFTWARE ENG, V34, P800, DOI 10.1109/TSE.2008.49
   Ciolkowski M, 2009, INT SYMP EMP SOFTWAR, P133, DOI 10.1109/ESEM.2009.5316026
   DILLON A, 1988, COMPUT J, V31, P457, DOI 10.1093/comjnl/31.5.457
   FAGAN ME, 1986, IEEE T SOFTWARE ENG, V12, P744, DOI 10.1109/TSE.1986.6312976
   FAGAN ME, 1976, IBM SYST J, V15, P182, DOI 10.1147/sj.153.0182
   Fraenkel JR., 2006, DESIGN EVALUATE RES
   Fusaro P., 1997, Empirical Software Engineering, V2, P39, DOI 10.1023/A:1009742216007
   Garousi V, 2010, IEEE T EDUC, V53, P182, DOI 10.1109/TE.2008.2010994
   Hungerford BC, 2004, IEEE T SOFTWARE ENG, V30, P82, DOI 10.1109/TSE.2004.1265814
   Johnson PM, 1997, PROC INT CONF SOFTW, P118, DOI 10.1145/253228.253252
   Joint Task Force on Computing Curricula IEEE Computer Society Association for Computing Machinery, 2004, CURR GUID UND DEGR P
   Juristo N, 2009, INT SYMP EMP SOFTWAR, P357
   Kitchenham B, 2008, EMPIR SOFTW ENG, V13, P219, DOI 10.1007/s10664-008-9061-0
   Kollanus S., 2009, Open Softw Eng J, V3, P15, DOI [10.2174/1874107X00903010015, DOI 10.2174/1874107X00903010015]
   Kollanus S, 2011, J SOFTW MAINT EVOL-R, V23, P327, DOI 10.1002/smr.456
   Kollanus S, 2009, SOFTWARE QUAL J, V17, P177, DOI 10.1007/s11219-008-9067-2
   Laitenberger O, 2001, IEEE T SOFTWARE ENG, V27, P387, DOI 10.1109/32.922713
   Laitenberger O, 2000, J SYST SOFTWARE, V53, P183, DOI 10.1016/S0164-1212(00)00052-2
   Laitenberger O, 1997, INFORM SOFTWARE TECH, V39, P781, DOI 10.1016/S0950-5849(97)00030-X
   Land LPW, 2003, ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P520, DOI 10.1109/APSEC.2003.1254407
   Lung J, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P191, DOI 10.1145/1368088.1368115
   MARTIN J, 1990, COMMUN ACM, V33, P225, DOI 10.1145/75577.75587
   McCarthy P, 1996, PROCEEDINGS OF THE 3RD INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, P100, DOI 10.1109/METRIC.1996.492447
   McMeekin DA, 2009, IEEE AUS SOFT ENGR, P200, DOI 10.1109/ASWEC.2009.13
   Noyes JM, 2008, ERGONOMICS, V51, P1352, DOI 10.1080/00140130802170387
   OHara K., 1997, Proceedings of the SIGCHI conference on human factors in computing systems, P335
   Olalekan A.S., 2008, Eurpoean Journal of Scientific Research, V19, P614
   Parnas D. L., 1985, Proceedings of the 8th International Conference on Software Engineering (Cat. No.85CH2139-4), P132
   Porter A., 1998, Empirical Software Engineering, V3, P355, DOI 10.1023/A:1009776104355
   Regnell B., 2000, Empirical Software Engineering, V5, P331, DOI 10.1023/A:1009848320066
   Robbins B, 2009, INT SYMP EMP SOFTWAR, P145, DOI 10.1109/ESEM.2009.5316027
   Sandahl K., 1998, Empirical Software Engineering, V3, P327, DOI 10.1023/A:1009724120285
   Sauer C, 2000, IEEE T SOFTWARE ENG, V26, P1, DOI 10.1109/32.825763
   Schneider G. M., 1992, ACM Transactions on Software Engineering and Methodology, V1, P188, DOI 10.1145/128894.128897
   Shull F., 2001, Software Engineering Notes, V26, P288, DOI 10.1145/503271.503248
   Shull F, 2004, EMPIR SOFTW ENG, V9, P111, DOI 10.1023/B:EMSE.0000013516.80487.33
   Shull F, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P7, DOI 10.1109/ISESE.2002.1166920
   Shull FJ, 2008, EMPIR SOFTW ENG, V13, P211, DOI 10.1007/s10664-008-9060-1
   Travassos G, 1999, P 24 NASA SOFTW ENG
   Travassos G, 1999, P OOPSLA 99
   Votta L. G.  Jr., 1993, SIGSOFT Software Engineering Notes, V18, P107, DOI 10.1145/167049.167070
   Winkler D, 2007, EUROMICRO CONF PROC, P245
   Winkler D, 2010, LECT NOTES COMPUT SC, V6156, P17, DOI 10.1007/978-3-642-13792-1_4
   Wong YK, 2011, BEHAV INFORM TECHNOL, V30, P353, DOI 10.1080/0144929X.2010.492877
   Zhijun Zhang, 1999, Empirical Software Engineering, V4, P43, DOI 10.1023/A:1009803214692
NR 56
TC 15
Z9 18
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2014
VL 19
IS 1
BP 241
EP 266
DI 10.1007/s10664-012-9221-0
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AA3HQ
UT WOS:000330983900008
DA 2024-07-18
ER

PT J
AU Davies, J
   German, DM
   Godfrey, MW
   Hindle, A
AF Davies, Julius
   German, Daniel M.
   Godfrey, Michael W.
   Hindle, Abram
TI Software Bertillonage Determining the provenance of software development
   artifacts
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Reuse; Provenance; Code evolution; Code fingerprints
ID CODE; CCFINDER
AB Deployed software systems are typically composed of many pieces, not all of which may have been created by the main development team. Often, the provenance of included components-such as external libraries or cloned source code-is not clearly stated, and this uncertainty can introduce technical and ethical concerns that make it difficult for system owners and other stakeholders to manage their software assets. In this work, we motivate the need for the recovery of the provenance of software entities by a broad set of techniques that could include signature matching, source code fact extraction, software clone detection, call flow graph matching, string matching, historical analyses, and other techniques. We liken our provenance goals to that of Bertillonage, a simple and approximate forensic analysis technique based on bio-metrics that was developed in 19th century France before the advent of fingerprints. As an example, we have developed a fast, simple, and approximate technique called anchored signature matching for identifying the source origin of binary libraries within a given Java application. This technique involves a type of structured signature matching performed against a database of candidates drawn from the Maven2 repository, a 275 GB collection of open source Java libraries. To show the approach is both valid and effective, we conducted an empirical study on 945 jars from the Debian GNU/Linux distribution, as well as an industrial case study on 81 jars from an e-commerce application.
C1 [Davies, Julius] Univ British Columbia, Dept Comp Sci, Vancouver, BC V6T 1W5, Canada.
   [German, Daniel M.] Univ Victoria, Dept Comp Sci, Victoria, BC, Canada.
   [Godfrey, Michael W.] Univ Waterloo, David R Cheriton Sch Comp Sci, Waterloo, ON N2L 3GI, Canada.
   [Hindle, Abram] Univ Alberta, Dept Comp Sci, Edmonton, AB, Canada.
C3 University of British Columbia; University of Victoria; University of
   Waterloo; University of Alberta
RP Davies, J (corresponding author), Univ British Columbia, Dept Comp Sci, Vancouver, BC V6T 1W5, Canada.
EM juliusd@cs.ubc.ca; dmg@uvic.ca; migod@uwaterloo.ca;
   abram@softwareprocess.es
RI Godfrey, Michael W/A-1068-2008
CR Cubranic D, 2005, IEEE T SOFTWARE ENG, V31, P446, DOI 10.1109/TSE.2005.71
   Davies J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1149, DOI 10.1145/1985793.1986025
   Davies Julius., 2011, MSR, P183, DOI DOI 10.1145/1985441.1985468
   Di Penta Massimiliano, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P151, DOI 10.1109/MSR.2010.5463282
   German DM, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P81, DOI 10.1109/MSR.2009.5069483
   Godfrey MW, 2005, IEEE T SOFTWARE ENG, V31, P166, DOI 10.1109/TSE.2005.28
   Gosling J., 2005, Java Language Specification, Vthird
   Hemel A, P 8 INT WORK C MIN S, P63
   Hemel A, 2010, GPL COMPLIANCE ENG G
   Holmes R, 2006, IEEE T SOFTWARE ENG, V32, P952, DOI 10.1109/TSE.2006.117
   Holmes Reid., 2010, Proc. ICSE, P465
   Houck M.M., 2006, FUNDAMENTALS FORENSI
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kapser CJ, 2008, EMPIR SOFTW ENG, V13, P645, DOI 10.1007/s10664-008-9076-6
   Kersten M, 2005, P 2005 INT C ASP OR, P159, DOI DOI 10.1145/1052898.1052912
   Kim Miryung, 2005, ESEC/FSE- 13), P187, DOI [10.1145/1081706.1081737, DOI 10.1145/1081706.1081737]
   Krinke J, 2008, EIGHTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P57, DOI 10.1109/SCAM.2008.14
   Livieri S, 2007, PROC INT CONF SOFTW, P106
   Lozano A., 2007, PROC 4 INT WORKSHOP, P18, DOI DOI 10.1109/MSR.2007.8
   Lozano A, 2008, PROC IEEE INT CONF S, P424, DOI 10.1109/ICSM.2008.4658095
   Ossher J., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P283, DOI 10.1109/ICSM.2011.6080795
   PCI Security Standards Council, 2009, PAYM CARD IND DAT SE
   Robillard MP, 2010, IEEE SOFTWARE, V27, P80, DOI 10.1109/MS.2009.161
   Siegel JA., 2000, ENCY FORENSIC SCI, V1st
   Thummalapenta S, 2010, EMPIR SOFTW ENG, V15, P1, DOI 10.1007/s10664-009-9108-x
NR 25
TC 31
Z9 35
U1 0
U2 43
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2013
VL 18
IS 6
BP 1195
EP 1237
DI 10.1007/s10664-012-9199-7
PG 43
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 215SC
UT WOS:000324229600006
DA 2024-07-18
ER

PT J
AU Hindle, A
   Ernst, NA
   Godfrey, MW
   Mylopoulos, J
AF Hindle, Abram
   Ernst, Neil A.
   Godfrey, Michael W.
   Mylopoulos, John
TI Automated topic naming Supporting cross-project analysis of software
   maintenance activities
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software maintenance; Repository mining; Latent Dirichlet allocation;
   Topic models
AB Software repositories provide a deluge of software artifacts to analyze. Researchers have attempted to summarize, categorize, and relate these artifacts by using semi-unsupervised machine-learning algorithms, such as Latent Dirichlet Allocation (LDA). LDA is used for concept and topic analysis to suggest candidate word-lists or topics that describe and relate software artifacts. However, these word-lists and topics are difficult to interpret in the absence of meaningful summary labels. Current attempts to interpret topics assume manual labelling and do not use domain-specific knowledge to improve, contextualize, or describe results for the developers. We propose a solution: automated labelled topic extraction. Topics are extracted using LDA from commit-log comments recovered from source control systems. These topics are given labels from a generalizable cross-project taxonomy, consisting of non-functional requirements. Our approach was evaluated with experiments and case studies on three large-scale Relational Database Management System (RDBMS) projects: MySQL, PostgreSQL and MaxDB. The case studies show that labelled topic extraction can produce appropriate, context-sensitive labels that are relevant to these projects, and provide fresh insight into their evolving software development activities.
C1 [Hindle, Abram] Univ Alberta, Dept Comp Sci, Edmonton, AB, Canada.
   [Ernst, Neil A.] Univ British Columbia, Dept Comp Sci, Vancouver, BC V6T 1W5, Canada.
   [Godfrey, Michael W.] Univ Waterloo, David Cheriton Sch Comp Sci, Waterloo, ON N2L 3G1, Canada.
   [Mylopoulos, John] Univ Trento, Dept Informat Eng & Comp Sci, Trento, Italy.
C3 University of Alberta; University of British Columbia; University of
   Waterloo; University of Trento
RP Hindle, A (corresponding author), Univ Alberta, Dept Comp Sci, Edmonton, AB, Canada.
EM abram.hindle@softwareprocess.es; nernst@cs.ubc.ca; migod@uwaterloo.ca;
   jm@disi.unitn.it
RI Godfrey, Michael W/A-1068-2008; Ernst, Neil/M-3065-2017
OI Ernst, Neil/0000-0001-5992-2366
CR [Anonymous], 2007, P 4 INT WORKSH MIN S
   [Anonymous], 2003, P 20 INT C MACH LEAR
   [Anonymous], SOFTW ENG PROD QUA 1
   Baegh J, 2008, IEEE SOFTWARE, V25, P57, DOI 10.1109/MS.2008.30
   Baldi PF, 2008, ACM SIGPLAN NOTICES, V43, P543, DOI 10.1145/1449955.1449807
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Boehm B. W., 1976, 2nd International Conference on Software Engineering, P592
   Chung L., 1999, INT SERIES SOFTWARE, V5
   Cleland-Huang J, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P39
   Ernst NA, 2010, INT WORK C REQ ENG F
   Fawcett T, 2006, PATTERN RECOGN LETT, V27, P861, DOI 10.1016/j.patrec.2005.10.010
   Fellbaum C., 1998, WORDNET ELECT LEXICA, DOI DOI 10.7551/MITPRESS/7287.001.0001
   Few S., 2006, Information dashboard design: the effective visual communication of data, V1st ed.
   Forman George, 2010, ACM SIGKDD Explorations Newsletter, DOI DOI 10.1145/1882471.1882479
   German D. M., 2003, Software Process Improvement and Practice, V8, P201, DOI 10.1002/spip.189
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Hindle A, 2011, INT C MIN SOFTW REP
   Hindle A, 2009, PROC IEEE INT CONF S, P339, DOI 10.1109/ICSM.2009.5306310
   Hindle Abram, 2008, P 2008 INT WORKING C, P99
   Kayed A, 2009, 2009 FOURTH INTERNATIONAL CONFERENCE ON INTERNET AND WEB APPLICATIONS AND SERVICES, P200, DOI 10.1109/ICIW.2009.36
   Kohavi R., 1995, IJCAI-95. Proceedings of the Fourteenth International Joint Conference on Artificial Intelligence, P1137
   Marcus A, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P214, DOI 10.1109/WCRE.2004.10
   Massey B, 2002, WORKSH OP SOURC SOFT
   Mc Call J. A., 1977, FACTORS SOFTWARE QUA, VI
   Mei QZ, 2007, KDD-2007 PROCEEDINGS OF THE THIRTEENTH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P490
   Mockus A, 2000, PROC IEEE INT CONF S, P120, DOI 10.1109/ICSM.2000.883028
   Scacchi W, 2005, INT C OP SOURC SOFTW, V1, P1
   Treude C, 2009, PROC INT CONF SOFTW, P575, DOI 10.1109/ICSE.2009.5070559
   Tsoumakas G, 2010, DATA MINING AND KNOWLEDGE DISCOVERY HANDBOOK, SECOND EDITION, P667, DOI 10.1007/978-0-387-09823-4_34
NR 29
TC 21
Z9 24
U1 0
U2 14
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2013
VL 18
IS 6
BP 1125
EP 1155
DI 10.1007/s10664-012-9209-9
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 215SC
UT WOS:000324229600004
DA 2024-07-18
ER

PT J
AU Beck, F
   Diehl, S
AF Beck, Fabian
   Diehl, Stephan
TI On the impact of software evolution on software clustering
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software clustering; Software evolution; Empirical study; Code
   dependencies
ID DECOMPOSITIONS; ALGORITHMS
AB The evolution of a software project is a rich data source for analyzing and improving the software development process. Recently, several research groups have tried to cluster source code artifacts based on information about how the code of a software system evolves. The results of these evolutionary approaches seem promising, but a direct comparison to traditional software clustering approaches based on structural code dependencies is still missing. To fill this gap, we conducted several clustering experiments with an established software clustering tool comparing and combining the evolutionary and the structural approach. These experiments show that the evolutionary approach could produce meaningful clustering results. While the traditional approach provides better results because of a more reliable data density of the structural data, the combination of both approaches is able to improve the overall clustering quality. A review of related studies shows that this approach of combining dependency information is also successful in other software engineering applications.
C1 [Beck, Fabian; Diehl, Stephan] Univ Trier, D-54286 Trier, Germany.
C3 Universitat Trier
RP Beck, F (corresponding author), Univ Trier, D-54286 Trier, Germany.
EM beckf@uni-trier.de; diehl@uni-trier.de
OI Diehl, Stephan/0000-0002-4287-7447; Beck, Fabian/0000-0003-4042-3043
CR Adams B., 2010, P 32 ACMIEEE INT C S, P305
   Andritsos P, 2005, IEEE T SOFTWARE ENG, V31, P150, DOI 10.1109/TSE.2005.25
   [Anonymous], P C SOFTW MAINT REEN
   [Anonymous], ACSC 07 P 30 AUSTR C
   Anquetil N., 1999, Sixth Working Conference on Reverse Engineering (Cat. No.PR00303), P235, DOI 10.1109/WCRE.1999.806964
   Arafat O, 2009, PROC INT CONF SOFTW, P195, DOI 10.1109/ICSE-COMPANION.2009.5070980
   Ball T, 1997, ICSE 97
   Bavota G., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P195, DOI 10.1109/WCRE.2010.29
   Beck F., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P99, DOI 10.1109/WCRE.2010.19
   Beck F., 2011, P 19 ACM SIGSOFT S 1, P354
   Beck F, 2010, SOFTVIS 2010: PROCEEDINGS OF THE 2010 INTERNATIONAL SYMPOSIUM ON SOFTWARE VISUALIZATION, P183
   Beyer D, 2005, PROG COMPREHEN, P259, DOI 10.1109/WPC.2005.12
   Bittencourt R. A., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P163, DOI 10.1109/WCRE.2010.26
   Breu S, 2006, IEEE INT CONF AUTOM, P221
   Canfora G, 2006, PROC IEEE INT CONF S, P213
   Cataldo M, 2009, IEEE T SOFTWARE ENG, V35, P864, DOI 10.1109/TSE.2009.42
   Cook T. D., 1979, Quasi-experimentation: Design analysis issues for field settings
   Fluri B, 2005, FIFTH IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P66, DOI 10.1109/SCAM.2005.14
   Gall H, 2003, IWPSE 03
   Gargiulo J., 2001, SEKE 01, P244
   German DM, 2009, INFORM SOFTWARE TECH, V51, P1394, DOI 10.1016/j.infsof.2009.04.018
   Hansen KM, 2011, J SYST SOFTWARE, V84, P1233, DOI 10.1016/j.jss.2011.02.037
   Hattori Lile., 2008, Brazilian Symposium on Databases, P210
   Kagdi H., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P119, DOI 10.1109/WCRE.2010.21
   Kagdi H, 2007, MSR 07
   Kim S, 2007, PROC INT CONF SOFTW, P489
   Koschke R, 2000, PROG COMPREHEN, P201, DOI 10.1109/WPC.2000.852494
   Kuhn A, 2005, WCRE: 12TH WORKING CONFERENCE ON REVERSE ENGINEERING 2005, PROCEEDINGS, P133
   MAAREK YS, 1991, IEEE T SOFTWARE ENG, V17, P800, DOI 10.1109/32.83915
   Mancoridis S., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P50, DOI 10.1109/ICSM.1999.792498
   Mancoridis S, 1998, PROG COMPREHEN, P45, DOI 10.1109/WPC.1998.693283
   Maqbool O, 2007, IEEE T SOFTWARE ENG, V33, P759, DOI 10.1109/TSE.2007.70732
   Mitchell B., 2002, THESIS DREXEL U
   Mitchell BS, 2008, SOFT COMPUT, V12, P77, DOI 10.1007/s00500-007-0218-3
   Mitchell BS, 2001, PROC IEEE INT CONF S, P744, DOI 10.1109/ICSM.2001.972795
   Ogawa M, 2008, IEEE PACIFIC VISUALISATION SYMPOSIUM 2008, PROCEEDINGS, P191
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   Patel C, 2009, EUR CON SFTWR MTNCE, P27, DOI 10.1109/CSMR.2009.62
   Shtern M, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P284, DOI 10.1109/WCRE.2004.6
   Shtern M, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P249, DOI 10.1109/WCRE.2007.32
   Sindhgatta R, 2007, P INT COMP SOFTW APP, P317
   STEVENS WP, 1974, IBM SYST J, V13, P115, DOI 10.1147/sj.132.0115
   Tzerpos V., 1999, Sixth Working Conference on Reverse Engineering (Cat. No.PR00303), P187, DOI 10.1109/WCRE.1999.806959
   Vanya A, 2008, INT C PROGRAM COMPRE, P192, DOI 10.1109/ICPC.2008.34
   Voinea Lucian., 2006, EUROVIS, P187
   Wen Z, 2004, PROG COMPREHEN, P194, DOI 10.1109/WPC.2004.1311061
   Wen ZH, 2005, PROG COMPREHEN, P269
   Wong S, 2009, PROC IEEE INT CONF S, P467, DOI 10.1109/ICSM.2009.5306277
   Wu JW, 2005, PROC IEEE INT CONF S, P525
   Xiao CC, 2005, NINTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P124
   Zhou Y, 2008, WORK CONF REVERSE EN, P27, DOI 10.1109/WCRE.2008.39
   Zimmermann T, 2004, PROC INT CONF SOFTW, P563, DOI 10.1109/ICSE.2004.1317478
   Zimmermann T., 2004, Proc. of the 1st Int'lWorkshop onMining Software Repositories (MSR), P2, DOI [DOI 10.1049/IC:20040466, 10.1049/ic:20040466]
   Zimmermann T, 2003, IWPSE 03
NR 54
TC 28
Z9 31
U1 1
U2 18
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2013
VL 18
IS 5
BP 970
EP 1004
DI 10.1007/s10664-012-9225-9
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 192CP
UT WOS:000322462000005
DA 2024-07-18
ER

PT J
AU Kocaguneli, E
   Menzies, T
   Keung, JW
AF Kocaguneli, Ekrem
   Menzies, Tim
   Keung, Jacky W.
TI Kernel methods for software effort estimation Effects of different
   kernel functions and bandwidths on estimation accuracy
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Effort estimation; Data mining; Kernel function; Bandwidth
ID COST ESTIMATION; PREDICTION; SIMULATION; SELECTION; MODELS
AB Analogy based estimation (ABE) generates an effort estimate for a new software project through adaptation of similar past projects (a.k.a. analogies). Majority of ABE methods follow uniform weighting in adaptation procedure. In this research we investigated non-uniform weighting through kernel density estimation. After an extensive experimentation of 19 datasets, 3 evaluation criteria, 5 kernels, 5 bandwidth values and a total of 2090 ABE variants, we found that: (1) non-uniform weighting through kernel methods cannot outperform uniform weighting ABE and (2) kernel type and bandwidth parameters do not produce a definite effect on estimation performance. In summary simple ABE approaches are able to perform better than much more complex approaches. Hence,-provided that similar experimental settings are adopted-we discourage the use of kernel methods as a weighting strategy in ABE.
C1 [Kocaguneli, Ekrem; Menzies, Tim] W Virginia Univ, Lane Dept Comp Sci & Elect Engn, Morgantown, WV 26505 USA.
   [Keung, Jacky W.] Hong Kong Polytech Univ, Dept Comp, Kowloon, Hong Kong, Peoples R China.
C3 West Virginia University; Hong Kong Polytechnic University
RP Kocaguneli, E (corresponding author), W Virginia Univ, Lane Dept Comp Sci & Elect Engn, Morgantown, WV 26505 USA.
EM kocaguneli@gmail.com; tim@menzies.us; jacky.keung@comp.polyu.edu.hk
RI Menzies, Tim/X-7680-2019; Keung, Jacky/ABA-7089-2020; Keung,
   Jacky/X-4693-2019
OI Menzies, Tim/0000-0002-5040-3196; Keung, Jacky/0000-0002-3803-9600
FU NSF [CCF:1017330]; Qatar/West Virginia University [NPRP 09-12-5-2-470];
   Direct For Computer & Info Scie & Enginr; Division of Computing and
   Communication Foundations [1017263] Funding Source: National Science
   Foundation
FX The work was partially funded by NSF grant CCF:1017330 and the
   Qatar/West Virginia University research grant NPRP 09-12-5-2-470.
CR Alpaydin E, 2004, INTRO MACHINE LEARNI
   Angelis L., 2000, Empirical Software Engineering, V5, P35, DOI 10.1023/A:1009897800559
   [Anonymous], 1995, 11 C UNC ART INT SAN, DOI DOI 10.1109/TGRS.2004.834800
   [Anonymous], THESIS W VIRGINIA U
   Auer M, 2006, IEEE T SOFTWARE ENG, V32, P83, DOI 10.1109/TSE.2006.1599418
   Boehm B, 2000, ANN SOFTW ENG, V10, P177, DOI 10.1023/A:1018991717352
   Boehm BW., 1981, Software Engineering Economics
   Briand LC, 1998, PROC INT CONF SOFTW, P390, DOI 10.1109/ICSE.1998.671392
   Briand LC, 1999, P 21 INT C SOFTW ENG, DOI DOI 10.1145/302405.302647
   Browman HI, 1999, MAR ECOL PROG SER, V191, P301, DOI 10.3354/meps191301
   Chen Zhihoa., 2005, PROMISE 05
   Cressie N., 1993, STAT SPATIAL DATA
   Desharnais J. M., 1989, Analyse statistique de la productivitie des projects informatique a partie de la technique des point des function
   Duda R. O., 2001, PATTERN CLASSIFICATI, P517
   Foss T, 2003, IEEE T SOFTWARE ENG, V29, P985, DOI 10.1109/TSE.2003.1245300
   Frank E., 2003, Proceedings of the Conference on Uncertainty in Artificial Intelligence, P249
   Hardle W., 2003, APPL MULTIVARIATE ST
   Jeffery R, 2000, SEVENTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 2001, PROCEEDINGS, P16, DOI 10.1109/METRIC.2001.915512
   Jorgensen M, 2004, J SYST SOFTWARE, V70, P37, DOI 10.1016/S0164-1212(02)00156-5
   Kadoda G., 2000, UK CBR Workshop, P1
   KEMERER CF, 1987, COMMUN ACM, V30, P416, DOI 10.1145/22899.22906
   Keung J., 2011, Automated Software Engineering
   Keung J, 2008, ASWEC 2008: 19TH AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P229
   Keung J, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P294
   Keung JW, 2008, ASIA PAC SOFWR ENG, P495, DOI 10.1109/APSEC.2008.43
   Keung JW, 2008, IEEE T SOFTWARE ENG, V34, P471, DOI 10.1109/TSE.2008.34
   Kirsopp C, 2003, BCS CONF SERIES, P61
   Kitchenham B, 2009, P 5 INT C PRED MOD S, P1, DOI DOI 10.1145/1540438.1540444
   Kitchenham B. A., 2001, IEE Proceedings-Software, V148, P81, DOI 10.1049/ip-sen:20010506
   Kläs M, 2008, ADV COMPUT, V74, P115, DOI 10.1016/S0065-2458(08)00604-9
   Kocaguneli E, 2012, IEEE T SOFTWARE ENG, V38, P425, DOI 10.1109/TSE.2011.27
   Kultur Yigit, 2009, 2009 24th International Symposium on Computer and Information Sciences (ISCIS), P498, DOI 10.1109/ISCIS.2009.5291873
   Li J, 2006, P 2006 ACM IEEE INT, V13, P63
   Li JZ, 2008, EMPIR SOFTW ENG, V13, P63, DOI 10.1007/s10664-007-9054-4
   Li JZ, 2007, EMPIR SOFTW ENG, V12, P65, DOI 10.1007/s10664-006-7552-4
   Li YF, 2009, J SYST SOFTWARE, V82, P241, DOI 10.1016/j.jss.2008.06.001
   Mendes E, 2003, EMPIR SOFTW ENG, V8, P163, DOI 10.1023/A:1023062629183
   Mendes E, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P79, DOI 10.1109/ISESE.2002.1166928
   Mendes E., 2002, P 11 INT C WORLD WID, P272
   Mendes E, 2008, IEEE T SOFTWARE ENG, V34, P723, DOI 10.1109/TSE.2008.64
   Menzies T, 2007, BUSINESS CASE AUTOMA, P303
   Menzies T, 2006, IEEE T SOFTWARE ENG, V32, P883, DOI 10.1109/TSE.2006.114
   Menzies T, 2010, AUTOMAT SOFTW ENG, V17, P409, DOI 10.1007/s10515-010-0070-z
   Milic D, 2004, EUR C
   Molokken-Ostvold K, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P208, DOI 10.1109/METRIC.2004.1357904
   Pal S.K., 2001, Foundations of Soft Case-based Reasoning
   Palpanas T, 2003, SIGMOD REC, V32, P77, DOI 10.1145/959060.959074
   Pendharkar PC, 2005, IEEE T SOFTWARE ENG, V31, P615, DOI 10.1109/TSE.2005.75
   Robson C., 2002, Real World Research, V2nd
   Scheid S, 2004, INTRO KERNEL SMOOTHI
   Scott DW, 2015, WILEY SER PROBAB ST, P1
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   Shepperd M, 2001, IEEE T SOFTWARE ENG, V27, P1014, DOI 10.1109/32.965341
   Shepperd M, 1996, PROC INT CONF SOFTW, P170, DOI 10.1109/ICSE.1996.493413
   Shepperd M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P304, DOI 10.1109/FOSE.2007.23
   Stensrud E, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P3, DOI 10.1109/METRIC.2002.1011320
   Trendowicz A., 2006, 28th International Conference on Software Engineering Proceedings, P331, DOI 10.1145/1134285.1134332
   Walkerden F., 1999, Empirical Software Engineering, V4, P135, DOI 10.1023/A:1009872202035
   Wand M.P., 1994, KERNEL SMOOTHING
NR 59
TC 26
Z9 28
U1 0
U2 9
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2013
VL 18
IS 1
BP 1
EP 24
DI 10.1007/s10664-011-9189-1
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 064IW
UT WOS:000313069300001
DA 2024-07-18
ER

PT J
AU Rahman, F
   Bird, C
   Devanbu, P
AF Rahman, Foyzur
   Bird, Christian
   Devanbu, Premkumar
TI Clones: what that smell?
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Empirical software engineering; Software maintenance; Software clone;
   Software quality; Software evolution
ID SOFTWARE CHANGES; CODE CLONES; HARMFUL; CLONING
AB Clones are generally considered bad programming practice in software engineering folklore. They are identified as a (Fowler et al. 1999) and a major contributor to project maintenance difficulties. Clones inherently cause code bloat, thus increasing project size and maintenance costs. In this work, we try to validate the conventional wisdom empirically to see whether cloning makes code more defect prone. This paper analyses the relationship between cloning and defect proneness. For the four medium to large open source projects that we studied, we find that, first, the great majority of bugs are not significantly associated with clones. Second, we find that clones may be defect prone than non-cloned code. Third, we find little evidence that clones with more copies are actually more error prone. Fourth, we find little evidence to support the claim that clone groups that span more than one file or directory are more defect prone than collocated clones. Finally, we find that developers do not need to put a disproportionately higher effort to fix clone dense bugs. Our findings do not support the claim that clones are really a "bad smell" (Fowler et al. 1999). Perhaps we can clone, breathe easily, at the same time.
C1 [Rahman, Foyzur; Devanbu, Premkumar] Univ Calif Davis, Dept Comp Sci, Davis, CA 95616 USA.
   [Bird, Christian] Microsoft Res, Empir Software Engn, Redmond, WA 98052 USA.
C3 University of California System; University of California Davis;
   Microsoft
RP Rahman, F (corresponding author), Univ Calif Davis, Dept Comp Sci, Davis, CA 95616 USA.
EM mfrahman@ucdavis.edu; cbird@microsoft.com; ptdevanbu@ucdavis.edu
RI /AAZ-7265-2020
OI Devanbu, Prem/0000-0002-4346-5276
FU IBM; NSF [SoD-TEAM 0613949]; Direct For Computer & Info Scie & Enginr
   [0964703] Funding Source: National Science Foundation; Division of
   Computing and Communication Foundations [0964703] Funding Source:
   National Science Foundation
FX We would like to thank Adrian Bachmann and Avi Bernstein for the Univ.
   of Zurich bug linking data. We also thank Lingxiao Jiang, Ghassan
   Mishergi, Zhendong Su and Stephane Glondu for providing us DECKARD. We
   extend our gratitude to anonymous reviewers for valuable comments on
   this paper. We acknowledge support from an IBM Faculty Fellowship, and a
   gift from Microsoft Research. Most of all we acknowledge with gratitude
   support from the NSF Science of Design Program, grant No. SoD-TEAM
   0613949. Any opinions, findings, and conclusions or recommendations
   expressed in this material are those of the authors and do not
   necessarily reflect the views of the National Science Foundation.
CR Alkhatib G., 1992, Journal of Software Maintenance: Research and Practice, V4, P83, DOI 10.1002/smr.4360040203
   [Anonymous], 2002, Metrics and Models in Software Quality Engineering
   [Anonymous], 2004, OSDI 04
   Bachmann A., 2009, DATA RETRIEVAL PROCE
   BAKER BS, 1995, SECOND WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P86, DOI 10.1109/WCRE.1995.514697
   Balazinska M., 1999, Sixth Working Conference on Reverse Engineering (Cat. No.PR00303), P326, DOI 10.1109/WCRE.1999.806971
   Barbour L., 2011, Late Propagation in Software Clones
   Baxter ID, 1998, PROC IEEE INT CONF S, P368, DOI 10.1109/ICSM.1998.738528
   Berkus J., 2007, The 5 types of open source projects
   Bird C, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P121, DOI 10.1145/1595696.1595716
   Bruntink M, 2005, IEEE T SOFTWARE ENG, V31, P804, DOI 10.1109/TSE.2005.114
   Cai DX, 2011, LECT NOTES COMPUT SC, V6603, P432, DOI 10.1007/978-3-642-19811-3_30
   Cubranic D, 2003, PROC INT CONF SOFTW, P408, DOI 10.1109/ICSE.2003.1201219
   Duala-Ekoko E, 2007, PROC INT CONF SOFTW, P158
   Ducasse S., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P109, DOI 10.1109/ICSM.1999.792593
   Fischer M, 2003, PROC IEEE INT CONF S, P23, DOI 10.1109/ICSM.2003.1235403
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gabel M, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P321, DOI 10.1145/1368088.1368132
   Geiger R, 2006, LECT NOTES COMPUT SC, V3922, P411
   Göde N, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P311, DOI 10.1145/1985793.1985836
   Higo Y., 2005, ACM SIGSOFT Softw. Eng. Notes, V30, P1
   Jiang LX, 2007, PROC INT CONF SOFTW, P96
   Jiang Lingxiao, 2007, P THE 6 JOINT M EURO, P55, DOI DOI 10.1145/1287624.1287634
   Juergens E, 2009, PROC INT CONF SOFTW, P485, DOI 10.1109/ICSE.2009.5070547
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kapser C, 2006, WORK CONF REVERSE EN, P19
   Kapser CJ, 2008, EMPIR SOFTW ENG, V13, P645, DOI 10.1007/s10664-008-9076-6
   Kawaguchi S, 2009, WORK CONF REVERSE EN, P313, DOI [10.1109/MCRE.2009.36, 10.1109/WCRE.2009.36]
   Kim M, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P83
   Kim Miryung, 2005, ESEC/FSE- 13), P187, DOI [10.1145/1081706.1081737, DOI 10.1145/1081706.1081737]
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kim S, 2006, IEEE INT CONF AUTOM, P81
   Komondoor R, 2001, LECT NOTES COMPUT SC, V2126, P40
   Komondoor R, 2003, PROG COMPREHEN, P33
   Krinke J, 2008, EIGHTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P57, DOI 10.1109/SCAM.2008.14
   Krinke J, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P170, DOI 10.1109/WCRE.2007.7
   Mäntylä MV, 2006, EMPIR SOFTW ENG, V11, P395, DOI 10.1007/s10664-006-9002-8
   Mockus A, 2000, PROC IEEE INT CONF S, P120, DOI 10.1109/ICSM.2000.883028
   Nguyen TT, 2009, IEEE INT CONF AUTOM, P123, DOI 10.1109/ASE.2009.90
   Rahman F, 2010, P 7 WORK C MIN SOFTW
   Roy C, 2007, 541115 TR QUEENS SCH
   Selim G. M. K., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P13, DOI 10.1109/WCRE.2010.11
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Thummalapenta S, 2010, EMPIR SOFTW ENG, V15, P1, DOI 10.1007/s10664-009-9108-x
   Toomim M, 2004, 2004 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN CENTRIC COMPUTING: PROCEEDINGS, P173, DOI 10.1109/VLHCC.2004.35
NR 45
TC 59
Z9 68
U1 0
U2 9
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2012
VL 17
IS 4-5
BP 503
EP 530
DI 10.1007/s10664-011-9195-3
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 943WF
UT WOS:000304155700007
DA 2024-07-18
ER

PT J
AU Tasiran, S
   Keremoglu, ME
   Muslu, K
AF Tasiran, Serdar
   Keremoglu, M. Erkan
   Muslu, Kivanc
TI Location pairs: a test coverage metric for shared-memory concurrent
   programs
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Concurrency; Testing; Coverage metrics; Multi-threaded software; Shared
   memory
AB We present a coverage metric targeted at shared-memory concurrent programs: the Location Pairs (LP) coverage metric. The goals of this metric are (i) to measure how thoroughly a program has been tested from a concurrency standpoint, i.e., whether enough qualitatively different thread interleavings have been explored, and (ii) to guide testing towards unexplored concurrency scenarios. This metric was inspired by an access pattern known to lead to high-level concurrency errors in industrial software and in the literature. We built a monitoring tool to measure LP coverage of test programs. We used the LP metric for interactive debugging, and compared LP coverage with other concurrency coverage metrics on Java benchmarks. We demonstrated that LP coverage corresponds better to concurrency errors, is a better measure of how well a program is exercised concurrency-wise by a test set, reaches saturation later than other coverage metrics, and is viable and useful as an interactive testing and debugging tool.
C1 [Tasiran, Serdar; Keremoglu, M. Erkan] Koc Univ, Istanbul, Turkey.
C3 Koc University
RP Tasiran, S (corresponding author), Koc Univ, Istanbul, Turkey.
EM stasiran@ku.edu.tr
CR Ben-Asher Y., 2006, Proceedings of the 2006 workshop on Parallel and distributed systems: testing and debugging, PADTAD '06, P37
   Bradbury JeremyS., 2006, MUTATION ANAL, P11
   Bron Arkady, 2005, P ACM SIGPLAN S PRIN, P206
   Chen J., 2007, Proceedings of International Conference on Automated Software Engineering, P313
   Daly C., 2001, Proceedings of the 2001 joint ACM-ISCOPE conference on Java Grande, P106, DOI [DOI 10.1145/376656.376826, 10.1145/376656, DOI 10.1145/376656]
   Elmas T, 2005, ACM SIGPLAN NOTICES, V40, P27, DOI 10.1145/1064978.1065015
   Elmas T, 2010, COMMUN ACM, V53, P85, DOI 10.1145/1839676.1839698
   Factor M., 1996, Proceedings of the Seventh Israeli Conference on Computer Systems and Software Engineering, P119, DOI 10.1109/ICCSSE.1996.554913
   Farchi E, 2003, IPDPS 03, P2862
   Farzan A, 2008, LECT NOTES COMPUT SC, V5123, P52
   Flanagan C, 2004, ACM SIGPLAN NOTICES, V39, P256, DOI 10.1145/982962.964023
   Flanagan C, 2003, ACM SIGPLAN NOTICES, V38, P1, DOI 10.1145/640136.604176
   Flanagan C, 2008, PLDI'08: PROCEEDINGS OF THE 2008 SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN & IMPLEMENTATION, P293, DOI 10.1145/1375581.1375618
   FRANKL PG, 1993, IEEE T SOFTWARE ENG, V19, P774, DOI 10.1109/32.238581
   Havelund K, 2003, IPDPS 03, P2861
   Kaminsky A, 2007, 100 PAR DISTR PROC S, V0, P231
   Keremoglu ME, 2006, PADTAD 06, P23
   Kulkarni M, 2009, INT SYM PERFORM ANAL, P65, DOI 10.1109/ISPASS.2009.4919639
   Lai Z, 2008, P 16 ACM SIGSOFT INT, P94
   Liqiang Wang, 2006, Proceedings of the 2006 ACM SIGPLAN Symposium on Principles and Practice of Parallel Programming PPoPP'06, P137, DOI 10.1145/1122971.1122993
   Lu Shan., 2007, P 6 JOINT M EUROPEAN, P533
   Manson J, 2005, ACM SIGPLAN NOTICES, V40, P378, DOI 10.1145/1047659.1040336
   Musuvathi M., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, P267
   Naik M, 2006, ACM SIGPLAN NOTICES, V41, P308, DOI 10.1145/1133981.1134018
   Nir-Buchbinder Y, 2007, P 4 SOQUA DUBR CROAT, P9
   Sherman E, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P53, DOI 10.1145/1595696.1595706
   Smith L. A., 2001, P 2001 ACMIEEE C SUP, P8, DOI [10.1145/582034.582042, DOI 10.1145/582034.582042]
   Sung A, 2010, ASIA PAC SOFWR ENG, P260, DOI 10.1109/APSEC.2010.38
   TASIRAN S, 2004, HPL2004177
   TAYLOR RN, 1992, IEEE T SOFTWARE ENG, V18, P206, DOI 10.1109/32.126769
   Tretmans J, 1999, LECT NOTES COMPUT SC, V1664, P46
   Visser W., 2003, Automated Software Engineering, V10, P203, DOI 10.1023/A:1022920129859
   Yang C.-S. D., 1998, Software Engineering Notes, V23, P153, DOI 10.1145/271775.271804
   Yu T, 2011, P 4 IEEE INT C SOFTW
   Zhu H, 1997, ACM COMPUT SURV, V29, P366, DOI 10.1145/267580.267590
NR 35
TC 8
Z9 8
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2012
VL 17
IS 3
BP 129
EP 165
DI 10.1007/s10664-011-9166-8
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 893GI
UT WOS:000300343800001
DA 2024-07-18
ER

PT J
AU Porras, GC
   Guéhéneuc, YG
AF Porras, Gerardo Cepeda
   Gueheneuc, Yann-Gael
TI An empirical study on the efficiency of different design pattern
   representations in UML class diagrams
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Eye-tracking; Design patterns; Visualization; Empirical study; UML class
   diagrams
ID EYE-MOVEMENTS
AB Design patterns are recognized in the software engineering community as useful solutions to recurring design problems that improve the quality of programs. They are more and more used by developers in the design and implementation of their programs. Therefore, the visualization of the design patterns used in a program could be useful to efficiently understand how it works. Currently, a common representation to visualize design patterns is the UML collaboration notation. Previous work noticed some limitations in the UML representation and proposed new representations to tackle these limitations. However, none of these pieces of work conducted empirical studies to compare their new representations with the UML representation. We designed and conducted an empirical study to collect data on the performance of developers on basic tasks related to design pattern comprehension (i.e., identifying composition, role, participation) to evaluate the impact of three visual representations and to compare them with the UML one. We used eye-trackers to measure the developers' effort during the execution of the study. Collected data and their analyses show that stereotype-enhanced UML diagrams are more efficient for identifying composition and role than the UML collaboration notation. The UML representation and the pattern-enhanced class diagrams are more efficient for locating the classes participating in a design pattern (i.e., identifying participation).
C1 [Gueheneuc, Yann-Gael] Ecole Polytech, Dept Genie Informat & Genie Logiciel, Ptidej Team, Montreal, PQ H3C 3A7, Canada.
   [Porras, Gerardo Cepeda] Univ Montreal, Dept Informat & Rech Operat, Ptidej Team, Montreal, PQ, Canada.
C3 Universite de Montreal; Polytechnique Montreal; Universite de Montreal
RP Guéhéneuc, YG (corresponding author), Ecole Polytech, Dept Genie Informat & Genie Logiciel, Ptidej Team, Montreal, PQ H3C 3A7, Canada.
EM cepedapg@iro.umontreal.ca; yann-gael.gueheneuc@polymtl.ca
RI Guéhéneuc, Yann-Gaël/K-9371-2019
FU Canada Research Chair on Software Patterns and Patterns of Software;
   NSERC; CFI
FX This work has been partly funded by the Canada Research Chair on
   Software Patterns and Patterns of Software, a NSERC Discovery Grant, and
   a CFI Infrastructure Grant.
CR Ambler ScottW., 2005, ELEMENTS UML 20 STYL
   [Anonymous], 2005, P 14 ANN C US PROF A
   Aversano Lerina., 2007, PROC THE 6 EUROPEAN, P385, DOI [DOI 10.1145/1287624.1287680, 10.1145/1287624.1287680.]
   Bednarik R., 2006, Proceedings. ETRA 2006. Symposium on Eye Tracking Research and Applications, P125, DOI 10.1145/1117309.1117356
   Briand LC, 2005, IEEE T SOFTWARE ENG, V31, P833, DOI 10.1109/TSE.2005.105
   Chabris CF, 2005, LECT NOTES COMPUT SC, V3426, P36
   DONG J, 2005, P 6 INT C INF TECHN
   Dong J, 2007, IEEE T SOFTWARE ENG, V33, P433, DOI 10.1109/TSE.2007.1012
   Duchowski A., 2003, Eye Tracking Methodology: Theory and Practice
   Eden AH, 1997, AUTOMATED SOFTWARE ENGINEERING, 12TH IEEE INTERNATIONAL CONFERENCE, PROCEEDINGS, P143, DOI 10.1109/ASE.1997.632834
   EICHELBERGER H, 2003, SOFTVIS WORKSH VIS S, P30
   Eichelberger Holger., 2003, SOFTVIS 03 PROC 2003, P159, DOI DOI 10.1145/774833.774857
   France RB, 2004, IEEE T SOFTWARE ENG, V30, P193, DOI 10.1109/TSE.2004.1271174
   Gamma E., 1998, Design Patterns: Elements of Reusable Object-Oriented Software
   GAMMA E, 1996, JAVA REP, V1, P47
   Goldberg J. H., 2002, Proceedings ETRA 2002. Eye Tracking Research and Applications Symposium, P51, DOI 10.1145/507072.507082
   Goldberg JH, 1999, INT J IND ERGONOM, V24, P631, DOI 10.1016/S0169-8141(98)00068-7
   Guan Z., 2006, Proceedings of the SIGCHI, P1253, DOI DOI 10.1145/1124772.1124961
   GUHNEUC YG, 2006, P 16 IBM CTR ADV STU, P1
   Hutchins E., 1995, Distributed Cognition
   *JHOTDRAW, 2007, JHOTDRAW JAV GUI FRA
   Kazman R, 1998, IEEE INT C ENG COMP, P68, DOI 10.1109/ICECCS.1998.706657
   Khomh F., 2008, P 12 C SOFTW MAINT R
   Lauder A., 1998, Precise Visual Speci cation of Design Patterns, P114
   Mapelsden D., 2002, PROCEEDING P 40 INT, P3
   MOORE P, 1993, J TECH WRIT COMMUN, V23, P137, DOI 10.2190/G748-BY68-L83T-X02J
   *OBJ MAN GROUP, 1997, UN MOD LANG SPEC VER
   Purchase H. C., 2002, Empirical Software Engineering, V7, P233, DOI 10.1023/A:1016344215610
   Rayner K, 1998, PSYCHOL BULL, V124, P372, DOI 10.1037/0033-2909.124.3.372
   RICH C, 1988, COMPUTER, V21, P11
   Schauer R, 1998, PROG COMPREHEN, P4, DOI 10.1109/WPC.1998.693273
   Shalloway A., 2002, DESIGN PATTERNS EXPL
   SOLOWAY E, 1988, COMMUN ACM, V31, P1259, DOI 10.1145/50087.50088
   Sun D, 2005, PROG COMPREHEN, P317
   Trese T, 2007, SIGDOC'07: PROCEEDINGS OF THE 25TH ACM INTERNATIONAL CONFERENCE ON DESIGN OF COMMUNICATION, P103
   VLISSIDES J, 1998, NOTATION NOTATION NO
   VONMAYRHAUSER A, 1995, COMPUTER, V28, P44, DOI 10.1109/2.402076
   Ware, 2005, VISUAL QUERIES FDN V
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Yusuf S, 2007, INT C PROGRAM COMPRE, P113
NR 40
TC 37
Z9 42
U1 0
U2 9
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2010
VL 15
IS 5
BP 493
EP 522
DI 10.1007/s10664-009-9125-9
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 619WX
UT WOS:000279462100002
DA 2024-07-18
ER

PT J
AU Hata, H
   Mizuno, O
   Kikuno, T
AF Hata, Hideaki
   Mizuno, Osamu
   Kikuno, Tohru
TI Fault-prone module detection using large-scale text features based on
   spam filtering
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Fault-prone module; Large-scale; Text feature; Spam filtering; Text
   mining; Software repository
ID SOFTWARE; METRICS; VALIDATION
AB This paper proposes an approach using large-scale text features for fault-prone module detection inspired by spam filtering. The number of every text feature in the source code of a module is counted and used as data for training detection models. In this paper, we prepared a naive Bayes classifier and a logistic regression model as detection models. To show the effectiveness of our approaches, we conducted experiments with five open source projects and compared them with a well-known metrics set, thereby achieving higher detection results. The results imply that large-scale text features are useful in constructing practical detection models, and measuring sophisticated metrics is not always necessary for detecting fault-prone modules.
C1 [Mizuno, Osamu] Kyoto Inst Technol, Grad Sch Sci & Technol, Kyoto 606, Japan.
   [Hata, Hideaki; Kikuno, Tohru] Osaka Univ, Grad Sch Informat Sci & Technol, Osaka, Japan.
C3 Kyoto Institute of Technology; Osaka University
RP Mizuno, O (corresponding author), Kyoto Inst Technol, Grad Sch Sci & Technol, Kyoto 606, Japan.
EM h-hata@ist.osaka-u.ac.jp; o-mizuno@kit.ac.jp; kikuno@ist.osaka-u.ac.jp
RI Hata, Hideaki/GQB-2557-2022; Hata, Hideaki/N-7103-2019
OI Hata, Hideaki/0000-0003-0708-5222; Mizuno, Osamu/0000-0001-8061-7657
CR [Anonymous], 2006, ISESE '06: Proceedings of the 5th International Symposium on Empirical Software Engineering. Volume II: Short Papers and Posters, DOI DOI 10.1145/1159733.1159739.
   Aversano L., 2007, IWPSE 07 9 INT WORKS, P19
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Bellini P, 2005, IEEE INT C ENG COMP, P205
   Briand LC, 2002, IEEE T SOFTWARE ENG, V28, P706, DOI 10.1109/TSE.2002.1019484
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Denaro G, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P241, DOI 10.1109/ICSE.2002.1007972
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Guo L, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P249, DOI 10.1109/ASE.2003.1240314
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Halstead M. H., 1977, ELEMENTS SOFTWARE SC
   Hassan AE, 2005, PROC IEEE INT CONF S, P263
   Herraiz I., 2008, Proceedings of the 2008 International Working Conference on Mining Software Repositories. MSR'08, P145
   Higo Y., 2008, P 2008 WORKSH DEF LA, P6
   Khoshgoftaar TM, 2004, EMPIR SOFTW ENG, V9, P229, DOI 10.1023/B:EMSE.0000027781.18360.9b
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kim S, 2007, PROC INT CONF SOFTW, P489
   LAYMAN L, 2008, P 2 INT C EMP SOFTW, P206
   Li Zhenmin, 2005, P ACM SIGSOFT SOFTW, P306, DOI DOI 10.1145/1081706.1081755
   Livshits V.B., 2005, ESEC SIGSOFT FSE, P296, DOI [DOI 10.1145/1095430.1081754, DOI 10.1145/1081706.1081754]
   Madhavan Janaki T., 2007, P 2007 OOPSLA WORKSH, P36, DOI [10.1145/1328279.1328287, DOI 10.1145/1328279.1328287]
   Mäntylä M, 2003, PROC IEEE INT CONF S, P381, DOI 10.1109/ICSM.2003.1235447
   MCCABE TJ, 1976, P 2 INT C SOFTW ENG, P407
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   MILEVA YM, 2008, P INT WORKSH REC SYS, P41
   Mizuno O., 2007, Proceedings of the 11th Joint Meeting of the European Software Engineering Conference and the 14th ACM SIGSOFT Symposium on Foundations of Software Engineering, P405
   Mizuno O., 2007, P 4 INT WORKSH MIN S
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Nagappan N., 2006, P 28 INT C SOFTW ENG, P452, DOI DOI 10.1145/1134285.1134349
   Neuhaus S, 2007, CCS'07: PROCEEDINGS OF THE 14TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P529
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   Pan K, 2009, EMPIR SOFTW ENG, V14, P286, DOI 10.1007/s10664-008-9077-5
   Ratzinger J., 2008, Proceedings of the 2008 international working conference on Mining software repositories, P35, DOI [10.1145/1370750.1370759, DOI 10.1145/1370750.1370759]
   Sahami Mehran, 1998, P AAAI WORKSH LEARN
   Seliya N, 2005, NINTH IEEE INTERNATIONAL SYMPOSIUM ON HIGH-ASSURANCE SYSTEMS ENGINEERING, P89, DOI 10.1109/HASE.2005.4
   SLIWERSKI J, 2005, P 10 EUR SOFTW ENG C, P107
   Sliwerski J, 2005, P INT WORKSH MIN SOF, P24
   Williams CC, 2005, IEEE T SOFTWARE ENG, V31, P466, DOI 10.1109/TSE.2005.63
   Witten I. H., 2005, DATA MINING PRACTICA
NR 40
TC 25
Z9 28
U1 0
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2010
VL 15
IS 2
BP 147
EP 165
DI 10.1007/s10664-009-9117-9
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 570VH
UT WOS:000275705900002
DA 2024-07-18
ER

PT J
AU Li, JZ
   Ruhe, G
AF Li, Jingzhou
   Ruhe, Guenther
TI Analysis of attribute weighting heuristics for analogy-based software
   effort estimation method AQUA<SUP>+</SUP>
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 5th International Symposium on Empirical Software Engineering
CY 2006
CL Rio de Janeiro, BRAZIL
DE effort estimation by analogy; attribute weighting; feature selection;
   rough set analysis; learning; heuristics
ID COST ESTIMATION; MODEL; SETS
AB Estimation by analogy (EBA) predicts effort for a new project by aggregating effort information of similar projects from a given historical data set. Existing research results have shown that a careful selection and weighting of attributes may improve the performance of the estimation methods. This paper continues along that research line and considers weighting of attributes in order to improve the estimation accuracy. More specifically, the impact of weighting (and selection) of attributes is studied as extensions to our former EBA method AQUA, which has shown promising results and also allows estimation in the case of data sets that have non-quantitative attributes and missing values. The new resulting method is called AQUA(+). For attribute weighting, a qualitative analysis pre-step using rough set analysis (RSA) is performed. RSA is a proven machine learning technique for classification of objects. We exploit the RSA results in different ways and define four heuristics for attribute weighting. AQUA(+) was evaluated in two ways: (1) comparison between AQUA(+) and AQUA, along with the comparative analysis between the proposed four heuristics for AQUA(+), (2) comparison of AQUA(+) with other EBA methods. The main evaluation results are: (1) better estimation accuracy was obtained by AQUA(+) compared to AQUA over all six data sets; and (2) AQUA(+) obtained better results than, or very close to that of other EBA methods for the three data sets applied to all the EBA methods. In conclusion, the proposed attribute weighing method using RSA can improve the estimation accuracy of EBA method AQUA(+) according to the empirical studies over six data sets. Testing more data sets is necessary to get results that are more statistical significant.
C1 [Li, Jingzhou; Ruhe, Guenther] Univ Calgary, Software Engn Decis Support Lab, Calgary, AB T2N 1N4, Canada.
C3 University of Calgary
RP Li, JZ (corresponding author), Univ Calgary, Software Engn Decis Support Lab, Calgary, AB T2N 1N4, Canada.
EM jingli@ucalgary.ca; ruhe@ucalgary.ca
CR [Anonymous], 1986, Software Engineering Metrics and Models
   [Anonymous], P 23 INT C NAFIPS
   Boehm BW., 1981, Software Engineering Economics
   BRIAND LC, 2001, ENCY SOFTWARE ENG
   Cartwright MH, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P154, DOI 10.1109/METRIC.2003.1232464
   Chen ZH, 2005, IEEE SOFTWARE, V22, P38, DOI 10.1109/MS.2005.151
   CHMIELEWSKI MR, 1994, 3 INT WORKSH ROUGH S, P294
   Desharnais J. M., 1989, Analyse statistique de la productivitie des projects informatique a partie de la technique des point des function
   Dougherty J, 1995, P 12 INT C MACH LEAR, P194, DOI DOI 10.1016/B978-1-55860-377-6.50032-3
   EFRON B, 1983, AM STAT, V37, P36, DOI 10.2307/2685844
   Foss T, 2003, IEEE T SOFTWARE ENG, V29, P985, DOI 10.1109/TSE.2003.1245300
   Huang SJ, 2006, INFORM SOFTWARE TECH, V48, P1034, DOI 10.1016/j.infsof.2005.12.020
   *IDSS, 2006, ROSE2
   *ISBSG, 2004, DAT R8
   Jorgensen M, 2003, J SYST SOFTWARE, V68, P253, DOI 10.1016/S0164-1212(03)00066-9
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   KADODA G, 2000, P EASE 2000 4 INT C
   KEMERER CF, 1987, COMMUN ACM, V30, P416, DOI 10.1145/22899.22906
   KIRSOPP C, 2002, P 2I INT C KNOWL BAS
   Kohavi R, 1997, ARTIF INTELL, V97, P273, DOI 10.1016/S0004-3702(97)00043-X
   Laplante PA, 2005, INNOV SYST SOFTW ENG, V1, P71, DOI 10.1007/s11334-005-0009-x
   Leung H. K. N., 2002, Empirical Software Engineering, V7, P157, DOI 10.1023/A:1015202115651
   Li JZ, 2007, EMPIR SOFTW ENG, V12, P65, DOI 10.1007/s10664-006-7552-4
   LI JZ, 2007, P ICSE 2007 WORKSH P
   LI JZ, 2005, DATE SET USP05
   LI JZ, 2006, P ACM IEEE INT S EMP
   Mendes E, 2003, EMPIR SOFTW ENG, V8, P163, DOI 10.1023/A:1023062629183
   MENZIES T, 2006, IEEE T SOFTWARE ENG, V32, P1
   Molokken K, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P223, DOI 10.1109/ISESE.2003.1237981
   MUKHOPADHYAY T, 1992, MIS QUART, V16, P155, DOI 10.2307/249573
   Myrtveit I, 2001, IEEE T SOFTWARE ENG, V27, P999, DOI 10.1109/32.965340
   Pawlak Z., 1991, ROUGH SETS THEORETIC
   PUTNAM LH, 1978, IEEE T SOFTWARE ENG, V4, P345, DOI 10.1109/TSE.1978.231521
   Ruhe G, 1996, PROCEEDINGS OF THE 3RD INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, P10, DOI 10.1109/METRIC.1996.492439
   Sayyad Shirabad J., 2005, The PROMISE Repository of Software Engineering Databases
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   SHEPPERD MJ, 1996, P ICSE, V18, P170
   SONG Q, 2005, METRICS 05 P 11 IEEE, P35
   Strike K, 2001, IEEE T SOFTWARE ENG, V27, P890, DOI 10.1109/32.962560
   Witten I. H., 2005, DATA MINING PRACTICA
   Zhong N, 2001, J INTELL INF SYST, V16, P199, DOI 10.1023/A:1011219601502
NR 41
TC 37
Z9 38
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2008
VL 13
IS 1
BP 63
EP 96
DI 10.1007/s10664-007-9054-4
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 245WT
UT WOS:000251970200004
DA 2024-07-18
ER

PT J
AU Mohagheghi, P
   Conradi, R
AF Mohagheghi, Parastoo
   Conradi, Reidar
TI Quality, productivity and economic benefits of software reuse: a review
   of industrial studies
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE software reuse; review; quality; productivity; evidence
AB Systematic software reuse is proposed to increase productivity and software quality and lead to economic benefits. Reports of successful software reuse programs in industry have been published. However, there has been little effort to organize the evidence systematically and appraise it. This review aims to assess the effects of software reuse in industrial contexts. Journals and major conferences between 1994 and 2005 were searched to find observational studies and experiments conducted in industry, returning eleven papers of observational type. Systematic software reuse is significantly related to lower problem (defect, fault or error) density in five studies and to decreased effort spent on correcting problems in three studies. The review found evidence for significant gains in apparent productivity in three studies. Other significant benefits of software reuse were reported in single studies or the results were inconsistent. Evidence from industry is sparse and combining results was done by vote-counting. Researchers should pay more attention to using comparable metrics, performing longitudinal studies, and explaining the results and impact on industry. For industry, evaluating reuse of COTS or OSS components, integrating reuse activities in software processes, better data collection and evaluating return on investment are major challenges.
C1 ICT, SINTEF, N-0314 Oslo, Norway.
   Norwegian Univ Sci & Technol, Dept Comp & Informat Sci, N-7491 Trondheim, Norway.
C3 SINTEF; Norwegian University of Science & Technology (NTNU)
RP Mohagheghi, P (corresponding author), ICT, SINTEF, POB 124, N-0314 Oslo, Norway.
EM parastoo.mohagheghi@sintef.no; conradi@idi.ntnu.no
CR [Anonymous], 2004, TRSE0401 U KEEL NAT
   Baldassarre MT, 2005, PROC IEEE INT CONF S, P283
   Basili VR, 1996, COMMUN ACM, V39, P104, DOI 10.1145/236156.236184
   BASILI VR, 1990, IEEE SOFTWARE, V7, P19, DOI 10.1109/52.43045
   Birk A, 2002, IEEE SOFTWARE, V19, P43, DOI 10.1109/MS.2002.1003452
   Boehm B, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P156
   Conradi R., 2005, PROC 4 INT S EMPIRIC, P214
   Dedrick J, 2003, ACM COMPUT SURV, V35, P1, DOI 10.1145/641865.641866
   Dyba T, 2005, IEEE SOFTWARE, V22, P58, DOI 10.1109/MS.2005.6
   Dybå T, 2006, INFORM SOFTWARE TECH, V48, P745, DOI 10.1016/j.infsof.2005.08.009
   Fenton N, 2002, IEEE SOFTWARE, V19, P116, DOI 10.1109/MS.2002.1020298
   Fitzgerald B, 2004, IEEE SOFTWARE, V21, P50, DOI 10.1109/MS.2004.1259216
   Frakes W, 1996, ACM COMPUT SURV, V28, P415, DOI 10.1145/234528.234531
   Frakes WB, 2001, J SYST SOFTWARE, V57, P99, DOI 10.1016/S0164-1212(00)00121-7
   Frakes WB, 2005, IEEE T SOFTWARE ENG, V31, P529, DOI 10.1109/TSE.2005.85
   Gigerenzer G., 2004, J SOCIO-ECON, V33, P587, DOI [10.1016/j.socec.2004.09.033, DOI 10.1016/J.SOCEC.2004.09.033]
   Glass RI, 1997, IEEE SOFTWARE, V14, P15, DOI 10.1109/MS.1997.595876
   Glass RL, 2002, IEEE SOFTWARE, V19, P136, DOI 10.1109/MS.2002.1020303
   Gregor S., 2002, INFORM SYSTEMS FDN B, P1
   Hallsteinsen S., 1997, EXPERIENCES SOFTWARE
   Harris JS, 2004, IEEE SOFTWARE, V21, P42, DOI 10.1109/MS.2004.1259211
   KARLSSON EA, 1995, SOFTWARE REUSE HOLIS
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   KITCHENHAM BA, 1998, ACM SIGSOFT SOFTW EN, V23, P20
   Krueger C, 2002, IEEE SOFTWARE, V19, P29, DOI 10.1109/MS.2002.1020284
   Lee AS, 2003, INFORM SYST RES, V14, P221, DOI 10.1287/isre.14.3.221.16560
   Li M, 2003, IEEE T SOFTWARE ENG, V29, P811, DOI 10.1109/TSE.2003.1232286
   Lim WC, 1996, FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE REUSE, PROCEEDINGS, P41, DOI 10.1109/ICSR.1996.496112
   LIM WC, 1994, IEEE SOFTWARE, V11, P23, DOI 10.1109/52.311048
   Madanmoban TR, 2004, IEEE SOFTWARE, V21, P62, DOI 10.1109/MS.2004.45
   Mohagheghi P, 2004, PROC INT CONF SOFTW, P282, DOI 10.1109/ICSE.2004.1317450
   Mohagheghi P., 2006, P 5 ACMIEEE INT S EM, P24
   MOHAGHEGHI P, 2007, ACM T SOFTW ENG METH
   Mohagheghi P., 2006, ICSE 06 4 WORKSHOP S, P45
   MORAD S, 2005, P IEEE INT C SOFTWA, P8
   Morisio M, 2000, IEEE SOFTWARE, V17, P56, DOI 10.1109/52.854069
   Morisio M, 2002, IEEE T SOFTWARE ENG, V28, P876, DOI 10.1109/TSE.2002.1033227
   PFLEEGER SH, 1996, IEEE SOFTWARE, V13, P93
   Pfleeger SL, 2005, IEEE SOFTWARE, V22, P66, DOI 10.1109/MS.2005.19
   Pickard LM, 1998, INFORM SOFTWARE TECH, V40, P811, DOI 10.1016/S0950-5849(98)00101-3
   Ramachandran M, 1996, FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE REUSE, PROCEEDINGS, P104, DOI 10.1109/ICSR.1996.496118
   SCHNEIDEWIND NF, 1992, IEEE T SOFTWARE ENG, V18, P410, DOI 10.1109/32.135774
   Selby RW, 2005, IEEE T SOFTWARE ENG, V31, P495, DOI 10.1109/TSE.2005.69
   SHADISH WR, 2001, XPT QUASI EXPT DESI
   SOMMERSETH M, 2006, THESIS NTNU
   Succi G, 2001, IEEE T SOFTWARE ENG, V27, P473, DOI 10.1109/32.922717
   Szyperski C., 2002, Component Software-Beyond Object-Oriented Programming
   Thomas WM, 1997, J SYST SOFTWARE, V38, P211, DOI 10.1016/S0164-1212(96)00152-5
   Tomer A, 2004, IEEE T SOFTWARE ENG, V30, P601, DOI 10.1109/TSE.2004.50
   Wang Chamont., 1993, Sense and Nonsense of Statistical Inference: Controversy, Misuse, and Subtlety
   Webster J, 2002, MIS QUART, V26, pXIII
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Yin R.K., 2011, Qualitative research from start to finish
   Zannier C., 2006, 28th International Conference on Software Engineering Proceedings, P341, DOI 10.1145/1134285.1134333
   Zelkowitz MV, 1998, COMPUTER, V31, P23, DOI 10.1109/2.675630
   ZHANG W, 2005, P 9 INT SOFTW PROD L, P57
NR 56
TC 101
Z9 108
U1 0
U2 12
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2007
VL 12
IS 5
BP 471
EP 516
DI 10.1007/s10664-007-9040-x
PG 46
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 213DU
UT WOS:000249647100003
DA 2024-07-18
ER

PT J
AU Vegas, S
   Basili, V
AF Vegas, S
   Basili, V
TI A characterisation schema for software testing techniques
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE software testing; testing technique selection; characterisation schema
AB One of the major problems within the software testing area is how to get a suitable set of cases to test a software system. This set should assure maximum effectiveness with the least possible number of test cases. There are now numerous testing techniques available for generating test cases. However, many are never used, and just a few are used over and over again. Testers have little (if any) information about the available techniques, their usefulness and, generally, how suited they are to the project at hand upon, which to base their decision on which testing techniques to use. This paper presents the results of developing and evaluating an artefact (specifically, a characterisation schema) to assist with testing technique selection. When instantiated for a variety of techniques, the schema provides developers with a catalogue containing enough information for them to select the best suited techniques for a given project. This assures that the decisions they make are based on objective knowledge of the techniques rather than perceptions, suppositions and assumptions.
C1 Univ Politecn Madrid, Fac Informat, Madrid, Spain.
   Univ Maryland, Dept Comp Sci, College Pk, MD 20742 USA.
C3 Universidad Politecnica de Madrid; University System of Maryland;
   University of Maryland College Park
RP Univ Politecn Madrid, Fac Informat, Madrid, Spain.
EM svegas@fi.upm.es; basili@cs.umd.edu
RI Vegas, Sira/R-6742-2018
CR [Anonymous], 023 RTI NAT I STAND
   [Anonymous], 1990, Software testing techniques {
   [Anonymous], THESIS U POLITECNICA
   BASILI VR, 1991, SOFTWARE ENG J, V6, P303, DOI 10.1049/sej.1991.0032
   BERTOLINO A, 2004, GUIDE KNOWLEDGE AREA
   BIRK A, 1997, P 12 INT C AUT SOFTW
   FRANKL PG, 1993, IEEE T SOFTWARE ENG, V19, P774, DOI 10.1109/32.238581
   FRANKL PG, 1998, P 6 ACM SIGSOFT INT, P153
   Harroled M., 2000, P 22 INT C FUT SOFTW, P63
   Henninger S, 1996, FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE REUSE, PROCEEDINGS, P124, DOI 10.1109/ICSR.1996.496120
   HUTCHINS M, 1994, PROC INT CONF SOFTW, P191, DOI 10.1109/ICSE.1994.296778
   Juristo N, 2004, EMPIR SOFTW ENG, V9, P7, DOI 10.1023/B:EMSE.0000013513.48963.1b
   KONTIO J, 1996, P CASCON 9 C TOR CAN, P12
   Maiden NAM, 1996, SOFTWARE ENG J, V11, P183, DOI 10.1049/sej.1996.0024
   MYERS GJ, 1970, ART SOFTWARE TESTING
   PFLEEGER SL, 1999, SOFTWARE ENG THEORY
   PRIETODIAZ R, 1989, SOFTWARE REUSABILITY, V1, P99
   SOMMERVILLE I, 1998, SOFTWARE ENG
   Vegas S, 2003, MANAGING SOFTWARE ENGINEERING KNOWLEDGE, P199
   WEYUKER EJ, 1990, IEEE T SOFTWARE ENG, V16, P121, DOI 10.1109/32.44376
   Wood M., 1997, P 6 EUR SOFTW ENG C
NR 21
TC 40
Z9 41
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2005
VL 10
IS 4
BP 437
EP 466
DI 10.1007/s10664-005-3862-1
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 969PQ
UT WOS:000232247100002
DA 2024-07-18
ER

PT J
AU Kajko-Mattsson, M
AF Kajko-Mattsson, M
TI A survey of documentation practice within corrective maintenance
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE corrective maintenance; software system documentation; software process
   documentation
AB The purpose of documentation is to describe software systems and software processes. Consistent, correct and complete documentation of a software system is an important vehicle for the maintainer to gain its understanding, to ease its learning and/or relearning processes, and to make the system more maintainable. Poor system documentation, on the other hand, is the primary reason for quick software system quality degradation and aging. Proper process documentation records the process, its stages and tasks, executing roles, their decisions and motivations, and the results of each individual process task. It is extremely important for achieving insight and visibility into the processes, important for their meaningful process measurement and thereby pivotal for achieving high process maturity. In this paper, we report on the results of an explorative study in which we have identified a number of rudimentary documentation requirements relevant within corrective maintenance, and found out how they were implemented within eighteen software organizations in Sweden. The goal was to examine the industrial documentation practice within corrective maintenance. Our results show that the documentation within corrective maintenance is still a very neglected issue within the organizations studied. None of our organizations has fully implemented all our documentation requirements.
C1 Stockholm Univ, Royal Inst Technol, Dept Comp Sci & Syst, Software Maintenance Lab, SE-16440 Kista, Sweden.
   IT Univ, SE-16440 Kista, Sweden.
C3 Royal Institute of Technology; Stockholm University
RP Stockholm Univ, Royal Inst Technol, Dept Comp Sci & Syst, Software Maintenance Lab, Electrum 230, SE-16440 Kista, Sweden.
EM mira@dsv.su.se
RI Freire, Rui/IRZ-0108-2023
CR ADAMS EN, 1984, IBM J RES DEV, V28, P2, DOI 10.1147/rd.281.0002
   [Anonymous], QUALITY PROGR
   Antoniol G, 2000, PROC IEEE INT CONF S, P40, DOI 10.1109/ICSM.2000.883003
   Arthur LJ., 1988, Software Evolution: The Software Maintenance Challenge
   BAUER BJ, 1995, COMPASS '95 - PROCEEDINGS OF THE TENTH ANNUAL CONFERENCE ON COMPUTER ASSURANCE, P273, DOI 10.1109/CMPASS.1995.521905
   BOEHM BW, 1981, SOFTWARE ENG EC, P538
   Briand LC, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P13, DOI 10.1109/CSMR.2003.1192406
   BUICAN I, 1990, P IEEE INT C PROF CO, P21712
   CARD DN, 1987, IEEE T SOFTWARE ENG, V13, P845, DOI 10.1109/TSE.1987.233495
   *CARN MELL U SOFTW, 1994, CAP MAT MOD GUID IMP
   CHAPIN N, 1985, AFIPS P NATL COMP C, V54, P508
   Clark P. G., 1989, Proceedings of the IEEE 1989 National Aerospace and Electronics Conference NAECON 1989 (Cat. No.89CH2759-9), P1819, DOI 10.1109/NAECON.1989.40462
   Conwell CL, 2000, PROCEEDINGS OF THE 2000 WINTER SIMULATION CONFERENCE, VOLS 1 AND 2, P819, DOI 10.1109/WSC.2000.899880
   COOK K, 1994, CROSSTALK, V7, P26
   DELANGHE S, 2000, P IEEE T P COMM, P201
   EDMANDS A, 1988, P IEEE INT PROF COMM, P119
   ELEMAM K, 1998, SPICE THEORY PRACTIC
   HENDRY D, 1991, P IEEE INT P COMM C, P221
   Hofmann P, 1998, IEEE INTERNATIONAL PROFESSIONAL COMMUNICATION CONFERENCE - PROCEEDINGS, VOL 2, P437, DOI 10.1109/IPCC.1998.722129
   Hogan JM, 2002, APSEC 2002: NINTH ASIA PACIFIC SOFTWARE ENGINEERING CONFERENCE, P366, DOI 10.1109/APSEC.2002.1183006
   HOLT PO, 1993, P IEEE C ISS COMP SU
   *I EL EL ENG INC, 1999, IEEE STAND COLL
   Kane E., 1984, DOING YOUR OWN RES
   Kantner L, 2002, IPCC 2002, REFLECTIONS ON COMMUNICATION, PROCEEDINGS, P331, DOI 10.1109/IPCC.2002.1049115
   KANTNER L, 1997, P IEEE INT PROF COMM, P355
   KRIEGSMAN M, 1993, IEEE INTELL SYST APP, V8, P18, DOI 10.1109/64.248349
   LEPASAAR M, 2001, P IEEE C MANAGE ENG, V1, P436
   LIENTZ BP, 1980, DOFTWARE MAINTENANCE
   Malcolm A, 2001, IPCC 2001: IEEE INTERNATIONAL PROFESSIONAL COMMUNICATION CONFERENCE, PROCEEDINGS, P95, DOI 10.1109/IPCC.2001.971554
   MARTIN J, 1983, PROBLEM ITS SOLUTION
   NORMAN RL, 1991, P INT C PROF COMMUN, V2, P447
   OSKARSSON O, 1995, ISO 9000 PROGRAMUTVE
   Parnas DL, 2000, 4TH INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P81
   PARNAS DL, 1994, PROC INT CONF SOFTW, P279, DOI 10.1109/ICSE.1994.296790
   PARNAS DL, 1993, IEEE T SOFTWARE ENG, P12
   Pigoski ThomasM., 1997, PRACTICAL SOFTWARE M
   RAMSAY J, 1997, P IEEE INT PROF COMM, P399
   Rombach H. D., 1987, Proceedings of the Conference on Software Maintenance - 1987 (Cat. No.87CH2442-2), P134
   SAUNDERS PM, 1989, P IEEE INT P COMM C, P102
   Sousa MJC, 1998, PROC IEEE INT CONF S, P265, DOI 10.1109/ICSM.1998.738518
   van Schouwen A.J., 1993, P ISRE IEEE, P198
   Visaggio G, 2001, J SOFTW MAINT EVOL-R, V13, P281, DOI 10.1002/smr.234
   Visconti M, 2002, XXII INTERNATIONAL CONFERENCE OF THE CHILEAN COMPUTER SCIENCE SOCIETY, PROCEEDINGS, P179, DOI 10.1109/SCCC.2002.1173192
   VISCONTI M, 2000, 006006 OR STAT U COM
   WALKER R, 1985, APPL QULITATIVE RES
NR 45
TC 60
Z9 75
U1 2
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN
PY 2005
VL 10
IS 1
BP 31
EP 55
DI 10.1023/B:LIDA.0000048322.42751.ca
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 895IY
UT WOS:000226855600002
DA 2024-07-18
ER

PT J
AU Wohlin, C
   Andrews, AA
AF Wohlin, C
   Andrews, AA
TI Prioritizing and assessing software project success factors and project
   characteristics using subjective data
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE project success; subjective measures; project assessment
ID RISK
AB This paper presents a method for analyzing the impact software project factors have on project success as defined by project success factors that have been prioritized. It is relatively easy to collect measures of project attributes subjectively (i.e., based on expert judgment). Often Likert scales are used for that purpose. It is much harder to identify whether and how a large number of such ranked project factors influence project success, and to prioritize their influence on project success. At the same time, it is desirable to use the knowledge of project personnel effectively. Given a prioritization of project goals, it is shown how some key project characteristics can be related to project success. The method is applied in a case study consisting of 46 projects. For each project, six success factors and 27 project attributes were measured. Successful projects show common characteristics. Using this knowledge can lead to better control and software project management and to an increased likelihood of project success.
C1 Blekinge Inst Technol, Soft Ctr, Dept Software Engn & Comp Sci, SE-37225 Ronneby, Sweden.
   Washington State Univ, Sch Elect Engn & Comp Sci, Pullman, WA 99164 USA.
C3 Blekinge Institute Technology; Washington State University
RP Blekinge Inst Technol, Soft Ctr, Dept Software Engn & Comp Sci, Box 520, SE-37225 Ronneby, Sweden.
EM claes.wohlin@bth.se; aandrews@eecs.wsu.edu
OI Wohlin, Claes/0000-0003-0460-5253
CR Allen MJ., 1979, INTRO MEASUREMENT TH
   Altman DG, 1991, PRACTICAL STAT MED R
   BASILI V, 1995, IEEE SOFTWARE, V12, P83, DOI 10.1109/52.469763
   Briand L., 1996, Empirical Software Engineering, V1, P61, DOI 10.1007/BF00125812
   BRIAND L, 2000, INT S SOFTW REL ENG
   Briand LC, 1998, PROC INT CONF SOFTW, P390, DOI 10.1109/ICSE.1998.671392
   Chulani S, 1999, IEEE T SOFTWARE ENG, V25, P573, DOI 10.1109/32.799958
   CONTE SD, 1985, SOFTWARE ENG METRICS
   ELEMAM K, 1999, EMPIR SOFTW ENG, P113
   Fenton N., 1996, SOFTWARE METRICS RIG, VSecond
   Glass R.L., 1998, Software Runaways: Lessons learned from massive software project failures
   Gray A. R., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P216, DOI 10.1109/METRIC.1999.809743
   Hoch D.J., 2000, Secrets of software success: Management insights from 100 software firms around the world
   Host M, 1997, INFORM SOFTWARE TECH, V39, P755, DOI 10.1016/S0950-5849(97)00027-X
   Host M, 1998, PROC INT CONF SOFTW, P332, DOI 10.1109/ICSE.1998.671386
   Hughes RT, 1996, INFORM SOFTWARE TECH, V38, P67, DOI 10.1016/0950-5849(95)01045-9
   Kachigan S.K., 1986, STAT ANAL INTERDISCI
   Karlsson J, 1997, IEEE SOFTWARE, V14, P67, DOI 10.1109/52.605933
   Khoshgoftaar TM, 1996, SEVENTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P364, DOI 10.1109/ISSRE.1996.558896
   KHOSHGOFTAAR TM, 1994, P INT S SOFTW METR L, V94, P61
   MEYER MA, 1991, ELICITATING ANAL EXP
   *NASA SEL, 1992, NASA SEL SER
   Ohlsson MC, 1998, PROC IEEE INT CONF S, P6, DOI 10.1109/ICSM.1998.738484
   OHLSSON MC, 1999, P IEEE AER C 1999 PI
   PAULK MC, 1995, SEI SERIES SOFTWARE
   Ropponen J, 2000, IEEE T SOFTWARE ENG, V26, P98, DOI 10.1109/32.841112
   Saaty T.L., 1980, ANAL HIERARCHY PROCE
   SHEPPERD M, 2001, P IEEE INT SOFTW MET
   Von Mayrhauser A., 1990, Software engineering: methods and management
   Wohlin C, 2001, SOFTWARE QUAL J, V9, P43, DOI 10.1023/A:1016673203332
NR 30
TC 17
Z9 21
U1 0
U2 9
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2003
VL 8
IS 3
BP 285
EP 308
DI 10.1023/A:1024476828183
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 803WF
UT WOS:000220260500003
DA 2024-07-18
ER

EF