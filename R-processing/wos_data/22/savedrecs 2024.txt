FN Clarivate Analytics Web of Science
VR 1.0
PT J
AU de Dieu, MJ
   Liang, P
   Shahin, M
   Yang, C
   Li, ZY
AF de Dieu, Musengamana Jean
   Liang, Peng
   Shahin, Mojtaba
   Yang, Chen
   Li, Zengyang
TI Mining architectural information: A systematic mapping study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Mining Architectural Information; Software Repositories; Architecting
   Activity; Software Development; Systematic Mapping Study
ID SOFTWARE ARCHITECTURE; KNOWLEDGE; REQUIREMENTS; DESIGN; EXTRACTION;
   MODEL
AB Mining Software Repositories (MSR) has become an essential activity in software development. Mining architectural information (e.g., architectural models) to support architecting activities, such as architecture understanding, has received significant attention in recent years. However, there is a lack of clarity on what literature on mining architectural information is available. Consequently, this may create difficulty for practitioners to understand and adopt the state-of-the-art research results, such as what approaches should be adopted to mine what architectural information in order to support architecting activities. It also hinders researchers from being aware of the challenges and remedies for the identified research gaps. We aim to identify, analyze, and synthesize the literature on mining architectural information in software repositories in terms of architectural information and sources mined, architecting activities supported, approaches and tools used, and challenges faced. A Systematic Mapping Study (SMS) has been conducted on the literature published between January 2006 and December 2022. Of the 104 primary studies finally selected, 7 categories of architectural information have been mined, among which architectural description is the most mined architectural information; 11 categories of sources have been leveraged for mining architectural information, among which version control system (e.g., GitHub) is the most popular source; 11 architecting activities can be supported by the mined architectural information, among which architecture understanding is the most supported activity; 95 approaches and 56 tools were proposed and employed in mining architectural information; and 4 types of challenges in mining architectural information were identified. This SMS provides researchers with promising future directions and help practitioners be aware of what approaches and tools can be used to mine what architectural information from what sources to support various architecting activities.
C1 [de Dieu, Musengamana Jean; Liang, Peng] Wuhan Univ, Sch Comp Sci, Wuhan, Peoples R China.
   [de Dieu, Musengamana Jean; Liang, Peng] Hubei Luojia Lab, Wuhan, Peoples R China.
   [Shahin, Mojtaba] RMIT Univ, Sch Comp Technol, Melbourne, Australia.
   [Yang, Chen] Shenzhen Polytech Univ, Sch Artificial Intelligence, Shenzhen, Peoples R China.
   [Yang, Chen] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Peoples R China.
   [Li, Zengyang] Cent China Normal Univ, Sch Comp Sci, Wuhan, Peoples R China.
   [Li, Zengyang] Cent China Normal Univ, Hubei Prov Key Lab Artificial Intelligence & Smart, Wuhan, Peoples R China.
C3 Wuhan University; Royal Melbourne Institute of Technology (RMIT);
   Shenzhen Polytechnic University; Nanjing University; Central China
   Normal University; Central China Normal University
RP Liang, P (corresponding author), Wuhan Univ, Sch Comp Sci, Wuhan, Peoples R China.; Liang, P (corresponding author), Hubei Luojia Lab, Wuhan, Peoples R China.
EM mjados@outlook.com; liangp@whu.edu.cn; yangchen@szpu.edu.cn
FU National Natural Science Foundation of China [62172311, 62176099];
   National Natural Science Foundation of China (NSFC); Special Fund of
   Hubei Luojia Laboratory [6022312043K]; China Scholarship Council,
   Shenzhen Polytechnic University [KFKT2022B37]; State Key Laboratory for
   Novel Software Technology at Nanjing University
FX This work is partially sponsored by the National Natural Science
   Foundation of China (NSFC) under Grant No. 62172311 and 62176099, the
   Special Fund of Hubei Luojia Laboratory, the financial support from the
   China Scholarship Council, Shenzhen Polytechnic University with Grant
   No. 6022312043K, and State Key Laboratory for Novel Software Technology
   at Nanjing University with Grant No. KFKT2022B37.
CR Alon U., 2020, INT C MACHINE LEARNI, P245
   Alves V, 2010, INFORM SOFTWARE TECH, V52, P806, DOI 10.1016/j.infsof.2010.03.014
   Ampatzoglou A, 2019, INFORM SOFTWARE TECH, V106, P201, DOI 10.1016/j.infsof.2018.10.006
   [Anonymous], 2011, ISO/IEC/IEEE 42010:2011 Systems and software engineering -- Architecture description
   Bass Len, 2012, SEI S SOFTW
   Bavota G, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2559935
   Bedjeti A, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2017), P117, DOI 10.1109/ICSA.2017.26
   Bengtsson P, 2004, J SYST SOFTWARE, V69, P129, DOI 10.1016/S0164-1212(03)00080-3
   Bhat M, 2017, LECT NOTES COMPUT SC, V10475, P138, DOI 10.1007/978-3-319-65831-5_10
   Bi TT, 2021, J SYST SOFTWARE, V180, DOI 10.1016/j.jss.2021.111005
   Bi TT, 2018, ASIA PAC SOFWR ENG, P49, DOI 10.1109/APSEC.2018.00019
   Borrego G, 2019, INFORM SOFTWARE TECH, V112, P68, DOI 10.1016/j.infsof.2019.04.008
   Campbell JL, 2013, SOCIOL METHOD RES, V42, P294, DOI 10.1177/0049124113500475
   Canfora G, 2015, SOFTW TEST VERIF REL, V25, P426, DOI 10.1002/stvr.1570
   Capilla R, 2016, J SYST SOFTWARE, V116, P191, DOI 10.1016/j.jss.2015.08.054
   Casamayor A, 2012, ARTIF INTELL REV, V38, P173, DOI 10.1007/s10462-011-9237-7
   Casamayor A, 2012, KNOWL-BASED SYST, V30, P78, DOI 10.1016/j.knosys.2011.12.009
   Cervantes H., 2016, Designing software architectures: a practical approach
   Chaabane M, 2017, I C COMP SYST APPLIC, P879, DOI 10.1109/AICCSA.2017.169
   Chang Y, 2024, ACM Transactions on Intelligent Systems and Technology
   Chen L., 2010, P 14 INT C EV ASS SO, DOI 10.14236/ewic/ease2010.17
   Chen ZZ, 2020, J SYST SOFTWARE, V165, DOI 10.1016/j.jss.2020.110568
   Ciniselli M, 2021, IEEE WORK CONF MIN S, P108, DOI 10.1109/MSR52588.2021.00024
   Clements P, 2003, PROC INT CONF SOFTW, P740, DOI 10.1109/ICSE.2003.1201264
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Dabrowski J, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10065-7
   De Dieu Musengamana Jean, 2023, Zenodo, DOI 10.5281/ZENODO.10354000
   de Dieu MJ, 2022, IEEE 19TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2022), P58, DOI 10.1109/ICSA53651.2022.00014
   Ding W, 2015, INT J SOFTW ENG KNOW, V25, P1633, DOI 10.1142/S0218194015400367
   Ding W, 2014, IEEE INT C ENG COMP, P136, DOI 10.1109/ICECCS.2014.26
   Dinh T, 2023, P 37 INT C NEUR INF, P1
   Ducasse S, 2009, IEEE T SOFTWARE ENG, V35, P573, DOI 10.1109/TSE.2009.19
   Filho JLM, 2017, LECT NOTES COMPUT SC, V10475, P67, DOI 10.1007/978-3-319-65831-5_5
   Garcia J, 2021, 2021 IEEE 18TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P150, DOI 10.1109/ICSA51549.2021.00022
   Guha R., 2003, P 12 INT C WORLD WID, P700, DOI [10.1145/775152.775250, DOI 10.1145/775152.775250]
   Guo JF, 2020, INFORM PROCESS MANAG, V57, DOI 10.1016/j.ipm.2019.102067
   Harbo SKR, 2024, SCI COMPUT PROGRAM, V231, DOI 10.1016/j.scico.2023.103008
   Hassan AE, 2008, 2008 FRONTIERS OF SOFTWARE MAINTENANCE, P48, DOI 10.1109/FOSM.2008.4659248
   Hoan Anh Nguyen, 2019, 2019 IEEE/ACM 41st International Conference on Software Engineering (ICSE). Proceedings, P819, DOI 10.1109/ICSE.2019.00089
   Hofmeister C, 2007, J SYST SOFTWARE, V80, P106, DOI 10.1016/j.jss.2006.05.024
   Hull E., 2005, REQUIR ENG
   Jansen A, 2006, 5TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P109
   Jansen A, 2009, J SYST SOFTWARE, V82, P1232, DOI 10.1016/j.jss.2009.04.052
   Kazman R, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P179, DOI 10.1109/ICSE.2015.146
   Kitchenham B., 2007, Guidelines for performing systematic literature reviews in software engineering, VVolume 2, DOI [10.1145/1134285.1134500, DOI 10.1145/1134285.1134500]
   Kotsiantis SB, 2006, ARTIF INTELL REV, V26, P159, DOI [10.1007/s10462-007-9052-3, 10.1007/S10462-007-9052-3]
   Koziolek H, 2013, IEEE SOFTWARE, V30, P54, DOI 10.1109/MS.2013.101
   Kruchten P., 2004, 2 GRON WORKSH SOFTW, P54
   KRUCHTEN PB, 1995, IEEE SOFTWARE, V12, P42, DOI 10.1109/52.469759
   Laser MS, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1546, DOI 10.1145/3368089.3417941
   Li MY, 2020, PROC IEEE INT CONF S, P208, DOI 10.1109/ICSME46990.2020.00029
   Li RY, 2022, J SOFTW-EVOL PROC, V34, DOI 10.1002/smr.2423
   Li Z., 2014, Economics-Driven Software Architecture, P183, DOI 10.1016/B978-0-12-410464-8.00009-X
   Li ZY, 2015, J SYST SOFTWARE, V101, P193, DOI 10.1016/j.jss.2014.12.027
   Li ZY, 2013, INFORM SOFTWARE TECH, V55, P777, DOI 10.1016/j.infsof.2012.11.005
   Liu F, 2020, IEEE INT CONF AUTOM, P473, DOI 10.1145/3324884.3416591
   Mahadi A, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P149, DOI [10.1109/saner48275.2020.9054792, 10.1109/SANER48275.2020.9054792]
   Malavolta I, 2021, J SYST SOFTWARE, V178, DOI 10.1016/j.jss.2021.110969
   Malavolta I, 2013, IEEE T SOFTWARE ENG, V39, P869, DOI 10.1109/TSE.2012.74
   Mirakhorli M, 2013, 2013 3RD INTERNATIONAL WORKSHOP ON THE TWIN PEAKS OF REQUIREMENTS AND ARCHITECTURE (TWINPEAKS), P1, DOI 10.1109/TwinPeaks-2.2013.6617352
   Nafi KW, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1026, DOI 10.1109/ASE.2019.00099
   Naghdipour A, 2023, SOFTWARE QUAL J, V31, P809, DOI 10.1007/s11219-022-09610-4
   Nanda SJ, 2014, SWARM EVOL COMPUT, V16, P1, DOI 10.1016/j.swevo.2013.11.003
   Nazar N, 2016, J COMPUT SCI TECH-CH, V31, P883, DOI 10.1007/s11390-016-1671-1
   Perry D. E., 1992, SIGSOFT Software Engineering Notes, V17, P40, DOI 10.1145/141874.141884
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Saxena A, 2017, NEUROCOMPUTING, V267, P664, DOI 10.1016/j.neucom.2017.06.053
   Shahbazian A, 2018, 2018 IEEE 15TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P95, DOI 10.1109/ICSA.2018.00019
   Shahin M, 2013, P 25 INT C SOFTW ENG, P556
   Shahin Mojtaba., 2014, P 22 INT C PROGRAM C, P3
   Shaw M, 2006, IEEE SOFTWARE, V23, P31, DOI 10.1109/MS.2006.58
   Singhal A, 2001, IEEE DATA ENG B, V24, P35
   Soliman M, 2021, P 15 EUR C SOFTW ARC, P1
   Soliman M, 2021, LECT NOTES COMPUT SC, V12857, P117, DOI 10.1007/978-3-030-86044-8_8
   Soliman M, 2021, 2021 IEEE 18TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P162, DOI 10.1109/ICSA51549.2021.00023
   Soliman M, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2017), P89, DOI 10.1109/ICSA.2017.31
   Soliman M, 2016, 2016 13TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P128, DOI 10.1109/WICSA.2016.13
   Souza E, 2019, INFORM SOFTWARE TECH, V109, P26, DOI 10.1016/j.infsof.2019.01.004
   Stevanetic S, 2014, P 18 INT C EV ASS SO, P1
   Tang A, 2010, J SYST SOFTWARE, V83, P352, DOI 10.1016/j.jss.2009.08.032
   Tavakoli M, 2018, EXPERT SYST APPL, V113, P186, DOI 10.1016/j.eswa.2018.05.037
   Tzerpos V, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P258
   Vale LD, 2015, PROC IEEE INT CONF S, P566, DOI 10.1109/ICSM.2015.7332515
   Velasco-Elizondo P, 2016, SCI COMPUT PROGRAM, V121, P176, DOI 10.1016/j.scico.2015.12.007
   Wang S, 2020, IEEE T SOFTWARE ENG, V46, P1267, DOI 10.1109/TSE.2018.2877612
   Weinreich R, 2012, J SYST SOFTWARE, V85, P546, DOI 10.1016/j.jss.2011.05.036
   Williams BJ, 2010, INFORM SOFTWARE TECH, V52, P31, DOI 10.1016/j.infsof.2009.07.002
   Wohlin C, 2003, LECT NOTES COMPUT SC, V2765, P7
   Wohlin C., 2014, P 18 INT C EV ASS SO, P1, DOI [DOI 10.1145/2601248.2601268, 10.1145/2601248.2601268]
   Yang XL, 2023, IEEE T KNOWL DATA EN, V35, P8934, DOI 10.1109/TKDE.2022.3220219
   Yang YM, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3503509
   Yu H., 2003, Proceedings, P856
   Zhao L, 2022, ACM COMPUT SURV, V54, DOI 10.1145/3444689
   Zogaan W, 2017, EMPIR SOFTW ENG, V22, P1028, DOI 10.1007/s10664-016-9476-y
NR 94
TC 0
Z9 0
U1 1
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2024
VL 29
IS 4
AR 79
DI 10.1007/s10664-024-10480-6
PG 59
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TB0R8
UT WOS:001238684900004
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Ragkhitwetsagul, C
   Krinke, J
   Choetkiertikul, M
   Sunetnanta, T
   Sarro, F
AF Ragkhitwetsagul, Chaiyong
   Krinke, Jens
   Choetkiertikul, Morakot
   Sunetnanta, Thanwadee
   Sarro, Federica
TI Adoption of automated software engineering tools and techniques in
   Thailand
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Automated software engineering; Empirical study; Online survey; Small
   and medium-sized software enterprises
ID INDUSTRY-ACADEMIA COLLABORATIONS; STATIC ANALYSIS; INTEGRATION;
   CHALLENGES
AB Readiness for the adoption of Automated Software Engineering (ASE) tools and techniques can vary according to the size and maturity of software companies. ASE tools and techniques have been adopted by large or ultra-large software companies. However, little is known about the adoption of ASE tools and techniques in small and medium-sized software enterprises (SSMEs) in emerging countries, and the challenges faced by such companies. We study the adoption of ASE tools and techniques for software measurement, static code analysis, continuous integration, and software testing, and the respective challenges faced by software developers in Thailand, a developing country with a growing software economy which mainly consists of SSMEs (similar to other developing countries). Based on the answers from 103 Thai participants in an online survey, we found that Thai software developers are somewhat familiar with ASE tools and agree that adopting such tools would be beneficial. Most of the developers do not use software measurement or static code analysis tools due to a lack of knowledge or experience but agree that their use would be useful. Continuous integration tools have been used with some difficulties. Lastly, although automated testing tools are adopted despite several serious challenges, many developers are still testing the software manually. We call for improvements in ASE tools to be easier to use in order to lower the barrier to adoption in small and medium-sized software enterprises (SSMEs) in developing countries.
C1 [Ragkhitwetsagul, Chaiyong; Choetkiertikul, Morakot; Sunetnanta, Thanwadee] Mahidol Univ, Fac Informat & Commun Technol ICT, Nakhon Pathom, Thailand.
   [Krinke, Jens; Sarro, Federica] UCL, UCL Comp Sci, London, England.
C3 Mahidol University; University of London; University College London
RP Choetkiertikul, M (corresponding author), Mahidol Univ, Fac Informat & Commun Technol ICT, Nakhon Pathom, Thailand.
EM chaiyong.rag@mahido.ac.th; j.krinke@ucl.ac.uk;
   morakot.cho@mahidol.ac.th; thanwadee.sun@mahidol.ac.th;
   f.sarro@ucl.ac.uk
FU Royal Academy of Engineering, UK (RAEng) and TSRI, Thailand; Newton Fund
   - Royal Academy of Engineering, UK (RAEng) [IAPP18-19/74]; TSRI,
   Thailand
FX This work is supported by the Newton Fund
   https://www.britishcouncil.org/education/he-science/newton-fund and
   funded by the Royal Academy of Engineering, UK (RAEng)
   https://www.raeng.org.uk/ and TSRI, Thailand https://www.tsri.or.th/
   (Industry Academia Partnership Programme - 18/19 - Grant No.
   IAPP18-19/74). It was approved by both universities' research ethics
   boards.
CR Alamdy S, 2017, P INT COMP SOFTW APP, P743, DOI 10.1109/COMPSAC.2017.218
   Ayewah N, 2007, PASTE'07 PROCEEDINGS OF THE 2007 ACM SIGPLAN- SIGSOFT WORKSHOP ON PROGRAM ANALYSIS FOR SOFTWARE TOOLS & ENGINEERING, P1, DOI 10.1145/1251535.1251536
   Ayewah N, 2008, IEEE SOFTWARE, V25, P22, DOI 10.1109/MS.2008.130
   Bairi R, 2023, NEURAL INFORM PROCES
   Balogun AO, 2022, J SOFTW-EVOL PROC, V34, DOI 10.1002/smr.2466
   Bessey A, 2010, COMMUN ACM, V53, P66, DOI 10.1145/1646353.1646374
   Bieber D, 2023, P 11 INT C LEARN REP
   Blake E, 2006, ST AFR 2006 C P
   Chen L, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P1320, DOI 10.1145/3540250.3558952
   Commission European, 2020, Tech Rep 410, DOI [10.2873/677467, DOI 10.2873/677467]
   Daun M., 2023, An industry survey on approaches, success factors, and barriers for technology transfer in software engineering, DOI [10.1002/spe.3200, DOI 10.1002/SPE.3200]
   Digital Economy Promotion Agency, 2021, Thailand's digital industry survey 2020 and 3-year prediction
   Digital Economy Promotion Agency (DEPA) Thailand, 2022, Results of the survey and assessment of digital industry 2022
   Effendi SDB, 2023, Softw Engg in Pract, P327, DOI 10.1109/ICSE-SEIP58684.2023.00035
   Garousi V, 2017, SOFTWARE QUAL J, V25, P1091, DOI 10.1007/s11219-016-9319-5
   Garousi V, 2016, INFORM SOFTWARE TECH, V79, P106, DOI 10.1016/j.infsof.2016.07.006
   Henderson TAD, 2023, P 16 IEEE INT C SOFT
   Hilton M, 2016, IEEE INT CONF AUTOM, P426, DOI 10.1145/2970276.2970358
   Jin M, 2023, PROCEEDINGS OF THE 31ST ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2023, P1646, DOI 10.1145/3611643.3613892
   Johnson B, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P672, DOI 10.1109/ICSE.2013.6606613
   Karlsson S, 2021, IEEE ICST WORKSHOP, P130, DOI 10.1109/ICSTW52544.2021.00033
   Khaksar E., 2015, American J Syst Softw, V3, P20
   Kitchenham B, 2001, ACM SIGSOFT Software Engineering Notes, V26
   Kochhar PS, 2015, IEEE ICST WORKSHOP
   Krupennikov D., 2022, Mobile Applications On-Device Testing at Google scale
   Kula RG, 2022, IEEE SOFTWARE, V39, P67, DOI 10.1109/MS.2021.3098116
   Laporte CY, 2016, COMPUTER, V49, P84, DOI 10.1109/MC.2016.242
   Lee N, 2022, IEEE INT SYMP SOFTW, P99, DOI 10.1109/ISSREW55968.2022.00047
   Linares-Vásquez M, 2017, PROC IEEE INT CONF S, P613, DOI 10.1109/ICSME.2017.47
   Liu XY, 2023, PROCEEDINGS OF THE 31ST ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2023, P1844, DOI 10.1145/3611643.3613895
   Luo LH, 2023, Softw Engg in Pract, P315, DOI 10.1109/ICSE-SEIP58684.2023.00034
   Maqbool B, 2018, PROCEEDINGS OF THE 2018 2ND INTERNATIONAL CONFERENCE ON MANAGEMENT ENGINEERING, SOFTWARE ENGINEERING AND SERVICE SCIENCES (ICMSS 2018), P147, DOI 10.1145/3180374.3181340
   Marijan D, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3494519
   Mårtensson T, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.2153
   Mårtensson T, 2018, J SYST SOFTWARE, V142, P223, DOI 10.1016/j.jss.2018.05.002
   Mårtensson T, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2017), P169, DOI 10.1109/ICSA.2017.11
   Memon A, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P233, DOI 10.1109/ICSE-SEIP.2017.16
   Morgenthaler JD, 2012, P 3 INT WORKSH MAN T, P1
   Mursu A, 2000, P 33 ANN HAW INT C S
   Osman R, 2012, P INT COMP SOFTW APP, P648, DOI 10.1109/COMPSAC.2012.91
   Ozkaya I, 2022, IEEE Software, V39
   Peças P, 2006, BENCHMARKING, V13, P54, DOI 10.1108/14635770610644574
   Petrovic G, 2022, IEEE T SOFTWARE ENG, V48, P3900, DOI 10.1109/TSE.2021.3107634
   Petrovic G, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P163, DOI 10.1145/3183519.3183521
   Petrovic G, 2018, IEEE ICST WORKSHOP, P47, DOI 10.1109/ICSTW.2018.00027
   Rafi D. M., 2012, 2012 Proceedings of 7th International Workshop on Automation of Software Test (AST 2012), P36, DOI 10.1109/IWAST.2012.6228988
   Ragkhitwetsagul C, 2022, EUR CON SFTWR MTNCE, P218, DOI 10.1109/SANER53432.2022.00036
   Sawant N, 2023, Softw Engg in Pract, P445, DOI 10.1109/ICSE-SEIP58684.2023.00046
   Stahl D, 2013, P 12 IASTED INT C SO, P736, DOI [10.2316/P.2013.796-012, 10.2316/p.2013.796-012]
   Ståhl D, 2017, 2017 43RD EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P61, DOI 10.1109/SEAA.2017.19
   Ståhl D, 2014, J SYST SOFTWARE, V87, P48, DOI 10.1016/j.jss.2013.08.032
   Stefanovic Miladin, 2009, World Review of Science, Technology and Sustainable Development, V6, P259, DOI 10.1504/WRSTSD.2009.031845
   Sunetnanta T, 2016, Tech. rep., ISO/IEC JTC 1/SC 7 Working Group 24
   Teka D, 2016, 9TH IEEE/ACM INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE 2016), P114, DOI [10.1145/2897586.2897604, 10.1109/CHASE.2016.031]
   Tómasdóttir KF, 2020, IEEE T SOFTWARE ENG, V46, P863, DOI 10.1109/TSE.2018.2871058
   Tuli S, 2023, Softw Engg in Pract, P122, DOI 10.1109/ICSE-SEIP58684.2023.00016
   van de Vrande V, 2009, TECHNOVATION, V29, P423, DOI 10.1016/j.technovation.2008.10.001
   Vassallo C, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P38, DOI 10.1109/SANER.2018.8330195
   Wang P, 2021, PROC INT CONF SOFTW, P1360, DOI 10.1109/ICSE43902.2021.00123
   Wang YQ, 2020, ICSOFT: PROCEEDINGS OF THE 15TH INTERNATIONAL CONFERENCE ON SOFTWARE TECHNOLOGIES, P27, DOI 10.5220/0009766800270038
   Winters Titus, 2020, Software Engineering at Google: Lessons Learned from Programming Over Time
   Wohlin C., 2012, Experimentation in Software Engineering, DOI [10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Yang J, 2022, Building for the 99% developers
NR 63
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2024
VL 29
IS 4
AR 90
DI 10.1007/s10664-024-10472-6
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TR0O1
UT WOS:001242870800001
OA hybrid
DA 2024-08-05
ER

PT J
AU Rua, R
   Saraiva, J
AF Rua, Rui
   Saraiva, Joao
TI A large-scale empirical study on mobile performance: energy, run-time
   and memory
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Performance; Empirical; Mobile; Testing
ID MOORES LAW; IMPACT
AB Software performance concerns have been attracting research interest at an increasing rate, especially regarding energy performance in non-wired computing devices. In the context of mobile devices, several research works have been devoted to assessing the performance of software and its underlying code. One important contribution of such research efforts is sets of programming guidelines aiming at identifying efficient and inefficient programming practices, and consequently to steer software developers to write performance-friendly code.Despite recent efforts in this direction, it is still almost unfeasible to obtain universal and up-to-date knowledge regarding software and respective source code performance. Namely regarding energy performance, where there has been growing interest in optimizing software energy consumption due to the power restrictions of such devices. There are still many difficulties reported by the community in measuring performance, namely in large-scale validation and replication. The Android ecosystem is a particular example, where the great fragmentation of the platform, the constant evolution of the hardware, the software platform, the development libraries themselves, and the fact that most of the platform tools are integrated into the IDE's GUI, makes it extremely difficult to perform performance studies based on large sets of data/applications. In this paper, we analyze the execution of a diversified corpus of applications of significant magnitude. We analyze the source-code performance of 1322 versions of 215 different Android applications, dynamically executed with over than 27900 tested scenarios, using state-of-the-art black-box testing frameworks with different combinations of GUI inputs. Our empirical analysis allowed to observe that semantic program changes such as adding functionality and repairing bugfixes are the changes more associated with relevant impact on energy performance. Furthermore, we also demonstrate that several coding practices previously identified as energy-greedy do not replicate such behavior in our execution context and can have distinct impacts across several performance indicators: runtime, memory and energy consumption. Some of these practices include some performance issues reported by the Android Lint and Android SDK APIs. We also provide evidence that the evaluated performance indicators have little to no correlation with the performance issues' priority detected by Android Lint. Finally, our results allowed us to demonstrate that there are significant differences in terms of performance between the most used libraries suited for implementing common programming tasks, such as HTTP communication, JSON manipulation, image loading/rendering, among others, providing a set of recommendations to select the most efficient library for each performance indicator. Based on the conclusions drawn and in the extension of the developed work, we also synthesized a set of guidelines that can be used by practitioners to replicate energy studies and build more efficient mobile software.
C1 [Rua, Rui; Saraiva, Joao] INESC TEC, HASLab, Braga, Portugal.
   [Rua, Rui; Saraiva, Joao] Univ Minho, Braga, Portugal.
C3 INESC TEC; Universidade do Minho
RP Rua, R (corresponding author), INESC TEC, HASLab, Braga, Portugal.; Rua, R (corresponding author), Univ Minho, Braga, Portugal.
EM rui.a.rua@inesctec.pt; saraiva@di.uminho.pt
RI Saraiva, Joao/L-6113-2015
OI Saraiva, Joao/0000-0002-5686-7151
FU National Funds through the Portuguese funding agency, FCT - Fundaco para
   a Ciencia e a Tecnologia [UIDP/50014/2020]; COST Action [19135];
   Erasmus+ [2020-1-PT01-KA203-078646]; FCT [SFRH/BD/146624/2019]
FX This work is partially financed by National Funds through the Portuguese
   funding agency, FCT - Fundac & atilde;o para a Ciencia e a Tecnologia,
   within project UIDP/50014/2020, by COST Action 19135: "CERICIRAS -
   Connecting Education and Research Communities for an Innovative Resource
   Aware Society", and by Erasmus+ project No. 2020-1-PT01-KA203-078646:
   "SusTrainable - Promoting Sustainability as a Fundamental Driver in
   Software Development Training and Education". The first author is also
   financed by FCT grant SFRH/BD/146624/2019. The information and views set
   out in this paper are those of the author(s) and do not necessarily
   reflect the official opinion of the European Union. Neither the European
   Union institutions and bodies nor any person acting on their behalf may
   be held responsible for the use which may be made of the information
   contained therein.
CR AppBrain, 2020, App brain libraries statistics
   Bangash AA, 2022, 2022 ACM/IEEE 44TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2022), P1, DOI [10.1109/ICSE-NIER55298.2022.9793522, 10.1145/3510455.3512795]
   Bangash AA, 2021, PROC IEEE INT CONF S, P320, DOI 10.1109/ICSME52107.2021.00035
   Biorn-Hansen A, 2020, EMPIR SOFTW ENG, V25, P2997, DOI 10.1007/s10664-020-09827-6
   Cañete A, 2020, INFORM SOFTWARE TECH, V118, DOI 10.1016/j.infsof.2019.106220
   Choudhary SR, 2015, IEEE INT CONF AUTOM, P429, DOI 10.1109/ASE.2015.89
   Chowdhury S, 2019, EMPIR SOFTW ENG, V24, P1649, DOI 10.1007/s10664-018-9640-7
   Chowdhury S, 2018, EMPIR SOFTW ENG, V23, P1422, DOI 10.1007/s10664-017-9545-x
   Couto Marco, 2015, 2015 IEEE 13th International Scientific Conference on Informatics. Proceedings, P73, DOI 10.1109/Informatics.2015.7377811
   Couto M, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P217, DOI [10.1109/SANER48275.2020.9054858, 10.1109/saner48275.2020.9054858]
   Couto M, 2017, 21ST INTERNATIONAL SYSTEMS & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 1, P84, DOI 10.1145/3106195.3106214
   Couto M, 2017, PROCEEDINGS OF THE 21ST BRAZILIAN SYMPOSIUM ON PROGRAMMING LANGUAGES (SBLP 2017), DOI 10.1145/3125374.3125382
   Cruz Luis, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P205, DOI 10.1109/MOBILESoft.2017.21
   Cruz Luis, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P46, DOI 10.1109/MOBILESoft.2017.19
   DAGOSTINO RB, 1971, BIOMETRIKA, V58, P341, DOI 10.1093/biomet/58.2.341
   Das T, 2020, EMPIR SOFTW ENG, V25, P2748, DOI 10.1007/s10664-019-09798-3
   Di Nucci D, 2017, PROC IEEE ACM INT C, P3, DOI 10.1109/ICSE-C.2017.18
   Di Nucci D, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P103, DOI 10.1109/SANER.2017.7884613
   Gomez L, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P72, DOI 10.1109/ICSE.2013.6606553
   Gonçalves N, 2022, Arxiv, DOI arXiv:2205.11399
   Google, 2021, Ui/application exerciser monkey
   Google, 2016, Trepn profiler android app
   Google, 2021, Android profiler
   Google, 2021, Android lint checks
   Google, 2021, App crawler
   Habchi S, 2021, J SYST SOFTWARE, V177, DOI 10.1016/j.jss.2021.110964
   Hindle A., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P78, DOI 10.1109/MSR.2012.6224303
   Hindle A, 2015, EMPIR SOFTW ENG, V20, P374, DOI 10.1007/s10664-013-9276-6
   Hoque MA, 2015, ACM COMPUT SURV, V48, DOI 10.1145/2840723
   Hort M, 2022, IEEE T SOFTWARE ENG, V48, P2879, DOI 10.1109/TSE.2021.3071193
   Hu Y, 2018, SCI COMPUT PROGRAM, V162, P132, DOI 10.1016/j.scico.2017.05.002
   Jabbarvand R, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P208, DOI 10.1145/3106237.3106244
   Jha AK, 2019, J SYST SOFTWARE, V156, P164, DOI 10.1016/j.jss.2019.06.095
   Keong CK, 2015, 2015 9TH MALAYSIAN SOFTWARE ENGINEERING CONFERENCE (MYSEC2015), P172, DOI 10.1109/MySEC.2015.7475216
   Kong PF, 2019, IEEE T RELIAB, V68, P45, DOI 10.1109/TR.2018.2865733
   KRUSKAL WH, 1952, J AM STAT ASSOC, V47, P583, DOI 10.1080/01621459.1952.10483441
   Lachgar M, 2018, 2018 INTERNATIONAL SYMPOSIUM ON ADVANCED ELECTRICAL AND COMMUNICATION TECHNOLOGIES (ISAECT)
   Le Goaër O, 2020, 2020 35TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING WORKSHOPS (ASEW 2020), P85, DOI 10.1145/3417113.3422188
   Li XL, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3527851
   Lima LG, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P517, DOI 10.1109/SANER.2016.85
   Lin JW, 2020, IEEE INT CONF AUTOM, P1078, DOI 10.1145/3324884.3416623
   Linares-Vasquez Mario, 2014, P 11 WORKING C MININ, P2, DOI [DOI 10.1145/2597073.2597085, 10.1145/]
   Liu JR, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P502, DOI 10.1109/SANER.2017.7884662
   Liu P, 2020, IEEE WORK CONF MIN S, P548, DOI 10.1145/3379597.3387503
   Ma Xiao., 2013, Proceedings of the 10th USENIX Conference on Networked Systems Design and Implementation, nsdi'13, P57
   Machiry A., 2013, P 2013 9 JOINT M FDN, P224
   Maia D, 2020, 2020 35TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING WORKSHOPS (ASEW 2020), P170, DOI 10.1145/3417113.3422999
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Manotas I, 2016, PROC INT CONF SOFTW, P237, DOI 10.1145/2884781.2884810
   Mazuera-Rozo A, 2020, EMPIR SOFTW ENG, V25, P1644, DOI 10.1007/s10664-019-09795-6
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Mickle T, 2018, Your phone is almost out of battery. Remain calm. Call a doctor
   Monsoon, 2021, Monsoon power monitor
   Oliveira Wellington, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P160, DOI 10.1109/MSR.2019.00033
   Oliveira W, 2017, IEEE WORK CONF MIN S, P42, DOI 10.1109/MSR.2017.66
   Ortiz G, 2019, IEEE ACCESS, V7, P65228, DOI 10.1109/ACCESS.2019.2918239
   Pang C, 2016, IEEE SOFTWARE, V33, P83, DOI 10.1109/MS.2015.83
   Park Je-Ho., 2013, 2013 INT C INFORM SC, P1, DOI DOI 10.1109/ICISA.2013.6579465
   Pathak A, 2011, EUROSYS 11: PROCEEDINGS OF THE EUROSYS 2011 CONFERENCE, P153
   Pereira Rui, 2016, 2016 IEEE/ACM 5th International Workshop on Green and Sustainable Software (GREENS), P15, DOI 10.1109/GREENS.2016.011
   Pereira R, 2020, Empir Softw Eng
   Pereira R, 2021, SCI COMPUT PROGRAM, V205, DOI 10.1016/j.scico.2021.102609
   Pereira R, 2020, J SYST SOFTWARE, V161, DOI 10.1016/j.jss.2019.110463
   Pereira R, 2018, IEEE INT CONF AUTOM, P856, DOI 10.1145/3238147.3240473
   Pereira R, 2017, SLE'17: PROCEEDINGS OF THE 10TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING, P256, DOI 10.1145/3136014.3136031
   Peters M, 2021, IEEE INT WORK C SO, P36, DOI 10.1109/SCAM52516.2021.00014
   Pinto G., 2014, P 11 WORK C MIN SOFT, P22, DOI DOI 10.1145/2597073.2597110
   Pinto G, 2017, COMMUN ACM, V60, P68, DOI 10.1145/3154384
   Qualcomm, 2014, Qualcomm forum-which mobile devices report accurate system power consumption?
   Rea L, 2016, Designing and conducting survey research
   Ribeiro A, 2021, IEEE INT C S Q R S, P62, DOI 10.1109/QRS54544.2021.00017
   Richter F, 2019, The most wanted smartphone features
   Rua R., 2019, P 22 IB C SOFTW ENG, P279
   Rua R, 2022, Online appendix
   Rua R, 2022, IEEE INT CONF AUTOM, DOI 10.1145/3551349.3561342
   Rua R, 2020, 2020 IEEE/ACM 7TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS, MOBILESOFT, P98, DOI 10.1145/3387905.3388600
   Rui Rua, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P176, DOI 10.1109/MSR.2019.00035
   Sadeghi A, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P220, DOI 10.1145/3106237.3106250
   Sahin C, 2014, PROC IEEE INT CONF S, P131, DOI 10.1109/ICSME.2014.35
   Scalabrino S, 2020, EMPIR SOFTW ENG, V25, P5006, DOI 10.1007/s10664-020-09877-w
   Schlachter F, 2013, P NATL ACAD SCI USA, V110, P5273, DOI 10.1073/pnas.1302988110
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.2307/2333709
   Spearman C, 1904, AM J PSYCHOL, V15, P72, DOI 10.2307/1412159
   Theis TN, 2017, COMPUT SCI ENG, V19, P41, DOI 10.1109/MCSE.2017.29
   Thorwart A., 2017, Camera and battery features continue to drive consumer satisfaction of smartphones in us
   Vilkomir S, 2014, IEEE ICST WORKSHOP, P78, DOI 10.1109/ICSTW.2014.9
   Xueliang Li, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P115, DOI 10.1145/3395363.3397350
   Yamane T., 1973, STAT INTRO ANAL
   Zeng Y, 2019, EMPIR SOFTW ENG, V24, P3394, DOI 10.1007/s10664-019-09687-9
NR 89
TC 0
Z9 0
U1 1
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2024
VL 29
IS 1
AR 31
DI 10.1007/s10664-023-10391-y
PG 56
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DI9P7
UT WOS:001131525900001
OA hybrid
DA 2024-08-05
ER

PT J
AU Batoun, MA
   Sayagh, M
   Aghili, R
   Ouni, A
   Li, H
AF Batoun, Mohamed Amine
   Sayagh, Mohammed
   Aghili, Roozbeh
   Ouni, Ali
   Li, Heng
TI A literature review and existing challenges on software logging
   practices
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software logging; Systematic literature review; Topic modeling;
   Developers' discussion
ID LOG FILE ANALYSIS; PARSER
AB Software logging is the practice of recording different events and activities that occur within a software system, which are useful for different activities such as failure prediction and anomaly detection. While previous research focused on improving different aspects of logging practices, the goal of this paper is to conduct a systematic literature review and the existing challenges of practitioners in software logging practices. In this paper, we focus on the logging practices that cover the steps from the instrumentation of a software system, the storage of logs, up to the preprocessing steps that prepare log data for further follow-up analysis. Our systematic literature review (SLR) covers 204 research papers and a quantitative and qualitative analysis of 20,766 and 149 questions on StackOverflow (SO). We observe that 53% of the studies focus on improving the techniques that preprocess logs for analysis (e.g., the practices of log parsing, log clustering and log mining), 37% focus on how to create new log statements, and 10% focus on how to improve log file storage. Our analysis of SO topics reveals that five out of seven identified high-level topics are not covered by the literature and are related to dependency configuration of logging libraries, infrastructure related configuration, scattered logging, context-dependant usage of logs and handling log files.
C1 [Batoun, Mohamed Amine; Sayagh, Mohammed; Ouni, Ali] Ecole Technol Super, 1100 Notre Dame St W, Montreal, PQ, Canada.
   [Aghili, Roozbeh; Li, Heng] Polytech Montreal, 2500 Chem Polytech, Montreal, PQ H3T 1J4, Canada.
C3 University of Quebec; Ecole de Technologie Superieure - Canada;
   Universite de Montreal; Polytechnique Montreal
RP Batoun, MA (corresponding author), Ecole Technol Super, 1100 Notre Dame St W, Montreal, PQ, Canada.
EM mohamed-amine.batoun.1@ens.etsmtl.ca; mohammed.sayagh@etsmtl.ca;
   roozbeh.aghili@polymtl.ca; ali.ouni@etsmtl.ca; heng.li@polymtl.ca
CR Abbasli N, 2021, P 2021 INT C INN INT, P1
   Agrawal A, 2019, IEEE INT CONF BIG DA, P1739, DOI 10.1109/BigData47090.2019.9006218
   Agrawal A, 2019, PROC INT CONF DATA, P1946, DOI 10.1109/ICDE.2019.00211
   Amar H, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P49, DOI 10.1145/3236024.3236069
   Anu H, 2019, PROC IEEE INT CONF S, P125, DOI 10.1109/ICSME.2019.00022
   Aslan U, 2021, P 2021 TURK NAT SOFT, P1
   Aussel N, 2018, I S MOD ANAL SIM COM, P237, DOI 10.1109/MASCOTS.2018.00031
   Baccanico F, 2014, P 2014 INT S SOFTW R, P10
   Baccanico F, 2014, 2014 IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING WORKSHOPS (ISSREW), P10, DOI 10.1109/ISSREW.2014.69
   Bai Y, 2023, IEEE Access 8275-8282
   Bao LF, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P851, DOI 10.1109/ASE.2019.00084
   Barua A, 2014, EMPIR SOFTW ENG, V19, P619, DOI 10.1007/s10664-012-9231-y
   Bhosale V, 2018, 2018 FOURTH INTERNATIONAL CONFERENCE ON COMPUTING COMMUNICATION CONTROL AND AUTOMATION (ICCUBEA)
   Bodík P, 2010, EUROSYS'10: PROCEEDINGS OF THE EUROSYS 2010 CONFERENCE, P111
   Bosch N, 2020, EUROMICRO CONF PROC, P29, DOI 10.1109/SEAA51224.2020.00016
   Bunker J, 2022, PATTERN RECOGN LETT, V156, P74, DOI 10.1016/j.patrec.2022.01.027
   Bushong Vincent, 2020, RACS '20: Proceedings of the International Conference on Research in Adaptive and Convergent Systems, P181, DOI 10.1145/3400286.3418262
   Byungchul Tak, 2021, Middleware '21: Proceedings of the 22nd International Middleware Conference, P273, DOI 10.1145/3464298.3493400
   Cândido J, 2021, IEEE WORK CONF MIN S, P143, DOI 10.1109/MSR52588.2021.00027
   Chen AR, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09893-w
   Chen BY, 2021, ACM COMPUT SURV, V54, DOI 10.1145/3448976
   Chen BY, 2020, PROC INT CONF SOFTW, P397, DOI 10.1145/3377811.3380408
   Chen BY, 2019, EMPIR SOFTW ENG, V24, P2285, DOI 10.1007/s10664-019-09690-0
   Chen BY, 2017, PROC INT CONF SOFTW, P71, DOI 10.1109/ICSE.2017.15
   Chen BY, 2017, EMPIR SOFTW ENG, V22, P330, DOI 10.1007/s10664-016-9429-5
   Chen J, 2022, J COMPUT SCI TECH-CH, V37, P1239, DOI 10.1007/s11390-020-0653-5
   Chen M, 2004, INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING, PROCEEDINGS, P36, DOI 10.1109/ICAC.2004.1301345
   Chen TH, 2016, EMPIR SOFTW ENG, V21, P1843, DOI 10.1007/s10664-015-9402-8
   Chi SQ, 2018, ASIA PAC SOFWR ENG, P189, DOI 10.1109/APSEC.2018.00033
   Chowdhury S, 2018, EMPIR SOFTW ENG, V23, P1422, DOI 10.1007/s10664-017-9545-x
   Chu GJ, 2021, PROC INT CONF DATA, P2411, DOI 10.1109/ICDE51399.2021.00274
   Copstein R, 2021, ARES 2021: 16TH INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY AND SECURITY, DOI 10.1145/3465481.3470083
   Coustié O, 2020, 2020 IEEE 13TH INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2020), P84, DOI 10.1109/ICWS49710.2020.00018
   Dai H, 2020, IEEE Trans Softw Eng
   Dai S, 2022, IEEE Trans Netw Serv Manag
   Decker L, 2022, IEEE INT FUZZY SYST, DOI 10.1109/FUZZ-IEEE55066.2022.9882710
   Di S, 2017, IEEE ACM INT SYMP, P442, DOI 10.1109/CCGRID.2017.18
   Ding ZS, 2022, EUR CON SFTWR MTNCE, P349, DOI 10.1109/SANER53432.2022.00051
   Du M, 2019, IEEE T KNOWL DATA EN, V31, P2213, DOI 10.1109/TKDE.2018.2875442
   Du M, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1285, DOI 10.1145/3133956.3134015
   Du M, 2016, IEEE DATA MINING, P859, DOI [10.1109/ICDM.2016.160, 10.1109/ICDM.2016.0103]
   Duan XY, 2021, INFORM SYST, V95, DOI 10.1016/j.is.2020.101618
   Dusane Palash, 2021, Proceedings of the 5th International Conference on Trends in Electronics and Informatics (ICOEI 2021), P909, DOI 10.1109/ICOEI51242.2021.9453065
   Egersdoerfer C, 2022, Fault Tolerance for, P1, DOI 10.1109/FTXS56515.2022.00006
   Ekelhart A, 2021, LECT NOTES COMPUT SC, V12731, P631, DOI 10.1007/978-3-030-77385-4_38
   El-Masri D, 2020, Inf Softw Technol
   Fang LY, 2021, IEEE INT CONF TRUST, P1085, DOI 10.1109/TrustCom53373.2021.00148
   Fei P, 2021, PROCEEDINGS OF THE 30TH USENIX SECURITY SYMPOSIUM, P2987
   Feng B, 2016, IEEE TRUST BIG, P1358, DOI [10.1109/TrustCom.2016.0215, 10.1109/TrustCom.2016.213]
   Fu Q, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P24, DOI 10.1145/2591062.2591175
   Fu Y, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P1566, DOI 10.1145/3540250.3558947
   Fu Y, 2023, EMPIR SOFTW ENG, V28, DOI 10.1007/s10664-022-10214-6
   Gholamian S, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P1043, DOI 10.1109/ASE51524.2021.9678596
   Gholamian S, 2020, PROCEEDINGS OF THE 35TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING (SAC'20), P82, DOI 10.1145/3341105.3373845
   Gujral H, 2020, J Softw Evol Process, Ve2361
   Gujral H, 2018, P 2018 C SOFTW ENG D
   Gujral H, 2019, E-INFORMATICA, V13, P105, DOI 10.5277/e-Inf190104
   Guo ST, 2019, LECT NOTES ELECTR EN, V514, P465, DOI 10.1007/978-981-13-1056-0_47
   Hamooni H, 2016, CIKM'16: PROCEEDINGS OF THE 2016 ACM CONFERENCE ON INFORMATION AND KNOWLEDGE MANAGEMENT, P1573, DOI 10.1145/2983323.2983358
   Harty J, 2021, 2021 IEEE/ACM 8TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2021), P56, DOI 10.1109/MobileSoft52590.2021.00013
   Harutyunyan AN, 2019, J UNIVERS COMPUT SCI, V25, P925
   Hashemi S, 2022, AUTOMAT SOFTW ENG, V29, DOI 10.1007/s10515-022-00365-7
   Hassani M, 2018, EMPIR SOFTW ENG, V23, P3248, DOI 10.1007/s10664-018-9603-z
   He PJ, 2018, IEEE INT CONF AUTOM, P178, DOI 10.1145/3238147.3238193
   He PJ, 2018, IEEE T DEPEND SECURE, V15, P931, DOI 10.1109/TDSC.2017.2762673
   He PJ, 2017, SYM REL DIST SYST, P266, DOI 10.1109/SRDS.2017.41
   He PJ, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2017), P33, DOI 10.1109/ICWS.2017.13
   He S, 2021, ACM Comput Surv (CSUR), P1
   He SL, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P1465, DOI 10.1145/3540250.3558963
   He SL, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P60, DOI 10.1145/3236024.3236083
   Hickman M, 2018, IEEE INT SYMP SOFTW, P100, DOI 10.1109/ISSREW.2018.00-23
   Huang SH, 2020, IEEE IFIP NETW OPER, DOI 10.1109/noms47738.2020.9110435
   Huo YT, 2022, IEEE INT SYMP SOFTW, P124, DOI 10.1109/ISSREW55968.2022.00053
   Jayathilake D., 2012, 2012 International Joint Conference on Computer Science and Software Engineering (JCSSE 2012), P259, DOI 10.1109/JCSSE.2012.6261962
   Jayathilake PW, 2017, P 2017 INT C ADV ICT, P1
   Jia T, 2018, IEEE INT SYMP SOFTW, P106, DOI 10.1109/ISSREW.2018.00-22
   Jia ZY, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P61, DOI 10.1109/SANER.2018.8330197
   Kabinna S, 2018, EMPIR SOFTW ENG, V23, P290, DOI 10.1007/s10664-017-9518-0
   Kabinna S, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P154, DOI [10.1109/MSR.2016.025, 10.1145/2901739.2901769]
   Kalamatianos T, 2014, LECT NOTES COMPUT SC, V8484, P394, DOI 10.1007/978-3-319-07881-6_27
   Kersten M, 2005, P 2005 INT C ASP OR, P159, DOI DOI 10.1145/1052898.1052912
   Khan ZA, 2022, PROC INT CONF SOFTW, P1095, DOI 10.1145/3510003.3510101
   Kim T, 2020, SOFTWARE PRACT EXPER, V50, P189, DOI 10.1002/spe.2771
   Kim T, 2018, ASIA PAC SOFWR ENG, P623, DOI 10.1109/APSEC.2018.00078
   King J, 2015, P 2015 S BOOTC SCI S, P1
   King J, 2017, EMPIR SOFTW ENG, V22, P2684, DOI 10.1007/s10664-016-9449-1
   Kiran D, 2022, COMPUTER NETWORKS IN, P857
   Kitchenham B. e. a., 2007, Technical report EBSE-2007-01, DOI DOI 10.1145/1134285.1134500
   Kobayashi S, 2014, P 2014 INT C FUT INT, P1
   Kobayashi S, 2022, INT J NETW MANAG, V32, DOI 10.1002/nem.2195
   Korzeniowski L, 2022, Landscape of automated log analysis: A systematic literature review and mapping study
   Kratzke N, 2022, FUTURE INTERNET, V14, DOI 10.3390/fi14100274
   Krippendorff K., 2011, Computing krippendorff's alpha-reliability
   Kubacki M, 2017, LECT NOTES COMPUT SC, V10479, P184, DOI 10.1007/978-3-319-65948-0_12
   Kubacki M, 2016, 2016 12TH EUROPEAN DEPENDABLE COMPUTING CONFERENCE (EDCC 2016), P193, DOI 10.1109/EDCC.2016.18
   Kurniawan K, 2022, Mach Learn Know Extr
   Lal Sangeeta, 2015, International Journal of Open Source Software and Processes, V6, P49, DOI 10.4018/IJOSSP.2015010104
   Lal S, 2017, Analysis and prediction of log statement in open source java projects, P65
   Lal S, 2019, J KING SAUD UNIV-COM, V31, P481, DOI 10.1016/j.jksuci.2017.07.006
   Lal S, 2016, PROCEEDINGS OF THE 9TH INDIA SOFTWARE ENGINEERING CONFERENCE, P151, DOI 10.1145/2856636.2856637
   Lal S, 2016, P INT COMP SOFTW APP, P215, DOI 10.1109/COMPSAC.2016.149
   Landauer M, 2018, COMPUT SECUR, V79, P94, DOI 10.1016/j.cose.2018.08.009
   Lee Kyu Hyung, 2013, P 2013 ACM SIGSAC C, P1005
   Li H, 2020, IEEE Trans Softw Eng
   Li H, 2018, EMPIR SOFTW ENG, V23, P2655, DOI 10.1007/s10664-018-9595-8
   Li H, 2017, EMPIR SOFTW ENG, V22, P1684, DOI 10.1007/s10664-016-9456-2
   Li H, 2017, EMPIR SOFTW ENG, V22, P1831, DOI 10.1007/s10664-016-9467-z
   Li SS, 2020, EMPIR SOFTW ENG, V25, P2302, DOI 10.1007/s10664-019-09757-y
   Li SS, 2018, INT C PROGRAM COMPRE, P178, DOI 10.1145/3196321.3196328
   Li T, 2017, KDD'17: PROCEEDINGS OF THE 23RD ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1547, DOI 10.1145/3097983.3098022
   Li X, 2021, J CIRCUIT SYST COMP, V30, DOI 10.1142/S0218126621502960
   Li XP, 2018, 2018 14TH INTERNATIONAL CONFERENCE ON COMPUTATIONAL INTELLIGENCE AND SECURITY (CIS), P301, DOI 10.1109/CIS2018.2018.00073
   Li Y, 2019, APPL SCI-BASEL, V9, DOI 10.3390/app9061114
   Li Z, 2016, P 2019 IEEE ACM INT, P877
   Li ZH, 2021, PROC INT CONF SOFTW, P1461, DOI 10.1109/ICSE43902.2021.00131
   Li ZH, 2021, IEEE T SOFTWARE ENG, V48, P2476, DOI 10.1109/TSE.2021.3060918
   Li ZH, 2020, IEEE INT CONF AUTOM, P361, DOI 10.1145/3324884.3416636
   Lin H, 2015, IEEE ACM INT SYMP, P21, DOI 10.1109/CCGrid.2015.45
   Lin QW, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P102, DOI 10.1145/2889160.2889232
   Lin XQ, 2013, 2013 5TH IEEE INTERNATIONAL CONFERENCE ON BROADBAND NETWORK & MULTIMEDIA TECHNOLOGY (IC-BNMT), P273, DOI 10.1109/ICBNMT.2013.6823956
   Liu JY, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P863, DOI 10.1109/ASE.2019.00085
   Liu XT, 2020, LECT NOTES COMPUT SC, V12470, P251, DOI 10.1007/978-3-030-64437-6_13
   Liu YD, 2022, PROCEEDINGS OF THE ACM WEB CONFERENCE 2022 (WWW'22), P1893, DOI 10.1145/3485447.3511993
   Liu ZX, 2021, IEEE T SOFTWARE ENG, V47, P2012, DOI 10.1109/TSE.2019.2941943
   Locke S, 2021, IEEE Trans Softw Eng
   Lupton S, 2021, IEEE INT SYMP SOFTW, P304, DOI 10.1109/ISSREW53611.2021.00091
   Makanju A, 2012, IEEE T KNOWL DATA EN, V24, P1921, DOI 10.1109/TKDE.2011.138
   Marjai P, 2022, APPL SCI-BASEL, V12, DOI 10.3390/app12042044
   Marjai P, 2021, COMPUTERS, V10, DOI 10.3390/computers10070083
   Marlaithong Tinnakorn, 2021, 2021 18th International Conference on Electrical Engineering/Electronics, Computer, Telecommunications and Information Technology (ECTI-CON), P1036, DOI 10.1109/ECTI-CON51831.2021.9454924
   Mastropaolo A, 2022, PROC INT CONF SOFTW, P2279, DOI 10.1145/3510003.3511561
   Mavridis I, 2017, J SYST SOFTWARE, V125, P133, DOI 10.1016/j.jss.2016.11.037
   Mendes E, 2021, IEEE INT C S Q R S, P1002, DOI 10.1109/QRS54544.2021.00109
   Meng W, 2023, IEEE Trans Netw Serv Manag
   Meng W, 2020, P 2020 INT C COMP CO, P1
   Meng WB, 2020, Arxiv, DOI arXiv:2012.08938
   Meng WB, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P4739
   Meng WB, 2020, IEEE IC COMP COM NET, DOI 10.1109/icccn49398.2020.9209707
   Messaoudi S, 2018, INT C PROGRAM COMPRE, P167, DOI 10.1145/3196321.3196340
   Miranskyy A, 2016, IEEE SOFTWARE, V33, P52, DOI 10.1109/MS.2016.33
   Mizouchi T, 2019, INT C PROGRAM COMPRE, P135, DOI 10.1109/ICPC.2019.00029
   Mizutani Masayoshi, 2013, 2013 IEEE International Conference on Services Computing (SCC), P595, DOI 10.1109/SCC.2013.73
   Nagappan M, 2017, P 2010 WORK C MIN SO, P71
   Narkhede S, 2013, Int J UbiComp, P41
   Nedelkoski S, 2021, LECT NOTES ARTIF INT, V12460, P122, DOI 10.1007/978-3-030-67667-4_8
   Ning X., 2014, P 2014 SDM WORKSH HE, P1
   Obrebski Daniel, 2020, Engineering in Dependability of Computer Systems and Networks. Proceedings of the Fourteenth International Conference on Dependability of Computer Systems DepCoS-RELCOMEX. Advances in Intelligent Systems and Computing (AISC 987), P371, DOI 10.1007/978-3-030-19501-4_37
   Ouatiti YE, 2022, IEEE Trans Softw Eng, P1
   Patel K, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10136-3
   Pecchia A, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P169, DOI 10.1109/ICSE.2015.145
   Pengyu Wen, 2020, ICITEE2020: Proceedings of the 3rd International Conference on Information Technologies and Electrical Engineering, P55, DOI 10.1145/3452940.3452951
   Pi AD, 2019, IEEE SYM PARA DISTR, P446, DOI 10.1109/IPDPSW.2019.00084
   Pinjia He, 2016, 2016 46th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN). Proceedings, P654, DOI 10.1109/DSN.2016.66
   Plaisted D, 2022, ACMSE 2022: PROCEEDINGS OF THE 2022 ACM SOUTHEAST CONFERENCE, P113, DOI 10.1145/3476883.3520226
   Platini M, 2021, PROCEEDINGS OF THE 2021 INTERNATIONAL CONFERENCE ON DISTRIBUTED COMPUTING AND NETWORKING (ICDCN '21), P116, DOI 10.1145/3427796.3427808
   Portillo-Dominguez AO, 2019, 2019 7TH INTERNATIONAL CONFERENCE IN SOFTWARE ENGINEERING RESEARCH AND INNOVATION (CONISOFT 2019), P107, DOI 10.1109/CONISOFT.2019.00024
   Pourmajidi W, 2021, IEEE Trans Serv Comput
   Prayurahong Pattapon, 2022, 2022 IEEE 5th International Conference on Knowledge Innovation and Invention (ICKII ), P75, DOI 10.1109/ICKII55100.2022.9983522
   Raffety Jackson, 2021, Information Science and Applications. Proceedings of ICISA 2020. Lecture Notes in Electrical Engineering (LNEE 739), P31, DOI 10.1007/978-981-33-6385-4_4
   Rand J, 2021, 2021 ACM/IEEE 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2021), P41, DOI 10.1109/ICSE-NIER52604.2021.00017
   Raynal M, 2022, INT C PATT RECOG, P1236, DOI 10.1109/ICPR56361.2022.9956295
   Rivera-Ortiz F, 2020, P 2020 INT C AV REL, P1
   Rivera-Ortiz F, 2022, P 2022 REFSQ WORKSH
   Rodrigues K, 2021, PROCEEDINGS OF THE 15TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDI '21), P183
   Rong G, 2018, P 2020 IEEE INT C SO, P171
   Rong GP, 2018, 2018 25TH AUSTRALASIAN SOFTWARE ENGINEERING CONFERENCE (ASWEC), P171, DOI 10.1109/ASWEC.2018.00031
   Rong GP, 2017, ASIA PAC SOFWR ENG, P534, DOI 10.1109/APSEC.2017.61
   Rosenberg CM, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3239248
   Rucker N, 2022, J Softw Evol Process, Ve2426
   Sadeghi MA, 2021, J Inf Secur Appl
   Sangeeta Lal, 2020, Cognitive Analytics: Concepts, Methodologies, Tools, and Applications, P740
   Schipper Daan, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P545, DOI 10.1109/MSR.2019.00081
   Sedki I, 2022, PROC IEEE INT CONF S, P1, DOI 10.1109/ICSME55016.2022.00009
   Serasinghe S, 2017, ASIA PAC SOFWR ENG, P588, DOI 10.1109/APSEC.2017.70
   Setayeshfar O, 2021, SOFTW IMPACTS, V8, DOI 10.1016/j.simpa.2021.100068
   Setianto F, 2021, PR I-A I C AD S N A, P649, DOI 10.1145/3487351.3492723
   Shang WY, 2014, PROC IEEE INT CONF S, P21, DOI 10.1109/ICSME.2014.24
   Shehu Y, 2022, IEEE Trans Netw Serv Manag
   Skopik F, 2021, Smart Log Data Analytics
   Spillner J, 2020, P 2020 INT C COMM CO, P1
   Sun JY, 2020, CIKM '20: PROCEEDINGS OF THE 29TH ACM INTERNATIONAL CONFERENCE ON INFORMATION & KNOWLEDGE MANAGEMENT, P2229, DOI 10.1145/3340531.3412165
   Svacina Jan, 2020, RACS '20: Proceedings of the International Conference on Research in Adaptive and Convergent Systems, P175, DOI 10.1145/3400286.3418261
   Tang YM, 2022, PROC IEEE ACM INT C, P21, DOI [10.1109/ICSE-Companion55297.2022.9793736, 10.1145/3510454.3516838]
   Tang YM, 2022, SCI COMPUT PROGRAM, V214, DOI 10.1016/j.scico.2021.102724
   Tao Shimin, 2022, ACM SIGMETRICS Performance Evaluation Review, V49, P93, DOI 10.1145/3543146.3543168
   Tian R, 2022, IEEE ICC, P3679, DOI 10.1109/ICC45855.2022.9838258
   Tovarnak Daniel, 2013, 2013 IEEE/ACM 6th International Conference on Utility and Cloud Computing (UCC), P91, DOI 10.1109/UCC.2013.30
   Tovarnák D, 2019, ICSOFT: PROCEEDINGS OF THE 14TH INTERNATIONAL CONFERENCE ON SOFTWARE TECHNOLOGIES, P665, DOI 10.5220/0007919806650676
   Tschudin PS, 2015, P 2015 BELG NETH SOF
   Vaarandi R, 2015, INT CONF NETW SER, P1, DOI 10.1109/CNSM.2015.7367331
   Varanda A, 2021, P 2021 INT C ADV INF, P479
   Varanda A, 2021, J INF SECUR APPL, V63, DOI 10.1016/j.jisa.2021.103021
   Vervaet A, 2021, IEEE DATA MINING, P659, DOI 10.1109/ICDM51629.2021.00077
   Wagner T, 2016, COMPANION PROCEEDINGS OF THE 2016 ACM SIGPLAN INTERNATIONAL CONFERENCE ON SYSTEMS, PROGRAMMING, LANGUAGES AND APPLICATIONS: SOFTWARE FOR HUMANITY (SPLASH COMPANION'16), P37, DOI 10.1145/2984043.2989221
   Wang H, 2018, INT CONF SOFTW ENG, P518, DOI 10.1109/ICSESS.2018.8663935
   Wei J, 2023, IEEE Trans Softw Eng
   Wei JY, 2021, PROCEEDINGS OF THE 19TH USENIX CONFERENCE ON FILE AND STORAGE TECHNOLOGIES (FAST '21), P249
   Xiao T, 2020, IEEE DATA MINING, P1346, DOI 10.1109/ICDM50108.2020.00175
   Xie XS, 2021, MOBILE NETW APPL, V26, P1638, DOI 10.1007/s11036-019-01501-6
   Xie YX, 2021, IEEE ACCESS, V9, P73522, DOI 10.1109/ACCESS.2021.3076897
   Xu N., 2018, J Circuits Syst Comput, V1887
   Xu W, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P117
   Yang J, 2013, 2013 5TH IEEE INTERNATIONAL CONFERENCE ON BROADBAND NETWORK & MULTIMEDIA TECHNOLOGY (IC-BNMT), P115, DOI 10.1109/ICBNMT.2013.6823926
   Yang N, 2023, EMPIR SOFTW ENG, V28, DOI 10.1007/s10664-022-10258-8
   Yang RP, 2019, EURASIP J WIREL COMM, DOI 10.1186/s13638-019-1430-4
   Yang S, 2018, PROCEEDINGS OF THE 2018 USENIX ANNUAL TECHNICAL CONFERENCE, P335
   Yao K, 2021, IEEE Trans Softw Eng
   Yao KD, 2020, EMPIR SOFTW ENG, V25, P3043, DOI 10.1007/s10664-020-09822-x
   Yen S, 2021, Research anthology on artificial intelligence applications in security, P1154
   Yuan D, 2012, P 10 USENIX C OP SYS
   Yun Wang, 2021, Human Centered Computing. 6th International Conference, HCC 2020. Revised Selected Papers. Lecture Notes in Computer Science (LNCS 12634), P349, DOI 10.1007/978-3-030-70626-5_37
   Zawoad S, 2013, P 2013 ACM SIGSAC S, P219
   Zeng Y, 2019, EMPIR SOFTW ENG, V24, P3394, DOI 10.1007/s10664-019-09687-9
   Zhang CY, 2020, 2020 3RD INTERNATIONAL CONFERENCE ON INFORMATION AND COMPUTER TECHNOLOGIES (ICICT 2020), P251, DOI 10.1109/ICICT50521.2020.00045
   Zhang HN, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10139-0
   Zhang Jing, 2022, 2022 5th International Conference on Pattern Recognition and Artificial Intelligence (PRAI), P979, DOI 10.1109/PRAI55851.2022.9904207
   Zhang L, 2019, LECT NOTES COMPUT SC, V11719, P123, DOI 10.1007/978-3-030-29611-7_10
   Zhang SJ, 2021, APPL SCI-BASEL, V11, DOI 10.3390/app112411974
   Zhao X, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P565, DOI 10.1145/3132747.3132778
   Zhao X, 2017, PROCEEDINGS OF THE 16TH WORKSHOP ON HOT TOPICS IN OPERATING SYSTEMS (HOTOS 2017), P125, DOI 10.1145/3102980.3103001
   Zhao YN, 2018, IEEE SYM PARA DISTR, P507, DOI 10.1109/IPDPSW.2018.00087
   Zhi C, 2022, AUTOMAT SOFTW ENG, V29, DOI 10.1007/s10515-021-00317-7
   Zhi C, 2020, ASIA PAC SOFWR ENG, P470, DOI 10.1109/APSEC51365.2020.00058
   Zhi C, 2019, PROC IEEE INT CONF S, P459, DOI 10.1109/ICSME.2019.00079
   Zhiyuan Zhao, 2018, Information and Communications Security. 20th International Conference, ICICS 2018. Proceedings: Lecture Notes in Computer Science (LNCS 11149), P325, DOI 10.1007/978-3-030-01950-1_19
   Zhong Y, 2018, ELECTRON LETT, V54, P1334, DOI 10.1049/el.2018.6079
   Zhou R, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P577, DOI [10.1109/saner48275.2020.9054831, 10.1109/SANER48275.2020.9054831]
   Zhu JM, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P121, DOI 10.1109/ICSE-SEIP.2019.00021
   Zhu JM, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P415, DOI 10.1109/ICSE.2015.60
   Zhu J, 2019, 11TH ASIA-PACIFIC SYMPOSIUM ON INTERNETWARE (INTERNETWARE 2019), DOI 10.1145/3361242.3361261
   Zhu YQ, 2022, J COMPUT SCI TECH-CH, V37, P1412, DOI 10.1007/s11390-021-0730-4
   Zou F, 2022, SECUR COMMUN NETW, V2022, DOI 10.1155/2022/1559270
   Zuo Y, 2021, CHIN CONTR CONF, P3391, DOI 10.23919/CCC52363.2021.9549906
NR 233
TC 0
Z9 0
U1 8
U2 8
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2024
VL 29
IS 4
AR 103
DI 10.1007/s10664-024-10452-w
PG 61
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UQ7V4
UT WOS:001249598000003
DA 2024-08-05
ER

PT J
AU Saberi, I
   Fard, F
   Chen, FX
AF Saberi, Iman
   Fard, Fatemeh
   Chen, Fuxiang
TI Utilization of pre-trained language models for adapter-based knowledge
   transfer in software engineering
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Transfer learning; Adapter-based Training; Programming Language Models;
   Parameter Efficient Finetuning; Code Clone Detection; Code Summarization
AB Software Engineering (SE) Pre-trained Language Models (PLMs), such as CodeBERT, are pre-trained on large code corpora, and their learned knowledge has shown success in transferring into downstream tasks (e.g., code clone detection) through the fine-tuning of PLMs. In Natural Language Processing (NLP), an alternative in transferring the knowledge of PLMs is explored through the use of adapter, a compact and parameter efficient module that is inserted into a PLM. Although the use of adapters has shown promising results in many NLP-based downstream tasks, their application and exploration in SE-based downstream tasks are limited. Here, we study the knowledge transfer using adapters on multiple downstream tasks including cloze test, code clone detection, and code summarization. These adapters are trained on code corpora and are inserted into a PLM that is pre-trained on English corpora or code corpora. We called these PLMs as NL-PLM and C-PLM, respectively. We observed an improvement in results using NL-PLM over a PLM that does not have adapters, and this suggested that adapters can transfer and utilize useful knowledge from NL-PLM to SE tasks. The results are sometimes on par with or exceed the results of C-PLM; while being more efficient in terms of the number of parameters and training time. Interestingly, adapters inserted into a C-PLM generally yield better results than a traditional fine-tuned C-PLM. Our results open new directions to build more compact models for SE tasks.
C1 [Saberi, Iman; Fard, Fatemeh] Univ British Columbia, 3333 Univ Way, Kelowna, BC V1V 1V7, Canada.
   [Chen, Fuxiang] Univ Leicester, Univ Rd, Leicester LE1 7RH, England.
C3 University of British Columbia; University of Leicester
RP Saberi, I (corresponding author), Univ British Columbia, 3333 Univ Way, Kelowna, BC V1V 1V7, Canada.
EM iman.saberi@ubc.ca; fatemeh.fard@ubc.ca; fuxiang.chen@leicester.ac.uk
FU RGPIN-2019-05175
FX We thank the original authors of the ICPC 2022 (Goel et al. 2022) paper,
   Divyam Goel and Ramansh Grover. Part of the experiments from our
   previous paper coauthored with Divyam Goel and Ramansh Grover are
   rewritten in the current paper.
CR Adi Y., 2016, INT C LEARN REPR
   Alain G, 2018, Arxiv, DOI arXiv:1610.01644
   Allamanis M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3212695
   Allamanis Miltiadis, 2018, INT C LEARNING REPRE
   Artetxe M, 2020, 58TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2020), P4623
   Ayupov S, 2022, arXiv
   Bapna A, 2019, 2019 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING AND THE 9TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING (EMNLP-IJCNLP 2019), P1538
   Brockschmidt M, 2018, INT C LEARN REPR
   Buratti L, 2020, Arxiv, DOI arXiv:2006.12641
   Chen FX, 2022, INT C PROGRAM COMPRE, P401, DOI 10.1145/3524610.3527917
   Chen Guanzheng, 2022, P C EMP METH NAT LAN, P2612, DOI DOI 10.18653/V1/2022.EMNLP-MAIN.168
   Clark K, 2020, INFORM SYST RES, DOI 10.48550/arXiv.2003.10555
   Conneau A., 2020, P 58 ANN M ASS COMP, P8440, DOI DOI 10.18653/V1/2020.ACL-MAIN.747
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   Drain Dawn, 2021, MAPS 2021: Proceedings of the 5th SIGPLAN International Symposium on Machine Programming, P1, DOI 10.1145/3460945.3464951
   Elnaggar A., 2021, arXiv
   Feng ZY, 2020, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, EMNLP 2020, P1536
   Goel D, 2022, INT C PROGRAM COMPRE, P71, DOI 10.1145/3524610.3527892
   Guo D., 2021, INT C LEARN REPR ICL
   He J, 2021, INT C LEARN REPR
   He RD, 2021, 59TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS AND THE 11TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING, VOL 1 (ACL-IJCNLP 2021), P2208
   Hindle A, 2016, COMMUN ACM, V59, P122, DOI 10.1145/2902362
   Hindle A, 2012, PROC INT CONF SOFTW, P837, DOI 10.1109/ICSE.2012.6227135
   Houlsby N, 2019, PR MACH LEARN RES, V97
   Husain H, 2020, Arxiv, DOI arXiv:1909.09436
   Kanade A, 2020, PR MACH LEARN RES, V119
   Karmakar A, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P1332, DOI 10.1109/ASE51524.2021.9678927
   Lan Z., 2020, INT C LEARN REPR
   Lee C, 2019, 8 INT C LEARN REPR I
   Lewis M, 2019, P 58 ANN M ASS COMP, DOI [10.18653/v1/2020.acl-main.703, DOI 10.18653/V1/2020.ACL-MAIN.703]
   Lin Chin-Yew, 2004, P 20 INT C COMP LING, DOI DOI 10.3115/1220355.1220427
   Liu YH, 2019, Arxiv, DOI [arXiv:1907.11692, DOI 10.48550/ARXIV.1907.11692]
   Lu S, 2021, Arxiv, DOI arXiv:2102.04664
   Musgrave Kevin, 2020, Computer Vision - ECCV 2020. 16th European Conference. Proceedings. Lecture Notes in Computer Science (LNCS 12370), P681, DOI 10.1007/978-3-030-58595-2_41
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Perez Daniel, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P518, DOI 10.1109/MSR.2019.00078
   Peters ME, 2018, 2018 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2018), P1499, DOI 10.5771/9783845286846
   Pfeiffer J, 2021, 16TH CONFERENCE OF THE EUROPEAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (EACL 2021), P487
   Pfeiffer J, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P10186
   Pfeiffer J, 2020, PROCEEDINGS OF THE 2020 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING: SYSTEM DEMONSTRATIONS, P46
   Pfeiffer J, 2020, PROCEEDINGS OF THE 2020 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP), P7654
   Philip J, 2020, PROCEEDINGS OF THE 2020 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP), P4465
   Puri R., 2021, arXiv
   Raffel C, 2020, J MACH LEARN RES, V21
   Tufano M, 2022, 3RD ACM/IEEE INTERNATIONAL CONFERENCE ON AUTOMATION OF SOFTWARE TEST (AST 2022), P54, DOI 10.1145/3524481.3527220
   Wang X, 2021, Arxiv, DOI arXiv:2108.04556
   Zeng ZR, 2022, PROCEEDINGS OF THE 31ST ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2022, P39, DOI 10.1145/3533767.3534390
   Zhang CY, 2022, SYMMETRY-BASEL, V14, DOI 10.3390/sym14030471
   Zhang J, 2020, PMLR, V119, P11328
   Zhang T, 2020, PROC IEEE INT CONF S, P70, DOI 10.1109/ICSME46990.2020.00017
   Zhu YM, 2021, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, EMNLP 2021, P2812
NR 51
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2024
VL 29
IS 4
AR 94
DI 10.1007/s10664-024-10457-5
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UK9H4
UT WOS:001248066000001
DA 2024-08-05
ER

PT J
AU Wu, XF
   Laufer, E
   Li, H
   Khomh, F
   Srinivasan, S
   Luo, J
AF Wu, Xingfang
   Laufer, Eric
   Li, Heng
   Khomh, Foutse
   Srinivasan, Santhosh
   Luo, Jayden
TI Characterizing and classifying developer forum posts with their
   intentions
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Developer forum; Online community; Intention; Tag recommendation
ID TAG RECOMMENDATION; TOPICS
AB With the rapid growth of the developer community, the amount of posts on online technical forums has been growing rapidly, which poses difficulties for users to filter useful posts and find important information. Tags provide a concise feature dimension for users to locate their interested posts and for search engines to index the most relevant posts according to the queries. Most tags are only focused on the technical perspective (e.g., program language, platform, tool). In most cases, forum posts in online developer communities reveal the author's intentions to solve a problem, ask for advice, share information, etc. The modeling of the intentions of posts can provide an extra dimension to the current tag taxonomy. By referencing previous studies and learning from industrial perspectives, we create a refined taxonomy for the intentions of technical forum posts. Through manual labeling and analysis on a sampled post dataset extracted from online forums, we understand the relevance between the constitution of posts (code, error messages) and their intentions. Furthermore, inspired by our manual study, we design a pre-trained transformer-based model to automatically predict post intentions. The best variant of our intention prediction framework, which achieves a Micro F1-score of 0.589, Top 1-3 accuracy of 62.6% to 87.8%, and an average AUC of 0.787, outperforms the state-of-the-art baseline approach. Our characterization and automated classification of forum posts regarding their intentions may help forum maintainers or third-party tool developers improve the organization and retrieval of posts on technical forums.
C1 [Wu, Xingfang; Li, Heng; Khomh, Foutse] Polytech Montreal, Dept Comp Engn & Software Engn, Montreal, PQ, Canada.
   [Laufer, Eric; Luo, Jayden] Peritus Ai Canada Inc, Montreal, PQ, Canada.
   [Srinivasan, Santhosh] Peritus Ai Inc, Palo Alto, CA 94301 USA.
C3 Universite de Montreal; Polytechnique Montreal
RP Wu, XF (corresponding author), Polytech Montreal, Dept Comp Engn & Software Engn, Montreal, PQ, Canada.
EM xingfang.wu@polymtl.ca; eric@peritus.ai; heng.li@polymtl.ca;
   foutse.khomh@polymtl.ca; sms@peritus.ai; jayden@peritus.ai
OI Li, Heng/0000-0001-5441-6763
FU Mitacs; Mitacs-Accelerate program; Natural Sciences and Engineering
   Research Council of Canada(NSERC)
FX We would like to gratefully acknowledge the Mitacs-Accelerate program
   and the Natural Sciences and Engineering Research Council of
   Canada(NSERC) for funding this project.
CR Al-Kofahi JM, 2010, PROC IEEE INT CONF S
   Allamanis M, 2013, IEEE WORK CONF MIN S, P53, DOI 10.1109/MSR.2013.6624004
   Barua A, 2014, EMPIR SOFTW ENG, V19, P619, DOI 10.1007/s10664-012-9231-y
   Beyer S., 2017, Analyzing the relationships between android api classes and their references on stack overflow
   Beyer S, 2020, EMPIR SOFTW ENG, V25, P2258, DOI 10.1007/s10664-019-09758-x
   Beyer S, 2014, PROC IEEE INT CONF S, P531, DOI 10.1109/ICSME.2014.88
   Boslaugh S., 2012, Statistics in a Nutshell: A Desktop Quick Reference
   Carion Nicolas, 2020, Computer Vision - ECCV 2020. 16th European Conference. Proceedings. Lecture Notes in Computer Science (LNCS 12346), P213, DOI 10.1007/978-3-030-58452-8_13
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chen H, 2019, J SYST SOFTWARE, V156, P283, DOI 10.1016/j.jss.2019.07.033
   Devlin J, 2019, Arxiv, DOI arXiv:1810.04805
   Dosovitskiy A, 2021, Arxiv, DOI arXiv:2010.11929
   Feng ZY, 2020, Arxiv, DOI [arXiv:2002.08155, 10.48550/arXiv.2002.08155]
   Greco C, 2018, PROC IEEE ACM INT C, P5, DOI 10.1145/3183440.3183477
   Guo Jinwen, 2008, P 17 ACM C INFORM KN, P921, DOI DOI 10.1145/1458082.1458204
   Hand DJ, 2001, MACH LEARN, V45, P171, DOI 10.1023/A:1010920819831
   He J., 2022, PREPRINT, DOI [10.48550/arXiv.2203.10965, DOI 10.48550/ARXIV.2203.10965]
   Hong B, 2017, P INT C RES AD CONV, P56
   Huang CR, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2017), P317, DOI 10.1109/ICWS.2017.122
   Huang J., 2021, arXiv
   Huang Q, 2020, IEEE T SOFTWARE ENG, V46, P1098, DOI 10.1109/TSE.2018.2876340
   Jin D, 2020, AAAI CONF ARTIF INTE, V34, P8018
   Khandkar S. H., 2009, OPEN CODING, V23
   Krippendorff K., 2011, COMPUTING KRIPPENDOR, V1, P1
   Lan ZZ, 2020, Arxiv, DOI [arXiv:1909.11942, DOI 10.48550/ARXIV.1909.11942]
   Li C, 2020, J SYST SOFTWARE, V170, DOI 10.1016/j.jss.2020.110783
   Liu J, 2018, AUTOMAT SOFTW ENG, V25, P675, DOI 10.1007/s10515-018-0239-4
   Liu YH, 2019, Arxiv, DOI [arXiv:1907.11692, DOI 10.48550/ARXIV.1907.11692]
   Lu JW, 2022, INT J SOFTW ENG KNOW, V32, P1689, DOI 10.1142/S0218194022500796
   Maity Suman Kalyan, 2019, Advances in Information Retrieval. 41st European Conference on IR Research, ECIR 2019. Proceedings: Lecture Notes in Computer Science (LNCS 11438), P125, DOI 10.1007/978-3-030-15719-7_16
   Mashhadi E, 2021, IEEE WORK CONF MIN S, P505, DOI 10.1109/MSR52588.2021.00063
   Pennington J., 2014, GLOVE GLOBAL VECTORS, DOI DOI 10.3115/V1/D14-1162
   Qiao YF, 2019, Arxiv, DOI arXiv:1904.07531
   Reimers N, 2019, Arxiv, DOI [arXiv:1908.10084, DOI 10.48550/ARXIV.1908.10084]
   Rosen C, 2016, EMPIR SOFTW ENG, V21, P1192, DOI 10.1007/s10664-015-9379-3
   Sahare M, 2012, Int J Adv Comput Res, V2, P160
   Sanh V, 2020, Arxiv, DOI [arXiv:1910.01108, 10.48550/arXiv.1910.01108]
   StackOverflow, 2022, Best practices for tag lifecycle management: Applying tags
   Stol KJ, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3241743
   Tabassum J, 2020, P 58 ANN M ASS COMP
   Treude C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P804, DOI 10.1145/1985793.1985907
   Vonder Mosel J, 2022, IEEE Trans Softw Eng
   Wang SW, 2018, EMPIR SOFTW ENG, V23, P800, DOI 10.1007/s10664-017-9533-1
   Wang XY, 2015, J COMPUT SCI TECH-CH, V30, P1017, DOI 10.1007/s11390-015-1578-2
   Wolf T, 2020, Arxiv, DOI arXiv:1910.03771
   Yang CR, 2022, EUR CON SFTWR MTNCE, P385, DOI 10.1109/SANER53432.2022.00054
   Yazdaninia M, 2021, INT C PROGRAM COMPRE, P59, DOI 10.1109/ICPC52881.2021.00015
   Zhou PY, 2019, INFORM SOFTWARE TECH, V109, P1, DOI 10.1016/j.infsof.2019.01.002
   Zhou PY, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P272, DOI 10.1109/SANER.2017.7884628
NR 49
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2024
VL 29
IS 4
AR 84
DI 10.1007/s10664-024-10487-z
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TT8P3
UT WOS:001243603500003
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Ardalani, A
   Parsa, S
   Zakeri-Nasrabadi, M
   Chatzigeorgiou, A
AF Ardalani, Alireza
   Parsa, Saeed
   Zakeri-Nasrabadi, Morteza
   Chatzigeorgiou, Alexander
TI Supporting single responsibility through automated extract method
   refactoring
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Extract method refactoring; Single responsibility; Program slicing; Long
   method; Output instructions
ID PROGRAM DEPENDENCE GRAPH; OPPORTUNITIES; IDENTIFICATION
AB The responsibility of a method/function is to perform some desired computations and disseminate the results to its caller through various deliverables, including object fields and variables in output instructions. Based on this definition of responsibility, this paper offers a new algorithm to refactor long methods to those with a single responsibility. We propose a backward slicing algorithm to decompose a long method into slightly overlapping slices. The slices are computed for each output instruction, representing the outcome of a responsibility delegated to the method. The slices will be non-overlapping if the slicing criteria address the same output variable. The slices are further extracted as independent methods, invoked by the original method, if certain behavioral preservation are made. The proposed method has been evaluated on the GEMS extract method refactoring benchmark and three real-world projects. On average, our experiments demonstrate at least a 29.6% improvement in precision and a 12.1% improvement in the recall of uncovering refactoring opportunities compared to the state-of-the-art approaches. Furthermore, our tool improves method-level cohesion metrics by an average of 20% after refactoring. Experimental results confirm the applicability of the proposed approach in extracting methods with a single responsibility.
C1 [Ardalani, Alireza; Parsa, Saeed; Zakeri-Nasrabadi, Morteza] Iran Univ Sci & Technol, Sch Comp Engn, Hengam St, Tehran 1684613114, Iran.
   [Chatzigeorgiou, Alexander] Univ Macedonia, Dept Appl Informat, 156 Egnatia Str, Thessaloniki 54636, Greece.
C3 Iran University Science & Technology; University of Macedonia
RP Parsa, S (corresponding author), Iran Univ Sci & Technol, Sch Comp Engn, Hengam St, Tehran 1684613114, Iran.
EM alireza_ardalani@comp.iust; parsa@iust.ac.ir;
   morteza_zakeri@comp.iust.ac.ir; achat@uom.gr
RI parsa, saeed/S-9536-2018; Chatzigeorgiou, Alexandros/AAL-6077-2021;
   Zakeri, Morteza/Y-6393-2018
OI parsa, saeed/0000-0003-4381-2773; Zakeri, Morteza/0000-0003-4289-0606
CR Al Dallal J, 2011, IEEE T SOFTWARE ENG, V37, P788, DOI 10.1109/TSE.2010.97
   Allen Frances E., 1970, ACM Sigplan Notices, V5, P1, DOI DOI 10.1145/800028.808479
   Ampatzoglou A, 2019, PROCEEDINGS OF EASE 2019 - EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING, P346, DOI 10.1145/3319008.3320125
   Brdar Ilija, 2022, 2022 IEEE 20th Jubilee International Symposium on Intelligent Systems and Informatics (SISY), P403, DOI 10.1109/SISY56759.2022.10036248
   Charalampidou S, 2017, IEEE T SOFTWARE ENG, V43, P954, DOI 10.1109/TSE.2016.2645572
   Cheng BHC, 2009, LECT NOTES COMPUT SC, V5795, P468, DOI 10.1007/978-3-642-04425-0_36
   Cohen J., 1988, Statistical power analysis for the behavioral sciences
   De Lucia A, 2001, FIRST IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P142, DOI 10.1109/SCAM.2001.972675
   Fayad ME, 2003, PROCEEDINGS OF THE 2003 IEEE INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION, P584, DOI 10.1109/IRI.2003.1251469
   Fernandes S, 2022, COMPANION PROCEEDINGS OF THE 6TH INTERNATIONAL CONFERENCE ON THE ART, SCIENCE, AND ENGINEERING OF PROGRAMMING, PROGRAMMING 2022, P30, DOI 10.1145/3532512.3535222
   FERRANTE J, 1987, ACM T PROGR LANG SYS, V9, P319, DOI 10.1145/24039.24041
   Fontana FA, 2016, EMPIR SOFTW ENG, V21, P1143, DOI 10.1007/s10664-015-9378-4
   Fontana FA, 2017, KNOWL-BASED SYST, V128, P43, DOI 10.1016/j.knosys.2017.04.014
   Fontana FA, 2015, 2015 IEEE 7TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD) PROCEEDINGS, P16, DOI 10.1109/MTD.2015.7332620
   Fortunato S, 2010, PHYS REP, V486, P75, DOI 10.1016/j.physrep.2009.11.002
   Fowler M., 1999, Refactoring: Improving the Design of Existing Programs
   Fundation A, 2011, Apache xerces-j 2
   Gilbert D, 2017, Jfree chart
   Green P, 2009, An introduction to slice-based cohesion and coupling metrics
   Hadj-Kacem M, 2018, PROCEEDINGS OF THE 13TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL APPROACHES TO SOFTWARE ENGINEERING, P137, DOI 10.5220/0006709801370146
   Han J, 2012, MOR KAUF D, P1
   Hora A, 2020, EMPIR SOFTW ENG, V25, P1798, DOI 10.1007/s10664-020-09809-8
   Hotta K, 2012, EUR CON SFTWR MTNCE, P53, DOI 10.1109/CSMR.2012.16
   Hubert J., 2019, Implementation of an automatic extract method refactoring
   Komondoor R., 2000, Conference Record of POPL'00: 27th ACM SIGPLAN-SIGACT. Symposium on Principles of Programming Languages. Papers Presented at the Symposium, P155, DOI 10.1145/325694.325713
   Lacerda G, 2020, J SYST SOFTWARE, V167, DOI 10.1016/j.jss.2020.110610
   Lanza M., 2007, Object-oriented metrics in practice: using software metrics to characterize, evaluate, and improve the design of object-oriented systems
   Lopes M, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10144-3
   Martin R.C., 2009, Clean Code: A Handbook of Agile Software Craftmanship
   Martin RC, 2003, AGILE SOFTWARE DEV P
   Maruyama K., 2001, Software Engineering Notes, V26, P31, DOI 10.1145/379377.375233
   Meananeatra P, 2018, IEICE T INF SYST, VE101D, P1766, DOI 10.1587/transinf.2017KBP0026
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Mkaouer MW, 2016, EMPIR SOFTW ENG, V21, P2503, DOI 10.1007/s10664-015-9414-4
   Mongiovi M, 2018, IEEE T SOFTWARE ENG, V44, P429, DOI 10.1109/TSE.2017.2693982
   Cardona PAN, 2015, CUAD ACT, P154
   Orailoglu A., 1986, 23rd ACM/IEEE Design Automation Conference. Proceedings 1986 (Cat. No.86CH2288-9), P503, DOI 10.1145/318013.318093
   Ott L. M., 1993, Proceedings First International Software Metrics Symposium (Cat. No.93TH0518-1), P71, DOI 10.1109/METRIC.1993.263799
   OTTENSTEIN KJ, 1984, SIGPLAN NOTICES, V19, P177, DOI 10.1145/390011.808263
   Palomba F, 2016, 2016 IEEE 24TH INTERNATIONAL CONFERENCE ON PROGRAM COMPREHENSION (ICPC)
   Pecorelli F, 2020, J SYST SOFTWARE, V169, DOI 10.1016/j.jss.2020.110693
   Robert M., 2017, Clean architecture: a craftsman's guide to software structure and design
   Alcocer JPS, 2020, SCI COMPUT PROGRAM, V195, DOI 10.1016/j.scico.2020.102475
   Shahidi M, 2022, J SYST SOFTWARE, V187, DOI 10.1016/j.jss.2022.111221
   Silva D, 2014, 22 INT C PROGRAM COM, P146
   Tiwari O, 2022, 15 INN SOFTW ENG C, P1
   Tsantalis N, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P4, DOI 10.1109/SANER.2018.8330192
   Tsantalis N, 2011, J SYST SOFTWARE, V84, P1757, DOI 10.1016/j.jss.2011.05.016
   Wakaito, 2011, Weka 3: machine learning software in java
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
   Xu SH, 2017, PROC INT SYMP SOFTW, P24, DOI 10.1109/ISSRE.2017.35
NR 51
TC 0
Z9 0
U1 2
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2024
VL 29
IS 1
AR 28
DI 10.1007/s10664-023-10427-3
PG 61
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CT2S9
UT WOS:001127432100001
DA 2024-08-05
ER

PT J
AU Marcilio, D
   Furia, CA
AF Marcilio, Diego
   Furia, Carlo A.
TI Lightweight precise automatic extraction of exception preconditions in
   java methods
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Java; Java exceptions; Preconditions
ID INFERENCE; SUPPORT
AB When a method throws an exception- its exception precondition-is a crucial element of the method's documentation that clients should know to properly use it. Unfortunately, exceptional behavior is often poorly documented, and sensitive to changes in a project's implementation details that can be onerous to keep synchronized with the documentation. We present wit, an automated technique that extracts the exception preconditions of Java methods and constructors. wit uses static analysis to analyze the paths in a method's implementation that lead to throwing an exception. wit's analysis is precise, in that it only reports exception preconditions that are correct and correspond to feasible exceptional behavior. It is also lightweight: it only needs the source code of the class (or classes) to be analyzed- without building or running the whole project. To this end, its design uses heuristics that give up some completeness (wit cannot infer all exception preconditions) in exchange for precision and ease of applicability. We ran wit on the JDK and 46 Java projects, where it discovered 30 487 exception preconditions in 24 461 methods, taking less than two seconds per analyzed public method on average. A manual analysis of a significant sample of these exception preconditions confirmed that wit is 100% precise, and demonstrated that it can document the exceptional behavior of Java methods.
C1 [Marcilio, Diego; Furia, Carlo A.] USI Univ Svizzera Italiana, Software Inst, Lugano, Switzerland.
C3 Universita della Svizzera Italiana
RP Marcilio, D (corresponding author), USI Univ Svizzera Italiana, Software Inst, Lugano, Switzerland.
EM dvmarcilio@gmail.com
FU Swiss National Science Foundation [200021-182060]; SNF; Swiss National
   Science Foundation (SNF) [200021_182060] Funding Source: Swiss National
   Science Foundation (SNF)
FX Work partially supported by SNF grant 200021-182060 (Hi-Fi).
CR [Anonymous], 2007, P 2007 INT S SOFTWAR
   Astorga A, 2018, I C DEPEND SYS NETWO, P678, DOI 10.1109/DSN.2018.00074
   Barrett C, 2009, FRONT ARTIF INTEL AP, V185, P825, DOI 10.3233/978-1-58603-929-5-825
   Blasi A, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P242, DOI 10.1145/3213846.3213872
   Buse R.P., 2008, Proceedings of the 2008 International Symposium on Software Testing and Analysis, ISSTA '08, P273, DOI DOI 10.1145/1390630.1390664
   Chandra S, 2009, PLDI'09 PROCEEDINGS OF THE 2009 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P363, DOI 10.1145/1542476.1542517
   Claessen K, 2000, ACM SIGPLAN NOTICES, V35, P268, DOI 10.1145/357766.351266
   Cousot P., 1978, Proceedings of the 5th ACM SIGACT-SIGPLAN symposium on Principles of programming languages, P84, DOI [DOI 10.1145/512760.512770, 10.1145/512760.512770]
   Cousot P., 1977, Conference Record of the Fourth Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P238, DOI [10.1145/512950.512973, DOI 10.1145/512950.512973]
   Cousot P, 2013, LECT NOTES COMPUT SC, V7737, P128
   Csallner C., 2006, 28th International Conference on Software Engineering Proceedings, P861, DOI 10.1145/1134285.1134435
   Csallner C, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P281, DOI 10.1145/1368088.1368127
   Daniel WW, 1999, BIOSTATISTICS FDN AN, DOI DOI 10.2307/2531929
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Ernst MD, 2001, IEEE T SOFTWARE ENG, V27, P99, DOI 10.1109/32.908957
   Forward A., 2002, Proceedings of the Symposium on Document Engineering, DocEng '02, DOI [10.1145/585058.585065, DOI 10.1145/585058.585065]
   Fraser G, 2015, EMPIR SOFTW ENG, V20, P611, DOI 10.1007/s10664-013-9288-2
   Goffi A, 2016, P 25 INT S SOFTW TES, DOI [DOI 10.1145/2931037.2931061, 10.1145/2931037.2931061]
   Hassan F, 2017, INT SYMP EMP SOFTWAR, P38, DOI 10.1109/ESEM.2017.11
   Nguyen HA, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P166, DOI 10.1145/2635868.2635924
   Hu X, 2018, INT C PROGRAM COMPRE, P200, DOI 10.1145/3196321.3196334
   Phan H, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS TRACK (ICSE-NIER), P27, DOI 10.1109/ICSE-NIER.2017.9
   Kechagia M, 2021, IEEE T SOFTWARE ENG, V48, P2658, DOI 10.1109/TSE.2021.3067156
   Kechagia M, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P192, DOI 10.1145/3293882.3330552
   Kuzmina N, 2008, WODA, P57
   Le Goues C, 2009, LECT NOTES COMPUT SC, V5505, P292, DOI 10.1007/978-3-642-00768-2_26
   LISKOV BH, 1994, ACM T PROGR LANG SYS, V16, P1811, DOI 10.1145/197320.197383
   Logozzo F, 2004, LECT NOTES COMPUT SC, V2937, P211
   Marcilio D, 2022, PROC IEEE INT CONF S, P340, DOI 10.1109/ICSME55016.2022.00038
   Marcilio D, 2021, IEEE WORK CONF MIN S, P207, DOI 10.1109/MSR52588.2021.00033
   Meurer A, 2017, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.103
   Meyer B., 1997, Object-Oriented Software Construction, V2
   Nassif M, 2022, IEEE T SOFTWARE ENG, V48, P3268, DOI 10.1109/TSE.2021.3087087
   Pandita R, 2012, PROC INT CONF SOFTW, P815, DOI 10.1109/ICSE.2012.6227137
   Ramanathan MK, 2007, PROC INT CONF SOFTW, P240
   Ramanathan MK, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P123, DOI 10.1145/1250734.1250749
   Robillard MP, 2013, IEEE T SOFTWARE ENG, V39, P613, DOI 10.1109/TSE.2012.63
   Robillard MP, 2003, ACM T SOFTW ENG METH, V12, P191, DOI 10.1145/941566.941569
   Seghir Mohamed Nassim, 2014, Programming Languages and Systems. 12th Asian Symposium (APLAS 2014), Proceedings: LNCS 8858, P236, DOI 10.1007/978-3-319-12736-1_13
   Shin Hwei Tan, 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P260, DOI 10.1109/ICST.2012.106
   Nguyen T, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2556782
   Thummalapenta S, 2009, IEEE INT CONF AUTOM, P283, DOI 10.1109/ASE.2009.72
   Tillmann N, 2006, LECT NOTES COMPUT SC, V4260, P717
   Tschannen Julian, 2014, Verified Software: Theories, Tools, Experiments. 5th International Conference, VSTTE 2013. Revised Selected Papers: LNCS 8164, P149, DOI 10.1007/978-3-642-54108-7_8
   Wang C, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P97, DOI 10.1145/3338906.3338963
   Wasylkowski A, 2009, IEEE INT CONF AUTOM, P295, DOI 10.1109/ASE.2009.30
   Wei Y, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P191, DOI 10.1145/1985793.1985820
   Weimer W, 2004, ACM SIGPLAN NOTICES, V39, P419, DOI 10.1145/1035292.1029011
   Wen M, 2019, PROC INT CONF SOFTW, P866, DOI 10.1109/ICSE.2019.00093
   Zcng HS, 2021, ASIA PAC SOFWR ENG, P161, DOI 10.1109/APSEC53868.2021.00024
   Zhang C, 2012, PROC INT CONF SOFTW, P826, DOI 10.1109/ICSE.2012.6227136
   Zhong H, 2020, PROC INT CONF SOFTW, P899, DOI 10.1145/3377811.3380922
   Zhong H, 2013, ACM SIGPLAN NOTICES, V48, P803, DOI [10.1145/2544173.2509523, 10.1145/2509136.2509523]
   Zhou Y, 2020, IEEE T SOFTWARE ENG, V46, P1004, DOI 10.1109/TSE.2018.2872971
NR 54
TC 0
Z9 0
U1 6
U2 9
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2024
VL 29
IS 1
AR 30
DI 10.1007/s10664-023-10392-x
PG 41
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DO4H2
UT WOS:001132974000001
PM 38152350
OA hybrid
DA 2024-08-05
ER

PT J
AU Ros, R
   Bjarnason, E
   Runeson, P
AF Ros, Rasmus
   Bjarnason, Elizabeth
   Runeson, Per
TI A theory of factors affecting continuous experimentation (FACE)
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Continuous experimentation; Data-driven development; A/B testing; Theory
   building; Multi-case study; Empirical research
ID BUSINESS MODEL; SOFTWARE; INNOVATION; PRODUCT
AB ContextContinuous experimentation (CE) is used by many companies with internet-facing products to improve their business models and software solutions based on user data. Some companies deliberately adopt a systematic experiment-driven approach to software development while some companies use CE in a more ad-hoc fashion.ObjectiveThe goal of this study is to identify factors for success in CE that explain the variations in the utility and efficacy of CE between different companies.MethodWe conducted a multi-case study of 12 companies involved with CE and performed 27 interviews with practitioners at these companies. Based on that empirical data, we then built a theory of factors at play in CE.ResultsWe introduce a theory of Factors Affecting Continuous Experimentation (FACE). The theory includes three factors, namely 1) processes and infrastructure for CE, 2) the user problem complexity of the product offering, and 3) incentive structures for CE. The theory explains how these factors affect the effectiveness of CE and its ability to achieve problem-solution and product-market fit.ConclusionsOur theory may inspire practitioners to assess an organisation's potential for adopting CE and to identify factors that pose challenges in gaining value from CE practices. Our results also provide a basis for defining practitioner guidelines and a starting point for further research on how contextual factors affect CE and how these may be mitigated.
C1 [Ros, Rasmus; Bjarnason, Elizabeth; Runeson, Per] Lund Univ, Lund, Sweden.
C3 Lund University
RP Bjarnason, E (corresponding author), Lund Univ, Lund, Sweden.
EM rasmus.ros@cs.lth.se; elizabeth.bjarnason@cs.lth.se;
   per.runeson@cs.lth.se
OI Bjarnason, Elizabeth/0000-0001-9070-0008; Runeson,
   Per/0000-0003-2795-4851
FU Lund University
FX Open access funding provided by Lund University.
CR Andreessen M, 2007, Part 4: The only thing that matters
   [Anonymous], 2007, Strategy Leadership, DOI DOI 10.1108/10878570710833714
   [Anonymous], 2008, Building Theories in Software Engineering, DOI DOI 10.1007/978-1-84800-044-512
   Auer F, 2021, INFORM SOFTWARE TECH, V134, DOI 10.1016/j.infsof.2021.106551
   Auer F, 2018, EUROMICRO CONF PROC, P335, DOI 10.1109/SEAA.2018.00062
   Bartlett B, 2020, What is product led growth? how to build a software company in the end user era
   Bjarnason E, 2021, 29TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW 2021), P206, DOI 10.1109/REW53955.2021.00038
   Bosch Jan, 2012, Leveraging Applications of Formal Methods, Verification and Validation. Technologies for Mastering Change. Technologies for Mastering Change. Proceedings of the 5th International Symposium, ISoLA 2012, P19, DOI 10.1007/978-3-642-34026-0_3
   Bosch J., 2013, LEAN ENTERPRISE SOFT, V167, P1, DOI DOI 10.1007/978-3-642-44930-7_1
   Bosch J., 2018, SIBW, P177
   Bosch J, 2012, LECT NOTES BUS INF P, V114, P27
   Brodén B, 2020, ACM T INTERACT INTEL, V10, DOI 10.1145/3237187
   Brooks J.F. P., 1986, PROC IFIP 10 WORLD C, P1069
   Brunswicker S., 2013, The Experimental Nature of New Venture Creation Capitalizing on Open Innovation 2.0, P139, DOI [DOI 10.1007/978-3-319-00179-1_13, 10.1007/978-3-319-00179-1_13]
   Chesbrough H, 2002, IND CORP CHANGE, V11, P529, DOI 10.1093/icc/11.3.529
   Clarke P, 2012, INFORM SOFTWARE TECH, V54, P433, DOI 10.1016/j.infsof.2011.12.003
   Ebert C, 2014, J SYST SOFTWARE, V95, P10, DOI 10.1016/j.jss.2013.12.042
   Fagerholm F, 2017, J SYST SOFTWARE, V123, P292, DOI 10.1016/j.jss.2016.03.034
   Fagerholm Fabian, 2014, P 1 INT WORKSH RAP C, P26, DOI DOI 10.1145/2593812.2593816
   Feitelson DG, 2013, IEEE INTERNET COMPUT, V17, P8, DOI 10.1109/MIC.2013.25
   Fitzgerald B, 2017, J SYST SOFTWARE, V123, P176, DOI 10.1016/j.jss.2015.06.063
   Chaparro XAF, 2021, INT J ENTREP BEHAV R, V27, P884, DOI 10.1108/IJEBR-12-2019-0699
   Giaimo F, 2016, PROCEEDINGS OF THE XP2016 SCIENTIFIC WORKSHOPS, DOI 10.1145/2962695.2962709
   Glaser B. G., 1967, The Discovery of Grounded Theory: Strategies for Qualitative Research
   Gupta S, 2018, 2018 IEEE 15TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P1, DOI 10.1109/ICSA.2018.00009
   Gutbrod M, 2017, LECT NOTES COMPUT SC, V10611, P297, DOI 10.1007/978-3-319-69926-4_21
   Holson LM, 2009, New York Times, V1
   Johnson G., 2008, Exploring Corporate Strategy
   Kemell KK, 2019, PROCEEDINGS OF THE 2ND ACM SIGSOFT INTERNATIONAL WORKSHOP ON SOFTWARE-INTENSIVE BUSINESS: START-UPS, PLATFORMS, AND ECOSYSTEMS (IWSIB '19), P25, DOI 10.1145/3340481.3342734
   Kevic K, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P123, DOI 10.1109/ICSE-SEIP.2017.19
   Kirtley J, 2023, STRATEGIC MANAGE J, V44, P197, DOI 10.1002/smj.3131
   Kohavi R, 2009, Data Mining Case Studies
   Kohavi R, 2013, 19TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'13), P1168
   Kohavi R, 2009, DATA MIN KNOWL DISC, V18, P140, DOI 10.1007/s10618-008-0114-1
   KRAFCIK JF, 1988, SLOAN MANAGE REV, V30, P41
   Mattos DI, 2018, LECT NOTES BUS INF P, V314, P277, DOI 10.1007/978-3-319-91602-6_20
   Maurya Ash., 2012, RUNNING LEAN ITERATE
   McClure D., 2007, Startup Metrics for Pirates
   Melegati J, 2022, IEEE T SOFTWARE ENG, V48, P1929, DOI 10.1109/TSE.2020.3042610
   Melegati J, 2019, 2019 IEEE/ACM JOINT 4TH INTERNATIONAL WORKSHOP ON RAPID CONTINUOUS SOFTWARE ENGINEERING AND 1ST INTERNATIONAL WORKSHOP ON DATA-DRIVEN DECISIONS, EXPERIMENTATION AND EVOLUTION (RCOSE-DDREE 2019), P16, DOI 10.1109/RCoSE/DDrEE.2019.00011
   Munir H, 2018, INFORM SOFTWARE TECH, V97, P26, DOI 10.1016/j.infsof.2017.12.008
   Niculescu MF, 2014, INFORM SYST RES, V25, P173, DOI 10.1287/isre.2013.0508
   Olsen Dan., 2015, The lean product playbook: How to innovate with minimum viable products and rapid customer feedback
   Olsson H.H., 2014, Continuous Software Engineering, V9783319112, P1
   Olsson HH, 2019, LECT NOTES COMPUT SC, V11915, P515, DOI 10.1007/978-3-030-35333-9_36
   Osterwalder A., 2010, Business model generation: a handbook for visionaries, game changers, and challengers
   Osterwalder A., 2004, The business model ontology a proposition in a design science approach
   Paulsson A, 2022, LECT NOTES COMPUT SC, V13709, P449, DOI 10.1007/978-3-031-21388-5_31
   Petersen K, 2009, INT SYMP EMP SOFTWAR, P402
   Pohl K., 2005, Software product line engineering: foundations, principles and techniques, DOI [DOI 10.1007/3-540-28901-1, 10.1007/3-540-28901-1]
   Rajala R, 2003, P 11 EUR C INF SYST, P1614
   Ries E., 2011, LEAN STARTUP TODAYS
   Rissanen O, 2015, 2015 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON RAPID CONTINUOUS SOFTWARE ENGINEERING (RCOSE), P12, DOI 10.1109/RCoSE.2015.10
   Rodríguez P, 2022, IEEE T SOFTWARE ENG, V48, P466, DOI 10.1109/TSE.2020.2989666
   Ros R, 2020, P 11 INT C SOFTW BUS, P143, DOI [10.1007/978-3-030-67292-8_11, DOI 10.1007/978-3-030-67292-8_11]
   Ros R, 2020, EMPIR SOFTW ENG, V25, P3841, DOI 10.1007/s10664-020-09856-1
   Ros R, 2018, EUROMICRO CONF PROC, P353, DOI 10.1109/SEAA.2018.00064
   Ros R, 2018, PROCEEDINGS 2018 IEEE/ACM 4TH INTERNATIONAL WORKSHOP ON RAPID CONTINUOUS SOFTWARE ENGINEERING (RCOSE), P35, DOI 10.1145/3194760.3194766
   Runeson P., 2012, Case Study Research in Software Engineering: Guidelines and Examples
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sauro J, 2012, QUANTIFYING THE USER EXPERIENCE: PRACTICAL STATISTICS FOR USER RESEARCH, P1
   Schermann G, 2018, PROC IEEE INT CONF S, P485, DOI 10.1109/ICSME.2018.00059
   Schermann G, 2018, INFORM SOFTWARE TECH, V99, P41, DOI 10.1016/j.infsof.2018.02.010
   Schief M., 2012, 2012 45th Hawaii International Conference on System Sciences (HICSS), P3328, DOI 10.1109/HICSS.2012.140
   Schumacher R, 2009, The Handbook of Global User Research
   Sorescu A, 2017, J PROD INNOVAT MANAG, V34, P691, DOI 10.1111/jpim.12398
   Stol KJ, 2016, PROC INT CONF SOFTW, P120, DOI 10.1145/2884781.2884833
   Stol KJ, 2015, SCI COMPUT PROGRAM, V101, P79, DOI 10.1016/j.scico.2014.11.010
   Tang Diane, 2010, P 16 ACM SIGKDD INT, P17, DOI DOI 10.1145/1835804.1835810
   Troisi O, 2020, IND MARKET MANAG, V90, P538, DOI 10.1016/j.indmarman.2019.08.005
   Vanhala E., 2013, IADIS Intern J on WWW/Intern, V11, P89
   Vargas Bruna Prauchner, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P330, DOI 10.1145/3383219.3383257
   Wieringa R, 2015, SCI COMPUT PROGRAM, V101, P136, DOI 10.1016/j.scico.2014.11.013
   Wohlin C., 2012, Experimentation in Software Engineering, DOI [10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Wrigley Cara, 2016, Strategy & Leadership, V44, P11, DOI 10.1108/SL-06-2015-0048
   Yaman SG, 2017, J SYST SOFTWARE, V133, P195, DOI 10.1016/j.jss.2017.07.009
   Yaman SG, 2016, LECT NOTES COMPUT SC, V10027, P344, DOI 10.1007/978-3-319-49094-6_22
NR 77
TC 0
Z9 0
U1 1
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2024
VL 29
IS 1
AR 21
DI 10.1007/s10664-023-10358-z
PG 42
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CG4D2
UT WOS:001124077200003
OA hybrid
DA 2024-08-05
ER

PT J
AU Arusoaie, A
   Susan, SC
AF Arusoaie, Andrei
   Susan, Stefan-Claudiu
TI Towards Trusted Smart Contracts: A Comprehensive Test Suite For
   Vulnerability Detection
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Smart contracts; Vulnerabilities; Test suite; Solidity; Benchmark
AB The term smart contract was originally used to describe automated legal contracts. Nowadays, it refers to special programs that run on blockchain platforms and are popular in decentralized applications. In recent years, vulnerabilities in smart contracts caused significant financial losses. Researchers have proposed methods and tools for detecting them and have demonstrated their effectiveness using various test suites. In this paper, we aim to improve the current approach to measuring the effectiveness of vulnerability detectors in smart contracts. First, we identify several traits of existing test suites used to assess tool effectiveness. We explain how these traits limit the evaluation and comparison of vulnerability detection tools. Next, we propose a new test suite that prioritizes diversity over quantity, utilizing a comprehensive taxonomy to achieve this. Our organized test suite enables insightful evaluations and more precise comparisons among vulnerability detection tools. We demonstrate the benefits of our test suite by comparing several vulnerability detection tools using two sets of metrics. Results show that the tools we included in our comparison cover less than half of the vulnerabilities in the new test suite. Finally, based on our results, we answer several questions that we pose in the introduction of the paper about the effectiveness of the compared tools.
C1 [Arusoaie, Andrei; Susan, Stefan-Claudiu] UAIC, Fac Comp Sci, Gen Berthelot 16, Iasi, Romania.
RP Arusoaie, A (corresponding author), UAIC, Fac Comp Sci, Gen Berthelot 16, Iasi, Romania.
EM andrei.arusoaie@gmail.com; claudiu_susan@yahoo.com
FX DAS:The test suite that we developed is publicly available on
   GitHub:https://github.com/CDU55/Solidity-Defects-and-Bugs.A public
   spreadsheet which contains our manually classified results and the other
   results reported in this paper is available
   at:https://tinyurl.com/2p8dc5n6This spreadsheet includes the tables
   reported in Sections 5.4 and 5.5, along with corresponding graphical
   charts generated from the tables.
CR Akca S, 2019, ASIA PAC SOFWR ENG, P482, DOI 10.1109/APSEC48747.2019.00071
   Albert E, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P386, DOI 10.1145/3293882.3338999
   Ardit D, 2017, Ethereum smart contracts: Security vulnerabilities and security tools
   Arusoaie A, 2017, INT SYMP SYMB NUMERI, P161, DOI 10.1109/SYNASC.2017.00035
   Atzei N, 2017, LECT NOTES COMPUT SC, V10204, P164, DOI 10.1007/978-3-662-54455-6_8
   Breidenbach Lorenz., 2017, An In-Depth Look at the Parity Multisig Bug
   Buterin V., 2014, White Paper, V3, P2
   Chen JC, 2022, IEEE T SOFTWARE ENG, V48, P327, DOI 10.1109/TSE.2020.2989002
   Chen JY, 2022, INT J MENT HEALTH AD, V20, P3162, DOI 10.1007/s11469-021-00571-6
   Consensys, 2023, Mythril
   DASP, 2018, NCC-Group: Decentralized application security project
   Edmondson M, 2019, bigQueryR: Interface with Google BigQuery with Shiny Compatibility
   Feist J, 2019, 2019 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON EMERGING TRENDS IN SOFTWARE ENGINEERING FOR BLOCKCHAIN (WETSEB 2019), P8, DOI 10.1109/WETSEB.2019.00008
   Ferreira J, 2020, Smartbugs wild
   Ferreira J, 2023, Smartbugs curated
   Ferreira JF, 2020, IEEE INT CONF AUTOM, P1349, DOI 10.1145/3324884.3415298
   Ghaleb Asem, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P415, DOI 10.1145/3395363.3397385
   Ghaleb A, 2020, Solidifi benchmark
   Grishchenko I, 2018, LECT NOTES COMPUT SC, V10804, P243, DOI 10.1007/978-3-319-89722-6_10
   HeidelindeRameder Monika diAngelo GS, 2022, Supplementary material, DOI [10.3389/fbloc.2022.814977/full#supplementary-material, DOI 10.3389/FBLOC.2022.814977/FULL#SUPPLEMENTARY-MATERIAL]
   Hwang S, 2020, PROC INT CONF SOFTW, P542, DOI 10.1145/3377811.3380424
   Kalra S, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23082
   Kolluri A, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P363, DOI 10.1145/3293882.3330560
   Liao JW, 2019, 2019 SIXTH INTERNATIONAL CONFERENCE ON INTERNET OF THINGS: SYSTEMS, MANAGEMENT AND SECURITY (IOTSMS), P458, DOI 10.1109/iotsms48152.2019.8939256
   Liao Z, 2023, IEEE T SOFTWARE ENG, V49, P777, DOI 10.1109/TSE.2022.3163614
   Liu H, 2018, IEEE INT CONF AUTOM, P814, DOI 10.1145/3238147.3240728
   Liu Y, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P666, DOI 10.1145/3368089.3409740
   Luu L, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P254, DOI 10.1145/2976749.2978309
   Parizi RM, 2018, Arxiv, DOI arXiv:1809.02702
   Marescotti Matteo, 2020, Leveraging Applications of Formal Methods, Verification and Validation. Applications. 9th International Symposium on Leveraging Applications of Formal Methods, ISoLA 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12478), P178, DOI 10.1007/978-3-030-61467-6_12
   Mei XP, 2019, 2019 COMPANION OF THE 19TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS-C 2019), P544, DOI 10.1109/QRS-C.2019.00116
   Mense A, 2014, IIWAS2018: THE 20TH INTERNATIONAL CONFERENCE ON INFORMATION INTEGRATION AND WEB-BASED APPLICATIONS & SERVICES, P375, DOI 10.1145/3282373.3282419
   Mossberg M, 2019, Arxiv, DOI arXiv:1907.03890
   Nguyen TD, 2020, PROC INT CONF SOFTW, P778, DOI 10.1145/3377811.3380334
   Nikolic I, 2018, Arxiv, DOI arXiv:1802.06038
   Parizi RM, 2018, P 28 ANN INT C COMP, P103
   Permenev A, 2020, P IEEE S SECUR PRIV, P1661, DOI 10.1109/SP40000.2020.00024
   Pinna A, 2019, IEEE ACCESS, V7, P78194, DOI 10.1109/ACCESS.2019.2921936
   Qian P, 2022, arXiv, DOI DOI 10.48550/ARXIV.2209.05872HTTPS://DOI.ORG/10.48550/ARXIV.2209.05872
   Rameder H, 2022, FRONT BLOCKCHAIN, V5, DOI 10.3389/fbloc.2022.814977
   Remix Project Team, 2023, Remix: Integrated Development Environment for Smart contracts
   Ren M, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P566, DOI 10.1145/3460319.3464837
   Samreen NF, 2021, Arxiv, DOI [arXiv:2105.06974, DOI 10.48550/ARXIV.2105.06974]
   Schneidewind C, 2020, CCS '20: PROCEEDINGS OF THE 2020 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P621, DOI 10.1145/3372297.3417250
   Shiraishi S, 2015, 2015 IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING WORKSHOPS (ISSREW), P12, DOI 10.1109/ISSREW.2015.7392027
   Siegel D, 2016, Understanding the dao attack
   soliditylang, Solidity documentation
   Staderini M, 2020, 2020 SECOND INTERNATIONAL CONFERENCE ON BLOCKCHAIN COMPUTING AND APPLICATIONS (BCCA), P44, DOI 10.1109/BCCA50787.2020.9274458
   SunWeb3Sec, 2023, Defihacks
   SWC, 2023, Smart contract weakness classification and test cases
   Tantikul P, 2020, ICISSP: PROCEEDINGS OF THE 6TH INTERNATIONAL CONFERENCE ON INFORMATION SYSTEMS SECURITY AND PRIVACY, P317, DOI 10.5220/0008909803170324
   Tikhomirov S, 2018, 2018 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON EMERGING TRENDS IN SOFTWARE ENGINEERING FOR BLOCKCHAIN (WETSEB), P9, DOI 10.1145/3194113.3194115
   Tolmach P, 2021, ACM COMPUT SURV, V54, DOI 10.1145/3464421
   Torres CF, 2019, PROCEEDINGS OF THE 28TH USENIX SECURITY SYMPOSIUM, P1591
   Torres CF, 2018, 34TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2018), P664, DOI 10.1145/3274694.3274737
   Tsankov P, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P67, DOI 10.1145/3243734.3243780
   Wang HJ, 2022, IEEE T DEPEND SECURE, V19, P1795, DOI 10.1109/TDSC.2020.3037332
   Wang HJ, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2019), P1, DOI 10.1109/ICSE-NIER.2019.00009
   Wang S, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360615
   Xu Z, 2021, Smart-contract-benchmark-suites: A unified dataset
   Yang Z, 2020, P INT COMP SOFTW APP, P892, DOI 10.1109/COMPSAC48688.2020.0-153
   Zhang PC, 2019, Arxiv, DOI arXiv:1911.09425
   Zhang Z, 2022, Web3bugs
   Zhang Z, 2023, PROC INT CONF SOFTW, P615, DOI 10.1109/ICSE48619.2023.00061
NR 64
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2024
VL 29
IS 5
AR 117
DI 10.1007/s10664-024-10509-w
PG 44
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZO3N6
UT WOS:001276200900004
DA 2024-08-05
ER

PT J
AU Hadadi, F
   Dawes, JH
   Shin, D
   Bianculli, D
   Briand, L
AF Hadadi, Fatemeh
   Dawes, Joshua H.
   Shin, Donghwan
   Bianculli, Domenico
   Briand, Lionel
TI Systematic Evaluation of Deep Learning Models for Log-based Failure
   Prediction
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Logs; Failure prediction; Deep learning; Embedding strategy; Synthesised
   data generation; Systematic evaluation
AB With the increasing complexity and scope of software systems, their dependability is crucial. The analysis of log data recorded during system execution can enable engineers to automatically predict failures at run time. Several Machine Learning (ML) techniques, including traditional ML and Deep Learning (DL), have been proposed to automate such tasks. However, current empirical studies are limited in terms of covering all main DL types-Recurrent Neural Network (RNN), Convolutional Neural Network (CNN), and transformer-as well as examining them on a wide range of diverse datasets. In this paper, we aim to address these issues by systematically investigating the combination of log data embedding strategies and DL types for failure prediction. To that end, we propose a modular architecture to accommodate various configurations of embedding strategies and DL-based encoders. To further investigate how dataset characteristics such as dataset size and failure percentage affect model accuracy, we synthesised 360 datasets, with varying characteristics, for three distinct system behavioural models, based on a systematic and automated generation approach. Using the F1 score metric, our results show that the best overall performing configuration is a CNN-based encoder with Logkey2vec. Additionally, we provide specific dataset conditions, namely a dataset size > 350 or a failure percentage > 7.5 %, under which this configuration demonstrates high accuracy for failure prediction.
C1 [Hadadi, Fatemeh; Briand, Lionel] Univ Ottawa, Ottawa, ON, Canada.
   [Briand, Lionel] Lero SFI Ctr Software Res, Limerick, Ireland.
   [Briand, Lionel] Univ Limerick, Limerick, Ireland.
   [Dawes, Joshua H.; Bianculli, Domenico] Univ Luxembourg, SnT Ctr, Esch Sur Alzette, Luxembourg.
   [Shin, Donghwan] Univ Sheffield, Sheffield, England.
C3 University of Ottawa; University of Limerick; University of Luxembourg;
   University of Sheffield
RP Hadadi, F (corresponding author), Univ Ottawa, Ottawa, ON, Canada.
EM fhada072@uottawa.ca; joshua.dawe@uni.lu; d.shin@sheffield.ac.uk;
   domenico.bianculli@uni.lu; lbriand@uottawa.ca
FU Canada Research Chairs; Canada Research Chair and Discovery Grant
   programs of the Natural Sciences and Engineering Research Council of
   Canada (NSERC); University of Luxembourg's 1621 [13/RC/2094-2]; Science
   Foundation Ireland [957254]; European Union; Digital Alliance of Canada
FX This work was supported by the Canada Research Chair and Discovery Grant
   programs of the Natural Sciences and Engineering Research Council of
   Canada (NSERC), by a University of Luxembourg's 1621 joint research
   program grant, the Science Foundation Ireland under Grant 13/RC/2094-2,
   and by the European Union's Horizon 2020 Research and Innovation
   Programme under grant agreement No. 957254 (COSMOS). The experiments
   conducted in this work were enabled in part 1623 by Digital Alliance of
   Canada (alliancecan.ca).
CR [Anonymous], 2019, Package RP
   [Anonymous], 2005, KDD, DOI [10.1145/1081870.1081927, DOI 10.1145/1081870.1081927]
   Basin D, 2020, LECT NOTES COMPUT SC, V12166, P432, DOI 10.1007/978-3-030-51074-9_25
   Bauer E., 2012, Reliability and availability of cloud computing, DOI [10.1002/9781118393994, DOI 10.1002/9781118393994]
   Black PE, 2020, Strongly connected component. Dictionary of Algorithms and Data Structures
   Blewitt ME, 2008, NAT GENET, V40, P663, DOI 10.1038/ng.142
   Blom J, 2005, LECT NOTES COMPUT SC, V3395, P125
   Bogatinovski J, 2022, 2022 22ND IEEE/ACM INTERNATIONAL SYMPOSIUM ON CLUSTER, CLOUD AND INTERNET COMPUTING (CCGRID 2022), P346, DOI 10.1109/CCGrid54584.2022.00044
   Bombarda A, 2020, IEEE ICST WORKSHOP, P157, DOI 10.1109/ICSTW50294.2020.00036
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Lipton ZC, 2015, Arxiv, DOI arXiv:1506.00019
   Carvalho TP, 2019, COMPUT IND ENG, V137, DOI 10.1016/j.cie.2019.106024
   Chen Y., 2022, AI COMPUTING SYSTEMS
   Chen YJ, 2019, WEB CONFERENCE 2019: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2019), P2659, DOI 10.1145/3308558.3313501
   Chen ZB, 2022, Arxiv, DOI arXiv:2107.05908
   Cho KYHY, 2014, Arxiv, DOI [arXiv:1406.1078, 10.48550/arXiv.1406.1078]
   Chollet F, 2017, PROC CVPR IEEE, P1800, DOI 10.1109/CVPR.2017.195
   CORTES C, 1995, MACH LEARN, V20, P273, DOI 10.1007/BF00994018
   Cotroneo D, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P200, DOI 10.1145/3338906.3338916
   Das A, 2020, INT PARALL DISTRIB P, P1092, DOI 10.1109/IPDPS47924.2020.00115
   Das A, 2018, HPDC '18: PROCEEDINGS OF THE 27TH INTERNATIONAL SYMPOSIUM ON HIGH-PERFORMANCE PARALLEL AND DISTRIBUTED COMPUTING, P40, DOI 10.1145/3208040.3208051
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   Devlin J, 2019, Arxiv, DOI arXiv:1810.04805
   Digital Research Alliance of Canada, 2016, ABOUT US
   Ding M, 2020, Neural information processing systems
   Du M, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1285, DOI 10.1145/3133956.3134015
   Fernández-Delgado M, 2014, J MACH LEARN RES, V15, P3133
   Foundation CC, 2023, Common crawl corpus
   Gers FA, 1999, IEE CONF PUBL, P850, DOI [10.1049/cp:19991218, 10.1162/089976600300015015]
   Graves A, 2012, STUD COMPUT INTELL, V385, P1, DOI [10.1162/neco.1997.9.8.1735, 10.1007/978-3-642-24797-2, 10.1162/neco.1997.9.1.1]
   Gu JX, 2018, PATTERN RECOGN, V77, P354, DOI 10.1016/j.patcog.2017.10.013
   Guo HX, 2021, IEEE IJCNN, DOI 10.1109/IJCNN52387.2021.9534113
   Hadadi F, 2024, Replication package, DOI [10.6084/m9.figshare.22219111, DOI 10.6084/M9.FIGSHARE.22219111]
   He HB, 2009, IEEE T KNOWL DATA EN, V21, P1263, DOI 10.1109/TKDE.2008.239
   He SL, 2021, ACM COMPUT SURV, V54, DOI 10.1145/3460345
   Huang SH, 2020, IEEE T NETW SERV MAN, V17, P2064, DOI 10.1109/TNSM.2020.3034647
   Huang ZH, 2015, Arxiv, DOI arXiv:1508.01991
   Johnson JM, 2019, J BIG DATA-GER, V6, DOI 10.1186/s40537-019-0192-5
   Joulin A, 2016, Arxiv, DOI arXiv:1612.03651
   Kim Y, 2014, Arxiv, DOI [arXiv:1408.5882, DOI 10.48550/ARXIV.1408.5882]
   Kingma D. P., 2014, arXiv
   Kluge F, 2017, Leibniz Trans Embedded Syst, V4
   Krsti S., 2020, A Benchmark Generator for Online First-Order Monitoring, DOI [10.1007/978-3-030-60508-727, DOI 10.1007/978-3-030-60508-727]
   Le VH, 2022, PROC INT CONF SOFTW, P1356, DOI 10.1145/3510003.3510155
   Li XY, 2020, PROC INT SYMP SOFTW, P92, DOI 10.1109/ISSRE5003.2020.00018
   Lin QW, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P480, DOI 10.1145/3236024.3236060
   Liu XX, 2020, INTSOC CONF THERMAL, P1350, DOI 10.1109/ITherm45881.2020.9190321
   Liu Y, 2019, 2019 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING AND THE 9TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING (EMNLP-IJCNLP 2019), P3730
   Lu S., 2018, IEEE Access, V6, P21929, DOI DOI 10.1109/ACCESS.2018.2811530
   Matsumoto M., 1998, ACM Transactions on Modeling and Computer Simulation, V8, P3, DOI 10.1145/272991.272995
   Meng WB, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P4739
   Meng WB, 2020, IEEE IC COMP COM NET, DOI 10.1109/icccn49398.2020.9209707
   Mikolov T., 2013, ARXIV, DOI DOI 10.48550/ARXIV.1301.3781
   Nedelkoski S, 2020, IEEE DATA MINING, P1196, DOI 10.1109/ICDM50108.2020.00148
   Notaro P, 2021, ACM T INTEL SYST TEC, V12, DOI 10.1145/3483424
   O'Shea K, 2015, Arxiv, DOI [arXiv:1511.08458, DOI 10.48550/ARXIV.1511.08458]
   Dwivedi VP, 2022, Arxiv, DOI arXiv:2110.07875
   Prechelt L, 1998, LECT NOTES COMPUT SC, V1524, P55
   Radford A., 2019, OpenAI blog, V1, P9
   Rajaraman Anand., 2011, Lecture Notes for Stanford CS345A Web Mining, V67, P328, DOI DOI 10.1017/CBO9781139058452
   Russo B, 2015, EMPIR SOFTW ENG, V20, P879, DOI 10.1007/s10664-014-9303-2
   Sahoo R.K., 2003, P 9 ACM SIGKDD INT C, P426, DOI DOI 10.1145/956750.956799
   Salfner F, 2010, ACM COMPUT SURV, V42, DOI 10.1145/1670679.1670680
   Schuster M, 1997, IEEE T SIGNAL PROCES, V45, P2673, DOI 10.1109/78.650093
   Shin D, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10111-4
   Sun C, 2019, LECT NOTES ARTIF INT, V11856, P194, DOI 10.1007/978-3-030-32381-3_16
   Tauber A, 2018, exrex: Irregular methods for regular expressions
   Upton G., 2014, A Dictionary of Statistics
   Le VH, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P492, DOI 10.1109/ASE51524.2021.9678773
   Vaswani A, 2023, Arxiv, DOI arXiv:1706.03762
   Walkinshaw N, 2013, WORK CONF REVERSE EN, P301, DOI 10.1109/WCRE.2013.6671305
   Weijie D, 2021, 2021 IEEE 5 INF TECH, P1147, DOI DOI 10.1109/ITNEC52019.2021.9587007
   Wu XF, 2024, Arxiv, DOI arXiv:2308.08736
   Wu YH, 2016, Arxiv, DOI [arXiv:1609.08144, DOI 10.48550/ARXIV.1609.08144]
   Xie YZ, 2022, IEEE INT C S Q R S, P299, DOI 10.1109/QRS57517.2022.00039
   Xu P, 2020, ANN M ASS COMP LING
   Yang L, 2021, PROC INT CONF SOFTW, P1448, DOI 10.1109/ICSE43902.2021.00130
   Zhang SL, 2018, P ACM MEAS ANAL COMP, V2, DOI [10.1145/3292040.3219643, 10.1145/3179405]
   Zhang X, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P807, DOI 10.1145/3338906.3338931
NR 79
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2024
VL 29
IS 5
AR 105
DI 10.1007/s10664-024-10501-4
PG 53
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WA3Q4
UT WOS:001252113000002
OA hybrid
DA 2024-08-05
ER

PT J
AU Castanyer, RC
   Martínez-Fernández, S
   Franch, X
AF Castanyer, Roger Creus
   Martinez-Fernandez, Silverio
   Franch, Xavier
TI Which design decisions in AI-enabled mobile applications contribute to
   greener AI?
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE AI-enabled applications; Mobile applications; Model accuracy;
   Application performance; Greener AI; Neural networks
AB BackgroundThe usage of complex artificial intelligence (AI) models demands expensive computational resources. While currently, available high-performance computing environments can support such complexity, the deployment of AI models in mobile devices, which is an increasing trend, is challenging. Environments with low computational resources imply limitations in the design decisions during the AI-enabled software engineering lifecycle that balance the trade-off between the accuracy and the complexity of the mobile applications.ObjectiveOur objective is to systematically assess the trade-off between accuracy and complexity when deploying complex AI models (e.g. neural networks) to mobile devices in pursuit of greener AI solutions. We aim to cover (i) the impact of the design decisions on the achievement of high-accuracy and low resource-consumption implementations; and (ii) the validation of profiling tools for systematically promoting greener AI.MethodWe implement neural networks in mobile applications to solve multiple image and text classification problems on a variety of benchmark datasets. We then profile and model the accuracy, storage weight, and time of CPU usage of the AI-enabled applications in operation with respect to their design decisions. Finally, we provide an open-source data repository following the EMSE open science practices and containing all the experimentation, analysis, and reports in our study.ResultsWe find that the number of parameters in the AI models makes the time of CPU usage scale exponentially in convolutional neural networks and logarithmically in fully-connected layers. We also see the storage weight scales linearly with the number of parameters, while the accuracy does not. For this reason, we argue that a good practice for practitioners is to start small and only increase the size of the AI models when their accuracy is low. We also find that Residual Networks (ResNets) and Transformers have a higher baseline cost in time of CPU usage than simple convolutional and recurrent neural networks. Finally, we find that the dataset used for experimentation affects both the scaling properties and accuracy of the AI models, hence showing that researchers must study the presented set of design decisions in each specific problem context.ConclusionsWe have depicted an underlying and existing relationship between the design of AI models and the performance of the applications that integrate these, and we motivate further work and extensions to better characterize this complex relationship.
C1 [Castanyer, Roger Creus; Martinez-Fernandez, Silverio; Franch, Xavier] Univ Politecn Cataluna, Barcelona, Spain.
C3 Universitat Politecnica de Catalunya
RP Castanyer, RC (corresponding author), Univ Politecn Cataluna, Barcelona, Spain.
EM roger.creus@estudiantat.upc.edu; silverio.martinez@upc.edu;
   xavier.franch@upc.edu
RI Martínez-Fernández, Silverio/P-5615-2014; Franch, Xavier/KAM-2369-2024;
   Creus Castanyer, Roger Creus/ADB-5804-2022
OI Martínez-Fernández, Silverio/0000-0001-9928-133X; Franch,
   Xavier/0000-0001-9733-8830; Creus Castanyer, Roger
   Creus/0000-0003-1952-3357
FU This work has been partially supported by the GAISSA project
   (TED2021-130923B-I00, which is funded by MCIN/AEI/10.13039/501100011033
   and by the European Union "NextGenerationEU"/PRTR); and, by the "Beatriz
   Galindo" Spanish Program (BEAGAL18/00064). [TED2021-130923B-I00,
   MCIN/AEI/10.13039/501100011033]; European Union [BEAGAL18/00064]
FX This work has been partially supported by the GAISSA project
   (TED2021-130923B-I00, which is funded by MCIN/AEI/10.13039/501100011033
   and by the European Union "NextGenerationEU"/PRTR); and, by the "Beatriz
   Galindo" Spanish Program (BEAGAL18/00064).
CR [Anonymous], 1908, BIOMETRIKA, V6, P1
   Banerjee A, 2016, 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2016), P139, DOI [10.1145/2897073.2897086, 10.1109/MobileSoft.2016.038]
   Bao LF, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P37, DOI [10.1109/MSR.2016.014, 10.1145/2901739.2901748]
   Basili Victor R, 1994, Encyclopedia of Software Engineering
   Brown T., 2020, ADV NEURAL INFORM PR, V33, P1877, DOI DOI 10.48550/ARXIV.2005.14165
   Byun C, 2012, IEEE HIGH PERF EXTR
   Calero C, 2017, Ontologies for software engineering and software technology
   Castanyer Roger Creus, 2021, 2021 IEEE/ACM 1st Workshop on AI Engineering - Software Engineering for AI (WAIN), P27, DOI 10.1109/WAIN52551.2021.00010
   Chen ZP, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P750, DOI 10.1145/3368089.3409759
   Chowdhury S, 2019, EMPIR SOFTW ENG, V24, P1649, DOI 10.1007/s10664-018-9640-7
   Castanyer RC, 2021, Arxiv, DOI arXiv:2109.15284
   Cruz L, 2018, Arxiv, DOI arXiv:1803.05889
   Cruz L, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2019), P101, DOI 10.1109/ICSE-NIER.2019.00034
   Cruz L, 2019, EMPIR SOFTW ENG, V24, P2209, DOI 10.1007/s10664-019-09682-0
   Deng L., 2012, IEEE Signal Process. Mag., V29, P141
   Devlin J, 2019, Arxiv, DOI arXiv:1810.04805
   Di Nucci D, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P103, DOI 10.1109/SANER.2017.7884613
   Dowd K., 2010, High performance computing
   Ebert C, 2021, IEEE SOFTWARE, V38, P7, DOI 10.1109/MS.2021.3102254
   Fernández DM, 2019, EMPIR SOFTW ENG, V24, P1057, DOI 10.1007/s10664-019-09712-x
   Georgiou S, 2022, ACM: Association for Computing Machinery
   Go A., 2009, Twitter Sentiment Classification using Distant Supervision
   Hinton G., 2015, NEURIPS DEEP LEARN R, P9
   Krizhevsky A., 2009, LEARNING MULTIPLE LA
   Lacoste A, 2019, Arxiv, DOI [arXiv:1910.09700, DOI 10.48550/ARXIV.1910.09700]
   LAI TL, 1979, J MULTIVARIATE ANAL, V9, P343, DOI 10.1016/0047-259X(79)90093-9
   LeCun Y, 2015, NATURE, V521, P436, DOI 10.1038/nature14539
   Lwakatare LE, 2020, 2020 SoftCOM, P1, DOI [10.23919/SoftCOM50211.2020.9238323, DOI 10.23919/SOFTCOM50211.2020.9238323]
   Lwakatare LE, 2020, INFORM SOFTWARE TECH, V127, DOI 10.1016/j.infsof.2020.106368
   Maas A., 2011, Proceedings of the 49th Annual Meeting of the Association for Computational Linguistics: Human Language Technologies, P142
   Mancebo J, 2021, SOFTWARE QUAL J, V29, P101, DOI 10.1007/s11219-020-09536-9
   Mao H, 2017, PROCEEDINGS OF THE 2017 ACM MULTIMEDIA CONFERENCE (MM'17), P1183, DOI 10.1145/3123266.3123405
   Martínez-Fernández S, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3487043
   Miles J., 2014, Tolerance and variance inflation factor, DOI [DOI 10.1002/9781118445112.STAT06627, 10.1002/9781118445112.stat06593, DOI 10.1002/9781118445112.STAT06593]
   Miles M.B., 1994, An expanded sourcebook qualitative data analysis (2. Baski)
   Mumtaz F, 2018, BIOMED PHARMACOTHER, V105, P1205, DOI 10.1016/j.biopha.2018.05.086
   Ni JM, 2019, 2019 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING AND THE 9TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING (EMNLP-IJCNLP 2019), P188
   Oord A.v.d., 2016, arXiv, DOI DOI 10.48550/ARXIV.1609.03499
   Pons L, 2019, Arxiv, DOI arXiv:1911.02912
   POPE PT, 1972, TECHNOMETRICS, V14, P327, DOI 10.2307/1267425
   Quo QY, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P822, DOI 10.1109/ASE.2019.00080
   Rasley J, 2020, KDD '20: PROCEEDINGS OF THE 26TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY & DATA MINING, P3505, DOI 10.1145/3394486.3406703
   Sanh V, 2020, Arxiv, DOI [arXiv:1910.01108, 10.48550/arXiv.1910.01108]
   Schwartz R, 2019, Arxiv, DOI [arXiv:1907.10597, 10.48550/arXiv.1907.10597]
   Siebert J, 2022, SOFTWARE QUAL J, V30, P307, DOI 10.1007/s11219-021-09557-y
   Silver D, 2017, NATURE, V550, P354, DOI 10.1038/nature24270
   Stallkamp J, 2012, NEURAL NETWORKS, V32, P323, DOI 10.1016/j.neunet.2012.02.016
   Tan MX, 2019, PR MACH LEARN RES, V97
   TAPPERT CC, 1990, IEEE T PATTERN ANAL, V12, P787, DOI 10.1109/34.57669
   Verdecchia R, 2023, WIRES DATA MIN KNOWL, V13, DOI 10.1002/widm.1507
   Verdecchia R, 2022, Arxiv, DOI [arXiv:2204.02766, 10.48550/ARXIV.2204.02766]
   Zellers R, 2020, Arxiv, DOI arXiv:1905.12616
NR 52
TC 0
Z9 0
U1 10
U2 16
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2024
VL 29
IS 1
AR 2
DI 10.1007/s10664-023-10407-7
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA Y0DO7
UT WOS:001102063800001
OA Green Published
DA 2024-08-05
ER

PT J
AU Reinhartz-Berger, I
AF Reinhartz-Berger, Iris
TI Challenges in software model reuse: cross application domain vs. cross
   modeling paradigm
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software reuse; Cross domain; Cross paradigm; Modeling; Controlled
   experiment
ID PRODUCTIVITY
AB Software reuse is a common practice that aims to reduce costs and effort, while improving quality and productivity. However, it also raises challenges of retrieving existing artifacts and adapting them to the given context. Sometimes, the most relevant artifacts are realized in a different application domain and/or in a different paradigm (e.g., object-oriented vs. data-driven). These challenges are extremely relevant to non-code artifacts, such as models, which are relatively rare, as well as vary in the level of details and quality. In this paper, we aim to explore the challenges and opportunities of cross application domain and cross modeling paradigm model reuse. These types of reuse require different mapping mechanisms (analogy creation and transformation, respectively), but similar adaptation operations (use-as-is, modification, omission and addition). To explore the challenges of these reuse types, we present the design and the results of a series of controlled experiments, involving 64 participants, which analyzed correctness of software model reuse across application domains and across two modeling paradigms: object-oriented expressed in UML use case and class diagrams and data-driven expressed in entity-relationship and data flow diagrams. Our results show that overall cross-domain reuse is more correctly performed than cross-paradigm reuse, especially with respect to addition. We further analyzed the challenges in each reuse type and found that modification and addition in both reuse types are quite challenging and require careful support to meet new or differing requirements.
C1 [Reinhartz-Berger, Iris] Univ Haifa, Dept Informat Syst, IL-3498838 Hefa, Israel.
C3 University of Haifa
RP Reinhartz-Berger, I (corresponding author), Univ Haifa, Dept Informat Syst, IL-3498838 Hefa, Israel.
EM iris@is.haifa.ac.il
CR ALERYANI A., 2016, International Journal of Scientific and Research Publications, V6, P124
   [Anonymous], 2013, SOFTWARE PRODUCT LIN
   Barrón-Cedeño A, 2013, KNOWL-BASED SYST, V50, P211, DOI 10.1016/j.knosys.2013.06.018
   Barros-Justo JL, 2018, INFORM SOFTWARE TECH, V103, P1, DOI 10.1016/j.infsof.2018.06.003
   Braga RMM, 1999, ASSET'99: 1999 IEEE SYMPOSIUM ON APPLICATION-SPECIFIC SYSTEMS AND SOFTWARE ENGINEERING & TECHNOLOGY - PROCEEDINGS, P50, DOI 10.1109/ASSET.1999.756751
   Burgueño L, 2021, LECT NOTES COMPUT SC, V12751, P91, DOI 10.1007/978-3-030-79382-1_6
   Capilla R, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.2217
   Deshmukh M, 2014, 2014 IEEE AEROSPACE CONFERENCE
   Estublier J, 2006, J RES PRACT INF TECH, V38, P287
   FitzGerald J., 1987, Fundamentals of Systems Analysis - Using Structured Analysis and Design Techniques, V3rd
   Flores E, 2015, J UNIVERS COMPUT SCI, V21, P1708
   Flores E, 2011, LECT NOTES COMPUT SC, V6716, P250, DOI 10.1007/978-3-642-22327-3_31
   Fries TP, 2006, P 24 ANN ACM INT C D, P105
   Gallina B, 2014, LECT NOTES COMPUT SC, V8696, P255, DOI 10.1007/978-3-319-10557-4_28
   Gharehyazie M, 2017, IEEE WORK CONF MIN S, P291, DOI 10.1109/MSR.2017.15
   Hebig R, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P173, DOI 10.1145/2976767.2976778
   Heinemann Lars, 2011, Top Productivity through Software Reuse. Proceedings of the 12th International Conference on Software Reuse, ICSR 2011, P207, DOI 10.1007/978-3-642-21347-2_16
   Holmes R, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2377656.2377657
   Kahani N, 2019, SOFTW SYST MODEL, V18, P2361, DOI 10.1007/s10270-018-0665-6
   Kitchenham B, 2004, IEEE T SOFTWARE ENG, V30, P1023, DOI 10.1109/TSE.2004.104
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Krüger J, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P432, DOI 10.1145/3368089.3409684
   Kugele S, 2020, IEEE 17TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2020), P191, DOI 10.1109/ICSA47634.2020.00026
   MAIDEN NA, 1992, COMMUN ACM, V35, P55, DOI 10.1145/129852.129857
   Mäkitalo N, 2020, COMPUTING, V102, P2385, DOI 10.1007/s00607-020-00833-6
   Martinez-Mosquera D, 2020, SUSTAINABILITY-BASEL, V12, DOI 10.3390/su12020634
   Mazzini Silvia, 2013, Safe and Secure Software Reuse. 13th International Conference on Software Reuse, ICSR 2013. Proceedings: LNCS 7925, P113, DOI 10.1007/978-3-642-38977-1_8
   Mikkonen T, 2019, IEEE SOFTWARE, V36, P105, DOI 10.1109/MS.2018.2884883
   Mohagheghi P, 2007, EMPIR SOFTW ENG, V12, P471, DOI 10.1007/s10664-007-9040-x
   Mojica IJ, 2014, IEEE SOFTWARE, V31, P78, DOI 10.1109/MS.2013.142
   Nafi KW, 2020, J SYST SOFTWARE, V162, DOI 10.1016/j.jss.2019.110491
   Nafi KW, 2018, IEEE INT WORK C SO, P139, DOI 10.1109/SCAM.2018.00023
   Osman M. H., 2013, INT WORKSHOP EXPERIE, P23
   Ozkaya M, 2020, INFORM SOFTWARE TECH, V121, DOI 10.1016/j.infsof.2020.106275
   Paschali ME, 2017, J SYST SOFTWARE, V134, P211, DOI 10.1016/j.jss.2017.09.009
   Pfeiffer Rolf-Helge, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P168, DOI 10.1007/978-3-642-33666-9_12
   Pohl K., 2005, Software product line engineering: foundations, principles and techniques, DOI [DOI 10.1007/3-540-28901-1, 10.1007/3-540-28901-1]
   Reggio G, 2014, LECT NOTES COMPUT SC, V8767, P149, DOI 10.1007/978-3-319-11653-2_10
   Reinhartz-Berger I, 2022, IEEE T SOFTWARE ENG, V48, P773, DOI 10.1109/TSE.2020.3001512
   Riley RD, 2010, BMJ-BRIT MED J, V340, DOI 10.1136/bmj.c221
   Ruy FB, 2015, LECT NOTES COMPUT SC, V9381, P173, DOI 10.1007/978-3-319-25264-3_13
   Santos A, 2021, IEEE T SOFTWARE ENG, V47, P1742, DOI 10.1109/TSE.2019.2935720
   Scanniello G, 2018, EMPIR SOFTW ENG, V23, P2695, DOI 10.1007/s10664-017-9591-4
   Schots M, 2014, Tech Rep
   Schots M, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P694, DOI 10.1145/2591062.2591095
   Sommerville I., 2016, Software Engineering
   Sutcliffe A, 2019, Integrated Softw Reuse: Manag Tech, P51
   Svahnberg M, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P288
   Varnell-Sarjeant J, 2015, INFORM SOFTWARE TECH, V61, P71, DOI 10.1016/j.infsof.2015.01.002
   Varnell-Sarjeant J, 2014, 2014 38TH ANNUAL IEEE INTERNATIONAL COMPUTER SOFTWARE AND APPLICATIONS CONFERENCE WORKSHOPS (COMPSACW 2014), P498, DOI 10.1109/COMPSACW.2014.83
   Vislayski T, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P512, DOI 10.1109/SANER.2018.8330250
   vom Brocke J, 2007, REFERENCE MODELING B, P47, DOI DOI 10.4018/978-1-59904-054-7.CH003
   Wohlin C., 2012, Experimentation in Software Engineering, DOI [10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Xiong WJ, 2019, COMPUT SECUR, V84, P53, DOI 10.1016/j.cose.2019.03.010
   Yingxiao Xu, 2011, Top Productivity through Software Reuse. Proceedings of the 12th International Conference on Software Reuse, ICSR 2011, P69, DOI 10.1007/978-3-642-21347-2_6
   Zaimi A, 2015, P 7 BALK C INF C, P1
NR 56
TC 0
Z9 0
U1 2
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2024
VL 29
IS 1
AR 16
DI 10.1007/s10664-023-10386-9
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA Z6KO5
UT WOS:001113148200003
DA 2024-08-05
ER

PT J
AU Arabat, A
   Sayagh, M
AF Arabat, Ali
   Sayagh, Mohammed
TI An empirical study on cross-component dependent changes: A case study on
   the components of OpenStack
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Empirical Study; Modularity; Software Evolution; Software Maintenance
ID SERVICE IDENTIFICATION; CODE
AB Modern software systems are composed of several loosely coupled components. Typical examples of such systems are plugin-based systems, microservices, and modular software systems. Such types of software systems have several advantages motivating a large body of research to propose approaches for the migration from monolithic software systems to modular architecture (mainly microservices). However, a few prior works investigated how to assist practitioners post-migration. In fact, these studies reported that having independent components is difficult to achieve, leading to several evolution challenges that are still manually handled. In this paper, we conduct an empirical study on OpenStack and its 1,310 projects (aka., components) to better understand how the changes to a given component depend on changes of other components (aka., cross-component changes) so managers can better plan for their changes in a cross-component project, and researchers can design better solutions to help practitioners in such a co-evolution and the maintenance of multi-component software systems. We observe that the concept of ownership exists in the context of OpenStack, as different teams do not share the responsibility over the studied components of OpenStack. Despite that, dependencies across different components are not exceptional but exist in all releases. In fact, we observe that 52,069 OpenStack changes (almost 10% of all the changes) depend on changes in other components. Such a number of cross-component changes continuously increased over different years and releases, up to a certain release in which OpenStack decided to make a major refactoring of its project by archiving over 500 projects. We also found that a good percentage of cross-component changes (20.85%) end up being abandoned, leading to wasteful synchronization efforts between different teams. These dependent changes occur for different reasons that we qualitatively identified, among which configuration-related (34.64%) changes are the most common, while developers create cross-component changes for testing purposes then abandon such changes as the most prevalent category (38.45%). These cross-project changes lead to collaboration between different teams to synchronize their changes since 24.55% of the pairs of two cross-component changes are made by different developers, while the second change is reviewed by the developer of the first change of the pair (71.63%). Even when a developer makes both changes, that developer ends up working on a project that she/he is less familiar with. Our results shed light on how different components end up being dependent on each other in terms of their maintenance, which can help managers better plan their changes and guide researchers in proposing appropriate approaches for assisting in the maintenance of multi-component systems.
C1 [Arabat, Ali; Sayagh, Mohammed] ETS Quebec Univ, Montreal, PQ, Canada.
RP Arabat, A (corresponding author), ETS Quebec Univ, Montreal, PQ, Canada.
EM ali.arabat.1@ens.etsmtl.ca; mohammed.sayagh@etsmtl.ca
FX DAS:The location of the data and the related code used to carry out this
   study is provided in the following GitHub repository:
   https://github.com/aliarabat/OpenStack/tree/stable.
CR Abdellatif M, 2020, LECT NOTES COMPUT SC, V12571, P476, DOI 10.1007/978-3-030-65310-1_34
   Abdellatif M, 2021, J SYST SOFTWARE, V173, DOI 10.1016/j.jss.2020.110868
   Abdellatif M, 2018, LECT NOTES COMPUT SC, V11236, P634, DOI 10.1007/978-3-030-03596-9_46
   Abgaz Y, 2023, IEEE T SOFTWARE ENG, V49, P4213, DOI 10.1109/TSE.2023.3287297
   AlOmar EA, 2022, IEEE WORK CONF MIN S, P689, DOI 10.1145/3524842.3527932
   Amazon Web Services, 2016, Introduction to Microservices
   [Anonymous], 2022, OpenStack is dead? The numbers speak for themselves
   Assunçao WKG, 2023, J SYST SOFTWARE, V204, DOI 10.1016/j.jss.2023.111788
   Batoun MA, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3597208
   Bessghaier N, 2024, ACM T SOFTW ENG METH, V33, DOI 10.1145/3607186
   Bogner J, 2019, PROC IEEE INT CONF S, P546, DOI 10.1109/ICSME.2019.00089
   Candela I, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2928268
   Chia-Yu Li, 2020, 2020 International Computer Symposium (ICS), P519, DOI 10.1109/ICS51289.2020.00107
   Chowdhury MAR, 2022, IEEE T SOFTWARE ENG, V48, P2695, DOI 10.1109/TSE.2021.3068901
   Cogo FR, 2021, IEEE T SOFTWARE ENG, V47, P2457, DOI 10.1109/TSE.2019.2952130
   De Lauretis L, 2019, IEEE INT SYMP SOFTW, P93, DOI 10.1109/ISSREW.2019.00050
   Fan CY, 2017, 2017 IEEE 6TH INTERNATIONAL CONFERENCE ON AI & MOBILE SERVICES (AIMS), P109, DOI 10.1109/AIMS.2017.23
   Foundjem A, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10167-w
   Fowler SJ., 2016, PRODUCTION READY MIC
   Fritzsch J, 2019, PROC IEEE INT CONF S, P481, DOI 10.1109/ICSME.2019.00081
   Furda A, 2018, IEEE SOFTWARE, V35, P63, DOI 10.1109/MS.2017.440134612
   Gabhart K, 2008, Service Oriented Architecture Field Guide for Executives
   Kula RG, 2017, Arxiv, DOI arXiv:1709.04638
   Gouigoux JP, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE WORKSHOPS (ICSAW), P62, DOI 10.1109/ICSAW.2017.35
   Hordijk W, 2009, Journal of Signal Processing Systems
   Jezek K, 2015, INFORM SOFTWARE TECH, V65, P129, DOI 10.1016/j.infsof.2015.02.014
   Jia Tong, 2015, 2015 Second International Conference on Trustworthy Systems and their Applications (TSA). Proceedings, P16, DOI 10.1109/TSA.2015.14
   Jiang YJ, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P45, DOI 10.1109/MSR.2015.12
   Khatoonabadi S, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3530785
   Li XZ, 2024, LECT NOTES COMPUT SC, V14483, P435, DOI 10.1007/978-3-031-49266-2_30
   Mazlami G, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2017), P524, DOI 10.1109/ICWS.2017.61
   Niwa T, 2017, INT CONF NETW SER
   openinfra, Statistics about OpenStack
   Pinto G, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P112, DOI 10.1109/SANER.2016.68
   Raemaekers S, 2014, IEEE INT WORK C SO, P215, DOI 10.1109/SCAM.2014.30
   Richter D, 2018, CLOSER: PROCEEDINGS OF THE 8TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND SERVICES SCIENCE, P608, DOI 10.5220/0006791006080615
   Sampaio AR, 2017, PROC IEEE INT CONF S, P539, DOI 10.1109/ICSME.2017.63
   Sayagh M, 2017, PROC INT CONF SOFTW, P255, DOI 10.1109/ICSE.2017.31
   Sayagh M, 2015, IEEE INT WORK C SO, P31, DOI 10.1109/SCAM.2015.7335399
   Soto-Valero C, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09914-8
   Sousa BL, 2019, P BRAZ SYMP SOFTW, P23, DOI 10.1145/3357141.3357147
   Spencer D., 2009, CARD SORTING DESIGNI
   Teixeira JA, 2019, J INTERNET SERV APPL, V10, DOI 10.1186/s13174-019-0105-z
   Trabelsi I, 2023, J SOFTW-EVOL PROC, V35, DOI 10.1002/smr.2503
   Vuckovic J, 2020, MICROSERVICES: SCIENCE AND ENGINEERING, P333, DOI 10.1007/978-3-030-31646-4_13
   Wang D, 2023, IEICE T INF SYST, VE106D, P148, DOI 10.1587/transinf.2022MPP0002
   Wang QY, 2019, INFORM SOFTWARE TECH, V110, P108, DOI 10.1016/j.infsof.2019.02.007
   Yamato Y, 2015, IEICE T INF SYST, VE98D, P1377, DOI 10.1587/transinf.2015EDL8049
   Zheng W, 2019, J SYST SOFTWARE, V151, P210, DOI 10.1016/j.jss.2019.02.025
   Zhong CX, 2023, J SYST SOFTWARE, V200, DOI 10.1016/j.jss.2023.111670
NR 50
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2024
VL 29
IS 5
AR 109
DI 10.1007/s10664-024-10488-y
PG 43
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YU2I7
UT WOS:001270930500001
DA 2024-08-05
ER

PT J
AU Chen, X
   Pei, WL
   Yang, SY
   Zhou, YL
   Zhang, ZC
   Pei, JH
AF Chen, Xiang
   Pei, Wenlong
   Yang, Shaoyu
   Zhou, Yanlin
   Zhang, Zichen
   Pei, Jiahua
TI Automatic title completion for Stack Overflow posts and GitHub issues
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software engineering title generation; Title completion; Stack overflow
   title generation; Issue title generation; Pre-trained model
ID GENERATION
AB Title quality is important for different software engineering communities. For example, in Stack Overflow, posts with low-quality question titles often discourage potential answerers. In GitHub, issues with low-quality titles can make it difficult for developers to grasp the core idea of the problem. In previous studies, researchers mainly focused on generating titles from scratch by analyzing the body contents, such as the post body for Stack Overflow question title generation (SOTG) and the issue body for issue title generation (ISTG). However, the quality of the generated titles is still limited by the information available in the body contents. A more effective way is to provide accurate completion suggestions when developers compose titles. Inspired by this idea, we are the first to study the problem of automatic title completion for software engineering title generation tasks and propose the approach TC4SETG. Specifically, we first preprocess the gathered titles to form incomplete titles (i.e., tip information provided by developers) for simulating the title completion scene. Then we construct the input by concatenating the incomplete title with the body's content. Finally, we fine-tune the pre-trained model CodeT5 to learn the title completion patterns effectively. To evaluate the effectiveness of TC4SETG, we selected 189,655 high-quality posts from Stack Overflow by covering eight popular programming languages for the SOTG task and 333,563 issues in the top-200 starred repositories on GitHub for the ISTG task. Our empirical results show that compared with the approaches of generating question titles from scratch, our proposed approach TC4SETG is more practical in automatic and human evaluation. Our experimental results demonstrate that TC4SETG outperforms corresponding state-of-the-art baselines in the SOTG task by a minimum of 25.82% and in the ISTG task by at least 45.48% in terms of ROUGE-L. Therefore, our study provides a new direction for studying automatic software engineering title generation and calls for more researchers to investigate this direction in the future.
C1 [Chen, Xiang; Pei, Wenlong; Yang, Shaoyu; Zhou, Yanlin; Zhang, Zichen; Pei, Jiahua] Nantong Univ, Sch Informat Sci & Technol, Nantong, Peoples R China.
C3 Nantong University
RP Chen, X (corresponding author), Nantong Univ, Sch Informat Sci & Technol, Nantong, Peoples R China.
EM xchencs@ntu.edu.cn; wl.pei@outlook.com; shaoyuyoung@gmail.com;
   yanlin.z@stmail.ntu.edu.cn; 384758226@qq.com; 761365414@qq.com
FU Postgraduate Research & Practice Innovation Program of Jiangsu Province;
   National Natural Science Foundation of China [61202006];  [SJCX24_2018];
    [SJCX22_1616]
FX The authors would like to thank the anonymous reviewers for their
   insightful comments and suggestions, which can substantially improve the
   quality of this work. Wenlong Pei, Shaoyu Yang, and Yanlin Zhou have
   contributed equally to this work. This research was partially supported
   by the National Natural Science Foundation of China (Grant no. 61202006)
   and the Postgraduate Research & Practice Innovation Program of Jiangsu
   Province (Grant no. SJCX24_2018 and SJCX22_1616).DAS:We share the
   gathered corpus, scripts, trained models, detailed experimental results,
   and the developed plugin tool in our GitHub repository
   (https://github.com/wenlong-pei/TC4SETG).
CR Ba L.J., 2016, arXiv, DOI DOI 10.48550/ARXIV.1607.06450
   Bajaj K, 2014, P 11 WORK C MIN SOFT, P112
   Chang YP, 2023, Arxiv, DOI [arXiv:2307.03109, DOI 10.1145/3641289]
   Chen SQ, 2020, IEEE INT CONF AUTOM, P385, DOI 10.1145/3324884.3416538
   Cheng J., 2016, 2016 C EMP METH NAT, P551, DOI DOI 10.18653/V1/D16-1053
   Ciurumelea A, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P456, DOI [10.1109/saner48275.2020.9054866, 10.1109/SANER48275.2020.9054866]
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   Dong YH, 2024, Arxiv, DOI arXiv:2304.07590
   Feng ZY, 2020, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, EMNLP 2020, P1536
   FLEISS JL, 1971, PSYCHOL BULL, V76, P378, DOI 10.1037/h0031619
   Gao ZP, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1525, DOI 10.1145/3468264.3473114
   Gao ZP, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3401026
   He KM, 2016, PROC CVPR IEEE, P770, DOI 10.1109/CVPR.2016.90
   Hindle A, 2016, COMMUN ACM, V59, P122, DOI 10.1145/2902362
   Hu X., 2022, ACM Trans Softw Eng Methodol (TOSEM), V31, P1
   Islam MJ, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P510, DOI 10.1145/3338906.3338955
   Izadi M, 2022, PROC INT CONF SOFTW, P401, DOI 10.1145/3510003.3510172
   Kim S, 2021, PROC INT CONF SOFTW, P150, DOI 10.1109/ICSE43902.2021.00026
   Kondrak G, 2005, LECT NOTES COMPUT SC, V3772, P115
   Kudo T, 2018, CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2018): PROCEEDINGS OF SYSTEM DEMONSTRATIONS, P66
   LEVENSHT.VI, 1965, DOKL AKAD NAUK SSSR+, V163, P845
   Li J, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P4159
   Li JX, 2021, PROC IEEE INT CONF S, P195, DOI 10.1109/ICSME52107.2021.00024
   Li Z, 2023, IEEE T RELIAB, V72, P258, DOI 10.1109/TR.2022.3154773
   Li Z, 2021, J SYST SOFTWARE, V181, DOI 10.1016/j.jss.2021.111036
   Lin C.-Y., 2004, TEXT SUMMARIZATION B, P74, DOI DOI 10.2307/3105454
   Lin H, 2023, J SYST SOFTWARE, V195, DOI 10.1016/j.jss.2022.111513
   Liu F, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10140-7
   Liu F, 2020, INT C PROGRAM COMPRE, P37, DOI 10.1145/3387904.3389261
   Liu K, 2022, 13TH ASIA-PACIFIC SYMPOSIUM ON INTERNETWARE, INTERNETWARE 2022, P147, DOI 10.1145/3545258.3545260
   Liu K, 2022, EUR CON SFTWR MTNCE, P577, DOI 10.1109/SANER53432.2022.00075
   Liu XD, 2019, 57TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2019), P4487
   Liu ZX, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P176, DOI 10.1109/ASE.2019.00026
   Liu ZX, 2018, IEEE INT CONF AUTOM, P373, DOI 10.1145/3238147.3238190
   Mastropaolo A, 2021, PROC IEEE INT CONF S, P159, DOI 10.1109/ICSME52107.2021.00021
   Mike L, 2020, P 58 ANN M ASS COMP, P7871, DOI 10.18653/v1/2020.acl-main.703
   Mutton A, 2007, P 45 ANN M ASS COMP, P344
   Napoles C, 2015, PROCEEDINGS OF THE 53RD ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL) AND THE 7TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING (IJCNLP), VOL 2, P588
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Prechelt L, 1998, LECT NOTES COMPUT SC, V1524, P55
   Raffel C, 2020, J MACH LEARN RES, V21
   Raychev V, 2014, ACM SIGPLAN NOTICES, V49, P419, DOI [10.1145/2666356.2594321, 10.1145/2594291.2594321]
   Singh R, 2013, Elements of survey sampling
   Sutskever I., 2014, Advances in Neural Information Processing Systems, P3104
   Vaswani A., 2017, Advances in neural information processing systems, P5998
   Wang Y, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P8696
   Wei BL, 2020, IEEE INT CONF AUTOM, P349, DOI 10.1145/3324884.3416578
   Weisstein EW, 2004, Bonferroni correction
   Wilcoxon F., 1992, Breakthroughs in statistics: methodology and distribution, P196, DOI [DOI 10.2307/3001968, 10.1093/jee/39.2.269, DOI 10.1093/JEE/39.2.269, DOI 10.1007/978-1-4612-4380-916]
   Xia CS, 2023, PROC INT CONF SOFTW, P1482, DOI 10.1109/ICSE48619.2023.00129
   Yang G, 2023, J SYST SOFTWARE, V197, DOI 10.1016/j.jss.2022.111577
   Yang G, 2022, EUR CON SFTWR MTNCE, P361, DOI 10.1109/SANER53432.2022.00052
   Yang G, 2021, ASIA PAC SOFWR ENG, P213, DOI 10.1109/APSEC53868.2021.00029
   Yang G, 2022, KNOWL-BASED SYST, V237, DOI 10.1016/j.knosys.2021.107858
   Yu C, 2022, PROC IEEE INT CONF S, P82, DOI 10.1109/ICSME55016.2022.00016
   Zhang Fengji, 2022, Information and Software Technology, DOI 10.1016/j.infsof.2022.106922
   Zhang J, 2020, PROC INT CONF SOFTW, P1385, DOI 10.1145/3377811.3380383
   Zhang T, 2022, PROC IEEE INT CONF S, P71, DOI 10.1109/ICSME55016.2022.00015
   Zhou Y, 2023, 2023 IEEE ACM 31 INT, P1
NR 59
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2024
VL 29
IS 5
AR 120
DI 10.1007/s10664-024-10513-0
PG 45
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZO3N6
UT WOS:001276200900002
DA 2024-08-05
ER

PT J
AU Lin, Y
   Singhal, T
   Gao, DB
   Lo, D
AF Lin, Yan
   Singhal, Trisha
   Gao, Debin
   Lo, David
TI Analyzing and revivifying function signature inference using deep
   learning
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Function signature; recurrent neural network; compiler optimization;
   control-flow integrity
AB Function signature plays an important role in binary analysis and security enhancement, with typical examples in bug finding and control-flow integrity enforcement. However, recovery of function signatures by static binary analysis is challenging since crucial information vital for such recovery is stripped off during compilation. Although function signature recovery using deep learning (DL) is proposed in an effort to handle such challenges, the reported accuracy is low for binaries compiled with optimizations. In this paper, we first perform a systematic study to quantify the extent to which compiler optimizations (negatively) impact the accuracy of existing DL techniques based on Recurrent Neural Network (RNN) for function signature recovery. Our experiments show that the state-of-the-art DL technique has its accuracy dropped from 98.7% to 87.7% when training and testing optimized binaries. We further investigate the type of instructions that existing RNN model deems most important in inferring function signatures with the help of saliency map. The results show that existing RNN model mistakenly considers non-argument-accessing instructions to infer the number of arguments, especially when dealing with optimized binaries. Finally, we identify specific weaknesses in such existing approaches and propose an enhanced DL approach named ReSIL to incorporate compiler-optimization-specific domain knowledge into the learning process. Our experimental results show that ReSIL significantly improves the accuracy and F1 score in inferring function signatures, e.g., with accuracy in inferring the number of arguments for callees compiled with optimization flag O1 from 84.83% to 92.68%. Meanwhile, ReSIL correctly considers the argument-accessing instructions as the most important ones to perform the inferencing. We also demonstrate security implications of ReSIL in Control-Flow Integrity enforcement in stopping potential Counterfeit Object-Oriented Programming (COOP) attacks.
C1 [Lin, Yan] Jinan Univ, Guangzhou, Peoples R China.
   [Singhal, Trisha] Optum Inc, Gurugram, India.
   [Gao, Debin; Lo, David] Singapore Management Univ, Singapore, Singapore.
C3 Jinan University; Singapore Management University
RP Lin, Y (corresponding author), Jinan Univ, Guangzhou, Peoples R China.
EM yanlin@jnu.edu.cn; singhaltrisha25@gmail.com; dbgao@smu.edu.sg;
   davidlo@smu.edu.sg
OI Lin, Yan/0000-0002-6509-9131
FU National Research Foundation, Singapore and National University of
   Singapore through its National Satellite of Excellence in Trustworthy
   Software Systems (NSOE-TSS) office under the Trustworthy Software
   Systems - Core Technologies Grant (TSSCTG) [21623342]; Fundamental
   Research Funds for the Central Universities [62302193]; National Natural
   Science Foundation of China; National Research Foundation, Singapore
   [NSOE-TSS2019-02]; National University of Singapore through its National
   Satellite of Excellence in Trustworthy Software Systems (NSOE-TSS)
   office under the Trustworthy Software Systems - Core Technologies Grant
   (TSSCTG)
FX This work of Yan Lin was supported by the Fundamental Research Funds for
   the Central Universities (Grant No. 21623342) and the National Natural
   Science Foundation of China (Grant No. 62302193). This work of Debin Gao
   was supported by the National Research Foundation, Singapore and
   National University of Singapore through its National Satellite of
   Excellence in Trustworthy Software Systems (NSOE-TSS) office under the
   Trustworthy Software Systems - Core Technologies Grant (TSSCTG) award
   no. NSOE-TSS2019-02.
CR Balakrishnan G, 2007, LECT NOTES COMPUT SC, V4349, P1
   Bao T, 2014, PROCEEDINGS OF THE 23RD USENIX SECURITY SYMPOSIUM, P845
   BENGIO Y, 1994, IEEE T NEURAL NETWOR, V5, P157, DOI 10.1109/72.279181
   Caballero J., 2009, Binary code extraction and interface identification for security applications, DOI [10.21236/ADA538737, DOI 10.21236/ADA538737]
   Chen LG, 2020, I C DEPEND SYS NETWO, P88, DOI 10.1109/DSN48063.2020.00028
   Chua ZL, 2017, PROCEEDINGS OF THE 26TH USENIX SECURITY SYMPOSIUM (USENIX SECURITY '17), P99
   Committee DDIF etal, 2010, Dwarf debugging information format
   Duan Y, 2020, 27TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2020), DOI 10.14722/ndss.2020.24311
   ElWazeer K, 2013, ACM SIGPLAN NOTICES, V48, P51, DOI 10.1145/2499370.2462165
   Fu CY, 2019, ADV NEUR IN, V32
   Guo CA, 2017, PR MACH LEARN RES, V70
   He JX, 2019, PROCEEDINGS OF THE 2019 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'19), P531, DOI 10.1145/3319535.3363230
   He JX, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P1667, DOI 10.1145/3243734.3243866
   Hellendoorn VJ, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P152, DOI 10.1145/3236024.3236051
   Hu YK, 2017, INT C PROGRAM COMPRE, P88, DOI 10.1109/ICPC.2017.22
   INTEL I, 2018, Intel® 64 and ia-32 architectures software developer's manual
   Jain V, 2018, 34TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2018), P505, DOI 10.1145/3274694.3274746
   Ji YD, 2021, LECT NOTES COMPUT SC, V12727, P287, DOI 10.1007/978-3-030-78375-4_12
   Katz DS, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P346, DOI 10.1109/SANER.2018.8330222
   Katz O, 2019, Arxiv, DOI arXiv:1905.08325
   Kim D, 2022, Arxiv, DOI arXiv:2011.10749
   Lattner C, 2004, INT SYM CODE GENER, P75, DOI 10.1109/cgo.2004.1281665
   Lee J, 2011, P 18 NETW DISTR SYST
   Li XZX, 2021, CCS '21: PROCEEDINGS OF THE 2021 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P3236, DOI 10.1145/3460120.3484587
   Liang RG, 2021, CYBERSECURITY, V4, DOI 10.1186/s42400-021-00070-0
   Lin Y, 2021, P 42 IEEE S SEC PRIV
   Lin Y, 2019, PROCEEDINGS OF THE 2019 ACM ASIA CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (ASIACCS '19), P3, DOI 10.1145/3321705.3329815
   Maier A, 2019, LECT NOTES COMPUT SC, V11543, P288, DOI 10.1007/978-3-030-22038-9_14
   Muntean P, 2018, LECT NOTES COMPUT SC, V11050, P423, DOI 10.1007/978-3-030-00470-5_20
   Nouh L, 2017, IFIP ADV INF COMM TE, V502, P341, DOI 10.1007/978-3-319-58469-0_23
   Otsubo Y, 2020, P 3ND WORKSH BIN AN
   Pei KX, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P690, DOI 10.1145/3468264.3468607
   Pizzolotto D, 2020, PROC IEEE INT CONF S, P232, DOI 10.1109/ICSME46990.2020.00031
   Prakash A, 2015, 22ND ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2015), DOI 10.14722/ndss.2015.23297
   Qian Y, 2022, IEEE INT C S Q R S, P454, DOI 10.1109/QRS57517.2022.00053
   Rosenblum N., 2011, P 2011 INT S SOFTW T, P100, DOI DOI 10.1145/2001420.2001433
   Schuster F, 2015, P IEEE S SECUR PRIV, P745, DOI 10.1109/SP.2015.51
   Selvaraju RR, 2017, IEEE I CONF COMP VIS, P618, DOI 10.1109/ICCV.2017.74
   Sharma A, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P449, DOI 10.1109/SANER.2015.7081855
   Shin ECR, 2015, PROCEEDINGS OF THE 24TH USENIX SECURITY SYMPOSIUM, P611
   Simonyan K, 2014, Arxiv, DOI [arXiv:1312.6034, DOI 10.48550/ARXIV.1312.6034]
   Tian ZZ, 2021, IEEE ACCESS, V9, P49160, DOI 10.1109/ACCESS.2021.3069227
   van der Veen V, 2016, P IEEE S SECUR PRIV, P934, DOI 10.1109/SP.2016.60
   Wang S, 2017, PROC IEEE INT CONF S, P388, DOI 10.1109/ICSME.2017.59
   Xu XJ, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P363, DOI 10.1145/3133956.3134018
   Xu ZW, 2019, IEEE T RELIAB, V68, P893, DOI 10.1109/TR.2018.2884143
   Zeng DR, 2018, PROCEEDINGS OF THE EIGHTH ACM CONFERENCE ON DATA AND APPLICATION SECURITY AND PRIVACY (CODASPY'18), P366, DOI 10.1145/3176258.3176309
NR 47
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAY
PY 2024
VL 29
IS 3
AR 69
DI 10.1007/s10664-024-10453-9
PG 48
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA PS9B9
UT WOS:001216179900002
DA 2024-08-05
ER

PT J
AU Ouatiti, YE
   Sayagh, M
   Kerzazi, N
   Adams, B
   Hassan, AE
AF Ouatiti, Youssef Esseddiq
   Sayagh, Mohammed
   Kerzazi, Noureddine
   Adams, Bram
   Hassan, Ahmed E.
TI The impact of concept drift and data leakage on log level prediction
   models
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Machine learning; Concept drift; Data leakage; Software logging; Log
   level prediction
AB Developers insert logging statements to collect information about the execution of their systems. Along with a logging framework (e.g., Log4j), practitioners can decide which log statement to print or suppress by tagging each log line with a log level. Since picking the right log level for a new logging statement is not straightforward, machine learning models for log level prediction (LLP) were proposed by prior studies. While these models show good performances, they are still subject to the context in which they are applied, specifically to the way practitioners decide on log levels in different phases of the development history of their projects (e.g., debugging vs. testing). For example, Openstack developers interchangeably increased/decreased the verbosity of their logs across the history of the project in response to code changes (e.g., before vs after fixing a new bug). Thus, the manifestation of these changing log verbosity choices across time can lead to concept drift and data leakage issues, which we wish to quantify in this paper on LLP models. In this paper, we empirically quantify the impact of data leakage and concept drift on the performance and interpretability of LLP models in three large open-source systems. Additionally, we compare the performance and interpretability of several time-aware approaches to tackle time-related issues. We observe that both shallow and deep-learning-based models suffer from both time-related issues. We also observe that training a model on just a window of the historical data (i.e., contextual model) outperforms models that are trained on the whole historical data (i.e., all-knowing model) in the case of our shallow LLP model. Finally, we observe that contextual models exhibit a different (even contradictory) model interpretability, with a (very) weak correlation between the ranking of important features of the pairs of contextual models we compared. Our findings suggest that data leakage and concept drift should be taken into consideration for LLP models. We also invite practitioners to include the size of the historical window as an additional hyperparameter to tune a suitable contextual model instead of leveraging all-knowing models.
C1 [Ouatiti, Youssef Esseddiq; Adams, Bram; Hassan, Ahmed E.] Queens Univ, Kingston, ON, Canada.
   [Sayagh, Mohammed] ETS Quebec Univ, Montreal, PQ, Canada.
   [Kerzazi, Noureddine] ENSIAS, Rabat, Morocco.
C3 Queens University - Canada; Mohammed V University in Rabat
RP Ouatiti, YE (corresponding author), Queens Univ, Kingston, ON, Canada.
EM youssefesseddiq.ouatiti@queensu.ca; mohammed.sayagh@etsmtl.ca;
   nkerzazi@gmail.com; bram.adams@queensu.ca; ahmed@cs.queensu.ca
FX DAS: The datasets generated during and/or analysed during the current
   study are available online (Ouatiti 2024).
CR Agrawal A, 2019, Is ai different for se?, P12
   Anu H, 2019, PROC IEEE INT CONF S, P125, DOI 10.1109/ICSME.2019.00022
   Bennin KE, 2020, 2020 IEEE 20 INT C S
   Bertram T, 2022, Quantity vs quality: investigating the trade-off between sample size and label reliability
   Chahar Ravita., 2020, International Journal of Advanced Technology and Engineering Exploration, V7, P147, DOI [DOI 10.19101/IJATEE.2020.762057, 10.19101/IJATEE.2020.762057]
   Ditzler G, 2015, IEEE COMPUT INTELL M, V10, P12, DOI 10.1109/MCI.2015.2471196
   Ekanayake J, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P51, DOI 10.1109/MSR.2009.5069480
   Fu Q, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P24, DOI 10.1145/2591062.2591175
   Gama J, 2004, LECT NOTES ARTIF INT, V3171, P286
   Gama J, 2014, ACM COMPUT SURV, V46, DOI 10.1145/2523813
   Hand DJ, 2001, MACH LEARN, V45, P171, DOI 10.1023/A:1010920819831
   Harel M, 2014, PR MACH LEARN RES, V32, P1009
   Harrell F, 2001, Regression modeling strategies: with applications to linear models, logistic regression, and survival analysis
   Haynes W, 2013, BONFERRONI CORRECTIO, P154, DOI [10.1007/978-1-4419-9863-7_1213, DOI 10.1007/978-1-4419-9863-7_1213]
   Herbsleb JD, 2003, IEEE T SOFTWARE ENG, V29, P481, DOI 10.1109/TSE.2003.1205177
   Jia ZY, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P61, DOI 10.1109/SANER.2018.8330197
   Jiarpakdee J, 2018, Arxiv, DOI arXiv:1801.10271
   Kabinna S, 2016, P 23 INT C SOFTW AN, V1, P326
   Kaufman S., 2011, LEAKAGE DATA MINING, P556, DOI [DOI 10.1145/2382577.2382579, 10.1145/2020408.2020496,6]
   Lee D, 2020, EMPIR SOFTW ENG, V25, P3396, DOI 10.1007/s10664-020-09840-9
   Li H, 2021, IEEE T SOFTWARE ENG, V47, P2858, DOI 10.1109/TSE.2020.2970422
   Li H, 2018, EMPIR SOFTW ENG, V23, P2655, DOI 10.1007/s10664-018-9595-8
   Li H, 2017, EMPIR SOFTW ENG, V22, P1684, DOI 10.1007/s10664-016-9456-2
   Li ZH, 2021, PROC INT CONF SOFTW, P1461, DOI 10.1109/ICSE43902.2021.00131
   Lin QW, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P480, DOI 10.1145/3236024.3236060
   Liu AJ, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P2280
   Liu ZX, 2021, IEEE T SOFTWARE ENG, V47, P2012, DOI 10.1109/TSE.2019.2941943
   Lu J, 2019, IEEE T KNOWL DATA EN, V31, P2346, DOI 10.1109/TKDE.2018.2876857
   Lu N, 2016, ARTIF INTELL, V230, P108, DOI 10.1016/j.artint.2015.09.009
   Lyu Y, 2021, Towards a consistent interpretation of aiops models, V31
   Lyu YZ, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3447876
   McIntosh BAS, 2014, P WORK C MIN SOFTW R, P292
   Olewicki D, 2022, PROC INT CONF SOFTW, P2177, DOI 10.1145/3510003.3510122
   Oliner A, 2012, COMMUN ACM, V55, P63, DOI 10.1145/2076450.2076466
   Ouatiti YE, 2024, The impact of concept drift and data leakage on log level prediction models-appendix
   Ouatiti YE, 2023, IEEE Trans Softw Eng
   Pecchia A, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P169, DOI 10.1109/ICSE.2015.145
   Rajbahadur GK, 2021, IEEE T SOFTWARE ENG, V48, P2245, DOI 10.1109/TSE.2021.3056941
   Ramírez-Gallego S, 2017, NEUROCOMPUTING, V239, P39, DOI 10.1016/j.neucom.2017.01.078
   Sarro F, 2022, IEEE Trans Softw Eng
   Sayagh M, 2017, 2017 IEEE 17 INT WOR
   Shang WY, 2015, EMPIR SOFTW ENG, V20, P1, DOI 10.1007/s10664-013-9274-8
   Shihab E, 2013, INFORM SOFTWARE TECH, V55, P1981, DOI 10.1016/j.infsof.2013.06.002
   Subramanyam R, 2003, IEEE T SOFTWARE ENG, V29, P297, DOI 10.1109/TSE.2003.1191795
   Tantithamthavorn C., 2018, The impact of class rebalancing techniques on the performance and interpretation of defect prediction models
   Tantithamthavorn C, 2021, IEEE Software
   Tantithamthavorn C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P286, DOI 10.1145/3183519.3183547
   Tantithamthavorn C, 2019, IEEE T SOFTWARE ENG, V45, P683, DOI 10.1109/TSE.2018.2794977
   Tantithamthavorn Chakkrit, 2018, SCOTTKNOTTESD SCOTT
   Thongtanunam P., 2018, IEEE Transactions on Software Engineering, P1
   Yuan D, 2012, P 10 USENIX C OP SYS
   Yuan D, 2014, P 11 C OP SYST DES I, P249
   Yuan D, 2012, PROC INT CONF SOFTW, P102, DOI 10.1109/ICSE.2012.6227202
   Yuan D, 2011, ACM SIGPLAN NOTICES, V46, P3, DOI 10.1145/1961296.1950369
   Zhang D, 2002, PROC INT C TOOLS ART, P22, DOI 10.1109/TAI.2002.1180784
   Zhang J, 2016, IEEE Transactions on Knowledge and Data Engineering
   Zhou Z.H., 2012, Ensemble methods: foundations and algorithms
   Zhu JM, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P415, DOI 10.1109/ICSE.2015.60
NR 58
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2024
VL 29
IS 5
AR 123
DI 10.1007/s10664-024-10518-9
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZO3N6
UT WOS:001276200900007
DA 2024-08-05
ER

PT J
AU Khan, AA
   Khan, JA
   Akbar, MA
   Zhou, P
   Fahmideh, M
AF Khan, Arif Ali
   Khan, Javed Ali
   Akbar, Muhammad Azeem
   Zhou, Peng
   Fahmideh, Mahdi
TI Insights into software development approaches: mining Q&A repositories
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software development approaches; Q&A websites; Software process
   improvement; Software repositories mining
ID AGREEMENT
AB Context Software practitioners adopt approaches like DevOps, Scrum, and Waterfall for high-quality software development. However, limited research has been conducted on exploring software development approaches concerning practitioners' discussions on Q &A forums.Objective We conducted an empirical study to analyze developers' discussions on Q &A forums to gain insights into software development approaches in practice.Method We analyzed 13,903 developers' posts across Stack Overflow (SO), Software Engineering Stack Exchange (SESE), and Project Management Stack Exchange (PMSE) forums. A mixed method approach, consisting of the topic modeling technique (i.e., Latent Dirichlet Allocation (LDA)) and qualitative analysis, is used to identify frequently discussed topics of software development approaches, trends (popular, difficult topics), and the challenges faced by practitioners in adopting different software development approaches.Findings We identified 15 frequently mentioned software development approaches topics on Q&A sites and observed an increase in trends for the top-3 most difficult topics requiring more attention. Finally, our study identified 49 challenges faced by practitioners while deploying various software development approaches, and we subsequently created a thematic map to represent these findings.Conclusions The study findings serve as a useful resource for practitioners to overcome challenges, stay informed about current trends, and ultimately improve the quality of software products they develop.
C1 [Khan, Arif Ali] Univ Oulu, M3S Empir Software Engn Res Unit, FI-90014 Oulu, Finland.
   [Khan, Javed Ali] Univ Hertfordshire, Sch Phys Engn & Comp Sci, Dept Comp Sci, Hatfield AL10 9AB, England.
   [Akbar, Muhammad Azeem] Lappeenranta Lahti Univ Technol, Software Engn Dept, Lappeenranta 15210, Finland.
   [Zhou, Peng] Nanjing Univ Aeronaut & Astronaut, Coll Comp Sci & Technol, Nanjing 210016, Peoples R China.
   [Fahmideh, Mahdi] Univ Southern Queensland, Sch Business, Springfield, Qld 4300, Australia.
C3 University of Oulu; University of Hertfordshire; Lappeenranta-Lahti
   University of Technology LUT; Nanjing University of Aeronautics &
   Astronautics; University of Southern Queensland
RP Khan, AA (corresponding author), Univ Oulu, M3S Empir Software Engn Res Unit, FI-90014 Oulu, Finland.
EM arif.khan@oulu.fi
RI Khan, Arif Ali/ABG-2862-2020; Khan, Javed Ali/ISS-4923-2023
OI Khan, Arif Ali/0000-0002-8479-1481; Khan, Javed Ali/0000-0003-3306-1195;
   Fahmideh, Mahdi/0000-0001-7196-7217
FU University of Oulu (including Oulu University Hospital)
FX The authors acknowledge that they used generative AI tools (ChatGPT) and
   writing assistant tool (Grammarly) to fix writing issues in this paper.
   After using this service, the authors extensively reviewed and modified
   the content and they take full responsibility for the overall content of
   the paper.
CR Abdellatif A, 2020, IEEE WORK CONF MIN S, P174, DOI 10.1145/3379597.3387472
   Ahmed S, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3239524
   Al-Saqqa Samar, 2020, International Journal of Interactive Mobile Technologies, V14, P246, DOI 10.3991/ijim.v14i11.13269
   [Anonymous], 1987, P 9 INT C SOFTW ENG
   Aymerich B, 2019, ADV INTELL SYST, V787, P122, DOI 10.1007/978-3-319-94229-2_13
   Bagherzadeh M, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P432, DOI 10.1145/3338906.3338939
   Bajaj K, 2014, P 11 WORK C MIN SOFT, P112
   Bajec M, 2007, INFORM SOFTWARE TECH, V49, P345, DOI 10.1016/j.infsof.2006.05.007
   Bano M, 2017, EMPIR SOFTW ENG, V22, P2339, DOI 10.1007/s10664-016-9465-1
   Barua A, 2014, EMPIR SOFTW ENG, V19, P619, DOI 10.1007/s10664-012-9231-y
   Berntzen M, 2023, IEEE T SOFTWARE ENG, V49, P699, DOI 10.1109/TSE.2022.3160873
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   BOEHM BW, 1988, COMPUTER, V21, P61, DOI [10.1109/2.59, 10.1145/12944.12948]
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI 10.1191/1478088706qp063oa
   Brisson S, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P59, DOI [10.1109/saner48275.2020.9054834, 10.1109/SANER48275.2020.9054834]
   Bustard D, 2013, 2013 20TH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER BASED SYSTEMS (ECBS 2013), P139, DOI 10.1109/ECBS.2013.11
   Chen TH, 2016, EMPIR SOFTW ENG, V21, P1843, DOI 10.1007/s10664-015-9402-8
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Dwivedi AK, 2018, FRONT COMPUT SCI-CHI, V12, P908, DOI 10.1007/s11704-017-6424-y
   Fowler M., 2001, Software Development, V9, P28
   Haque MU, 2020, P 14 ACM IEEE INT S, P1
   Hastie T., 2009, ELEMENTS STAT LEARNI, DOI [DOI 10.1007/978-0-387-84858-7, 10.1007/978-0-387-84858-7]
   Itzik D, 2023, EMPIR SOFTW ENG, V28, DOI 10.1007/s10664-023-10334-7
   Jacobi C, 2016, DIGIT JOURNAL, V4, P89, DOI 10.1080/21670811.2015.1093271
   Kendall M. G., 1948, Rank correlation methods.
   Kendall MG, 1938, BIOMETRIKA, V30, P81, DOI 10.2307/2332226
   Khan AA, 2022, Data replication package for the paper: Insights into software development approaches: Mining q &a repositories
   Khan AA, 2021, APPL SOFT COMPUT, V102, DOI 10.1016/j.asoc.2021.107090
   Khan JA, 2022, SOFTWARE PRACT EXPER, V52, P2537, DOI 10.1002/spe.3137
   Khan JA, 2020, J SOFTW-EVOL PROC, V32, DOI 10.1002/smr.2309
   Khan JA, 2019, INT REQUIR ENG CONF, P63, DOI 10.1109/RE.2019.00018
   Khan JA, 2019, LECT NOTES COMPUT SC, V11412, P245, DOI 10.1007/978-3-030-15538-4_18
   Khan JA, 2018, IEEE INT WORKS EMPIR, P24, DOI 10.1109/EmpiRE.2018.00010
   Kim G., 2021, The DevOps Handbook: How to Create World-Class Agility, Reliability, Security in Technology Organizations, VSecond
   Klünder J, 2017, LECT NOTES COMPUT SC, V10611, P428, DOI 10.1007/978-3-319-69926-4_32
   Kuhrmann M, 2022, IEEE T SOFTWARE ENG, V48, P3523, DOI 10.1109/TSE.2021.3099532
   Kuhrmann M, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING EDUCATION AND TRAINING (ICSE-SEET), P1, DOI 10.1109/ICSE-SEET.2019.00009
   Kuhrmann M, 2017, ICSSP'17: PROCEEDINGS OF THE 2017 INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESS, P30, DOI 10.1145/3084100.3084104
   Kuhrmann M, 2017, LECT NOTES COMPUT SC, V10611, P397, DOI 10.1007/978-3-319-69926-4_28
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Menard S., 2002, LONGITUDINAL RES, V76
   Mushashu ET, 2019, 2019 IST-AFRICA WEEK CONFERENCE (IST-AFRICA), DOI 10.23919/istafrica.2019.8764884
   Paixao KVR, 2017, IEEE WORK CONF MIN S, P479, DOI 10.1109/MSR.2017.33
   Peruma A, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10045-x
   Pinto G., 2014, P 11 WORK C MIN SOFT, P22, DOI DOI 10.1145/2597073.2597110
   Pressman R.S., 2005, Software Engineering: A Practitioner's Approach
   Riaz M N., 2019, Sukkur IBA Journal of Computing and Mathematical Sciences, V3, P25
   Röder M, 2015, WSDM'15: PROCEEDINGS OF THE EIGHTH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING, P399, DOI 10.1145/2684822.2685324
   Rosen C, 2016, EMPIR SOFTW ENG, V21, P1192, DOI 10.1007/s10664-015-9379-3
   Storey M.-A., 2014, FUTURE SOFTWARE ENG, P100
   Sun XB, 2015, INFORM SOFTWARE TECH, V66, P1, DOI 10.1016/j.infsof.2015.05.003
   Tell P, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2315
   Treude C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P804, DOI 10.1145/1985793.1985907
   Le THM, 2021, PROCEEDINGS OF EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING (EASE 2021), P109, DOI 10.1145/3463274.3463331
   Ullah T, 2023, SOFT COMPUT, DOI 10.1007/s00500-023-09054-3
   Vidoni M, 2022, INFORM SOFTWARE TECH, V144, DOI 10.1016/j.infsof.2021.106791
   Wohlin C., 2012, Experimentation in Software Engineering, DOI [10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Yang XL, 2016, J COMPUT SCI TECH-CH, V31, P910, DOI 10.1007/s11390-016-1672-0
   Zahedi Mansooreh, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P41, DOI 10.1145/3383219.3383224
   Zhou C, 2020, J SYST SOFTWARE, V165, DOI 10.1016/j.jss.2020.110572
   Zhou P, 2021, PROCEEDINGS OF EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING (EASE 2021), P394, DOI 10.1145/3463274.3463786
NR 62
TC 1
Z9 1
U1 9
U2 13
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2024
VL 29
IS 1
AR 8
DI 10.1007/s10664-023-10417-5
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA Y9DE5
UT WOS:001108184900001
OA hybrid
DA 2024-08-05
ER

PT J
AU Majumder, S
   Chakraborty, J
   Menzies, T
AF Majumder, Suvodeep
   Chakraborty, Joymallya
   Menzies, Tim
TI When less is more: on the value of "co-training" for semi-supervised
   software defect predictors
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Semi-supervised learning; SSL; Self-training; Co-training; Boosting
   methods; Semi-supervised preprocessing; Clustering-based semi-supervised
   preprocessing; Intrinsically semi-supervised methods; Graph-based
   methods; Co-forest; Effort aware tri-training
ID SUPPORT VECTOR MACHINE; FEATURE-SELECTION; MODELS; SEARCH
AB Labeling a module defective or non-defective is an expensive task. Hence, there are often limits on how much-labeled data is available for training. Semi-supervised classifiers use far fewer labels for training models. However, there are numerous semi-supervised methods, including self-labeling, co-training, maximal-margin, and graph-based methods, to name a few. Only a handful of these methods have been tested in SE for (e.g.) predicting defects- and even there, those methods have been tested on just a handful of projects. This paper applies a wide range of 55 semi-supervised learners to over 714 projects. We find that semi-supervised "co-training methods" work significantly better than other approaches. Specifically, after labeling, just 2.5% of data, then make predictions that are competitive to those using 100% of the data. That said, co-training needs to be used cautiously since the specific choice of co-training methods needs to be carefully selected based on a user's specific goals. Also, we warn that a commonly-used co-training method ("multi-view"- where different learners get different sets of columns) does not improve predictions (while adding too much to the run time costs 11 hours vs. 1.8 hours). It is an open question, worthy of future work, to test if these reductions can be seen in other areas of software analytics. To assist with exploring other areas, all the codes used are available at https://github.com/ai-se/Semi-Supervised.
C1 [Majumder, Suvodeep; Chakraborty, Joymallya; Menzies, Tim] North Carolina State Univ, Dept Comp Sci, Raleigh, NC 27606 USA.
C3 North Carolina State University
RP Majumder, S (corresponding author), North Carolina State Univ, Dept Comp Sci, Raleigh, NC 27606 USA.
EM smajumd3@ncsu.edu; jchakra@ncsu.edu; timm@ieee.org
OI Menzies, Tim/0000-0002-5040-3196
FU National Science Foundation [1908762]; National Science Foundation
FX This material is based upon work supported by the National Science
   Foundation under grant #1908762. Any opinions, findings, conclusions, or
   recommendations expressed in this material are those of the author(s)
   and do not necessarily reflect the views of the National Science
   Foundation.
CR Abaei G, 2015, KNOWL-BASED SYST, V74, P28, DOI 10.1016/j.knosys.2014.10.017
   Abney S, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P360
   Agrawal A, 2017, CoRR abs/1705.03697
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Bair E, 2013, WIRES COMPUT STAT, V5, P349, DOI 10.1002/wics.1270
   Balcan MF., 2004, Adv Neural Inf Process Syst, V17, P2
   Balogun A.O., 2018, FUOYE Journal of Engineering and Technology, V3, P50
   Bell RM, 2013, EMPIR SOFTW ENG, V18, P478, DOI 10.1007/s10664-011-9178-4
   Bennett K. P., 2002, P 8 ACM SIGKDD INT C, P289, DOI DOI 10.1145/775047.775090
   Bennin KE, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2016), P214, DOI 10.1109/QRS.2016.33
   Bird Christian, 2009, 2009 20th International Symposium on Software Reliability Engineering (ISSRE 2009), P109, DOI 10.1109/ISSRE.2009.17
   Blum A., 1998, Proceedings of the Eleventh Annual Conference on Computational Learning Theory, P92, DOI 10.1145/279943.279962
   BRIAND LC, 1993, IEEE T SOFTWARE ENG, V19, P1028, DOI 10.1109/32.256851
   Cao Y, 2018, INT J BIO-INSPIR COM, V11, P282, DOI 10.1504/IJBIC.2018.092808
   Catolino Gemma, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P201, DOI 10.1109/MOBILESoft.2017.58
   Chapelle O., 2005, P INT WORKSH ART INT, P57
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chen D, 2019, INT C PROGRAM COMPRE, P179, DOI 10.1109/ICPC.2019.00037
   Cox MA., 2008, Handbook of Data Visualization, P315, DOI [10.1007/978-3-540-33037-014, DOI 10.1007/978-3-540-33037-0_14, 10.1007/978-3-540-33037-0_14]
   Demiriz A., 1999, Artificial Neural Networks in Engineering ANNIE-99, P809
   Du J, 2011, IEEE T KNOWL DATA EN, V23, P788, DOI 10.1109/TKDE.2010.158
   Gayatri N, 2010, LECT NOTES ENG COMP, P124
   Ghotra B, 2017, IEEE WORK CONF MIN S, P146, DOI 10.1109/MSR.2017.18
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Goldberg A., 2009, Artificial intelligence and statistics, P169
   Goldman S, 2000, ICML, P327
   Goyal S, 2022, ARTIF INTELL REV, V55, P2023, DOI 10.1007/s10462-021-10044-w
   Hamill M, 2009, IEEE T SOFTWARE ENG, V35, P484, DOI 10.1109/TSE.2009.3
   He Q, 2016, P INT COMP SOFTW APP, P113, DOI 10.1109/COMPSAC.2016.193
   He ZM, 2012, AUTOMAT SOFTW ENG, V19, P167, DOI 10.1007/s10515-011-0090-3
   Hindle A, 2008, P 2008 INT WORK C MI, P99, DOI DOI 10.1145/1370750.1370773
   Hindle A, 2012, PROC INT CONF SOFTW, P837, DOI 10.1109/ICSE.2012.6227135
   Hosseini S, 2018, INFORM SOFTWARE TECH, V95, P296, DOI 10.1016/j.infsof.2017.06.004
   Huang Q, 2017, PROC IEEE INT CONF S, P159, DOI 10.1109/ICSME.2017.51
   Hussain SF, 2016, KNOWL INF SYST, V47, P545, DOI 10.1007/s10115-015-0861-4
   Ibrahim DR, 2017, 2017 INTERNATIONAL CONFERENCE ON NEW TRENDS IN COMPUTING SCIENCES (ICTCS), P252, DOI 10.1109/ICTCS.2017.39
   Iqbal A, 2019, INT J ADV COMPUT SC, V10, P300
   Jacob SG., 2015, Int J Comput Appl, V117, P19
   Jebara T, 2009, P 26 ANN INT C MACHI, P3
   Jierui Xie, 2011, 2011 IEEE First International Network Science Workshop (NSW 2011), P188, DOI 10.1109/NSW.2011.6004645
   Kalliamvakou E., 2014, The Promises and Perils of Mining GitHub (MSR 2014), P92, DOI DOI 10.1145/2597073.2597074
   Kamei Y, 2010, PROC IEEE INT CONF S
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kang HJ, 2022, PROC INT CONF SOFTW, P698, DOI 10.1145/3510003.3510214
   Kim M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P990, DOI 10.1145/2786805.2804429
   Kim M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P151, DOI 10.1145/1985793.1985815
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Koru AG, 2009, IEEE T SOFTWARE ENG, V35, P293, DOI 10.1109/TSE.2008.90
   Koru AG, 2005, IEEE SOFTWARE, V22, P23, DOI 10.1109/MS.2005.149
   Lee D, 2007, IEEE T NEURAL NETWOR, V18, P578, DOI 10.1109/TNN.2006.889495
   Li M, 2007, IEEE T SYST MAN CY A, V37, P1088, DOI 10.1109/TSMCA.2007.904745
   Li M, 2012, AUTOMAT SOFTW ENG, V19, P201, DOI 10.1007/s10515-011-0092-1
   Li WW, 2020, INFORM SOFTWARE TECH, V126, DOI 10.1016/j.infsof.2020.106364
   Li YF, 2015, IEEE T PATTERN ANAL, V37, P175, DOI 10.1109/TPAMI.2014.2299812
   Lin ZP, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P68, DOI 10.1109/MSR.2015.14
   Lina Gong, 2019, 2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE). Proceedings, P698, DOI 10.1109/ASE.2019.00071
   Liu SH, 2013, PROCEEDINGS OF THE 22ND ACM INTERNATIONAL CONFERENCE ON INFORMATION & KNOWLEDGE MANAGEMENT (CIKM'13), P2079, DOI 10.1145/2505515.2505569
   Iglesias EL, 2016, LECT NOTES ARTIF INT, V9648, P66, DOI 10.1007/978-3-319-32034-2_6
   Lu HH, 2012, IEEE INT CONF AUTOM, P314, DOI 10.1145/2351676.2351734
   Mabayoje MA, 2019, Parameter tuning in knn for software defect prediction: an empirical analysis
   Majumder S, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10068-4
   Mallapragada PK, 2009, IEEE T PATTERN ANAL, V31, P2000, DOI 10.1109/TPAMI.2008.235
   Menzies T, 2010, AUTOMAT SOFTW ENG, V17, P375, DOI 10.1007/s10515-010-0069-5
   Misirli AT, 2011, AI MAG, V32, P57, DOI 10.1609/aimag.v32i2.2348
   Mittas N, 2013, IEEE T SOFTWARE ENG, V39, P537, DOI 10.1109/TSE.2012.45
   Mockus A, 2000, PROC IEEE INT CONF S, P120, DOI 10.1109/ICSM.2000.883028
   Munaiah N, 2017, EMPIR SOFTW ENG, V22, P3219, DOI 10.1007/s10664-017-9512-6
   Nagappan Nachiappan, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P309, DOI 10.1109/ISSRE.2010.25
   Nam J, 2018, IEEE T SOFTWARE ENG, V44, P874, DOI 10.1109/TSE.2017.2720603
   Nam J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P382, DOI 10.1109/ICSE.2013.6606584
   Okutan A, 2014, EMPIR SOFTW ENG, V19, P154, DOI 10.1007/s10664-012-9218-8
   Ostrand T.J., 2004, P 2004 ACM SIGSOFT I, V29, P86, DOI [DOI 10.1145/1007512.1007524, DOI 10.1145/1013886.1007524]
   Pan SJ, 2011, IEEE T NEURAL NETWOR, V22, P199, DOI 10.1109/TNN.2010.2091281
   Pelayo L, 2007, NAFIPS 2007 - 2007 ANNUAL MEETING OF THE NORTH AMERICAN FUZZY INFORMATION PROCESSING SOCIETY, P69, DOI 10.1109/NAFIPS.2007.383813
   Rahman F, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P424, DOI 10.1145/2568225.2568269
   Rahman F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P432, DOI 10.1109/ICSE.2013.6606589
   Ray B, 2016, PROC INT CONF SOFTW, P428, DOI 10.1145/2884781.2884848
   Rosen C, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P966, DOI 10.1145/2786805.2803183
   Ryu D, 2016, EMPIR SOFTW ENG, V21, P43, DOI 10.1007/s10664-014-9346-4
   SCUDDER HJ, 1965, IEEE T INFORM THEORY, V11, P363, DOI 10.1109/tit.1965.1053799
   Seiffert C, 2014, INFORM SCIENCES, V259, P571, DOI 10.1016/j.ins.2010.12.016
   Seliya Naeem, 2010, Proceedings 2010 IEEE 12th International Symposium on High-Assurance Systems Engineering (HASE), P26, DOI 10.1109/HASE.2010.29
   Shepperd M, 2013, IEEE T SOFTWARE ENG, V39, P1208, DOI 10.1109/TSE.2013.11
   Shin Y, 2013, EMPIR SOFTW ENG, V18, P25, DOI 10.1007/s10664-011-9190-8
   Singh PD, 2017, PROCEEDINGS OF THE 7TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING, DATA SCIENCE AND ENGINEERING (CONFLUENCE 2017), P775, DOI 10.1109/CONFLUENCE.2017.7943255
   Sucholutsky I, 2021, AAAI CONF ARTIF INTE, V35, P9739
   Sun ZB, 2012, IEEE T SYST MAN CY C, V42, P1806, DOI 10.1109/TSMCC.2012.2226152
   Tanha J, 2017, INT J MACH LEARN CYB, V8, P355, DOI 10.1007/s13042-015-0328-7
   Tantithamthavorn C, 2019, IEEE T SOFTWARE ENG, V45, P683, DOI 10.1109/TSE.2018.2794977
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Tantithamthavorn C, 2016, PROC INT CONF SOFTW, P321, DOI 10.1145/2884781.2884857
   Thota MK., 2020, International Journal of Applied Science and Engineering, V17, P331, DOI [DOI 10.6703/IJASE.20201217(4).331, DOI 10.6703/IJASE.202012_17(4).331]
   Tomar D, 2015, KNOWL-BASED SYST, V81, P131, DOI 10.1016/j.knosys.2015.02.009
   Tosun A, 2010, AAAI CONF ARTIF INTE, P1748
   Tu H, 2021, CoRR, abs/2108.09
   Tu H, 2022, IEEE T SOFTWARE ENG, V48, P278, DOI 10.1109/TSE.2020.2986415
   van Engelen JE, 2020, MACH LEARN, V109, P373, DOI 10.1007/s10994-019-05855-6
   Vapnik VN, 1999, IEEE T NEURAL NETWOR, V10, P988, DOI 10.1109/72.788640
   Vasilescu B, 2018, Personnel communication at fse'18
   Vasilescu B, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P805, DOI 10.1145/2786805.2786850
   Wahono RS, 2014, ADV SCI LETT, V20, P1945, DOI 10.1166/asl.2014.5640
   Wan ZY, 2020, IEEE T SOFTWARE ENG, V46, P1241, DOI 10.1109/TSE.2018.2877678
   Wang J, 2012, INT CONF QUAL SOFTW, P13, DOI 10.1109/QSIC.2012.19
   Wang S, 2013, IEEE T RELIAB, V62, P434, DOI 10.1109/TR.2013.2259203
   Williams C., 2008, P 2008 WORKSHOP DEFE, P32
   WOLD S, 1987, CHEMOMETR INTELL LAB, V2, P37, DOI 10.1016/0169-7439(87)80084-9
   Wu XX, 2021, IEEE T SOFTWARE ENG, V48, P2541, DOI 10.1109/TSE.2021.3063727
   Xia X, 2016, IEEE T RELIAB, V65, P1810, DOI 10.1109/TR.2016.2588139
   Xu C, 2013, Arxiv, DOI arXiv:1304.5634
   Xu Z, 2016, PROC INT SYMP SOFTW, P309, DOI 10.1109/ISSRE.2016.13
   Yang XL, 2017, INFORM SOFTWARE TECH, V87, P206, DOI 10.1016/j.infsof.2017.03.007
   Yang XL, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P17, DOI 10.1109/QRS.2015.14
   Yang YB, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P157, DOI 10.1145/2950290.2950353
   Yarowsky D., 1995, Proc. the 33rd Annual Meeting of the Association for Computational Linguistics, P189
   Yu Z, 2022, IEEE T SOFTWARE ENG, V48, P1676, DOI 10.1109/TSE.2020.3031401
   Yu Z, 2021, IEEE T SOFTWARE ENG, V47, P2401, DOI 10.1109/TSE.2019.2949275
   Yu ZT, 2010, PATTERN RECOGN LETT, V31, P1975, DOI 10.1016/j.patrec.2010.06.010
   Zhang F, 2017, EMPIR SOFTW ENG, V22, P3186, DOI 10.1007/s10664-017-9516-2
   Zhang F, 2016, PROC INT CONF SOFTW, P309, DOI 10.1145/2884781.2884839
   Zhang F, 2016, EMPIR SOFTW ENG, V21, P2107, DOI 10.1007/s10664-015-9396-2
   Zhang HY, 2007, 13TH PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P93, DOI 10.1109/PRDC.2007.28
   Zhang Q, 2020, IEEE INT CONF AUTOM, P722, DOI 10.1145/3324884.3416641
   Zhang WZ, 2019, LECT NOTES ARTIF INT, V11440, P293, DOI 10.1007/978-3-030-16145-3_23
   Zhang ZW, 2017, AUTOMAT SOFTW ENG, V24, P47, DOI 10.1007/s10515-016-0194-x
   Zhong S, 2004, EIGHTH IEEE INTERNATIONAL SYMPOSIUM ON HIGH ASSURANCE SYSTEMS ENGINEERING, PROCEEDINGS, P149
   Zhou D., 2003, Adv Neural Inf Process Syst, V16
   Zhou Y, 2004, PROC INT C TOOLS ART, P594
   Zhou YM, 2010, J SYST SOFTWARE, V83, P660, DOI 10.1016/j.jss.2009.11.704
   Zhou Z.H., 2012, Ensemble methods: foundations and algorithms
   Zhou ZH, 2005, IEEE T KNOWL DATA EN, V17, P1529, DOI 10.1109/TKDE.2005.186
   Zhu X., 2009, Synthesis Lectures on Artificial Intelligence and Machine Learning, V3, P1, DOI [10.1007/978-3-031-01548-9, DOI 10.2200/S00196ED1V01Y200906AIM006]
   Zhu X., 2002, Learning from Labeled and Unlabeled Data with Label Propagation
   Zhu X. J., 2005, Semi-supervised learning literature survey
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
   Zimmermann T., 2007, Proceedings of the Third International Workshop on Predictor Models in Software Engineering, PROMISE'07, page, P9
NR 135
TC 1
Z9 1
U1 3
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2024
VL 29
IS 2
AR 51
DI 10.1007/s10664-023-10418-4
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IU8S2
UT WOS:001168947900002
DA 2024-08-05
ER

PT J
AU Alami, A
   Pardo, R
   Linåker, J
AF Alami, Adam
   Pardo, Raul
   Linaker, Johan
TI Free open source communities sustainability: Does it make a difference
   in software quality?
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Free and Open Source Communities; OSS; FOSS sustainability;
   Sustainability; Health; Software quality
ID PROJECTS; MAINTAINABILITY; ECOSYSTEMS; HEALTH; LINUX
AB ContextFree and Open Source Software (FOSS) communities' ability to stay viable and productive over time is pivotal for society as they maintain the building blocks that digital infrastructure, products, and services depend on. Sustainability may, however, be characterized from multiple aspects, and less is known how these aspects interplay and impact community outputs, and software quality specifically.ObjectiveThis study, therefore, aims to empirically explore how the different aspects of FOSS sustainability impact software quality.Method16 sustainability metrics across four categories were sampled and applied to a set of 217 OSS projects sourced from the Apache Software Foundation Incubator program. The impact of a decline in the sustainability metrics was analyzed against eight software quality metrics using Bayesian data analysis, which incorporates probability distributions to represent the regression coefficients and intercepts.ResultsFindings suggest that selected sustainability metrics do not significantly affect defect density or code coverage. However, a positive impact of community age was observed on specific code quality metrics, such as risk complexity, number of very large files, and code duplication percentage. Interestingly, findings show that even when communities are experiencing sustainability, certain code quality metrics are negatively impacted.ConclusionFindings imply that code quality practices are not consistently linked to sustainability, and defect management and prevention may be prioritized over the former. Results suggest that growth, resulting in a more complex and large codebase, combined with a probable lack of understanding of code quality standards, may explain the degradation in certain aspects of code quality.
C1 [Alami, Adam] Aalborg Univ, Dept Comp Sci, Selma Lagerlofs Vej 300, DK-9220 Aalborg, Denmark.
   [Pardo, Raul] IT Univ Copenhagen, Copenhagen, Denmark.
   [Linaker, Johan] RISE Res Inst Sweden, Gothenburg, Sweden.
C3 Aalborg University; IT University Copenhagen; RISE Research Institutes
   of Sweden
RP Alami, A (corresponding author), Aalborg Univ, Dept Comp Sci, Selma Lagerlofs Vej 300, DK-9220 Aalborg, Denmark.
EM adal@cs.aau.dk; raup@itu.dk; johan.linaker@ri.se
FU Aalborg University
FX No external funding was received to carry out this study. All resources
   utilized in the study were provided by the authors' affiliated
   institutions.DAS:We made this study's data and other artifacts available
   here.
CR Abril-Pla O, 2023, PEERJ COMPUT SCI, V9, DOI 10.7717/peerj-cs.1516
   Ahmed I, 2015, INT SYMP EMP SOFTWAR, P31, DOI 10.1109/ESEM.2015.7321186
   Alami Adam, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P220, DOI 10.1145/3383219.3383242
   Alami A, 2022, IEEE T SOFTWARE ENG, V48, P4838, DOI 10.1109/TSE.2021.3128356
   Alami A, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10208-4
   Alami A, 2019, PROC INT CONF SOFTW, P1073, DOI 10.1109/ICSE.2019.00111
   Alami A, 2018, 2018 IEEE/ACM 11TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P61, DOI 10.1145/3195836.3195853
   Anderson J, 2020, PROC IEEE INT CONF S, P324, DOI 10.1109/ICSME46990.2020.00039
   Avelino G, 2019, INT SYMP EMP SOFTWAR, P328, DOI 10.1109/esem.2019.8870181
   Avelino G, 2016, 2016 IEEE 24TH INTERNATIONAL CONFERENCE ON PROGRAM COMPREHENSION (ICPC)
   Boerstler J, 2023, EMPIR SOFTW ENG, V28, DOI 10.1007/s10664-023-10381-0
   Borges H, 2016, PROC IEEE INT CONF S, P334, DOI 10.1109/ICSME.2016.31
   Champion K, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P388, DOI 10.1109/SANER50967.2021.00043
   Chengalur-Smith I, 2010, J ASSOC INF SYST, V11, P657
   Coelho J, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P186, DOI 10.1145/3106237.3106246
   Crowston K., 2005, First Monday, V10, DOI 10.5210/fm.v10i2.1207
   Crowston K, 2012, ACM COMPUT SURV, V44, DOI 10.1145/2089125.2089127
   Dogan E, 2022, INFORM SOFTWARE TECH, V142, DOI 10.1016/j.infsof.2021.106737
   Fagerholm F, 2014, P 8 ACM IEEE INT S E, P1
   Fang YL, 2009, J MANAGE INFORM SYST, V25, P9, DOI 10.2753/MIS0742-1222250401
   Foucault M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P829, DOI 10.1145/2786805.2786870
   Foundation T.A.S., Log4j-apache log4j™ 2
   Fowler M, 1997, 11 EUR C JYV FINL
   Furia CA, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3490953
   Ghapanchi AH, 2015, INFORM SYST, V49, P40, DOI 10.1016/j.is.2014.10.005
   GILL GK, 1991, IEEE T SOFTWARE ENG, V17, P1284, DOI 10.1109/32.106988
   Guizani Mariam, 2021, Proceedings of the ACM on Human-Computer Interaction, V5, DOI 10.1145/3479551
   Han JX, 2019, P INT COMP SOFTW APP, P21, DOI 10.1109/COMPSAC.2019.00013
   Hoffman MD, 2014, J MACH LEARN RES, V15, P1593
   ISO/IEC, 2011, Iso/iec 25010:2011(en) systems and software engineering-systems and software quality requirements and evaluation (square)-system and software quality models
   Jansen S, 2014, INFORM SOFTWARE TECH, V56, P1508, DOI 10.1016/j.infsof.2014.04.006
   Jay Graylin, 2009, Journal of Software Engineering and Applications, V2, P137, DOI 10.4236/jsea.2009.23020
   Jensen C, 2007, PROC INT CONF SOFTW, P364
   Jiang S, 2019, COMM COM INF SC, V1042, P723, DOI 10.1007/978-981-15-1377-0_56
   Khomh F., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P179, DOI 10.1109/MSR.2012.6224279
   Khomh F, 2012, EMPIR SOFTW ENG, V17, P243, DOI 10.1007/s10664-011-9171-y
   Kitchenham B, 1996, IEEE SOFTWARE, V13, P12, DOI 10.1109/52.476281
   Klima M, 2022, IEEE ACCESS, V10, P46144, DOI 10.1109/ACCESS.2022.3170475
   Kruschke JK, 2018, PSYCHON B REV, V25, P178, DOI 10.3758/s13423-016-1221-4
   Linaker J, 2022, P 18 INT S OP COLL, P1
   Manikas K, 2013, P 5 INT WORKSH SOFTW, P33
   Mannan UA, 2018, PROCEEDINGS OF THE 4TH ACM SIGSOFT INTERNATIONAL WORKSHOP ON NLP FOR SOFTWARE ENGINEERING (NL4SE '18), P18, DOI 10.1145/3283812.3283820
   McElreath R., 2020, Statistical Rethinking, DOI [10.1201/9780429029608, DOI 10.1201/9780429029608]
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Midha V, 2012, J SYST SOFTWARE, V85, P895, DOI 10.1016/j.jss.2011.11.010
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Osman K, 2021, 2021 IEEE/ACM 4TH INTERNATIONAL WORKSHOP ON SOFTWARE HEALTH IN PROJECTS, ECOSYSTEMS AND COMMUNITIES (SOHEAL 2021), P1, DOI 10.1109/SoHeal52568.2021.00007
   Rahman F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P432, DOI 10.1109/ICSE.2013.6606589
   Ray B, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P155, DOI 10.1145/2635868.2635922
   Schach S. R., 2002, IEE Proceedings-Software, V149, P18, DOI 10.1049/ip-sen:20020198
   Shah SMA, 2013, INT WORKS EMERG TREN, P56, DOI 10.1109/WETSoM.2013.6619337
   Shaikh M, 2019, RES POLICY, V48, DOI 10.1016/j.respol.2019.03.011
   SHEPPERD M, 1994, J SYST SOFTWARE, V26, P197, DOI 10.1016/0164-1212(94)90011-6
   Stanciulescu S, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P495, DOI 10.1145/3540250.3549132
   Steinmacher I, 2021, J INTERNET SERV APPL, V12, DOI 10.1186/s13174-021-00140-z
   Steinmacher I, 2019, COMPUT SUPP COOP W J, V28, P247, DOI 10.1007/s10606-018-9335-z
   Valiev M, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P644, DOI 10.1145/3236024.3236062
   van Vulpen P, 2017, LECT NOTES BUS INF P, V304, P131, DOI 10.1007/978-3-319-69191-6_9
   Vasilescu B, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P805, DOI 10.1145/2786805.2786850
   Walden J, 2020, IEEE WORK CONF MIN S, P409, DOI 10.1145/3379597.3387465
   Wang J, 2012, EUR MANAG J, V30, P352, DOI 10.1016/j.emj.2012.03.001
   Wang ZD, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3387111
   Xia TP, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10171-0
   Yin LK, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1056, DOI 10.1145/3468264.3468563
   Yu LG, 2006, J SYST SOFTWARE, V79, P807, DOI 10.1016/j.jss.2005.08.014
   Zhou MH, 2012, PROC INT CONF SOFTW, P518, DOI 10.1109/ICSE.2012.6227164
NR 66
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2024
VL 29
IS 5
AR 114
DI 10.1007/s10664-024-10529-6
PG 40
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZJ3K9
UT WOS:001274887000001
OA hybrid
DA 2024-08-05
ER

PT J
AU Guo, HJ
   Tao, CQ
   Huang, ZQ
AF Guo, Hongjing
   Tao, Chuanqi
   Huang, Zhiqiu
TI Neuron importance-aware coverage analysis for deep neural network
   testing
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Deep neural network testing; Test adequacy; Testing coverage criteria;
   Non-structural coverage
AB Deep Neural Network (DNN) models are widely used in many cutting-edge domains, such as medical diagnostics and autonomous driving. However, an urgent need to test DNN models thoroughly has increasingly risen. Recent research proposes various structural and non-structural coverage criteria to measure test adequacy. Structural coverage criteria quantify the degree to which the internal elements of DNN models are covered by a test suite. However, they convey little information about individual inputs and exhibit limited correlation with defect detection. Additionally, existing non-structural coverage criteria are unaware of neurons' importance to decision-making. This paper addresses these limitations by proposing novel non-structural coverage criteria. By tracing neurons' cumulative contribution to the final decision on the training set, this paper identifies important neurons of DNN models. A novel metric is proposed to quantify the difference in important neuron behavior between a test input and the training set, which provides a measured way at individual test input granularity. Additionally, two non-structural coverage criteria are introduced that allow for the quantification of test adequacy by examining differences in important neuron behavior between the testing and the training set. The empirical evaluation of image datasets demonstrates that the proposed metric outperforms the existing non-structural adequacy metrics by up to 14.7% accuracy improvement in capturing error-revealing test inputs. Compared with state-of-the-art coverage criteria, the proposed coverage criteria are more sensitive to errors, including natural errors and adversarial examples.
C1 [Guo, Hongjing; Tao, Chuanqi; Huang, Zhiqiu] Nanjing Univ Aeronaut & Astronaut, Coll Comp Sci & Technol, Nanjing, Peoples R China.
   [Tao, Chuanqi; Huang, Zhiqiu] Nanjing Univ Aeronaut & Astronaut, Minist Key Lab Safety Crit Software Dev & Verifica, Nanjing, Peoples R China.
   [Tao, Chuanqi] Nanjing Univ, Collaborat Innovat Ctr Novel Software Technol & In, Nanjing, Peoples R China.
C3 Nanjing University of Aeronautics & Astronautics; Nanjing University of
   Aeronautics & Astronautics; Nanjing University
RP Tao, CQ (corresponding author), Nanjing Univ Aeronaut & Astronaut, Coll Comp Sci & Technol, Nanjing, Peoples R China.; Tao, CQ (corresponding author), Nanjing Univ Aeronaut & Astronaut, Minist Key Lab Safety Crit Software Dev & Verifica, Nanjing, Peoples R China.; Tao, CQ (corresponding author), Nanjing Univ, Collaborat Innovat Ctr Novel Software Technol & In, Nanjing, Peoples R China.
EM taochuanqi@nuaa.edu.cn
FU Joint Funds of the National Natural Science Foundation of China
   [U224120044]; Key Program of the National Natural Science Foundation of
   China [62202223]; National Natural Science Foundation of China
   [BK20220881]; Natural Science Foundation of Jiangsu Province
   [KFKT2024B27]; Open Fund of the State Key Laboratory for Novel Software
   Technology [NT2024020]; Fundamental Research Funds for the Central
   Universities
FX I would like to declare on behalf of my co-authors that the work
   described was original research that has not been published previously,
   and is not under consideration for publication elsewhere, in whole or in
   part. All the authors listed have approved the manuscript that is
   enclosed. This work is supported by the Key Program of the National
   Natural Science Foundation of China (No. U224120044), the National
   Natural Science Foundation of China (No. 62202223), the Natural Science
   Foundation of Jiangsu Province (No. BK20220881), the Open Fund of the
   State Key Laboratory for Novel Software Technology (No. KFKT2024B27),
   and the Fundamental Research Funds for the Central Universities (No.
   NT2024020).DAS:The datasets generated and analyzed during the current
   study are available in the following Github repository,
   https://github.com/TestingAIGroup/DeepLID.
CR [Anonymous], 2016, The Udacity open source self-driving car project
   Bach S, 2015, PLOS ONE, V10, DOI 10.1371/journal.pone.0130140
   Carlini N, 2017, P IEEE S SECUR PRIV, P39, DOI 10.1109/SP.2017.49
   Chen JJ, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3394112
   Chen ZL, 2017, IEEE INT VEH SYM, P1856, DOI 10.1109/IVS.2017.7995975
   Du XN, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P477, DOI 10.1145/3338906.3338954
   Esteva A, 2017, NATURE, V542, P115, DOI 10.1038/nature21056
   Gal Y, 2016, PR MACH LEARN RES, V48
   Gerasimou S, 2020, PROC INT CONF SOFTW, P702, DOI 10.1145/3377811.3380391
   Guo JM, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P739, DOI 10.1145/3236024.3264835
   Haq FU., 2022, Empir Softw Eng, V27, P141, DOI [10.1007/s10664-022-10172-z, DOI 10.1007/S10664-022-10172-Z]
   Harel-Canada F, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P851, DOI 10.1145/3368089.3409754
   Houle ME, 2017, LECT NOTES COMPUT SC, V10609, P80, DOI 10.1007/978-3-319-68474-1_6
   Hu Q, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1158, DOI 10.1109/ASE.2019.00126
   Huang W, 2022, IEEE T RELIAB, V71, P1191, DOI 10.1109/TR.2021.3080664
   Huang XW, 2020, COMPUT SCI REV, V37, DOI 10.1016/j.cosrev.2020.100270
   Humbatova N, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P67, DOI 10.1145/3460319.3464825
   Goodfellow IJ, 2015, Arxiv, DOI [arXiv:1412.6572, DOI 10.48550/ARXIV.1412.6572]
   Julian KD, 2019, J GUID CONTROL DYNAM, V42, P598, DOI 10.2514/1.G003724
   Karger D.R., 2002, P 34 ANN ACM S THE, P741, DOI DOI 10.1145/509907.510013
   Kim J, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3546947
   Kim J, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1466, DOI 10.1145/3368089.3417065
   Kim J, 2019, PROC INT CONF SOFTW, P1039, DOI 10.1109/ICSE.2019.00108
   Kim S, 2020, ICSE 20, P197, DOI [10.1145/3387940.3391465, DOI 10.1145/3387940.3391465]
   Kim S, 2021, 2021 IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATION OF SOFTWARE TEST (AST 2021), P80, DOI 10.1109/AST52587.2021.00017
   Krizhevsky N, 2014, The cifar-10 dataset
   Krizhevsky N, 2014, The cifar-100 dataset
   Kurakin A., 2018, Artificial Intelligence Safety and Security, P99, DOI DOI 10.1201/9781351251389-8
   Lakshminarayanan B., 2017, Advances in neural information processing systems, P6405
   Lecun Y, 1998, P IEEE, V86, P2278, DOI 10.1109/5.726791
   LeCun Y., 1998, The MNIST Database of Handwritten Digits
   Li ZN, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P499, DOI 10.1145/3338906.3338930
   Li ZN, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2019), P89, DOI 10.1109/ICSE-NIER.2019.00031
   Liu TY, 2011, LEARNING TO RANK FOR INFORMATION RETRIEVAL, P1, DOI 10.1007/978-3-642-14267-3
   Ma L, 2018, IEEE INT CONF AUTOM, P120, DOI 10.1145/3238147.3238202
   Ma L, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P614, DOI [10.1109/saner.2019.8668044, 10.1109/SANER.2019.8668044]
   Ma L, 2018, PROC INT SYMP SOFTW, P100, DOI 10.1109/ISSRE.2018.00021
   Ma W, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3417330
   Ma X, 2018, 6 INT C LEARN REPR I
   Odena A, 2019, PR MACH LEARN RES, V97
   Ouyang TH, 2021, THIRD IEEE INTERNATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE TESTING (AITEST 2021), P29, DOI 10.1109/AITEST52744.2021.00016
   Papernot N, 2018, Arxiv, DOI arXiv:1610.00768
   Papernot N, 2016, 1ST IEEE EUROPEAN SYMPOSIUM ON SECURITY AND PRIVACY, P372, DOI 10.1109/EuroSP.2016.36
   Pei KX, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P1, DOI 10.1145/3132747.3132785
   Riccio V, 2020, EMPIR SOFTW ENG, V25, P5193, DOI 10.1007/s10664-020-09881-0
   Romano J., 2006, ANN M FLOR ASS I RES, DOI DOI 10.1017/CBO9781107415324.004
   Sekhon J, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2019), P85, DOI 10.1109/ICSE-NIER.2019.00030
   Seokhyun Lee, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P165, DOI 10.1145/3395363.3397346
   Shen EJ, 2020, IEEE INT CONF AUTOM, P410, DOI 10.1145/3324884.3416621
   Simonyan K, 2015, Arxiv, DOI arXiv:1409.1556
   Sun YC, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P320, DOI 10.1109/ICSE-Companion.2019.00134
   Sun YC, 2018, IEEE INT CONF AUTOM, P109, DOI 10.1145/3238147.3238172
   Tian YC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P303, DOI 10.1145/3180155.3180220
   Wang K, 2011, IEEE I CONF COMP VIS, P1457, DOI 10.1109/ICCV.2011.6126402
   Wang Z, 2021, PROC INT CONF SOFTW, P397, DOI 10.1109/ICSE43902.2021.00046
   Weiss M, 2021, 2021 IEEE/ACM THIRD INTERNATIONAL WORKSHOP ON DEEP LEARNING FOR TESTING AND TESTING FOR DEEP LEARNING (DEEPTEST 2021), P17, DOI 10.1109/DeepTest52559.2021.00009
   Weiss M, 2021, IEEE INT CONF SOFTW, P24, DOI 10.1109/ICST49551.2021.00015
   Wilcoxon F., 1992, Breakthroughs in statistics: methodology and distribution, P196, DOI [DOI 10.2307/3001968, 10.1093/jee/39.2.269, DOI 10.1093/JEE/39.2.269, DOI 10.1007/978-1-4612-4380-916]
   Xiao H, 2019, Fashion-mnist is a dataset of zalando's article images
   Xie XF, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3490489
   Xie XF, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P146, DOI 10.1145/3293882.3330579
   Yan M, 2023, Arxiv, DOI arXiv:2010.04946
   Yan SA, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P775, DOI 10.1145/3368089.3409671
   Yang Feng, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P177, DOI 10.1145/3395363.3397357
   Yuan YY, 2023, PROC INT CONF SOFTW, P1200, DOI 10.1109/ICSE48619.2023.00107
   Zhang JM, 2022, IEEE T SOFTWARE ENG, V48, P1, DOI 10.1109/TSE.2019.2962027
NR 66
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2024
VL 29
IS 5
AR 118
DI 10.1007/s10664-024-10524-x
PG 41
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZO3N6
UT WOS:001276200900006
DA 2024-08-05
ER

PT J
AU Al Alamin, MA
   Uddin, G
AF Al Alamin, Md Abdullah
   Uddin, Gias
TI How far are we with automated machine learning? characterization and
   challenges of AutoML toolkits
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Automated machine learning; AutoML; ML system engineering
ID SOFTWARE; DISCUSSIONS; TOPICS
AB Automated Machine Learning aka AutoML toolkits are low/no-code software that aim to democratize ML system application development by ensuring rapid prototyping of ML models and by enabling collaboration across different stakeholders in ML system design (e.g., domain experts, data scientists, etc.). It is thus important to know the state of current AutoML toolkits and the challenges ML practitioners face while using those toolkits. In this paper, we first offer a characterization of currently available AutoML toolits by analyzing 37 top AutoML tools and platforms. We find that the top AutoML platforms are mostly cloud-based. Most of the tools are optimized for the adoption of shallow ML models. Second, we present an empirical study of 14.3K AutoML related posts from Stack Overflow (SO) that we analyzed using topic modelling algorithm LDA (Latent Dirichlet Allocation) to understand the challenges of ML practitioners while using the AutoML toolkits. We find 13 topics in the AutoML related discussions in SO. The 13 topics are grouped into four categories: MLOps (43% of all questions), Model (28% questions), Data (27% questions), and Documentation (2% questions). Most questions are asked during Model training (29%) and Data preparation (25%) phases. AutoML practitioners find the MLOps topic category most challenging. Topics related to the MLOps category are the most prevalent and popular for cloud-based AutoML toolkits. Based on our study findings, we provide 15 recommendations to improve the adoption and development of AutoML toolkits.
C1 [Al Alamin, Md Abdullah] Univ Calgary, DISA Lab, Calgary, AB, Canada.
   [Uddin, Gias] York Univ, Toronto, ON, Canada.
C3 University of Calgary; York University - Canada
RP Uddin, G (corresponding author), York Univ, Toronto, ON, Canada.
EM gias98@gmail.com
OI Uddin, Gias/0000-0003-1376-095X
FU NSERC
FX No Statement Available
CR Abdellatif A, 2020, IEEE WORK CONF MIN S, P174, DOI 10.1145/3379597.3387472
   Agrapetidou A, 2021, APPL ECON LETT, V28, P5, DOI 10.1080/13504851.2020.1725230
   Ahmed S, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3239524
   Al Alamin MA, 2023, EMPIR SOFTW ENG, V28, DOI 10.1007/s10664-022-10244-0
   Al Alamin MA, 2021, IEEE WORK CONF MIN S, P46, DOI 10.1109/MSR52588.2021.00018
   Alshangiti Moayad, 2019, INT SYMP EMP SOFTWAR, P117, DOI DOI 10.1109/esem.2019.8870187
   Amershi S, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P291, DOI 10.1109/ICSE-SEIP.2019.00042
   Truong A, 2019, PROC INT C TOOLS ART, P1471, DOI 10.1109/ICTAI.2019.00209
   [Anonymous], 2022, Cloud AutoML Custom Machine Learning Models
   [Anonymous], 2022, AWS Announces Nine New Amazon SageMaker Capabilities
   [Anonymous], 2022, Amazon SageMaker Overview
   [Anonymous], 2023, Custom models with ml kit
   [Anonymous], 2020, Garner overview
   [Anonymous], 2022, Azure Machine Learning
   [Anonymous], 2024, Automated Machine Learning Market Size & Share Analysis-Growth Trends & Forecasts
   [Anonymous], 2022, MLBox platform overview
   [Anonymous], 2022, G2 overview
   [Anonymous], 2022, AutoFolio Automated Algorithm Selection with Hyperparameter Optimization Library
   [Anonymous], 2022, Amazon Lex-Conversational AI and Chatbots
   Arpteg A, 2018, EUROMICRO CONF PROC, P50, DOI 10.1109/SEAA.2018.00018
   ARUN R, 2010, LECT NOTES ARTIF INT, V6118
   Asuncion HU, 2010, 2010 ACM IEEE 32 INT, V1, P95
   Bagherzadeh M, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P432, DOI 10.1145/3338906.3338939
   Bahrampour S, 2016, Arxiv, DOI arXiv:1511.06435
   Bajaj K, 2014, P 11 WORK C MIN SOFT, P112
   Bangash Abdul Ali, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P260, DOI 10.1109/MSR.2019.00052
   Barua A, 2014, EMPIR SOFTW ENG, V19, P619, DOI 10.1007/s10664-012-9231-y
   Bavota G, 2014, IEEE T SOFTWARE ENG, V40, P671, DOI 10.1109/TSE.2013.60
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Bubeck S., 2023, Sparks of artificial general intelligence: Early experiments with gpt-4
   Chen TH, 2016, EMPIR SOFTW ENG, V21, P1843, DOI 10.1007/s10664-015-9402-8
   Chen ZP, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P750, DOI 10.1145/3368089.3409759
   Cleary B, 2009, EMPIR SOFTW ENG, V14, P93, DOI 10.1007/s10664-008-9095-3
   Cummaudo A, 2020, PROC INT CONF SOFTW, P1584, DOI 10.1145/3377811.3380404
   Das K., 2017, Int J Innov Res Comput Commun Eng, V5, P1301, DOI [10.15680/IJIRCCE.2017.0502001, DOI 10.15680/IJIRCCE.2017.0502001]
   Drozdal J, 2020, PROCEEDINGS OF THE 25TH INTERNATIONAL CONFERENCE ON INTELLIGENT USER INTERFACES, IUI 2020, P297, DOI 10.1145/3377325.3377501
   Elsken T, 2019, J MACH LEARN RES, V20
   Exchange S, 2020, Stack exchange data dump
   Fincher S, 2005, EXPERT SYST, V22, P89, DOI 10.1111/j.1468-0394.2005.00299.x
   H2O, 2022, ai: AI Cloud Platform
   Han JX, 2020, EMPIR SOFTW ENG, V25, P2694, DOI 10.1007/s10664-020-09819-6
   Haque MU, 2020, P 14 ACM IEEE INT S, P1
   He X, 2021, KNOWL-BASED SYST, V212, DOI 10.1016/j.knosys.2020.106622
   Hu JJ, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P3, DOI 10.1109/SANER.2015.7081810
   Humbatova N, 2020, PROC INT CONF SOFTW, P1110, DOI 10.1145/3377811.3380395
   Hutter Frank., 2019, Springer series on challenges in machine learning
   Jiang Heinrich, 2018, NeurIPS, P5546, DOI DOI 10.5555/3327345.3327458
   Islam MJ, 2019, Arxiv, DOI arXiv:1906.11940
   Karmaker SK, 2021, ACM COMPUT SURV, V54, DOI 10.1145/3470918
   Kendall MG, 1938, BIOMETRIKA, V30, P81, DOI 10.2307/2332226
   KRUSKAL WH, 1957, J AM STAT ASSOC, V52, P356, DOI 10.2307/2280906
   Lee DJ-L, 2020, IEEE Data Engineering Bulletin
   Li CM, 2019, IEEE I CONF COMP VIS, P8409, DOI 10.1109/ICCV.2019.00850
   Li H, 2018, EMPIR SOFTW ENG, V23, P2655, DOI 10.1007/s10664-018-9595-8
   Li Y, 2021, PROCEEDINGS OF THE 30TH ACM INTERNATIONAL CONFERENCE ON INFORMATION & KNOWLEDGE MANAGEMENT, CIKM 2021, P4853, DOI [10.1145/3459637.3482025, 10.1145/3459637.3483279]
   Li Y, 2023, VLDB J, V32, P389, DOI 10.1007/s00778-022-00752-2
   Linares-Vásquez M, 2013, IEEE WORK CONF MIN S, P93, DOI 10.1109/MSR.2013.6624014
   Majidi F, 2020, An empirical study on the usage of automated machine learning tools, P59
   Mazzawi H, 2019, INTERSPEECH, P1278, DOI 10.21437/Interspeech.2019-1916
   McCallum A.K., 2002, MALLET MACHINE LEARN
   Mellor J, 2021, PR MACH LEARN RES, V139
   OpenAI, 2023, Gpt-4 technical report
   Patel Kayur., 2008, AAAI, P1563
   Pham H, 2018, PR MACH LEARN RES, V80
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI 10.1109/TSE.2007.1016.
   Ramasubramanian C., 2013, International Journal of Advanced Research in Computer and Communication Engineering, V2, P4536
   Rao S, 2011, MSR, P43, DOI 10.1145/1985441.1985451
   RapidMiner, 2022, AMPLIFY IMPACT YOUR
   Rehurek R., 2010, P LREC 2010 WORKSH N, DOI DOI 10.13140/2.1.2393.1847
   Röder M, 2015, WSDM'15: PROCEEDINGS OF THE EIGHTH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING, P399, DOI 10.1145/2684822.2685324
   Roscher R, 2020, IEEE ACCESS, V8, P42200, DOI 10.1109/ACCESS.2020.2976199
   Rosen C, 2016, EMPIR SOFTW ENG, V21, P1192, DOI 10.1007/s10664-015-9379-3
   Sculley D, 2015, ADV NEUR IN, V28
   Shah V, 2021, INT CONF MANAGE DATA, P1584, DOI 10.1145/3448016.3457274
   Shoukang Hu, 2020, 2020 IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR). Proceedings, P12081, DOI 10.1109/CVPR42600.2020.01210
   Splunk, 2022, The Data Platform for the Hybrid World
   Sun X, 2015, Computer and Information Science, P22
   Sun XB, 2016, 2016 17TH IEEE/ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, ARTIFICIAL INTELLIGENCE, NETWORKING AND PARALLEL/DISTRIBUTED COMPUTING (SNPD), P357, DOI 10.1109/SNPD.2016.7515925
   Sun XB, 2015, INFORM SOFTWARE TECH, V66, P1, DOI 10.1016/j.infsof.2015.05.003
   Thomas SW, 2014, SCI COMPUT PROGRAM, V80, P457, DOI 10.1016/j.scico.2012.08.003
   Thomas SW, 2011, 8 WORK C MIN SOFTW R, P173
   Tian K, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P163, DOI 10.1109/MSR.2009.5069496
   Tse-Hsun Chen, 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P189, DOI 10.1109/MSR.2012.6224280
   Uddin G, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-10021-5
   Uddin G, 2017, IEEE INT CONF AUTOM, P159, DOI 10.1109/ASE.2017.8115629
   Wan ZY, 2021, IEEE T SOFTWARE ENG, V47, P1331, DOI 10.1109/TSE.2019.2921343
   Wan ZY, 2021, IEEE T SOFTWARE ENG, V47, P1857, DOI 10.1109/TSE.2019.2937083
   Wang D, 2023, ANN OPER RES, V324, P971, DOI 10.1007/s10479-021-04018-y
   Xin D, 2021, CHI '21: PROCEEDINGS OF THE 2021 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, DOI 10.1145/3411764.3445306
   Yang XL, 2016, J COMPUT SCI TECH-CH, V31, P910, DOI 10.1007/s11390-016-1672-0
   Zhang YH, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P129, DOI 10.1145/3213846.3213866
NR 91
TC 0
Z9 0
U1 8
U2 8
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2024
VL 29
IS 4
AR 91
DI 10.1007/s10664-024-10450-y
PG 43
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TY6J7
UT WOS:001244855600001
DA 2024-08-05
ER

PT J
AU Leven, W
   Broman, H
   Besker, T
   Torkar, R
AF Leven, William
   Broman, Hampus
   Besker, Terese
   Torkar, Richard
TI The broken windows theory applies to technical debt
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software engineering; broken windows theory; technical debt; controlled
   experiment; Bayesian data analysis; thematic analysis
ID IDENTIFICATION; DISORDER
AB Context: The term technical debt (TD) describes the aggregation of sub-optimal solutions that serve to impede the evolution and maintenance of a system. Some claim that the broken windows theory (BWT), a concept borrowed from criminology, also applies to software development projects. The theory states that the presence of indications of previous crime (such as a broken window) will increase the likelihood of further criminal activity; TD could be considered the broken windows of software systems.Objective: To empirically investigate the causal relationship between the TD density of a system and the propensity of developers to introduce new TD during the extension of that system.Method: The study used a mixed-methods research strategy consisting of a controlled experiment with an accompanying survey and follow-up interviews. The experiment had a total of 29 developers of varying experience levels completing system extension tasks in already existing systems with high or low TD density.Results: The analysis revealed significant effects of TD level on the subjects' tendency to re-implement (rather than reuse) functionality, choose non-descriptive variable names, and introduce other code smells identified by the software tool SonarQube, all with at least 95 % \documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document}$$95\%$$\end{document} credible intervals.Coclusions: Three separate significant results along with a validating qualitative result combine to form substantial evidence of the BWT's existence in software engineering contexts. This study finds that existing TD can have a major impact on developers propensity to introduce new TD of various types during development.
C1 [Besker, Terese] RISE Res Inst Sweden AB, S-41258 Gothenburg, Sweden.
   [Leven, William; Broman, Hampus; Torkar, Richard] Chalmers Univ Technol, Comp Sci & Engn, S-41296 Gothenburg, Sweden.
C3 RISE Research Institutes of Sweden; Chalmers University of Technology
RP Leven, W (corresponding author), Chalmers Univ Technol, Comp Sci & Engn, S-41296 Gothenburg, Sweden.
EM william@leven.id; namorben@gmail.com; terese.besker@ri.se;
   richard.torkar@gu.se
OI Besker, Terese/0000-0002-9811-000X
FU Vetenskapsrdet [2018-05973]; Swedish National Infrastructure for
   Computing (SNIC) - Swedish Research Council [2017.0071]; Marianne &
   Marcus Wallenberg
FX We want to thank the participants for their time, Jesper Olsson for
   inspiring us to undertake this study, and finally Felicia Wallin who
   assisted with the creation of graphical assets. The computations were
   enabled by resources provided by the Swedish National Infrastructure for
   Computing (SNIC), partially funded by the Swedish Research Council
   through grant agreement no. 2018-05973. Part of this research was funded
   by Marianne & Marcus Wallenberg(2017.0071).
CR Agile Manifesto, 2001, Manifesto for agile software development
   Alves NSR, 2016, INFORM SOFTWARE TECH, V70, P100, DOI 10.1016/j.infsof.2015.10.008
   Ampatzoglou A, 2015, INFORM SOFTWARE TECH, V64, P52, DOI 10.1016/j.infsof.2015.04.001
   Avgeriou P., 2016, Dagstuhl Reports, V6, DOI [DOI 10.4230/DAGREP.6.4.110, 10.4230/DAGREP.6.4.110]
   Avidan E, 2017, INT C PROGRAM COMPRE, P55, DOI 10.1109/ICPC.2017.27
   Basili Victor R, 1994, Encyclopedia of Software Engineering
   Bavota G, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P315, DOI [10.1145/2901739.2901742, 10.1109/MSR.2016.040]
   Besker T, 2020, J SYST SOFTWARE, V167, DOI 10.1016/j.jss.2020.110586
   Besker T, 2019, J SYST SOFTWARE, V156, P41, DOI 10.1016/j.jss.2019.06.004
   Besker T, 2018, PROC IEEE INT CONF S, P415, DOI 10.1109/ICSME.2018.00051
   Besker T, 2018, J SYST SOFTWARE, V135, P1, DOI 10.1016/j.jss.2017.09.025
   Borowa K, 2021, 2021 IEEE 18TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P115, DOI 10.1109/ICSA51549.2021.00019
   Braga AA, 2015, J RES CRIME DELINQ, V52, P567, DOI 10.1177/0022427815576576
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI 10.1191/1478088706qp063oa
   Brown N., 2010, P FSE SDP WORKSH FUT, P47
   Butler S, 2009, WORK CONF REVERSE EN, P31, DOI 10.1109/WCRE.2009.50
   Chatzigeorgiou A, 2014, INNOV SYST SOFTW ENG, V10, P3, DOI 10.1007/s11334-013-0205-z
   CIALDINI RB, 1990, J PERS SOC PSYCHOL, V58, P1015, DOI 10.1037/0022-3514.58.6.1015
   Corman H, 2002, Tech. Rep.1, DOI DOI 10.3386/W9061
   Cunningham W., 1993, OOPS Messenger, V4, P29
   de Sousa Demora B. C., 2020, Journal of the Brazilian Computer Society, V26, DOI 10.1186/s13173-019-0095-5
   Digkas G., 2020, On the temporality of introducing code technical debt, DOI [10.1007/978-3-030-58793-26, DOI 10.1007/978-3-030-58793-26]
   Digkas G, 2022, IEEE T SOFTWARE ENG, V48, P1705, DOI 10.1109/TSE.2020.3032557
   Fernández-Sánchez C, 2017, J SYST SOFTWARE, V124, P22, DOI 10.1016/j.jss.2016.10.018
   Gelman Andrew., 2020, arXiv, DOI DOI 10.48550/ARXIV.2011.01808
   Hunt Andrew, 1999, The Pragmatic Programmer: From Journeyman to Master
   Izurieta C, 2019, 2019 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT 2019), P33, DOI 10.1109/TechDebt.2019.00012
   Izurieta C, 2018, 2018 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT), P138, DOI 10.1145/3194164.3194167
   Kapser CJ, 2008, EMPIR SOFTW ENG, V13, P645, DOI 10.1007/s10664-008-9076-6
   Keizer K, 2008, SCIENCE, V322, P1681, DOI 10.1126/science.1161405
   KRAUSS RM, 1978, J EXP SOC PSYCHOL, V14, P109, DOI 10.1016/0022-1031(78)90064-1
   Lenarduzzi V, 2020, J SYST SOFTWARE, V169, DOI 10.1016/j.jss.2020.110710
   Li ZY, 2015, J SYST SOFTWARE, V101, P193, DOI 10.1016/j.jss.2014.12.027
   Martin RC, 2014, Clean code-A handbook of agile software craftmanship
   Martini A, 2017, ACM INT C P SE F1299, DOI DOI 10.1145/3120459.3120467
   Martini A, 2018, SCI COMPUT PROGRAM, V163, P42, DOI 10.1016/j.scico.2018.03.007
   Martini A, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1877
   Martini A, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P31, DOI 10.1145/2889160.2889224
   Martini A, 2015, 2015 12TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P1, DOI 10.1109/WICSA.2015.31
   McElreath R., 2020, Statistical Rethinking, DOI [10.1201/9780429029608, DOI 10.1201/9780429029608]
   Miller J, 2008, EMPIR SOFTW ENG, V13, P223, DOI 10.1007/s10664-008-9063-y
   Olsson J, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09998-w
   Ozkaya I, 2019, IEEE SOFTWARE, V36, P3, DOI 10.1109/MS.2019.2926545
   Pearl J., 2009, Causality: Models, Reasoning, and Inference, V2, DOI DOI 10.1017/CBO9780511803161
   PHILLIPS DL, 1972, AM J SOCIOL, V77, P921, DOI 10.1086/225231
   Rios N., 2020, Hearing the voice of software practitioners on causes, effects, and practices to deal with documentation debt, DOI [10.1007/978-3-030-44429-74, DOI 10.1007/978-3-030-44429-74]
   Rios N, 2020, EMPIR SOFTW ENG, V25, P3216, DOI 10.1007/s10664-020-09832-9
   Sampson RJ, 1999, AM J SOCIOL, V105, P603, DOI 10.1086/210356
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Sharma T, 2015, IEEE SOFTWARE, V32, P44, DOI 10.1109/MS.2015.105
   Siavvas M, 2022, ENTERP INF SYST-UK, V16, DOI 10.1080/17517575.2020.1824017
   Stol KJ, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3241743
   Thacher D, 2004, J CRIM LAW CRIM, V94, P381, DOI 10.2307/3491374
   Torkar R, 2020, Arxiv, DOI [arXiv:1809.09849, 10.48550/arXiv.1809.09849, DOI 10.48550/ARXIV.1809.09849, 10.48550/arXiv.1809.09849,1809.09849, DOI 10.48550/ARXIV.1809.09849,1809.09849]
   Tufano M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P403, DOI 10.1109/ICSE.2015.59
   Verdecchia R., 2020, Architectural technical debt: A grounded theory, DOI [10.1007/978-3-030-58923-314, DOI 10.1007/978-3-030-58923-314]
   Wasserstein RL, 2019, AM STAT, V73, P1, DOI 10.1080/00031305.2019.1583913
   Wilson J. Q, 1982, ATLANTIC MONTHLY, V249, P29, DOI DOI 10.4135/9781412959193.n281
   Wohlin C., 2012, Experimentation in Software Engineering, DOI [10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Yu LG, 2012, ASIA PAC SOFWR ENG, P105, DOI 10.1109/APSEC.2012.49
   Zimbardo P.G., 1969, NEBRASKA S MOTIVATIO, V17, P237
NR 61
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2024
VL 29
IS 4
AR 73
DI 10.1007/s10664-024-10456-6
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SD3C0
UT WOS:001232470300001
OA Green Submitted, hybrid
DA 2024-08-05
ER

PT J
AU Patel, H
   Adams, B
   Hassan, AE
AF Patel, Harsh
   Adams, Bram
   Hassan, Ahmed E.
TI Post deployment recycling of machine learning models
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Post deployment; Ensemble learning; Model recycling; Software defect
   prediction
AB Once a Machine Learning (ML) model is deployed, the same model is typically retrained from scratch, either on a scheduled interval or as soon as model drift is detected, to make sure the model reflects current data distributions and performance experiments. As such, once a new model is available, the old model typically is discarded. This paper challenges the notion of older models being useless by showing that old models still have substantial value compared to newly trained models, and by proposing novel post-deployment model recycling techniques that help make informed decisions on which old models to reuse and when to reuse. In an empirical study on eight long-lived Apache projects comprising a total of 84,343 commits, we analyze the performance of five model recycling strategies on three different types of Just-In-Time defect prediction models (Random Forest (RF), Logistic Regression (LR) and Neural Network (NN)). Comparison against traditional model retraining from scratch (RFS) shows that our approach significantly outperforms RFS in terms of recall, g-mean, AUC and F1 by up to a median of 30%\documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document}$$30\%$$\end{document}, 20%\documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document}$$20\%$$\end{document}, 11%\documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document}$$11\%$$\end{document} and 10%\documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document}$$10\%$$\end{document}, respectively, with the best recycling strategy (Model Stacking) outperforming the baseline in over 50%\documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document}$$50\%$$\end{document} of the projects. Our recycling strategies provide this performance improvement at the cost of a median of 2x to 6-17x slower time-to-inference compared to RFS, depending on the selected strategy and variant.
C1 [Patel, Harsh; Adams, Bram] Queens Univ, Kingston, ON, Canada.
   [Hassan, Ahmed E.] Queens Univ, Sch Comp, Kingston, ON, Canada.
C3 Queens University - Canada; Queens University - Canada
RP Patel, H (corresponding author), Queens Univ, Kingston, ON, Canada.
EM 21hsp2@queensu.ca; bram.adams@queensu.ca; ahmed@cs.queensu.ca
FU NSERC
FX No Statement Available
CR Brzezinski D, 2014, IEEE T NEUR NET LEAR, V25, P81, DOI 10.1109/TNNLS.2013.2251352
   Cabral GG, 2023, IEEE T SOFTWARE ENG, V49, P1342, DOI 10.1109/TSE.2022.3175789
   Cabral GG, 2019, PROC INT CONF SOFTW, P666, DOI 10.1109/ICSE.2019.00076
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chen LJ, 2023, Arxiv, DOI [arXiv:2305.05176, 10.48550/arXiv.2305.05176]
   Chen Z., 2018, Lifelong machine learning, V1
   Cruz YJ, 2022, COMPUT IND, V143, DOI 10.1016/j.compind.2022.103764
   De Lange M, 2022, IEEE T PATTERN ANAL, V44, P3366, DOI 10.1109/TPAMI.2021.3057446
   Diethe T, 2019, Arxiv, DOI arXiv:1903.05202
   Ekanayake J, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P51, DOI 10.1109/MSR.2009.5069480
   Elwell R, 2011, IEEE T NEURAL NETWOR, V22, P1517, DOI 10.1109/TNN.2011.2160459
   Falessi D, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3467895
   Falleri Jean-Remy, 2014, P 29 ACM IEEE INT C
   Forman G., 2006, Proceedings of the Twenty-Ninth Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, P252, DOI 10.1145/1148170.1148216
   Gao S., 2023, arXiv
   Herraiz I, 2013, ACM COMPUT SURV, V46, DOI 10.1145/2543581.2543595
   Hess MR, 2004, ANN M AM ED RES ASS, V1
   James G, 2013, SPRINGER TEXTS STAT, V103, P1, DOI 10.1007/978-1-4614-7138-7_1
   Jiang T, 2013, IEEE INT CONF AUTOM, P279, DOI 10.1109/ASE.2013.6693087
   Kamei Y, 2016, EMPIR SOFTW ENG, V21, P2072, DOI 10.1007/s10664-015-9400-x
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Keshavarz H, 2022, IEEE WORK CONF MIN S, P191, DOI 10.1145/3524842.3527996
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kononenko O, 2015, PROC IEEE INT CONF S, P111, DOI 10.1109/ICSM.2015.7332457
   Kubat M., 1997, Icml, V97, P179
   Lemaître G, 2017, J MACH LEARN RES, V18
   Lundberg SM, 2017, ADV NEUR IN, V30
   Macbeth G, 2011, UNIV PSYCHOL, V10, P545, DOI 10.11144/Javeriana.upsy10-2.cdcp
   McIntosh S, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P560, DOI 10.1145/3180155.3182514
   Mockus A, 2000, BELL LABS TECH J, V5, P169, DOI 10.1002/bltj.2229
   Olewicki D, 2024, Arxiv, DOI arXiv:2305.09824
   Olewicki D, 2022, PROC INT CONF SOFTW, P2177, DOI 10.1145/3510003.3510122
   Paleyes A, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3533378
   Patel H, 2023, Post-deployment model recycling
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Polikar R, 2001, IEEE T SYST MAN CY C, V31, P497, DOI 10.1109/5326.983933
   Pornprasit C, 2021, IEEE WORK CONF MIN S, P369, DOI 10.1109/MSR52588.2021.00049
   Quiñonero-Candela J, 2009, NEURAL INF PROCESS S, pXI
   Rajbahadur GK, 2021, IEEE T SOFTWARE ENG, V48, P2245, DOI 10.1109/TSE.2021.3056941
   Raschka S., 2018, J Open Source Softw, V3, P638, DOI [DOI 10.21105/JOSS.00638, 10.21105/joss.00638]
   Schelter S, 2015, On challenges in machine learning model management
   Song LY, 2023, EMPIR SOFTW ENG, V28, DOI 10.1007/s10664-023-10341-8
   Street W. N., 2001, KDD-2001. Proceedings of the Seventh ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, P377, DOI 10.1145/502512.502568
   Strubell E, 2019, Arxiv, DOI [arXiv:1906.02243, DOI 10.48550/ARXIV.1906.02243]
   Sun Y, 2018, IEEE T NEUR NET LEAR, V29, P4822, DOI 10.1109/TNNLS.2017.2775225
   Tabassum S, 2023, IEEE T SOFTWARE ENG, V49, P268, DOI 10.1109/TSE.2022.3150153
   Tan M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P99, DOI 10.1109/ICSE.2015.139
   Tantithamthavorn C, 2019, IEEE T SOFTWARE ENG, V45, P683, DOI 10.1109/TSE.2018.2794977
   Thong Hoang, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P34, DOI 10.1109/MSR.2019.00016
   Tsymbal A, 2008, INFORM FUSION, V9, P56, DOI 10.1016/j.inffus.2006.11.002
   Weisstein EW, 2004, Bonferroni correction
   WOLPERT DH, 1992, NEURAL NETWORKS, V5, P241, DOI 10.1016/S0893-6080(05)80023-1
   Woolson R. F., 2007, International Encyclopedia of Statistical Science, P1, DOI 10.1002/0470011815. b2a15177
   Zeng ZR, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P427, DOI 10.1145/3460319.3464819
   Zhao YH, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3567550
NR 55
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2024
VL 29
IS 4
AR 100
DI 10.1007/s10664-024-10492-2
PG 55
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UK9Q2
UT WOS:001248074900001
DA 2024-08-05
ER

PT J
AU Stefano, MD
   Nucci, DD
   Palomba, F
   Lucia, AD
AF Stefano, Manuel De
   Nucci, Dario Di
   Palomba, Fabio
   Lucia, Andrea De
TI An empirical study into the effects of transpilation on quantum circuit
   smells
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Empirical software engineering; Quantum computing; Quantum software
   engineering Quantum software quality; Code smells
AB Quantum computing is a promising field that can solve complex problems beyond traditional computers' capabilities. Developing high-quality quantum software applications, called quantum software engineering, has recently gained attention. However, quantum software development faces challenges related to code quality. A recent study found that many open-source quantum programs are affected by quantum-specific code smells, with long circuit being the most common. While the study provided relevant insights into the prevalence of code smells in quantum circuits, it did not explore the potential effect of transpilation, a necessary step for executing quantum computer programs, on the emergence of code smells. Indeed, transpilation might alter those characteristics employed to detect the presence of a smell on a circuit. To address this limitation, we present a new study investigating the impact of transpilation on quantum-specific code smells and how different target gate sets affect the results. We conducted experiments on 17 open-source quantum programs alongside a set of 100 synthetic circuits. We found that transpilation can significantly alter the metrics that are used to detect code smells, even into previously smell-free circuits, with the long circuit smell being the most susceptible to transpilation. Furthermore, the choice of the gate set significantly influences the presence and severity of code smells in transpiled circuits, highlighting the need for careful gate set selection to mitigate their impact. These findings have implications for circuit optimization and high-quality quantum software development. Further research is needed to understand the consequences of code smells and their potential impact on quantum computations, considering the characteristics and constraints of different gate sets and hardware platforms.
C1 [Stefano, Manuel De; Nucci, Dario Di; Palomba, Fabio; Lucia, Andrea De] Univ Salerno, Software Engn SeSa Lab, Salerno, Italy.
C3 University of Salerno
RP Stefano, MD (corresponding author), Univ Salerno, Software Engn SeSa Lab, Salerno, Italy.
EM madestefano@unisa.it; ddinucci@unisa.it; fpalomba@unisa.it;
   adelucia@unisa.it
OI De Stefano, Manuel/0000-0001-6038-4171
FU Project "QUASAR: QUAntum software engineering for Secure, Affordable,
   and Reliable systems" under the PRIN 2022 MUR program - EU - NGEU
   [2022T2E39C]
FX This work has been partially supported by project "QUASAR: QUAntum
   software engineering for Secure, Affordable, and Reliable systems",
   grant 2022T2E39C, under the PRIN 2022 MUR program funded by by the EU -
   NGEU.
CR Ahmad A, 2022, 2022 IEEE INTERNATIONAL CONFERENCE ON QUANTUM SOFTWARE (IEEE QSW 2022), P26, DOI 10.1109/QSW55613.2022.00019
   Aleksandrowicz Gadi, 2019, Zenodo, DOI 10.5281/ZENODO.2562110
   [Anonymous], 2024, Transpiler (qiskit.transpiler)-Qiskit 0.43.1 documentation
   [Anonymous], 2024, Qiskit 0.43.0 documentation
   [Anonymous], 2024, Api reference for qiskit.circuit.random.random_circuit
   Arcoverde R., 2011, Proceedings of the 4th Workshop on Refactoring Tools. WRT 11, P33, DOI [10.1145/1984732.1984740, DOI 10.1145/1984732.1984740]
   Armstrong RA, 2014, OPHTHAL PHYSL OPT, V34, P502, DOI 10.1111/opo.12131
   Awan U, 2022, INFORM SOFTWARE TECH, V147, DOI 10.1016/j.infsof.2022.106896
   Basili Victor R, 1994, Encyclopedia of Software Engineering
   Campos J, 2021, Arxiv, DOI arXiv:2103.16968
   Chatzigeorgiou A, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P106, DOI 10.1109/QUATIC.2010.16
   Chen QH, 2023, PROC INT CONF SOFTW, P358, DOI 10.1109/ICSE48619.2023.00041
   Cunningham W., 1993, OOPS Messenger, V4, P29
   De Stefano M, 2023, Arxiv, DOI [arXiv:2305.19683, 10.48550/arXiv.2305.19683]
   De Stefano M, 2022, J SYST SOFTWARE, V190, DOI 10.1016/j.jss.2022.111326
   Di Nucci D, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P612, DOI 10.1109/SANER.2018.8330266
   El Aoun MR, 2021, PROC IEEE INT CONF S, P343, DOI 10.1109/ICSME52107.2021.00037
   Fontana FA, 2016, EMPIR SOFTW ENG, V21, P1143, DOI 10.1007/s10664-015-9378-4
   Fowler M., 1999, Refactoring: Improving the Design of Existing Programs
   Friedman M, 1937, J AM STAT ASSOC, V32, P675, DOI 10.2307/2279372
   de la Barrera AG, 2023, J SOFTW-EVOL PROC, V35, DOI 10.1002/smr.2419
   Hedges L.V., 1981, Journal of Educational Statistics, V6, P107, DOI [DOI 10.3102/10769986006002107, 10.3102/10769986006002107]
   Hoare T, 2005, COMPUT J, V48, P49, DOI 10.1093/comjnl/bxh065
   Knight W, 2018, MIT Technology Review
   Lin T., 2021, APPL CRYPTOGRAPHY CO, V1, P171
   Liu H, 2021, IEEE T SOFTWARE ENG, V47, P1811, DOI 10.1109/TSE.2019.2936376
   Moguel Enrique, 2020, QCE, P5
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Nielsen M.A., 2010, Quantum computation and quantum information, DOI 10.1017/cbo9780511976667
   Palomba F, 2016, 2016 IEEE 24TH INTERNATIONAL CONFERENCE ON PROGRAM COMPREHENSION (ICPC)
   Palomba F, 2018, INFORM SOFTWARE TECH, V99, P1, DOI 10.1016/j.infsof.2018.02.004
   Palomba F, 2015, IEEE T SOFTWARE ENG, V41, P462, DOI 10.1109/TSE.2014.2372760
   Paltenghi M, 2022, P ACM PROGRAM LANG, V6, DOI 10.1145/3527330
   Pecorelli F, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10126-5
   Pecorelli F, 2020, IEEE WORK CONF MIN S, P220, DOI 10.1145/3379597.3387457
   Pecorelli F, 2020, J SYST SOFTWARE, V169, DOI 10.1016/j.jss.2020.110693
   Pecorelli F, 2019, INT C PROGRAM COMPRE, P93, DOI 10.1109/ICPC.2019.00023
   Piattini Mario, 2020, ACM SIGSOFT Software Engineering Notes, V45, P12, DOI 10.1145/3402127.3402131
   Piattini M, 2021, IT PROF, V23, P62, DOI 10.1109/MITP.2020.3019522
   Piattini Mario, 2020, QANSWER, P1
   Shi YN, 2020, P IEEE, V108, P1353, DOI 10.1109/JPROC.2020.2994765
   Tsantalis N, 2009, IEEE T SOFTWARE ENG, V35, P347, DOI 10.1109/TSE.2009.1
   Tufano M, 2016, IEEE INT CONF AUTOM, P4, DOI 10.1145/2970276.2970340
   Tufano M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P403, DOI 10.1109/ICSE.2015.59
   Wilcoxon F, 1992, Springer Series in Statistics, P196, DOI DOI 10.1007/978-1-4612-4380-9_16
   Williams C. P., 2011, Explorations in quantum computing, texts in computer science, P51, DOI DOI 10.1007/978-1-84628-887-6_2
   Yarkoni S, 2022, REP PROG PHYS, V85, DOI 10.1088/1361-6633/ac8c54
   Zhao J., 2020, arXiv
NR 48
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAY
PY 2024
VL 29
IS 3
AR 61
DI 10.1007/s10664-024-10461-9
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RE2T9
UT WOS:001225935100001
OA hybrid
DA 2024-08-05
ER

PT J
AU Li, YH
   Dang, XQ
   Ma, L
   Klein, J
   Bissyandé, TF
AF Li, Yinghua
   Dang, Xueqi
   Ma, Lei
   Klein, Jacques
   Bissyande, Tegawende F.
TI Prioritizing test cases for deep learning-based video classifiers
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Test input prioritization; Deep neural network; Learning to rank;
   Labeling
AB The widespread adoption of video-based applications across various fields highlights their importance in modern software systems. However, in comparison to images or text, labelling video test cases for the purpose of assessing system accuracy can lead to increased expenses due to their temporal structure and larger volume. Test prioritization has emerged as a promising approach to mitigate the labeling cost, which prioritizes potentially misclassified test inputs so that such inputs can be identified earlier with limited time and manual labeling efforts. However, applying existing prioritization techniques to video test cases faces certain limitations: they do not account for the unique temporal information present in video data. Unlike static image datasets that only contain spatial information, video inputs consist of multiple frames that capture the dynamic changes of objects over time. In this paper, we propose VRank, the first test prioritization approach designed specifically for video test inputs. The fundamental idea behind VRank is that video-type tests with a higher probability of being misclassified by the evaluated DNN classifier are considered more likely to reveal faults and will be prioritized higher. To this end, we train a ranking model with the aim of predicting the probability of a given test input being misclassified by a DNN classifier. This prediction relies on four types of generated features: temporal features (TF), video embedding features (EF), prediction features (PF), and uncertainty features (UF). We rank all test inputs in the target test set based on their misclassification probabilities. Videos with a higher likelihood of being misclassified will be prioritized higher. We conducted an empirical evaluation to assess the performance of VRank, involving 120 subjects with both natural and noisy datasets. The experimental results reveal VRank outperforms all compared test prioritization methods, with an average improvement of 5.76%similar to\documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document}$$\sim $$\end{document}46.51% on natural datasets and 4.26%similar to\documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document}$$\sim $$\end{document}53.56% on noisy datasets.
C1 [Li, Yinghua; Dang, Xueqi; Klein, Jacques; Bissyande, Tegawende F.] Univ Luxembourg, SnT Ctr, Esch Sur Alzette, Luxembourg.
   [Ma, Lei] Univ Tokyo, Tokyo, Japan.
C3 University of Luxembourg; University of Tokyo
RP Dang, XQ (corresponding author), Univ Luxembourg, SnT Ctr, Esch Sur Alzette, Luxembourg.
EM yinghua.li@uni.lu; xueqi.dang@uni.lu; ma.lei@acm.org;
   jacques.klein@uni.lu; tegawende.bissyande@uni.lu
OI LI, Yinghua/0000-0003-1390-0393
FU H2020 European Research Council [949014]; European Research Council
   (ERC) under the European Union
FX This work was supported by the European Research Council (ERC) under the
   European Union's Horizon 2020 research and innovation program (grant
   agreement No. 949014).DAS:The datasets and code used in the present
   study are available in our repository:
   https://github.com/yinghuali/VRank
CR Aggarwal A, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P625, DOI 10.1145/3338906.3338937
   Agrawal Aman Kumar, 2020, 2020 Fifth International Conference on Research in Computational Intelligence and Communication Networks (ICRCICN), P71, DOI 10.1109/ICRCICN50933.2020.9296156
   Ahmed S, 2023, CIRC SYST SIGNAL PR, V42, P7433, DOI 10.1007/s00034-023-02454-8
   Benesty J, 2009, SPRINGER TOP SIGN PR, V2, P1, DOI 10.1007/978-3-642-00296-0
   Bouhsissin S, 2021, 2021 INT C DIG AG TE, P39
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Byun T, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE TESTING (AITEST), P63, DOI 10.1109/AITest.2019.000-6
   Campos HD, 2017, XXXI BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2017), P34, DOI 10.1145/3131151.3131170
   Chen JS, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3391613
   Chen TQ, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P785, DOI 10.1145/2939672.2939785
   Cheng DW, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2018), P313, DOI 10.1109/QRS.2018.00044
   Covington P, 2016, PROCEEDINGS OF THE 10TH ACM CONFERENCE ON RECOMMENDER SYSTEMS (RECSYS'16), P191, DOI 10.1145/2959100.2959190
   Dang X, 2024, IEEE Trans Softw Eng
   Dang XQ, 2024, ACM T SOFTW ENG METH, V33, DOI 10.1145/3607191
   Di Nardo D, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P302, DOI 10.1109/ICST.2013.27
   Do H, 2006, IEEE T SOFTWARE ENG, V32, P733, DOI 10.1109/TSE.2006.92
   Du L, 2020, IEEE WINT CONF APPL, P3139, DOI 10.1109/WACV45572.2020.9093537
   Tran D, 2015, IEEE I CONF COMP VIS, P4489, DOI 10.1109/ICCV.2015.510
   Du XN, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P477, DOI 10.1145/3338906.3338954
   Elbaum S, 2002, IEEE T SOFTWARE ENG, V28, P159, DOI 10.1109/32.988497
   Fang CR, 2014, SOFTWARE QUAL J, V22, P335, DOI 10.1007/s11219-013-9224-0
   Feichtenhofer C, 2019, IEEE I CONF COMP VIS, P6201, DOI 10.1109/ICCV.2019.00630
   Feng Y, 2020, P 29 ACM SIGSOFT INT, P177
   Ghosh S, 2019, 2019 INT C DAT SCI C, P1
   He KM, 2016, PROC CVPR IEEE, P770, DOI 10.1109/CVPR.2016.90
   Henard C, 2016, PROC INT CONF SOFTW, P523, DOI 10.1145/2884781.2884791
   Hu Q, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P917, DOI 10.1109/ASE51524.2021.9678672
   Humbatova N, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P67, DOI 10.1145/3460319.3464825
   Jahangirova G, 2020, IEEE INT CONF SOFTW, P74, DOI 10.1109/ICST46399.2020.00018
   Jia YQ, 2014, PROCEEDINGS OF THE 2014 ACM CONFERENCE ON MULTIMEDIA (MM'14), P675, DOI 10.1145/2647868.2654889
   Ke GL, 2017, ADV NEUR IN, V30
   Kelley K, 2012, PSYCHOL METHODS, V17, P137, DOI 10.1037/a0028086
   Kezebou L, 2022, SPIE, V12100, P240
   Kim B, 2016, ADV NEUR IN, V29
   Kim J, 2019, PROC INT CONF SOFTW, P1039, DOI 10.1109/ICSE.2019.00108
   Kim TK, 2015, KOREAN J ANESTHESIOL, V68, P540, DOI 10.4097/kjae.2015.68.6.540
   Krizhevsky A, 2017, COMMUN ACM, V60, P84, DOI 10.1145/3065386
   Kuehne H, 2011, IEEE I CONF COMP VIS, P2556, DOI 10.1109/ICCV.2011.6126543
   Li Y, 2022, arXiv
   Li Y, 2024, ACM Trans Softw Eng Methodol
   Li ZN, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P499, DOI 10.1145/3338906.3338930
   Liberti L, 2014, SIAM REV, V56, P3, DOI 10.1137/120875909
   Liu WB, 2017, NEUROCOMPUTING, V234, P11, DOI 10.1016/j.neucom.2016.12.038
   Lou YL, 2019, ADV COMPUT, V113, P1, DOI 10.1016/bs.adcom.2018.10.001
   Lou YL, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P46, DOI 10.1109/ISSRE.2015.7381798
   Luo Q, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P559, DOI 10.1145/2950290.2950344
   Ma L, 2018, Arxiv, DOI arXiv:1806.07723
   Ma L, 2018, IEEE INT CONF AUTOM, P120, DOI 10.1145/3238147.3238202
   Ma L, 2018, PROC INT SYMP SOFTW, P100, DOI 10.1109/ISSRE.2018.00021
   Ma W, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3417330
   Malkauthekar M, 2013, 3 INT C COMP INT INF, P503
   Mikolajczyk Agnieszka, 2018, 2018 International Interdisciplinary PhD Workshop (IIPhDW), P117, DOI 10.1109/IIPHDW.2018.8388338
   Minka T.P., 2003, A comparison of numerical optimizers for logistic regression, P1
   Nguyen QH, 2021, MATH PROBL ENG, V2021, DOI 10.1155/2021/4832864
   Oord A.v.d., 2016, arXiv, DOI DOI 10.48550/ARXIV.1609.03499
   Papadakis M, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P1, DOI 10.1109/ICST.2014.11
   Paszke A, 2019, ADV NEUR IN, V32
   Paul S, 2023, Video classification with transformers
   Pei KX, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P1, DOI 10.1145/3132747.3132785
   Peng L, 2021, AUTOMOTIVE INNOV, V4, P241, DOI 10.1007/s42154-021-00154-0
   Perez L, 2017, Arxiv, DOI [arXiv:1712.04621, DOI 10.48550/ARXIV.1712.04621]
   Pillichshammer F, 2000, ARCH MATH, V74, P472, DOI 10.1007/PL00000428
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Salinas D, 2020, INT J FORECASTING, V36, P1181, DOI 10.1016/j.ijforecast.2019.07.001
   Shin D, 2019, SOFTW TEST VERIF REL, V29, DOI 10.1002/stvr.1695
   Shorten C, 2019, J BIG DATA-GER, V6, DOI 10.1186/s40537-019-0197-0
   Soomro K, 2012, Arxiv, DOI arXiv:1212.0402
   Sun YC, 2019, Arxiv, DOI arXiv:1803.04792
   Taylor L, 2018, 2018 IEEE SYMPOSIUM SERIES ON COMPUTATIONAL INTELLIGENCE (IEEE SSCI), P1542, DOI 10.1109/SSCI.2018.8628742
   Team O, 2023, Open source computer vision library
   Tonella P, 2006, PROC IEEE INT CONF S, P123
   Tran D, 2017, Arxiv, DOI [arXiv:1708.05038, DOI 10.48550/ARXIV.1708.05038]
   Tran D, 2018, PROC CVPR IEEE, P6450, DOI 10.1109/CVPR.2018.00675
   Wang D, 2014, IEEE IJCNN, P112, DOI 10.1109/IJCNN.2014.6889457
   Wang H, 2013, IEEE I CONF COMP VIS, P3551, DOI 10.1109/ICCV.2013.441
   Wang LM, 2018, PROC CVPR IEEE, P1430, DOI 10.1109/CVPR.2018.00155
   Wang Z, 2021, PROC INT CONF SOFTW, P397, DOI 10.1109/ICSE43902.2021.00046
   Wang ZX, 2024, SIGNAL IMAGE VIDEO P, V18, P1015, DOI 10.1007/s11760-023-02823-5
   Weiss M, 2022, PROCEEDINGS OF THE 31ST ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2022, P139, DOI 10.1145/3533767.3534375
   Xie XY, 2011, J SYST SOFTWARE, V84, P544, DOI 10.1016/j.jss.2010.11.920
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Yoo S, 2009, P 18 INT S SOFTW TES, P201
   Zeng D., 2014, P 25 INT C COMP LING, P2335
NR 83
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2024
VL 29
IS 5
AR 111
DI 10.1007/s10664-024-10520-1
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZG2E1
UT WOS:001274068200001
OA hybrid
DA 2024-08-05
ER

PT J
AU Verwijs, C
   Russo, D
AF Verwijs, Christiaan
   Russo, Daniel
TI Do Agile scaling approaches make a difference? an empirical comparison
   of team effectiveness across popular scaling approaches
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Agile methodologies; Scaling approaches; Team effectiveness;
   Organizational challenges; Empirical assessment
ID SOFTWARE-DEVELOPMENT; SUCCESS FACTORS; SCRUM; CHALLENGES
AB With the prevalent use of Agile methodologies, organizations are grappling with the challenge of scaling development across numerous teams. This has led to the emergence of diverse scaling strategies, from complex ones such as "SAFe", to more simplified methods e.g., "LeSS", with some organizations devising their unique approaches. While there have been multiple studies exploring the organizational challenges associated with different scaling approaches, so far, no one has compared these strategies based on empirical data derived from a uniform measure. This makes it hard to draw robust conclusions about how different scaling approaches affect Agile team effectiveness. Thus, the objective of this study is to assess the effectiveness of Agile teams across various scaling approaches, including "SAFe", "LeSS", "Scrum of Scrums", and custom methods, as well as those not using scaling. This study focuses initially on responsiveness, stakeholder concern, continuous improvement, team autonomy, management approach, and overall team effectiveness, followed by an evaluation based on stakeholder satisfaction regarding value, responsiveness, and release frequency. To achieve this, we performed a comprehensive survey involving 15,078 members of 4,013 Agile teams to measure their effectiveness, combined with satisfaction surveys from 1,841 stakeholders of 529 of those teams. We conducted a series of inferential statistical analyses, including Analysis of Variance and multiple linear regression, to identify any significant differences, while controlling for team experience and organizational size. The findings of the study revealed some significant differences, but their magnitude and effect size were considered too negligible to have practical significance. In conclusion, the choice of Agile scaling strategy does not markedly influence team effectiveness, and organizations are advised to choose a method that best aligns with their previous experiences with Agile, organizational culture, and management style.
C1 [Verwijs, Christiaan] Liberators BV, Utrecht, Netherlands.
   [Russo, Daniel] Aalborg Univ, Dept Comp Sci, Copenhagen, Denmark.
C3 Aalborg University
RP Russo, D (corresponding author), Aalborg Univ, Dept Comp Sci, Copenhagen, Denmark.
EM daniel.russo@cs.aau.dk
RI Russo, Daniel/O-3002-2019
OI Russo, Daniel/0000-0001-7253-101X
FU Aalborg University
FX The authors would like to thank Rasmus Broholm for feedback on an
   earlier version of this manuscript.
CR Almeida F., 2021, J. Appl. Sci. Manag. Eng. Technol., V2, P16
   Alqudah M., 2016, International Journal on Advanced Science, Engineering and Information Technology, V6, P1, DOI [DOI 10.18517/IJASEIT.6.6.1374, 10.18517/ijaseit.6.6.1374, 10.18517/IJASEIT.6.6.1374]
   Ambler S, 2020, Introduction to disciplined agile delivery
   Ben Othman H, 2016, 2016 INTERNATIONAL CONFERENCE ON DIGITAL ECONOMY (ICDEC), P16, DOI 10.1109/ICDEC.2016.7563140
   Bittner K., 2017, The Nexus Framework for scaling Scrum: Continuously Delivering an integrated product with multiple Scrum teams
   BROWN MB, 1974, J AM STAT ASSOC, V69, P364, DOI 10.2307/2285659
   Chow T, 2008, J SYST SOFTWARE, V81, P961, DOI 10.1016/j.jss.2007.08.020
   Ciancarini P, 2018, Synergies between knowledge engineering and software engineering, P151
   Ciancarini P, 2022, 2022 ACM/IEEE 44TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2022), P175, DOI [10.1145/3510457.3513028, 10.1109/ICSE-SEIP55303.2022.9794087]
   Cohen J., 2013, APPL MULTIPLE REGRES
   Cohen J., 1988, Statistical power analysis for the behavioral sciences
   Conboy K, 2019, IEEE SOFTWARE, V36, P44, DOI 10.1109/MS.2018.2884865
   Cook T. D., 1979, Quasi-experimentation: Design analysis issues for field settings, V351
   Cozby PC., 2012, Methods in behavioral research
   De Carvalho J., 2014, American International Journal of Contemporary Research, V4, P6, DOI DOI 10.5539/ASS.V11N4P371
   Bermejo PHD, 2014, PROC TECH, V16, P718, DOI 10.1016/j.protcy.2014.10.021
   DeKoning T, 2019, Tech rep
   Dikert K, 2016, J SYST SOFTWARE, V119, P87, DOI 10.1016/j.jss.2016.06.013
   Dingsoyr Torgeir, 2013, Software Engineering Notes, V38, P33, DOI 10.1145/2507288.2507322
   Dingsoyr T, 2018, EMPIR SOFTW ENG, V23, P490, DOI 10.1007/s10664-017-9524-2
   Dingsoyr T, 2014, LECT NOTES COMPUT SC, V8892, P273, DOI 10.1007/978-3-319-13835-0_20
   Doolen TL, 2003, IEEE T ENG MANAGE, V50, P285, DOI 10.1109/TEM.2003.817296
   Ebert C, 2017, IEEE SOFTWARE, V34, P98, DOI 10.1109/MS.2017.4121226
   Edison H, 2022, IEEE T SOFTWARE ENG, V48, P2709, DOI 10.1109/TSE.2021.3069039
   Edmondson AC, 2014, ANNU REV ORGAN PSYCH, V1, P23, DOI 10.1146/annurev-orgpsych-031413-091305
   EFRON B, 1979, ANN STAT, V7, P1, DOI 10.1214/aos/1176344552
   Eilers K, 2022, TECHNOL FORECAST SOC, V179, DOI 10.1016/j.techfore.2022.121650
   Ellis PD, 2010, ESSENTIAL GUIDE TO EFFECT SIZES: STATISTICAL POWER, META-ANALYSIS AND THE INTERPRETATION OF RESEARCH RESULTS, P1
   Faul F, 2009, BEHAV RES METHODS, V41, P1149, DOI 10.3758/BRM.41.4.1149
   Fowler M., 2001, Software Development, V9, P28
   Gaskin J., 2016, AMOS Plugin In: Gaskination's StatWiki
   Gaskin J., 2012, Data screening
   Goodwin K. A., 2016, Research in Psychology: Methods and Design
   Hackman R., 1976, The design of self-managing work groups, DOI [10.21236/ADA036731, DOI 10.21236/ADA036731]
   HairJr JF, 2019, CEngage
   Henseler J, 2015, J ACAD MARKET SCI, V43, P115, DOI 10.1007/s11747-014-0403-8
   Hinshelwood M, 2023, The safe delusion: Information for decision-makers considering the safe framework
   Hoda R, 2011, INFORM SOFTWARE TECH, V53, P521, DOI 10.1016/j.infsof.2010.10.009
   Inc SA, 2018, Scaled Agile scaled agile framework-safe for lean enterprise
   Ioannidis JPA, 2005, PLOS MED, V2, P696, DOI 10.1371/journal.pmed.0020124
   Junker TL, 2022, HUM RELAT, V75, P2189, DOI 10.1177/00187267211030101
   KAHN WA, 1990, ACAD MANAGE J, V33, P692, DOI 10.5465/256287
   Kalenda M, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1954
   Keeling T, 2015, BUILDINGS, V5, P880, DOI 10.3390/buildings5030880
   Kelley K, 2012, PSYCHOL METHODS, V17, P137, DOI 10.1037/a0028086
   Kline TJ, 1997, Org Dev J
   Kniberg H, 2014, Spotify engineering culture
   Kosti M., 2017, Eur Proj Manag J, V7, P36
   Kropp M, 2020, J SYST SOFTWARE, V164, DOI 10.1016/j.jss.2020.110544
   Kropp M, 2016, LECT NOTES COMPUT SC, V10027, P416, DOI 10.1007/978-3-319-49094-6_28
   Kupiainen E, 2014, INT WORKSH EM TRENDS, P23
   Laanti M, 2017, P XP2017 SCI WORKSH, P1
   LeSS Framework, 2023, LeSS Framework
   Mahnic V, 2007, ELEKTROTEH VESTN, V74, P241
   Maples C, 2009, AGILE 2009 CONFERENCE, P90, DOI 10.1109/AGILE.2009.62
   Mathieu J, 2008, J MANAGE, V34, P410, DOI 10.1177/0149206308316061
   Meade AW, 2012, PSYCHOL METHODS, V17, P437, DOI 10.1037/a0028085
   Messina A., 2016, CrossTalk, V29, P25
   Mishra D, 2011, J SOFTW MAINT EVOL-R, V23, P549, DOI 10.1002/smr.528
   Moe NB, 2010, INFORM SOFTWARE TECH, V52, P480, DOI 10.1016/j.infsof.2009.11.004
   Nexus, 2023, Nexus
   OLKIN I, 1995, PSYCHOL BULL, V118, P155, DOI 10.1037/0033-2909.118.1.155
   Paasivaara M, 2018, EMPIR SOFTW ENG, V23, P2550, DOI 10.1007/s10664-017-9555-8
   Paasivaara M, 2016, INT CONF GLOBAL SOFT, P74, DOI 10.1109/ICGSE.2016.34
   Purvanova RK, 2022, APPL PSYCHOL-INT REV, V71, P1082, DOI 10.1111/apps.12348
   Putta A, 2018, LECT NOTES COMPUT SC, V11271, P334, DOI 10.1007/978-3-030-03673-7_24
   Riedel A, 2021, Success factors and challenges in the coordination of inter-team dependencies within scaling agile frameworks-a qualitative study of nexus, less and safe
   Russo D, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3464938
   Russo D, 2021, ACM COMPUT SURV, V54, DOI 10.1145/3447580
   Russo D, 2018, PROC INT CONF SOFTW, P47, DOI 10.1145/3183428.3183435
   Santos P.D. O., 2022, Requirements engineering, P1
   Schwaber K, 2020, The scrum guide, P17
   Schwaber K., 2004, Agile project management with Scrum
   Scrum@Scale, 2023, Scrum@Scale
   Smithson M, 2003, Confidence intervals, P140
   Strode D, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10115-0
   Strode DE, 2012, J SYST SOFTWARE, V85, P1222, DOI 10.1016/j.jss.2012.02.017
   Sutherland J., 2001, Cutter IT Journal, V14, P5
   Thompson K, 2013, Recipes for agile governance in the enterprise
   Tripp JF, 2016, J ASSOC INF SYST, V17, P267
   Uludag Ö, 2022, J SYST SOFTWARE, V194, DOI 10.1016/j.jss.2022.111473
   Vacha-Haase T, 2004, J COUNS PSYCHOL, V51, P473, DOI 10.1037/0022-0167.51.4.473
   van Kelle E, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING CHASE 2015, P77, DOI 10.1109/CHASE.2015.24
   van Waardenburg G, 2013, INFORM SOFTWARE TECH, V55, P2154, DOI 10.1016/j.infsof.2013.07.012
   VersionOne, 2022, Tech. rep.
   Verwijs C, 2023, Do agile scaling approaches make a difference? an empirical comparison of team effectiveness across popular scaling approaches, DOI [10.5281/zenodo.8396487, DOI 10.5281/ZENODO.8396487]
   Verwijs C, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3571849
   Wageman R., 2005, The Journal of Applied Behavioural Science, V41, P373, DOI [10.1177/0021886305281984, DOI 10.1177/0021886305281984]
   Wilcox R, 2012, INTRODUCTION TO ROBUST ESTIMATION AND HYPOTHESIS TESTING, 3RD EDITION, P1, DOI 10.1016/B978-0-12-386983-8.00001-9
   Wolpers S, 2023, SAFe 's NPS Score as a Scaling Framework Is -56 According to 505 Survey Participants
NR 90
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2024
VL 29
IS 4
AR 75
DI 10.1007/s10664-024-10481-5
PG 57
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SM1T9
UT WOS:001234785800002
OA hybrid, Green Submitted
DA 2024-08-05
ER

PT J
AU Jiang, SY
   Chen, YW
   He, ZH
   Shang, YP
   Ma, L
AF Jiang, Siyu
   Chen, Yuwen
   He, Zhenhang
   Shang, Yunpeng
   Ma, Le
TI Cross-project defect prediction via semantic and syntactic encoding
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Cross project defect prediction; Semantic and syntactic information;
   Abstract syntax tree; Software reliability
ID MACHINE
AB Cross-Project Defect Prediction (CPDP) is a promising research field that focuses on detecting defects in projects with limited labeled data by utilizing prediction models trained on projects with abundant data. However, previous CPDP approaches based on Abstract Syntax Tree (AST) have often encountered challenges in effectively acquiring semantic and syntactic information, resulting in their limited ability to combine both productively. This issue arises primarily from the practice of flattening the AST into a linear sequence in many AST-based methods, leading to the loss of hierarchical syntactic structure and structural information within the code. Besides, other AST-based methods use a recursive way to traverse the tree-structured AST, which is susceptible to gradient vanishing. To alleviate these concerns, we introduce a novel CPDP method named defect prediction via Semantic and Syntactic Encoding (SSE) that enhances Zhang's approach by encoding semantic and syntactic information while retaining and considering AST structure. Specifically, we perform pre-training on a large corpus using a language model to learn semantic information. Next, we present a new rule for splitting AST into subtrees to avoid vanishing gradients. Then, the absolute paths originating from the root node and leading to the leaf nodes are encoded as hierarchical syntactic information. Finally, we design an encoder to integrate syntactic information into semantic information and leverage Bi-directional Long-Short Term Memory to learn the entire tree representation for prediction. Experimental results on 12 benchmark projects illustrate that the SSE method we proposed surpasses current state-of-the-art methods.
C1 [Jiang, Siyu] Guangdong Univ Foreign Studies, Sch Informat Sci & Technol, Guangzhou Key Lab Multilingual Intelligent Proc, Guangzhou, Peoples R China.
   [Chen, Yuwen; He, Zhenhang] Guangdong Univ Foreign Studies, Guangzhou, Peoples R China.
   [Shang, Yunpeng; Ma, Le] Guangzhou City Univ Technol, Guangzhou, Peoples R China.
C3 Guangdong University of Foreign Studies; Guangdong University of Foreign
   Studies
RP Jiang, SY (corresponding author), Guangdong Univ Foreign Studies, Sch Informat Sci & Technol, Guangzhou Key Lab Multilingual Intelligent Proc, Guangzhou, Peoples R China.
EM jiangsiyu@gdufs.edu.cn; 20221050011@gdufs.edu.cn;
   20221050030@gdufs.edu.cn; 891798469@qq.com; 80796487@qq.com
CR Alon U., 2018, arXiv
   Alon U, 2018, ACM SIGPLAN NOTICES, V53, P404, DOI [10.1145/3192366.3192412, 10.1145/3296979.3192412]
   Amasaki S, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P215, DOI 10.1109/ISSRE.2003.1251044
   Lopez JAH, 2022, Arxiv, DOI arXiv:2206.11719
   BENGIO Y, 1994, IEEE T NEURAL NETWOR, V5, P157, DOI 10.1109/72.279181
   bin Faiz R, 2023, ELECTRONICS-SWITZ, V12, DOI 10.3390/electronics12030514
   Boetticher G, 2007, The PROMISE repository of empirical software engineering data
   Cabral GG, 2023, EMPIR SOFTW ENG, V28, DOI 10.1007/s10664-023-10335-6
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chen JY, 2020, PROC INT CONF SOFTW, P578, DOI 10.1145/3377811.3380389
   Chen X, 2018, INFORM SOFTWARE TECH, V93, P1, DOI 10.1016/j.infsof.2017.08.004
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Cho KYHY, 2014, Arxiv, DOI arXiv:1409.1259
   Devlin J, 2019, Arxiv, DOI arXiv:1810.04805
   Ding ZS, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10118-5
   Elish KO, 2008, J SYST SOFTWARE, V81, P649, DOI 10.1016/j.jss.2007.07.040
   Feng ZY, 2020, Arxiv, DOI [arXiv:2002.08155, 10.48550/arXiv.2002.08155]
   Fisher R. A., 1919, Transactions of the Royal Society of Edinburgh, V52
   Guo DY, 2021, Arxiv, DOI arXiv:2009.08366
   Guo L, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P417
   Hadi MA, 2023, EMPIR SOFTW ENG, V28, DOI 10.1007/s10664-023-10314-x
   Herbold S, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1063, DOI 10.1145/3180155.3182542
   Herbold S, 2017, IEEE T SOFTWARE ENG, V43, P1091, DOI 10.1109/TSE.2017.2748129
   Hochreiter S, 1998, INT J UNCERTAIN FUZZ, V6, P107, DOI 10.1142/S0218488598000094
   Huang J., 2006, Adv. Neural Inf. Process. Syst., V19
   Huang QG, 2022, IET SOFTW, V16, P200, DOI 10.1049/sfw2.12053
   Jiang SY, 2019, IEEE ACCESS, V7, P10362, DOI 10.1109/ACCESS.2018.2889572
   Jiang SY, 2018, NEUROCOMPUTING, V321, P49, DOI 10.1016/j.neucom.2018.09.004
   Dam HK, 2018, Arxiv, DOI arXiv:1802.00921
   Kim S, 2021, PROC INT CONF SOFTW, P150, DOI 10.1109/ICSE43902.2021.00026
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kingma D. P., 2014, arXiv
   Laradji IH, 2015, INFORM SOFTWARE TECH, V58, P388, DOI 10.1016/j.infsof.2014.07.005
   Le P, 2016, Arxiv, DOI [arXiv:1603.00423, 10.48550/arXiv.1603.00423]
   Li J, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P318, DOI 10.1109/QRS.2017.42
   Lin C, 2021, INT C PROGRAM COMPRE, P184, DOI 10.1109/ICPC52881.2021.00026
   Lin JH, 2021, IEEE ACCESS, V9, P13112, DOI 10.1109/ACCESS.2021.3051957
   Liu F, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10140-7
   Liu YH, 2019, Arxiv, DOI [arXiv:1907.11692, DOI 10.48550/ARXIV.1907.11692]
   Long MS, 2019, IEEE T PATTERN ANAL, V41, P3071, DOI 10.1109/TPAMI.2018.2868685
   Ma Y, 2012, INFORM SOFTWARE TECH, V54, P248, DOI 10.1016/j.infsof.2011.09.007
   Malhotra R, 2024, INT J SYST ASSUR ENG, V15, P1743, DOI 10.1007/s13198-023-02051-7
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Mikolov T, 2013, Arxiv, DOI [arXiv:1301.3781, DOI 10.48550/ARXIV.1301.3781]
   Nam J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P382, DOI 10.1109/ICSE.2013.6606584
   Pan C, 2021, APPL SCI-BASEL, V11, DOI 10.3390/app11114793
   Peng Han, 2021, ADV NEURAL INFORM PR, P9343
   Pennington J., 2014, GLOVE GLOBAL VECTORS, DOI DOI 10.3115/V1/D14-1162
   Qiu S, 2023, IEEE Trans Sustainable Comput
   Qiu SJ, 2019, APPL SCI-BASEL, V9, DOI 10.3390/app9132660
   Reena P, 2014, Int J Eng Res & Technol (IJERT), V3
   Ryu D, 2016, EMPIR SOFTW ENG, V21, P43, DOI 10.1007/s10664-014-9346-4
   Schuster M, 1997, IEEE T SIGNAL PROCES, V45, P2673, DOI 10.1109/78.650093
   Shepperd M, 2014, IEEE T SOFTWARE ENG, V40, P603, DOI 10.1109/TSE.2014.2322358
   Song QB, 2019, IEEE T SOFTWARE ENG, V45, P1253, DOI 10.1109/TSE.2018.2836442
   Tabassum S, 2023, IEEE T SOFTWARE ENG, V49, P268, DOI 10.1109/TSE.2022.3150153
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Uddin MN, 2022, SOFT COMPUT, V26, P7877, DOI 10.1007/s00500-022-06830-5
   Vaswani A, 2017, ADV NEUR IN, V30
   Wang S, 2020, IEEE T SOFTWARE ENG, V46, P1267, DOI 10.1109/TSE.2018.2877612
   Wang T, 2010, 2010 INT C COMP INT, P1
   Wang WH, 2022, Arxiv, DOI arXiv:2208.08643
   Wang X, 2022, INT C PROGRAM COMPRE, P354, DOI 10.1145/3524610.3527896
   Wang YL, 2021, AAAI CONF ARTIF INTE, V35, P14015
   Wei SE, 2016, PROC CVPR IEEE, P4724, DOI 10.1109/CVPR.2016.511
   WILCOXON F, 1946, J ECON ENTOMOL, V39, P269, DOI 10.1093/jee/39.2.269
   Wong WE, 2017, J SYST SOFTWARE, V133, P68, DOI 10.1016/j.jss.2017.06.069
   Wu Bingting, 2022, Knowledge-Based Systems, DOI 10.1016/j.knosys.2022.109450
   Xia X, 2016, IEEE T SOFTWARE ENG, V42, P977, DOI 10.1109/TSE.2016.2543218
   Xu JX, 2022, IEEE T RELIAB, V71, P850, DOI 10.1109/TR.2022.3161581
   Xu JZ, 2021, IMPACT ASSESS PROJ A, V39, P429, DOI [10.1109/TR.2020.3040191, 10.1080/14615517.2020.1848242]
   Xu Z, 2019, J COMPUT SCI TECH-CH, V34, P1039, DOI 10.1007/s11390-019-1959-z
   Yan JP, 2018, SECUR COMMUN NETW, DOI 10.1155/2018/5249190
   Yang J, 2023, Arxiv, DOI [arXiv:2110.00269, 10.1145/3631392]
   Zhang J, 2019, PROC INT CONF SOFTW, P783, DOI 10.1109/ICSE.2019.00086
   Zhang TY, 2021, Arxiv, DOI arXiv:2006.05987
   Zhao KS, 2022, IET SOFTW, V16, P259, DOI 10.1049/sfw2.12040
   Zhu K, 2020, IET SOFTW, V14, P185, DOI 10.1049/iet-sen.2019.0278
NR 79
TC 0
Z9 0
U1 1
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2024
VL 29
IS 4
AR 80
DI 10.1007/s10664-024-10495-z
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TB0R8
UT WOS:001238684900001
DA 2024-08-05
ER

PT J
AU Tambon, F
   Nikanjam, A
   An, L
   Khomh, F
   Antoniol, G
AF Tambon, Florian
   Nikanjam, Amin
   An, Le
   Khomh, Foutse
   Antoniol, Giuliano
TI Silent bugs in deep learning frameworks: an empirical study of Keras and
   TensorFlow
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Deep learning; Bug analysis; Empirical study; Keras; TensorFlow
AB Deep Learning (DL) frameworks are now widely used, simplifying the creation of complex models as well as their integration into various applications even among non-DL experts. However, like any other programs, they are prone to bugs. This paper deals with the subcategory of bugs named silent bugs: they lead to wrong behavior but they do not cause system crashes or hangs, nor show an error message to the user. Such bugs are even more dangerous in DL applications and frameworks due to the "black-box" and stochastic nature of the DL systems (i.e., the end user can not understand how the model makes decisions). This paper presents the first empirical study of the silent bugs in Tensorflow, specifically its high-level API Keras, and their impact on users' programs. We extracted closed issues related to Keras API from the TensorFlow GitHub repository. Out of the 1,168 issues that we gathered, 77 were reproducible silent bugs affecting users' programs. We categorized the bugs based on the effects on the users' programs and the components where the issues occurred, using information from the issue reports. We then derived a threat level for each of the issues, based on the impact they had on the users' programs. To assess the relevance of identified categories and the impact scale, we conducted an online survey with 103 DL developers. The participants generally agreed with the significant impact of silent bugs in DL frameworks and how they impact users and acknowledged our findings (i.e., categories of silent bugs and the proposed impact scale).
C1 [Tambon, Florian; Nikanjam, Amin; An, Le; Khomh, Foutse; Antoniol, Giuliano] Polytech Montreal, Montreal, PQ H3C 3A7, Canada.
C3 Universite de Montreal; Polytechnique Montreal
RP Nikanjam, A (corresponding author), Polytech Montreal, Montreal, PQ H3C 3A7, Canada.
EM florian-2.tambon@polymtl.ca; amin.nikanjam@polymtl.ca; le.an@polymtl.ca;
   foutse.khomh@polymtl.ca; giuliano.antoniol@polymtl.ca
RI Tambon, Florian/HNS-4168-2023
OI Tambon, Florian/0000-0001-5593-9400; Nikanjam, Amin/0000-0002-0440-6839
FU National Science and Engineering Research Council of Canada (NSERC)
FX The authors would like to thank all the participants of the survey who
   greatly contributed to improving this work with their answers.
CR Abadi M, 2016, PROCEEDINGS OF OSDI'16: 12TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P265
   Altman D.G., 1999, PRACTICAL STAT MED R, DOI DOI 10.1002/SIM.4780101015
   [Anonymous], 2022, Keras
   [Anonymous], 2020, keras API
   [Anonymous], 2020, TenforFlow implementation
   [Anonymous], 2021, DL Frameworks in 2021
   [Anonymous], 2022, Replication Package
   [Anonymous], 2022, TensorFlow/Keras Issue
   [Anonymous], 2020, Keras releases
   Chen J, 2023, ACM Trans Softw Eng Methodol, DOI [10.1145/3587155justAccepted, DOI 10.1145/3587155JUSTACCEPTED]
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Di Franco A, 2017, IEEE INT CONF AUTOM, P509, DOI 10.1109/ASE.2017.8115662
   Du X, 2022, IEEE Trans Depend Sec Comput
   Du XT, 2020, PROC INT SYMP SOFTW, P1, DOI 10.1109/ISSRE5003.2020.00010
   fix-example, 2020, TensorFlow/Keras Issue
   FLEISS JL, 1971, PSYCHOL BULL, V76, P378, DOI 10.1037/h0031619
   github, 2022, TensorFlow repository
   github, 2022, TensorFlow/Keras Issue
   Github, 2022, About us
   githubREST, 2022, Github REST API
   GitSearchAPI, 2022, Github search api
   googleForm, 2022, Google forms
   Groce A, 2014, IEEE T SOFTWARE ENG, V40, P307, DOI 10.1109/TSE.2013.59
   Humbatova N, 2020, PROC INT CONF SOFTW, P1110, DOI 10.1145/3377811.3380395
   Pham HV, 2019, PROC INT CONF SOFTW, P1027, DOI 10.1109/ICSE.2019.00107
   Islam MJ, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P510, DOI 10.1145/3338906.3338955
   issue2, 2022, TensorFlow
   issue8, 2020, TensorFlow
   jax, 2022, JAX
   Jia L, 2022, EUR CON SFTWR MTNCE, P793, DOI 10.1109/SANER53432.2022.00097
   Jia L, 2021, PROC IEEE INT CONF S, P47, DOI 10.1109/ICSME52107.2021.00011
   Jia L, 2021, J SYST SOFTWARE, V177, DOI 10.1016/j.jss.2021.110935
   Jia L, 2020, LECT NOTES COMPUT SC, V12112, P604, DOI 10.1007/978-3-030-59410-7_40
   Kendall MG, 1938, BIOMETRIKA, V30, P81, DOI 10.2307/2332226
   Li MZ, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3583566
   Long F, 2016, ACM SIGPLAN NOTICES, V51, P298, DOI 10.1145/2914770.2837617
   MLlib-Spark, 2022, MLlib-Spark
   Nguyen G, 2019, ARTIF INTELL REV, V52, P77, DOI 10.1007/s10462-018-09679-z
   Nikanjam A, 2022, AUTOMAT SOFTW ENG, V29, DOI 10.1007/s10515-021-00313-x
   OPPENHEIM A. N., 1992, QUESTIONNAIRE DESIGN
   Papadakis M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P537, DOI 10.1145/3180155.3180183
   Pytorch, 2022, About us
   reddit, 2022, Reddit
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Sun CN, 2016, ACM SIGPLAN NOTICES, V51, P849, DOI 10.1145/3022671.2984038
   Tensorflow, 2022, About us
   Vahabzadeh A, 2015, PROC IEEE INT CONF S, P101, DOI 10.1109/ICSM.2015.7332456
   van der Kouwe E, 2014, 2014 TENTH EUROPEAN DEPENDABLE COMPUTING CONFERENCE (EDCC), P118, DOI 10.1109/EDCC.2014.16
   Le V, 2014, ACM SIGPLAN NOTICES, V49, P216, DOI [10.1145/2666356.2594334, 10.1145/2594291.2594334]
   Wang W, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P314, DOI 10.1109/MSR.2015.36
   Wang Z, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P788, DOI 10.1145/3368089.3409761
   Weimer W, 2009, PROC INT CONF SOFTW, P364, DOI 10.1109/ICSE.2009.5070536
   Zhang JM, 2022, IEEE T SOFTWARE ENG, V48, P1, DOI 10.1109/TSE.2019.2962027
   Zhang YH, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P129, DOI 10.1145/3213846.3213866
NR 54
TC 0
Z9 0
U1 8
U2 10
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2024
VL 29
IS 1
AR 10
DI 10.1007/s10664-023-10389-6
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AJ6Q3
UT WOS:001118142500002
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Chen, BT
   Zou, WQ
   Cai, BY
   Meng, QS
   Liu, WJ
   Li, PJ
   Chen, L
AF Chen, Bingting
   Zou, Weiqin
   Cai, Biyu
   Meng, Qianshuang
   Liu, Wenjie
   Li, Piji
   Chen, Lin
TI An empirical study on the potential of word embedding techniques in bug
   report management tasks
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Bug report; Word embedding; Pre-trained models; Vector space model
ID SEVERITY PREDICTION; PROBABILISTIC RANKING; INFORMATION-RETRIEVAL;
   LOCALIZATION; MODEL; ALGORITHMS; NETWORK; FILES
AB ContextRepresenting the textual semantics of bug reports is a key component of bug report management (BRM) techniques. Existing studies mainly use classical information retrieval-based (IR-based) approaches, such as the vector space model (VSM) to do semantic extraction. Little attention is paid to exploring whether word embedding (WE) models from the natural language process could help BRM tasks.ObjectiveTo have a general view of the potential of word embedding models in representing the semantics of bug reports and attempt to provide some actionable guidelines in using semantic retrieval models for BRM tasks.MethodWe studied the efficacy of five widely recognized WE models for six BRM tasks on 20 widely-used products from the Eclipse and Mozilla foundations. Specifically, we first explored the suitable machine learning techniques under the use of WE models and the suitable WE model for BRM tasks. Then we studied whether WE models performed better than classical VSM. Last, we investigated whether WE models fine-tuned with bug reports outperformed general pre-trained WE models.Key ResultsThe Random Forest (RF) classifier outperformed other typical classifiers under the use of different WE models in semantic extraction.We rarely observed statistically significant performance differences among five WE models in five BRM classification tasks, but we found that small-dimensional WE models performed better than larger ones in the duplicate bug report detection task. Among three BRM tasks (i.e., bug severity prediction, reopened bug prediction, and duplicate bug report detection) that showed statistically significant performance differences, VSM outperformed the studied WE models. We did not find performance improvement after we fine-tuned general pre-trained BERT with bug report data.ConclusionPerformance improvements of using pre-trained WE models were not observed in studied BRM tasks. The combination of RF and traditional VSM was found to achieve the best performance in various BRM tasks.
C1 [Chen, Bingting; Zou, Weiqin; Cai, Biyu; Meng, Qianshuang; Liu, Wenjie; Li, Piji] Nanjing Univ Aeronaut & Astronaut, Dept Comp Sci & Technol, Nanjing, Peoples R China.
   [Zou, Weiqin] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Peoples R China.
   [Chen, Lin] Nanjing Univ, Dept Comp Sci & Technol, Nanjing, Peoples R China.
C3 Nanjing University of Aeronautics & Astronautics; Nanjing University;
   Nanjing University
RP Zou, WQ (corresponding author), Nanjing Univ Aeronaut & Astronaut, Dept Comp Sci & Technol, Nanjing, Peoples R China.; Zou, WQ (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Peoples R China.
EM btchen@nuaa.edu.cn; weiqin@nuaa.edu.cn; caibiyu@nuaa.edu.cn;
   qs_meng@nuaa.edu.cn; wenwenmu@nuaa.edu.cn; pjli@nuaa.edu.cn;
   lchen@nju.edu.cn
FU National Natural Science Foundation of China [62002161, 62272221]; Open
   Project Foundation of State Key Lab; Nanjing University [KFKT2024B35]
FX This research is partly supported by National Natural Science Foundation
   of China (Grant No. 62002161, 62272221), the Open Project Foundation of
   State Key Lab. for Novel Software Technology, Nanjing University (Grant
   No. KFKT2024B35).DAS:The datasets and code scripts for replication are
   available in the BRMWEStudy repository.
CR Aggarwal K, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1821
   Alenezi M, 2013, 2013 12TH INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA 2013), VOL 2, P112, DOI 10.1109/ICMLA.2013.114
   Nguyen AT, 2012, IEEE INT CONF AUTOM, P70, DOI 10.1145/2351676.2351687
   Anvik J., 2006, 28th International Conference on Software Engineering Proceedings, P937, DOI 10.1145/1134285.1134457
   Ardimento P, 2022, LECT NOTES COMPUT SC, V13709, P610, DOI 10.1007/978-3-031-21388-5_46
   Ardimento P, 2020, IEEE CONF EVOL ADAPT, DOI 10.1109/eais48028.2020.9122781
   Arokiam J, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2020), P17, DOI 10.1145/3377816.3381738
   Bennin KE, 2019, EMPIR SOFTW ENG, V24, P602, DOI 10.1007/s10664-018-9633-6
   Bertram D, 2010, 2010 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, P291
   Bettenburg Nicolas, 2008, Proc. European Software Engineering Conference and Symposium on the Foundations of Software Engineering (ESEC/FSE), P308, DOI [10.1145/1453101.1453146, DOI 10.1145/1453101.1453146]
   Bojanowski Piotr, 2017, T ASSOC COMPUT LING, V5, P135, DOI [10.48550/arXiv.1607.04606, DOI 10.1162/TACLA00051]
   Budhiraja A, 2018, PROC IEEE ACM INT C, P193, DOI 10.1145/3183440.3195092
   Budhiraja A, 2018, PROC IEEE ACM INT C, P165, DOI 10.1145/3183440.3195078
   Chawla I, 2014, INT CONF CONTEMP, P376, DOI 10.1109/IC3.2014.6897203
   Cheng SS, 2020, 2020 IEEE 20TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY, AND SECURITY (QRS 2020), P180, DOI 10.1109/QRS51102.2020.00034
   Choetkiertikul M, 2017, EMPIR SOFTW ENG, V22, P1223, DOI 10.1007/s10664-016-9496-7
   Ciborowska A, 2022, PROC INT CONF SOFTW, P946, DOI 10.1145/3510003.3510042
   Dan Han, 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P83, DOI 10.1109/WCRE.2012.18
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   Deshmukh J, 2017, PROC IEEE INT CONF S, P115, DOI 10.1109/ICSME.2017.69
   Devlin J, 2019, Arxiv, DOI arXiv:1810.04805
   DUNN OJ, 1961, J AM STAT ASSOC, V56, P52, DOI 10.2307/2282330
   Peters ME, 2018, Arxiv, DOI arXiv:1802.05365
   Giger E, 2010, P 2 INT WORKSH REC S, P52, DOI 10.1145/1808920.1808933
   Guo SK, 2020, NEURAL PROCESS LETT, V51, P2589, DOI 10.1007/s11063-020-10213-y
   Habayeb M, 2018, IEEE T SOFTWARE ENG, V44, P1224, DOI 10.1109/TSE.2017.2757480
   Hewett R, 2009, EMPIR SOFTW ENG, V14, P165, DOI 10.1007/s10664-008-9064-x
   Hindle A, 2016, EMPIR SOFTW ENG, V21, P368, DOI 10.1007/s10664-015-9387-3
   Hinton G. E., 1986, P 8 ANN C COGN SCI S, P1, DOI DOI 10.1109/69.917563
   Huo D, 2014, PROC IEEE INT CONF S, P1, DOI 10.1109/ICSME.2014.22
   Islam MS, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P411, DOI 10.1109/SANER50967.2021.00045
   Izadi M, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10085-3
   Jalbert N, 2008, I C DEPEND SYS NETWO, P52, DOI 10.1109/DSN.2008.4630070
   Jia Y, 2021, 2021 8 INT C DEP SYS, P42
   Kanwal J, 2012, J COMPUT SCI TECH-CH, V27, P397, DOI 10.1007/s11390-012-1230-3
   Kim D, 2013, IEEE T SOFTWARE ENG, V39, P1597, DOI 10.1109/TSE.2013.24
   Kim J, 2022, IEEE ACCESS, V10, P94643, DOI 10.1109/ACCESS.2022.3204689
   Kumar L, 2021, FED CONF COMPUT SCI, P477, DOI 10.15439/2021F100
   Lamkanfi A, 2010, 2010 7 IEEE WORK C M, P1
   Lamkanfi A, 2013, EUR CON SFTWR MTNCE, P327, DOI 10.1109/CSMR.2013.42
   Lamkanfi A, 2011, EUR CON SFTWR MTNCE, P249, DOI 10.1109/CSMR.2011.31
   Liu GL, 2019, IEEE ACCESS, V7, P78870, DOI 10.1109/ACCESS.2019.2922686
   Lukins SK, 2008, WORK CONF REVERSE EN, P155, DOI 10.1109/WCRE.2008.33
   Macbeth G, 2011, UNIV PSYCHOL, V10, P545, DOI 10.11144/Javeriana.upsy10-2.cdcp
   Marks L, 2011, P 7 INT C PRED MOD S, P1
   Menzies T, 2008, PROC IEEE INT CONF S, P346, DOI 10.1109/ICSM.2008.4658083
   Messaoud MB, 2022, IEEE Transactions on Reliability
   Mi Q, 2018, INFORM SOFTWARE TECH, V99, P93, DOI 10.1016/j.infsof.2018.03.006
   Mikolov T., 2013, ADV NEURAL INFORM PR, V26, P1, DOI DOI 10.48550/ARXIV.1310.4546
   Mikolov T, 2013, Arxiv, DOI [arXiv:1301.3781, DOI 10.48550/ARXIV.1301.3781]
   Panjer LucasD., 2007, Proceedings of the 4th International Workshop on Mining Software Repositories, MSR '07, P29
   Pennington J., 2014, GLOVE GLOBAL VECTORS, DOI DOI 10.3115/V1/D14-1162
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI 10.1109/TSE.2007.1016.
   Poshyvanyk D, 2006, INT C PROGRAM COMPRE, P137, DOI 10.1109/ICPC.2006.17
   Probst P, 2019, WIRES DATA MIN KNOWL, V9, DOI 10.1002/widm.1301
   Probst P, 2019, J MACH LEARN RES, V20
   Probst P, 2018, J MACH LEARN RES, V18
   Ramay WY, 2019, IEEE ACCESS, V7, P46846, DOI 10.1109/ACCESS.2019.2909746
   Rodrigues IM, 2020, IEEE WORK CONF MIN S, P43, DOI 10.1145/3379597.3387470
   Roy NKS, 2014, EUROMICRO CONF PROC, P269, DOI 10.1109/SEAA.2014.51
   Runeson P, 2007, PROC INT CONF SOFTW, P499
   Saha RK, 2013, IEEE INT CONF AUTOM, P345, DOI 10.1109/ASE.2013.6693093
   Sahin SE, 2019, PROCEEDINGS OF EASE 2019 - EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING, P244, DOI 10.1145/3319008.3319033
   Sepahvand R, 2020, IET SOFTW, V14, P203, DOI 10.1049/iet-sen.2019.0260
   Shihab E., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P249, DOI 10.1109/WCRE.2010.36
   Shihab E, 2013, EMPIR SOFTW ENG, V18, P1005, DOI 10.1007/s10664-012-9228-6
   Sun C, 2010, P 32 ACM IEEE INT C, V1, P45
   Sun C, 2011, INT J CHEM ENG, V2011, DOI 10.1155/2011/545234
   Tagra A, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10133-6
   Tantithamthavorn C, 2018, INFORM SOFTWARE TECH, V102, P160, DOI 10.1016/j.infsof.2018.06.001
   Nguyen TV, 2017, PROC IEEE ACM INT C, P183, DOI 10.1109/ICSE-C.2017.90
   Tian Y, 2015, EMPIR SOFTW ENG, V20, P1354, DOI 10.1007/s10664-014-9331-y
   Tian Y, 2013, PROC IEEE INT CONF S, P200, DOI 10.1109/ICSM.2013.31
   Tian Y, 2012, EUR CON SFTWR MTNCE, P385, DOI 10.1109/CSMR.2012.48
   Umer Q, 2020, IEEE T RELIAB, V69, P1341, DOI 10.1109/TR.2019.2959624
   Vieira RG, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10213-7
   Wang SW, 2014, PROC IEEE INT CONF S, P171, DOI 10.1109/ICSME.2014.39
   Wang XY, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P461, DOI 10.1145/1368088.1368151
   Wei Zhang, 2020, Advances in Natural Computation, Fuzzy Systems and Knowledge Discovery. Advances in Intelligent Systems and Computing (AISC 1074), P333, DOI 10.1007/978-3-030-32456-8_36
   Weiss C, 2007, 4 INT WORKSH MIN SOF, P1
   Xia X, 2016, IEEE T RELIAB, V65, P1094, DOI 10.1109/TR.2015.2484074
   Xia X, 2015, AUTOMAT SOFTW ENG, V22, P75, DOI 10.1007/s10515-014-0162-2
   Xia X, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P174, DOI 10.1109/CSMR-WCRE.2014.6747167
   Xia X, 2013, EUR CON SFTWR MTNCE, P331, DOI 10.1109/CSMR.2013.43
   Xiao Y, 2019, INFORM SOFTWARE TECH, V105, P17, DOI 10.1016/j.infsof.2018.08.002
   Xiao Y, 2017, ASIA PAC SOFWR ENG, P338, DOI 10.1109/APSEC.2017.40
   Yang A, 2019, 57TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2019), P2346
   Yang G, 2014, P INT COMP SOFTW APP, P97, DOI 10.1109/COMPSAC.2014.16
   Yang XL, 2016, PROC INT SYMP SOFTW, P127, DOI 10.1109/ISSRE.2016.33
   Ye X, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P689, DOI 10.1145/2635868.2635874
   Ye X, 2016, IEEE T SOFTWARE ENG, V42, P379, DOI 10.1109/TSE.2015.2479232
   Yuan W, 2021, PROC IEEE INT CONF S, P93, DOI 10.1109/ICSME52107.2021.00015
   Zhang HY, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1042, DOI 10.1109/ICSE.2013.6606654
   Zhang THR, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10185-8
   Zhang T, 2016, J SYST SOFTWARE, V117, P166, DOI 10.1016/j.jss.2016.02.034
   Zhang T, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3576042
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
   Zhou XH, 2020, AAAI CONF ARTIF INTE, V34, P9733
   Zimmermann T, 2012, PROC INT CONF SOFTW, P1074, DOI 10.1109/ICSE.2012.6227112
   Zou WQ, 2020, IEEE T SOFTWARE ENG, V46, P836, DOI 10.1109/TSE.2018.2870414
NR 100
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2024
VL 29
IS 5
AR 122
DI 10.1007/s10664-024-10510-3
PG 48
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZO3N6
UT WOS:001276200900001
DA 2024-08-05
ER

PT J
AU di Angelo, M
   Durieux, T
   Ferreira, JF
   Salzer, G
AF di Angelo, Monika
   Durieux, Thomas
   Ferreira, Joao F.
   Salzer, Gernot
TI Evolution of automated weakness detection in Ethereum bytecode: a
   comprehensive study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Bytecode; Blockchain; Debugging; Detection tools; Ethereum; EVM; Program
   analysis; Reproducible Bugs; Smart contracts; Vulnerability
AB Blockchain programs (also known as smart contracts) manage valuable assets like cryptocurrencies and tokens, and implement protocols in domains like decentralized finance (DeFi) and supply-chain management. These types of applications require a high level of security that is hard to achieve due to the transparency of public blockchains. Numerous tools support developers and auditors in the task of detecting weaknesses. As a young technology, blockchains and utilities evolve fast, making it challenging for tools and developers to keep up with the pace. In this work, we study the robustness of code analysis tools and the evolution of weakness detection on a dataset representing six years of blockchain activity. We focus on Ethereum as the crypto ecosystem with the largest number of developers and deployed programs. We investigate the behavior of single tools as well as the agreement of several tools addressing similar weaknesses. Our study is the first that is based on the entire body of deployed bytecode on Ethereum's main chain. We achieve this coverage by considering bytecodes as equivalent if they share the same skeleton. The skeleton of a bytecode is obtained by omitting functionally irrelevant parts. This reduces the 48 million contracts deployed on Ethereum up to January 2022 to 248 328 contracts with distinct skeletons. For bulk execution, we utilize the open-source framework SmartBugs that facilitates the analysis of Solidity smart contracts, and enhance it to accept also bytecode as the only input. Moreover, we integrate six further tools for bytecode analysis. The execution of the 12 tools included in our study on the dataset took 30 CPU years. While the tools report a total of 1 307 486 potential weaknesses, we observe a decrease in reported weaknesses over time, as well as a degradation of tools to varying degrees.
C1 [di Angelo, Monika; Salzer, Gernot] TU Wien, Vienna, Austria.
   [di Angelo, Monika; Salzer, Gernot] INESC ID Lisbon, Vienna, Austria.
   [Durieux, Thomas] Delft Univ Technol, Delft, Netherlands.
   [Ferreira, Joao F.] Univ Lisbon, Inst Super Tecn, Lisbon, Portugal.
   [Ferreira, Joao F.] Univ Lisbon, Inst Super Tecn, Lisbon, Portugal.
C3 Technische Universitat Wien; Delft University of Technology;
   Universidade de Lisboa; Universidade de Lisboa
RP di Angelo, M (corresponding author), TU Wien, Vienna, Austria.; di Angelo, M (corresponding author), INESC ID Lisbon, Vienna, Austria.
EM monika.di.angelo@tuwien.ac.at; thomas@durieux.me; joao@joaoff.com;
   gernot.salzer@tuwien.ac.at
OI Ferreira, Joao/0000-0002-6612-9013; Salzer, Gernot/0000-0002-8950-1551;
   di Angelo, Monika/0000-0002-4217-4530; Durieux,
   Thomas/0000-0002-1996-6134
FU Fundacao para a Ciencia e a Tecnologia (FCT) [UIDB/50021/2020]; CASTOR
   Software Research Centre
FX This project was partially supported by national funds through Fundacao
   para a Ciencia e a Tecnologia (FCT) under project UIDB/50021/2020. The
   project was also partially supported by the CASTOR Software Research
   Centre.
CR Brent Lexi, 2020, PLDI '20: Proceedings of the 41st ACM SIGPLAN Conference on Programming Language Design and Implementation, P454, DOI 10.1145/3385412.3385990
   Brent L, 2018, Arxiv, DOI arXiv:1809.03981
   Chen HS, 2020, ACM COMPUT SURV, V53, DOI 10.1145/3391195
   di Angelo M, 2024, LNCS, P439, DOI [10.1007/978-3-031-48806-1, DOI 10.1007/978-3-031-48806-1]
   di Angelo M, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON DECENTRALIZED APPLICATIONS AND INFRASTRUCTURES (DAPPCON), P69, DOI 10.1109/DAPPCON.2019.00018
   Dia B, 2021, IEEE PAC RIM INT SYM, P17, DOI 10.1109/PRDC53464.2021.00013
   Dika A., 2017, ETHEREUM SMART CONTR
   Durieux T, 2020, PROC INT CONF SOFTW, P530, DOI 10.1145/3377811.3380364
   Ferreira JF, 2020, IEEE INT CONF AUTOM, P1349, DOI 10.1145/3324884.3415298
   Ghaleb Asem, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P415, DOI 10.1145/3395363.3397385
   Grech N, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3276486
   Gupta Bishwas C., 2020, Security, Privacy, and Applied Cryptography Engineering. 10th International Conference, SPACE 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12586), P188, DOI 10.1007/978-3-030-66626-2_10
   Gupta BC, 2019, Analysis of Ethereum Smart Contracts-A Security Perspective
   Ji S, 2021, IEEE ACCESS, V9, P90029, DOI 10.1109/ACCESS.2021.3091317
   Krupp J, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P1317
   Kushwaha SS, 2022, IEEE ACCESS, V10, P57037, DOI 10.1109/ACCESS.2022.3169902
   Kushwaha SS, 2022, IEEE ACCESS, V10, P6605, DOI 10.1109/ACCESS.2021.3140091
   Leid Alexander, 2020, SAICSIT '20: Conference of the South African Institute of Computer Scientists and Information Technologists 2020, P35, DOI 10.1145/3410886.3410907
   Luu L, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P254, DOI 10.1145/2976749.2978309
   Mueller B., 2018, 9 ANN HITB SEC C
   Nikolic I, 2018, 34TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2018), P653, DOI 10.1145/3274694.3274743
   Parizi RM, 2018, P 28 ANN INT C COMP, P103
   Rameder H, 2022, FRONT BLOCKCHAIN, V5, DOI 10.3389/fbloc.2022.814977
   Ren M, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P566, DOI 10.1145/3460319.3464837
   Schneidewind C, 2020, CCS '20: PROCEEDINGS OF THE 2020 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P621, DOI 10.1145/3372297.3417250
   Tang X., 2021, Communications in computer and information science, DOI DOI 10.1007/978-3-030-78621-2_14
   Tolmach P, 2021, ACM COMPUT SURV, V54, DOI 10.1145/3464421
   Torres CF, 2018, 34TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2018), P664, DOI 10.1145/3274694.3274737
   Tsankov P, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P67, DOI 10.1145/3243734.3243780
   Vivar AL, 2020, ENTROPY-SWITZ, V22, DOI 10.3390/e22020203
   Wang ZL, 2021, FRONT COMPUT SCI-CHI, V15, DOI 10.1007/s11704-020-9284-9
   Zhang PC, 2020, PROC IEEE INT CONF S, P139, DOI 10.1109/ICSME46990.2020.00023
   Zhou H., 2022, Journal of Cybersecurity and Privacy, V2, P358, DOI DOI 10.3390/JCP2020019
NR 33
TC 0
Z9 0
U1 4
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2024
VL 29
IS 2
AR 41
DI 10.1007/s10664-023-10414-8
PG 44
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GS1Q7
UT WOS:001154575300001
OA Green Submitted, hybrid
DA 2024-08-05
ER

PT J
AU Hidellaarachchi, D
   Grundy, J
   Hoda, R
   Mueller, I
AF Hidellaarachchi, Dulaji
   Grundy, John
   Hoda, Rashina
   Mueller, Ingo
TI The Impact of Personality on Requirements Engineering Activities: A
   Mixed-Methods Study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Personality; Requirements Engineering; Software Engineering; Human
   aspects; Socio-technical grounded theory for data analysis
ID SOFTWARE; TRAITS; FACETS; MODEL; POOL
AB ContextRequirements engineering (RE) is an important part of Software Engineering (SE), consisting of various human-centric activities that require the frequent collaboration of a variety of roles. Prior research has shown that personality is one such human aspect that has a huge impact on the success of a software project. However, a limited number of empirical studies exist focusing on the impact of personality on RE activities.ObjectiveThe objective of this study is to explore and identify the impact of personality on RE activities, provide a better understanding of these impacts, and provide guidance on how to better handle these impacts in RE.MethodWe used a mixed-methods approach, including a personality test-based survey (50 participants) and an in-depth interview study (15 participants) with software practitioners from around the world involved in RE activities.ResultsThrough personality test analysis, we found a majority of the practitioners have a high score on agreeableness and conscientiousness traits and an average score on extraversion and neuroticism traits. Through analysis of the interviews, we found a range of impacts related to the personality traits of software practitioners, their team members, and external stakeholders. It was found that having extraversion characteristics is considered as plus points compared to agreeableness, conscientiousness and openness to experience characteristics that have been stated as highly important to have when involved in RE activities. These impacts can vary depending on the RE activities, the overall software development process, and the people involved in these activities. Moreover, we found a set of strategies that can be helpful in overcoming some of the challenges associated with diverse personalities when involved in RE activities.ConclusionOur identified impacts of personality on RE activities and strategies serve to provide guidance to software practitioners on handling such possible personality impacts on RE activities and for researchers to investigate these impacts in greater depth in future.
C1 [Hidellaarachchi, Dulaji; Grundy, John; Hoda, Rashina; Mueller, Ingo] Monash Univ, Dept Software Syst & Cybersecur, Melbourne, Australia.
C3 Monash University
RP Hidellaarachchi, D (corresponding author), Monash Univ, Dept Software Syst & Cybersecur, Melbourne, Australia.
EM dulaji.hidellaarachchi@monash.edu; john.grundy@monash.edu;
   rashina.hoda@monash.edu; ingo.mueller@monash.edu
RI Grundy, John/AAF-1716-2019
OI Grundy, John/0000-0003-4928-7076; Hidellaarachchi,
   Dulaji/0000-0003-0217-5317
FU ARC Laureate Fellowship; Monash Faculty of IT PhD scholarships; ARC
   Discovery Project [DP200100020];  [FL190100035]
FX Hidellaarachchi was supported by Monash Faculty of IT PhD scholarships.
   Grundy and Hidellaarachchi are supported by ARC Laureate Fellowship
   FL190100035, and this work is also partially supported by ARC Discovery
   Project DP200100020.
CR Acuña ST, 2009, INFORM SOFTWARE TECH, V51, P627, DOI 10.1016/j.infsof.2008.08.006
   Ahmed F, 2010, Why do we need personality diversity in software engineering?, V35, DOI [10.1145/1734103.1734111, DOI 10.1145/1734103.1734111]
   Ali Z, 2019, global software development, V8, P108
   Alsanoosy T, 2019, PROCEDIA COMPUT SCI, V159, P2394, DOI 10.1016/j.procs.2019.09.414
   Anvari F, 2017, J SYST SOFTWARE, V134, P324, DOI 10.1016/j.jss.2017.09.020
   Barroso AS, 2017, Influence of human personality in software engineering
   Bolton R, 2009, People styles at workand beyond making bad relationships good and good relationships better, V2nd
   Capretz LF, 2015, COMPUT HUM BEHAV, V52, P373, DOI 10.1016/j.chb.2015.05.050
   Caulo M, 2021, PROCEEDINGS OF EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING (EASE 2021), P70, DOI 10.1145/3463274.3463327
   COSTA PT, 1995, J PERS ASSESS, V64, P21, DOI 10.1207/s15327752jpa6401_2
   Cruz Shirley S. J. O., 2011, 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), P1, DOI 10.1049/ic.2011.0001
   Cruz S, 2015, COMPUT HUM BEHAV, V46, P94, DOI 10.1016/j.chb.2014.12.008
   Cucolas AA, 2023, J SYST SOFTWARE, V197, DOI 10.1016/j.jss.2022.111562
   DILL DD, 1982, R&D MANAGE, V12, P147, DOI 10.1111/j.1467-9310.1982.tb00500.x
   Goldberg LR, 2006, J RES PERS, V40, P84, DOI 10.1016/j.jrp.2005.08.007
   Gregoriades A, 2004, 12TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P154
   Hidellaarachchi D, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3546943
   Hidellaarachchi D, 2022, IEEE T SOFTWARE ENG, V48, P2105, DOI 10.1109/TSE.2021.3051898
   Hoda R, 2022, IEEE T SOFTWARE ENG, V48, P3808, DOI 10.1109/TSE.2021.3106280
   Jia JD, 2015, INT CONF SOFTW ENG, P7, DOI 10.1109/ICSESS.2015.7338995
   John M., 2005, ACM SIGSOFT SOFTWARE, V30, P1, DOI [10.1145/1082983.1083000, DOI 10.1145/1082983.1083000]
   John O. P., 1999, Handbook of personality: Theory and research, P102
   Johnson JA, 2014, J RES PERS, V51, P78, DOI 10.1016/j.jrp.2014.05.003
   Kanij T, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING CHASE 2015, P1, DOI 10.1109/CHASE.2015.7
   Karn JS, 2006, BEHAV RES METHODS, V38, P495, DOI 10.3758/BF03192804
   Kosti MV, 2014, INFORM SOFTWARE TECH, V56, P973, DOI 10.1016/j.infsof.2014.03.004
   Madampe K, 2022, IEEE T SOFTWARE ENG, V48, P3737, DOI 10.1109/TSE.2021.3104732
   Martinez LG, 2010, P 15 ANN C INN TECHN, DOI DOI 10.1145/1822090.1822159
   MCCRAE RR, 1992, J PERS, V60, P175, DOI 10.1111/j.1467-6494.1992.tb00970.x
   Mendes F, 2021, INFORM SOFTWARE TECH, V136, DOI 10.1016/j.infsof.2021.106586
   Mischel W., 2008, Introduction to personality: toward an integrative science of the person, V8th
   Murukannaiah PK, 2016, INT REQUIR ENG CONF, P176, DOI 10.1109/RE.2016.68
   Neuman GA, 1999, GROUP ORGAN MANAGE, V24, P28, DOI 10.1177/1059601199241003
   Palan S, 2018, J BEHAV EXP FINANC, V17, P22, DOI 10.1016/j.jbef.2017.12.004
   Russo D, 2021, Arxiv, DOI arXiv:2107.07944
   Russo D, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10106-1
   Salleh N, 2014, EMPIR SOFTW ENG, V19, P714, DOI 10.1007/s10664-012-9238-4
   Soomro AB, 2016, The effect of software engineers' personality traits on team climate and performance, V73, DOI [10.1016/j.infsof.2016.01.006, DOI 10.1016/J.INFSOF.2016.01.006]
   Vishnubhotla SD, 2020, INFORM SOFTWARE TECH, V126, DOI 10.1016/j.infsof.2020.106335
   Wiesche M, 2014, SIGMIS-CPR'14: PROCEEDINGS OF THE 2014 CONFERENCE ON COMPUTERS AND PEOPLE RESEARCH, P149, DOI 10.1145/2599990.2600012
   Xia X, 2017, PROC IEEE INT CONF S, P318, DOI 10.1109/ICSME.2017.50
   Yilmaz M, 2017, INFORM SOFTWARE TECH, V86, P101, DOI 10.1016/j.infsof.2017.01.005
NR 42
TC 1
Z9 1
U1 1
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2024
VL 29
IS 1
AR 32
DI 10.1007/s10664-023-10426-4
PG 56
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DK0P5
UT WOS:001131816200001
DA 2024-08-05
ER

PT J
AU Liaskos, S
AF Liaskos, Sotirios
TI On the intuitive comprehensibility of contribution links in goal models:
   an experimental study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Requirements engineering; Conceptual modeling; Goal modeling;
   Multi-criteria decision making; Empirical methods
ID COGNITIVE-STYLE; MATH ANXIETY; DECISION-MAKING; UNDERSTANDABILITY;
   REPRESENTATION; ALTERNATIVES; PSYTOOLKIT; JUDGMENT; SYSTEMS; FAMILY
AB Goal models have long been considered to be useful tools for representing and analyzing complex decision problems in various stages of the software development lifecycle. Their usefulness for such tasks lies in their ability to compactly represent large numbers of alternative solutions to requirements problems and to capture the impact of each solution to high-level qualities of interest. In this way, goal models allow identification of optimal choices with respect to such quality priorities. To represent the impact of solutions to qualities, goal models utilize contribution links, a special diagrammatic modeling construct. Researchers of goal modeling languages have introduced various ways to visualize the particular construct and to define formal semantics for it. However, there is little evidence that, during actual use, the proposed visualizations evoke a way of performing diagrammatic inferences that is consistent with the corresponding formal semantics. We conduct an experimental study aimed at comparing two visualization choices for contribution links, symbolic versus numeric, with respect to their ability to evoke inferences that are consistent with their formal semantics. The experiment also explores if individual psychological differences including trait cognitive style, mathematics anxiety, and mental math ability, affect this evocation. Participants are asked to make a series of diagrammatic inferences over two sets of goal models each adopting one of the two competing visualization formats, symbolic vs. numeric. We measure accuracy, that is, the level to which participant decisions are consistent with the formal semantics proposed for each visualization, and investigate the effect to accuracy of various relevant factors - visualization choice, individual differences, and reasoning method adopted. Findings include that most participants adopt specific inference rules instead of working intuitively, that such rules are more consistent with the formal semantics in numeric models, that the utilization of negative contributions and notions of goal denial may hinter accuracy, and that the individual differences considered do not play an important role in either accuracy or choice of inference method.
C1 [Liaskos, Sotirios] York Univ, Sch Informat Technol, 4700 Keele St, Toronto, ON M3J 1P3, Canada.
C3 York University - Canada
RP Liaskos, S (corresponding author), York Univ, Sch Informat Technol, 4700 Keele St, Toronto, ON M3J 1P3, Canada.
EM liaskos@yorku.ca
FU Natural Sciences and Engineering Research Council of Canada
FX No Statement Available
CR Abrahao S, 2019, INFORM SOFTWARE TECH, V116, DOI 10.1016/j.infsof.2019.08.003
   Allinson C., 2012, The Cognitive Style Index: Technical manual and user guide
   Allinson CW, 1996, J MANAGE STUD, V33, P119, DOI 10.1111/j.1467-6486.1996.tb00801.x
   Amyot Daniel, 2011, Journal of Software, V6, P747, DOI 10.4304/jsw.6.5.747-768
   Amyot D, 2010, INT J INTELL SYST, V25, P841, DOI 10.1002/int.20433
   [Anonymous], 2022, AMAZON MECH TURK
   [Anonymous], 1983, Mental Models, DOI DOI 10.4324/9781315802725
   Armstrong SteveJ., 2000, EDUC PSYCHOL-UK, V20, P323, DOI DOI 10.1080/014434100750018020
   Armstrong SJ, 2020, FRONT PSYCHOL, V11, DOI 10.3389/fpsyg.2020.01265
   Asahi T, 1995, INFORM SYST RES, V6, P357, DOI 10.1287/isre.6.4.357
   Ashcraft MH, 2002, CURR DIR PSYCHOL SCI, V11, P181, DOI 10.1111/1467-8721.00196
   Ashcraft MH, 2001, J EXP PSYCHOL GEN, V130, P224, DOI 10.1037/0096-3445.130.2.224
   Blazhenkova O, 2009, APPL COGNITIVE PSYCH, V23, P638, DOI 10.1002/acp.1473
   Bork D, 2021, SOFTW SYST MODEL, V20, P939, DOI 10.1007/s10270-021-00895-w
   Brooke J., 1996, USABILITY EVALUATION, P189, DOI DOI 10.1201/9781498710411-35
   Caire P, 2013, S VIS LANG HUM CEN C, P115, DOI 10.1109/RE.2013.6636711
   Chandler D., 2007, Semiotics: The Basics, V2nd, P307, DOI [10.4324/9780203014936, DOI 10.4324/9780203014936]
   Crump MJC, 2013, PLOS ONE, V8, DOI 10.1371/journal.pone.0057410
   Dalpiaz F, 2016, Arxiv, DOI [arXiv:1605.07767, DOI 10.48550/ARXIV.1605.07767]
   DARDENNE A, 1993, SCI COMPUT PROGRAM, V20, P3, DOI 10.1016/0167-6423(93)90021-G
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   Dimara E, 2018, IEEE T VIS COMPUT GR, V24, P749, DOI 10.1109/TVCG.2017.2745138
   Engin A, 2017, DECIS SUPPORT SYST, V103, P94, DOI 10.1016/j.dss.2017.09.007
   Epstein S, 1996, J PERS SOC PSYCHOL, V71, P390, DOI 10.1037/0022-3514.71.2.390
   Evans C., 2008, N AM J PSYCHOL, V10, P567
   Figl K, 2016, REQUIR ENG, V21, P63, DOI 10.1007/s00766-014-0210-2
   Genero M, 2008, DATA KNOWL ENG, V64, P534, DOI 10.1016/j.datak.2007.09.011
   Gettinger J, 2013, DECIS SUPPORT SYST, V54, P976, DOI 10.1016/j.dss.2012.10.023
   Giorgini P, 2003, LECT NOTES COMPUT SC, V2800, P1
   Giorgini P, 2002, LECT NOTES COMPUT SC, V2503, P167
   González-Baixauli B, 2004, 12TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P198
   Guizzardi G., 2005, ONTOLOGICAL FDN STRU
   Hadar I, 2013, INFORM SOFTWARE TECH, V55, P1823, DOI 10.1016/j.infsof.2013.05.003
   HAMMOND KR, 1987, IEEE T SYST MAN CYB, V17, P753, DOI 10.1109/TSMC.1987.6499282
   Hmieleski KM, 2006, J SMALL BUS MANAGE, V44, P45, DOI 10.1111/j.1540-627X.2006.00153.x
   Hopko DR, 2003, ASSESSMENT, V10, P178, DOI 10.1177/1073191103010002008
   Horkoff J, 2011, Requir Eng (REJ), P1
   Horkoff J, 2006, Using i* Models for Evaluation
   Horkoff J, 2016, REQUIR ENG, V21, P29, DOI 10.1007/s00766-014-0209-8
   Houy Constantin, 2012, Conceptual Modeling. Proceedings 31st International Conference, ER 2012, P64, DOI 10.1007/978-3-642-34002-4_5
   Huysmans J, 2011, DECIS SUPPORT SYST, V51, P141, DOI 10.1016/j.dss.2010.12.003
   JONES DR, 1995, ORGAN BEHAV HUM DEC, V61, P214, DOI 10.1006/obhd.1995.1017
   Jost G, 2016, COMPUT STAND INTER, V48, P90, DOI 10.1016/j.csi.2016.04.006
   Kelton AS, 2010, J INF SYST, V24, P79, DOI 10.2308/jis.2010.24.2.79
   KIERAS DE, 1984, COGNITIVE SCI, V8, P255, DOI 10.1016/S0364-0213(84)80003-8
   KIRBY JR, 1988, CONTEMP EDUC PSYCHOL, V13, P169, DOI 10.1016/0361-476X(88)90017-3
   Krogstie J, 2006, EUR J INFORM SYST, V15, P91, DOI 10.1057/palgrave.ejis.3000598
   Krogstie John, 2012, ModelBased Development and Evolution of Information Systems, P205
   Letier E., 2004, Software Engineering Notes, V29, P53, DOI 10.1145/1041685.1029905
   Liaskos S, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P9, DOI 10.1109/RE.2005.19
   Liaskos S., 2012, 2012 IEEE 20th International Requirements Engineering Conference (RE 2012), P221, DOI 10.1109/RE.2012.6345808
   Liaskos Sotirios, 2011, Advanced Information Systems Engineering. Proceedings 23rd International Conference, CAiSE 2011, P77, DOI 10.1007/978-3-642-21640-4_8
   Liaskos S, 2012, Tech rep
   Liaskos Sotirios, 2023, Borealis, V1, DOI 10.5683/SP3/T38E48
   Liaskos S, 2022, SOFTW SYST MODEL, V21, P2243, DOI 10.1007/s10270-021-00968-w
   Liaskos S, 2021, LECT NOTES COMPUT SC, V13011, P330, DOI 10.1007/978-3-030-89022-3_26
   Liaskos S, 2019, LECT NOTES COMPUT SC, V11788, P525, DOI 10.1007/978-3-030-33223-5_43
   Liaskos S, 2018, 33RD ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, P1272, DOI 10.1145/3167132.3167269
   Liaskos S, 2017, INT SYMP EMP SOFTWAR, P466, DOI 10.1109/ESEM.2017.69
   Liaskos S, 2013, LECT NOTES COMPUT SC, V8217, P19, DOI 10.1007/978-3-642-41924-9_3
   Liaskos S, 2012, INFORM SYST, V37, P767, DOI 10.1016/j.is.2012.05.006
   Liaskos S, 2011, REQUIR ENG, V16, P227, DOI 10.1007/s00766-011-0129-9
   Luo WH, 2019, DECIS SUPPORT SYST, V122, DOI 10.1016/j.dss.2019.05.001
   Lurie NH, 2007, J MARKETING, V71, P160, DOI 10.1509/jmkg.71.1.160
   Ma LC, 2011, DECIS SUPPORT SYST, V51, P712, DOI 10.1016/j.dss.2011.04.004
   Maiden NAM, 2002, P 8 INT WORK C REQ E
   Maxwell S.E., 2004, Designing experiments and analyzing data: A model comparison perspective, V2nd
   Miettinen K, 2014, OR SPECTRUM, V36, P3, DOI 10.1007/s00291-012-0297-0
   Morales JM, 2016, J SYST SOFTWARE, V114, P82, DOI 10.1016/j.jss.2015.12.056
   Morales JM, 2015, J SYST SOFTWARE, V100, P1, DOI 10.1016/j.jss.2014.10.010
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   Mylopoulos J, 2001, IEEE SOFTWARE, V18, P92, DOI 10.1109/52.903174
   Pajer S, 2017, IEEE T VIS COMPUT GR, V23, P611, DOI 10.1109/TVCG.2016.2598589
   PAYNE SJ, 1991, BEHAV INFORM TECHNOL, V10, P3, DOI 10.1080/01449299108924268
   Pracht W. E., 1990, Decision Support Systems, V6, P13, DOI 10.1016/0167-9236(90)90011-F
   Preece YR, 2011, Interaction Design: beyond human-computer interaction
   Richardson A., 1977, J MENTAL IMAG, V1, P109
   Rosnow Ralph., 2008, BEGINNING BEHAV RES, V6th
   Saaty T. L., 2008, Int. J. Serv. Sci, V1, P83, DOI DOI 10.1504/IJSSCI.2008.017590
   Santos A, 2020, IEEE T SOFTWARE ENG, V46, P566, DOI 10.1109/TSE.2018.2864633
   Santos M, 2018, LECT NOTES COMPUT SC, V11157, P424, DOI 10.1007/978-3-030-00847-5_30
   Santos M, 2018, INT REQUIR ENG CONF, P228, DOI 10.1109/RE.2018.00031
   Santos M, 2016, INT REQUIR ENG CONF, P206, DOI 10.1109/RE.2016.51
   SCHWEIGER DM, 1983, ACAD MANAGE J, V26, P185, DOI 10.5465/256146
   Speier C, 2006, INT J HUM-COMPUT ST, V64, P1115, DOI 10.1016/j.ijhcs.2006.06.007
   Steinle F, 1997, PHILOS SCI, V64, pS65, DOI 10.1086/392587
   Stoet G, 2017, TEACH PSYCHOL, V44, P24, DOI 10.1177/0098628316677643
   Stoet G, 2010, BEHAV RES METHODS, V42, P1096, DOI 10.3758/BRM.42.4.1096
   STONE DN, 1991, ORGAN BEHAV HUM DEC, V49, P42, DOI 10.1016/0749-5978(91)90041-Q
   Strauss A., 2008, Basics of qualitative research: Techiques and procedures for developing grounded theory, V3rd ed.
   Teruel MA, 2012, INFORM SOFTWARE TECH, V54, P1215, DOI 10.1016/j.infsof.2012.06.001
   Turetken O, 2017, LECT NOTES BUS INF P, V286, P72, DOI 10.1007/978-3-319-60048-2_7
   UMANATH NS, 1994, DECISION SCI, V25, P795, DOI 10.1111/j.1540-5915.1994.tb01870.x
   Vance CM, 2007, ACAD MANAG LEARN EDU, V6, P167, DOI 10.5465/AMLE.2007.25223457
   VESSEY I, 1991, DECISION SCI, V22, P219, DOI 10.1111/j.1540-5915.1991.tb00344.x
   Young R.M., 1983, MENTAL MODELS, P35
   Yu E., 2010, SOCIAL MODELING REQU
   Yu ES, 2000, GRL-Goal-oriented Requirement Language
   Yu ESK, 1997, RE '97 - PROCEEDINGS OF THE THIRD IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, P226, DOI 10.1109/ISRE.1997.566873
NR 99
TC 0
Z9 0
U1 4
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2024
VL 29
IS 1
AR 26
DI 10.1007/s10664-023-10376-x
PG 54
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CF5J9
UT WOS:001123846400003
DA 2024-08-05
ER

PT J
AU Charoenwet, W
   Thongtanunam, P
   Pham, VT
   Treude, C
AF Charoenwet, Wachiraphan
   Thongtanunam, Patanamon
   Pham, Van-Thuan
   Treude, Christoph
TI Toward effective secure code reviews: an empirical study of
   security-related coding weaknesses
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Secure code review; Code review; Vulnerability; Coding weakness;
   Software weakness
AB Identifying security issues early is encouraged to reduce the latent negative impacts on the software systems. Code review is a widely-used method that allows developers to manually inspect modified code, catching security issues during a software development cycle. However, existing code review studies often focus on known vulnerabilities, neglecting coding weaknesses, which can introduce real-world security issues that are more visible through code review. The practices of code reviews in identifying such coding weaknesses are not yet fully investigated. To better understand this, we conducted an empirical case study in two large open-source projects, OpenSSL and PHP. Based on 135,560 code review comments, we found that reviewers raised security concerns in 35 out of 40 coding weakness categories. Surprisingly, some coding weaknesses related to past vulnerabilities, such as memory errors and resource management, were discussed less often than the vulnerabilities. Developers attempted to address raised security concerns in many cases (39%-41%), but a substantial portion was merely acknowledged (30%-36%), and some went unfixed due to disagreements about solutions (18%-20%). This highlights that coding weaknesses can slip through code review even when identified. Our findings suggest that reviewers can identify various coding weaknesses leading to security issues during code reviews. However, these results also reveal shortcomings in current code review practices, indicating the need for more effective mechanisms or support for increasing awareness of security issue management in code reviews.
C1 [Charoenwet, Wachiraphan; Thongtanunam, Patanamon; Pham, Van-Thuan; Treude, Christoph] Univ Melbourne, Fac Engn & Informat Technol, Sch Comp & Informat Syst, Melbourne, Australia.
   [Treude, Christoph] Singapore Management Univ, Sch Comp & Informat Syst, Singapore, Singapore.
C3 University of Melbourne; Singapore Management University
RP Charoenwet, W (corresponding author), Univ Melbourne, Fac Engn & Informat Technol, Sch Comp & Informat Syst, Melbourne, Australia.
EM wcharoenwet@student.unimelb.edu.au; patanamon.t@unimelb.edu.au;
   thuan.pham@unimelb.edu.au; ctreude@smu.edu.sg
RI Treude, Christoph/AAZ-6257-2021
OI Charoenwet, Wachiraphan/0000-0002-9814-3514
FU University of Melbourne
FX No Statement Available
CR Alfadel M, 2023, J SYST SOFTWARE, V203, DOI 10.1016/j.jss.2023.111752
   [Anonymous], 2017, Owasp Code Review Guide
   [Anonymous], 2022, Common Weakness Enumeration (CWE-699)
   [Anonymous], 2021, "Common weakness enumeration
   [Anonymous], 2023, OWASP Application Security Verification Standard
   [Anonymous], 2024, NVD-CVEs and the NVD Process
   Assal H, 2018, 14 S US PRIV SEC SOU, P8
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Balachandran V, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P931, DOI 10.1109/ICSE.2013.6606642
   Beller M, 2014, 11 WORK C MIN SOFTW, V5, P202, DOI [10.1145/2597073.2597082, DOI 10.1145/2597073.2597082]
   Bojanova I, 2023, IT PROF, V25, P7, DOI 10.1109/MITP.2023.3238631
   Bojanova I, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2016), P175, DOI 10.1109/QRS.2016.29
   Bosu Amiangshu, 2013, 2013 IEEE Seventh International Conference on Software Security and Reliability Companion (SERE-C), P229, DOI 10.1109/SERE-C.2013.22
   Bosu A, 2013, P 11 INT DOCT S EMP
   Bosu A, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P257, DOI 10.1145/2635868.2635880
   Braz L, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P810, DOI 10.1145/3540250.3549135
   Braz L, 2022, PROC INT CONF SOFTW, P1317, DOI 10.1145/3510003.3511560
   Braz L, 2021, PROC INT CONF SOFTW, P499, DOI 10.1109/ICSE43902.2021.00054
   Carter K, 2017, IEEE SOFTWARE, V34, P93, DOI 10.1109/MS.2017.3571578
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Croft R, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10054-w
   Dempsey K, 2020, NISTIR 8011 Automation support for security control assessments: software vulnerability management, DOI [10.6028/NIST.IR.8011-4, DOI 10.6028/NIST.IR.8011-4]
   di Biase M, 2016, IEEE INT WORK C SO, P21, DOI 10.1109/SCAM.2016.30
   Durumeric Z, 2014, PROCEEDINGS OF THE 2014 ACM INTERNET MEASUREMENT CONFERENCE (IMC'14), P475, DOI 10.1145/2663716.2663755
   Edmundson Anne, 2013, Engineering Secure Software and Systems. 5th International Symposium, ESSoS 2013. Proceedings, P197, DOI 10.1007/978-3-642-36563-8_14
   Efstathiou V, 2018, IEEE WORK CONF MIN S, P38, DOI 10.1145/3196398.3196448
   El Zanaty F, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3239525
   Gerosa M, 2021, PROC INT CONF SOFTW, P1046, DOI 10.1109/ICSE43902.2021.00098
   Golzadeh M, 2020, P 2020 IEEE ACM 42 I, P6, DOI [10.1145/3387940.3391503, DOI 10.1145/3387940.3391503]
   Gonçalves PW, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10123-8
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   Han XF, 2021, INT C PROGRAM COMPRE, P323, DOI 10.1109/ICPC52881.2021.00038
   Hazimeh A, 2020, P ACM MEAS ANAL COMP, V4, DOI [10.1145/3410220.3456276, 10.1145/3428334]
   Hein D, 2009, INF SECUR J, V18, P8, DOI 10.1080/19393550802623206
   Hoole AM, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2915994
   Howard MA, 2006, IEEE SECUR PRIV, V4, P74, DOI 10.1109/MSP.2006.84
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kononenko O, 2016, PROC INT CONF SOFTW, P1028, DOI 10.1145/2884781.2884840
   Kononenko O, 2015, PROC IEEE INT CONF S, P111, DOI 10.1109/ICSM.2015.7332457
   Kudrjavets G, 2022, IEEE WORK CONF MIN S, P579, DOI 10.1145/3524842.3528432
   Lenarduzzi V, 2021, J SYST SOFTWARE, V171, DOI 10.1016/j.jss.2020.110806
   Lipp S, 2022, PROCEEDINGS OF THE 31ST ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2022, P544, DOI 10.1145/3533767.3534380
   Mäntylä MV, 2009, IEEE T SOFTWARE ENG, V35, P430, DOI 10.1109/TSE.2008.71
   McConnell S., 2004, Code Complete
   McGraw G, 2004, IEEE SECUR PRIV, V2, P80, DOI 10.1109/MSECP.2004.1281254
   McHugh ML, 2012, BIOCHEM MEDICA, V22, P276, DOI 10.11613/bm.2012.031
   Migues S, 2021, Why 'Shift Everywhere' Is The New 'Shift Left' For Software Testin
   Munaiah N, 2017, EMPIR SOFTW ENG, V22, P1305, DOI 10.1007/s10664-016-9447-3
   Nagappan M., 2013, 2013 9 JOINT M EUR S, P466, DOI [10.1145/2491411.2491415, DOI 10.1145/2491411.2491415]
   Paul R, 2021, PROC IEEE ACM INT C, P244, DOI 10.1109/ICSE-Companion52605.2021.00113
   Paul R, 2021, PROC INT CONF SOFTW, P1373, DOI 10.1109/ICSE43902.2021.00124
   Perry DE, 2004, PROC INT CONF SOFTW, P736, DOI 10.1109/ICSE.2004.1317512
   Radim R, 2011, Gensim-python framework for vector space modelling, V3
   Rahman MM, 2017, IEEE WORK CONF MIN S, P215, DOI 10.1109/MSR.2017.17
   Rigby P. C., 2013, P ESEC FSE, P202, DOI DOI 10.1145/2491411.2491444
   Rigby PC, 2012, IEEE SOFTWARE, V29, P56, DOI 10.1109/MS.2012.24
   Romano J., 2006, ANN M FLOR ASS I RES, DOI DOI 10.1017/CBO9781107415324.004
   Ruangwan S, 2019, EMPIR SOFTW ENG, V24, P973, DOI 10.1007/s10664-018-9646-1
   Sidorov G, 2014, COMPUT SIST, V18, P491
   Smith Larry., 2001, SHIFT LEFT TESTING
   Snowball, 2024, ABOUT US
   Tata S, 2007, SIGMOD RECORD, V36, P7, DOI 10.1145/1328854.1328855
   Thongtanunam P, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P168, DOI 10.1109/MSR.2015.23
   Triola M.F., 2009, Elementary Statistics, V11th
   Tsipenyuk K, 2005, IEEE SECUR PRIV, V3, P81, DOI 10.1109/MSP.2005.159
   Turner S, 2014, Journal of Technology Research, P1
   Verma M, 2016, PROCEEDINGS OF THE NINTH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING (WSDM'16), P277, DOI 10.1145/2835776.2835840
   Weir C, 2022, IEEE SECUR PRIV, V20, P8, DOI 10.1109/MSEC.2022.3150238
   Wessel M, 2020, PROC IEEE INT CONF S, P1, DOI 10.1109/ICSME46990.2020.00011
   Ye X, 2016, PROC INT CONF SOFTW, P404, DOI 10.1145/2884781.2884862
NR 70
TC 0
Z9 0
U1 2
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2024
VL 29
IS 4
AR 88
DI 10.1007/s10664-024-10496-y
PG 47
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TT9W1
UT WOS:001243637300002
OA hybrid
DA 2024-08-05
ER

PT J
AU Kudrjavets, G
   Rastogi, A
AF Kudrjavets, Gunnar
   Rastogi, Ayushi
TI Does code review speed matter for practitioners?
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Review
DE Code review; Code velocity; Developer productivity; Time-to-merge
AB Increasing code velocity is a common goal for a variety of software projects. The efficiency of the code review process significantly impacts how fast the code gets merged into the final product and reaches the customers. We conducted a qualitative survey to study the code velocity-related beliefs and practices in place. We analyzed 75 completed surveys from SurIndustryDevs participants from the industry and 36 from the open-source community. Our critical findings are (a) the industry and open-source community hold a similar set of beliefs, (b) quick reaction time is of utmost importance and applies to the tooling infrastructure and the behavior of other engineers, (c) time-to-merge is the essential code review metric to improve, (d) engineers are divided about the benefits of increased code velocity for their career growth, (e) the controlled application of the commit-then-review model can increase code velocity. Our study supports the continued need to invest in and improve code velocity regardless of the underlying organizational ecosystem.
C1 [Kudrjavets, Gunnar; Rastogi, Ayushi] Univ Groningen, Bernoulli Inst Math Comp Sci & Artificial Intellig, NL-9712 CP Groningen, Netherlands.
C3 University of Groningen
RP Kudrjavets, G (corresponding author), Univ Groningen, Bernoulli Inst Math Comp Sci & Artificial Intellig, NL-9712 CP Groningen, Netherlands.
EM g.kudrjavets@rug.nl; a.rastogi@rug.nl
RI Kudrjavets, Gunnar/AAN-9859-2021
OI Kudrjavets, Gunnar/0000-0003-3730-4692; Rastogi,
   Ayushi/0000-0002-0939-6887
FU Net BSD developer communities
FX We thank all the survey participants for their insightful comments and
   suggestions. We are incredibly grateful to the Blender, Gerrit, Free
   BSD, and Net BSD developer communities. Our contacts in these teams
   either circulated the survey internally or allowed us to use their forum
   platforms or mailing lists to solicit survey participants.
CR Alami Adam, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P220, DOI 10.1145/3383219.3383242
   Allen I. E., 2007, Qual Prog, V40, P64, DOI DOI 10.1111/J.1365-2929.2004.02012.X
   Armstrong K, 2022, Category direction-code review 4
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Bagert DJ, 2002, COMMUN ACM, V45, P92, DOI 10.1145/581571.581603
   Baltes S, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962628
   Barnett M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P134, DOI 10.1109/ICSE.2015.35
   Barnett V., 1984, Biom J, V30, P866, DOI DOI 10.1002/BIMJ.4710300725
   Baum T, 2019, EMPIR SOFTW ENG, V24, P1762, DOI 10.1007/s10664-018-9676-8
   Baysal O, 2016, EMPIR SOFTW ENG, V21, P932, DOI 10.1007/s10664-015-9366-8
   BECKMAN RJ, 1983, TECHNOMETRICS, V25, P119, DOI 10.2307/1268541
   Bird C, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P191, DOI 10.1109/MSR.2015.25
   Blender, 2022, Code review
   Boone H.N., 2012, Journal of Extension, V50
   Bosu Amiangshu, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P133, DOI 10.1109/ESEM.2013.23
   Brown J., 2011, Shiken: JALT Testing Evaluation SIG Newsletter, V15, P10
   Carifio J., 2007, Journal of Social Sciences, V3, P106, DOI DOI 10.3844/JSSP.2007.106.116
   Chen L, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P1314, DOI 10.1145/3540250.3558945
   Chen LT., 2021, Journal of Educational Technology Development and Exchange (JETDE), V13, P3, DOI DOI 10.18785/JETDE.1302.04
   Chouchen M, 2023, EMPIR SOFTW ENG, V28, DOI 10.1007/s10664-023-10300-3
   Chromium, 2023, Contributing to chromium
   Clason D.L., 1994, Journal of Agricultural Education, V35, P31, DOI [10.5032/jae.1994.04031, DOI 10.5032/JAE.1994.04031]
   Cunha Atacilio, 2021, SBES '21: Brazilian Symposium on Software Engineering, P269, DOI 10.1145/3474624.3477063
   Cunha A, 2021, PROCEEDINGS OF THE 20TH BRAZILIAN SYMPOSIUM ON SOFTWARE QUALITY, SBOS 2021, DOI 10.1145/3493244.3493255
   Czerwonka J, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P27, DOI 10.1109/ICSE.2015.131
   dos Santos EW, 2017, XXXI BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2017), P84, DOI 10.1145/3131151.3131161
   Feitelson DG, 2023, J SYST SOFTWARE, V204, DOI 10.1016/j.jss.2023.111774
   Feitelson DG, 2013, IEEE INTERNET COMPUT, V17, P8, DOI 10.1109/MIC.2013.25
   Felderer M., 2020, Contemporary empirical methods in software engineering
   Fowler M., 2006, Continuous Integration
   FreeBSD Foundation, 2022, Obtaining write access to the freeBSD source tree
   Frenkel S., 2021, UGLY TRUTH INSIDE FA
   GitHub, 2021, Metrics available with GitHub insights-GitHub docs
   Gold NE, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10057-7
   Gonçalves PW, 2020, IEEE WORK CONF MIN S, P606, DOI 10.1145/3379597.3387509
   Gonzalez-Barahona JM, 2020, Mining software repositories while respecting privacy
   Google, 2023, Google engineering practices documentation
   Google, 2023, Speed of code reviews
   Greiler M, 2020, Code reviews-from bottleneck to superpower with Michaela Greiler
   Groves RM, 2006, PUBLIC OPIN QUART, V70, P646, DOI 10.1093/poq/nfl033
   Hong Y, 2022, EUR CON SFTWR MTNCE, P1034, DOI 10.1109/SANER53432.2022.00121
   Izquierdo-Cortazar D., 2017, P 21 INT C EV ASS SO, P214, DOI DOI 10.1145/3084226.3084247
   Jiang YJ, 2013, IEEE WORK CONF MIN S, P101, DOI 10.1109/MSR.2013.6624016
   Killalea T., 2019, Communications of the ACM, V62, P44, DOI DOI 10.1145/3345626
   Kim H, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P1398, DOI 10.1145/3540250.3558950
   Kononenko O, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P124, DOI 10.1145/3183519.3183542
   Kononenko O, 2016, PROC INT CONF SOFTW, P1028, DOI 10.1145/2884781.2884840
   Kushner D, 2011, Facebook philosophy: move fast and break things
   Liddell TM, 2018, J EXP SOC PSYCHOL, V79, P328, DOI 10.1016/j.jesp.2018.08.009
   Linux, 2023, Everything you ever wanted to know about Linux -stable releases
   Llull Ramon., 1988, Blanquerna
   LLVM Foundation, 2023, LLVM code-review policy and practices
   LLVM Foundation, 2023, Contributing to LLVM-LLVM 12 documentation
   MacLeod L, 2018, IEEE SOFTWARE, V35, P34, DOI 10.1109/MS.2017.265100500
   Maddila C, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3544791
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Martin RC, 2003, AGILE SOFTWARE DEV P
   McCarthy J., 1995, Dynamics of software development
   McIntosh S, 2016, EMPIR SOFTW ENG, V21, P2146, DOI 10.1007/s10664-015-9381-9
   McKusick MK., 2015, The design and implementation of the FreeBSD operating system, V2
   McMartin A, 2021, Introducing developer velocity lab-a research initiative to amplify developer work and well-being
   Microsoft Research, 2023, Developer velocity lab
   Microsoft Research, 2019, 14 IEEE ACM INT WORK
   MILLER GA, 1956, PSYCHOL REV, V63, P81, DOI 10.1037/h0043158
   Mozilla, 2023, Code reviews-Firefox source docs documentation
   Nazir Sumaira, 2020, ICSIM '20: Proceedings of the 3rd International Conference on Software Engineering and Information Management, P210, DOI 10.1145/3378936.3378954
   Palantir, 2018, Code review best practices
   Phabricator, 2021, Writing reviewable code
   PostgreSQL, 2019, Submitting a patch-PostgreSQL Wiki
   Raina SK, 2015, INDIAN J MED RES, V141, P127, DOI 10.4103/0971-5916.154519
   Rigby P. C., 2013, P ESEC FSE, P202, DOI DOI 10.1145/2491411.2491444
   Rigby P.C., 2006, A preliminary examination of code review processes in open source projects
   Rigby PC, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P541
   Riggs P., 2022, MOVE FASTER WAIT LES
   Sadowski C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P181, DOI 10.1145/3183519.3183525
   Schröder M, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P1419, DOI 10.1145/3540250.3558942
   Shan QH, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P472, DOI 10.1145/3540250.3549104
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.2307/2333709
   Shull F., 2008, GUIDE ADV EMPIRICAL, DOI DOI 10.1007/978-1-84800-044-5
   Smith MG, 2019, BMC MED RES METHODOL, V19, DOI 10.1186/s12874-019-0868-8
   Soderberg Emma, 2022, EASE 2022: The International Conference on Evaluation and Assessment in Software Engineering 2022, P170, DOI 10.1145/3530019.3530037
   Storey MA, 2022, 15TH INTERNATIONAL CONFERENCE ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE 2022), P26, DOI 10.1145/3528579.3529177
   Synopsys Inc, 2020, The heartbleed bug
   Tanna J, 2021, Improving team efficiency by measuring and improving code review cycle time
   The FreeBSD Documentation Project, 2022, Committer's guide
   The Linux Foundation, 2022, A beginner's guide to Linux Kernel development
   Thongtanunam P, 2017, EMPIR SOFTW ENG, V22, P768, DOI 10.1007/s10664-016-9452-6
   Thongtanunam P, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P141, DOI 10.1109/SANER.2015.7081824
   Tsay JT., 2017, Software developers using signals in transparent environments, DOI [10.1184/R1/6723026.v1, DOI 10.1184/R1/6723026.V1]
   Vanian J, 2022, Internal Facebook memo warns company must be disciplined, prioritize ruthlessly
   Weigerber P, 2008, P 2008 INT WORK C MI, P67, DOI DOI 10.1145/1370750.1370767
   Winters Titus, 2020, Software Engineering at Google: Lessons Learned from Programming Over Time
   Wu Qiushi., 2021, FEASIBILITY STEALTHI
   Xin Tan, 2019, Proceedings of the ACM on Human-Computer Interaction, V3, DOI 10.1145/3359210
   Zanjani MB, 2016, IEEE T SOFTWARE ENG, V42, P530, DOI 10.1109/TSE.2015.2500238
   Zhu JX, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P871, DOI 10.1145/2950290.2950364
NR 96
TC 0
Z9 0
U1 1
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2024
VL 29
IS 1
AR 7
DI 10.1007/s10664-023-10401-z
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA Y3FA3
UT WOS:001104148800002
OA Green Submitted, hybrid, Green Published
DA 2024-08-05
ER

PT J
AU Ahmad, MJ
   Goseva-Popstojanova, K
   Lutz, RR
AF Ahmad, Mohammad Jamil
   Goseva-Popstojanova, Katerina
   Lutz, Robyn R.
TI The untold impact of learning approaches on software fault-proneness
   predictions: an analysis of temporal aspects
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software fault-proneness prediction; Learning approach; Within-release
   prediction; Across-release prediction; Machine learning; Design of
   experiments
ID DEFECT-PREDICTION; RESEARCHER BIAS; SELECTION; FRAMEWORK; METRICS;
   MODELS
AB This paper aims to improve software fault-proneness prediction by investigating the unexplored effects on classification performance of the temporal decisions made by practitioners and researchers regarding (i) the interval for which they will collect longitudinal features (software metrics data), and (ii) the interval for which they will predict software bugs (the target variable). We call these specifics of the data used for training and of the target variable being predicted the learning approach, and explore the impact of the two most common learning approaches on the performance of software fault-proneness prediction, both within a single release of a software product and across releases. The paper presents empirical results from a study based on data extracted from 64 releases of twelve open-source projects. Results show that the learning approach has a substantial, and typically unacknowledged, impact on classification performance. Specifically, we show that one learning approach leads to significantly better performance than the other, both within-release and across-releases. Furthermore, this paper uncovers that, for within-release predictions, the difference in classification performance is due to different levels of class imbalance in the two learning approaches. Our findings show that improved specification of the learning approach is essential to understanding and explaining the performance of fault-proneness prediction models, as well as to avoiding misleading comparisons among them. The paper concludes with some practical recommendations and research directions based on our findings toward improved software fault-proneness prediction.
C1 [Ahmad, Mohammad Jamil; Goseva-Popstojanova, Katerina] West Virginia Univ, Lane Dept Comp Sci & Elect Engn, Morgantown, WV 26505 USA.
   [Ahmad, Mohammad Jamil] West Virginia Univ, John Chambers Coll Business & Econ, Dept Management Informat Syst, Morgantown, WV 26505 USA.
   [Lutz, Robyn R.] Iowa State Univ, Dept Comp Sci, Ames, IA 50011 USA.
C3 West Virginia University; West Virginia University; Iowa State
   University
RP Goseva-Popstojanova, K (corresponding author), West Virginia Univ, Lane Dept Comp Sci & Elect Engn, Morgantown, WV 26505 USA.
EM mohammad.ahmad@mail.wvu.edu; katerina.goseva@mail.wvu.edu;
   rlutz@iastate.edu
OI Lutz, Robyn/0000-0001-5390-7982
FU National Science Foundation
FX The authors thank the reviewers and the handling editor for their
   constructive feedback which helped us to improve the clarity and
   readability of the paper.
CR Agrawal Amritanshu, 2018, 2018 IEEE/ACM 40th International Conference on Software Engineering (ICSE). Proceedings, P1050, DOI 10.1145/3180155.3180197
   Ahmad MJ, 2022, Online supplemental document for the untold impact of learning approaches on software fault-proneness predictions
   Ahmad MJ, 2021, Analysis and classification of software fault-proneness and vulnerabilities
   Alshehri YA, 2018, IEEE SOUTHEASTCON
   Amasaki S, 2020, EMPIR SOFTW ENG, V25, P1573, DOI 10.1007/s10664-019-09777-8
   [Anonymous], 2008, P INT C SOFTW ENG, DOI DOI 10.1145/1370788.1370793
   Apache Software Foundation, 2022, Apache Projects
   Apache Software Foundation, 2022, Apache Software Foundation (ASF) Bugzilla
   Arisholm E, 2007, ISSRE 2007: 18TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P215, DOI 10.1109/ISSRE.2007.22
   Arisholm E, 2010, J SYST SOFTWARE, V83, P2, DOI 10.1016/j.jss.2009.06.055
   Bird Christian, 2009, 2009 20th International Symposium on Software Reliability Engineering (ISSRE 2009), P109, DOI 10.1109/ISSRE.2009.17
   Bluemke I, 2016, ADV INTELL SYST COMP, V470, P39, DOI 10.1007/978-3-319-39639-2_4
   Bowes D, 2018, SOFTWARE QUAL J, V26, P525, DOI 10.1007/s11219-016-9353-3
   Catal C, 2011, EXPERT SYST APPL, V38, P4626, DOI 10.1016/j.eswa.2010.10.024
   Chapman P., 2000, CRISP-DM 1.0: Step-by-step Data Mining Guide
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   D'Ambros Marco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P31, DOI 10.1109/MSR.2010.5463279
   Devine T. R., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P181, DOI 10.1109/ICST.2012.98
   Devine T, 2016, AUTOMAT SOFTW ENG, V23, P253, DOI 10.1007/s10515-014-0160-4
   Elish KO, 2008, J SYST SOFTWARE, V81, P649, DOI 10.1016/j.jss.2007.07.040
   Falessi D, 2020, EMPIR SOFTW ENG, V25, P4805, DOI 10.1007/s10664-020-09868-x
   Fiore A, 2021, 2021 47TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA 2021), P91, DOI 10.1109/SEAA53835.2021.00021
   Galar M, 2012, IEEE T SYST MAN CY C, V42, P463, DOI 10.1109/TSMCC.2011.2161285
   Gao KH, 2011, SOFTWARE PRACT EXPER, V41, P579, DOI 10.1002/spe.1043
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Giger E, 2011, P 8 WORK C MIN SOFTW, P83, DOI [10.1145/1985441.1985456, DOI 10.1145/1985441.1985456]
   Giger E, 2012, INT SYMP EMP SOFTWAR, P171, DOI 10.1145/2372251.2372285
   Gondra I, 2008, J SYST SOFTWARE, V81, P186, DOI 10.1016/j.jss.2007.05.035
   Gong LN, 2022, IEEE T SOFTWARE ENG, V48, P5030, DOI 10.1109/TSE.2021.3131950
   Goseva-Popstojanova K, 2019, P INT COMP SOFTW APP, P336, DOI 10.1109/COMPSAC.2019.10229
   Goyal S, 2022, ARTIF INTELL REV, V55, P2023, DOI 10.1007/s10462-021-10044-w
   Guo L, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P417
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Hamill M, 2009, IEEE T SOFTWARE ENG, V35, P484, DOI 10.1109/TSE.2009.3
   He HB, 2009, IEEE T KNOWL DATA EN, V21, P1263, DOI 10.1109/TKDE.2008.239
   He P, 2015, INFORM SOFTWARE TECH, V59, P170, DOI 10.1016/j.infsof.2014.11.006
   Hosseini S, 2019, IEEE T SOFTWARE ENG, V45, P111, DOI 10.1109/TSE.2017.2770124
   Jiang Y., 2008, DEFECTS 08 P 2008 WO, P16, DOI [DOI 10.1145/1390817.1390822, 10.1145/1390817.1390822]
   Jiang Y, 2008, EMPIR SOFTW ENG, V13, P561, DOI 10.1007/s10664-008-9079-3
   Jira, 2022, Issue Project Tracking Software-Atlassian
   Jureczko M., 2010, P 6 INT C PREDICTIVE, P1, DOI DOI 10.1145/1868328.1868342
   Jureczko M., 2010, Models Methods Syst Dependabil (MMSD), P69
   Jureczko M, 2011, CKJM extended-An extended version of Tool for Calculating Chidamber and Kemerer Java Metrics (and many other metrics)
   Kabir MA, 2021, APPL SOFT COMPUT, V113, DOI 10.1016/j.asoc.2021.107870
   Kamei Y, 2010, PROC IEEE INT CONF S
   Khoshgoftaar T. M., 2010, 2010 Proceedings of 22nd International Conference on Tools with Artificial Intelligence (ICTAI 2010), P137, DOI 10.1109/ICTAI.2010.27
   Khoshgoftaar TM, 2004, EMPIR SOFTW ENG, V9, P229, DOI 10.1023/B:EMSE.0000027781.18360.9b
   Kim S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P481, DOI 10.1145/1985793.1985859
   Koru AG, 2005, IEEE SOFTWARE, V22, P23, DOI 10.1109/MS.2005.149
   Krishnan S, 2013, INFORM SOFTWARE TECH, V55, P1479, DOI 10.1016/j.infsof.2012.11.008
   Krishnan Sandeep., 2011, Proceedings of the 7th International Conference on Predictive Models in Software Engineering. Promise'11, DOI DOI 10.1145/2020390.2020397
   Layman L, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P206
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Li J, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P318, DOI 10.1109/QRS.2017.42
   Ma Y, 2012, INFORM SOFTWARE TECH, V54, P248, DOI 10.1016/j.infsof.2011.09.007
   Madeyski L, 2015, SOFTWARE QUAL J, V23, P393, DOI 10.1007/s11219-014-9241-7
   Mahmood Z, 2018, INFORM SOFTWARE TECH, V99, P148, DOI 10.1016/j.infsof.2018.02.003
   Malhotra R, 2015, P INT C BIOINSP INF, P320, DOI [10.4108/icst.bict.2014.257871, DOI 10.4108/ICST.BICT.2014.257871]
   Malhotra R, 2020, PROCEEDINGS OF THE CONFLUENCE 2020: 10TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING, DATA SCIENCE & ENGINEERING, P300, DOI [10.1109/Confluence47617.2020.9058124, 10.1109/confluence47617.2020.9058124]
   Mende T., 2009, P 5 INT C PREDICTOR, P1, DOI [10.1145/1540438.1540448, DOI 10.1145/1540438.1540448]
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Menzies T, 2010, AUTOMAT SOFTW ENG, V17, P375, DOI 10.1007/s10515-010-0069-5
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Nagappan Nachiappan, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P309, DOI 10.1109/ISSRE.2010.25
   Nagappan N, 2006, ISSRE 2006:17TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P62
   Nagappan N, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P521, DOI 10.1145/1368088.1368160
   Nam J, 2018, IEEE T SOFTWARE ENG, V44, P874, DOI 10.1109/TSE.2017.2720603
   Nam J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P382, DOI 10.1109/ICSE.2013.6606584
   OECD, 2022, OECD Digital Economy Papers, V323, DOI [10.1787/cb6d9eca-en, DOI 10.1787/CB6D9ECA-EN]
   Okutan A, 2014, EMPIR SOFTW ENG, V19, P154, DOI 10.1007/s10664-012-9218-8
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   Pang Y., 2017, Proceedings of the 2017 International Conference on Deep Learning Technologies - ICDLT '17, P6, DOI DOI 10.1145/3094243.3094245
   Pinzger M., 2008, P 16 ACM SIGSOFT INT, P2, DOI DOI 10.1145/1453101.1453105
   Sayyad S. J., 2005, The promise repository of software engineering databases
   Schapire R. E., 2013, Empirical Inference, P37, DOI 10.1007/978-3-642-41136-65
   Shepperd M, 2018, IEEE T SOFTWARE ENG, V44, P1129, DOI 10.1109/TSE.2017.2731308
   Shepperd M, 2014, IEEE T SOFTWARE ENG, V40, P603, DOI 10.1109/TSE.2014.2322358
   Song QB, 2019, IEEE T SOFTWARE ENG, V45, P1253, DOI 10.1109/TSE.2018.2836442
   Song QB, 2011, IEEE T SOFTWARE ENG, V37, P356, DOI 10.1109/TSE.2010.90
   Stavropoulos A., 2008, Stat Methodol, V5, P93, DOI [10.1016/j.stamet.2007.06.001, DOI 10.1016/J.STAMET.2007.06.001]
   Tabassi E, 2023, Artificial Intelligence Risk Management Framework (AI RMF 1.0), DOI DOI 10.6028/NIST.AI.100-1
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Tantithamthavorn C, 2016, IEEE T SOFTWARE ENG, V42, P1092, DOI 10.1109/TSE.2016.2553030
   Tosun A, 2010, INFORM SOFTWARE TECH, V52, P1242, DOI 10.1016/j.infsof.2010.06.006
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Wang S, 2013, IEEE T RELIAB, V62, P434, DOI 10.1109/TR.2013.2259203
   Wang S, 2016, PROC INT CONF SOFTW, P297, DOI 10.1145/2884781.2884804
   Wirth R., 2000, Proceedings of the Fourth International Conference on the Practical Application of Knowledge Discovery and Data Mining, P29
   Wu R, 2011, SIGSOFT FSE, P15, DOI DOI 10.1145/2025113.2025120
   Xu Z, 2018, INT C PROGRAM COMPRE, P132, DOI 10.1145/3196321.3196331
   Xu Z, 2019, J SYST SOFTWARE, V154, P59, DOI 10.1016/j.jss.2019.03.027
   Zahalka Arin, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P259, DOI 10.1109/ISSRE.2010.44
   Zhao KS, 2021, 36TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, SAC 2021, P1447, DOI 10.1145/3412841.3442019
   Zhimin He, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P45, DOI 10.1109/ESEM.2013.20
   Zhou TC, 2019, INFORM SOFTWARE TECH, V114, P204, DOI 10.1016/j.infsof.2019.07.003
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
   Zimmermann T., 2007, Proceedings of the Third International Workshop on Predictor Models in Software Engineering, PROMISE'07, page, P9
NR 97
TC 0
Z9 0
U1 1
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2024
VL 29
IS 4
AR 87
DI 10.1007/s10664-024-10454-8
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TT9W1
UT WOS:001243637300001
DA 2024-08-05
ER

PT J
AU Zhang, BQ
   Fu, LM
   Liang, P
   Yu, JX
   Wang, C
AF Zhang, Beiqi
   Fu, Liming
   Liang, Peng
   Yu, Jiaxin
   Wang, Chong
TI Demystifying code snippets in code reviews: a study of the OpenStack and
   Qt communities and a practitioner survey
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Modern code review; Code snippets; Mining software repositories;
   Empirical study
ID PARTICIPATION; IMPACT
AB Code review is widely known as one of the best practices for software quality assurance in software development. In a typical code review process, reviewers check the code committed by developers to ensure the quality of the code, during which reviewers and developers would communicate with each other in review comments to exchange necessary information. As a result, understanding the information in review comments is a prerequisite for reviewers and developers to conduct an effective code review. Code snippet, as a special form of code, can be used to convey necessary information in code reviews. For example, reviewers can use code snippets to make suggestions or elaborate their ideas to meet developers' information needs in code reviews. However, little research has focused on the practices of providing code snippets in code reviews. To bridge this gap, we conduct a mixed-methods study to mine information and knowledge related to code snippets in code reviews, which can help practitioners and researchers get a better understanding about using code snippets in code review. Specifically, our study includes two phases: mining code review data and conducting practitioners' survey. In Phase 1, we conducted an exploratory study to mine code review data from two popular developer communities (i.e., OpenStack and Qt). We manually labelled 69,604 review comments and finally identified 3,213 review comments that contain code snippets. Based on the code review data collected, we analyzed the extent of using code snippets, the reviewers' purposes of providing code snippets, the developers' acceptance of code snippet suggestions, and the reasons that developers do not accept code snippet suggestions in code reviews. In Phase 2, we used an online questionnaire to survey practitioners from industry. By analyzing the 63 valid responses we received, we explored the scenarios reviewers provide code snippets, the developers' attitudes towards code snippets, and the characteristics of code snippets developers expect reviewers to provide in code reviews. Our results show that: (1) code snippets are not frequently used in code reviews, and most of the code snippets are provided by reviewers rather than developers; (2) the purposes of reviewers providing code snippets in code reviews are Suggestion and Citation, in which Suggestion is the main purpose; (3) most developers would accept reviewers' code snippet suggestions; (4) the most common reasons that developers do not accept reviewers' code snippet suggestions in code reviews are difference in the opinions between developers and reviewers and reviewer's suggestion is flawed; (5) reviewers often provide code snippets in code reviews when code is more illustrate than words; (6) most developers hold positive attitudes towards code snippet comments; and (7) most developers expect that code snippets in review comments are understandable and fitting into existing code. The study results highlight that reviewers can provide code snippets in appropriate scenarios to meet developers' specific information needs in code reviews, which will facilitate and accelerate the code review process.
C1 [Zhang, Beiqi; Fu, Liming; Liang, Peng; Yu, Jiaxin; Wang, Chong] Wuhan Univ, Sch Comp Sci, Wuhan, Peoples R China.
   [Zhang, Beiqi; Fu, Liming; Liang, Peng; Yu, Jiaxin; Wang, Chong] Hubei Luojia Lab, Wuhan, Peoples R China.
C3 Wuhan University
RP Liang, P; Wang, C (corresponding author), Wuhan Univ, Sch Comp Sci, Wuhan, Peoples R China.; Liang, P; Wang, C (corresponding author), Hubei Luojia Lab, Wuhan, Peoples R China.
EM zhangbeiqi@whu.edu.cn; limingfu@whu.edu.cn; liangp@whu.edu.cn;
   jiaxinyu@whu.edu.cn; cwang@whu.edu.cn
FU National Natural Science Foundation of China [62172311]; National
   Natural Science Foundation of China (NSFC); Special Fund of Hubei Luojia
   Laboratory
FX This work has been supported by the National Natural Science Foundation
   of China (NSFC) under Grant No. 62172311 and the Special Fund of Hubei
   Luojia Laboratory. The authors would also like to thank all the
   participants of the online survey.
CR ACKERMAN AF, 1989, IEEE SOFTWARE, V6, P31, DOI 10.1109/52.28121
   Allamanis M, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P281, DOI 10.1145/2635868.2635883
   [Anonymous], 2013, P 16 C COMP SUPP COO
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Badampudi D, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3585004
   Campbell BA, 2017, PROC IEEE INT CONF S, P628, DOI 10.1109/ICSME.2017.56
   Campbell JL, 2013, SOCIOL METHOD RES, V42, P294, DOI 10.1177/0049124113500475
   Chatterjee P, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P382, DOI 10.1109/SANER.2017.7884638
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Da Cunha AD, 2007, COMMUN ACM, V50, P109, DOI 10.1145/1230819.1241672
   Davila N, 2021, J SYST SOFTWARE, V177, DOI 10.1016/j.jss.2021.110951
   El Zanaty F, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3239525
   Fink A., 2003, SURVEY HDB, P1, DOI DOI 10.4135/9781412986328
   Fu L, P 30 IEEE ACM INT C, P152
   Fu LM, 2022, INT SYMP EMP SOFTWAR, P216, DOI 10.1145/3544902.3546253
   Galenson J, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P653, DOI 10.1145/2568225.2568250
   Glaser B. G., 1967, The Discovery of Grounded Theory: Strategies for Qualitative Research
   Hamasaki K, 2013, IEEE WORK CONF MIN S, P49, DOI 10.1109/MSR.2013.6624003
   Han XF, 2021, INT C PROGRAM COMPRE, P323, DOI 10.1109/ICPC52881.2021.00038
   Hellendoorn VJ, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P157, DOI 10.1109/MSR.2015.22
   Hirao T, 2022, IEEE T SOFTWARE ENG, V48, P69, DOI 10.1109/TSE.2020.2977907
   Israel G. D., 1992, Determining Sample Size, DOI DOI 10.4039/ENT85108-3
   Kashiwa Y, 2022, INFORM SOFTWARE TECH, V146, DOI 10.1016/j.infsof.2022.106855
   Kaur P, 2018, INT J ACAD MED, V4, P60, DOI 10.4103/IJAM.IJAM_7_18
   Kitchenham B. A., 2008, Guide to Advanced Empirical Software Engineering, P63, DOI DOI 10.1007/978-1-84800-044-5_3
   Ko AJ, 2007, PROC INT CONF SOFTW, P344
   Li Z., 2017, P 29 INT C SOFTW ENG, P572
   McIntosh S, 2016, EMPIR SOFTW ENG, V21, P2146, DOI 10.1007/s10664-015-9381-9
   Nazir Sumaira, 2020, ICSIM '20: Proceedings of the 3rd International Conference on Software Engineering and Information Management, P210, DOI 10.1145/3378936.3378954
   Panichella Sebastiano, 2012, 2012 IEEE 20th International Conference on Program Comprehension, P63
   Pascarella Luca, 2018, Proceedings of the ACM on Human-Computer Interaction, V2, DOI 10.1145/3274404
   Reja U., 2003, Developments in Applied Statistics, V19, P159, DOI DOI 10.1016/0040-6031(92)85160-W
   Rigby P. C., 2013, P ESEC FSE, P202, DOI DOI 10.1145/2491411.2491444
   Ruangwan S, 2019, EMPIR SOFTW ENG, V24, P973, DOI 10.1007/s10664-018-9646-1
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sadowski C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P181, DOI 10.1145/3183519.3183525
   Shull F., 2007, Guide to advanced empirical software engineering
   Stol KJ, 2016, PROC INT CONF SOFTW, P120, DOI 10.1145/2884781.2884833
   Subramanian S, 2013, IEEE WORK CONF MIN S, P85, DOI 10.1109/MSR.2013.6624012
   Sutherland A, 2009, PROC INT CONF SOFTW, P259, DOI 10.1109/ICSE-COMPANION.2009.5070996
   Thongtanunam P, 2017, EMPIR SOFTW ENG, V22, P768, DOI 10.1007/s10664-016-9452-6
   Thongtanunam P, 2016, PROC INT CONF SOFTW, P1039, DOI 10.1145/2884781.2884852
   Ueda Y, 2018, IEICE T INF SYST, VE101D, P2720, DOI 10.1587/transinf.2018EDP7004
   Wang D, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09997-x
   Wang QY, 2019, INFORM SOFTWARE TECH, V110, P108, DOI 10.1016/j.infsof.2019.02.007
   Wessel Mairieli, 2020, SBES '20: Proceedings of the 34th Brazilian Symposium on Software Engineering, P457, DOI 10.1145/3422392.3422459
   Wong E, 2013, IEEE INT CONF AUTOM, P562, DOI 10.1109/ASE.2013.6693113
   Wurzel Goncalves Pavlina, 2023, Proceedings of the ACM on Human-Computer Interaction, DOI 10.1145/3579471
   Zampetti F, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P38, DOI [10.1109/SANER.2019.8667996, 10.1109/saner.2019.8667996]
   Zhang Beiqi, 2023, Zenodo, DOI 10.5281/ZENODO.8098560
NR 50
TC 0
Z9 0
U1 1
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2024
VL 29
IS 4
AR 78
DI 10.1007/s10664-024-10484-2
PG 45
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SX9G4
UT WOS:001237860400001
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Zhao, ZM
   Chen, YH
   Bangash, AA
   Adams, B
   Hassan, AE
AF Zhao, Zhimin
   Chen, Yihao
   Bangash, Abdul Ali
   Adams, Bram
   Hassan, Ahmed E.
TI An empirical study of challenges in machine learning asset management
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Machine learning; Asset management; Mining software repositories; Stack
   overflow; Topic modeling
ID RESOURCE-MANAGEMENT; LARGE-SCALE; SOFTWARE; FRAMEWORK
AB Context:In machine learning (ML) applications, assets include not only the ML models themselves, but also the datasets, algorithms, and deployment tools that are essential in the development, training, and implementation of these models. Efficient management of ML assets is critical to ensure optimal resource utilization, consistent model performance, and a streamlined ML development lifecycle. This practice contributes to faster iterations, adaptability, reduced time from model development to deployment, and the delivery of reliable and timely outputs.Objective:Despite research on ML asset management, there is still a significant knowledge gap on operational challenges, such as model versioning, data traceability, and collaboration issues, faced by asset management tool users. These challenges are crucial because they could directly impact the efficiency, reproducibility, and overall success of machine learning projects. Our study aims to bridge this empirical gap by analyzing user experience, feedback, and needs from Q &A posts, shedding light on the real-world challenges they face and the solutions they have found.Method:We examine 15, 065 Q &A posts from multiple developer discussion platforms, including Stack Overflow, tool-specific forums, and GitHub/GitLab. Using a mixed-method approach, we classify the posts into knowledge inquiries and problem inquiries. We then apply BERTopic to extract challenge topics and compare their prevalence. Finally, we use the open card sorting approach to summarize solutions from solved inquiries, then cluster them with BERTopic, and analyze the relationship between challenges and solutions.Results:We identify 133 distinct topics in ML asset management-related inquiries, grouped into 16 macro-topics, with software environment and dependency, model deployment and service, and model creation and training emerging as the most discussed. Additionally, we identify 79 distinct solution topics, classified under 18 macro-topics, with software environment and dependency, feature and component development, and file and directory management as the most proposed.Conclusions:This study highlights critical areas within ML asset management that need further exploration, particularly around prevalent macro-topics identified as pain points for ML practitioners, emphasizing the need for collaborative efforts between academia, industry, and the broader research community.
C1 [Zhao, Zhimin; Chen, Yihao; Bangash, Abdul Ali; Adams, Bram; Hassan, Ahmed E.] Queens Univ, Sch Comp, Kingston, ON, Canada.
C3 Queens University - Canada
RP Zhao, ZM (corresponding author), Queens Univ, Sch Comp, Kingston, ON, Canada.
EM z.zhao@queensu.ca; yihao.chen@queensu.ca; abdulali.b@queensu.ca;
   bram.adams@queensu.ca; hassan@queensu.ca
OI Zhao, Zhimin/0000-0002-0337-808X
FU NSER
FX No Statement Available
CR Agrawal N, 2007, USENIX ASSOCIATION PROCEEDINGS OF THE 5TH USENIX CONFERENCE ON FILE AND STORAGE TECHNOLOGIES ( FAST '07), P31
   AguilarMelgar L., 2021, P ANN C INN DAT SYST
   Ahmed S, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3239524
   Alberti M, 2018, INT CONF FRONT HAND, P423, DOI 10.1109/ICFHR-2018.2018.00080
   Amershi S, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P291, DOI 10.1109/ICSE-SEIP.2019.00042
   Bagherzadeh M, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P432, DOI 10.1145/3338906.3338939
   Bahrampour S, 2016, Arxiv, DOI arXiv:1511.06435
   Baier Lucas, 2019, ECIS, V1
   Barde BV, 2017, 2017 INTERNATIONAL CONFERENCE ON INTELLIGENT COMPUTING AND CONTROL SYSTEMS (ICICCS), P745, DOI 10.1109/ICCONS.2017.8250563
   Barrak A, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P422, DOI 10.1109/SANER50967.2021.00046
   Belguidoum M, 2007, ELECTRON NOTES THEOR, V182, P17, DOI 10.1016/j.entcs.2006.09.029
   Benítez-Hidalgo A, 2021, KNOWL-BASED SYST, V232, DOI 10.1016/j.knosys.2021.107489
   BENJAMINI Y, 1995, J R STAT SOC B, V57, P289, DOI 10.1111/j.2517-6161.1995.tb02031.x
   Bhattacharjee A, 2019, PROCEEDINGS OF THE 2019 USENIX CONFERENCE ON OPERATIONAL MACHINE LEARNING, P59
   Bommasani R., 2021, arXiv, DOI DOI 10.48550/ARXIV.2108.07258
   Borges H, 2018, J SYST SOFTWARE, V146, P112, DOI 10.1016/j.jss.2018.09.016
   Bravo-Rocca G, 2022, EXPERT SYST APPL, V202, DOI 10.1016/j.eswa.2022.117232
   Campbell JL, 2013, SOCIOL METHOD RES, V42, P294, DOI 10.1177/0049124113500475
   Izquierdo JLC, 2017, 2017 ACM/IEEE 20TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2017), P292, DOI 10.1109/MODELS.2017.19
   Chard R, 2019, INT PARALL DISTRIB P, P283, DOI 10.1109/IPDPS.2019.00038
   Chen A, 2020, P 4 INT WORKSH DAT M, P1
   Chen Y, 2023, On practitioners' concerns when adopting service mesh frameworks
   Chen ZP, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P750, DOI 10.1145/3368089.3409759
   Cheng LY, 2023, Arxiv, DOI arXiv:2305.15038
   Coelho J, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P186, DOI 10.1145/3106237.3106246
   Cramer H, 1999, Mathematical methods of statistics
   Diamantopoulos T, 2023, IEEE WORK CONF MIN S, P218, DOI 10.1109/MSR59073.2023.00039
   do Prado KS, 2020, Kelvins: awesome-mlops: A curated list of awesome mlops tools
   DUNN OJ, 1961, J AM STAT ASSOC, V56, P52, DOI 10.2307/2282330
   Enck W, 2022, IEEE SECUR PRIV, V20, P96, DOI 10.1109/MSEC.2022.3142338
   Esparrachiari S., 2018, Queue, V16, P44, DOI DOI 10.1145/3277539.3277541
   Ferenc R, 2020, SOFTWAREX, V12, DOI 10.1016/j.softx.2020.100551
   Francoise Jules, 2021, UIST '21: The 34th Annual ACM Symposium on User Interface Software and Technology, P39, DOI 10.1145/3472749.3474734
   Gao C, 2022, Tensorchord: awesome-llmops: An awesome curated list of best llmops tools for developers
   Garcia R, 2018, KDD CMI WORKSH, V114, P1
   Gharibi G, 2019, P 3 INT WORKSH DAT M, P1
   Gilardi F, 2023, Arxiv, DOI [arXiv:2303.15056, DOI 10.48550/ARXIV.2303.15056]
   Giray G, 2021, J SYST SOFTWARE, V180, DOI 10.1016/j.jss.2021.111031
   Goniwada SR, 2022, Observability. Cloud native architecture and design: a handbook for modern day architecture and design with enterprise-grade examples, P661
   Gou JP, 2021, INT J COMPUT VISION, V129, P1789, DOI 10.1007/s11263-021-01453-z
   Groeneveld D, 2024, Arxiv, DOI arXiv:2402.00838
   Grootendorst M., 2022, PREPRINT
   Grubb P, 2003, Software maintenance concepts and practice
   Gu HQ, 2023, Soft Anal Evol Reeng, P627, DOI 10.1109/SANER56733.2023.00064
   Hartley M, 2020, PATTERNS, V1, DOI 10.1016/j.patter.2020.100073
   Hastie T., 2009, The Elements of Statistical Learning: Data Mining, Inference, and Prediction, V2, DOI DOI 10.1007/978-0-387-84858-7
   Hewage N, 2022, arXiv, DOI DOI 10.48550/ARXIV.2202.10169
   Namaki MH, 2020, Arxiv, DOI arXiv:2001.01861
   Hummer W, 2019, INT CONF CLOUD ENG, P113, DOI 10.1109/IC2E.2019.00025
   Idowu Samuel, 2022, 2022 48th Euromicro Conference on Software Engineering and Advanced Applications (SEAA), P48, DOI 10.1109/SEAA56994.2022.00016
   Idowu S, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3543847
   Isah H, 2019, IEEE ACCESS, V7, P154300, DOI 10.1109/ACCESS.2019.2946884
   Jalali S, 2012, INT SYMP EMP SOFTWAR, P29, DOI 10.1145/2372251.2372257
   Jiang AQ, 2023, Arxiv, DOI arXiv:2310.06825
   Jiang WX, 2023, Arxiv, DOI arXiv:2303.02552
   Khondhu J, 2013, Proceedings, V9, P61
   Kitchenham BA, 1999, J SOFTW MAINT-RES PR, V11, P365, DOI 10.1002/(SICI)1096-908X(199911/12)11:6<365::AID-SMR200>3.0.CO;2-W
   Klaise J, 2020, Arxiv, DOI arXiv:2007.06299
   Kreutz D, 2015, P IEEE, V103, P14, DOI 10.1109/JPROC.2014.2371999
   Kumar A, 2017, SIGMOD'17: PROCEEDINGS OF THE 2017 ACM INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P1717, DOI 10.1145/3035918.3054775
   Lapan M., 2018, Deep Reinforcement Learning Hands-On: Apply modern RL methods to practical problems of chatbots, robotics, discrete optimization, web automation, and more
   Le VD, 2023, Arxiv, DOI arXiv:2304.13037
   Liu ALS, 2024, Arxiv, DOI [arXiv:2401.08565, DOI 10.48550/ARXIV.2401.08565]
   Liu Y, 2023, Arxiv, DOI arXiv:2303.16634
   Loeliger J, 2012, Version Control with Git: Powerful tools and techniques for collaborative software development
   Lu Lanyue, 2013, P USENIX C FIL STOR, P31
   Manvi SS, 2014, J NETW COMPUT APPL, V41, P424, DOI 10.1016/j.jnca.2013.10.004
   McHugh ML, 2012, BIOCHEM MEDICA, V22, P276, DOI 10.11613/bm.2012.031
   McInnes L, 2017, INT CONF DAT MIN WOR, P33, DOI 10.1109/ICDMW.2017.12
   McKinney W., 2011, Python for high performance and scientific computing, V14, P1
   Melin PD, 2023, Tackling version management and reproducibility in mlops
   Mens T, 2014, 7 INT SEM SER ADV TE, P79
   Miao H, 2017, P 2 WORKSH HUM IN TH, P1
   Miao H, 2017, PROC INT CONF DATA, P1393, DOI 10.1109/ICDE.2017.192
   Miao H, 2017, PROC INT CONF DATA, P571, DOI 10.1109/ICDE.2017.112
   Miotto R, 2018, BRIEF BIOINFORM, V19, P1236, DOI 10.1093/bib/bbx044
   Moreno M, 2020, INT J SEMANT COMPUT, V14, P295, DOI 10.1142/S1793351X20400115
   Moreschi S, 2023, Arxiv, DOI arXiv:2304.03254
   Munappy AR, 2022, J SYST SOFTWARE, V191, DOI 10.1016/j.jss.2022.111359
   Mustafa S, 2015, COMPUT ELECTR ENG, V47, P186, DOI 10.1016/j.compeleceng.2015.07.021
   Nagy AM, 2018, PERVASIVE MOB COMPUT, V50, P148, DOI 10.1016/j.pmcj.2018.07.004
   Nguyen G, 2019, ARTIF INTELL REV, V52, P77, DOI 10.1007/s10462-018-09679-z
   Openja M, 2020, PROC IEEE INT CONF S, P104, DOI 10.1109/ICSME46990.2020.00020
   Paleyes A, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3533378
   Parra E, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10095-1
   Pavao A, 2022, Codalab competitions: An open source platform to organize scientific challenges
   Pearson K, 1900, PHILOS MAG, V50, P157, DOI 10.1080/14786440009463897
   Peili Yang, 2018, 2018 IEEE 3 INT C CL, P552
   Polyzotis N, 2018, SIGMOD REC, V47, P17, DOI 10.1145/3299887.3299891
   Recupito G., 2022, 2022 48 EUR SOFTW EN, P06, DOI [DOI 10.1109/SEAA56994.2022.00021, https://doi.org/10.1109/SEAA56994.2022.00021]
   Rigby PC, 2009, ACM Trans Software Engineering and Methodology, Submission number TOSEM-2009-0087, pp33
   Rochkind M. J., 1975, IEEE Transactions on Software Engineering, VSE-1, P364, DOI 10.1109/TSE.1975.6312866
   Rosen C, 2016, EMPIR SOFTW ENG, V21, P1192, DOI 10.1007/s10664-015-9379-3
   Ruf P, 2021, APPL SCI-BASEL, V11, DOI 10.3390/app11198861
   Sallou June, 2024, ACM IEEE 46 INT C SO
   Saucedo A, 2018, EthicalML: awesome-production-machine-learning: A curated list of awesome open source libraries to deploy, monitor, version and scale your machine learning
   Schelter S, 2015, On challenges in machine learning model management
   Schelter S, 2018, Declarative Metadata Management: A Missing Piece in End-To-End Machine Learning
   Schick T, 2021, Arxiv, DOI arXiv:2009.07118
   Schlegel Marius, 2023, ACM SIGMOD Record, P18, DOI 10.1145/3582302.3582306
   Sculley D, 2015, ADV NEUR IN, V28
   Soomro ZA, 2016, INT J INFORM MANAGE, V36, P215, DOI 10.1016/j.ijinfomgt.2015.11.009
   Sorokin A, 2008, PROC CVPR IEEE, P23
   Squire M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P219, DOI 10.1109/ICSE.2015.150
   Storey JD, 2002, J ROY STAT SOC B, V64, P479, DOI 10.1111/1467-9868.00346
   Sun C, 2020, EDBT, V20, P474
   Sung NK, 2017, Arxiv, DOI arXiv:1712.05902
   Syed S, 2017, PR INT CONF DATA SC, P165, DOI 10.1109/DSAA.2017.61
   Symeonidis G, 2022, 2022 IEEE 12TH ANNUAL COMPUTING AND COMMUNICATION WORKSHOP AND CONFERENCE (CCWC), P453, DOI 10.1109/CCWC54503.2022.9720902
   Tao Lili, 2023, 2023 IEEE/ACM 45th International Conference on Software Engineering: Software Engineering in Practice (ICSE-SEIP), P196, DOI 10.1109/ICSE-SEIP58684.2023.00023
   Touvron H, 2023, Arxiv, DOI [arXiv:2307.09288, DOI 10.48550/ARXIV.2307.09288]
   Treude C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P804, DOI 10.1145/1985793.1985907
   Tsay J, 2018, Runway: machine learning model experiment management tool
   Vadlamani SL, 2020, PROC IEEE INT CONF S, P312, DOI 10.1109/ICSME46990.2020.00038
   Vartak M., 2018, IEEE Data Eng. Bull., V41, P16
   Vasilescu B, 2013, 2013 ASE/IEEE INTERNATIONAL CONFERENCE ON SOCIAL COMPUTING (SOCIALCOM), P188, DOI 10.1109/SocialCom.2013.35
   Venkatesh PK, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS), P131, DOI 10.1109/ICWS.2016.25
   Wang ZB, 2024, ARCH COMPUT METHOD E, V31, P1, DOI [10.16488/j.cnki.1005-9873.2024.02.001, 10.1007/s11831-018-09312-w]
   Werlinger Rodrigo, 2009, Information Management & Computer Security, V17, P4, DOI 10.1108/09685220910944722
   Wood JR, 2008, J USABILITY STUD, V4, P1
   Wozniak JM, 2018, BMC BIOINFORMATICS, V19, DOI 10.1186/s12859-018-2508-4
   Xia WF, 2015, IEEE COMMUN SURV TUT, V17, P27, DOI 10.1109/COMST.2014.2330903
   Xin D, 2021, INT CONF MANAGE DATA, P2639, DOI 10.1145/3448016.3457566
   Xiu MK, 2021, IEEE SOFTWARE, V38, P114, DOI 10.1109/MS.2020.2975159
   Yang C, 2021, MACH LEARN, V110, P2993, DOI 10.1007/s10994-021-06052-0
   Yang XL, 2016, J COMPUT SCI TECH-CH, V31, P910, DOI 10.1007/s11390-016-1672-0
   Yao YF, 2024, Arxiv, DOI [arXiv:2312.02003, 10.48550/arXiv.2312.02003]
   Zaharia Matei A, 2018, IEEE Data Eng. Bull., V41, P39
   Zhang SY, 2024, Arxiv, DOI [arXiv:2308.10792, 10.48550/arXiv.2308.10792, DOI 10.48550/ARXIV.2308.10792]
NR 129
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2024
VL 29
IS 4
AR 98
DI 10.1007/s10664-024-10474-4
PG 65
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UK9Q2
UT WOS:001248074900003
DA 2024-08-05
ER

PT J
AU Shirzad, MR
   Lam, P
AF Shirzad, Mohammad Robati
   Lam, Patrick
TI A study of common bug fix patterns in Rust
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Bug patterns; Pattern mining; Bug fix changes; Rust
AB Rust is a relatively new programming language which allows programmers to write programs that have low-level control over resources while still ensuring high-level safety guarantees (for programs written in safe Rust). Rust's ownership framework enables programs to meet these two seemingly-contradictory goals. The Rust compiler's Borrow-Checker component enforces the ownership framework requirements that ensure Rust's safety guarantees. Rust is popular: as of 2022, it has ranked first, for the seventh consecutive year, in Stack Overflow's annual Developer Survey as the most-loved programming language. The number of Rust developers is growing as the need for faster and safer software increases. Yet, to our knowledge, no research has sought to identify the most pervasive bug fix patterns within Rust programs. In this project, we introduce Ruxanne, a tool for analyzing and extracting fix patterns in Rust. Ruxanne implements a novel embedding of Rust code into fixed-sized vectors. Using Ruxanne, we mined the top 18 most-starred Rust projects in GitHub to discover the most common bug fix patterns committed to their repositories. We analyzed 87,726 code changes drawn from 57,214 commits across these 18 projects. After clustering the code changes, and conducting a manual analysis, we identified 20 groups of cross-project bug fix patterns, which we categorize as (1) general patterns and (2) borrow-checker-related patterns. Among the general patterns, the most frequently observed pattern is when the user either adds or removes struct fields. In the case of borrow-checker-related patterns, the most common pattern we encountered is when the user removes a clone() call. We describe all detected patterns and their implications to automated program repair.
C1 [Shirzad, Mohammad Robati; Lam, Patrick] Univ Waterloo, 200 Univ Ave W, Waterloo, ON N2L 3G1, Canada.
C3 University of Waterloo
RP Shirzad, MR (corresponding author), Univ Waterloo, 200 Univ Ave W, Waterloo, ON N2L 3G1, Canada.
EM mrobatis@uwaterloo.ca; patrick.lam@uwaterloo.ca
OI Lam, Patrick/0000-0001-8278-5400
FU Natural Sciences and Engineering Research Council of Canada
FX No Statement Available
CR Alon U, 2019, P 2019 C ASS COMP LI, P6304
   Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   Alon U, 2018, ACM SIGPLAN NOTICES, V53, P404, DOI [10.1145/3192366.3192412, 10.1145/3296979.3192412]
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Bielik P, 2016, PR MACH LEARN RES, V48
   Campos EC., 2019, J Softw: Evol Process, V31, P1
   Cannon L., 1991, Recommended C style and coding standards
   Chen ZM, 2019, Arxiv, DOI arXiv:1904.03061
   Collins CR, 2003, COMP GEOM-THEOR APPL, V25, P233, DOI 10.1016/S0925-7721(02)00099-8
   Cotroneo D, 2019, PROC INT SYMP SOFTW, P334, DOI 10.1109/ISSRE.2019.00041
   DeGroot M.H., 2012, Probability and statistics, V4th ed.
   Endres A., 1975, IEEE Transactions on Software Engineering, VSE-1, P140, DOI 10.1109/TSE.1975.6312834
   Eyolfson J, 2018, Enforcing Abstract Immutability
   Flanagan C, 1998, P LISP US GROUP M LU
   Forrest S, 2009, Proceedings of the 11th Annual Conference on Genetic and Evolutionary Computation, GECCO'09, page, P947, DOI DOI 10.1145/1569901.1570031
   Gopinath R, 2015, Technical Report
   Hanam Q, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P144, DOI 10.1145/2950290.2950308
   Hindle A, 2016, COMMUN ACM, V59, P122, DOI 10.1145/2902362
   Hoang T, 2020, PROC INT CONF SOFTW, P518, DOI 10.1145/3377811.3380361
   Huang W, 2012, ACM SIGPLAN NOTICES, V47, P879, DOI 10.1145/2398857.2384680
   Islam MR, 2020, APPL COMPUT REV, V20, P18, DOI [10.1145/3341105.3373880, 10.1145/3447332.3447334]
   Jeffrey D, 2009, INT C PROGRAM COMPRE, P70, DOI 10.1109/ICPC.2009.5090029
   Jones J. A., 2005, ASE, P273
   Klabnik Steve, 2018, The Rust Programming Language
   KNUTH DE, 1989, SOFTWARE PRACT EXPER, V19, P607, DOI 10.1002/spe.4380190702
   Le Goues C, 2019, COMMUN ACM, V62, P56, DOI 10.1145/3318162
   Le Goues C, 2012, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.2012.6227211
   Li ZH, 2021, CCS '21: PROCEEDINGS OF THE 2021 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2183, DOI 10.1145/3460120.3484541
   Lin B, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3505247
   Ling M, 2022, PROC IEEE ACM INT C, P354, DOI [10.1145/3510454.3528640, 10.1109/ICSE-Companion55297.2022.9793767]
   Madeiral F, 2018, Arxiv, DOI arXiv:1807.11286
   Martinez M, 2012, Mining repair actions for guiding automated program fixing
   Martínez M, 2015, EMPIR SOFTW ENG, V20, P176, DOI 10.1007/s10664-013-9282-8
   Monperrus M., 2014, Proceedings of the 36th International Conference on Software Engineering, ICSE 2014, (New York, NY, USA), P234
   Moss S, 2022, How Dropbox pulled off its hybrid cloud transition
   Naish L, 2009, ASIA PAC SOFWR ENG, P168, DOI 10.1109/APSEC.2009.32
   Nguyen T, 2009, IEEE ICST WORKSHOP, P152, DOI 10.1109/ICSTW.2009.35
   Pan K, 2009, EMPIR SOFTW ENG, V14, P286, DOI 10.1007/s10664-008-9077-5
   Qi YH, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P254, DOI 10.1145/2568225.2568254
   Qi YH, 2013, PROC IEEE INT CONF S, P180, DOI 10.1109/ICSM.2013.29
   Qin BQ, 2020, PROCEEDINGS OF THE 41ST ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '20), P763, DOI 10.1145/3385412.3386036
   Raychev V, 2016, ACM SIGPLAN NOTICES, V51, P761, DOI 10.1145/2914770.2837671
   Sam G, 2017, P AUSTR COMP SCI WEE, P1
   Simoudis E., 1996, KDD 96 P 2 INT C KNO, P226
   Spadini D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P908, DOI 10.1145/3236024.3264598
   Tan SH, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P471, DOI 10.1109/ICSE.2015.65
   Tian H, 2022, P 37 IEEE ACM INT C, P1
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Xie XY, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2522920.2522924
   Xu R, 2005, IEEE T NEURAL NETWOR, V16, P645, DOI 10.1109/TNN.2005.845141
   Yang YL, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10087-1
   Ye H, 2022, IEEE T SOFTWARE ENG, V48, P2920, DOI 10.1109/TSE.2021.3071750
   Yuzhen Liu, 2018, Journal of Software, V13, P437, DOI 10.17706/jsw.13.8.437-452
   Zhang YH, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P129, DOI 10.1145/3213846.3213866
NR 54
TC 0
Z9 0
U1 5
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2024
VL 29
IS 2
AR 44
DI 10.1007/s10664-023-10437-1
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HM8N1
UT WOS:001160014500001
DA 2024-08-05
ER

PT J
AU Yang, FY
   Zhong, F
   Zeng, GD
   Xiao, P
   Zheng, W
AF Yang, Fengyu
   Zhong, Fa
   Zeng, Guangdong
   Xiao, Peng
   Zheng, Wei
TI LineFlowDP: A Deep Learning-Based Two-Phase Approach for Line-Level
   Defect Prediction
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software quality assurance; Line-level software defect prediction; Graph
   neural network; Social network analysis
ID PROGRAM DEPENDENCE GRAPH; CENTRALITY
AB Software defect prediction plays a key role in guiding resource allocation for software testing. However, previous defect prediction studies still have some limitations: (1) the granularity of defect prediction is still coarse, so high-risk code statements cannot be accurately located; (2) in fine-grained defect prediction, the semantic and structural information available in a single line of code is limited, and the content of code semantic information is not sufficient to achieve semantic differentiation. To address the above problems, we propose a two-phase line-level defect prediction method based on deep learning called LineFlowDP. We first extract the program dependency graph (PDG) of the source files. The lines of code corresponding to the nodes in the PDG are extended semantically with data flow and control flow information and embedded as nodes, and the model is further trained using an relational graph convolutional network. Finally, a graph interpreter GNNExplainer and a social network analysis method are used to rank the lines of code in the defective file according to risk. On 32 datasets from 9 projects, the experimental results show that LineFlowDP is 13%-404% more cost-effective than four state-of-the-art line-level defect prediction methods. The effectiveness of the flow information extension and code line risk ranking methods was also verified via ablation experiments.
C1 [Yang, Fengyu; Zhong, Fa; Zeng, Guangdong; Xiao, Peng; Zheng, Wei] Nanchang Hangkong Univ, Sch Software, Nanchang 330063, Peoples R China.
   [Yang, Fengyu; Zhong, Fa; Zeng, Guangdong; Xiao, Peng; Zheng, Wei] Nanchang Hangkong Univ, Software Testing & Evaluat Ctr, Nanchang 330063, Peoples R China.
C3 Nanchang Hangkong University; Nanchang Hangkong University
RP Zhong, F (corresponding author), Nanchang Hangkong Univ, Sch Software, Nanchang 330063, Peoples R China.; Zhong, F (corresponding author), Nanchang Hangkong Univ, Software Testing & Evaluat Ctr, Nanchang 330063, Peoples R China.
EM zhongfa1999@qq.com
RI Xiao, Peng/KBA-6524-2024
OI Zhong, Fa/0009-0000-7364-4331
FU Jiangxi Provincial Key R&D Program Project [20202BBEL53002]
FX This paper is supported by the Jiangxi Provincial Key R&D Program
   Project(20202BBEL53002).
CR Abdous S, 2023, Arxiv, DOI [arXiv:2304.08240, 10.48550/arXiv.2304.08240]
   Aftandilian E., 2012, 2012 12th IEEE Working Conference on Source Code Analysis and Manipulation (SCAM 2012), P14, DOI 10.1109/SCAM.2012.28
   Allamanis M, 2018, Arxiv, DOI arXiv:1711.00740
   Cao S., 2022, arXiv
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chen Xiang, 2019, Journal of Software, V30, P3694, DOI 10.13328/j.cnki.jos.005604
   Cheng X, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3436877
   Cho KYHY, 2014, Arxiv, DOI [arXiv:1406.1078, 10.48550/arXiv.1406.1078]
   Cohen J., 1988, Statistical power analysis for the behavioral sciences
   FERRANTE J, 1987, ACM T PROGR LANG SYS, V9, P319, DOI 10.1145/24039.24041
   FREEMAN LC, 1979, SOC NETWORKS, V1, P215, DOI 10.1016/0378-8733(78)90021-7
   Hata H, 2010, EMPIR SOFTW ENG, V15, P147, DOI 10.1007/s10664-009-9117-9
   Hellendoorn VJ, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P763, DOI 10.1145/3106237.3106290
   Hin D, 2022, IEEE WORK CONF MIN S, P596, DOI 10.1145/3524842.3527949
   Hindle A, 2008, INT C PROGRAM COMPRE, P133, DOI 10.1109/ICPC.2008.13
   Dam HK, 2021, IEEE T SOFTWARE ENG, V47, P67, DOI 10.1109/TSE.2018.2881961
   Hovy E., 2016, P 2016 C N AM CHAPT, P1480, DOI DOI 10.18653/V1/N16-1174
   Huang Q, 2017, PROC IEEE INT CONF S, P159, DOI 10.1109/ICSME.2017.51
   Huanjing Wang, 2010, 2010 Ninth International Conference on Machine Learning and Applications (ICMLA 2010), P135, DOI 10.1109/ICMLA.2010.27
   Ieee S., 1994, IEEE Standard Indus, V9, P1
   Kamei Y, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 5, P33, DOI 10.1109/SANER.2016.56
   Katz L., 1953, Psychometrika, V18, P39, DOI DOI 10.1007/BF02289026
   Khakhar P, 2022, Artificial Intelligence and Machine Learning for EDGE Computing, P65, DOI [10.1016/B978-0-12-824054-0.00027-7, DOI 10.1016/B978-0-12-824054-0.00027-7]
   Kingma D. P., 2014, arXiv
   Kondo M, 2020, EMPIR SOFTW ENG, V25, P890, DOI 10.1007/s10664-019-09736-3
   KOREL B, 1987, INFORM PROCESS LETT, V24, P103, DOI 10.1016/0020-0190(87)90102-5
   Le Q., 2014, INT C MACH LEARN
   Li J, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P318, DOI 10.1109/QRS.2017.42
   [李晓卓 Li Xiaozhuo], 2022, [软件学报, Journal of Software], V33, P4008
   Li Y, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P292, DOI 10.1145/3468264.3468597
   Lijin Tang, 2022, 2022 9th International Conference on Dependable Systems and Their Applications (DSA), P310, DOI 10.1109/DSA56465.2022.00049
   Lou YL, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P664, DOI 10.1145/3468264.3468580
   Lucic A., 2022, INT C ARTIFICIAL INT, V151, P4499
   Lundberg SM, 2017, ADV NEUR IN, V30
   Luo D, 2020, Adv. Neural Inf. Process. Syst., V33, P19620
   Miletic M, 2018, 2018 41ST INTERNATIONAL CONVENTION ON INFORMATION AND COMMUNICATION TECHNOLOGY, ELECTRONICS AND MICROELECTRONICS (MIPRO), P1460, DOI 10.23919/MIPRO.2018.8400263
   Morasca S, 2020, EMPIR SOFTW ENG, V25, P3977, DOI 10.1007/s10664-020-09861-4
   Nguyen HH, 2022, PR INT CONF DATA SC, P304, DOI 10.1109/DSAA54385.2022.10032337
   Parnin C., 2011, Proceedings of the 2011 International Symposium on Software Testing and Analysis ISSTA, P199
   Pornprasit C, 2023, IEEE T SOFTWARE ENG, V49, P84, DOI 10.1109/TSE.2022.3144348
   Pornprasit C, 2021, IEEE WORK CONF MIN S, P369, DOI 10.1109/MSR52588.2021.00049
   Pradel M, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3276517
   Rahman F, 2012, P ACM SIGSOFT 20 INT, P61
   Ray B, 2016, PROC INT CONF SOFTW, P428, DOI 10.1145/2884781.2884848
   Ribeiro MT, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1135, DOI 10.1145/2939672.2939778
   ROBBINS H, 1951, ANN MATH STAT, V22, P400, DOI 10.1214/aoms/1177729586
   Schlichtkrull M, 2018, LECT NOTES COMPUT SC, V10843, P593, DOI 10.1007/978-3-319-93417-4_38
   Sohn J, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P284, DOI 10.1109/SANER50967.2021.00034
   Staniak M, 2018, Arxiv, DOI arXiv:1804.01955
   Tantithamthavorn C, 2020, IEEE T SOFTWARE ENG, V46, P1200, DOI 10.1109/TSE.2018.2876537
   Tantithamthavorn C, 2019, IEEE T SOFTWARE ENG, V45, P683, DOI 10.1109/TSE.2018.2794977
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Tantithamthavorn C, 2016, PROC INT CONF SOFTW, P321, DOI 10.1145/2884781.2884857
   Uddin S, 2014, INT J INF TECH DECIS, V13, P865, DOI 10.1142/S0219622014500217
   Vaswani A, 2017, ADV NEUR IN, V30
   Wan ZY, 2020, IEEE T SOFTWARE ENG, V46, P1241, DOI 10.1109/TSE.2018.2877678
   Wang S, 2020, IEEE T SOFTWARE ENG, V46, P1267, DOI 10.1109/TSE.2018.2877612
   Wang S, 2016, IEEE INT CONF AUTOM, P708, DOI 10.1145/2970276.2970341
   Wang WH, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P261, DOI [10.1109/saner48275.2020.9054857, 10.1109/SANER48275.2020.9054857]
   Wang Y, 2023, Arxiv, DOI arXiv:2305.07922
   Wattanakriengkrai S, 2022, IEEE T SOFTWARE ENG, V48, P1480, DOI 10.1109/TSE.2020.3023177
   Wong WE, 2017, J SYST SOFTWARE, V133, P68, DOI 10.1016/j.jss.2017.06.069
   Wong WE., 2010, 4 INT C SEC SOFTW IN, DOI [10.1109/TSE.2012.56, DOI 10.1109/TSE.2012.56]
   [吴博 Wu Bo], 2022, [计算机学报, Chinese Journal of Computers], V45, P35
   Wu YM, 2022, PROC INT CONF SOFTW, P2365, DOI 10.1145/3510003.3510229
   Wu ZH, 2021, IEEE T NEUR NET LEAR, V32, P4, DOI 10.1109/TNNLS.2020.2978386
   Xu JX, 2022, IEEE T RELIAB, V71, P850, DOI 10.1109/TR.2022.3161581
   Yan M, 2022, IEEE T SOFTWARE ENG, V48, P82, DOI 10.1109/TSE.2020.2978819
   Yang FY, 2023, Soft Anal Evol Reeng, P940, DOI 10.1109/SANER56733.2023.00114
   Ying R, 2019, 33 C NEURAL INFORM P, V32
   Yu X, 2017, J SYST SOFTWARE, V134, P44, DOI 10.1016/j.jss.2017.08.025
   Zeng C, 2021, PROC INT SYMP SOFTW, P69, DOI 10.1109/ISSRE52982.2021.00020
   Zhang Z, 2022, IEEE INT CONF AUTOM, DOI 10.1145/3551349.3560428
   Zheng W, 2023, Human-Centric Intel Syst, P1
   Zhu QM, 2020, PATTERN RECOGN LETT, V136, P71, DOI 10.1016/j.patrec.2020.03.030
NR 75
TC 0
Z9 0
U1 9
U2 9
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2024
VL 29
IS 2
AR 50
DI 10.1007/s10664-023-10439-z
PG 49
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IU6T1
UT WOS:001168896500002
DA 2024-08-05
ER

PT J
AU Yang, SY
   Chen, X
   Liu, K
   Yang, G
   Yu, C
AF Yang, Shaoyu
   Chen, Xiang
   Liu, Ke
   Yang, Guang
   Yu, Chi
TI Automatic bi-modal question title generation for Stack Overflow with
   prompt learning
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Question Title Generation; Bi-modal Information; Code Snippet; Problem
   Description; Prompt Learning; Multi-task Learning
ID PREDICTION
AB When drafting question posts for Stack Overflow, developers may not accurately summarize the core problems in the question titles, which can cause these questions to not get timely help. Therefore, improving the quality of question titles has attracted the wide attention of researchers. An initial study aimed to automatically generate the titles by only analyzing the code snippets in the question body. However, this study ignored the helpful information in their corresponding problem descriptions. Therefore, we propose an approach SOTitle+ by considering bi-modal information (i.e., the code snippets and the problem descriptions) in the question body. Then we formalize the title generation for different programming languages as separate but related tasks and utilize multi-task learning to solve these tasks. Later we fine-tune the pre-trained language model CodeT5 to automatically generate the titles. Unfortunately, the inconsistent inputs and optimization objectives between the pre-training task and our investigated task may make fine-tuning hard to fully explore the knowledge of the pre-trained model. To solve this issue, SOTitle+ further prompt-tunes CodeT5 with hybrid prompts (i.e., mixture of hard and soft prompts). To verify the effectiveness of SOTitle+, we construct a large-scale high-quality corpus from recent data dumps shared by Stack Overflow. Our corpus includes 179,119 high-quality question posts for six popular programming languages. Experimental results show that SOTitle+ can significantly outperform four state-of-the-art baselines in both automatic evaluation and human evaluation. In addition, our ablation studies also confirm the effectiveness of component settings (such as bi-modal information, prompt learning, hybrid prompts, and multi-task learning) of SOTitle+. Our work indicates that considering bi-modal information and prompt learning in Stack Overflow title generation is a promising exploration direction.
C1 [Yang, Shaoyu; Chen, Xiang; Liu, Ke; Yu, Chi] Nantong Univ, Sch Informat Sci & Technol, Nantong, Peoples R China.
   [Yang, Guang] Nanjing Univ Aeronaut & Astronaut, Coll Comp Sci & Technol, Nanjing, Peoples R China.
C3 Nantong University; Nanjing University of Aeronautics & Astronautics
RP Chen, X (corresponding author), Nantong Univ, Sch Informat Sci & Technol, Nantong, Peoples R China.
EM shaoyuyoung@gmail.com; xchencs@ntu.edu.cn; aurora.ke.liu@outlook.com;
   novelyg@outlook.com; yc_struggle@163.com
OI chen, xiang/0000-0002-1180-3891
FU National Natural Science Foundation of China [61202006, 61702041];
   National Natural Science Foundation of China [2023214, 2023356];
   Innovation Training Program for College Students
FX The authors would like to thank the editors and the anonymous reviewers
   for their insightful comments and suggestions, which can substantially
   improve the quality of this work. Shaoyu Yang and Xiang Chen have
   contributed equally to this work and they are co-first authors. Xiang
   Chen is the corresponding author. This work is supported in part by the
   National Natural Science Foundation of China (Grant no. 61202006 and
   61702041) and the Innovation Training Program for College Students
   (Grant no. 2023214 and 2023356).
CR Ahmad WU, 2021, 2021 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL-HLT 2021), P2655
   Ahmad Wasi Uddin, 2020, P 58 ANN M ASS COMPU, P4998, DOI 10.18653/v1/2020.acl-main.449
   Anderson D., 2012, Proceedings of the 18th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, KDD '12, P850, DOI [DOI 10.1145/2339530.2339665, 10.1145/2339530.2339665]
   Arora P, 2015, PROCEEDINGS OF THE 2015 IEEE/ACM INTERNATIONAL CONFERENCE ON ADVANCES IN SOCIAL NETWORKS ANALYSIS AND MINING (ASONAM 2015), P1232, DOI 10.1145/2808797.2809318
   Banerjee S., 2005, P ACL WORKSHOP INTRI, P65, DOI DOI 10.3115/1626355.1626389
   Brown T., 2020, ADV NEURAL INFORM PR, V33, P1877, DOI DOI 10.48550/ARXIV.2005.14165
   Cao KB, 2021, PROC INT CONF SOFTW, P1273, DOI 10.1109/ICSE43902.2021.00116
   Cheng J., 2016, 2016 C EMP METH NAT, P551, DOI DOI 10.18653/V1/D16-1053
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Correa D., 2013, P 1 ACM C ONLINE SOC, P201, DOI DOI 10.1145/2512938.2512954
   Ding N, 2022, PROCEEDINGS OF THE 60TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2022): PROCEEDINGS OF SYSTEM DEMONSTRATIONS, P105
   Duijn M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P410, DOI 10.1109/MSR.2015.51
   El-Kassas WS, 2021, EXPERT SYST APPL, V165, DOI 10.1016/j.eswa.2020.113679
   Gao ZP, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3550150
   Gao ZP, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1525, DOI 10.1145/3468264.3473114
   Gao ZP, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3401026
   Gros D, 2020, IEEE INT CONF AUTOM, P746, DOI 10.1145/3324884.3416546
   Hu X, 2020, EMPIR SOFTW ENG, V25, P2179, DOI [10.1007/s10664-019-09730-9, 10.1007/978-981-13-8203-1_1]
   Huang Q, 2022, IEEE INT CONF AUTOM, DOI 10.1145/3551349.3556912
   Husain H, 2020, Arxiv, DOI arXiv:1909.09436
   Islam MJ, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P510, DOI 10.1145/3338906.3338955
   Iyer S, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P2073
   Lester B, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P3045
   Li XW, 2023, Soft Anal Evol Reeng, P604, DOI [10.1109/SANER56733.2023.00062, 10.1109/AINIT59027.2023.10212630]
   Li Z, 2023, IEEE T RELIAB, V72, P258, DOI 10.1109/TR.2022.3154773
   Li Z, 2021, J SYST SOFTWARE, V181, DOI 10.1016/j.jss.2021.111036
   Lin C.-Y., 2004, TEXT SUMMARIZATION B, P74, DOI DOI 10.2307/3105454
   Lin H, 2023, J SYST SOFTWARE, V195, DOI 10.1016/j.jss.2022.111513
   Liu C, 2023, Arxiv, DOI [arXiv:2305.08360, DOI 10.48550/ARXIV.2305.08360]
   Liu K, 2023, IEEE T SOFTWARE ENG, V49, P4390, DOI 10.1109/TSE.2023.3292399
   Liu K, 2022, EUR CON SFTWR MTNCE, P577, DOI 10.1109/SANER53432.2022.00075
   Liu PF, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3560815
   Liu X., 2023, Gpt understands, too
   Liu XD, 2019, 57TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2019), P4487
   Loshchilov I., 2018, INT C LEARN REPR
   Niu CA, 2023, Arxiv, DOI arXiv:2302.04026
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Ponzanelli L, 2014, PROC IEEE INT CONF S, P541, DOI 10.1109/ICSME.2014.90
   Prechelt L, 1998, LECT NOTES COMPUT SC, V1524, P55
   Qin Liu, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P299, DOI 10.1109/MSR.2019.00056
   Raffel C, 2020, J MACH LEARN RES, V21
   Schick T, 2021, 16TH CONFERENCE OF THE EUROPEAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (EACL 2021), P255
   Tóth L, 2019, ICSOFT: PROCEEDINGS OF THE 14TH INTERNATIONAL CONFERENCE ON SOFTWARE TECHNOLOGIES, P631, DOI 10.5220/0007971306310639
   Trienes Jan, 2019, Advances in Information Retrieval. 41st European Conference on IR Research, ECIR 2019. Proceedings: Lecture Notes in Computer Science (LNCS 11437), P276, DOI 10.1007/978-3-030-15712-8_18
   Vedantam R, 2015, PROC CVPR IEEE, P4566, DOI 10.1109/CVPR.2015.7299087
   Wang CZ, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P382, DOI 10.1145/3540250.3549113
   Wang Y, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P8696
   Wei BL, 2020, IEEE INT CONF AUTOM, P349, DOI 10.1145/3324884.3416578
   WILCOXON F, 1946, J ECON ENTOMOL, V39, P269, DOI 10.1093/jee/39.2.269
   Xia CS, 2023, Arxiv, DOI arXiv:2304.00385
   Xianhao Jin, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P225, DOI 10.1109/MSR.2019.00045
   Xu BW, 2022, IEEE T SOFTWARE ENG, V48, P3423, DOI 10.1109/TSE.2021.3093761
   Yang G, 2023, EMPIR SOFTW ENG, V28, DOI 10.1007/s10664-023-10372-1
   Yang G, 2023, J SYST SOFTWARE, V197, DOI 10.1016/j.jss.2022.111577
   Yang G, 2022, EUR CON SFTWR MTNCE, P361, DOI 10.1109/SANER53432.2022.00052
   Yang G, 2022, KNOWL-BASED SYST, V237, DOI 10.1016/j.knosys.2021.107858
   Yang J, 2014, P 25 ACM C HYP SOC M, P179
   Yazdaninia M, 2021, INT C PROGRAM COMPRE, P59, DOI 10.1109/ICPC52881.2021.00015
   Yin PC, 2018, IEEE WORK CONF MIN S, P476, DOI 10.1145/3196398.3196408
   Zhang Fengji, 2022, Information and Software Technology, DOI 10.1016/j.infsof.2022.106922
   Zhang FJ, 2023, J SYST SOFTWARE, V200, DOI 10.1016/j.jss.2023.111672
   Zhang Y, 2022, IEEE T KNOWL DATA EN, V34, P5586, DOI 10.1109/TKDE.2021.3070203
   Zhu J, 2023, Arxiv, DOI arXiv:2303.05771
NR 63
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAY
PY 2024
VL 29
IS 3
AR 63
DI 10.1007/s10664-024-10466-4
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RE3S8
UT WOS:001225960000004
DA 2024-08-05
ER

PT J
AU Moreno-Lumbreras, D
   Robles, G
   Izquierdo-Cortázar, D
   Gonzalez-Barahona, JM
AF Moreno-Lumbreras, David
   Robles, Gregorio
   Izquierdo-Cortazar, Daniel
   Gonzalez-Barahona, Jesus M.
TI Software development metrics: to VR or not to VR
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Virtual reality; Dashboards; Controlled experiment; Code review; Pull
   request; Issues
ID VIRTUAL-REALITY; VISUALIZATION
AB ContextCurrent data visualization interfaces predominantly rely on 2-D screens. However, the emergence of virtual reality (VR) devices capable of immersive data visualization has sparked interest in exploring their suitability for visualizing software development data. Despite this, there is a lack of detailed investigation into the effectiveness of VR devices specifically for interacting with software development data visualizations.ObjectiveOur objective is to investigate the following question: "How do VR devices compare to traditional screens in visualizing data about software development?" Specifically, we aim to assess the accuracy of conclusions derived from exploring visualizations for understanding the software development process, as well as the time required to reach these conclusions.MethodIn our controlled experiment, we recruited N=32 volunteers with diverse backgrounds. Participants interacted with similar data visualizations in both VR and traditional screen environments. For the traditional screen setup, we utilized a commercially available set of interactive dashboards based on Kibana, commonly used by Bitergia customers for data insights. In the VR environment, we designed a set of visualizations, tailored to provide an equivalent dataset within a virtual room. Participants answered questions related to software evolution processes, specifically code review and issue tracking, in both VR and traditional screen environments, for two projects. We conducted statistical analyses to compare the correctness of their answers and the time taken for each question.ResultsOur findings indicate that the correctness of answers in both environments is comparable. Regarding time spent, we observed similar durations, except for complex questions that required examining multiple interconnected visualizations. In such cases, participants in the VR environment were able to answer questions more quickly.ConclusionBased on our results, we conclude that VR immersion can be equally effective as traditional screen setups for understanding software development processes through visualization of relevant metrics in most scenarios. Moreover, VR may offer advantages in comprehending complex tasks that require navigating through multiple interconnected visualizations. However, further experimentation is necessary to validate and reinforce these conclusions.
C1 [Moreno-Lumbreras, David; Robles, Gregorio; Gonzalez-Barahona, Jesus M.] Univ Rey Juan Carlos, Fuenlabrada, Spain.
   [Izquierdo-Cortazar, Daniel] Bitergia, Leganes, Spain.
C3 Universidad Rey Juan Carlos
RP Moreno-Lumbreras, D (corresponding author), Univ Rey Juan Carlos, Fuenlabrada, Spain.
EM david.morenolu@urjc.es; gregorio.robles@urjc.es;
   dizquierdo@bitergia.com; jesus.gonzalez.barahona@urjc.es
RI Robles, Gregorio/I-2507-2012
OI Robles, Gregorio/0000-0002-1442-6761; Moreno-Lumbreras,
   David/0000-0002-5454-7808
FU Community of Madrid [IND2018/TIC-9669]; Madrid Regional Government
   [RTI-2018-101963-B-100, e-Madrid-CM - P2018/TCS-4307]; FSE; FEDER
FX We acknowledge the financial support of the Community of Madrid for the
   project IND2018/TIC-9669, and the Spanish Government for the project
   RTI-2018-101963-B-100, and of the Madrid Regional Government
   (e-Madrid-CM - P2018/TCS-4307), co-financed by EU Structural Funds (FSE
   and FEDER). We also thank all the participants of our experiments.
CR Anderson A, 1999, J MOL GRAPH MODEL, V17, P180, DOI 10.1016/S1093-3263(99)00029-7
   Antoniol G., 2008, P 2008 C CTR ADV STU, P304
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Batch A, 2020, IEEE T VIS COMPUT GR, V26, P536, DOI 10.1109/TVCG.2019.2934803
   Bayyari A., 2006, P ACM S VIRTUAL REAL, P368, DOI DOI 10.1145/1180495.1180570
   Bettenburg Nicolas, 2008, Proc. European Software Engineering Conference and Symposium on the Foundations of Software Engineering (ESEC/FSE), P308, DOI [10.1145/1453101.1453146, DOI 10.1145/1453101.1453146]
   Bissyandé TF, 2013, PROC INT SYMP SOFTW, P188, DOI 10.1109/ISSRE.2013.6698918
   Bowman DA, 2007, COMPUTER, V40, P36, DOI 10.1109/MC.2007.257
   Bryson S, 1996, COMMUN ACM, V39, P62, DOI 10.1145/229459.229467
   Chen J, 2012, IEEE T VIS COMPUT GR, V18, P2130, DOI 10.1109/TVCG.2012.216
   Cleveland W. S., 1985, The Elements of Graphing Data
   Cohen J., 1988, Statistical power analysis for the behavioral sciences
   Cruz-Neira C., 1993, Computer Graphics Proceedings, P135, DOI 10.1145/166117.166134
   Demiralp Ç, 2006, IEEE T VIS COMPUT GR, V12, P323, DOI 10.1109/TVCG.2006.42
   Donalek C, 2014, IEEE INT CONF BIG DA, P609, DOI 10.1109/BigData.2014.7004282
   Drogemuller A., 2018, 2018 International Symposium on Big Data Visual and Immersive Analytics (BDVA), P1, DOI [10.1109/bdva.2018.8533895, DOI 10.1109/BDVA.2018.8533895]
   Dueñas S, 2021, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.601
   Dueñas S, 2018, PROC IEEE ACM INT C, P1, DOI 10.1145/3183440.3183475
   Elliott A, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P547, DOI 10.1109/ICSE.2015.191
   Few S., 2004, Show me the numbers
   Few S, 2009, ANALYTICS
   Friendly M, 2008, A Brief History of Data Visualization, P15, DOI [10.1007/978-3-540-33037-0_2, DOI 10.1007/978-3-540-33037-0_2]
   Friendly M., 2008, Milestones in the History of Thematic Cartography, Statistical Graphics, and Data Visualization
   Djorgovski SG, 2013, Arxiv, DOI arXiv:1301.6808
   Garcia-Hernandez RJ, 2016, 2016 IEEE AER C, P1
   Heer J, 2010, COMMUN ACM, V53, P59, DOI 10.1145/1743546.1743567
   Hooimeijer Pieter, 2007, P 22 IEEE ACM INT C, P34, DOI DOI 10.1145/1321631.1321639
   Ibrahim Z, 2019, J BIOMED INFORM, V90, DOI 10.1016/j.jbi.2019.103102
   Jackson D, 2023, Webgl 2.0 specification
   Jacob RJK, 2008, CHI 2008: 26TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS VOLS 1 AND 2, CONFERENCE PROCEEDINGS, P201
   Jedlitschka A, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P92, DOI 10.1109/ISESE.2005.1541818
   Jones B, 2023, W3C Working Draft
   Kaiser PK, 2005, RASIM6: CONTROLLING SEISMIC RISK, P33
   Kendall MG, 1938, BIOMETRIKA, V30, P81, DOI 10.2307/2332226
   Kobayashi K, 2013, CONF PROC INT SYMP C, P43, DOI 10.1109/ICPC.2013.6613832
   Kononenko O, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P124, DOI 10.1145/3183519.3183542
   Laha B, 2014, IEEE T VIS COMPUT GR, V20, P513, DOI 10.1109/TVCG.2014.20
   Liu SX, 2014, VISUAL COMPUT, V30, P1373, DOI 10.1007/s00371-013-0892-3
   Maddila C, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P874, DOI 10.1145/3338906.3340457
   Maletic JI, 2001, PROG COMPREHEN, P26, DOI 10.1109/WPC.2001.921711
   Merino L, 2017, PROC IEEE INT CONF S, P633, DOI 10.1109/ICSME.2017.70
   Merino L, 2017, 2017 IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT 2017), P11, DOI 10.1109/VISSOFT.2017.17
   MILGRAM P, 1994, IEICE T INF SYST, VE77D, P1321
   Millais P, 2018, CHI 2018: EXTENDED ABSTRACTS OF THE 2018 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, DOI 10.1145/3170427.3188537
   Misiak M, 2018, 2018 SIXTH IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT), P112, DOI 10.1109/VISSOFT.2018.00020
   Moreno-Lumbreras D., 2021, arXiv
   Moreno-Lumbreras D, 2022, 2022 IEEE CONFERENCE ON VIRTUAL REALITY AND 3D USER INTERFACES ABSTRACTS AND WORKSHOPS (VRW 2022), P71, DOI 10.1109/VRW55335.2022.00026
   Moreno-Lumbreras D, 2021, 2021 WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT 2021), P12, DOI 10.1109/VISSOFT52517.2021.00011
   Munzner T., 2014, Visualization analysis and design, DOI DOI 10.1201/B17511
   Natephra W., 2019, 36 INT S AUT ROB CON
   Olshannikova E., 2015, J BIG DATA-GER, V2, P22, DOI 10.1186/s40537-015-0031-2
   Playfair W, 1822, A Letter on Our Agricultural Distresses, Their Causes and Remedies: Accompanied with Tables and Copper-plate Charts, Shewing and Comparing the Prices of Wheat, Bread and Labour from 1565 to 1821. 23431. W. Sams
   Ragan ED, 2013, IEEE T VIS COMPUT GR, V19, P886, DOI 10.1109/TVCG.2012.163
   Raja D., 2004, PROC IMMERSIVE PROJE, P61
   Ralph Paul, 2021, ACM SIGSOFT Software Engineering Notes, V46, P19
   Romano S, 2019, INFORM SOFTWARE TECH, V114, P92, DOI 10.1016/j.infsof.2019.06.007
   Rosenbaum Rene, 2011, Advances in Visual Computing, P530, DOI DOI 10.1007/978-3-642-24028-7_49
   Rüdel MO, 2018, 2018 SIXTH IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT), P21, DOI 10.1109/VISSOFT.2018.00011
   Sadowski C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P181, DOI 10.1145/3183519.3183525
   Saket B, 2018, Arxiv, DOI arXiv:1709.08546
   Schuemie MJ, 2001, CYBERPSYCHOL BEHAV, V4, P183, DOI 10.1089/109493101300117884
   Sillito J., 2006, Proc. of the ACM SIGSOFT Int'l Symp. on Foundations of Software Engineering, P23
   Skarbez R, 2021, FRONT VIRTUAL REAL, V2, DOI 10.3389/frvir.2021.647997
   Sun C, 2010, P 32 ACM IEEE INT C, V1, P45
   Sun C, 2011, INT J CHEM ENG, V2011, DOI 10.1155/2011/545234
   Thongtanunam P, 2017, EMPIR SOFTW ENG, V22, P768, DOI 10.1007/s10664-016-9452-6
   Tian Y, 2012, EUR CON SFTWR MTNCE, P385, DOI 10.1109/CSMR.2012.48
   Vegas S, 2016, IEEE T SOFTWARE ENG, V42, P120, DOI 10.1109/TSE.2015.2467378
   Wettel R, 2007, 4TH IEEE INTERNATIONAL WORKSHOP ON VISUALIZING SOFTWARE FOR UNDERSTANDING AND ANALYSIS, PROCEEDINGS, P92, DOI 10.1109/VISSOF.2007.4290706
   Wettel R, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P551, DOI 10.1145/1985793.1985868
   Wohlin C., 2012, Experimentation in Software Engineering, DOI [10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Yano K, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P546, DOI 10.1109/SANER.2017.7884671
   Young P, 1998, PROG COMPREHEN, P19, DOI 10.1109/WPC.1998.693276
   Yu Y, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P367, DOI 10.1109/MSR.2015.42
   Zhang S, 2001, IEEE VISUAL, P437, DOI 10.1109/VISUAL.2001.964545
NR 76
TC 0
Z9 0
U1 7
U2 7
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2024
VL 29
IS 2
AR 42
DI 10.1007/s10664-023-10435-3
PG 49
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GT8Y0
UT WOS:001155026700001
OA hybrid
DA 2024-08-05
ER

PT J
AU Keshani, M
   Gousios, G
   Proksch, S
AF Keshani, Mehdi
   Gousios, Georgios
   Proksch, Sebastian
TI Frankenstein: fast and lightweight call graph generation for software
   builds
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software engineering in practice; Call graph generation; Build systems;
   Software ecosystems
ID DATA-FLOW ANALYSIS; UNDECIDABILITY; CONSTRUCTION
AB Call Graphs are a rich data source and form the foundation for advanced static analyses that can, for example, detect security vulnerabilities or dead code. This information is invaluable when it is immediately available, such as in the output of a build system. Call Graph generation is a whole-program analysis: not just the application, but also all its dependencies are processed together. Recent work has shown that even advanced static analyses can use summarization techniques to substantially improve runtime; however, existing analyses focus on soundness, and as such remain very expensive. When executed in the build system, which typically has limited resources, even powerful servers suffer from slow build times, rendering these analyses impractical in today's fast-paced development. In this paper, we aim to strike a balance between improving static analyses while remaining practical for use cases that require quick results in low-resource environments. We propose a summarization-based implementation of a Class-Hierarchy Analysis algorithm for call graph generation of Java programs. Our approach leverages the fact that dependency sets often do not change between builds: we can generate call graphs for these dependencies, cache their generation for subsequent builds, and using a novel stitching algorithm, Frankenstein, merge all partial results into a complete call graph for the whole program. Our evaluation results show that this lightweight approach can substantially outperform existing frameworks. In terms of speed improvements, Frankenstein surpasses the baselines by up to 38%, requiring an average of just 388 Megabytes of memory. This makes the proposed approach practical for build systems with limited memory resources. Despite these optimizations, our generated call graphs maintain a near-identical set of edges when compared to the baselines, achieving an F-1 score of up to 0.98. This summarization-based approach for call graph generation paves the way for using extended static analyses in build processes.
C1 [Keshani, Mehdi; Gousios, Georgios; Proksch, Sebastian] Delft Univ Technol, Delft, Netherlands.
   [Gousios, Georgios] Endor Labs, Palo Alto, CA USA.
C3 Delft University of Technology
RP Keshani, M (corresponding author), Delft Univ Technol, Delft, Netherlands.
EM m.keshani@tudelft.nl
OI Keshani, Mehdi/0000-0002-8647-0067
FU Gousios's work was performed while at TU Delft. We would also like to
   express our gratitude to Dr. Maliheh Izadi for her priceless input on
   this study.
FX Gousios's work was performed while at TU Delft. We would also like to
   express our gratitude to Dr. Maliheh Izadi for her priceless input on
   this study.
CR Alexandru CV, 2019, EMPIR SOFTW ENG, V24, P332, DOI 10.1007/s10664-018-9630-9
   Ali K, 2014, The Separate Compilation Assumption
   Ali K, 2013, LECT NOTES COMPUT SC, V7920, P378, DOI 10.1007/978-3-642-39038-8_16
   Ali K, 2012, LECT NOTES COMPUT SC, V7313, P688, DOI 10.1007/978-3-642-31057-7_30
   [Anonymous], 2023, The doop project
   [Anonymous], 2023, Shrinkwrap resolvers
   [Anonymous], 2023, Maven version ranges
   [Anonymous], 2023, h2o project
   [Anonymous], 2023, T. j. watson libraries for analysis
   [Anonymous], 2023, Repository of the paper
   Arzt S, 2016, PROC INT CONF SOFTW, P725, DOI 10.1145/2884781.2884816
   Bacon DF, 1996, ACM SIGPLAN NOTICES, V31, P324, DOI 10.1145/236338.236371
   Ball T, 2001, ACM SIGPLAN NOTICES, P97
   Boldi P, 2021, ACM T INTERNET TECHN, V21, DOI 10.1145/3418209
   Bracha G, 1998, ACM SIGPLAN NOTICES, V33, P183, DOI 10.1145/286942.286957
   Chord, 2023, A program analysis platform for java
   Dean J, 1995, LECT NOTES COMPUT SC, V952, P77, DOI 10.1007/3-540-49538-x_5
   Dependabot, 2023, ABOUT US
   Dillig I, 2011, ACM SIGPLAN NOTICES, V46, P567, DOI 10.1145/1993316.1993565
   Dyer R, 2015, ACM T SOFTW ENG METH, V25, DOI 10.1145/2803171
   Eichberg M, 2018, COMPANION PROCEEDINGS FOR THE ISSTA/ECOOP 2018 WORKSHOPS, P113, DOI 10.1145/3236454.3236509
   Goldberg A., 1983, Smalltalk-80: The Language and its Implementation
   Gopan D, 2007, LECT NOTES COMPUT SC, V4590, P68
   Hejderup J, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS (ICSE-NIER), P101, DOI 10.1145/3183399.3183417
   Helm D, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P184, DOI 10.1145/3368089.3409765
   Jol, 2023, ABOUT US
   Keshani M, 2021, PROC IEEE ACM INT C, P99, DOI 10.1109/ICSE-Companion52605.2021.00046
   Kula RG, 2018, EMPIR SOFTW ENG, V23, P384, DOI 10.1007/s10664-017-9521-5
   Kulkarni S, 2016, ACM SIGPLAN NOTICES, V51, P359, DOI 10.1145/3022671.2984023
   Lam E., 2011, CETUS USERS COMPILER, V15, P15
   Landi W., 1992, ACM Letters on Programming Languages and Systems, V1, P323, DOI 10.1145/161494.161501
   Livshits B, 2015, COMMUN ACM, V58, P44, DOI 10.1145/2644805
   Nielsen BB, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P29, DOI 10.1145/3460319.3464836
   RAMALINGAM G, 1994, ACM T PROGR LANG SYS, V16, P1467, DOI 10.1145/186025.186041
   Reif M, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P251, DOI 10.1145/3293882.3330555
   Reif M, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P474, DOI 10.1145/2950290.2950312
   Reps T., 1995, Conference Record of POPL'95: 22nd ACM SIGPLAN-SIGACT Symposium Principles of Programming Languages, P49, DOI 10.1145/199448.199462
   Reps T, 2000, ACM T PROGR LANG SYS, V22, P162, DOI 10.1145/345099.345137
   Rountev A, 2008, LECT NOTES COMPUT SC, V4959, P53
   Rountev A, 2006, LECT NOTES COMPUT SC, V3923, P2
   Schubert PD, 2021, LIPIcs, V194, DOI [10.4230/LIPIcs.ECOOP.2021.2, DOI 10.4230/LIPICS.ECOOP.2021.2]
   Sharir M., 1981, Program flow analysis. Theory and applications, P189
   SHIVERS O, 1988, SIGPLAN NOTICES, V23, P164, DOI 10.1145/960116.54007
   Souter AL, 2001, PROC IEEE INT CONF S, P682, DOI 10.1109/ICSM.2001.972787
   Srivastava A., 1992, ACM Letters on Programming Languages and Systems, V1, P355, DOI 10.1145/161494.161517
   Sui L, 2020, PROC INT CONF SOFTW, P1049, DOI 10.1145/3377811.3380441
   Sui L, 2018, LECT NOTES COMPUT SC, V11275, P68, DOI 10.1007/978-3-030-02768-1_4
   Sundaresan V, 2000, ACM SIGPLAN NOTICES, V35, P264, DOI 10.1145/354222.353189
   Tip F, 2000, ACM SIGPLAN NOTICES, V35, P281, DOI 10.1145/354222.353190
   Toman J, 2017, LIPICS, V71, p18:1, DOI [10.4230/LIPIcs.SNAPL.2017.18, DOI 10.4230/LIPICS.SNAPL.2017.18]
   Tripp O, 2014, CCS'14: PROCEEDINGS OF THE 21ST ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P762, DOI 10.1145/2660267.2660339
   Utture A, 2022, PROC INT CONF SOFTW, P2043, DOI 10.1145/3510003.3510166
   Vasilescu B, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P805, DOI 10.1145/2786805.2786850
   Whaley J, 1999, ACM SIGPLAN NOTICES, V34, P187, DOI 10.1145/320385.320400
NR 54
TC 0
Z9 0
U1 2
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2024
VL 29
IS 1
AR 1
DI 10.1007/s10664-023-10388-7
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA X9FI7
UT WOS:001101423600001
OA hybrid
DA 2024-08-05
ER

PT J
AU Dang, XQ
   Li, YH
   Ma, W
   Guo, YJ
   Hu, Q
   Papadakis, M
   Cordy, M
   Traon, YL
AF Dang, Xueqi
   Li, Yinghua
   Ma, Wei
   Guo, Yuejun
   Hu, Qiang
   Papadakis, Mike
   Cordy, Maxime
   Traon, Yves Le
TI Towards Exploring the Limitations of Test Selection Techniques on Graph
   Neural Networks: An Empirical Study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Graph neural networks; Deep learning testing; Test input selection;
   Labeling
ID COMPREHENSIVE SURVEY
AB Graph Neural Networks (GNNs) have gained prominence in various domains, such as social network analysis, recommendation systems, and drug discovery, due to their ability to model complex relationships in graph-structured data. GNNs can exhibit incorrect behavior, resulting in severe consequences. Therefore, testing is necessary and pivotal. However, labeling all test inputs for GNNs can be prohibitively costly and time-consuming, especially when dealing with large and complex graphs. In response to these challenges, test selection has emerged as a strategic approach to alleviate labeling expenses. The objective of test selection is to select a subset of tests from the complete test set. While various test selection techniques have been proposed for traditional deep neural networks (DNNs), their adaptation to GNNs presents unique challenges due to the distinctions between DNN and GNN test data. Specifically, DNN test inputs are independent of each other, whereas GNN test inputs (nodes) exhibit intricate interdependencies. Therefore, it remains unclear whether DNN test selection approaches can perform effectively on GNNs. To fill the gap, we conduct an empirical study that systematically evaluates the effectiveness of various test selection methods in the context of GNNs, focusing on three critical aspects: 1) Misclassification detection: selecting test inputs that are more likely to be misclassified; 2) Accuracy estimation: selecting a small set of tests to precisely estimate the accuracy of the whole testing set; 3) Performance enhancement: selecting retraining inputs to improve the GNN accuracy. Our empirical study encompasses 7 graph datasets and 8 GNN models, evaluating 22 test selection approaches. Our study includes not only node classification datasets but also graph classification datasets. Our findings reveal that: 1) In GNN misclassification detection, confidence-based test selection methods, which perform well in DNNs, do not demonstrate the same level of effectiveness; 2) In terms of GNN accuracy estimation, clustering-based methods, while consistently performing better than random selection, provide only slight improvements; 3) Regarding selecting inputs for GNN performance improvement, test selection methods, such as confidence-based and clustering-based test selection methods, demonstrate only slight effectiveness; 4) Concerning performance enhancement, node importance-based test selection methods are not suitable, and in many cases, they even perform worse than random selection.
C1 [Dang, Xueqi; Li, Yinghua; Papadakis, Mike; Cordy, Maxime; Traon, Yves Le] Univ Luxembourg, SnT Ctr, Luxembourg, Luxembourg.
   [Guo, Yuejun] Luxembourg Inst Sci & Technol LIST, Luxembourg, Luxembourg.
   [Ma, Wei] Nanyang Technol Univ, Singapore, Singapore.
   [Hu, Qiang] Univ Tokyo, Bunkyo, Japan.
C3 University of Luxembourg; Luxembourg Institute of Science & Technology;
   Nanyang Technological University; University of Tokyo
RP Li, YH (corresponding author), Univ Luxembourg, SnT Ctr, Luxembourg, Luxembourg.
EM xueqi.dang@uni.lu; yinghua.li@uni.lu; ma_wei@ntu.edu.sg;
   yuejun.guo@list.lu; qianghu0515@gmail.com; michail.papadakis@uni.lu;
   maxime.cordy@uni.lu; yves.letraon@uni.lu
OI LI, Yinghua/0000-0003-1390-0393
FU Fonds National de la Recherche Luxembourg [17036341]; Luxembourg
   National Research Fund AFR PHD
FX This work is supported by the Luxembourg National Research Fund AFR PHD
   17036341.DAS:The datasets and code used in the present study are
   available in our repository:
   https://github.com/BlueBerry-xueqi/graph_testing
CR Aghababaeyan Z, 2023, IEEE T SOFTW ENG IEE
   Aghababaeyan Z, 2024, Arxiv, DOI arXiv:2303.04878
   Ahmed MAGES, 2020, EMERG MICROBES INFEC, V9, P868, DOI 10.1080/22221751.2020.1754133
   Ali Peshawa Jamal Muhammad, 2014, Machine Learning Technical Reports, V1, P1, DOI DOI 10.13140/RG.2.2.28948.04489
   Ando H, 2021, TRANSPORTMETRICA A, V17, P648, DOI 10.1080/23249935.2020.1804480
   Arthur D, 2007, PROCEEDINGS OF THE EIGHTEENTH ANNUAL ACM-SIAM SYMPOSIUM ON DISCRETE ALGORITHMS, P1027
   Bianchi FM, 2022, IEEE T PATTERN ANAL, V44, P3496, DOI 10.1109/TPAMI.2021.3054830
   Bongini P, 2021, NEUROCOMPUTING, V450, P242, DOI 10.1016/j.neucom.2021.04.039
   Cai HY, 2018, IEEE T KNOWL DATA EN, V30, P1616, DOI 10.1109/TKDE.2018.2807452
   Chen J, 2006, P HUM LANG TECHN C N, P120
   Chen JS, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3391613
   Cheng X, 2022, PROCEEDINGS OF THE 31ST ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2022, P519, DOI 10.1145/3533767.3534371
   Cheng X, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3436877
   Dang X., 2024, Test input prioritization for machine learning classifiers, DOI [10.1109/TSE.2024.3350019, DOI 10.1109/TSE.2024.3350019]
   Dang X., 2023, ACM Trans Softw Eng Methodol, ACM New York, NY, USA, V33, P1
   Du J, 2018, Arxiv, DOI [arXiv:1710.10370, 10.48550/arXiv.1710.10370]
   Duvenaud DK., 2015, Convolutional networks on graphs for learning molecular fingerprints, P28
   Dwivedi VP, 2022, Arxiv, DOI arXiv:2003.00982
   Elbaum S, 2002, IEEE T SOFTWARE ENG, V28, P159, DOI 10.1109/32.988497
   Fan WQ, 2019, WEB CONFERENCE 2019: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2019), P417, DOI 10.1145/3308558.3313488
   Feng Y, 2020, P 29 ACM SIGSOFT INT, P177
   Fu XY, 2020, WEB CONFERENCE 2020: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2020), P2331, DOI 10.1145/3366423.3380297
   Gao XY, 2022, PROC INT CONF SOFTW, P73, DOI 10.1145/3510003.3510232
   Gilmer J., 2017, Proceedings of the 34th International Conference on Machine Learning-Volume, P1263
   Hamilton WL, 2017, ADV NEUR IN, V30
   He XN, 2020, PROCEEDINGS OF THE 43RD INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL (SIGIR '20), P639, DOI 10.1145/3397271.3401063
   Hong DF, 2021, IEEE T GEOSCI REMOTE, V59, P5966, DOI 10.1109/TGRS.2020.3015157
   Hu P, 2015, PHYSICA A, V429, P169, DOI 10.1016/j.physa.2015.02.002
   Hu Q, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P917, DOI 10.1109/ASE51524.2021.9678672
   Jahangirova G, 2020, IEEE INT CONF SOFTW, P74, DOI 10.1109/ICST46399.2020.00018
   Jha K, 2022, SCI REP-UK, V12, DOI 10.1038/s41598-022-12201-9
   Jin W, 2020, KDD '20: PROCEEDINGS OF THE 26TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY & DATA MINING, P66, DOI 10.1145/3394486.3403049
   Thekumparampil KK, 2018, Arxiv, DOI arXiv:1803.03735
   Kaushik M., 2014, INT J SOFTW HARDW RE, V2, P93, DOI DOI 10.30534/IJETER/2020/20852020
   Kim B., 2016, Examples are not enough, learn to criticize! criticism for interpretability, P29
   Kim J, 2019, PROC INT CONF SOFTW, P1039, DOI 10.1109/ICSE.2019.00108
   Li C, 2017, PROCEEDINGS OF THE 26TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'17), P577, DOI 10.1145/3038912.3052643
   Li Y., 2023, Test input prioritization for 3d point clouds
   Li Y, 2022, arXiv
   Li ZN, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P499, DOI 10.1145/3338906.3338930
   Liu M, 2020, KDD '20: PROCEEDINGS OF THE 26TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY & DATA MINING, P338, DOI 10.1145/3394486.3403076
   Liu TQ, 2007, NUCLEIC ACIDS RES, V35, pD198, DOI 10.1093/nar/gkl999
   Long YH, 2022, BIOINFORMATICS, V38, P2254, DOI 10.1093/bioinformatics/btac100
   Ma L, 2018, IEEE INT CONF AUTOM, P120, DOI 10.1145/3238147.3238202
   Ma W, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3417330
   Mesquita, 2020, ADV NEURAL INF PROCE, P2220
   Morris C., 2019, AAAI Conference on Artificial Intelligence, DOI DOI 10.1609/AAAI.V33I01.33014602
   Kipf TN, 2017, Arxiv, DOI arXiv:1609.02907
   Neumann M, 2016, MACH LEARN, V102, P209, DOI 10.1007/s10994-015-5517-9
   Panichella A, 2018, IEEE T SOFTWARE ENG, V44, P122, DOI 10.1109/TSE.2017.2663435
   Park N, 2019, KDD'19: PROCEEDINGS OF THE 25TH ACM SIGKDD INTERNATIONAL CONFERENCCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P596, DOI 10.1145/3292500.3330855
   Patel Eva, 2020, Procedia Computer Science, V171, P158, DOI 10.1016/j.procs.2020.04.017
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Pei KX, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P1, DOI 10.1145/3132747.3132785
   Qin Q, 2016, 2016 2ND IEEE INTERNATIONAL CONFERENCE ON COMPUTER AND COMMUNICATIONS (ICCC), P2499, DOI 10.1109/CompComm.2016.7925149
   Ranganathan H, 2017, IEEE IMAGE PROC, P3934, DOI 10.1109/ICIP.2017.8297020
   Réau M, 2023, BIOINFORMATICS, V39, DOI 10.1093/bioinformatics/btac759
   Ren PZ, 2022, ACM COMPUT SURV, V54, DOI 10.1145/3472291
   Riesen K, 2008, LECT NOTES COMPUT SC, V5342, P287
   Sassano M, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P505
   Sculley D., 2010, P 19 INT C WORLD WID, P1177
   Sen P, 2008, AI MAG, V29, P93, DOI 10.1609/aimag.v29i3.2157
   Shen EJ, 2020, IEEE INT CONF AUTOM, P410, DOI 10.1145/3324884.3416621
   Shervashidze N, 2011, Journal of Machine Learning Research, JMLR, V12
   Shi CC, 2020, Arxiv, DOI [arXiv:2001.09382, DOI 10.48550/ARXIV.2001.09382]
   Sun C, 2019, PROC CVPR IEEE, P273, DOI 10.1109/CVPR.2019.00036
   Ul Haq F, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09982-4
   Veličkovic P, 2018, Arxiv, DOI arXiv:1710.10903
   Wang D, 2014, IEEE IJCNN, P112, DOI 10.1109/IJCNN.2014.6889457
   Wang Z, 2021, PROC INT CONF SOFTW, P397, DOI 10.1109/ICSE43902.2021.00046
   Weiss M, 2022, PROCEEDINGS OF THE 31ST ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2022, P139, DOI 10.1145/3533767.3534375
   Wieder Oliver, 2020, Drug Discov Today Technol, V37, P1, DOI 10.1016/j.ddtec.2020.11.009
   Wishart DS, 2018, Oxford University Press, V46, pD1074
   Wu L, 2019, Arxiv, DOI arXiv:1811.02815
   Wu SW, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3535101
   Wu ZH, 2021, IEEE T NEUR NET LEAR, V32, P4, DOI 10.1109/TNNLS.2020.2978386
   Xiao SX, 2022, MACH VISION APPL, V33, DOI 10.1007/s00138-021-01251-0
   Xu Keyulu, 2018, PREPRINT, DOI DOI 10.48550/ARXIV.1810.00826
   Yang YZ, 2019, PHYSICA A, V526, DOI 10.1016/j.physa.2019.121118
   Yang Zhilin, 2016, ICLR, V48, P40
   Ying R, 2018, KDD'18: PROCEEDINGS OF THE 24TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY & DATA MINING, P974, DOI 10.1145/3219819.3219890
   Yu J., 2020, Enhance social recommendation with adversarial graph convolutional networks
   Yu Z, 2018, EMPIR SOFTW ENG, V23, P3161, DOI 10.1007/s10664-017-9587-0
   Zhang XM, 2021, FRONT GENET, V12, DOI 10.3389/fgene.2021.690049
   Zhao TX, 2021, WSDM '21: PROCEEDINGS OF THE 14TH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING, P833, DOI 10.1145/3437963.3441720
   Zhou J, 2020, AI OPEN, V1, P57, DOI 10.1016/j.aiopen.2021.01.001
   Zolfagharian A., 2023, A search-based testing approach for deep reinforcement learning agents, DOI [10.1109/TSE.2023.3269804, DOI 10.1109/TSE.2023.3269804]
NR 87
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2024
VL 29
IS 5
AR 112
DI 10.1007/s10664-024-10515-y
PG 41
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZG2E1
UT WOS:001274068200002
OA hybrid
DA 2024-08-05
ER

PT J
AU Biagiola, M
   Stocco, A
   Riccio, V
   Tonella, P
AF Biagiola, Matteo
   Stocco, Andrea
   Riccio, Vincenzo
   Tonella, Paolo
TI Two is better than one: digital siblings to improve autonomous driving
   testing
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE AI testing; Self-driving cars; Simulation-based testing; Digital twins;
   Deep neural networks; Autonomous vehicles.
AB Simulation-based testing represents an important step to ensure the reliability of autonomous driving software. In practice, when companies rely on third-party general-purpose simulators, either for in-house or outsourced testing, the generalizability of testing results to real autonomous vehicles is at stake. In this paper, we enhance simulation-based testing by introducing the notion of digital siblings-a multi-simulator approach that tests a given autonomous vehicle on multiple general-purpose simulators built with different technologies, that operate collectively as an ensemble in the testing process. We exemplify our approach on a case study focused on testing the lane-keeping component of an autonomous vehicle. We use two open-source simulators as digital siblings, and we empirically compare such a multi-simulator approach against a digital twin of a physical scaled autonomous vehicle on a large set of test cases. Our approach requires generating and running test cases for each individual simulator, in the form of sequences of road points. Then, test cases are migrated between simulators, using feature maps to characterize the exercised driving conditions. Finally, the joint predicted failure probability is computed, and a failure is reported only in cases of agreement among the siblings. Our empirical evaluation shows that the ensemble failure predictor by the digital siblings is superior to each individual simulator at predicting the failures of the digital twin. We discuss the findings of our case study and detail how our approach can help researchers interested in automated testing of autonomous driving software.
C1 [Biagiola, Matteo; Tonella, Paolo] Univ Svizzera Italiana USI, Via Buffi 13, Lugano, Switzerland.
   [Stocco, Andrea] Tech Univ Munich, Boltzmannstr 3 Garching Near Munich, Munich, Germany.
   [Stocco, Andrea] Fortiss GmbH, Guerickestr 25, Munich, Germany.
   [Riccio, Vincenzo] Univ Udine, Via Gemona 92, Udine, Italy.
C3 Universita della Svizzera Italiana; Technical University of Munich;
   fortiss; University of Udine
RP Biagiola, M (corresponding author), Univ Svizzera Italiana USI, Via Buffi 13, Lugano, Switzerland.
EM matteo.biagiola@usi.ch; andrea.stocco@tum.de; vincenzo.riccio@uniud.it;
   paolo.tonella@usi.ch
RI Biagiola, Matteo/ACY-3300-2022; Tonella, Paolo/C-1702-2015; Riccio,
   Vincenzo/AAI-1905-2020; Stocco, Andrea/GVT-6917-2022
OI Biagiola, Matteo/0000-0002-7825-3409; Riccio,
   Vincenzo/0000-0002-6229-8231; Stocco, Andrea/0000-0001-8956-3894
FU H2020 European Research Council
FX We thank BeamNG GmbH for providing us the license for the driving
   simulator.
CR Afzal A, 2021, IEEE INT CONF SOFTW, P263, DOI 10.1109/ICST49551.2021.00036
   Almeaibed Sadeq, 2021, IEEE Communications Standards Magazine, V5, P40, DOI 10.1109/MCOMSTD.011.2100004
   Amini MH, 2023, Evaluating the impact of flaky simulators on testing autonomous driving systems
   [Anonymous], 2022, Nvidia PhysX
   [Anonymous], 2023, Replication package
   [Anonymous], 2021, Waymo Simulation City
   [Anonymous], 2022, Waabi World
   Arjovsky M, 2017, PR MACH LEARN RES, V70
   Barosan I., 2020, P EUR C SOFTW ARCH, P542, DOI [10.1007/978-3-030-59155-7_39, DOI 10.1007/978-3-030-59155-7]
   Barry PJ., 1988, A recursive evaluation algorithm for a class of catmull-rom splines
   BeamNG.research, 2022, BeamNG GmbH
   Ben Abdessalem R, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1016, DOI 10.1145/3180155.3180160
   Bewley A, 2019, IEEE INT CONF ROBOT, P4818, DOI [10.1109/icra.2019.8793668, 10.1109/ICRA.2019.8793668]
   BGRMedia L, 2018, Waymo's self-driving cars hit 10 million miles
   Biagiola M, 2023, 2023 IEEE/ACM INTERNATIONAL WORKSHOP ON SEARCH-BASED AND FUZZ TESTING, SBFT, P45, DOI 10.1109/SBFT59156.2023.00010
   Bojarski Mariusz, 2016, arXiv
   Borg M, 2021, ICST 21
   Borji A, 2019, COMPUT VIS IMAGE UND, V179, P41, DOI 10.1016/j.cviu.2018.10.009
   Bottou L, 2007, P NIPS 07
   Boutan E, 2020, Autonomous driving market overview
   Cerf VG, 2018, COMMUN ACM, V61, P7, DOI 10.1145/3177753
   Cheng MF, 2023, PROCEEDINGS OF THE 32ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2023, P488, DOI 10.1145/3597926.3598072
   Conover W. J., 1999, PRACTICAL NONPARAMET
   DeepHyperion, 2022, Replication package
   Donkey Car, 2021, ABOUT US
   Farag W, 2020, INT J INTELL TRANSP, V18, P356, DOI 10.1007/s13177-019-00204-2
   Fraser G, 2013, IEEE T SOFTWARE ENG, V39, P276, DOI 10.1109/TSE.2012.14
   Gambi A, 2019, Tech. rep, BeamNG
   Gambi A, 2022, 15TH SEARCH-BASED SOFTWARE TESTING WORKSHOP (SBST 2022), P25, DOI 10.1145/3526072.3527538
   Gambi A, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P318, DOI 10.1145/3293882.3330566
   García S, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P593, DOI 10.1145/3368089.3409743
   Grewal R, 2024, Predicting safety misbehaviours in autonomous driving systems using uncertainty quantification, P12
   Grigorescu S, 2020, J FIELD ROBOT, V37, P362, DOI 10.1002/rob.21918
   Group E, 2021, Esi prosivic
   Haq FU, 2021, Empir Softw Eng
   Hu X, 2023, Sim2real and digital twins in autonomous driving: A survey.
   Jahangirova G, 2021, IEEE INT CONF SOFTW, P194, DOI 10.1109/ICST49551.2021.00030
   Jha S, 2019, I C DEPEND SYS NETWO, P112, DOI 10.1109/DSN.2019.00025
   Kapteyn MG, 2020, CoRR abs/2012.05841
   Kaur P, 2021, Arxiv, DOI arXiv:2101.05337
   Kim S, 2022, P 2022 ACM SIGSAC C, DOI 10.11452F3548606.3560558
   Kingma D. P., 2014, arXiv
   Koopman P, 2016, SAE INT J TRANSP SAF, V4, P15, DOI 10.4271/2016-01-0128
   Kothlow C, 2021, The power of a multi-purpose digital twin
   Lambertenghi SC, 2024, Assessing quality metrics for neural reality gap input mitigation in autonomous driving testing, P12
   Li GP, 2020, PROC INT SYMP SOFTW, P25, DOI 10.1109/ISSRE5003.2020.00012
   Lukasczyk Stephan, 2020, Search-Based Software Engineering. 12th International Symposium, SSBSE 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12420), P9, DOI 10.1007/978-3-030-59762-7_2
   Luke Sean, 2013, Essentials of Metaheuristics, V2
   May C, 2019, Why automotive companies outsource software development services
   Moghadam MH, 2022, Machine learning testing in an adas case study using simulation-integrated bio-inspired search-based testing
   Mouret JB, 2015, Arxiv, DOI arXiv:1504.04909
   San Omer, 2021, NAT COMPUT SCI, V1, P307, DOI 10.1038/s43588-021-00077-0
   Panichella A, 2018, IEEE T SOFTWARE ENG, V44, P122, DOI 10.1109/TSE.2017.2663435
   Panichella S, 2021, 2021 IEEE/ACM 14TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST 2021), P20, DOI 10.1109/SBST52555.2021.00011
   Ramdas A, 2017, ENTROPY-SWITZ, V19, DOI 10.3390/e19020047
   Riccio V, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P876, DOI 10.1145/3368089.3409730
   Rosique F, 2019, SENSORS-BASEL, V19, DOI 10.3390/s19030648
   Saad D, 1998, Online Learn
   Saito T, 2015, PLOS ONE, V10, DOI 10.1371/journal.pone.0118432
   Software SDI, 2022, Simcenter prescan
   Stocco A, 2022, IEEE Trans Softw Eng
   Stocco A, 2020, P 31 INT S SOFTW REL
   Stocco A, 2022, IEEE INT CONF AUTOM, DOI 10.1145/3551349.3556968
   Stocco A, 2023, EMPIR SOFTW ENG, V28, DOI 10.1007/s10664-023-10306-x
   Stocco A, 2022, J SOFTW-EVOL PROC, V34, DOI 10.1002/smr.2386
   Stocco A, 2020, PROC INT CONF SOFTW, P359, DOI 10.1145/3377811.3380353
   Talwar D, 2020, 2020 IEEE INTERNATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE TESTING (AITEST), P73, DOI 10.1109/AITEST49225.2020.00018
   Tang SC, 2023, Arxiv, DOI [arXiv:2206.05961, 10.48550/arXiv.2206.05961, DOI 10.48550/ARXIV.2206.05961]
   TawnKramer ME contributors, 2022, Donkeycar
   Team Chauffeur, 2016, Steering angle model: Chauffeur
   Team Epoch, 2016, Steering angle model: Epoch
   Team U, 2020, Udacity self-driving car challenge
   Team U, 2019, Udacity's self-driving car simulator
   Tian Y, 2018, P ICSE 18
   U.S. Departmentof Transportation NHTSA, 2007, Pre-crash scenario typology for crash avoidance research
   U.S. DepartmentofTransportation UD, 2018, A framework for automated driving system testable cases and scenarios
   Udacity, 2017, A self-driving car simulator built with Unity
   Ul Haq F, 2022, PROC INT CONF SOFTW, P811, DOI 10.1145/3510003.3510188
   Unity3d, 2021, about us
   van Dinter R, 2022, INFORM SOFTWARE TECH, V151, DOI 10.1016/j.infsof.2022.107008
   Veledar O, 2019, COMM COM INF SC, V1060, P415, DOI 10.1007/978-3-030-28005-5_32
   Verma Ankit, 2021, SAE WCX DIG SUMM, DOI [10.4271/2021-01-0248, DOI 10.4271/2021-01-0248]
   Viitala A, 2020, Arxiv, DOI arXiv:2008.00715
   Wayve, 2022, Introducing wayve infinity simulator
   Yun H, 2021, 2021 INTERNATIONAL CONFERENCE ON ELECTRONICS, INFORMATION, AND COMMUNICATION (ICEIC), DOI 10.1109/ICEIC51217.2021.9369807
   Yurtsever E, 2020, IEEE ACCESS, V8, P58443, DOI 10.1109/ACCESS.2020.2983149
   Zelun Kong, 2020, 2020 IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR). Proceedings, P14242, DOI 10.1109/CVPR42600.2020.01426
   Zhang MS, 2018, IEEE INT CONF AUTOM, P132, DOI 10.1145/3238147.3238187
   Zhong Z, 2021, Neural network guided evolutionary fuzzing for finding traffic violations of autonomous vehicles
   Zhou HL, 2021, INT C PATT RECOG, P4436, DOI 10.1109/ICPR48806.2021.9412011
   Zhu JY, 2017, IEEE I CONF COMP VIS, P2242, DOI 10.1109/ICCV.2017.244
   Zohdinasab T, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3544792
   Zohdinasab T, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P79, DOI 10.1145/3460319.3464811
NR 93
TC 0
Z9 0
U1 2
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2024
VL 29
IS 4
AR 72
DI 10.1007/s10664-024-10458-4
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RI4C5
UT WOS:001227012000001
OA hybrid, Green Submitted
DA 2024-08-05
ER

PT J
AU Murali, A
   Sahu, G
   Thangarajah, K
   Zimmerman, B
   Rodríguez-Pérez, G
   Nagappan, M
AF Murali, Aniruddhan
   Sahu, Gaurav
   Thangarajah, Kishanthan
   Zimmerman, Brian
   Rodriguez-Perez, Gema
   Nagappan, Meiyappan
TI Diversity in issue assignment: humans vs bots
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Equitable technology; Software inclusiveness; Bias; Software bots
ID PULL REQUESTS; RACIAL BIAS; HEALTH; GENDER
AB Issue assignment process is a common practice in open source projects for managing incoming and existing issues. While traditionally performed by humans, the adoption of software bots for automating this process has become prevalent in recent years. The objective of this paper is to examine the diversity in issue assignments between bots and humans in open source projects, with the aim of understanding how open source communities can foster diversity and inclusivity. To achieve this, we conducted a quantitative analysis on three major open source projects hosted on GitHub, focusing on the most likely racial and ethnic diversity of both human and bot assignors during the issue assignment process. We analyze how issues are assigned by humans and bots, as well as the distribution of issue types among White and Non-White open source collaborators. Additionally, we explore how the diversity in issue assignments evolves over time for human and bot assignors. Our results reveal that both human and bot assignors majorly assign issues to developers of the same most likely race and ethnicity. Notably, we find bots assign more issues to perceived White developers than Non-White developers. In conclusion, our findings suggest that bots display higher levels of bias than humans in most cases, although humans also demonstrate significant bias in certain instances. Thus, open source communities must actively address these potential biases in their GitHub issue assignment process to promote diversity and inclusivity.
C1 [Murali, Aniruddhan; Sahu, Gaurav; Thangarajah, Kishanthan; Zimmerman, Brian; Nagappan, Meiyappan] Univ Waterloo, Waterloo, ON, Canada.
   [Rodriguez-Perez, Gema] Univ British Columbia, Kelowna, BC, Canada.
C3 University of Waterloo; University of British Columbia
RP Nagappan, M (corresponding author), Univ Waterloo, Waterloo, ON, Canada.; Rodríguez-Pérez, G (corresponding author), Univ British Columbia, Kelowna, BC, Canada.
EM a25murali@uwaterloo.ca; gaurav.sahu@uwaterloo.ca; k4thanga@uwaterloo.ca;
   bdzimmerman@uwaterloo.ca; gema.rodriguezperez@ubc.ca;
   mei.nagappan@uwaterloo.ca
OI Rodriguez, Gema/0000-0002-0062-8418
CR Adams B, 2020, IEEE SOFTWARE, V37, P104, DOI 10.1109/MS.2020.2975075
   Ali M, 2011, INT J HUM RESOUR MAN, V22, P1464, DOI 10.1080/09585192.2011.561961
   Balachandran V, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P931, DOI 10.1109/ICSE.2013.6606642
   Blau P. M., 1977, INEQUALITY HETEROGEN, V7
   Bosu A, 2019, INT SYMP EMP SOFTWAR, P295
   Brokmeier P, 2017, PeerJ PrePrints, V5
   Brown C, 2019, 2019 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON BOTS IN SOFTWARE ENGINEERING (BOTSE 2019), P54, DOI 10.1109/BotSE.2019.00021
   Buolamwini J., 2018, C FAIRN ACC TRANSP, V81, P77, DOI DOI 10.2147/OTT.S126905
   Caldarelli G, 2020, COMMUN PHYS-UK, V3, DOI 10.1038/s42005-020-0340-4
   Carleton AD, 2020, IEEE SOFTWARE, V37, P26, DOI 10.1109/MS.2020.2987666
   Chakraborty J, 2021, arXiv
   Chakraborty J, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P654, DOI 10.1145/3368089.3409697
   Chen JL, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P821
   Chouldechova A, 2018, Arxiv, DOI arXiv:1810.08810
   Corbett-Davies S, 2018, Arxiv, DOI [arXiv:1808.00023, 10.48550/arXiv.1808.00023]
   Dabbish L., 2012, Proc. ACM Computer Supported Cooperative Work, P1277
   Dastin J, 2023, Ethics of data and analytics, P296
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   Erlenhov L, 2019, 2019 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON BOTS IN SOFTWARE ENGINEERING (BOTSE 2019), P7, DOI 10.1109/BotSE.2019.00009
   Feng ZX, 2023, Arxiv, DOI arXiv:2202.11300
   github, Vscode triage bot
   github, Kubernetes ci bot
   github, Github rest api documentation
   Harrison DA, 2007, ACAD MANAGE REV, V32, P1199, DOI 10.5465/AMR.2007.26586096
   Hern A., Twitter apologises for 'racist' image-cropping algorithm
   Hill K, 2020, Ethics of data and analytics, P138
   Huang Y, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P456, DOI 10.1145/3368089.3409681
   Jackson SE, 2004, J ORGAN BEHAV, V25, P675, DOI 10.1002/job.265
   Jiang J, 2015, J COMPUT SCI TECH-CH, V30, P998, DOI 10.1007/s11390-015-1577-3
   Johnson Brittany, 2020, arXiv
   Bellamy RKE, 2018, Arxiv, DOI arXiv:1810.01943
   Klare BF, 2012, IEEE T INF FOREN SEC, V7, P1789, DOI 10.1109/TIFS.2012.2214212
   Lebeuf C, 2019, 2019 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON BOTS IN SOFTWARE ENGINEERING (BOTSE 2019), P1, DOI 10.1109/BotSE.2019.00008
   Lebeuf C, 2018, IEEE SOFTWARE, V35, P18, DOI 10.1109/MS.2017.4541027
   Ledford H, 2019, NATURE, V574, P608, DOI 10.1038/d41586-019-03228-6
   Lin TY, 2017, IEEE I CONF COMP VIS, P2999, DOI 10.1109/ICCV.2017.324
   Martin Nicole., 2018, Forbes
   Monperrus Martin, 2019, Ubiquity, V2019, P1
   Murphy-Hill Emerson, 2023, Proceedings of the ACM on Human-Computer Interaction, DOI 10.1145/3579527
   Murphy-Hill E, 2022, COMMUN ACM, V65, P52, DOI 10.1145/3474097
   Nadri R, 2021, IEEE Trans Softw Eng
   Nadri R, 2021, IEEE SOFTWARE, V38, P51, DOI 10.1109/MS.2020.3036758
   namsor, Namsor tool
   NVIDIA, 2019, Tensorflow
   Obermeyer Z, 2019, SCIENCE, V366, P447, DOI 10.1126/science.aax2342
   Peng ZH, 2018, PROCEEDINGS OF CHINESE CHI 2018: SIXTH INTERNATIONAL SYMPOSIUM OF CHINESE CHI (CHINESE CHI 2018), P152, DOI 10.1145/3202667.3202694
   Rodríguez-Pérez G, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09992-2
   Sebo P, 2021, J MED LIBR ASSOC, V109, P414, DOI 10.5195/jmla.2021.1185
   Steinmacher I, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P256, DOI 10.1145/3180155.3180208
   Storey MA, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P928, DOI 10.1145/2950290.2983989
   TEACHMAN JD, 1980, SOCIOL METHOD RES, V8, P341, DOI 10.1177/004912418000800305
   Terrell J, 2016, PeerJ Prepr, V4, P1733
   Vasilescu B, 2015, CHI 2015: PROCEEDINGS OF THE 33RD ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P3789, DOI 10.1145/2702123.2702549
   Vaswani A, 2017, ADV NEUR IN, V30
   webscraper, Web scraper-the #1 web scraping tool
   Wessel Mairieli, 2020, SBES '20: Proceedings of the 34th Brazilian Symposium on Software Engineering, P457, DOI 10.1145/3422392.3422459
   Wessel Mairieli, 2021, Proceedings of the ACM on Human-Computer Interaction, V5, DOI 10.1145/3476042
   Wessel Mairieli, 2018, Proceedings of the ACM on Human-Computer Interaction, V2, DOI 10.1145/3274451
   Wessel M, 2020, PROC IEEE INT CONF S, P1, DOI 10.1109/ICSME46990.2020.00011
   Wessel M, 2019, 2019 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON BOTS IN SOFTWARE ENGINEERING (BOTSE 2019), P38, DOI 10.1109/BotSE.2019.00018
   Wohlin C., 2012, Experimentation in Software Engineering, DOI [10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Wolf M. J., 2017, ACM SIGCAS Computers and Society, V47, P54, DOI 10.1145/3144592.3144598
   Wyrich M, 2019, 2019 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON BOTS IN SOFTWARE ENGINEERING (BOTSE 2019), P24, DOI 10.1109/BotSE.2019.00015
   Zhang BH, 2018, PROCEEDINGS OF THE 2018 AAAI/ACM CONFERENCE ON AI, ETHICS, AND SOCIETY (AIES'18), P335, DOI 10.1145/3278721.3278779
   Zhang JM, 2021, PROC INT CONF SOFTW, P1436, DOI 10.1109/ICSE43902.2021.00129
NR 65
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2024
VL 29
IS 2
AR 37
DI 10.1007/s10664-023-10424-6
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EI7U6
UT WOS:001138369900001
DA 2024-08-05
ER

PT J
AU Pujar, S
   Zheng, YH
   Buratti, L
   Lewis, B
   Chen, YC
   Laredo, J
   Morari, A
   Epstein, E
   Lin, TN
   Yang, B
   Su, Z
AF Pujar, Saurabh
   Zheng, Yunhui
   Buratti, Luca
   Lewis, Burn
   Chen, Yunchung
   Laredo, Jim
   Morari, Alessandro
   Epstein, Edward
   Lin, Tsungnan
   Yang, Bo
   Su, Zhong
TI Analyzing source code vulnerabilities in the D2A dataset with ML
   ensembles and C-BERT
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Dataset; Vulnerability detection; AI; Bert; Leaderboard; D2A
ID STATIC ANALYSIS
AB Static analysis tools are widely used for vulnerability detection as they can analyze programs with complex behavior and millions of lines of code. Despite their popularity, static analysis tools are known to generate an excess of false positives. The recent ability of Machine Learning models to learn from programming language data opens new possibilities of reducing false positives when applied to static analysis. However, existing datasets to train models for vulnerability identification suffer from multiple limitations such as limited bug context, limited size, and synthetic and unrealistic source code. We propose Differential Dataset Analysis or D2A, a differential analysis based approach to label issues reported by static analysis tools. The dataset built with this approach is called the D2A dataset. The D2A dataset is built by analyzing version pairs from multiple open source projects. From each project, we select bug fixing commits and we run static analysis on the versions before and after such commits. If some issues detected in a before-commit version disappear in the corresponding after-commit version, they are very likely to be real bugs that got fixed by the commit. We use D2A to generate a large labeled dataset. We then train both classic machine learning models and deep learning models for vulnerability identification using the D2A dataset. We show that the dataset can be used to build a classifier to identify possible false alarms among the issues reported by static analysis, hence helping developers prioritize and investigate potential true positives first. To facilitate future research and contribute to the community, we make the dataset generation pipeline and the dataset publicly available. We have also created a leaderboard based on the D2A dataset, which has already attracted attention and participation from the community.
C1 [Pujar, Saurabh; Zheng, Yunhui; Buratti, Luca; Lewis, Burn; Laredo, Jim; Morari, Alessandro; Epstein, Edward] IBM T J Watson Res Ctr, Yorktown Hts, NY 10598 USA.
   [Chen, Yunchung; Lin, Tsungnan] Natl Taiwan Univ, Taipei City, Taiwan.
   [Yang, Bo; Su, Zhong] IBM Res, Beijing, Peoples R China.
C3 International Business Machines (IBM); National Taiwan University
RP Pujar, S (corresponding author), IBM T J Watson Res Ctr, Yorktown Hts, NY 10598 USA.
EM saurabh.pujar@ibm.com; luca.buratti2@ibm.com; burn@us.ibm.com;
   f08921a01@ntu.edu.tw; laredoj@us.ibm.com; amorari@us.ibm.com;
   eae@us.ibm.com; tsungnan@ntu.edu.tw
CR Allamanis M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3212695
   Ayewah N, 2007, OOPSLA 07
   Ayewah N, 2008, IEEE SOFTWARE, V25, P22, DOI 10.1109/MS.2008.130
   Buratti L, 2020, CoRR
   Calcagno C, 2011, J ACM, V58, DOI 10.1145/2049697.2049700
   Chandrasekaran D, 2021, Arxiv, DOI [arXiv:2004.13820, 10.1145/3440755]
   Chen TQ, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P785, DOI 10.1145/2939672.2939785
   Choi MJ, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1546
   Clang, 2023, Clang tooling
   Cppcheck-team, 2023, Cppcheck
   cwe.mitre, CWE476 Cwe-476: null pointer dereference
   CWE400, 2023, Cwe-400: uncontrolled resource consumption
   CWE457, 2023, Cwe-457: use of uninitialized variable
   Sestili CD, 2018, Arxiv, DOI arXiv:1808.09897
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   Du XN, 2019, PROC INT CONF SOFTW, P60, DOI 10.1109/ICSE.2019.00024
   Facebook, 2023, Infer reportdiff
   Facebook, 2023, Infer static analyzer
   Fan G, 2019, PROC INT CONF SOFTW, P72, DOI 10.1109/ICSE.2019.00025
   Feng ZY, 2020, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, EMNLP 2020, P1536
   Flynn L, 2018, SEI Blog
   Flynn L, 2016, Prioritizing alerts from static analysis to find and fix code flaws
   github, Infer. Infer issue types
   Guarnieri S, 2011, P 2011 INT S SOFTWAR
   Guo D., 2021, 9 INT C LEARNING REP
   Hanam Q., 2014, P 11 WORK C MIN SOFT, P152
   Hindle A, 2012, PROC INT CONF SOFTW, P837, DOI 10.1109/ICSE.2012.6227135
   Johnson B, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P672, DOI 10.1109/ICSE.2013.6606613
   Jung Y, 2013, P 12 INT C STATIC AN, P203
   Kanade A, 2020, PR MACH LEARN RES, V119
   Ke GL, 2017, ADV NEUR IN, V30
   Koc U, 2017, MAPL'17
   Koc U, 2017, MAPL'17: PROCEEDINGS OF THE 1ST ACM SIGPLAN INTERNATIONAL WORKSHOP ON MACHINE LEARNING AND PROGRAMMING LANGUAGES, P35, DOI 10.1145/3088525.3088675
   Kremenek T, 2003, LECT NOTES COMPUT SC, V2694, P295
   Kudo T, 2018, CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2018): PROCEEDINGS OF SYSTEM DEMONSTRATIONS, P66
   LaToza T. D., 2006, 28th International Conference on Software Engineering Proceedings, P492, DOI 10.1145/1134285.1134355
   Li Z, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23158
   Lin GJ, 2020, P IEEE, V108, P1825, DOI 10.1109/JPROC.2020.2993293
   Liu YH, 2019, Arxiv, DOI [arXiv:1907.11692, DOI 10.48550/ARXIV.1907.11692]
   Livshits VB, 2005, USENIX ASSOCIATION PROCEEDINGS OF THE 14TH USENIX SECURITY SYMPOSIUM, P271
   LLVM, Clang static analyzer
   Lu S, 2021, Arxiv, DOI arXiv:2102.04664
   MITRETop25, Cwe top 25 most dangerous software weaknessess
   Murphy-Hill E, 2015, IEEE T SOFTWARE ENG, V41, P65, DOI 10.1109/TSE.2014.2357438
   Muske T, 2016, IEEE INT WORK C SO, P157, DOI 10.1109/SCAM.2016.25
   Muske TB, 2013, IEEE INT WORK C SO, P106, DOI 10.1109/SCAM.2013.6648191
   Nie Pengyu, 2021, arXiv
   NIST, 2023, Juliet test suite for c/c++ version 1.3
   NIST (National Information Technology Laboratory), 2023, National Vulnerability Dataset
   OHearn P, 2001, LNCS, V2142
   Paletov R, 2018, PROCEEDINGS OF THE 39TH ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, PLDI 2018, P450, DOI [10.1145/3192366.3192403, 10.1145/3296979.3192403]
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Puri R., 2021, arXiv
   Raghothaman M, 2018, PROCEEDINGS OF THE 39TH ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, PLDI 2018, P722, DOI [10.1145/3296979.3192417, 10.1145/3192366.3192417]
   Ray B, 2016, PROC INT CONF SOFTW, P428, DOI 10.1145/2884781.2884848
   Reynolds ZP, 2017, 2017 IEEE/ACM 4TH INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING RESEARCH AND INDUSTRIAL PRACTICE (SER&IP 2017), P55, DOI 10.1109/SER-IP.2017..20
   Russell RL, 2018, 2018 17TH IEEE INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA), P757, DOI 10.1109/ICMLA.2018.00120
   Sahami M., 2006, P 15 INT C WORLD WID, P377
   Sui Y, 2020, OOPSLA
   Suneja Sahil, 2020, CoRR
   Tripp O, 2014, CCS'14: PROCEEDINGS OF THE 21ST ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P762, DOI 10.1145/2660267.2660339
   Vaswani A, 2017, ADV NEUR IN, V30
   Dorogush AV, 2018, Arxiv, DOI [arXiv:1810.11363, DOI 10.48550/ARXIV.1810.11363]
   Villard J, 2023, Infer is not deterministic
   Wang Y, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P8696
   Wheeler David., 2023, Flawfinder
   Wiki, 2023, Libav
   WOLPERT DH, 1992, NEURAL NETWORKS, V5, P241, DOI 10.1016/S0893-6080(05)80023-1
   Yamaguchi F, 2015, P IEEE S SECUR PRIV, P797, DOI 10.1109/SP.2015.54
   Yamaguchi F, 2014, P IEEE S SECUR PRIV, P590, DOI 10.1109/SP.2014.44
   Yin T, 2019, Lizard: an extensible cyclomatic complexity analyzer
   Yuksel U., 2013, 2013 IEEE International Conference on Software Maintenance, P532
   Yüksel U, 2013, PROC IEEE INT CONF S, P532, DOI 10.1109/ICSM.2013.89
   Zhang X, 2017, MAPL'17: PROCEEDINGS OF THE 1ST ACM SIGPLAN INTERNATIONAL WORKSHOP ON MACHINE LEARNING AND PROGRAMMING LANGUAGES, P27, DOI 10.1145/3088525.3088563
   Zheng Y, 2023, Parallelism gives inconsistent results
   Zheng YH, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2021), P111, DOI 10.1109/ICSE-SEIP52600.2021.00020
   Zhou Y, 2019, NEURIPS 19
NR 77
TC 0
Z9 0
U1 6
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2024
VL 29
IS 2
AR 48
DI 10.1007/s10664-023-10405-9
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IT5U1
UT WOS:001168606400001
OA hybrid
DA 2024-08-05
ER

PT J
AU Openja, M
   Laberge, G
   Khomh, F
AF Openja, Moses
   Laberge, Gabriel
   Khomh, Foutse
TI Detection and evaluation of bias-inducing features in machine learning
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Machine learning; Bias; Fairness; Sensitive features
ID DISCRIMINATION
AB The cause-to-effect analysis can help us decompose all the likely causes of a problem, such as an undesirable business situation or unintended harm to the individual(s). This implies that we can identify how the problems are inherited, rank the causes to help prioritize fixes, simplify a complex problem and visualize them. In the context of machine learning (ML), one can use cause-to-effect analysis to understand the reason for the biased behavior of the system. For example, we can examine the root causes of biases by checking each feature for a potential cause of bias in the model. To approach this, one can apply small changes to a given feature or a pair of features in the data, following some guidelines and observing how it impacts the decision made by the model (i.e., model prediction). Therefore, we can use cause-to-effect analysis to identify the potential bias-inducing features, even when these features are originally are unknown. This is important since most current methods require a pre-identification of sensitive features for bias assessment and can actually miss other relevant bias-inducing features, which is why systematic identification of such features is necessary. Moreover, it often occurs that to achieve an equitable outcome, one has to take into account sensitive features in the model decision. Therefore, it should be up to the domain experts to decide based on their knowledge of the context of a decision whether bias induced by specific features is acceptable or not. In this study, we propose an approach for systematically identifying all bias-inducing features of a model to help support the decision-making of domain experts. Our technique is based on the idea of swapping the values of the features and computing the divergences in the distribution of the model prediction using different distance functions. We evaluated our technique using four well-known datasets to showcase how our contribution can help spearhead the standard procedure when developing, testing, maintaining, and deploying fair/equitable machine learning systems.
C1 [Openja, Moses; Laberge, Gabriel; Khomh, Foutse] Polytech Montreal, Montreal, PQ, Canada.
C3 Universite de Montreal; Polytechnique Montreal
RP Openja, M (corresponding author), Polytech Montreal, Montreal, PQ, Canada.
EM openja.moses@polymtl.ca; gabriel.laberg@polymtl.ca;
   foutse.khomh@polymtl.ca
RI Openja, Moses/HDN-9364-2022
OI Openja, Moses/0000-0002-4115-3834
FU Fonds de Recherche du Quebec (FRQ); Natural Sciences and Engineering
   Research Council of Canada (NSERC); Canadian Institute for Advanced
   Research (CIFAR); Huawei Canada
FX This work is funded by the following organizations and companies: Fonds
   de Recherche du Quebec (FRQ), Natural Sciences and Engineering Research
   Council of Canada (NSERC), Canadian Institute for Advanced Research
   (CIFAR) and Huawei Canada. However, the findings and opinions expressed
   in this paper are those of the authors and do not necessarily represent
   or reflect those organizations/companies.
CR Agarwal A, 2018, 35 INT C MACHINE LEA, V80
   Aggarwal A, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P625, DOI 10.1145/3338906.3338937
   Aha D., 1988, University of California, V3, P3
   Alelyani S, 2021, APPL SCI-BASEL, V11, DOI 10.3390/app11146271
   Arcidiacono P, 2018, Professor Peter Arcidiacono provides expert analysis for nonprofit's lawsuit against harvard
   Arcidiacono P, 2022, J LABOR ECON, V40, P133, DOI 10.1086/713744
   Arcidiacono Peter S., 2018, Expert report of Peter S. Arcidiacono students for fair admissions
   Arrow K, 1971, Working Papers, V403
   Barbosa NM, 2019, CHI 2019: PROCEEDINGS OF THE 2019 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, DOI 10.1145/3290605.3300773
   Barocas S., 2017, Nips tutorial, V1
   Berzuini C., 2012, CAUSALITY STAT PERSP, DOI [10.1002/9781119945710, DOI 10.1002/9781119945710]
   Bhattacharya A., 2022, APPL MACHINE LEARNIN
   Blank R., 2004, Measuring Racial Discrimination
   Buolamwini Joy, 2018, C FAIRN ACC TRANSP P, P77
   Calders T, 2010, DATA MIN KNOWL DISC, V21, P277, DOI 10.1007/s10618-010-0190-x
   Chakraborty J, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P429, DOI 10.1145/3468264.3468537
   Chakraborty J, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P654, DOI 10.1145/3368089.3409697
   Chouldechova A, 2017, BIG DATA-US, V5, P153, DOI 10.1089/big.2016.0047
   Corbett-Davies S, 2018, Arxiv, DOI [arXiv:1808.00023, 10.48550/arXiv.1808.00023]
   Corbett-Davies S, 2017, KDD'17: PROCEEDINGS OF THE 23RD ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P797, DOI 10.1145/3097983.3098095
   Custers B, 1866, Stud Appl Philos Epistemology Rational Ethics, V3
   De Capitani L, 2011, STAT PROBABIL LETT, V81, P937, DOI 10.1016/j.spl.2011.04.001
   DEKLEER J, 1986, ARTIF INTELL, V29, P33, DOI 10.1016/0004-3702(86)90090-1
   DETRANO R, 1989, AM J CARDIOL, V64, P304, DOI 10.1016/0002-9149(89)90524-9
   Fisher A, 2019, J MACH LEARN RES, V20
   Freedman DA, 2005, Identif Infer Econ Model, P56
   Frye C., 2020, Advances in Neural Information Processing Systems, V33, P1229, DOI 10.5555/3495724.3495828
   Fuglede B, 2004, 2004 IEEE INTERNATIONAL SYMPOSIUM ON INFORMATION THEORY, PROCEEDINGS, P31
   Goldstein A, 2015, J COMPUT GRAPH STAT, V24, P44, DOI 10.1080/10618600.2014.907095
   Hajian S., 2011, 2011 IEEE SSCI Symposium on Computational Intelligence In Cyber Security (CICS 2011), P47, DOI 10.1109/CICYBS.2011.5949405
   Hajian S, 2013, IEEE T KNOWL DATA EN, V25, P1445, DOI 10.1109/TKDE.2012.72
   Hardt M, 2016, ADV NEUR IN, V29
   Hitchcock C., 2012, Stanford Encyclopedia of Philosophy, VWinter 2012
   HOLLAND PW, 1986, J AM STAT ASSOC, V81, P945, DOI 10.2307/2289064
   Holland PW., 2003, ETS Research Report Series, V2003, pi, DOI DOI 10.1002/J.2333-8504.2003.TB01895.X
   Janosi Andras, 1988, UCI Machine Learning Repository
   Johnson B, 2020, PROC INT CONF SOFTW, P87, DOI 10.1145/3377811.3380377
   Kalousis A, 2007, KNOWL INF SYST, V12, P95, DOI 10.1007/s10115-006-0040-8
   Kamiran F, 2012, IEEE DATA MINING, P924, DOI 10.1109/ICDM.2012.45
   Kamiran F, 2012, KNOWL INF SYST, V33, P1, DOI 10.1007/s10115-011-0463-8
   Kuczmarski J, 2018, Google Blog, V6
   Lang K, 2020, J ECON PERSPECT, V34, P68, DOI 10.1257/jep.34.2.68
   Li YH, 2022, PROC INT CONF SOFTW, P2215, DOI 10.1145/3510003.3510091
   Liu YB, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P232, DOI 10.1109/SANER.2018.8330212
   Loohuis LO, 2014, PLOS ONE, V9, DOI 10.1371/journal.pone.0108358
   Lundberg SM, 2017, ADV NEUR IN, V30
   Luong Binh Thanh, 2011, Proceedings of the 17th ACM SIGKDD international conference on Knowledge discovery and data mining, ACM, P502
   MacKinnon DP, 2007, ANNU REV PSYCHOL, V58, P593, DOI 10.1146/annurev.psych.58.110405.085542
   Majidi F, 2022, PROC IEEE INT CONF S, P59, DOI 10.1109/ICSME55016.2022.00014
   Majumder S, 2022, Arxiv, DOI arXiv:2110.13029
   Mancuhan K, 2014, ARTIF INTELL LAW, V22, P211, DOI 10.1007/s10506-014-9156-4
   Moro S, 2014, DECIS SUPPORT SYST, V62, P22, DOI 10.1016/j.dss.2014.03.001
   Openja Moses, 2022, EASE 2022: The International Conference on Evaluation and Assessment in Software Engineering 2022, P190, DOI 10.1145/3530019.3530039
   Openja M, 2022, PROC IEEE INT CONF S, P13, DOI 10.1109/ICSME55016.2022.00010
   Pearl J., 2001, Proceedings of the Seventeenth Conference on Uncertainty in Artificial Intelligence, P411, DOI DOI 10.5555/2074022.2074073
   Pearl J etal, 2000, Cambridge UniversityPress, V19
   Peng KW, 2022, Arxiv, DOI arXiv:2110.01109
   Perera A, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10116-7
   PHELPS ES, 1972, AM ECON REV, V62, P659
   Pleiss G, 2017, ADV NEUR IN, V30
   Quinn T, 2018, TLS-TIMES LIT SUPPL, P31
   Ribeiro MT, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1135, DOI 10.1145/2939672.2939778
   Richiardi L, 2013, INT J EPIDEMIOL, V42, P1511, DOI 10.1093/ije/dyt127
   ROBINS JM, 1992, EPIDEMIOLOGY, V3, P143, DOI 10.1097/00001648-199203000-00013
   Romano J, 2006, ANN M SO ASS I RES C, P1
   Romei A, 2014, KNOWL ENG REV, V29, P582, DOI 10.1017/S0269888913000039
   RUBIN DB, 1974, J EDUC PSYCHOL, V66, P688, DOI 10.1037/h0037350
   Ruggieri S, 2010, ACM T KNOWL DISCOV D, V4, DOI 10.1145/1754428.1754432
   Ruggieri S, 2010, ARTIF INTELL LAW, V18, P1, DOI 10.1007/s10506-010-9089-5
   Shin D, 2019, COMPUT HUM BEHAV, V98, P277, DOI 10.1016/j.chb.2019.04.019
   Simon H.A., 1977, Models of Discovery, V54, P53
   Sunstein CR., 2018, Legal Reasoning and Political Conflict
   Suppes Patrick., 1970, THEORY PROBABILISTIC
   Tofallis Chris, 2014, INFORMS Transactions on Education, V14, P109, DOI 10.1287/ited.2013.0124
   Tolosi L, 2011, BIOINFORMATICS, V27, P1986, DOI 10.1093/bioinformatics/btr300
   Wachter S., 2017, Harvard Journal of Law and Technology, V31, P841, DOI DOI 10.2139/SSRN.3063289
   Willenborg L, 2012, Elements of Statistical Disclosure Control, V155
   Yapo A, 2018, PROCEEDINGS OF THE 51ST ANNUAL HAWAII INTERNATIONAL CONFERENCE ON SYSTEM SCIENCES (HICSS), P5365
   Zhang PX, 2020, PROC INT CONF SOFTW, P949, DOI 10.1145/3377811.3380331
NR 79
TC 0
Z9 0
U1 0
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2024
VL 29
IS 1
AR 22
DI 10.1007/s10664-023-10409-5
PG 71
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CG4D2
UT WOS:001124077200001
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Alami, A
   Zahedi, M
   Krancher, O
AF Alami, Adam
   Zahedi, Mansooreh
   Krancher, Oliver
TI The role of psychological safety in promoting software quality in agile
   teams
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software quality; Psychological safety; Agile methods; Mixed-methods;
   Human and social aspects of software engineering
ID MEDIATING ROLE; WORK; KNOWLEDGE; INVOLVEMENT; PERFORMANCE; IMPROVEMENT;
   LEADERSHIP; INNOVATION; RESPONSES; BEHAVIOR
AB Psychological safety continues to pique the interest of scholars in a variety of disciplines of study. Recent research indicates that psychological safety fosters knowledge sharing and norm clarity and complements agile values. Although software quality remains a concern in the software industry, academics have yet to investigate whether and how psychologically safe teams provide superior results. In this study, we explore how psychological safety influences agile teams' quality-related behaviors aimed at enhancing software quality. To widen the empirical coverage and evaluate the results, we chose a two-phase mixed-methods research design with an exploratory qualitative phase (20 interviews) followed by a quantitative phase (survey study, N = 423). Our findings show that, when psychological safety is established in agile software teams, it induces enablers of a social nature that advance the teams' ability to pursue software quality. For example, admitting mistakes and taking initiatives equally help teams learn and invest their learning in their future decisions related to software quality. Past mistakes become points of reference for avoiding them in the future. Individuals become more willing to take initiatives aimed at enhancing quality practices and mitigating software quality issues. We contribute to our endeavor to understand the circumstances that promote software quality. Psychological safety requires organizations, their management, agile teams, and individuals to maintain and propagate safety principles. Our results also suggest that technological tools and procedures can be utilized alongside social strategies to promote software quality.
C1 [Alami, Adam] Aalborg Univ, Dept Comp Sci, Selma Lagerlofs Vej 300, DK-9220 Aalborg, Denmark.
   [Zahedi, Mansooreh] Univ Melbourne, Grattan St, Melbourne, Vic 3010, Australia.
   [Krancher, Oliver] IT Univ Copenhagen, Rued Langgaards Vej 7, DK-2300 Copenhagen, Denmark.
C3 Aalborg University; University of Melbourne; IT University Copenhagen
RP Alami, A (corresponding author), Aalborg Univ, Dept Comp Sci, Selma Lagerlofs Vej 300, DK-9220 Aalborg, Denmark.
EM adal@cs.aau.dk; mansooreh.zahedi@unimelb.edu.au; olik@itu.dk
FU University of Aalborg; Computer Science department at Aalborg University
FX We would like to thank our interviewees and the survey participants for
   their time and effort in making this study possible. This work was
   funded by the first author's tenure-track position funding available for
   research and provided by the Computer Science department at Aalborg
   University.DAS:We made this study's data and other artifacts available.
   For Phase I, we shared the full and detailed interview guide, and
   anonymized interview transcripts. For Phase II, the survey design
   (including the pilot and the prescreening survey) and data, an SPSS file
   with the pilot data, an SPSS file with the final data, the factor
   analysis results (as an excel file), the SPSS output of the regression,
   and the SmartPLS output of the PLS analysis. This material is available
   here.
CR Alami A, 2023, INFORM SOFTWARE TECH, V162, DOI 10.1016/j.infsof.2023.107267
   Alami A, 2022, INFORM SOFTWARE TECH, V150, DOI 10.1016/j.infsof.2022.106959
   Alami A, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10208-4
   Ambler SW, 2008, About us
   [Anonymous], 2021, 15th State of Agile Report
   Antonakis J, 2010, LEADERSHIP QUART, V21, P1086, DOI 10.1016/j.leaqua.2010.10.010
   Baer M, 2003, J ORGAN BEHAV, V24, P45, DOI 10.1002/job.179
   BAGOZZI RP, 1991, ADMIN SCI QUART, V36, P421, DOI 10.2307/2393203
   Barki H, 2001, J MANAGE INFORM SYST, V17, P37, DOI 10.1080/07421222.2001.11045666
   Beck K., 2000, Extreme Programming Explained: Embrace Change
   Bienefeld N, 2014, EUR J WORK ORGAN PSY, V23, P930, DOI 10.1080/1359432X.2013.808398
   Boehm B, 2002, COMPUTER, V35, P64, DOI 10.1109/2.976920
   Brinsfield CT, 2013, J ORGAN BEHAV, V34, P671, DOI 10.1002/job.1829
   Brown SP, 1996, J APPL PSYCHOL, V81, P358, DOI 10.1037/0021-9010.81.4.358
   Bush T, 2012, SCH LEADERSH MANAG, V32, P21, DOI 10.1080/13632434.2011.642354
   Buvik M, 2022, 55 HAW INT C SYST SC
   Buvik MP, 2021, arXiv
   Carmeli A, 2007, LONG RANGE PLANN, V40, P30, DOI 10.1016/j.lrp.2006.12.002
   Carmeli A, 2010, CREATIVITY RES J, V22, P250, DOI 10.1080/10400419.2010.504654
   Chandler JJ, 2017, SOC PSYCHOL PERS SCI, V8, P500, DOI 10.1177/1948550617698203
   Chen C, 2014, INT J HUM RESOUR MAN, V25, P1112, DOI 10.1080/09585192.2013.816861
   Choudhury V, 2003, INFORM SYST RES, V14, P291, DOI 10.1287/isre.14.3.291.16563
   Clark TR, 2022, Agile doesn't work without psychological safety
   Cobb CG, 2015, The project manager's guide to mastering Agile: Principles and practices for an adaptive approach
   Cohen J., 1988, Statistical power analysis for the behavioral sciences
   Creswell J. W., 2017, DESIGNING CONDUCTING, DOI DOI 10.1111/J.1753-6405.2007.00096.X
   De Clercq D, 2007, J SMALL BUS MANAGE, V45, P467, DOI 10.1111/j.1540-627X.2007.00223.x
   DeVellis R.F., 2021, Scale development: theory and applications, DOI DOI 10.1016/J.ADDBEH.2014.02.013
   Diegmann P., 2017, ICIS
   Duhigg C., 2016, The New York Times, V26, P2016
   Dupuis M, 2019, BEHAV RES METHODS, V51, P2228, DOI 10.3758/s13428-018-1103-y
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Edmondson A, 1999, ADMIN SCI QUART, V44, P350, DOI 10.2307/2666999
   Edmondson A, Research on managing groups and teams: Groups in context
   Edmondson A.C., 2018, FEARLESS ORG CREATIN, DOI DOI 10.1002/LTL.20419
   Edmondson AC, 2014, ANNU REV ORGAN PSYCH, V1, P23, DOI 10.1146/annurev-orgpsych-031413-091305
   Faraj S, 2009, J APPL PSYCHOL, V94, P604, DOI 10.1037/a0014367
   Flyvbjerg B, 2006, QUAL INQ, V12, P219, DOI 10.1177/1077800405284363
   FORNELL C, 1981, J MARKETING RES, V18, P39, DOI 10.2307/3151312
   Frazier ML, 2017, PERS PSYCHOL, V70, P113, DOI 10.1111/peps.12183
   Frink DD, 2008, RES PERS H, V27, P177, DOI 10.1016/S0742-7301(08)27005-2
   FURNHAM A, 1986, PERS INDIV DIFFER, V7, P385, DOI 10.1016/0191-8869(86)90014-0
   Gopal A, 2010, INFORM SYST RES, V21, P960, DOI 10.1287/isre.1080.0205
   Guzzo RA, 1996, ANNU REV PSYCHOL, V47, P307, DOI 10.1146/annurev.psych.47.1.307
   Hackman R. J., 2002, LEADING TEAMS SETTIN
   Hair JF., 2021, Classroom companion: Business, DOI [10.1007/978-3-030-80519-7_4, DOI 10.1007/978-3-030-80519-7_4, 10.1007/978-3-030-80519-74, DOI 10.1007/978-3-030-80519-74]
   Hall AT, 2017, J ORGAN BEHAV, V38, P204, DOI 10.1002/job.2052
   Hennel P, 2021, PROJ MANAG J, V52, P11, DOI 10.1177/8756972820933057
   KAHN WA, 1990, ACAD MANAGE J, V33, P692, DOI 10.5465/256287
   Kakar AK, 2018, KNOWL PROCESS MANAG, V25, P258, DOI 10.1002/kpm.1584
   Kim S, 2020, FRONT PSYCHOL, V11, DOI 10.3389/fpsyg.2020.01581
   Kirsch LJ, 2004, INFORM SYST RES, V15, P374, DOI 10.1287/isre.1040.0036
   Kitchenham B, 1996, IEEE SOFTWARE, V13, P12, DOI 10.1109/52.476281
   Krasner H, 2018, COST POOR QUALITY SO
   Lee G, 2010, MIS QUART, V34, P87
   Lenberg P, 2018, 2018 IEEE/ACM 11TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P79, DOI 10.1145/3195836.3195847
   Leroy H, 2012, J APPL PSYCHOL, V97, P1273, DOI 10.1037/a0030076
   Liang J, 2012, ACAD MANAGE J, V55, P71, DOI 10.5465/amj.2010.0176
   Lovett M, 2018, APPL PSYCHOL-INT REV, V67, P339, DOI 10.1111/apps.12124
   MADDEN TJ, 1992, PERS SOC PSYCHOL B, V18, P3, DOI 10.1177/0146167292181001
   Madjar N, 2009, HUM PERFORM, V22, P128, DOI 10.1080/08959280902743501
   Margerison C, 1984, Leader Organ Develop J
   Meade AW, 2012, PSYCHOL METHODS, V17, P437, DOI 10.1037/a0028085
   Miles M, 2014, Qualitative data analysis
   Moe NB, 2019, PROCEEDINGS OF THE 52ND ANNUAL HAWAII INTERNATIONAL CONFERENCE ON SYSTEM SCIENCES, P6997
   Mu SH, 2003, J HIGH EDUC, V74, P689, DOI 10.1353/jhe.2003.0040
   Mundra S, 2018, Enterprise agility: Being agile in a changing world
   Nembhard IM, 2006, J ORGAN BEHAV, V27, P941, DOI 10.1002/job.413
   Newman A, 2017, HUM RESOUR MANAGE R, V27, P521, DOI 10.1016/j.hrmr.2017.01.001
   Oppenheimer DM, 2009, J EXP SOC PSYCHOL, V45, P867, DOI 10.1016/j.jesp.2009.03.009
   Palan S, 2018, J BEHAV EXP FINANC, V17, P22, DOI 10.1016/j.jbef.2017.12.004
   Patton M. Q., 1990, QUALITATIVE EVALUATI, DOI DOI 10.1002/NUR.4770140111
   Patton Q., 2005, Qualitative Research and Evaluation Methods, V3d
   Peltokorpi V, 2004, PERS REV, V33, P446, DOI 10.1108/00483480410539515
   Pinsonneault A., 1993, Journal of Management Information Systems, V10, P75
   Rodríguez P, 2012, INT SYMP EMP SOFTWAR, P139, DOI 10.1145/2372251.2372275
   Ruiz-Ulloa B.C., 2004, Team Performance Management, V10, P145, DOI [10.1108/13527590410569869, DOI 10.1108/13527590410569869]
   Russo D, 2021, ACM COMPUT SURV, V54, DOI 10.1145/3447580
   Safdar Umar, 2017, Journal of High Technology Management Research, V28, P79, DOI 10.1016/j.hitech.2017.04.006
   Sanner B, 2013, ACAD MANAGEMENT P, V2013, P10510
   Santana Beatriz Silva De, 2023, SBES '23: Proceedings of the XXXVII Brazilian Symposium on Software Engineering, P503, DOI 10.1145/3613372.3613411
   Schein E.H., 1965, PERSONAL ORG CHANGE
   Siemsen E, 2009, M&SOM-MANUF SERV OP, V11, P429, DOI 10.1287/msom.1080.0233
   Straub D., 2004, Communications of the Association for Information Systems, V13, P380, DOI [10.17705/1CAIS.01324, DOI 10.17705/1CAIS.01324]
   Stray V, 2018, 19TH INTERNATIONAL CONFERENCE ON AGILE SOFTWARE DEVELOPMENT (XP '18), DOI 10.1145/3234152.3234182
   Stripe, 2018, The developer coefficient: Software engineering efficiency and its $3 trillion impact on global gdp. technical report
   Thorgren S, 2019, RES TECHNOL MANAGE, V62, P31, DOI 10.1080/08956308.2019.1563436
   Tucker AL, 2007, M&SOM-MANUF SERV OP, V9, P492, DOI 10.1287/msom.1060.0156
   Tynan R, 2005, J APPL SOC PSYCHOL, V35, P223, DOI 10.1111/j.1559-1816.2005.tb02119.x
   Van Dyne L, 2003, J MANAGE STUD, V40, P1359, DOI 10.1111/1467-6486.00384
   Vijayasarathy L., 2008, Journal of Information Technology Management, V19, P1
   West MA, 2002, APPL PSYCHOL-INT REV, V51, P355, DOI 10.1111/1464-0597.00951
   Wiener M, 2016, MIS QUART, V40, P741, DOI 10.25300/MISQ/2016/40.3.11
   Xu Y, 2010, J EDUC BUS, V85, P223, DOI 10.1080/08832320903449469
   Yilmaz N, 2022, J SOFTW-EVOL PROC, V34, DOI 10.1002/smr.2458
   Zhang YX, 2010, INT J INFORM MANAGE, V30, P425, DOI 10.1016/j.ijinfomgt.2010.02.003
NR 96
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2024
VL 29
IS 5
AR 119
DI 10.1007/s10664-024-10512-1
PG 50
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZO3N6
UT WOS:001276200900003
DA 2024-08-05
ER

PT J
AU Rani, P
   Petrulio, F
   Bacchelli, A
AF Rani, Pooja
   Petrulio, Fernando
   Bacchelli, Alberto
TI On Refining the SZZ Algorithm with Bug Discussion Data
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software quality; Pull request; Empirical research; Taxonomy; SZZ
   algorithm; Bug-introducing commits; Mozilla
ID PREDICTION MODELS; IMPACT
AB Context Researchers testing hypotheses related to factors leading to low-quality software often rely on historical data, specifically on details regarding when defects were introduced into a codebase of interest. The prevailing techniques to determine the introduction of defects revolve around variants of the SZZ algorithm. This algorithm leverages information on the lines modified during a bug-fixing commit and finds when these lines were last modified, thereby identifying bug-introducing commits. Objectives Despite several improvements and variants, SZZ struggles with accuracy, especially in cases of unrelated modifications or that touch files not involved in the introduction of the bug in the version control systems (aka tangled commit and ghost commits). Methods Our research investigates whether and how incorporating content retrieved from bug discussions can address these issues by identifying the related and external files and thus improve the efficacy of the SZZ algorithm. Results To conduct our investigation, we take advantage of the links manually inserted by Mozilla developers in bug reports to signal which commits inserted bugs. Thus, we prepared the dataset, RoTEB, comprised of 12,472 bug reports. We first manually inspect a sample of 369 bug reports related to these bug-fixing or bug-introducing commits and investigate whether the files mentioned in these reports could be useful for SZZ. After we found evidence that the mentioned files are relevant, we augment SZZ with this information, using different strategies, and evaluate the resulting approach against multiple SZZ variations. Conclusion We define a taxonomy outlining the rationale behind developers' references to diverse files in their discussions. We observe that bug discussions often mention files relevant to enhancing the SZZ algorithm's efficacy. Then, we verify that integrating these file references augments the precision of SZZ in pinpointing bug-introducing commits. Yet, it does not markedly influence recall. These results deepen our comprehension of the usefulness of bug discussions for SZZ. Future work can leverage our dataset and explore other techniques to further address the problem of tangled commits and ghost commits.
C1 [Rani, Pooja; Petrulio, Fernando; Bacchelli, Alberto] Univ Zurich, Dept Informat, Zurich, Switzerland.
C3 University of Zurich
RP Rani, P (corresponding author), Univ Zurich, Dept Informat, Zurich, Switzerland.
EM rani@ifi.uzh.ch; fe.petrulio@gmail.com; bacchelli@ifi.uzh.ch
FU Schweizerischer Nationalfonds zur Frderung der Wissenschaftlichen
   Forschung [200021_197227]; Swiss National Science Foundation for the SNF
   Project
FX P. Rani and A. Bacchelli acknowledge the support of the Swiss National
   Science Foundation for the SNF Project 200021_197227. We also appreciate
   the feedback from Pavlina Goncalves.DAS:The dataset prepared and
   analyzed in the study and the resultant software (a version of SZZ, and
   code used to analyze the dataset) are available as a part of our
   replication package at the following link Anonymous (2023):
   https://doi.org/10.5281/zenodo.11484723
CR [Anonymous], 2023, Replication package for 'On refining the szz algorithm with bug discussion data', DOI [10.5281/zenodo.11484723, DOI 10.5281/ZENODO.11484723]
   Bao LF, 2022, PROC INT CONF SOFTW, P2352, DOI 10.1145/3510003.3510113
   Bird C, 2011, P 19 ACM SIGSOFT S 1, P4, DOI DOI 10.1145/2025113.2025119
   Bird C, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P1, DOI 10.1109/MSR.2009.5069475
   Bludau P, 2022, EUR CON SFTWR MTNCE, P1, DOI 10.1109/SANER53432.2022.00012
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI 10.1191/1478088706qp063oa
   Neto EC, 2019, INT SYMP EMP SOFTWAR, P94
   Neto EC, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P380, DOI 10.1109/SANER.2018.8330225
   Castelluccio Marco, 2021, Zenodo, DOI 10.5281/ZENODO.4911346
   Chen BY, 2019, EMPIR SOFTW ENG, V24, P2285, DOI 10.1007/s10664-019-09690-0
   Coleman G, 2007, INFORM SOFTWARE TECH, V49, P654, DOI 10.1016/j.infsof.2007.02.011
   Conover W. J., 1999, PRACTICAL NONPARAMET
   da Costa DA, 2017, IEEE T SOFTWARE ENG, V43, P641, DOI 10.1109/TSE.2016.2616306
   Davies S, 2014, J SOFTW-EVOL PROC, V26, P107, DOI 10.1002/smr.1619
   Fan YR, 2021, IEEE T SOFTWARE ENG, V47, P1559, DOI 10.1109/TSE.2019.2929761
   Gousios G, 2016, PROC INT CONF SOFTW, P285, DOI 10.1145/2884781.2884826
   Herbold S, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10083-5
   Herbold S, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10092-4
   Herzig K, 2016, EMPIR SOFTW ENG, V21, P303, DOI 10.1007/s10664-015-9376-6
   Imtiaz Nasif, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P245, DOI 10.1109/MSR.2019.00049
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kawrykow D, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P351, DOI 10.1145/1985793.1985842
   Kim S, 2006, IEEE INT CONF AUTOM, P81
   Kochhar PS, 2014, P 29 ACM IEEE INT C, P803, DOI DOI 10.1145/2642937.2642997
   Koru AG, 2005, IEEE SOFTWARE, V22, P23, DOI 10.1109/MS.2005.149
   Krishna R, 2015, The promise repository of empirical software engineering data
   Lenarduzzi V, 2020, INT C PROGRAM COMPRE, P446, DOI 10.1145/3387904.3389295
   liwerski J., 2005, ACM sigsoft software engineering notes, V30, P1, DOI [10.1145/1082983.1083147, DOI 10.1145/1083142.1083147]
   Mills C, 2020, EMPIR SOFTW ENG, V25, P3086, DOI 10.1007/s10664-020-09823-w
   Navarro G, 2001, ACM COMPUT SURV, V33, P31, DOI 10.1145/375360.375365
   Nguyen VH, 2016, EMPIR SOFTW ENG, V21, P2268, DOI 10.1007/s10664-015-9408-2
   Petrulio F, 2022, Arxiv, DOI arXiv:2209.03311
   Ramsauer R, 2019, PROC INT CONF SOFTW, P807, DOI 10.1109/ICSE.2019.00088
   Rani P, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09981-5
   Ray B, 2016, PROC INT CONF SOFTW, P428, DOI 10.1145/2884781.2884848
   Rezk C, 2021, IEEE Trans Softw Eng
   Rodríguez-Pérez G, 2022, IEEE T SOFTWARE ENG, V48, P1400, DOI 10.1109/TSE.2020.3021380
   Rodríguez-Pérez G, 2020, EMPIR SOFTW ENG, V25, P1294, DOI 10.1007/s10664-019-09781-y
   Rodríguez-Pérez G, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3267436
   Rosa G, 2021, PROC INT CONF SOFTW, P436, DOI 10.1109/ICSE43902.2021.00049
   Sanderson M, 2010, NAT LANG ENG, V16, P100, DOI 10.1017/S1351324909005129
   Spadini D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P908, DOI 10.1145/3236024.3264598
   Triola MF, 2006, Elementary statistics
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Wan ZY, 2020, IEEE T SOFTWARE ENG, V46, P1241, DOI 10.1109/TSE.2018.2877678
   Wang Q, 2015, P 2015 INT S SOFTW T, P1
   Wang XY, 2012, IEEE INT CONF AUTOM, P170, DOI 10.1145/2351676.2351701
   Wehaibi S, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P179, DOI 10.1109/SANER.2016.72
   White J, 2023, Arxiv, DOI arXiv:2303.07839
   Wu R, 2011, SIGSOFT FSE, P15, DOI DOI 10.1145/2025113.2025120
   Young JG, 2021, IEEE WORK CONF MIN S, P242, DOI 10.1109/MSR52588.2021.00036
NR 51
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2024
VL 29
IS 5
AR 115
DI 10.1007/s10664-024-10511-2
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZO5S0
UT WOS:001276258100001
PM 39069997
OA hybrid
DA 2024-08-05
ER

PT J
AU Pant, A
   Hoda, R
   Tantithamthavorn, C
   Turhan, B
AF Pant, Aastha
   Hoda, Rashina
   Tantithamthavorn, Chakkrit
   Turhan, Burak
TI Ethics in AI through the practitioner's view: a grounded theory
   literature review
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Artificial intelligence; Ethics; AI ethics; Grounded theory literature
   review; Practitioners; Software engineering
ID ARTIFICIAL-INTELLIGENCE; CODES
AB The term ethics is widely used, explored, and debated in the context of developing Artificial Intelligence (AI) based software systems. In recent years, numerous incidents have raised the profile of ethical issues in AI development and led to public concerns about the proliferation of AI technology in our everyday lives. But what do we know about the views and experiences of those who develop these systems - the AI practitioners? We conducted a grounded theory literature review (GTLR) of 38 primary empirical studies that included AI practitioners' views on ethics in AI and analysed them to derive five categories: practitioner awareness, perception, need, challenge, and approach. These are underpinned by multiple codes and concepts that we explain with evidence from the included studies. We present a taxonomy of ethics in AI from practitioners' viewpoints to assist AI practitioners in identifying and understanding the different aspects of AI ethics. The taxonomy provides a landscape view of the key aspects that concern AI practitioners when it comes to ethics in AI. We also share an agenda for future research studies and recommendations for practitioners, managers, and organisations to help in their efforts to better consider and implement ethics in AI.
C1 [Pant, Aastha; Hoda, Rashina; Tantithamthavorn, Chakkrit] Monash Univ, Dept Software Syst & Cybersecur, Melbourne, Vic, Australia.
   [Turhan, Burak] Univ Oulu, Fac Informat Technol & Elect Engn, Oulu, Finland.
C3 Monash University; University of Oulu
RP Pant, A (corresponding author), Monash Univ, Dept Software Syst & Cybersecur, Melbourne, Vic, Australia.
EM aastha.pant@monash.edu; rashina.hoda@monash.edu; chakkrit@monash.edu;
   burak.turhan@oulu.fi
OI PANT, AASTHA/0000-0002-6183-0492
FU Monash University; Faculty of IT Ph.D. scholarship from Monash
   University [DE200100941]; Australian Research Council's Discovery Early
   Career Researcher Award (DECRA)
FX Aastha Pant is supported by the Faculty of IT Ph.D. scholarship from
   Monash University. C. Tantithamthavorn is partially supported by the
   Australian Research Council's Discovery Early Career Researcher Award
   (DECRA) funding scheme (DE200100941). Also, the authors would like to
   thank Prof. John Grundy for his constructive feedback on the paper.
CR AIHLEG, 2019, DELIVERABLE ETH GUID, DOI DOI 10.2759/346720
   Al-Kaswan A, 2023, 2023 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON NATURAL LANGUAGE-BASED SOFTWARE ENGINEERING, NLBSE, P9, DOI 10.1109/NLBSE59153.2023.00008
   Alfrink K, 2023, PROCEEDINGS OF THE 2023 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, CHI 2023, DOI 10.1145/3544548.3580984
   Allen GN, 2011, MIS QUART, V35, P533
   Anderson M., 2011, Machine Ethics
   [Anonymous], 2020, How Dutch activists got an invasive fraud detection algorithm banned
   [Anonymous], 2021, 193 countries adopt first ever global agreement on the ethics of artificial intelligence
   [Anonymous], 2023, Australia's AI ethics principles
   [Anonymous], 2019, AI ethics guidelines global inventory
   Aydemir FB, 2018, 2018 IEEE/ACM INTERNATIONAL WORKSHOP ON SOFTWARE FAIRNESS (FAIRWARE 2018), P15, DOI [10.23919/FAIRWARE.2018.8452915, 10.1145/3194770.3194778]
   Ben Shneiderman, 2020, ACM T INTERACT INTEL, V10, DOI 10.1145/3419764
   Bostrom N., 2018, Artificial intelligence safety and security, P57
   Bryson J, 2017, COMPUTER, V50, P116, DOI 10.1109/MC.2017.154
   Buolamwini Joy, 2018, C FAIRN ACC TRANSP P, P77
   Castelnovo A, 2020, IEEE INT CONF BIG DA, P3652, DOI 10.1109/BigData50022.2020.9377894
   Dastin J., 2018, Insight-Amazon scraps secret AI recruiting tool that showed bias against women, DOI DOI 10.1017/CBO9781139025751
   Defense, 2020, DOD adopts 5 principles of artificial intelligence ethics
   Felzmann H, 2020, SCI ENG ETHICS, V26, P3333, DOI 10.1007/s11948-020-00276-4
   Fjeld Jessica., 2020, Principled Artificial Intelligence: Mapping Consensus in Ethical and Rights-Based Approaches to Principles for AI, DOI [DOI 10.2139/SSRN.3518482, 10.2139/ssrn.3518482]
   Fleischmann KR, 2017, J ASSOC INF SCI TECH, V68, P543, DOI 10.1002/asi.23697
   Fraga A, 2022, Emerging trends in systems engineering leadership: practical research from women leaders, P261
   Glaser B. G., 2009, Theoretical sensitivity: Advances in the methodology of grounded theory
   Gotterbarn D., 1991, National Forum: The Phi Beta Kappa Journal, P26
   Goulding C., 1998, Qualitative Marketing Research: An International Journal, V1, P50, DOI DOI 10.1108/13522759810197587
   Hagendorff T, 2020, MIND MACH, V30, P99, DOI 10.1007/s11023-020-09517-8
   Hall D, 2009, IEEE SOFTWARE, V26, P9, DOI 10.1109/MS.2009.106
   Harrington SJ, 1996, MIS QUART, V20, P257, DOI 10.2307/249656
   Hidellaarachchi D, 2022, IEEE T SOFTWARE ENG, V48, P2105, DOI 10.1109/TSE.2021.3051898
   Hoda R, 2022, IEEE T SOFTWARE ENG, V48, P3808, DOI 10.1109/TSE.2021.3106280
   Jameel T, 2020, 2020 3 INT C COMP MA, P1, DOI [10.1109/iCoMET48670.2020.9073911, DOI 10.1109/ICOMET48670.2020.9073911]
   Jobin A, 2019, NAT MACH INTELL, V1, P389, DOI 10.1038/s42256-019-0088-2
   Kazim E, 2021, PATTERNS, V2, DOI 10.1016/j.patter.2021.100314
   Kelley S, 2021, AI Principle Adoption & Implementation
   Kessing M, 2021, Fairness in AI: discussion of a unified approach to ensure responsible AI development
   Khan Arif Ali, 2022, EASE 2022: The International Conference on Evaluation and Assessment in Software Engineering 2022, P383, DOI 10.1145/3530019.3531329
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Lee PYK., 2023, Proc ACM Hum Comput Interact, V7, P1
   Leikas J., 2019, J OPEN INNOV TECHNOL, V5, P18, DOI DOI 10.3390/JOITMC5010018
   Li XM, 2015, ASLIB J INFORM MANAG, V67, P614, DOI 10.1108/AJIM-03-2015-0049
   Lincoln Y., 2000, Handbook of Qualitative Research, V2nd, P509
   Lu Qinghua, 2022, P 1 INT C AI ENG SOF, P101
   Madampe K, 2022, IEEE T SOFTWARE ENG, V48, P3737, DOI 10.1109/TSE.2021.3104732
   Mark R., 2019, The ORBIT Journal, V2, P1, DOI DOI 10.29297/ORBIT.V2I2.110
   Metcalf J, 2019, SOC RES, V86, P449
   Mittelstadt B, 2019, NAT MACH INTELL, V1, P501, DOI 10.1038/s42256-019-0114-4
   Möllmann NRJ, 2021, HEALTH INFORM J, V27, DOI 10.1177/14604582211052391
   Morley J, 2020, SCI ENG ETHICS, V26, P2141, DOI 10.1007/s11948-019-00165-5
   Mukhra R, 2019, SCI ENG ETHICS, V25, P285, DOI 10.1007/s11948-017-0004-2
   Nalini B, 2020, The hitchhiker's guide to AI ethics
   Obermeyer Z, 2016, NEW ENGL J MED, V375, P1216, DOI 10.1056/NEJMp1606181
   OECD AI Policy Observatory, 2019, OECD AI Principles Overview
   Payne D, 2006, COMMUN ACM, V49, P80
   Perera H, 2020, PROC INT CONF SOFTW, P409, DOI 10.1145/3377811.3380393
   Pierce MA, 1996, J BUS ETHICS, V15, P425, DOI 10.1007/BF00380363
   Rashid A, 2009, COMPUTER, V42, P34, DOI 10.1109/MC.2009.200
   Rothenberger L, 2019, ECIS
   Royakkers L, 2018, ETHICS INF TECHNOL, V20, P127, DOI 10.1007/s10676-018-9452-x
   Ryan M, 2021, J INF COMMUN ETHICS, V19, P61, DOI 10.1108/JICES-12-2019-0138
   Sanderson C, 2023, IEEE Transactions on Technology and Society
   Seah J, 2021, SMU Centre for AI & Data Governance Research Paper (7
   Siau K, 2020, J DATABASE MANAGE, V31, P74, DOI 10.4018/JDM.2020040105
   Smith MJ, 2020, CONT CLIN TRIAL COMM, V19, DOI 10.1016/j.conctc.2020.100604
   Strauss A. L., 1990, Basics of qualitative research
   Vainio-Pekka H, 2020, The role of explainable AI in the research field of AI ethics: systematic mapping study
   Vakkuri V, 2021, Arxiv, DOI [arXiv:2101.12701, 10.48550/arXiv.2101.12701, DOI 10.48550/ARXIV.2101.12701]
   Vakkuri V, 2020, EUROMICRO CONF PROC, P195, DOI 10.1109/SEAA51224.2020.00043
   Vakkuri V, 2020, IEEE SOFTWARE, V37, P50, DOI 10.1109/MS.2020.2985621
   Vanden Bergh J, 2010, Communications of the IBIMA, P1
   Varanasi RA, 2023, PROCEEDINGS OF THE 2023 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, CHI 2023, DOI 10.1145/3544548.3580903
   Veale M, 2018, PROCEEDINGS OF THE 2018 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2018), DOI 10.1145/3173574.3174014
   Wiese LSJ, 2023, 2023 IEEE INTERNATIONAL SYMPOSIUM ON ETHICS IN ENGINEERING, SCIENCE, AND TECHNOLOGY, ETHICS, DOI 10.1109/ETHICS57328.2023.10154947
   Wohlin C., 2014, P 18 INT C EV ASS SO, DOI DOI 10.1145/2601248.2601268
   Wolfswinkel JF, 2013, EUR J INFORM SYST, V22, P45, DOI 10.1057/ejis.2011.51
NR 73
TC 1
Z9 1
U1 5
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAY
PY 2024
VL 29
IS 3
AR 67
DI 10.1007/s10664-024-10465-5
PG 48
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SH1A2
UT WOS:001233460700001
OA hybrid
DA 2024-08-05
ER

PT J
AU da Silva, AJA
   Vieira, RG
   Mesquita, DPP
   Gomes, JPP
   Rocha, LS
AF da Silva, Antonio Jose A.
   Vieira, Renan G.
   Mesquita, Diego P. P.
   Gomes, Joao Paulo P.
   Rocha, Lincoln S.
TI Towards automatic labeling of exception handling bugs: A case study of
   10 years bug-fixing in Apache Hadoop
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Exception handling bug; Automatic bug labeling; Machine learning; and
   Natural language processing
ID SOFTWARE; ISSUES; JAVA
AB ContextException handling (EH) bugs stem from incorrect usage of exception handling mechanisms (EHMs) and often incur severe consequences (e.g., system downtime, data loss, and security risk). Tracking EH bugs is particularly relevant for contemporary systems (e.g., cloud- and AI-based systems), in which the software's sophisticated logic is an additional threat to the correct use of the EHM. On top of that, bug reporters seldom can tag EH bugs - since it may require an encompassing knowledge of the software's EH strategy. Surprisingly, to the best of our knowledge, there is no automated procedure to identify EH bugs from report descriptions.ObjectiveFirst, we aim to evaluate the extent to which Natural Language Processing (NLP) and Machine Learning (ML) can be used to reliably label EH bugs using the text fields from bug reports (e.g., summary, description, and comments). Second, we aim to provide a reliably labeled dataset that the community can use in future endeavors. Overall, we expect our work to raise the community's awareness regarding the importance of EH bugs.MethodWe manually analyzed 4,516 bug reports from the four main components of Apache's Hadoop project, out of which we labeled approximate to 20%\documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document}$$\approx 20\%$$\end{document} (943) as EH bugs. We also labeled 2,584 non-EH bugs analyzing their bug-fixing code and creating a dataset composed of 7,100 bug reports. Then, we used word embedding techniques (Bag-of-Words and TF-IDF) to summarize the textual fields of bug reports. Subsequently, we used these embeddings to fit five classes of ML methods and evaluate them on unseen data. We also evaluated a pre-trained transformer-based model using the complete textual fields. We have also evaluated whether considering only EH keywords is enough to achieve high predictive performance.ResultsOur results show that using a pre-trained DistilBERT with a linear layer trained with our proposed dataset can reasonably label EH bugs, achieving ROC-AUC scores of up to 0.88. The combination of NLP and ML traditional techniques achieved ROC-AUC scores of up to 0.74 and recall up to 0.56. As a sanity check, we also evaluate methods using embeddings extracted solely from keywords. Considering ROC-AUC as the primary concern, for the majority of ML methods tested, the analysis suggests that keywords alone are not sufficient to characterize reports of EH bugs, although this can change based on other metrics (such as recall and precision) or ML methods (e.g., Random Forest).ConclusionsTo the best of our knowledge, this is the first study addressing the problem of automatic labeling of EH bugs. Based on our results, we can conclude that the use of ML techniques, specially transformer-base models, sounds promising to automate the task of labeling EH bugs. Overall, we hope (i) that our work will contribute towards raising awareness around EH bugs; and (ii) that our (publicly available) dataset will serve as a benchmarking dataset, paving the way for follow-up works. Additionally, our findings can be used to build tools that help maintainers flesh out EH bugs during the triage process.
C1 [da Silva, Antonio Jose A.; Vieira, Renan G.; Gomes, Joao Paulo P.; Rocha, Lincoln S.] Univ Fed Ceara, Ave Humberto Monte,S-N Pici, BR-60440593 Fortaleza, Ceara, Brazil.
   [Mesquita, Diego P. P.] Getulio Vargas Fdn, 190 Botafogo, BR-22250900 Rio De Janeiro, RJ, Brazil.
C3 Universidade Federal do Ceara; Getulio Vargas Foundation
RP Vieira, RG (corresponding author), Univ Fed Ceara, Ave Humberto Monte,S-N Pici, BR-60440593 Fortaleza, Ceara, Brazil.
EM amanciosilva@great.ufc.br; renan@dc.ufc.br; diego.mesquita@fgv.br;
   jpaulo@dc.ufc.br; lincoln@dc.ufc.br
CR Asaduzzaman M, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P516, DOI [10.1145/2901739.2903500, 10.1109/MSR.2016.068]
   Aung TWW, 2022, J SYST SOFTWARE, V184, DOI 10.1016/j.jss.2021.111133
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   Barbosa EA, 2014, 2014 28TH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2014), P11, DOI 10.1109/SBES.2014.19
   Cacho N, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P584, DOI 10.1145/2568225.2568308
   Cacho N, 2014, PROC IEEE INT CONF S, P31, DOI 10.1109/ICSME.2014.25
   Catolino G, 2019, J SYST SOFTWARE, V152, P165, DOI 10.1016/j.jss.2019.03.002
   Chang BM, 2016, INFORM SOFTWARE TECH, V77, P1, DOI 10.1016/j.infsof.2016.05.003
   Chawla I, 2015, P 8 IND SOFTW ENG C, DOI DOI 10.1145/2723742.2723751
   Chawla I, 2014, INT CONF CONTEMP, P376, DOI 10.1109/IC3.2014.6897203
   Chen CT, 2009, J SYST SOFTWARE, V82, P333, DOI 10.1016/j.jss.2008.06.035
   Chen HC, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P339, DOI 10.1109/ASE.2019.00040
   Chen JJ, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P364, DOI 10.1109/ASE.2019.00042
   Coelho R, 2017, EMPIR SOFTW ENG, V22, P1264, DOI 10.1007/s10664-016-9443-7
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Dalton Francisco, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P170, DOI 10.1145/3383219.3383237
   de Padua GB, 2018, IEEE WORK CONF MIN S, P564, DOI 10.1145/3196398.3196435
   de Pádua GB, 2017, INT C PROGRAM COMPRE, P328, DOI 10.1109/ICPC.2017.1
   de Sousa Demora B. C., 2020, Journal of the Brazilian Computer Society, V26, DOI 10.1186/s13173-019-0095-5
   Ebert F, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P552, DOI 10.1109/SANER48275.2020.9054791
   Ebert F, 2015, J SYST SOFTWARE, V106, P82, DOI 10.1016/j.jss.2015.04.066
   Gomes LAF, 2019, INFORM SOFTWARE TECH, V115, P58, DOI 10.1016/j.infsof.2019.07.009
   Filho JLM, 2017, LECT NOTES COMPUT SC, V10475, P67, DOI 10.1007/978-3-319-65831-5_5
   Gallardo R., 2014, The Java tutorial: a short course on the basics, V6
   Garcia AF, 2001, J SYST SOFTWARE, V59, P197, DOI 10.1016/S0164-1212(01)00062-0
   Goffi A, 2016, P 25 INT S SOFTW TES, DOI [DOI 10.1145/2931037.2931061, 10.1145/2931037.2931061]
   GOODENOUGH JB, 1975, COMMUN ACM, V18, P683, DOI 10.1145/361227.361230
   Hu H, 2014, PROC INT SYMP SOFTW, P122, DOI 10.1109/ISSRE.2014.17
   Jones Karen Sparck, 1988, A Statistical Interpretation of Term Specificity and Its Application in Retrieval, P132
   Kechagia M., 2014, Proceedings of the 11th ACM Working Conference on Mining Software Repositories, P312
   Kienzle Jorg., 2008, WEH 08, P32
   KNUDSEN JL, 1987, IEEE SOFTWARE, V4, P40, DOI 10.1109/MS.1987.230705
   Koksal Omer, 2022, 2022 International Symposium on Multidisciplinary Studies and Innovative Technologies (ISMSIT), P635, DOI 10.1109/ISMSIT56059.2022.9932822
   Lee SR, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P926, DOI 10.1145/3106237.3117776
   Lima LP, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09983-3
   Marcilio D, 2021, IEEE WORK CONF MIN S, P207, DOI 10.1109/MSR52588.2021.00033
   Marinescu C., 2011, Proceedings of the 12th International Workshop on Principles of Software Evolution and the 7th Annual ERCIM Workshop on Software Evolution, IWPSE-EVOL'11, page, P56
   Marinescu C, 2014, INT SYMP SYMB NUMERI, P250, DOI 10.1109/SYNASC.2013.40
   Melo H, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P128, DOI [10.1109/SANER.2019.8668001, 10.1109/saner.2019.8668001]
   Miller R, 1997, LECT NOTES COMPUT SC, V1241, P85
   Pandey N, 2017, INNOV SYST SOFTW ENG, V13, P279, DOI 10.1007/s11334-017-0294-1
   Parnas D. L., 1976, 2nd International Conference on Software Engineering, P437
   Peters F, 2019, IEEE T SOFTWARE ENG, V45, P615, DOI 10.1109/TSE.2017.2787653
   Picus Oskar, 2022, AISTA 2022: Proceedings of the 2nd ACM International Workshop on AI and Software Testing/Analysis, P17, DOI 10.1145/3536168.3543301
   Robillard MP, 2003, ACM T SOFTW ENG METH, V12, P191, DOI 10.1145/941566.941569
   Sanh V, 2020, Arxiv, DOI [arXiv:1910.01108, 10.48550/arXiv.1910.01108]
   Sawadpong P., 2012, 2012 IEEE 14th International Symposium on High-Assurance Systems Engineering (HASE 2012), P90, DOI 10.1109/HASE.2012.24
   Sawadpong P, 2016, IEEE HI ASS SYS ENGR, P55, DOI 10.1109/HASE.2016.13
   Shah HB, 2010, IEEE T SOFTWARE ENG, V36, P150, DOI 10.1109/TSE.2010.7
   Shahrokni A, 2013, INFORM SOFTWARE TECH, V55, P1, DOI 10.1016/j.infsof.2012.06.002
   Sinha S, 2000, IEEE T SOFTWARE ENG, V26, P849, DOI 10.1109/32.877846
   Spadini D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P908, DOI 10.1145/3236024.3264598
   Tian Y, 2015, EMPIR SOFTW ENG, V20, P1354, DOI 10.1007/s10664-014-9331-y
   Uddin J, 2017, ARTIF INTELL REV, V47, P145, DOI 10.1007/s10462-016-9478-6
   Vieira R, 2019, 15TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING (PROMISE'19), P80, DOI 10.1145/3345629.3345639
   Vieira RG, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10213-7
   White T., 2015, Hadoop: the definitive guide, V4
   Wohlin C., 2012, Experimentation in Software Engineering, DOI [10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Xu BX, 2012, INT J DATA WAREHOUS, V8, P44, DOI 10.4018/jdwm.2012040103
   Zanaty FE, 2021, IEEE SOFTWARE, V38, P35, DOI 10.1109/MS.2020.3004060
   Zhang J, 2020, IEEE INT CONF AUTOM, P29, DOI 10.1145/3324884.3416568
   Zhang PY, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2652483
NR 62
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2024
VL 29
IS 4
AR 85
DI 10.1007/s10664-024-10494-0
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TT8P3
UT WOS:001243603500002
DA 2024-08-05
ER

PT J
AU Madugalla, A
   Kanij, T
   Hoda, R
   Hidellaarachchi, D
   Pant, A
   Ferdousi, S
   Grundy, J
AF Madugalla, Anuradha
   Kanij, Tanjila
   Hoda, Rashina
   Hidellaarachchi, Dulaji
   Pant, Aastha
   Ferdousi, Samia
   Grundy, John
TI Challenges, adaptations, and fringe benefits of conducting software
   engineering research with human participants during the COVID-19
   pandemic
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software engineering; COVID-19; Pandemic; Research
ID WORK; LOCKDOWN; IMPACT; VIEWS
AB The COVID-19 pandemic changed the way we live, work and the way we conduct research. With the restrictions of lockdowns and social distancing, various impacts were experienced by many software engineering researchers, especially whose studies depend on human participants. We conducted a mixed methods study to understand the extent of this impact. Through a detailed survey with 89 software engineering researchers working with human participants around the world and a further nine follow-up interviews, we identified the key challenges faced, the adaptations made, and the surprising fringe benefits of conducting research involving human participants during the pandemic. Our findings also revealed that in retrospect, many researchers did not wish to revert to the old ways of conducting human-orienfted research. Based on our analysis and insights, we share recommendations on how to conduct remote studies with human participants effectively in an increasingly hybrid world when face-to-face engagement is not possible or where remote participation is preferred.
C1 [Madugalla, Anuradha; Kanij, Tanjila; Hoda, Rashina; Hidellaarachchi, Dulaji; Pant, Aastha; Ferdousi, Samia; Grundy, John] Monash Univ, Dept Software Syst & Cybersecur, Melbourne, Australia.
C3 Monash University
RP Madugalla, A (corresponding author), Monash Univ, Dept Software Syst & Cybersecur, Melbourne, Australia.
EM anu.madugalla@monash.edu; tanjila.kanij@monash.edu;
   rashina.hoda@monash.edu; dulaji.hidellaarachchi@monash.edu;
   aastha.pant@monash.edu; samia.ferdousi@monash.edu;
   john.grundy@monash.edu
OI Madugalla, Anuradha/0000-0002-3813-8254
FU Australian Research Council
FX No Statement Available
CR Adom D., 2020, Research Journal in Advanced Social Sciences, V1, P1, DOI [DOI 10.1016/J.SOCNET.2005.10.001, 10.58256/rjass.v1i.107, DOI 10.58256/RJASS.V1I.107]
   Archibald MM, 2019, INT J QUAL METH, V18, DOI 10.1177/1609406919874596
   Bezerra Carla I. M., 2020, SBES '20: Proceedings of the 34th Brazilian Symposium on Software Engineering, P606, DOI 10.1145/3422392.3422417
   Bian SX, 2020, PLOS ONE, V15, DOI 10.1371/journal.pone.0238831
   Buchholz M, 2020, TECHNOL DISABIL, V32, P69, DOI 10.3233/TAD-190254
   Butler J, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2021), P362, DOI 10.1109/ICSE-SEIP52600.2021.00047
   Charalampous M, 2019, EUR J WORK ORGAN PSY, V28, P51, DOI 10.1080/1359432X.2018.1541886
   Chong SA, 2010, PUBLIC HEALTH ETH-UK, V3, P35, DOI 10.1093/phe/phq005
   Cooksey Krista E, 2022, Ethics Hum Res, V44, P23, DOI 10.1002/eahr.500148
   Neto PADS, 2022, IEEE T SOFTWARE ENG, V48, P3342, DOI 10.1109/TSE.2021.3088759
   Donnelly N, 2015, NEW TECH WORK EMPLOY, V30, P47, DOI 10.1111/ntwe.12040
   Gao J, 2021, NAT COMMUN, V12, DOI 10.1038/s41467-021-26428-z
   George G, 2020, J MANAGE STUD, V57, P1754, DOI 10.1111/joms.12634
   Group PLNN, 2020, Doing field studies remotely (video)
   Gruber M., 2021, FORUM QUALITATIVE SO, V22, P1, DOI DOI 10.17169/FQS-22.1
   Hall J, 2021, INT J QUAL METH, V20, DOI 10.1177/16094069211010087
   Heo S, 2022, HUM SOC SCI COMMUN, V9, DOI 10.1057/s41599-022-01466-0
   Herbsleb JD, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P188, DOI 10.1109/FOSE.2007.11
   Hoda R, 2022, IEEE T SOFTWARE ENG, V48, P3808, DOI 10.1109/TSE.2021.3106280
   Idnani D, 2021, INT J ENG PEDAGOG, V11, P49, DOI 10.3991/ijep.v11i1.15215
   Juárez-Ramírez R, 2021, 2021 9TH INTERNATIONAL CONFERENCE IN SOFTWARE ENGINEERING RESEARCH AND INNOVATION (CONISOFT 2021), P112, DOI 10.1109/CONISOFT52520.2021.00026
   Khoo EJ, 2020, ACTA PAEDIATR, V109, P1323, DOI 10.1111/apa.15307
   Kim NH, 2021, INT J DRUG POLICY, V97, DOI 10.1016/j.drugpo.2021.103344
   Leslie LM, 2012, ACAD MANAGE J, V55, P1407, DOI 10.5465/amj.2010.0651
   Luy C, 2021, S VIS LANG HUM CEN C, DOI 10.1109/VL/HCC51201.2021.9576203
   Marinho M, 2021, TECHNOL SOC, V67, DOI 10.1016/j.techsoc.2021.101799
   MarquesCorrea C, 2022, Interacting with Computer, piwac036
   Meskanen-Kundu L, 2021, Remote user study: a reflection on remote user research methods during the COVID-19 pandemic
   Miller C, 2021, PROC INT CONF SOFTW, P624, DOI 10.1109/ICSE43902.2021.00064
   Monteiro de Mendonca Walter Lucas, 2020, SBES '20: Proceedings of the 34th Brazilian Symposium on Software Engineering, P596, DOI 10.1145/3422392.3422446
   Mourad M, 2020, SEMIN PERINATOL, V44, DOI 10.1016/j.semperi.2020.151287
   Nolan A, 2021, COMM COM INF SC, V1442, P14, DOI 10.1007/978-3-030-85521-5_2
   Omary MB, 2020, J CLIN INVEST, V130, P2745, DOI 10.1172/JCI138646
   Rahman SA, 2021, INT J QUAL METH, V20, DOI 10.1177/16094069211016106
   Ralph P, 2020, EMPIR SOFTW ENG, V25, P4927, DOI 10.1007/s10664-020-09875-y
   Remote user research, 2023, 12 tips from experts
   Reñosa MDC, 2021, BMJ GLOB HEALTH, V6, DOI 10.1136/bmjgh-2020-004193
   Riccaboni M, 2022, PLOS ONE, V17, DOI 10.1371/journal.pone.0263001
   Riera R, 2021, JCO GLOB ONCOL, V7, P311, DOI 10.1200/GO.20.00639
   Rodeghero P, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2021), P41, DOI 10.1109/ICSE-SEIP52600.2021.00013
   Ruppel S, 2020, When your lab is the world but the world is closed down-social science research in times of COVID-19
   Sako M, 2021, COMMUN ACM, V64, P20, DOI 10.1145/3451223
   Santhosh L, 2021, ATS SCHOLAR, V2, P176, DOI 10.34197/ats-scholar.2020-0127PS
   Shah S, 2021, PROCEEDINGS 3, P599
   Singh JA, 2020, B WORLD HEALTH ORGAN, V98, P625, DOI 10.2471/BLT.20.257485
   Smite D, 2022, J SYST SOFTWARE, V186, DOI 10.1016/j.jss.2021.111197
   Tuttle KR, 2020, NAT REV NEPHROL, V16, P562, DOI 10.1038/s41581-020-00336-9
   van Nifterik W, 2021, INTERACT DES ARCHIT, P7
   Villarosa AR, 2021, SUSTAINABILITY-BASEL, V13, DOI 10.3390/su13063320
   Ward K, 2015, J ADV NURS, V71, P2775, DOI 10.1111/jan.12748
   Wilson B, 2021, NAT MED, V27, P369, DOI 10.1038/s41591-021-01271-3
   Woolston C, 2021, NATURE, V592, P806, DOI 10.1038/d41586-021-01075-y
NR 52
TC 0
Z9 0
U1 1
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2024
VL 29
IS 4
AR 86
DI 10.1007/s10664-024-10490-4
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TS8M3
UT WOS:001243339800001
OA hybrid
DA 2024-08-05
ER

PT J
AU Giordano, G
   Festa, G
   Catolino, G
   Palomba, F
   Ferrucci, F
   Gravino, C
AF Giordano, Giammaria
   Festa, Gerardo
   Catolino, Gemma
   Palomba, Fabio
   Ferrucci, Filomena
   Gravino, Carmine
TI On the adoption and effects of source code reuse on defect proneness and
   maintenance effort
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software reuse; Quality metrics; Software maintenance and evolution;
   Empirical software engineering
ID OBJECT-ORIENTED METRICS; OPEN SOURCE SOFTWARE; DESIGN PATTERNS;
   PREDICTION; IMPACT; COMPLEXITY; SMELLS; CHURN; VALIDATION; TIME
AB Software reusability mechanisms, like inheritance and delegation in Object-Oriented programming, are widely recognized as key instruments of software design that reduce the risks of source code being affected by defects, other than to reduce the effort required to maintain and evolve source code. Previous work has traditionally employed source code reuse metrics for prediction purposes, e.g., in the context of defect prediction. However, our research identifies two noticeable limitations of the current literature. First, still little is known about the extent to which developers actually employ code reuse mechanisms over time. Second, it is still unclear how these mechanisms may contribute to explaining defect-proneness and mainten0ance effort during software evolution. We aim at bridging this gap of knowledge, as an improved understanding of these aspects might provide insights into the actual support provided by these mechanisms, e.g., by suggesting whether and how to use them for prediction purposes. We propose an exploratory study, conducted on 12 Java projects-over 44,900 commits-of the Defects4J dataset, aiming at (1) assessing how developers use inheritance and delegation during software evolution; and (2) statistically analyzing the impact of inheritance and delegation on fault proneness and maintenance effort. Our results let emerge various usage patterns that describe the way inheritance and delegation vary over time. In addition, we find out that inheritance and delegation are statistically significant factors that influence both source code defect-proneness and maintenance effort.
C1 [Giordano, Giammaria; Festa, Gerardo; Palomba, Fabio; Ferrucci, Filomena; Gravino, Carmine] Univ Salerno, Software Engn SeSa Lab, Salerno, Italy.
   [Catolino, Gemma] Tilburg Univ, Jheronimus Acad Data Sci, Tilburg, Netherlands.
C3 University of Salerno; Tilburg University
RP Giordano, G (corresponding author), Univ Salerno, Software Engn SeSa Lab, Salerno, Italy.
EM giagiordano@unisa.it; g.festa22@studenti.unisa.it;
   g.catolino@tilburguniversity.edu; fpalomba@unisa.it; fferucci@unisa.it;
   gravino@unisa.it
OI Gravino, Carmine/0000-0002-4394-9035; Palomba,
   Fabio/0000-0001-9337-5116; FERRUCCI, Filomena/0000-0002-0975-8972;
   Catolino, Gemma/0000-0002-4689-3401; Giordano,
   Giammaria/0000-0003-2567-440X
FU Universit degli Studi di Salerno [825040]; European Commission [PZ00P2
   186090]; Swiss National Science Foundation through the SNF
FX Gemma is partially supported by the European Commission grant no. 825040
   (RADON). Fabio is supported by the Swiss National Science Foundation
   through the SNF Project No. PZ00P2 186090 (TED)
CR Abreu FBE, 1996, PROCEEDINGS OF THE 3RD INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, P90, DOI 10.1109/METRIC.1996.492446
   Albalooshi F, 2017, INT J ADV COMPUT SC, V8, P109
   Allison P., 2012, When Can You Safely Ignore Multicollinearity?, V5, P1
   Ampatzoglou A, 2015, IEEE T SOFTWARE ENG, V41, P781, DOI 10.1109/TSE.2015.2414917
   Amrit C, 2010, J INF TECHNOL, V25, P216, DOI 10.1057/jit.2010.7
   Anbalagan P, 2009, PROC IEEE INT CONF S, P523, DOI 10.1109/ICSM.2009.5306337
   [Anonymous], 1969, International Economic Review, DOI [10.2307/2525642, DOI 10.2307/2525642]
   Arnold K., 2005, The Java programming language
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Bieman J. M., 1995, SIGSOFT Software Engineering Notes, P47, DOI 10.1145/223427.211794
   Bird C, 2011, P 19 ACM SIGSOFT S 1, P4, DOI DOI 10.1145/2025113.2025119
   Bougie Gargi, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P106, DOI 10.1109/MSR.2010.5463291
   Breesam KM, 2007, DepCoS - RELCOMEX '07: International Conference on Dependability of Computer Systems, Proceedings, P231, DOI 10.1109/DEPCOS-RELCOMEX.2007.32
   Brown C, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P202, DOI 10.1109/ICSE-Companion.2019.00082
   Bruegge B., 2009, OBJECT ORIENTED SOFT
   Caponetto I, 2014, PROC EUR CONF GAME, P50
   Catolino G, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN SOCIETY (ICSE-SEIS 2021), P77, DOI 10.1109/ICSE-SEIS52602.2021.00017
   Catolino G, 2020, EMPIR SOFTW ENG, V25, P49, DOI 10.1007/s10664-019-09739-0
   Chawla S., 2013, Int J Eng Trends Technol, V4, P2903
   Cherkaoui O, 1998, NOMS '98 - 1998 IEEE NETWORK OPERATIONS AND MANAGEMENT SYMPOSIUM, VOLS 1-3, P836, DOI 10.1109/NOMS.1998.655225
   Chhikara A., 2011, International Journal of Enterprise Computing and Business Systems, V1, P1
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Craig ID, 2007, Object-Oriented Programming Languages: Interpretation, P83
   Dalla Palma S, 2022, IEEE T SOFTWARE ENG, V48, P2086, DOI 10.1109/TSE.2021.3051492
   Daly J., 1996, Empirical Software Engineering, V1, P109, DOI 10.1007/BF00368701
   Daly J, 1995, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, 1995 PROCEEDINGS, P20, DOI 10.1109/ICSM.1995.526524
   De Lucia A, 2009, J SYST SOFTWARE, V82, P1177, DOI 10.1016/j.jss.2009.02.012
   Di Nucci D, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P612, DOI 10.1109/SANER.2018.8330266
   Di Nucci D, 2018, IEEE T SOFTWARE ENG, V44, P5, DOI 10.1109/TSE.2017.2659747
   Do LNQ, 2020, IEEE Transactions on Software Engineering
   Durieux T, 2015, Automatic repair of real bugs: An experience report on the defects4j dataset
   Eshach H, 2003, ACAD MED, V78, P491, DOI 10.1097/00001888-200305000-00011
   Faraway J.J., 2016, Extending the Linear Model with R: Generalized Linear, Mixed Effects and Nonparametric Regression Models
   Fontana FA, 2016, EMPIR SOFTW ENG, V21, P1143, DOI 10.1007/s10664-015-9378-4
   Fontana FA, 2013, J SOFTW-EVOL PROC, V25, P27, DOI 10.1002/smr.547
   Fowler M., 2018, Refactoring: improving the design of existing code
   Gamma E., 1993, ECOOP '93 - Object-Oriented Programming. 7th European Conference Proceedings, P406
   Ghaisas S, 2013, IEEE-ACM INT WKSP CO, P37, DOI 10.1109/CESI.2013.6618468
   Giordano G, 2022, IEEE INTERCONFERENCE, P1
   Giordano G, 2022, Arxiv, DOI arXiv:2208.07471
   Goel Brij Mohan, 2013, Software Engineering Notes, V38, P1, DOI 10.1145/2492248.2492264
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Haefliger S, 2008, MANAGE SCI, V54, P180, DOI 10.1287/mnsc.1070.0748
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Hayes JH, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P254, DOI 10.1109/CSMR.2004.1281427
   He P, 2015, INFORM SOFTWARE TECH, V59, P170, DOI 10.1016/j.infsof.2014.11.006
   Herzig K, 2016, EMPIR SOFTW ENG, V21, P303, DOI 10.1007/s10664-015-9376-6
   Hosseini S, 2019, IEEE T SOFTWARE ENG, V45, P111, DOI 10.1109/TSE.2017.2770124
   Huston B, 2001, J SYST SOFTWARE, V58, P261, DOI 10.1016/S0164-1212(01)00043-7
   Jalender B., 2012, International Journal of Software Engineering Applications, V3, P219, DOI DOI 10.5121/IJSEA.2012.3116
   Jiang JJ, 2019, SCI CHINA INFORM SCI, V62, DOI 10.1007/s11432-018-1465-6
   Jureczko M., 2010, P 6 INT C PREDICTIVE, P1, DOI DOI 10.1145/1868328.1868342
   Jureczko M., 2010, Models Methods Syst Dependabil (MMSD), P69
   Jureczko M., 2011, Software Engineering: An International Journal, V1, P86
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Lambiase S, 2022, IEEEACM INT C SOFTWA
   Lange B. M., 1989, SIGCHI Bulletin, P69, DOI 10.1145/67450.67465
   Leach R. J., 1990, Journal of Software Maintenance: Research and Practice, V2, P113, DOI 10.1002/smr.4360020204
   Lehman MeirM., 1997, Lecture Notes in Computer Science, V1149, P108
   Lenarduzzi V, 2022, Journal of Systems and Software
   Lieberman M. G., 2014, MULTIPLE LINEAR REGR, V40, P5
   LISKOV BH, 1994, ACM T PROGR LANG SYS, V16, P1811, DOI 10.1145/197320.197383
   Liu JP, 2017, INT SYMP EMP SOFTWAR, P11, DOI 10.1109/ESEM.2017.8
   Mal S., 2013, International Journal of Software Engineering and Its Applications, V7, P185, DOI DOI 10.14257/IJSEIA.2013.7.6.16
   Mäntylä M, 2003, PROC IEEE INT CONF S, P381, DOI 10.1109/ICSM.2003.1235447
   Martinez M, 2017, EMPIR SOFTW ENG, V22, P1936, DOI 10.1007/s10664-016-9470-4
   McIntosh S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P141, DOI 10.1145/1985793.1985813
   Mishra Rahul, 2014, 2014 IEEE 4th Workshop on Mining Unstructured Data (MUD), P11, DOI 10.1109/MUD.2014.11
   Munro MJ, 2005, 2005 11th International Symposium on Software Metrics (METRICS), P124
   Munson JC, 1998, PROC IEEE INT CONF S, P24, DOI 10.1109/ICSM.1998.738486
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   O'Brien RM, 2007, QUAL QUANT, V41, P673, DOI 10.1007/s11135-006-9018-6
   Palomba F, 2019, IEEE T SOFTWARE ENG, V45, P194, DOI 10.1109/TSE.2017.2770122
   Palomba F, 2018, EMPIR SOFTW ENG, V23, P1188, DOI 10.1007/s10664-017-9535-z
   Palomba F, 2015, IEEE T SOFTWARE ENG, V41, P462, DOI 10.1109/TSE.2014.2372760
   Pascarella L, 2019, J SYST SOFTWARE, V150, P22, DOI 10.1016/j.jss.2018.12.001
   Perera A, 2020, IEEE INT CONF AUTOM, P1170, DOI 10.1145/3324884.3415286
   Posnett D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P452, DOI 10.1109/ICSE.2013.6606591
   Prechelt L, 2003, J SYST SOFTWARE, V65, P115, DOI 10.1016/S0164-1212(02)00053-5
   Radjenovic D, 2013, INFORM SOFTWARE TECH, V55, P1397, DOI 10.1016/j.infsof.2013.02.009
   Rahman F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P432, DOI 10.1109/ICSE.2013.6606589
   Rajnish K., 2008, INFOCOMP J Comput Sci, V7, P25
   Salza P, 2020, EMPIR SOFTW ENG, V25, P2341, DOI 10.1007/s10664-019-09754-1
   Sharma A., 2009, ACM SIGSOFT Software Engineering Notes, V34, P1, DOI DOI 10.1145/1507195.1507215
   Shihab E, 2013, INFORM SOFTWARE TECH, V55, P1981, DOI 10.1016/j.infsof.2013.06.002
   Shin Y, 2011, IEEE T SOFTWARE ENG, V37, P772, DOI 10.1109/TSE.2010.81
   Singh PD, 2017, PROCEEDINGS OF THE 7TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING, DATA SCIENCE AND ENGINEERING (CONFLUENCE 2017), P775, DOI 10.1109/CONFLUENCE.2017.7943255
   Singh S., 2010, Inter. journal of computer applications, V7, P38, DOI DOI 10.5120/1338-1703
   Singh Y, 2010, SOFTWARE QUAL J, V18, P3, DOI 10.1007/s11219-009-9079-6
   Sjoberg DIK, 2013, IEEE T SOFTWARE ENG, V39, P1144, DOI 10.1109/TSE.2012.89
   Sobreira V, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P130, DOI 10.1109/SANER.2018.8330203
   Sommerville I., 2011, Software engineering, V9th ed.
   Soundarajan N, 1998, FIFTH INTERNATIONAL CONFERENCE ON SOFTWARE REUSE - PROCEEDINGS, P206, DOI 10.1109/ICSR.1998.685745
   Spadini D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P908, DOI 10.1145/3236024.3264598
   Spooner DL etal, 1988, DBSEC, P141
   Succi G, 2005, EMPIR SOFTW ENG, V10, P81, DOI 10.1023/B:EMSE.0000048324.12188.a2
   Tamburri DA, 2020, IEEE Transactions on Engineering Management
   TAYLOR R, 1990, J DIAGN MED SONOG, V6, P35, DOI 10.1177/875647939000600106
   Tempero E, 2013, LECT NOTES COMPUT SC, V7920, P577, DOI 10.1007/978-3-642-39038-8_24
   Tsantalis N, 2022, IEEE T SOFTWARE ENG, V48, P930, DOI 10.1109/TSE.2020.3007722
   van Gurp J, 2002, J SYST SOFTWARE, V61, P105, DOI 10.1016/S0164-1212(01)00152-2
   VanHilst M, 2007, INT WORKSH SOFTW PAT
   Vassallo C, 2020, EMPIR SOFTW ENG, V25, P1419, DOI 10.1007/s10664-019-09750-5
   Vassallo C, 2018, IEEE INT CONF AUTOM, P790, DOI 10.1145/3238147.3240729
   Wieringa R, 2015, SCI COMPUT PROGRAM, V101, P136, DOI 10.1016/j.scico.2014.11.013
   Wohlin C., 2012, Experimentation in Software Engineering, DOI [10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Wu H, 2016, PROC IEEE INT CONF S, P32, DOI 10.1109/ICSME.2016.87
   Yu P, 2002, SIXTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P99
   Zaimi A, 2015, BALK C INF C, P1
   Zhan X, 2021, IEEE T SOFTWARE ENG
   Zhang C, 2013, INFORM SOFTWARE TECH, V55, P822, DOI 10.1016/j.infsof.2012.11.003
NR 112
TC 0
Z9 0
U1 3
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2024
VL 29
IS 1
AR 20
DI 10.1007/s10664-023-10408-6
PG 42
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AX0F5
UT WOS:001121623500001
OA hybrid
DA 2024-08-05
ER

PT J
AU Fortz, S
   Temple, P
   Devroey, X
   Heymans, P
   Perrouin, G
AF Fortz, Sophie
   Temple, Paul
   Devroey, Xavier
   Heymans, Patrick
   Perrouin, Gilles
TI VaryMinions: leveraging RNNs to identify variants in
   variability-intensive systems' logs
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Configurable processes; Recurrent neural networks; Variability-intensive
   systems; Variability mining; Software product lines
ID NEURAL-NETWORKS; PERFORMANCE; MODELS
AB From business processes to course management, variability-intensive software systems (VIS) are now ubiquitous. One can configure these systems' behaviour by activating options, e.g., to derive variants handling building permits across municipalities or implementing different functionalities (quizzes, forums) for a given course. These customisation facilities allow VIS to support distinct relevant customer requirements while taking advantage of reuse for common parts. Customisation thus allows realising both scope and scale economies. Behavioural differences amongst variants manifest themselves in event logs. To re-engineer this kind of system, one must know which variant(s) have produced which behaviour. Since variant information is barely present in logs, this paper supports this task by employing machine learning techniques to classify behaviours (event sequences) among variants. Specifically, we train Long Short Term Memory (LSTMs) and Gated Recurrent Units (GRUs) recurrent neural networks to relate event sequences with the variants they belong to on six different datasets issued from the configurable process and VIS domains. After having evaluated 20 different architectures of LSTM/GRU, our results demonstrate that it is possible to effectively learn the trace-to-variant mapping with high accuracy (at least 80 % \documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document}$$80\%$$\end{document} and up to 99 % \documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document}$$99\%$$\end{document} ) and at scale, i.e., identifying 50 variants using 5000+ traces for each variant.
C1 [Fortz, Sophie] Kings Coll London, London, England.
   [Fortz, Sophie; Devroey, Xavier; Heymans, Patrick; Perrouin, Gilles] Univ Namur, Fac Comp Sci, NaDI, Namur, Belgium.
   [Temple, Paul] Univ Rennes, CNRS, Inria, IRISA, Rennes, France.
C3 University of London; King's College London; University of Namur; Centre
   National de la Recherche Scientifique (CNRS); Inria; Universite de
   Rennes
RP Fortz, S (corresponding author), Kings Coll London, London, England.; Fortz, S (corresponding author), Univ Namur, Fac Comp Sci, NaDI, Namur, Belgium.
EM sophie.fortz@kcl.ac.uk; paul.temple@irisa.fr; xavier.devroey@unamur.be;
   patrick.heymans@unamur.be; gilles.perrouin@unamur.be
OI Devroey, Xavier/0000-0002-0831-7606; Temple, Paul/0000-0002-8276-0593;
   Fortz, Sophie/0000-0001-9687-8587; Perrouin, Gilles/0000-0002-8431-0377
FU EPSRC [EP/Y005244/1, EP/W032635/1]; Fonds de la recherche scientifique
   (FRS-FNRS); EOS VeriLearn project [O05518F-RG03]
FX Sophie Fortz has been partially supported by the EPSRC project on
   Verified Simulation for LargeQuantum Systems (VSL-Q), grant reference
   EP/Y005244/1, the EPSRC project on Robust and ReliableQuantum Computing
   (RoaRQ), Investigation 009 Model-based monitoring and calibration of
   quantum computations (ModeMCQ), grant reference EP/W032635/1, by the
   Fonds de la recherche scientifique (FRS-FNRS) via a FRIA grant, and by
   the EOS VeriLearn project, under grant No. O05518F-RG03. Gilles Perrouin
   is an FRSFNRS Research Associate. The authors have no competing
   interests to declare that are relevant to the content of this article.
CR Abdelrazek M, 2019, Software engineering for variability intensive systems, P119
   Acher M, 2013, VaMoS, P20
   Amand B, 2019, PROCEEDINGS OF THE 13TH INTERNATIONAL WORKSHOP ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS (VAMOS '19), DOI 10.1145/3302333.3302338
   ANGLUIN D, 1987, INFORM COMPUT, V75, P87, DOI 10.1016/0890-5401(87)90052-6
   Apel S., 2013, Feature-Oriented Software Product Lines, P3, DOI DOI 10.1007/978-3-642-37521-7
   Arganese E, 2020, STUD COMPUT INTELL, V851, P125, DOI 10.1007/978-3-030-26574-8_10
   Assunçao WKG, 2020, INFORM SOFTWARE TECH, V117, DOI 10.1016/j.infsof.2019.106198
   Assunçao WKG, 2017, EMPIR SOFTW ENG, V22, P2972, DOI 10.1007/s10664-017-9499-z
   Assy N, 2015, IEEE T SERV COMPUT, V8, P874, DOI 10.1109/TSC.2015.2477815
   Bacciu D, 2015, ELECTRON P THEOR COM, P75, DOI 10.4204/EPTCS.188.8
   Bobek S, 2013, AIBP AI IA SPRING, P41
   Borkowski M, 2019, INFORM SYST, V81, P220, DOI 10.1016/j.is.2017.12.005
   Boussaa M, 2017, ACM SIGPLAN NOTICES, V52, P202, DOI [10.1145/2993236.2993256, 10.1145/3093335.2993256]
   Bozorgi ZD, 2020, 2020 2ND INTERNATIONAL CONFERENCE ON PROCESS MINING (ICPM 2020), P129, DOI 10.1109/ICPM49681.2020.00028
   Bui HN, 2020, AS C INT INF DAT SYS, P35
   Bui HN, 2019, INT CONF KNOWL SYS, P312, DOI 10.1109/kse.2019.8919355
   Buijs J. C. A. M., 2013, Business Process Management. 11th International Conference, BPM 2013. Proceedings: LNCS 8094, P33, DOI 10.1007/978-3-642-40176-3_5
   Cândido J, 2021, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.489
   Chapelle O., 2009, SEMISUPERVISED LEARN, V20, P542, DOI 10.1109/TNN.2009.2015974
   Cho K., 2014, P 2014 C EMP METH NA, DOI 10.3115/v1/D14-1179
   Chollet F., 2015, Keras
   Chung J, 2014, PREPRINT
   Classen A, 2013, IEEE T SOFTWARE ENG, V39, P1069, DOI 10.1109/TSE.2012.86
   Cruz D, 2019, PROCEEDINGS OF THE 13TH INTERNATIONAL WORKSHOP ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS (VAMOS '19), DOI 10.1145/3302333.3302343
   Damasceno CDN, 2019, LECT NOTES COMPUT SC, V11918, P138, DOI 10.1007/978-3-030-34968-4_8
   De Weerdt J, 2012, IEEE C EVOL COMPUTAT
   Devroey X, 2022, VIBeS: Variability Intensive system Behavioral testing framework
   Devroey X, 2014, 8 INT WORKSH VAR MOD, p10:1, DOI [10.1145/2556624.2556635, DOI 10.1145/2556624.2556635]
   Devroey X, 2015, P 9 INT WORKSH VAR M, P59, DOI [10.1145/2701319.2701325, DOI 10.1145/2701319.2701325]
   Devroey Xavier, 2020, Zenodo, DOI 10.5281/ZENODO.4105900
   Devroey X, 2016, TENTH INTERNATIONAL WORKSHOP ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS (VAMOS 2016), P89, DOI 10.1145/2866614.2866627
   Devroey X, 2017, SOFTW SYST MODEL, V16, P153, DOI 10.1007/s10270-015-0479-8
   Di Mauro N, 2019, LECT NOTES COMPUT SC, V11946, P348, DOI 10.1007/978-3-030-35166-3_25
   Dorn J, 2020, PROCEEDINGS OF THE 14TH INTERNATIONAL WORKING CONFERENCE ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS (VAMOS '20), DOI 10.1145/3377024.3377040
   Evermann J, 2017, DECIS SUPPORT SYST, V100, P129, DOI 10.1016/j.dss.2017.04.003
   Fahland D, 2015, INFORM SYST, V47, P220, DOI 10.1016/j.is.2013.12.007
   Fernandes EC, 2019, PROCEDIA MANUF, V38, P84, DOI 10.1016/j.promfg.2020.01.012
   Ferreira F, 2021, 36TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, SAC 2021, P1542, DOI 10.1145/3412841.3442029
   Fortz S, 2023, P 27 ACM INT SYST SO, VB, DOI [10.1145/3579028.3609007, DOI 10.1145/3579028.3609007]
   Fortz Sophie, 2022, Zenodo, DOI 10.5281/ZENODO.7492126
   Fortz S, 2021, MALTESQUE '21: PROCEEDINGS OF THE 5TH INTERNATIONAL WORKSHOP ON MACHINE LEARNING TECHNIQUES FOR SOFTWARE QUALITY EVOLUTION, P13, DOI 10.1145/3472674.3473980
   Fortz S, 2021, SPLC '21 - PROCEEDINGS OF THE 25TH ACM INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL B, P1, DOI 10.1145/3461002.3473066
   Fragal VH, 2017, LECT NOTES COMPUT SC, V10231, P210, DOI 10.1007/978-3-319-57666-4_13
   García S, 2009, J HEURISTICS, V15, P617, DOI 10.1007/s10732-008-9080-4
   GEMAN S, 1992, NEURAL COMPUT, V4, P1, DOI 10.1162/neco.1992.4.1.1
   Ghamizi S, 2020, PROC INT CONF SOFTW, P41, DOI 10.1145/3377812.3382153
   Ghamizi S, 2020, SPLC'19: PROCEEDINGS OF THE 23RD INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL A, P119, DOI 10.1145/3336294.3336306
   Ghofrani J, 2019, 23RD INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE(SPLC 2019), VOL B, P122, DOI 10.1145/3307630.3342419
   Ghofrani J, 2020, SPLC'19: PROCEEDINGS OF THE 23RD INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL A, P72, DOI 10.1145/3336294.3336321
   Golia Priyanka, 2021, 2021 Formal Methods in Computer Aided Design (FMCAD), P222, DOI 10.34727/2021/isbn.978-3-85448-046-4_31
   Graves A, 2012, STUD COMPUT INTELL, V385, P1, DOI [10.1162/neco.1997.9.8.1735, 10.1007/978-3-642-24797-2, 10.1162/neco.1997.9.1.1]
   Ha H, 2019, PROC INT CONF SOFTW, P1095, DOI 10.1109/ICSE.2019.00113
   Halin A, 2019, EMPIR SOFTW ENG, V24, P674, DOI 10.1007/s10664-018-9635-4
   Han X, 2020, 2020 IEEE 13TH INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2020), P428, DOI 10.1109/ICWS49710.2020.00063
   Hanga KM, 2020, IEEE ACCESS, V8, P172923, DOI 10.1109/ACCESS.2020.3025999
   Harane N., 2020, Modern Approaches Mach. Learn. Cogn. Sci., A Walkthrough, V885, P115, DOI [10.1007/978-3-030-38445-6, DOI 10.1007/978-3-030-38445-6_9]
   Hariyanti E, 2021, COMPUT SECUR, V110, DOI 10.1016/j.cose.2021.102422
   Henard C, 2013, PROCEEDINGS OF THE 17TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE CO-LOCATED WORKSHOPS (SPLC'13 WORKSHOPS), P126
   Henard C, 2014, IEEE T SOFTWARE ENG, V40, P650, DOI 10.1109/TSE.2014.2327020
   Hinkka Markku, 2019, Business Process Management Workshops. BPM 2018 International Workshops. Revised Papers. Lecture Notes in Business Information Processing (LNBIP 342), P313, DOI 10.1007/978-3-030-11641-5_25
   Nguyen HTC, 2019, EXPERT SYST APPL, V131, P132, DOI 10.1016/j.eswa.2019.04.052
   Hochreiter S, 1998, INT J UNCERTAIN FUZZ, V6, P107, DOI 10.1142/S0218488598000094
   Hui Like, 2021, INT C LEARN REPR
   Iscen A, 2019, PROC CVPR IEEE, P5065, DOI 10.1109/CVPR.2019.00521
   Jaccard P., 1901, Bulletin de la Societe Vaudoise des Sciences Naturelles, V37, P241
   Japkowicz N., 2011, Evaluating Learning Algorithms: A Classification Perspective, DOI [DOI 10.1017/CBO9780511921803, https://doi.org/10.1017/CBO9780511921803, DOI 10.1017/CBO9780511921803.004]
   Varela-Vaca AJ, 2020, SPLC'19: PROCEEDINGS OF THE 23RD INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL A, P265, DOI 10.1145/3336294.3336303
   Kaltenecker C, 2020, IEEE SOFTWARE, V37, P58, DOI 10.1109/MS.2020.2987024
   Kang K.C., 1990, Feature-Oriented Domain Analysis (FODA) Feasibility Study
   Kerdoudi ML, 2019, IEEE INT C ENG COMP, P226, DOI 10.1109/ICECCS.2019.00032
   Khoshmanesh S, 2020, 2020 IEEE SEVENTH INTERNATIONAL WORKSHOP ON ARTIFICIAL INTELLIGENCE FOR REQUIREMENTS ENGINEERING (AIRE 2020), P87, DOI 10.1109/AIRE51212.2020.00020
   Kowsari K, 2017, 2017 16TH IEEE INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA), P364, DOI 10.1109/ICMLA.2017.0-134
   Kratsch W, 2021, BUS INFORM SYST ENG+, V63, P261, DOI 10.1007/s12599-020-00645-0
   La Rosa M., 2008, BPTrends Newsletter
   La Rosa M, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3041957
   Lee D.H., 2013, WORKSH CHALL REPR LE, P07
   LEVENSHT.VI, 1965, DOKL AKAD NAUK SSSR+, V163, P845
   Li Y, 2017, 21ST INTERNATIONAL SYSTEMS & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 1, P133, DOI 10.1145/3106195.3106207
   Lima Crescencio, 2019, Journal of the Brazilian Computer Society, V25, DOI 10.1186/s13173-019-0088-4
   Lin TY, 2020, IEEE T PATTERN ANAL, V42, P318, DOI 10.1109/TPAMI.2018.2858826
   Liu P., 2016, P 25 INT JOINT C ART, P2873, DOI [DOI 10.48550/ARXIV.1605.05101, DOI 10.5555/3060832.3061023]
   Lopez-Herrejon RE, 2015, INFORM SOFTWARE TECH, V61, P33, DOI 10.1016/j.infsof.2015.01.008
   Mans RS, 2008, COMM COM INF SC, V25, P425, DOI 10.1007/978-3-540-92219-3_32
   Martin H, 2021, SPLC '21: PROCEEDINGS OF THE 25TH ACM INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL A, DOI 10.1145/3461001.3471155
   Martin H, 2020, SPLC'19: PROCEEDINGS OF THE 23RD INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL A, P325, DOI 10.1145/3336294.3342383
   Martinez J, 2018, Tech. rep.
   Matzner M, 2021, Revised Selected Papers, V406, P112
   Michelon GK, 2023, J SYST SOFTWARE, V195, DOI 10.1016/j.jss.2022.111532
   Michelon GK, 2021, PROCEEDINGS OF 15TH INTERNATIONAL WORKING CONFERENCE ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS, VAMOS 2021, DOI 10.1145/3442391.3442403
   Mortara J, 2021, Capturing the Diversity of Analyses on the Linux Kernel Variability, P160, DOI [10.1145/3461001.3471151, DOI 10.1145/3461001.3471151]
   Nagarajah T, 2019, 2019 IEEE 5TH INTERNATIONAL CONFERENCE FOR CONVERGENCE IN TECHNOLOGY (I2CT), DOI 10.1109/i2ct45611.2019.9033810
   Nair V, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P257, DOI 10.1145/3106237.3106238
   Damasceno CDN, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09912-w
   NEMENYI P, 1962, BIOMETRICS, V18, P263
   Neu DA, 2022, ARTIF INTELL REV, V55, P801, DOI 10.1007/s10462-021-09960-8
   Nolle T, 2020, LECT NOTES COMPUT SC, V12127, P319, DOI 10.1007/978-3-030-49435-3_20
   Nolle T, 2018, LECT NOTES COMPUT SC, V11080, P271, DOI 10.1007/978-3-319-98648-7_16
   Park G, 2020, DECIS SUPPORT SYST, V129, DOI 10.1016/j.dss.2019.113191
   Pereira JA, 2020, PROCEEDINGS OF THE ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE'20), P277, DOI 10.1145/3358960.3379137
   Pohl K., 2005, Software product line engineering: foundations, principles and techniques, DOI [DOI 10.1007/3-540-28901-1, 10.1007/3-540-28901-1]
   Ramos-Gutiérrez B, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09911-x
   RUMELHART DE, 1986, NATURE, V323, P533, DOI 10.1038/323533a0
   Sánchez AB, 2017, SOFTW SYST MODEL, V16, P173, DOI 10.1007/s10270-015-0459-z
   Schobbens PY, 2007, COMPUT NETW, V51, P456, DOI 10.1016/j.comnet.2006.08.008
   Schuster M, 1997, IEEE T SIGNAL PROCES, V45, P2673, DOI 10.1109/78.650093
   She S., 2010, VaMoS, P45
   She S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P461, DOI 10.1145/1985793.1985856
   Shu Y, 2020, P 14 ACM IEEE INT S, P1
   Sikal R, 2018, 2018 IEEE 5TH INTERNATIONAL CONGRESS ON INFORMATION SCIENCE AND TECHNOLOGY (IEEE CIST'18), P137, DOI 10.1109/CIST.2018.8596526
   Song M, 2013, EXPERT SYST APPL, V40, P3722, DOI 10.1016/j.eswa.2012.12.078
   Struder S, 2020, P 24 ACM C SYST SOFT, VA, P1, DOI [10.1145/3382025.3414960, DOI 10.1145/3382025.3414960]
   Sun XX, 2020, 2020 IEEE 13TH INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2020), P554, DOI 10.1109/ICWS49710.2020.00080
   Tax N, 2017, LECT NOTES COMPUT SC, V10253, P477, DOI 10.1007/978-3-319-59536-8_30
   Taymouri F, 2021, KNOWL-BASED SYST, V211, DOI 10.1016/j.knosys.2020.106557
   Tello-Leal E, 2018, 2018 ITU KALEIDOSCOPE: MACHINE LEARNING FOR A 5G FUTURE (ITU K)
   Temple P, 2016, P 20 INT SYST SOFTW, P209, DOI 10.1145/2934466.2934472
   Temple P, 2021, IEEE T SOFTWARE ENG, V47, P1511, DOI 10.1109/TSE.2019.2926971
   Temple P, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09915-7
   TensorFlow Developers, 2021, Zenodo, DOI [10.5281/ZENODO.4758419, 10.5281/ZENODO.5555139]
   Valov P, 2015, P 19 INT C SOFTWARE, P186, DOI DOI 10.1145/2791060.2791069
   van Dongen B, 2020, Bpi challenge 2020, DOI [DOI 10.4121/UUID:52FB97D4-4588-43C9-9D04-3604D4613B51, 10.4121/uuid:52fb97d4-4588-43c9-9d04-3604d4613b51]
   Van Dongen BF, 2015, 4TU.ResearchData
   Vaswani A, 2017, ADV NEUR IN, V30
   Velez M, 2021, PROC INT CONF SOFTW, P1072, DOI 10.1109/ICSE43902.2021.00100
   Venugopal I, 2021, IEEE IJCNN, DOI 10.1109/IJCNN52387.2021.9533742
   Vyas G, 2019, PROCEEDINGS 2019 AMITY INTERNATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AICAI), P774, DOI [10.1109/aicai.2019.8701400, 10.1109/AICAI.2019.8701400]
   Wang JJ, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES (IEEE ICWS 2019), P360, DOI 10.1109/ICWS.2019.00065
   Weber M, 2021, PROC INT CONF SOFTW, P1059, DOI 10.1109/ICSE43902.2021.00099
   Weckesser M, 2018, SPLC'18: PROCEEDINGS OF THE 22ND INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL 1, P98, DOI 10.1145/3233027.3233030
   Welsing M., 2021, Production at the leading edge of technology, P528, DOI [10.1007/978-3-662-62138-753, DOI 10.1007/978-3-662-62138-753]
   Yang Li, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P90, DOI 10.1145/3383219.3383229
   Zhang Y, 2015, IEEE INT CONF AUTOM, P365, DOI 10.1109/ASE.2015.15
NR 132
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2024
VL 29
IS 4
AR 99
DI 10.1007/s10664-024-10473-5
PG 44
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UK9Q2
UT WOS:001248074900002
OA hybrid
DA 2024-08-05
ER

PT J
AU Malik, A
   Adams, B
   Hassan, A
AF Malik, Akshat
   Adams, Bram
   Hassan, Ahmed
TI Towards graph-anonymization of software analytics data: empirical study
   on JIT defect prediction
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Graph anonymization; Privacy; Software defect prediction; Knowledge
   graphs
ID PRIVACY; ATTACKS; METRICS; MODELS
AB As the usage of software analytics for understanding different organizational practices becomes prevalent, it is important that data for these practices is shared across different organizations to build a common understanding of software systems and processes. Yet, organizations are hesitant to share this data and trained models with one another due to concerns around privacy, e.g., because of the risk of reverse engineering the training data of the models. To facilitate data sharing, tabular anonymization techniques like MORPH, LACE and LACE2 have been proposed to provide privacy to defect prediction data. However, said techniques treat data points as individual elements, and lose the context between different features when performing anonymization. We study the effect of four anonymization techniques, i.e., Random Add/Delete, Random Switch, k-DA and Generalization, on the privacy score and performance in six large, long-lived projects. To measure privacy, we use the IPR metric, which is a measure of the inability of an attacker to extract information about sensitive attributes from the anonymized data. We find that all four graph anonymization techniques are able to provide privacy scores higher than 65% in all the datasets, while Random Add/ Delete and Random Switch are even able to achieve privacy scores of 80% and greater in all datasets. For techniques achieving privacy scores of 65%, the AUC and Recall decreased by a median of 1.45% and 5.35%, respectively. For techniques with privacy scores 80% or greater, the AUC and Recall of privatized models decreased by a median of 6.44% and 20.29%, respectively. The state-of-the-art tabular techniques like MORPH, LACE and LACE2 provide high privacy scores (89%-99%); however, they have a higher impact on performance with a median decrease of 21.15% in AUC and 80.34% in Recall. Furthermore, since privacy scores 65% or greater are adequate for sharing, the graph anonymization techniques are able to provide more configurable results where one can make trade-offs between privacy and performance. When compared to unsupervised techniques like a JIT variant of ManualDown, the GA techniques perform comparable or significantly better for AUC, G-Mean and FPR metrics. Our work shows that graph anonymization can be an effective way of providing privacy while preserving model performance.
C1 [Malik, Akshat] Queens Univ, SAIL MCIS, Kingston, ON, Canada.
   [Adams, Bram] Queens Univ, MCIS, Kingston, ON, Canada.
   [Hassan, Ahmed] Queens Univ, SAIL, Kingston, ON, Canada.
C3 Queens University - Canada; Queens University - Canada; Queens
   University - Canada
RP Malik, A (corresponding author), Queens Univ, SAIL MCIS, Kingston, ON, Canada.
EM akshat.ndun@gmail.com; bram.adams@queensu.ca; ahmed@cs.queensu.ca
CR Al-Rubaie M, 2019, IEEE SECUR PRIV, V17, P49, DOI 10.1109/MSEC.2018.2888775
   Brickell J, 2008, P ACM SIGKDD INT C K, DOI [10.1145/1401890.1401904, DOI 10.1145/1401890.1401904]
   Chakraborty S, 2022, IEEE T SOFTWARE ENG, V48, P3280, DOI 10.1109/TSE.2021.3087402
   Chen JL, 2020, IEEE IC COMP COM NET, DOI 10.1109/icccn49398.2020.9209744
   Cheng J., 2010, P 2010 ACM SIGMOD IN, P459, DOI DOI 10.1145/1807167.1807218
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Dasgupta A, 2013, COMPUT GRAPH FORUM, V32, P35, DOI 10.1111/cgf.12142
   El Emam K, 2008, J AM MED INFORM ASSN, V15, P627, DOI 10.1197/jamia.M2716
   Falessi D, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3467895
   Fan Y, 2017, PROC IEEE INT CONF S, P80, DOI 10.1109/ICSME.2017.57
   Feder T, 2008, Arxiv, DOI arXiv:0810.5578
   Fredrikson M, 2015, CCS'15: PROCEEDINGS OF THE 22ND ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1322, DOI 10.1145/2810103.2813677
   Hardt M, 2014, ADV NEUR IN, V27
   Hoang T, 2020, PROC INT CONF SOFTW, P518, DOI 10.1145/3377811.3380361
   Hogan A, 2021, ACM COMPUT SURV, V54, DOI 10.1145/3447772
   Huang Q, 2019, EMPIR SOFTW ENG, V24, P2823, DOI 10.1007/s10664-018-9661-2
   Ji SL, 2017, IEEE COMMUN SURV TUT, V19, P1305, DOI 10.1109/COMST.2016.2633620
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Keshavarz H, 2022, IEEE WORK CONF MIN S, P191, DOI 10.1145/3524842.3527996
   Li ZQ, 2019, IEEE T SOFTWARE ENG, V45, P391, DOI 10.1109/TSE.2017.2780222
   Liu K, 2008, P ACM SIGMOD INT C M, DOI 10.1145/1376616.1376629
   liwerski J., 2005, ACM sigsoft software engineering notes, V30, P1, DOI [10.1145/1082983.1083147, DOI 10.1145/1083142.1083147]
   McIntosh S, 2018, IEEE T SOFTWARE ENG, V44, P412, DOI 10.1109/TSE.2017.2693980
   Mendes R, 2017, IEEE ACCESS, V5, P10562, DOI 10.1109/ACCESS.2017.2706947
   Mittal P, 2012, Arxiv, DOI arXiv:1208.6189
   Mortazavi R, 2020, EXPERT SYST APPL, V153, DOI 10.1016/j.eswa.2020.113454
   Narayanan A, 2009, P IEEE S SECUR PRIV, P173, DOI 10.1109/SP.2009.22
   Nasr M, 2019, P IEEE S SECUR PRIV, P739, DOI 10.1109/SP.2019.00065
   Peters F, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P801, DOI 10.1109/ICSE.2015.92
   Peters F, 2013, IEEE T SOFTWARE ENG, V39, P1054, DOI 10.1109/TSE.2013.6
   Peters F, 2012, PROC INT CONF SOFTW, P189, DOI 10.1109/ICSE.2012.6227194
   Pornprasit C, 2021, IEEE WORK CONF MIN S, P369, DOI 10.1109/MSR52588.2021.00049
   Pustozerova A, 2020, P NETWORK DISTR SYST, V10
   Rodríguez-Pérez G, 2022, IEEE T SOFTWARE ENG, V48, P1400, DOI 10.1109/TSE.2020.3021380
   Sala A., 2011, P 2011 ACM SIGCOMM C, P81
   Shokri R, 2017, P IEEE S SECUR PRIV, P3, DOI 10.1109/SP.2017.41
   Srivatsa M., 2012, P 2012 ACM C COMP CO, P628
   Tabassum S, 2023, IEEE T SOFTWARE ENG, V49, P268, DOI 10.1109/TSE.2022.3150153
   Tan M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P99, DOI 10.1109/ICSE.2015.139
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Thompson Brian., 2009, P S INFORM COMPUTER, P218
   Wagner I, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3168389
   Whigham PA, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2738037
   Wolf T, 2009, PROC INT CONF SOFTW, P1, DOI 10.1109/ICSE.2009.5070503
   Yamamoto H, 2023, Soft Anal Evol Reeng, P485, DOI 10.1109/SANER56733.2023.00052
   Yang YB, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P157, DOI 10.1145/2950290.2950353
   Yeom S, 2018, P IEEE COMPUT SECUR, P268, DOI 10.1109/CSF.2018.00027
   Ying X., 2008, P 2008 SIAM INT C DA, P739, DOI DOI 10.1137/1.9781611972788.67
   Zeng ZR, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P427, DOI 10.1145/3460319.3464819
   Zhou B, 2008, PROC INT CONF DATA, P506, DOI 10.1109/ICDE.2008.4497459
   Zou L., 2009, P VLDB ENDOWMENT, V2, P946, DOI 10.14778/1687627.1687734
NR 51
TC 0
Z9 0
U1 1
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2024
VL 29
IS 4
AR 76
DI 10.1007/s10664-024-10464-6
PG 49
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SS8X9
UT WOS:001236540600001
DA 2024-08-05
ER

PT J
AU Sas, C
   Capiluppi, A
AF Sas, Cezar
   Capiluppi, Andrea
TI Multi-granular software annotation using file-level weak labelling
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE File-level labelling; Weak labelling; Software classification; Program
   comprehension
AB ContextOne of the most time-consuming tasks for developers is the comprehension of new code bases. An effective approach to aid this process is to label source code files with meaningful annotations, which can help developers understand the content and functionality of a code base quicker. However, most existing solutions for code annotation focus on project-level classification: manually labelling individual files is time-consuming, error-prone and hard to scale.ObjectiveThe work presented in this paper aims to automate the annotation of files by leveraging project-level labels; and using the file-level annotations to annotate items at larger levels of granularity, for example, packages and a whole project.MethodWe propose a novel approach to annotate source code files using a weak labelling approach and a subsequent hierarchical aggregation. We investigate whether this approach is effective in achieving multi-granular annotations of software projects, which can aid developers in understanding the content and functionalities of a code base more quickly.ResultsOur evaluation uses a combination of human assessment and automated metrics to evaluate the annotations' quality. Our approach correctly annotated 50% of files and more than 50% of packages. Moreover, the information captured at the file-level allowed us to identify, on average, three new relevant labels for any given project. We can conclude that the proposed approach is a convenient and promising way to generate noisy (not precise) annotations for files. Furthermore, hierarchical aggregation effectively preserves the information captured at file-level, and it can be propagated to packages and the overall project itself.ConclusionsWe can conclude that the proposed approach is a convenient and promising way to generate noisy (not precise) annotations for files. Furthermore, hierarchical aggregation effectively preserves the information captured at file-level, and it can be propagated to packages and the overall project itself.
C1 [Sas, Cezar; Capiluppi, Andrea] Univ Groningen, Bernoulli Inst, Groningen, Netherlands.
C3 University of Groningen
RP Sas, C (corresponding author), Univ Groningen, Bernoulli Inst, Groningen, Netherlands.
EM c.a.sas@rug.nl; a.capiluppi@rug.nl
RI Sas, Cezar/JMQ-9798-2023
OI Sas, Cezar/0000-0002-3018-0140; Capiluppi, Andrea/0000-0001-9469-6050
CR Ajienka N, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962622
   Allal LB, 2023, Arxiv, DOI [arXiv:2301.03988, 10.48550/arXiv.2301.03988]
   Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   Altarawy D, 2018, J SYST SOFTWARE, V142, P21, DOI 10.1016/j.jss.2018.04.018
   Bharti S.K., 2017, arXiv
   Bojanowski Piotr, 2017, T ASSOC COMPUT LING, V5, P135, DOI [10.48550/arXiv.1607.04606, DOI 10.1162/TACLA00051]
   Briand L, 2017, IEEE SOFTWARE, V34, P72, DOI 10.1109/MS.2017.3571562
   Briand L, 2012, IEEE SOFTWARE, V29, P96, DOI 10.1109/MS.2012.86
   Bronstein MM, 2017, IEEE SIGNAL PROC MAG, V34, P18, DOI 10.1109/MSP.2017.2693418
   Campos R, 2020, INFORM SCIENCES, V509, P257, DOI 10.1016/j.ins.2019.09.013
   Compton R, 2020, IEEE WORK CONF MIN S, P243, DOI 10.1145/3379597.3387445
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   Di Rocco J, 2023, APPL INTELL, V53, P9708, DOI 10.1007/s10489-022-03864-y
   Di Rocco Juri, 2020, ESEM ' 20, DOI DOI 10.1145/3382494.3410690
   Di Sipio Claudio, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P71, DOI 10.1145/3383219.3383227
   Efstathiou V, 2018, IEEE WORK CONF MIN S, P38, DOI 10.1145/3196398.3196448
   Endres DM, 2003, IEEE T INFORM THEORY, V49, P1858, DOI 10.1109/TIT.2003.813506
   Feng ZY, 2020, Arxiv, DOI [arXiv:2002.08155, 10.48550/arXiv.2002.08155]
   Firoozeh N, 2020, NAT LANG ENG, V26, P259, DOI 10.1017/S1351324919000457
   Firth J. R., 1957, STUDIES LINGUISTIC A, P1
   Fontana FA, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE WORKSHOPS (ICSAW), P282, DOI 10.1109/ICSAW.2017.16
   GLASS RL, 1995, IEEE SOFTWARE, V12, P63, DOI 10.1109/52.391837
   Grover A, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P855, DOI 10.1145/2939672.2939754
   Ieva C, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE TESTING (AITEST), P73, DOI 10.1109/AITest.2019.000-4
   Izadi M, 2023, EMPIR SOFTW ENG, V28, DOI 10.1007/s10664-022-10272-w
   Izadi M, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09976-2
   Kawaguchi S, 2004, 11TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P184, DOI 10.1109/APSEC.2004.69
   Khoreva A, 2017, PROC CVPR IEEE, P1665, DOI 10.1109/CVPR.2017.181
   Kuhn A, 2007, INFORM SOFTWARE TECH, V49, P230, DOI 10.1016/j.infsof.2006.10.017
   KULLBACK S, 1951, ANN MATH STAT, V22, P79, DOI 10.1214/aoms/1177729694
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Le Quoc V, 2014, JMLR WORKSHOP C P
   LeClair A, 2018, PROC IEEE INT CONF S, P461, DOI 10.1109/ICSME.2018.00056
   Linares-Vasquez M, 2014, EMPIR SOFTW ENG, V19, P582, DOI 10.1007/s10664-012-9230-z
   McMillan C, 2012, PROC INT CONF SOFTW, P364, DOI 10.1109/ICSE.2012.6227178
   Mekala D, 2020, PROCEEDINGS OF THE 2020 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP), P8351
   Mekala D, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P583
   Mikolov T, 2013, Arxiv, DOI [arXiv:1301.3781, DOI 10.48550/ARXIV.1301.3781]
   Moran K, 2016, IEEE INT CONF SOFTW, P33, DOI 10.1109/ICST.2016.34
   Nguyen PT, 2020, SOFTWARE QUAL J, V28, P595, DOI 10.1007/s11219-019-09483-0
   Nguyen PT, 2018, EUROMICRO CONF PROC, P388, DOI 10.1109/SEAA.2018.00069
   Ohashi H, 2019, 2019 IEEE 13TH INTERNATIONAL SYMPOSIUM ON EMBEDDED MULTICORE/MANY-CORE SYSTEMS-ON-CHIP (MCSOC 2019), P194, DOI 10.1109/MCSoC.2019.00035
   Panichella A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P522, DOI 10.1109/ICSE.2013.6606598
   Papandreou G, 2015, Arxiv, DOI arXiv:1502.02734
   Qian YY, 2022, PROCEEDINGS OF THE 28TH ACM SIGKDD CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, KDD 2022, P1390, DOI 10.1145/3534678.3539324
   Rademacher F, 2020, Proceedings, Lecture Notes in Business Information Processing, vol387
   Ratner A, 2019, AAAI CONF ARTIF INTE, P4763
   Rokon MOF, 2021, PROC IEEE INT CONF S, P355, DOI 10.1109/ICSME52107.2021.00038
   Sas C, 2023, SOFTWARE PRACT EXPER, V53, P1982, DOI 10.1002/spe.3238
   Sas C, 2023, Soft Anal Evol Reeng, P698, DOI 10.1109/SANER56733.2023.00074
   Sas C, 2022, J SYST SOFTWARE, V190, DOI 10.1016/j.jss.2022.111343
   Savage T, 2010, PROC IEEE INT CONF S
   Secil U., 2002, P 8 INT C KNOWL DISC, P632
   Shang JB, 2016, Arxiv, DOI arXiv:1610.09769
   Sharma Abhishek, 2017, P EASE 2017, P314
   Sun XB, 2017, SCI PROGRAMMING-NETH, V2017, DOI 10.1155/2017/3787053
   Theeten Bart, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P18, DOI 10.1109/MSR.2019.00014
   Tian K, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P163, DOI 10.1109/MSR.2009.5069496
   Vrandecic D., 2012, WWW, P1063
   Walker Andrew, 2021, Information Science and Applications. Proceedings of ICISA 2020. Lecture Notes in Electrical Engineering (LNEE 739), P223, DOI 10.1007/978-981-33-6385-4_21
   Wei T., 2022, arXiv, DOI DOI 10.48550/ARXIV.2210.03968
   Widom J., 2002, P 8 ACM SIGKDD INT C, P538, DOI [DOI 10.1145/775047.775126, 10.1145/775047.775126]
   Widyasari R, 2023, IEEE INT C SOFTW AN, ppp167, DOI [10.1109/SANER56733.2023, DOI 10.1109/SANER56733.2023]
   Xia X, 2018, IEEE T SOFTWARE ENG, V44, P951, DOI 10.1109/TSE.2017.2734091
   Zhang JY, 2022, Arxiv, DOI arXiv:2202.05433
   Zhang Y, 2019, IEEE DATA MINING, P876, DOI 10.1109/ICDM.2019.00098
   Zhou Y, 2021, 2021 IEEE INT C WEB, ppp314, DOI [10.1109/ICWS53863, DOI 10.1109/ICWS53863]
NR 67
TC 0
Z9 0
U1 1
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2024
VL 29
IS 1
AR 12
DI 10.1007/s10664-023-10423-7
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AJ6Q3
UT WOS:001118142500003
OA Green Published, Green Submitted
DA 2024-08-05
ER

PT J
AU Abidi, M
   Rahman, MS
   Openja, M
   Khomh, F
AF Abidi, Mouna
   Rahman, Md Saidur
   Openja, Moses
   Khomh, Foutse
TI Design smells in multi-language systems and bug-proneness: a survival
   analysis
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Design smells; Code smells; Multi-language systems; Mining software
   repositories; Empirical studies; Survival analysis
ID CODE SMELLS; IMPACT; BAD
AB Modern applications are often developed using a combination of programming languages and technologies. Multi-language systems offer opportunities for code reuse and the possibility to leverage the strengths of multiple programming languages. However, multi-language development may also impede code comprehension and increase maintenance overhead. As a result of this, developers may introduce design smells by making poor design and implementation choices. Studies on mono-language systems suggest that design smells may increase the risk of bugs and negatively impact software quality. However, the impacts of multi-language smells on software quality are still under-investigated. In this paper, we aim to examine the impacts of multi-language smells on software quality, bug-proneness in particular. We performed survival analysis comparing the time until a bug occurrence in files with and without multi-language design smells. To have qualitative insights into the impacts of multi-language design smells on software bug-proneness, we performed topic modeling and manual investigations, to capture the categories and characteristics of bugs that frequently occur in files with multi-language smells. Our investigation shows that (1) files with multi-language smells experience bugs faster than files without those smells, and non-smelly files have hazard rates 87.5% lower than files with smells, (2) files with some specific types of smells experience bugs faster than the other smells, and (3) bugs related to "programming errors", "external libraries and features support issues", and "memory issues" are the most dominant types of bugs that occur in files with multi-language smells. Through this study, we aim to raise the awareness of developers about the impacts of multi-language design smells, and help them prioritize maintenance activities.
C1 [Abidi, Mouna; Rahman, Md Saidur; Openja, Moses; Khomh, Foutse] Polytech Montreal, DGIGL, Montreal, PQ, Canada.
C3 Universite de Montreal; Polytechnique Montreal
RP Abidi, M (corresponding author), Polytech Montreal, DGIGL, Montreal, PQ, Canada.
EM mouna.abidi@polymtl.ca; saidur.rahman@polymtl.ca;
   moses.openja@polymtl.ca; foutse.khomh@polymtl.ca
FU Natural Sciences and Engineering Research Council of Canada; Fonds de
   Recherche du Quebec
FX This work has been partially supported by the Natural Sciences and
   Engineering Research Council of Canada and the Fonds de Recherche du
   Quebec.
CR Abbes M, 2011, EUR CON SFTWR MTNCE, P181, DOI 10.1109/CSMR.2011.24
   Abidi M, 2019, P 29 ANN INT C COMP, P72
   Abidi M, 2019, P 24 EUR C PATT LANG, P42
   Abidi M, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3432690
   Abidi M, 2019, PROCEEDINGS OF THE 24TH EUROPEAN CONFERENCE ON PATTERN LANGUAGES OF PROGRAMS (EUROPLOP 2019), DOI 10.1145/3361149.3361161
   Alexander C., 1977, PATTERN LANGUAGE
   [Anonymous], 2002, Applied Social Research Methods Series
   Antoniol G., 2008, P 2008 C CTR ADV STU, P304
   Asmare MB, 2020, IEEE WORK CONF MIN S, P327, DOI 10.1145/3379597.3387467
   Asuncion HU, 2010, 2010 ACM IEEE 32 INT, V1, P95
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Borrelli A, 2020, IEEE WORK CONF MIN S, P198, DOI 10.1145/3379597.3387454
   Brown William H., 1998, AntiPatterns: Refactoring Software, Architectures, and Projects in Crisis, V1st
   Castelluccio M, 2019, EMPIR SOFTW ENG, V24, P3008, DOI 10.1007/s10664-018-9665-y
   Cleves M., 2008, An introduction to survival analysis using Stata
   Di Nucci D, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P612, DOI 10.1109/SANER.2018.8330266
   Fisher LD, 1999, ANNU REV PUBL HEALTH, V20, P145, DOI 10.1146/annurev.publhealth.20.1.145
   Fowler M., 1999, Refactoring: Improving the Design of Existing Programs
   Gamma E., 1995, DESIGN PATTERNS ELEM
   GEMAN S, 1984, IEEE T PATTERN ANAL, V6, P721, DOI 10.1109/TPAMI.1984.4767596
   Goedicke M, 2002, J SOFTW MAINT EVOL-R, V14, P1, DOI 10.1002/smr.243
   Goedicke M, 2000, 5 EUR C PATT LANG PR
   Goedicke M, 2001, 6 EUR C PATT LANG PR
   Gurcan F, 2019, IEEE ACCESS, V7, P82541, DOI 10.1109/ACCESS.2019.2924075
   Habchi S, 2019, 2019 IEEE/ACM 6TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2019), P87, DOI 10.1109/MOBILESoft.2019.00022
   Habibi M, 2015, IEEE-ACM T AUDIO SPE, V23, P746, DOI 10.1109/TASLP.2015.2405482
   Hunt J., 1999, Java for practitioners: an introduction and reference to Java and object orientation, V1, DOI [10.1007/978-1-4471-0843-6, DOI 10.1007/978-1-4471-0843-6]
   Jelodar H, 2019, MULTIMED TOOLS APPL, V78, P15169, DOI 10.1007/s11042-018-6894-4
   Johannes D, 2019, SOFTWARE QUAL J, V27, P1271, DOI 10.1007/s11219-019-09442-9
   Jones T. C., 1998, ESTIMATING SOFTWARE
   Khomh F, 2012, EMPIR SOFTW ENG, V17, P243, DOI 10.1007/s10664-011-9171-y
   Khomh F, 2009, WORK CONF REVERSE EN, P75, DOI 10.1109/WCRE.2009.28
   Khomh F, 2009, INT CONF QUAL SOFTW, P305, DOI 10.1109/QSIC.2009.47
   Kochhar PS, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P563, DOI 10.1109/SANER.2016.112
   Kondoh G., 2008, Proceedings of the 2008 international symposium on Software testing and analysis, P109, DOI 10.1145/1390630.1390645
   Kontogiannis K, 2006, PROC IEEE INT CONF S, P497
   Koru AG, 2008, EMPIR SOFTW ENG, V13, P473, DOI 10.1007/s10664-008-9080-x
   Kullbach B, 1998, FIFTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P135, DOI 10.1109/WCRE.1998.723183
   Lee B, 2009, ACM SIGPLAN NOTICES, V44, P207, DOI 10.1145/1639949.1640105
   Lenarduzzi V, 2019, 15TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING (PROMISE'19), P2, DOI 10.1145/3345629.3345630
   Li SL, 2009, CCS'09: PROCEEDINGS OF THE 16TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P442
   Liang S., 1999, Java native interface: programmers guide and reference
   Lima Rodrigo, 2020, SBES '20: Proceedings of the 34th Brazilian Symposium on Software Engineering, P223, DOI 10.1145/3422392.3422420
   Lin D, 1989, Goodness-of-fit tests and robust statistical inference for the Cox proportional hazards model
   Linares-Vasquez M., 2014, P 22 INT C PROGR COM, P232
   Linos P. K., 1995, Proceedings First IEEE International Conference on Engineering of Complex Comput Systems. Held jointly with 5th CSESAW, 3rd IEEE RTAW and 20th IFAC/IFIP WRTP (Cat. No.95TB100007), P338, DOI 10.1109/ICECCS.1995.479355
   Linos PK, 2003, PROG COMPREHEN, P64
   Long F., 2013, Java coding guidelines: 75 recommendations for reliable and secure programs
   McCallum A., 2002, MALLET MACHINE LEARN
   Mockus A, 2000, PROC IEEE INT CONF S, P120, DOI 10.1109/ICSM.2000.883028
   Morales R, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P171, DOI 10.1109/SANER.2015.7081827
   Mushtaq Z, 2015, 2015 INTERNATIONAL CONFERENCE ON OPEN SOURCE SYSTEMS & TECHNOLOGIES (ICOSST), P170, DOI 10.1109/ICOSST.2015.7396422
   Neitsch A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P140, DOI 10.1109/ICSM.2012.6405265
   Olbrich S, 2009, INT SYMP EMP SOFTWAR, P391
   Palomba F, 2018, IEEE T SOFTWARE ENG, V44, P977, DOI 10.1109/TSE.2017.2752171
   Palomba F, 2015, IEEE T SOFTWARE ENG, V41, P462, DOI 10.1109/TSE.2014.2372760
   Palomba F, 2014, PROC IEEE INT CONF S, P101, DOI 10.1109/ICSME.2014.32
   Pfeiffer Rolf-Helge, 2012, Modelling Foundations and Applications. Proceedings 8th European Conference, ECMFA 2012, P178, DOI 10.1007/978-3-642-31491-9_15
   Politowski C, 2020, INFORM SOFTWARE TECH, V122, DOI 10.1016/j.infsof.2020.106278
   Porter MF., 2001, SNOWBALL LANGUAGE ST
   Radu Aida, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P399, DOI 10.1109/MSR.2019.00066
   Rahman MS, 2020, ACM Trans Softw Eng Methodol (TOSEM)
   Ray B, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P155, DOI 10.1145/2635868.2635922
   Romano D., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P437, DOI 10.1109/WCRE.2012.53
   Rosen C, 2016, EMPIR SOFTW ENG, V21, P1192, DOI 10.1007/s10664-015-9379-3
   Saboury A, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P294, DOI 10.1109/SANER.2017.7884630
   Samoladas I, 2010, INFORM SOFTWARE TECH, V52, P902, DOI 10.1016/j.infsof.2010.05.001
   Selim G. M. K., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P13, DOI 10.1109/WCRE.2010.11
   Soh Z, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P393, DOI 10.1109/SANER.2016.103
   Spadini D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P908, DOI 10.1145/3236024.3264598
   Tan CM, 2002, INFORM PROCESS MANAG, V38, P529, DOI 10.1016/S0306-4573(01)00045-0
   Tan G., 2008, P 17 USENIX SECURITY, P365
   Tan G, 2006, P 2006 IEEE INT S SE, P97
   Thomas SW, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1138, DOI 10.1145/1985793.1986020
   Thongtanunam P, 2020, IEEE Trans Softw Eng
   Till Q., 2019, How to ship product with a quarterly product roadmap and sprint-based execution
   Tomassetti Federico., 2014, Proceedings of the 18th International Conference on Evaluation and Assessment in Software Engineering, P1
   Treude Christoph, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P84, DOI 10.1109/MSR.2019.00022
   Tufano M, 2017, IEEE T SOFTWARE ENG, V43, P1063, DOI 10.1109/TSE.2017.2653105
   Yamashita A, 2013, WORK CONF REVERSE EN, P242, DOI 10.1109/WCRE.2013.6671299
   Yamashita A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P306, DOI 10.1109/ICSM.2012.6405287
NR 81
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2024
VL 29
IS 5
AR 106
DI 10.1007/s10664-024-10476-2
PG 42
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XK5A5
UT WOS:001261579600002
DA 2024-08-05
ER

PT J
AU Azeem, MI
   Abualhaija, S
AF Azeem, Muhammad Ilyas
   Abualhaija, Sallam
TI A Multi-solution Study on GDPR AI-enabled Completeness Checking of DPAs
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Requirements engineering (RE); The general data protection regulation
   (GDPR); Regulatory compliance; Data processing agreements (DPAs);
   Artificial intelligence (AI); Natural language processing (NLP);
   Classification; Large language models (LLMs); Few-shot learning (FSL);
   Data augmentation
ID AGREEMENT
AB Specifying legal requirements for software systems to ensure their compliance with the applicable regulations is a major concern of requirements engineering. Personal data which is collected by an organization is often shared with other organizations to perform certain processing activities. In such cases, the General Data Protection Regulation (GDPR) requires issuing a data processing agreement (DPA) which regulates the processing and further ensures that personal data remains protected. Violating GDPR can lead to huge fines reaching to billions of Euros. Software systems involving personal data processing must adhere to the legal obligations stipulated both at a general level in GDPR as well as the obligations outlined in DPAs highlighting specific business. In other words, a DPA is yet another source from which requirements engineers can elicit legal requirements. However, the DPA must be complete according to GDPR to ensure that the elicited requirements cover the complete set of obligations. Therefore, checking the completeness of DPAs is a prerequisite step towards developing a compliant system. Analyzing DPAs with respect to GDPR entirely manually is time consuming and requires adequate legal expertise. In this paper, we propose an automation strategy that addresses the completeness checking of DPAs against GDPR provisions as a text classification problem. Specifically, we pursue ten alternative solutions which are enabled by different technologies, namely traditional machine learning, deep learning, language modeling, and few-shot learning. The goal of our work is to empirically examine how these different technologies fare in the legal domain. We computed F 2 \documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document}$$_2$$\end{document} score on a set of 30 real DPAs. Our evaluation shows that best-performing solutions yield F 2 \documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document}$$_2$$\end{document} score of 86.7% and 89.7% are based on pre-trained BERT and RoBERTa language models. Our analysis further shows that other alternative solutions based on deep learning (e.g., BiLSTM) and few-shot learning (e.g., SetFit) can achieve comparable accuracy, yet are more efficient to develop.
C1 [Azeem, Muhammad Ilyas; Abualhaija, Sallam] Univ Luxembourg, SnT, Esch Sur Alzette, Luxembourg.
C3 University of Luxembourg
RP Abualhaija, S (corresponding author), Univ Luxembourg, SnT, Esch Sur Alzette, Luxembourg.
EM ilyasazeem@live.com; sallam.abualhaija@uni.lu
RI Abualhaija, Sallam/KYQ-9260-2024
OI Abualhaija, Sallam/0000-0001-6095-447X
FU Fonds National de la Recherche Luxembourg
   [BRIDGES/19/IS/13759068/ARTAGO]; Linklaters and Luxembourg's National
   Research Fund [NCER22/IS/16570468/NCER-FT]; Luxembourg National Research
   Fund (FNR)
FX This paper was supported by Linklaters and Luxembourg's National
   Research Fund under grant BRIDGES/19/IS/13759068/ARTAGO. This research
   was further funded in whole, or in part, by the Luxembourg National
   Research Fund (FNR), grant reference NCER22/IS/16570468/NCER-FT. For the
   purpose of open access, and in fulfillment of the obligations arising
   from the grant agreement, the author has applied a Creative Commons
   Attribution 4.0 International (CC BY 4.0) license to any Author Accepted
   Manuscript version arising from this submission.
CR Abualhaija S, 2022, 2022 30TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE (RE 2022), P39, DOI 10.1109/RE54965.2022.00011
   Akhigbe O, 2022, SOFTW SYST MODEL, V21, P1613, DOI 10.1007/s10270-021-00949-z
   Al-Kaswan A, 2023, Arxiv, DOI arXiv:2302.13149
   Alhoshan W, 2023, INFORM SOFTWARE TECH, V159, DOI 10.1016/j.infsof.2023.107202
   Amaral O, 2022, IEEE T SOFTWARE ENG, V48, P4647, DOI 10.1109/TSE.2021.3124332
   Amaral O, 2021, 29TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW 2021), P16, DOI 10.1109/REW53955.2021.00009
   Amaral Orlando, 2023, 2023 IEEE 31 INT REQ, P53
   Arora C, 2019, EMPIR SOFTW ENG, V24, P2509, DOI 10.1007/s10664-019-09693-x
   Barati M, 2020 INT S NETW COMP, P1
   Barati M, 2020, IEEE ACCESS, V8, P119697, DOI 10.1109/ACCESS.2020.3005509
   Bashir S, 2023, LECT NOTES COMPUT SC, V13975, P105, DOI 10.1007/978-3-031-29786-1_8
   Bergstra J, 2012, J MACH LEARN RES, V13, P281
   Berry DM, 2017, 2017 IEEE 25TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW), P284, DOI 10.1109/REW.2017.25
   Bhatia J, 2019, REQUIR ENG, V24, P291, DOI 10.1007/s00766-019-00315-y
   Bird Steven., 2006, P COLING ACL 2006 IN, P69, DOI 10.3115/1225403.1225421
   Branco P, 2016, ACM COMPUT SURV, V49, DOI 10.1145/2907070
   Breaux TD, 2022, 2022 30TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE (RE 2022), P101, DOI 10.1109/RE54965.2022.00016
   Breitbarth Paul, 2019, Network Security, V2019, P11, DOI 10.1016/S1353-4858(19)30084-4
   Cejas OA, 2023, IEEE T SOFTWARE ENG, V49, P4282, DOI 10.1109/TSE.2023.3288901
   Chalkidis I, 2020, Arxiv, DOI arXiv:2010.02559
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Dalpiaz F, 2018, LECT NOTES COMPUT SC, V10753, P119, DOI 10.1007/978-3-319-77243-1_8
   Devlin J, 2019, Arxiv, DOI arXiv:1810.04805
   European Commission, 2018, Official Journal of the European Union, P75
   European Union, 2018, Justice and Consumers
   Feal A, 2021, Data Protection and Privacy, Volume 13: Data Protection and Artificial Intelligence, V13, P1
   Fellbaum C., 1998, WordNet: An electronic lexical database, V1, DOI [10.7551/mitpress/7287.001.0001, DOI 10.7551/MITPRESS/7287.001.0001]
   Ferrari Alessio, 2014, Requirements Engineering: Foundation for Software Quality. 20th International Working Conference, REFSQ 2014. Proceedings: LNCS 8396, P23, DOI 10.1007/978-3-319-05843-6_3
   Freitas MdC., 2018, J. Inf. Syst. Eng. Manag., V3, P30, DOI DOI 10.20897/JISEM/3941
   Gebauer M, 2023, Arxiv, DOI arXiv:2305.15006
   Ghanavati S, 2014, INT REQUIR ENG CONF, P73, DOI 10.1109/RE.2014.6912249
   Gokaslan Aaron, 2019, OPENWEBTEXT CORPUS
   Halterman A, 2023, Arxiv, DOI arXiv:2304.01331
   Halterman A, 2023, Arxiv, DOI arXiv:2303.16028
   Ingolfo S, 2014, INT REQUIR ENG CONF, P313, DOI 10.1109/RE.2014.6912273
   Islam QN, 2015, Mastering PyCharm
   Ji YS, 2011, J COMPUT SCI TECH-CH, V26, P81, DOI 10.1007/s11390-011-9417-6
   Johansson E, 2019, ACRN Journal of Finance and Risk Perspectives, V8, P71
   Kashyap AR, 2024, Arxiv, DOI arXiv:2305.12641
   Pushp PK, 2017, Arxiv, DOI arXiv:1712.05972
   Lan ZZ, 2020, Arxiv, DOI [arXiv:1909.11942, DOI 10.48550/ARXIV.1909.11942]
   Li BH, 2022, AI OPEN, V3, P71, DOI 10.1016/j.aiopen.2022.03.001
   Liu YH, 2019, Arxiv, DOI [arXiv:1907.11692, DOI 10.48550/ARXIV.1907.11692]
   Luitel D, 2023, LECT NOTES COMPUT SC, V13975, P87, DOI 10.1007/978-3-031-29786-1_7
   Matulevicius Raimundas, 2020, Advanced Information Systems Engineering. CAiSE Forum 2020. Proceedings. Lecture Notes in Business Information Processing (LNBIP 386), P100, DOI 10.1007/978-3-030-58135-0_9
   Maxwell JC, 2012, REQUIR ENG, V17, P99, DOI 10.1007/s00766-012-0152-5
   MILLER GA, 1995, COMMUN ACM, V38, P39, DOI 10.1145/219717.219748
   Montgomery L, 2022, REQUIR ENG, V27, P183, DOI 10.1007/s00766-021-00367-z
   Nagel S, 2016, Cc-news
   Otto PN, 2007, INT REQUIR ENG CONF, P5, DOI 10.1109/RE.2007.65
   Pantlin N, 2018, COMPUT LAW SECUR REV, V34, P881, DOI 10.1016/j.clsr.2018.06.009
   Paszke A, 2019, ADV NEUR IN, V32
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Pullonen P, 2019, SOFTW SYST MODEL, V18, P3235, DOI 10.1007/s10270-019-00718-z
   Rasiman R, 2022, LECT NOTES COMPUT SC, V13216, P35, DOI 10.1007/978-3-030-98464-9_4
   Reimers N, 2019, 2019 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING AND THE 9TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING (EMNLP-IJCNLP 2019), P3982
   Rossum G, 2009, Python 3 Reference Manual, DOI DOI 10.5555/1593511
   Schick T, 2022, T ASSOC COMPUT LING, V10, P716, DOI 10.1162/tacl_a_00485
   Singhal A, 2022, P 1 INT C AI ENG SOF, P145, DOI DOI 10.1145/3522664.3528604
   Sleimi A, 2019, INT REQUIR ENG CONF, P319, DOI 10.1109/RE.2019.00041
   Soltana G, 2018, SOFTW SYST MODEL, V17, P851, DOI 10.1007/s10270-016-0542-0
   Soltana G, 2014, LECT NOTES COMPUT SC, V8767, P450, DOI 10.1007/978-3-319-11653-2_28
   Torre D, 2021, SOFTW SYST MODEL, V20, P2071, DOI 10.1007/s10270-021-00935-5
   Torre D, 2020, INT REQUIR ENG CONF, P136, DOI 10.1109/RE48521.2020.00025
   Torre D, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2019), P1, DOI 10.1109/MODELS.2019.00-20
   Tunstall L, 2022, P 36 C NEUR INF PROC
   Viera AJ, 2005, FAM MED, V37, P360
   Wolf T, 2020, PROCEEDINGS OF THE 2020 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING: SYSTEM DEMONSTRATIONS, P38
   Zeni N, 2015, REQUIR ENG, V20, P1, DOI 10.1007/s00766-013-0181-8
   Zhu YK, 2015, IEEE I CONF COMP VIS, P19, DOI 10.1109/ICCV.2015.11
   Zowghi D., 2002, International Workshop on Requirements Engineering: Foundations for Software Quality, P155
NR 71
TC 0
Z9 0
U1 1
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2024
VL 29
IS 4
AR 96
DI 10.1007/s10664-024-10491-3
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UL4T9
UT WOS:001248208700001
OA hybrid
DA 2024-08-05
ER

PT J
AU Guerra, E
   Gomes, E
   Ferreira, J
   Wiese, I
   Lima, P
   Gerosa, M
   Meirelles, P
AF Guerra, Eduardo
   Gomes, Everaldo
   Ferreira, Jeferson
   Wiese, Igor
   Lima, Phyllipe
   Gerosa, Marco
   Meirelles, Paulo
TI How do annotations affect Java code readability?
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Code annotations; Program comprehension; Code readability; Software
   engineering
AB ContextCode annotations have gained widespread popularity in programming languages, offering developers the ability to attach metadata to code elements to define custom behaviors. Many modern frameworks and APIs use annotations to keep integration less verbose and located nearer to the corresponding code element. Despite these advantages, practitioners' anecdotal evidence suggests that annotations might negatively affect code readability.ObjectiveTo better understand this effect, this paper systematically investigates the relationship between code annotations and code readability.MethodIn a survey with software developers (n=332), we present 15 pairs of Java code snippets with and without code annotations. These pairs were designed considering five categories of annotation used in real-world Java frameworks and APIs. Survey participants selected the code snippet they considered more readable for each pair and answered an open question about how annotations affect the code's readability.ResultsPreferences were scattered for all categories of annotation usage, revealing no consensus among participants. The answers were spread even when segregated by participants' programming or annotation-related experience. Nevertheless, some participants showed a consistent preference in favor or against annotations across all categories, which may indicate a personal preference. Our qualitative analysis of the open-ended questions revealed that participants often praise annotation impacts on design, maintainability, and productivity but expressed contrasting views on understandability and code clarity.ConclusionsSoftware developers and API designers can consider our results when deciding whether to use annotations, equipped with the insight that developers express contrasting views of the annotations' impact on code readability.
C1 [Guerra, Eduardo] Free Univ Bozen Bolzano, Bozen Bolzano, BZ, Italy.
   [Gomes, Everaldo; Meirelles, Paulo] Univ Sao Paulo, Sao Paulo, SP, Brazil.
   [Ferreira, Jeferson] SONDA Brasil, Sao Paulo, SP, Brazil.
   [Wiese, Igor] Fed Technol Univ Parana, Campo Mourao, PR, Brazil.
   [Lima, Phyllipe] Univ Fed Itajuba, Itajuba, MG, Brazil.
   [Gerosa, Marco] No Arizona Univ, Flagstaff, AZ USA.
C3 Free University of Bozen-Bolzano; Universidade de Sao Paulo;
   Universidade Tecnologica Federal do Parana; Universidade Federal de
   Itajuba; Northern Arizona University
RP Meirelles, P (corresponding author), Univ Sao Paulo, Sao Paulo, SP, Brazil.
EM eduardo.guerra@unibz.it; everaldogjr@usp.br;
   jeferson.ferreira@sonda.com; igor@utfpr.edu.br; phyllipe@unifei.edu.br;
   marco.gerosa@nau.edu; paulormm@ime.usp.br
FU Fundao de Amparo Pesquisa do Estado de So Paulo [2019/12743-4]; FAPESP
   [408812/2021-4]; CNPq/MCTI/FNDCT [2021/06662-1]; MCTIC/CGI/FAPESP
   [2236198, 2247929, 2303042]; NSF
FX We thank all the respondents who spent their time answering our survey.
   We expect the results to benefit the developers and API designers and
   inspire new research on this topic. This work is partially supported by
   FAPESP (grant #2019/12743-4), CNPq/MCTI/FNDCT (grant #408812/2021-4),
   MCTIC/CGI/FAPESP (grant #2021/06662-1), and NSF (grants 2236198,
   2247929, and 2303042).
CR Baltes S, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962628
   Beelders TR, 2016, J EYE MOVEMENT RES, V9
   BENJAMINI Y, 1995, J R STAT SOC B, V57, P289, DOI 10.1111/j.2517-6161.1995.tb02031.x
   Bloch Joshua, 2008, Effective java
   Boehm B, 2001, COMPUTER, V34, P135, DOI 10.1109/2.962984
   Briand L., 1996, Empirical Software Engineering, V1, P61, DOI 10.1007/BF00125812
   Bugayenko Y, 2016, Java annotations are a big mistake
   Buse RPL, 2010, IEEE T SOFTWARE ENG, V36, P546, DOI 10.1109/TSE.2009.70
   Buttler DJ, 2009, Encyclopedia of Database Systems, P1580
   Chen N, 2006, Convention over configuration
   Córdoba-Sánchez I, 2016, COMPUT LANG SYST STR, V45, P164, DOI 10.1016/j.cl.2016.02.002
   Damyanov I, 2004, P 5 INT C COMP SYST, P1
   Dietl W, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P681, DOI 10.1145/1985793.1985889
   dos Santos RM, 2018, INT C PROGRAM COMPRE, P277, DOI 10.1145/3196321.3196342
   Ernst MD, 2008, JSR 308
   Fernandes C, 2010, Xml, annotations and database: a comparative study of metadata definition strategies for frameworks, P115
   Guerra Eduardo, 2020, SBES '20: Proceedings of the 34th Brazilian Symposium on Software Engineering, P499, DOI 10.1145/3422392.3422428
   Guerra E, 2008, Contemporary Modularization Techniques (ACoM 08), P13
   Guerra E., 2010, Proceedings of the 17th Conference on Pattern Languages of Programs (PLOP'10), p4:1, DOI [DOI 10.1145/2493288.2493292, 10.1145/2581507.2581514, DOI 10.1145/2581507.2581514]
   Guerra E, P 17 C PATT LANG PRO, P1
   Guerra E, 2016, P 11 LAT AM C PATT L, V16, P9
   Guerra E, 2013, LECT NOTES COMPUT SC, V7972, P391, DOI 10.1007/978-3-642-39643-4_29
   Guerra E, 2013, LECT NOTES COMPUT SC, V7972, P375, DOI 10.1007/978-3-642-39643-4_28
   Guerra E, 2013, J SYST SOFTWARE, V86, P1239, DOI 10.1016/j.jss.2012.12.024
   Guerra EM, 2009, P 3 WORKSH ASS CONT, V26, P35
   Gunawardena S, 2023, INFORM SOFTWARE TECH, V153, DOI 10.1016/j.infsof.2022.107054
   Hansen M, 2013, Arxiv, DOI arXiv:1304.5257
   Lawrie D, 2006, INT C PROGRAM COMPRE, P3, DOI 10.1109/ICPC.2006.51
   Lima P., 2020, J Open Source Softw, V5, P1960, DOI [10.21105/joss.01960, DOI 10.21105/JOSS.01960]
   Lima P, 2023, INFORM SOFTWARE TECH, V154, DOI 10.1016/j.infsof.2022.107089
   Lima P, 2018, J SYST SOFTWARE, V137, P163, DOI 10.1016/j.jss.2017.11.024
   Lucas W, 2019, PROCEEDINGS OF THE XXXIII BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING, SBES 2019, P187, DOI 10.1145/3350768.3350791
   McHugh ML, 2012, BIOCHEM MEDICA, V22, P276, DOI 10.11613/bm.2012.031
   Pantiuchina J, 2018, PROC IEEE INT CONF S, P80, DOI 10.1109/ICSME.2018.00017
   Piantadosi V, 2020, EMPIR SOFTW ENG, V25, P5374, DOI 10.1007/s10664-020-09886-9
   Posnett Daryl, 2011, P 8 WORKING C MINING, P73, DOI [10.1145/1985441.1985454, DOI 10.1145/1985441.1985454]
   Prana G.A.A., 2021, IEEE Trans. Softw. Eng.
   Quinonez J, 2008, LECT NOTES COMPUT SC, V5142, P616, DOI 10.1007/978-3-540-70592-5_26
   Raymond DarrellR., 1991, P 1991 C CTR ADV STU, P3
   Rugaber S, 2000, ANN SOFTW ENG, V9, P143, DOI 10.1023/A:1018976708691
   Scalabrino S, 2017, IEEE INT CONF AUTOM, P417, DOI 10.1109/ASE.2017.8115654
   Schröter I, 2017, INT C PROGRAM COMPRE, P308, DOI 10.1109/ICPC.2017.9
   Smite D, 2014, EMPIR SOFTW ENG, V19, P105, DOI 10.1007/s10664-012-9217-9
   Spencer D., 2009, CARD SORTING DESIGNI
   Stackoverflow, 2009, Arguments against annotations
   Steinmacher I, 2015, PROCEEDINGS OF THE 2015 ACM INTERNATIONAL CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING (CSCW'15), P1379, DOI 10.1145/2675133.2675215
   Storey MAD, 2000, SCI COMPUT PROGRAM, V36, P183, DOI 10.1016/S0167-6423(99)00036-2
   Strauss A. L., 1990, Basics of qualitative research
   Teixeira R, 2018, PROCEEDINGS OF THE 3RD ACM SIGPLAN INTERNATIONAL WORKSHOP ON META-PROGRAMMING TECHNIQUES AND REFLECTION (META '18), P15, DOI 10.1145/3281074.3281078
   Trinkenreich B, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3510460
   Uni Yarmouk., 2013, International Journal of Software Engineering and Its Applications, V7, P441
   Usman M, 2017, INFORM SOFTWARE TECH, V85, P43, DOI 10.1016/j.infsof.2017.01.006
   Wang Y, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN SOCIETY (ICSE-SEIS 2019), P1, DOI 10.1109/ICSE-SEIS.2019.00009
   Warski A, 2017, SoftwareMill Tech Blog
   Wheaton GR, 1968, Clearinghous
   Wulff-Jensen A, 2019, ADV INTELL SYST, V775, P91, DOI 10.1007/978-3-319-94866-9_9
   Yang HY, 2008, ASWEC 2008: 19TH AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P239, DOI 10.1109/ASWEC.2008.35
   Yu Z, 2019, IEEE Transactions on Software Engineering
NR 58
TC 0
Z9 0
U1 1
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAY
PY 2024
VL 29
IS 3
AR 62
DI 10.1007/s10664-024-10460-w
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RE3S8
UT WOS:001225960000001
DA 2024-08-05
ER

PT J
AU Xiao, L
   Zhao, GW
   Wang, X
   Li, KY
   Lim, E
   Wei, CH
   Yu, TT
   Wang, XY
AF Xiao, Lu
   Zhao, Gengwu
   Wang, Xiao
   Li, Keye
   Lim, Erick
   Wei, Chenhao
   Yu, Tingting
   Wang, Xiaoyin
TI An empirical study on the usage of mocking frameworks in Apache software
   foundation
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software testing; Mocking frameworks; Apache open-source projects
AB Mocking frameworks provide convenient APIs, which create mock objects, manipulate their behavior, and verify their execution, for the purpose of isolating test dependencies in unit testing. This study contributes an in-depth empirical study of whether and how mocking frameworks are used in Apache projects. The key findings and insights of this study include: First, mocking frameworks are widely used in 66% of Apache Java projects, with Mockito, EasyMock, and PowerMock being the top three most popular frameworks. Larger-scale and more recent projects tend to observe a stronger need to use mocking frameworks. This underscores the importance of mocking in practice and related future research. Second, mocking is overall practiced quite selectively in software projects-not all test files use mocking, nor all dependencies of a test target are mocked. It calls for more future research to gain a more systematic understanding of when and what to mock to provide formal guidance to practitioners. On top of this, the intensity of mocking in different projects shows different trends in the projects' evolution history-implying the compound effects of various factors, such as the pace of a project's growth, the available resources, time pressure, and priority, etc. This points to an important future research direction in facilitating best mocking practices in software evolution. Furthermore, we revealed the most frequently used APIs in the three most popular frameworks, organized based on the function types. The top five APIs in each functional type of the three mocking frameworks usually take the majority (78% to 100%) of usage in Apache projects. This indicates that developers can focus on these APIs to quickly learn the common usage of these mocking frameworks. We further investigated informal methods of mocking, which do not rely on any mocking framework. These informal mocking methods point to potential sub-optimal mocking practices that could be improved, as well as limitations of existing mocking frameworks. Finally, we conducted a developer survey to collect additional insights regarding the above analysis based on their experience, which complements our analysis based on repository mining. Overall, this study offers practitioners profound empirical knowledge of how mocking frameworks are used in practice and sheds light on future research directions to enhancing mocking in practice.
C1 [Xiao, Lu; Zhao, Gengwu; Wang, Xiao; Li, Keye; Lim, Erick; Wei, Chenhao] Stevens Inst Technol, Sch Syst & Enterprises, Castle Point Terrace, Hoboken, NJ 07030 USA.
   [Yu, Tingting] Univ Cincinnati, 2600 Clifton Ave, Cincinnati, OH 45221 USA.
   [Wang, Xiaoyin] Univ Texas San Antonio, 1 UTSA Circle, San Antonio, TX 78249 USA.
C3 Stevens Institute of Technology; University System of Ohio; University
   of Cincinnati; University of Texas System; University of Texas at San
   Antonio (UTSA)
RP Xiao, L (corresponding author), Stevens Inst Technol, Sch Syst & Enterprises, Castle Point Terrace, Hoboken, NJ 07030 USA.
EM lxiao6@stevens.edu; gzhao9@stevens.edu; xwang97@stevens.edu;
   cwei7@stevens.edu; tingting.yu@uc.edu; xiaoyin.wang@utsa.edu
RI xiao, lu/KRO-9302-2024
FU U.S. National Science Foundation (NSF) [CCF-1909085, CCF-1909763]
FX This work was supported in part by the U.S. National Science Foundation
   (NSF) under grants CCF-1909085 and CCF-1909763.
CR [Anonymous], 1990, IEEE Std 610.12-1990, DOI DOI 10.1109/IEEESTD.1990.101064
   [Anonymous], The Apache Software Foundation
   apache, Projects by category in apache software foundation
   apache, Welcome to the Apache Struts project
   apache, Apache PDFBox | a java PDF library
   apache, dev: Apache wink-index
   Arcuri A, 2017, IEEE INT CONF SOFTW, P126, DOI 10.1109/ICST.2017.19
   Barker Deane., 2016, WEB CONTENT MANAGEME
   Bertolino A, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P85, DOI 10.1109/FOSE.2007.25
   Briney K, 2015, RES SKILL SER, P1
   Buyya R., 2016, INTERNET THINGS PRIN
   Crowston K, 2006, COMPUTER, V39, P89, DOI 10.1109/MC.2006.152
   Daka E, 2014, PROC INT SYMP SOFTW, P201, DOI 10.1109/ISSRE.2014.11
   Dueñas JC, 2007, IEEE SOFTWARE, V24, P90, DOI 10.1109/MS.2007.157
   EasyMock, About us
   Fazzini M, 2022, PROC INT CONF SOFTW, P2266, DOI 10.1145/3510003.3510175
   Fazzini M, 2020, IEEE INT CONF AUTOM, P1204, DOI 10.1145/3324884.3418927
   Fosnacht K, 2017, REV HIGH EDUC, V40, P245, DOI 10.1353/rhe.2017.0003
   Freeman S, 2004, 19 ANN ACM SIGPLAN C, P4
   Freeman S., 2004, Companion to the 19th annual ACM SIGPLAN Conference on Object-oriented Programming Systems, Languages, and Applications, OOPSLA '04, P236
   Garousi V, 2013, J SYST SOFTWARE, V86, P1354, DOI 10.1016/j.jss.2012.12.051
   github, About Us
   github, moq
   github, PowerMock framework site
   google, Mockito release notes
   Henderson F, 2020, Arxiv, DOI arXiv:1702.01715
   Hunt A, 2004, Pragmatic Programmers
   junit, JUnit 5
   Kaner C., 1999, TESTING COMPUTER S
   Karlesky M, 2007, P EMB SYST C CA US, P1518
   Kim SS, 2016, Mocking embedded hardware for software validation
   Marri MR, 2009, 2009 ICSE WORKSHOP ON AUTOMATION OF SOFTWARE TEST, P149, DOI 10.1109/IWAST.2009.5069054
   Mockaroo, about us
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Mockus A., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P263, DOI 10.1109/ICSE.2000.870417
   Mostafa S, 2014, INT CONF QUAL SOFTW, P127, DOI 10.1109/QSIC.2014.19
   mvnrepository, Maven Repository
   Myers GJ, 2012, ART OF SOFTWARE TESTING, 3RD EDITION, P1
   Nandigam J, 2009, PROCEEDINGS OF THE 2009 SIXTH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: NEW GENERATIONS, VOLS 1-3, P713, DOI 10.1109/ITNG.2009.268
   NMock, A Dynamic Mock Object Library for.NET
   Pereira G, 2020, PROC IEEE INT CONF S, P453, DOI 10.1109/ICSME46990.2020.00050
   Rigby PC, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P541
   Runeson P, 2006, IEEE SOFTWARE, V23, P22, DOI 10.1109/MS.2006.91
   Severance C, 2012, COMPUTER, V45, P8, DOI 10.1109/MC.2012.355
   Solms F, 2016, P ANN C S AFR I COMP, P1
   Spadini D, 2019, EMPIR SOFTW ENG, V24, P1461, DOI 10.1007/s10664-018-9663-0
   Spadini D, 2017, IEEE WORK CONF MIN S, P402, DOI 10.1109/MSR.2017.61
   Svensgard S, 2017, Mocking saas cloud for testing
   Taneja K., 2010, ASE, P289
   Unittest, mock-mock object library
   Wang X, 2021, Understanding and facilitating the usage of mocking frameworks for test dependency isolation
   Wang X, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P540, DOI 10.1145/3468264.3468590
   Web E, 2013, Eclipse JDT™(Java development tools)
   Weiss M, 2006, INT FED INFO PROC, V203, P21
   Zhu HC, 2020, IEEE INT CONF AUTOM, P436, DOI 10.1145/3324884.3416539
NR 55
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2024
VL 29
IS 2
AR 39
DI 10.1007/s10664-023-10410-y
PG 53
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FR1K8
UT WOS:001147486600001
OA hybrid
DA 2024-08-05
ER

PT J
AU Tomova, M
   Hofmann, M
   Huetterer, C
   Mäder, P
AF Tomova, Mihaela
   Hofmann, Martin
   Huetterer, Constantin
   Maeder, Patrick
TI Assessing the utility of text-to-SQL approaches for satisfying software
   developer information needs
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software analytics; Database querying; Natural language processing;
   Text-to-SQL; Machine learning; Complex queries
ID VISUAL LANGUAGE; MODEL
AB Software analytics integrated with complex databases can deliver project intelligence into the hands of software engineering (SE) experts for satisfying their information needs. A new and promising machine learning technique known as text-to-SQL automatically extracts information for users of complex databases without the need to fully understand the database structure nor the accompanying query language. Users pose their request as so-called natural language utterance, i.e., question. Our goal was evaluating the performance and applicability of text-to-SQL approaches on data derived from tools typically used in the workflow of software engineers for satisfying their information needs. We carefully selected and discussed five seminal as well as state-of-the-art text-to-SQL approaches and conducted a comparative assessment using the large-scale, cross-domain Spider dataset and the SE domain-specific SEOSS-Queries dataset. Furthermore, we study via a survey how SE professionals perform in satisfying their information needs and how they perceive text-to-SQL approaches. For the best performing approach, we observe a high accuracy of 94% in query prediction when training specifically on SE data. This accuracy is almost independent of the query's complexity. At the same time, we observe that SE professionals have substantial deficits in satisfying their information needs directly via SQL queries. Furthermore, SE professionals are open for utilizing text-to-SQL approaches in their daily work, considering them less time-consuming and helpful. We conclude that state-of-the-art text-to-SQL approaches are applicable in SE practice for day-to-day information needs.
C1 [Tomova, Mihaela; Hofmann, Martin; Huetterer, Constantin; Maeder, Patrick] Tech Univ Ilmenau, D-98693 Ilmenau, Germany.
   [Maeder, Patrick] Friedrich Schiller Univ, Fac Biol Sci, D-07743 Jena, Germany.
C3 Technische Universitat Ilmenau; Friedrich Schiller University of Jena
RP Tomova, M (corresponding author), Tech Univ Ilmenau, D-98693 Ilmenau, Germany.
EM mihaela-todorova.tomova@tu-ilmenau.de
RI Mäder, Patrick/A-1848-2018
OI Mäder, Patrick/0000-0001-6871-2707
FU Deutsche Forschungsgemeinschaft [MA 5030/3-1]; DFG [16DHB4009]; BMBF
FX Our work is funded by DFG grant: MA 5030/3-1 and BMBF grant: 16DHB4009.
CR Abdellatif A, 2020, EMPIR SOFTW ENG, V25, P1834, DOI 10.1007/s10664-019-09788-5
   [Anonymous], 2023, SEOSS-Queries Repository
   [Anonymous], 2023, GitHub Copilot
   [Anonymous], 2023, Evaluation script spider
   apache, Apache Pig project
   Assembla, 2023, About us
   Atlassian JIRA, 2023, About us
   Bahdanau D, 2016, Arxiv, DOI arXiv:1409.0473
   Begel A, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P12, DOI 10.1145/2568225.2568233
   Bertram D, 2010, 2010 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, P291
   Cao RS, 2021, 59TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS AND THE 11TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING, VOL 1 (ACL-IJCNLP 2021), P2541
   Ciniselli M, 2022, IEEE T SOFTWARE ENG, V48, P4818, DOI 10.1109/TSE.2021.3128234
   Clark K, 2020, ICLR OpenReview net
   CODD EF, 1970, COMMUN ACM, V13, P377, DOI 10.1145/357980.358007
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   Fritz T., 2010, Proceedings of the 32nd International Conference on Software Engineering - Volume 1, ICSE '10, V1, P175
   gitee, 2023, About us
   github, 2023, About Us
   github, 2023, SQLNetSpider version
   Godfrey MW, 2009, IEEE SOFTWARE, V26, P67, DOI 10.1109/MS.2009.10
   Graves A, 2012, STUD COMPUT INTELL, V385, P1, DOI [10.1162/neco.1997.9.8.1735, 10.1007/978-3-642-24797-2, 10.1162/neco.1997.9.1.1]
   Green Bert F., 1961, IRE-AIEE-ACM '61 (Western)), P219, DOI DOI 10.1145/1460690.1460714
   Guo JQ, 2019, 57TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2019), P4524
   Hassan AE, 2006, PROC IEEE INT CONF S, P339
   Hassan AE, 2008, 2008 FRONTIERS OF SOFTWARE MAINTENANCE, P48, DOI 10.1109/FOSM.2008.4659248
   Hongjun Lee, 1993, SIGMOD Record, V22, P60, DOI 10.1145/166635.166656
   ibm, 2023, Requirements management products
   Janke M, 2022, IEEE T SOFTWARE ENG, V48, P848, DOI 10.1109/TSE.2020.3004892
   Kajiura T, 2022, APSEC
   Keivanloo I., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P32, DOI 10.1109/MSR.2012.6224296
   Ko AJ, 2007, PROC INT CONF SOFTW, P344
   Kojima Takeshi, 2022, NeurIPS
   Kolovos Dimitris, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P155, DOI 10.1109/MSR.2019.00032
   Kudo T, 2018, CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2018): PROCEEDINGS OF SYSTEM DEMONSTRATIONS, P66
   Lee CLE, 2021, Arxiv, DOI arXiv:2105.03317
   Lin JF, 2017, IEEE INT CONF AUTOM, P973, DOI 10.1109/ASE.2017.8115714
   Liu YH, 2019, Arxiv, DOI [arXiv:1907.11692, DOI 10.48550/ARXIV.1907.11692]
   Lohar S, 2015, JOINT P REFSQ 2015 W, V1342, P207
   Mäder P, 2013, SOFTW SYST MODEL, V12, P537, DOI 10.1007/s10270-012-0237-0
   Mastropaolo A, 2022, PROC INT CONF SOFTW, P2279, DOI 10.1145/3510003.3511561
   Maven, 2023, about us
   Nan LY, 2022, T ASSOC COMPUT LING, V10, P35, DOI 10.1162/tacl_a_00446
   OpenAI ChatGPT, 2023, US
   Pennington J., 2014, GLOVE GLOBAL VECTORS, DOI DOI 10.3115/V1/D14-1162
   Portillo-Rodriguez J, 2010, ICGSE
   Raffel C, 2020, J MACH LEARN RES, V21
   Rath M, 2018, ICSE
   Rath M, 2019, DATA BRIEF, V25, DOI 10.1016/j.dib.2019.104005
   Rath M, 2017, INT REQUIR ENG CONF, P516, DOI 10.1109/RE.2017.18
   Rubin O, 2021, 2021 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL-HLT 2021), P311
   Scholak T, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P9895
   Schuster M, 1997, IEEE T SIGNAL PROCES, V45, P2673, DOI 10.1109/78.650093
   Selenium site, 2023, About us
   Shang WY, 2014, PROC IEEE INT CONF S, P21, DOI 10.1109/ICSME.2014.24
   Shaw P., 2018, Self-attention with relative position representations, P464
   Shaw P, 2021, 59TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS AND THE 11TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING, VOL 1 (ACL-IJCNLP 2021), P922
   Störrle H, 2011, J VISUAL LANG COMPUT, V22, P3, DOI 10.1016/j.jvlc.2010.11.004
   Sutskever I., 2014, Advances in Neural Information Processing Systems, P3104
   Tomova MT, 2022, DATA BRIEF, V42, DOI 10.1016/j.dib.2022.108211
   Vaswani A, 2017, ADV NEUR IN, V30
   Vinyals O., 2015, ADV NEURAL INFORM PR, V28
   WALTZ DL, 1978, COMMUN ACM, V21, P526, DOI 10.1145/359545.359550
   Wang Bailin, 2020, ACL, P7567
   Woods WilliamA., 1977, Lunar rocks in natural english: explorations in natural language question answering
   Xu XJ, 2017, Arxiv, DOI arXiv:1711.04436
   yale-lily.github, 2023, Spider Leaderboard
   Yin PC, 2017, PROCEEDINGS OF THE 55TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2017), VOL 1, P440, DOI 10.18653/v1/P17-1041
   Yu T, 2018, 2018 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2018), P3911
   Yu Tao, 2018, P 2018 C N AM CHAPT, P588
   Yu Tao, 2021, ICLR
   Zhang XY, 2020, IEEE ACCESS, V8, P136409, DOI 10.1109/ACCESS.2020.3011747
   Zhong VC, 2017, Arxiv, DOI arXiv:1709.00103
NR 72
TC 0
Z9 0
U1 2
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2024
VL 29
IS 1
AR 15
DI 10.1007/s10664-023-10374-z
PG 48
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA Z6KO5
UT WOS:001113148200004
OA hybrid
DA 2024-08-05
ER

PT J
AU Tang, XZ
   Tian, HY
   Kong, PF
   Ezzini, S
   Liu, K
   Xia, X
   Klein, J
   Bissyandé, TF
AF Tang, Xunzhu
   Tian, Haoye
   Kong, Pingfan
   Ezzini, Saad
   Liu, Kui
   Xia, Xin
   Klein, Jacques
   Bissyande, Tegawende F.
TI App review driven collaborative bug finding
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Bug finding; App review; Bug similarity; Bug report
AB Software development teams generally welcome any effort to expose bugs in their code base. In this work, we build on the hypothesis that mobile apps from the same category (e.g., two web browser apps) may be affected by similar bugs in their evolution process. It is therefore possible to transfer the experience of one historical app to quickly find bugs in its new counterparts. This has been referred to as collaborative bug finding in the literature. Our novelty is that we guide the bug finding process by considering that existing bugs have been hinted within app reviews. Concretely, we design the BugRMSys approach to recommend bug reports for a target app by matching historical bug reports from apps in the same category with user app reviews of the target app. We experimentally show that this approach enables us to quickly expose and report dozens of bugs for targeted apps such as Brave (web browser app). BugRMSys 's implementation relies on DistilBERT to produce natural language text embeddings. Our pipeline considers similarities between bug reports and app reviews to identify relevant bugs. We then focus on the app review as well as potential reproduction steps in the historical bug report (from a same-category app) to reproduce the bugs. Overall, after applying BugRMSys to six popular apps, we were able to identify, reproduce and report 20 new bugs: among these, 9 reports have been already triaged, 6 were confirmed, and 4 have been fixed by official development teams.
C1 [Tang, Xunzhu; Tian, Haoye; Kong, Pingfan; Klein, Jacques; Bissyande, Tegawende F.] Univ Luxembourg, SnT, Luxembourg, Luxembourg.
   [Liu, Kui; Xia, Xin] Huawei, Hangzhou, Peoples R China.
   [Ezzini, Saad] Univ Lancaster, Sch Comp & Commun, Lancaster, England.
C3 University of Luxembourg; Huawei Technologies; Lancaster University
RP Tang, XZ (corresponding author), Univ Luxembourg, SnT, Luxembourg, Luxembourg.
EM xunzhu.tang@uni.lu; haoye.tian@uni.lu; fandsec@gmail.com;
   s.ezzini@lancaster.ac.uk; brucekuiliu@gmail.com; xin.xia@acm.org;
   jacques.klein@uni.lu; tegawende.bissyande@uni.lu
OI TIAN, Haoye/0000-0002-8049-3997
FU H2020 European Research Council
FX The authors would like to thank all experts who participated in the
   evaluations for their valuable contributions.DAS:The datasets and code
   used in this work are available in the following link:
   https://zenodo.org/record/7520604#.Y71lnezML0o
CR Amalfitano D, 2018, SOFTW TEST VERIF REL, V28, DOI 10.1002/stvr.1654
   Bevan J, 2002, 15TH CONFERENCE ON SOFTWARE ENGINEERING EDUCATION AND TRAINING, PROCEEDINGS, P100, DOI 10.1109/CSEE.2002.995202
   Calcagno C, 2015, LECT NOTES COMPUT SC, V9058, P3, DOI 10.1007/978-3-319-17524-9_1
   Cames K, 2006, Recommendation
   Devlin J, 2019, Arxiv, DOI arXiv:1810.04805
   Faloutsos C, 2012, MOR KAUF D, P39
   Fan LL, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P408, DOI 10.1145/3180155.3180222
   Gao CY, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P163, DOI 10.1109/ASE.2019.00025
   Ghosh J, 2006, GROUPING MULTIDIMENSIONAL DATA: RECENT ADVANCES IN CLUSTERING, P73, DOI 10.1007/3-540-28349-8_3
   Haddi E, 2013, PROCEDIA COMPUT SCI, V17, P26, DOI 10.1016/j.procs.2013.05.005
   Haering M, 2021, PROC INT CONF SOFTW, P970, DOI 10.1109/ICSE43902.2021.00092
   Han X, 2019, J SYST SOFTWARE, V156, P268, DOI 10.1016/j.jss.2019.06.100
   Hassan S, 2018, EMPIR SOFTW ENG, V23, P1275, DOI 10.1007/s10664-017-9538-9
   Hu G, 2014, P 9 EUR C COMP SYST, P1
   Jiang H, 2017, LECT NOTES COMPUT SC, V10610, P192, DOI 10.1007/978-3-319-68690-5_12
   Kumar CPS, 2010, INT CONF ACOUST SPEE, P5010, DOI 10.1109/ICASSP.2010.5495067
   Lee S, 2016, IEEE INT CONF AUTOM, P250, DOI 10.1145/2970276.2970368
   Li HY, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P390, DOI 10.1145/3293882.3339000
   Liu Z, 2022, arXiv
   Long T, 2014, P 17 INT ACM SIGS S, P55
   Long T, 2016, IEEE INT CONF SOFTW, P364, DOI 10.1109/ICST.2016.38
   Loper E., 2002, arXiv
   Maalej W, 2016, REQUIR ENG, V21, P311, DOI 10.1007/s00766-016-0251-9
   Mahmood T., 2009, Information Technology and Tourism, V11, P285, DOI 10.3727/109830510X12670455864203
   Mao K, 2017, IEEE INT CONF AUTOM, P16, DOI 10.1109/ASE.2017.8115614
   Martens D, 2019, INT REQUIR ENG CONF, P131, DOI 10.1109/RE.2019.00024
   McIlroy S, 2016, EMPIR SOFTW ENG, V21, P1346, DOI 10.1007/s10664-015-9388-2
   Oh J, 2013, CHI 13 EXTENDED ABST, P1809
   Poerner N, 2020, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, EMNLP 2020, P803
   Sanh V, 2020, Arxiv, DOI [arXiv:1910.01108, 10.48550/arXiv.1910.01108]
   Sefferman A, 2015, Survey on user ratings and reviews
   Shani G, 2011, RECOMMENDER SYSTEMS HANDBOOK, P257, DOI 10.1007/978-0-387-85820-3_8
   Sitikhu P, 2019, 2019 ART INT TRANSF, V1, P1, DOI DOI 10.1109/AITB48515.2019.8947433
   Stanik C, 2019, 2019 IEEE 27TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW 2019), P220, DOI 10.1109/REW.2019.00046
   Su T, 2020, IEEE Trans Softw Eng
   Sun C, 2011, INT J CHEM ENG, V2011, DOI 10.1155/2011/545234
   Sun JL, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P204, DOI 10.1145/3460319.3464806
   Talukder MAI, 2019, P INT COMP SOFTW APP, P565, DOI 10.1109/COMPSAC.2019.00087
   Tan SH, 2020, PROC INT CONF SOFTW, P1335, DOI 10.1145/3377811.3380349
   Van Der Veen V, 2013, Master thesis
   Wang XY, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P461, DOI 10.1145/1368088.1368151
   WILBUR WJ, 1992, J INF SCI, V18, P45, DOI 10.1177/016555159201800106
   Yang XL, 2016, PROC INT SYMP SOFTW, P127, DOI 10.1109/ISSRE.2016.33
   Ye X, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P689, DOI 10.1145/2635868.2635874
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
   Zimmermann T, 2010, IEEE T SOFTWARE ENG, V36, P618, DOI 10.1109/TSE.2010.63
NR 46
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2024
VL 29
IS 5
AR 124
DI 10.1007/s10664-024-10489-x
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZU5A1
UT WOS:001277802200001
DA 2024-08-05
ER

PT J
AU Barnes, T
   Lee, KJ
   Tavares, C
   Rodríguez-Pérez, G
   Nagappan, M
AF Barnes, Tavian
   Lee, Ken Jen
   Tavares, Cristina
   Rodriguez-Perez, Gema
   Nagappan, Meiyappan
TI Towards understanding barriers and mitigation strategies of software
   engineers with non-traditional educational and occupational backgrounds
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software engineering; Diversity; Barriers; Mitigation strategies;
   Non-traditional educational background; Non-traditional occupational
   background
ID GROUNDED THEORY; DIVERSITY; PERFORMANCE; DIFFERENCE; INNOVATION;
   OUTCOMES
AB The traditional path to a software engineering career usually involves a post-secondary diploma in Software Engineering, Computer Science, or a related field. However, many individuals working as software engineers take a non-traditional path to their careers, starting from other industries or fields of study. This paper explores the barriers that individuals with non-traditional educational and occupational backgrounds face when pursuing a software engineering career and potential strategies to overcome those barriers. A two-stage methodology was used, consisting of an exploratory study followed by a follow-up survey. The exploratory study consisted of a grounded-theory-based qualitative analysis of relevant Reddit data to yield a framework around the barriers and possible mitigation strategies. These findings were then supplemented through a follow-up survey. Understanding these barriers and what strategies could be effective is an important step towards making software engineering more accessible to individuals with non-traditional backgrounds. In addition to fostering functional diversity, this might also serve to tackle labor shortages within the software engineering industry.
C1 [Barnes, Tavian; Lee, Ken Jen; Tavares, Cristina; Nagappan, Meiyappan] Univ Waterloo, David R Cheriton Sch Comp Sci, 200 Univ Ave W, Waterloo, ON N2L 3G1, Canada.
   [Rodriguez-Perez, Gema] Univ British Columbia, Dept Comp Sci Math Phys & Stat, 3187 Univ Way, Kelowna, BC V1V 1V7, Canada.
C3 University of Waterloo; University of British Columbia
RP Lee, KJ (corresponding author), Univ Waterloo, David R Cheriton Sch Comp Sci, 200 Univ Ave W, Waterloo, ON N2L 3G1, Canada.
EM tbarnes@uwaterloo.ca; kenjen.lee@uwaterloo.ca;
   cristina.tavares@uwaterloo.ca; gema.rodriguezperez@ubc.ca;
   mei.nagappan@uwaterloo.ca
RI Lee, Ken/KVY-1772-2024
CR Ahmed F, 2012, IT PROF, V14, P44, DOI 10.1109/MITP.2012.7
   Akbari O., 2020, AM INT J SOCIAL SCI, V5, P1, DOI DOI 10.46281/AIJSSR.V5I1.462
   Aldiabat KM, 2018, QUAL REP, V23, P245
   Amaya A, 2021, SOC SCI COMPUT REV, V39, P943, DOI 10.1177/0894439319893305
   [Anonymous], 2011, COMPUTING KRIPPENDOR
   Arthur R, 2021, PLOS ONE, V16, DOI 10.1371/journal.pone.0251431
   Association AP, 2017, Ethnic and racial minorities & socioeconomic status
   Baltes S, 2020, IEEE SOFTWARE, V37, P26, DOI 10.1109/MS.2020.3014178
   Barnes T, 2022, Towards understanding barriers and mitigation strategies of software engineers with non-traditional educational and occupational backgrounds
   Beierle F, 2017, 5 INT WORKSH BIBL EN
   Belzil C, 2007, LABOUR ECON, V14, P957, DOI 10.1016/j.labeco.2007.06.005
   Bozdag F, 2021, J GEN PSYCHOL, V148, P226, DOI 10.1080/00221309.2020.1867494
   Bunderson JS, 2002, ACAD MANAGE J, V45, P875, DOI 10.2307/3069319
   BURKS N, 1985, J HUM STRESS, V11, P27, DOI 10.1080/0097840X.1985.9936735
   Canada S, 2019, Strong growth in operating revenue, software development and computer service industries
   Canedo Edna Dias, 2021, SBES '21: Brazilian Symposium on Software Engineering, P378, DOI 10.1145/3474624.3474638
   Carless SA, 2011, J VOCAT BEHAV, V78, P80, DOI 10.1016/j.jvb.2010.09.002
   Castro MR, 2020, J VOCAT BEHAV, V122, DOI 10.1016/j.jvb.2020.103479
   Chen J, 2018, J GLOB INF MANAG, V26, P163, DOI 10.4018/JGIM.2018040108
   Clement J, 2021, Distribution of Reddit.com traffic 2021
   Coleman G, 2007, INFORM SOFTWARE TECH, V49, P654, DOI 10.1016/j.infsof.2007.02.011
   Commission USEEO, 2021, Prohibited employment policies/practices
   Connley Courtney., 2018, Google, Apple and 12 Other Companies that no Longer Require Employees to Have a College Degree
   Corbin J., 2015, BASICS QUALITATIVE R
   DataUSA, 2020, Computer science profile
   DataUSA, 2020, Computer software engineering profile
   Del Valle ME, 2021, CONVERGENCE-US, V27, P1811, DOI 10.1177/13548565211003878
   Dimopolulos A., 2020, Int J Human Res Stud, V10, P82, DOI [10.5296/ijhrs.v10i2.16701, DOI 10.5296/IJHRS.V10I2.16701]
   Eggleston L, 2021, 2020 Coding bootcamp alumni outcomes & demographics report
   Fallick B, 2006, REV ECON STAT, V88, P472, DOI 10.1162/rest.88.3.472
   Feng GC, 2014, QUAL QUANT, V48, P1803, DOI 10.1007/s11135-013-9956-8
   Forbes, 2021, Is there a developer shortage? Yes, but the problem is more complicated than it looks
   Ford D, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P846, DOI 10.1145/2950290.2950331
   Gold NE, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10057-7
   Guo WX, 2021, FRONT PSYCHOL, V12, DOI 10.3389/fpsyg.2021.585849
   Gupta M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P346, DOI 10.1109/MSR.2015.39
   Hann IH, 2013, INFORM SYST RES, V24, P520, DOI 10.1287/isre.2013.0474
   Harrison DA, 2007, ACAD MANAGE REV, V32, P1199, DOI 10.5465/AMR.2007.26586096
   Hay A, 2006, Career Dev Int
   Hayes AF, 2007, COMMUN METHODS MEAS, V1, P77, DOI 10.1080/19312450709336664
   Higgins MC, 2001, J ORGAN BEHAV, V22, P595, DOI 10.1002/job.104
   Hind P, 2005, Making room for career change
   Hoda R, 2022, IEEE T SOFTWARE ENG, V48, P3808, DOI 10.1109/TSE.2021.3106280
   Hylton S., 2022, Computer, V4, P667
   Hyrynsalmi S, 2019, INT ICE CONF ENG, P1, DOI DOI 10.1109/ice.2019.8792630
   IBISWorld, 2022, Software publishing industry in the US-market research report
   Janis I. L., 1972, VICTIMS GROUPTHINK P
   Janssen C., 2005, Introduction to the Four Rooms of Change Theory
   Jehn KA, 1999, ADMIN SCI QUART, V44, P741, DOI 10.2307/2667054
   Karunasekera S, 2007, CONF SOFTW ENG EDUC, P97, DOI 10.1109/CSEET.2007.39
   Kaur P, 2014, Int J Comput Appl, V97
   Kearney E, 2009, J APPL PSYCHOL, V94, P77, DOI 10.1037/a0013077
   Kelly J, 2022, Lyft, meta, salesforce and other tech companies are downsizing their real estate-why this is good news for remote workers
   Kumar P, 2018, PROCEEDINGS OF THE 51ST ANNUAL HAWAII INTERNATIONAL CONFERENCE ON SYSTEM SCIENCES (HICSS), P1933
   Lach-Aidelbaum M, 2022, These people needed new careers. They found them at coding boot camps
   LaToza T. D., 2006, 28th International Conference on Software Engineering Proceedings, P492, DOI 10.1145/1134285.1134355
   Leong FTL, 1996, J CAREER ASSESSMENT, V4, P315, DOI 10.1177/106907279600400306
   Lombard M, 2002, HUM COMMUN RES, V28, P587, DOI 10.1093/hcr/28.4.587
   Lorenzo R., 2018, Harvard Business Review, V30, P1
   Luan K, 2016, ASIA PAC J HUM RESOU, V54, P465, DOI 10.1111/1744-7941.12078
   Masood Z, 2020, EMPIR SOFTW ENG, V25, P4962, DOI 10.1007/s10664-020-09876-x
   Mohammadi A, 2017, J PROD INNOVAT MANAG, V34, P406, DOI 10.1111/jpim.12388
   Mondal S, 2022, 15 INN SOFTW ENG C I, DOI [10.1145/3511430.3511439, DOI 10.1145/3511430.3511439]
   Morrison P, 2016, S VIS LANG HUM CEN C, P171, DOI 10.1109/VLHCC.2016.7739681
   Mukhtar S, 2020, INT J SOC PSYCHIATR, V66, P512, DOI 10.1177/0020764020925835
   Naresh Bura, 2015, International Journal of Recent Research Aspects, V2, P38
   News C, 2023, The crunchbase tech layoffs tracker
   Obrenovic B, 2021, FRONT PSYCHOL, V12, DOI 10.3389/fpsyg.2021.648572
   Phillips KW, 2004, J EXP SOC PSYCHOL, V40, P497, DOI 10.1016/j.jesp.2003.10.003
   Proferes N., 2021, Social Media+ Society, V7, DOI [DOI 10.1177/20563051211019004, 10.1177/20563051211019004]
   Pushshift, 2018, Pushshift Reddit API v4.0 Documentation
   RHODES SR, 1983, ACAD MANAGE REV, V8, P631, DOI 10.2307/258264
   Richter AW, 2012, J APPL PSYCHOL, V97, P1282, DOI 10.1037/a0029359
   Rizwan M., 2016, Am J Mark Res, V2, P53
   Rodríguez-Pérez G, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09992-2
   SANDS JD, 1980, INT J AGING HUM DEV, V10, P335, DOI 10.2190/48RT-Y42M-19YK-FL85
   Sharma S, 2015, 2015 1ST INTERNATIONAL CONFERENCE ON FUTURISTIC TRENDS ON COMPUTATIONAL ANALYSIS AND KNOWLEDGE MANAGEMENT (ABLAZE), P28, DOI 10.1109/ABLAZE.2015.7154962
   Simons Starlene M, 2011, Journal of Technology Management & Innovation, V6, P171
   Somech A, 2006, J MANAGE, V32, P132, DOI 10.1177/0149206305277799
   Sparrow L, 2020, P 2020 DIGRA INT C P
   Stackoverflow, 2017, Stack overflow developer survey results 2017
   StackOverflow, 2016, Stack overflow developer survey results 2016
   StackOverflow, 2020, Stack overflow developer survey results 2020
   Stats S, 2022, Subreddit Stats
   Tkalich A, 2021, LECT NOTES BUS INF P, V434, P152, DOI 10.1007/978-3-030-91983-2_12
   Wilson G., 2017, ACM Inroads, V8, P66, DOI DOI 10.1145/3132706
NR 86
TC 0
Z9 0
U1 2
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2024
VL 29
IS 4
AR 82
DI 10.1007/s10664-024-10493-1
PG 47
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TB0R8
UT WOS:001238684900002
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Capilla, R
   Salamanca, V
   Valdezate, A
   Robles, G
AF Capilla, Rafael
   Salamanca, Victor
   Valdezate, Alejandro
   Robles, Gregorio
TI Can instability variations warn developers when open-source projects
   boost?
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Instability; Open source software; Evolution; Software architecture;
   Cathedral; Bazaar
ID SOFTWARE EVOLUTION; STABILITY; APACHE; GITHUB; SIZE
AB Although architecture instability has been studied and measured using a variety of metrics, a deeper analysis of which project parts are less stable and how such instability varies over time is still needed. While having more information on architecture instability is, in general, useful for any software development project, it is especially important in Open Source Software (OSS) projects where the supervision of the development process is more difficult to achieve. In particular, we are interested when OSS projects grow from a small controlled environment (i.e., the cathedral phase) to a community-driven project (i.e., the bazaar phase). In such a transition, the project often explodes in terms of software size and number of contributing developers. Hence, the complexity of the newly added features, and the frequency of the commits and files modified may cause significant variations of the instability of the structure of the classes and packages. Consequently, in this article we analyze the instability in OSS projects, especially during that sensitive phase where they become community-driven. Our results show that instability metrics can be easily obtained in such type of transitions. We also observed from our case studies that instability metrics can help finding out the balance between adding new functionality and performing refactoring. As a conclusions we state that instability metrics offer relevant information in the transition phase from the cathedral to the bazaar.
C1 [Capilla, Rafael; Salamanca, Victor; Robles, Gregorio] Univ Rey Juan Carlos, Madrid, Spain.
   [Valdezate, Alejandro] Int Univ La Rioja, Logrono, Spain.
C3 Universidad Rey Juan Carlos; Universidad Internacional de La Rioja
   (UNIR)
RP Capilla, R (corresponding author), Univ Rey Juan Carlos, Madrid, Spain.
EM rafael.capilla@urjc.es; victorsalamanza@gmail.com; valdezate@gmail.com;
   gregorio.robles@urjc.es
RI Robles, Gregorio/I-2507-2012
OI Robles, Gregorio/0000-0002-1442-6761; Capilla,
   Rafael/0000-0002-6943-1285
FU Universidad Rey Juan Carlos [PID2022-139551NB-I00]; Government of Spain
FX The research presented in this paper has been supported in part by the
   Government of Spain, through project Dependentium
   (PID2022-139551NB-I00).
CR Alenezi M, 2015, P INT C ENG MIS 2015
   Alshayeb M, 2005, J SYST SOFTWARE, V74, P269, DOI 10.1016/j.jss.2004.02.002
   Alshayeb M, 2011, IET SOFTW, V5, P415, DOI 10.1049/iet-sen.2010.0050
   Alves TL, 2011, IEEE INT WORK C SO, P145, DOI 10.1109/SCAM.2011.14
   Ampatzoglou A, 2015, IEEE T SOFTWARE ENG, V41, P781, DOI 10.1109/TSE.2015.2414917
   [Anonymous], 1995, The mythical man-month: essays on software engineering
   [Anonymous], 2012, P ACM SIGSOFT 20 INT
   Arvanitou E-M, 2017, P 21 INT C EV ASS SO
   Arvanitou EM, 2015, INT SYMP EMP SOFTWAR, P192, DOI 10.1109/ESEM.2015.7321204
   Aversano L, 2018, PROCEEDINGS OF THE 51ST ANNUAL HAWAII INTERNATIONAL CONFERENCE ON SYSTEM SCIENCES (HICSS), P5645
   Baig JJA, 2019, INFORM SOFTWARE TECH, V116, DOI 10.1016/j.infsof.2019.08.004
   Benkoczi R, 2020, PROC INT CONF SOFTW, P272, DOI 10.1145/3377812.3390909
   Bhowmik T, 2016, IEEE T CYBERNETICS, V46, P1784, DOI 10.1109/TCYB.2015.2420316
   Borges H, 2018, J SYST SOFTWARE, V146, P112, DOI 10.1016/j.jss.2018.09.016
   Brown A, 2011, The Architecture of Open Source Applications: Elegance, Evolution, and a Few Fearless Hacks
   Capiluppi A, 2007, INT FED INFO PROC, V234, P31
   Carrillo C, 2015, P 2015 EUR C SOFTW A
   Carrillo C, 2018, ECSA 2018: PROCEEDINGS OF THE 12TH EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE: COMPANION PROCEEDINGS, DOI 10.1145/3241403.3241446
   Chawla M. K., 2015, P 8 ANN ACM IND C P 8 ANN ACM IND C NE, P9
   Coelho J, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P186, DOI 10.1145/3106237.3106246
   Díaz J, 2011, LECT NOTES COMPUT SC, V6903, P114, DOI 10.1007/978-3-642-23798-0_12
   Dinh-Trong TT, 2005, IEEE T SOFTWARE ENG, V31, P481, DOI 10.1109/TSE.2005.73
   Le DM, 2016, 2016 13TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P178, DOI 10.1109/WICSA.2016.15
   Dueñas JC, 2007, IEEE SOFTWARE, V24, P90, DOI 10.1109/MS.2007.157
   Dueñas S, 2018, PROC IEEE ACM INT C, P1, DOI 10.1145/3183440.3183475
   Dyer R, 2015, ACM T SOFTW ENG METH, V25, DOI 10.1145/2803171
   Ferreira Fabio, 2020, SBES '20: Proceedings of the 34th Brazilian Symposium on Software Engineering, P447, DOI 10.1145/3422392.3422433
   Fontana FA, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE WORKSHOPS (ICSAW), P282, DOI 10.1109/ICSAW.2017.16
   Fontana FA, 2016, PROC IEEE INT CONF S, P433, DOI 10.1109/ICSME.2016.33
   Franco-Bedoya O, 2017, INFORM SOFTWARE TECH, V91, P160, DOI 10.1016/j.infsof.2017.07.007
   Garcia J, 2021, IEEE T SOFTWARE ENG, V48, P2439, DOI 10.1109/TSE.2021.3060068
   Gonzalez-Barahona JM, 2014, J SOFTW-EVOL PROC, V26, P589, DOI 10.1002/smr.1615
   Gupta A, 2021, INT J SYST ASSUR ENG, V12, P65, DOI 10.1007/s13198-020-01036-0
   Herzig K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P392, DOI 10.1109/ICSE.2013.6606585
   Hoegl M., 2005, BUS HORIZONS, V48, P209, DOI [DOI 10.1016/J.BUSHOR.2004.10.013, DOI 10.1016/j.bushor.2004.10.013]
   Hussain S, 2019, PLOS ONE, V14, DOI 10.1371/journal.pone.0221780
   Kim D.K., 2017, Int. J. Electr. Comput. Eng. (IJECE), V7, P3613, DOI [DOI 10.11591/IJECE.V7I6.PP3613-3621, 10.11591/ijece. v7i6.pp3613-3621, 10.11591/ijece.v7i6.pp3613-3621]
   Koch S, 2007, J SOFTW MAINT EVOL-R, V19, P361, DOI 10.1002/smr.348
   Krishnamurthy Sandeep., 2002, First Monday, V7
   Laser MS, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1546, DOI 10.1145/3368089.3417941
   Li BX, 2013, SOFTW TEST VERIF REL, V23, P613, DOI 10.1002/stvr.1475
   Li W, 2000, INFORM SOFTWARE TECH, V42, P373, DOI 10.1016/S0950-5849(99)00088-9
   Lin B, 2017, INT CONF GLOBAL SOFT, P66, DOI 10.1109/ICGSE.2017.11
   Malhotra R, 2016, 2016 INTERNATIONAL CONFERENCE ON ADVANCES IN COMPUTING, COMMUNICATIONS AND INFORMATICS (ICACCI), P1576, DOI 10.1109/ICACCI.2016.7732273
   Mansour Nashat, 2006, Journal of Computational Methods in Science and Engineering, V6, P23
   Martin R., 1994, OO DESIGN QUALITY ME
   McConnell S., 2006, Software Estimation: Demystifying the Black Art
   Midha V, 2012, J SYST SOFTWARE, V85, P895, DOI 10.1016/j.jss.2011.11.010
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Moore S, 2016, 2016 RESILIENCE WEEK (RWS), P46, DOI 10.1109/RWEEK.2016.7573305
   Munaiah N, 2017, EMPIR SOFTW ENG, V22, P3219, DOI 10.1007/s10664-017-9512-6
   Ralph P, 2021, ACM Sigsoft Empirical Standards for Software Engineering Research
   Ramchandran A, 2022, IEEE WORK CONF MIN S, P333, DOI 10.1145/3524842.3528506
   Ratiu D, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P223
   Raymond E., 1999, Knowledge, Technology Policy, V12, P23, DOI [10.1007/s12130-999-1026-0, DOI 10.1007/S12130-999-1026-0]
   Raymond ES, 2001, The Cathedral and the Bazaar: Musings on Linux and Open Source by an Accidental Revolutionary
   Robles G, 2005, 6 INT WORKSH SOFTW P
   Robles G, 2006, INT FED INFO PROC, V203, P273
   Rodríguez D, 2012, J SYST SOFTWARE, V85, P562, DOI 10.1016/j.jss.2011.09.009
   Rodríguez-Pérez G, 2020, EMPIR SOFTW ENG, V25, P1294, DOI 10.1007/s10664-019-09781-y
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Salama M., 2019, IEEE Trans Softw Eng, V100, P100
   Salama M, 2017, J SYST SOFTWARE, V133, P95, DOI 10.1016/j.jss.2017.07.041
   Santos Danilo B., 2017, Journal of Software, V12, P19, DOI 10.17706/jsw.12.1.19-34
   Sas D, 2019, PROC IEEE INT CONF S, P557, DOI 10.1109/ICSME.2019.00090
   Senyard A, 2004, 11TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P84, DOI 10.1109/APSEC.2004.58
   Tan X, 2020, PROC INT CONF SOFTW, P1222, DOI 10.1145/3377811.3380920
   Teixeira J, 2017, OPEN SOURCE SYSTEMS, P167
   Teixeira J, 2016, 2016 INT C INF SYST
   Threm D, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P112, DOI 10.1109/ISSRE.2015.7381805
   Valdezate A, 2022, Arxiv, DOI arXiv:2204.05209
   Venters CC, 2018, J SYST SOFTWARE, V138, P174, DOI 10.1016/j.jss.2017.12.026
   Wermelinger M, 2011, EMPIR SOFTW ENG, V16, P623, DOI 10.1007/s10664-011-9164-x
   Yang N, 2022, 2022 ACM/IEEE 44TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN SOCIETY (ICSE-SEIS 2022), P161, DOI [10.1109/ICSE-SEIS55304.2022.9794012, 10.1145/3510458.3513006]
   Yin LK, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1056, DOI 10.1145/3468264.3468563
   Yin RobertK., 2002, APPL SOCIAL RES METH, V5, DOI DOI 10.1177/1356389013497081
   Zhang Bo., 2013, Proceedings of the 17th International Software Product Line Conference, P168, DOI DOI 10.1145/2491627.2491645
   Zhang YX, 2021, IEEE T SOFTWARE ENG, V47, P2242, DOI 10.1109/TSE.2019.2946156
   Zhou MH, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P27, DOI 10.1145/3106237.3106287
NR 79
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2024
VL 29
IS 4
AR 97
DI 10.1007/s10664-024-10482-4
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UL4T9
UT WOS:001248208700003
OA hybrid
DA 2024-08-05
ER

PT J
AU Cassee, N
   Agaronian, A
   Constantinou, E
   Novielli, N
   Serebrenik, A
AF Cassee, Nathan
   Agaronian, Andrei
   Constantinou, Eleni
   Novielli, Nicole
   Serebrenik, Alexander
TI Transformers and meta-tokenization in sentiment analysis for software
   engineering
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Sentiment Analysis; Sentiment Analysis for Software Engineering;
   meta-tokenization; Sentiment Analysis Tools
AB Sentiment analysis has been used to study aspects of software engineering, such as issue resolution, toxicity, and self-admitted technical debt. To address the peculiarities of software engineering texts, sentiment analysis tools often consider the specific technical lingo practitioners use. To further improve the application of sentiment analysis, there have been two recommendations: Using pre-trained transformer models to classify sentiment and replacing non-natural language elements with meta-tokens. In this work, we benchmark five different sentiment analysis tools (two pre-trained transformer models and three machine learning tools) on 2 gold-standard sentiment analysis datasets. We find that pre-trained transformers outperform the best machine learning tool on only one of the two datasets, and that even on that dataset the performance difference is a few percentage points. Therefore, we recommend that software engineering researchers should not just consider predictive performance when selecting a sentiment analysis tool because the best-performing sentiment analysis tools perform very similarly to each other (within 4 percentage points). Meanwhile, we find that meta-tokenization does not improve the predictive performance of sentiment analysis tools. Both of our findings can be used by software engineering researchers who seek to apply sentiment analysis tools to software engineering data.
C1 [Cassee, Nathan; Agaronian, Andrei; Serebrenik, Alexander] Eindhoven Univ Technol, Eindhoven, Netherlands.
   [Constantinou, Eleni] Univ Cyprus, Nicosia, Cyprus.
   [Novielli, Nicole] Univ Bari, Bari, Italy.
C3 Eindhoven University of Technology; University of Cyprus; Universita
   degli Studi di Bari Aldo Moro
RP Cassee, N (corresponding author), Eindhoven Univ Technol, Eindhoven, Netherlands.
EM n.w.cassee@tue.nl; andrei.agaronian@gmail.com;
   constantinou.a.eleni@ucy.ac.cy; nicole.novielli@uniba.it;
   a.serebrenik@tue.nl
OI Constantinou, Eleni/0000-0002-4242-2581; Novielli,
   Nicole/0000-0003-1160-2608
CR Ahmed T, 2017, IEEE INT CONF AUTOM, P106, DOI 10.1109/ASE.2017.8115623
   Bacchelli Alberto, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P24, DOI 10.1109/ICPC.2010.47
   BENJAMINI Y, 1995, J R STAT SOC B, V57, P289, DOI 10.1111/j.2517-6161.1995.tb02031.x
   Bird S., 2009, Natural Language Processing with Python, DOI DOI 10.5555/1717171
   Biswas E, 2020, PROC IEEE INT CONF S, P162, DOI 10.1109/ICSME46990.2020.00025
   Bosu A, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P146, DOI 10.1109/MSR.2015.21
   Calefato F, 2018, EMPIR SOFTW ENG, V23, P1352, DOI 10.1007/s10664-017-9546-9
   Calefato F, 2018, INFORM SOFTWARE TECH, V94, P186, DOI 10.1016/j.infsof.2017.10.009
   Chen ZP, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P841, DOI 10.1145/3338906.3338977
   COHEN J, 1968, PSYCHOL BULL, V70, P213, DOI 10.1037/h0026256
   CORTES C, 1995, MACH LEARN, V20, P273, DOI 10.1007/BF00994018
   Ding J, 2018, 2018 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON EMOTION AWARENESS IN SOFTWARE ENGINEERING (SEMOTION), P7, DOI [10.1145/3194932.3194935, 10.1109/GLOCOM.2018.8647613]
   Dinno A, 2015, STATA J, V15, P292, DOI 10.1177/1536867X1501500117
   Efstathiou V, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS (ICSE-NIER), P69, DOI 10.1145/3183399.3183411
   Fu W, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P49, DOI 10.1145/3106237.3106256
   Hastie T., 2009, ELEMENTS STAT LEARNI, DOI [DOI 10.1007/978-0-387-84858-7, 10.1007/978-0-387-84858-7]
   Herrmann M, 2021, 29TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW 2021), P371, DOI 10.1109/REW53955.2021.00065
   Islam MR, 2018, J SYST SOFTWARE, V145, P125, DOI 10.1016/j.jss.2018.08.030
   Jongeling R, 2017, EMPIR SOFTW ENG, V22, P2543, DOI 10.1007/s10664-016-9493-x
   Kudo T, 2018, CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2018): PROCEEDINGS OF SYSTEM DEMONSTRATIONS, P66
   Lanovaz MJ, 2019, IEEE SOFTWARE, V36, P46, DOI 10.1109/MS.2019.2922949
   Lin B, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3490388
   Lin B, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P94, DOI 10.1145/3180155.3180195
   Maalej W, 2015, INT REQUIR ENG CONF, P116, DOI 10.1109/RE.2015.7320414
   Manning CD, 2014, PROCEEDINGS OF 52ND ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: SYSTEM DEMONSTRATIONS, P55, DOI 10.3115/v1/p14-5010
   Mäntylä MV, 2018, IEEE WORK CONF MIN S, P387, DOI 10.1145/3196398.3196444
   McKinlay J, 2010, CHANDOS INF PROF SER, P1, DOI 10.1533/9781780630243
   Mikolov T., 2013, ARXIV, DOI DOI 10.48550/ARXIV.1301.3781
   Novielli N, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09960-w
   Novielli N, 2020, IEEE WORK CONF MIN S, P158, DOI 10.1145/3379597.3387446
   Ortu M, 2019, 2019 IEEE/ACM 4TH INTERNATIONAL WORKSHOP ON EMOTION AWARENESS IN SOFTWARE ENGINEERING (SEMOTION 2019), P46, DOI 10.1109/SEmotion.2019.00017
   Pamungkas EW, 2020, INFORM PROCESS MANAG, V57, DOI 10.1016/j.ipm.2020.102360
   Paul R, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P26, DOI [10.1109/SANER.2019.8667987, 10.1109/saner.2019.8667987]
   Pennacchiotti M., 2011, P 17 ACM SIGKDD INT, P430, DOI DOI 10.1145/2020408.2020477
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Shwartz-Ziv R, 2022, INFORM FUSION, V81, P84, DOI 10.1016/j.inffus.2021.11.011
   Sidhu PK, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P524, DOI [10.1109/saner.2019.8668029, 10.1109/SANER.2019.8668029]
   Stanojevic M., 2009, Semantic approach to knowledge representation and processing, DOI [10.4018/978-1-60566-650-1.ch001, DOI 10.4018/978-1-60566-650-1.CH001]
   Uddin G, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3491211
   Uddin G, 2021, IEEE T SOFTWARE ENG, V47, P522, DOI 10.1109/TSE.2019.2900245
   Uddin G, 2017, IEEE INT CONF AUTOM, P978, DOI 10.1109/ASE.2017.8115715
   Yedida R, 2022, IEEE WORK CONF MIN S, P156, DOI 10.1145/3524842.3528458
   Zampetti F, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-10031-3
   Zhang T, 2020, PROC IEEE INT CONF S, P70, DOI 10.1109/ICSME46990.2020.00017
NR 44
TC 0
Z9 0
U1 3
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2024
VL 29
IS 4
AR 77
DI 10.1007/s10664-024-10468-2
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SX9G4
UT WOS:001237860400002
OA hybrid
DA 2024-08-05
ER

PT J
AU Ma, ZY
   Mondal, S
   Chen, TH
   Zhang, HX
   Hassan, AE
AF Ma, Zeyang
   Mondal, Shouvick
   Chen, Tse-Hsun (Peter)
   Zhang, Haoxiang
   Hassan, Ahmed E.
TI VulNet: Towards improving vulnerability management in the Maven
   ecosystem
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software vulnerability management; Software ecosystems; Empirical
   software engineering
ID SOFTWARE REUSE
AB Developers rely on software ecosystems such as Maven to manage and reuse external libraries (i.e., dependencies). Due to the complexity of the used dependencies, developers may face challenges in choosing which library to use and whether they should upgrade or downgrade a library. One important factor that affects this decision is the number of potential vulnerabilities in a library and its dependencies. Therefore, state-of-the-art platforms such as Maven Repository (MVN) and Open Source Insights (OSI) help developers in making such a decision by presenting vulnerability information associated with every dependency. In this paper, we first conduct an empirical study to understand how the two platforms, MVN and OSI, present and categorize vulnerability information. We found that these two platforms may either overestimate or underestimate the number of associated vulnerabilities in a dependency, and they lack prioritization mechanisms on which dependencies are more likely to cause an issue. Hence, we propose a tool named VulNet to address the limitations we found in MVN and OSI. Through an evaluation of 19,886 versions of the top 200 popular libraries, we find VulNet includes 90.5% and 65.8% of the dependencies that were omitted by MVN and OSI, respectively. VulNet also helps reduce 27% of potentially unreachable or less impactful vulnerabilities listed by OSI in test dependencies. Finally, our user study with 24 participants gave VulNet an average rating of 4.5/5 in presenting and prioritizing vulnerable dependencies, compared to 2.83 (MVN) and 3.14 (OSI).
C1 [Ma, Zeyang; Chen, Tse-Hsun (Peter)] Concordia Univ, Software Performance Anal & Reliabil SPEAR lab, Montreal, PQ, Canada.
   [Mondal, Shouvick] Indian Inst Technol Gandhinagar, Comp Sci & Engn, Ahmadabad, Gujarat, India.
   [Zhang, Haoxiang; Hassan, Ahmed E.] Queens Univ, Software Anal & Intelligence Lab, Kingston, ON, Canada.
C3 Concordia University - Canada; Indian Institute of Technology System
   (IIT System); Indian Institute of Technology (IIT) - Gandhinagar; Queens
   University - Canada
RP Ma, ZY (corresponding author), Concordia Univ, Software Performance Anal & Reliabil SPEAR lab, Montreal, PQ, Canada.
EM m_zeyang@encs.concordia.ca; shouvick.mondal@iitgn.ac.in;
   peterc@encs.concordia.ca; haoxiang.zhang@acm.org; ahmed@cs.queensu.ca
OI Chen, Tse-Hsun/0000-0003-4027-0905
FU Indian Institute of Technology Gandhinagar
FX No Statement Available
CR Alfadel M, 2020, On the threat of npm vulnerable dependencies in Node.js applications
   Alfadel M, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P446, DOI 10.1109/SANER50967.2021.00048
   Aloraini B, 2020, Towards better static analysis security testing methodologies
   Alqahtani SS, 2016, PROC INT SYMP SOFTW, P219, DOI 10.1109/ISSRE.2016.12
   [Anonymous], 2022, Common vulnerability scoring system SIG
   Apache, 2022, Maven-Maven documentation
   Apache, 2022, Log4j-apache log4j 2
   Apache, Maven-introduction to the dependency mechanism
   Barik T, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P1118, DOI 10.1145/2950290.2983968
   Chen TH, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P71, DOI 10.1145/2889160.2889228
   Croft R, 2021, Arxiv, DOI arXiv:2107.13723
   Decan A, 2021, IEEE T SOFTWARE ENG, V47, P1226, DOI 10.1109/TSE.2019.2918315
   Decan A, 2018, IEEE WORK CONF MIN S, P181, DOI 10.1145/3196398.3196401
   Decan A, 2016, ACM PROCEEDINGS OF THE 10TH EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE WORKSHOPS (ECSA-W), DOI 10.1145/2993412.3003382
   Dusing J., 2022, Digital Threats, V3
   Epperson W, 2022, 2022 ACM/IEEE 44TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2022), P243, DOI [10.1109/ICSE-SEIP55303.2022.9793945, 10.1145/3510457.3513042]
   Falessi D, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1978802.1978812
   Farris KA, 2018, ACM T PRIV SECUR, V21, DOI 10.1145/3196884
   Frakes WB, 2005, IEEE T SOFTWARE ENG, V31, P529, DOI 10.1109/TSE.2005.85
   GitHub, 2020, github-octoverse-2020-security-report
   Gkortzis A, 2021, J SYST SOFTWARE, V172, DOI 10.1016/j.jss.2020.110653
   Gkortzis A, 2019, LECT NOTES COMPUT SC, V11602, P187, DOI 10.1007/978-3-030-22888-0_13
   Google, 2022, Open source insights
   Google, 2022, Google online security blog: Understanding the impact of apache log4j vulnerability
   Google, Open source insights
   Haihao Shen, 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P299, DOI 10.1109/ICST.2011.51
   Harrand N, 2022, J SYST SOFTWARE, V184, DOI 10.1016/j.jss.2021.111134
   Huang CC, 2013, J SYST SOFTWARE, V86, P2822, DOI 10.1016/j.jss.2013.06.040
   Imtiaz N, 2021, P 15 ACM IEEE INT S
   Johnson B, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P672, DOI 10.1109/ICSE.2013.6606613
   Jung B, 2022, COMPUT SECUR, V116, DOI 10.1016/j.cose.2022.102639
   Kula RG, 2018, EMPIR SOFTW ENG, V23, P384, DOI 10.1007/s10664-017-9521-5
   Latendresse J, 2022, IEEE INT CONF AUTOM, DOI 10.1145/3551349.3556896
   LaToza Thomas D., 2010, P 32 ACM IEEE INT C, P185, DOI [10.1145/1806799.1806829, DOI 10.1145/1806799.1806829]
   Le Triet H. M., 2022, ACM Comput Surv
   Lemos R, 2022, Dependency problems increase for open source components
   Libraries.io, 2022, Libraries.io-The open source discovery service
   Lipp S, 2022, PROCEEDINGS OF THE 31ST ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2022, P544, DOI 10.1145/3533767.3534380
   Liu CW, 2022, PROC INT CONF SOFTW, P672, DOI 10.1145/3510003.3510142
   Liu QX, 2012, J SYST SOFTWARE, V85, P1699, DOI 10.1016/j.jss.2012.03.057
   Louridas P, 2008, ACM T SOFTW ENG METH, V18, DOI 10.1145/1391984.1391986
   Ma Z, 2022, Vulnet
   Massacci F, 2021, PROC INT CONF SOFTW, P1386, DOI 10.1109/ICSE43902.2021.00125
   Maven, 2022, Maven-optional dependencies and dependency exclusions
   Mitre, 2022, Cve-cve-2021-44228
   Mojica IJ, 2014, IEEE SOFTWARE, V31, P78, DOI 10.1109/MS.2013.142
   Nachtigall M, 2022, PROCEEDINGS OF THE 31ST ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2022, P532, DOI 10.1145/3533767.3534374
   Oracle, 2022, JDBC drivers | oracle
   Pashchenko I, 2022, IEEE T SOFTWARE ENG, V48, P1592, DOI 10.1109/TSE.2020.3025443
   Pashchenko I, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3268920
   Prana GAA, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09959-3
   Renjin, 2022, Renjin | Integrating R and Java | The JVM-based interpreter for the R language for statistical computing
   Repository M, 2022, Maven Repository: Search/Browse/Explore
   Repository M, 2022, Maven repository: top projects at Maven repository
   Ruiz I. J. M., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P113
   Saaty T.L., 1994, Fundamentals of Decision Making and Priority Theory with the Analytic Hierarchy Process, DOI DOI 10.1016/J.JCLEPRO.2019.118324
   Smith J, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P248, DOI 10.1145/2786805.2786812
   Snyk, 2022, Snyk vulnerability database | Snyk
   Sonatype, 2022, Sonatype oss index
   Soto-Valero C, 2021, Empirical Softw Engg, V26
   Synopsys, 2022, Synopsys | EDA tools, semiconductor IP and application security solutions
   Valiev M, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P644, DOI 10.1145/3236024.3236062
   Zerouali A, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10154-1
NR 63
TC 0
Z9 0
U1 3
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2024
VL 29
IS 4
AR 83
DI 10.1007/s10664-024-10448-6
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TT8P3
UT WOS:001243603500001
DA 2024-08-05
ER

PT J
AU Maes-Bermejo, M
   Serebrenik, A
   Gallego, M
   Gortázar, F
   Robles, G
   Barahona, JMG
AF Maes-Bermejo, Michel
   Serebrenik, Alexander
   Gallego, Micael
   Gortazar, Francisco
   Robles, Gregorio
   Barahona, Jesus Maria Gonzalez
TI Hunting bugs: Towards an automated approach to identifying which change
   caused a bug through regression testing
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Bug origins; Bug-introducing changes; First-failing change; SZZ
   algorithm; Software Testing; Regression Testing
AB Context Finding code changes that introduced bugs is important both for practitioners and researchers, but doing it precisely is a manual, effort-intensive process. The perfect test method is a theoretical construct aimed at detecting Bug-Introducing Changes (BIC) through a theoretical perfect test. This perfect test always fails if the bug is present, and passes otherwise.Objective To explore a possible automatic operationalization of the perfect test method.Method To use regression tests as substitutes for the perfect test. For this, we transplant the regression tests to past snapshots of the code, and use them to identify the BIC, on a well-known collection of bugs from the Defects4J dataset.Results From 809 bugs in the dataset, when running our operationalization of the perfect test method, for 95 of them the BIC was identified precisely and in the remaining 4 cases, a list of candidates including the BIC was provided.Conclusions We demonstrate that the operationalization of the perfect test method through regression tests is feasible and can be completely automated in practice when tests can be transplanted and run in past snapshots of the code. Given that implementing regression tests when a bug is fixed is considered a good practice, when developers follow it, they can detect effortlessly bug-introducing changes by using our operationalization of the perfect test method.
C1 [Maes-Bermejo, Michel; Gallego, Micael; Gortazar, Francisco] Univ Rey Juan Carlos, Dept Comp Sci, Madrid, Spain.
   [Serebrenik, Alexander] Eindhoven Univ Technol, Dept Math & Comp Sci, Eindhoven, Netherlands.
   [Robles, Gregorio; Barahona, Jesus Maria Gonzalez] Univ Rey Juan Carlos, Dept Telematic & Computat Syst Engn, Madrid, Spain.
C3 Universidad Rey Juan Carlos; Eindhoven University of Technology;
   Universidad Rey Juan Carlos
RP Maes-Bermejo, M (corresponding author), Univ Rey Juan Carlos, Dept Comp Sci, Madrid, Spain.
EM michel.maes@urjc.es; a.serebrenik@tue.nl; micael.gallego@urjc.es;
   francisco.gortazar@urjc.es; gregorio.robles@urjc.es;
   jesus.gonzalez.barahona@urjc.es
RI Gortázar, Francisco/H-8219-2015; Robles, Gregorio/I-2507-2012
OI Gortázar, Francisco/0000-0002-2183-0869; Robles,
   Gregorio/0000-0002-1442-6761; Maes Bermejo, Michel/0000-0002-8138-9702
FU Universidad Rey Juan Carlos
FX No Statement Available
CR An G, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1459, DOI 10.1145/3468264.3473129
   [Anonymous], 2015, ISSTA
   [Anonymous], 2018, IEEE Std 1709-2018 (Revision of IEEE Std 1709-2010), P1, DOI DOI 10.1109/IEEESTD.2018.8423800
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   Barr ET, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P306, DOI 10.1145/2635868.2635898
   bin Ali N, 2019, EMPIR SOFTW ENG, V24, P2020, DOI 10.1007/s10664-018-9670-1
   Bird C, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P1, DOI 10.1109/MSR.2009.5069475
   Bludau P, 2022, EUR CON SFTWR MTNCE, P1, DOI 10.1109/SANER53432.2022.00012
   Borg M, 2019, PROCEEDINGS OF THE 3RD ACM SIGSOFT INTERNATIONAL WORKSHOP ON MACHINE LEARNING TECHNIQUES FOR SOFTWARE QUALITY EVALUATION (MALTESQUE '19), P7, DOI 10.1145/3340482.3342742
   Neto EC, 2019, INT SYMP EMP SOFTWAR, P94
   Neto EC, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P380, DOI 10.1109/SANER.2018.8330225
   Castelluccio M, 2019, EMPIR SOFTW ENG, V24, P3008, DOI 10.1007/s10664-018-9665-y
   Cormen TH, 2001, Introduction to algorithms, P540
   da Costa DA, 2017, IEEE T SOFTWARE ENG, V43, P641, DOI 10.1109/TSE.2016.2616306
   Davies S, 2014, J SOFTW-EVOL PROC, V26, P107, DOI 10.1002/smr.1619
   Desikan S, 2006, Software testing: principles and practice, P193
   Engström E, 2010, LECT NOTES COMPUT SC, V6156, P3, DOI 10.1007/978-3-642-13792-1_3
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   Guo P.J., 2010, P 32 ACM IEEE INT C, V1, P495, DOI 10.1145/1806799.1806871
   Harman M, 2010, COMMUN ACM, V53, P108, DOI 10.1145/1735223.1735248
   Iida H, 2016, Improving the High-Impact Bug Reports: A Case Study of Apache Projects
   Jang JY, 2012, P IEEE S SECUR PRIV, P48, DOI 10.1109/SP.2012.13
   Jiang YJ, 2021, PROC INT CONF SOFTW, P686, DOI 10.1109/ICSE43902.2021.00069
   Just R, 2014, ISSTA 2014, P437, DOI [10.1145/2610384.2628055, DOI 10.1145/2610384.2628055]
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Khattar M., 2015, Proc. 8th India Softw. Eng. Conf. XXX-ISEC '15, P50
   Kim S., 2006, P INT WORKSHOP MININ, P173, DOI 10.1145/1137983.1138027.
   Kim S, 2006, IEEE INT CONF AUTOM, P81
   Lawrence S, 2001, COMPUTER, V34, P26, DOI 10.1109/2.901164
   Lenarduzzi V, 2020, INT C PROGRAM COMPRE, P446, DOI 10.1145/3387904.3389295
   Levin S, 2017, PROC IEEE INT CONF S, P35, DOI 10.1109/ICSME.2017.9
   Maes-Bermejo M, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10117-6
   McIntosh S, 2018, IEEE T SOFTWARE ENG, V44, P412, DOI 10.1109/TSE.2017.2693980
   Onoma AK, 1998, COMMUN ACM, V41, P81, DOI 10.1145/274946.274960
   Perscheid M, 2017, SOFTWARE QUAL J, V25, P83, DOI 10.1007/s11219-015-9294-2
   Petrulio F, 2022, IEEE Trans Softw Eng
   Pinto LeandroSales., 2012, Proceedings of the ACM SIGSOFT 20th International Symposium on the Foundations of Software Engineering, P1
   Pokropinski J., 2022, Developments in Information & Knowledge Management for Business Applications, P181
   Purushothaman R, 2005, IEEE T SOFTWARE ENG, V31, P511, DOI 10.1109/TSE.2005.74
   Rodríguez-Pérez G, 2022, IEEE T SOFTWARE ENG, V48, P1400, DOI 10.1109/TSE.2020.3021380
   Rodríguez-Pérez G, 2020, EMPIR SOFTW ENG, V25, P1294, DOI 10.1007/s10664-019-09781-y
   Rodríguez-Pérez G, 2018, INFORM SOFTWARE TECH, V99, P164, DOI 10.1016/j.infsof.2018.03.009
   Rosa G, 2021, PROC INT CONF SOFTW, P436, DOI 10.1109/ICSE43902.2021.00049
   Saha R, 2017, LECT NOTES COMPUT SC, V10202, P60, DOI 10.1007/978-3-662-54494-5_4
   Schmidt DC, 2001, P 1 WORKSH OP SOURC, V1
   Sidiroglou-Douskos S, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P95, DOI 10.1145/3106237.3106269
   Sinha VibhaSinghal., 2010, Proc. of 3rd India Software Engineering Conf, P3
   Sliwerski Jacek, 2005, SIGSOFT SOFTW ENG NO, V30, p1aAS5, DOI [DOI 10.1145/1082983.1083147, 10.1145/1083142.1083147]
   Tan L, 2014, EMPIR SOFTW ENG, V19, P1665, DOI 10.1007/s10664-013-9258-8
   Tantithamthavorn C, 2013, 2013 IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING WORKSHOPS (ISSREW), P108, DOI 10.1109/ISSREW.2013.6688888
   Tufano M, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1838
   Weiss C, 2007, 4 INT WORKSH MIN SOF, P1
   Wen M, 2019, P 2019 27 ACM JOINT
   Williams C., 2008, P 2008 WORKSHOP DEFE, P32
   Williams C.C., 2008, P 2008 INT WORKING C, P19
   Yang DH, 2022, IEEE INT CONF AUTOM, DOI 10.1145/3551349.3556893
   Yeujian Li, 1999, Software Engineering Notes, V24, P69, DOI 10.1145/308769.308790
   Yin Z., 2011, Proceedings of the 19th ACM SIGSOFT symposium and the 13th European conference on Foundations of software engineering, P26, DOI [10.1145/2025113.2025121, DOI 10.1145/2025113.2025121]
   Yoon Y, 2014, S VIS LANG HUM CEN C, P101, DOI 10.1109/VLHCC.2014.6883030
   Young Seok Yoon, 2012, 2012 5th International Workshop on Cooperative and Human Aspects of Software Engineering, P138, DOI 10.1109/CHASE.2012.6223012
   Zeller A., 2002, Software Engineering Notes, V27, P1, DOI 10.1145/605466.605468
   Zeller A, 2002, IEEE T SOFTWARE ENG, V28, P183, DOI 10.1109/32.988498
   Zerouali A, 2018, LECT NOTES COMPUT SC, V10826, P95, DOI 10.1007/978-3-319-90421-4_6
   Zhang TY, 2017, PROC INT CONF SOFTW, P665, DOI 10.1109/ICSE.2017.67
NR 64
TC 0
Z9 0
U1 1
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAY
PY 2024
VL 29
IS 3
AR 66
DI 10.1007/s10664-024-10479-z
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QN1O8
UT WOS:001221462200001
OA hybrid
DA 2024-08-05
ER

PT J
AU Amini, MH
   Naseri, S
   Nejati, S
AF Amini, Mohammad Hossein
   Naseri, Shervin
   Nejati, Shiva
TI Evaluating the impact of flaky simulators on testing autonomous driving
   systems
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Autonomous driving systems; Search-based testing; Machine learning and
   simulators
AB Simulators are widely used to test Autonomous Driving Systems (ADS), but their potential flakiness can lead to inconsistent test results. We investigate test flakiness in simulation-based testing of ADS by addressing two key questions: (1) How do flaky ADS simulations impact automated testing that relies on randomized algorithms? and (2) Can machine learning (ML) effectively identify flaky ADS tests while decreasing the required number of test reruns? Our empirical results, obtained from two widely-used open-source ADS simulators and five diverse ADS test setups, show that test flakiness in ADS is a common occurrence and can significantly impact the test results obtained by randomized algorithms. Further, our ML classifiers effectively identify flaky ADS tests using only a single test run, achieving F1-scores of 85%, 82% and 96% for three different ADS test setups. Our classifiers significantly outperform our non-ML baseline, which requires executing tests at least twice, by 31%, 21%, and 13% in F1-score performance, respectively. We conclude with a discussion on the scope, implications and limitations of our study. We provide our complete replication package in a Github repository (Github paper 2023).
C1 [Amini, Mohammad Hossein; Naseri, Shervin; Nejati, Shiva] Univ Ottawa, Ottawa, ON, Canada.
C3 University of Ottawa
RP Amini, MH (corresponding author), Univ Ottawa, Ottawa, ON, Canada.
EM mh.amini@uottawa.ca; snase041@uottawa.ca; snejati@uottawa.ca
RI Amini, Mohammad/AFB-9650-2022
OI Amini, Mohammad/0000-0002-9562-2173
FU NSERC; NSERC of Canada through their Discovery program
FX We gratefully acknowledge the financial support received from NSERC of
   Canada through their Discovery program.
CR Afzal A, 2021, IEEE INT CONF SOFTW, P263, DOI 10.1109/ICST49551.2021.00036
   Ahlgren J, 2021, PROCEEDINGS OF EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING (EASE 2021), P1, DOI 10.1145/3463274.3463275
   Alshammari A, 2021, PROC INT CONF SOFTW, P1572, DOI 10.1109/ICSE43902.2021.00140
   [Anonymous], 2022, Raquel Urtasun's tech company develops self-driving vehicle simulator
   [Anonymous], 2023, Online supplementary material for the paper
   [Anonymous], 2023, Carla Challenge
   [Anonymous], 2023, Github repo for svl simulator: an autonomous vehicle simulator
   [Anonymous], 2023, Github repo for cyber-physical systems testing tool competition
   [Anonymous], 2023, Github repo for transfuser: imitation with transformer-based sensor fusion for autonomous driving
   [Anonymous], 2016, Udacity self-driving challenge 2
   [Anonymous], 2023, Github repo for the paper
   [Anonymous], 2023, BeamNG.tech Website
   Anthony Capon J., 1991, Elementary Statistics for the Social Sciences: Study Guide
   Bell J, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P433, DOI 10.1145/3180155.3180164
   Ben Abdessalem R, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1016, DOI 10.1145/3180155.3180160
   Birchler C, 2023, EMPIR SOFTW ENG, V28, DOI 10.1007/s10664-023-10286-y
   Borg M, 2021, IEEE INT CONF SOFTW, P383, DOI 10.1109/ICST49551.2021.00050
   carla, Quick start
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Dosovitskiy A., 2017, P 1 ANN C ROB LEARN, P1, DOI DOI 10.48550/ARXIV.1711.03938
   Dutta Saikat, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P211, DOI 10.1145/3395363.3397366
   foundation, About us
   Gog I, 2021, IEEE INT CONF ROBOT, P8806, DOI 10.1109/ICRA48506.2021.9561747
   Goutte C, 2005, LECT NOTES COMPUT SC, V3408, P345
   Hagan MT, 1996, Neural Network Design
   Haq FU, 2023, PROC INT CONF SOFTW, P1814, DOI 10.1109/ICSE48619.2023.00155
   Harman M, 2010, IEEE T SOFTWARE ENG, V36, P226, DOI 10.1109/TSE.2009.71
   Herzig K, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P39, DOI 10.1109/ICSE.2015.133
   Luke S., 2013, ESSENTIALS METAHEURI
   Luo QZ, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P643, DOI 10.1145/2635868.2635920
   Matinnejad R, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P938, DOI 10.1145/3106237.3117770
   Micco J., 2018, Advances in continuous integration testing at google
   Nguyen V, 2021, THIRD IEEE INTERNATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE TESTING (AITEST 2021), P128, DOI 10.1109/AITEST52744.2021.00033
   Parry O, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3476105
   Paydar S, 2019, Fundamentals of software engineering
   Riccio V, 2023, PROC INT CONF SOFTW, P1161, DOI 10.1109/ICSE48619.2023.00104
   Shi A, 2016, IEEE INT CONF SOFTW, P80, DOI 10.1109/ICST.2016.40
   Ul Haq F, 2022, PROC INT CONF SOFTW, P811, DOI 10.1145/3510003.3510188
   Ul Haq F, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09982-4
   Ul Haq F, 2020, IEEE INT CONF SOFTW, P85, DOI 10.1109/ICST46399.2020.00019
   Ulbrich S, 2015, IEEE INT C INTELL TR, P982, DOI 10.1109/ITSC.2015.164
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Samak CV, 2021, Arxiv, DOI arXiv:2011.08729
   Witten IH, 2011, MOR KAUF D, P61, DOI 10.1016/B978-0-12-374856-0.00003-1
   Zeller Andreas, 2023, The Fuzzing Book
   Zhong ZY, 2023, IEEE T SOFTWARE ENG, V49, P1860, DOI 10.1109/TSE.2022.3195640
   Zohdinasab T, 2023, SOFTW ENG 2023 FACHT, VP-332
NR 47
TC 0
Z9 0
U1 1
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2024
VL 29
IS 2
AR 47
DI 10.1007/s10664-023-10433-5
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IS4Y5
UT WOS:001168320100001
DA 2024-08-05
ER

PT J
AU Chouchen, M
   Ouni, A
AF Chouchen, Moataz
   Ouni, Ali
TI A multi-objective effort-aware approach for early code review prediction
   and prioritization
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Review
DE Code review; Multi-Objective Optimization; Code review prioritization
ID GENETIC ALGORITHM; CLASSIFICATION; INSPECTIONS; CHALLENGES
AB Modern Code Review (MCR) is an essential practice in software engineering. MCR helps with the early detection of defects and preventing poor implementation practices and other benefits such as knowledge sharing, team awareness, and collaboration. However, reviewing code changes is a hard and time-consuming task requiring developers to prioritize code review tasks to optimize their time and effort spent on code review. Previous approaches attempted to prioritize code reviews based on their likelihood to be merged by leveraging Machine learning (ML) models to maximize the prediction performance. However, these approaches did not consider the review effort dimension which results in sub-optimal solutions for code review prioritization. It is thus important to consider the code review effort in code review request prioritization to help developers optimize their code review efforts while maximizing the number of merged code changes. To address this issue, we propose CostAwareCR, amulti-objective optimization-based approach to predict and prioritize code review requests based on their likelihood to be merged, and their review effort measured in terms of the size of the reviewed code. CostAwareCRuses the RuleFit algorithm to learn relevant features. Then, our approach learns Logistic Regression (LR) model weights using the Non-dominated Sorting Genetic Algorithm II (NSGA-II) to simultaneously maximize (1) the prediction performance and, (2) the cost-effectiveness. To evaluate the performance of CostAwareCR, we performed a large empirical study on 146,612 code reviews across 3 large organizations, namely LibreOffice, Eclipse and GerritHub. The obtained results indicate that CostAwareCRachieves promising Area Under the Curve (AUC) scores ranging from 0.75 to 0.77. Additionally, CostAwareCRoutperforms various baseline approaches in terms of effort-awareness performance metrics being able to prioritize the review of 87% of code changes by using only 20% of the effort. Furthermore, our approach achieved 0.92 in terms of the normalized area under the lift chart (P-opt) indicating that our approach is able to provide near-optimal code review prioritization based on the review effort. Our results indicate that our multi-objective formulation is prominent for learning models that provide a trade-off between good cost-effectiveness while keeping promising prediction performance.
C1 [Chouchen, Moataz; Ouni, Ali] Univ Quebec, ETS Montreal, Montreal, PQ, Canada.
C3 University of Quebec; Ecole de Technologie Superieure - Canada;
   University of Quebec Montreal
RP Chouchen, M (corresponding author), Univ Quebec, ETS Montreal, Montreal, PQ, Canada.
EM moataz.chouchen.1@ens.etsmtl.ca; ali.ouni@etsmtl.ca
RI Chouchen, Moataz/JZE-0325-2024
OI Chouchen, Moataz/0000-0002-1134-1324
FU Natural Sciences and Engineering Research Council of Canada
   [RGPIN-2018-05960]; Natural Sciences and Engineering Research Council of
   Canada (NSERC)
FX This research has been funded by the Natural Sciences and Engineering
   Research Council of Canada (NSERC) RGPIN-2018-05960.
CR AlOmar EA, 2022, IEEE WORK CONF MIN S, P689, DOI 10.1145/3524842.3527932
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Arisholm E, 2010, J SYST SOFTWARE, V83, P2, DOI 10.1016/j.jss.2009.06.055
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Baysal O, 2016, EMPIR SOFTW ENG, V21, P932, DOI 10.1007/s10664-015-9366-8
   Beller M., 2014, 11 WORKING C MINING, P202, DOI DOI 10.1145/2597073.2597082
   Blank J, 2020, IEEE ACCESS, V8, P89497, DOI 10.1109/ACCESS.2020.2990567
   Bosu A, 2014, 2014 ACM IEEE INT S, P1, DOI DOI 10.1145/2652524.2652544
   Canfora G, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P252, DOI 10.1109/ICST.2013.38
   Chen D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P456, DOI 10.1145/3236024.3236050
   Chen L, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P1314, DOI 10.1145/3540250.3558945
   Chen X, 2018, INFORM SOFTWARE TECH, V93, P1, DOI 10.1016/j.infsof.2017.08.004
   Chouchen M, 2023, EMPIR SOFTW ENG, V28, DOI 10.1007/s10664-023-10300-3
   Chouchen M, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P531, DOI 10.1109/SANER50967.2021.00060
   Cohen J., 1988, Statistical power analysis for the behavioral sciences
   de Winter JCF, 2016, PSYCHOL METHODS, V21, P273, DOI 10.1037/met0000079
   Deb K, 1999, ARTIFICIAL NEURAL NETS AND GENETIC ALGORITHMS, P235
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Deb K, 2014, IEEE T EVOLUT COMPUT, V18, P577, DOI 10.1109/TEVC.2013.2281535
   Deb K, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1187
   Dietterich TG, 2000, LECT NOTES COMPUT SC, V1857, P1, DOI 10.1007/3-540-45014-9_1
   Egelman CD, 2020, PROC INT CONF SOFTW, P174, DOI 10.1145/3377811.3380414
   Fagan ME, 1999, IBM SYST J, V38, P258, DOI 10.1147/sj.382.0258
   Fan YR, 2018, EMPIR SOFTW ENG, V23, P3346, DOI 10.1007/s10664-018-9602-0
   Frieman JH, 2008, ANN APPL STAT, V2, P916, DOI 10.1214/07-AOAS148
   github, 2023, CostAwareCR Replication Package
   Gousios G, 2016, PROC INT CONF SOFTW, P285, DOI 10.1145/2884781.2884826
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   Gousios G, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P358, DOI 10.1109/ICSE.2015.55
   Greiler M, 2016, Code reviewing in the trenches: Understanding challenges, Best Practices and Tool Needs
   Guo YC, 2018, PROC IEEE ACM INT C, P325, DOI 10.1145/3183440.3194992
   Harman M, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P58, DOI 10.1109/METRIC.2004.1357891
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Hossin M., 2015, INT J DATA MIN KNOWL, V5, P1, DOI DOI 10.5121/IJDKP.2015.5201
   Huang Y, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10035-z
   Islam K, 2022, INFORM SOFTWARE TECH, V142, DOI 10.1016/j.infsof.2021.106756
   Jeong G., 2009, RES SOFTWARE ANAL ER, P1
   Jiang YJ, 2013, IEEE WORK CONF MIN S, P101, DOI 10.1109/MSR.2013.6624016
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Khatoonabadi S., 2021, ACM Transactions on Software Engineering and Methodology
   LaValle SM, 2004, INT J ROBOT RES, V23, P673, DOI 10.1177/0278364904045481
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   MacLeod L, 2018, IEEE SOFTWARE, V35, P34, DOI 10.1109/MS.2017.265100500
   Mende T, 2010, EUR CON SFTWR MTNCE, P107, DOI 10.1109/CSMR.2010.18
   Milanesio L, 2013, Learning Gerrit Code Review, V144
   Natekin A, 2013, FRONT NEUROROBOTICS, V7, DOI 10.3389/fnbot.2013.00021
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   Panichella A, 2019, PROCEEDINGS OF THE 2019 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE (GECCO'19), P595, DOI 10.1145/3321707.3321839
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Pornprasit C, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P407, DOI 10.1109/ASE51524.2021.9678763
   Rigby P. C., 2013, P ESEC FSE, P202, DOI DOI 10.1145/2491411.2491444
   Riquelme N, 2015, PROC LAT AM COMPUT C, P286, DOI 10.1109/clei.2015.7360024
   Romano D., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P303, DOI 10.1109/ICSM.2011.6080797
   Ruder S, 2017, Arxiv, DOI arXiv:1609.04747
   Saidani I, 2022, AUTOMAT SOFTW ENG, V29, DOI 10.1007/s10515-021-00319-5
   Saidani I, 2020, INFORM SOFTWARE TECH, V128, DOI 10.1016/j.infsof.2020.106392
   Seada H, 2016, IEEE T EVOLUT COMPUT, V20, P358, DOI 10.1109/TEVC.2015.2459718
   Segura C, 2016, ANN OPER RES, V240, P217, DOI 10.1007/s10479-015-2017-z
   Shukla S, 2018, SOFT COMPUT, V22, P1959, DOI 10.1007/s00500-016-2456-8
   Shull F, 2008, IEEE SOFTWARE, V25, P88, DOI 10.1109/MS.2008.7
   Soares DM, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P1541, DOI 10.1145/2695664.2695856
   Tantithamthavorn C, 2018, The impact of automated parameter optimization for defect prediction models
   Thongtanunam P, 2017, EMPIR SOFTW ENG, V22, P768, DOI 10.1007/s10664-016-9452-6
   Van Veldhuizen D., 1998, Stanford University, California, P221
   Wang S, 2016, PROC INT CONF SOFTW, P631, DOI 10.1145/2884781.2884880
   Wang S, 2019, 15TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING (PROMISE'19), P46, DOI 10.1145/3345629.3345635
   Weigerber P, 2008, P 2008 INT WORK C MI, P67, DOI DOI 10.1145/1370750.1370767
   Yang X, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P460, DOI [10.1145/2901739.2903504, 10.1109/MSR.2016.054]
   Zhang XY, 2015, IEEE T EVOLUT COMPUT, V19, P761, DOI 10.1109/TEVC.2014.2378512
   Zhao GL, 2019, EMPIR SOFTW ENG, V24, P2140, DOI 10.1007/s10664-019-09696-8
   Zhou Q, 2021, ENG COMPUT-GERMANY, V37, P623, DOI 10.1007/s00366-019-00844-8
   Zitzler E, 1998, LECT NOTES COMPUT SC, V1498, P292, DOI 10.1007/BFb0056872
NR 73
TC 0
Z9 0
U1 7
U2 10
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2024
VL 29
IS 1
AR 29
DI 10.1007/s10664-023-10431-7
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CV7B5
UT WOS:001128065300001
DA 2024-08-05
ER

PT J
AU Ghadesi, A
   Lamothe, M
   Li, H
AF Ghadesi, Amin
   Lamothe, Maxime
   Li, Heng
TI What causes exceptions in machine learning applications? Mining machine
   learning-related stack traces on Stack Overflow
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Machine learning applications; Stack traces; Stack Overflow; Empirical
   software engineering
AB Machine learning (ML), including deep learning, has recently gained tremendous popularity in a wide range of applications. However, like traditional software, ML applications are not immune to the bugs that result from programming errors. Explicit programming errors usually manifest through error messages and stack traces. These stack traces describe the chain of function calls that lead to an anomalous situation, or exception. Indeed, these exceptions may cross the entire software stack (including applications and libraries). Thus, studying the ML-related patterns in stack traces can help practitioners and researchers understand the causes of exceptions in ML applications and the challenges faced by ML developers. To that end, we mine Stack Overflow (SO) and study 18, 538 ML-related stack traces related to seven popular Python ML libraries. First, we observe that ML questions that contain stack traces are less likely to get accepted answers than questions that don't, even though they gain more attention (i.e., more views and comments). Second, we observe that recurrent patterns exist in ML stack traces, even across different ML libraries, with a small portion of patterns covering many stack traces. Third, we derive five high-level categories and 26 low-level types from the stack trace patterns: most patterns are related to model training, python basic syntax, parallelization, subprocess invocation, and external module execution. Furthermore, the patterns related to external dependencies (e.g., file operations) or manipulations of artifacts (e.g., model conversion) are among the least likely to get accepted answers on SO. Our findings provide insights for researchers, ML library developers, and technical forum moderators to better support ML developers in writing error-free ML code. For example, future research can leverage the common patterns of stack traces to help ML developers locate solutions to problems similar to theirs or to identify experts who have experience solving similar patterns of problems. Researchers and ML library developers could prioritize efforts to help ML developers identify misuses of ML APIs, mismatches in data formats, and potential data/resource contentions so that ML developers can better avoid/fix model-related exception patterns, data-related exception patterns, and multi-process-related exception patterns, respectively.
C1 [Ghadesi, Amin; Lamothe, Maxime; Li, Heng] Polytech Montreal, Dept Comp & Software Engn, Montreal, PQ, Canada.
C3 Universite de Montreal; Polytechnique Montreal
RP Ghadesi, A (corresponding author), Polytech Montreal, Dept Comp & Software Engn, Montreal, PQ, Canada.
EM amin.ghadesi@polymtl.ca; maxime.lamothe@polymtl.ca; heng.li@polymtl.ca
OI Li, Heng/0000-0001-5441-6763
FU Natural Sciences and Engineering Research Council of Canada (NSERC);
   Fonds de recherche du Quebec - Nature et technologies (FRQNT)
FX We would like to gratefully acknowledge the Natural Sciences and
   Engineering Research Council of Canada (NSERC) and the Fonds de
   recherche du Quebec - Nature et technologies (FRQNT) for their funding
   support for this work.
CR Abadi M, 2016, PROCEEDINGS OF OSDI'16: 12TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P265
   Alharthi H, 2016, 2016 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON CROWDSOURCING IN SOFTWARE ENGINEERING (CSI-SE), P1, DOI [10.1109/CSI-SE.2016.009, 10.1145/2897659.2897661]
   Alshangiti Moayad, 2019, INT SYMP EMP SOFTWAR, P117, DOI DOI 10.1109/esem.2019.8870187
   Amershi S, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P291, DOI 10.1109/ICSE-SEIP.2019.00042
   Atwi H, 2021, IEEE INT WORK C SO, P136, DOI 10.1109/SCAM52516.2021.00025
   Baltes S, 2018, P 15 INT C MIN SOFTW
   Bangash Abdul Ali, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P260, DOI 10.1109/MSR.2019.00052
   Ben Braiek H, 2018, IEEE WORK CONF MIN S, P353, DOI 10.1145/3196398.3196445
   Bhat V, 2014, 2014 PROCEEDINGS OF THE IEEE/ACM INTERNATIONAL CONFERENCE ON ADVANCES IN SOCIAL NETWORKS ANALYSIS AND MINING (ASONAM 2014), P328, DOI 10.1109/ASONAM.2014.6921605
   Borges H, 2016, P 12 INT C PRED MOD, P1
   Borges H, 2016, PROC IEEE INT CONF S, P334, DOI 10.1109/ICSME.2016.31
   Burnard P, 1991, Nurse Educ Today, V11, P461, DOI 10.1016/0260-6917(91)90009-Y
   Castelvecchi D, 2016, NATURE, V538, P21, DOI [10.1038/nature.2016.20491, 10.1038/538020a]
   Chandrasekar P, 2020, Scripting the future of Stack Overflow
   Chollet F., 2015, Keras
   Debbarma Mrinal Kanti, 2013, International Journal of Computer and Communication Engineering, V2, P129
   Deloitte, 2020, Annual report
   Dilhara M, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3453478
   Gao W, 2022, INT J SOFTW ENG KNOW, V32, P227, DOI 10.1142/S0218194022500073
   Gupta S, 2021, What is the best language for machine learning?
   Hamidi A, 2021, IEEE INT WORK C SO, P58, DOI 10.1109/SCAM52516.2021.00016
   Hayes AF, 2007, COMMUN METHODS MEAS, V1, P77, DOI 10.1080/19312450709336664
   Huang CR, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2017), P317, DOI 10.1109/ICWS.2017.122
   Humbatova N, 2020, PROC INT CONF SOFTW, P1110, DOI 10.1145/3377811.3380395
   Islam MJ, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P510, DOI 10.1145/3338906.3338955
   Islam MJ, 2019, Arxiv, DOI arXiv:1906.11940
   Jordan MI, 2015, SCIENCE, V349, P255, DOI 10.1126/science.aaa8415
   Khandkar S. H., 2009, OPEN CODING, V23
   Kou BN, 2022, IEEE WORK CONF MIN S, P247, DOI 10.1145/3524842.3528487
   Krippendorff K., 2011, Computing krippendorff's alpha-reliability
   LaMorte WW, 2017, Mann whitney u test (wilcoxon rank sum test)
   Liu JK, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P919, DOI 10.1145/3468264.3468582
   Loper E, 2002, PREPRINT
   Lutz LM, 2017, ENERG POLICY, V105, P136, DOI 10.1016/j.enpol.2017.02.019
   Lyu YZ, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3447876
   Majidi F, 2022, PREPRINT
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Marzi G, 2024, METHODSX, V12, DOI 10.1016/j.mex.2023.102545
   Medeiros M, 2020, PROC IEEE INT CONF S, P766, DOI 10.1109/ICSME46990.2020.00086
   Meng XR, 2016, J MACH LEARN RES, V17
   MOOSELab, 2022, Replication: What causes exceptions in machine learning applications? Mining machine learning-related stack traces on Stack Overflow
   NewVantage Partners, 2022, The quest to achieve data-driven leadership: A progress report on the state of corporate data initiatives
   Nguyen G, 2019, ARTIF INTELL REV, V52, P77, DOI 10.1007/s10462-018-09679-z
   Overflow S, 2021, Stack Overflow developer survey 2021
   Paszke A., 2019, Advances in Neural Information Processing Systems, ppp 8024, DOI DOI 10.48550/ARXIV.1912.01703
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Raschka S, 2020, INFORMATION, V11, DOI 10.3390/info11040193
   Rubei R, 2020, INFORM SOFTWARE TECH, V127, DOI 10.1016/j.infsof.2020.106367
   Sabor KK, 2020, INFORM SOFTWARE TECH, V123, DOI 10.1016/j.infsof.2019.106205
   Stol KJ, 2016, PROC INT CONF SOFTW, P120, DOI 10.1145/2884781.2884833
   Sui L, 2017, ASIA PAC SOFWR ENG, P672, DOI 10.1109/APSEC.2017.83
   Sun XB, 2017, ASIA PAC SOFWR ENG, P348, DOI 10.1109/APSEC.2017.41
   Wolf T, 2020, Arxiv, DOI arXiv:1910.03771
   Xu A., 2018, P EMNLP WORKSH W NUT, P137
   Zhang JS, 2015, KNOWL-BASED SYST, V89, P1, DOI 10.1016/j.knosys.2015.06.014
   Zhang R, 2020, PROC INT CONF SOFTW, P1159, DOI 10.1145/3377811.3380362
   Zhang TY, 2019, PROC INT SYMP SOFTW, P104, DOI 10.1109/ISSRE.2019.00020
NR 57
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2024
VL 29
IS 5
AR 107
DI 10.1007/s10664-024-10499-9
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XK5A5
UT WOS:001261579600001
DA 2024-08-05
ER

PT J
AU Almonte, L
   Guerra, E
   Cantador, I
   de Lara, J
AF Almonte, Lissette
   Guerra, Esther
   Cantador, Ivan
   de Lara, Juan
TI Engineering recommender systems for modelling languages: concept, tool
   and evaluation
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Recommender systems; Modelling languages; Model-driven engineering;
   Domain-specific languages; User study
AB Recommender systems (RSs) are ubiquitous in all sorts of online applications, in areas like shopping, media broadcasting, travel and tourism, among many others. They are also common to help in software engineering tasks, including software modelling, where we are recently witnessing proposals to enrich modelling languages and environments with RSs. Modelling recommenders assist users in building models by suggesting items based on previous solutions to similar problems in the same domain. However, building a RS for a modelling language requires considerable effort and specialised knowledge. To alleviate this problem, we propose an automated, model-driven approach to create RSs for modelling languages. The approach provides a domain-specific language called Droid to configure every aspect of the RS: the type of the recommended modelling elements, the gathering and preprocessing of training data, the recommendation method, and the metrics used to evaluate the created RS. The RS so configured can be deployed as a service, and we offer out-of-the-box integration with Eclipse modelling editors. Moreover, the language is extensible with new data sources and recommendation methods. To assess the usefulness of our proposal, we report on two evaluations. The first one is an offline experiment measuring the precision, completeness and diversity of recommendations generated by several methods. The second is a user study - with 40 participants - to assess the perceived quality of the recommendations. The study also contributes with a novel evaluation methodology and metrics for RSs in model-driven engineering.
C1 [Almonte, Lissette; Guerra, Esther; Cantador, Ivan; de Lara, Juan] Univ Autonoma Madrid, Comp Sci Dept, Madrid, Spain.
C3 Autonomous University of Madrid
RP Almonte, L (corresponding author), Univ Autonoma Madrid, Comp Sci Dept, Madrid, Spain.
EM Lissette.Almonte@uam.es; Esther.Guerra@uam.es; Ivan.Cantador@uam.es;
   Juan.deLara@uam.es
RI Guerra, Esther/B-4977-2014; de Lara, Juan/B-5422-2014; Cantador,
   Ivan/B-9777-2014
OI Guerra, Esther/0000-0002-2818-2278; de Lara, Juan/0000-0001-9425-6362;
   Cantador, Ivan/0000-0001-6663-4231
FU Ministerio de Ciencia e Innovacin [813884]; EU [TED2021-129381B-C21,
   PID2021-122270OB-I00, PID2019-108965GB-I00, RED2022-134647-T]; Spanish
   Ministry of Science
FX This project has received funding from the EU Horizon 2020 research and
   innovation programme under the Marie Sk & lstrok;odowska-Curie grant
   agreement No 813884, and from the Spanish Ministry of Science (projects
   TED2021-129381B-C21, PID2021-122270OB-I00, PID2019-108965GB-I00, and
   RED2022-134647-T).
CR Abid SB, 2019, 31 INT C SOFTW ENG K, P355
   Abid S, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-10000-w
   Adomavicius G, 2005, IEEE T KNOWL DATA EN, V17, P734, DOI 10.1109/TKDE.2005.99
   Adomavicius G, 2012, IEEE T KNOWL DATA EN, V24, P896, DOI 10.1109/TKDE.2011.15
   Agt-Rickauer H, 2018, PROCEEDINGS OF THE 6TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, P71, DOI 10.5220/0006555700710082
   Ali NM, 2010, ASE 2010 25 IEEE ACM, P297
   Ali NM, 2013, IEEE T SOFTWARE ENG, V39, P1494, DOI 10.1109/TSE.2013.32
   Almonte L, 2020, MODELS COMPANION P, p66:1
   Almonte L, 2023, PROCEEDINGS OF THE 16TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING, SLE 2023, P97, DOI 10.1145/3623476.3623523
   Almonte L, 2022, IEEE INT CONF AUTOM, DOI 10.1145/3551349.3559521
   Almonte L, 2022, SOFTW SYST MODEL, V21, P249, DOI 10.1007/s10270-021-00905-x
   Almonte Lissette., 2021, Proceedings of the 14th ACM SIGPLAN International Conference on Software Language Engineering. SLE 2021, P22, DOI DOI 10.1145/3486608.3486905
   Amatriain X, 2011, RECOMMENDER SYSTEMS HANDBOOK, P39, DOI 10.1007/978-0-387-85820-3_2
   [Anonymous], 2017, UML 251 OMG specification
   [Anonymous], 2011, P 5 ACM C REC SYST, DOI DOI 10.1145/2043932.2043955
   Barriga A, 2022, SOFTW SYST MODEL, V21, P1739, DOI 10.1007/s10270-022-01005-0
   Barriga A, 2020, J OBJECT TECHNOL, V19, DOI 10.5381/jot.2020.19.2.a13
   Basciani F., 2014, 2 INT WORKSH MOD DRI, V1242, P66
   Brambilla M., 2012, Synthesis Lectures on Software Engineering, DOI [DOI 10.1007/978-3-031-02549-5, 10.2200/S00441ED1V01Y201208SWE001, DOI 10.2200/S00751ED2V01Y201701SWE004]
   Burgueño L, 2021, LECT NOTES COMPUT SC, V12751, P91, DOI 10.1007/978-3-030-79382-1_6
   Burke R, 2002, USER MODEL USER-ADAP, V12, P331, DOI 10.1023/A:1021240730564
   Cerqueira ThacianaG. O., 2016, SEKE, P644, DOI DOI 10.18293/SEKE2016-147
   Di Rocco J, 2022, PROCEEDINGS OF THE 25TH INTERNATIONAL ACM/IEEE CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS, MODELS 2022, P154, DOI 10.1145/3550355.3552459
   Di Rocco J, 2023, SOFTW SYST MODEL, V22, P203, DOI 10.1007/s10270-022-00994-2
   Di Rocco J, 2021, 24TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2021), P70, DOI 10.1109/MODELS50736.2021.00016
   Di Rocco J, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09963-7
   Di Ruscio D, 2022, SOFTW SYST MODEL, V21, P437, DOI 10.1007/s10270-021-00970-2
   Di Sipio C, 2021, 15TH ACM CONFERENCE ON RECOMMENDER SYSTEMS (RECSYS 2021), P741, DOI 10.1145/3460231.3478885
   Dyck A, 2014, PROCEEDINGS OF THE 2014 2ND INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT (MODELSWARD 2014), P282
   Elkamel A, 2016, I C COMP SYST APPLIC
   Espinosa R, 2013, 3 INT S DAT DRIV PRO, V1027, P46
   Espinosa R, 2019, COMPUT STAND INTER, V65, P143, DOI 10.1016/j.csi.2019.03.004
   Fellmann M, 2018, BUS INFORM SYST ENG+, V60, P21, DOI 10.1007/s12599-018-0517-5
   Fleiss J. L., 2003, Statistical methods for rates and proportions, V3rd, P598, DOI [DOI 10.1002/0471445428.CH18, 10.1002/0471445428.ch18]
   FLEISS JL, 1971, PSYCHOL BULL, V76, P378, DOI 10.1037/h0031619
   Garbe H, 2012, E LEARNING
   Gomes P, 2004, LECT NOTES COMPUT SC, V3155, P184
   Gunawardana A., 2015, Recommender Systems Handbook, P265
   López JAH, 2022, SOFTW SYST MODEL, V21, P1715, DOI 10.1007/s10270-021-00960-4
   Hornung T, 2009, 17 ANN WORKSH INF TE
   Hornung T, 2008, LECT NOTES COMPUT SC, V5231, P265, DOI 10.1007/978-3-540-87877-3_20
   Huh J, 2009, IEEE AUS SOFT ENGR, P111, DOI 10.1109/ASWEC.2009.21
   Iovino L, 2020, J OBJECT TECHNOL, V19, DOI 10.5381/jot.2020.19.2.a17
   Jannach D, 2016, PROCEEDINGS OF THE 10TH ACM CONFERENCE ON RECOMMENDER SYSTEMS (RECSYS'16), P7, DOI 10.1145/2959100.2959186
   Ji YT, 2020, PROCEEDINGS OF THE 43RD INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL (SIGIR '20), P1749, DOI 10.1145/3397271.3401233
   Koschmider A, 2011, DATA KNOWL ENG, V70, P483, DOI 10.1016/j.datak.2011.02.002
   Kuschke T, 2017, 39 INT C SOFTW ENG I, P303
   Kuschke T, 2013, LECT NOTES COMPUT SC, V8107, P170, DOI 10.1007/978-3-642-41533-3_11
   Liu F, 2022, PROC INT CONF SOFTW, P1294, DOI 10.1145/3510003.3510154
   Mäder P, 2021, IEEE T SOFTWARE ENG, V47, P1431, DOI 10.1109/TSE.2019.2924886
   Marchezan L, 2023, 27TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING, EASE 2023, P131, DOI 10.1145/3593434.3593482
   Marchezan L, 2023, SOFTW SYST MODEL, V22, P297, DOI 10.1007/s10270-022-00996-0
   Martínez-Lasaca F, 2023, J COMPUT LANG, V76, DOI 10.1016/j.cola.2023.101217
   Matikainen P, 2013, IEEE INT CONF ROBOT, P4545, DOI 10.1109/ICRA.2013.6631223
   Mazanek S, 2009, LECT NOTES COMPUT SC, V5795, P322, DOI 10.1007/978-3-642-04425-0_24
   Moha Naouel, 2010, International Journal on Software Tools for Technology Transfer, V12, P273, DOI 10.1007/s10009-010-0150-1
   Mora Segura A, 2023, Softw Syst Model
   Mussbacher G, 2020, SOFTW SYST MODEL, V19, P1045, DOI 10.1007/s10270-020-00814-5
   Nair A, 2021, SOFTW SYST MODEL, V20, P1159, DOI 10.1007/s10270-020-00841-2
   Neubauer P, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P127, DOI 10.1109/SANER.2017.7884615
   Ohrndorf M, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3419017
   Ohrndorf M, 2018, PROC IEEE ACM INT C, P105, DOI 10.1145/3183440.3183498
   Oliveira MCD, 2019, J Syst Softw, V158
   Paydar S, 2015, AUTOMAT SOFTW ENG, V22, P241, DOI 10.1007/s10515-014-0144-4
   Paydar S, 2015, INFORM SOFTWARE TECH, V57, P543, DOI 10.1016/j.infsof.2014.06.007
   Pescador A, 2016, IEEE INT CONF AUTOM, P438, DOI 10.1145/2970276.2970328
   Raza S, 2019, COMPUT SCI REV, V31, P84, DOI 10.1016/j.cosrev.2019.01.001
   Reitermanova Z., 2010, WDS, V10, P31
   Ricci F., 2022, Recommender Systems Handbook, P1, DOI [10.1007/978-1-0716-2197-41, DOI 10.1007/978-1-0716-2197-41]
   Robbins JE, 1998, KNOWL-BASED SYST, V11, P47, DOI 10.1016/S0950-7051(98)00055-0
   Robillard MP, 2010, IEEE SOFTWARE, V27, P80, DOI 10.1109/MS.2009.161
   Rojas Gonzalo, 2013, 2013 32nd International Conference of the Chilean Computer Science Society (SCCC). Proceedings, P16, DOI 10.1109/SCCC.2013.17
   Rojas G, 2009, LECT NOTES COMPUT SC, V5692, P252, DOI 10.1007/978-3-642-03964-5_24
   Said A, 2014, PROCEEDINGS OF THE 8TH ACM CONFERENCE ON RECOMMENDER SYSTEMS (RECSYS'14), P371, DOI 10.1145/2645710.2645712
   Cuadrado JS, 2018, SOFTW SYST MODEL, V17, P779, DOI 10.1007/s10270-016-0541-1
   Savary-Leblanc M, 2021, 24TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2021), P631, DOI 10.1109/MODELS-C53483.2021.00097
   Savary-Leblanc M, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2019), P648, DOI 10.1109/MODELS-C.2019.00099
   Shahare FF, 2017, 2017 INTERNATIONAL CONFERENCE ON INTELLIGENT COMPUTING AND CONTROL SYSTEMS (ICICCS), P1365, DOI 10.1109/ICCONS.2017.8250692
   Shilov N, 2023, SOFTW SYST MODEL, V22, P619, DOI 10.1007/s10270-022-01077-y
   Silveira T, 2019, INT J MACH LEARN CYB, V10, P813, DOI 10.1007/s13042-017-0762-9
   Steinberg D., 2008, EMF: Eclipse Modeling Framework
   Stephan M, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2019), P21, DOI 10.1109/ICSE-NIER.2019.00014
   Tinnes C, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P930, DOI 10.1109/ASE51524.2021.9678698
   Tuarob S, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09966-4
   Weyssow M, 2022, SOFTW SYST MODEL, V21, P1071, DOI 10.1007/s10270-022-00975-5
   Zangerle E, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3556536
NR 86
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2024
VL 29
IS 4
AR 102
DI 10.1007/s10664-024-10483-3
PG 44
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UQ7V4
UT WOS:001249598000002
OA hybrid
DA 2024-08-05
ER

PT J
AU Vale, G
   Costa, H
   Apel, S
AF Vale, Gustavo
   Costa, Heitor
   Apel, Sven
TI Predicting merge conflicts considering social and technical assets
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Collaborative software development; Version control systems; Developers
   role; Three-way merge; Merge conflicts
AB Concurrent contributions to a code base may introduce merge conflicts. Whereas merge conflicts are easy and common to introduce, resolving them is a difficult, time-consuming, and often error-prone task. Previous research concentrated on the emergence of merge conflicts considering technical assets in their analyses and often ignored the social perspective (e.g., developer roles). Our goal is to understand and predict merge conflicts considering social and technical assets. We devise three models for predicting merge conflicts based on common measures used by developers. The first model focuses on the social assets, the second on technical assets, and the third on technical and social assets. To evaluate our predictors, we report on a large-scale empirical study analyzing the histories of 66 real-world software systems. Specifically, we categorize developers into top or occasional contributors at project and merge-scenario level. We found that top contributors at project level and occasional contributors at merge-scenario level cause more merge conflicts than the other roles. Hence, the coordination of top contributors at project level and occasional contributors at merge-scenario level is a good starting point to minimize the occurrence of merge conflicts (especially because when these two developers work on the source branch, the chances of merge conflicts are 32.31%). Overall, we show that predicting merge conflicts incorporating developer roles is possible in practice with high accuracy (0.92) and recall (1.00) when combining technical and social assets, which is vital information to guide improvements on speculative merging techniques.
C1 [Vale, Gustavo; Apel, Sven] Saarland Univ, Saarland Informat Campus, Saarbrucken, Germany.
   [Costa, Heitor] Univ Fed Lavras, Dept Comp Sci, Lavras, Brazil.
C3 Saarland University; Universidade Federal de Lavras
RP Vale, G (corresponding author), Saarland Univ, Saarland Informat Campus, Saarbrucken, Germany.
EM vale@cs.uni-saarland.de; heitor@ufla.br; apel@cs.uni-saarland.de
OI Costa, Heitor/0000-0002-9903-7414
FU Conselho Nacional de Desenvolvimento Cientfico e Tecnolgico [AP
   206/14-1]; German Research Foundation [290136/2015-6]; Brazilian
   National Council for Scientific and Technological Development - CNPq
FX This work was supported by the German Research Foundation (AP 206/14-1)
   and by the Brazilian National Council for Scientific and Technological
   Development - CNPq (grant 290136/2015-6).
CR Accioly P, 2017, Empirical software engineering, P1
   Accioly P, 2018, IEEE WORK CONF MIN S, P576, DOI 10.1145/3196398.3196437
   [Anonymous], 2011, Fstmerge tool
   [Anonymous], 2012, Jdime tool
   Apel S., 2011, P 19 ACM SIGSOFT S 1, P190, DOI DOI 10.1145/2025113.2025141
   Apel S, 2012, IEEE INT CONF AUTOM, P120, DOI 10.1145/2351676.2351694
   Biehl JT, 2007, CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1 AND 2, P1313
   Bird C., 2008, Proceedings of the 16th ACM SIGSOFT International Symposium on Foundations of software engineering, P24
   Bird C, 2011, P 19 ACM SIGSOFT S 1, P4, DOI DOI 10.1145/2025113.2025119
   Bird C, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P1, DOI 10.1109/MSR.2009.5069475
   Boh WF, 2007, MANAGE SCI, V53, P1315, DOI 10.1287/mnsc.1060.0687
   Borges H, 2018, J SYST SOFTWARE, V146, P112, DOI 10.1016/j.jss.2018.09.016
   Brindescu C, 2020, PROC INT CONF SOFTW, P801, DOI 10.1145/3377811.3380344
   Brun Y., 2011, 19 ACM SIGSOFT S 13, P168, DOI [DOI 10.1145/2025113.2025139, 10.1145/2025113.2025139]
   Buffenbarger J., 1995, Software Configuration Management. ICSE SCM-4 and SCM-5 Workshops. Selected Papers, P153
   Businge J., 2017, Proceedings of the 13th International Conference on Predictive Models and Data Analytics in Software Engineering. PROMISE, P33, DOI [10.1145/3127005.3127009, DOI 10.1145/3127005.3127009]
   Costa C, 2014, INT J SOFTW ENG KNOW, V24, P1489, DOI 10.1142/S0218194014400166
   Crowston K, 2006, P HAW INT C SYST HIC, P45
   Dabbish L., 2012, Proc. ACM Computer Supported Cooperative Work, P1277
   Dewan P, 2007, ECSCW 2007: PROCEEDINGS OF THE 10TH EUROPEAN CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK, P159, DOI 10.1007/978-1-84800-031-5_9
   Dias K, 2020, INFORM SOFTWARE TECH, V121, DOI 10.1016/j.infsof.2020.106256
   Dinella E, 2023, IEEE T SOFTWARE ENG, V49, P1599, DOI 10.1109/TSE.2022.3183955
   Dinh-Trong TT, 2005, IEEE T SOFTWARE ENG, V31, P481, DOI 10.1109/TSE.2005.73
   Estler HC, 2014, INT CONF GLOBAL SOFT, P26, DOI 10.1109/ICGSE.2014.17
   Fan Y., 2018, EMPIR SOFTW ENG, P1
   Foucault M, 2015, INFORM SOFTWARE TECH, V64, P102, DOI 10.1016/j.infsof.2015.01.013
   Fritz T, 2007, P 6 JOINT M EUR SOFT, P341, DOI DOI 10.1145/1287624.1287673
   Ghiotto G, 2018, Trans Softw Eng, P1
   Gousios G, 2016, PROC INT CONF SOFTW, P285, DOI 10.1145/2884781.2884826
   Greiler M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P2, DOI 10.1109/MSR.2015.8
   Guimaraes ML, 2012, PROC INT CONF SOFTW, P342, DOI 10.1109/ICSE.2012.6227180
   Halin A, 2019, EMPIR SOFTW ENG, V24, P674, DOI 10.1007/s10664-018-9635-4
   Hattori L., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P235, DOI 10.1145/1810295.1810339
   Joblin M, 2017, PROC INT CONF SOFTW, P164, DOI 10.1109/ICSE.2017.23
   Joblin M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P563, DOI 10.1109/ICSE.2015.73
   Just S, 2016, PROC INT SYMP SOFTW, P400, DOI 10.1109/ISSRE.2016.38
   Kasi BK, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P732, DOI 10.1109/ICSE.2013.6606619
   Kononenko O, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P124, DOI 10.1145/3183519.3183542
   Lessenich O, 2018, AUTOMAT SOFTW ENG, V25, P279, DOI 10.1007/s10515-017-0227-0
   Mckee S, 2017, PROC IEEE INT CONF S, P467, DOI 10.1109/ICSME.2017.53
   Meneely A, 2009, CCS'09: PROCEEDINGS OF THE 16TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P453
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Nagappan N, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P521, DOI 10.1145/1368088.1368160
   Nelson N. M, 2019, EMPIR SOFTW ENG, P1
   Nishimura Y, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P661, DOI 10.1109/SANER.2016.46
   Owhadi-Kareshk M, 2019, INT SYMP EMP SOFTWAR, P363
   Pinzger M., 2008, P 16 ACM SIGSOFT INT, P2, DOI DOI 10.1145/1453101.1453105
   Rahman F, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P491, DOI 10.1145/1985793.1985860
   Robles G, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P167, DOI 10.1109/MSR.2009.5069497
   Rocha T, 2019, J SYST SOFTWARE, V154, P176, DOI 10.1016/j.jss.2019.04.060
   Sarma A, 2012, IEEE T SOFTWARE ENG, V38, P889, DOI 10.1109/TSE.2011.64
   Shafiq S, 2021, 2021 IEEE/ACM JOINT 15TH INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESSES AND 16TH ACM/IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING (ICSSP/ICGSE 2021), P39, DOI 10.1109/ICSSP-ICGSE52873.2021.00014
   Siegmund J, 2015, EMPIR SOFTW ENG, V20, P1159, DOI 10.1007/s10664-014-9318-8
   Storey MA, 2017, IEEE T SOFTWARE ENG, V43, P185, DOI 10.1109/TSE.2016.2584053
   Storey Margaret-Anne, 2013, P 2013 C COMPUTER SU, P103
   Terceiro Antonio, 2010, 2010 Proceedings of 24th Brazilian Symposium on Software Engineering (SBES 2010), P21, DOI 10.1109/SBES.2010.26
   Thongtanunam P, 2016, PROC INT CONF SOFTW, P1039, DOI 10.1145/2884781.2884852
   Trif M, 2021, P INT C INT COMP COM, P251
   Tsay J, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P356, DOI 10.1145/2568225.2568315
   Vale G, 2023, Predicting merge conflicts considering social and technical assets available
   Vale G, 2021, Trans Softw Eng (TSE), P1
   Vale G, 2020, EMPIR SOFTW ENG, V25, P402, DOI 10.1007/s10664-019-09774-x
   Westfechtel B., 1991, Proceedings of the 3rd International Workshop on Software Configuration Management, P68, DOI 10.1145/111062.111071
   Weyuker EJ, 2008, EMPIR SOFTW ENG, V13, P539, DOI 10.1007/s10664-008-9082-8
   Woolson R. F., 2007, International Encyclopedia of Statistical Science, P1, DOI 10.1002/0470011815. b2a15177
   Wuensche T, 2020, IEEE INT CONF SOFTW, P353, DOI 10.1109/ICST46399.2020.00043
   ZAR JH, 1972, J AM STAT ASSOC, V67, P578, DOI 10.2307/2284441
   Zimmermann T, 2004, PROC INT CONF SOFTW, P563, DOI 10.1109/ICSE.2004.1317478
NR 68
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2024
VL 29
IS 1
AR 24
DI 10.1007/s10664-023-10395-8
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CF5J9
UT WOS:001123846400001
OA hybrid
DA 2024-08-05
ER

PT J
AU Aktas, EU
   Cakmak, E
   Inan, MC
   Yilmaz, C
AF Aktas, Ethem Utku
   Cakmak, Ebru
   Inan, Mete Cihad
   Yilmaz, Cemal
TI Improving the quality of software issue report descriptions in Turkish:
   An industrial case study at Softtech
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Issue triaging; Issue report quality; Issue report classification;
   Morphological analysis
AB Issue reports are an important part of the software development process. They help developers identify and fix problems in their code. However, problems described in these reports often lack important information, such as the Observed Behavior (OB), Expected Behavior (EB), and Steps to Reproduce (S2R). This can lead to valuable developer time being wasted on gathering the relevant information. This study aims to address this issue by developing a tool that guides reporters in providing the necessary information in an industrial setting. The study is conducted at Softtech, a software subsidiary of the largest private bank in Turkey. The proposed approach is developed for issue reports written specifically in Turkish language. It is motivated by the need for issue report classification tools that can handle the unique characteristics of the Turkish language, such as the presence of many compound words. We first manually analyze and label 1, 041 issue reports for the existence of OB, S2R, and EB, and then present the specific patterns we found describing the related information. Next, we use morphological analysis to extract keywords and suffixes, and then use them for classification with a machine learning based approach. In addition, we conduct a feasibility study to assess the potential of using large language models for issue report classification tasks as a direction for future research. The results indicate that the tool using the machine learning-based approach can be used to guide in improving the quality of issue reports at Softtech, thereby saving valuable developer time.
C1 [Aktas, Ethem Utku; Inan, Mete Cihad] Softtech Inc, Res & Dev Ctr, TR-34947 Istanbul, Turkiye.
   [Cakmak, Ebru] Microsoft EMEA, Istanbul, Turkiye.
   [Yilmaz, Cemal] Sabanci Univ, Fac Engn & Nat Sci, TR-34956 Istanbul, Turkiye.
C3 Sabanci University
RP Aktas, EU (corresponding author), Softtech Inc, Res & Dev Ctr, TR-34947 Istanbul, Turkiye.
EM utku.aktas@softtech.com.tr; ebrucakmak@microsoft.com;
   cihad.inan@softtech.com.tr; cyilmaz@sabanciuniv.edu
OI Aktas, Ethem Utku/0000-0001-9522-5357
CR Akin AA., 2007, Structure, V10, P1
   Aktas EU, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10228-0
   Aktas EU, 2020, EMPIR SOFTW ENG, V25, P3544, DOI 10.1007/s10664-020-09846-3
   Behrang F, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P164, DOI 10.1145/3213846.3213854
   Bishop CM., 2006, PATTERN RECOGN
   Breiman L, 2001, MACH LEARN, V45, P5, DOI 10.1023/A:1010933404324
   Brown T. B., 2020, P 34 INT C NEURAL IN, P1
   Chantree F, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P59
   Chaparro O, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P86, DOI 10.1145/3338906.3338947
   Chaparro O, 2019, EMPIR SOFTW ENG, V24, P2947, DOI 10.1007/s10664-018-9672-z
   Chaparro O, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P218, DOI [10.1109/SANER.2019.8667985, 10.1109/saner.2019.8667985]
   Chaparro O, 2017, PROC IEEE INT CONF S, P376, DOI 10.1109/ICSME.2017.100
   Chaparro O, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P396, DOI 10.1145/3106237.3106285
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Çöltekin Ç, 2010, LREC 2010 - SEVENTH INTERNATIONAL CONFERENCE ON LANGUAGE RESOURCES AND EVALUATION
   Çöltekin Ç, 2014, LREC 2014 - NINTH INTERNATIONAL CONFERENCE ON LANGUAGE RESOURCES AND EVALUATION, P1079
   CoreNLP, 2021, About us
   Devlin J, 2019, Arxiv, DOI arXiv:1810.04805
   Dougherty Geoff, 2012, PATTERN RECOGNITION
   Fazzini M, 2023, IEEE T SOFTWARE ENG, V49, P1246, DOI 10.1109/TSE.2022.3174028
   Femmer H., 2014, PROC 1 INT WORKSHOP, P10
   Feng SD, 2024, Arxiv, DOI arXiv:2306.01987
   Gao JF, 2018, ACM/SIGIR PROCEEDINGS 2018, P1371, DOI 10.1145/3209978.3210183
   Hata M, 2019, PROC IEEE INT CONF S, P422, DOI 10.1109/ICSME.2019.00074
   Inan MC, 2023, IN PRESS
   Joachims T., 1998, Text Categorization with Support Vector Machines: Learning with Many Relevant Features, P137, DOI DOI 10.1007/BFB0026683
   Joulin A., 2017, P 15 C EUR CHAPT ASS, P427, DOI DOI 10.18653/V1/E17-2068
   Kallis R, 2022, 2022 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON NATURAL LANGUAGE-BASED SOFTWARE ENGINEERING (NLBSE 2022), P25, DOI 10.1145/3528588.3528664
   Kallis R, 2021, SCI COMPUT PROGRAM, V205, DOI 10.1016/j.scico.2020.102598
   Kallis R, 2019, PROC IEEE INT CONF S, P406, DOI 10.1109/ICSME.2019.00070
   Kang S, 2023, PROC INT CONF SOFTW, P2312, DOI 10.1109/ICSE48619.2023.00194
   Lemaître G, 2017, J MACH LEARN RES, V18
   Maiya AS., 2022, J. Mach. Learn. Res, V23, P7070
   Manning C. D., 1999, Foundations of Statistical Natural Language Processing
   Manning CD., 2008, Introduction to Information Retrieval, DOI [DOI 10.1017/CBO9780511809071, 10.1017/CBO9780511809071]
   Oflazer K., 1994, Literary & Linguistic Computing, V9, P137, DOI 10.1093/llc/9.2.137
   Oflazer K, 2014, LANG RESOUR EVAL, V48, P639, DOI 10.1007/s10579-014-9267-2
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Sanh V, 2020, Arxiv, DOI [arXiv:1910.01108, 10.48550/arXiv.1910.01108]
   Shokripour R, 2015, J SYST SOFTWARE, V102, P109, DOI 10.1016/j.jss.2014.12.049
   Song Y., 2023, arXiv
   Song Y, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P344, DOI 10.1145/3540250.3549131
   Song Y, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1551, DOI 10.1145/3368089.3417928
   Thompson S.K., 2012, Sampling, V755
   Zeller A, 2009, WHY PROGRAMS FAIL: A GUIDE TO SYSTEMATIC DEBUGGING, 2ND EDITION
   Zhang ZX, 2023, Arxiv, DOI arXiv:2301.07775
   Zimmermann T, 2010, IEEE T SOFTWARE ENG, V36, P618, DOI 10.1109/TSE.2010.63
NR 47
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2024
VL 29
IS 2
AR 43
DI 10.1007/s10664-023-10434-4
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HM8N1
UT WOS:001160014500002
DA 2024-08-05
ER

PT J
AU Nikolaidis, N
   Mittas, N
   Ampatzoglou, A
   Feitosa, D
   Chatzigeorgiou, A
AF Nikolaidis, Nikolaos
   Mittas, Nikolaos
   Ampatzoglou, Apostolos
   Feitosa, Daniel
   Chatzigeorgiou, Alexander
TI A metrics-based approach for selecting among various refactoring
   candidates
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Technical Debt; Refactoring; Empirical Quantitative Analysis; Interest;
   Principal
ID TECHNICAL DEBT; SOFTWARE; QUALITY; IMPACT
AB Refactoring is the most prominent way of repaying Technical Debt and improving software maintainability. Despite the acknowledgement of refactorings as a state-of-practice technique (both by industry and academia), refactoring-based quality optimizations are debatable due to three important concerns: (a) the impact of a refactoring on quality is not always positive; (b) the list of available refactoring candidates is usually vast, restricting developers from applying all suggestions; and (c) there is no empirical evidence on which parameters are related to positive refactoring impact on quality. To alleviate these concerns, we reuse a benchmark (constructed in a previous study) of real-world refactorings having either a positive or negative impact on quality; and we explore the parameters (structural characteristics of classes) affecting the impact of the refactoring. Based on the findings, we propose a metrics-based approach for guiding practitioners on how to prioritize refactoring candidates. The results of the study suggest that classes with high coupling and large size should be given priority, since they tend to have a positive impact on technical debt.
C1 [Nikolaidis, Nikolaos; Ampatzoglou, Apostolos; Chatzigeorgiou, Alexander] Univ Macedonia, Dept Appl Informat, Thessaloniki, Greece.
   [Mittas, Nikolaos] Int Hellen Univ, Dept Chem, Kavala, Greece.
   [Feitosa, Daniel] Univ Groningen, Bernoulli Inst Math Comp Sci & Artificial Intellig, Groningen, Netherlands.
C3 University of Macedonia; International Hellenic University; University
   of Groningen
RP Ampatzoglou, A (corresponding author), Univ Macedonia, Dept Appl Informat, Thessaloniki, Greece.
EM nnikolaidis@uom.edu.gr; nmittas@chem.ihu.gr; a.ampatzoglou@uom.edu.gr;
   d.feitosa@rug.nl; achat@uom.edu.gr
RI Feitosa, Daniel/M-8700-2014; Chatzigeorgiou, Alexandros/AAL-6077-2021
OI Feitosa, Daniel/0000-0001-9371-232X; Chatzigeorgiou,
   Alexander/0000-0002-5381-8418
CR AlOmar EA, 2019, INT SYMP EMP SOFTWAR, P42
   Alshayeb M, 2009, INFORM SOFTWARE TECH, V51, P1319, DOI 10.1016/j.infsof.2009.04.002
   Alves NSR, 2016, INFORM SOFTWARE TECH, V70, P100, DOI 10.1016/j.infsof.2015.10.008
   Ampatzoglou AA, 2016, 2015 INT S BUS MOD S
   Ampatzoglou A, 2019, PROCEEDINGS OF EASE 2019 - EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING, P346, DOI 10.1145/3319008.3320125
   Ampatzoglou A, 2020, INFORM SOFTWARE TECH, V128, DOI 10.1016/j.infsof.2020.106391
   Ampatzoglou A, 2018, 2018 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT), P115, DOI 10.1145/3194164.3194175
   Ampatzoglou A, 2015, INFORM SOFTWARE TECH, V64, P52, DOI 10.1016/j.infsof.2015.04.001
   Ampatzoglou Areti., 2015, Proceedings of the Fifth International Symposium on Business Modeling and Software Design - Volume 1: BMSD, P75, DOI DOI 10.5220/0005885700750085
   [Anonymous], 2012, SIGSOFT Softw Eng Notes, DOI DOI 10.1145/2108144.2108151
   Arvanitou EM, 2016, INFORM SOFTWARE TECH, V72, P110, DOI 10.1016/j.infsof.2015.12.010
   Arvanitou EM, 2020, 48 EUR SOFTW ENG ADV
   Avgeriou P, 2021, IEEE SOFTWARE, V38, P61, DOI 10.1109/MS.2020.3024958
   Calefato F, 2017, INT CONF GLOBAL SOFT, P56, DOI 10.1109/ICGSE.2017.1
   Campbell G., 2013, SONARQUBE IN ACTION
   Silva MCO, 2016, Arxiv, DOI arXiv:1604.01450
   Chaparro O, 2014, PROC IEEE INT CONF S, P456, DOI 10.1109/ICSME.2014.73
   Charalampidou S, 2017, IEEE T SOFTWARE ENG, V43, P954, DOI 10.1109/TSE.2016.2645572
   Chatzigeorgiou A, 2015, 2015 IEEE 7TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD) PROCEEDINGS, P53, DOI 10.1109/MTD.2015.7332625
   Digkas G, 2022, IEEE T SOFTWARE ENG, V48, P1705, DOI 10.1109/TSE.2020.3032557
   Du Bois B., 2003, InInternational Workshop on Evolution of Large-scale Industrial Software Applications, P37
   Falessi D, 2017, INT SYMP EMP SOFTWAR, P78, DOI 10.1109/ESEM.2017.14
   Fowler M., 1999, Refactoring: Improving the Design of Existing Programs
   Ge X, 2012, PROC INT CONF SOFTW, P211, DOI 10.1109/ICSE.2012.6227192
   Gousios G, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P358, DOI 10.1109/ICSE.2015.55
   Hastings T, 2022, IEEE INT SYMP SOFTW, P201, DOI 10.1109/ISSREW55968.2022.00068
   Higo Y, 2008, ASWEC 2008: 19TH AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P219, DOI 10.1109/ASWEC.2008.23
   Ichtsis A, 2022, INTERNATIONAL CONFERENCE ON TECHNICAL DEBT 2022 (TECHDEBT 2022), P61, DOI 10.1145/3524843.3528089
   Ivers James, 2022, ESEC/FSE 2022: Proceedings of the 30th ACM Joint European Software Engineering Conference and Symposium on the Foundations of Software Engineering, P1544, DOI 10.1145/3540250.3558954
   Karmakar S, 2022, 16 ACM IEEE INT S EM, P295
   Kataoka Y, 2002, PROC IEEE INT CONF S, P576, DOI 10.1109/ICSM.2002.1167822
   Kitchenham B, 1996, IEEE SOFTWARE, V13, P12, DOI 10.1109/52.476281
   Kurbatova Z., 2020, P IEEEACM 42 INT C S, P315
   Lefever J, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2021), P121, DOI 10.1109/ICSE-SEIP52600.2021.00021
   Lehman MM, 1997, FOURTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P20, DOI 10.1109/METRIC.1997.637156
   Lenarduzzi V, 2021, J SYST SOFTWARE, V171, DOI 10.1016/j.jss.2020.110806
   Letouzey J-L, 2012, Proceedings 2012 Third International Workshop on Managing Technical Debt (MTD 2012), P31, DOI 10.1109/MTD.2012.6225997
   Li ZY, 2015, J SYST SOFTWARE, V101, P193, DOI 10.1016/j.jss.2014.12.027
   Martini A, 2018, SCI COMPUT PROGRAM, V163, P42, DOI 10.1016/j.scico.2018.03.007
   Mavridis A, 2012, 2012 EIGHTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY (QUATIC 2012), P272, DOI 10.1109/QUATIC.2012.53
   Meananeatra Panita, 2011, 8th Electrical Engineering/ Electronics, Computer, Telecommunications and Information Technology (ECTI) Association of Thailand - Conference 2011, P492
   Soares DM, 2021, SOFTWARE PRACT EXPER, V51, P1173, DOI 10.1002/spe.2946
   Moser R, 2008, LECT NOTES COMPUT SC, V5082, P252
   Murphy-Hill E, 2012, IEEE T SOFTWARE ENG, V38, P5, DOI 10.1109/TSE.2011.41
   Murphy-Hill E, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P421, DOI 10.1145/1368088.1368146
   Nikolaidis N, 2023, 6 INT C TECHN DEBT T
   Nikolaidis N, 2022, 6 INT WORKSH MACH LE
   Nikolaidis N, 2023, Trans Softw Eng
   Riaz M, 2009, INT SYMP EMP SOFTWAR, P368, DOI 10.1109/esem.2009.5314233
   Runeson P., 2012, Case Study Research in Software Engineering: Guidelines and Examples
   Schnappinger M, 2019, INT C PROGRAM COMPRE, P243, DOI 10.1109/ICPC.2019.00043
   Sharma T, 2016, 2016 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON BRINGING ARCHITECTURAL DESIGN THINKING INTO DEVELOPERS DAILY ACTIVITIES (BRIDGE), P1, DOI [10.1145/2896935.2896938, 10.1109/Bridge.2016.009]
   Silva D, 2017, IEEE WORK CONF MIN S, P269, DOI 10.1109/MSR.2017.14
   Smiari P, 2022, INFORM SOFTWARE TECH, V143, DOI 10.1016/j.infsof.2021.106760
   Soetens QD, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P313, DOI 10.1109/QUATIC.2010.58
   Stroggylos K., 2007, IEEE, V2007, P10
   Stroulia E, 2001, OOIS 2001: 7TH INTERNATIONAL CONFERENCE ON OBJECT-ORIENTED INFORMATION SYSTEMS, PROCEEDINGS, P113
   Tsantalis N, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P329
   Tsantalis N, 2022, IEEE T SOFTWARE ENG, V48, P930, DOI 10.1109/TSE.2020.3007722
   Tsintzira A.A., 2019, 15 CHIN EUR INT S SO
   van Koten C, 2006, INFORM SOFTWARE TECH, V48, P59, DOI 10.1016/j.infsof.2005.03.002
   Wilking D., 2007, E-INFORMATICA, V1, P27
   Yli-Huumo J, 2016, J SYST SOFTWARE, V120, P195, DOI 10.1016/j.jss.2016.05.018
   Zhang XH, 2023, IEEE T SOFTWARE ENG, V49, P849, DOI 10.1109/TSE.2022.3165056
   Zhou Yuming, 2008, Wuhan University Journal of Natural Sciences, V13, P14, DOI 10.1007/s11859-008-0104-6
   Zou WQ, 2019, EMPIR SOFTW ENG, V24, P3871, DOI 10.1007/s10664-019-09720-x
NR 66
TC 0
Z9 0
U1 1
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2024
VL 29
IS 1
AR 25
DI 10.1007/s10664-023-10412-w
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CF5J9
UT WOS:001123846400002
DA 2024-08-05
ER

PT J
AU Zheng, SY
   Adams, B
   Hassan, AE
AF Zheng, Shenyu
   Adams, Bram
   Hassan, Ahmed E.
TI Does using Bazel help speed up continuous integration builds?
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Build systems; Continuous integration; Empirical study
ID INCREMENTAL BUILD
AB A long continuous integration (CI) build forces developers to wait for CI feedback before starting subsequent development activities, leading to time wasted. In addition to a variety of build scheduling and test selection heuristics studied in the past, new artifact-based build technologies like Bazel have built-in support for advanced performance optimizations such as parallel build and incremental build (caching of build results). However, little is known about the extent to which new build technologies like Bazel deliver on their promised benefits, especially for long-build duration projects. In this study, we collected 383 Bazel projects from GitHub, then studied their parallel and incremental build usage of Bazel in popular CI services (GitHub Actions, CircleCI, Travis CI, or Buildkite), and compared the results with Maven projects. We conducted 3,500 experiments on 383 Bazel projects and analyzed the build logs of a subset of 70 buildable projects to evaluate the performance impact of Bazel's parallel builds. Additionally, we performed 102,232 experiments on the 70 buildable projects' last 100 commits to evaluate Bazel's incremental build performance. Our results show that 31.23% of Bazel projects adopt a CI service but do not use Bazel in the CI service, while for those who do use Bazel in CI, 27.76% of them use other tools to facilitate Bazel's execution. Compared to sequential builds, the median speedups for long-build duration projects are 2.00x, 3.84x, 7.36x, and 12.80x, at parallelism degrees 2, 4, 8, and 16, respectively, even though, compared to a clean build, applying incremental build achieves a median speedup of 4.22x (with a build system tool-independent CI cache) and 4.71x (with a build system tool-specific cache) for long-build duration projects. Our results provide guidance for developers to improve the usage of Bazel in their projects, and emphasize the importance of exploring modern build systems due to the current lack of literature and their potential advantages within contemporary software practices such as cloud computing and microservice.
C1 [Zheng, Shenyu; Adams, Bram; Hassan, Ahmed E.] Queens Univ, Sch Comp, Kingston, ON, Canada.
C3 Queens University - Canada
RP Zheng, SY (corresponding author), Queens Univ, Sch Comp, Kingston, ON, Canada.
EM 22sz3@queensu.ca; bram.adams@queensu.ca; hassan@queensu.ca
OI Hassan, Ahmed E./0000-0001-7749-5513
FU NSERC
FX No Statement AvailableDAS:The datasets have been made publicly available
   on GitHub for replication purposes at this link:
   https://github.com/SAILResearch/replication-23-shenyu-bazel_usage
CR Adams B, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 5, P78, DOI 10.1109/SANER.2016.108
   Alfadel M, 2024, IN PRESS
   Amdahl G.M., 1967, P APRIL 18 20 1967 S, P483, DOI DOI 10.1145/1465482.1465560
   Barney B., 2010, Lawrence Livermore National Laboratory, V6, P10
   Barrak A, 2021, J SYST SOFTWARE, V177, DOI 10.1016/j.jss.2021.110939
   Bazel, 2023, Bazel documentation
   Bazel-Remote, 2023, A remote cache for bazel
   Beheshtian MJ, 2022, IEEE T SOFTWARE ENG, V48, P2784, DOI 10.1109/TSE.2021.3070269
   Bernardo JH, 2023, EMPIR SOFTW ENG, V28, DOI 10.1007/s10664-023-10327-6
   Bettenburg Nicolas, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P124, DOI 10.1109/ICPC.2010.46
   Bezemer CP, 2017, EMPIR SOFTW ENG, V22, P3117, DOI 10.1007/s10664-017-9510-8
   Bird C, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P1, DOI 10.1109/MSR.2009.5069475
   Bramas B, 2020, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.247
   Broido AD, 2019, NAT COMMUN, V10, DOI 10.1038/s41467-019-08746-5
   Buck, 2023, Buck: A fast build tool
   Candido J, 2017, IEEE INT CONF AUTOM, P838, DOI 10.1109/ASE.2017.8115695
   Chong CY, 2015, J SYST SOFTWARE, V110, P28, DOI 10.1016/j.jss.2015.08.014
   CircleCI, 2023, Circleci documentation
   Cliff N., 1996, ORDINAL METHODS BEHA
   Dayani-Fard H, 2005, LECT NOTES COMPUT SC, V3442, P96, DOI 10.1007/978-3-540-31984-9_8
   DUNN OJ, 1964, TECHNOMETRICS, V6, P241, DOI 10.2307/1266041
   Duvall PM, 2007, Continuous integration: improving software quality and reducing risk
   Erdweg S, 2015, ACM SIGPLAN NOTICES, V50, P89, DOI [10.1145/2814270.2814316, 10.1145/2858965.2814316]
   Fan G, 2020, P 29 ACM SIGSOFT INT, P463, DOI [10.1145/3395363.3397388, DOI 10.1145/3395363.3397388]
   Garg S, 2019, 2019 2ND IEEE CONFERENCE ON MULTIMEDIA INFORMATION PROCESSING AND RETRIEVAL (MIPR 2019), P467, DOI 10.1109/MIPR.2019.00094
   Ghaleb TA, 2019, EMPIR SOFTW ENG, V24, P2102, DOI 10.1007/s10664-019-09695-9
   Ghaleb TM, 2021, Studying the unfulfilled promises of continuous integration
   GitHub, 2023, Github actions documentation
   Golzadeh M, 2022, EUR CON SFTWR MTNCE, P662, DOI 10.1109/SANER53432.2022.00084
   Hilton M, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P197, DOI 10.1145/3106237.3106270
   Hilton M, 2016, IEEE INT CONF AUTOM, P426, DOI 10.1145/2970276.2970358
   Humble Jez, 2010, Continuous Delivery: Reliable software releases through Build, Test and Deployment Automation
   Jendele L, 2019, IEEE INT CONF SOFTW, P457, DOI 10.1109/ICST.2019.00055
   Jin XH, 2020, PROC INT CONF SOFTW, P13, DOI 10.1145/3377811.3380437
   Kamath DM, 2023, Pragmatic approaches to schedule less builds in ci
   KRUSKAL WH, 1952, J AM STAT ASSOC, V47, P583, DOI 10.1080/01621459.1952.10483441
   Lamb C, 2022, IEEE SOFTWARE, V39, P62, DOI 10.1109/MS.2021.3073045
   Lianping Chen, 2015, IEEE Software, V32, P50, DOI 10.1109/MS.2015.27
   Licker N, 2019, PROC INT CONF SOFTW, P1234, DOI 10.1109/ICSE.2019.00125
   Linguist, 2023, github/linguist: Language savant. if your repository's language is being reported incorrectly, send us a pull request!
   Macho C, Empirical Software Engineering, V26, P1
   Maes-Bermejo M, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10117-6
   Mårtensson T, 2017, 2017 43RD EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P1, DOI 10.1109/SEAA.2017.30
   Maudoux G, 2017, P 10 SEM SER ADV TEC, P1
   Maven, 2023, Apache maven documentation
   McIntosh S, 2016, AUTOMAT SOFTW ENG, V23, P619, DOI 10.1007/s10515-015-0183-5
   McIntosh S, 2015, EMPIR SOFTW ENG, V20, P1587, DOI 10.1007/s10664-014-9324-x
   McIntosh S, 2012, EMPIR SOFTW ENG, V17, P578, DOI 10.1007/s10664-011-9169-5
   McIntosh S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P141, DOI 10.1145/1985793.1985813
   Memon A, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P233, DOI 10.1109/ICSE-SEIP.2017.16
   Misu MRH, 2024, ACM T SOFTW ENG METH, V33, DOI 10.1145/3635710
   Mokhov A, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3236774
   Morgenthaler JD, 2012, 2012 3 INT WORKSH MA, P1
   Pan RQ, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10066-6
   Pants, 2023, Pants
   Railic N, 2020, 2021 20TH INTERNATIONAL SYMPOSIUM INFOTEH-JAHORINA (INFOTEH), DOI 10.1109/INFOTEH51037.2021.9400696
   Randrianaina GA, 2022, PROC INT CONF SOFTW, P1584, DOI 10.1145/3510003.3510190
   Rausch T, 2017, IEEE WORK CONF MIN S, P345, DOI 10.1109/MSR.2017.54
   Robles G., 2006, P 3 INT WORKSHOP MIN, P3
   Savic M, 2019, INTEL SYST REF LIBR, V148, P1, DOI 10.1007/978-3-319-91196-0
   Sourcegraph, 2023, Sourcegraph
   Starlark, 2023, bazelbuild/starlark: Starlark language
   Suvorov R, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P160, DOI 10.1109/ICSM.2012.6405267
   Taube-Schock C, 2011, LECT NOTES COMPUT SC, V6813, P204, DOI 10.1007/978-3-642-22655-7_10
   TravisCI, 2023, Travis ci documentation
   Vakilian M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P123, DOI 10.1109/ICSE.2015.34
   Vasilescu B, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P805, DOI 10.1145/2786805.2786850
   Wang KY, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2021), P160, DOI 10.1109/ICSE-SEIP52600.2021.00025
   Weisberg S., 2013, Applied linear regression, DOI DOI 10.1002/0471704091
   Xia J, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY COMPANION (QRS-C), P311, DOI 10.1109/QRS-C.2017.59
   Zampetti F, 2020, EMPIR SOFTW ENG, V25, P1095, DOI 10.1007/s10664-019-09785-8
   Zoltagharinia M, 2017, IEEE WORK CONF MIN S, P312, DOI 10.1109/MSR.2017.7
NR 72
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2024
VL 29
IS 5
AR 110
DI 10.1007/s10664-024-10497-x
PG 42
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YZ6A5
UT WOS:001272336900001
DA 2024-08-05
ER

PT J
AU Pecorelli, F
   Grano, G
   Palomba, F
   Gall, HC
   De Lucia, A
AF Pecorelli, Fabiano
   Grano, Giovanni
   Palomba, Fabio
   Gall, Harald C.
   De Lucia, Andrea
TI Toward granular search-based automatic unit test case generation
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Search-based Software Testing; Test Code Quality; Automatic Test Case
   Generation
ID EVOLUTIONARY ALGORITHMS; TEST SMELLS; TEST CODE; METRICS
AB Unit testing verifies the presence of faults in individual software components. Previous research has been targeting the automatic generation of unit tests through the adoption of random or search-based algorithms. Despite their effectiveness, these approaches aim at creating tests by solely optimizing metrics like code coverage, without ensuring that the resulting tests have granularities that would allow them to verify both the behavior of individual production methods and the interaction between methods of the class under test. To address this limitation, we propose a two-step systematic approach to the generation of unit tests: we first force search-based algorithms to create tests that cover individual methods of the production code, hence implementing the so-called intra-method tests; then, we relax the constraints to enable the creation of intra-class tests that target the interactions among production code methods. The assessment of our approach is conducted through a mixed-method research design that combines statistical analyses with a user study. The key results report that our approach is able to keep the same level of code and mutation coverage while providing test suites that are more structured, more understandable and aligned to the design principles of unit testing.
C1 [Pecorelli, Fabiano; Palomba, Fabio; De Lucia, Andrea] Univ Salerno, SeSa Lab, Fisciano, Italy.
   [Grano, Giovanni] LocalStack, Zurich, Switzerland.
   [Gall, Harald C.] Univ Zurich, SEAL Lab, Zurich, Switzerland.
C3 University of Salerno; University of Zurich
RP Pecorelli, F (corresponding author), Univ Salerno, SeSa Lab, Fisciano, Italy.
EM fpecorelli@unisa.it; me@giograno.com; fpalomba@unisa.it;
   harald.gall@uzh.ch; adelucia@unisa.it
OI Pecorelli, Fabiano/0000-0003-2446-4291
FU Universit degli Studi di Salerno [PZ00P2_186090]; Swiss National Science
   Foundation (SNSF) through the SNF
FX Fabio gratefully acknowledges the support of the Swiss National Science
   Foundation (SNSF) through the SNF Project No. PZ00P2_186090 (TED).
CR Afshan S, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P352, DOI 10.1109/ICST.2013.11
   Ali S, 2010, IEEE T SOFTWARE ENG, V36, P742, DOI 10.1109/TSE.2009.52
   Ammann P., 2016, Introduction to software testing, DOI DOI 10.1017/9781316771273
   Anand S, 2013, J SYST SOFTWARE, V86, P1978, DOI 10.1016/j.jss.2013.02.061
   [Anonymous], 2021, Toward granular automatic unit test case generation-online appendix
   Arcuri A, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3293455
   Arcuri A, 2013, EMPIR SOFTW ENG, V18, P594, DOI 10.1007/s10664-013-9249-9
   Baltes S, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962628
   Barr ET, 2015, IEEE T SOFTWARE ENG, V41, P507, DOI 10.1109/TSE.2014.2372785
   Beller M, 2019, IEEE T SOFTWARE ENG, V45, P261, DOI 10.1109/TSE.2017.2776152
   Campos J, 2017, LECT NOTES COMPUT SC, V10452, P33, DOI 10.1007/978-3-319-66299-2_3
   Ceccato M, 2015, ACM T SOFTW ENG METH, V25, DOI 10.1145/2768829
   Conover W. J., 1999, PRACTICAL NONPARAMET
   Daka E, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P107, DOI 10.1145/2786805.2786838
   Dietrich J, 2017, J OBJECT TECHNOL, V16, DOI 10.5381/jot.2017.16.4.a1.
   Elish MO, 2006, 2006 30 ANN INT COMP, P1
   Erdogmus H, 2005, IEEE T SOFTWARE ENG, V31, P226, DOI 10.1109/TSE.2005.37
   Ferrer J, 2012, SOFTWARE PRACT EXPER, V42, P1331, DOI 10.1002/spe.1135
   Fowler M., 1999, Refactoring: Improving the Design of Existing Programs
   Fraser G, 2011, P 19 ACM SIGSOFT S 1, P416, DOI 10.1145/2025113.2025179
   Fraser G, 2016, 2016 IEEE/ACM 9TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST), P33, DOI [10.1145/2897010.2897020, 10.1109/SBST.2016.014]
   Fraser G, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2699688
   Fraser G, 2015, EMPIR SOFTW ENG, V20, P783, DOI 10.1007/s10664-013-9299-z
   Fraser G, 2015, EMPIR SOFTW ENG, V20, P611, DOI 10.1007/s10664-013-9288-2
   Fraser G, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2685612
   Fraser G, 2013, IEEE T SOFTWARE ENG, V39, P276, DOI 10.1109/TSE.2012.14
   Garousi V, 2018, J SYST SOFTWARE, V138, P52, DOI 10.1016/j.jss.2017.12.013
   Goldberg DE., 1989, GENETIC ALGORITHMS S, DOI DOI 10.1109/ICETEEEM.2012.6494460
   Grano G, 2021, IEEE T SOFTWARE ENG, V47, P2332, DOI 10.1109/TSE.2019.2946773
   Grano G, 2020, PROC IEEE INT CONF S, P336, DOI 10.1109/ICSME46990.2020.00040
   Grano G, 2018, INT C PROGRAM COMPRE, P348, DOI 10.1145/3196321.3196363
   Grano G, 2019, J SYST SOFTWARE, V156, P312, DOI 10.1016/j.jss.2019.07.016
   Gren L, 2017, 2017 43RD EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P52, DOI 10.1109/SEAA.2017.36
   Habchi S, 2021, arXiv
   Harman M, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1098
   HARROLD MJ, 1992, 14TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING : PROCEEDINGS, P68
   Heckman J.J., 2010, Microeconometrics. The New Palgrave Economics Collection, DOI DOI 10.1057/9780230280816_29
   HENRY S, 1981, IEEE T SOFTWARE ENG, V7, P510, DOI 10.1109/TSE.1981.231113
   Hunt KJ, 2013, BMC MED RES METHODOL, V13, DOI 10.1186/1471-2288-13-3
   Just R, 2014, ISSTA 2014, P437, DOI [10.1145/2610384.2628055, DOI 10.1145/2610384.2628055]
   Knowles JD, 2000, EVOL COMPUT, V8, P149, DOI 10.1162/106365600568167
   Kudrjavets G, 2006, ISSRE 2006:17TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P204
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   Myers G.J., 2011, The art of software testing, VVolume 1
   Orso A, 1998, P 4 INT C ON ACH QUA
   Oster N, 2006, LECT NOTES COMPUT SC, V4166, P426
   Palomba F, 2016, P 25 INT S SOFTW TES, P130, DOI DOI 10.1145/2931037.2931057
   Panichella A, 2015, 8 IEEE INT C SOFTWAR
   Panichella A, 2018, LECT NOTES COMPUT SC, V11036, P309, DOI 10.1007/978-3-319-99241-9_17
   Panichella A, 2018, IEEE T SOFTWARE ENG, V44, P122, DOI 10.1109/TSE.2017.2663435
   Papadakis M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P537, DOI 10.1145/3180155.3180183
   Pecorelli F, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09891-y
   Peruma A, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1650, DOI 10.1145/3368089.3417921
   Pezze M., 2008, Software Testing and Analysis: Process, Principles and Techniques
   Pinto G. H. L., 2010, 2010 Proceedings of 22nd International Conference on Tools with Artificial Intelligence (ICTAI 2010), P129, DOI 10.1109/ICTAI.2010.26
   Ramler R, 2013, P INT COMP SOFTW APP, P484, DOI 10.1109/COMPSAC.2013.82
   Reid Brittany, 2022, arXiv
   Rojas Jose Miguel, 2015, Search-Based Software Engineering. 7th International Symposium, SSBSE 2015. Proceedings: LNCS 9275, P93, DOI 10.1007/978-3-319-22183-0_7
   Rojas J.M., 2015, Automated Unit Test Generation During Software Development: A Controlled Experiment and Think-aloud Observations, P338
   Scalabrino S, 2016, LECT NOTES COMPUT SC, V9962, P64, DOI 10.1007/978-3-319-47106-8_5
   Spadini D, 2018, PROC IEEE INT CONF S, P1, DOI 10.1109/ICSME.2018.00010
   Spinellis D, 2005, IEEE SOFTWARE, V22, P9, DOI 10.1109/MS.2005.111
   Subramanyam R, 2003, IEEE T SOFTWARE ENG, V29, P297, DOI 10.1109/TSE.2003.1191795
   van Deursen A., 2001, P 2 INT C EXTREME PR
   von Lücken C, 2014, COMPUT OPTIM APPL, V58, P707, DOI 10.1007/s10589-014-9644-1
   Wang S, 2009, IEEE ICST WORKSHOP, P210, DOI 10.1109/ICSTW.2009.36
   Wappler S, 2005, GECCO 2005: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOLS 1 AND 2, P1053
   Williams Laurie, 2009, 2009 20th International Symposium on Software Reliability Engineering (ISSRE 2009), P81, DOI 10.1109/ISSRE.2009.32
   Zamani S, 2020, PROC IEEE INT CONF S, P418, DOI 10.1109/ICSME46990.2020.00047
   Zeller A, 2009, WHY PROGRAMS FAIL: A GUIDE TO SYSTEMATIC DEBUGGING, 2ND EDITION
NR 71
TC 0
Z9 0
U1 2
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2024
VL 29
IS 4
AR 71
DI 10.1007/s10664-024-10451-x
PG 49
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RI4C5
UT WOS:001227012000002
OA hybrid
DA 2024-08-05
ER

PT J
AU Morovati, MM
   Nikanjam, A
   Tambon, F
   Khomh, F
   Jiang, ZM
AF Morovati, Mohammad Mehdi
   Nikanjam, Amin
   Tambon, Florian
   Khomh, Foutse
   Jiang, Zhen Ming (Jack)
TI Bug characterization in machine learning-based systems
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software bug; Software testing; ML-based systems; ML bug; Deep learning;
   Software maintenance; Empirical study
ID EFFECT SIZE
AB The rapid growth of applying Machine Learning (ML) in different domains, especially in safety-critical areas, increases the need for reliable ML components, i.e., a software component operating based on ML. Since corrective maintenance, i.e. identifying and resolving systems bugs, is a key task in the software development process to deliver reliable software components, it is necessary to investigate the usage of ML components, from the software maintenance perspective. Understanding the bugs' characteristics and maintenance challenges in ML-based systems can help developers of these systems to identify where to focus maintenance and testing efforts, by giving insights into the most error-prone components, most common bugs, etc. In this paper, we investigate the characteristics of bugs in ML-based software systems and the difference between ML and non-ML bugs from the maintenance viewpoint. We extracted 447,948 GitHub repositories that used one of the three most popular ML frameworks, i.e., TensorFlow, Keras, and PyTorch. After multiple filtering steps, we select the top 300 repositories with the highest number of closed issues. We manually investigate the extracted repositories to exclude non-ML-based systems. Our investigation involved a manual inspection of 386 sampled reported issues in the identified ML-based systems to indicate whether they affect ML components or not. Our analysis shows that nearly half of the real issues reported in ML-based systems are ML bugs, indicating that ML components are more error-prone than non-ML components. Next, we thoroughly examined 109 identified ML bugs to identify their root causes, and symptoms, and calculate their required fixing time. The results also revealed that ML bugs have significantly different characteristics compared to non-ML bugs, in terms of the complexity of bug-fixing (number of commits, changed files, and changed lines of code). Based on our results, fixing ML bugs is more costly and ML components are more error-prone, compared to non-ML bugs and non-ML components respectively. Hence, paying significant attention to the reliability of the ML components is crucial in ML-based systems. These results deepen the understanding of ML bugs and we hope that our findings help shed light on opportunities for designing effective tools for testing and debugging ML-based systems.
C1 [Morovati, Mohammad Mehdi; Nikanjam, Amin; Tambon, Florian; Khomh, Foutse] Polytech Montreal, SWAT Lab, Montreal, PQ, Canada.
   [Jiang, Zhen Ming (Jack)] York Univ, Toronto, ON, Canada.
C3 Universite de Montreal; Polytechnique Montreal; York University - Canada
RP Morovati, MM (corresponding author), Polytech Montreal, SWAT Lab, Montreal, PQ, Canada.
EM mehdi.morovati@polymtl.ca; amin.nikanjam@polymtl.ca;
   florian.tambon@polymtl.ca; foutse.khomh@polymtl.ca; zmjiang@cse.yorku.ca
RI Tambon, Florian/HNS-4168-2023
OI Tambon, Florian/0000-0001-5593-9400; Morovati, Mohammad
   Mehdi/0000-0002-7942-4791; Nikanjam, Amin/0000-0002-0440-6839
FU Fonds de Recherche du Quebec (FRQ); Canadian Institute for Advanced
   Research (CIFAR) - National Science and Engineering Research Council of
   Canada (NSERC) [CRDPJ 537462-18]; Consortium for Research and Innovation
   in Aerospace in Quebec (CRIAQ); Thales Canada inc.; Bell Textron Canada
   Limited.; CAE inc.; Bombardier inc.
FX This work was supported by: Fonds de Recherche du Quebec (FRQ), the
   Canadian Institute for Advanced Research (CIFAR) as well as the DEEL
   project CRDPJ 537462-18 funded by the National Science and Engineering
   Research Council of Canada (NSERC) and the Consortium for Research and
   Innovation in Aerospace in Quebec (CRIAQ), together with its industrial
   partners Thales Canada inc, Bell Textron Canada Limited, CAE inc and
   Bombardier inc.
CR Abadi M, 2016, PROCEEDINGS OF OSDI'16: 12TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P265
   Aithal SG, 2021, APPL INTELL, V51, P8484, DOI 10.1007/s10489-021-02348-9
   Amershi S, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P291, DOI 10.1109/ICSE-SEIP.2019.00042
   Anvik J., 2005, P 2005 OOPSLA WORKSH, P35, DOI [10.1145/1117696.1117704, DOI 10.1145/1117696, 10.1145/1117696]
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Bennett K. H., 2000, P C FUT SOFTW ENG, P73
   Bosu A, 2014, 2014 ACM IEEE INT S, P1, DOI DOI 10.1145/2652524.2652544
   Bosu A, 2017, IEEE T SOFTWARE ENG, V43, P56, DOI 10.1109/TSE.2016.2576451
   Cao JM, 2022, Arxiv, DOI arXiv:2112.01771
   Carta S, 2021, APPL INTELL, V51, P889, DOI 10.1007/s10489-020-01839-5
   Chaturvedi KK, 2014, INT J SYST ASSUR ENG, V5, P155, DOI 10.1007/s13198-014-0226-5
   Chen ZP, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P750, DOI 10.1145/3368089.3409759
   Chollet F., 2018, Astrophysics Source Code Library
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   developerguideline documentation G, 2021, Github rest api
   Falotico R, 2015, QUAL QUANT, V49, P463, DOI 10.1007/s11135-014-0003-1
   Galin Daniel, 2004, Software quality assurance: from theory to implementation
   Garcia J, 2020, PROC INT CONF SOFTW, P385, DOI 10.1145/3377811.3380397
   github, 2019, Write complete json log after training
   github, 2020, Fix default ckpt path when logger exists
   github, 2020, Fix docs for early stopping
   GitHub, 2021, Github graphql api documentation
   github, 2019, Interactive learning has server error hosting on docker
   github, 2021, Add typing for trainer.logger
   github, 2021, Pps: fix of ispixelhit
   github, 2023, Replication package
   Github, 2022, About us
   github, 2021, reduce_lr_on_plateau can't find validation metrics in most recent release
   github, 2018, Bug fix for static pulse shapes
   github, 2020, some tests fails with pytorch 1.6
   github, 2021, Loading saved destvi.from_rna_model dosn't consider two anndatas used to create model
   github, 2023, Fix model architecture for deployment to onnx
   github, 2022, function not used for model inference
   github, 2021, Loading a checkpoint that was saved in pl 1.2 still breaks
   github, 2021, Bug: mismatch value with speechbrain.nnet.pooling.statisticalpooling
   Grubb P, 2003, Software maintenance concepts and practice
   Gupta S, 2021, What is the best language for machine learning?
   Hanam Q, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P144, DOI 10.1145/2950290.2950308
   HanLP, 2021, Hanlp: han language processing
   Hartling L., 2012, Validity and inter-rater reliability testing of quality assessment instruments
   Hata H, 2021, PROC INT CONF SOFTW, P773, DOI 10.1109/ICSE43902.2021.00076
   Hu X, 2021, KNOWL INF SYST, V63, P2585, DOI 10.1007/s10115-021-01605-0
   Humbatova N, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P67, DOI 10.1145/3460319.3464825
   Humbatova N, 2020, PROC INT CONF SOFTW, P1110, DOI 10.1145/3377811.3380395
   IEEE, 2017, IEEE recommended practice on software reliability
   IEEE, 2010, ISO/IEC/IEEE International Standard-Systems and software engineering-Vocabulary
   Islam MJ, 2020, PROC INT CONF SOFTW, P1135, DOI 10.1145/3377811.3380378
   Islam MJ, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P510, DOI 10.1145/3338906.3338955
   Jia L, 2021, J SYST SOFTWARE, V177, DOI 10.1016/j.jss.2021.110935
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Keras, 2022, Formal documentation of keras apis
   Kononenko O, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P124, DOI 10.1145/3183519.3183542
   Krishna R, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P306, DOI 10.1145/3183519.3183548
   Lau K-K, 2017, An introduction to component-based software development, DOI [10.1142/10486, DOI 10.1142/10486]
   Lenarduzzi V, 2021, LECT NOTES BUS INF P, V404, P43, DOI 10.1007/978-3-030-65854-0_4
   Li SQ, 2020, PROC INT SYMP SOFTW, P172, DOI 10.1109/ISSRE5003.2020.00025
   Liu C, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P55, DOI 10.1109/ASE51524.2021.9678891
   Liu ZG, 2020, APPL INTELL, V50, P1, DOI 10.1007/s10489-019-01511-7
   Long G, 2022, arXiv
   Lyu MR, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P153, DOI 10.1109/FOSE.2007.24
   Macbeth G, 2011, UNIV PSYCHOL, V10, P545, DOI 10.11144/Javeriana.upsy10-2.cdcp
   Maddila C, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P874, DOI 10.1145/3338906.3340457
   Mallet library, 2022, about us
   Martinez-Fernandez S., 2021, Software engineering for ai-based systems: a survey
   Menzies T, 2020, IEEE SOFTWARE, V37, P81, DOI 10.1109/MS.2019.2954841
   Morovati MM, 2023, EMPIR SOFTW ENG, V28, DOI 10.1007/s10664-023-10291-1
   Ni Z, 2020, J SYST SOFTWARE, V163, DOI 10.1016/j.jss.2020.110538
   Nikanjam A, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3470006
   Nikanjam A, 2022, AUTOMAT SOFTW ENG, V29, DOI 10.1007/s10515-021-00313-x
   NVIDIA, 2021, Nvtabular
   Paszke A, 2019, ADV NEUR IN, V32
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Quach S, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09970-8
   radimrehurek, 2022, Gensim library
   RasaHQ, 2021, about us
   Riccio V, 2020, EMPIR SOFTW ENG, V25, P5193, DOI 10.1007/s10664-020-09881-0
   Rivera-Landos E, 2021, The challenge of reproducible ml: an empirical study on the impact of bugs
   Romano A, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P42, DOI 10.1109/ASE51524.2021.9678776
   Romano J., 2006, ANN M FLOR ASS I RES, DOI DOI 10.1017/CBO9781107415324.004
   Schober P, 2018, ANESTH ANALG, V126, P1763, DOI 10.1213/ANE.0000000000002864
   Schoop Eldon, 2021, CHI '21: Proceedings of the 2021 CHI Conference on Human Factors in Computing Systems, DOI 10.1145/3411764.3445538
   Sculley D, 2015, ADV NEUR IN, V28
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Shen QC, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P968, DOI 10.1145/3468264.3468591
   Tagra A, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10133-6
   Tambon F, 2021, Silent bugs in deep learning frameworks: an empirical study of keras and tensorflow
   Tan L, 2014, EMPIR SOFTW ENG, V19, P1665, DOI 10.1007/s10664-013-9258-8
   Tensorflow, 2021, about us
   ultralytics, 2021, YOLOv3
   Vlasic B, 2016, The New York Times Company
   Voskoglou C, 2017, Towards data science
   Wang H., 2006, RELIABILITY OPTIMAL, P14197
   Wardat M, 2022, PROC INT CONF SOFTW, P561, DOI 10.1145/3510003.3510071
   Wardat M, 2021, PROC INT CONF SOFTW, P251, DOI 10.1109/ICSE43902.2021.00034
   Wirsansky E., 2020, Hands-on genetic algorithms with Python: applying genetic algorithms to solve real-world deep learning and artificial intelligence problems
   Yan M, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P627, DOI 10.1145/3468264.3468612
   Yang YL, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10087-1
   Yao YS, 2017, PROCEEDINGS OF THE 2017 INTERNET MEASUREMENT CONFERENCE (IMC'17), P384, DOI 10.1145/3131365.3131372
   Zhang JM, 2022, IEEE T SOFTWARE ENG, V48, P1, DOI 10.1109/TSE.2019.2962027
   Zhang TY, 2019, PROC INT SYMP SOFTW, P104, DOI 10.1109/ISSRE.2019.00020
   Zhang XY, 2021, PROC INT CONF SOFTW, P359, DOI 10.1109/ICSE43902.2021.00043
   Zhang YH, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P129, DOI 10.1145/3213846.3213866
   Zimmermann T, 2012, PROC INT CONF SOFTW, P1074, DOI 10.1109/ICSE.2012.6227112
NR 103
TC 1
Z9 1
U1 7
U2 9
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2024
VL 29
IS 1
AR 14
DI 10.1007/s10664-023-10400-0
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA Z6KO5
UT WOS:001113148200002
DA 2024-08-05
ER

PT J
AU Zhu, WH
   Proksch, S
   German, DM
   Godfrey, MW
   Li, L
   McIntosh, S
AF Zhu, Wenhan
   Proksch, Sebastian
   German, Daniel M.
   Godfrey, Michael W.
   Li, Li
   McIntosh, Shane
TI What is an app store? The software engineering perspective
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE App store; Software release; Software distribution; Empirical software
   engineering
AB "App stores" are online software stores where end users may browse, purchase, download, and install software applications. By far, the best known app stores are associated with mobile platforms, such as Google Play for Android and Apple's App Store for iOS. The ubiquity of smartphones has led to mobile app stores becoming a touchstone experience of modern living. App stores have been the subject of many empirical studies. However, most of this research has concentrated on properties of the apps rather than the stores themselves. Today, there is a rich diversity of app stores and these stores have largely been overlooked by researchers: app stores exist on many distinctive platforms, are aimed at different classes of users, and have different end-goals beyond simply selling a standalone app to a smartphone user.The goal of this paper is to survey and characterize the broader dimensionality of app stores, and to explore how and why they influence software development practices, such as system design and release management. We begin by collecting a set of app store examples from web search queries. By analyzing and curating the results, we derive a set of features common to app stores. We then build a dimensional model of app stores based on these features, and we fit each app store from our web search result set into this model. Next, we performed unsupervised clustering to the app stores to find their natural groupings. Our results suggest that app stores have become an essential stakeholder in modern software development. They control the distribution channel to end users and ensure that the applications are of suitable quality; in turn, this leads to developers adhering to various store guidelines when creating their applications. However, we found the app stores operational model could vary widely between stores, and this variability could in turn affect the generalizability of existing understanding of app stores.
C1 [Zhu, Wenhan; Godfrey, Michael W.; McIntosh, Shane] Univ Waterloo, David R Cheriton Sch Comp Sci, Waterloo, ON, Canada.
   [Proksch, Sebastian] Delft Univ Technol, Delft, Netherlands.
   [German, Daniel M.] Univ Victoria, Dept Comp Sci, Victoria, BC, Canada.
   [Li, Li] Beihang Univ, Sch Software, Beijing, Peoples R China.
C3 University of Waterloo; Delft University of Technology; University of
   Victoria; Beihang University
RP Zhu, WH (corresponding author), Univ Waterloo, David R Cheriton Sch Comp Sci, Waterloo, ON, Canada.
EM w65zhu@uwaterloo.ca; s.proksch@tudelft.nl; dmg@uvic.ca;
   migod@uwaterloo.ca; lilicoding@ieee.org; shane.mcintosh@uwaterloo.ca
FU European Union's Horizon 2020 research and innovation programme
FX No Statement Available
CR Adolph S, 2011, Empirical Software Engineering
   Al-Subaihin AA, 2021, T SOFTWARE ENG
   Al-Subaihin A, 2019, EMPIR SOFTW ENG, V24, P3290, DOI 10.1007/s10664-019-09726-5
   Aljedaani W, 2019, 2019 IEEE/ACM 6TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2019), P76, DOI 10.1109/MOBILESoft.2019.00021
   Almanee S, 2021, PROC INT CONF SOFTW, P1347, DOI 10.1109/ICSE43902.2021.00122
   Alshayban A, 2020, PROC INT CONF SOFTW, P1323, DOI 10.1145/3377811.3380392
   Amazon, 2022, AWS Marketplace: Homepage
   [Anonymous], 2008, Apple Introduces the New Iphone 3g
   Arthur D, 2007, PROCEEDINGS OF THE EIGHTEENTH ANNUAL ACM-SIAM SYMPOSIUM ON DISCRETE ALGORITHMS, P1027
   Arzt S, 2021, PROC INT CONF SOFTW, P1098, DOI 10.1109/ICSE43902.2021.00102
   Autodesk, 2022, Autodesk App Store: Plugins, Add-ons for Autodesk software, AutoCAD, Revit, Inventor, 3ds Max, Maya
   Bardsiri VK, 2014, EMPIR SOFTW ENG, V19, P857, DOI 10.1007/s10664-013-9241-4
   Canonical, 2009, Ubuntu Software Center in Launchpad
   Chen J, 2021, Empirical Software Engineering
   Chen JS, 2020, PROC INT CONF SOFTW, P322, DOI 10.1145/3377811.3380327
   Chen S, 2020, PROC INT CONF SOFTW, P1310, DOI 10.1145/3377811.3380417
   Claes M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P212, DOI 10.1109/MSR.2015.27
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Coxon A., 1999, Sorting data
   Dabrowski J, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10065-7
   Dixon C, 2010, SIGCOMM WORKSH HOT T
   Docker, 2022, Explore Docker's Container Image Repository Docker Hub
   Dong Z, 2020, PROC INT CONF SOFTW, P481, DOI 10.1145/3377811.3380402
   E. Commission, 2022, Digital markets act: Ensuring fair and open digital markets
   E. International, 2022, TC39-Specifying JavaScript
   F-Droid, 2022, F-Droid-Free and Open Source Android App Repository
   Ferreira G, 2021, PROC INT CONF SOFTW, P1334, DOI 10.1109/ICSE43902.2021.00121
   Finkelstein A, 2017, Inf Softw Technol
   Fischer RAL, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN SOCIETY (ICSE-SEIS 2021), P67, DOI 10.1109/ICSE-SEIS52602.2021.00016
   Gaber T., 2020, Evaluation and Assessment in Software Engineering
   Gholami S, 2021, 2021 ACM/IEEE 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2021), P101, DOI 10.1109/ICSE-NIER52604.2021.00029
   GitHub, 2022, GitHub Marketplace A to improve your workflow A GitHub
   Google, Chrome Web Store payments deprecation
   Google, 2022, Chrome Web Store-Extensions
   Guo H, 2020, PROC INT CONF SOFTW, P628, DOI 10.1145/3377811.3380924
   Guzman E, 2018, PROC INT CONF SOFTW, P13, DOI 10.1145/3183428.3183436
   Haering M, 2021, PROC INT CONF SOFTW, P970, DOI 10.1109/ICSE43902.2021.00092
   Haggag O, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN SOCIETY (ICSE-SEIS 2021), P48, DOI 10.1109/ICSE-SEIS52602.2021.00014
   Harman M, 2012, INT C MIN SOFTW REP
   He X, 2015, INT C BIG DATA BIG D
   Hoda R, 2012, EMPIR SOFTW ENG, V17, P609, DOI 10.1007/s10664-011-9161-0
   Hu YY, 2021, PROC INT CONF SOFTW, P933, DOI 10.1109/ICSE43902.2021.00089
   Ibrahim MH, 2020, EMPIR SOFTW ENG, V25, P4250, DOI 10.1007/s10664-020-09873-0
   Jansen S, 2013, LECT NOTES BUS INF P, V150, P195
   Khalid H, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P610, DOI 10.1145/2635868.2635909
   Kodi T, 2022, The Movie Database Python Matrix Addons Kodi
   Kuchta T, 2018, Empirical Software Engineering
   Kuznetsov K, 2021, JOINT M EUROPEAN SOF
   Lantz CA, 1996, J CLIN EPIDEMIOL, V49, P431, DOI 10.1016/0895-4356(95)00571-4
   Lee D, 2020, Empir Softw Eng
   Lee D, 2020, EMPIR SOFTW ENG, V25, P3396, DOI 10.1007/s10664-020-09840-9
   Lemon M, 2018, Two Point Hospital no longer uses Denuvo DRM
   Lin D., 2019, Empirical Software Engineering, P1
   Liu P, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2021), P308, DOI 10.1109/ICSE-SEIP52600.2021.00040
   Lu ZH, 2019, INT CONF SOFTW ENG, P596, DOI [10.1109/ICSESS47205.2019.9040744, 10.1109/icsess47205.2019.9040744]
   Ma S, 2021, INT C SOFTWARE ENG
   Maalej W, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P289, DOI 10.1109/ICSE-SEIP.2019.00041
   Macqueen J., 1967, P 5 BERKELEY S MATH, V1
   Manotas I, 2016, PROC INT CONF SOFTW, P237, DOI 10.1145/2884781.2884810
   Martin W, 2017, IEEE T SOFTWARE ENG, V43, P817, DOI 10.1109/TSE.2016.2630689
   Martin W, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P435, DOI 10.1145/2950290.2950320
   Masood Z, 2020, EMPIR SOFTW ENG, V25, P4962, DOI 10.1007/s10664-020-09876-x
   McIntosh S, 2019, RELEASE ENG MOBILE A
   McMillan C, 2012, PROC INT CONF SOFTW, P364, DOI 10.1109/ICSE.2012.6227178
   Murali V, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2021), P288, DOI 10.1109/ICSE-SEIP52600.2021.00038
   Murphy-Hill E, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1, DOI 10.1145/2568225.2568226
   Nayebi M, 2017, INT C SOFTWARE ENG C
   Nayebi M, 2017, INT SYMP EMP SOFTWAR, P324, DOI 10.1109/ESEM.2017.46
   Nayebi M, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P552, DOI 10.1109/SANER.2016.116
   Ng YY, 2014, P INT COMP SOFTW APP, P509, DOI 10.1109/COMPSAC.2014.95
   Nguyen T, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1027, DOI 10.1145/3368089.3409690
   npm, 2022, npm About
   Obie HO, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN SOCIETY (ICSE-SEIS 2021), P29, DOI 10.1109/ICSE-SEIS52602.2021.00012
   Pan LJ, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P952, DOI 10.1145/3368089.3409699
   Pascarella L, 2018, IEEE WORK CONF MIN S, P392, DOI [10.1145/3196398.3196423, 10.1145/3196398.3196418]
   Pérez J, 2020, J SYST SOFTWARE, V168, DOI 10.1016/j.jss.2020.110657
   Pham VVH, 2017, INT C SOFTWARE ENG C
   Prevost R, 2022, Homebrew
   Rahaman S, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P70, DOI 10.1145/3468264.3468550
   Rosen C, 2016, EMPIR SOFTW ENG, V21, P1192, DOI 10.1007/s10664-015-9379-3
   ROUSSEEUW PJ, 1987, J COMPUT APPL MATH, V20, P53, DOI 10.1016/0377-0427(87)90125-7
   Ruiz IJM, 2012, INT C PROGR COMPR
   Sarro F, 2015, INT REQUIR ENG CONF, P76, DOI 10.1109/RE.2015.7320410
   Scoccia GL, 2022, 9TH IEEE/ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS, MOBILESOFT 2022, P114, DOI 10.1145/3524613.3527813
   Shams RA, 2020, INT C SOFTWARE ENG S
   Shen S, 2017, P 9 ASIA PACIFIC S I
   Song W, 2021, INT C SOFTWARE ENG
   Staron M, 2020, Empirical Software Engineering
   Subramanian GH, 2006, Empirical Software Engineering
   Sun RX, 2021, PROC INT CONF SOFTW, P1085, DOI 10.1109/ICSE43902.2021.00101
   Sung A, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1208, DOI 10.1109/ASE.2019.00139
   Tang CB, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P183, DOI 10.1109/ICSE-SEIP.2019.00028
   Truelove A, 2021, PROC INT CONF SOFTW, P736, DOI 10.1109/ICSE43902.2021.00073
   Ullmann GC, 2022, 2022 IEEE/ACM 6TH INTERNATIONAL WORKSHOP ON GAMES AND SOFTWARE ENGINEERING (GAS 2022), P16
   Valve, 2022, Welcome to Steam
   van der Linden D, 2020, PROC INT CONF SOFTW, P149, DOI 10.1145/3377811.3380394
   Vassallo C, 2020, Empirical Software Engineering
   Vouillon J, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2522920.2522927
   Walker D, 2006, QUAL HEALTH RES, V16, P547, DOI 10.1177/1049732305285972
   Wang H, 2019, INT C MOBILE SOFTWAR
   Wang HY, 2018, IMC'18: PROCEEDINGS OF THE INTERNET MEASUREMENT CONFERENCE, P293, DOI 10.1145/3278532.3278558
   Wang PP, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10033-1
   Wikipedia, 2022, Electronic AppWrapper-Wikipedia
   WOLD S, 1987, CHEMOMETR INTELL LAB, V2, P37, DOI 10.1016/0169-7439(87)80084-9
   WordPress, 2022, WordPress Plugins WordPress.org
   Wu H, 2021, INT C SOFTWARE ENG
   Yang B, 2021, PROC INT CONF SOFTW, P761, DOI 10.1109/ICSE43902.2021.00075
   Yang S, 2022, INT C SOFTWARE ENG
   Ye JM, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1427, DOI 10.1145/3468264.3473935
   Yu SC, 2021, PROC INT CONF SOFTW, P1561, DOI 10.1109/ICSE43902.2021.00139
   Yu SC, 2021, PROC INT CONF SOFTW, P946, DOI 10.1109/ICSE43902.2021.00090
   Zhan X, 2021, PROC INT CONF SOFTW, P1695, DOI 10.1109/ICSE43902.2021.00150
   Zhang XL, 2020, PROC INT CONF SOFTW, P1572, DOI 10.1145/3377811.3380401
   Zhang Z, 2021, JOINT M EUROPEAN SOF
   Zhao TM, 2021, PROC INT CONF SOFTW, P748, DOI 10.1109/ICSE43902.2021.00074
NR 115
TC 1
Z9 1
U1 3
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2024
VL 29
IS 1
AR 35
DI 10.1007/s10664-023-10362-3
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DO5G4
UT WOS:001133000000001
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Napier, K
   Bhowmik, T
   Chen, ZQ
AF Napier, Kollin
   Bhowmik, Tanmay
   Chen, Zhiqian
TI Explaining poor performance of text-based machine learning models for
   vulnerability detection
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Text-based analysis; Machine learning models; Explainability
AB With an increase of severity in software vulnerabilities, machine learning models are being adopted to combat this threat. Given the possibilities towards usage of such models, research in this area has introduced various approaches. Although models may differ in performance, there is an overall lack of explainability in understanding how a model learns and predicts. Furthermore, recent research suggests that models perform poorly in detecting vulnerabilities when interpreting source code as text, known as "text-based" models. To help explain this poor performance, we explore the dimensions of explainability. From recent studies on text-based models, we experiment with removal of overlapping features present in training and testing datasets, deemed "cross-cutting". We conduct scenario experiments removing such "cross-cutting" data and reassessing model performance. Based on the results, we examine how removal of these "cross-cutting" features may affect model performance. Our results show that removal of "cross-cutting" features may provide greater performance of models in general, thus leading to explainable dimensions regarding data dependency and agnostic models. Overall, we conclude that model performance can be improved, and explainable aspects of such models can be identified via empirical analysis of the models' performance.
C1 [Napier, Kollin] Mississippi Gulf Coast Community Coll, Mississippi Artificial Intelligence Network MAIN, Perkinston, MS 39507 USA.
   [Bhowmik, Tanmay; Chen, Zhiqian] Mississippi State Univ, Dept Comp Sci & Engn, Mississippi State, MS USA.
C3 Mississippi State University
RP Napier, K (corresponding author), Mississippi Gulf Coast Community Coll, Mississippi Artificial Intelligence Network MAIN, Perkinston, MS 39507 USA.
EM kollin.napier@mgccc.edu; tbhowmik@cse.msstate.edu; zchen@cse.msstate.edu
FX DAS:The datasets generated during and/or analyzed during the current
   study are available in the "explainability_data" repository,
   https://github.com/krn65/explainability_data
CR Harer JA, 2018, Arxiv, DOI arXiv:1803.04497
   Alenezi M, 2020, Arxiv, DOI arXiv:2002.07135
   Ban XB, 2019, CONCURR COMP-PRACT E, V31, DOI 10.1002/cpe.5103
   Bates S., 2017, Methods in behavioral research
   Braz L, 2022, PROC INT CONF SOFTW, P1317, DOI 10.1145/3510003.3511560
   Burkart N, 2021, J ARTIF INTELL RES, V70, P245
   Chernis B, 2018, IWSPA '18: PROCEEDINGS OF THE FOURTH ACM INTERNATIONAL WORKSHOP ON SECURITY AND PRIVACY ANALYTICS, P31, DOI 10.1145/3180445.3180453
   Czerwonka J, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P27, DOI 10.1109/ICSE.2015.131
   Duval A., 2019, Explainable artificial intelligence (xai), P53, DOI [10.13140/RG.2.2.24722.09929, DOI 10.13140/RG.2.2.24722.09929]
   Edmundson Anne, 2013, Engineering Secure Software and Systems. 5th International Symposium, ESSoS 2013. Proceedings, P197, DOI 10.1007/978-3-642-36563-8_14
   Fan JH, 2020, IEEE WORK CONF MIN S, P508, DOI 10.1145/3379597.3387501
   Feng ZY, 2020, Arxiv, DOI [arXiv:2002.08155, 10.48550/arXiv.2002.08155]
   Ghaffarian SM, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3092566
   Gkortzis A, 2021, J SYST SOFTWARE, V172, DOI 10.1016/j.jss.2020.110653
   Gong J, 2016, 2016 IEEE FIRST INTERNATIONAL CONFERENCE ON DATA SCIENCE IN CYBERSPACE (DSC 2016), P642, DOI 10.1109/DSC.2016.33
   Grieco G, 2016, CODASPY'16: PROCEEDINGS OF THE SIXTH ACM CONFERENCE ON DATA AND APPLICATION SECURITY AND PRIVACY, P85, DOI 10.1145/2857705.2857720
   Hovsepyan A, 2012, Proceedings of the 4th International Workshop on Security Measurements and Metrics. MetriSec'12, P7, DOI 10.1145/2372225.2372230
   Ijaz M, 2019, INT BHURBAN C APPL S, P687, DOI [10.1109/IBCAST.2019.8667136, 10.1109/ibcast.2019.8667136]
   KRUSKAL WH, 1952, J AM STAT ASSOC, V47, P583, DOI 10.1080/01621459.1952.10483441
   Li Z, 2022, IEEE T DEPEND SECURE, V19, P2821, DOI 10.1109/TDSC.2021.3076142
   Li Z, 2022, IEEE T DEPEND SECURE, V19, P2244, DOI 10.1109/TDSC.2021.3051525
   Li Z, 2018, Arxiv, DOI arXiv:1801.01681
   Lin GJ, 2020, P IEEE, V108, P1825, DOI 10.1109/JPROC.2020.2993293
   Lin GJ, 2021, IEEE T DEPEND SECURE, V18, P2469, DOI 10.1109/TDSC.2019.2954088
   Lin GJ, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2539, DOI 10.1145/3133956.3138840
   Lipton Z. C, 2018, Queue, V16, P31, DOI DOI 10.1145/3236386.3241340
   Liu BC, 2012, INT C MULTIMED INFO, P152, DOI 10.1109/MINES.2012.202
   Liu SG, 2022, IEEE T DEPEND SECURE, V19, P438, DOI 10.1109/TDSC.2020.2984505
   Mäntylä MV, 2009, IEEE T SOFTWARE ENG, V35, P430, DOI 10.1109/TSE.2008.71
   Molnar C, 2018, A guide for making black box models explainable
   Mosolygo Balazs, 2021, 2021 International Conference on Code Quality (ICCQ), P15, DOI 10.1109/ICCQ51190.2021.9392984
   Murphy KP, 2012, MACHINE LEARNING: A PROBABILISTIC PERSPECTIVE, P1
   Napier K, 2023, EMPIR SOFTW ENG, V28, DOI 10.1007/s10664-022-10276-6
   Napier K, 2022, 2022 IEEE 23RD INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION FOR DATA SCIENCE (IRI 2022), P158, DOI 10.1109/IRI54793.2022.00044
   Oliveira D, 2014, P 30 ANN COMP SEC AP, P296, DOI [10.1145/2664243.2664254, DOI 10.1145/2664243.2664254]
   Perl H, 2015, CCS'15: PROCEEDINGS OF THE 22ND ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P426, DOI 10.1145/2810103.2813604
   Saleem Hamza, 2020, Proceedings on Privacy Enhancing Technologies, V2020, P153, DOI 10.2478/popets-2020-0067
   Scandariato R, 2014, IEEE T SOFTWARE ENG, V40, P993, DOI 10.1109/TSE.2014.2340398
   Shahid MR, 2021, 20TH IEEE INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA 2021), P1600, DOI 10.1109/ICMLA52953.2021.00256
   Shar LK, 2015, IEEE T DEPEND SECURE, V12, P688, DOI 10.1109/TDSC.2014.2373377
   Shin Y, 2011, IEEE T SOFTWARE ENG, V37, P772, DOI 10.1109/TSE.2010.81
   Sotgiu A, 2022, PROCEEDINGS OF THE 17TH INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY AND SECURITY, ARES 2022, DOI 10.1145/3538969.3543809
   Spreitzenbarth M, 2015, INT J INF SECUR, V14, P141, DOI 10.1007/s10207-014-0250-0
   Ribeiro MT, 2016, Arxiv, DOI [arXiv:1606.05386, DOI 10.48550/ARXIV.1606.05386]
   Turpin A., 2006, Proceedings of the Twenty-Ninth Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, P11, DOI 10.1145/1148170.1148176
   Van Rijsbergen C.J., 1979, Information Retrieval, V2nd
   Yamaguchi F, 2011, P 5 USENIX C OFF TEC, P13, DOI [10.5555/2028052.2028065, DOI 10.5555/2028052.2028065]
   Zeng P, 2020, IEEE ACCESS, V8, P197158, DOI 10.1109/ACCESS.2020.3034766
   Zhang YF, 2020, FOUND TRENDS INF RET, V14, P1, DOI 10.1561/1500000066
   Zhou J, 2021, ECOL PROCESS, V10, DOI 10.1186/s13717-021-00281-w
   Zhou Y., 2019, Adv Neural Inf Process Syst, V32
   Zhu M, 2004, Department of Statistics and Actuarial Science, University of Waterloo, Waterloo, V2, P6
NR 52
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2024
VL 29
IS 5
AR 113
DI 10.1007/s10664-024-10519-8
PG 44
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZG2E1
UT WOS:001274068200003
DA 2024-08-05
ER

PT J
AU Yu, XY
   Cogo, FR
   McIntosh, S
   Godfrey, MW
AF Yu, Xueyao
   Cogo, Filipe R.
   McIntosh, Shane
   Godfrey, Michael W.
TI Studying the impact of risk assessment analytics on risk awareness and
   code review performance
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Review
DE Code review; Risk assessment; Controlled experiment
ID INSPECTIONS
AB While code review is a critical component of modern software quality assurance, defects can still slip through the review process undetected. Previous research suggests that the main reason for this is a lack of reviewer awareness about the likelihood of defects in proposed changes; even experienced developers may struggle to evaluate the potential risks. If a change's riskiness is underestimated, it may not receive adequate attention during review, potentially leading to defects being introduced into the codebase. In this paper, we investigate how risk assessment analytics can influence the level of awareness among developers regarding the potential risks associated with code changes; we also study how effective and efficient reviewers are at detecting defects during code review with the use of such analytics. We conduct a controlled experiment using Gherald, a risk assessment prototype tool that analyzes the riskiness of change sets based on historical data. Following a between-subjects experimental design, we assign participants to the treatment (i.e., with access to Gherald) or control group. All participants are asked to perform risk assessment and code review tasks. Through our experiment with 48 participants, we find that the use of Gherald is associated with statistically significant improvements (one-tailed, unpaired Mann-Whitney U test, alpha\documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document}$$\alpha $$\end{document} = 0.05) in developer awareness of riskiness of code changes and code review effectiveness. Moreover, participants in the treatment group tend to identify the known defects more quickly than those in the control group; however, the difference between the two groups is not statistically significant. Our results lead us to conclude that the adoption of a risk assessment tool has a positive impact on code review practices, which provides valuable insights for practitioners seeking to enhance their code review process and highlights the importance for further research to explore more effective and practical risk assessment approaches.
C1 [Yu, Xueyao; McIntosh, Shane] Univ Waterloo, Waterloo, ON, Canada.
   [Cogo, Filipe R.] Huawei Canada, Ctr Software Excellence, Kingston, ON, Canada.
   [Godfrey, Michael W.] Univ Waterloo, David R Cheriton Sch Comp Sci, Waterloo, ON, Canada.
C3 University of Waterloo; Huawei Technologies; University of Waterloo
RP Yu, XY (corresponding author), Univ Waterloo, Waterloo, ON, Canada.
EM xueyao.yu@uwaterloo.ca; filipe.roseiro.cogo1@huawei.com;
   shane.mcintosh@uwaterloo.ca; migod@uwaterloo.ca
FU Waterloo-Huawei Joint Innovation Lab
FX The findings and opinions expressed in this paper are those of the
   authors and do not necessarily represent or reflect those of Huawei
   and/or its subsidiaries and affiliates. Moreover, our results do not in
   any way reflect the quality of Huawei's products.
CR ACKERMAN AF, 1989, IEEE SOFTWARE, V6, P31, DOI 10.1109/52.28121
   Ackerman AF, 1984, PROC S SOFTWARE VALI, P13
   Alami A, 2019, PROC INT CONF SOFTW, P1073, DOI 10.1109/ICSE.2019.00111
   Ayewah N, 2010, P 19 INT S SOFTWARE, P241, DOI [10.1145/1831708.1831738, DOI 10.1145/1831708.1831738]
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Ball T., 2006, Operating Systems Review, V40, P73, DOI 10.1145/1218063.1217943
   Barnett M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P134, DOI 10.1109/ICSE.2015.35
   Baum T, 2019, EMPIR SOFTW ENG, V24, P1762, DOI 10.1007/s10664-018-9676-8
   Baum T, 2017, PROC IEEE INT CONF S, P329, DOI 10.1109/ICSME.2017.28
   Baum T, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P85, DOI 10.1145/2950290.2950323
   Baysal O, 2016, EMPIR SOFTW ENG, V21, P932, DOI 10.1007/s10664-015-9366-8
   Beller M, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P470, DOI 10.1109/SANER.2016.105
   Biffl S, 2000, SEVENTH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P136, DOI 10.1109/APSEC.2000.896692
   Bosu A, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P146, DOI 10.1109/MSR.2015.21
   Cohen J., 2013, Current directions in psychological science, V1, P98, DOI [10.1111/1467-8721.ep10768783, DOI 10.1111/1467-8721.EP10768783]
   FAGAN ME, 1976, IBM SYST J, V15, P182, DOI 10.1147/sj.153.0182
   Feitelson DG, 2013, IEEE INTERNET COMPUT, V17, P8, DOI 10.1109/MIC.2013.25
   Fregnan E, 2023, Assessing review outcomes and cognitive factors to improve code review
   Fregnan E, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P483, DOI 10.1145/3540250.3549177
   Fukushima T., 2014, P 11 WORK C MIN SOFT, P172, DOI DOI 10.1145/2597073.2597075
   Gasparini L, 2021, 2021 WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT 2021), P115, DOI 10.1109/VISSOFT52517.2021.00022
   Gómez VU, 2015, SCI COMPUT PROGRAM, V98, P376, DOI 10.1016/j.scico.2013.08.002
   Gonçalves PW, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10123-8
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Hampton J., 2018, Laboratory psychology, P15
   Heckman S, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P161, DOI 10.1109/ICST.2009.45
   Heckman S, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P41
   Herzig K, 2013, IEEE WORK CONF MIN S, P121, DOI 10.1109/MSR.2013.6624018
   Hoang T, 2020, PROC INT CONF SOFTW, P518, DOI 10.1145/3377811.3380361
   Hovemeyer D, 2004, ACM SIGPLAN NOTICES, V39, P92, DOI 10.1145/1052883.1052895
   Janes A., 2018, P 33 ACM IEEE INT C, P876
   Johnson B, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P672, DOI 10.1109/ICSE.2013.6606613
   Kamei Y, 2010, PROC IEEE INT CONF S
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kendall M. G., 1948, Rank correlation methods.
   Khanan C, 2020, IEEE INT CONF AUTOM, P1336, DOI 10.1145/3324884.3415295
   Kim S., 2007, 6 JOINT M EUROPEAN S, P45, DOI 10.1145/1287624.1287633
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kim S, 2006, IEEE INT CONF AUTOM, P81
   Kollanus S., 2009, Open Softw Eng J, V3, P15, DOI [10.2174/1874107X00903010015, DOI 10.2174/1874107X00903010015]
   Kononenko O, 2016, PROC INT CONF SOFTW, P1028, DOI 10.1145/2884781.2884840
   Kononenko O, 2015, PROC IEEE INT CONF S, P111, DOI 10.1109/ICSM.2015.7332457
   Lewis C, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P372, DOI 10.1109/ICSE.2013.6606583
   Luo Li P., 2006, 28th International Conference on Software Engineering Proceedings, P413, DOI 10.1145/1134285.1134343
   Matsumoto S., 2010, P 6 INT C PREDICTIVE, DOI DOI 10.1145/1868328.1868356
   McIntosh S., 2014, P 11 WORK C MIN SOFT, P192
   McIntosh S, 2018, IEEE T SOFTWARE ENG, V44, P412, DOI 10.1109/TSE.2017.2693980
   Mockus A, 2000, BELL LABS TECH J, V5, P169, DOI 10.1002/bltj.2229
   Oosterwaal S, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P1038, DOI 10.1145/2950290.2983929
   Paas F, 2003, EDUC PSYCHOL-US, V38, P63, DOI 10.1207/S15326985EP3801_8
   Paixao M, 2017, IEEE INT CONF AUTOM, P95, DOI 10.1109/ASE.2017.8115622
   Pascarella Luca, 2018, Proceedings of the ACM on Human-Computer Interaction, V2, DOI 10.1145/3274404
   Pornprasit C, 2021, IEEE WORK CONF MIN S, P369, DOI 10.1109/MSR52588.2021.00049
   Rezk C, 2022, IEEE T SOFTWARE ENG, V48, P3297, DOI 10.1109/TSE.2021.3087419
   Romano J. D., 2006, ANN M SO ASS INSTITU, P1
   Rutar N, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P245, DOI 10.1109/ISSRE.2004.1
   Sadowski C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P181, DOI 10.1145/3183519.3183525
   Sadowski C, 2018, COMMUN ACM, V61, P58, DOI 10.1145/3188720
   Sadowski C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P598, DOI 10.1109/ICSE.2015.76
   Shihab E., 2012, P ACM SIGSOFT 20 INT, P1
   Shull F, 2008, IEEE SOFTWARE, V25, P88, DOI 10.1109/MS.2008.7
   Spadini D, 2020, 2020 IEEEACM 17 INT, P528, DOI [10.1145/3379597.3387455, DOI 10.1145/3379597.3387455]
   Tan M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P99, DOI 10.1109/ICSE.2015.139
   Tang H., 2015, Proceedings of the 7th Asia-Pacific Symposium on Internetware, P43, DOI DOI 10.1145/2875913
   Tao Y, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P180, DOI 10.1109/MSR.2015.24
   Tao YT, 2012, COMM COM INF SC, V321, P1
   Thong Hoang, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P34, DOI 10.1109/MSR.2019.00016
   Thongtanunam P, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P168, DOI 10.1109/MSR.2015.23
   Tomassi DA, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P292, DOI 10.1109/ASE51524.2021.9678535
   Tymchuk Y, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P151, DOI 10.1109/SANER.2015.7081825
   Undefinedliwerski J., 2005, Notes, V30, P1, DOI [10.1145/1082983.1083147, DOI 10.1145/1082983.1083147]
   Wan ZY, 2020, IEEE T SOFTWARE ENG, V46, P1241, DOI 10.1109/TSE.2018.2877678
   Zhang TY, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P111, DOI 10.1109/ICSE.2015.33
   Zimmermann T., 2007, Proceedings of the Third International Workshop on Predictor Models in Software Engineering, PROMISE'07, page, P9
NR 75
TC 0
Z9 0
U1 3
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2024
VL 29
IS 2
AR 46
DI 10.1007/s10664-024-10443-x
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HY4E1
UT WOS:001163050200001
DA 2024-08-05
ER

PT J
AU Guzman, E
   Fischer, RAL
   Kok, J
AF Guzman, Emitza
   Fischer, Ricarda Anna-Lena
   Kok, Janey
TI Mind the gap: gender, micro-inequities and barriers in software
   development
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Gender diversity; Software development teams; Questionnaire-based
   survey; Micro-inequities; Barriers
ID AGE; NEWCOMERS; DIVERSITY; CLOSURE
AB Gender diversity and equity are known problems in the software industry. However, relatively few studies has examined the everyday work experiences and barriers that software professionals in technical roles encounter through a gender perspective. In this work, we investigate micro-inequities (e.g., interruptions, lack of eye contact, being assigned menial tasks in a project) and barriers experienced by software professionals working in technical roles with a gender perspective. We also analyzed age as a confounding factor. In our study, we surveyed 359 software professionals (50:50, women:men ratio) from globally distributed locations. Our results show that women and respondents in certain age groups encounter micro-inequities significantly more than men and other age groups. Further, women experience and witness sexism and harassment in the workplace in significantly higher numbers. We also found that women report having significantly less support and authority to make necessary decisions in their work, are less satisfied with their pay, and feel less valued and recognized in their teams. Finally, we found that the main barriers reported by women are related to team dynamics and gender biases, while men report most on technical and project related issues. Our results can serve to create awareness in the community about the large disparity and help practitioners revise their training programs and internal policies.
C1 [Guzman, Emitza; Fischer, Ricarda Anna-Lena; Kok, Janey] Vrije Univ, Fac Sci, Boelelaan 1111, NL-1081 HV Amsterdam, Netherlands.
C3 Vrije Universiteit Amsterdam
RP Guzman, E (corresponding author), Vrije Univ, Fac Sci, Boelelaan 1111, NL-1081 HV Amsterdam, Netherlands.
EM e.guzmanortega@vu.nl; r.a.l.fischer@vu.nl; j.kok@student.vu.nl
CR Alabi J, 2015, J ACAD LIBR, V41, P47, DOI 10.1016/j.acalib.2014.10.008
   Ashcraft C., 2016, Women in tech: The facts
   ASHCRAFT C., 2010, Women in IT: The Facts, National Center for Women Information Technology
   Balali S, 2018, COMPUT SUPP COOP W J, V27, P679, DOI 10.1007/s10606-018-9310-8
   Beagan B, 2001, CAN J SOCIOL, V26, P583, DOI 10.2307/3341493
   Bosu A, 2019, INT SYMP EMP SOFTWAR, P295
   Bryson J, 2014, LABOUR IND, V24, P258, DOI 10.1080/10301763.2014.978965
   BUTLER D, 1990, J PERS SOC PSYCHOL, V58, P48, DOI 10.1037/0022-3514.58.1.48
   Canedo ED, 2020, P 14 ACM IEEE INT S, P1
   Catolino G, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN SOCIETY (ICSE-SEIS 2019), P11, DOI 10.1109/ICSE-SEIS.2019.00010
   Chang EH, 2020, ORGAN DYN, V49, DOI 10.1016/j.orgdyn.2019.03.002
   Comeau TD, 2007, AGEING SOC, V27, P215, DOI 10.1017/S0144686X06005605
   Earley PC, 2000, ACAD MANAGE J, V43, P26, DOI 10.5465/1556384
   Ford D, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P846, DOI 10.1145/2950290.2950331
   Gilal AR, 2014, 2014 INTERNATIONAL CONFERENCE ON COMPUTER, COMMUNICATIONS, AND CONTROL TECHNOLOGY (I4CT), P261, DOI 10.1109/I4CT.2014.6914186
   Glass JL, 2013, SOC FORCES, V92, P723, DOI 10.1093/sf/sot092
   Glassdoor Team, 2014, glass-door report
   Hinton E.L., 2004, DIVERSITYINC MAGAZIN
   Hoffmann JP, 2016, REGRESSION MODELS FOR CATEGORICAL, COUNT, AND RELATED VARIABLES: AN APPLIED APPROACH, P1
   Horwitz SK, 2007, J MANAGE, V33, P987, DOI 10.1177/0149206307308587
   Hyrynsalmi SM, 2019, 2019 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON GENDER EQUALITY IN SOFTWARE ENGINEERING (GE 2019), P1, DOI 10.1109/GE.2019.00008
   Imtiaz N, 2019, PROC INT CONF SOFTW, P700, DOI 10.1109/ICSE.2019.00079
   James D, 1993, Women, men, and interruptions Gender and conversational interaction, P231
   James T, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P13, DOI 10.1109/ICSE-SEIP.2017.31
   Kamamoto D, 2013, Parity for some, but tech women's pay lags overall
   Kapila HE, 2016, Why diversity, equity, and inclusion matter
   Kemp AW., 2000, J APPL STAT, V27, P1068
   Kenny EJ, 2020, HUM RELAT, V73, P326, DOI 10.1177/0018726719828449
   Kitchenharn B., 2003, Software Engineering Notes, V28, P24, DOI 10.1145/638750.638758
   Krosnick Jon A., 2018, The Palgrave handbook of survey research, P439, DOI DOI 10.1007/978-3-319-54395-6_53
   Lee A, 2019, PROC INT CONF SOFTW, P677, DOI 10.1109/ICSE.2019.00077
   Little RJ., 2014, Statistical analysis with missing data
   Lutter M, 2015, AM SOCIOL REV, V80, P329, DOI 10.1177/0003122414568788
   McCrum-Gardner E, 2008, BRIT J ORAL MAX SURG, V46, P38, DOI 10.1016/j.bjoms.2007.09.002
   Nafus D, 2012, NEW MEDIA SOC, V14, P669, DOI 10.1177/1461444811422887
   Nash Harvey, 2014, Harvey Nash CIO survey 2014
   National Center for Women and Information Technology, 2020, By the numbers
   Ortu Marco, 2017, Journal of Software Engineering Research and Development, V5, DOI 10.1186/s40411-017-0044-y
   Padala Susmita Hema, 2020, IEEE Transactions on Software Engineering
   Page SE, 2007, DIFFERENCE: HOW THE POWER OF DIVERSITY CREATES BETTER GROUPS, FIRMS, SCHOOLS, AND SOCIETIES, P1
   Posthuma RA, 2009, J MANAGE, V35, P158, DOI 10.1177/0149206308318617
   Prana G.A.A., 2021, IEEE Trans. Softw. Eng.
   Roscigno VJ, 2007, SOC FORCES, V86, P313, DOI 10.1353/sof.2007.0109
   Rowe M., 2008, Journal of the International Ombudsman Association, V1, P45, DOI [DOI 10.1080/13613324.2020.1798381, DOI 10.1037/A0018922]
   Rowe M.P., 1990, Employee Responsibilities and Rights Journal, V3, P153, DOI [10.1007/BF01388340, DOI 10.1007/BF01388340]
   Russo D, 2020, IEEE Transactions on Software Engineering
   Schloegel U, 2018, Information Technology & People
   Simard C., 2008, CLIMBING TECHNICAL L
   Steinmacher I, 2015, PROCEEDINGS OF THE 2015 ACM INTERNATIONAL CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING (CSCW'15), P1379, DOI 10.1145/2675133.2675215
   Steinmacher I, 2015, INFORM SOFTWARE TECH, V59, P67, DOI 10.1016/j.infsof.2014.11.001
   Sue D. W., 2010, MICROAGGRESSIONS EVE
   Terrell J, 2017, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.111
   Trinkenreich B, 2022, 2022 ACM/IEEE 44TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN SOCIETY (ICSE-SEIS 2022), P24, DOI [10.1109/ICSE-SEIS55304.2022.9793931, 10.1145/3510458.3513018]
   Van Dalen HP, 2010, POPUL DEV REV, V36, P309, DOI 10.1111/j.1728-4457.2010.00331.x
   Vasilescu B, 2015, CHI 2015: PROCEEDINGS OF THE 33RD ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P3789, DOI 10.1145/2702123.2702549
   Vasilescu B, 2014, INTERACT COMPUT, V26, P488, DOI 10.1093/iwc/iwt047
   Vassallo Trae., 2016, The Elephant in the Valley
   Wang Y, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN SOCIETY (ICSE-SEIS 2019), P1, DOI 10.1109/ICSE-SEIS.2019.00009
   Women Who Tech, 2017, Tech and Startup Culture Survey
   World Economic Forum, 2020, The Future of Jobs Report 2020
   Yost B, 2016, PROC INT S EMPIRICAL, P1
   Young S., 2016, Micromessaging: Why great leadership is beyond words
   Zolduoarrati E, 2021, INFORM SOFTWARE TECH, V139, DOI 10.1016/j.infsof.2021.106667
NR 63
TC 0
Z9 0
U1 0
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2024
VL 29
IS 1
AR 17
DI 10.1007/s10664-023-10379-8
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA Z6KO5
UT WOS:001113148200001
OA hybrid
DA 2024-08-05
ER

PT J
AU Hort, M
   Zhang, JM
   Sarro, F
   Harman, M
AF Hort, Max
   Zhang, Jie M.
   Sarro, Federica
   Harman, Mark
TI Search-based Automatic Repair for Fairness and Accuracy in
   Decision-making Software
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software fairness; Bias mitigation; Classification; Multi-objective
   optimization
ID ALGORITHMS
AB Decision-making software mainly based on Machine Learning (ML) may contain fairness issues (e.g., providing favourable treatment to certain people rather than others based on sensitive attributes such as gender or race). Various mitigation methods have been proposed to automatically repair fairness issues to achieve fairer ML software and help software engineers to create responsible software. However, existing bias mitigation methods trade accuracy for fairness (i.e., trade a reduction in accuracy for better fairness). In this paper, we present a novel search-based method for repairing ML-based decision making software to simultaneously increase both its fairness and accuracy. As far as we know, this is the first bias mitigation approach based on multi-objective search that aims to repair fairness issues without trading accuracy for binary classification methods. We apply our approach to two widely studied ML models in the software fairness literature (i.e., Logistic Regression and Decision Trees), and compare it with seven publicly available state-of-the-art bias mitigation methods by using three different fairness measurements. The results show that our approach successfully increases both accuracy and fairness for 61% of the cases studied, while the state-of-the-art always decrease accuracy when attempting to reduce bias. With our proposed approach, software engineers that previously were concerned with accuracy losses when considering fairness, are now enabled to improve the fairness of binary classification models without sacrificing accuracy.
C1 [Hort, Max] Simula Res Lab, Oslo, Norway.
   [Zhang, Jie M.] Kings Coll London, London, England.
   [Sarro, Federica; Harman, Mark] UCL, London, England.
C3 University of London; King's College London; University of London;
   University College London
RP Sarro, F (corresponding author), UCL, London, England.
EM maxh@simula.no; jie.zhang@kcl.ac.uk; f.sarro@ucl.ac.uk;
   mark.harman@ucl.ac.uk
OI Hort, Max/0000-0001-8684-5909
FU European Research Council [741278]; ERC; ERCIM 'Alain Bensoussan'
   Fellowship Programme
FX This work is supported by the ERC grant no. 741278 (EPIC). Max Hort is
   supported through the ERCIM 'Alain Bensoussan' Fellowship Programme.
CR Agarwal A, 2018, 35 INT C MACHINE LEA, V80
   Aggarwal A, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P625, DOI 10.1145/3338906.3338937
   Angell R, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P871, DOI 10.1145/236024.3264590
   Angwin J., 2016, MACHINE BIAS
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Berk R, 2017, FAT ML WORKSH
   Berk R, 2021, SOCIOL METHOD RES, V50, P3, DOI 10.1177/0049124118782533
   Biswas S, 2020, Arxiv, DOI arXiv:2005.12379
   Blewitt ME, 2008, NAT GENET, V40, P663, DOI 10.1038/ng.142
   Breslow LA, 1997, KNOWL ENG REV, V12, P1, DOI 10.1017/S0269888997000015
   Brun Y, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P754, DOI 10.1145/3236024.3264838
   Calders T, 2013, IEEE DATA MINING, P71, DOI 10.1109/ICDM.2013.114
   Calders T, 2010, DATA MIN KNOWL DISC, V21, P277, DOI 10.1007/s10618-010-0190-x
   Calders T, 2009, INT CONF DAT MIN WOR, P13, DOI 10.1109/ICDMW.2009.83
   Calmon FP, 2017, ADV NEUR IN, V30
   Celis LE, 2019, FAT*'19: PROCEEDINGS OF THE 2019 CONFERENCE ON FAIRNESS, ACCOUNTABILITY, AND TRANSPARENCY, P319, DOI 10.1145/3287560.3287586
   Chakraborty J, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P429, DOI 10.1145/3468264.3468537
   Chakraborty J, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P654, DOI 10.1145/3368089.3409697
   Chen JH, 2019, FAT*'19: PROCEEDINGS OF THE 2019 CONFERENCE ON FAIRNESS, ACCOUNTABILITY, AND TRANSPARENCY, P339, DOI 10.1145/3287560.3287594
   Chen Z, 2024, INT C SOFTWARE ENG I
   Chen Z, P 30 ACM JOINT EUR S, P1122
   Chen Z, 2023, ACM Transactions on Software Engineering and Methodology
   Chen ZP, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3583561
   Chen ZP, 2024, Arxiv, DOI arXiv:2207.10223
   Corbett-Davies S, 2017, KDD'17: PROCEEDINGS OF THE 23RD ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P797, DOI 10.1145/3097983.3098095
   Dwork C., 2012, P 3 INN THEOR COMP S, P214, DOI DOI 10.1145/2090236.2090255
   Feldman M, 2015, KDD'15: PROCEEDINGS OF THE 21ST ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P259, DOI 10.1145/2783258.2783311
   Ferrucci Filomena, 2010, 2010 Proceedings of Second International Symposium on Search Based Software Engineering (SSBSE), P89, DOI 10.1109/SSBSE.2010.20
   Friedler SA, 2019, FAT*'19: PROCEEDINGS OF THE 2019 CONFERENCE ON FAIRNESS, ACCOUNTABILITY, AND TRANSPARENCY, P329, DOI 10.1145/3287560.3287589
   Galhotra S, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P498, DOI 10.1145/3106237.3106277
   Gohar U, 2023, PROCEEDINGS OF THE THIRTY-SECOND INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, IJCAI 2023, P6619
   Hardt M, 2016, ADV NEUR IN, V29
   Harman M, 2010, LECT NOTES COMPUT SC, V6013, P1, DOI 10.1007/978-3-642-12029-9_1
   Harrison G, 2020, FAT* '20: PROCEEDINGS OF THE 2020 CONFERENCE ON FAIRNESS, ACCOUNTABILITY, AND TRANSPARENCY, P392, DOI 10.1145/3351095.3372831
   Horkoff J, 2019, INT REQUIR ENG CONF, P386, DOI 10.1109/RE.2019.00050
   Hort M, 2023, On-line Appendix to the article Search-based Automatic Repair for Fairness and Accuracy in Decision-making Software
   Hort M, 2023, ACM J Resp Comput
   Hort M, 2023, APPL SOFT COMPUT, V133, DOI 10.1016/j.asoc.2022.109916
   Hort M, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P1322, DOI 10.1109/ASE51524.2021.9678568
   Hort M, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P994, DOI 10.1145/3468264.3468565
   Jacobs AZ, 2021, PROCEEDINGS OF THE 2021 ACM CONFERENCE ON FAIRNESS, ACCOUNTABILITY, AND TRANSPARENCY, FACCT 2021, P375, DOI 10.1145/3442188.3445901
   Bellamy RKE, 2018, Arxiv, DOI arXiv:1810.01943
   Kamiran Faisal, 2010, Proceedings 2010 10th IEEE International Conference on Data Mining (ICDM 2010), P869, DOI 10.1109/ICDM.2010.50
   Kamiran F, 2018, INFORM SCIENCES, V425, P18, DOI 10.1016/j.ins.2017.09.064
   Kamiran F, 2012, IEEE DATA MINING, P924, DOI 10.1109/ICDM.2012.45
   Kamiran F, 2012, KNOWL INF SYST, V33, P1, DOI 10.1007/s10115-011-0463-8
   Kamiran F, 2009, 2009 2ND INTERNATIONAL CONFERENCE ON COMPUTER, CONTROL AND COMMUNICATION, P337
   Kamishima Toshihiro, 2012, Machine Learning and Knowledge Discovery in Databases. Proceedings of the European Conference (ECML PKDD 2012), P35, DOI 10.1007/978-3-642-33486-3_3
   Kearns M, 2018, PR MACH LEARN RES, V80
   Kocaguneli E, 2012, IEEE T SOFTWARE ENG, V38, P1403, DOI 10.1109/TSE.2011.111
   Kohavi Ronny, 1996, UCI Machine Learning Repository
   Li XY, 2024, Arxiv, DOI arXiv:2308.02935
   Ma MH, 2022, Arxiv, DOI arXiv:2209.08321
   Mehrabi N., 2019, arXiv
   Mikians J, 2012, PROCEEDINGS OF THE 11TH ACM WORKSHOP ON HOT TOPICS IN NETWORKS (HOTNETS-XI), P79
   Moro S, 2014, DECIS SUPPORT SYST, V62, P22, DOI 10.1016/j.dss.2014.03.001
   Moussa R, 2022, 2022 ACM SIGSOFT INT
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Pedreschi Dino, 2008, P 14 ACM SIGKDD INT, P560, DOI [DOI 10.1145/1401890.1401959, 10.1145/1401890.1401959]
   Perera A, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10116-7
   Pessach D, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3494672
   Pleiss Geoff, 2017, NIPS, P5680
   propublica, 2023, data for the propublica story 'machine bias'
   QUINLAN JR, 1987, INT J MAN MACH STUD, V27, P221, DOI 10.1016/S0020-7373(87)80053-6
   Romei A, 2011, MULTIDISCIPLINARY SU
   Sarro F, 2023, PROCS 31 IEEE INT RE
   Sarro F, 2018, INT REQUIR ENG CONF, P76, DOI 10.1109/RE.2018.00018
   Sarro F, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3234940
   Sarro F, 2017, IEEE T SOFTWARE ENG, V43, P898, DOI 10.1109/TSE.2017.2650914
   Sarro F, 2016, PROC INT CONF SOFTW, P619, DOI 10.1145/2884781.2884830
   Savani C., 2020, PROC ADV NEURAL INF, P2798
   Speicher T, 2018, KDD'18: PROCEEDINGS OF THE 24TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY & DATA MINING, P2239, DOI 10.1145/3219819.3220046
   Tizpaz-Niari S, 2022, arXiv
   Udeshi S, 2018, IEEE INT CONF AUTOM, P98, DOI 10.1145/3238147.3238165
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   WILCOXON F, 1946, J ECON ENTOMOL, V39, P269, DOI 10.1093/jee/39.2.269
   Zafar MB, 2017, PR MACH LEARN RES, V54, P962
   Zemel R., 2013, PMLR, P325
   Zhang BH, 2018, PROCEEDINGS OF THE 2018 AAAI/ACM CONFERENCE ON AI, ETHICS, AND SOCIETY (AIES'18), P335, DOI 10.1145/3278721.3278779
   Zhang JM, 2021, PROC INT CONF SOFTW, P1436, DOI 10.1109/ICSE43902.2021.00129
   Zhang JM, 2022, IEEE T SOFTWARE ENG, V48, P1, DOI 10.1109/TSE.2019.2962027
   Zliobaite I., 2011, Proceedings of the 2011 IEEE 11th International Conference on Data Mining (ICDM 2011), P992, DOI 10.1109/ICDM.2011.72
NR 82
TC 0
Z9 0
U1 4
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2024
VL 29
IS 1
AR 36
DI 10.1007/s10664-023-10419-3
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DS8T5
UT WOS:001134160400001
PM 38187986
OA Green Published, hybrid
DA 2024-08-05
ER

PT J
AU Martinez, M
   Kechagia, M
   Perera, A
   Petke, J
   Sarro, F
   Aleti, A
AF Martinez, Matias
   Kechagia, Maria
   Perera, Anjana
   Petke, Justyna
   Sarro, Federica
   Aleti, Aldeida
TI Test-based patch clustering for automatically-generated patches
   assessment
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Automated program repair; Patch assessment; Patch overfitting; Test case
   generation; Java
ID PROGRAM REPAIR
AB Previous studies have shown that Automated Program Repair (apr) techniques suffer from the overfitting problem. Overfitting happens when a patch is run and the test suite does not reveal any error, but the patch actually does not fix the underlying bug or it introduces a new defect that is not covered by the test suite. Therefore, the patches generated by apr tools need to be validated by human programmers, which can be very costly, and prevents apr tool adoption in practice. Our work aims to minimize the number of plausible patches that programmers have to review, thereby reducing the time required to find a correct patch. We introduce a novel light-weight test-based patch clustering approach called xTestCluster, which clusters patches based on their dynamic behavior. xTestCluster is applied after the patch generation phase in order to analyze the generated patches from one or more repair tools and to provide more information about those patches for facilitating patch assessment. The novelty of xTestCluster lies in using information from execution of newly generated test cases to cluster patches generated by multiple APR approaches. A cluster is formed of patches that fail on the same generated test cases. The output from xTestCluster gives developers a) a way of reducing the number of patches to analyze, as they can focus on analyzing a sample of patches from each cluster, b) additional information (new test cases and their results) attached to each patch. After analyzing 902 plausible patches from 21 Java apr tools, our results show that xTestCluster is able to reduce the number of patches to review and analyze with a median of 50%. xTestCluster can save a significant amount of time for developers that have to review the multitude of patches generated by apr tools, and provides them with new test cases that expose the differences in behavior between generated patches. Moreover, xTestCluster can complement other patch assessment techniques that help detect patch misclassifications.
C1 [Martinez, Matias] Univ Politecn Cataluna, Barcelona, Spain.
   [Kechagia, Maria; Petke, Justyna; Sarro, Federica] UCL, London, England.
   [Perera, Anjana; Aleti, Aldeida] Monash Univ, Clayton, Australia.
C3 Universitat Politecnica de Catalunya; University of London; University
   College London; Monash University
RP Sarro, F (corresponding author), UCL, London, England.
EM matias.martinez@upc.edu; m.kechagia@ucl.ac.uk; Anjana.Perera@monash.edu;
   j.petke@ucl.ac.uk; f.sarro@ucl.ac.uk; aldeida.aleti@monash.edu
FU Ramony Cajal Fellowship [RYC2021-031523-I]; ERC Advanced [741278]; UKRI
   EPSRC [EP/P023991/1]; Australian Research Council [DP210100041]
FX We would like to gratefully acknowledge support from: Ramony Cajal
   Fellowship no. RYC2021-031523-I, ERC Advanced Grant no. 741278, UKRI
   EPSRC grant no. EP/P023991/1, Australian Research Council grant no.
   DP210100041.
CR [Anonymous], 2021, xtestcluster appendix repository
   Arcuri A, 2013, EMPIR SOFTW ENG, V18, P594, DOI 10.1007/s10664-013-9249-9
   Cashin P, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P411, DOI 10.1109/ASE.2019.00046
   Chen LS, 2017, IEEE INT CONF AUTOM, P637, DOI 10.1109/ASE.2017.8115674
   Chen Z, 2019, IEEE Trans Softw Eng, P1
   Durieux T, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P302, DOI 10.1145/3338906.3338911
   Durieux T, 2016, 2016 IEEE/ACM 11TH INTERNATIONAL WORKSHOP IN AUTOMATION OF SOFTWARE TEST (AST), P85, DOI [10.1145/2896921.2896931, 10.1109/AST.2016.021]
   Ernst MD, 2007, SCI COMPUT PROGRAM, V69, P35, DOI 10.1016/j.scico.2007.01.015
   Fraser G, 2011, P 19 ACM SIGSOFT S 1, P416, DOI 10.1145/2025113.2025179
   Fry ZP, 2012, ISSTA 2012, P177, DOI [10.1145/2338965.2336775, DOI 10.1145/2338965.2336775]
   Gao X, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P8, DOI 10.1145/3293882.3330558
   Gazzola L, 2019, IEEE T SOFTWARE ENG, V45, P34, DOI 10.1109/TSE.2017.2755013
   Ghanbari Ali, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P541, DOI 10.1145/3395363.3404362
   Hua JR, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P888, DOI 10.1145/236024.3264600
   Jiang JJ, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P298, DOI 10.1145/3213846.3213871
   Just R, 2014, ISSTA 2014, P437, DOI [10.1145/2610384.2628055, DOI 10.1145/2610384.2628055]
   Kang S, 2022, INTERNATIONAL WORKSHOP ON AUTOMATED PROGRAM REPAIR (APR 2022), P8, DOI 10.1145/3524459.3527343
   Koyuncu A, 2020, EMPIR SOFTW ENG, V25, P1980, DOI 10.1007/s10664-019-09780-z
   Le XBD, 2018, EMPIR SOFTW ENG, V23, P3007, DOI 10.1007/s10664-017-9577-2
   Le XBD, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P593, DOI 10.1145/3106237.3106309
   Liang JJ, 2021, PROC IEEE INT CONF S, P239, DOI 10.1109/ICSME52107.2021.00028
   Lin B, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3505247
   Liu K, 2018, IEEE 26 INT C SOFTW, P1
   Liu K, 2020, PROC INT CONF SOFTW, P615, DOI 10.1145/3377811.3380338
   Liu K, 2021, J SYST SOFTWARE, V171, DOI 10.1016/j.jss.2020.110817
   Liu K, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P31, DOI 10.1145/3293882.3330577
   Liu K, 2019, IEEE INT CONF SOFTW, P102, DOI 10.1109/ICST.2019.00020
   Liu XL, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P118, DOI 10.1109/SANER.2018.8330202
   Long F, 2016, PROC INT CONF SOFTW, P702, DOI 10.1145/2884781.2884872
   Long F, 2016, ACM SIGPLAN NOTICES, V51, P298, DOI 10.1145/2914770.2837617
   Martinez M, 2016, P 25 INT S SOFTWARE, P441, DOI 10.1145/2931037.2948705
   Martinez M, 2018, LECT NOTES COMPUT SC, V11036, P65, DOI 10.1007/978-3-319-99241-9_3
   Martinez M, 2017, EMPIR SOFTW ENG, V22, P1936, DOI 10.1007/s10664-016-9470-4
   Mechtaev S, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3241980
   Monperrus M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3105906
   Pacheco C, 2007, COMP 22 ACM SIGPLAN, P815
   Qi Z, 2015, P 2015 INT S SOFTWAR, P24, DOI [DOI 10.1145/2771783.2771791, 10.1145/2771783.2771791, 10.1145/2771783]
   Smith EK, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P532, DOI 10.1145/2786805.2786825
   Tian HY, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3511096
   Tian HY, 2020, IEEE INT CONF AUTOM, P981, DOI 10.1145/3324884.3416532
   Wang SW, 2020, IEEE INT CONF AUTOM, P968, DOI 10.1145/3324884.3416590
   Wen M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/3180155.3180233
   Xin Q, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P226, DOI 10.1145/3092703.3092718
   Xin Q, 2017, IEEE INT CONF AUTOM, P660, DOI 10.1109/ASE.2017.8115676
   Xiong YF, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P789, DOI 10.1145/3180155.3180182
   Xiong YF, 2017, PROC INT CONF SOFTW, P416, DOI 10.1109/ICSE.2017.45
   Xuan JF, 2017, IEEE T SOFTWARE ENG, V43, P34, DOI 10.1109/TSE.2016.2560811
   Yang J, 2017, ESEC/FSE'17)
   Ye H, 2021, IEEE Trans Softw Eng, P1
   Ye H, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09920-w
   Yuan Y, 2018, IEEE Trans Softw Eng, P1
NR 51
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2024
VL 29
IS 5
AR 116
DI 10.1007/s10664-024-10503-2
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZO5S0
UT WOS:001276258100002
PM 39069998
OA hybrid
DA 2024-08-05
ER

PT J
AU Idowu, S
   Osman, O
   Strüber, D
   Berger, T
AF Idowu, Samuel
   Osman, Osman
   Struber, Daniel
   Berger, Thorsten
TI Machine learning experiment management tools: a mixed-methods empirical
   study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Machine learning; Experiment management; Artifacts; Asset management;
   Tools; ML lifecycle
ID FRAMEWORK
AB Machine Learning (ML) experiment management tools support ML practitioners and software engineers when building intelligent software systems. By managing large numbers of ML experiments comprising many different ML assets, they not only facilitate engineering ML models and ML-enabled systems, but also managing their evolution-for instance, tracing system behavior to concrete experiments when the model performance drifts. However, while ML experiment management tools have become increasingly popular, little is known about their effectiveness in practice, as well as their actual benefits and challenges. We present a mixed-methods empirical study of experiment management tools and the support they provide to users. First, our survey of 81 ML practitioners sought to determine the benefits and challenges of ML experiment management and of the existing tool landscape. Second, a controlled experiment with 15 student developers investigated the effectiveness of ML experiment management tools. We learned that 70% of our survey respondents perform ML experiments using specialized tools, while out of those who do not use such tools, 52% are unaware of experiment management tools or of their benefits. The controlled experiment showed that experiment management tools offer valuable support to users to systematically track and retrieve ML assets. Using ML experiment management tools reduced error rates and increased completion rates. By presenting a user's perspective on experiment management tools, and the first controlled experiment in this area, we hope that our results foster the adoption of these tools in practice, as well as they direct tool builders and researchers to improve the tool landscape overall.
C1 [Idowu, Samuel; Osman, Osman; Struber, Daniel; Berger, Thorsten] Chalmers, Gothenburg, Sweden.
   [Idowu, Samuel; Osman, Osman; Struber, Daniel; Berger, Thorsten] Univ Gothenburg, Gothenburg, Sweden.
   [Struber, Daniel] Radboud Univ Nijmegen, Nijmegen, Netherlands.
   [Berger, Thorsten] Ruhr Univ Bochum, Bochum, Germany.
C3 Chalmers University of Technology; University of Gothenburg; Radboud
   University Nijmegen; Ruhr University Bochum
RP Idowu, S (corresponding author), Chalmers, Gothenburg, Sweden.; Idowu, S (corresponding author), Univ Gothenburg, Gothenburg, Sweden.
EM samuelid@chalmers.se; oo565004@gmail.com; danstru@chalmers.se;
   thorsten.berger@rub.de
FU University of Gothenburg
FX Open access funding provided by University of Gothenburg.
CR Alberti M, 2018, INT CONF FRONT HAND, P423, DOI 10.1109/ICFHR-2018.2018.00080
   Amazon, SageMaker
   Amershi S, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P291, DOI 10.1109/ICSE-SEIP.2019.00042
   [Anonymous], 2003, Proceedings of the 7th International Conference on Empirical Assessment in Software Engineering
   [Anonymous], 2022, Appendix
   [Anonymous], 2022, Azure ai | microsoft cloud
   [Anonymous], 2022, Dvc extension for visual studio code
   [Anonymous], 2022, Vertex ai | google cloud
   [Anonymous], 2023, What is dvc?
   Arisholm E, 2007, IEEE T SOFTWARE ENG, V33, P65, DOI 10.1109/TSE.2007.17
   Arpteg A, 2018, EUROMICRO CONF PROC, P50, DOI 10.1109/SEAA.2018.00018
   Berg G, 2022, Image classification with machine learning as a service:-a comparison between azure, sagemaker, and vertex ai
   Berger T, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P763, DOI 10.1145/2950290.2950315
   Bosch J, 2022, Accelerating Digital Transformation: 10 Years of Software Center, P399
   Bosch J, 2022, IEEE SOFTWARE, V39, P23, DOI 10.1109/MS.2022.3199621
   Bouthillier Xavier, 2020, Survey of machine-learning experimental methods at NeurIPS2019 and ICLR2020
   Carver J, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P239
   Counsell S, 2008, ITI, P477, DOI 10.1109/ITI.2008.4588457
   da Silva Daniel N. R., 2019, In CEUR Workshop Proceedings, P15
   DVC, 2021, ABOUT US
   Falessi D, 2018, EMPIR SOFTW ENG, V23, P452, DOI 10.1007/s10664-017-9523-3
   Fayyad U, 1996, COMMUN ACM, V39, P27, DOI 10.1145/240455.240464
   Ferenc R, 2020, SOFTWAREX, V12, DOI 10.1016/j.softx.2020.100551
   Gharibi G, 2019, INT WORK REAL ARTIF, P28, DOI 10.1109/RAISE.2019.00013
   Gold NE, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10057-7
   Hill C, 2016, S VIS LANG HUM CEN C, P162, DOI 10.1109/VLHCC.2016.7739680
   Hohman F, 2020, PROCEEDINGS OF THE 2020 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'20), DOI 10.1145/3313831.3376177
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   Idowu S, EUR C SOFTW ENG ADV
   Idowu S, 2022, Asset management in machine learning: state-of-research and state-of-practice
   Idowu S, 2024, 39 ACM SIGAPP S APPL
   Idowu S, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2021), P51, DOI 10.1109/ICSE-SEIP52600.2021.00014
   Isdahl Richard, 2019, eScience
   Janardhanan Ps, 2020, Procedia Computer Science, V171, P188, DOI 10.1016/j.procs.2020.04.020
   Jordan MI, 2015, SCIENCE, V349, P255, DOI 10.1126/science.aaa8415
   Khomh F, 2018, IEEE SOFTWARE, V35, P81, DOI 10.1109/MS.2018.3571224
   Kumeno F, 2019, INTELL DECIS TECHNOL, V13, P463, DOI 10.3233/IDT-190160
   Lewis Grace A., 2021, 2021 IEEE/ACM 1st Workshop on AI Engineering - Software Engineering for AI (WAIN), P133, DOI 10.1109/WAIN52551.2021.00028
   Lui KJ, 2018, THER INNOV REGUL SCI, V52, P407, DOI 10.1177/2168479017739269
   Microsoft, 2017, Team Data Science Process Documentation
   Miotto R, 2018, BRIEF BIOINFORM, V19, P1236, DOI 10.1093/bib/bbx044
   Ml-Tooling, 2023, Ml-tooling/best-of-ml-python: a ranked list of awesome machine learning python libraries
   MLflow, 2021, Mlflow
   Nahar N, 2022, PROC INT CONF SOFTW, P413, DOI 10.1145/3510003.3510209
   Namaki MH, 2020, Vamsa: tracking provenance in data science scripts
   Nayak A, 2017, 2017 INT C INT COMP, P1
   Nazir R, 2024, J SYST SOFTWARE, V207, DOI 10.1016/j.jss.2023.111860
   Neptune, 2021, Neptune.ai
   Ormenisan AA, 2020, MLSYS 20
   Polyaxon, machine learning at scale
   Quaranta L, 2021, A taxonomy of tools for reproducible machine learning experiments
   Raschka S., 2019, Python Machine Learning: Machine Learning and Deep Learning With Python, Scikit-Learn, and Tensorflow 2
   Rashidi HH, 2021, INT J LAB HEMATOL, V43, P15, DOI 10.1111/ijlh.13537
   Salman I, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P666, DOI 10.1109/ICSE.2015.82
   Sarker I., 2015, International Journal of Software Engineering and its Applications, V9, P55, DOI DOI 10.14257/IJSEIA.2015.9.11.05
   Schelter S., 2018, SysML, V2018, P3
   Schlegel M, 2022, Arxiv, DOI [arXiv:2210.11831, 10.48550/ARXIV.2210.11831]
   Scikit Learn, 2021, Datasets: Boston and diabetes
   Sculley D, 2015, ADV NEUR IN, V28
   Serban A, 2020, Adoption and effects of software engineering best practices in machine learning
   Sharma R, 2020, COMPUT OPER RES, V119, DOI 10.1016/j.cor.2020.104926
   Siegmund J, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P9, DOI 10.1109/ICSE.2015.24
   statisticsanddata, Most popular machine learning libraries 2014/2021
   Tsay J, 2018, SysML, P1
   Tuggener L, 2019, 2019 6TH SWISS CONFERENCE ON DATA SCIENCE (SDS), P31, DOI 10.1109/SDS.2019.00-11
   Turner JR, 2013, Crossover Design, P521
   Vartak Manasi, 2016, P WORKSH HUM IN THE, DOI DOI 10.1145/2939502.2939516
   Visengeriyeva L, 2021, ml-ops.org
   Wang MW, 2018, IEEE NETWORK, V32, P92, DOI 10.1109/MNET.2017.1700200
   Waring J, 2020, ARTIF INTELL MED, V104, DOI 10.1016/j.artmed.2020.101822
   Weber Thomas, 2022, MuC '22: Mensch und Computer 2022, P66, DOI 10.1145/3543758.3543779
   Wels S, 2012, P AG SEM 2012
   Wirth R., 2000, Proceedings of the Fourth International Conference on the Practical Application of Knowledge Discovery and Data Mining, P29
   Wuest T, 2016, PROD MANUF RES, V4, P23, DOI 10.1080/21693277.2016.1192517
   Xin D, 2018, PROCEEDINGS OF THE SECOND WORKSHOP ON DATA MANAGEMENT FOR END-TO-END MACHINE LEARNING, DOI 10.1145/3209889.3209897
   Zaharia Matei A, 2018, IEEE Data Eng. Bull., V41, P39
   Zhang DM, 2022, J ROCK MECH GEOTECH, V14, P1100, DOI 10.1016/j.jrmge.2022.03.005
NR 77
TC 0
Z9 0
U1 5
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2024
VL 29
IS 4
AR 74
DI 10.1007/s10664-024-10444-w
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SM1T9
UT WOS:001234785800001
OA hybrid
DA 2024-08-05
ER

PT J
AU Schulte, L
   Ledel, B
   Herbold, S
AF Schulte, Lukas
   Ledel, Benjamin
   Herbold, Steffen
TI Studying the explanations for the automated prediction of bug and
   non-bug issues using LIME and SHAP
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Explainable AI; LIME; SHAP; Issue type prediction
ID COEFFICIENT ALPHA
AB Context The identification of bugs within issues reported to an issue tracking system is crucial for triage. Machine learning models have shown promising results for this task. However, we have only limited knowledge of how such models identify bugs. Explainable AI methods like LIME and SHAP can be used to increase this knowledge.Objective We want to understand if explainable AI provides explanations that are reasonable to us as humans and align with our assumptions about the model's decision-making. We also want to know if the quality of predictions is correlated with the quality of explanations.Methods We conduct a study where we rate LIME and SHAP explanations based on their quality of explaining the outcome of an issue type prediction model. For this, we rate the quality of the explanations, i.e., if they align with our expectations and help us understand the underlying machine learning model.Results We found that both LIME and SHAP give reasonable explanations and that correct predictions are well explained. Further, we found that SHAP outperforms LIME due to a lower ambiguity and a higher contextuality that can be attributed to the ability of the deep SHAP variant to capture sentence fragments.Conclusion We conclude that the model finds explainable signals for both bugs and non-bugs. Also, we recommend that research dealing with the quality of explanations for classification tasks reports and investigates rater agreement, since the rating of explanations is highly subjective.
C1 [Schulte, Lukas; Herbold, Steffen] Univ Passau, Passau, Germany.
   [Ledel, Benjamin] Digital Learning GmbH, Gottingen, Germany.
C3 University of Passau
RP Schulte, L (corresponding author), Univ Passau, Passau, Germany.
EM lukas.schulte@uni-passau.de; benjamin.ledel@digitallearning.gmbh;
   steffen.herbold@uni-passau.de
OI Herbold, Steffen/0000-0001-9765-2803
FU Universitt Passau (3160)
FX No Statement Available
CR Alvarez-Melis D., 2018, ARXIV180608049
   Biran O, 2017, IJCAI 17 WORKSH EXPL, V8, P8
   Cohen J., 1988, Statistical power analysis for the behavioral sciences
   Cook T. D., 1979, Quasi-experimentation: Design analysis issues for field settings, V351
   Cronbach LJ, 1951, PSYCHOMETRIKA, V16, P297
   de Sousa IP, 2019, SENSORS-BASEL, V19, DOI 10.3390/s19132969
   FLEISS JL, 1971, PSYCHOL BULL, V76, P378, DOI 10.1037/h0031619
   Garreau D, 2020, Looking deeper into tabular lime
   Goyal Y, 2017, PROC CVPR IEEE, P6325, DOI 10.1109/CVPR.2017.670
   Guidotti R, 2019, ACM COMPUT SURV, V51, DOI 10.1145/3236009
   Herbold S, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10092-4
   Herbold S, 2020, EMPIR SOFTW ENG, V25, P5333, DOI 10.1007/s10664-020-09885-w
   Herzig K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P392, DOI 10.1109/ICSE.2013.6606585
   Jiarpakdee J, 2021, IEEE WORK CONF MIN S, P432, DOI 10.1109/MSR52588.2021.00055
   Kokalj E., 2021, P EACL HACK NEWS MED, P16
   Ledel B, 2022, Arxiv, DOI arXiv:2209.07623
   Likert R.A., 1932, A technique for the measurement of attitudes, V22, P5, DOI DOI 10.4135/9781412961288.N454
   Lundberg SM, 2017, ADV NEUR IN, V30
   Madeyski L, 2018, EMPIR SOFTW ENG, V23, P1982, DOI 10.1007/s10664-017-9574-5
   Magesh PR, 2020, COMPUT BIOL MED, V126, DOI 10.1016/j.compbiomed.2020.104041
   Man X., 2021, J Fin Data Sci, V3, P127, DOI DOI 10.3905/JFDS.2020.1.047
   Mills C, 2018, PROC IEEE INT CONF S, P381, DOI 10.1109/ICSME.2018.00046
   Mishra S., 2017, P 18 INT SOC MUS INF, P537, DOI DOI 10.5281/ZENODO.1417387
   Palacio DN, 2019, PROC IEEE INT CONF S, P140, DOI 10.1109/ICSME.2019.00024
   Pornprasit C, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P407, DOI 10.1109/ASE51524.2021.9678763
   Ribeiro M.T., 2016, ICML WORKSHOP HUMAN
   Ribeiro MT, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1135, DOI 10.1145/2939672.2939778
   Roy S, 2022, PROC IEEE INT CONF S, P444, DOI 10.1109/ICSME55016.2022.00056
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sheng YY, 2012, FRONT PSYCHOL, V3, DOI 10.3389/fpsyg.2012.00034
   Slack D, 2020, PROCEEDINGS OF THE 3RD AAAI/ACM CONFERENCE ON AI, ETHICS, AND SOCIETY AIES 2020, P180, DOI 10.1145/3375627.3375830
   Spearman C, 1904, AM J PSYCHOL, V15, P72, DOI 10.2307/1412159
   Taber KS, 2018, RES SCI EDUC, V48, P1273, DOI 10.1007/s11165-016-9602-2
   TAHERDOOST H, 2016, SSRN ELECT J
   Tantithamthavorn C, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P1, DOI 10.1109/ASE51524.2021.9678580
   Trautsch A, 2022, 2022 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON NATURAL LANGUAGE-BASED SOFTWARE ENGINEERING (NLBSE 2022), P37, DOI 10.1145/3528588.3528661
   Vaswani A, 2017, ADV NEUR IN, V30
   Visani G, 2022, J OPER RES SOC, V73, P91, DOI 10.1080/01605682.2020.1865846
   von der Mosel J, 2023, IEEE T SOFTWARE ENG, V49, P1487, DOI 10.1109/TSE.2022.3178469
   Wattanakriengkrai S, 2020, Arxiv, DOI arXiv:2009.03612
   Wohlin C., 2012, Experimentation in Software Engineering, DOI [10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Zhang Y., 2019, Why should you trust my explanation? Understanding Uncertainty in LIME Explanations
NR 42
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2024
VL 29
IS 4
AR 93
DI 10.1007/s10664-024-10469-1
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UK9H4
UT WOS:001248066000002
OA hybrid
DA 2024-08-05
ER

PT J
AU Vidal, FR
   Ivaki, N
   Laranjeiro, N
AF Vidal, Fernando Richter
   Ivaki, Naghmeh
   Laranjeiro, Nuno
TI OpenSCV: an open hierarchical taxonomy for smart contract
   vulnerabilities
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Blockchain; Smart contracts; Vulnerabilities; Classification; Taxonomy
ID NETWORKS
AB Smart contracts are nowadays at the core of most blockchain systems. Like all computer programs, smart contracts are subject to the presence of residual faults, including severe security vulnerabilities. However, the key distinction lies in how these vulnerabilities are addressed. In smart contracts, when a vulnerability is identified, the affected contract must be terminated within the blockchain, as due to the immutable nature of blockchains, it is impossible to patch a contract once deployed. In this context, research efforts have been focused on proactively preventing the deployment of smart contracts containing vulnerabilities, mainly through the development of vulnerability detection tools. Along with these efforts, several heterogeneous vulnerability classification schemes appeared (e.g., most notably DASP and SWC). At the time of writing, these are mostly outdated initiatives, even though new smart contract vulnerabilities are consistently uncovered. In this paper, we propose OpenSCV, a new and Open hierarchical taxonomy for Smart Contract vulnerabilities, which is open to community contributions and matches the current state of the practice while being prepared to handle future modifications and evolution. The taxonomy was built based on the analysis of the existing research on vulnerability classification, community-maintained classification schemes, and research on smart contract vulnerability detection. We show how OpenSCV covers the announced detection ability of the current vulnerability detection tools and highlight its usefulness in smart contract vulnerability research. To validate OpenSCV, we performed an expert-based analysis wherein we invited multiple experts engaged in smart contract security research to participate in a questionnaire. The feedback from these experts indicated that the categories in OpenSCV are representative, clear, easily understandable, comprehensive, and highly useful. Regarding the vulnerabilities, the experts confirmed that they are easily understandable.
C1 [Vidal, Fernando Richter; Ivaki, Naghmeh; Laranjeiro, Nuno] Univ Coimbra, Ctr Informat & Syst, Dept Informat Engn, Coimbra, Portugal.
C3 Universidade de Coimbra
RP Vidal, FR (corresponding author), Univ Coimbra, Ctr Informat & Syst, Dept Informat Engn, Coimbra, Portugal.
EM fernandovidal@dei.uc.pt; naghmeh@dei.uc.pt; cnl@dei.uc.pt
OI Vidal, Fernando Richter/0000-0003-4869-2336; Ivaki,
   Naghmeh/0000-0001-8376-6711; Laranjeiro, Nuno/0000-0003-0011-9901
FU Universidade de Coimbra [UIDP/00326/2020, 7113]; FCT - Foundation for
   Science and Technology, I.P./MCTES through national funds (PIDDAC);
   Recovery and Resilience Plan (PRR) [02/C05-i01/2022]; European Funds
   Next Generation EU; Component 5 - Capitalization and Business Innovation
   - Mobilizing Agendas for Business Innovation [2023.03131]; Foundation
   for Science and Technology (FCT); BD
FX This work is funded by the FCT - Foundation for Science and Technology,
   I.P./MCTES through national funds (PIDDAC), within the scope of CISUC R
   &D Unit - UIDB/00326/2020 or project code UIDP/00326/2020; by Project
   "Agenda Mobilizadora Sines Nexus". ref. No. 7113, supported by the
   Recovery and Resilience Plan (PRR) and by the European Funds Next
   Generation EU, following Notice No. 02/C05-i01/2022, Component 5 -
   Capitalization and Business Innovation - Mobilizing Agendas for Business
   Innovation; and by Foundation for Science and Technology (FCT), Grant
   Nr. 2023.03131.BD.
CR Agbo CC, 2019, HEALTHCARE-BASEL, V7, DOI 10.3390/healthcare7020056
   Akca S, 2019, ASIA PAC SOFWR ENG, P482, DOI 10.1109/APSEC48747.2019.00071
   Amiet N, 2021, DIGIT THREATS, V2, DOI 10.1145/3407230
   Amoroso E.G., 1994, Fundamentals of Computer Security Technology
   [Anonymous], 2010, 10442009 IEEE, P1, DOI [DOI 10.1109/IEEESTD.2010.5439063, 10.1109/IEEESTD.2010.5399061, DOI 10.1109/IEEESTD.2010.5553440, 10.1109/IEEESTD.2010.5553440]
   [Anonymous], 2013, Orthogonal Defect Classification v5.2 for Software Design and Code
   Antonopoulos A.M., 2018, Mastering Ethereum: Building Smart Contracts and Dapps
   Arganaraz MC, 2020, OpenAccess Series in Informatics (OASIcs), pp16, DOI [10.4230/OASIcs.SLATE.2020, DOI 10.4230/OASICS.SLATE.2020]
   Ashizawa N, 2022, BLOCKCHAIN-RES APPL, V3, DOI 10.1016/j.bcra.2022.100101
   Ashouri M, 2020, PROCEEDINGS OF THE 35TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING (SAC'20), P353, DOI 10.1145/3341105.3374226
   Ashraf I, 2020, IEEE ACCESS, V8, P99552, DOI 10.1109/ACCESS.2020.2995183
   Atzei N, 2017, LECT NOTES COMPUT SC, V10204, P164, DOI 10.1007/978-3-662-54455-6_8
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   Ayoade G, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON BLOCKCHAIN (BLOCKCHAIN 2019), P384, DOI 10.1109/Blockchain.2019.00059
   Bishop M., 1996, CRITICAL ANAL VULNER
   Blockstack A, 2021, Clarity
   Bose P, 2022, P IEEE S SECUR PRIV, P161, DOI [10.1109/SP46214.2022.9833721, 10.1109/SP46214.2022.00072]
   Brent L, 2018, Arxiv, DOI arXiv:1809.03981
   Brent L, 2020, PROCEEDINGS OF THE 41ST ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '20), P454, DOI 10.1145/3385412.3385990
   Chen JC, 2022, IEEE T SOFTWARE ENG, V48, P327, DOI 10.1109/TSE.2020.2989002
   Chen T, 2020, 27TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2020), DOI 10.14722/ndss.2020.24449
   Chen T, 2021, IEEE T EMERG TOP COM, V9, P1433, DOI 10.1109/TETC.2020.2979019
   Chen WM, 2022, PROCEEDINGS OF THE 31ST ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2022, P703, DOI 10.1145/3533767.3534218
   Chinen Y, 2020, 2020 IEEE INTERNATIONAL CONFERENCE ON BLOCKCHAIN (BLOCKCHAIN 2020), P327, DOI 10.1109/Blockchain50366.2020.00048
   Choi J, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P227, DOI 10.1109/ASE51524.2021.9678888
   Clarivate, 2021, Journal Citation Reports (JCR)
   Coblenz M, 2019, The Obsidian Smart Contract Language
   ConsenSys, 2021, Mythril
   Crincoli G, 2022, BSCI'22: PROCEEDINGS OF THE FOURTH ACM INTERNATIONAL SYMPOSIUM ON BLOCKCHAIN AND SECURE CRITICAL INFRASTRUCTURE, P3, DOI 10.1145/3494106.3528672
   Cui S, 2022, P 2022 ACM SIGSAC C, P639, DOI [10.1145/3548606.3560552, DOI 10.1145/3548606.3560552]
   CWE Community, 2009, Common Weakness Enumeration
   di Angelo M, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON DECENTRALIZED APPLICATIONS AND INFRASTRUCTURES (DAPPCON), P69, DOI 10.1109/DAPPCON.2019.00018
   Ding MJ, 2021, PROCEEDINGS OF EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING (EASE 2021), P321, DOI 10.1145/3463274.3463351
   Durieux T, 2020, PROC INT CONF SOFTW, P530, DOI 10.1145/3377811.3380364
   Eshghie M, 2021, PROCEEDINGS OF EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING (EASE 2021), P305, DOI 10.1145/3463274.3463348
   Ethereum's Github, 2022, Pure Issue
   Feist J, 2019, 2019 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON EMERGING TRENDS IN SOFTWARE ENGINEERING FOR BLOCKCHAIN (WETSEB 2019), P8, DOI 10.1109/WETSEB.2019.00008
   Fu ML, 2019, IEEE ACCESS, V7, P147327, DOI 10.1109/ACCESS.2019.2947146
   Gao JB, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P23, DOI 10.1109/ICSE-Companion.2019.00029
   Geneiatakis D, 2020, IEEE T ENG MANAGE, V67, P1310, DOI 10.1109/TEM.2020.2979325
   Ghaleb Asem, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P415, DOI 10.1145/3395363.3397385
   Ghaleb A, 2023, P ACM ICSE
   government U, 1999, National Vulnerability Database
   Grech A., 2017, BLOCKCHAIN ED, DOI [10.2760/60649, DOI 10.2760/60649]
   Grech N, 2020, COMMUN ACM, V63, P87, DOI 10.1145/3416262
   Grishchenko I, 2018, LECT NOTES COMPUT SC, V10804, P243, DOI 10.1007/978-3-319-89722-6_10
   Gupta R, 2022, COMPUT ELECTR ENG, V97, DOI 10.1016/j.compeleceng.2021.107583
   Hajdu A, 2020, LECT NOTES COMPUT SC, V12031, P161, DOI 10.1007/978-3-030-41600-3_11
   Hansman S, 2005, COMPUT SECUR, V24, P31, DOI 10.1016/j.cose.2004.06.011
   Hartel P, 2020, LECT NOTES COMPUT SC, V12165, P23, DOI 10.1007/978-3-030-50995-8_2
   He NY, 2021, PROCEEDINGS OF THE 30TH USENIX SECURITY SYMPOSIUM, P1271
   Hewa T, 2021, J NETW COMPUT APPL, V177, DOI 10.1016/j.jnca.2020.102857
   Howard JohnD., 1997, ANAL SECURITY INCIDE
   Hu B, 2021, PATTERNS, V2, DOI 10.1016/j.patter.2020.100179
   Hu T, 2023, IEEE Trans Reliab, P1, DOI [10.1109/TR.2023.3233999, DOI 10.1109/TR.2023.3233999]
   Hwang SJ, 2022, IEEE ACCESS, V10, P32595, DOI 10.1109/ACCESS.2022.3162065
   Ivanov N, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3593293
   Ji R, 2020, IEEE INT C ENG COMP, P125, DOI 10.1109/ICECCS51672.2020.00022
   Jialiang Chang, 2019, Formal Methods and Software Engineering. 21st International Conference on Formal Engineering Methods, ICFEM 2019. Proceedings. Lecture Notes in Computer Science (LNCS 11852), P286, DOI 10.1007/978-3-030-32409-4_18
   Jiang B, 2018, IEEE INT CONF AUTOM, P259, DOI 10.1145/3238147.3238177
   Jin L, 2023, IEEE T DEPEND SECURE, V20, P650, DOI 10.1109/TDSC.2022.3141396
   Kaleem M, 2020, 2020 2ND CONFERENCE ON BLOCKCHAIN RESEARCH & APPLICATIONS FOR INNOVATIVE NETWORKS AND SERVICES (BRAINS), P107, DOI [10.1109/BRAINS49436.2020.9223278, 10.1109/brains49436.2020.9223278]
   Kalra S, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23082
   Khan S, 2021, IEEE ACCESS, V9, P116672, DOI 10.1109/ACCESS.2021.3106384
   Kolluri A, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P363, DOI 10.1145/3293882.3330560
   Krsul IV, 1998, Software vulnerability analysis
   Krupp J, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P1317
   Li BX, 2022, IEEE T RELIAB, V71, P984, DOI 10.1109/TR.2022.3161634
   Li Peiru, 2022, EASE 2022: The International Conference on Evaluation and Assessment in Software Engineering 2022, P366, DOI 10.1145/3530019.3531342
   Li WY, 2022, 2022 IEEE 46TH ANNUAL COMPUTERS, SOFTWARE, AND APPLICATIONS CONFERENCE (COMPSAC 2022), P746, DOI 10.1109/COMPSAC54236.2022.00124
   Li ZX, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10218-2
   Liao JW, 2019, 2019 SIXTH INTERNATIONAL CONFERENCE ON INTERNET OF THINGS: SYSTEMS, MANAGEMENT AND SECURITY (IOTSMS), P458, DOI 10.1109/iotsms48152.2019.8939256
   Liao ZQ, 2022, PROCEEDINGS OF THE 31ST ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2022, P752, DOI 10.1145/3533767.3534222
   Lindqvist U, 1997, P IEEE S SECUR PRIV, P154, DOI 10.1109/SECPRI.1997.601330
   Liu C, 2018, PROC IEEE ACM INT C, P65, DOI 10.1145/3183440.3183495
   Liu ZG, 2023, IEEE T KNOWL DATA EN, V35, P1296, DOI 10.1109/TKDE.2021.3095196
   Lough DL, 2001, A taxonomy of computer attacks with applications to wireless networks
   Lu N, 2021, SOFTWARE PRACT EXPER, V51, P2065, DOI 10.1002/spe.2745
   Luu L, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P254, DOI 10.1145/2976749.2978309
   Ma FC, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3560264
   Ma FC, 2022, IEEE T SOFTWARE ENG, V48, P4380, DOI 10.1109/TSE.2021.3117966
   Mann David G., 1999, P1
   Manning A, 2018, Solidity security: comprehensive list of known attack vectors and common anti-patterns
   Mavridou A, 2019, LECT NOTES COMPUT SC, V11598, P446, DOI 10.1007/978-3-030-32101-7_27
   Mavridou A, 2018, LECT NOTES COMPUT SC, V10957, P523, DOI 10.1007/978-3-662-58387-6_28
   Mi F, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON BLOCKCHAIN AND CRYPTOCURRENCY (ICBC), DOI 10.1109/ICBC51069.2021.9461050
   MITRE Corporation, 1999, Common Vulnerabilities and Exposures
   Momeni P, 2019, ANN CONF PRIV SECUR, P272, DOI 10.1109/pst47121.2019.8949045
   Nassirzadeh B, 2023, Mathematical Research for Blockchain Economy, P143
   NCC Group, 2019, DASP
   NCCGroup, 2021, Decentralized Application Security Project (DASP) Top10
   Nguyen TD, 2020, PROC INT CONF SOFTW, P778, DOI 10.1145/3377811.3380334
   Nishida Yuki, 2021, Tools and Algorithms for the Construction and Analysis of Systems. 27th International Conference, TACAS 2021. Held as Part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2021. Proceedings. Lecture Notes in Computer Science (LNCS 12652), P262, DOI 10.1007/978-3-030-72013-1_14
   OWASP Foundation, 2001, OWASP
   Pani S, 2023, 16 INN SOFTW ENG C, P1, DOI [10.1145/3578527.3578538, DOI 10.1145/3578527.3578538]
   [钱鹏 Qian Peng], 2022, [软件学报, Journal of Software], V33, P3059
   Rameder H, 2022, FRONT BLOCKCHAIN, V5, DOI 10.3389/fbloc.2022.814977
   Rodler M, 2019, 26TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2019), DOI 10.14722/ndss.2019.23413
   Shakya S, 2022, 2022 IEEE INTERNATIONAL CONFERENCE ON BLOCKCHAIN (BLOCKCHAIN 2022), P37, DOI 10.1109/Blockchain55522.2022.00016
   Siegel D, 2016, Understanding the dao attack
   Slither's Github, 2019, Slither Vulnerabilities Detection
   SmartContractSecurity, 2020, Smart Contract Weakness Classification (SWC) and Test Cases
   SmartDec Corporation, 2018, SmartDec-Classification of smart contract vulnerabilities
   So S, 2020, P IEEE S SECUR PRIV, P1678, DOI 10.1109/SP40000.2020.00032
   Solidity, 2023, Solidity Documentation 0.8.17
   Song JJ, 2019, LECT NOTES COMPUT SC, V11928, P433, DOI 10.1007/978-3-030-36938-5_26
   Staderini M, 2022, SSRN Electron J, DOI [10.2139/ssrn.4038087, DOI 10.2139/SSRN.4038087]
   Staderini M, 2020, 2020 SECOND INTERNATIONAL CONFERENCE ON BLOCKCHAIN COMPUTING AND APPLICATIONS (BCCA), P44, DOI 10.1109/BCCA50787.2020.9274458
   Stephens Jon, 2021, 2021 IEEE Symposium on Security and Privacy (SP), P555, DOI 10.1109/SP40001.2021.00085
   Sun XB, 2023, J INF SECUR APPL, V73, DOI 10.1016/j.jisa.2023.103423
   Sunbeom S, 2021, 30 USENIX SEC S
   The Computing Research and Education Association of Australasia, 2021, CORE C RANK
   Tikhomirov S, 2018, 2018 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON EMERGING TRENDS IN SOFTWARE ENGINEERING FOR BLOCKCHAIN (WETSEB), P9, DOI 10.1145/3194113.3194115
   Torres CF, 2021, 2021 IEEE EUROPEAN SYMPOSIUM ON SECURITY AND PRIVACY (EUROS&P 2021), P103, DOI 10.1109/EuroSP51992.2021.00018
   Torres CF, 2018, 34TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2018), P664, DOI 10.1145/3274694.3274737
   Tsankov P., 2018, Securify2
   Tsankov P, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P67, DOI 10.1145/3243734.3243780
   Vidal F, 2024, OpenSCV Website
   Vidal F, 2024, OpenSCV Github Repository
   Vidal Fernando, 2023, Zenodo, DOI 10.5281/ZENODO.7763982
   Vogelsteller F, 2015, ERC20 standard
   Wagner G, 2018, EIP-1470: Smart Contract Weakness Classification (SWC)
   Wang HJ, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2019), P1, DOI 10.1109/ICSE-NIER.2019.00009
   Wang W, 2021, IEEE T NETW SCI ENG, V8, P1133, DOI 10.1109/TNSE.2020.2968505
   Wen B., 2021, blockchain and trustworthy systems, P418, DOI [10.1007/978-981-16-7993-332, DOI 10.1007/978-981-16-7993-332]
   Wu HJ, 2021, PROC INT SYMP SOFTW, P378, DOI 10.1109/ISSRE52982.2021.00047
   Xi R, 2023, SOFTWARE PRACT EXPER, V53, P631, DOI 10.1002/spe.3163
   Xing CP, 2020, WIREL NETW, DOI 10.1007/s11276-020-02379-z
   Xue YX, 2024, IEEE T DEPEND SECURE, V21, P515, DOI 10.1109/TDSC.2022.3182373
   Xue YX, 2020, IEEE INT CONF AUTOM, P1029, DOI 10.1145/3324884.3416553
   Yaga D.J., 2018, NIST Interagency/Internal Report, V8202, P1, DOI DOI 10.6028/NIST.IR.8202
   Ye JM, 2022, J SYST SOFTWARE, V192, DOI 10.1016/j.jss.2022.111410
   Yosifova VK, 2021, Possible instant messaging malware attack using unicode right-to-left override, P179, DOI [10.1007/978-3-030-65722-211, DOI 10.1007/978-3-030-65722-211]
   Yu XX, 2021, IEEE IJCNN, DOI 10.1109/IJCNN52387.2021.9534324
   Zeng QR, 2022, 2022 IEEE 46TH ANNUAL COMPUTERS, SOFTWARE, AND APPLICATIONS CONFERENCE (COMPSAC 2022), P1742, DOI 10.1109/COMPSAC54236.2022.00277
   Zhang LJ, 2022, COMPUT NETW, V217, DOI 10.1016/j.comnet.2022.109289
   Zhang PC, 2019, Arxiv, DOI arXiv:1911.09425
   Zhang PC, 2020, PROC IEEE INT CONF S, P139, DOI 10.1109/ICSME46990.2020.00023
   Zhang QZ, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P116, DOI [10.1109/saner48275.2020.9054822, 10.1109/SANER48275.2020.9054822]
   Zhang S, 2022, IEEE INT C S Q R S, P616, DOI 10.1109/QRS57517.2022.00068
   Zhang Z, 2022, IEEE INT CONF AUTOM, DOI 10.1145/3551349.3560428
   Zheng G., 2021, Ethereum Smart Contract Development in Solidity, DOI DOI 10.1007/978-981-15-6218-1
   Zhou H., 2022, Journal of Cybersecurity and Privacy, V2, P358, DOI DOI 10.3390/JCP2020019
   Zhou QH, 2022, IEEE INTERNET THINGS, V9, P24695, DOI 10.1109/JIOT.2022.3196269
   Zhuang Y, 2020, PROCEEDINGS OF THE TWENTY-NINTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P3283
   Zou WQ, 2021, IEEE T SOFTWARE ENG, V47, P2084, DOI 10.1109/TSE.2019.2942301
NR 146
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2024
VL 29
IS 4
AR 101
DI 10.1007/s10664-024-10446-8
PG 67
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UQ7V4
UT WOS:001249598000001
OA hybrid
DA 2024-08-05
ER

PT J
AU Alazba, A
   Aljamaan, H
   Alshayeb, M
AF Alazba, Amal
   Aljamaan, Hamoud
   Alshayeb, Mohammad
TI CoRT: Transformer-based code representations with self-supervision by
   predicting reserved words for code smell detection
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Self-supervised learning; Deep learning; Bad smell detection
ID COMPLEXITY; SOFTWARE
AB ContextCode smell detection is the process of identifying poorly designed and implemented code pieces. Machine learning-based approaches require enormous amounts of manually labeled data, which are costly and difficult to scale. Unsupervised semantic feature learning, or learning without manual annotation, is vital for effectively harvesting an enormous amount of available data.ObjectiveThe objective of this study is to propose a new code smell detection approach that utilizes self-supervised learning to learn intermediate representations without the need for labels and then fine-tune these representations on multiple tasks.MethodWe propose a Code Representation with Transformers (CoRT) to learn the semantic and structural features of the source code by training transformers to recognize masked reserved words that are applied to the code given as input. We empirically demonstrated that the defined proxy task provides a powerful method for learning semantic and structural features. We exhaustively evaluated our approach on four downstream tasks: detection of the Data Class, God Class, Feature Envy, and Long Method code smells. Moreover, we compare our results with those of two paradigms: supervised learning and a feature-based approach. Finally, we conducted a cross-project experiment to evaluate the generalizability of our method to unseen labeled data.ResultsThe results indicate that the proposed method has a high detection performance for code smells. For instance, the detection performance of CoRT on Data Class achieved a score of F1 between 88.08-99.4, Area Under Curve (AUC) between 89.62-99.88, and Matthews Correlation Coefficient (MCC) between 75.28-98.8, while God Class achieved a value of F1 ranges from 86.32-99.03, AUC of 92.1-99.85, and MCC of 76.15-98.09. Compared with the baseline model and feature-based approach, CoRT achieved better detection performance and had a high capability to detect code smells in unseen datasets.ConclusionsThe proposed method has been shown to be effective in detecting class-level, and method-level code smells.
C1 [Alazba, Amal; Aljamaan, Hamoud; Alshayeb, Mohammad] King Fahd Univ Petr & Minerals, Informat & Comp Sci Dept, Dhahran 31261, Saudi Arabia.
   [Alazba, Amal] King Saud Univ, Dept Informat Syst, Riyadh 11362, Saudi Arabia.
   [Aljamaan, Hamoud] Interdisciplinary Res Ctr Finance & Digital Econ, Dhahran 31261, Saudi Arabia.
   [Alshayeb, Mohammad] Interdisciplinary Res Ctr Intelligent Secure Syst, Dhahran 31261, Saudi Arabia.
C3 King Fahd University of Petroleum & Minerals; King Saud University
RP Alazba, A (corresponding author), King Fahd Univ Petr & Minerals, Informat & Comp Sci Dept, Dhahran 31261, Saudi Arabia.; Alazba, A (corresponding author), King Saud Univ, Dept Informat Syst, Riyadh 11362, Saudi Arabia.
EM aalazba@ksu.edu.sa; hjamaan@kfupm.edu.sa; alshayeb@kfupm.edu.sa
OI Alazba, Amal/0000-0002-9353-7872
FU King Fahd University of Petroleum and Minerals
FX The authors acknowledge the support of the King Fahd University of
   Petroleum and Minerals in the development of this work.
CR Abdou A, 2024, J SOFTW-EVOL PROC, V36, DOI 10.1002/smr.2454
   AbuHassan A, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2320
   Akiba T, 2019, KDD'19: PROCEEDINGS OF THE 25TH ACM SIGKDD INTERNATIONAL CONFERENCCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P2623, DOI 10.1145/3292500.3330701
   Al-Shaaby A, 2020, ARAB J SCI ENG, V45, P2341, DOI 10.1007/s13369-019-04311-w
   Alazba A, 2023, EMPIR SOFTW ENG, V28, DOI 10.1007/s10664-023-10312-z
   Alazba A, 2021, INFORM SOFTWARE TECH, V138, DOI 10.1016/j.infsof.2021.106648
   Alkhaeir T, 2021, IEEE ACCESS, V9, P3360, DOI 10.1109/ACCESS.2020.3047870
   Alkharabsheh K, 2019, SOFTWARE QUAL J, V27, P1069, DOI 10.1007/s11219-018-9424-8
   Amorim L, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P261, DOI 10.1109/ISSRE.2015.7381819
   BANKER RD, 1993, COMMUN ACM, V36, P81, DOI 10.1145/163359.163375
   Barbez A, 2020, J SYST SOFTWARE, V161, DOI 10.1016/j.jss.2019.110486
   Barbez A, 2019, PROC IEEE INT CONF S, P114, DOI 10.1109/ICSME.2019.00021
   Bryton S, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P337, DOI 10.1109/QUATIC.2010.60
   Charette SL, 2015, P 11 INT C PRED MOD, P1, DOI DOI 10.1145/2810146.2810155
   Chen ZF, 2018, INFORM SOFTWARE TECH, V94, P14, DOI 10.1016/j.infsof.2017.09.011
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   Dewangan S, 2021, IEEE ACCESS, V9, P162869, DOI 10.1109/ACCESS.2021.3133810
   Di Nucci D, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P612, DOI 10.1109/SANER.2018.8330266
   dos Reis JP, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10110-5
   Feng ZY, 2020, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, EMNLP 2020, P1536
   Fontana FA, 2016, EMPIR SOFTW ENG, V21, P1143, DOI 10.1007/s10664-015-9378-4
   Fontana FA, 2017, KNOWL-BASED SYST, V128, P43, DOI 10.1016/j.knosys.2017.04.014
   Fontana FA, 2013, PROC IEEE INT CONF S, P396, DOI 10.1109/ICSM.2013.56
   Fowler M., 1999, Refactoring: Improving the Design of Existing Programs
   Gidaris S, 2018, Arxiv, DOI arXiv:1803.07728
   Guggulothu T, 2020, SOFTWARE QUAL J, V28, P1063, DOI 10.1007/s11219-020-09498-y
   Guo D, 2022, CoRR, DOI [10.48550/arXiv.2203.03850, DOI 10.48550/ARXIV.2203.03850]
   Guo DY, 2021, Arxiv, DOI arXiv:2009.08366
   Guo XL, 2019, 11TH ASIA-PACIFIC SYMPOSIUM ON INTERNETWARE (INTERNETWARE 2019), DOI 10.1145/3361242.3361257
   Hadj-Kacem M, 2019, COMM COM INF SC, V1142, P296, DOI 10.1007/978-3-030-36808-1_32
   Hadj-Kacem M, 2019, IEEE IJCNN
   Hadj-Kacem M, 2018, PROCEEDINGS OF THE 13TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL APPROACHES TO SOFTWARE ENGINEERING, P137, DOI 10.5220/0006709801370146
   Hassaine S, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P343, DOI 10.1109/QUATIC.2010.61
   He KM, 2016, PROC CVPR IEEE, P770, DOI 10.1109/CVPR.2016.90
   Hua W, 2021, IEEE T RELIAB, V70, P304, DOI 10.1109/TR.2020.3001918
   Ioffe Sergey, 2015, INT C MACHINE LEARNI, V37, P448, DOI DOI 10.48550/ARXIV.1502.03167
   Jaiswal A, 2021, TECHNOLOGIES, V9, DOI 10.3390/technologies9010002
   Kaur A, 2017, 2017 INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND DATA SCIENCE (MLDS 2017), P9, DOI 10.1109/MLDS.2017.8
   Khleel NAA., 2022, Indones. J. Electr. Eng. Comput. Sci., V26, P1725, DOI 10.11591/ijeecs.v26.i3.pp1725-1735
   Khomh F, 2011, J SYST SOFTWARE, V84, P559, DOI 10.1016/j.jss.2010.11.921
   Khomh F, 2009, INT CONF QUAL SOFTW, P305, DOI 10.1109/QSIC.2009.47
   Kim D.K., 2017, Int. J. Electr. Comput. Eng. (IJECE), V7, P3613, DOI [DOI 10.11591/IJECE.V7I6.PP3613-3621, 10.11591/ijece. v7i6.pp3613-3621, 10.11591/ijece.v7i6.pp3613-3621]
   Kotsiantis SB, 2007, FRONT ARTIF INTEL AP, V160, P3
   Lacerda G, 2020, J SYST SOFTWARE, V167, DOI 10.1016/j.jss.2020.110610
   Le H., 2022, Advances in Neural Information Processing Systems, V35, P21314
   Lim TS, 2000, MACH LEARN, V40, P203, DOI 10.1023/A:1007608224229
   Liu H, 2018, IEEE INT CONF AUTOM, P385, DOI 10.1145/3238147.3238166
   Liu H, 2021, IEEE T SOFTWARE ENG, V47, P1811, DOI 10.1109/TSE.2019.2936376
   Liu Shangqing, 2023, arXiv
   Liu X, 2023, IEEE T KNOWL DATA EN, V35, P857, DOI 10.1109/TKDE.2021.3090866
   Lu S, 2021, Arxiv, DOI arXiv:2102.04664
   Maiga A., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P466, DOI 10.1109/WCRE.2012.56
   Maiga A, 2012, IEEE INT CONF AUTOM, P278, DOI 10.1145/2351676.2351723
   Mayvan BB, 2020, J SOFTW-EVOL PROC, V32, DOI 10.1002/smr.2255
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Myung IJ, 2000, J MATH PSYCHOL, V44, P190, DOI 10.1006/jmps.1999.1283
   Nafi KW, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1026, DOI 10.1109/ASE.2019.00099
   Olbrich S. M., 2010, 2010 IEEE 26th International Conference on Software Maintenance (ICSM 2010), DOI 10.1109/ICSM.2010.5609564
   Parr T., 2013, The Definitive ANTLR 4 Reference, V1
   Ren SJ, 2021, P INT COMP SOFTW APP, P864, DOI 10.1109/COMPSAC51774.2021.00119
   Roy G. G., 1996, Proceedings. 1996 International Conference Software Engineering: Education and Practice, P256, DOI 10.1109/SEEP.1996.534008
   Sandouka R, 2023, PEERJ COMPUT SCI, V9, DOI 10.7717/peerj-cs.1370
   Sharma T, 2021, J SYST SOFTWARE, V176, DOI 10.1016/j.jss.2021.110936
   Sotto-Mayor B, 2022, ENG APPL ARTIF INTEL, V115, DOI 10.1016/j.engappai.2022.105240
   Tantithamthavorn C, 2019, IEEE T SOFTWARE ENG, V45, P683, DOI 10.1109/TSE.2018.2794977
   Tempero E, 2010, ASIA PAC SOFWR ENG, P336, DOI 10.1109/APSEC.2010.46
   Vaswani A, 2017, ADV NEUR IN, V30
   Wang HZ, 2020, IEEE INT SYMP PARAL, P448, DOI 10.1109/ISPA-BDCloud-SocialCom-SustainCom51426.2020.00082
   Wang XY, 2012, IEEE INT CONF AUTOM, P170, DOI 10.1145/2351676.2351701
   Wang Y, 2023, Arxiv, DOI arXiv:2305.07922
   Wang Y, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P8696
   Watanabe S, 2022, Arxiv, DOI arXiv:2211.14411
   White M, 2016, IEEE INT CONF AUTOM, P87, DOI 10.1145/2970276.2970326
   Xu W., 2021, P 33 INT C SOFTW ENG, P503
   Yin X, 2021, P INT COMP SOFTW APP, P942, DOI 10.1109/COMPSAC51774.2021.00127
NR 75
TC 0
Z9 0
U1 5
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAY
PY 2024
VL 29
IS 3
AR 59
DI 10.1007/s10664-024-10445-9
PG 57
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ND5A6
UT WOS:001198514200001
DA 2024-08-05
ER

PT J
AU Felici, R
   Pozzi, L
   Furia, CA
AF Felici, Riccardo
   Pozzi, Laura
   Furia, Carlo A.
TI HyperPUT: generating synthetic faulty programs to challenge bug-finding
   tools
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Program generation; Testing benchmarks; Synthetic bug injection; Testing
   frameworks; Fuzzing; Symbolic execution
ID SYMBOLIC EXECUTION
AB As research in automatically detecting bugs grows and produces new techniques, having suitable collections of programs with known bugs becomes crucial to reliably and meaningfully compare the effectiveness of these techniques. Most of the existing approaches rely on benchmarks collecting manually curated real-world bugs, or synthetic bugs seeded into real-world programs. Using real-world programs entails that extending the existing benchmarks or creating new ones remains a complex time-consuming task. In this paper, we propose a complementary approach that automatically generates programs with seeded bugs. Our technique, called HyperPUT, builds C programs from a "seed" bug by incrementally applying program transformations (introducing programming constructs such as conditionals, loops, etc.) until a program of the desired size is generated. In our experimental evaluation, we demonstrate how HyperPUT can generate buggy programs that can challenge in different ways the capabilities of modern bug-finding tools, and some of whose characteristics are comparable to those of bugs in existing benchmarks. These results suggest that HyperPUT can be a useful tool to support further research in bug-finding techniques-in particular their empirical evaluation.
C1 [Felici, Riccardo; Pozzi, Laura] Univ Svizzera Italiana USI, Comp Syst Inst, Lugano, Switzerland.
   [Furia, Carlo A.] Univ Svizzera Italiana USI, Software Inst, Lugano, Switzerland.
C3 Universita della Svizzera Italiana; Universita della Svizzera Italiana
RP Felici, R (corresponding author), Univ Svizzera Italiana USI, Comp Syst Inst, Lugano, Switzerland.
EM felicri@usi.ch
OI Pozzi, Laura/0000-0003-1083-8782
FU Swiss National Science Foundation (CH) [200020-188613]; Swiss National
   Science Foundation for the work (SNF); Swiss National Science Foundation
   (SNF) [200020_188613] Funding Source: Swiss National Science Foundation
   (SNF)
FX The authors gratefully acknowledge the financial support of the Swiss
   National Science Foundation for the work (SNF Grant Number
   200020-188613).
CR Al Kontar K, 2019, 2019 IEEE CHILEAN CONFERENCE ON ELECTRICAL, ELECTRONICS ENGINEERING, INFORMATION AND COMMUNICATION TECHNOLOGIES (CHILECON), DOI 10.1109/chilecon47746.2019.8987448
   Ammann P., 2007, INTRO SOFTWARE TESTI
   [Anonymous], 2016, Circumventing fuzzing roadblocks with compiler transformations
   [Anonymous], 2023, NASA-HDBK-2203
   [Anonymous], 2023, Cmplog instrumentation
   [Anonymous], 2023, The Undefined Behavior Sanitizer-UBSAN
   Aschermann C, 2019, 26TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2019), DOI 10.14722/ndss.2019.23371
   Babic D, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P975, DOI 10.1145/3338906.3340456
   Baldoni R, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3182657
   Bame P, 2023, McCabe cyclomatic complexity for C and Cpp
   Banerjee S, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P740, DOI 10.1145/3338906.3338919
   Bellard F, 2005, USENIX Association Proceedings of the FREENIX/Open Source Track, P41
   Beyer Dirk, 2021, Tools and Algorithms for the Construction and Analysis of Systems. 27th International Conference, TACAS 2021. Held as Part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2021. Proceedings. Lecture Notes in Computer Science (LNCS 12652), P401, DOI 10.1007/978-3-030-72013-1_24
   Blackburn SM, 2006, ACM SIGPLAN NOTICES, V41, P169, DOI 10.1145/1167515.1167488
   Bohme M., 2016, Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security. CCS'16. Vienna, P1032, DOI [DOI 10.1145/2976749.2978428, 10.1145/2976749.2978428]
   Böhme M, 2021, IEEE SOFTWARE, V38, P79, DOI 10.1109/MS.2020.3016773
   Bornholt J, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3276519
   Bowes David., 2016, Proceedings of the 25th International Symposium on Software Testing and Analysis, P330, DOI DOI 10.1145/2931037.2931039
   busybox, 2023, About us
   Cadar C., 2008, KLEE: Unassisted and Automatic Generation of High-Coverage Tests for Complex Systems Programs
   Cadar C, 2013, COMMUN ACM, V56, P82, DOI 10.1145/2408776.2408795
   Cadar C, 2008, ACM T INFORM SYST SE, V12, DOI 10.1145/1455518.1455522
   Chipounov V, 2012, ACM T COMPUT SYST, V30, DOI 10.1145/2110356.2110358
   Clarke E, 2004, LECT NOTES COMPUT SC, V2988, P168, DOI 10.1007/978-3-540-24730-2_15
   CLARKE EM, 1986, ACM T PROGR LANG SYS, V8, P244, DOI 10.1145/5397.5399
   Cook B, 2011, COMMUN ACM, V54, P88, DOI 10.1145/1941487.1941509
   DARPA CGC, 2018, About us
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Dolan-Gavitt B., 2015, P 5 PROGR PROT REV E, P1, DOI DOI 10.1145/2843859.2843867
   Dolan-Gavitt B, 2016, P IEEE S SECUR PRIV, P110, DOI 10.1109/SP.2016.15
   Even-Mendoza Karine, 2020, 2020 35th IEEE/ACM International Conference on Automated Software Engineering (ASE), P1219, DOI 10.1145/3324884.3418933
   Fioraldi A., 2020, 14 USENIX WORKSHOP O
   Fraser G, 2012, IEEE T SOFTWARE ENG, V38, P278, DOI 10.1109/TSE.2011.93
   Godefroid P, 2005, ACM SIGPLAN NOTICES, V40, P213, DOI 10.1145/1064978.1065036
   Godefroid P, 2012, COMMUN ACM, V55, P40, DOI 10.1145/2093548.2093564
   Hazimeh A, 2020, P ACM MEAS ANAL COMP, V4, DOI [10.1145/3410220.3456276, 10.1145/3428334]
   HyperPUT, 2022, github
   Just R, 2014, ISSTA 2014, P437, DOI [10.1145/2610384.2628055, DOI 10.1145/2610384.2628055]
   Kapus T, 2017, IEEE INT CONF AUTOM, P590, DOI 10.1109/ASE.2017.8115669
   Klees G, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P2123, DOI 10.1145/3243734.3243804
   Kochhar Pavneet Singh, 2014, 2014 21st Asia-Pacific Software Engineering Conference (APSEC), P215, DOI 10.1109/APSEC.2014.42
   Kusano M, 2013, IEEE INT CONF AUTOM, P722, DOI 10.1109/ASE.2013.6693142
   LAMPORT L, 1977, IEEE T SOFTWARE ENG, V3, P125, DOI 10.1109/TSE.1977.229904
   Lanza Michele., 2006, Object-Oriented Metrics in Practice, DOI DOI 10.1007/3-540-39538-5
   Lattner C, 2004, INT SYM CODE GENER, P75, DOI 10.1109/cgo.2004.1281665
   Littlefair T, 2005, C and Cpp code counter
   Lyu CY, 2019, PROCEEDINGS OF THE 28TH USENIX SECURITY SYMPOSIUM, P1949
   Malik J, 2023, EMPIR SOFTW ENG, V28, DOI 10.1007/s10664-023-10330-x
   Manès VJM, 2021, IEEE T SOFTWARE ENG, V47, P2312, DOI 10.1109/TSE.2019.2946563
   Marcozzi M, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360581
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   McKeeman William M., 1998, Digit. Tech. J., V10, P100
   Metzman J, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1393, DOI 10.1145/3468264.3473932
   Nethercote N, 2004, Dynamic binary analysis and instrumentation: or building tools is easy
   Papadakis M, 2015, SOFTW TEST VERIF REL, V25, P605, DOI 10.1002/stvr.1509
   Papadakis M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P936, DOI 10.1109/ICSE.2015.103
   Payer M, 2019, IEEE SECUR PRIV, V17, P78, DOI 10.1109/MSEC.2018.2889892
   Peng H, 2018, P IEEE S SECUR PRIV, P697, DOI 10.1109/SP.2018.00056
   Pezze Mauro, 2007, Software Testing and Analysis: Process, Principles and Techniques
   Roy S, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P224, DOI 10.1145/3236024.3236084
   Schuler D, 2013, SOFTW TEST VERIF REL, V23, P353, DOI 10.1002/stvr.1473
   Shoshitaishvili Y, 2016, P IEEE S SECUR PRIV, P138, DOI 10.1109/SP.2016.17
   Stallman R.M., 2023, GCC DEVELOPER COMMUN
   Stephens N, 2016, 23RD ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2016), DOI 10.14722/ndss.2016.23368
   Tanenbaum AS, 2010, Login Usenix Mag, V35
   Yang XJ, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P283
   Yao XJ, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P919, DOI 10.1145/2568225.2568265
   Younan Y, 2012, ACM COMPUT SURV, V44, DOI 10.1145/2187671.2187679
   Zalewski M, 2016, American fuzzing lop (AFL)
NR 70
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2024
VL 29
IS 2
AR 38
DI 10.1007/s10664-023-10430-8
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EW9X4
UT WOS:001142099000001
PM 38235121
OA hybrid, Green Submitted
DA 2024-08-05
ER

PT J
AU Xiang, DM
   Lin, YC
   Nie, LM
   Zheng, YW
   Xu, ZZ
   Ding, ZH
   Liu, Y
AF Xiang, Dongming
   Lin, Yuanchang
   Nie, Liming
   Zheng, Yaowen
   Xu, Zhengzi
   Ding, Zuohua
   Liu, Yang
TI An empirical study of attack-related events in DeFi projects development
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Attack; Security; DeFi; Development process events
AB Decentralized Finance (DeFi) offers users decentralized financial services that are associated with the security of their assets. If DeFi is attacked, it could lead to considerable losses. Unfortunately, there is a lack of research on how DeFi developers respond to attacks during the development process. This lack of knowledge makes it difficult to identify which attacks to protect against and to create a comprehensive attack response system. This paper presents an empirical study to understand the current state of developers' response to attacks during the development process. In addition, we conduct an analytical framework to help developers take preventive measures against attacks. Our research has revealed that Overflow Attack-related events are the most frequent (63, 19.75% of all attack-related events), and high-value DeFi projects tend to have more feedback and active development activities. We have observed that most of the attack instances (61, 85.92%) do not have corresponding attack-related development events, which can lead to a lack of trust between project teams and users if it is unclear whether the team responds to attacks. Furthermore, we have noticed that after the resolution of the same attack-related event, some attacks may recur, even though they could have been prevented. Consequently, we suggest some future research directions and provide some advice for DeFi project developers.
C1 [Xiang, Dongming; Lin, Yuanchang; Ding, Zuohua; Liu, Yang] Zhejiang Sci Tech Univ, Hangzhou, Peoples R China.
   [Nie, Liming] Shenzhen Technol Univ, Shenzhen, Peoples R China.
   [Zheng, Yaowen; Xu, Zhengzi; Liu, Yang] Nanyang Technol Univ, Singapore City, Singapore.
C3 Zhejiang Sci-Tech University; Shenzhen Technology University; Nanyang
   Technological University
RP Nie, LM (corresponding author), Shenzhen Technol Univ, Shenzhen, Peoples R China.
EM dmxiang@zstu.edu.cn; linyuanc.zstu@gmail.com; nieliming@sztu.edu.cn;
   yaowen.zheng@ntu.edu.sg; zhengzi.xu@ntu.edu.sg; zuohuading@zstu.edu.cn;
   yangliu@ntu.edu.sg
FU National Natural Science Foundation of China [61972359, 62002328,
   62132014]; Natural Science Foundation of China [2022C01045]; Zhejiang
   Provincial Key Research and Development Program of China
FX This research is supported by the Natural Science Foundation of China
   under Grant Nos. 61972359, 62002328, 62132014, and in part by Zhejiang
   Provincial Key Research and Development Program of China No.2022C01045.
CR ABertoG MEA, 2019, Aave protocol
   Ahmadjee S, 2021, 2021 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT 2021), P6, DOI [10.1109/TechDebt52882.2021.00010, 10.1109/SMART52563.2021.9676239]
   Alireza Kirill AEA, 2019, Tornado.cash
   Alzoubi YI, 2022, FUTURE INTERNET, V14, DOI 10.3390/fi14070216
   [Anonymous], 2020, MaartenGr shengbo-ma mea
   Berg JA, 2022, Arxiv, DOI arXiv:2203.07774
   Barbereau T, 2022, Defi, not so decentralized: the measured distribution of voting rights
   Carapella F, 2022, Decentralized finance (defi): transformative potential & associated risks
   Carter N., 2021, SSRNAugust 6
   Chen JC, 2022, IEEE T SOFTWARE ENG, V48, P327, DOI 10.1109/TSE.2020.2989002
   DeFiLlama, 2022, Defillama
   Ellis Steve, 2017, Chainlink a decentralized oracle network
   Ethereum, 2023, Decentralized finance (defi)
   Gao JB, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P23, DOI 10.1109/ICSE-Companion.2019.00029
   Han J, 2021, Trust in defi: an empirical study of the decentralized exchange
   He DJ, 2023, IEEE INTERNET THINGS, V10, P12178, DOI 10.1109/JIOT.2023.3241544
   Hu LH, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10017-1
   Hu XW, 2021, COMPUT SECUR, V108, DOI 10.1016/j.cose.2021.102343
   Ivanov N, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3593293
   Jensen Johannes Rude, 2021, Complex Systems Informatics and Modeling Quarterly, V26, P46
   jflatow hayesgm mea, 2019, Compound finance
   Kaur G, 2023, Understanding Cybersecurity Management in Decentralized Finance: Challenges, Strategies, and Trends, ppp91
   Khan MQ, 2022, PEERJ COMPUT SCI, V8, DOI 10.7717/peerj-cs.967
   Kitchenham B. e. a., 2007, Technical report EBSE-2007-01, DOI DOI 10.1145/1134285.1134500
   Krupa T, 2021, PROC CONF OPEN INNOV, P208, DOI 10.23919/FRUCT50888.2021.9347617
   Li WK, 2022, Arxiv, DOI arXiv:2206.11821
   Li X, 2022, arXiv
   Lin Yuanchang, 2023, ScienceDB, DOI 10.57760/sciencedb.07518
   Liu BW, 2021, 2021 THIRD IEEE INTERNATIONAL CONFERENCE ON DECENTRALIZED APPLICATIONS AND INFRASTRUCTURES (DAPPS 2021), DOI 10.1109/DAPPS52256.2021.00010
   Vivar AL, 2021, COMPUT COMMUN, V172, P119, DOI 10.1016/j.comcom.2021.03.008
   Maouchi Y, 2022, FINANC RES LETT, V47, DOI 10.1016/j.frl.2021.102584
   McKinlay J, 2010, CHANDOS INF PROF SER, P1, DOI 10.1533/9781780630243
   Meegan X, 2021, Lessons learned from decentralised finance (defi)
   Meister BK, 2022, Arxiv, DOI arXiv:2202.10265
   MetaTrustLabs, 2023, Metascore
   Metelski D, 2022, Valuations of decentralised finance (defi) protocols: a panel data study investigating defi's key performance indicators
   Nath K., 2022, Evolution of the Internet from Web 1.0 to Metaverse: the Good, the Bad and the Ugly
   Oliva GA, 2020, EMPIR SOFTW ENG, V25, P1864, DOI 10.1007/s10664-019-09796-5
   Pal O, 2021, ICT EXPRESS, V7, P76, DOI 10.1016/j.icte.2019.08.002
   PANews, 2022, Edg finance attacked incident
   PeckShield, 2018, Peckshield
   Qin KH, 2021, PROCEEDINGS OF THE 2021 ACM INTERNET MEASUREMENT CONFERENCE, IMC 2021, P336, DOI 10.1145/3487552.3487811
   Qin Kaihua, 2021, CeFi vs. DeFi -- Comparing Centralized to Decentralized Finance
   QuillAudits, 2022, Stader nearx attacked incident
   Raikwar M, 2022, LECT NOTES COMPUT SC, V13098, P230, DOI 10.1007/978-3-031-06156-1_19
   Said Kabir S., 2020, Internetware'20: 12th Asia-Pacific Symposium on Internetware, P51, DOI 10.1145/3457913.3457931
   Samreen NF, 2021, Arxiv, DOI [arXiv:2105.06974, DOI 10.48550/ARXIV.2105.06974]
   SCORECHAIN, 2022, curve finance attacked incident
   Sifra EM, 2022, 2022 IEEE INTERNATIONAL CONFERENCE ON BLOCKCHAIN (BLOCKCHAIN 2022), P512, DOI 10.1109/Blockchain55522.2022.00080
   SlowMist, 2018, Slow mist
   Solidity, 2023, Solidity considerations
   Tianyi Wu, 2020, Internetware'20: 12th Asia-Pacific Symposium on Internetware., P81, DOI 10.1145/3457913.3457923
   Tolmach P, 2021, LECT NOTES COMPUT SC, V12676, P149, DOI 10.1007/978-3-662-63958-0_13
   Torres CF, 2018, 34TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2018), P664, DOI 10.1145/3274694.3274737
   Treleaven P, 2022, Web 3.0 tokenization and decentralized finance (defi)
   Wan ZY, 2021, PROC INT CONF SOFTW, P1410, DOI 10.1109/ICSE43902.2021.00127
   Wang Dabao, 2020, arXiv
   Wang H, 2019, COMM COM INF SC, V970, P55, DOI 10.1007/978-981-13-6621-5_5
   Wang Y, 2023, J Syst Softw
   Wen YJ, 2021, COMPUT NETW, V191, DOI 10.1016/j.comnet.2021.107978
   Werner S.M., 2021, arXiv
   Wu SW, 2021, Arxiv, DOI arXiv:2104.15068
   Xu TA, 2023, Arxiv, DOI [arXiv:2202.07742, 10.48550/arXiv.2202.07742, DOI 10.48550/ARXIV.2202.07742]
   Yaga D.J., 2018, NIST Interagency/Internal Report, V8202, P1, DOI DOI 10.6028/NIST.IR.8202
   [袁勇 Yuan Yong], 2016, [自动化学报, Acta Automatica Sinica], V42, P481
   Zhang HQ, 2022, IEEE INT CON DIS, P90, DOI 10.1109/ICDCSW56584.2022.00026
   Zhao YJ, 2022, Arxiv, DOI [arXiv:2201.02358, DOI 10.48550/ARXIV.2201.02358]
   Zheng ZB, 2018, INT J WEB GRID SERV, V14, P352, DOI 10.1504/IJWGS.2018.095647
   Zhou LY, 2023, P IEEE S SECUR PRIV, P2444, DOI 10.1109/SP46215.2023.10179435
NR 69
TC 1
Z9 1
U1 1
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2024
VL 29
IS 2
AR 49
DI 10.1007/s10664-024-10447-7
PG 40
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IU6T1
UT WOS:001168896500001
DA 2024-08-05
ER

PT J
AU Putta, A
   Paasivaara, M
   Lassenius, C
AF Putta, Abheeshta
   Paasivaara, Maria
   Lassenius, Casper
TI SAFe transformation in a large financial corporation
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Scaled agile framework; SAFe; Reasons for SAFe adoption; SAFe
   transformation activities; Benefits of SAFe adoption; Challenges of SAFe
   adoption
ID SOFTWARE-DEVELOPMENT; AGILE; CHALLENGES
AB As agile software development is increasingly adopted in the software industry, the popularity of scaling frameworks supporting adoption in large development contexts is increasing rapidly. While several such frameworks exist, the most popular one at the moment is the Scaled Agile Framework (SAFe). Despite its popularity, there exists limited research on its usage and adoption. In this paper, we contribute by presenting a single case study in a large financial organization, studying the transformation reasons, transformation process, as well as the benefits, and challenges of SAFe adoption. We conducted 24 semi-structured interviews with 27 interviewees and analyzed the transcribed interviews using open and axial coding. We identified 17 reasons for SAFe adoption in this organization, of which the most salient ones were to shorten the time to market, improve collaboration, and use a well-described and comprehensive framework. An industry context-specific reason was the popularity of SAFe in the financial sector. The transformation in the case organization was top-down and proceeded step-wise. The most significant activities during the transformation were piloting, education, coaching, and the forming of agile release trains. Our case also implemented "Scrum tours" to increase the understanding of lean and agile principles. We identified 13 benefits of SAFe, of which improved collaboration, transparency, and shorter time to market were considered the most important. We identified a total of 16 challenges, with the most salient one being aligning the release trains with value streams. Failing with this led to cross-release train dependencies and coordination overhead, inhibiting agility. Further, the organization did not get rid of projects and project managers, which led to priority clashes and coordination overhead.
C1 [Putta, Abheeshta; Paasivaara, Maria; Lassenius, Casper] Aalto Univ, Espoo, Finland.
   [Paasivaara, Maria] LUT Univ, Lahti, Finland.
   [Lassenius, Casper] Simula Metropolitan Ctr Digital Engn, Oslo, Norway.
C3 Aalto University
RP Putta, A (corresponding author), Aalto Univ, Espoo, Finland.
EM abheeshta.putta@aalto.fi
RI Lassenius, Casper C/A-4339-2013
FU Aalto University
FX No Statement Available
CR Ambler S.W., 2012, Disciplined agile delivery
   [Anonymous], 2017, Managing Successful Projects with PRINCE2
   Beecham S, 2021, J SYST SOFTWARE, V171, DOI 10.1016/j.jss.2020.110823
   Ciancarini P, 2022, 2022 ACM/IEEE 44TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2022), P175, DOI [10.1145/3510457.3513028, 10.1109/ICSE-SEIP55303.2022.9794087]
   Conboy K, 2019, IEEE SOFTWARE, V36, P44, DOI 10.1109/MS.2018.2884865
   Corbin J., 2015, BASICS QUALITATIVE R
   Cram WA, 2019, INFORM SYST MANAGE, V36, P2, DOI 10.1080/10580530.2018.1553645
   Crudup RF, 2018, SEI Case Study
   Dikert K, 2016, J SYST SOFTWARE, V119, P87, DOI 10.1016/j.jss.2016.06.013
   Dingsoyr Torgeir, 2013, Software Engineering Notes, V38, P33, DOI 10.1145/2507288.2507322
   Dingsoyr T, 2014, LECT NOTES COMPUT SC, V8892, P273, DOI 10.1007/978-3-319-13835-0_20
   Dingsoyr T, 2018, Arxiv, DOI arXiv:1812.10280
   EdgeVerve Systems Limited, 2018, Edge verve case study
   Edison H, 2021, IEEE Trans Softw Eng
   Erickson J, 2005, J DATABASE MANAGE, V16, P88, DOI 10.4018/jdm.2005100105
   Foo D., 2020, Proceedings of the IEEE/ACM 42nd International Conference on Software Engineering Workshops, P504, DOI DOI 10.1145/3387940.3391536
   Gustavsson Tomas, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P306, DOI 10.1145/3383219.3383253
   Gustavsson T., 2018, P 17 BUS INF RES SHO, P421
   Gustavsson T, 2019, P 27 EUR C INF SYST
   Gustavsson T, 2019, LECT NOTES BUS INF P, V364, P105, DOI 10.1007/978-3-030-30126-2_13
   Herbai P, 2018, Elekta case study
   Holdorf C, 2018, John Deere case study
   JICK TD, 1979, ADMIN SCI QUART, V24, P602, DOI 10.2307/2392366
   Karvonen T, 2018, LECT NOTES BUS INF P, V314, P131, DOI 10.1007/978-3-319-91602-6_9
   Kettunen P, 2020, INT C SOFTW BUS
   Klünder J, 2018, PROCEEDINGS OF THE 2018 INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESS (ICSSP 2018), P1, DOI 10.1145/3202710.3203146
   Kniberg H., 2012, Scaling Agile @ Spotify with Tribes, Squads, Chapters and Guilds
   Korosec R, 2015, IEEE ICST WORKSHOP
   Kowalczyk M, 2022, J SOFTW-EVOL PROC, V34, DOI 10.1002/smr.2455
   Kuhrmann M, 2017, ICSSP'17: PROCEEDINGS OF THE 2017 INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESS, P30, DOI 10.1145/3084100.3084104
   Laanti M, 2019, LECT NOTES BUS INF P, V364, P81, DOI 10.1007/978-3-030-30126-2_10
   Levaslot M, 2016, Pole emploi case study
   Maximini D, 2018, The scrum culture, P121
   McMunn D, 2017, INT C AG SOFTW DEV
   Media Aust post, 2017, Case study australian post
   Moe NB, 2017, P XP2017 SCI WORKSH, P14
   Moe NB, 2016, PROCEEDINGS OF THE XP2016 SCIENTIFIC WORKSHOPS, DOI 10.1145/2962695.2962696
   Mucambe B, 2019, P 33 INT BUS INF MAN
   Neil C, 2018, INT C AG SOFTW DEV A
   Oren I, 2017, INT C AG SOFTW DEV A
   Paasivaara M, 2017, INT CONF GLOBAL SOFT, P36, DOI 10.1109/ICGSE.2017.15
   Paasivaara M, 2014, INFORM SOFTWARE TECH, V56, P1556, DOI 10.1016/j.infsof.2014.06.008
   Patton M.Q., 2022, Qualitative research and evaluation methods
   Petersen K, 2010, EMPIR SOFTW ENG, V15, P654, DOI 10.1007/s10664-010-9136-6
   Pries-Heje J., 2017, Proceedings of the XP2017 Scientific Workshops on - XP'17, P1, DOI DOI 10.1145/3120459.3120478
   Putta A, 2021, P 15 ACM IEEE INT S, P1
   Putta A, 2021, LECT NOTES BUS INF P, V419, P172, DOI 10.1007/978-3-030-78098-2_11
   Putta A, 2018, LECT NOTES COMPUT SC, V11271, P334, DOI 10.1007/978-3-030-03673-7_24
   Putta A, 2019, LECT NOTES BUS INF P, V355, P154, DOI 10.1007/978-3-030-19034-7_10
   QSR International, 2011, Coding tool for qualtitaive analysis
   Rally software, 2015, Travis Perkins case study
   Razzak Mohammad Abdur, 2018, 2018 IEEE/ACM 13th International Conference on Global Software Engineering (ICGSE), P116, DOI 10.1145/3196369.3196373
   Razzak MA, 2017, LECT NOTES COMPUT SC, V10611, P573, DOI 10.1007/978-3-319-69926-4_47
   Remta D, 2020, LECT NOTES BUS INF P, V396, P92, DOI 10.1007/978-3-030-58858-8_10
   Safonova I, 2023, P 17 ACM IEEE INT S, P1
   Scaled Agile Inc, 2016, Amdocs case study
   Scaled Agile Inc, 2017, Vantiv case study
   Scaled Agile Inc, 2017, Standard bank case study
   Scaled Agile Inc, 2017, Thales case study
   Scaled Agile Inc, 2018, CSG case study
   Scaled Agile Inc, 2016, AstraZeneca case study
   Scaled Agile Inc, 2018, Program increment plannings (PI's)
   Scaled Agile Inc, 2017, Capital one case study
   Scaled Agile Inc, 2018, KLM air France case study
   Scaled Agile Inc, 2018, Intel case study
   Scaled Agile Inc, 2016, Royal Philips case study
   Scaled Agile Inc, 2016, Westpac case study
   Scaled agile Inc, 2022, Large solution Level:SAFe
   Scaled Agile Inc, 2018, SAFe metrics
   Scaled Agile Inc, 2023, Implementation roadmap
   Scaled Agile Inc, 2018, SAFe home page
   Schongot J, 2018, ANN FOR P AHS INT, V2018
   Sebola L., 2022, J Modern Proj Manag, V10, P30
   Sekitoleko N., 2014, Agile processes in software engineering and extreme programming, P46, DOI DOI 10.1007/978-3-319-06862-6_4
   Shadish W., 2002, EXPT QUASIEXPERIMENT, V1195
   Solinski A, 2016, SOFTWARE QUAL J, V24, P447, DOI 10.1007/s11219-014-9253-3
   Sreenivasan S., 2019, Global Business Organizational Excellence, V38, P42, DOI DOI 10.1002/JOE.21966
   Tengstrand SN, 2021, LECT NOTES BUS INF P, V419, P157, DOI 10.1007/978-3-030-78098-2_10
   The LeSS Company BV, 2016, Large scale scrum
   Trienekens J., 2018, 20th international conference on enterprise information systems, V2, P104
   Turetken O, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1796
   Uludag Ö, 2022, J SYST SOFTWARE, V194, DOI 10.1016/j.jss.2022.111473
   Uludag Ö, 2021, LECT NOTES BUS INF P, V419, P123, DOI 10.1007/978-3-030-78098-2_8
   Version One, 2019, 15th state of agile survey
   Version One, 2019, State of agile survey
   Vijayasarathy L., 2008, Journal of Information Technology Management, V19, P1
   Yin R.K., 2009, The Sage handbook of applied social research methods, P254
NR 87
TC 0
Z9 0
U1 6
U2 9
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2024
VL 29
IS 1
AR 27
DI 10.1007/s10664-023-10420-w
PG 45
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CF6G7
UT WOS:001123869300001
OA hybrid
DA 2024-08-05
ER

PT J
AU Rahman, A
   Bose, DB
   Zhang, Y
   Pandita, R
AF Rahman, Akond
   Bose, Dibyendu Brinto
   Zhang, Yue
   Pandita, Rahul
TI An empirical study of task infections in Ansible scripts
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Ansible; Configuration script; Devops; Devsecops; Empirical study;
   Infrastructure as code; Security
ID INFRASTRUCTURE; AGREEMENT
AB ContextDespite being beneficial for managing computing infrastructure at scale, Ansible scripts include security weaknesses, such as hard-coded passwords. Security weaknesses can propagate into tasks, i.e., code constructs used for managing computing infrastructure with Ansible. Propagation of security weaknesses into tasks makes the provisioned infrastructure susceptible to security attacks. A systematic characterization of task infection, i.e., the propagation of security weaknesses into tasks, can aid practitioners and researchers in understanding how security weaknesses propagate into tasks and derive insights for practitioners to develop Ansible scripts securely.ObjectiveThe goal of the paper is to help practitioners and researchers understand how Ansible-managed computing infrastructure is impacted by security weaknesses by conducting an empirical study of task infections in Ansible scripts.MethodWe conduct an empirical study where we quantify the frequency of task infections in Ansible scripts. Upon detection of task infections, we apply qualitative analysis to determine task infection categories. We also conduct a survey with 23 practitioners to determine the prevalence and severity of identified task infection categories. With logistic regression analysis, we identify development factors that correlate with presence of task infections.ResultsIn all, we identify 1,805 task infections in 27,213 scripts. We identify six task infection categories: anti-virus, continuous integration, data storage, message broker, networking, and virtualization. From our survey, we observe tasks used to manage data storage infrastructure perceived to have the most severe consequences. We also find three development factors, namely age, minor contributors, and scatteredness to correlate with the presence of task infections.ConclusionOur empirical study shows computing infrastructure managed by Ansible scripts to be impacted by security weaknesses. We conclude the paper by discussing the implications of our findings for practitioners and researchers.
C1 [Rahman, Akond; Zhang, Yue] Auburn Univ, Auburn, AL 36849 USA.
   [Bose, Dibyendu Brinto] Virginia Tech, Blacksburg, VA USA.
   [Pandita, Rahul] GitHub, San Francisco, CA USA.
C3 Auburn University System; Auburn University; Virginia Polytechnic
   Institute & State University
RP Rahman, A (corresponding author), Auburn Univ, Auburn, AL 36849 USA.
EM akond.rahman.buet@gmail.com; brintodibyendu@vt.edu; yzz0229@auburn.edu;
   rahulpandita@github.com
OI Rahman, Akond/0000-0002-5056-757X
FU National Science Foundation [2247141, 2310179, 2312321]; U.S. National
   Science Foundation (NSF) Award [H98230-21-1-0175]; U.S. National
   Security Agency (NSA) Award
FX We thank the PASER group at Auburn University for their valuable
   feedback. This research was partially funded by the U.S. National
   Science Foundation (NSF) Award # 2247141, Award # 2310179, Award #
   2312321, and the U.S. National Security Agency (NSA) Award #
   H98230-21-1-0175.
CR Agrawal A, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P245, DOI 10.1145/3183519.3183549
   Aho Alfred V, 1986, Addison wesley, V7, P9
   [Anonymous], 2007, Educause Learning Initiative: Advancing Learning Through IT Innovation
   Ansible, 2022, Ansible best practices
   Ansible, 2020, Ansible Documentation
   Banavar G, 1999, LECT NOTES COMPUT SC, V1693, P1
   Bird C, 2011, P 19 ACM SIGSOFT S 1, P4, DOI DOI 10.1145/2025113.2025119
   Borovits N, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10215-5
   Brikman Yevgeniy., 2016, Why we use Terraform and not Chef, Puppet, Ansible, Saltstack, or cloudformation
   Carver JC, 2010, P 1 INT WORKSH REPL, P1
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Cohen J., 2013, APPL MULTIPLE REGRES
   Cozens B, 2022, 10 habits of great ansible users
   Cramer D., 2004, The Sage dictionary of statistics: a practical resource for students in the social sciences, DOI [DOI 10.4135/9780857020123, 10.4135/9780857020123]
   da Silva FQB, 2014, EMPIR SOFTW ENG, V19, P501, DOI 10.1007/s10664-012-9227-7
   Dalla Palma S, 2022, IEEE T SOFTWARE ENG, V48, P2086, DOI 10.1109/TSE.2021.3051492
   Dalla Palma S, 2020, J SYST SOFTWARE, V170, DOI 10.1016/j.jss.2020.110726
   Davis V, 2019, Ansible role patterns and anti-patterns by lee garrett, its debian maintainer
   Droms R, 1999, IEEE INTERNET COMPUT, V3, P45, DOI 10.1109/4236.780960
   Duvall PM, 2007, Continuous integration: improving software quality and reducing risk
   Easterbrook S., 2008, Guide to Advanced Empirical Software Eng, P285, DOI [10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-5_11]
   Greenwood P. E., 1996, A guide to chi-squared testing, V280
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Hortlund A, 2021, Security smells in open-source infrastructure as code scripts: A replication study
   Hosmer DW., 2013, Applied logistic regression, DOI DOI 10.1002/9781118548387
   Hu HY, 2023, 2023 IEEE SECURE DEVELOPMENT CONFERENCE, SECDEV, P7, DOI 10.1109/SecDev56634.2023.00014
   Humble Jez, 2010, Continuous Delivery: Reliable software releases through Build, Test and Deployment Automation
   jenkins, 2022, Jenkins
   Kitchenham B. A., 2008, Guide to Advanced Empirical Software Engineering, P63, DOI DOI 10.1007/978-1-84800-044-5_3
   Kokuryo S, 2020, 2020 IEEE 20TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY, AND SECURITY (QRS 2020), P442, DOI 10.1109/QRS51102.2020.00063
   Krein JL, 2010, A case for replication: synthesizing research methodologies in software engineering
   Krishna R, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P306, DOI 10.1145/3183519.3183548
   Labs P, 2021, Puppet Documentation
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Long J.S., 2006, REGRESSION MODELS CA
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Meli M, 2019, 26TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2019), DOI 10.14722/ndss.2019.23418
   Menard S., 2002, Applied logistic regression analysis, DOI DOI 10.4135/9781412983433
   Miller M, 2019, Hardcoded and Embedded Credentials are an IT Security Hazard-Here's What You Need to Know
   MohammadMehedi H, 2022, 2022 15 IEEE C SOFTW
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Opdebeeck R., 2023, 2023 IEEEACM 19 INT
   Opdebeeck R, 2022, IEEE WORK CONF MIN S, P61, DOI 10.1145/3524842.3527964
   Radjenovic D, 2013, INFORM SOFTWARE TECH, V55, P1397, DOI 10.1016/j.infsof.2013.02.009
   Rahman A, 2022, Can we use authentic learning to educate students about secure infrastructure as code development?
   Rahman A, 2023, Verifiability package for paper
   Rahman A, 2023, IEEE T SOFTWARE ENG, V49, P3536, DOI 10.1109/TSE.2023.3265962
   Rahman A, 2021, 2021 IEEE SECURE DEVELOPMENT CONFERENCE (SECDEV 2021), P56, DOI 10.1109/SecDev51306.2021.00024
   Rahman A, 2021, IEEE SECUR PRIV, V19, P33, DOI 10.1109/MSEC.2021.3065190
   Rahman A, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3408897
   Rahman A, 2020, PROC INT CONF SOFTW, P752, DOI 10.1145/3377811.3380409
   Rahman A, 2020, EMPIR SOFTW ENG, V25, P3430, DOI 10.1007/s10664-020-09841-8
   Rahman A, 2019, PROC INT CONF SOFTW, P164, DOI 10.1109/ICSE.2019.00033
   Rahman A, 2019, INFORM SOFTWARE TECH, V112, P148, DOI 10.1016/j.infsof.2019.04.013
   Rahman A, 2018, PROCEEDINGS OF THE 4TH ACM SIGSOFT INTERNATIONAL WORKSHOP ON SOFTWARE ANALYTICS (SWAN'18), P8, DOI 10.1145/3278142.3278149
   Rahman A, 2019, INFORM SOFTWARE TECH, V108, P65, DOI 10.1016/j.infsof.2018.12.004
   Rahman F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P432, DOI 10.1109/ICSE.2013.6606589
   RedHat, Customer Case Study-NetApp
   RedHat, 2022, Customer Case Study-NEC
   redhat performance, 2022, redhat-performance/satperf
   Reis S, 2022, IEEE INT CONF AUTOM, DOI 10.1145/3551349.3560419
   Ryan J, 2022, Ansible automation platform: private automation hub
   Saavedra N, 2022, IEEE INT CONF AUTOM, DOI 10.1145/3551349.3556945
   Saldana J, 2013, The coding manual for qualitative researchers, DOI DOI 10.1017/CBO9781107415324.004
   Schwarz J, 2019, Hardcoded and Embedded Credentials are an IT Security Hazard -Here's What You Need to Know
   Shull FJ, 2008, EMPIR SOFTW ENG, V13, P211, DOI 10.1007/s10664-008-9060-1
   Smith E, 2013, 2013 6TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P89, DOI 10.1109/CHASE.2013.6614738
   Smith J, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P248, DOI 10.1145/2786805.2786812
   Tan P-N, 2005, INTRO DATA MINING
   Vaughn BK, 2008, J EDUC MEAS, V45, P94, DOI 10.1111/j.1745-3984.2007.00053_2.x
NR 70
TC 0
Z9 0
U1 7
U2 7
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2024
VL 29
IS 1
AR 34
DI 10.1007/s10664-023-10432-6
PG 44
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DK3Z6
UT WOS:001131907200002
DA 2024-08-05
ER

PT J
AU Morovati, MM
   Tambon, F
   Taraghi, M
   Nikanjam, A
   Khomh, F
AF Morovati, Mohammad Mehdi
   Tambon, Florian
   Taraghi, Mina
   Nikanjam, Amin
   Khomh, Foutse
TI Common challenges of deep reinforcement learning applications
   development: an empirical study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Deep reinforcement learning; Machine learning; Deep learning; Stack
   overflow; Programming issues; Software reliability; Empirical study
ID SYSTEMS
AB Machine Learning (ML) is increasingly being adopted in different industries. Deep Reinforcement Learning (DRL) is a subdomain of ML used to produce intelligent agents. Despite recent developments in DRL technology, the main challenges that developers face in the development of DRL applications are still unknown. To fill this gap, in this paper, we conduct a large-scale empirical study of 927 DRL-related posts extracted from Stack Overflow, the most popular Q &A platform in the software community. Through the process of labeling and categorizing extracted posts, we created a taxonomy of common challenges encountered in the development of DRL applications, along with their corresponding popularity levels. This taxonomy has been validated through a survey involving 65 DRL developers. Results show that at least 45%\documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document}$$45\%$$\end{document} of developers experienced 18 of the 21 challenges identified in the taxonomy. The most frequent source of difficulty during the development of DRL applications are Comprehension, API usage, and Design problems, while Parallel processing, and DRL libraries/frameworks are classified as the most difficult challenges to address, with respect to the time required to receive an accepted answer. We hope that the research community will leverage this taxonomy to develop efficient strategies to address the identified challenges and improve the quality of DRL applications
C1 [Morovati, Mohammad Mehdi; Tambon, Florian; Taraghi, Mina; Nikanjam, Amin; Khomh, Foutse] Polytech Montreal, Dept Comp & Software Engn, SWAT Lab, 2500 Chem Polytech, Montreal, PQ H3T 1J4, Canada.
C3 Universite de Montreal; Polytechnique Montreal
RP Morovati, MM (corresponding author), Polytech Montreal, Dept Comp & Software Engn, SWAT Lab, 2500 Chem Polytech, Montreal, PQ H3T 1J4, Canada.
EM mehdi.morovati@polymtl.ca; florian-2.tambon@polymtl.ca;
   mina.taraghi@polymtl.ca; amin.nikanjam@polymtl.ca;
   foutse.khomh@polymtl.ca
FU Fonds de Recherche du Quebec (FRQ); Canadian Institute for Advanced
   Research (CIFAR); DEEL project - National Science and Engineering
   Research Council of Canada (NSERC) [CRDPJ 537462-18]; Consortium for
   Research and Innovation in Aerospace in Quebec (CRIAQ); Thales Canada
   inc; Bell Textron Canada Limited; CAE inc; Bombardier inc.
FX This work was supported by: Fonds de Recherche du Quebec (FRQ), the
   Canadian Institute for Advanced Research (CIFAR) as well as the DEEL
   project CRDPJ 537462-18 funded by the National Science and Engineering
   Research Council of Canada (NSERC) and the Consortium for Research and
   Innovation in Aerospace in Quebec (CRIAQ), together with its industrial
   partners Thales Canada inc, Bell Textron Canada Limited, CAE inc and
   Bombardier inc.
CR Aldhaen M., 2020, Int J Educ, Learn Develop, V8, P21
   Alshangiti Moayad, 2019, INT SYMP EMP SOFTWAR, P117, DOI DOI 10.1109/esem.2019.8870187
   Aradi S, 2022, IEEE T INTELL TRANSP, V23, P740, DOI 10.1109/TITS.2020.3024655
   Arpteg A, 2018, EUROMICRO CONF PROC, P50, DOI 10.1109/SEAA.2018.00018
   Arulkumaran K, 2017, IEEE SIGNAL PROC MAG, V34, P26, DOI 10.1109/MSP.2017.2743240
   Ayman A, 2020, Arxiv, DOI arXiv:1905.08833
   Bagherzadeh M, 2022, IEEE T SOFTWARE ENG, V48, P2836, DOI 10.1109/TSE.2021.3070549
   Bangash Abdul Ali, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P260, DOI 10.1109/MSR.2019.00052
   Beyer S, 2020, EMPIR SOFTW ENG, V25, P2258, DOI 10.1007/s10664-019-09758-x
   Brockman G, 2016, Arxiv, DOI [arXiv:1606.01540, DOI 10.48550/ARXIV.1606.01540]
   Bruer JJ, 2015, IEEE J-STSP, V9, P612, DOI 10.1109/JSTSP.2015.2400412
   Cao YL, 2023, IEEE T SOFTWARE ENG, V49, P1741, DOI 10.1109/TSE.2022.3191353
   Chen ZP, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P750, DOI 10.1145/3368089.3409759
   de Souza Nascimento Elizamary, 2019, INT SYMP EMP SOFTWAR, P1, DOI DOI 10.1109/esem.2019.8870157
   Decan A, 2019, EMPIR SOFTW ENG, V24, P381, DOI 10.1007/s10664-017-9589-y
   DeCarlo M, 2018, SCI INQUIRY SOCIAL W
   Du W, 2021, ARTIF INTELL REV, V54, P3215, DOI 10.1007/s10462-020-09938-y
   Dulac-Arnold G, 2021, MACH LEARN, V110, P2419, DOI 10.1007/s10994-021-05961-4
   Frost J., 2020, Regression analysis: An intuitive guide for using and interpreting linear models
   Garg D, 2019, COMM COM INF SC, V955, P160, DOI 10.1007/978-981-13-3140-4_15
   Gibbons JD, 1993, Nonparametric measures of association, V91
   GoogleSheet, 2020, Google: How to use google sheets
   Hamidi A, 2021, IEEE INT WORK C SO, P58, DOI 10.1109/SCAM52516.2021.00016
   Han JX, 2020, PROC IEEE INT CONF S, P868, DOI 10.1109/ICSME46990.2020.00116
   Haque MU, 2020, P 14 ACM IEEE INT S, P1
   He JD, 2024, Arxiv, DOI arXiv:2303.06853
   Heo K, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P380, DOI 10.1145/3243734.3243838
   Hoan AN, 2010, ACM SIGPLAN NOTICES, V45, P302, DOI 10.1145/1932682.1869486
   Hove SE, 2005, 2005 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS (METRICS), P201
   Huang KF, 2023, Arxiv, DOI arXiv:2207.10347
   Humbatova N, 2020, PROC INT CONF SOFTW, P1110, DOI 10.1145/3377811.3380395
   Islam MJ, 2020, PROC INT CONF SOFTW, P1135, DOI 10.1145/3377811.3380378
   Islam MJ, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P510, DOI 10.1145/3338906.3338955
   Jelodar H, 2019, MULTIMED TOOLS APPL, V78, P15169, DOI 10.1007/s11042-018-6894-4
   Kiran BR, 2022, IEEE T INTELL TRANSP, V23, P4909, DOI 10.1109/TITS.2021.3054625
   Kuhnle A, 2017, TENSORFORCE TENSORFL
   Li YX, 2018, Arxiv, DOI arXiv:1701.07274
   Liang E, 2018, PR MACH LEARN RES, V80
   Lorenz U, 2022, Reinforcement Learning From Scratch: Understanding Current Approaches-with Examples in Java and Greenfoot
   Lutz LM, 2017, ENERG POLICY, V105, P136, DOI 10.1016/j.enpol.2017.02.019
   Lwakatare LE, 2019, LECT NOTES BUS INF P, V355, P227, DOI 10.1007/978-3-030-19034-7_14
   McDonald N, 2019, P ACM HUM COMP INT 3, P1
   Mnih V, 2015, NATURE, V518, P529, DOI 10.1038/nature14236
   Mojica-Hanke A, 2023, Arxiv, DOI arXiv:2301.10516
   Moritz P, 2018, PROCEEDINGS OF THE 13TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P561
   Morovati M.M., Paper replication package
   Morovati MM, 2024, EMPIR SOFTW ENG, V29, DOI 10.1007/s10664-023-10400-0
   Morovati MM, 2023, EMPIR SOFTW ENG, V28, DOI 10.1007/s10664-023-10291-1
   Nguyen TT, 2020, IEEE T CYBERNETICS, V50, P3826, DOI 10.1109/TCYB.2020.2977374
   Nikanjam A, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3470006
   Nikanjam A, 2022, AUTOMAT SOFTW ENG, V29, DOI 10.1007/s10515-021-00313-x
   Openja Moses, 2022, EASE 2022: The International Conference on Evaluation and Assessment in Software Engineering 2022, P190, DOI 10.1145/3530019.3530039
   Panerati J, 2021, IEEE INT C INT ROBOT, P7512, DOI 10.1109/IROS51168.2021.9635857
   Panzer M, 2022, INT J PROD RES, V60, P4316, DOI 10.1080/00207543.2021.1973138
   Peruma A, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10045-x
   Plappert M., 2016, keras-rl
   Pumperla M, 2023, Learning ray: flexible distributed python for machine learning
   Qualtrics, 2023, Qualtrics official website
   Rao Q, 2018, PROCEEDINGS 2018 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR AI IN AUTONOMOUS SYSTEMS (SEFAIAS), P35, DOI 10.1145/3194085.3194087
   Reda D, 2020, P 13 ACM SIGGRAPH C, P1
   Castro PS, 2018, Arxiv, DOI arXiv:1812.06110
   Schaarschmidt M, 2018, Arxiv, DOI arXiv:1808.07903
   Schoop E, 2021, P 2021 CHI C HUM FAC, P1
   Shah MB, 2024, Arxiv, DOI arXiv:2401.03069
   StackExchange, 2022, Stack exchange data dump
   Tambon F, 2023, IEEE INT CONF SOFTW, P188, DOI 10.1109/ICST57152.2023.00026
   Vijayaraghavan G, 2003, Star East, V2003, P1
   Wan Y, 2018, IEEE INT CONF AUTOM, P397, DOI 10.1145/3238147.3238206
   Xiao Y, 2021, IEEE COMMUN SURV TUT, V23, P2064, DOI 10.1109/COMST.2021.3102580
   Xie DN, 2022, PROCEEDINGS OF THE 31ST ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2022, P176, DOI 10.1145/3533767.3534220
   Yahmed AH, 2023, Arxiv, DOI arXiv:2308.12438
   Yu C, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3477600
   Zahedi Mansooreh, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P41, DOI 10.1145/3383219.3383224
   Zhang S., 2020, Deep Reinforcement Learning: Fundamentals, Research and Applications
   Zhang TY, 2019, PROC INT SYMP SOFTW, P104, DOI 10.1109/ISSRE.2019.00020
   Zhang XY, 2021, PROC INT CONF SOFTW, P359, DOI 10.1109/ICSE43902.2021.00043
   Zhu WH, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10180-z
   Zolfagharian A, 2022, Arxiv, DOI arXiv:2206.07813
NR 78
TC 0
Z9 0
U1 5
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2024
VL 29
IS 4
AR 95
DI 10.1007/s10664-024-10500-5
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UL4T9
UT WOS:001248208700002
DA 2024-08-05
ER

PT J
AU Timperley, CS
   van der Hoorn, G
   Santos, A
   Deshpande, H
   Wasowski, A
AF Timperley, Christopher S.
   van der Hoorn, Gijs
   Santos, Andre
   Deshpande, Harshavardhan
   Wasowski, Andrzej
TI ROBUST: 221 bugs in the Robot Operating System
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Robotics; Software bugs; Dataset; Robot Operating System; ROS; BugZoo
AB As robotic systems such as autonomous cars and delivery drones assume greater roles and responsibilities within society, the likelihood and impact of catastrophic software failure within those systems is increased. To aid researchers in the development of new methods to measure and assure the safety and quality of robotics software, we systematically curated a dataset of 221 bugs across 7 popular and diverse software systems implemented via the Robot Operating System (ROS). We produce historically accurate recreations of each of the 221 defective software versions in the form of Docker images, and use a grounded theory approach to examine and categorize their corresponding faults, failures, and fixes. Finally, we reflect on the implications of our findings and outline future research directions for the community.
C1 [Timperley, Christopher S.] Carnegie Mellon Univ, Sch Comp Sci, Pittsburgh, PA 15213 USA.
   [van der Hoorn, Gijs] Delft Univ Technol, Fac Mech Maritime & Mat Engn, Dept Cognit Robot, Delft, Netherlands.
   [Santos, Andre] VORTEX CoLab, Vila Nova De Gaia, Portugal.
   [Deshpande, Harshavardhan] Fraunhofer Inst Mfg Engn & Automat IPA, Stuttgart, Germany.
   [Wasowski, Andrzej] IT Univ Copenhagen, Dept Comp Sci, Copenhagen, Denmark.
C3 Carnegie Mellon University; Delft University of Technology; Fraunhofer
   Gesellschaft; IT University Copenhagen
RP Timperley, CS (corresponding author), Carnegie Mellon Univ, Sch Comp Sci, Pittsburgh, PA 15213 USA.
EM ctimperley@cmu.edu; g.a.vanderhoorn@tudelft.nl;
   andre.santos@vortex-colab.com;
   harshavardhan.deshpande@ipa.fraunhofer.de; wasowski@itu.dk
FU Carnegie Mellon University [73228, 956200]; European Union's Horizon
   2020 research and innovation programme; DARPA [FA8750-15-2-0075]; AFRL
FX We thank Claus Brabrand, Zhoulai Fu, Jon Azpiazu, Jon Tjerngren,
   Jonathan Hechtbauer, Jam Marcos Hernandez, and Claire Le Goues for
   discussions about the study design, motivation, and for contributing bug
   analyses or technical knowledge in the process. This work was partially
   supported by the European Union's Horizon 2020 research and innovation
   programme, grant agreement No. 73228 (ROSIN), Marie Sk &
   lstrok;odowska-Curie Actions grant agreement No 956200 (REMARO), by
   DARPA (#A8750-16-2-0042), and by AFRL (#FA8750-15-2-0075). The authors
   are grateful for their support. Any opinions, findings, or
   recommendations expressed are those of the authors and do not
   necessarily reflect those of the US Government or the European Union.
CR Abal I., 2014, Proceedings of the 29th ACM/IEEE International Conference on Automated Software Engineering, ASE '14, P421
   Abal I, 2018, ACM T SOFTW ENG METH, V26, DOI 10.1145/3149119
   Afzal A, 2021, GzScenic: Automatic Scene Generation for Gazebo Simulator
   Afzal A, 2022, IEEE T SOFTWARE ENG, V48, P4535, DOI 10.1109/TSE.2021.3120680
   Afzal A, 2020, IEEE INT CONF SOFTW, P96, DOI 10.1109/ICST46399.2020.00020
   Alami A, 2018, 2018 IEEE/ACM 11TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P61, DOI 10.1145/3195836.3195853
   Aliabadi MR, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P349, DOI 10.1145/3106237.3106282
   ArduPilot, 2023, ArduPilot
   Armstrong Joe, 1996, Concurrent Programming in Erlang
   Asadollah SA, 2017, J INTERNET SERV APPL, V8, DOI 10.1186/s13174-017-0055-2
   Atwood J, 2012, New programming jargon
   B_ohme M., 2014, INT S SOFTWARE TESTI, P105
   Baidu, 2021, Apollo
   Bardaro G, 2018, 2018 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON ROBOTICS SOFTWARE ENGINEERING (ROSE), P9, DOI 10.1145/3196558.3196560
   Benton S, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P47, DOI 10.1109/ICSE-Companion.2019.00035
   Bhattacharya P, 2013, EUR CON SFTWR MTNCE, P133, DOI 10.1109/CSMR.2013.23
   Böhme M, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P117, DOI 10.1145/3106237.3106255
   Bozhinoski D, 2021, 2021 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON ROBOTICS SOFTWARE ENGINEERING (ROSE 2021), P25, DOI 10.1109/RoSE52553.2021.00011
   Charette RN, 2014, IEEE Spectrum
   Chou A., 2001, Operating Systems Review, V35, P73, DOI 10.1145/502059.502042
   Coghlan N, 2013, PEP 440-Version Identification and Dependency Specification
   Di Franco A, 2017, IEEE INT CONF AUTOM, P509, DOI 10.1109/ASE.2017.8115662
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Dronecode Foundation, 2023, PX4
   Eugster PT, 2003, ACM COMPUT SURV, V35, P114, DOI 10.1145/857076.857078
   Facebook, 2022, Infer
   Fischer-Nielsen A, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP), P21, DOI 10.1145/3377813.3381364
   Fonseca P, 2010, I C DEPEND SYS NETWO, P221, DOI 10.1109/DSN.2010.5544315
   Foote T, 2021, Parameter api design in ros
   Fremont DJ, 2019, PROCEEDINGS OF THE 40TH ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '19), P63, DOI 10.1145/3314221.3314633
   Garcia J, 2020, PROC INT CONF SOFTW, P385, DOI 10.1145/3377811.3380397
   Grottke M, 2010, I C DEPEND SYS NETWO, P447, DOI 10.1109/DSN.2010.5544284
   Gyimesi P, 2019, IEEE INT CONF SOFTW, P90, DOI 10.1109/ICST.2019.00019
   Han X, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962602
   He ZJ, 2019, PROC INT CONF SOFTW, P116, DOI 10.1109/ICSE.2019.00029
   Henning A, 2016, ROSCON SEOUL 2016, DOI [10.36288/ROSCon2016-900758, DOI 10.36288/ROSCON2016-900758]
   Hu Y, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P388, DOI 10.1109/ASE.2019.00044
   Humbatova N, 2020, PROC INT CONF SOFTW, P1110, DOI 10.1145/3377811.3380395
   Inoue J, 2017, INT CONF DAT MIN WOR, P1058, DOI 10.1109/ICDMW.2017.149
   Islam MJ, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P510, DOI 10.1145/3338906.3338955
   Jin GL, 2012, ACM SIGPLAN NOTICES, V47, P77, DOI 10.1145/2345156.2254075
   Just R, 2014, ISSTA 2014, P437, DOI [10.1145/2610384.2628055, DOI 10.1145/2610384.2628055]
   Kate S, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P45, DOI 10.1145/3468264.3468608
   Kate S, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P563, DOI 10.1145/3236024.3236035
   Kim T, 2019, PROCEEDINGS OF THE 28TH USENIX SECURITY SYMPOSIUM, P425
   Klück F, 2018, IEEE INT SYMP SOFTW, P118, DOI 10.1109/ISSREW.2018.00-20
   Kolak S, 2020, PROC IEEE INT CONF S, P430, DOI 10.1109/ICSME46990.2020.00048
   Lammel R., 2018, Software Languages: Syntax, Semantics, and Metaprogramming, DOI DOI 10.1007/978-3-319-90800-7
   Larsen H, 2021, Robot Operating System (ROS), P55
   Le Goues C, 2015, IEEE T SOFTWARE ENG, V41, P1236, DOI 10.1109/TSE.2015.2454513
   Lin D., 2017, INT C SYSTEMS PROGRA, P55
   Linneberg MS, 2019, QUAL RES J, V19, P259, DOI 10.1108/QRJ-12-2018-0012
   Madeiral F, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P468, DOI [10.1109/SANER.2019.8667991, 10.1109/saner.2019.8667991]
   Majumdar R, 2021, Arxiv, DOI arXiv:1902.01084
   Martinez J, 2021, 2021 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON ROBOTICS SOFTWARE ENGINEERING (ROSE 2021), P13, DOI 10.1109/RoSE52553.2021.00009
   Matsakis ND., 2014, Ada Lett, V34, P103, DOI [10.1145/2663171.2663188, DOI 10.1145/2663171.2663188, 10.1145/2692956.2663188]
   Mc Causland P., 2019, NBC NEWS
   OKane S., 2020, The Verge
   Ore JP, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P352, DOI 10.1145/3092703.3098219
   Purandare R, 2012, IEEE INT C INT ROBOT, P1533, DOI 10.1109/IROS.2012.6385719
   Quigley M, 2009, IEEE INT CONF ROBOT, P3604
   ROS2, 2021, rclcpp: C++ ros client library api: Node class reference
   ROSIn, 2022, ROS-Industrial: Current Members
   Saha RK, 2018, IEEE WORK CONF MIN S, P10, DOI 10.1145/3196398.3196473
   Saldana J, 2013, The coding manual for qualitative researchers, DOI DOI 10.1017/CBO9781107415324.004
   Santos A, 2022, ENASE: PROCEEDINGS OF THE 17TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL APPROACHES TO SOFTWARE ENGINEERING, P26, DOI 10.5220/0010976100003176
   Santos A, 2021, 2021 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON ROBOTICS SOFTWARE ENGINEERING (ROSE 2021), P37, DOI 10.1109/RoSE52553.2021.00013
   Santos A, 2019, 2019 THIRD IEEE INTERNATIONAL CONFERENCE ON ROBOTIC COMPUTING (IRC 2019), P62, DOI 10.1109/IRC.2019.00018
   Santos A, 2016, 2016 IEEE/RSJ INTERNATIONAL CONFERENCE ON INTELLIGENT ROBOTS AND SYSTEMS (IROS 2016), P4491, DOI 10.1109/IROS.2016.7759661
   Seaman C, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P149
   Serebryany K., 2012, USENIX ANN TECHNICAL, P309
   Serebryany Konstantin, 2009, Proceedings of the Workshop on Binary Instrumentation and Applications, P62, DOI [DOI 10.1145/1791194.1791203, 10.1145/1791194.1791203]
   Shenton A. K., 2004, Education for Information, V22, P63, DOI DOI 10.3233/EFI-2004-22201
   Sikolia D., 2013, MWAIS 2013 Proceedings, V16
   Steinbauer Gerald, 2013, RoboCup 2012: Robot Soccer World Cup XVI: LNCS 7500, P344, DOI 10.1007/978-3-642-39250-4_31
   Stepanov E, 2015, INT SYM CODE GENER, P46, DOI 10.1109/CGO.2015.7054186
   Tan SH, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P187, DOI 10.1145/3180155.3180243
   Tan SH, 2017, PROC IEEE ACM INT C, P180, DOI 10.1109/ICSE-C.2017.76
   The Autoware Foundation, 2021, Autoware.ai
   The Robotics Back-End, 2021, rclcpp Params Tutorial-Get and Set ROS2 Params with Cpp
   Thung F., 2012, Proceedings of the 2012 IEEE 23rd International Symposium on Software Reliability Engineering (ISSRE), P271, DOI 10.1109/ISSRE.2012.22
   Timperley C, 2019, ROSCON MACAU 2019, DOI [10.36288/ROSCon2019-900898, DOI 10.36288/ROSCON2019-900898]
   Timperley CS, 2022, IEEE 19TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2022), P112, DOI 10.1109/ICSA53651.2022.00019
   Timperley CS, 2018, PROC IEEE ACM INT C, P446, DOI 10.1145/3183440.3195050
   Timperley CS, 2018, IEEE INT CONF SOFTW, P331, DOI 10.1109/ICST.2018.00040
   Tomassi DA, 2019, PROC INT CONF SOFTW, P339, DOI 10.1109/ICSE.2019.00048
   Vahabzadeh A, 2015, PROC IEEE INT CONF S, P101, DOI 10.1109/ICSM.2015.7332456
   van Tonder R, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P151, DOI 10.1145/3180155.3180250
   Wall M, 2017, Space
   Wan ZY, 2017, IEEE WORK CONF MIN S, P413, DOI 10.1109/MSR.2017.59
   Wang DH, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P20, DOI 10.1145/3468264.3468559
   Wang J, 2017, IEEE INT CONF AUTOM, P520, DOI 10.1109/ASE.2017.8115663
   Wasowski A., 2023, Domain-Specific LanguagesEffective Modeling, Automation, and Reuse, DOI DOI 10.1007/978-3-031-23669-3
   White R, 2019, Announcing Official Docker Images for ROS2
   Widyasari R, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1556, DOI 10.1145/3368089.3417943
   Witte T, 2018, 2018 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON ROBOTICS SOFTWARE ENGINEERING (ROSE), P1, DOI 10.1145/3196558.3196559
   Wyrobek K, 2017, The Origin Story of ROS, the Linux of Robotics
   Yang JW, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P800, DOI 10.1145/3180155.3180194
   Yin ZN, 2011, SOSP 11: PROCEEDINGS OF THE TWENTY-THIRD ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P159
   Zampetti F, 2022, J SYST SOFTWARE, V192, DOI 10.1016/j.jss.2022.111425
   Zhang YH, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P129, DOI 10.1145/3213846.3213866
NR 101
TC 0
Z9 0
U1 2
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAY
PY 2024
VL 29
IS 3
AR 57
DI 10.1007/s10664-024-10440-0
PG 41
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LU4N4
UT WOS:001189302000001
OA hybrid
DA 2024-08-05
ER

PT J
AU Pontillo, V
   d'Aragona, DA
   Pecorelli, F
   Di Nucci, D
   Ferrucci, F
   Palomba, F
AF Pontillo, Valeria
   d'Aragona, Dario Amoroso
   Pecorelli, Fabiano
   Di Nucci, Dario
   Ferrucci, Filomena
   Palomba, Fabio
TI Machine learning-based test smell detection
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Test smells; Test code quality; Machine learning; Empirical software
   engineering
ID TRACEABILITY LINKS; PREDICTION; CODE; SEARCH; SMOTE
AB Test smells are symptoms of sub-optimal design choices adopted when developing test cases. Previous studies have proved their harmfulness for test code maintainability and effectiveness. Therefore, researchers have been proposing automated, heuristic-based techniques to detect them. However, the performance of these detectors is still limited and dependent on tunable thresholds. We design and experiment with a novel test smell detection approach based on machine learning to detect four test smells. First, we develop the largest dataset of manually-validated test smells to enable experimentation. Afterward, we train six machine learners and assess their capabilities in within- and cross-project scenarios. Finally, we compare the ML-based approach with state-of-the-art heuristic-based techniques. The key findings of the study report a negative result. The performance of the machine learning-based detector is significantly better than heuristic-based techniques, but none of the learners able to overcome an average F-Measure of 51%. We further elaborate and discuss the reasons behind this negative result through a qualitative investigation into the current issues and challenges that prevent the appropriate detection of test smells, which allowed us to catalog the next steps that the research community may pursue to improve test smell detection techniques.
C1 [Pontillo, Valeria; Pecorelli, Fabiano; Di Nucci, Dario; Ferrucci, Filomena; Palomba, Fabio] Univ Salerno, Software Engn SeSa Lab, Fisciano, Italy.
   [Pontillo, Valeria] Vrije Univ Brussel, Software Languages Lab, Brussels, Belgium.
   [d'Aragona, Dario Amoroso] Tampere Univ, Tampere, Finland.
C3 University of Salerno; Vrije Universiteit Brussel; Tampere University
RP Pontillo, V (corresponding author), Univ Salerno, Software Engn SeSa Lab, Fisciano, Italy.; Pontillo, V (corresponding author), Vrije Univ Brussel, Software Languages Lab, Brussels, Belgium.
EM valeria.pontillo@vub.be; dario.amorosodaragona@tuni.fi;
   fpecorelli@unisa.it; ddinucci@unisa.it; fferucci@unisa.it;
   fpalomba@unisa.it
RI Di Nucci, Dario/Y-9679-2019
OI Di Nucci, Dario/0000-0002-3861-1902; Pontillo,
   Valeria/0000-0001-6012-9947; Palomba, Fabio/0000-0001-9337-5116;
   Pecorelli, Fabiano/0000-0003-2446-4291; FERRUCCI,
   Filomena/0000-0002-0975-8972
FU Schweizerischer Nationalfonds zur Frderung der Wissenschaftlichen
   Forschung [PZ00P2_186090, 2020W3A5FY]; Swiss National Science Foundation
   through the SNF
FX Fabio gratefully acknowledges the support of the Swiss National Science
   Foundation through the SNF project No. PZ00P2_186090. In addition, the
   work has been partially supported by the EMELIOT national research
   project, which the MUR has funded under the PRIN 2020 program (Contract
   2020W3A5FY).
CR Aljedaani W, 2021, PROCEEDINGS OF EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING (EASE 2021), P170, DOI 10.1145/3463274.3463335
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Azeem MI, 2019, Inf Softw Technol
   Baeza-Yates R., 2011, Modern Information Retrieval: The Concepts and Technology Behind Search, Vsecond
   Baldi P, 2000, BIOINFORMATICS, V16, P412, DOI 10.1093/bioinformatics/16.5.412
   Bavota G, 2015, EMPIR SOFTW ENG, V20, P1052, DOI 10.1007/s10664-014-9313-0
   Bavota G, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P56, DOI 10.1109/ICSM.2012.6405253
   Beck K., 2003, Test Driven Development: By Example
   Beller M, 2017, IEEE WORK CONF MIN S, P356, DOI 10.1109/MSR.2017.62
   Bergstra J, 2012, J MACH LEARN RES, V13, P281
   Breiman L, 2001, MACH LEARN, V45, P5, DOI 10.1023/A:1010933404324
   Catolino G, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.2156
   Catolino G, 2019, 2019 IEEE/ACM 6TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2019), P99, DOI 10.1109/MOBILESoft.2019.00023
   Catolino G, 2018, J SYST SOFTWARE, V143, P14, DOI 10.1016/j.jss.2018.05.003
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   De Bleser Jonas, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P457, DOI 10.1109/MSR.2019.00072
   De Bleser J, 2019, SCALA'19: PROCEEDINGS OF THE 10TH ACM SIGPLAN INTERNATIONAL SYMPOSIUM ON SCALA, P22, DOI 10.1145/3337932.3338815
   Di Nucci D, 2018, IEEE T SOFTWARE ENG, V44, P5, DOI 10.1109/TSE.2017.2659747
   Duda R.O., 2000, Pattern Classification and Scene Analysis
   Fenton N., 2014, Software Metrics: A Rigorous and Practical Approach
   Fernandes E, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2915984
   Fowler M., 1999, Refactoring: Improving the Design of Existing Programs
   Freund Y, 1999, MACHINE LEARNING, PROCEEDINGS, P124
   Garousi V, 2018, J SYST SOFTWARE, V138, P52, DOI 10.1016/j.jss.2017.12.013
   Gousios G, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P358, DOI 10.1109/ICSE.2015.55
   Grano G, 2019, IEEE Trans Softw Eng
   Grano G, 2019, J SYST SOFTWARE, V156, P312, DOI 10.1016/j.jss.2019.07.016
   Greiler M, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P322, DOI 10.1109/ICST.2013.45
   Haiduc S, 2012, IEEE INT CONF AUTOM, P90, DOI 10.1145/2351676.2351690
   Han H, 2005, LECT NOTES COMPUT SC, V3644, P878, DOI 10.1007/11538059_91
   HARROLD MJ, 1992, 14TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING : PROCEEDINGS, P68
   He HB, 2008, IEEE IJCNN, P1322, DOI 10.1109/IJCNN.2008.4633969
   Heckman J.J., 2010, Microeconometrics. The New Palgrave Economics Collection, DOI DOI 10.1057/9780230280816_29
   Koochakzadeh N, 2010, Advan Softw Eng, V2010
   Kramer O, 2016, STUD BIG DATA, V20, P45, DOI 10.1007/978-3-319-33383-0_5
   Kruchten P, 2012, IEEE SOFTWARE, V29, P18, DOI 10.1109/MS.2012.167
   Lambiase S, 2020, INT C PROGRAM COMPRE, P441, DOI 10.1145/3387904.3389296
   Lipton Zachary C., 2019, ACM Queue, V17, P45, DOI 10.1145/3317287.3328534
   Mackinnon T., 2000, Extrem. Program. Examined, P287
   Maier F, 2023, Soft Anal Evol Reeng, P897, DOI 10.1109/SANER56733.2023.00108
   Maldonado ED, 2015, 2015 IEEE 7TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD) PROCEEDINGS, P9, DOI 10.1109/MTD.2015.7332619
   Marcus A, 2005, PROC IEEE INT CONF S, P133
   Martins L, 2024, J SOFTW-EVOL PROC, V36, DOI 10.1002/smr.2532
   McHugh ML, 2012, BIOCHEM MEDICA, V22, P276, DOI 10.11613/bm.2012.031
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   Meszaros G, 2007, xUnit test patterns: Refactoring test code
   Myers G.J., 2011, The art of software testing, VVolume 1
   NEMENYI P, 1962, BIOMETRICS, V18, P263
   Noble WS, 2006, NAT BIOTECHNOL, V24, P1565, DOI 10.1038/nbt1206-1565
   O'Brien RM, 2007, QUAL QUANT, V41, P673, DOI 10.1007/s11135-006-9018-6
   Orso A, 1998, P 4 INT C ACHIEVING
   Palomba F, 2018, PROC IEEE INT CONF S, P311, DOI 10.1109/ICSME.2018.00040
   Palomba F, 2016, 2016 IEEE/ACM 9TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST), P5, DOI [10.1109/SBST.2016.010, 10.1145/2897010.2897016]
   Parizi RM, 2014, IEEE T RELIAB, V63, P913, DOI 10.1109/TR.2014.2338254
   Pecorelli F, 2020, AVI 2020, P1
   Pecorelli F, 2019, PROCEEDINGS OF THE 3RD ACM SIGSOFT INTERNATIONAL WORKSHOP ON MACHINE LEARNING TECHNIQUES FOR SOFTWARE QUALITY EVALUATION (MALTESQUE '19), P19, DOI 10.1145/3340482.3342744
   Pecorelli F, 2019, INT C PROGRAM COMPRE, P93, DOI 10.1109/ICPC.2019.00023
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Perez A, 2017, PROC INT CONF SOFTW, P654, DOI 10.1109/ICSE.2017.66
   Peruma A, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1650, DOI 10.1145/3368089.3417921
   Pezze M., 2008, Software Testing and Analysis: Process, Principles and Techniques
   Pontillo V, 2023, Machine learning-based test smell detection-online appendix
   Pontillo V, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10227-1
   Pontillo V, 2021, MALTESQUE '21: PROCEEDINGS OF THE 5TH INTERNATIONAL WORKSHOP ON MACHINE LEARNING TECHNIQUES FOR SOFTWARE QUALITY EVOLUTION, P19, DOI 10.1145/3472674.3473981
   Quinlan J. R., 1986, Machine Learning, V1, P81, DOI 10.1023/A:1022643204877
   Qusef A, 2014, J SYST SOFTWARE, V88, P147, DOI 10.1016/j.jss.2013.10.019
   Refaeilzadeh P., 2009, ENCY DATABASE SYSTEM, P532, DOI DOI 10.1007/978-0-387-39940-9_565
   Rwemalika R, 2023, EMPIR SOFTW ENG, V28, DOI 10.1007/s10664-022-10251-1
   Sakshaug JW., 2016, J Survey Stat Method, V4, P382, DOI [10.1093/jssam/smw020, DOI 10.1093/JSSAM/SMW020]
   Samarthyam G, 2017, Trends in software testing, P1
   Schapire R. E., 2013, Empirical Inference, P37, DOI 10.1007/978-3-642-41136-65
   Sheldon M R, 1996, Physiother Res Int, V1, P221, DOI 10.1002/pri.66
   Spadini D, 2019, PROC INT CONF SOFTW, P1061, DOI 10.1109/ICSE.2019.00110
   Spadini D, 2018, PROC IEEE INT CONF S, P1, DOI 10.1109/ICSME.2018.00010
   STONE M, 1974, J R STAT SOC B, V36, P111, DOI 10.1111/j.2517-6161.1974.tb00994.x
   Taud H., 2018, Geomatic Approaches for Modeling Land Change Scenarios, P451, DOI DOI 10.1007/978-3-319-60801-3_27
   Tufano M, 2016, IEEE INT CONF AUTOM, P4, DOI 10.1145/2970276.2970340
   van Deursen A., 2001, P 2 INT C EXTREME PR
   Van Rompaey B, 2007, IEEE T SOFTWARE ENG, V33, P800, DOI 10.1109/TSE.2007.70745
   Van Rompaey B, 2009, EUR CON SFTWR MTNCE, P209, DOI 10.1109/CSMR.2009.39
   Vavrova N, 2017, arXiv
   Wang TJ, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P593, DOI 10.1109/ASE51524.2021.9678615
   Wohlin C., 2012, Experimentation in Software Engineering, DOI [10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Yen SJ, 2006, LECT NOTES CONTR INF, V344, P731
   Zhang YC, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P214, DOI 10.1145/2786805.2786858
NR 86
TC 1
Z9 1
U1 3
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2024
VL 29
IS 2
AR 55
DI 10.1007/s10664-023-10436-2
PG 44
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JP8M6
UT WOS:001174460800001
PM 38456065
OA Green Published, hybrid
DA 2024-08-05
ER

PT J
AU Winkler, D
   Urbanke, P
   Ramler, R
AF Winkler, Dietmar
   Urbanke, Pirmin
   Ramler, Rudolf
TI Investigating the readability of test code
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Test code; Readability; Understandability; Maintainability; Systematic
   mapping study; Grey literature; Controlled experiment
ID SOFTWARE TEST-CODE; UNDERSTANDABILITY; GUIDELINES
AB ContextThe readability of source code is key for understanding and maintaining software systems and tests. Although several studies investigate the readability of source code, there is limited research specifically on the readability of test code and related influence factors.ObjectiveIn this paper, we aim at investigating the factors that influence the readability of test code from an academic perspective based on scientific literature sources and complemented by practical views, as discussed in grey literature.MethodsFirst, we perform a Systematic Mapping Study (SMS) with a focus on scientific literature. Second, we extend this study by reviewing grey literature sources for practical aspects on test code readability and understandability. Finally, we conduct a controlled experiment on the readability of a selected set of test cases to collect additional knowledge on influence factors discussed in practice.ResultsThe result set of the SMS includes 19 primary studies from the scientific literature for further analysis. The grey literature search reveals 62 sources for information on test code readability. Based on an analysis of these sources, we identified a combined set of 14 factors that influence the readability of test code. 7 of these factors were found in scientific and grey literature, while some factors were mainly discussed in academia (2) or industry (5) with only limited overlap. The controlled experiment on practically relevant influence factors showed that the investigated factors have a significant impact on readability for half of the selected test cases.ConclusionOur review of scientific and grey literature showed that test code readability is of interest for academia and industry with a consensus on key influence factors. However, we also found factors only discussed by practitioners. For some of these factors we were able to confirm an impact on readability in a first experiment. Therefore, we see the need to bring together academic and industry viewpoints to achieve a common view on the readability of software test code.
C1 [Winkler, Dietmar] SBA Res gGmbH, Floragasse 7, A-1040 Vienna, Austria.
   [Winkler, Dietmar] Austrian Ctr Digital Prod, Seestadtstr 27-10, A-1220 Vienna, Austria.
   [Winkler, Dietmar] TU Wien, Inst Informat Syst Engn, Favoritenstr.9-194, A-1040 Vienna, Austria.
   [Urbanke, Pirmin] TU Wien, Christian Doppler Lab Secur & Qual Improvement Pro, Favoritenstr 9-194, A-1040 Vienna, Austria.
   [Ramler, Rudolf] Software Competence Ctr Hagenberg GmbH, Softwarepark 32a, A-4232 Hagenberg, Austria.
C3 Technische Universitat Wien; Technische Universitat Wien; Softwarepark
   Hagenberg
RP Winkler, D (corresponding author), SBA Res gGmbH, Floragasse 7, A-1040 Vienna, Austria.; Winkler, D (corresponding author), Austrian Ctr Digital Prod, Seestadtstr 27-10, A-1220 Vienna, Austria.; Winkler, D (corresponding author), TU Wien, Inst Informat Syst Engn, Favoritenstr.9-194, A-1040 Vienna, Austria.
EM dietmar.winkler@tuwien.ac.at; pirmin.urbanke@tuwien.ac.at;
   rudolf.ramler@scch.at
FU TU Wien (TUW); SBA Research (SBA-K1); COMET Center within the COMET -
   Competence Centers for Excellent Technologies Programme - federal state
   of Vienna [881843, 872176]; COMET Center "Austrian Competence Center for
   Digital Production" (CDP) [888127]; Austrian Research Promotion Agency
   (FFG); COMET competence center INTEGRATE - federal state of Upper
   Austria; Christian Doppler Research Association; Austrian Federal
   Ministry for Digital & Economic Affairs; National Foundation for
   Research, Technology and Development
FX This work has been partially supported via SBA Research (SBA-K1), a
   COMET Center within the COMET - Competence Centers for Excellent
   Technologies Programme, funded by BMK, BMAW, and the federal state of
   Vienna and managed by the Austrian Research Promotion Agency (FFG). This
   work has been partially supported via the COMET Center "Austrian
   Competence Center for Digital Production" (CDP) [881843] and the K2
   centre InTribology [872176].This work has been partially supported by
   the Austrian Research Promotion Agency (FFG) in the frame of the project
   ConTest [888127] and via the COMET competence center INTEGRATE [892418]
   of SCCH, funded by BMK, BMAW, and the federal state of Upper Austria.
   Finally, the financial support by the Christian Doppler Research
   Association, the Austrian Federal Ministry for Digital & Economic
   Affairs and the National Foundation for Research, Technology and
   Development is gratefully acknowledged.
CR Afshan S, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P352, DOI 10.1109/ICST.2013.11
   Al Madi N, 2022, IEEE INT CONF AUTOM, DOI 10.1145/3551349.3560438
   Almasi MM, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P263, DOI 10.1109/ICSE-SEIP.2017.27
   Alsharif A, 2019, PROC IEEE INT CONF S, P437, DOI 10.1109/ICSME.2019.00076
   Aniche M., 2022, EFFECTIVE SOFTWARE T
   Bahmutov G, 2019, Blog
   Bai GR, 2022, 2022 IEEE S VIS LANG, P1, DOI [10.1109/VL/HCC53370.2022.9833107, DOI 10.1109/VL/HCC53370.2022.9833107]
   Bansal A, 2021, Magazine
   Bavota G, 2015, EMPIR SOFTW ENG, V20, P1052, DOI 10.1007/s10664-014-9313-0
   blog VVC, 2021, Blog
   Bloomfield P, 2020, Blog
   Borowiec R, 2013, Blog
   Bowes D, 2017, INT WORKS EMERG TREN, P9, DOI 10.1109/WETSoM.2017.2
   Brizeno M, 2014, Blog
   Bulavin V, 2020, Blog
   Buse R.P., 2008, Proceedings of the 2008 International Symposium on Software Testing and Analysis, P121, DOI [10.1145/1390630.1390647, DOI 10.1145/1390630.1390647]
   Carter D, 2011, Blog
   Casadei R, 2013, Effective unit testing-slideshare
   Ceccato M, 2015, ACM T SOFTW ENG METH, V25, DOI 10.1145/2768829
   Coles H, 2015, Wiki
   Cook R, 2017, In programming, is it worth to sacrifice some dry-ness for ...  Other ...
   Correa FC, 2019, Blog
   Daka E, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P57, DOI 10.1145/3092703.3092727
   Daka E, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P107, DOI 10.1145/2786805.2786838
   Deiss Thomas, 2008, International Journal on Software Tools for Technology Transfer, V10, P347, DOI 10.1007/s10009-008-0079-9
   Deissenboeck F., 2007, 2007 IEEE International Conference on Software Maintenance, P184, DOI 10.1109/ICSM.2007.4362631
   Delplanque J, 2019, PROC INT CONF SOFTW, P500, DOI 10.1109/ICSE.2019.00062
   Dhoke A, 2009, Blog
   Dietrich E, 2013, Blog
   Dijkstra B, 2016, Blog
   Duiker M, 2016, Blog
   DustinBoswell TF, 2012, The Art of Readable Code
   Enzler U, 2014, Cheatsheet
   Femmer H, 2015, 2015 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON REQUIREMENTS ENGINEERING AND TESTING (RET), P13, DOI 10.1109/RET.2015.11
   Fernandes J, 2020, Blog
   Fisher G, 2018, SIGCSE'18: PROCEEDINGS OF THE 49TH ACM TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION, P800, DOI 10.1145/3159450.3159575
   Flournoy J, 2008, Blog
   Foord M, 2017, Magazine
   Fraser Gordon, 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P80, DOI 10.1109/ICST.2011.53
   Fraser G., 2013, P 2013 INT S SOFTW T, P291, DOI DOI 10.1145/2483760.2483774
   Garousi V, 2019, INFORM SOFTWARE TECH, V106, P101, DOI 10.1016/j.infsof.2018.09.006
   Garousi V, 2018, J SYST SOFTWARE, V138, P52, DOI 10.1016/j.jss.2017.12.013
   Garousi V, 2016, IEEE SOFTWARE, V33, P68, DOI 10.1109/MS.2016.30
   Goeschel T, 2016, Blog
   Gorman J, 2020, Blog
   Grano G, 2020, PROC IEEE INT CONF S, P336, DOI 10.1109/ICSME46990.2020.00040
   Grano G, 2018, INT C PROGRAM COMPRE, P348, DOI 10.1145/3196321.3196363
   Grigg H, 2020, Blog
   Hauer P, 2021, Blog
   Haus E, 2020, Podcast / transcript
   Hnat B, 2020, Blog
   Huttunen A, 2021, Blog
   Tran HKV, 2019, LECT NOTES COMPUT SC, V11915, P37, DOI 10.1007/978-3-030-35333-9_3
   Jarrett J, 2009, Blog
   Johnson K, 2008, Stackoverflow
   Kainulainen P, 2014, Blog
   Kareinen T, 2012, Blog
   Khorikov V, 2008, Blog
   Kochhar PS, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P61, DOI 10.1109/ICSE-SEIP.2019.00015
   Koskela L., 2013, EFFECTIVE UNIT TESTI
   Lacerda G, 2020, J SYST SOFTWARE, V167, DOI 10.1016/j.jss.2020.110610
   Lal A, 2019, Blog
   Latorre R, 2014, EMPIR SOFTW ENG, V19, P753, DOI 10.1007/s10664-013-9281-9
   Lehner D, 2021, Blog
   Leotta M, 2018, 2018 11TH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY (QUATIC), P184, DOI 10.1109/QUATIC.2018.00036
   Li BY, 2018, INT C PROGRAM COMPRE, P52, DOI 10.1145/3196321.3196339
   Li BY, 2016, IEEE INT CONF SOFTW, P341, DOI 10.1109/ICST.2016.30
   Lin B, 2019, IEEE INT WORK C SO, P204, DOI 10.1109/SCAM.2019.00031
   Lindner D, 2013, Blog
   Lipinski P, 2013, or how to write tests so that they serve you well
   MANJUNATH N, 2019, Blog
   Martin RC, 2021, Clean Code: Chapter 9. nan
   McMinn P., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P141, DOI 10.1109/ICST.2012.94
   Meszaros G, 2007, xUnit test patterns: Refactoring test code
   Minelli R, 2015, INT C PROGRAM COMPRE, P25, DOI 10.1109/ICPC.2015.12
   Moonen Leon, 2008, Software Evolution, P173
   Myers B, 2021, Blog
   Needham M, 2009, Blog
   nickname Companyblog F, 2016, Blog
   Oliveira D, 2020, PROC IEEE INT CONF S, P348, DOI 10.1109/ICSME46990.2020.00041
   Palomba F, 2016, P 25 INT S SOFTW TES, P130, DOI DOI 10.1145/2931037.2931057
   Panichella A, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10207-5
   Panichella S, 2016, PROC INT CONF SOFTW, P547, DOI 10.1145/2884781.2884847
   Papendieck T, 2017, Blog
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Pip C, 2020, Clean code in tests: What, why and how?-testproject. Blog
   Posnett Daryl, 2011, P 8 WORKING C MINING, P73, DOI [10.1145/1985441.1985454, DOI 10.1145/1985441.1985454]
   Ramler R, 2018, IEEE ICST WORKSHOP, P364, DOI 10.1109/ICSTW.2018.00074
   Reagan P, 2009, Blog
   Reid J, 2016, Blog
   Ricca F, 2009, INFORM SOFTWARE TECH, V51, P270, DOI 10.1016/j.infsof.2008.01.007
   Roberts J, 2019, Blog
   Roberts J, 2015, Magazine
   Rodrigues M, 2018, Blog
   Romano J, 2006, ANN M FLOR ASS I RES, V177
   Roy D, 2020, IEEE INT CONF AUTOM, P287, DOI 10.1145/3324884.3416622
   Ryswyck JV, 2021, Blog
   Sarna A, 2018, Blog
   Scalabrino S, 2019, Automatically assessing and improving code readability and understandability
   Scalabrino S, 2016, 2016 IEEE 24 INT C P, P1
   Scalabrino S, 2017, IEEE INT CONF AUTOM, P417, DOI 10.1109/ASE.2017.8115654
   Schults C, 2021, Blog
   Setiani N, 2021, INT CONF SOFTW ENG, P251, DOI 10.1109/ICSESS52187.2021.9522166
   Setiani N, 2020, IEEE ACCESS, V8, P169036, DOI 10.1109/ACCESS.2020.3022876
   Shamshiri S, 2018, IEEE INT CONF SOFTW, P250, DOI 10.1109/ICST.2018.00033
   Shih J, 2020, Blog
   Smart JF, 2020, What makes a great test automation framework?-linkedin. Blog
   Snyder D, 2019, Blog
   Spadini D, 2018, PROC IEEE INT CONF S, P1, DOI 10.1109/ICSME.2018.00010
   testing company, 2020, Unit testing tutorial: 5 best practices-vtest blog
   Tufano M, 2016, IEEE INT CONF AUTOM, P4, DOI 10.1145/2970276.2970340
   Vahabzadeh A, 2015, PROC IEEE INT CONF S, P101, DOI 10.1109/ICSM.2015.7332456
   van Deursen A., 2001, P 2 INT C EXTREME PR
   Vance Stephen., 2013, Quality Code: Software Testing Principles, Practices, and Patterns
   Wagner S, 2015, INFORM SOFTWARE TECH, V62, P101, DOI 10.1016/j.infsof.2015.02.009
   Wagner S, 2012, PROC INT CONF SOFTW, P1133, DOI 10.1109/ICSE.2012.6227106
   Winkler D, 2023, Data Set, DOI [10.48436/w4q8v-28695, DOI 10.48436/W4Q8V-28695]
   Winkler D, 2021, P 5 WORKSH VAL AN EV
   Wohlin C., 2012, Experimentation in Software Engineering, DOI [10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Yetistiren B, 2022, PROCEEDINGS OF THE 18TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING, PROMISE 2022, P62, DOI 10.1145/3558489.3559072
   Yonekubo T, 2021, Blog
   Yusifoglu VG, 2015, INFORM SOFTWARE TECH, V58, P123, DOI 10.1016/j.infsof.2014.06.009
   Zaidman A, 2011, EMPIR SOFTW ENG, V16, P325, DOI 10.1007/s10664-010-9143-7
   Zhang BW, 2016, IEEE INT CONF AUTOM, P625, DOI 10.1145/2970276.2970342
   Zilberfeld G, 2014, Blog
NR 125
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2024
VL 29
IS 2
AR 53
DI 10.1007/s10664-023-10390-z
PG 48
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JB1N5
UT WOS:001170603000002
OA hybrid
DA 2024-08-05
ER

PT J
AU Tan, WS
   Wagner, M
   Treude, C
AF Tan, Wen Siang
   Wagner, Markus
   Treude, Christoph
TI Detecting outdated code element references in software repository
   documentation
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software repositories; Outdated documentation; Outdated references; Code
   elements
AB Outdated documentation is a pervasive problem in software development, preventing effective use of software, and misleading users and developers alike. We posit that one possible reason why documentation becomes out of sync so easily is that developers are unaware of when their source code modifications render the documentation obsolete. Ensuring that the documentation is always in sync with the source code takes considerable effort, especially for large codebases. To address this situation, we propose an approach that can automatically detect code element references that survive in the documentation after all source code instances have been deleted. In this work, we analysed over 3,000 GitHub projects and found that most projects contain at least one outdated code element reference at some point in their history. We submitted GitHub issues to real-world projects containing outdated references detected by our approach, some of which have already led to documentation fixes. As an initiative toward keeping documentation in software repositories up-to-date, we have made our implementation available for developers to scan their GitHub projects for outdated code element references.
C1 [Tan, Wen Siang] Univ Adelaide, Adelaide, Australia.
   [Wagner, Markus] Monash Univ, Melbourne, Australia.
   [Treude, Christoph] Univ Melbourne, Melbourne, Australia.
C3 University of Adelaide; Monash University; University of Melbourne
RP Tan, WS (corresponding author), Univ Adelaide, Adelaide, Australia.
EM wensiang.tan@adelaide.edu.au; markus.wagner@monash.edu;
   christoph.treude@unimelb.edu.au
RI Treude, Christoph/AAZ-6257-2021
OI Treude, Christoph/0000-0002-6919-2149
FU CAUL
FX Open Access funding enabled and organized by CAUL and its Member
   Institutions.
CR Aghajani E, 2019, PROC INT CONF SOFTW, P1199, DOI 10.1109/ICSE.2019.00122
   Aldaeej A, 2021, Towards effective technical debt decision making in software startups: A multiple case study of web and mobile app startups
   Bacchelli A., 2010, P 32 ACM IEEE INT C, P375
   Dagenais B, 2014, IEEE T SOFTWARE ENG, V40, P1126, DOI 10.1109/TSE.2014.2347969
   Dagenais B, 2012, PROC INT CONF SOFTW, P47, DOI 10.1109/ICSE.2012.6227207
   de Souza SCB., 2005, P 23 ANN INT C DESIG, P68, DOI 10.1145/1085313.1085331
   Forward A., 2002, Proceedings of the Symposium on Document Engineering, DocEng '02, DOI [10.1145/585058.585065, DOI 10.1145/585058.585065]
   Kajko-Mattsson M, 2005, EMPIR SOFTW ENG, V10, P31, DOI 10.1023/B:LIDA.0000048322.42751.ca
   Kruchten P, 2012, IEEE SOFTWARE, V29, P18, DOI 10.1109/MS.2012.167
   Lee Seonah., 2019, IEEE Transactions on Software Engineering
   Lethbridge TC, 2003, IEEE SOFTWARE, V20, P35, DOI 10.1109/MS.2003.1241364
   Liu JK, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09917-5
   McHugh ML, 2012, BIOCHEM MEDICA, V22, P276, DOI 10.11613/bm.2012.031
   Mendes TS, 2016, P 31 ANN ACM S APPL, P1290
   Panthaplackel S, 2020, Arxiv, DOI arXiv:2004.12169
   PARNAS DL, 1994, PROC INT CONF SOFTW, P279, DOI 10.1109/ICSE.1994.296790
   Petrosyan G, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P869, DOI 10.1109/ICSE.2015.97
   Prana GAA, 2019, EMPIR SOFTW ENG, V24, P1296, DOI 10.1007/s10664-018-9660-3
   Ratol IK, 2017, IEEE INT CONF AUTOM, P112, DOI 10.1109/ASE.2017.8115624
   Rigby PC, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P832, DOI 10.1109/ICSE.2013.6606629
   Rios Nicolli, 2020, Requirements Engineering: Foundation for Software Quality. 26th International Working Conference, REFSQ 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12045), P55, DOI 10.1007/978-3-030-44429-7_4
   Robillard MP, 2017, PROC IEEE INT CONF S, P479, DOI 10.1109/ICSME.2017.17
   Shin Hwei Tan, 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P260, DOI 10.1109/ICST.2012.106
   Sholler D, 2019, PLOS COMPUT BIOL, V15, DOI 10.1371/journal.pcbi.1007296
   Steinmacher I, 2019, IEEE SOFTWARE, V36, P41, DOI 10.1109/MS.2018.110162131
   Treude C, 2015, IEEE T SOFTWARE ENG, V41, P565, DOI 10.1109/TSE.2014.2387172
   Uddin G, 2015, IEEE SOFTWARE, V32, P68, DOI 10.1109/MS.2014.80
   Wen FC, 2019, INT C PROGRAM COMPRE, P53, DOI 10.1109/ICPC.2019.00019
   Zhong H, 2013, ACM SIGPLAN NOTICES, V48, P803, DOI [10.1145/2544173.2509523, 10.1145/2509136.2509523]
   Zhou Y, 2020, IEEE T SOFTWARE ENG, V46, P1004, DOI 10.1109/TSE.2018.2872971
   Zlotnick Frances, 2017, Zenodo
NR 31
TC 0
Z9 0
U1 3
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2024
VL 29
IS 1
AR 5
DI 10.1007/s10664-023-10397-6
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA Y3AS5
UT WOS:001104033100001
OA Green Submitted, hybrid, Green Published
DA 2024-08-05
ER

PT J
AU Eng, K
   Hindle, A
   Stroulia, E
AF Eng, Kalvin
   Hindle, Abram
   Stroulia, Eleni
TI Patterns of multi-container composition for service orchestration with
   Docker Compose
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Docker; Docker Compose; Containerization
ID SOFTWARE
AB Software design patterns present general code solutions to common software design problems. Modern software systems rely heavily on containers for running their constituent service components. Yet, despite the prevalence of ready-to-use Docker service images ready to participate in multi-container service compositions of applications, developers do not have much guidance on how to compose their own Docker service orchestrations. Thus in this work, we curate a dataset of successful projects that employ Docker Compose as an orchestration tool to run multiple service containers; then, we engage in qualitative and quantitative analysis of Docker Compose configurations. The collection of data and analysis enables the identification and naming of repeating multi-container composition patterns that are used in numerous successful open-source projects, much like software design patterns. These patterns highlight how software systems are orchestrated in the real-world and can give examples to anybody wishing to compose their own service orchestrations. These contributions also advance empirical research in software engineering patterns as evidence is provided about how Docker Compose is used.
C1 [Eng, Kalvin; Hindle, Abram; Stroulia, Eleni] Univ Alberta, Edmonton, AB, Canada.
C3 University of Alberta
RP Eng, K (corresponding author), Univ Alberta, Edmonton, AB, Canada.
EM kalvin.eng@ualberta.ca; abram.hindle@ualberta.ca; stroulia@ualberta.ca
CR [Anonymous], 2005, Service-Oriented Architecture (SOA): Concepts, Technology, and Design
   Bird C, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P1, DOI 10.1109/MSR.2009.5069475
   Blincoe K, 2016, INFORM SOFTWARE TECH, V70, P30, DOI 10.1016/j.infsof.2015.10.002
   Borges H, 2016, PROC IEEE INT CONF S, P334, DOI 10.1109/ICSME.2016.31
   Brisson S, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P59, DOI [10.1109/saner48275.2020.9054834, 10.1109/SANER48275.2020.9054834]
   Burns B., 2016, 8 USENIX WORKSH HOT
   Carey S, 2021, Complexity is killing software developers
   Cito J, 2017, IEEE WORK CONF MIN S, P323, DOI 10.1109/MSR.2017.67
   Di Martino B, 2016, SOFTWARE PRACT EXPER, V46, P983, DOI 10.1002/spe.2336
   Docker Inc, 2022, Control startup and shutdown order in compose
   Docker Inc, Extend your compose file
   Docker Inc, 2023, Using profiles with compose
   Docker Inc, 2023, Ways to set environment variables with compose
   Docker Inc, 2020, Announcing the compose specification
   Docker Inc, 2023, Fragments
   Docker Inc, 2023, Merge compose files
   Docker Inc, 2022, Docker compose specification
   Docker Inc, 2023, How to use secrets in docker compose
   Endres C, 2017, NINTH INTERNATIONAL CONFERENCES ON PERVASIVE PATTERNS AND APPLICATIONS (PATTERNS 2017), P22
   Eng K, 2024, Replication Package of "Patterns of MultiContainer Composition for Service Orchestration with Docker Compose
   Eng K, 2021, Arxiv, DOI arXiv:2103.12298
   Falkenthal M, 2016, P INT C PURS PATT LA, P38
   Fehling C., 2014, Cloud Computing Patterns, DOI DOI 10.1007/978-3-7091-1568-8
   Gamma E., 1995, DESIGN PATTERNS ELEM
   Guerriero M, 2019, PROC IEEE INT CONF S, P580, DOI 10.1109/ICSME.2019.00092
   Hohpe G., 2004, Enterprise Integration Patterns: Designing, Building, and Deploying Messaging Solutions
   Hohpe G, 2017, Modern examples for enterprise integration patterns
   Ibrahim MH, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-10025-1
   Kane S. P., 2023, DOCKER RUNNING
   Kompose Authors, 2022, Kompose-convert your docker compose file to kubernetes or openshift
   Ksontini E, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P781, DOI 10.1109/ASE51524.2021.9678585
   Lin CY, 2020, PROC IEEE INT CONF S, P371, DOI 10.1109/ICSME46990.2020.00043
   McCarty S, 2016, Container tidbits: When should i break my application into multiple containers?
   Microsoft, 2022, Containerizing monolithic applications
   Miell I., 2019, Docker in Practice
   Munaiah N, 2017, EMPIR SOFTW ENG, V22, P3219, DOI 10.1007/s10664-017-9512-6
   Nerdctl Authors, 2023, nerdctl: Docker-compatible cli for containerd
   Nodiscc etal, 2022, Awesome-selfhosted
   Okteto Inc., 2023, Docker compose reference-okteto documentation
   Podman Compose Authors, 2023, Podman compose
   Podviaznikov A, 2017, The versatility of docker compose
   Rahman A, 2020, PROC INT CONF SOFTW, P752, DOI 10.1145/3377811.3380409
   Rahman A, 2020, EMPIR SOFTW ENG, V25, P3430, DOI 10.1007/s10664-020-09841-8
   Rahman A, 2019, PROC INT CONF SOFTW, P164, DOI 10.1109/ICSE.2019.00033
   Raj Pethuru., 2015, Learning Docker
   Rancher Labs, 2023, Rancher docs: Rancher compose
   Rodriguez MA, 2019, SOFTWARE PRACT EXPER, V49, P698, DOI 10.1002/spe.2660
   Seidel J., 1998, QUALITATIVE DATA ANA
   Shamim MSI, 2020, 2020 IEEE SECURE DEVELOPMENT (SECDEV 2020), P58, DOI 10.1109/SecDev45635.2020.00025
   Sousa T.B., 2015, P 22 C PATT LANG PRO
   Sousa TB, 2018, P 25 C PATT LANG PRO, P1
   Sousa TB, 2022, IEEE T SOFTWARE ENG, V48, P2128, DOI 10.1109/TSE.2021.3052177
   Sousa TB, 2018, EUROPLOP 2018: PROCEEDINGS OF THE 23RD EUROPEAN CONFERENCE ON PATTERN LANGUAGES OF PROGRAMS, DOI 10.1145/3282308.3282316
   Sousa TB, 2017, PROCEEDINGS OF THE 22ND EUROPEAN CONFERENCE ON PATTERN LANGUAGES OF PROGRAMS (EUROPLOP 2017), DOI 10.1145/3147704.3147720
   Spadini D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P908, DOI 10.1145/3236024.3264598
   The Kubernetes Authors, 2022, Kubernetes
   Traefik, 2022, Traefik docker documentation
   Truyen E, 2019, APPL SCI-BASEL, V9, DOI 10.3390/app9050931
   VanStijn S etal, 2023, Code of JSON Schema Compose Specification Found in Docker Compose Source Code
   Webb J, 2022, The container orchestrator landscape
   Xu TY, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS (ICSE-NIER), P49, DOI 10.1145/3183399.3183403
   Zhang Y, 2019, SCI CHINA INFORM SCI, V62, DOI 10.1007/s11432-017-9415-3
   Zhang Y, 2018, P INT COMP SOFTW APP, P138, DOI 10.1109/COMPSAC.2018.00026
NR 63
TC 0
Z9 0
U1 2
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAY
PY 2024
VL 29
IS 3
AR 65
DI 10.1007/s10664-024-10462-8
PG 41
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RE3S8
UT WOS:001225960000002
DA 2024-08-05
ER

PT J
AU Jabrayilzade, E
   Yurtoglu, A
   Tüzün, E
AF Jabrayilzade, Elgun
   Yurtoglu, Ayda
   Tuzun, Eray
TI Taxonomy of inline code comment smells
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Code comments; Comment smells; Inline code comments; Dataset; Taxonomy;
   Multivocal literature review
AB Code comments play a vital role in source code comprehension and software maintainability. It is common for developers to write comments to explain a code snippet, and commenting code is generally considered a good practice in software engineering. However, low-quality comments can have a detrimental effect on software quality or be ineffective for code understanding. This study aims to create a taxonomy of inline code comment smells and determine how frequently each smell type occurs in software projects. We conducted a multivocal literature review to define the initial taxonomy of inline comment smells. Afterward, we manually labeled 2447 inline comments from eight open-source projects where half of them were Java, and another half were Python projects. We created a taxonomy of 11 inline code comment smell types and found out that the smells exist in both Java and Python projects with varying degrees. Moreover, we conducted an online survey with 41 software practitioners to learn their opinions on these smells and their impact on code comprehension and software maintainability. The survey respondents generally agreed with the taxonomy; however, they reported that some smell types might have a positive effect on code comprehension in certain scenarios. We also opened pull requests and issues fixing the comment smells in the sampled projects, where we got a 27% acceptance rate. We share our manually labeled dataset online and provide implications for software engineering practitioners, researchers, and educators.
C1 [Jabrayilzade, Elgun; Yurtoglu, Ayda; Tuzun, Eray] Bilkent Univ, Ankara, Turkiye.
C3 Ihsan Dogramaci Bilkent University
RP Jabrayilzade, E (corresponding author), Bilkent Univ, Ankara, Turkiye.
EM elgun1999@gmail.com; ayda.yurtoglu@ug.bilkent.edu.tr;
   eraytuzun@cs.bilkent.edu.tr
RI Tuzun, Eray/AAD-7282-2021
OI Tuzun, Eray/0000-0002-5550-7816
FU Bilkent University
FX No Statement Available
CR Adams T, 2020, How to write a good code comment
   Aguilar JM, 2008, 13 tips to comment your code
   Allain A, 2023, The hows and whys of commenting c and c++ code
   Allamanis M, 2015, PR MACH LEARN RES, V37, P2123
   [Anonymous], 2018, Are code comments a code smell?
   archive, 2023, Writing code comments
   Asay M, 2019, The pros and cons (but mostly pros) of comments in code
   Atwood J, 2006, Code tells you how, comments tell you why
   Blasi A, 2021, J SYST SOFTWARE, V182, DOI 10.1016/j.jss.2021.111069
   Blasi A, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P242, DOI 10.1145/3213846.3213872
   Boccara J, 2017, To comment or not to comment? // that is the question
   Boswell Dustin, 2011, The Art of Readable Code: Simple and Practical Techniques for Writing Better Code
   Brack F, 2016, Code comment is a smell
   Chun C, 2023, Writing code and code comments
   Cochran WG., 1977, Sampling Techniques, V3
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Corazza A, 2018, SOFTWARE QUAL J, V26, P751, DOI 10.1007/s11219-016-9347-1
   Cronin M, 2019, What makes a good code comment?
   cs, 2023, Commenting
   de Souza SCB., 2005, P 23 ANN INT C DESIG, P68, DOI 10.1145/1085313.1085331
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   Deze Wang, 2019, IEEE Access, V7, P174200, DOI 10.1109/ACCESS.2019.2957424
   Dietrich E, 2017, Is there a correct way to comment your code?
   Dodds KC, 2015, Please, don't commit commented out code
   Dogan E, 2022, INFORM SOFTWARE TECH, V142, DOI 10.1016/j.infsof.2021.106737
   Fluri B, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P70, DOI 10.1109/WCRE.2007.21
   Fronczak S, 2018, What are the biggest code commenting fails you've seen?
   Fuex J, 2011, 5 best practices for commenting your code
   Garousi V, 2019, INFORM SOFTWARE TECH, V106, P101, DOI 10.1016/j.infsof.2018.09.006
   Garousi V, 2018, J SYST SOFTWARE, V138, P52, DOI 10.1016/j.jss.2017.12.013
   Geiser M, 2017, Why we comment code
   Godin K, 2015, SYST REV-LONDON, V4, DOI 10.1186/s13643-015-0125-0
   Goffi A, 2016, P 25 INT S SOFTW TES, DOI [DOI 10.1145/2931037.2931061, 10.1145/2931037.2931061]
   Graves A, 2012, STUD COMPUT INTELL, V385, P1, DOI [10.1162/neco.1997.9.8.1735, 10.1007/978-3-642-24797-2, 10.1162/neco.1997.9.1.1]
   Gvero T, 2015, ACM SIGPLAN NOTICES, V50, P416, DOI [10.1145/2814270.2814295, 10.1145/2858965.2814295]
   Haouari D, 2011, INT SYMP EMP SOFTWAR, P137, DOI 10.1109/ESEM.2011.22
   Hartzman C. S., 1993, Proceedings CASCON '93, P138
   Heartin, 2015, Good comments and bad comments in your program
   Henke M, 2018, 4 reasons why we need code comments
   Herath P, 2020, 9 tips that promote clean code: Writing comments in a good way
   Hilton P, 2014, 7 ways to write bad comments
   Hilton P, 2014, 3 kinds of good comments
   Hofmann F, 2023, Commenting python code
   Huang Y, 2020, IEEE T RELIAB, V69, P88, DOI 10.1109/TR.2019.2931725
   Huy NVK, 2021, Code review: Please remove comments from your code
   Iammarino M, 2020, IEEE IJCNN, DOI 10.1109/ijcnn48605.2020.9207651
   Jabrayilzade E, 2021, IEEE INT WORK C SO, P131, DOI 10.1109/SCAM52516.2021.00024
   Januska A, 2012, How to write code comments well
   Jiang Zhen Ming, 2006, MSR '06: Proceedings of the 2006 international workshop on Mining software repositories, P179, DOI [10.1145/1137983.1138030, DOI 10.1145/1137983.1138030]
   Jingyi Zhang, 2018, Web Information Systems and Applications. 15th International Conference, WISA 2018. Proceedings: Lecture Notes in Computer Science (LNCS 11242), P39, DOI 10.1007/978-3-030-02934-0_4
   Keeton B, 2019, How to comment your code like a pro: Best practices and good habits
   Khamis N, 2010, LECT NOTES COMPUT SC, V6177, P68, DOI 10.1007/978-3-642-13881-2_7
   Khan JY, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P318, DOI 10.1109/SANER50967.2021.00037
   Kitchenham B. e. a., 2007, Technical report EBSE-2007-01, DOI DOI 10.1145/1134285.1134500
   Ko AJ, 2006, IEEE T SOFTWARE ENG, V32, P971, DOI 10.1109/TSE.2006.116
   Koornhof P, 2015, Code comments are lies
   Krasnov M, 2020, Improve code readability by getting rid of comments
   Kunk J, 2011, To comment or not to comment
   Larson D, 2023, Coding and comment style
   LaToza T. D., 2006, 28th International Conference on Software Engineering Proceedings, P492, DOI 10.1145/1134285.1134355
   Lelli F, 2019, Best practices on how to write comments in your code
   Lin Tan, 2007, Operating Systems Review, V41, P145, DOI 10.1145/1323293.1294276
   Liu ZX, 2023, IEEE T SOFTWARE ENG, V49, P1, DOI 10.1109/TSE.2021.3138909
   Liu ZX, 2020, IEEE INT CONF AUTOM, P585, DOI 10.1145/3324884.3416581
   Louis A, 2018, Arxiv, DOI arXiv:1806.04616
   Louis A, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2020), P21, DOI 10.1145/3377816.3381736
   Malik H, 2008, PROC IEEE INT CONF S, P167, DOI 10.1109/ICSM.2008.4658065
   Marcus R, 2018, Good comment, bad comment
   Martin R.C., 2009, Clean Code: A Handbook of Agile Software Craftmanship
   McDonald JC, 2019, To comment or not to comment?
   McEwen M, 2018, I'll delete your commented code without reading it and i'm not sorry
   Medeiros F, 2019, EMPIR SOFTW ENG, V24, P1693, DOI 10.1007/s10664-018-9666-x
   Misra V, 2020, PROCEEDINGS OF THE 35TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING (SAC'20), P110, DOI 10.1145/3341105.3374009
   Molloy S, 2020, Clean code-code versus comments
   Morlion P, 2017, Commented out code is junk in your codebase
   Nayuki, 2018, Don't share commented-out code
   Neuhaus C, 2006, PORTAL-LIBR ACAD, V6, P127, DOI 10.1353/pla.2006.0026
   Nguyen N, 2020, Why good codes don't need comments
   Nielebock S, 2019, EMPIR SOFTW ENG, V24, P1418, DOI 10.1007/s10664-018-9664-z
   Norlander B, 2019, Stop writing code comments
   ofWashington U, 2023, Commenting
   Ousterhout J, 2015, Writing comments
   Padioleau Y, 2009, PROC INT CONF SOFTW, P331, DOI 10.1109/ICSE.2009.5070533
   Pandita R, 2012, PROC INT CONF SOFTW, P815, DOI 10.1109/ICSE.2012.6227137
   Panthaplackel S, 2021, AAAI
   Panthaplackel S, 2020, Arxiv, DOI arXiv:2004.12169
   Parashar A, 2020, How to write comments the right way
   Pascarella L, 2017, IEEE WORK CONF MIN S, P227, DOI 10.1109/MSR.2017.63
   Paul J, 2021, 10 best practices to follow while writing code comments
   Qamar Khushbakht Ali, 2022, Information and Software Technology, DOI 10.1016/j.infsof.2022.106972
   Rabbi F, 2020, INT C PROGRAM COMPRE, P371, DOI 10.1145/3387904.3389286
   Rani P, 2021, IEEE INT WORK C SO, P165, DOI 10.1109/SCAM52516.2021.00028
   Raskin Jef, 2005, Queue, V3, P64, DOI DOI 10.1145/1053331.1053354
   Ratol IK, 2017, IEEE INT CONF AUTOM, P112, DOI 10.1109/ASE.2017.8115624
   Renmin Wang, 2019, 2019 International Conference on Intelligent Computing, Automation and Systems (ICICAS), P570, DOI 10.1109/ICICAS48597.2019.00125
   Reuveni D, 2017, Code health: To comment or not to comment?
   Saha K, 2023, When should you add comments to your code?
   Schults C, 2017, Learn which types of comments should be avoided
   Sen A, 2023, Optimal survey length: How long survey lengths can affect data quality
   Shin Hwei Tan, 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P260, DOI 10.1109/ICST.2012.106
   Shinyama Y, 2018, ASIA PAC SOFWR ENG, P325, DOI 10.1109/APSEC.2018.00047
   Sorens M, 2017, Fighting evil in your code: Comments on comments
   Sourour B, 2017, Putting comments in code: the good, the bad, and the ugly
   Spertus E, 2021, Best practices for writing code comments
   Sridhara G, 2016, PROCEEDINGS OF THE 9TH INDIA SOFTWARE ENGINEERING CONFERENCE, P16, DOI 10.1145/2856636.2856638
   Steidl D, 2013, CONF PROC INT SYMP C, P83, DOI 10.1109/ICPC.2013.6613836
   Storey MA, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P251, DOI 10.1145/1368088.1368123
   Struyf E, 2021, To write code comments or not, it should not be a question
   Stulova N, 2020, IEEE INT WORK C SO, P65, DOI 10.1109/SCAM51674.2020.00012
   Tan Lin, 2007, P 11 USENIX WORKSH H, V7, P49
   TENNY T, 1988, IEEE T SOFTWARE ENG, V14, P1271, DOI 10.1109/32.6171
   Tozzi C, 2020, 5 code commenting don'ts
   Trivedi D, 2019, Don't comment your code, rewrite it!
   Troisi M, 2023, Useless comments can ruin your code reviews. here's how to erase them
   Vogel P, 2013, No comment: Why commenting code is still a bad idea
   Wen FC, 2019, INT C PROGRAM COMPRE, P53, DOI 10.1109/ICPC.2019.00019
   Wong E, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P620, DOI 10.1109/ICSE.2015.78
   Wong E, 2013, IEEE INT CONF AUTOM, P562, DOI 10.1109/ASE.2013.6693113
   Woodfield S. N., 1981, 5th International Conference on Software Engineering, P215
   Woost A, 2011, Don't comment your code!
   Zhai J, 2020, PROC INT CONF SOFTW, P1359, DOI 10.1145/3377811.3380427
   Zhai J, 2016, PROC INT CONF SOFTW, P380, DOI 10.1145/2884781.2884881
   Zhane J, 2023, Writing comments in python (guide)
   Zhong H, 2009, IEEE INT CONF AUTOM, P307, DOI 10.1109/ASE.2009.94
NR 124
TC 1
Z9 1
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAY
PY 2024
VL 29
IS 3
AR 58
DI 10.1007/s10664-023-10425-5
PG 53
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MX4R0
UT WOS:001196926900001
OA hybrid
DA 2024-08-05
ER

PT J
AU Toro, AD
   Fernández, P
   Bernárdez, B
   Weinman, N
   Akalin, A
   Fox, A
AF Duran Toro, Amador
   Fernandez, Pablo
   Bernardez, Beatriz
   Weinman, Nathaniel
   Akalin, Aslihan
   Fox, Armando
TI Exploring Gender Bias In Remote Pair Programming Among Software
   Engineering Students: The twincode Original Study And First External
   Replication
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Gender bias; Pair programming; Remote pair programming; Distributed pair
   programming; Software Engineering education; Experiment replication
ID HIGHER-EDUCATION; GUIDELINES
AB ContextWomen have historically been underrepresented in Software Engineering, due in part to the stereotyped assumption that women are less technically competent than men. Pair programming is both widely used in industry and has been shown to increase student interest in Software Engineering, particularly among women; but if those same gender biases are also present in pair programming, its potential for attracting women to the field could be thwarted.ObjectiveWe aim to explore the effects of gender bias in pair programming. Specifically, in a remote setting in which students cannot directly observe the gender of their peers, we study whether the perception of the partner, the behavior during programming, or the style of communication of Software Engineering students differ depending on the perceived gender of their remote partner. To our knowledge, this is the first study specifically focusing on the impact of gender stereotypes and bias within pairs in pair programming.MethodWe have developed an online pair-programming platform (twincode) that provides a collaborative editing window and a chat pane, both of which are heavily instrumented. Students in the control group had no information about their partner's gender, whereas students in the treatment group could see a gendered avatar representing the other participant as a man or as a woman. The gender of the avatar was swapped between programming tasks to analyze 45 variables related to the collaborative coding behavior, chat utterances, and questionnaire responses of 46 pairs in the original study at the University of Seville, and 23 pairs in the external replication at the University of California, Berkeley.ResultsWe did not observe any statistically significant effect of the gender bias treatment, nor any interaction between the perceived partner's gender and subject's gender, in any of the 45 response variables measured in the original study. In the external replication, we observed statistically significant effects with moderate to large sizes in four dependent variables within the experimental group, comparing how subjects acted when their partners were represented as a man or a woman.ConclusionsThe results in the original study do not show any clear effect of the treatment in remote pair programming among current Software Engineering students. In the external replication, it seems that students delete more source code characters when they have a woman partner, and communicate using more informal utterances, reflections and yes/no questions when they have a man partner, although these results must be considered inconclusive because of the small number of subjects in the replication, and because when multiple test corrections are applied, only the result about informal utterances remains significant. In any case, more mixed methods replications are needed in order to confirm or refute the results in the same and other Software Engineering students populations.
C1 [Duran Toro, Amador; Fernandez, Pablo; Bernardez, Beatriz] Univ Seville, Inst I3US, Seville, Spain.
   [Duran Toro, Amador; Fernandez, Pablo; Bernardez, Beatriz] Univ Seville, SCORE Lab, Seville, Spain.
   [Weinman, Nathaniel; Akalin, Aslihan; Fox, Armando] Univ Calif Berkeley, Comp Sci Div, Berkeley, CA USA.
C3 University of Sevilla; University of Sevilla; University of California
   System; University of California Berkeley
RP Toro, AD (corresponding author), Univ Seville, Inst I3US, Seville, Spain.; Toro, AD (corresponding author), Univ Seville, SCORE Lab, Seville, Spain.
EM amador@us.es; pablofm@us.es; beat@us.es; nweinman@berkeley.edu;
   asliakalin@berkeley.edu; fox@berkeley.edu
RI Durán, Amador/O-4248-2014
OI Durán, Amador/0000-0003-3630-5511; Bernardez Jimenez,
   Beatriz/0000-0002-9390-3772
FU Universidad de Sevilla/CBUA - MCIN/AEI [PID2021-126227NB-C21,
   PID2021-126227NBC22]; European Union "ERDF a way of making Europe" -
   MCIN/AEI [TED2021-131023B-C21, TED2021-131023B-C22]; European Union
   "NextGen-erationEU"/PRTR; EKIPMENT-PLUS [P18-FR-2895]; Junta
   deAndalucia/ERDF, European Union [US-1381595]; Universidad de Sevilla;
   University of California
FX Funding for open access publishing: Universidad de Sevilla/CBUA. This
   work has been partially supported by grants PID2021-126227NB-C21,
   PID2021-126227NBC22 funded by MCIN/AEI/10.13039/501100011033/FEDER and
   European Union "ERDF a way of making Europe";
   TED2021-131023B-C21,TED2021-131023B-C22 funded by
   MCIN/AEI/10.13039/501100011033 and European Union
   "NextGen-erationEU"/PRTR; EKIPMENT-PLUS (P18-FR-2895), MEMENTO
   (US-1381595) funded by Junta deAndalucia/ERDF, European Union; and
   Universidad de Sevilla under the 2021 and 2023 Grants for the Exchange
   Mobility of Professors, Researchers, and PhD Students between the
   University of Seville and the University of California
CR AAUW, 2002, The STEM gap: Women and girls in science, technology, engineering and mathematics
   Akalin A, 2021, ICER 2021: PROCEEDINGS OF THE 17TH ACM CONFERENCE ON INTERNATIONAL COMPUTING EDUCATION RESEARCH, P435, DOI 10.1145/3446871.3469790
   Al-Jarrah A, 2016, LECT NOTES COMPUT SC, V9753, P583, DOI 10.1007/978-3-319-39483-1_53
   Allaire-Duquette G, 2022, CAN J SCI MATH TECHN, V22, P87, DOI 10.1007/s42330-022-00193-7
   [Anonymous], 2003, Proceedings of the 7th International Conference on Empirical Assessment in Software Engineering
   [Anonymous], 2006, Sociological Methods: A Sourcebook
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Bendig E., 2019, Verhaltenstherapie, DOI [DOI 10.1159/000501812, https://doi.org/10.1159/000501812]
   Chaparro EA, 2005, P 17 WORKSHOP PSYCHO
   Choi KS, 2013, P ANN HICSS, P4817, DOI 10.1109/HICSS.2013.209
   Choi KS, 2015, BEHAV INFORM TECHNOL, V34, P825, DOI 10.1080/0144929X.2014.937460
   Cohen L., 2018, Research methods in education, V8th ed.
   Collins E, 2021, Google Research
   Cruz M, 2023, COMPUTING, V105, P1189, DOI 10.1007/s00607-022-01133-x
   Estácio BJD, 2015, INFORM SOFTWARE TECH, V63, P1, DOI 10.1016/j.infsof.2015.02.011
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   Dimock M., 2019, Defining Generations: Where Millennials End and Generation Z Begins
   Duran A, 2021, P ESEM 2021 REGISTER
   Eckles D, 2016, P NATL ACAD SCI USA, V113, P7316, DOI 10.1073/pnas.1511201113
   El-Refai K, 2023, P 54 ACM TECHNICAL S, V2, P1264, DOI [10.1145/3545947.3573239, DOI 10.1145/3545947.3573239]
   Falessi D, 2018, EMPIR SOFTW ENG, V23, P452, DOI 10.1007/s10664-017-9523-3
   Faul F, 2007, BEHAV RES METHODS, V39, P175, DOI 10.3758/BF03193146
   Fisher M, 2006, INFORM EDUC, V5, P47
   Galdo AC, 2022, PROCEEDINGS OF THE 53RD ACM TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION (SIGCSE 2022), VOL 1, P335, DOI 10.1145/3478431.3499324
   Gomez O, 2017, P 20 IBERO AM C SOFT, P197
   GraphPad, 2023, What is the difference between ordinal, interval and ratio variables? Why should I care?
   Gravetter F. J., 2004, Statistics for the behavioral sciences
   Greer S, 2019, JMIR MHEALTH UHEALTH, V7, DOI 10.2196/15018
   Hanks B, 2011, COMPUT SCI EDUC, V21, P135, DOI 10.1080/08993408.2011.579808
   Hannay JE, 2010, IEEE T SOFTWARE ENG, V36, P61, DOI 10.1109/TSE.2009.41
   Hartsell T, 2005, INT J INF COMMUN TEC, V1, P42, DOI 10.4018/jicte.2005010105
   Hawlitschek A, 2023, COMPUT SCI EDUC, V33, P400, DOI 10.1080/08993408.2022.2039504
   Hofer SI, 2015, INT J SCI EDUC, V37, P2879, DOI 10.1080/09500693.2015.1114190
   Hopper J, 2014, How to label your 10-point scale
   Jarratt L, 2019, PROCEEDINGS OF THE 2019 ACM CONFERENCE ON INNOVATION AND TECHNOLOGY IN COMPUTER SCIENCE EDUCATION (ITICSE '19), P176, DOI 10.1145/3304221.3319782
   Katira N, 2005, PROC INT CONF SOFTW, P625
   KaurChahal K, 2021, A systematic literature review, P251
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Korber P, 2021, 2021 IEEE FRONTIERS IN EDUCATION CONFERENCE (FIE 2021), DOI 10.1109/FIE49875.2021.9637186
   Kuttal SK, 2019, S VIS LANG HUM CEN C, P75, DOI [10.1109/VLHCC.2019.8818790, 10.1109/vlhcc.2019.8818790]
   Lim R, 2021, OpenAI
   Martell RF, 1996, AM PSYCHOL, V51, P157, DOI 10.1037/0003-066X.51.2.157
   McAuliffe A, 2022, 2022 IEEE S VISUAL L, P1, DOI [10.1109/VL/HCC53370.2022.9833146, DOI 10.1109/VL/HCC53370.2022.9833146]
   Medel P, 2017, PROCEEDINGS OF THE 2017 ACM SIGCSE TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION (SIGCSE'17), P411, DOI 10.1145/3017680.3017794
   Navarro D., 2018, Learning statistics with R: A tutorial for psychology students and other beginners
   Neto FGD, 2019, J SYST SOFTWARE, V156, P246, DOI 10.1016/j.jss.2019.07.002
   Newser, 2023, This university has the most stressed-out students
   O'Connor C, 2020, INT J QUAL METH, V19, DOI 10.1177/1609406919899220
   Oda FS, 2022, J EXP ANAL BEHAV, V118, P24, DOI 10.1002/jeab.763
   RDocumentation, 2023, adjust: Adjust p-values for multiple comparisons
   Rodríguez FJ, 2017, PROCEEDINGS OF THE 2017 ACM SIGCSE TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION (SIGCSE'17), P507, DOI 10.1145/3017680.3017748
   Saini M, 2021, Empirical studies on using pair programming as a pedagogical tool in higher education courses: A systematic literature review
   Salleh N, 2014, EMPIR SOFTW ENG, V19, P714, DOI 10.1007/s10664-012-9238-4
   Salleh N, 2011, IEEE T SOFTWARE ENG, V37, P509, DOI 10.1109/TSE.2010.59
   Salleh Norsaremah., 2010, Proceedings of the 2010 ACM-IEEE International Symposium on Empirical Software Engineering and Measurement, ESEM TO, p22:1
   Samara O, 2021, THER ADV INFECT DIS, V8, DOI 10.1177/20499361211026717
   Sfetsos P, 2009, EMPIR SOFTW ENG, V14, P187, DOI 10.1007/s10664-008-9093-5
   STEM Women, 2021, Percentages of women in STEM statistics
   STEVENS SS, 1946, SCIENCE, V103, P677, DOI 10.1126/science.103.2684.677
   Stotts D, 2003, LECT NOTES COMPUT SC, V2753, P129
   Study International, 2016, Students at these U.S. universities are under the most stress
   Syed M, 2015, EMERG ADULTHOOD, V3, P375, DOI 10.1177/2167696815587648
   Terrell J, 2017, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.111
   Thomas L., 2003, SIGCSE Bulletin, V35, P363, DOI 10.1145/792548.612007
   UCLA: Statistical Consulting Group, 2022, What does cronbach's alpha mean?
   University of California Berkeley, 2021, Demographic information
   University of Seville, 2021, Statistical yearbook 2020-2021
   Werner LL, 2004, J Educ Resour Comput, V4
   Wohlin C., 2012, Experimentation in Software Engineering, DOI [10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Xinogalos S, 2017, IEEE GLOB ENG EDUC C, P1513, DOI 10.1109/EDUCON.2017.7943050
   Ying Kimberly Michelle, 2020, Proceedings of the ACM on Human-Computer Interaction, V4, DOI 10.1145/3432952
   Ying KM, 2021, 2021 C RES EQUITABLE, P1
NR 72
TC 0
Z9 0
U1 6
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2024
VL 29
IS 2
AR 40
DI 10.1007/s10664-023-10416-6
PG 44
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GP0Z8
UT WOS:001153768000001
OA hybrid
DA 2024-08-05
ER

PT J
AU Feng, Q
   Liu, SW
   Ji, H
   Ma, XT
   Liang, P
AF Feng, Qiong
   Liu, Shuwen
   Ji, Huan
   Ma, Xiaotian
   Liang, Peng
TI An empirical study of untangling patterns of two-class dependency cycles
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Dependency cycle; Untangling pattern; Counterintuitive in refactoring
   cycles
AB Dependency cycles pose a significant challenge to software quality and maintainability. However, there is limited understanding of how practitioners resolve dependency cycles in real-world scenarios. This paper presents an empirical study investigating the recurring patterns employed by software developers to resolve dependency cycles between two classes in practice. We analyzed the data from 38 open-source projects across different domains and manually inspected hundreds of cycle untangling cases. Our findings reveal that developers tend to employ five recurring patterns to address dependency cycles. The chosen patterns are not only determined by dependency relations between cyclic classes, but also highly related to their design context, i.e., how cyclic classes depend on or are depended by their neighbor classes. Through this empirical study, we also discovered three common counterintuitive solutions developers usually adopted during cycles' handling. These recurring patterns and common counterintuitive solutions observed in dependency cycles' practice can serve as a taxonomy to improve developers' awareness and also be used as learning materials for students in software engineering and inexperienced developers. Our results also suggest that, in addition to considering the internal structure of dependency cycles, automatic tools need to consider the design context of cycles to provide better support for refactoring dependency cycles.
C1 [Feng, Qiong; Liu, Shuwen; Ji, Huan; Ma, Xiaotian] Nanjing Univ Sci & Technol, Sch Comp Sci, Nanjing, Peoples R China.
   [Liang, Peng] Wuhan Univ, Sch Comp Sci, Wuhan, Peoples R China.
C3 Nanjing University of Science & Technology; Wuhan University
RP Liang, P (corresponding author), Wuhan Univ, Sch Comp Sci, Wuhan, Peoples R China.
EM qiongfeng@njust.edu.cn; hyggen@njust.edu.cn; alex@njust.edu.cn;
   xyzboom@njust.edu.cn; liangp@whu.edu.cn
RI Liu, Helen/GYU-5446-2022
FU National Natural Science Foundation of China [62172311]; National
   Natural Science Foundation of China (NSFC)
FX This work is supported by the National Natural Science Foundation of
   China (NSFC) under Grant No. 62172311.
CR Bavota G, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P692, DOI 10.1109/ICSE.2013.6606615
   Cai HY, 2018, IEEE T KNOWL DATA EN, V30, P1616, DOI 10.1109/TKDE.2018.2807452
   Campbell JL, 2013, SOCIOL METHOD RES, V42, P294, DOI 10.1177/0049124113500475
   Caracciolo A, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P482, DOI 10.1109/SANER.2016.11
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Cui D, 2022, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSME55016.2022.00033
   Dietrich J, 2010, LECT NOTES COMPUT SC, V6093, P135, DOI 10.1007/978-3-642-13821-8_11
   Feng Qiong, 2023, Zenodo, DOI 10.5281/ZENODO.8048164
   Feng Q, 2023, J SOFTW-EVOL PROC, V35, DOI 10.1002/smr.2496
   Feng Q, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P986, DOI 10.1109/ASE.2019.00095
   Ferreira T, 2023, IEEE T SOFTWARE ENG, V49, P3344, DOI 10.1109/TSE.2023.3244123
   Fowler M., 1999, Refactoring: Improving the Design of Existing Programs
   Goldstein M, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P155, DOI 10.1145/2591062.2591182
   Grover A, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P855, DOI 10.1145/2939672.2939754
   Jiang N, 2021, PROC INT CONF SOFTW, P1161, DOI 10.1109/ICSE43902.2021.00107
   Kim D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P802, DOI 10.1109/ICSE.2013.6606626
   Kim M, 2014, IEEE T SOFTWARE ENG, V40, P633, DOI 10.1109/TSE.2014.2318734
   Koyuncu A, 2020, EMPIR SOFTW ENG, V25, P1980, DOI 10.1007/s10664-019-09780-z
   Lacerda G, 2020, J SYST SOFTWARE, V167, DOI 10.1016/j.jss.2020.110610
   Lakos J., 1996, LARGE SCALE C SOFTWA
   Li RY, 2022, J SOFTW-EVOL PROC, V34, DOI 10.1002/smr.2423
   Li Y, 2020, PROC INT CONF SOFTW, P602, DOI 10.1145/3377811.3380345
   Lin Y, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P535, DOI 10.1145/2950290.2950317
   Liu H, 2015, IEEE T SOFTWARE ENG, V41, P887, DOI 10.1109/TSE.2015.2427831
   Liu WJ, 2021, SCI CHINA INFORM SCI, V64, DOI 10.1007/s11432-019-2745-5
   Lu YF, 2016, PROC INT CONF SOFTW, P535, DOI 10.1145/2884781.2884874
   MacCormack A, 2006, MANAGE SCI, V52, P1015, DOI 10.1287/mnsc.1060.0552
   Melton H, 2007, EMPIR SOFTW ENG, V12, P389, DOI 10.1007/s10664-006-9033-1
   Meng N, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P502, DOI 10.1109/ICSE.2013.6606596
   Mo R, 2021, IEEE T SOFTWARE ENG, V47, P1008, DOI 10.1109/TSE.2019.2910856
   Oyetoyan TD, 2015, PROC IEEE INT CONF S, P231, DOI 10.1109/ICSM.2015.7332469
   Oyetoyan TD, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P283, DOI 10.1109/CSMR-WCRE.2014.6747180
   Oyetoyan TD, 2013, J SYST SOFTWARE, V86, P3162, DOI 10.1016/j.jss.2013.07.039
   Perozzi B, 2014, PROCEEDINGS OF THE 20TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'14), P701, DOI 10.1145/2623330.2623732
   Peruma A, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10045-x
   Shah SMA, 2012, EUR CON SFTWR MTNCE, P359, DOI 10.1109/CSMR.2012.44
   Shah SMA, 2013, PROC IEEE INT CONF S, P160, DOI 10.1109/ICSM.2013.27
   SHARIR M, 1981, COMPUT MATH APPL, V7, P67, DOI 10.1016/0898-1221(81)90008-0
   Sharma T, 2015, IEEE SOFTWARE, V32, P44, DOI 10.1109/MS.2015.105
   Snipes W, 2018, EUROMICRO CONF PROC, P400, DOI 10.1109/SEAA.2018.00071
   Tan SH, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P471, DOI 10.1109/ICSE.2015.65
   Terra R, 2018, J SYST SOFTWARE, V138, P19, DOI 10.1016/j.jss.2017.11.073
   Tsantalis N, 2022, IEEE T SOFTWARE ENG, V48, P930, DOI 10.1109/TSE.2020.3007722
   Tsantalis N, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P4, DOI 10.1109/SANER.2018.8330192
   Tsantalis N, 2009, IEEE T SOFTWARE ENG, V35, P347, DOI 10.1109/TSE.2009.1
   Xiao L, 2022, IEEE T SOFTWARE ENG, V48, P3686, DOI 10.1109/TSE.2021.3102221
   Xu MJ, 2021, SIAM REV, V63, P825, DOI 10.1137/20M1386062
   Zazworka N, 2014, SOFTWARE QUAL J, V22, P403, DOI 10.1007/s11219-013-9200-8
NR 48
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2024
VL 29
IS 2
AR 56
DI 10.1007/s10664-023-10438-0
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KP2B0
UT WOS:001181093200001
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Xiao, T
   Zeng, ZL
   Wang, D
   Hata, H
   McIntosh, S
   Matsumoto, K
AF Xiao, Tao
   Zeng, Zhili
   Wang, Dong
   Hata, Hideaki
   McIntosh, Shane
   Matsumoto, Kenichi
TI Quantifying and characterizing clones of self-admitted technical debt in
   build systems
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Self-admitted technical debt; Build system; Build maintenance
AB Self-Admitted Technical Debt (SATD) annotates development decisions that intentionally exchange long-term software artifact quality for short-term goals. Recent work explores the existence of SATD clones (duplicate or near duplicate SATD comments) in source code. Cloning of SATD in build systems (e.g., CMake and Maven) may propagate suboptimal design choices, threatening qualities of the build system that stakeholders rely upon (e.g., maintainability, reliability, repeatability). Hence, we conduct a large-scale study on 50,608 SATD comments extracted from Autotools, CMake, Maven, and Ant build systems to investigate the prevalence of SATD clones and to characterize their incidences. We observe that: (i) prior work suggests that 41-65% of SATD comments in source code are clones, but in our studied build system context, the rates range from 62% to 95%, suggesting that SATD clones are a more prevalent phenomenon in build systems than in source code; (ii) statements surrounding SATD clones are highly similar, with 76% of occurrences having similarity scores greater than 0.8; (iii) a quarter of SATD clones are introduced by the author of the original SATD statements; and (iv) among the most commonly cloned SATD comments, external factors (e.g., platform and tool configuration) are the most frequent locations, limitations in tools and libraries are the most frequent causes, and developers often copy SATD comments that describe issues to be fixed later. Our work presents the first step toward systematically understanding SATD clones in build systems and opens up avenues for future work, such as distinguishing different SATD clone behavior, as well as designing an automated recommendation system for repaying SATD effectively based on resolved clones.
C1 [Xiao, Tao; Matsumoto, Kenichi] Nara Inst Sci & Technol, Ikoma, Japan.
   [Zeng, Zhili; McIntosh, Shane] Univ Waterloo, Waterloo, ON, Canada.
   [Wang, Dong] Tianjin Univ, Coll Intelligence & Comp, Tianjin, Peoples R China.
   [Hata, Hideaki] Shinshu Univ, Matsumoto, Japan.
C3 Nara Institute of Science & Technology; University of Waterloo; Tianjin
   University; Shinshu University
RP Xiao, T (corresponding author), Nara Inst Sci & Technol, Ikoma, Japan.; Wang, D (corresponding author), Tianjin Univ, Coll Intelligence & Comp, Tianjin, Peoples R China.
EM tao.xiao.ts2@is.naist.jp; z75zeng@uwaterloo.ca;
   d.wang@ait.kyushu-u.ac.jp; hata@shinshu-u.ac.jp;
   shane.mcintosh@uwaterloo.ca; matumoto@is.naist.jp
RI Hata, Hideaki/N-7103-2019
OI Hata, Hideaki/0000-0003-0708-5222; Xiao, Tao/0000-0003-4070-585X
FU Japan Society for the Promotion of Science [JP23KJ1589, JP20H05706,
   JP23K16864]; JSPS [JPMJPR22P6]; JST PRESTO
FX This work was supported by JSPS Grant-in-Aid for JSPS Fellows
   JP23KJ1589, JSPS KAKENHI Grant Numbers JP20H05706, JP23K16864, and JST
   PRESTO Grant Number JPMJPR22P6.
CR Ahasanuzzaman M, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P402, DOI 10.1145/2901739.2901770
   Alves Nicolli S. R., 2014, 2014 Sixth International Workshop on Managing Technical Debt. Proceedings, P1, DOI 10.1109/MTD.2014.9
   Bavota G, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P315, DOI [10.1145/2901739.2901742, 10.1109/MSR.2016.040]
   Bettenburg N, 2008, PROC IEEE INT CONF S, P337, DOI 10.1109/ICSM.2008.4658082
   Bird C, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P1, DOI 10.1109/MSR.2009.5069475
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Cunningham W., 1993, OOPS Messenger, V4, P29
   Dabic O, 2021, IEEE WORK CONF MIN S, P560, DOI 10.1109/MSR52588.2021.00074
   EISENHARDT KM, 1989, ACAD MANAGE REV, V14, P532, DOI 10.2307/258557
   El Zanaty F, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3239525
   Fisher R., 1932, Statistical Methods for Research Workers, DOI DOI 10.1007/978-1-4612-4380-96
   Gallaba K, 2020, IEEE T SOFTWARE ENG, V46, P33, DOI 10.1109/TSE.2018.2838131
   Guo ZQ, 2019, Arxiv, DOI arXiv:1910.13238
   Hirao T, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P578, DOI 10.1145/3338906.3338949
   Hong Y, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P507, DOI 10.1145/3540250.3549119
   Huang Q, 2018, EMPIR SOFTW ENG, V23, P418, DOI 10.1007/s10664-017-9522-4
   Juergens E, 2011, P 5 INT WORKSH SOFTW, P67
   Kamienski A, 2023, EMPIR SOFTW ENG, V28, DOI 10.1007/s10664-022-10256-w
   Kashiwa Y, 2022, INFORM SOFTWARE TECH, V146, DOI 10.1016/j.infsof.2022.106855
   Koschke Rainer, 2007, DAGST SEM P
   Kumfert G., 2002, SOFTWARE DOE HIDDEN
   Li JY, 2012, PROC INT CONF SOFTW, P310, DOI 10.1109/ICSE.2012.6227183
   Li ZX, 2022, IEEE T SOFTWARE ENG, V48, P1309, DOI 10.1109/TSE.2020.3018726
   Liu ZX, 2018, PROC IEEE ACM INT C, P9, DOI 10.1145/3183440.3183478
   Maipradit R, 2020, IEEE INT WORK C SO, P54, DOI 10.1109/SCAM51674.2020.00011
   Maipradit R, 2020, EMPIR SOFTW ENG, V25, P3770, DOI 10.1007/s10664-020-09854-3
   Maldonado ED, 2015, 2015 IEEE 7TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD) PROCEEDINGS, P9, DOI 10.1109/MTD.2015.7332619
   Maldonado ED, 2017, IEEE T SOFTWARE ENG, V43, P1044, DOI 10.1109/TSE.2017.2654244
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Manning C., 2003, Proceedings of the 2003 Conference of the North American Chapter of the Association for Computational Linguistics on Human Language Technology: Tutorials
   McIntosh S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P145, DOI 10.1145/2591062.2591181
   McIntosh S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P141, DOI 10.1145/1985793.1985813
   Miyake Y, 2017, STUD COMPUT INTELL, V695, P17, DOI 10.1007/978-3-319-51472-7_2
   Mondal M, 2019, J SYST SOFTWARE, V158, DOI 10.1016/j.jss.2019.110407
   Muse BA, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10119-4
   Nejati M, 2023, IN PRESS
   Potdar A, 2014, PROC IEEE INT CONF S, P91, DOI 10.1109/ICSME.2014.31
   Reimers N, 2019, 2019 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING AND THE 9TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING (EMNLP-IJCNLP 2019), P3982
   Ren XX, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3324916
   Rigby PC, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P541, DOI 10.1145/1985793.1985867
   Romano J., 2006, ANN M FLOR ASS I RES, DOI DOI 10.1017/CBO9781107415324.004
   ROUSSEEUW PJ, 1987, J COMPUT APPL MATH, V20, P53, DOI 10.1016/0377-0427(87)90125-7
   Roy C. K., 2007, A survey on software clone detection research
   Scikit-Learn library, 2023, Countvectorizer
   Scikit-Learn library, 2023, Dbscan
   Sierra G, 2019, J SYST SOFTWARE, V152, P70, DOI 10.1016/j.jss.2019.02.056
   Simoudis E., 1996, KDD 96 P 2 INT C KNO, P226
   Smith Peter, 2011, Software Build Systems: Principles and Experience, V1st
   Tsuru T, 2021, INT WORKS SOFTW CLON, P1, DOI 10.1109/IWSC53727.2021.00007
   van Bladel B, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P492, DOI [10.1109/SANER48275.2020.9054798, 10.1109/saner48275.2020.9054798]
   Vidoni M, 2021, IEEE WORK CONF MIN S, P179, DOI 10.1109/MSR52588.2021.00030
   Viera AJ, 2005, FAM MED, V37, P360
   Wang D, 2021, INFORM SOFTWARE TECH, V139, DOI 10.1016/j.infsof.2021.106637
   Wehaibi S, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P179, DOI 10.1109/SANER.2016.72
   Xavier L, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10203-9
   Xavier L, 2020, IEEE WORK CONF MIN S, P137, DOI 10.1145/3379597.3387459
   Xiao Tao, 2023, Zenodo, DOI 10.5281/ZENODO.10055463
   Xiao T, 2023, EMPIR SOFTW ENG, V28, DOI 10.1007/s10664-023-10325-8
   Xiao T, 2022, IEEE T SOFTWARE ENG, V48, P4214, DOI 10.1109/TSE.2021.3115772
   Yasmin J, 2022, INT C PROGRAM COMPRE, P614, DOI 10.1145/3524610.3528387
   Zampetti F, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-10031-3
NR 61
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2024
VL 29
IS 2
AR 54
DI 10.1007/s10664-024-10449-5
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JB1N5
UT WOS:001170603000001
DA 2024-08-05
ER

PT J
AU Ahasanuzzaman, M
   Oliva, GA
   Hassan, AE
AF Ahasanuzzaman, Md
   Oliva, Gustavo A.
   Hassan, Ahmed E.
TI Using knowledge units of programming languages to recommend reviewers
   for pull requests: an empirical study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Reviewer recommendation; Pull requests; Knowledge representation;
   Knowledge units; Java
ID GITHUB
AB Determining the right code reviewer for a given code change requires understanding the characteristics of the changed code, identifying the skills of each potential reviewer (expertise profile), and finding a good match between the two. To facilitate this task, we design a code reviewer recommender that operates on the knowledge units (KUs) of a programming language. We define a KU as a cohesive set of key capabilities that are offered by one or more building blocks of a given programming language. We operationalize our KUs using certification exams for the Java programming language. We detect KUs from 10 actively maintained Java projects from GitHub, spanning 290K commits and 65K pull requests (PRs). We generate developer expertise profiles based on the detected KUs. We use these KU-based expertise profiles to build a code reviewer recommender (KUREC). We compare KUREC's performance to that of seven baseline recommenders. KUREC ranked first along with the top-performing baseline recommender (RF) in a Scott-Knott ESD analysis of recommendation accuracy (the top-5 accuracy of KUREC is 0.84 (median) and the MAP@5 is 0.51 (median)). From a practical standpoint, we highlight that KUREC's performance is more stable (lower interquartile range) than that of RF, thus making it more consistent and potentially more trustworthy. We also design three new recommenders by combining KUREC with our baseline recommenders. These new combined recommenders outperform both KUREC and the individual baselines. Finally, we evaluate how reasonable the recommendations from KUREC and the combined recommenders are when those deviate from the ground truth. We observe that KUREC is the recommender with the highest percentage of reasonable recommendations (63.4%). Overall we conclude that KUREC and one of the combined recommenders (e.g., AD_HYBRID) are overall superior to the baseline recommenders that we studied. Future work in the area should thus (i) consider KU-based recommenders as baselines and (ii) experiment with combined recommenders.
C1 [Ahasanuzzaman, Md; Oliva, Gustavo A.; Hassan, Ahmed E.] Queens Univ, Sch Comp, Software Anal & Intelligence Lab SAIL, Kingston, ON, Canada.
C3 Queens University - Canada
RP Ahasanuzzaman, M (corresponding author), Queens Univ, Sch Comp, Software Anal & Intelligence Lab SAIL, Kingston, ON, Canada.
EM ma87@cs.queensu.ca; gustavo@cs.queensu.ca; ahmed@cs.queensu.ca
RI Hassan, Ahmed Eid Abdelaal/AAA-1701-2022
OI Hassan, Ahmed Eid Abdelaal/0000-0001-9080-4261
CR Adomavicius G, 2015, IEEE T KNOWL DATA EN, V27, P1573, DOI 10.1109/TKDE.2014.2384502
   Al-Subaihin AA, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962600
   Al-Zubaidi WHA, 2020, PROCEEDINGS OF THE 16TH ACM INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING, PROMISE 2020, P21, DOI 10.1145/3416508.3417115
   [Anonymous], 2007, 4 INT WORKSHOP MININ
   [Anonymous], 2008, P 14 ACM SIGKDD INT, DOI DOI 10.1145/1401890.1401897
   Asthana S, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P937, DOI 10.1145/3338906.3340449
   Avelino Guilherme, 2016, Proceedings of IEEE 24th International Conference on Program Comprehension (ICPC), P1
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Balachandran V, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P931, DOI 10.1109/ICSE.2013.6606642
   Bishnu PS, 2012, IEEE T KNOWL DATA EN, V24, P1146, DOI 10.1109/TKDE.2011.163
   Bishop M, 2017, IFIP ADV INF COMM TE, V503, P3, DOI 10.1007/978-3-319-58553-6_1
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Campos P. G., 2011, P 5 ACM C REC SYST, P309, DOI DOI 10.1145/2043932.2043990
   Chouchen M, 2021, APPL SOFT COMPUT, V100, DOI 10.1016/j.asoc.2020.106908
   Cogo FR, 2022, Arxiv, DOI arXiv:2202.04431
   Dakhel AM, 2021, PROCEEDINGS OF EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING (EASE 2021), P90, DOI 10.1145/3463274.3463343
   de Lima ML, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P1567, DOI 10.1145/2695664.2695884
   Dey T, 2021, PROC INT CONF SOFTW, P995, DOI 10.1109/ICSE43902.2021.00094
   Ding C., 2004, ICML '04, P29, DOI DOI 10.1145/1015330.1015408
   Eclipse, 2020, Eclipse Java development tools (JDT)
   Fejzer M, 2018, J INTELL INF SYST, V50, P597, DOI 10.1007/s10844-017-0484-1
   Ferreira M, 2019, SOFTWARE QUAL J, V27, P1583, DOI 10.1007/s11219-019-09457-2
   Fritz T, 2007, P 6 JOINT M EUR SOFT, P341, DOI DOI 10.1145/1287624.1287673
   Fritz T, 2010, P 32 ACM IEEE INT C, P385, DOI DOI 10.1145/1806799.1806856
   Fritz T, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2512207
   Gauthier IX, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P30, DOI 10.1109/ASE51524.2021.9678640
   Ghotra B, 2017, IEEE WORK CONF MIN S, P146, DOI 10.1109/MSR.2017.18
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Gîrba T, 2005, EIGHTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P113, DOI 10.1109/IWPSE.2005.21
   Goebl S, 2014, IEEE DATA MINING, P130, DOI 10.1109/ICDM.2014.34
   Google, 2020, k-Means Advantages and Disadvantages
   Greene GJ, 2016, IEEE INT CONF AUTOM, P804, DOI 10.1145/2970276.2970285
   Hannebauer C, 2016, IEEE INT CONF AUTOM, P99, DOI 10.1145/2970276.2970306
   Hauff C, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P362, DOI 10.1109/MSR.2015.41
   He Q, 2022, IEEE T SOFTWARE ENG, V48, P150, DOI 10.1109/TSE.2020.2982154
   Jiang J, 2019, J SYST SOFTWARE, V154, P196, DOI 10.1016/j.jss.2019.04.055
   Jiang J, 2017, INFORM SOFTWARE TECH, V84, P48, DOI 10.1016/j.infsof.2016.10.006
   Jiang J, 2015, J COMPUT SCI TECH-CH, V30, P998, DOI 10.1007/s11390-015-1577-3
   Jureczko M., 2010, P 6 INT C PREDICTIVE, P1, DOI DOI 10.1145/1868328.1868342
   Kagdi H, 2008, PROC IEEE INT CONF S, P157, DOI 10.1109/ICSM.2008.4658064
   Kalliamvakou E., 2014, The Promises and Perils of Mining GitHub (MSR 2014), P92, DOI DOI 10.1145/2597073.2597074
   Kassambara Alboukadel, 2021, CRAN
   Kleinberg JM, 1999, J ACM, V46, P604, DOI 10.1145/324133.324140
   Kondo M, 2019, EMPIR SOFTW ENG, V24, P1925, DOI 10.1007/s10664-018-9679-5
   Kyung-A Yoon, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P443
   Lewis C, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P372, DOI 10.1109/ICSE.2013.6606583
   Li T., 2003, Intelligent Data Analysis, V7, P305
   Li X, 2021, Scientometrics, P1
   Liang JT, 2022, 2022 ACM/IEEE 44TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2022), P106, DOI [10.1109/ICSE-NIER55298.2022.9793514, 10.1145/3510455.3512772]
   Liao ZF, 2019, IEEE GLOB COMM CONF
   Ma D, 2009, PROC IEEE INT CONF S, P535, DOI 10.1109/ICSM.2009.5306386
   Malik H, 2008, PROC IEEE INT CONF S, P177, DOI 10.1109/ICSM.2008.4658066
   McDonald D. W., 2000, CSCW 2000. ACM 2000 Conference on Computer Supported Cooperative Work, P231, DOI 10.1145/358916.358994
   McDonald D. W., 2001, GROUP'01. Proceedings of the 2001 International ACM SIGGROUP Conference on Supporting Group Work, P214, DOI 10.1145/500286.500319
   Mirsaeedi E, 2020, PROC INT CONF SOFTW, P1183, DOI 10.1145/3377811.3380335
   Mittas N, 2013, IEEE T SOFTWARE ENG, V39, P537, DOI 10.1109/TSE.2012.45
   Mockus A, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P503, DOI 10.1109/ICSE.2002.1007994
   Montandon Joao Eduardo, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P276, DOI 10.1109/MSR.2019.00054
   Munaiah N, 2017, EMPIR SOFTW ENG, V22, P3219, DOI 10.1007/s10664-017-9512-6
   Nidheesh N, 2020, NEURAL COMPUT APPL, V32, P11459, DOI 10.1007/s00521-019-04636-5
   Oracle, 2022, Oracle Certified Associate, Java SE 8 Programmer
   Oracle, 2022, Oracle Certified Professional, Java SE 8 Programmer
   Ouni A, 2016, PROC IEEE INT CONF S, P367, DOI 10.1109/ICSME.2016.65
   Pandya Prahar, 2022, ESEC/FSE 2022: Proceedings of the 30th ACM Joint European Software Engineering Conference and Symposium on the Foundations of Software Engineering, P546, DOI 10.1145/3540250.3549115
   Panichella A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P522, DOI 10.1109/ICSE.2013.6606598
   Parsons L., 2004, SIGKDD EXPLOR, V6, P90, DOI [10.1145/1007730.1007731, DOI 10.1145/1007730.1007731]
   Patel A, 2018, J Web Eng
   Peták M, 2020, AUTOM CONTROL COMPUT, V54, P529, DOI 10.3103/S0146411620060061
   Peták M, 2018, DIVAI, P491
   Rahman MM, 2016, IEEE INT CONF AUTOM, P792, DOI 10.1145/2970276.2970283
   Rigby P. C., 2013, P ESEC FSE, P202, DOI DOI 10.1145/2491411.2491444
   Robbes R, 2013, IEEE WORK CONF MIN S, P297, DOI 10.1109/MSR.2013.6624041
   Rong GP, 2022, PROC INT CONF SOFTW, P1381, DOI 10.1145/3510003.3510213
   ROUSSEEUW PJ, 1987, J COMPUT APPL MATH, V20, P53, DOI 10.1016/0377-0427(87)90125-7
   Sklearn, 2022, dfgdfg
   Spadini D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P908, DOI 10.1145/3236024.3264598
   Strand A, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP), P1, DOI 10.1145/3377813.3381365
   Sülün E, 2019, 15TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING (PROMISE'19), P66, DOI 10.1145/3345629.3345637
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Tecimer KA, 2021, PROCEEDINGS OF EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING (EASE 2021), P181, DOI 10.1145/3463274.3463336
   Thongtanunam P, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P141, DOI 10.1109/SANER.2015.7081824
   Tsantalis N, 2006, IEEE T SOFTWARE ENG, V32, P896, DOI 10.1109/TSE.2006.112
   Vekariya P, 2018, Top 7 Programming Language Certifications for Web Developers
   Vivacqua A., 2000, CHI 2000 Conference Proceedings. Conference on Human Factors in Computing Systems. CHI 2000. The Future is Here, P65, DOI 10.1145/332040.332408
   Von Solms S, 2018, IFIP ADV INF COMM TE, P121, DOI DOI 10.1007/978-3-319-99734-6_10
   Wan Y, 2018, WORLD WIDE WEB, V21, P1523, DOI 10.1007/s11280-018-0526-9
   Xia X, 2015, PROC IEEE INT CONF S, P261, DOI 10.1109/ICSM.2015.7332472
   Xia ZL, 2017, 6TH INTERNATIONAL WORKSHOP ON SOFTWARE MINING (SOFTWAREMINING), P24, DOI 10.1109/SOFTWAREMINING.2017.8100850
   Xibilia MG, 2020, IEEE T INSTRUM MEAS, V69, P7869, DOI 10.1109/TIM.2020.2984465
   Xie X, 2021, IEEE Trans Softw Eng, P1
   Xiong RH, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P163, DOI [10.1109/saner.2019.8668031, 10.1109/SANER.2019.8668031]
   Ying HC, 2016, 2016 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON CROWDSOURCING IN SOFTWARE ENGINEERING (CSI-SE), P29, DOI [10.1109/CSI-SE.2016.013, 10.1145/2897659.2897660]
   YITZHAKI S, 1979, Q J ECON, V93, P321, DOI 10.2307/1883197
   Yu Y, 2016, INFORM SOFTWARE TECH, V74, P204, DOI 10.1016/j.infsof.2016.01.004
   Yue Yu, 2014, 2014 21st Asia-Pacific Software Engineering Conference (APSEC), P335, DOI 10.1109/APSEC.2014.57
   Zanjani MB, 2016, IEEE T SOFTWARE ENG, V42, P530, DOI 10.1109/TSE.2015.2500238
   Zhang F, 2016, PROC INT CONF SOFTW, P309, DOI 10.1145/2884781.2884839
NR 97
TC 1
Z9 1
U1 1
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2024
VL 29
IS 1
AR 33
DI 10.1007/s10664-023-10421-9
PG 69
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DK3Z6
UT WOS:001131907200001
DA 2024-08-05
ER

PT J
AU Kuramoto, H
   Wang, D
   Kondo, M
   Kashiwa, Y
   Kamei, Y
   Ubayashi, N
AF Kuramoto, Hiroki
   Wang, Dong
   Kondo, Masanari
   Kashiwa, Yutaro
   Kamei, Yasutaka
   Ubayashi, Naoyasu
TI Understanding the characteristics and the role of visual issue reports
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Visual issue reports; GitHub; Mining software repositories
AB Issue reports are a pivotal interface between developers and users for receiving information about bugs in their products. In practice, reproducing those bugs is challenging, since issue reports often contain incorrect information or lack sufficient information. Furthermore, the poor quality of issue reports would have the effect of delaying the entire bug-fixing process. To enhance bug comprehension and facilitate bug reproduction, GitHub Issue allows users to embed visuals such as images and videos to complement the textual description. Hence, we conduct an empirical study on 34 active GitHub repositories to quantitatively analyze the difference between visual issue reports and non-visual ones, and qualitatively analyze the characteristics of visuals and the usage of visuals in bug types. Our results show that visual issue reports have a significantly higher probability of reporting bugs. Visual reports also tend to receive the first comment and complete the conversation in a relatively shorter time. Visuals are frequently used to present the program behavior and the user interface, with the major purpose of introducing problems in reports. Additionally, we observe that visuals are commonly used to report GUI-related bugs, but they are rarely used to report configuration bugs in comparison to non-visual issue reports. To summarize, our work highlights the role of visual play in the bug-fixing process and lays the foundation for future research to support bug comprehension by exploiting visuals.
C1 [Kuramoto, Hiroki; Kondo, Masanari; Kamei, Yasutaka; Ubayashi, Naoyasu] Kyushu Univ, Fukuoka, Japan.
   [Wang, Dong] Tianjin Univ, Coll Intelligence & Comp, Tianjin, Peoples R China.
   [Kashiwa, Yutaro] Nara Inst Sci & Technol, Ikoma, Japan.
C3 Kyushu University; Tianjin University; Nara Institute of Science &
   Technology
RP Wang, D (corresponding author), Tianjin Univ, Coll Intelligence & Comp, Tianjin, Peoples R China.
EM kuramoto@posl.ait.kyushu-u.ac.jp; d.wang@ait.kyushu-u.ac.jp;
   kondo@ait.kyushu-u.ac.jp; yutaro.kashiwa@is.naist.jp;
   kamei@ait.kyushu-u.ac.jp; ubayashi@ait.kyushu-u.ac.jp
OI Wang, Dong/0000-0002-2004-0902
FU Japan Society for the Promotion of Science [JP21H04877, JP21K17725,
   JP22K17874, JP22K18630, JP23K16864]; JSPS KAKENHI Japan [JPMJPR22P3];
   JST; Inamori Research Institute for Science, Kyoto, Japan
FX This research was partially supported by JSPS KAKENHI Japan (Grant
   Numbers: JP21H04877, JP21K17725, JP22K17874, JP22K18630, JP23K16864) and
   JST (Grant Number: JPMJPR22P3), and Yasutaka Kamei is supported by
   Inamori Research Institute for Science, Kyoto, Japan (InaRIS
   Fellowship).
CR Agrawal Vishakha, 2022, EASE 2022: The International Conference on Evaluation and Assessment in Software Engineering 2022, P249, DOI 10.1145/3530019.3534082
   Bauer MW, 2007, BRIT J SOCIOL, V58, P329, DOI 10.1111/j.1468-4446.2007.00153_10.x
   Bettenburg N., 2007, P 2014 WORKSH ECL TE, P21, DOI [10, 10.1145/1328279.1328284]
   Blincoe K, 2016, INFORM SOFTWARE TECH, V70, P30, DOI 10.1016/j.infsof.2015.10.002
   Borges H, 2016, PROC IEEE INT CONF S, P334, DOI 10.1109/ICSME.2016.31
   Breu S, 2010, 2010 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, P301
   Casella G., 2021, Statistical Inference
   Catolino G, 2019, J SYST SOFTWARE, V152, P165, DOI 10.1016/j.jss.2019.03.002
   Chen AR, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09893-w
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Cohen J., 1988, Statistical power analysis for the behavioral sciences
   Cooper N, 2021, PROC INT CONF SOFTW, P957, DOI 10.1109/ICSE43902.2021.00091
   Dabic O, 2021, IEEE WORK CONF MIN S, P560, DOI 10.1109/MSR52588.2021.00074
   Dey T, 2020, IEEE WORK CONF MIN S, P209, DOI 10.1145/3379597.3387478
   EISENHARDT KM, 1989, ACAD MANAGE REV, V14, P532, DOI 10.2307/258557
   El Zanaty F, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3239525
   Fazzini M, 2023, IEEE T SOFTWARE ENG, V49, P1246, DOI 10.1109/TSE.2022.3174028
   Feng S, 2023, Read it, don't watch it: Captioning bug recordings automatically
   Feng Zhang, 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P225, DOI 10.1109/WCRE.2012.32
   Fu LM, 2022, INT C PROGRAM COMPRE, P152, DOI 10.1145/3524610.3527884
   Giger E, 2010, P 2 INT WORKSH REC S, P52, DOI 10.1145/1808920.1808933
   Golzadeh M, 2022, 2022 IEEE/ACM 4TH INTERNATIONAL WORKSHOP ON BOTS IN SOFTWARE ENGINEERING (BOTSE 2022), P1, DOI 10.1145/3528228.3528406
   Golzadeh M, 2021, J SYST SOFTWARE, V175, DOI 10.1016/j.jss.2021.110911
   Guo P.J., 2010, P 32 ACM IEEE INT C, V1, P495, DOI 10.1145/1806799.1806871
   Harwood TG., 2003, Pract Assess, Res Eval, V3, P479, DOI [DOI 10.7275/Z6FM-2E34, 10.1362/146934703771910080, https://doi.org/10.7275/z6fm-2-34, DOI 10.7275/Z6FM-2-34]
   Hata H, 2019, PROC INT CONF SOFTW, P1211, DOI 10.1109/ICSE.2019.00123
   He RZ, 2023, IEEE T SOFTWARE ENG, V49, P4004, DOI 10.1109/TSE.2023.3278129
   Herzig K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P392, DOI 10.1109/ICSE.2013.6606585
   Johnson J, 2022, EUR CON SFTWR MTNCE, P321, DOI 10.1109/SANER53432.2022.00048
   Joorabchi Mona Erfani, 2014, P 11 WORK C MIN SOFT, P62, DOI [10.1145/2597073.2597098, DOI 10.1145/2597073.2597098]
   KREJCIE RV, 1970, EDUC PSYCHOL MEAS, V30, P607, DOI 10.1177/001316447003000308
   Krippendorff K., 2018, CONTENT ANAL INTRO I
   KRUSKAL WH, 1952, J AM STAT ASSOC, V47, P583, DOI 10.1080/01621459.1952.10483441
   Kuramoto H, 2022, INT C PROGRAM COMPRE, P511, DOI 10.1145/3524610.3527882
   Lal S, 2012, ASIA PAC SOFWR ENG, P517, DOI 10.1109/APSEC.2012.54
   Li HY, 2023, J SYST SOFTWARE, V202, DOI 10.1016/j.jss.2023.111709
   Moran K, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P673, DOI 10.1145/2786805.2786857
   Nayebi M, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2020), P49, DOI 10.1145/3377816.3381723
   Nayrolles M, 2018, 2018 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON SOFTWARE QUALITIES AND THEIR DEPENDENCIES (SQUADE), P25
   Ohira M, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P264, DOI 10.1109/ICSM.2012.6405281
   Panjer LD, 2007, P 4 INT WORKSH MIN S, pp29
   Pearson K, 1900, PHILOS MAG, V50, P157, DOI 10.1080/14786440009463897
   Planning S, 2002, Natl Inst Stand Technol, V1
   POTTER MC, 1975, NATURE, V253, P437, DOI 10.1038/253437a0
   Romano J., 2006, ANN M FLOR ASS I RES, DOI DOI 10.1017/CBO9781107415324.004
   Saadat S, 2021, 2021 IEEE/ACM THIRD INTERNATIONAL WORKSHOP ON BOTS IN SOFTWARE ENGINEERING (BOTSE 2021), P1, DOI 10.1109/BotSE52550.2021.00008
   Soltani M, 2020, EMPIR SOFTW ENG, V25, P5255, DOI 10.1007/s10664-020-09882-z
   Song Y, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P344, DOI 10.1145/3540250.3549131
   Sullivan Gail M, 2012, J Grad Med Educ, V4, P279, DOI 10.4300/JGME-D-12-00156.1
   Taesiri MR, 2022, arXiv
   Wang D, 2023, Arxiv, DOI arXiv:2303.15684
   Wang D, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09997-x
   Wang JJ, 2019, INFORM SOFTWARE TECH, V110, P139, DOI 10.1016/j.infsof.2019.03.003
   Weiss C, 2007, 4 INT WORKSH MIN SOF, P1
   Xiao T, 2022, IEEE T SOFTWARE ENG, V48, P4214, DOI 10.1109/TSE.2021.3115772
   Ye DH, 2017, EMPIR SOFTW ENG, V22, P375, DOI 10.1007/s10664-016-9430-z
   Zimmermann T, 2012, PROC INT CONF SOFTW, P1074, DOI 10.1109/ICSE.2012.6227112
   Zimmermann T, 2010, IEEE T SOFTWARE ENG, V36, P618, DOI 10.1109/TSE.2010.63
   Zou WQ, 2015, P INT COMP SOFTW APP, P254, DOI 10.1109/COMPSAC.2015.57
NR 59
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2024
VL 29
IS 4
AR 89
DI 10.1007/s10664-024-10459-3
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TR0O1
UT WOS:001242870800002
DA 2024-08-05
ER

PT J
AU Chen, JR
   Huang, C
   Han, JX
AF Chen, Junren
   Huang, Cheng
   Han, Jiaxuan
TI VioDroid-Finder: automated evaluation of compliance and consistency for
   Android apps
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Android apps; Privacy policy; Compliance analysis; Consistency in data
   collection; Natural language processing
AB Rapid growth in the variety and quantity of apps makes it difficult for users to protect their privacy, although existing regulations have been introduced and the Android ecosystem is constantly being improved, there are still violations as privacy policies may not fully comply with regulations, and app behavior may not be fully consistent with privacy policies. To solve such issues, this paper proposes an automated method called VioDroid-Finder aiming at the evaluation of compliance and consistency for Android apps. We first study existing common regulations and conclude the privacy policy content into 7 aspects (i.e., privacy categories), for privacy policies, different compliance rules are required to be complied with in each privacy category. Secondly, we present a policy structure parser model based on the structure extraction/rebuilding method (which can convert the unstructured text to an XML tree) and subtitle similarity calculation algorithm. Thirdly, we propose a violation analyzer using the BERT model to classify each sentence in the privacy policy, we collect existing issues and combine them with manual observations to define 6 types of violations and detect them based on classification results. Then, we propose an inconsistency analyzer that converts permissions, APIs, and GUI into a set of personal information based on static analysis, inconsistencies are detected by comparing that set with personal information declared in the privacy policy. Finally, we evaluate 600 Chinese apps using the proposed method, from which we detect many violations and inconsistencies reflecting the current widespread privacy violation issues.
C1 [Chen, Junren; Huang, Cheng; Han, Jiaxuan] Sichuan Univ, Sch Cyber Sci & Engn, Chengdu, Peoples R China.
C3 Sichuan University
RP Huang, C (corresponding author), Sichuan Univ, Sch Cyber Sci & Engn, Chengdu, Peoples R China.
EM junrenchen9@gmail.com; opcodesec@gmail.com; zhansxdrive30i@gmail.com
OI Huang, Cheng/0000-0002-5871-946X
FU the National Key Research and Development Program of China [61902265];
   National Natural Science Foundation of China [2021YFB3100500]; National
   Key Research and Development Program of China
FX This work was supported in part by National Natural Science Foundation
   of China (61902265), National Key Research and Development Program of
   China (No.2021YFB3100500).
CR AIR, 2023, China's new AI regulations
   Amaral O, 2022, IEEE T SOFTWARE ENG, V48, P4647, DOI 10.1109/TSE.2021.3124332
   AndroidDeveloper, 2022, Developer guides
   [Anonymous], 2021, PIPL Personal information protection law of the People's Republic of China
   Apktool, 2022, Apktool: a tool for reverse engineering android APK files
   Breiman L, 2001, MACH LEARN, V45, P5, DOI 10.1023/A:1010933404324
   CGTN, 2018, CCA report: 91 out of 100 apps suspected of excessive collection of personal data
   Chen Junren, 2024, Zenodo, DOI 10.5281/ZENODO.10690737
   Coppola R, 2019, EMPIR SOFTW ENG, V24, P3205, DOI 10.1007/s10664-019-09722-9
   Cui H, 2023, Arxiv, DOI arXiv:2210.06746
   Custers B., 2019, EU PERSONAL DATA PRO, DOI [10.1007/978-94-6265-282-8, DOI 10.1007/978-94-6265-282-8]
   Daoudi N, 2023, EMPIR SOFTW ENG, V28, DOI 10.1007/s10664-022-10249-9
   DasLab, 2024, viodroid-finder
   Demissie BF, 2020, EMPIR SOFTW ENG, V25, P5084, DOI 10.1007/s10664-020-09879-8
   Desnos Anthony., 2013, Androguard-reverse engineering, malware and goodware analysis of android applications
   Devlin J, 2019, Arxiv, DOI arXiv:1810.04805
   Duc Bui, 2021, Proceedings on Privacy Enhancing Technologies, V2021, P88, DOI 10.2478/popets-2021-0019
   Elluri Lavanya, 2020, 2020 IEEE International Conference on Big Data (Big Data), P3963, DOI 10.1109/BigData50022.2020.9377864
   Fan M, 2020, PROC INT SYMP SOFTW, P253, DOI 10.1109/ISSRE5003.2020.00032
   GooglePlay, 2022, Google play store, data security
   Graves A, 2012, STUD COMPUT INTELL, V385, P1, DOI [10.1162/neco.1997.9.8.1735, 10.1007/978-3-642-24797-2, 10.1162/neco.1997.9.1.1]
   He H, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P5555
   Huang JJ, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1036, DOI 10.1145/2568225.2568301
   Huang JJ, 2015, PROCEEDINGS OF THE 24TH USENIX SECURITY SYMPOSIUM, P977
   Jiemian, 2022, Learning app suspected of mass data leak
   Kaur J, 2018, INF SECUR J, V27, P260, DOI 10.1080/19393555.2019.1606368
   Kingma D. P., 2014, arXiv
   Liu G, 2019, NEUROCOMPUTING, V337, P325, DOI 10.1016/j.neucom.2019.01.078
   Liu KJ, 2022, SCI PROGRAMMING-NETH, V2022, DOI 10.1155/2022/2508690
   Liu S, 2021, PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE 2021 (WWW 2021), P2154, DOI 10.1145/3442381.3450022
   Liu X, 2020, IEEE T MOBILE COMPUT, V19, P1184, DOI 10.1109/TMC.2019.2903186
   McDonald A.M., 2008, I/S: A J. Law Policy Inf. Soc., V4, P543, DOI DOI 10.1136/BMJ.C2665
   Nakayama H., 2018, doccano: Text annotation tool for human
   Nan YH, 2015, PROCEEDINGS OF THE 24TH USENIX SECURITY SYMPOSIUM, P993
   Nan YH, 2017, IEEE T INF FOREN SEC, V12, P647, DOI 10.1109/TIFS.2016.2631949
   Nedelchev R., 2020, IFIP INT C ICT SYST, P370, DOI [10.1007/978-3-030-58201-2_25, DOI 10.1007/978-3-030-58201-2_25]
   NetworkData, 2021, Guidelines for classification and hierarchy of network data
   Ni ZN, 2021, JMIR MHEALTH UHEALTH, V9, DOI 10.2196/23409
   NPI, 2020, Scope of necessary personal information for common types of mobile internet applications (apps) (draft for solicitation of comments)
   Okoyomon E., 2019, WORKSH TECHN CONS PR
   Ou F, 2022, COMPUT SECUR, V112, DOI 10.1016/j.cose.2021.102513
   PapersWithCode, 2023, Text classification task best model
   PIC, 2022, Mobile intelligent terminal and application software user personal information protection implementation guide, part 2: Personal information classification
   PIRule, 2020, Mobile intelligent terminal and application software user personalinformation protection implementation guide, part 8: Personal information collection and use rules
   PIS, 2020, Information security technologypersonal information (pi) security specification
   Ramos Juan, 2003, P 1 INSTR C MACH LEA, V242, P29, DOI DOI 10.15804/TNER.2015.42.4.03
   Rehurek R., 2011, Gensim-python framework for vector space modelling, V3
   Sanh V, 2020, Arxiv, DOI [arXiv:1910.01108, 10.48550/arXiv.1910.01108]
   Sathyendra K. M., 2017, P 2017 C EMP METH NA, P2774, DOI DOI 10.18653/V1/D17-1294
   Sel, 2020, Self-assessment guide for the collection and use of personal information by mobile internet applications (apps)
   Shanghai Consumer Council, 2020, The evaluation report of 600 apps
   Shar LK, 2023, EMPIR SOFTW ENG, V28, DOI 10.1007/s10664-023-10375-y
   Slavin R, 2016, PROC INT CONF SOFTW, P25, DOI 10.1145/2884781.2884855
   Slavin R, 2016, 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2016), P299, DOI [10.1145/2897073.2897720, 10.1109/MobileSoft.2016.069]
   Statista, 2022, Mobile operating systems' market share worldwide from 1st quarter 2009 to 4th quarter 2022
   Ahmad WU, 2020, Arxiv, DOI arXiv:2010.02557
   Vaswani A, 2017, ADV NEUR IN, V30
   Verderame L, 2020, IEEE IJCNN, DOI 10.1109/ijcnn48605.2020.9206660
   Wang Y, 2019, PERVASIVE MOB COMPUT, V53, P13, DOI 10.1016/j.pmcj.2018.12.006
   Wilson S, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P1330
   Xposed, 2022, xposed
   Yu L, 2021, IEEE T SOFTWARE ENG, V47, P221, DOI 10.1109/TSE.2018.2886875
   Zaeem RN, 2021, PROCEEDINGS OF THE ELEVENTH ACM CONFERENCE ON DATA AND APPLICATION SECURITY AND PRIVACY (CODASPY '21), P143, DOI 10.1145/3422337.3447827
   Zimmeck Sebastian, 2019, Proceedings on Privacy Enhancing Technologies, V2019, P66, DOI 10.2478/popets-2019-0037
NR 64
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAY
PY 2024
VL 29
IS 3
AR 64
DI 10.1007/s10664-024-10470-8
PG 42
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RE3S8
UT WOS:001225960000003
DA 2024-08-05
ER

PT J
AU Lai, TD
   Simmons, A
   Barnett, S
   Schneider, JG
   Vasa, R
AF Lai, Tuan Dung
   Simmons, Anj
   Barnett, Scott
   Schneider, Jean-Guy
   Vasa, Rajesh
TI Comparative analysis of real issues in open-source machine learning
   projects
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Machine learning; Applied AI; Empirical analysis; Bug; Issue
ID SOFTWARE; ADOPTION
AB Context In the last decade of data-driven decision-making, Machine Learning (ML) systems reign supreme. Because of the different characteristics between ML and traditional Software Engineering systems, we do not know to what extent the issue-reporting needs are different, and to what extent these differences impact the issue resolution process.Objective We aim to compare the differences between ML and non-ML issues in open-source applied AI projects in terms of resolution time and size of fix. This research aims to enhance the predictability of maintenance tasks by providing valuable insights for issue reporting and task scheduling activities.Method We collect issue reports from Github repositories of open-source ML projects using an automatic approach, filter them using ML keywords and libraries, manually categorize them using an adapted deep learning bug taxonomy, and compare resolution time and fix size for ML and non-ML issues in a controlled sample.Result 147 ML issues and 147 non-ML issues are collected for analysis. We found that ML issues take more time to resolve than non-ML issues, the median difference is 14 days. There is no significant difference in terms of size of fix between ML and non-ML issues. No significant differences are found between different ML issue categories in terms of resolution time and size of fix.Conclusion Our study provided evidence that the life cycle for ML issues is stretched, and thus further work is required to identify the reason. The results also highlighted the need for future work to design custom tooling to support faster resolution of ML issues.
C1 [Lai, Tuan Dung; Simmons, Anj; Barnett, Scott; Vasa, Rajesh] Deakin Univ, Appl Artificial Intelligence Inst, Geelong, Australia.
   [Schneider, Jean-Guy] Monash Univ, Fac Informat Technol, Clayton, Australia.
C3 Deakin University; Monash University
RP Lai, TD (corresponding author), Deakin Univ, Appl Artificial Intelligence Inst, Geelong, Australia.
EM tuan.lai@deakin.edu.au; a.simmons@deakin.edu.au;
   scott.barnett@deakin.edu.au; Jean-Guy.Schneider@monash.edu;
   rajesh.vasa@deakin.edu.au
RI ; Vasa, Rajesh/A-6923-2015
OI Simmons, Angie/0000-0001-8402-2853; Vasa, Rajesh/0000-0003-4805-1467;
   Schneider, Jean-Guy/0000-0002-9827-5496; Barnett,
   Scott/0000-0002-3187-4937
FU Deakin University; Deakin University, Melbourne Australia
FX The first author of this paper would like to acknowledge that the
   research activity is funded by a postgraduate scholarship provided by
   the Applied Artificial Intelligence Institute (A2I2), Deakin University,
   Melbourne Australia.
CR Akbarinasaji S, 2018, J SYST SOFTWARE, V136, P173, DOI 10.1016/j.jss.2017.02.021
   Al-Zubaidi W.H. A., 2017, Proceedings of the 13th International Conference on Predictive Models and Data Analytics in Software Engineering, P53, DOI 10.1145/3127005.3127011
   Amershi S, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P291, DOI 10.1109/ICSE-SEIP.2019.00042
   Duc AN, 2011, IFIP ADV INF COMM TE, V365, P1
   Ardimento P, 2022, ENASE: PROCEEDINGS OF THE 17TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL APPROACHES TO SOFTWARE ENGINEERING, P233, DOI 10.5220/0011113100003176
   Arya D, 2019, PROC INT CONF SOFTW, P454, DOI 10.1109/ICSE.2019.00058
   Baskaran A, 2021, JOM-US, V73, P3639, DOI 10.1007/s11837-021-04805-9
   Ben Braiek H, 2020, J SYST SOFTWARE, V164, DOI 10.1016/j.jss.2020.110542
   Ben Braiek H, 2018, IEEE WORK CONF MIN S, P353, DOI 10.1145/3196398.3196445
   Bhattacharya P, 2013, EUR CON SFTWR MTNCE, P133, DOI 10.1109/CSMR.2013.23
   Bijlsma D, 2012, SOFTWARE QUAL J, V20, P265, DOI 10.1007/s11219-011-9140-0
   Biswas Sumon, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P577, DOI 10.1109/MSR.2019.00086
   Chen JJ, 2022, Arxiv, DOI [arXiv:2203.04026, 10.48550/ARXIV.2203.04026, DOI 10.48550/ARXIV.2203.04026]
   Chou A., 2001, Operating Systems Review, V35, P73, DOI 10.1145/502059.502042
   Cramer H., 1999, Mathematical methods of statistics, V26
   CURETON EE, 1956, PSYCHOMETRIKA, V21, P287, DOI 10.1007/BF02289138
   Davies S, 2014, P 8 ACM IEEE INT S E, DOI [DOI 10.1145/2652524.2652541, 10.1145/2652524.2652541]
   Du JW, 2023, J SOFTW-EVOL PROC, V35, DOI 10.1002/smr.2443
   Lai TD, 2022, Arxiv, DOI arXiv:2209.09932
   El Asri I, 2019, INFORM SOFTWARE TECH, V114, P37, DOI 10.1016/j.infsof.2019.06.005
   Galin Daniel, 2004, Software quality assurance: from theory to implementation
   Gegick Michael, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P11, DOI 10.1109/MSR.2010.5463340
   Ghanavati M, 2020, EMPIR SOFTW ENG, V25, P678, DOI 10.1007/s10664-019-09731-8
   Gonzalez D, 2020, IEEE WORK CONF MIN S, P431, DOI 10.1145/3379597.3387473
   Humbatova N, 2020, PROC INT CONF SOFTW, P1110, DOI 10.1145/3377811.3380395
   Islam MJ, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P510, DOI 10.1145/3338906.3338955
   Janssen A, 2022, PHARMACEUTICS, V14, DOI 10.3390/pharmaceutics14091814
   Jia L, 2020, LECT NOTES COMPUT SC, V12112, P604, DOI 10.1007/978-3-030-59410-7_40
   Kim M, 2021, IEEE WORK CONF MIN S, P540, DOI 10.1109/MSR52588.2021.00070
   Lal S, 2012, ASIA PAC SOFWR ENG, P517, DOI 10.1109/APSEC.2012.54
   Li Zhenmin, 2006, P 1 WORKSH ARCH SYST, P25
   LIGHT RJ, 1971, PSYCHOL BULL, V76, P365, DOI 10.1037/h0031643
   Liu C, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P55, DOI 10.1109/ASE51524.2021.9678891
   Lourenco R, 2019, P 3 INT WORKSH DAT M, P1
   Lu J, 2019, IEEE T KNOWL DATA EN, V31, P2346, DOI 10.1109/TKDE.2018.2876857
   MacFarland T.W., 2016, Introduction to nonparametric statistics for the biological sciences using R, P177, DOI [DOI 10.1007/978-3-319-30634-6, 10.1007/978-3-319-30634-6, DOI 10.1007/978-3-319-30634-6_6]
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   McKinlay J, 2010, CHANDOS INF PROF SER, P1, DOI 10.1533/9781780630243
   Mehrabi N, 2021, ACM COMPUT SURV, V54, DOI 10.1145/3457607
   Morovati MM, 2023, EMPIR SOFTW ENG, V28, DOI 10.1007/s10664-023-10291-1
   Murgia A, 2014, 10 INT C PRED MOD SO
   Nikanjam A, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3470006
   Parker BS, 2015, AAAI CONF ARTIF INTE, P2908
   Rawindaran N, 2021, COMPUTERS, V10, DOI 10.3390/computers10110150
   Rule A, 2018, PROCEEDINGS OF THE 2018 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2018), DOI 10.1145/3173574.3173606
   Sculley D, 2015, ADV NEUR IN, V28
   Sculley David, 2014, Softw Eng Mach Learn
   Seymoens Tom., 2018, IFIP Working Conference on Human Work Interaction Design, P200
   Shen QC, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P968, DOI 10.1145/3468264.3468591
   Shihab E, 2013, INFORM SOFTWARE TECH, V55, P1981, DOI 10.1016/j.infsof.2013.06.002
   Simmons Andrew J., 2020, INT S EMP SOFTW ENG, P1, DOI DOI 10.1145/3382494.3410680
   Sun XB, 2017, ASIA PAC SOFWR ENG, P348, DOI 10.1109/APSEC.2017.41
   Tambon F, 2023, Arxiv, DOI [arXiv:2112.13314, DOI 10.48550/ARXIV.2112.13314, 10.48550/ARXIV.2112.13314]
   Tan L, 2014, EMPIR SOFTW ENG, V19, P1665, DOI 10.1007/s10664-013-9258-8
   Thung F., 2012, Proceedings of the 2012 IEEE 23rd International Symposium on Software Reliability Engineering (ISSRE), P271, DOI 10.1109/ISSRE.2012.22
   Vieira R, 2022, INT SYMP EMP SOFTWAR, P57, DOI 10.1145/3544902.3546256
   Wan ZY, 2021, IEEE T SOFTWARE ENG, V47, P1857, DOI 10.1109/TSE.2019.2937083
   Wang S, 2018, IEEE T NEUR NET LEAR, V29, P4802, DOI 10.1109/TNNLS.2017.2771290
   Wardat M, 2022, PROC INT CONF SOFTW, P561, DOI 10.1145/3510003.3510071
   Wardat M, 2021, PROC INT CONF SOFTW, P251, DOI 10.1109/ICSE43902.2021.00034
   Xiang WM, 2018, Arxiv, DOI arXiv:1810.01989
   Yan M, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P627, DOI 10.1145/3468264.3468612
   Zhang R, 2020, PROC INT CONF SOFTW, P1159, DOI 10.1145/3377811.3380362
   Zhang TY, 2019, PROC INT SYMP SOFTW, P104, DOI 10.1109/ISSRE.2019.00020
   Zhang YH, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P129, DOI 10.1145/3213846.3213866
   Zhou LN, 2017, NEUROCOMPUTING, V237, P350, DOI 10.1016/j.neucom.2017.01.026
   Zhu WH, 2021, IEEE WORK CONF MIN S, P515, DOI 10.1109/MSR52588.2021.00065
NR 67
TC 0
Z9 0
U1 1
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAY
PY 2024
VL 29
IS 3
AR 60
DI 10.1007/s10664-024-10467-3
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RE2T9
UT WOS:001225935100002
OA hybrid
DA 2024-08-05
ER

PT J
AU Yang, DH
   Liu, K
   Lei, Y
   Li, L
   Xie, H
   Liu, CY
   Wang, ZY
   Mao, XG
   Bissyandé, TF
AF Yang, Deheng
   Liu, Kui
   Lei, Yan
   Li, Li
   Xie, Huan
   Liu, Chunyan
   Wang, Zhenyu
   Mao, Xiaoguang
   Bissyande, Tegawende F.
TI Demystifying API misuses in deep learning applications
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE API misuse; Deep learning application; Bug dataset; Empirical study
AB Deep Learning (DL) is achieving staggering performance on an increasing number of applications in various areas. Meanwhile, its associated data-driven programming paradigm comes with a set of challenges for the software engineering community, including the debugging activities for DL applications. Recent empirical studies on bugs in DL applications have shown that the API (i.e., Application Program Interface) misuse has been flagged as an important category of DL programming bugs. By exploring this literature towards API misuse bugs in DL applications, we identified three barriers that are locking an entire research direction. However, three barriers are hindering progress in this research direction: misclassification of API misuse bugs, lack of relevant dataset, and limited depth of analysis. Our work unlocks these barriers by providing an in-depth analysis of a frequent bug type that appears as a mystery. Concretely, we first offer a new perspective to a significant misclassification issue in the literature that hinders understanding of API misuses in DL applications. Subsequently, we curate the first dataset MisuAPI of 143 API misuses sampled from real-world DL applications. Finally, we perform systematic analyses to dissect API misuses and enumerate the symptoms of API misuses in DL applications as well as investigate the possibility of detecting them with state-of-the-art static analyzers. Overall, the insights summarized in this work are important for the community: 1) 18-35% of real API misuses are mislabelled in existing DL bug studies; 2) the widely adopted API misuse taxonomy, namely MUC, does not cover the cases of 1 out of 3 encountered API misuses; 3) DL library API misuses show significant differences from the general third-party library API misuses in terms of the API-usage element issue and symptoms; 4) Most (92.3%) API misuses lead to program crashes; 5) 95.8% API misuses remain undetectable by state-of-the-art static analyzers.
C1 [Yang, Deheng; Mao, Xiaoguang] Natl Univ Def Technol, Coll Comp, Changsha, Peoples R China.
   [Liu, Kui] Software Engn Applicat Technol Lab, Huawei, Peoples R China.
   [Lei, Yan; Li, Li; Xie, Huan; Liu, Chunyan; Wang, Zhenyu] Chongqing Univ, Sch Big Data & Software Engn, Chongqing, Peoples R China.
   [Lei, Yan; Xie, Huan; Liu, Chunyan] Peng Cheng Lab, Shenzhen, Peoples R China.
   [Bissyande, Tegawende F.] Univ Luxembourg, Interdisciplinary Ctr Secur Reliabil & Trust, Luxembourg, Luxembourg.
   [Bissyande, Tegawende F.] Beihang Univ, Sch Software, Beijing, Peoples R China.
C3 National University of Defense Technology - China; Huawei Technologies;
   Chongqing University; Peng Cheng Laboratory; University of Luxembourg;
   Beihang University
RP Lei, Y (corresponding author), Chongqing Univ, Sch Big Data & Software Engn, Chongqing, Peoples R China.; Lei, Y (corresponding author), Peng Cheng Lab, Shenzhen, Peoples R China.
EM yangdeheng13@nudt.edu.cn; brucekuiliu@gmail.com; yanlei@cqu.edu.cn;
   lilicoding@ieee.org; huanxie@cqu.edu.cn; chunyanliu@cqu.edu.cn;
   zhenyuwang@cqu.edu.cn; xgmao@nudt.edu.cn; tegawende.bissyande@uni.lu
FU National Natural Science Foundation of China [62172214, 62272072];
   National Natural Science Foundation of China [BK20210279]; Natural
   Science Foundation of Jiangsu Province, China [PCL2021A06]; Major Key
   Projectof PCL
FX This research was partially supported by the National Natural Science
   Foundation of China (Nos. 62172214, 62272072), the Natural Science
   Foundation of Jiangsu Province, China (BK20210279), and the Major Key
   Projectof PCL (No. PCL2021A06).
CR Abadi M, 2016, PROCEEDINGS OF OSDI'16: 12TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P265
   Amann S, 2019, IEEE T SOFTWARE ENG, V45, P1170, DOI 10.1109/TSE.2018.2827384
   Amann S, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P464, DOI [10.1145/2901739.2903506, 10.1109/MSR.2016.055]
   Bahdanau D., 2016, arXiv
   Bonifacio R, 2021, arXiv
   Boski M, 2017, 2017 10TH INTERNATIONAL WORKSHOP ON MULTIDIMENSIONAL (ND) SYSTEMS (NDS)
   Cambronero J, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P964, DOI 10.1145/3338906.3340458
   Cao JL, 2022, PROC INT CONF SOFTW, P573, DOI 10.1145/3510003.3510099
   Casalnuovo C, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P396, DOI 10.1145/3092703.3098230
   Chen ZP, 2021, PROC INT CONF SOFTW, P674, DOI 10.1109/ICSE43902.2021.00068
   Dilhara M, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3453478
   docs.github, Github api
   docs.python, Python standard library
   Eghbali A, 2020, IEEE INT CONF AUTOM, P956, DOI 10.1145/3324884.3416576
   Falleri Jean-Remy, 2014, P 29 ACM IEEE INT C
   Forward A, 2008, P 2008 C CTR ADV STU, P179
   github, Example of an incorrect parameter value
   github, mypy
   github, Example of a misused dl library api depending on the specific device
   github, 2023, Artifact page of our study
   github, pyre-check
   github, pyright
   github, Tensorflow repositories in githubs
   github, Example of a misused api with missing condition.
   github, A curated list of static analysis (sast) tools for all programming languages
   github, pylint
   github, Example of a missing api with missing exception handling
   Gu ZX, 2019, P INT COMP SOFTW APP, P11, DOI 10.1109/COMPSAC.2019.00012
   Gulli A, 2017, DEEP LEARNING KERAS, DOI DOI 10.1109/ICCV.2017.322
   Humbatova N, 2020, PROC INT CONF SOFTW, P1110, DOI 10.1145/3377811.3380395
   Institute ofElectrical and Electronics Engineers, 1987, IEEE Standard Taxonomy for Software Engineering Standards
   Islam MJ, 2020, PROC INT CONF SOFTW, P1135, DOI 10.1145/3377811.3380378
   Islam MJ, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P510, DOI 10.1145/3338906.3338955
   Islam MdJ, 2020, Towards understanding the challenges faced by machine learning software developers and enabling automated solutions
   Jia YQ, 2014, PROCEEDINGS OF THE 2014 ACM CONFERENCE ON MULTIMEDIA (MM'14), P675, DOI 10.1145/2647868.2654889
   Islam MJ, 2019, Arxiv, DOI arXiv:1906.11940
   Just R, 2014, ISSTA 2014, P437, DOI [10.1145/2610384.2628055, DOI 10.1145/2610384.2628055]
   Kechagia M, 2021, IEEE Trans Softw Eng
   Kechagia M, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P192, DOI 10.1145/3293882.3330552
   Kuutti S, 2021, IEEE T INTELL TRANSP, V22, P712, DOI 10.1109/TITS.2019.2962338
   Kwasnik BH, 1999, LIBR TRENDS, V48, P22
   Lamothe M, 2021, IEEE Trans Softw Eng
   Lamothe M, 2021, ACM COMPUT SURV, V54, DOI 10.1145/3470133
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Li X, 2021, IEEE INT CONF SOFTW, P241, DOI 10.1109/ICST49551.2021.00034
   Liu K, 2018, PROC IEEE INT CONF S, P275, DOI 10.1109/ICSME.2018.00037
   Liu YL, 2019, LANCET, V394, P1709, DOI 10.1016/S0140-6736(19)32501-2
   Mama R, 2021, Example of a misused api with incorrect parameter
   Mamah R, 2023, The example of inner api misuse in dl application
   McHugh ML, 2012, BIOCHEM MEDICA, V22, P276, DOI 10.11613/bm.2012.031
   Meijer E, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P1, DOI 10.1145/3236024.3280855
   Nielebock S, 2020, arXiv
   Ren XX, 2020, IEEE INT CONF AUTOM, P461, DOI 10.1145/3324884.3416551
   Scalabrino Simone, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P288, DOI 10.1109/MSR.2019.00055
   Shen QC, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P968, DOI 10.1145/3468264.3468591
   Simonite T., 2023, Software is eating the world, but AI is going to eat software
   Smite D, 2014, EMPIR SOFTW ENG, V19, P105, DOI 10.1007/s10664-012-9217-9
   Sven Amann, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P265, DOI 10.1109/MSR.2019.00053
   Svyatkovskiy A, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1433, DOI 10.1145/3368089.3417058
   Unterkalmsteiner M, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2523088
   Usman M, 2021, LECT NOTES COMPUT SC, V12759, P3, DOI 10.1007/978-3-030-81685-8_1
   Usman M, 2017, INFORM SOFTWARE TECH, V85, P43, DOI 10.1016/j.infsof.2017.01.006
   Velez TC, 2022, IEEE WORK CONF MIN S, P469, DOI 10.1145/3524842.3528455
   Wan CC, 2021, PROC INT CONF SOFTW, P125, DOI 10.1109/ICSE43902.2021.00024
   Wardat M, 2022, PROC INT CONF SOFTW, P561, DOI 10.1145/3510003.3510071
   Wardat M, 2021, PROC INT CONF SOFTW, P251, DOI 10.1109/ICSE43902.2021.00034
   Wen M, 2019, PROC INT CONF SOFTW, P866, DOI 10.1109/ICSE.2019.00093
   Wohlin C., 2012, Experimentation in Software Engineering, DOI [10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Wu DW, 2021, Arxiv, DOI arXiv:2106.02887
   Yan M, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P627, DOI 10.1145/3468264.3468612
   Yang YM, 2020, Arxiv, DOI arXiv:2011.14597
   Yu B, 2022, IEEE T RELIAB, V71, P1401, DOI 10.1109/TR.2021.3096332
   Zar J.H., 2005, Encyclopedia of Biostatistics, DOI [DOI 10.1002/0470011815.B2A15150, 10.1002/0470011815.b2a15150]
   zenodo, The manual verification results for api bugs provided by Islam etal
   Zhang R, 2020, PROC INT CONF SOFTW, P1159, DOI 10.1145/3377811.3380362
   Zhang T, 2018, INT C SOFTWARE ENG I, V10
   Zhang TY, 2019, PROC INT SYMP SOFTW, P104, DOI 10.1109/ISSRE.2019.00020
   Zhang TY, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P886, DOI 10.1145/3180155.3180260
   Zhang YH, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P129, DOI 10.1145/3213846.3213866
   Zhong H, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P913, DOI 10.1109/ICSE.2015.101
NR 80
TC 0
Z9 0
U1 2
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2024
VL 29
IS 2
AR 45
DI 10.1007/s10664-023-10413-9
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HX6H8
UT WOS:001162842700001
DA 2024-08-05
ER

PT J
AU Bui, QC
   Paramitha, R
   Vu, DL
   Massacci, F
   Scandariato, R
AF Bui, Quang-Cuong
   Paramitha, Ranindya
   Vu, Duc-Ly
   Massacci, Fabio
   Scandariato, Riccardo
TI APR4Vul: an empirical study of automatic program repair techniques on
   real-world Java vulnerabilities
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Automated program repair; Java; Vulnerability; Empirical experiments
ID CODE
AB Security vulnerability fixes could be a promising research avenue for Automated Program Repair (APR) techniques. In recent years, APR tools have been thoroughly developed for fixing generic bugs. However, the area is still relatively unexplored when it comes to fixing security bugs or vulnerabilities. In this paper, we evaluate nine state-of-the-art APR tools and one vulnerability-specific repair tool. In particular, we investigate their ability to generate patches for 79 real-world Java vulnerabilities in the Vul4J dataset, as well as the level of trustworthiness of these patches. We evaluate the tools with respect to their ability to generate security patches that are (i) testable, (ii) having the positive effect of closing the vulnerability, and (iii) not having side effects from a functional point of view. Our results show that the evaluated APR tools were able to generate testable patches for around 20% of the considered vulnerabilities. On average, nearly 73% of the testable patches indeed eliminate the vulnerabilities, but only 44% of them could actually fix security bugs while maintaining the functionalities. To understand the root cause of this phenomenon, we conduct a detailed comparative study of the general bug fix patterns in Defect4J and the vulnerability fix patterns in ExtraVul (which we extend from Vul4J). Our investigation shows that, although security patches are short in terms of lines of code, they contain unique characteristics in their fix patterns compared to general bugs. For example, many security fixes require adding method calls. These method calls contain specific input validation-related keywords, such as encode, normalize, and trim. In this regard, our study suggests that additional repair patterns should be implemented for existing APR tools to fix more types of security vulnerabilities.
C1 [Bui, Quang-Cuong; Scandariato, Riccardo] Hamburg Univ Technol, Hamburg, Germany.
   [Paramitha, Ranindya; Massacci, Fabio] Univ Trento, Trento, Italy.
   [Vu, Duc-Ly] Univ Informat Technol, Ho Chi Minh City, Vietnam.
   [Massacci, Fabio] Vrije Univ Amsterdam, Amsterdam, Netherlands.
C3 Hamburg University of Technology; University of Trento; Vrije
   Universiteit Amsterdam
RP Bui, QC (corresponding author), Hamburg Univ Technol, Hamburg, Germany.
EM cuong.bui@tuhh.de; ranindya.paramitha@unitn.it; lyvd@uit.edu.vn;
   fabio.massacci@ieee.org; riccardo.scandariato@tuhh.de
RI Ly, Vu Duc/ISV-5698-2023; Paramitha, Ranindya/KRQ-1510-2024
OI Ly, Vu Duc/0000-0002-5445-2729; Paramitha, Ranindya/0000-0002-6682-4243;
   Bui, Quang-Cuong/0000-0001-6072-9213
FU H2020 LEIT Information and Communication Technologies
FX No Statement Available
CR Abadi A, 2011, P ACM INT C COMP OBJ, P3, DOI [10.1145/2048147.2048149, DOI 10.1145/2048147.2048149]
   Agresti A., 2016, Statistics: The Art and Science of Learning from Data
   APR4Vul, An empirical study of automatic program repair techniques on real-world java vulnerabilities
   Barrett Clark, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P171, DOI 10.1007/978-3-642-22110-1_14
   Black PE Black PE, 2018, Juliet 1.3 test suite: Changes from 1.2
   Bui QC, 2022, IEEE WORK CONF MIN S, P464, DOI 10.1145/3524842.3528482
   Neto EC, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P380, DOI 10.1109/SANER.2018.8330225
   Caswell B., Cyber grand challenge corpus
   Chen LS, 2017, IEEE INT CONF AUTOM, P637, DOI 10.1109/ASE.2017.8115674
   Chen ZM, 2023, IEEE T SOFTWARE ENG, V49, P147, DOI 10.1109/TSE.2022.3147265
   Chi JL, 2023, IEEE T SOFTWARE ENG, V49, P564, DOI 10.1109/TSE.2022.3156637
   Dashevskyi S, 2019, IEEE T SOFTWARE ENG, V45, P945, DOI 10.1109/TSE.2018.2816033
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Durieux T., 2016, HAL01272126 U LILL 1
   Durieux T, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P302, DOI 10.1145/3338906.3338911
   Durieux T, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P349, DOI 10.1109/SANER.2017.7884635
   Durieux T, 2016, 2016 IEEE/ACM 11TH INTERNATIONAL WORKSHOP IN AUTOMATION OF SOFTWARE TEST (AST), P85, DOI [10.1145/2896921.2896931, 10.1109/AST.2016.021]
   Flynn L, 2021, 2021 IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATION OF SOFTWARE TEST (AST 2021), P100, DOI 10.1109/AST52587.2021.00019
   Fu Michael, 2022, ESEC/FSE 2022: Proceedings of the 30th ACM Joint European Software Engineering Conference and Symposium on the Foundations of Software Engineering, P935, DOI 10.1145/3540250.3549098
   Gasiba TE, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: JOINT TRACK ON SOFTWARE ENGINEERING EDUCATION AND TRAINING (ICSE-JSEET 2021), P241, DOI 10.1109/ICSE-SEET52601.2021.00034
   Hua JR, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P12, DOI 10.1145/3180155.3180245
   Huang Z, 2019, P IEEE S SECUR PRIV, P539, DOI 10.1109/SP.2019.00071
   Iannone E, 2023, IEEE T SOFTWARE ENG, V49, P44, DOI 10.1109/TSE.2022.3140868
   Jiang JJ, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P298, DOI 10.1145/3213846.3213871
   Jiang N, 2023, Arxiv, DOI arXiv:2302.01857
   Jiang N, 2021, PROC INT CONF SOFTW, P1161, DOI 10.1109/ICSE43902.2021.00107
   Johns M., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P523, DOI 10.1109/ICSTW.2011.32
   Just R, 2014, ISSTA 2014, P437, DOI [10.1145/2610384.2628055, DOI 10.1145/2610384.2628055]
   Kechagia M, 2021, IEEE T SOFTWARE ENG, V48, P2658, DOI 10.1109/TSE.2021.3067156
   Kim D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P802, DOI 10.1109/ICSE.2013.6606626
   Kim J, 2019, EMPIR SOFTW ENG, V24, P4071, DOI 10.1007/s10664-019-09742-5
   Koyuncu A, 2020, EMPIR SOFTW ENG, V25, P1980, DOI 10.1007/s10664-019-09780-z
   LE DXB, 2018, Overfitting in automated program repair: Challenges and solutions
   Le Goues C, 2019, COMMUN ACM, V62, P56, DOI 10.1145/3318162
   Le Goues C, 2012, IEEE T SOFTWARE ENG, V38, P54, DOI 10.1109/TSE.2011.104
   Le Goues C, 2012, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.2012.6227211
   Le XBD, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P213, DOI 10.1109/SANER.2016.76
   Li Y, 2022, PROC INT CONF SOFTW, P511, DOI 10.1145/3510003.3510177
   Li Y, 2020, PROC INT CONF SOFTW, P602, DOI 10.1145/3377811.3380345
   Lima R, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING WORKSHOPS (ASEW 2021), P1, DOI 10.1109/ASEW52652.2021.00014
   Lin Derrick, 2017, P COMP ACM SIGPLAN I, P55, DOI [10.1145/3135932, DOI 10.1145/3135932]
   Liu K, 2020, PROC INT CONF SOFTW, P615, DOI 10.1145/3377811.3380338
   Liu K, 2021, J SYST SOFTWARE, V171, DOI 10.1016/j.jss.2020.110817
   Liu K, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P31, DOI 10.1145/3293882.3330577
   Liu K, 2019, IEEE INT CONF SOFTW, P102, DOI 10.1109/ICST.2019.00020
   Liu K, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P456, DOI 10.1109/saner.2019.8667970
   Liu XL, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P118, DOI 10.1109/SANER.2018.8330202
   Ma SQ, 2017, LECT NOTES COMPUT SC, V10493, P229, DOI 10.1007/978-3-319-66399-9_13
   Ma SQ, 2016, ASIA CCS'16: PROCEEDINGS OF THE 11TH ACM ASIA CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P711, DOI 10.1145/2897845.2897896
   Ma WWY, 2017, PROC INT CONF SOFTW, P381, DOI 10.1109/ICSE.2017.42
   Madeiral F, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P468, DOI [10.1109/SANER.2019.8667991, 10.1109/saner.2019.8667991]
   Martinez M, 2016, P 25 INT S SOFTWARE, P441, DOI 10.1145/2931037.2948705
   Martinez M, 2018, LECT NOTES COMPUT SC, V11036, P65, DOI 10.1007/978-3-319-99241-9_3
   Martinez M, 2017, EMPIR SOFTW ENG, V22, P1936, DOI 10.1007/s10664-016-9470-4
   McHugh ML, 2012, BIOCHEM MEDICA, V22, P276, DOI 10.11613/bm.2012.031
   Mesecan I, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P1358, DOI 10.1109/ASE51524.2021.9678758
   Monperrus Martin, 2019, Ubiquity, V2019, P1
   Monperrus Martin, 2018, Technical Report hal-01956501
   Nguyen VH, 2016, EMPIR SOFTW ENG, V21, P2268, DOI 10.1007/s10664-015-9408-2
   owasp, Owasp top 10-2021
   Papotti A, 2022, Arxiv, DOI arXiv:2209.07211
   Pashchenko I, 2020, CCS '20: PROCEEDINGS OF THE 2020 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1513, DOI 10.1145/3372297.3417232
   Pinconschi E, 2022, PROCEEDINGS OF THE 31ST ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2022, P789, DOI 10.1145/3533767.3543291
   Pinconschi E, 2021, PROC INT SYMP SOFTW, P196, DOI 10.1109/ISSRE52982.2021.00031
   Pittet S., The different types of software testing
   Ponta Serena Elisa, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P383, DOI 10.1109/MSR.2019.00064
   Saha RK, 2018, IEEE WORK CONF MIN S, P10, DOI 10.1145/3196398.3196473
   Saha RK, 2017, IEEE INT CONF AUTOM, P648, DOI 10.1109/ASE.2017.8115675
   Saha S, 2019, PROC INT CONF SOFTW, P13, DOI 10.1109/ICSE.2019.00020
   samate.nist, The nist software assurance reference dataset project
   Sobreira V, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P130, DOI 10.1109/SANER.2018.8330203
   Vanciu R, 2013, IEEE INT CONF AUTOM, P334, DOI 10.1109/ASE.2013.6693092
   Villanueva OM, 2020, GECCO'20: PROCEEDINGS OF THE 2020 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1021, DOI 10.1145/3377930.3389845
   Vu DL, 2021, 2021 IEEE/ACM INTERNATIONAL WORKSHOP ON AUTOMATED PROGRAM REPAIR (APR 2021), P9, DOI 10.1109/APR52552.2021.00009
   Wagner A, 2014, 2014 11TH INTERNATIONAL CONFERENCE ON SECURITY AND CRYPTOGRAPHY (SECRYPT), P244
   Wang WC, 2019, J SYST SOFTWARE, V156, P100, DOI 10.1016/j.jss.2019.06.076
   Wen M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/3180155.3180233
   White M, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P479, DOI [10.1109/SANER.2019.8668043, 10.1109/saner.2019.8668043]
   Wong CP, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P354, DOI 10.1145/3468264.3468600
   Xin Q, 2017, IEEE INT CONF AUTOM, P660, DOI 10.1109/ASE.2017.8115676
   Xiong YF, 2017, PROC INT CONF SOFTW, P416, DOI 10.1109/ICSE.2017.45
   Xuan JF, 2017, IEEE T SOFTWARE ENG, V43, P34, DOI 10.1109/TSE.2016.2560811
   Ye H, 2022, PROC INT CONF SOFTW, P1506, DOI 10.1145/3510003.3510222
   Yuan Y, 2020, IEEE T SOFTWARE ENG, V46, P1040, DOI 10.1109/TSE.2018.2874648
   Zhang Y, 2021, arXiv, DOI DOI 10.48550/ARXIV.2102.06994
   Zhou Z, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10216-4
   Zhu QH, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P341, DOI 10.1145/3468264.3468544
NR 87
TC 0
Z9 0
U1 1
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2024
VL 29
IS 1
AR 18
DI 10.1007/s10664-023-10415-7
PG 40
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA Z8HS7
UT WOS:001114436400002
OA hybrid
DA 2024-08-05
ER

PT J
AU Turzo, AK
   Bosu, A
AF Turzo, Asif Kamal
   Bosu, Amiangshu
TI What makes a code review useful to OpenDev developers? An empirical
   investigation
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Review
DE Code review; Usefulness; Productivity; Empirical study
ID AGREEMENT; COEFFICIENT; IMPACT
AB ContextDue to the association of significant efforts, even a minor improvement in the effectiveness of Code Reviews(CR) can incur significant savings for a software development organization.ObjectiveThis study aims to develop a finer grain understanding of what makes a code review comment useful to OSS developers, to what extent a code review comment is considered useful to them, and how various contextual and participant-related factors influence its degree of usefulness.MethodOn this goal, we have conducted a three-stage mixed-method study. We randomly selected 2,500 CR comments from the OpenDev Nova project and manually categorized the comments. We designed a survey of OpenDev developers to better understand their perspectives on useful CRs. Combining our survey-obtained scores with our manually labeled dataset, we trained two regression models - one to identify factors that influence the usefulness of CR comments and the other to identify factors that improve the odds of 'Functional' defect identification over the others.ResultsThe results of our study suggest that a CR comment's usefulness is dictated not only by its technical contributions, such as defect findings or quality improvement tips but also by its linguistic characteristics, such as comprehensibility and politeness. While a reviewer's coding experience is positively associated with CR usefulness, the number of mutual reviews, comment volume in a file, the total number of lines added /modified, and CR interval have the opposite associations. While authorship and reviewership experiences for the files under review have been the most popular attributes for reviewer recommendation systems, we do not find any significant association of those attributes with CR usefulness.ConclusionWe recommend discouraging frequent code review associations between two individuals as such associations may decrease CR usefulness. We also recommend authoring CR comments in a constructive and empathetic tone. As several of our results deviate from prior studies, we recommend more investigations to identify context-specific attributes to build reviewer recommendation models.
C1 [Turzo, Asif Kamal; Bosu, Amiangshu] Wayne State Univ, Dept Comp Sci, Detroit, MI 48202 USA.
C3 Wayne State University
RP Bosu, A (corresponding author), Wayne State Univ, Dept Comp Sci, Detroit, MI 48202 USA.
EM asifkamal@wayne.edu; amiangshu.bosu@wayne.edu
RI Bosu, Amiangshu/AAB-1259-2020; Turzo, Asif Kamal/HMP-3568-2023
OI Turzo, Asif Kamal/0000-0002-0869-4962; Bosu,
   Amiangshu/0000-0002-3178-6232
FU National Science Foundation
FX We thank Hemangi Murdande for her assistance during manual data
   labeling.
CR Allison P, 2014, Statistical Horizons, V703
   Asthana S, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P937, DOI 10.1145/3338906.3340449
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Balachandran V, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P931, DOI 10.1109/ICSE.2013.6606642
   Baltes S, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962628
   Barnett M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P134, DOI 10.1109/ICSE.2015.35
   Baum T, 2016, LECT NOTES COMPUT SC, V10027, P301, DOI 10.1007/978-3-319-49094-6_19
   Bayaga A, 2010, J App Quantitative Methods, V5
   Beller M., 2014, 11 WORKING C MINING, P202, DOI DOI 10.1145/2597073.2597082
   BENJAMINI Y, 1995, J R STAT SOC B, V57, P289, DOI 10.1111/j.2517-6161.1995.tb02031.x
   Bosu A, 2017, IEEE T SOFTWARE ENG, V43, P56, DOI 10.1109/TSE.2016.2576451
   Bosu A, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P257, DOI 10.1145/2635868.2635880
   Bosu A, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P146, DOI 10.1109/MSR.2015.21
   Chouchen M, 2021, APPL SOFT COMPUT, V100, DOI 10.1016/j.asoc.2020.106908
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Czerwonka J, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P27, DOI 10.1109/ICSE.2015.131
   Dias M, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P341, DOI 10.1109/SANER.2015.7081844
   Ebert F, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09909-5
   FAGAN ME, 1976, IBM SYST J, V15, P182, DOI 10.1147/sj.153.0182
   Feng Changyong, 2014, Shanghai Arch Psychiatry, V26, P105, DOI 10.3969/j.issn.1002-0829.2014.02.009
   Foley B, 2018, What is regression analysis and why should i use it
   Foundation O, 2022, 2022 openifra foundation annual report
   Fowler M., 2001, Software Development, V9, P28
   Fowler M, 2012, Refactoring Home Page
   Fukushima T., 2014, P 11 WORK C MIN SOFT, P172, DOI DOI 10.1145/2597073.2597075
   Gauthier IX, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P30, DOI 10.1109/ASE51524.2021.9678640
   Gómez VU, 2015, SCI COMPUT PROGRAM, V98, P376, DOI 10.1016/j.scico.2013.08.002
   Governance O, 2023, Openstack project teams
   Gunawan Sumiyati, 2022, Proceedings of the Second International Conference of Construction, Infrastructure, and Materials: ICCIM 2021. Lecture Notes in Civil Engineering (216), P1, DOI 10.1007/978-981-16-7949-0_1
   Han XF, 2021, INT C PROGRAM COMPRE, P323, DOI 10.1109/ICPC52881.2021.00038
   HARRELL FE, 1984, STAT MED, V3, P143, DOI 10.1002/sim.4780030207
   Hasan M, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-10038-w
   Hassan AE, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P123, DOI 10.1109/WCRE.2003.1287243
   Hatton L, 2008, IEEE SOFTWARE, V25, P82, DOI 10.1109/MS.2008.100
   HELLAND IS, 1987, BIOMETRICS, V43, P61, DOI 10.2307/2531949
   Henley A, 2018, PROCEEDINGS OF THE 2018 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2018), DOI 10.1145/3173574.3173731
   Hinkle D.E., 1998, Applied Statistics for the Behavioral Sciences, V4th
   Hirao T, 2020, IEEE Trans Softw Eng
   Hirao T, 2016, IFIP ADV INF COMM TE, V472, P97, DOI 10.1007/978-3-319-39225-7_8
   Hong Yang, 2022, ESEC/FSE 2022: Proceedings of the 30th ACM Joint European Software Engineering Conference and Symposium on the Foundations of Software Engineering, P507, DOI 10.1145/3540250.3549119
   Huang Y, 2022, IEEE T SOFTWARE ENG, V48, P1463, DOI 10.1109/TSE.2020.3021902
   Jiarpakdee J, 2018, PROC IEEE INT CONF S, P92, DOI 10.1109/ICSME.2018.00018
   Kincaid JP, 1975, Tech rep, naval technical training command millington tn research branch
   Kononenko O, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P124, DOI 10.1145/3183519.3183542
   Kononenko O, 2016, PROC INT CONF SOFTW, P1028, DOI 10.1145/2884781.2884840
   Kononenko O, 2015, PROC IEEE INT CONF S, P111, DOI 10.1109/ICSM.2015.7332457
   LANDIS JR, 1977, BIOMETRICS, V33, P363, DOI 10.2307/2529786
   MANSFIELD ER, 1982, AM STAT, V36, P158, DOI 10.2307/2683167
   Mäntylä MV, 2009, IEEE T SOFTWARE ENG, V35, P430, DOI 10.1109/TSE.2008.71
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   McIntosh S, 2016, EMPIR SOFTW ENG, V21, P2146, DOI 10.1007/s10664-015-9381-9
   Mirsaeedi E, 2020, PROC INT CONF SOFTW, P1183, DOI 10.1145/3377811.3380335
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Nagappan Nachiappan, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P364
   NAGELKERKE NJD, 1991, BIOMETRIKA, V78, P691, DOI 10.1093/biomet/78.3.691
   Osbourne J. W., 2002, Practical Assessment, Research Evaluation, V8, DOI DOI 10.7275/R222-HV23
   Pandya Prahar, 2022, ESEC/FSE 2022: Proceedings of the 30th ACM Joint European Software Engineering Conference and Symposium on the Foundations of Software Engineering, P546, DOI 10.1145/3540250.3549115
   Panichella S, 2020, EMPIR SOFTW ENG, V25, P4833, DOI 10.1007/s10664-020-09870-3
   Paul R, 2021, PROC INT CONF SOFTW, P1373, DOI 10.1109/ICSE43902.2021.00124
   Pinto G, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P112, DOI 10.1109/SANER.2016.68
   Qualtrics, 2023, Question types
   Rahman MM, 2017, IEEE WORK CONF MIN S, P215, DOI 10.1109/MSR.2017.17
   Rahman MM, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P222, DOI 10.1145/2889160.2889244
   Rigby P. C., 2013, P ESEC FSE, P202, DOI DOI 10.1145/2491411.2491444
   Rigby PC, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P541, DOI 10.1145/1985793.1985867
   Rong GP, 2022, PROC INT CONF SOFTW, P1381, DOI 10.1145/3510003.3510213
   Sadowski C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P181, DOI 10.1145/3183519.3183525
   Sarker J, 2020, Arxiv, DOI arXiv:2009.09331
   Sarle W, 1990, Sas/stat user's guide: The varclus procedure
   Snow J, 2013, QUALTRICS SURVEY SOF
   Tao Y, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P180, DOI 10.1109/MSR.2015.24
   Thongtanunam P, 2022, PROC INT CONF SOFTW, P237, DOI 10.1145/3510003.3510067
   Thongtanunam P, 2021, IEEE T SOFTWARE ENG, V47, P2698, DOI 10.1109/TSE.2020.2964660
   Thongtanunam P, 2017, EMPIR SOFTW ENG, V22, P768, DOI 10.1007/s10664-016-9452-6
   Thongtanunam P, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P168, DOI 10.1109/MSR.2015.23
   Thongtanunam P, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P141, DOI 10.1109/SANER.2015.7081824
   Tufano R, 2022, PROC INT CONF SOFTW, P2291, DOI 10.1145/3510003.3510621
   Tufano R, 2021, PROC INT CONF SOFTW, P163, DOI 10.1109/ICSE43902.2021.00027
   Yamane T., 1973, Statistics: an introductory analysis, V3
   Zaidman A, 2011, EMPIR SOFTW ENG, V16, P325, DOI 10.1007/s10664-010-9143-7
   Zanaty FE, 2018, P 12 ACMIEEE INT S E, P1
   Zanjani MB, 2016, IEEE T SOFTWARE ENG, V42, P530, DOI 10.1109/TSE.2015.2500238
NR 82
TC 1
Z9 1
U1 2
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2024
VL 29
IS 1
AR 6
DI 10.1007/s10664-023-10411-x
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA Y3FA3
UT WOS:001104148800001
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Danglot, B
   Falleri, JR
   Rouvoy, R
AF Danglot, Benjamin
   Falleri, Jean-Remy
   Rouvoy, Romain
TI Can we spot energy regressions using developers tests?
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Continuous integration; Energy regression; Sustainable software
AB ContextSoftware Energy Consumption is gaining more and more attention. In this paper, we tackle the problem of warning developers about the increase of SEC of their programs during Continuous Integration (CI).ObjectiveIn this study, we investigate if the CI can leverage developers' tests to perform energy regression testing. Energy regression is similar to performance regression but focuses on the energy consumption of the program instead of standard performance indicators, like execution time or memory consumption.MethodWe perform an exploratory study of the usage of developers' tests for energy regression testing. We first investigate if developers' tests can be used to obtain stable SEC indicators. Then, we evaluate if comparing the SEC of developers' tests between two versions can pinpoint energy regressions introduced by automated program mutations. Finally, we manually evaluate several real commits pinpointed by our approach.ResultsOur study will pave the way for automated SEC regression tools that can be readily deployed inside an existing CI infrastructure to raise awareness of SEC issues among practitioners.
C1 [Danglot, Benjamin] Davidson Consulting, Res & Dev, Paris, France.
   [Falleri, Jean-Remy] Univ Bordeaux, Bordeaux INP, CNRS, UMR 5800 LaBRI, F-33400 Talence, France.
   [Falleri, Jean-Remy] Inst Univ France, Paris, France.
   [Rouvoy, Romain] Univ Lille, Inria, CNRS, UMR 9189 CRIStAL, F-59000 Lille, France.
C3 Universite de Bordeaux; Centre National de la Recherche Scientifique
   (CNRS); Institut Universitaire de France; Universite de Lille; Centre
   National de la Recherche Scientifique (CNRS); Inria
RP Danglot, B (corresponding author), Davidson Consulting, Res & Dev, Paris, France.
EM bdanglot@gmail.com; romain.rouvoy@univ-lille.fr
FX DAS:Our implementation is available as an Open-source Software
   repository on GitHub:
   https://github.com/davidson-consulting/diff-jjoules. The data produced
   by our experiments are available on Zenodo
   https://doi.org/10.5281/zenodo.6528916. Scripts to perform the
   experiments and generate graph are available on GitHub:
   https://github.com/davidson-consulting/diff-jjoules-experiment.
CR Beller M, 2017, IEEE WORK CONF MIN S, P356, DOI 10.1109/MSR.2017.62
   Chen JF, 2017, PROC IEEE INT CONF S, P341, DOI 10.1109/ICSME.2017.13
   Chowdhury SA, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P49, DOI [10.1109/MSR.2016.015, 10.1145/2901739.2901763]
   Cochran WG., 1977, Sampling Techniques, V3
   Cohen J., 1988, Statistical power analysis for the behavioral sciences
   Danglot B, 2021, Arxiv, DOI arXiv:2108.05691
   Danglot B, 2020, EMPIR SOFTW ENG, V25, P2379, DOI 10.1007/s10664-019-09794-7
   Ding ZS, 2020, PROC INT CONF SOFTW, P1435, DOI 10.1145/3377811.3380351
   Engström E, 2010, INFORM SOFTWARE TECH, V52, P14, DOI 10.1016/j.infsof.2009.07.001
   Hindle A, 2014, ser. MSR 2014, P12, DOI DOI 10.1145/2597073.2597097
   Hindle A, 2015, EMPIR SOFTW ENG, V20, P374, DOI 10.1007/s10664-013-9276-6
   Luo Q, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P25, DOI [10.1109/MSR.2016.013, 10.1145/2901739.2901765]
   Maia D, 2020, 2020 35TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING WORKSHOPS (ASEW 2020), P170, DOI 10.1145/3417113.3422999
   Mancebo J, 2021, INFORM SOFTWARE TECH, V134, DOI 10.1016/j.infsof.2021.106560
   Mancebo J, 2021, SOFTWARE QUAL J, V29, P101, DOI 10.1007/s11219-020-09536-9
   Meszaros G, 2007, xUnit test patterns: Refactoring test code
   Ournani Z, 2021, ICSOFT 2021 16 INT C
   Ournani Z, 2020, ESEM 2020 ACM IEEE I
   Ournani Z, 2020, PROCEEDINGS OF THE ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE'20), P36, DOI 10.1145/3358960.3379142
   Pawlak R, 2016, SOFTWARE PRACT EXPER, V46, P1155, DOI 10.1002/spe.2346
   Pereira R, 2020, J SYST SOFTWARE, V161, DOI 10.1016/j.jss.2019.110463
   Romansky S, 2017, PROC IEEE INT CONF S, P273, DOI 10.1109/ICSME.2017.79
   Weaver V. M., 2012, 2012 41st International Conference on Parallel Processing Workshops (ICPPW 2012), P262, DOI 10.1109/ICPPW.2012.39
   Wohlin C., 2012, Experimentation in Software Engineering, DOI [10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
NR 25
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2024
VL 29
IS 5
AR 121
DI 10.1007/s10664-023-10429-1
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZO3N6
UT WOS:001276200900005
DA 2024-08-05
ER

PT J
AU Rosa, G
   Zappone, F
   Scalabrino, S
   Oliveto, R
AF Rosa, Giovanni
   Zappone, Federico
   Scalabrino, Simone
   Oliveto, Rocco
TI Fixing Dockerfile smells: an empirical study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Dockerfile smells; Empirical software engineering; Software evolution
AB Docker is the de facto standard for software containerization. A Dockerfile contains the requirements to build a Docker image containing a target application. There are several best practice rules for writing Dockerfiles, but the developers do not always follow them. Violations of such practices, known as Dockerfile smells, can negatively impact the reliability and performance of Docker images. Previous studies showed that Dockerfile smells are widely diffused, and there is a lack of automatic tools that support developers in fixing them. However, it is still unclear what Dockerfile smells get fixed by developers and to what extent developers would be willing to fix smells in the first place. The aim of our study is twofold. First, we want to understand what Dockerfiles smells receive more attention from developers, i.e., are fixed more frequently in the history of open-source projects. Second, we want to check if developers are willing to accept changes aimed at fixing Dockerfile smells (e.g., generated by an automated tool), to understand if they care about them. We evaluated the survivability of Dockerfile smells from a total of 53,456 unique Dockerfiles, where we manually validated a large sample of smell-removing commits to understand (i) if developers performed the change with the intention of removing bad practices, and (ii) if they were aware of the removed smell. In the second part, we used a rule-based tool to automatically fix Dockerfile smells. Then, we proposed such fixes to developers via pull requests. Finally, we quantitatively and qualitatively evaluated the outcome after a monitoring period of more than 7 months. The results of our study showed that most developers pay more attention to changes aimed at improving the performance of Dockerfiles (image size and build time). Moreover, they are willing to accept the fixes for the most common smells, with some exceptions (e.g., missing version pinning for OS packages).
C1 [Rosa, Giovanni; Zappone, Federico; Scalabrino, Simone; Oliveto, Rocco] Univ Molise, STAKE Lab, Campobasso, Italy.
C3 University of Molise
RP Rosa, G (corresponding author), Univ Molise, STAKE Lab, Campobasso, Italy.
EM g.rosa1@studenti.unimol.it; f.zappone1@studenti.unimol.it;
   simone.scalabrino@unimol.it; rocco.oliveto@unimol.it
OI Rosa, Giovanni/0000-0002-5241-1608
FU European Union - NextGenerationEU through the Italian Ministry of
   University and Research, Projects PRIN 2022 "QualAI: Continuous Quality
   Improvement of AI-based Systems" [2022B3BP5S, CUP: H53D23003510006]
FX The work by Rocco Oliveto, Giovanni Rosa, and Simone Scalabrino was
   supported by the European Union - NextGenerationEU through the Italian
   Ministry of University and Research, Projects PRIN 2022 "QualAI:
   Continuous Quality Improvement of AI-based Systems", grant n.
   2022B3BP5S, CUP: H53D23003510006.
CR Azuma H, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10081-7
   Cito J, 2017, IEEE WORK CONF MIN S, P323, DOI 10.1109/MSR.2017.67
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Dabic O, 2021, IEEE WORK CONF MIN S, P560, DOI 10.1109/MSR52588.2021.00074
   Eng K, 2021, IEEE WORK CONF MIN S, P449, DOI 10.1109/MSR52588.2021.00057
   Fowler M., 2018, Refactoring: improving the design of existing code
   Henkel J, 2020, PROC INT CONF SOFTW, P38, DOI 10.1145/3377811.3380406
   Kitajima S, 2020, LECT NOTES COMPUT SC, V12571, P547, DOI 10.1007/978-3-030-65310-1_40
   Kruchten P, 2012, IEEE SOFTWARE, V29, P18, DOI 10.1109/MS.2012.167
   Ksontini E, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P781, DOI 10.1109/ASE51524.2021.9678585
   Lin CY, 2020, PROC IEEE INT CONF S, P371, DOI 10.1109/ICSME46990.2020.00043
   Regier DA, 2013, AM J PSYCHIAT, V170, P59, DOI 10.1176/appi.ajp.2012.12070999
   Rosa G, 2024, Replication package, DOI [10.6084/m9.figshare.23522679, DOI 10.6084/M9.FIGSHARE.23522679]
   Spencer D., 2009, CARD SORTING DESIGNI
   Tufano M, 2017, IEEE T SOFTWARE ENG, V43, P1063, DOI 10.1109/TSE.2017.2653105
   Vassallo C, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P327, DOI 10.1145/3368089.3409709
   Wu YW, 2020, IEEE ACCESS, V8, P34127, DOI 10.1109/ACCESS.2020.2973750
   Yuxing Ma, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P143, DOI 10.1109/MSR.2019.00031
   Zerouali A, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P491, DOI [10.1109/saner.2019.8668013, 10.1109/SANER.2019.8668013]
   Zhang Y, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P295, DOI 10.1145/3236024.3236033
NR 20
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2024
VL 29
IS 5
AR 108
DI 10.1007/s10664-024-10471-7
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XR4M9
UT WOS:001263393400001
OA hybrid
DA 2024-08-05
ER

PT J
AU Wu, JY
   He, H
   Gao, K
   Xiao, WX
   Li, JY
   Zhou, MH
AF Wu, Jianyu
   He, Hao
   Gao, Kai
   Xiao, Wenxin
   Li, Jingyue
   Zhou, Minghui
TI A comprehensive analysis of challenges and strategies for software
   release notes on GitHub
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Release engineering; Release note; Empirical study; Taxonomy
AB Release notes (RNs) refer to the technical documentation that offers users, developers, and other stakeholders comprehensive information about the changes and updates of a new software version. Producing high-quality RNs can be challenging, and it remains unknown what issues developers commonly encounter and what effective strategies can be adopted to mitigate them. To bridge this knowledge gap, we conduct a manual analysis of 1,529 latest RN-related issues in the GitHub issue tracker by using multiple rounds of open coding and construct 1) a comprehensive taxonomy of RN-related issues with four dimensions validated through three semi-structured interviews; 2) an effective framework with eight categories of strategies to overcome these challenges. The four dimensions of RN-related issues revealed by the taxonomy and the corresponding strategies from the framework include: 1) Content (419, 25.47%): RN producers tend to overlook information rather than include inaccurate details, especially for breaking changes. To address this, effective completeness validations are recommended, such as managing Pull Requests, issues, and commits related to RNs; 2) Presentation (150, 9.12%): inadequate layout may bury important information and lead to end users' confusion, which can be mitigated by employing a hierarchical structure, standardized format, rendering RNs, and folding techniques; 3) Accessibility (303, 18.42%): many users find RNs inaccessible due to link deterioration, insufficient notification, and obfuscated RN locations. This can be alleviated by adopting appropriate locations and channels (such as project websites) and standardizing link management.; 4) Production (773, 46.99%): despite the high demand from RN producers, automating and standardizing the RN production process remains challenging. Developers resolve this problem by using some mature tools on GitHub (like Release Drafter). Additionally, offering guidance, clarifying responsibilities, and distributing workloads are effective in improving collaboration within the team. Mechanisms for distributing and verifying RNs are also selected to enhance synchronization management. Our taxonomy provides a comprehensive blueprint to improve RN production in practice and also reveals interesting future research directions.
C1 [Wu, Jianyu; He, Hao; Gao, Kai; Xiao, Wenxin; Zhou, Minghui] Peking Univ, Key Lab High Confidence Software Technol, Minist Educ, Beijing, Peoples R China.
   [Li, Jingyue] Norwegian Univ Sci & Technol, Trondheim, Norway.
C3 Peking University; Norwegian University of Science & Technology (NTNU)
RP Wu, JY (corresponding author), Peking Univ, Key Lab High Confidence Software Technol, Minist Educ, Beijing, Peoples R China.
EM jy.wu@pku.edu.cn; heh@pku.edu.cn; gaokai19@pku.edu.cn;
   wenxin.xiao@stu.pku.edu.cn; jingyue.li@ntnu.no; zhmh@pku.edu.cn
FU the National Natural Science Foundation of China Grant [61825201,
   62332001]; National Natural Science Foundation of China
FX This work is supported by the National Natural Science Foundation of
   China Grant 61825201 and 62332001.
CR Abebe SL, 2016, EMPIR SOFTW ENG, V21, P1107, DOI 10.1007/s10664-015-9377-5
   Aghajani E, 2020, PROC INT CONF SOFTW, P590, DOI 10.1145/3377811.3380405
   Aghajani E, 2019, PROC INT CONF SOFTW, P1199, DOI 10.1109/ICSE.2019.00122
   Ahire JB, 2021, Issue #156 of hypertrace/hypertrace
   Alali A, 2008, INT C PROGRAM COMPRE, P182, DOI 10.1109/ICPC.2008.24
   Beyer S, 2018, INT C PROGRAM COMPRE, P211, DOI 10.1145/3196321.3196333
   Bi Tingting, 2022, IEEE Transactions on Software Engineering, V48, P1834, DOI 10.1109/TSE.2020.3038881
   Chen ZP, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P750, DOI 10.1145/3368089.3409759
   Coelho R, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P134, DOI 10.1109/MSR.2015.20
   El-Kassas WS, 2021, EXPERT SYST APPL, V165, DOI 10.1016/j.eswa.2020.113679
   Ghadhab L, 2021, INFORM SOFTWARE TECH, V135, DOI 10.1016/j.infsof.2021.106566
   He H, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P478, DOI 10.1145/3468264.3468571
   Holloway FW, 1985, Praxis release notes
   Hove SE, 2005, 2005 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS (METRICS), P201
   Humbatova N, 2020, PROC INT CONF SOFTW, P1110, DOI 10.1145/3377811.3380395
   Jiang HX, 2021, ASIA PAC SOFWR ENG, P101, DOI 10.1109/APSEC53868.2021.00018
   Jiang J, 2021, INFORM SOFTWARE TECH, V129, DOI 10.1016/j.infsof.2020.106394
   Kamezawa H, 2022, PROCEEDINGS OF THE 60TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2022), VOL 1: (LONG PAPERS), P8718
   Klepper S, 2016, INTERNATIONAL WORKSHOP ON CONTINUOUS SOFTWARE EVOLUTION AND DELIVERY, CSED 2016, P19, DOI [10.1145/2896941.2896953, 10.1109/CSED.2016.012]
   Lam P, 2020, PROCEEDINGS OF THE 2020 ACM SIGPLAN INTERNATIONAL SYMPOSIUM ON NEW IDEAS, NEW PARADIGMS, AND REFLECTIONS ON PROGRAMMING AND SOFTWARE (ONWARD! '20), P157, DOI 10.1145/3426428.3426922
   Levin S, 2017, Boosting automatic commit classification into maintenance activities by utilizing source code changes, P97, DOI [10.1145/3127005.3127016, DOI 10.1145/3127005.3127016]
   Lin Tan, 2007, Operating Systems Review, V41, P145, DOI 10.1145/1323293.1294276
   Maalej Walid, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P191, DOI 10.1109/MSR.2010.5463344
   Michlmayr M., 2007, Quality Improvement in Volunteer Free and Open Source Software Projects - Exploring the Impact of Release Management
   Mingran Li, 2017, Communication Design Quarterly Review, V5, P43, DOI 10.1145/3090152.3090156
   Moreno L, 2017, IEEE T SOFTWARE ENG, V43, P106, DOI 10.1109/TSE.2016.2591536
   Nath SS, 2022, EUR CON SFTWR MTNCE, P1270, DOI 10.1109/SANER53432.2022.00152
   Nath SS, 2021, INT C SOFTW ENG KNOW, P241
   Olsson HH, 2014, EUROMICRO CONF PROC, P9, DOI 10.1109/SEAA.2014.75
   Rossi B, 2009, INT FED INFO PROC, V299, P83
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Shihab E, 2013, EMPIR SOFTW ENG, V18, P1005, DOI 10.1007/s10664-012-9228-6
   Swanson E. B., 1976, 2nd International Conference on Software Engineering, P492
   Toshevska Martina, 2022, IEEE Transactions on Artificial Intelligence, V3, P669, DOI 10.1109/TAI.2021.3115992
   Wu JY, 2023, Soft Anal Evol Reeng, P473, DOI 10.1109/SANER56733.2023.00051
   Wu JY, 2022, INT C PROGRAM COMPRE, P602, DOI 10.1145/3524610.3527919
   Xin Tan, 2019, Proceedings of the ACM on Human-Computer Interaction, V3, DOI 10.1145/3359210
   Yang AZH, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10086-2
   Yang AZ, 2021, Empirical Soft Eng, P1
   Yu L, 2009, CLEI Electron J, V12, P1, DOI [10.19153/cleiej.12.2.1, DOI 10.19153/CLEIEJ.12.2.1]
   Yu S, 2018, 2018 IEEE INT C COMM, P1
   Zhai J, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P25, DOI 10.1145/3368089.3409716
   Zhang TY, 2019, PROC INT SYMP SOFTW, P104, DOI 10.1109/ISSRE.2019.00020
   Zhang YX, 2021, IEEE T SOFTWARE ENG, V47, P2242, DOI 10.1109/TSE.2019.2946156
NR 44
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2024
VL 29
IS 5
AR 104
DI 10.1007/s10664-024-10486-0
PG 43
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WA3Q4
UT WOS:001252113000001
DA 2024-08-05
ER

PT J
AU Ebrahimi, AM
   Adams, B
   Oliva, GA
   Hassan, AE
AF Ebrahimi, Amir M.
   Adams, Bram
   Oliva, Gustavo A.
   Hassan, Ahmed E.
TI A large-scale exploratory study on the proxy pattern in Ethereum
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Proxy pattern; Proxy; Maintenance; Smart contracts; Ethereum; Blockchain
AB The proxy pattern is a well-known design pattern with numerous use cases in several sectors of the software industry (e.g., network applications, microservices, and IoT). As such, the use of the proxy pattern is also a common approach in the development of complex decentralized applications (DApps) on the Ethereum blockchain. A contract that implements the proxy pattern (proxy contract) acts as a layer between the clients and the target contract, enabling greater flexibility (e.g., data validation checks) and upgradeability (e.g., online smart contract replacement with zero downtime) in DApp development. Despite the importance of proxy contracts, little is known about (i) how their prevalence changed over time, (ii) the ways in which developers integrate proxies in the design of DApps, and (iii) what proxy types are being most commonly leveraged by developers. In this paper, we present a large-scale exploratory study on the use of the proxy pattern in Ethereum. We analyze a dataset of all Ethereum smart contracts as of Sep. 2022 containing 50M smart contracts and 1.6B transactions, and apply both quantitative and qualitative methods in order to (i) determine the prevalence of proxy contracts, (ii) understand the ways they are deployed and integrated into applications, and (iii) uncover the prevalence of different types of proxy contracts. Our findings reveal that 14.2% of all deployed smart contracts are proxy contracts. We show that proxy contracts are being more actively used than non-proxy contracts. Also, the usage of proxy contracts in various contexts, transactions involving proxy contracts, and adoption of proxy contracts by users have shown an upward trend over time, peaking at the end of our study period. They are either deployed through off-chain scripts or on-chain factory contracts, with the former and latter being employed in 39.1% and 60.9% of identified usage contexts in turn. We found that while the majority (67.8%) of proxies act as an interceptor, 32.2% enables upgradeability. Proxy contracts are typically (79%) implemented based on known reference implementations with 29.4% being of type ERC-1167, a class of proxies that aims to cheaply reuse and clone contracts' functionality. Our evaluation shows that our proposed behavioral proxy detection method has a precision and recall of 100% in detecting active proxies. Finally, we derive a set of practical recommendations for developers and introduce open research questions to guide future research on the topic.
C1 [Ebrahimi, Amir M.; Oliva, Gustavo A.; Hassan, Ahmed E.] Queens Univ, Sch Comp, Software Anal & Intelligence Lab SAIL, 99 Univ Ave, Kingston, ON K7L 3N6, Canada.
   [Adams, Bram] Queens Univ, Sch Comp, Lab Maintenance Construct & Intelligence Software, 99 Univ Ave, Kingston, ON K7L 3N6, Canada.
C3 Queens University - Canada; Queens University - Canada
RP Ebrahimi, AM (corresponding author), Queens Univ, Sch Comp, Software Anal & Intelligence Lab SAIL, 99 Univ Ave, Kingston, ON K7L 3N6, Canada.
EM amir.ebrahimi@cs.queensu.ca; bram.adams@cs.queensu.ca;
   gustavo@cs.queensu.ca; ahmed@cs.queensu.ca
OI Ebrahimi, AmirMohammad/0000-0003-0706-9820
FU NSERC
FX No Statement Available
CR Bloom G, 2018, 2018 14TH IEEE INTERNATIONAL WORKSHOP ON FACTORY COMMUNICATION SYSTEMS (WFCS 2018)
   Certik, 2022, Upgradeable proxy contract security best practices
   Chen JC, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3488245
   Dharma, 2019, Dharma-smart-wallet: Upgradeablebeacon
   Ethereum, 2023, Upgrading smart contracts
   Feist J, 2019, 2019 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON EMERGING TRENDS IN SOFTWARE ENGINEERING FOR BLOCKCHAIN (WETSEB 2019), P8, DOI 10.1109/WETSEB.2019.00008
   GabrielBarros PG, 2019, Eip-1822: Universal upgradeable proxy standard (uups) draft
   Gamma E, 1995, Design Patterns: Elements of Reusable Object-Oriented Software
   Gnosis, 2023, Gnosis/evm-proxy-detection: Detect proxy contracts and their target addresses using ethers
   Indrasiri K, 2021, Design patterns for cloud native applications
   JorgeIzquierdo MA, 2018, Eip-897: Delegateproxy
   Kannengiesser N, 2022, IEEE T SOFTWARE ENG, V48, P4291, DOI 10.1109/TSE.2021.3116808
   Kondo M, 2020, EMPIR SOFTW ENG, V25, P4617, DOI 10.1007/s10664-020-09852-5
   Lin JHI, 2023, EMPIR SOFTW ENG, V28, DOI 10.1007/s10664-022-10267-7
   Liu Y, 2023, J SYST SOFTWARE, V197, DOI 10.1016/j.jss.2022.111576
   Mudge N, 2020, Erc-2535: Diamonds, multi-facet proxy
   Nanjundeswaraswamy T.S., 2021, Proceedings on engineering sciences, P25, DOI [DOI 10.24874/PES03.01.003, https://doi.org/10.24874/PES03.01.003]
   Ngaogate Wasana, 2019, Journal of Software, V14, P220, DOI 10.17706/jsw.14.5.220-226
   Oliva GA, 2021, P ACM JOINT EUR SOFT
   Oliva GA, 2020, EMPIR SOFTW ENG, V25, P1864, DOI 10.1007/s10664-019-09796-5
   OpenZeppelin, 2023, How to set up on-chain governance
   OpenZeppelin, 2018, Proxy patterns
   OpenZeppelin, 2017, Openzeppelin lab
   OpenZeppelin, 2023, Proxies
   Pacheco M, 2022, an empirical study
   Pacheco M, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3549542
   Pacheco M, 2023, EMPIR SOFTW ENG, V28, DOI 10.1007/s10664-022-10283-7
   PeterMurray NW, 2018, Eip-1167: Minimal proxy contract
   Qasse I, 2023, Smart contract upgradeability on the ethereum blockchain platform: An exploratory study
   Rajasekar V, 2020, ICSOFT: PROCEEDINGS OF THE 15TH INTERNATIONAL CONFERENCE ON SOFTWARE TECHNOLOGIES, P242, DOI 10.5220/0009892702420249
   Richter D, 2018, CLOSER: PROCEEDINGS OF THE 8TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND SERVICES SCIENCE, P608, DOI 10.5220/0006791006080615
   Romano J., 2006, ANN M FLOR ASS I RES, DOI DOI 10.1017/CBO9781107415324.004
   Salehi M, 2022, arXiv
   SantiagoPalladino FG, 2019, Eip-1967: Proxy storage slots
   Shapiro M., 1986, 6th International Conference on Distributed Computing Systems Proceedings (Cat. No. 86CH2293-9), P198
   Tagra A, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10133-6
   Wöhrer M, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON BLOCKCHAIN (BLOCKCHAIN 2021), P244, DOI 10.1109/Blockchain53845.2021.00040
   Wöhrer M, 2018, IEEE 2018 INTERNATIONAL CONGRESS ON CYBERMATICS / 2018 IEEE CONFERENCES ON INTERNET OF THINGS, GREEN COMPUTING AND COMMUNICATIONS, CYBER, PHYSICAL AND SOCIAL COMPUTING, SMART DATA, BLOCKCHAIN, COMPUTER AND INFORMATION TECHNOLOGY, P1513, DOI 10.1109/Cybermatics_2018.2018.00255
   Worley CR, 2019, LECT NOTES BUS INF P, V339, P264, DOI 10.1007/978-3-030-04849-5_24
   Xu XW, 2021, 2021 IEEE 18TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P47, DOI 10.1109/ICSA51549.2021.00013
   Zarir AA, 2021, IN PRESS
NR 41
TC 0
Z9 0
U1 1
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2024
VL 29
IS 4
AR 81
DI 10.1007/s10664-024-10485-1
PG 51
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TB0R8
UT WOS:001238684900003
DA 2024-08-05
ER

PT J
AU Wimalasooriya, C
   Licorish, SA
   da Costa, DA
   MacDonell, SG
AF Wimalasooriya, Chathrie
   Licorish, Sherlock A.
   da Costa, Daniel Alencar
   MacDonell, Stephen G.
TI Just-in-Time crash prediction for mobile apps
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Android apps; Reliability; Crash; Just-in-Time prediction
ID DEFECT PREDICTION; LOGISTIC-REGRESSION; SOFTWARE; METRICS; AGREEMENT
AB Just-In-Time (JIT) defect prediction aims to identify defects early, at commit time. Hence, developers can take precautions to avoid defects when the code changes are still fresh in their minds. However, the utility of JIT defect prediction has not been investigated in relation to crashes of mobile apps. We therefore conducted a multi-case study employing both quantitative and qualitative analysis. In the quantitative analysis, we used machine learning techniques for prediction. We collected 113 reliability-related metrics for about 30,000 commits from 14 Android apps and selected 14 important metrics for prediction. We found that both standard JIT metrics and static analysis warnings are important for JIT prediction of mobile app crashes. We further optimized prediction performance, comparing seven state-of-the-art defect prediction techniques with hyperparameter optimization. Our results showed that Random Forest is the best performing model with an AUC-ROC of 0.83. In our qualitative analysis, we manually analysed a sample of 642 commits and identified different types of changes that are common in crash-inducing commits. We explored whether different aspects of changes can be used as metrics in JIT models to improve prediction performance. We found these metrics improve the prediction performance significantly. Hence, we suggest considering static analysis warnings and Android-specific metrics to adapt standard JIT defect prediction models for a mobile context to predict crashes. Finally, we provide recommendations to bridge the gap between research and practice and point to opportunities for future research.
C1 [Wimalasooriya, Chathrie; Licorish, Sherlock A.; da Costa, Daniel Alencar; MacDonell, Stephen G.] Univ Otago, Dept Informat Sci, Dunedin, New Zealand.
C3 University of Otago
RP Wimalasooriya, C (corresponding author), Univ Otago, Dept Informat Sci, Dunedin, New Zealand.
EM chathrie.wimalasooriya@postgrad.otago.ac.nz;
   sherlock.licorish@otago.ac.nz; danielcalencar@otago.ac.nz;
   stephen.macdonell@otago.ac.nz
FU University of Otago
FX No Statement Available
CR Aljamaan H, 2020, PROCEEDINGS OF THE 16TH ACM INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING, PROMISE 2020, P1, DOI 10.1145/3416508.3417114
   Allison P, 2013, What's the Best R-Squared for Logistic Regression?, V2022
   An L, 2015, P 11 INT C PRED MOD, P1
   Analyticsvidhya, Data Leakage And Its Effect On The Performance of An ML Model
   Andra L-M, 2020, P 2020 EUR S SOFTW E, P1
   [Anonymous], 2022, Machine Learning Mastery
   [Anonymous], Sklearn.model selection.GridSearchCV." scikit-learn
   Arnaoudova V, 2014, IEEE T SOFTWARE ENG, V40, P502, DOI 10.1109/TSE.2014.2312942
   Asaduzzaman M., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P116, DOI 10.1109/MSR.2012.6224267
   Barnett JG, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P496, DOI [10.1145/2901739.2903496, 10.1109/MSR.2016.063]
   Bessey A, 2010, COMMUN ACM, V53, P66, DOI 10.1145/1646353.1646374
   Black TR, 1999, sage
   BOEHM B, 1987, IEEE SOFTWARE, V4, P84
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Callan J, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10137-2
   Neto EC, 2019, INT SYMP EMP SOFTWAR, P94
   Neto EC, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P380, DOI 10.1109/SANER.2018.8330225
   Çarka J, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10186-7
   Cataldo M, 2009, IEEE T SOFTWARE ENG, V35, P864, DOI 10.1109/TSE.2009.42
   Catolino Gemma, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P201, DOI 10.1109/MOBILESoft.2017.58
   Catolino G, 2019, 2019 IEEE/ACM 6TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2019), P99, DOI 10.1109/MOBILESoft.2019.00023
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chen TQ, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P785, DOI 10.1145/2939672.2939785
   Cheng T, 2022, FRONT COMPUT SCI-CHI, V16, DOI 10.1007/s11704-021-1013-5
   Chirila C., 2011, 2011 6th IEEE International Symposium on Applied Computational Intelligence and Informatics (SACI), P341, DOI 10.1109/SACI.2011.5873026
   Christakis M, 2016, IEEE INT CONF AUTOM, P332, DOI 10.1145/2970276.2970347
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   da Costa DA, 2017, IEEE T SOFTWARE ENG, V43, P641, DOI 10.1109/TSE.2016.2616306
   DeMaris A, 2002, SOCIOL METHOD RES, V31, P27, DOI 10.1177/0049124102031001002
   Di Nucci D, 2018, IEEE T SOFTWARE ENG, V44, P5, DOI 10.1109/TSE.2017.2659747
   Dickerson J, 2016, A global study of consumers expectations and experiences of mobile applications
   Dietterich TG, 2000, LECT NOTES COMPUT SC, V1857, P1, DOI 10.1007/3-540-45014-9_1
   Ding J., 2018, J. Intell. Comput., V9, P93, DOI DOI 10.6025/jic/2018/9/3/93-101
   Do LNQ, 2022, IEEE T SOFTWARE ENG, V48, P835, DOI 10.1109/TSE.2020.3004525
   El Zarif O, 2020, IEEE WORK CONF MIN S, P339, DOI 10.1145/3379597.3387456
   Falessi D, 2020, EMPIR SOFTW ENG, V25, P4805, DOI 10.1007/s10664-020-09868-x
   Fan LL, 2018, IEEE INT CONF AUTOM, P486, DOI 10.1145/3238147.3238170
   Fan LL, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P408, DOI 10.1145/3180155.3180222
   Fan YR, 2021, IEEE T SOFTWARE ENG, V47, P1559, DOI 10.1109/TSE.2019.2929761
   Fenton NE, 1999, IEEE T SOFTWARE ENG, V25, P675, DOI 10.1109/32.815326
   Feurer M, 2019, SPRING SER CHALLENGE, P3, DOI 10.1007/978-3-030-05318-5_1
   Fukushima T., 2014, P 11 WORK C MIN SOFT, P172, DOI DOI 10.1145/2597073.2597075
   Gardner MW, 1998, ATMOS ENVIRON, V32, P2627, DOI 10.1016/S1352-2310(97)00447-0
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Gopstein D, 2018, IEEE WORK CONF MIN S, P281, DOI 10.1145/3196398.3196432
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   He YY, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P296, DOI 10.1109/QRS.2017.40
   Hecht G, 2015, IEEE INT CONF AUTOM, P236, DOI 10.1109/ASE.2015.46
   Hecht G, 2015, 2ND ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS MOBILESOFT 2015, P148, DOI 10.1109/MobileSoft.2015.38
   Hemmert GAJ, 2018, SOCIOL METHOD RES, V47, P507, DOI 10.1177/0049124116638107
   Huang J, 2019, 2019 4TH IEEE EUROPEAN SYMPOSIUM ON SECURITY AND PRIVACY (EUROS&P), P15, DOI 10.1109/EuroSP.2019.00012
   Immaculate SD, 2019, 2019 INT C DAT SCI C, P1
   Imtiaz N, 2019, PROC INT SYMP SOFTW, P323, DOI 10.1109/ISSRE.2019.00040
   iso, 2011, ISO/IEC 25010, ISO/ IEC 25010: 2011
   Jia Wu, 2019, Journal of Electronic Science and Technology, V17, P26, DOI 10.11989/JEST.1674-862X.80904120
   Jovic A, 2015, 2015 8TH INTERNATIONAL CONVENTION ON INFORMATION AND COMMUNICATION TECHNOLOGY, ELECTRONICS AND MICROELECTRONICS (MIPRO), P1200, DOI 10.1109/MIPRO.2015.7160458
   Kamei Yasutaka, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P196
   Kamei Y, 2016, EMPIR SOFTW ENG, V21, P2072, DOI 10.1007/s10664-015-9400-x
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kaur A, 2016, ADV INTELL SYST, V433, P81, DOI 10.1007/978-81-322-2755-7_10
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kim S, 2006, IEEE INT CONF AUTOM, P81
   Kim S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P481, DOI 10.1145/1985793.1985859
   Koziarski Michal, 2021, IEEE INT JOINT C NEU, DOI DOI 10.1109/IJCNN52387.2021.9533415
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Laradji IH, 2015, INFORM SOFTWARE TECH, V58, P388, DOI 10.1016/j.infsof.2014.07.005
   Li N, 2020, INFORM SOFTWARE TECH, V122, DOI 10.1016/j.infsof.2020.106287
   Li WW, 2020, INFORM SOFTWARE TECH, V126, DOI 10.1016/j.infsof.2020.106364
   Lomio F, 2022, J SYST SOFTWARE, V188, DOI 10.1016/j.jss.2022.111283
   Mateus BG, 2019, EMPIR SOFTW ENG, V24, P3356, DOI 10.1007/s10664-019-09727-4
   McIlroy S, 2016, EMPIR SOFTW ENG, V21, P1346, DOI 10.1007/s10664-015-9388-2
   McIntosh S, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P560, DOI 10.1145/3180155.3182514
   Meldrum S, 2020, SCI COMPUT PROGRAM, V199, DOI 10.1016/j.scico.2020.102516
   Menzies T, 2013, IEEE T SOFTWARE ENG, V39, P822, DOI 10.1109/TSE.2012.83
   Mockus A, 2000, BELL LABS TECH J, V5, P169, DOI 10.1002/bltj.2229
   MUNSON JC, 1992, IEEE T SOFTWARE ENG, V18, P423, DOI 10.1109/32.135775
   Nayebi M, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P552, DOI 10.1109/SANER.2016.116
   Okutan A, 2014, EMPIR SOFTW ENG, V19, P154, DOI 10.1007/s10664-012-9218-8
   Paleyes A, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3533378
   Pascarella L, 2019, J SYST SOFTWARE, V150, P22, DOI 10.1016/j.jss.2018.12.001
   Pascarella L, 2018, 2018 IEEE/ACM 5TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT), P144, DOI 10.1145/3197231.3197251
   Peng ZH, 2019, INT CONF MEAS, P431, DOI 10.1109/ICMTMA.2019.00101
   Perry D. E., 2000, EMPIRICAL STUDIES SO, P345, DOI [10.1145/336512.336586, DOI 10.1145/336512.336586]
   Vu PM, 2015, IEEE INT CONF AUTOM, P749, DOI 10.1109/ASE.2015.85
   Quinlan J. R., 1986, Machine Learning, V1, P81, DOI 10.1023/A:1022643204877
   R-Documentation, Pseudo R 2 Statistics
   Rahman F, 2011, Proceedings of the 19th ACM SIGSOFT Symposium and the 13th European Conference on Foundations of Software Engineering, ESEC/FSE '11, P322, DOI [10.1145/2025113.2025157, DOI 10.1145/2025113]
   Rish I., 2001, IJCAI 2001 WORKSH EM, P41, DOI DOI 10.1039/B104835J
   Rodriguez D., 2014, P 18 INT C EV ASS SO, P1
   Rodríguez-Pérez G, 2018, INFORM SOFTWARE TECH, V99, P164, DOI 10.1016/j.infsof.2018.03.009
   Rokach L, 2010, ARTIF INTELL REV, V33, P1, DOI 10.1007/s10462-009-9124-7
   Rosen C, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P966, DOI 10.1145/2786805.2803183
   S. Inc, Mobile operating systems' market share worldwide from January 2012 to November 2022
   Sadeghi A, 2017, IEEE T SOFTWARE ENG, V43, P492, DOI 10.1109/TSE.2016.2615307
   Santos G, 2020, PROCEEDINGS OF THE 19TH BRAZILIAN SYMPOSIUM ON SOFTWARE QUALITY, SBOS 2020, DOI 10.1145/3439961.3439979
   Scalabrino Simone, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P288, DOI 10.1109/MSR.2019.00055
   Shihab Emad., 2012, EXPLORATION CHALLENG
   Shin Jiho, 2021, arXiv
   Shu R, 2019, Arxiv, DOI arXiv:1905.06872
   Sliwerski Jacek, 2005, SIGSOFT SOFTW ENG NO, V30, p1aAS5, DOI [DOI 10.1145/1082983.1083147, 10.1145/1083142.1083147]
   Sommerville I., 2011, Software engineering, V9th ed.
   Song QB, 2019, IEEE T SOFTWARE ENG, V45, P1253, DOI 10.1109/TSE.2018.2836442
   Su T, 2022, IEEE T SOFTWARE ENG, V48, P1115, DOI 10.1109/TSE.2020.3013438
   Sun Z, 2019, P 2019 2 INT C DAT S, P1
   Tan SH, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P187, DOI 10.1145/3180155.3180243
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Thitichaimongkhol K., 2016, Proc World Congress Eng Comput Sci, V1, P19
   Thong Hoang, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P34, DOI 10.1109/MSR.2019.00016
   Trautsch A, 2020, PROC IEEE INT CONF S, P127, DOI 10.1109/ICSME46990.2020.00022
   Vang J, 2019, Data science topics. one-off coder
   Wan ZY, 2021, IEEE T SOFTWARE ENG, V47, P1857, DOI 10.1109/TSE.2019.2937083
   Wang Q, 2014, ABSTR APPL ANAL, DOI 10.1155/2014/972786
   Wen M, 2016, IEEE INT CONF AUTOM, P262, DOI 10.1145/2970276.2970359
   Williams C., 2008, P 2008 WORKSHOP DEFE, P32
   Wimalasooriya C, 2022, J SYST SOFTWARE, V186, DOI 10.1016/j.jss.2021.111166
   Wright M., 2010, P FSE SDP WORKSH FUT, P411
   Wu R, 2011, SIGSOFT FSE, P15, DOI DOI 10.1145/2025113.2025120
   Wu RX, 2018, EMPIR SOFTW ENG, V23, P2866, DOI 10.1007/s10664-017-9567-4
   Xia H, 2020, PROC INT CONF SOFTW, P886, DOI 10.1145/3377811.3380357
   Xia X, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962606
   Xu Z, 2022, IEEE T RELIAB, V71, P204, DOI 10.1109/TR.2021.3066170
   Xu Z, 2016, PROC INT SYMP SOFTW, P309, DOI 10.1109/ISSRE.2016.13
   Xuan Lu, 2017, Proceedings of the ACM on Interactive, Mobile, Wearable and Ubiquitous Technologies, V1, DOI 10.1145/3130944
   Yang H., 2014, Proceedings of the International Conference on Software Engineering and Knowledge Engineering, P620
   Yang XL, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P17, DOI 10.1109/QRS.2015.14
   Yu TT, 2019, IEEE T SOFTWARE ENG, V45, P558, DOI 10.1109/TSE.2018.2791521
   Zein S, 2016, J SYST SOFTWARE, V117, P334, DOI 10.1016/j.jss.2016.03.065
   Zhao GL, 2019, EMPIR SOFTW ENG, V24, P2140, DOI 10.1007/s10664-019-09696-8
   Zhao K, 2022, Pre-Process Data with Pipeline to Prevent Data Leakage during Cross-Validation. Medium
   Zhao KS, 2021, 36TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, SAC 2021, P1447, DOI 10.1145/3412841.3442019
   Zhao KS, 2021, IEEE T RELIAB, V70, P848, DOI 10.1109/TR.2021.3060937
   Zheng W, 2022, J SYST SOFTWARE, V188, DOI 10.1016/j.jss.2022.111245
   Zhu A, 2021, Select Features for Machine Learning Model with Mutual Information
NR 134
TC 0
Z9 0
U1 1
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAY
PY 2024
VL 29
IS 3
AR 68
DI 10.1007/s10664-024-10455-7
PG 62
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA PS9B9
UT WOS:001216179900001
OA hybrid
DA 2024-08-05
ER

PT J
AU Ferrara, C
   Sellitto, G
   Ferrucci, F
   Palomba, F
   De Lucia, A
AF Ferrara, Carmine
   Sellitto, Giulia
   Ferrucci, Filomena
   Palomba, Fabio
   De Lucia, Andrea
TI Fairness-aware machine learning engineering: how far are we?
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software fairness; Machine learning; Empirical software engineering;
   Survey study; Practitioners' perspective
AB Machine learning is part of the daily life of people and companies worldwide. Unfortunately, bias in machine learning algorithms risks unfairly influencing the decision-making process and reiterating possible discrimination. While the interest of the software engineering community in software fairness is rapidly increasing, there is still a lack of understanding of various aspects connected to fair machine learning engineering, i.e., the software engineering process involved in developing fairness-critical machine learning systems. Questions connected to the practitioners' awareness and maturity about fairness, the skills required to deal with the matter, and the best development phase(s) where fairness should be faced more are just some examples of the knowledge gaps currently open. In this paper, we provide insights into how fairness is perceived and managed in practice, to shed light on the instruments and approaches that practitioners might employ to properly handle fairness. We conducted a survey with 117 professionals who shared their knowledge and experience highlighting the relevance of fairness in practice, and the skills and tools required to handle it. The key results of our study show that fairness is still considered a second-class quality aspect in the development of artificial intelligence systems. The building of specific methods and development environments, other than automated validation tools, might help developers to treat fairness throughout the software lifecycle and revert this trend.
C1 [Ferrara, Carmine; Sellitto, Giulia; Ferrucci, Filomena; Palomba, Fabio; De Lucia, Andrea] Univ Salerno, Software Engn SeSa Lab, Salerno, Italy.
C3 University of Salerno
RP Ferrara, C (corresponding author), Univ Salerno, Software Engn SeSa Lab, Salerno, Italy.
EM carferrara@unisa.it; gisellitto@unisa.it; fferucci@unisa.it;
   fpalomba@unisa.it; adelucia@unisa.it
OI Sellitto, Giulia/0000-0002-5491-0873; Palomba,
   Fabio/0000-0001-9337-5116; De Lucia, Andrea/0000-0002-4238-1425;
   FERRUCCI, Filomena/0000-0002-0975-8972
FU Schweizerischer Nationalfonds zur Frderung der Wissenschaftlichen
   Forschung [PZ00P2_186090]; Swiss National Science Foundation through SNF
   [2022, 2022B3BP5S, 2020W3A5FY]; Qual-AI - MUR under the PRIN
FX Fabio is partially funded by the Swiss National Science Foundation
   through SNF Projects No. PZ00P2_186090. This work has been partially
   supported by the Qual-AI and EMELIOT national research projects, which
   have been funded by the MUR under the PRIN 2022 and 2020 programs,
   respectively (Contracts 2022B3BP5S and 2020W3A5FY).
CR Aggarwal A, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P625, DOI 10.1145/3338906.3338937
   Andrews D, 2003, INT J HUM-COMPUT INT, V16, P185, DOI 10.1207/S15327590IJHC1602_04
   Angwin J., 2016, MACHINE BIAS
   Avdeyeva OA, 2013, INT J PUBLIC OPIN R, V25, P173, DOI 10.1093/ijpor/eds020
   Bantilan N, 2018, J TECHNOL HUMAN SERV, V36, P15, DOI 10.1080/15228835.2017.1416512
   Barocas S., 2017, Nips tutorial, V1
   Bellamy RKE, 2019, IBM J RES DEV, V63, DOI 10.1147/JRD.2019.2942287
   Bird S, 2019, COMPANION OF THE WORLD WIDE WEB CONFERENCE (WWW 2019 ), P1297, DOI 10.1145/3308560.3320086
   Biswas S, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P981, DOI 10.1145/3468264.3468536
   Biswas S, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P642, DOI 10.1145/3368089.3409704
   Brun Y, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P754, DOI 10.1145/3236024.3264838
   Caliskan A, 2017, SCIENCE, V356, DOI 10.1126/science.aal4230
   Calmon FP, 2017, P 31 INT C NEURAL IN, ppp3995
   Catania B, 2023, AI SOC, V38, P721, DOI 10.1007/s00146-022-01472-5
   Celis LE, 2019, FAT*'19: PROCEEDINGS OF THE 2019 CONFERENCE ON FAIRNESS, ACCOUNTABILITY, AND TRANSPARENCY, P319, DOI 10.1145/3287560.3287586
   Chakraborty J, 2019, Arxiv, DOI arXiv:1905.05786
   Chakraborty J, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P429, DOI 10.1145/3468264.3468537
   Chakraborty J, 2020, IEEE INT CONF AUTOM, P1229, DOI 10.1145/3324884.3418932
   Chakraborty J, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P654, DOI 10.1145/3368089.3409697
   Chen ZP, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P1122, DOI 10.1145/3540250.3549093
   Chouldechova A, 2020, COMMUN ACM, V63, P82, DOI 10.1145/3376898
   CHURCH AH, 1993, PUBLIC OPIN QUART, V57, P62, DOI 10.1086/269355
   Dastin J., 2018, AMAZON SCRAPS SECRET
   Ebert F, 2022, INT WORKSH RECR PART
   Fabris A, 2022, DATA MIN KNOWL DISC, V36, P2074, DOI 10.1007/s10618-022-00854-z
   Ferrara C, 2022, Fairness in machine learning systems: How far are we?, DOI [10.6084/m9.figshare.21680519, DOI 10.6084/M9.FIGSHARE.21680519]
   Finkelstein A, 2008, INT REQUIR ENG CONF, P115, DOI 10.1109/RE.2008.61
   Friedler SA, 2019, FAT*'19: PROCEEDINGS OF THE 2019 CONFERENCE ON FAIRNESS, ACCOUNTABILITY, AND TRANSPARENCY, P329, DOI 10.1145/3287560.3287589
   Galhotra S, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P498, DOI 10.1145/3106237.3106277
   Garousi V., 2017, P 21 INT C EV ASS SO, P65
   Giovanola B, 2023, AI SOC, V38, P549, DOI 10.1007/s00146-022-01455-6
   Haggarty L, 1996, MED TEACH, V18, P99, DOI 10.3109/01421599609034141
   Hall T., 2001, Empirical Software Engineering, V6, P305, DOI 10.1023/A:1011922615502
   Hapke H., 2020, Building machine learning pipelines
   Horkoff J, 2019, INT REQUIR ENG CONF, P386, DOI 10.1109/RE.2019.00050
   Hort M, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P1322, DOI 10.1109/ASE51524.2021.9678568
   Hort M, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P994, DOI 10.1145/3468264.3468565
   Johnson B, 2022, PROC IEEE ACM INT C, P70, DOI [10.1145/3510454.3516830, 10.1109/ICSE-Companion55297.2022.9793775]
   Kitchenham B., 2002, Software Engineering Notes, V27, P20, DOI 10.1145/638574.638580
   Kolltveit AB, 2022, 2022 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR RESPONSIBLE ARTIFICIAL INTELLIGENCE (SE4RAI 2022), P1, DOI 10.1145/3526073.3527584
   Kusner M, 2017, ADV NEUR IN, V30
   Li YH, 2022, PROC INT CONF SOFTW, P2215, DOI 10.1145/3510003.3510091
   Madaio Michael, 2022, Proceedings of the ACM on Human-Computer Interaction, V6, DOI 10.1145/3512899
   Mayring P., 2004, QUALITATIVE CONTENT, V1, P159, DOI [DOI 10.1177/2158244014522633, DOI 10.17169/FQS-1.2.1089]
   Mehrabi N, 2021, ACM COMPUT SURV, V54, DOI 10.1145/3457607
   Menzies T, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING WORKSHOPS (ASEW 2021), P108, DOI 10.1109/ASEW52652.2021.00031
   Miller C. C., 2015, The New York Times, P25
   Mitchell S, 2021, ANNU REV STAT APPL, V8, P141, DOI 10.1146/annurev-statistics-042720-125902
   Morin KH, 2013, J NURS EDUC, V52, P547, DOI 10.3928/01484834-20130920-10
   Moumoulidou Z, 2020, Arxiv, DOI arXiv:2010.09141
   Nemoto T., 2014, JALT 2013 conference proceedings, P1
   Obermeyer Z, 2019, SCIENCE, V366, P447, DOI 10.1126/science.aax2342
   Olson P., 2011, CNN Money
   Pagano TP, 2023, Big Data and Cognitive Computing, V7
   Palomares C, 2017, EMPIR SOFTW ENG, V22, pCP3, DOI 10.1007/s10664-016-9485-x
   Patel AR, 2022, IEEE ICST WORKSHOP, P94, DOI 10.1109/ICSTW55395.2022.00030
   Peng KW, 2023, IEEE T SOFTWARE ENG, V49, P2426, DOI 10.1109/TSE.2022.3220713
   Perera A, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10116-7
   Pessach D, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3494672
   Rafi D. M., 2012, 2012 Proceedings of 7th International Workshop on Automation of Software Test (AST 2012), P36, DOI 10.1109/IWAST.2012.6228988
   Rech Jorg, 2004, KI, V18, P5
   Reid Brittany, 2022, arXiv
   Saha D, 2020, P 37 INT C MACH LEAR
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Shrestha S, 2022, FRONT ARTIF INTELL, V5, DOI 10.3389/frai.2022.976838
   Smith MG, 2019, BMC MED RES METHODOL, V19, DOI 10.1186/s12874-019-0868-8
   Soremekun E, 2022, IEEE T SOFTWARE ENG, V48, P5188, DOI 10.1109/TSE.2022.3141758
   Studer S, 2021, MACH LEARN KNOW EXTR, V3, P392, DOI 10.3390/make3020020
   Quy TL, 2022, WIRES DATA MIN KNOWL, V12, DOI 10.1002/widm.1452
   Islam MT, 2022, Arxiv, DOI arXiv:2101.07361
   Udeshi S, 2018, IEEE INT CONF AUTOM, P98, DOI 10.1145/3238147.3238165
   Vasudevan S, 2020, CIKM '20: PROCEEDINGS OF THE 29TH ACM INTERNATIONAL CONFERENCE ON INFORMATION & KNOWLEDGE MANAGEMENT, P2773, DOI 10.1145/3340531.3412705
   Verma S, 2018, 2018 IEEE/ACM INTERNATIONAL WORKSHOP ON SOFTWARE FAIRNESS (FAIRWARE 2018), P1, DOI [10.1145/3194770.3194776, 10.23919/FAIRWARE.2018.8452913]
   Wohlin C., 2012, Experimentation in Software Engineering, DOI [10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Xivuri K, 2021, RESPONSIBLE AI ANAL, V20, ppp271
   Xu DP, 2019, IEEE INT CONF BIG DA, P1401, DOI 10.1109/BigData47090.2019.9006322
   Zhang BH, 2018, PROCEEDINGS OF THE 2018 AAAI/ACM CONFERENCE ON AI, ETHICS, AND SOCIETY (AIES'18), P335, DOI 10.1145/3278721.3278779
   Zhang JM, 2021, PROC INT CONF SOFTW, P1436, DOI 10.1109/ICSE43902.2021.00129
   Zhang MD, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P6, DOI 10.1145/3540250.3549103
   Zhou J, 2018, HUM-COMPUT INT-SPRIN, P1, DOI 10.1007/978-3-319-90403-0
   Zhou Y, 2020, 2020 INTERNATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND COMPUTER ENGINEERING (ICAICE 2020), P494, DOI 10.1109/ICAICE51518.2020.00102
NR 81
TC 1
Z9 1
U1 2
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2024
VL 29
IS 1
AR 9
DI 10.1007/s10664-023-10402-y
PG 46
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA Y4ME0
UT WOS:001105011100001
PM 38027253
OA hybrid, Green Published
DA 2024-08-05
ER

PT J
AU Soud, M
   Liebel, G
   Hamdaqa, M
AF Soud, Majd
   Liebel, Grischa
   Hamdaqa, Mohammad
TI A fly in the ointment: an empirical study on the characteristics of
   Ethereum smart contract code weaknesses
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Blockchain; Smart contracts; Ethereum; Solidity; Software security; Code
   weakness
ID CARD SORTS; BLOCKCHAIN; CHALLENGES
AB ContextSmart contracts are programs that are automatically executed on the blockchain. Code weaknesses in their implementation have led to severe loss of cryptocurrency. It is essential to understand the nature of code weaknesses in Ethereum smart contracts to prevent them in the future. Existing classifications are limited in several ways, e.g., in the breadth of data sources, and the generality of proposed categories.ObjectiveWe aim to characterize code weaknesses in Ethereum smart contracts written in Solidity, and provide an overview of existing classification schemes in relation to this characterization.MethodWe extracted code weaknesses in Ethereum smart contracts from two public coding platforms and two vulnerability databases and categorized them using an open card sorting approach. We devised a classification scheme of smart contract code weaknesses according to their error source and impact. Afterwards, we mapped existing classification schemes to our classification.ResultsThe resulting classification consists of 11 categories describing the error source of code weaknesses and 13 categories describing potential impacts. Our findings show that the language specific coding and the structural data flow categories are the dominant categories, but that the frequency of occurrence differs substantially between the data sources.ConclusionsOur findings enable researchers to better understand smart contract code weaknesses by defining various dimensions of the problem and supporting our classification with mappings with literature-based classifications and frequency distributions of the defined categories.
C1 [Soud, Majd; Liebel, Grischa; Hamdaqa, Mohammad] Reykjavik Univ, Dept Comp Sci, Reykjavik, Iceland.
   [Hamdaqa, Mohammad] Polytech Montreal, Dept Comp & Software Engn, Montreal, PQ, Canada.
C3 Reykjavik University; Universite de Montreal; Polytechnique Montreal
RP Soud, M (corresponding author), Reykjavik Univ, Dept Comp Sci, Reykjavik, Iceland.
EM majd18@ru.is; grischal@ru.is; mhamdaqa@polymtl.ca
RI ; Hamdaqa, Mohammad/AAE-5007-2020
OI Liebel, Grischa/0000-0002-3884-815X; Hamdaqa,
   Mohammad/0000-0003-4927-2755; Soud, Majd/0000-0001-7007-4433
FU Icelandic Research Fund (Rannis) [207156-051]
FX The authors would like to thank Mohammad Alsarhan, a security expert,
   for participating in the card sorting and inter-rater agreement
   discussions. This work was supported by the Icelandic Research Fund
   (Rannis) grant number 207156-051.
CR Ahasanuzzaman M, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P402, DOI 10.1145/2901739.2901770
   Alharby M, 2017, Arxiv, DOI [arXiv:1710.06372, 10.5121/csit.2017.71011]
   Alharby M, 2018, 2018 INTERNATIONAL CONFERENCE ON CLOUD COMPUTING, BIG DATA AND BLOCKCHAIN (ICCBB 2018), P96
   Khan ZA, 2020, Arxiv, DOI arXiv:2012.14481
   Atzei N, 2017, LECT NOTES COMPUT SC, V10204, P164, DOI 10.1007/978-3-662-54455-6_8
   Atzei Nicola, 2016, IACR Cryptology ePrint Archive, V2016, P1007
   Ayman A., 2020, Smart contract development from the perspective of developers: Topics and issues discussed on social media, P405
   Ayman A, 2020, Arxiv, DOI arXiv:1905.08833
   Badawi E, 2020, Cryptocurrencies emerging threats and defensive mechanisms: A systematic literature review
   Bajaj K, 2014, P 11 WORK C MIN SOFT, P112
   Bhat M, 2017, 2017 INTERNATIONAL CONFERENCE ON NEXT GENERATION COMPUTING AND INFORMATION SYSTEMS (ICNGCIS), P69, DOI 10.1109/ICNGCIS.2017.37
   Calefato F, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P430, DOI 10.1109/MSR.2015.56
   Chen CY, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962588
   Chen HS, 2020, ACM COMPUT SURV, V53, DOI 10.1145/3391195
   Chen J., 2020, IEEE Trans. Softw. Eng.
   Cosentino V, 2017, IEEE ACCESS, V5, P7173, DOI 10.1109/ACCESS.2017.2682323
   Daian P., 2016, Analysis of the dao exploit, P6
   Dingman W, 2019, INT J NETW DISTRIB C, V7, P121, DOI 10.2991/ijndc.k.190710.003
   Durieux T, 2020, PROC INT CONF SOFTW, P530, DOI 10.1145/3377811.3380364
   Ethereum, 2021, Solidity by example
   Ethereum Improvement Proposals (EIPs), 2020, EIP-1470: Smart Contract Weakness Classification (SWC)
   Hewa T, 2021, J NETW COMPUT APPL, V177, DOI 10.1016/j.jnca.2020.102857
   Huang YF, 2019, IEEE ACCESS, V7, P150184, DOI 10.1109/ACCESS.2019.2946988
   Idelberger F, 2016, LECT NOTES COMPUT SC, V9718, P167, DOI 10.1007/978-3-319-42019-6_11
   Kalra S, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23082
   Khan SN, 2021, PEER PEER NETW APPL, V14, P2901, DOI 10.1007/s12083-021-01127-0
   Khan ZA, 2020, IEEE INT CONF BIG DA, DOI 10.1109/BigData50022.2020.9439088
   Maiden N, 2009, IEEE SOFTWARE, V26, P85, DOI 10.1109/MS.2009.59
   Mavridou A, 2019, LECT NOTES COMPUT SC, V11598, P446, DOI 10.1007/978-3-030-32101-7_27
   Mehar MI, 2019, J CASES INF TECHNOL, V21, P19, DOI 10.4018/JCIT.2019010102
   Nawaz A., 2012, APCHI 12, P28
   Norvill R, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON BLOCKCHAIN AND CRYPTOCURRENCY (ICBC), P192, DOI [10.1109/bloc.2019.8751350, 10.1109/BLOC.2019.8751350]
   Perez D, 2020, Arxiv, DOI arXiv:1902.06710
   Permenev A, 2020, P IEEE S SECUR PRIV, P1661, DOI 10.1109/SP40000.2020.00024
   Philosophy G, 2019, Solidity by example
   Ponzanelli Luca, 2014, P 11 WORK C MIN SOFT, P102, DOI DOI 10.1145/2597073.2597077
   Praitheeshan P, 2020, Arxiv, DOI arXiv:1908.08605
   Ralph P, 2019, IEEE T SOFTWARE ENG, V45, P712, DOI 10.1109/TSE.2018.2796554
   Rameder H, 2021, Systematic review of ethereum smart contract security vulnerabilities, analysis methods and tools
   Rugg G, 1997, EXPERT SYST, V14, P80, DOI 10.1111/1468-0394.00045
   Sakai R, 2015, EUROVIS SHORT PAPERS, P121, DOI [10.2312/eurovisshort.20151136, DOI 10.2312/EUROVISSHORT.20151136]
   Samreen NF, 2021, Arxiv, DOI [arXiv:2105.06974, DOI 10.48550/ARXIV.2105.06974]
   Sanchez DC, 2020, Arxiv, DOI arXiv:1807.09484
   Seacord RC., 2005, A structured approach to classifying security vulnerabilities, DOI [10.21236/ADA430968, DOI 10.21236/ADA430968]
   Sillaber C, 2021, INF SYST E-BUS MANAG, V19, P863, DOI 10.1007/s10257-020-00465-5
   Soud M, 2022, Arxiv, DOI arXiv:2212.10660
   Soud Majd, 2022, Zenodo, DOI 10.5281/ZENODO.6388179
   Spencer D., 2009, CARD SORTING DESIGNI
   Usman M, 2017, INFORM SOFTWARE TECH, V85, P43, DOI 10.1016/j.infsof.2017.01.006
   Vacca A, 2021, J SYST SOFTWARE, V174, DOI 10.1016/j.jss.2020.110891
   Vegas S, 2009, IEEE T SOFTWARE ENG, V35, P551, DOI 10.1109/TSE.2009.13
   Viera AJ, 2005, FAM MED, V37, P360
   Wan ZY, 2021, PROC INT CONF SOFTW, P1410, DOI 10.1109/ICSE43902.2021.00127
   Wood JR, 2008, J USABILITY STUD, V4, P1
   Yamashita K, 2019, 2019 IEEE 2ND INTERNATIONAL WORKSHOP ON BLOCKCHAIN ORIENTED SOFTWARE ENGINEERING (IWBOSE), P1, DOI [10.1109/IWBOSE.2019.8666486, 10.1109/iwbose.2019.8666486]
   Zhang PC, 2020, PROC IEEE INT CONF S, P139, DOI 10.1109/ICSME46990.2020.00023
   Zheng ZB, 2020, FUTURE GENER COMP SY, V105, P475, DOI 10.1016/j.future.2019.12.019
NR 57
TC 2
Z9 2
U1 1
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2024
VL 29
IS 1
AR 13
DI 10.1007/s10664-023-10398-5
PG 45
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA Z2YZ2
UT WOS:001110795100001
DA 2024-08-05
ER

PT J
AU Rezaalipour, M
   Furia, CA
AF Rezaalipour, Mohammad
   Furia, Carlo A.
TI An empirical study of fault localization in Python programs
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Fault localization; Debugging; Python; Empirical study
AB Despite its massive popularity as a programming language, especially in novel domains like data science programs, there is comparatively little research about fault localization that targets Python. Even though it is plausible that several findings about programming languages like C/C++ and Java-the most common choices for fault localization research-carry over to other languages, whether the dynamic nature of Python and how the language is used in practice affect the capabilities of classic fault localization approaches remain open questions to investigate. This paper is the first multi-family large-scale empirical study of fault localization on real-world Python programs and faults. Using Zou et al.'s recent large-scale empirical study of fault localization in Java (Zou et al. 2021) as the basis of our study, we investigated the effectiveness (i.e., localization accuracy), efficiency (i.e., runtime performance), and other features (e.g., different entity granularities) of seven well-known fault-localization techniques in four families (spectrum-based, mutation-based, predicate switching, and stack-trace based) on 135 faults from 13 open-source Python projects from the BugsInPy curated collection (Widyasari et al. 2020). The results replicate for Python several results known about Java, and shed light on whether Python's peculiarities affect the capabilities of fault localization. The replication package that accompanies this paper includes detailed data about our experiments, as well as the tool FauxPy that we implemented to conduct the study.
C1 [Rezaalipour, Mohammad; Furia, Carlo A.] Univ Svizzera Italiana, Software Inst, Lugano, Switzerland.
C3 Universita della Svizzera Italiana
RP Rezaalipour, M (corresponding author), Univ Svizzera Italiana, Software Inst, Lugano, Switzerland.
EM rezaam@usi.ch
OI Rezaalipour, Mohammad/0000-0003-4522-7279
FU Schweizerische Nationalfonds
FX No Statement Available
CR Abreu R, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P89, DOI 10.1109/TAIC.PART.2007.13
   Amrhein V, 2019, NATURE, V567, P305, DOI 10.1038/d41586-019-00857-9
   Batchelder N, 2023, Coverage.py
   Bettenburg Nicolas, 2008, Proc. European Software Engineering Conference and Symposium on the Foundations of Software Engineering (ESEC/FSE), P308, DOI [10.1145/1453101.1453146, DOI 10.1145/1453101.1453146]
   Chen ZF, 2014, P INT COMP SOFTW APP, P219, DOI 10.1109/COMPSAC.2014.30
   Cleve H, 2005, PROC INT CONF SOFTW, P342
   Cosmic Ray, 2019, Cosmic Ray: mutation testing for Python
   Daniel WW, 1999, BIOSTATISTICS FDN AN, DOI DOI 10.2307/2531929
   Debroy V., 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P13, DOI 10.1109/QSIC.2010.80
   Derezinska A, 2014, ADV INTELL SYST, V286, P155, DOI 10.1007/978-3-319-07013-1_15
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Eniser HF, 2019, LECT NOTES COMPUT SC, V11424, P171, DOI 10.1007/978-3-030-16722-6_10
   Furia CA, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3490953
   Furia CA, 2021, IEEE T SOFTWARE ENG, V47, P1786, DOI 10.1109/TSE.2019.2935974
   Gazzola L, 2019, IEEE T SOFTWARE ENG, V45, P34, DOI 10.1109/TSE.2017.2755013
   Guo QY, 2020, IEEE INT CONF AUTOM, P486, DOI 10.1145/3324884.3416571
   Hammacher C, 2008, Design and implementation of an efficient dynamic slicer for Java
   Humbatova N, 2020, PROC INT CONF SOFTW, P1110, DOI 10.1145/3377811.3380395
   HUTCHINS M, 1994, PROC INT CONF SOFTW, P191, DOI 10.1109/ICSE.1994.296778
   Islam MJ, 2022, IEEE T INSTRUM MEAS, V71, DOI 10.1109/TIM.2022.3220286
   Islam MJ, 2020, PROC INT CONF SOFTW, P1135, DOI 10.1145/3377811.3380378
   Islam MJ, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P510, DOI 10.1145/3338906.3338955
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Jones J. A., 2005, ASE, P273
   Juristo N, 2012, LECT NOTES COMPUT SC, V7007, P60
   Just R., 2014, P 2014 INT S SOFTW T, P433
   Just R, 2014, ISSTA 2014, P437, DOI [10.1145/2610384.2628055, DOI 10.1145/2610384.2628055]
   Just R, 2023, Defects4J repository
   Ko AJ, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P301, DOI 10.1145/1368088.1368130
   Lam Patrick, 2011, Cetus Users and Compiler Infastructure Workshop, V15, P35
   Le T.-D. B., 2016, P 25 INT S SOFT TEST, P177
   Le TDB, 2013, PROC IEEE INT CONF S, P380, DOI 10.1109/ICSM.2013.52
   Li L, 2022, Arxiv, DOI arXiv:2202.11840
   Li X, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P169, DOI 10.1145/3293882.3330574
   Li X, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133916
   Li Y, 2021, PROC INT CONF SOFTW, P661, DOI 10.1109/ICSE43902.2021.00067
   Lou YL, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P664, DOI 10.1145/3468264.3468580
   Ma YS, 2005, SOFTW TEST VERIF REL, V15, P97, DOI 10.1002/stvr.308
   MacIver David R., 2019, Journal of Open Source Software, V4, P1891, DOI DOI 10.21105/JOSS.01891
   McConnell S., 2004, Code Complete
   Moon S, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P153, DOI 10.1109/ICST.2014.28
   Mukherjee S, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P439, DOI 10.1145/3460319.3464797
   Offutt A. J., 1996, ACM Transactions on Software Engineering and Methodology, V5, P99, DOI 10.1145/227607.227610
   Papadakis M, 2019, ADV COMPUT, V112, P275, DOI 10.1016/bs.adcom.2018.03.015
   Papadakis M, 2015, SOFTW TEST VERIF REL, V25, P605, DOI 10.1002/stvr.1509
   Parnin C., 2011, Proceedings of the 2011 International Symposium on Software Testing and Analysis ISSTA, P199
   Pearson S, 2017, PROC INT CONF SOFTW, P609, DOI 10.1109/ICSE.2017.62
   Rahman F, 2011, Proceedings of the 19th ACM SIGSOFT Symposium and the 13th European Conference on Foundations of Software Engineering, ESEC/FSE '11, P322, DOI [10.1145/2025113.2025157, DOI 10.1145/2025113]
   Renieris M, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P30, DOI 10.1109/ASE.2003.1240292
   Reps T, 1997, LECT NOTES COMPUT SC, V1301, P432, DOI 10.1145/267896.267925
   Rezaalipour M, 2023, J SYST SOFTWARE, V201, DOI 10.1016/j.jss.2023.111669
   Romano J., 2006, ANN M FLOR ASS I RES, DOI DOI 10.1017/CBO9781107415324.004
   Saha RK, 2013, IEEE INT CONF AUTOM, P345, DOI 10.1109/ASE.2013.6693093
   Salis V, 2021, PROC INT CONF SOFTW, P1646, DOI 10.1109/ICSE43902.2021.00146
   Sarhan QI, 2022, IEEE ACCESS, V10, P10618, DOI 10.1109/ACCESS.2022.3144079
   Sarhan QI, 2021, IEEE INT WORK C SO, P114, DOI 10.1109/SCAM52516.2021.00022
   Schoop Eldon, 2021, CHI '21: Proceedings of the 2021 CHI Conference on Human Factors in Computing Systems, DOI 10.1145/3411764.3445538
   Schroter Adrian, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P118, DOI 10.1109/MSR.2010.5463280
   Sobreira V, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P130, DOI 10.1109/SANER.2018.8330203
   Sohn J, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P273, DOI 10.1145/3092703.3092717
   Steimann F., 2013, P 2013 INT S SOFTW T, P314
   Szatmári A, 2022, PROCEEDINGS OF THE 13TH INTERNATIONAL WORKSHOP ON AUTOMATING TEST CASE DESIGN, SELECTION AND EVALUATION, A-TEST 2022, P33, DOI 10.1145/3548659.3561312
   Vallee-Rai R., 1999, P 1999 C CTR ADV STU, P13
   Wardat M, 2021, PROC INT CONF SOFTW, P251, DOI 10.1109/ICSE43902.2021.00034
   Wasserstein RL, 2016, AM STAT, V70, P129
   Widyasari R, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10189-4
   Widyasari R, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1556, DOI 10.1145/3368089.3417943
   Wong W. Eric, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P42
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Wong WE, 2014, IEEE T RELIAB, V63, P290, DOI 10.1109/TR.2013.2285319
   Xiangyu Zhang, 2006, 28th International Conference on Software Engineering Proceedings, P272, DOI 10.1145/1134285.1134324
   Xuan JF, 2014, PROC IEEE INT CONF S, P191, DOI 10.1109/ICSME.2014.41
   Zeller A, 2009, WHY PROGRAMS FAIL: A GUIDE TO SYSTEMATIC DEBUGGING, 2ND EDITION
   Zhang XY, 2021, PROC INT CONF SOFTW, P359, DOI 10.1109/ICSE43902.2021.00043
   Zhang YH, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P826, DOI 10.1145/3368089.3409720
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
   Zou DM, 2021, IEEE T SOFTWARE ENG, V47, P332, DOI 10.1109/TSE.2019.2892102
NR 77
TC 0
Z9 0
U1 1
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2024
VL 29
IS 4
AR 92
DI 10.1007/s10664-024-10475-3
PG 59
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UK9H4
UT WOS:001248066000003
OA hybrid
DA 2024-08-05
ER

PT J
AU Khalili, F
   Mariani, L
   Mohebbi, A
   Pezzè, M
   Terragni, V
AF Khalili, Farideh
   Mariani, Leonardo
   Mohebbi, Ali
   Pezze, Mauro
   Terragni, Valerio
TI Semantic matching in GUI test reuse
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software testing; Testing Android apps; Test reuse; Semantic matching
   for testing; Automatic test generation; Word Mover; Universal sentence
   encoder; Word2vec; Glove; Fast
AB Reusing test cases across apps that share similar functionalities reduces both the effort required to produce useful test cases and the time to offer reliable apps to the market. The main approaches to reuse test cases across apps combine different semantic matching and test generation algorithms to migrate test cases across Android apps. In this paper we define a general framework to evaluate the impact and effectiveness of different choices of semantic matching with Test Reuse approaches on migrating test cases across Android apps. We offer a thorough comparative evaluation of the many possible choices for the components of test migration processes. We propose an approach that combines the most effective choices for each component of the test migration process to obtain an effective approach. We report the results of an experimental evaluation on 8,099 GUI events from 337 test configurations. The results attest the prominent impact of semantic matching on test reuse. They indicate that sentence level perform better than word level embedding techniques. They surprisingly suggest a negligible impact of the corpus of documents used for building the word embedding model for the Semantic Matching Algorithm. They provide evidence that semantic matching of events of selected types perform better than semantic matching of events of all types. They show that the effectiveness of overall Test Reuse approach depends on the characteristics of the test suites and apps. The replication package that we make publicly available online (https://star.inf.usi.ch/#/software-data/11) allows researchers and practitioners to refine the results with additional experiments and evaluate other choices for test reuse components.
C1 [Khalili, Farideh] Northeastern Univ, Boston, MA USA.
   [Mariani, Leonardo] Univ Milano Bicocca, Milan, Italy.
   [Mohebbi, Ali; Pezze, Mauro] USI Univ Svizzera Italiana, Lugano, Switzerland.
   [Pezze, Mauro] Constructor Inst Schaffhausen, Schaffhausen, Switzerland.
   [Terragni, Valerio] Univ Auckland, Auckland, New Zealand.
C3 Northeastern University; University of Milano-Bicocca; Universita della
   Svizzera Italiana; University of Auckland
RP Pezzè, M (corresponding author), USI Univ Svizzera Italiana, Lugano, Switzerland.; Pezzè, M (corresponding author), Constructor Inst Schaffhausen, Schaffhausen, Switzerland.
EM Khalili.f@northeastern.edu; leonardo.mariani@unimib.it;
   ali.mohebbi@usi.ch; mauro.pezze@usi.ch; v.terragni@auckland.ac.nz
OI PEZZE, MAURO/0000-0001-5193-7379; Terragni, Valerio/0000-0001-5885-9297
FU Schweizerischer Nationalfonds zur Frderung der Wissenschaftlichen
   Forschung [ASTERIx, SNF 200021_178742]; Swiss SNF
FX This work was partially supported by the Swiss SNF project ASTERIx
   Automatic System TEsting of inteRactive software applIcations (SNF
   200021_178742) and the Italian National Project PRIN2017 SISMA:
   Solutions for Engineering Microservices Architectures.
CR Abbasi Ahmed, 2008, ACM Transactions on Information Systems, V26, DOI 10.1145/1361684.1361685
   Alégroth E, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P439, DOI 10.1109/ICST.2013.61
   Amalfitano D, 2012, IEEE INT CONF AUTOM, P258, DOI 10.1145/2351676.2351717
   Anand S, 2012, P ACM SIGSOFT INT S, P1
   [Anonymous], 1966, Tech Rep 8
   AppBrain, 2023, Google play store: Number of apps 2023
   Arisoy E., 2012, P NAACL HLT 2012 WOR, P20
   Baroni M, 2014, PROCEEDINGS OF THE 52ND ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P238
   Barr ET, 2015, IEEE T SOFTWARE ENG, V41, P507, DOI 10.1109/TSE.2014.2372785
   Becce G, 2012, LECT NOTES COMPUT SC, V7212, P347, DOI 10.1007/978-3-642-28872-2_24
   Behrang F, 2020, PROC INT CONF SOFTW, P17, DOI 10.1145/3377812.3382149
   Behrang F, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P164, DOI 10.1145/3213846.3213854
   Behrang F, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P54, DOI 10.1109/ASE.2019.00016
   Bojanowski Piotr, 2017, T ASSOC COMPUT LING, V5, P135, DOI [10.48550/arXiv.1607.04606, DOI 10.1162/TACLA00051]
   Cer D, 2018, CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2018): PROCEEDINGS OF SYSTEM DEMONSTRATIONS, P169
   Chang TH, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P1535
   Chifor A, 2021, Swiftnotes
   Cohen J., 1988, Statistical power analysis for the behavioral sciences
   Craigpark Limited, 2021, Email app for any mail
   Crick M., 1987, Uncertainty Analysis for Performance Assessments of Radioactive Waste Disposal Systems
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   Dix A., 2009, Encyclopedia of database systems
   Dong Z, 2020, PROC INT CONF SOFTW, P481, DOI 10.1145/3377811.3380402
   douzifly, 2021, Clear list
   Dyutiman Choudhary Dyutiman Choudhary, 2011, Pro-poor value chain development for high value products in mountain regions: Indian Bay Leaf
   Ebrahimi F., 2021, Trans Softw Eng Methodol (TOSEM), V31, P1
   Ermuth Markus, 2016, P INT S SOFTW TEST A, P82
   Ferreira LK, 2021, Expenses
   Gaukler F, 2021, Foss browser
   Gergonne J., 1974, HIST MATH, V1, P439, DOI [DOI 10.1016/0315-0860(74)90034-2, 10.1016/0315-0860(74)90034-2]
   Google, 2017, Monkey runner
   Grzyb A, 2021, Shopping list
   Gu TX, 2019, PROC INT CONF SOFTW, P269, DOI 10.1109/ICSE.2019.00042
   HAMBY DM, 1995, HEALTH PHYS, V68, P195, DOI 10.1097/00004032-199502000-00005
   Hu G, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P269, DOI 10.1145/3236024.3236055
   Hub TF, 2020, Token based text embedding trained on english google news 200b corpus
   Jiao Q, 2021, 2021 IEEE 5 ADV INF, ppp1697
   JPStudiosonline, 2021, Free tip calculator
   Khalili F, 2022, 2022 IEEE ACM 30 INT, ppp560
   Kildare K, 2021, Shopping list
   Kildare K, 2021, Simply do
   Kusner MJ, 2015, PR MACH LEARN RES, V37, P957
   Kvannli, 2021, Daily budget
   Leotta M, 2018, SOFTW TEST VERIF REL, V28, DOI 10.1002/stvr.1665
   Letondor B, 2021, Easybudget
   Li H., 2018, Proceedings of the ISCRAM Asian Pacific 2018 Conference (ISCRAM Asian Pacific 2018), P1
   Li YC, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1070, DOI 10.1109/ASE.2019.00104
   Lin J-W, 2019, Craftdroid implementation
   Lin JW, 2022, IEEE INT CONF SOFTW, P1, DOI 10.1109/ICST53961.2022.00011
   Lin JW, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P42, DOI 10.1109/ASE.2019.00015
   Liu TY, 2011, LEARNING TO RANK FOR INFORMATION RETRIEVAL, P1, DOI 10.1007/978-3-642-14267-3
   Machiry A, 2013, P ACM SIGSOFT INT S, ppp224
   Mail.Ru Group, 2021, Mail.ru
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Mao K., 2016, P 25 INT S SOFTW TES, P94
   Mao K, 2017, IEEE INT CONF AUTOM, P16, DOI 10.1109/ASE.2017.8115614
   [毛群 Mao Qun], 2022, [计算机应用, Journal of Computer Applications], V42, P2155
   Mariani L, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P177, DOI 10.1145/3460319.3464827
   Mariani L, 2021, 2021 IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATION OF SOFTWARE TEST (AST 2021), P70, DOI 10.1109/AST52587.2021.00016
   Mariani L, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P280, DOI 10.1145/3180155.3180162
   Memon A, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P260, DOI 10.1109/WCRE.2003.1287256
   Memon A, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P164, DOI 10.1109/ASE.2003.1240304
   Mikolov T., 2013, ADV NEURAL INFORM PR, V26, P1, DOI DOI 10.48550/ARXIV.1310.4546
   Mikolov T., 2013, Efficient estimation of word representations in vector space
   Mirzaei N, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P461, DOI 10.1109/ISSRE.2015.7381839
   Moran K, 2016, IEEE INT CONF SOFTW, P33, DOI 10.1109/ICST.2016.34
   Mozilla, 2021, Firefox focus
   Mycom BV, 2021, mymail
   OpenIntents, 2021, Oi shopping list
   Pan MX, 2022, IEEE T SOFTWARE ENG, V48, P910, DOI 10.1109/TSE.2020.3007664
   Pearson ES, 1931, J AM STAT ASSOC, V26, P128, DOI 10.2307/2277761
   Pennington J., 2014, P C EMP METH NAT LAN, P1532, DOI DOI 10.3115/V1/D14-1162
   plafu, 2021, Writeily pro
   play.google.com, 2021, Apps By Vir
   Qian J, 2020, PROC INT CONF SOFTW, P297, DOI 10.1145/3377811.3380431
   Qin X, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P284, DOI 10.1145/3293882.3330575
   rainbowshops, 2021, Rainbow
   Rau A, 2018, LECT NOTES COMPUT SC, V10845, P50, DOI 10.1007/978-3-319-91662-0_4
   Rau A, 2018, PROC IEEE ACM INT C, P370, DOI 10.1145/3183440.3195014
   Restaino A, 2021, Lightning browser
   roxrook, 2021, Pocket note
   Roy R, 2021, Minimal
   Schler J., 2006, AAAI SPRING S COMPUT, V6, P199
   Schwartz HA, 2013, PLOS ONE, V8, DOI 10.1371/journal.pone.0073791
   SECUSO Research Group, 2021, Shopping list (privacy friendly)
   SECUSO Research Group, 2021, Todo list
   Stocco A, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P503, DOI 10.1145/3236024.3236063
   Stoutner, 2021, Privacy browser
   Talebipour S, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P756, DOI 10.1109/ASE51524.2021.9678643
   TLe Apps, 2021, Simple tip calculator
   Turian J, 2010, ACL 2010: 48TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, P384
   Vansuita, 2021, Shopping list
   Wang YS, 2018, J BIOMED INFORM, V87, P12, DOI 10.1016/j.jbi.2018.09.008
   xorum, 2021, Open money tracker
   Xu TT, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P191, DOI 10.1145/3460319.3464830
   YazdaniBanafsheDaragh F, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P905, DOI 10.1109/ASE51524.2021.9678778
   Yelp Inc, 2021, Yelp
   ZaidiSoft, 2021, Tip calculator plus
   Zhao YX, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P421, DOI 10.1145/3540250.3549134
   Zhao YX, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1190, DOI 10.1145/3368089.3409708
   Zhao Y, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3488244
   Zhao Y, 2019, PROC INT CONF SOFTW, P128, DOI 10.1109/ICSE.2019.00030
NR 102
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAY
PY 2024
VL 29
IS 3
AR 70
DI 10.1007/s10664-023-10406-8
PG 58
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA PZ7O8
UT WOS:001217967300001
OA hybrid
DA 2024-08-05
ER

PT J
AU Höppner, S
   Tichy, M
AF Hoeppner, Stefan
   Tichy, Matthias
TI Traceability and reuse mechanisms, the most important properties of
   model transformation languages
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Survey; Universal structure modeling; Model transformation language;
   DSL; Model transformation; MDSE; Advantages; Disadvantages; Quantitative
   analysis
ID DOMAIN; SUCCESS
AB ContextDedicated model transformation languages are claimed to provide many benefits over the use of general purpose languages for developing model transformations. However, the actual advantages and disadvantages associated with the use of model transformation languages are poorly understood empirically. There is little knowledge and even less empirical assessment about what advantages and disadvantages hold in which cases and where they originate from. In a prior interview study, we elicited expert opinions on what advantages result from what factors surrounding model transformation languages as well as a number of moderating factors that moderate the influence.ObjectiveWe aim to quantitatively asses the interview results to confirm or reject the influences and moderation effects posed by different factors. We further intend to gain insights into how valuable different factors are to the discussion so that future studies can draw on these data for designing targeted and relevant studies.MethodWe gather data on the factors and quality attributes using an online survey. To analyse the data and examine the hypothesised influences and moderations, we use universal structure modelling based on a structural equation model. Universal structure modelling produces significance values and path coefficients for each hypothesised and modelled interdependence between factors and quality attributes that can be used to confirm or reject correlation and to weigh the strength of influence present.ResultsWe analyzed 113 responses. The results show that the MTL capabilities Tracing and Reuse Mechanisms are most important overall. Though the observed effects were generally 10 times lower than anticipated. Furthermore, we found that moderation effects need to be individually assessed for each influence on a quality attribute. The moderation effects of a single moderating variable vary significantly for each influence, with the strongest effects being 1000 times higher than the weakest.ConclusionThe empirical assessment of MTLs is a complex topic that cannot be solved by looking at a single stand-alone factor. Our results provide clear indication that evaluation should consider transformations of different sizes and use-cases that go beyond mapping one elements attributes to another. Language development on the other hand should focus on providing practical, transformation specific reuse mechanisms that allow MTLs to excel in areas such as maintainability and productivity compared to GPLs.
C1 [Hoeppner, Stefan; Tichy, Matthias] Ulm Univ, James Franck Ring 1, D-89081 Ulm, Germany.
C3 Ulm University
RP Höppner, S (corresponding author), Ulm Univ, James Franck Ring 1, D-89081 Ulm, Germany.
EM stefan.hoeppner@uni-ulm.de
OI Hoppner, Stefan/0000-0001-7028-131X
FU Universitt Ulm (1055)
FX No Statement Available
CR Anastasakis K, 2007, LECT NOTES COMPUT SC, V4735, P436
   Anjorin A, 2017, TTC 17
   [Anonymous], 2006, COMP 21 ACM SIGPLAN, DOI DOI 10.1145/1176617.1176691
   [Anonymous], 2008, Marketing ZFP
   Arendt T, 2010, LECT NOTES COMPUT SC, V6394, P121
   Baker P, 2005, LECT NOTES COMPUT SC, V3713, P476, DOI 10.1007/11557432_36
   Balogh A., 2006, Applied Computing 2006. 21st Annual ACM Symposium on Applied Computing, P1280, DOI 10.1145/1141277.1141575
   Benelallam Amine., 2015, SLE, P37, DOI [10.1145/2814251.2814258, DOI 10.1145/2814251.2814258]
   Bezivin J., 2004, UPGRADE: The European Journal for the Informatics Professional, V5
   Biermann E, 2010, Electronic communications of the EASST, V26
   Brambilla M., 2012, Synthesis Lectures on Software Engineering, DOI [DOI 10.1007/978-3-031-02549-5, 10.2200/S00441ED1V01Y201208SWE001, DOI 10.2200/S00751ED2V01Y201701SWE004]
   Brown AW, 2005, MODEL-DRIVEN SOFTWARE DEVELOPMENT, P1, DOI 10.1007/3-540-28554-7_1
   Burgueño L, 2019, J OBJECT TECHNOL, V18, DOI 10.5381/jot.2019.18.3.a7
   Chechik M, 2016, LECT NOTES COMPUT SC, V9681, P28, DOI 10.1007/978-3-319-33693-0_3
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   Evora J, 2015, NAT COMPUT, V14, P129, DOI 10.1007/s11047-014-9469-y
   Fowler M, 2011, Domain-specific languages, P597
   Fuchs C., 2009, Die Betriebswirtschaft, V69, P195
   George Lars, 2012, Theory and Practice of Model Transformations. Proceedings 5th International Conference, ICMT 2012, P160, DOI 10.1007/978-3-642-30476-7_11
   Gerpheide CM, 2016, SOFTWARE QUAL J, V24, P797, DOI 10.1007/s11219-015-9280-8
   Götz S, 2021, SOFTW SYST MODEL, V20, P469, DOI 10.1007/s10270-020-00815-4
   Gotz S, 2020, J Object Technol, V19, P12
   Graziotin D, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3469888
   Groner R, 2021, J Object Technol 20.2. OPEN REGULAR ISSUE, V2, P1, DOI [10.5381/jot.2021.20.2.a5, DOI 10.5381/JOT.2021.20.2.A5]
   Hebig R, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P445, DOI 10.1145/3236024.3236046
   Hermans F, 2009, LECT NOTES COMPUT SC, V5795, P423, DOI 10.1007/978-3-642-04425-0_33
   Hinkel G., 2016, NMF: A Modeling Framework for the
   Hinkel G, 2019, SOFTW SYST MODEL, V18, P249, DOI 10.1007/s10270-017-0617-6
   Höppner S, 2022, Arxiv, DOI [arXiv:2209.06570, 10.48550/ARXIV.2209.06570, DOI 10.48550/ARXIV.2209.06570]
   Höppner S, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10194-7
   Höppner S, 2022, SOFTW SYST MODEL, V21, P805, DOI 10.1007/s10270-021-00937-3
   Hoppner S, 2023, The impact of model transformation language capabilities on the perception of language quality properties: survey overview, DOI [10.18725/OPARU-50274, DOI 10.18725/OPARU-50274]
   Horn Tassilo, 2013, Theory and Practice of Model Transformations. 6th International Conference, ICMT 2013. Proceedings: LNCS 7909, P56, DOI 10.1007/978-3-642-38883-5_7
   Hutchinson J, 2014, SCI COMPUT PROGRAM, V89, P144, DOI 10.1016/j.scico.2013.03.017
   Hutchinson J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P633, DOI 10.1145/1985793.1985882
   Hutchinson J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P471, DOI 10.1145/1985793.1985858
   Jakumeit' E, 2014, SCI COMPUT PROGRAM, V85, P41, DOI 10.1016/j.scico.2013.10.009
   Johannes J, 2009, LECT NOTES COMPUT SC, V5795, P546, DOI 10.1007/978-3-642-04425-0_41
   Kahani N, 2019, SOFTW SYST MODEL, V18, P2361, DOI 10.1007/s10270-018-0665-6
   Kernighan BW., 1983, UNIX PROGRAMMING ENV
   Ko JW, 2015, MULTIMED TOOLS APPL, V74, P8907, DOI 10.1007/s11042-013-1581-y
   Kolovos DS, 2008, LECT NOTES COMPUT SC, V5063, P46, DOI 10.1007/978-3-540-69927-9_4
   Kramer ME, 2016, CEUR WORKSHOP P CEUR, V1805, P11
   Kuckartz U., 2014, QUALITATIVE TEXT ANA, DOI DOI 10.4135/9781446288719
   Kusel A, 2015, SOFTW SYST MODEL, V14, P537, DOI 10.1007/s10270-013-0343-7
   Lano K, 2015, FORM ASP COMPUT, V27, P193, DOI 10.1007/s00165-014-0313-z
   Liebel G, 2018, SOFTW SYST MODEL, V17, P91, DOI 10.1007/s10270-016-0523-3
   Mens T, 2006, ELECTRON NOTES THEOR, V152, P125, DOI 10.1016/j.entcs.2005.10.021
   Metzger A, 2005, MODEL-DRIVEN SOFTWARE DEVELOPMENT, P19
   Mohagheghi P, 2008, Model Driven Architecture-Foundations and Applications, P342
   Mohagheghi P, 2013, SOFTW SYST MODEL, V12, P619, DOI 10.1007/s10270-011-0219-7
   Mohagheghi P, 2013, EMPIR SOFTW ENG, V18, P89, DOI 10.1007/s10664-012-9196-x
   Mooney C., 1993, Bootstrapping: A nonparametric approach to statistical inference, V95
   OMG, 2014, Object Constraint Language-OCL v 2.4
   OMG, 2016, Meta Object Facility (MOF) 2.0 Query/View/Transformation Specification, Version 1.3
   OMG, 2002, Meta Object Facility (MOF) Specification, Version 1.4
   Raggett D., 1999, W3C RECOMMENDATION
   SAEMobilus, 2004, Architecture Analysis and Design Language (AADL)
   Sánchez Cuadrado J, 2006, LECT NOTES COMPUT SC, V4066, P158
   Cuadrado JS, 2022, IEEE T SOFTWARE ENG, V48, P1097, DOI 10.1109/TSE.2020.3011388
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Selic B, 2003, IEEE SOFTWARE, V20, P19, DOI 10.1109/MS.2003.1231146
   Sendall S, 2003, IEEE SOFTWARE, V20, P42, DOI 10.1109/MS.2003.1231150
   Sprinkle J, 2009, IEEE SOFTWARE, V26, P15, DOI 10.1109/MS.2009.92
   Stachowiak H., 1973, Allgemeine Modelltheorie
   Staron M, 2006, Model driven engineering languages and systems, DOI DOI 10.1007/11880240_5
   Steinberg D., 2008, EMF: Eclipse Modeling Framework
   Struber D, 2016, HUFAMO MODELS, P27
   Tehrani SY, 2016, LECT NOTES COMPUT SC, V9765, P123, DOI 10.1007/978-3-319-42064-6_9
   van Deursen A., 2002, Journal of Computing and Information Technology - CIT, V10, P1, DOI 10.2498/cit.2002.01.01
   Weiber R, 2021, Strukturgleichungsmodellierung: Eine anwendungsorientierte Einfuhrung in die Kausalanalyse mit Hilfe von AMOS, SmartPLS und SPSS, V3rd, DOI DOI 10.1007/978-3-658-32660-9
   Whittle J, 2013, LECT NOTES COMPUT SC, V8107, P1, DOI 10.1007/978-3-642-41533-3_1
   Wilke CO, 2020, COWPLOT STREAMLINED
NR 73
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2024
VL 29
IS 2
AR 52
DI 10.1007/s10664-023-10428-2
PG 55
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IU8S2
UT WOS:001168947900001
OA hybrid
DA 2024-08-05
ER

PT J
AU Babur, Ö
   Constantinou, E
   Serebrenik, A
AF Babur, Onder
   Constantinou, Eleni
   Serebrenik, Alexander
TI Language usage analysis for EMF metamodels on GitHub
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Model-driven engineering; Metamodeling; EMF; Mining software
   repositories; Model analytics; Software linguistics
AB ContextEMF metamodels lie at the heart of model-based approaches for a variety of tasks, notably for defining the abstract syntax of modeling languages. The language design of EMF metamodels itself is part of a design process, where the needs of its specific range of users should be satisfied. Studying how people actually use the language in the wild would enable empirical feedback for improving the design of the EMF metamodeling language.ObjectiveOur goal is to study the language usage of EMF metamodels in public engineered projects on GitHub. We aim to reveal information about the usage of specific language constructs, whether they match the language design. Based on our findings, we plan to suggest improvements in the EMF metamodelling language.MethodWe adopt a sample study research strategy and collect data from the EMF metamodels on GitHub. After a series of preprocessing steps including filtering out non-engineered projects and deduplication, we employ an analytics workflow on top of a graph database to formulate generalizing statements about the artifacts under study. Based on the results, we also give actionable suggestions for the EMF metamodeling language design.ResultsWe have conducted various analyses on metaclass, attribute, feature/relationship usage as well as specific parts of the language: annotations and generics. Our findings reveal that the most used metaclasses are not the main building blocks of the language, but rather auxiliary ones. Some of the metaclasses, metaclass features and relations are almost never used. There are a few attributes which are almost exclusively used with a single value or illegal values. Some of the language features such as special forms of generics are very rarely used. Based on our findings, we provide suggestions to improve the EMF language, e.g. removing a language element, restricting its values or refining the metaclass hierarchy.ConclusionsIn this paper, we present an extensive empirical study into the language usage of EMF metamodels on GitHub. We believe this study fills a gap in the literature of model analytics and will hopefully help future improvement of the EMF metamodeling language.
C1 [Babur, Onder] Wageningen Univ & Res, Informat Technol Grp, Wageningen, Netherlands.
   [Babur, Onder; Constantinou, Eleni; Serebrenik, Alexander] Eindhoven Univ Technol, Dept Math & Comp Sci, Eindhoven, Netherlands.
   [Constantinou, Eleni] Univ Cyprus, Dept Comp Sci, Nicosia, Cyprus.
C3 Wageningen University & Research; Eindhoven University of Technology;
   University of Cyprus
RP Babur, Ö (corresponding author), Wageningen Univ & Res, Informat Technol Grp, Wageningen, Netherlands.; Babur, Ö (corresponding author), Eindhoven Univ Technol, Dept Math & Comp Sci, Eindhoven, Netherlands.
EM onder.babur@wur.nl; constantinou.a.eleni@ucy.ac.cy; a.serebrenik@tue.nl
OI Constantinou, Eleni/0000-0002-4242-2581; Babur,
   Onder/0000-0002-1460-2825
CR Allamams M, 2019, PROCEEDINGS OF THE 2019 ACM SIGPLAN INTERNATIONAL SYMPOSIUM ON NEW IDEAS, NEW PARADIGMS, AND REFLECTIONS ON PROGRAMMING AND SOFTWARE (ONWARD!' 19), P143, DOI 10.1145/3359591.3359735
   Andova Suzana, 2012, Formal Methods for Model-Driven Engineering. 12th International School of Formal Methods for the Design of Computer, Communication and Software Systems (SFM 2012). Advanced Lectures, P21, DOI 10.1007/978-3-642-30982-3_2
   Babur O, 2019, Model analytics and management
   Babur O, 2022, SCI COMPUT PROGRAM, V223, DOI 10.1016/j.scico.2022.102877
   Babur Ö, 2019, J COMPUT LANG, V51, P57, DOI 10.1016/j.cola.2018.12.002
   Babur Ö, 2018, LECT NOTES COMPUT SC, V10748, P129, DOI 10.1007/978-3-319-74730-9_10
   Babur Ö, 2017, LECT NOTES COMPUT SC, V10139, P510, DOI 10.1007/978-3-319-51963-0_40
   Babur Ö, 2016, LECT NOTES COMPUT SC, V9764, P3, DOI 10.1007/978-3-319-42061-5_1
   Baltes S, 2021, Arxiv, DOI [arXiv:2002.07764, DOI 10.48550/ARXIV.2002.07764]
   Basciani F, 2016, LECT NOTES COMPUT SC, V9694, P342, DOI 10.1007/978-3-319-39696-5_21
   Biber D., 1998, CORPUS LINGUISTICS I
   Bird C, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P1, DOI 10.1109/MSR.2009.5069475
   Brambilla M., 2012, Synthesis Lectures on Software Engineering, DOI [DOI 10.1007/978-3-031-02549-5, 10.2200/S00441ED1V01Y201208SWE001, DOI 10.2200/S00751ED2V01Y201701SWE004]
   Broy M., 2012, Emerging Technologies for the Evolution and Maintenance of Software Models, P343
   Cadavid JJ, 2015, COMPUT LANG SYST STR, V41, P42, DOI 10.1016/j.cl.2015.02.002
   Izquierdo JLC, 2017, 2017 ACM/IEEE 20TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2017), P292, DOI 10.1109/MODELS.2017.19
   Clark T, 2015, LECT NOTES COMPUT SC, V9400, P7, DOI 10.1007/978-3-319-26172-0_2
   Combemale B, 2016, Engineering modeling languages: Turning domain knowledge into tools
   Concas G, 2007, IEEE T SOFTWARE ENG, V33, P687, DOI [10.1109/TSE.2007.1019, 10.1109/TSE.2007.1016]
   Cosentino V, 2017, IEEE ACCESS, V5, P7173, DOI 10.1109/ACCESS.2017.2682323
   Cosentino V, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P137, DOI [10.1109/MSR.2016.023, 10.1145/2901739.2901776]
   deF, 2016, P 31 ANN ACM S APPL, P1472, DOI DOI 10.1145/2851613.2851786
   deMello RM, 2015, 2015 ACM IEEE INT S, P1
   Di Rocco J, 2020, SOFTW SYST MODEL, V19, P401, DOI 10.1007/s10270-019-00748-7
   Di Rocco Juri., 2014, MiSE at ICSE, P55, DOI DOI 10.1145/2593770.2593774
   Erdweg S, 2013, LECT NOTES COMPUT SC, V8225, P197, DOI 10.1007/978-3-319-02654-1_11
   Pagan JE, 2011, LECT NOTES COMPUT SC, V6981, P77, DOI 10.1007/978-3-642-24485-8_7
   Favre JM, 2011, LECT NOTES COMPUT SC, V6563, P316, DOI 10.1007/978-3-642-19440-5_21
   Gabriel P., 2011, P 13 C IB SOFTW ENG, P149, DOI [10.48550/ARXIV.1109.6794, DOI 10.48550/ARXIV.1109.6794]
   Gharehyazie M, 2019, EMPIR SOFTW ENG, V24, P1538, DOI 10.1007/s10664-018-9648-z
   Gousios Georgios, 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P12, DOI 10.1109/MSR.2012.6224294
   Grechanik M., 2010, Proceedings of the 2010 ACM-IEEE International Symposium on Empirical Software Engineering and Measurement, p11:1
   Härtel J, 2018, LECT NOTES COMPUT SC, V10890, P216, DOI 10.1007/978-3-319-92997-2_14
   Hebig R, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P173, DOI 10.1145/2976767.2976778
   Heinz M, 2020, J OBJECT TECHNOL, V19, DOI 10.5381/jot.2020.19.2.a8
   Heinze Thomas S., 2020, Enterprise, Business-Process and Information Systems Modeling. 21st International Conference, BPMDS 2020, 25th International Conference, EMMSAD 2020. Held at CAiSE 2020. Proceedings. Lecture Notes in Business Information Processing (LNBIP 387), P193, DOI 10.1007/978-3-030-49418-6_13
   López JAH, 2022, SOFTW SYST MODEL, V21, P967, DOI 10.1007/s10270-021-00929-3
   Herrmannsdoerfer M, 2011, LECT NOTES COMPUT SC, V6563, P62, DOI 10.1007/978-3-642-19440-5_5
   Hutchinson J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P471, DOI 10.1145/1985793.1985858
   Information technology-Meta Object Facility (MOF), 2005, Standard
   Jácome S, 2018, IEEE ACCESS, V6, P19923, DOI 10.1109/ACCESS.2018.2821111
   Kalliamvakou E, 2016, EMPIR SOFTW ENG, V21, P2035, DOI 10.1007/s10664-015-9393-5
   Kogel S, 2018, A dataset of EMF models from eclipse projects
   Kolovos D S., 2013, Proceedings of the Workshop on Scalability in Model Driven Engineering. BigMDE'13, V2, P1
   Kolovos DS, 2015, OSS4MDE MODELS, P20
   KUHN S, 1993, COMMUN ACM, V36, P24
   Lämmel R, 2013, EMPIR SOFTW ENG, V18, P310, DOI 10.1007/s10664-012-9204-1
   Lopes CV, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133908
   Manning CD., 2008, Introduction to Information Retrieval, DOI [DOI 10.1017/CBO9780511809071, 10.1017/CBO9780511809071]
   Melton H, 2007, EMPIR SOFTW ENG, V12, P389, DOI 10.1007/s10664-006-9033-1
   Mengerink J, 2017, ACM IEEE 20 INT C MO, P472
   Mengerink JGM., 2017, IWSM MENSURA, P116, DOI [10.1145/3143434.3143442, DOI 10.1145/3143434.3143442]
   Mengerink JGM, 2019, EMPIR SOFTW ENG, V24, P1574, DOI 10.1007/s10664-018-9641-6
   Mohagheghi P, 2008, LECT NOTES COMPUT SC, V5095, P432, DOI 10.1007/978-3-540-69100-6_31
   Mohamed MA, 2020, J COMPUT LANG, V59, DOI 10.1016/j.cola.2020.100972
   Munaiah N, 2017, EMPIR SOFTW ENG, V22, P3219, DOI 10.1007/s10664-017-9512-6
   Nagappan M., 2013, 2013 9 JOINT M EUR S, P466, DOI [10.1145/2491411.2491415, DOI 10.1145/2491411.2491415]
   Noten J, 2017, IEEE WORK CONF MIN S, P531, DOI 10.1109/MSR.2017.52
   Paige RF, 2000, INFORM SOFTWARE TECH, V42, P665, DOI 10.1016/S0950-5849(00)00109-9
   Pickerill P, 2020, PHANTOM: Curating GitHub for engineered software projects using time-series clustering
   Pietri Antoine, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P138, DOI 10.1109/MSR.2019.00030
   Qiu D, 2017, J SYST SOFTWARE, V123, P160, DOI 10.1016/j.jss.2016.10.017
   Ray B, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P155, DOI 10.1145/2635868.2635922
   Ruta D., 2005, Information Fusion, V6, P63, DOI 10.1016/j.inffus.2004.04.008
   Spinellis D, 2020, Arxiv, DOI arXiv:2002.02314
   Steinberg D., 2008, EMF: Eclipse Modeling Framework
   Stol KJ, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3241743
   Tairas R, 2015, SOFTW SYST MODEL, V14, P889, DOI 10.1007/s10270-013-0352-6
   Tekinerdogan B, 2020, MODEL MANAGEMENT AND ANALYTICS FOR LARGE SCALE SYSTEMS, P3, DOI 10.1016/B978-0-12-816649-9.00009-0
   Ho-Quang T, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P203, DOI 10.1109/ICSE-SEIP.2017.28
   Wieringa R. J., 2014, Design Science Methodology for Information Systems and Software Engineering, DOI DOI 10.1007/978-3-662-43839-8
   Williams JR, 2013, Eessmod@ Models, V1078, P55
   Wohlin C., 2012, Experimentation in Software Engineering, DOI [10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
NR 73
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2024
VL 29
IS 1
AR 23
DI 10.1007/s10664-023-10368-x
PG 54
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CG4D2
UT WOS:001124077200002
OA hybrid
DA 2024-08-05
ER

PT J
AU Bajaj, R
   Fernandes, E
   Adams, B
   Hassan, AE
AF Bajaj, Rahul
   Fernandes, Eduardo
   Adams, Bram
   Hassan, Ahmed E.
TI Unreproducible builds: time to fix, causes, and correlation with
   external ecosystem factors
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Reproducible build; Supply chain attack; Build environment; Software
   package; Release management; Software security
AB ContextA reproducible build occurs if, given the same source code, build instructions, and build environment (i.e., installed build dependencies), compiling a software project repeatedly generates the same build artifacts. Reproducible builds are essential to identify tampering attempts responsible for supply chain attacks, with most of the research on reproducible builds considering build reproducibility as a project-specific issue. In contrast, modern software projects are part of a larger ecosystem and depend on dozens of other projects, which begs the question of to what extent build reproducibility of a project is the responsibility of that project or perhaps something forced on it.ObjectiveThis empirical study aims at analyzing reproducible and unreproducible builds in Linux Distributions to systematically investigate the process of making builds reproducible in open-source distributions. Our study targets build performed on 11,528 and 597,066 Arch Linux and Debian packages, respectively.MethodWe compute the likelihood of unreproducible packages becoming reproducible (and vice versa) and identify the root causes behind unreproducible builds. Finally, we compute the correlation between the reproducibility status of packages and three ecosystem factors (i.e., factors outside the control of a given package).ResultsArch Linux packages become reproducible a median of 30 days quicker when compared to Debian packages, while Debian packages remain reproducible for a median of 68 days longer once fixed. We identified a taxonomy of 16 root causes of unreproducible builds and found that the build reproducibility status of a package across different hardware architectures is statistically significantly different (strong effect size). At the same time, the status also differs between versions of a package for different distributions and depends on the build reproducibility of a package's build dependencies, albeit with weaker effect sizes.ConclusionsThe ecosystem a project belongs to, plays an important role w.r.t. the project's build reproducibility. Since these are outside a developer's control, future work on (fixing) unreproducible builds should consider these ecosystem influences.
C1 [Bajaj, Rahul; Fernandes, Eduardo; Adams, Bram; Hassan, Ahmed E.] Queens Univ, Sch Comp, Kingston, ON, Canada.
C3 Queens University - Canada
RP Bajaj, R (corresponding author), Queens Univ, Sch Comp, Kingston, ON, Canada.
EM r.bajaj@queensu.ca; edmf@mmmi.sdu.dk; bram.adams@queensu.ca;
   hassan@queensu.ca
RI Fernandes, Eduardo/F-8555-2017
OI Fernandes, Eduardo/0000-0002-1222-2247
FU NSERC
FX No Statement Available
CR Abdalkareem R, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P385, DOI 10.1145/3106237.3106267
   Adams B, 2016, EMPIR SOFTW ENG, V21, P960, DOI 10.1007/s10664-015-9371-y
   Allison PD, 2010, Survival analysis using SAS. A practical guide, VSecond
   BROOKS FP, 1974, DATAMATION, V20, P44
   Butler S, 2023, SOFTWARE QUAL J, V31, P687, DOI 10.1007/s11219-022-09607-z
   Chowdhury M.A. R., 2021, IEEE Transactions on Software Engineering
   Claes M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P212, DOI 10.1109/MSR.2015.27
   de Carnavalet Xavierde Carne., 2014, Proceedings of the 30th Annual Computer Security Applications Conference, P16, DOI DOI 10.1145/2664243.2664288
   Decan A, 2018, IEEE WORK CONF MIN S, P181, DOI 10.1145/3196398.3196401
   Decan A, 2016, ACM PROCEEDINGS OF THE 10TH EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE WORKSHOPS (ECSA-W), DOI 10.1145/2993412.3003382
   Vu DL, 2020, CCS '20: PROCEEDINGS OF THE 2020 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2093, DOI 10.1145/3372297.3420015
   Easterbrook S., 2008, Guide to Advanced Empirical Software Eng, P285, DOI [10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-5_11]
   Fried L., 1991, Journal of Information Systems Management, V8, P27, DOI 10.1080/07399019108964994
   Goeminne M, 2015, PROC IEEE INT CONF S, P551, DOI 10.1109/ICSM.2015.7332512
   Goswami P, 2020, PROC IEEE INT CONF S, P677, DOI 10.1109/ICSME46990.2020.00071
   KAPLAN EL, 1958, J AM STAT ASSOC, V53, P457, DOI 10.2307/2281868
   Koen R, 2008, ISSA, P1
   Lamb C, 2022, IEEE SOFTWARE, V39, P62, DOI 10.1109/MS.2021.3073045
   Maes-Bermejo M, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10117-6
   Mancinelli F, 2006, IEEE INT CONF AUTOM, P199
   Mäntylä MV, 2015, EMPIR SOFTW ENG, V20, P1384, DOI 10.1007/s10664-014-9338-4
   Mao A, 2016, PLOS ONE, V11, DOI 10.1371/journal.pone.0153048
   Massacci F, 2021, IEEE SECUR PRIV, V19, P14, DOI 10.1109/MSEC.2021.3050433
   Maste E, 2017, P 11 ASIAN C BSD BAS, P1
   McHugh ML, 2012, BIOCHEM MEDICA, V22, P276, DOI 10.11613/bm.2012.031
   McIntosh S, 2014, PROC IEEE INT CONF S, P241, DOI 10.1109/ICSME.2014.46
   Michlmayr M, 2007, INT FED INFO PROC, V234, P295
   Miller P, 1998, AUUGN Journal of AUUG Inc, V19, P14
   Mirhosseini S, 2017, IEEE INT CONF AUTOM, P84, DOI 10.1109/ASE.2017.8115621
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Nussbaum Lucas, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P52, DOI 10.1109/MSR.2010.5463277
   Ohm Marc, 2020, ARES 2020: Proceedings of the 15th International Conference on Availability, Reliability and Security, DOI 10.1145/3407023.3409183
   Ohm Marc, 2020, Detection of Intrusions and Malware, and Vulnerability Assessment. 17th International Conference, DIMVA 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12223), P23, DOI 10.1007/978-3-030-52683-2_2
   PLACKETT RL, 1983, INT STAT REV, V51, P59, DOI 10.2307/1402731
   Raymond E., 1999, Knowledge, Technology Policy, V12, P23, DOI [10.1007/s12130-999-1026-0, DOI 10.1007/S12130-999-1026-0]
   Rea L.M., 2014, Designing and Conducting Survey Research: A Comprehensive Guide
   Ren ZL, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P71, DOI 10.1145/3180155.3180224
   Samoladas I, 2010, INFORM SOFTWARE TECH, V52, P902, DOI 10.1016/j.infsof.2010.05.001
   Shi Y, 2022, IEEE T SOFTWARE ENG, V48, P3361, DOI 10.1109/TSE.2021.3092692
   THOMPSON K, 1984, COMMUN ACM, V27, P761, DOI 10.1145/358198.358210
   Wang ZH, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P516, DOI 10.1145/3468264.3468613
   Wheeler DA, 2005, 21ST ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE, PROCEEDINGS, P28
   Yan DP, 2021, IEEE INT C S Q R S, P493, DOI 10.1109/QRS54544.2021.00060
   Zerouali A, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P589, DOI [10.1109/saner.2019.8667997, 10.1109/SANER.2019.8667997]
   Zerouali A, 2018, LECT NOTES COMPUT SC, V10826, P95, DOI 10.1007/978-3-319-90421-4_6
NR 45
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2024
VL 29
IS 1
AR 11
DI 10.1007/s10664-023-10399-4
PG 48
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AJ6Q3
UT WOS:001118142500001
DA 2024-08-05
ER

PT J
AU Guizzo, G
   Zhang, JM
   Sarro, F
   Treude, C
   Harman, M
AF Guizzo, Giovani
   Zhang, Jie M.
   Sarro, Federica
   Treude, Christoph
   Harman, Mark
TI Mutation analysis for evaluating code translation
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Mutation testing; Source to source translation; Code translation
AB Source-to-source code translation automatically translates a program from one programming language to another. The existing research on code translation evaluates the effectiveness of their approaches by using either syntactic similarities (e.g., BLEU score), or test execution results. The former does not consider semantics, the latter considers semantics but falls short on the problem of insufficient data and tests. In this paper, we propose MBTA (Mutation-based Code Translation Analysis), a novel application of mutation analysis for code translation assessment. We also introduce MTS (Mutation-based Translation Score), a measure to compute the level of trustworthiness of a translator. If a mutant of an input program shows different test execution results from its translated version, the mutant is killed and a translation bug is revealed. Fewer killed mutants indicate better code translation. MBTA is novel in the sense that mutants are compared to their translated counterparts, and not to their original program's translation. We conduct a proof-of-concept case study with 612 Java-Python program pairs and 75,082 mutants on the code translators TransCoder and j2py to evaluate the feasibility of MBTA. The results reveal that TransCoder and j2py fail to translate 70.44% and 70.64% of the mutants, respectively, i.e., more than two-thirds of all mutants are incorrectly translated by these translators. By analysing the MTS results more closely, we were able to reveal translation bugs not captured by the conventional comparison between the original and translated programs.
C1 [Guizzo, Giovani; Sarro, Federica; Harman, Mark] UCL, London, England.
   [Zhang, Jie M.] Kings Coll London, London, England.
   [Treude, Christoph] Univ Melbourne, Melbourne, Australia.
   [Harman, Mark] Meta Platforms Inc, Menlo Pk, CA USA.
C3 University of London; University College London; University of London;
   King's College London; University of Melbourne
RP Guizzo, G; Sarro, F (corresponding author), UCL, London, England.
EM giovaniguizzo@gmail.com; jie.zhang@kcl.ac.uk; f.sarro@ucl.ac.uk;
   christoph.treude@unimelb.edu.au; m.harman@ucl.ac.uk
RI Treude, Christoph/AAZ-6257-2021
OI Guizzo, Giovani/0000-0001-5361-2973; Treude,
   Christoph/0000-0002-6919-2149
FU European Research Council
FX No Statement Available
CR Aggarwal Karan, 2015, PeerJ Prepr., V3
   Barr ET, 2015, IEEE T SOFTWARE ENG, V41, P507, DOI 10.1109/TSE.2014.2372785
   Chen QY, 2018, IEEE INT CONF AUTOM, P826, DOI 10.1145/3238147.3240471
   Chen TY, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3143561
   Chen XY, 2018, Arxiv, DOI arXiv:1802.03691
   Guizzo G., 2020, IEEE Transactions on Software Engineering
   Hort M, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P994, DOI 10.1145/3468264.3468565
   Hu X, 2018, INT C PROGRAM COMPRE, P200, DOI 10.1145/3196321.3196334
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Karaivanov Svetoslav, 2014, P 2014 ACM INT S NEW, P173
   Ma YS, 2005, SOFTW TEST VERIF REL, V15, P97, DOI 10.1002/stvr.308
   Melhase T, 2022, java2python
   Nguyen A.T., 2013, P 2013 9 JOINT M FDN, P651
   Offutt AJ, 2001, KLUW INT S ADV DATA, V24, P34
   Offutt J, 2014, Mujava home page
   Papadakis M, 2019, ADV COMPUT, V112, P275, DOI 10.1016/bs.adcom.2018.03.015
   Papadakis M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P537, DOI 10.1145/3180155.3180183
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Roziere B., 2021, arXiv
   Roziere B, 2020, Adv Neural Info Process Syst, V33
   Roziere Baptiste, 2021, arXiv
   Spearman C, 1904, AM J PSYCHOL, V15, P72, DOI 10.2307/1412159
   Sun ZY, 2022, PROC INT CONF SOFTW, P1181, DOI 10.1145/3510003.3510206
   Sun ZY, 2020, PROC INT CONF SOFTW, P974, DOI 10.1145/3377811.3380420
   Sun ZY, 2020, AAAI CONF ARTIF INTE, V34, P8984
   Terekhov AA, 2000, IEEE SOFTWARE, V17, P111, DOI 10.1109/52.895180
   WATERS RC, 1988, IEEE T SOFTWARE ENG, V14, P1207, DOI 10.1109/32.7629
   YASUMATSU K, 1995, IEEE T SOFTWARE ENG, V21, P902, DOI 10.1109/32.473219
   Zhang J, P 29 ACM IEEE INT C, P701
   Zhang J, P 25 INT S SOFTW TES, P342
   Zhang J.M., 2020, IEEE Trans. Softw. Eng
   Zhang J, 2018, IEEE ICST WORKSHOP, P11, DOI 10.1109/ICSTW.2018.00022
   Zhang J, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P883, DOI 10.1145/2950290.2950313
   Zhang J, 2014, PROC INT SYMP SOFTW, P277, DOI 10.1109/ISSRE.2014.27
   Zhang JM, 2023, NEUROCOMPUTING, V539, DOI 10.1016/j.neucom.2023.02.042
NR 35
TC 1
Z9 1
U1 2
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2024
VL 29
IS 1
AR 19
DI 10.1007/s10664-023-10385-w
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA Z8HS7
UT WOS:001114436400001
PM 38077696
OA Green Published
DA 2024-08-05
ER

EF